================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    # Importation du module sys pour avoir accès à stdin (entrée standard).
    import sys
    # On alias la fonction readline pour lire plus rapidement les entrées ligne par ligne, équivalent à input().
    input = sys.stdin.readline

    # Lecture de la première ligne de l'entrée, qui contient deux entiers séparés par un espace.
    # map(int, input().split()) convertit chaque élément séparé par un espace en un entier.
    N, M = map(int, input().split())  # N est le nombre de sommets, M le nombre d'arêtes du graphe.

    # Création d'une liste d'adjacence standard pour chaque sommet : adjL.
    # La compréhension de liste [ [] for _ in range(N) ] crée une liste contenant N listes vides.
    adjL = [[] for _ in range(N)]  # Liste des voisins directs (arêtes sortantes) pour chaque sommet.
    adjLRev = [[] for _ in range(N)]  # Liste d'adjacence inversée : pour chaque sommet, ses prédécesseurs.
    outdegs = [0] * N  # Liste pour stocker le degré sortant (nombre d'arêtes sortantes) de chaque sommet, initialisé à 0.

    # Boucle pour lire les M arêtes du graphe.
    for _ in range(M):  # Pour chaque arête :
        # On lit deux entiers s et t (origine -> destination).
        s, t = map(int, input().split())
        # Conversion pour passer d'une indexation 1-based (commence à 1) à 0-based (commence à 0, python standard).
        s, t = s-1, t-1
        # On ajoute le sommet t comme voisin du sommet s (arête sortante de s vers t).
        adjL[s].append(t)
        # Pour la liste d'adjacence inversée, on ajoute s comme prédécesseur de t.
        adjLRev[t].append(s)
        # On incrémente le nombre d'arêtes sortantes pour le sommet s.
        outdegs[s] += 1

    # Initialisation des tableaux de probabilités et d'espérances d'arriver à chaque sommet depuis le sommet de départ (0).
    probs = [0] * N  # probs[v] contiendra la probabilité actuelle d'arriver au sommet v.
    expes = [0] * N  # expes[v] contiendra l'espérance (le nombre moyen de pas pour atteindre v depuis le départ).
    probs[0] = 1  # Au début, la probabilité d'être sur le sommet de départ (0) est de 1 (certain).

    # On parcourt les sommets dans l'ordre croissant pour propager les probabilités et espérances aux voisins.
    for v in range(N):
        prob, expe, outdeg = probs[v], expes[v], outdegs[v]  # Récupération des valeurs courantes pour ce sommet.
        if prob != 0:  # S'il y a une chance non nulle d'être arrivé à ce sommet.
            # On calcule le nombre d'étapes moyen (espérance/ probabilité) pour arriver ici.
            num = expe / prob  # On évite la division par zéro car on a déjà verifié que prob != 0.
            # On propage aux voisins (successeurs du sommet v).
            for v2 in adjL[v]:
                # On augmente la probabilité d'arriver à v2 avec la probabilité divisé par le nombre de choix possibles (outdeg).
                probs[v2] += prob / outdeg
                # On met à jour l'espérance pour v2 : elle augmente du coût de venir de v à v2 (=num+1, car un pas supplémentaire) pondéré par la probabilité associée.
                expes[v2] += prob * (num+1) / outdeg

    # Initialisation des mêmes variables mais pour le graphe inversé (pour simuler le processus en sens inverse depuis l'arrivée).
    probRevs = [0] * N  # Probabilités inverses: partant du sommet d'arrivée vers les précédents.
    expeRevs = [0] * N  # Espérances inverses: nombre d'étapes moyen pour venir de l'arrivée à chaque sommet.
    probRevs[-1] = 1  # On part du dernier sommet (N-1), probabilité d'être là = 1.
    # On parcourt les sommets en ordre décroissant (sens inverse) pour propager l'information.
    for v in reversed(range(N)):
        prob, expe = probRevs[v], expeRevs[v]  # Valeurs courantes du sommet v en sens inverse.
        if prob != 0:  # On n'actualise que si la probabilité est non nulle.
            num = expe / prob
            # Pour tous les prédécesseurs v0 de v dans le graphe original (successeurs dans le graphe inversé).
            for v0 in adjLRev[v]:
                # Actualisation de leurs probabilités/espérances, même logique que plus haut, en utilisant le degré sortant de v0 (dans le graphe normal).
                probRevs[v0] += prob / outdegs[v0]
                expeRevs[v0] += prob * (num+1) / outdegs[v0]

    # La réponse initiale est simplement l'espérance d'arriver à N-1 à partir du sommet 0.
    ans = expes[-1]

    # On explore l'optimisation éventuelle : retirer une arête sortante d'un sommet (sauf arrivee) si cela diminue l'espérance.
    for vRem in range(N-1):  # On parcourt tous les sommets sauf le dernier (l'arrivée).
        if outdegs[vRem] == 1:
            # Si le sommet n'a qu'une seule arête sortante, l'enlever le déconnecterait, donc on continue.
            continue
        values = []  # Liste pour stocker le "coût" associé à chaque arête sortante de vRem.
        prob, expe, outdeg = probs[vRem], expes[vRem], outdegs[vRem]  # On récupère les valeurs associées à vRem.
        for v2 in adjL[vRem]:  # Pour chaque voisin vers lequel vRem peut aller directement.
            # Calcul d'une valeur représentant la contribution de cette arête à l'espérance totale, en tenant compte des probabilités directes et inverses.
            value = expe*probRevs[v2] + expeRevs[v2]*prob + prob*probRevs[v2]
            values.append(value)
        sumV = sum(values)  # Somme de toutes les contributions des arêtes sortantes de vRem.
        # Calcul d'une espérance modifiée : on retire la moyenne des valeurs des arêtes sortantes.
        ans2 = expes[-1] - sumV / outdeg
        for value in values:  # Pour chaque arête potentiellement supprimée,
            # On calcule la nouvelle espérance si on enlève précisément cette arête (en recalcultant la moyenne sur outdeg-1 arêtes),
            # et on met à jour la réponse avec le minimum (on cherche l'optimisation maximale).
            ans = min(ans, ans2 + (sumV-value) / (outdeg-1))

    # Affichage de la réponse finale, c'est-à-dire la plus petite espérance trouvée.
    print(ans)

# Appel de la fonction principale qui effectue tous les calculs quand le script est exécuté.
solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16927438974380493
    2. ':' → logprob: -3.16927433013916
    3. '```' → logprob: -3.29427433013916
    4. '\n' → logprob: -3.41927433013916
    5. '\' → logprob: -3.91927433013916
    6. ' ' → logprob: -4.91927433013916
    7. '    
' → logprob: -5.66927433013916
    8. '(' → logprob: -5.91927433013916
    9. '()' → logprob: -6.16927433013916
    10. '    ' → logprob: -6.29427433013916

Token 4: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7818670868873596
    2. 'x' → logprob: -1.4068670272827148
    3. '   ' → logprob: -1.9068670272827148
    4. 'i' → logprob: -2.656867027282715
    5. '\n' → logprob: -4.156867027282715
    6. 'a' → logprob: -4.281867027282715
    7. '\' → logprob: -4.781867027282715
    8. '```' → logprob: -5.031867027282715
    9. '    
' → logprob: -5.406867027282715
    10. '    ' → logprob: -5.406867027282715

Token 5: ' Import' (ID: 19998)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7597351670265198
    2. ' ' → logprob: -1.509735107421875
    3. '   ' → logprob: -2.009735107421875
    4. 'pass' → logprob: -2.884735107421875
    5. 'n' → logprob: -3.009735107421875
    6. '    ' → logprob: -3.759735107421875
    7. ' n' → logprob: -3.884735107421875
    8. ' input' → logprob: -4.634735107421875
    9. 'input' → logprob: -5.384735107421875
    10. ' #' → logprob: -6.009735107421875

Token 6: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4048813283443451
    2. ' math' → logprob: -1.2798813581466675
    3. ' collections' → logprob: -3.529881238937378
    4. ' sys' → logprob: -4.654881477355957
    5. ' json' → logprob: -5.404881477355957
    6. ' itertools' → logprob: -5.779881477355957
    7. ' numpy' → logprob: -6.529881477355957
    8. ' pandas' → logprob: -6.654881477355957
    9. '<|end|>' → logprob: -7.279881477355957
    10. ' asyncio' → logprob: -7.404881477355957

Token 7: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5072391033172607
    2. ' import' → logprob: -1.7572391033172607
    3. 'import' → logprob: -1.8822391033172607
    4. '```' → logprob: -3.0072391033172607
    5. ' from' → logprob: -4.38223934173584
    6. ' os' → logprob: -5.88223934173584
    7. ' =' → logprob: -6.50723934173584
    8. '`' → logprob: -6.75723934173584
    9. '    ' → logprob: -6.88223934173584
    10. ' for' → logprob: -7.25723934173584

Token 8: ' module' (ID: 8827)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07351002842187881
    2. ' math' → logprob: -2.823509931564331
    3. 'sys' → logprob: -4.82351016998291
    4. 'math' → logprob: -6.19851016998291
    5. ' os' → logprob: -7.57351016998291
    6. ' re' → logprob: -8.94851016998291
    7. ' code' → logprob: -9.32351016998291
    8. 'import' → logprob: -9.44851016998291
    9. ' numpy' → logprob: -9.69851016998291
    10. ' time' → logprob: -9.82351016998291

Token 9: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.20589615404605865
    2. ' import' → logprob: -2.0808961391448975
    3. 'import' → logprob: -4.080896377563477
    4. ' math' → logprob: -4.080896377563477
    5. ' ' → logprob: -4.455896377563477
    6. ' from' → logprob: -5.580896377563477
    7. '   ' → logprob: -5.955896377563477
    8. ' numpy' → logprob: -6.080896377563477
    9. '`' → logprob: -6.205896377563477
    10. ' json' → logprob: -6.955896377563477

Token 10: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.367336630821228
    2. 'import' → logprob: -1.617336630821228
    3. '   ' → logprob: -3.2423367500305176
    4. ' import' → logprob: -3.8673367500305176
    5. '\' → logprob: -3.9923367500305176
    6. '\n' → logprob: -4.367336750030518
    7. '``' → logprob: -5.492336750030518
    8. '
' → logprob: -5.992336750030518
    9. '<|end|>' → logprob: -5.992336750030518
    10. ' ' → logprob: -6.367336750030518

Token 11: ' avoir' (ID: 16595)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.23143279552459717
    2. ' stdin' → logprob: -2.3564329147338867
    3. ' readline' → logprob: -2.6064329147338867
    4. ' récupérer' → logprob: -4.981432914733887
    5. 'import' → logprob: -5.356432914733887
    6. ' lire' → logprob: -5.481432914733887
    7. ' gérer' → logprob: -6.231432914733887
    8. ' input' → logprob: -6.231432914733887
    9. ' accéder' → logprob: -6.356432914733887
    10. '   ' → logprob: -6.356432914733887

Token 12: ' accès' (ID: 65948)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5534351468086243
    2. ' l' → logprob: -2.1784350872039795
    3. ' un' → logprob: -2.9284350872039795
    4. '_' → logprob: -2.9284350872039795
    5. ' ' → logprob: -3.0534350872039795
    6. '<|end|>' → logprob: -3.3034350872039795
    7. ' accès' → logprob: -3.6784350872039795
    8. ' access' → logprob: -4.303435325622559
    9. ' a' → logprob: -4.678435325622559
    10. ' le' → logprob: -4.803435325622559

Token 13: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6968790888786316
    2. ' au' → logprob: -1.6968791484832764
    3. ' ' → logprob: -2.1968791484832764
    4. '   ' → logprob: -2.4468791484832764
    5. '    ' → logprob: -2.6968791484832764
    6. ' aux' → logprob: -3.5718791484832764
    7. '  ' → logprob: -4.571878910064697
    8. ' a' → logprob: -4.946878910064697
    9. '```' → logprob: -6.571878910064697
    10. ' to' → logprob: -6.821878910064697

Token 14: ' stdin' (ID: 75143)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.22594770789146423
    2. ' l' → logprob: -2.350947618484497
    3. ' ' → logprob: -2.725947618484497
    4. ' stdin' → logprob: -4.100947856903076
    5. ' la' → logprob: -4.600947856903076
    6. ' argv' → logprob: -4.850947856903076
    7. 'sys' → logprob: -6.475947856903076
    8. 'stdin' → logprob: -6.600947856903076
    9. ' ' → logprob: -6.850947856903076
    10. 'l' → logprob: -7.225947856903076

Token 15: ' (' (ID: 350)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8625389933586121
    2. 'import' → logprob: -1.2375390529632568
    3. '   ' → logprob: -1.9875390529632568
    4. ' import' → logprob: -3.112539052963257
    5. '\n' → logprob: -3.862539052963257
    6. ' ' → logprob: -3.987539052963257
    7. '
' → logprob: -4.112538814544678
    8. '\' → logprob: -4.487538814544678
    9. '<|end|>' → logprob: -4.862538814544678
    10. ',' → logprob: -4.987538814544678

Token 16: 'entrée' (ID: 68707)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023132270202040672
    2. ',' → logprob: -4.39813232421875
    3. ' )' → logprob: -4.64813232421875
    4. '.' → logprob: -7.89813232421875
    5. 'import' → logprob: -8.89813232421875
    6. '.)' → logprob: -9.27313232421875
    7. '.readline' → logprob: -9.52313232421875
    8. '`)' → logprob: -9.77313232421875
    9. '):' → logprob: -10.27313232421875
    10. ' ' → logprob: -10.39813232421875

Token 17: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01163551490753889
    2. ' standard' → logprob: -5.7616353034973145
    3. ' )' → logprob: -5.8866353034973145
    4. ',' → logprob: -6.0116353034973145
    5. 'standard' → logprob: -6.1366353034973145
    6. '```' → logprob: -8.386635780334473
    7. ' et' → logprob: -8.511635780334473
    8. '_standard' → logprob: -8.761635780334473
    9. '),' → logprob: -9.136635780334473
    10. '):' → logprob: -9.761635780334473

Token 18: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032712158281356096
    2. ' )' → logprob: -8.500327110290527
    3. ',' → logprob: -10.000327110290527
    4. 'import' → logprob: -10.750327110290527
    5. '```' → logprob: -11.000327110290527
    6. '   ' → logprob: -11.500327110290527
    7. '`)' → logprob: -11.875327110290527
    8. ')
' → logprob: -12.125327110290527
    9. '')' → logprob: -12.375327110290527
    10. '):' → logprob: -13.125327110290527

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148748278617859
    2. '```' → logprob: -2.1898748874664307
    3. '    
' → logprob: -3.1898748874664307
    4. '
' → logprob: -3.1898748874664307
    5. '\n' → logprob: -3.3148748874664307
    6. '\' → logprob: -4.689874649047852
    7. ' 
' → logprob: -4.939874649047852
    8. ' ' → logprob: -5.189874649047852
    9. '<|end|>' → logprob: -5.689874649047852
    10. 'import' → logprob: -5.939874649047852

Token 20: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05600219964981079
    2. '```' → logprob: -3.931002140045166
    3. 'import' (adapté à ' import') → logprob: -4.306002140045166
    4. '    
' → logprob: -4.431002140045166
    5. '\n' → logprob: -5.431002140045166
    6. '\' → logprob: -6.181002140045166
    7. '
' → logprob: -6.431002140045166
    8. '    ' → logprob: -7.931002140045166
    9. ' import' → logprob: -8.306002616882324
    10. ' ' → logprob: -9.056002616882324

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00012070851516909897
    2. ' ' → logprob: -9.750121116638184
    3. 'sys' → logprob: -9.875121116638184
    4. ' os' → logprob: -12.375121116638184
    5. ' system' → logprob: -12.375121116638184
    6. '=sys' → logprob: -14.125121116638184
    7. '	sys' → logprob: -14.375121116638184
    8. ' ' → logprob: -14.625121116638184
    9. '_sys' → logprob: -15.500121116638184
    10. ' space' → logprob: -16.375120162963867

Token 22: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9452028870582581
    2. '<|end|>' → logprob: -1.0702028274536133
    3. 'newline' → logprob: -2.3202028274536133
    4. '<|end|>' → logprob: -2.9452028274536133
    5. '   ' → logprob: -3.6952028274536133
    6. '
' → logprob: -4.070202827453613
    7. '.readline' → logprob: -4.195202827453613
    8. '\' → logprob: -4.195202827453613
    9. '    
' → logprob: -4.695202827453613
    10. '```' → logprob: -4.820202827453613

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5160408616065979
    2. '    
' → logprob: -1.3910408020019531
    3. '\n' → logprob: -3.016040802001953
    4. '
' → logprob: -3.516040802001953
    5. '\' → logprob: -3.891040802001953
    6. '    ' → logprob: -4.516040802001953
    7. 'newline' → logprob: -4.516040802001953
    8. '<|end|>' → logprob: -5.141040802001953
    9. '```' → logprob: -5.266040802001953
    10. '<|end|>' → logprob: -5.891040802001953

Token 24: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8816336989402771
    2. '   ' → logprob: -1.5066337585449219
    3. '    
' → logprob: -2.006633758544922
    4. '
' → logprob: -2.006633758544922
    5. 'newline' → logprob: -3.256633758544922
    6. 'n' → logprob: -3.631633758544922
    7. '```' → logprob: -5.381633758544922
    8. '<|end|>' → logprob: -5.756633758544922
    9. 'input' → logprob: -6.006633758544922
    10. '  
' → logprob: -6.131633758544922

Token 25: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13589631021022797
    2. ' for' → logprob: -3.6358962059020996
    3. 'input' → logprob: -3.6358962059020996
    4. ' lines' → logprob: -3.6358962059020996
    5. 'data' → logprob: -4.2608962059021
    6. ' input' → logprob: -4.2608962059021
    7. 'for' → logprob: -4.6358962059021
    8. ' data' → logprob: -5.3858962059021
    9. ' readline' → logprob: -6.3858962059021
    10. 'lines' → logprob: -7.0108962059021

Token 26: ' alias' (ID: 26026)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7925296425819397
    2. ' readline' → logprob: -1.917529582977295
    3. '.readline' → logprob: -2.667529582977295
    4. ' for' → logprob: -2.792529582977295
    5. '   ' → logprob: -3.042529582977295
    6. ' continue' → logprob: -3.792529582977295
    7. ' a' → logprob: -3.917529582977295
    8. ' récup' → logprob: -4.167529582977295
    9. '.readlines' → logprob: -4.417529582977295
    10. ' input' → logprob: -4.542529582977295

Token 27: ' la' (ID: 557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.019936522468924522
    2. 'er' → logprob: -4.019936561584473
    3. ' e' → logprob: -7.019936561584473
    4. ' sys' → logprob: -7.269936561584473
    5. '=sys' → logprob: -9.269936561584473
    6. 'ing' → logprob: -10.644936561584473
    7. ' ' → logprob: -11.269936561584473
    8. '   ' → logprob: -11.644936561584473
    9. '=' → logprob: -11.894936561584473
    10. 'ant' → logprob: -12.019936561584473

Token 28: ' fonction' (ID: 17610)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6917139887809753
    2. 'input' → logprob: -1.0667140483856201
    3. ' input' → logprob: -2.94171404838562
    4. '.stdin' → logprob: -3.19171404838562
    5. ' stdin' → logprob: -3.56671404838562
    6. 'sys' → logprob: -5.066713809967041
    7. 'in' → logprob: -5.316713809967041
    8. '.readline' → logprob: -5.941713809967041
    9. ' sys' → logprob: -5.941713809967041
    10. '   ' → logprob: -6.066713809967041

Token 29: ' readline' (ID: 179561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17119435966014862
    2. 'read' → logprob: -2.671194314956665
    3. 'sys' → logprob: -3.796194314956665
    4. '=sys' → logprob: -4.046194553375244
    5. 'stdin' → logprob: -4.171194553375244
    6. '(stdin' → logprob: -4.796194553375244
    7. '=input' → logprob: -5.671194553375244
    8. ' input' → logprob: -5.671194553375244
    9. '=' → logprob: -5.796194553375244
    10. '   ' → logprob: -6.046194553375244

Token 30: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014848357066512108
    2. '=' → logprob: -4.639848232269287
    3. '=sys' → logprob: -5.389848232269287
    4. '   ' → logprob: -7.889848232269287
    5. ' ' → logprob: -10.139848709106445
    6. '    ' → logprob: -11.139848709106445
    7. 'sys' → logprob: -11.264848709106445
    8. '(sys' → logprob: -11.264848709106445
    9. '=lambda' → logprob: -11.389848709106445
    10. ',' → logprob: -11.764848709106445

Token 31: ' lire' (ID: 46082)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.49001583456993103
    2. ' sys' → logprob: -1.2400158643722534
    3. 'input' → logprob: -3.490015745162964
    4. ' readline' → logprob: -3.490015745162964
    5. ' input' → logprob: -3.740015745162964
    6. ' lire' → logprob: -5.490015983581543
    7. 'read' → logprob: -5.740015983581543
    8. '=sys' → logprob: -6.115015983581543
    9. 'stdin' → logprob: -6.615015983581543
    10. 'l' → logprob: -7.740015983581543

Token 32: ' plus' (ID: 2932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1607125997543335
    2. '(' → logprob: -2.660712718963623
    3. ' ' → logprob: -2.660712718963623
    4. ')' → logprob: -6.785712718963623
    5. '  ' → logprob: -7.035712718963623
    6. ' une' → logprob: -7.160712718963623
    7. ' la' → logprob: -7.535712718963623
    8. '(sys' → logprob: -7.660712718963623
    9. '_' → logprob: -7.910712718963623
    10. ' )' → logprob: -8.285712242126465

Token 33: ' rapidement' (ID: 43157)
  Prédit: ' rapidement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapidement' → logprob: -0.22393116354942322
    2. ' facilement' → logprob: -1.8489311933517456
    3. ' efficacement' → logprob: -3.598931074142456
    4. ' vite' → logprob: -5.098931312561035
    5. '_' → logprob: -5.598931312561035
    6. 'rapid' → logprob: -5.848931312561035
    7. ' rapid' → logprob: -7.598931312561035
    8. ' ais' → logprob: -7.973931312561035
    9. ' simplement' → logprob: -8.098931312561035
    10. ' rapidly' → logprob: -8.098931312561035

Token 34: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8974157571792603
    2. '=sys' → logprob: -1.1474157571792603
    3. '   ' → logprob: -2.0224156379699707
    4. ' readline' → logprob: -3.2724156379699707
    5. '(sys' → logprob: -3.3974156379699707
    6. '=' → logprob: -3.8974156379699707
    7. 'sys' → logprob: -4.397415637969971
    8. ' ' → logprob: -5.022415637969971
    9. '()' → logprob: -5.272415637969971
    10. '(stdin' → logprob: -5.272415637969971

Token 35: ' entr' (ID: 7072)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.10235469788312912
    2. ' entr' → logprob: -2.4773547649383545
    3. 'l' → logprob: -4.977354526519775
    4. ' données' → logprob: -6.102354526519775
    5. ' lines' → logprob: -6.852354526519775
    6. ' inputs' → logprob: -7.102354526519775
    7. ' input' → logprob: -7.227354526519775
    8. 'entr' → logprob: -7.727354526519775
    9. 'lines' → logprob: -8.102355003356934
    10. ' l' → logprob: -8.977355003356934

Token 36: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0008020033710636199
    2. 'ees' → logprob: -7.250802040100098
    3. 'ée' → logprob: -9.375802040100098
    4. 'é' → logprob: -12.375802040100098
    5. 'er' → logprob: -14.250802040100098
    6. 'e' → logprob: -14.375802040100098
    7. 'és' → logprob: -14.625802040100098
    8. 'es' → logprob: -14.875802040100098
    9. '```' → logprob: -15.500802040100098
    10. 'êtes' → logprob: -16.00080108642578

Token 37: ' ligne' (ID: 19583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3042210042476654
    2. '=sys' → logprob: -2.0542209148406982
    3. '   ' → logprob: -2.4292209148406982
    4. '=' → logprob: -3.4292209148406982
    5. ' ' → logprob: -5.304221153259277
    6. ' readline' → logprob: -5.929221153259277
    7. '=input' → logprob: -6.929221153259277
    8. '.readline' → logprob: -7.054221153259277
    9. '_' → logprob: -7.429221153259277
    10. '(sys' → logprob: -7.554221153259277

Token 38: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03857864812016487
    2. ' =' → logprob: -3.413578748703003
    3. 'es' → logprob: -5.788578510284424
    4. '=' → logprob: -7.413578510284424
    5. '()' → logprob: -7.538578510284424
    6. '_' → logprob: -8.538578987121582
    7. ' ' → logprob: -9.288578987121582
    8. ' s' → logprob: -9.663578987121582
    9. '_s' → logprob: -9.663578987121582
    10. '=sys' → logprob: -9.913578987121582

Token 39: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5511822700500488
    2. ' ligne' → logprob: -1.0511822700500488
    3. 'line' → logprob: -3.676182270050049
    4. '-l' → logprob: -5.051182270050049
    5. '\n' → logprob: -5.051182270050049
    6. 'par' → logprob: -5.301182270050049
    7. ' lignes' → logprob: -5.926182270050049
    8. ' ' → logprob: -6.176182270050049
    9. '_l' → logprob: -6.426182270050049
    10. ' line' → logprob: -6.426182270050049

Token 40: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.050317645072937
    2. ' readline' → logprob: -1.175317645072937
    3. ' =' → logprob: -1.675317645072937
    4. '
' → logprob: -2.9253177642822266
    5. '.readline' → logprob: -3.3003177642822266
    6. '=sys' → logprob: -3.4253177642822266
    7. '=' → logprob: -4.675317764282227
    8. '\n' → logprob: -5.425317764282227
    9. '    
' → logprob: -5.425317764282227
    10. ' ' → logprob: -5.925317764282227

Token 41: ' équ' (ID: 18899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35273197293281555
    2. '_' → logprob: -2.227731943130493
    3. ' readline' → logprob: -2.477731943130493
    4. '    
' → logprob: -3.727731943130493
    5. ' ' → logprob: -3.977731943130493
    6. ' =' → logprob: -4.352732181549072
    7. '    ' → logprob: -4.602732181549072
    8. '()' → logprob: -4.727732181549072
    9. '\' → logprob: -5.477732181549072
    10. '  ' → logprob: -6.227732181549072

Token 42: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.6254459023475647
    2. 'ival' → logprob: -1.00044584274292
    3. 'iv' → logprob: -2.37544584274292
    4. 'i' → logprob: -6.12544584274292
    5. 'al' → logprob: -7.50044584274292
    6. 'val' → logprob: -8.375446319580078
    7. 'a' → logprob: -8.375446319580078
    8. 'iva' → logprob: -8.875446319580078
    9. 'ale' → logprob: -9.000446319580078
    10. 'ial' → logprob: -9.250446319580078

Token 43: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0038786965887993574
    2. 'à' → logprob: -6.253878593444824
    3. '   ' → logprob: -7.128878593444824
    4. ' ' → logprob: -7.878878593444824
    5. ' a' → logprob: -8.378878593444824
    6. ' to' → logprob: -9.128878593444824
    7. ''à' → logprob: -9.503878593444824
    8. ')' → logprob: -9.628878593444824
    9. ' au' → logprob: -10.128878593444824
    10. '(' → logprob: -10.128878593444824

Token 44: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14842839539051056
    2. 'sys' → logprob: -2.023428440093994
    3. ' input' → logprob: -5.648428440093994
    4. 'input' → logprob: -6.273428440093994
    5. '=sys' → logprob: -9.023427963256836
    6. '   ' → logprob: -9.773427963256836
    7. '	sys' → logprob: -10.273427963256836
    8. ' ' → logprob: -10.398427963256836
    9. 'stdin' → logprob: -10.523427963256836
    10. ' ' → logprob: -11.898427963256836

Token 45: '().
' (ID: 58434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46518057584762573
    2. '=' → logprob: -1.0901806354522705
    3. '=sys' → logprob: -3.7151806354522705
    4. '   ' → logprob: -4.840180397033691
    5. '()' → logprob: -6.465180397033691
    6. '=lambda' → logprob: -8.215180397033691
    7. ' ' → logprob: -8.340180397033691
    8. '_line' → logprob: -8.590180397033691
    9. '=input' → logprob: -8.590180397033691
    10. '_' → logprob: -8.715180397033691

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12392829358577728
    2. '    
' → logprob: -2.4989283084869385
    3. '
' → logprob: -4.748928070068359
    4. ' readline' → logprob: -5.123928070068359
    5. '\n' → logprob: -5.248928070068359
    6. '\' → logprob: -5.373928070068359
    7. 'read' → logprob: -6.373928070068359
    8. '   
' → logprob: -6.498928070068359
    9. '  
' → logprob: -6.623928070068359
    10. '```' → logprob: -7.248928070068359

Token 47: ' input' (ID: 3422)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.03769117593765259
    2. 'read' → logprob: -3.787691116333008
    3. '   ' → logprob: -4.787691116333008
    4. 'input' (adapté à ' input') → logprob: -5.912691116333008
    5. ' input' → logprob: -6.287691116333008
    6. ' read' → logprob: -7.162691116333008
    7. '.readline' → logprob: -8.162691116333008
    8. 'r' → logprob: -9.787691116333008
    9. 'stdin' → logprob: -9.912691116333008
    10. '    
' → logprob: -9.912691116333008

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3137449324131012
    2. ' =' → logprob: -1.3137449026107788
    3. '=sys' → logprob: -8.81374454498291
    4. '()' → logprob: -9.06374454498291
    5. '_line' → logprob: -10.06374454498291
    6. '.readline' → logprob: -10.31374454498291
    7. '=line' → logprob: -10.31374454498291
    8. ' ' → logprob: -10.93874454498291
    9. '=lambda' → logprob: -11.18874454498291
    10. '(' → logprob: -11.43874454498291

Token 49: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3132675588130951
    2. ' sys' → logprob: -1.3132675886154175
    3. '	sys' → logprob: -12.813267707824707
    4. '=sys' → logprob: -13.063267707824707
    5. '(sys' → logprob: -14.188267707824707
    6. 'lambda' → logprob: -15.688267707824707
    7. 'input' → logprob: -16.81326675415039
    8. '_sys' → logprob: -17.31326675415039
    9. ' ' → logprob: -17.81326675415039
    10. '/sys' → logprob: -17.81326675415039

Token 50: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.023739203810691833
    2. '.' → logprob: -3.7737390995025635
    3. '.readline' → logprob: -7.773739337921143
    4. '.stdout' → logprob: -9.773738861083984
    5. '.std' → logprob: -11.773738861083984
    6. '.input' → logprob: -12.523738861083984
    7. '.argv' → logprob: -13.398738861083984
    8. ' .' → logprob: -13.773738861083984
    9. '.stderr' → logprob: -14.523738861083984
    10. '.\' → logprob: -15.023738861083984

Token 51: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008211841923184693
    2. '.' → logprob: -7.125821113586426
    3. '.read' → logprob: -11.125821113586426
    4. '.readlines' → logprob: -13.875821113586426
    5. '.stdin' → logprob: -14.125821113586426
    6. ' .' → logprob: -16.125822067260742
    7. '.write' → logprob: -17.000822067260742
    8. '.buffer' → logprob: -17.500822067260742
    9. ' readline' → logprob: -18.125822067260742
    10. '.\' → logprob: -18.125822067260742

Token 52: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01637193188071251
    2. '()
' → logprob: -4.391371726989746
    3. '   ' → logprob: -6.141371726989746
    4. '(' → logprob: -7.391371726989746
    5. '
' → logprob: -7.516371726989746
    6. '    
' → logprob: -8.891371726989746
    7. '()\' → logprob: -8.891371726989746
    8. '()

' → logprob: -9.516371726989746
    9. '(
' → logprob: -10.141371726989746
    10. '\n' → logprob: -10.266371726989746

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012805924750864506
    2. '    
' → logprob: -4.637805938720703
    3. '  
' → logprob: -7.137805938720703
    4. 'n' → logprob: -7.637805938720703
    5. '
' → logprob: -7.637805938720703
    6. '  ' → logprob: -7.887805938720703
    7. '   
' → logprob: -8.512805938720703
    8. ' ' → logprob: -8.637805938720703
    9. 'a' → logprob: -8.762805938720703
    10. '    ' → logprob: -9.512805938720703

Token 54: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773717522621155
    2. 'n' → logprob: -0.9773717522621155
    3. 't' → logprob: -6.977371692657471
    4. 'a' → logprob: -7.477371692657471
    5. '    
' → logprob: -7.977371692657471
    6. 'N' → logprob: -8.227372169494629
    7. 'q' → logprob: -8.352372169494629
    8. 's' → logprob: -8.852372169494629
    9. ' n' → logprob: -9.102372169494629
    10. 'for' → logprob: -9.352372169494629

Token 55: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8139132261276245
    2. ' n' → logprob: -0.9389132261276245
    3. '   ' → logprob: -2.188913345336914
    4. 't' → logprob: -3.563913345336914
    5. ' t' → logprob: -4.438913345336914
    6. ' #' → logprob: -5.313913345336914
    7. '#' → logprob: -6.188913345336914
    8. ' T' → logprob: -7.063913345336914
    9. ' number' → logprob: -7.438913345336914
    10. 'nombre' → logprob: -7.688913345336914

Token 56: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06344323605298996
    2. '(' → logprob: -2.813443183898926
    3. '   ' → logprob: -7.813443183898926
    4. ')' → logprob: -8.438443183898926
    5. '<|end|>' → logprob: -8.688443183898926
    6. 's' → logprob: -8.813443183898926
    7. ' ()' → logprob: -8.938443183898926
    8. '<|end|>' → logprob: -9.438443183898926
    9. ' ' → logprob: -9.563443183898926
    10. ' (' → logprob: -10.313443183898926

Token 57: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30174219608306885
    2. ' la' → logprob: -1.4267421960830688
    3. ' ' → logprob: -4.676742076873779
    4. ' l' → logprob: -5.301742076873779
    5. ' ()' → logprob: -6.676742076873779
    6. ' n' → logprob: -6.801742076873779
    7. '(' → logprob: -7.051742076873779
    8. ' le' → logprob: -7.676742076873779
    9. 'l' → logprob: -7.801742076873779
    10. ' une' → logprob: -7.926742076873779

Token 58: ' première' (ID: 23423)
  Prédit: ' première'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' première' → logprob: -0.5597922205924988
    2. ' ' → logprob: -1.5597922801971436
    3. 'prem' → logprob: -1.9347922801971436
    4. ' ligne' → logprob: -4.1847920417785645
    5. ' premiere' → logprob: -4.1847920417785645
    6. 's' → logprob: -4.9347920417785645
    7. ' quantité' → logprob: -5.0597920417785645
    8. ' premi' → logprob: -5.5597920417785645
    9. ' suite' → logprob: -5.6847920417785645
    10. ' premier' → logprob: -5.9347920417785645

Token 59: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.187912255525589
    2. ' ' → logprob: -2.5629122257232666
    3. '()' → logprob: -2.9379122257232666
    4. '(' → logprob: -3.5629122257232666
    5. ' line' → logprob: -5.312912464141846
    6. 'ligne' → logprob: -6.062912464141846
    7. ' (' → logprob: -6.437912464141846
    8. ' )' → logprob: -6.562912464141846
    9. ' ()' → logprob: -6.812912464141846
    10. ')' → logprob: -8.562911987304688

Token 60: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012098762672394514
    2. '   ' → logprob: -6.751209735870361
    3. ')' → logprob: -11.12621021270752
    4. '()
' → logprob: -11.62621021270752
    5. '())' → logprob: -12.75121021270752
    6. '(' → logprob: -12.75121021270752
    7. ' ()' → logprob: -13.25121021270752
    8. '    ' → logprob: -13.37621021270752
    9. '().' → logprob: -13.62621021270752
    10. '()\' → logprob: -13.87621021270752

Token 61: ' l' (ID: 305)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8380280137062073
    2. ' input' → logprob: -0.9630280137062073
    3. ' l' → logprob: -2.0880279541015625
    4. 'l' → logprob: -3.9630279541015625
    5. ' la' → logprob: -4.0880279541015625
    6. 'input' → logprob: -4.5880279541015625
    7. 'code' → logprob: -4.8380279541015625
    8. 'entrée' → logprob: -5.8380279541015625
    9. 's' → logprob: -6.3380279541015625
    10. ' ' → logprob: -7.5880279541015625

Token 62: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.6806994676589966
    2. ''entrée' → logprob: -0.8056994676589966
    3. 'input' → logprob: -3.180699348449707
    4. ' input' → logprob: -6.680699348449707
    5. '’entrée' → logprob: -6.680699348449707
    6. 'a' → logprob: -7.430699348449707
    7. ' entrée' → logprob: -7.930699348449707
    8. ''' → logprob: -8.180699348449707
    9. 'put' → logprob: -8.305699348449707
    10. 'code' → logprob: -8.555699348449707

Token 63: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05900605022907257
    2. '()' → logprob: -3.1840059757232666
    3. ')' → logprob: -4.684006214141846
    4. '(' → logprob: -6.434006214141846
    5. ',' → logprob: -6.934006214141846
    6. '    
' → logprob: -7.309006214141846
    7. '[' → logprob: -7.559006214141846
    8. '    ' → logprob: -7.559006214141846
    9. ' ' → logprob: -8.184005737304688
    10. '  ' → logprob: -8.309005737304688

Token 64: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.041345238685608
    2. ' n' → logprob: -1.166345238685608
    3. ' )' → logprob: -2.0413451194763184
    4. 'n' → logprob: -2.1663451194763184
    5. ')' → logprob: -3.2913451194763184
    6. '    ' → logprob: -3.9163451194763184
    7. ' qui' → logprob: -4.791345119476318
    8. ' ,' → logprob: -5.791345119476318
    9. ' la' → logprob: -6.291345119476318
    10. ' ")' → logprob: -6.291345119476318

Token 65: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.07088681310415268
    2. ' correspond' → logprob: -3.5708868503570557
    3. ' cont' → logprob: -3.9458868503570557
    4. ' indique' → logprob: -4.320886611938477
    5. 'cont' → logprob: -6.195886611938477
    6. ' donne' → logprob: -6.195886611938477
    7. ' contains' → logprob: -7.070886611938477
    8. ' décrit' → logprob: -7.195886611938477
    9. ' ' → logprob: -7.695886611938477
    10. ' définit' → logprob: -8.695886611938477

Token 66: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9815497398376465
    2. ' la' → logprob: -1.3565497398376465
    3. ' ' → logprob: -1.4815497398376465
    4. ' l' → logprob: -2.6065497398376465
    5. ' un' → logprob: -3.3565497398376465
    6. '  ' → logprob: -4.4815497398376465
    7. ' a' → logprob: -5.3565497398376465
    8. ' une' → logprob: -5.7315497398376465
    9. '   ' → logprob: -6.1065497398376465
    10. 'l' → logprob: -6.3565497398376465

Token 67: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.6704012751579285
    2. ' ' → logprob: -1.2954013347625732
    3. ' nombres' → logprob: -2.6704013347625732
    4. ' ent' → logprob: -2.9204013347625732
    5. ' espaces' → logprob: -3.1704013347625732
    6. ' variables' → logprob: -4.045401096343994
    7. '  ' → logprob: -5.045401096343994
    8. ' numbers' → logprob: -5.045401096343994
    9. ' )' → logprob: -6.420401096343994
    10. 'ent' → logprob: -6.670401096343994

Token 68: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.31702300906181335
    2. 't' → logprob: -1.5670230388641357
    3. 'ières' → logprob: -3.1920230388641357
    4. 'ités' → logprob: -4.817022800445557
    5. 'ties' → logprob: -5.067022800445557
    6. 'ti' → logprob: -5.567022800445557
    7. 'tiers' → logprob: -6.317022800445557
    8. 'i' → logprob: -7.567022800445557
    9. 's' → logprob: -8.817023277282715
    10. 'itiers' → logprob: -8.817023277282715

Token 69: ' sépar' (ID: 97160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2500925362110138
    2. '()' → logprob: -2.6250925064086914
    3. ' (' → logprob: -2.7500925064086914
    4. ' ' → logprob: -3.5000925064086914
    5. ',' → logprob: -4.000092506408691
    6. '('' → logprob: -4.000092506408691
    7. ' ,' → logprob: -5.875092506408691
    8. ' =' → logprob: -5.875092506408691
    9. '   ' → logprob: -6.000092506408691
    10. ' )' → logprob: -6.000092506408691

Token 70: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.07906340062618256
    2. 'é' → logprob: -2.5790634155273438
    3. 'ée' → logprob: -9.579063415527344
    4. 'e' → logprob: -10.579063415527344
    5. 'es' → logprob: -10.954063415527344
    6. 'ées' → logprob: -11.454063415527344
    7. 'ès' → logprob: -11.454063415527344
    8. ' par' → logprob: -11.704063415527344
    9. 'ément' → logprob: -12.079063415527344
    10. 's' → logprob: -12.329063415527344

Token 71: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.004985285922884941
    2. 'par' → logprob: -5.379985332489014
    3. '  ' → logprob: -9.379984855651855
    4. 'e' → logprob: -9.504984855651855
    5. 'es' → logprob: -9.879984855651855
    6. '   ' → logprob: -10.254984855651855
    7. ' by' → logprob: -10.379984855651855
    8. 's' → logprob: -10.629984855651855
    9. ' ' → logprob: -11.254984855651855
    10. ' pas' → logprob: -12.129984855651855

Token 72: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5018390417098999
    2. ' ' → logprob: -1.2518390417099
    3. ' une' → logprob: -3.0018391609191895
    4. 'un' → logprob: -4.2518391609191895
    5. ' a' → logprob: -4.8768391609191895
    6. '  ' → logprob: -5.0018391609191895
    7. ' espace' → logprob: -5.0018391609191895
    8. ' des' → logprob: -5.1268391609191895
    9. ''un' → logprob: -5.5018391609191895
    10. ''espace' → logprob: -5.5018391609191895

Token 73: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.039774131029844284
    2. ''espace' → logprob: -4.039773941040039
    3. 'es' → logprob: -4.539773941040039
    4. ' ' → logprob: -5.414773941040039
    5. ' espaces' → logprob: -6.289773941040039
    6. ' space' → logprob: -6.539773941040039
    7. '’espace' → logprob: -7.039773941040039
    8. 'space' → logprob: -7.164773941040039
    9. 'esp' → logprob: -7.789773941040039
    10. ''esp' → logprob: -8.539773941040039

Token 74: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6803601980209351
    2. '(' → logprob: -1.555360198020935
    3. '   ' → logprob: -2.1803603172302246
    4. ')' → logprob: -2.6803603172302246
    5. ',' → logprob: -2.8053603172302246
    6. ' ' → logprob: -4.430360317230225
    7. ' )' → logprob: -5.055360317230225
    8. '('' → logprob: -5.555360317230225
    9. 's' → logprob: -6.055360317230225
    10. ' =' → logprob: -6.180360317230225

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.154951810836792
    2. 'n' → logprob: -1.404951810836792
    3. ' ' → logprob: -2.029951810836792
    4. 's' → logprob: -2.404951810836792
    5. 'x' → logprob: -2.529951810836792
    6. ' n' → logprob: -3.654951810836792
    7. ' x' → logprob: -4.029952049255371
    8. 'a' → logprob: -4.154952049255371
    9. '    ' → logprob: -4.404952049255371
    10. ')' → logprob: -4.779952049255371

Token 76: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2455112487077713
    2. ' n' → logprob: -2.745511293411255
    3. '   ' → logprob: -3.120511293411255
    4. 'n' → logprob: -3.870511293411255
    5. 'a' → logprob: -3.995511293411255
    6. 'line' → logprob: -4.120511054992676
    7. 's' → logprob: -4.870511054992676
    8. 'l' → logprob: -4.995511054992676
    9. ' x' → logprob: -4.995511054992676
    10. ' s' → logprob: -5.245511054992676

Token 77: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4486576020717621
    2. ' n' → logprob: -1.3236576318740845
    3. 'n' → logprob: -3.198657512664795
    4. '   ' → logprob: -3.823657512664795
    5. 'line' → logprob: -4.448657512664795
    6. ' data' → logprob: -5.573657512664795
    7. ' parts' → logprob: -6.073657512664795
    8. 'l' → logprob: -6.073657512664795
    9. ' ligne' → logprob: -6.573657512664795
    10. ' tokens' → logprob: -6.573657512664795

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.43412598967552185
    2. '(' → logprob: -1.0591260194778442
    3. '(lambda' → logprob: -5.809125900268555
    4. '=int' → logprob: -6.809125900268555
    5. '(str' → logprob: -8.059125900268555
    6. ' =' → logprob: -8.434125900268555
    7. '(input' → logprob: -8.684125900268555
    8. '(
' → logprob: -8.809125900268555
    9. '()' → logprob: -9.309125900268555
    10. '=' → logprob: -9.684125900268555

Token 79: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21243785321712494
    2. ',' → logprob: -1.7124378681182861
    3. '(input' → logprob: -5.587437629699707
    4. ',input' → logprob: -5.587437629699707
    5. '   ' → logprob: -6.087437629699707
    6. ')(' → logprob: -7.712437629699707
    7. '),' → logprob: -8.837437629699707
    8. 'input' → logprob: -9.087437629699707
    9. ' )' → logprob: -9.462437629699707
    10. ',)' → logprob: -9.587437629699707

Token 80: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22559510171413422
    2. ' input' → logprob: -1.6005951166152954
    3. ')' → logprob: -8.850595474243164
    4. '(input' → logprob: -11.225595474243164
    5. ' )' → logprob: -11.725595474243164
    6. ' ' → logprob: -11.975595474243164
    7. ',input' → logprob: -12.850595474243164
    8. '=input' → logprob: -13.350595474243164
    9. '   ' → logprob: -13.475595474243164
    10. '	input' → logprob: -13.975595474243164

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00019257364328950644
    2. '()' → logprob: -8.625192642211914
    3. '())' → logprob: -11.500192642211914
    4. ')' → logprob: -13.625192642211914
    5. '()
' → logprob: -13.875192642211914
    6. '(' → logprob: -15.625192642211914
    7. '   ' → logprob: -15.750192642211914
    8. ' ().' → logprob: -16.250192642211914
    9. '.readline' → logprob: -16.375192642211914
    10. ' ' → logprob: -16.750192642211914

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.062421925365924835
    2. 'strip' → logprob: -2.812422037124634
    3. 'rstrip' → logprob: -7.812421798706055
    4. ' split' → logprob: -10.437421798706055
    5. ')' → logprob: -11.437421798706055
    6. '().' → logprob: -12.312421798706055
    7. '(split' → logprob: -13.062421798706055
    8. ' strip' → logprob: -13.562421798706055
    9. 'read' → logprob: -14.437421798706055
    10. 'spl' → logprob: -15.687421798706055

Token 83: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03285421058535576
    2. '()))' → logprob: -3.6578543186187744
    3. ')' → logprob: -5.532854080200195
    4. '))' → logprob: -6.282854080200195
    5. '()' → logprob: -7.282854080200195
    6. '(' → logprob: -12.407854080200195
    7. '()),' → logprob: -12.532854080200195
    8. ' ())' → logprob: -12.907854080200195
    9. '())))' → logprob: -13.032854080200195
    10. '())
' → logprob: -13.282854080200195

Token 84: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17364460229873657
    2. '()' → logprob: -2.048644542694092
    3. '   ' → logprob: -5.298644542694092
    4. '(' → logprob: -5.298644542694092
    5. '<|end|>' → logprob: -5.548644542694092
    6. ',' → logprob: -5.673644542694092
    7. '(
' → logprob: -6.173644542694092
    8. ' )' → logprob: -6.798644542694092
    9. ' ' → logprob: -6.923644542694092
    10. '    ' → logprob: -7.298644542694092

Token 85: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00469913799315691
    2. 'e' → logprob: -5.879699230194092
    3. 'issent' → logprob: -8.004698753356934
    4. 'i' → logprob: -8.254698753356934
    5. 's' → logprob: -8.504698753356934
    6. 'ie' → logprob: -8.879698753356934
    7. 'ent' → logprob: -9.004698753356934
    8. 'int' → logprob: -9.254698753356934
    9. 't' → logprob: -9.379698753356934
    10. 'issez' → logprob: -9.504698753356934

Token 86: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10865950584411621
    2. 'les' → logprob: -3.233659505844116
    3. '(' → logprob: -3.858659505844116
    4. ' la' → logprob: -4.108659744262695
    5. ' chaque' → logprob: -4.483659744262695
    6. ' ' → logprob: -5.733659744262695
    7. '()' → logprob: -6.108659744262695
    8. ' each' → logprob: -6.858659744262695
    9. '<|end|>' → logprob: -6.858659744262695
    10. 's' → logprob: -7.108659744262695

Token 87: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.014925402589142323
    2. 'token' → logprob: -5.139925479888916
    3. ' élément' → logprob: -5.639925479888916
    4. ' token' → logprob: -6.389925479888916
    5. 'element' → logprob: -6.764925479888916
    6. 'nombre' → logprob: -7.264925479888916
    7. 'ent' → logprob: -8.139925003051758
    8. 'mot' → logprob: -8.389925003051758
    9. ' element' → logprob: -8.514925003051758
    10. 'entrée' → logprob: -8.514925003051758

Token 88: ' sépar' (ID: 97160)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4373300075531006
    2. ' de' → logprob: -1.1873300075531006
    3. ' des' → logprob: -4.06233024597168
    4. ')' → logprob: -5.06233024597168
    5. ' ' → logprob: -5.56233024597168
    6. ' à' → logprob: -5.81233024597168
    7. '(' → logprob: -5.81233024597168
    8. 's' → logprob: -5.93733024597168
    9. '<|end|>' → logprob: -6.43733024597168
    10. ' )' → logprob: -6.56233024597168

Token 89: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005708358250558376
    2. 'par' → logprob: -5.50570821762085
    3. ' par' → logprob: -6.75570821762085
    4. 'és' → logprob: -8.380708694458008
    5. 'e' → logprob: -9.130708694458008
    6. 'ée' → logprob: -10.255708694458008
    7. 'à' → logprob: -11.005708694458008
    8. 'ed' → logprob: -11.380708694458008
    9. ' by' → logprob: -11.505708694458008
    10. 'er' → logprob: -12.255708694458008

Token 90: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.47757986187934875
    2. ')' → logprob: -1.1025798320770264
    3. '()' → logprob: -3.7275798320770264
    4. 'par' → logprob: -4.8525800704956055
    5. ' )' → logprob: -5.4775800704956055
    6. ' ' → logprob: -5.9775800704956055
    7. ' by' → logprob: -6.1025800704956055
    8. 'e' → logprob: -6.3525800704956055
    9. '('' → logprob: -6.6025800704956055
    10. 's' → logprob: -7.1025800704956055

Token 91: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9076111912727356
    2. ''' → logprob: -2.032611131668091
    3. ' l' → logprob: -2.282611131668091
    4. ''un' → logprob: -2.657611131668091
    5. ' '' → logprob: -2.782611131668091
    6. ''espace' → logprob: -2.782611131668091
    7. ' espace' → logprob: -3.282611131668091
    8. 'un' → logprob: -3.282611131668091
    9. ' ' → logprob: -3.407611131668091
    10. 'l' → logprob: -3.407611131668091

Token 92: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.7427777051925659
    2. ''espace' → logprob: -1.242777705192566
    3. 'es' → logprob: -1.992777705192566
    4. ' ' → logprob: -2.9927778244018555
    5. 'space' → logprob: -4.1177778244018555
    6. 'esp' → logprob: -4.4927778244018555
    7. '’espace' → logprob: -4.8677778244018555
    8. ''' → logprob: -5.4927778244018555
    9. '<|end|>' → logprob: -5.4927778244018555
    10. ''esp' → logprob: -6.3677778244018555

Token 93: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09710147231817245
    2. '(' → logprob: -2.5971014499664307
    3. '()' → logprob: -4.59710168838501
    4. ' )' → logprob: -5.34710168838501
    5. '<|end|>' → logprob: -6.97210168838501
    6. ',' → logprob: -7.59710168838501
    7. '())' → logprob: -7.72210168838501
    8. '   ' → logprob: -8.222101211547852
    9. ' ' → logprob: -8.597101211547852
    10. '(
' → logprob: -8.722101211547852

Token 94: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4538988471031189
    2. ' int' → logprob: -1.4538989067077637
    3. ' des' → logprob: -2.4538989067077637
    4. 'int' → logprob: -3.3288989067077637
    5. 'un' → logprob: -6.203898906707764
    6. ' une' → logprob: -6.328898906707764
    7. ' entier' → logprob: -6.828898906707764
    8. 'ent' → logprob: -7.078898906707764
    9. ' integers' → logprob: -7.078898906707764
    10. 'des' → logprob: -7.203898906707764

Token 95: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.1790182888507843
    2. 'ent' → logprob: -2.054018259048462
    3. ' int' → logprob: -3.929018259048462
    4. 'int' → logprob: -4.804018497467041
    5. ' ent' → logprob: -5.179018497467041
    6. ' ' → logprob: -8.179018020629883
    7. ' nombre' → logprob: -8.304018020629883
    8. ' entière' → logprob: -8.429018020629883
    9. '_ent' → logprob: -8.429018020629883
    10. ' integer' → logprob: -8.679018020629883

Token 96: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33408835530281067
    2. '(' → logprob: -1.3340883255004883
    3. '   ' → logprob: -5.084088325500488
    4. ',' → logprob: -5.334088325500488
    5. '(
' → logprob: -5.459088325500488
    6. ' ' → logprob: -6.084088325500488
    7. '    ' → logprob: -7.709088325500488
    8. ' )' → logprob: -7.959088325500488
    9. ']' → logprob: -8.209088325500488
    10. '*' → logprob: -8.209088325500488

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7672043442726135
    2. ')' → logprob: -1.0172042846679688
    3. '    
' → logprob: -2.8922042846679688
    4. 'n' → logprob: -3.5172042846679688
    5. 'a' → logprob: -4.267204284667969
    6. ':' → logprob: -4.517204284667969
    7. '\n' → logprob: -4.642204284667969
    8. ',' → logprob: -5.017204284667969
    9. '  
' → logprob: -5.017204284667969
    10. ' ' → logprob: -5.267204284667969

Token 98: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1801154464483261
    2. 'n' → logprob: -1.9301154613494873
    3. 'A' → logprob: -5.055115222930908
    4. ' a' → logprob: -5.555115222930908
    5. '   ' → logprob: -6.055115222930908
    6. ' n' → logprob: -6.305115222930908
    7. '    
' → logprob: -6.305115222930908
    8. 'x' → logprob: -6.930115222930908
    9. ' A' → logprob: -7.430115222930908
    10. 'N' (adapté à ' N') → logprob: -8.305115699768066

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',k' → logprob: -15.625046730041504
    4. ',
' → logprob: -15.750046730041504
    5. ',K' → logprob: -16.000045776367188
    6. ',m' → logprob: -16.625045776367188
    7. ',int' → logprob: -16.625045776367188
    8. ',a' → logprob: -16.750045776367188
    9. ',n' → logprob: -16.875045776367188
    10. ',M' → logprob: -17.000045776367188

Token 100: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.052834998816251755
    2. 'M' → logprob: -3.302834987640381
    3. ' K' → logprob: -4.677834987640381
    4. ' ' → logprob: -5.427834987640381
    5. '<|end|>' → logprob: -7.677834987640381
    6. 'K' → logprob: -7.927834987640381
    7. 'space' → logprob: -10.177835464477539
    8. ' T' → logprob: -10.677835464477539
    9. '  ' → logprob: -11.052835464477539
    10. 'm' → logprob: -11.177835464477539

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011728443205356598
    2. '=' → logprob: -6.75117301940918
    3. ',' → logprob: -13.25117301940918
    4. ' =
' → logprob: -14.50117301940918
    5. ' ' → logprob: -15.50117301940918
    6. ')' → logprob: -16.00117301940918
    7. '.' → logprob: -17.37617301940918
    8. ' ' → logprob: -17.50117301940918
    9. ' =
' → logprob: -17.62617301940918
    10. '=int' → logprob: -17.87617301940918

Token 102: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0008062947308644652
    2. 'map' → logprob: -7.1258063316345215
    3. ' ' → logprob: -14.250805854797363
    4. ' list' → logprob: -14.375805854797363
    5. '	map' → logprob: -14.625805854797363
    6. ' ' → logprob: -16.87580680847168
    7. ' m' → logprob: -17.25080680847168
    8. ' input' → logprob: -17.50080680847168
    9. '  ' → logprob: -17.62580680847168
    10. ' tuple' → logprob: -18.00080680847168

Token 103: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03824402391910553
    2. '(' → logprob: -3.2882440090179443
    3. '(lambda' → logprob: -8.663244247436523
    4. '<int' → logprob: -11.663244247436523
    5. '(
' → logprob: -11.913244247436523
    6. ' (' → logprob: -12.163244247436523
    7. '[int' → logprob: -13.163244247436523
    8. '(str' → logprob: -13.163244247436523
    9. '<|end|>' → logprob: -13.288244247436523
    10. 'int' → logprob: -13.913244247436523

Token 104: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5962796807289124
    2. '(' → logprob: -0.8462796807289124
    3. '(int' → logprob: -4.471279621124268
    4. ',input' → logprob: -5.596279621124268
    5. ')' → logprob: -5.971279621124268
    6. ' (' → logprob: -7.096279621124268
    7. ',' → logprob: -7.221279621124268
    8. '(
' → logprob: -7.596279621124268
    9. ',int' → logprob: -9.346280097961426
    10. '=input' → logprob: -9.721280097961426

Token 105: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740830957889557
    2. 'input' → logprob: -0.9740830659866333
    3. 'int' → logprob: -12.599082946777344
    4. '(input' → logprob: -13.724082946777344
    5. ')' → logprob: -14.724082946777344
    6. '=input' → logprob: -15.099082946777344
    7. ' ' → logprob: -15.224082946777344
    8. ' int' → logprob: -15.349082946777344
    9. '<input' → logprob: -16.349082946777344
    10. 'str' → logprob: -16.474082946777344

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013814250705763698
    2. '()' → logprob: -6.6263813972473145
    3. '())' → logprob: -10.001381874084473
    4. ')' → logprob: -12.001381874084473
    5. '());' → logprob: -13.876381874084473
    6. '()[' → logprob: -14.626381874084473
    7. ' ().' → logprob: -14.751381874084473
    8. '().__' → logprob: -14.876381874084473
    9. '()).' → logprob: -15.001381874084473
    10. '().'' → logprob: -15.001381874084473

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.751746746478602e-05
    2. 'strip' → logprob: -10.75004768371582
    3. ')' → logprob: -11.37504768371582
    4. 'rstrip' → logprob: -11.50004768371582
    5. ' split' → logprob: -13.50004768371582
    6. '().' → logprob: -13.62504768371582
    7. 'spl' → logprob: -13.87504768371582
    8. '(split' → logprob: -14.75004768371582
    9. '())' → logprob: -15.00004768371582
    10. '()' → logprob: -15.75004768371582

Token 108: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0392506867647171
    2. '()' → logprob: -3.539250612258911
    3. ')' → logprob: -4.66425085067749
    4. '())
' → logprob: -11.539250373840332
    5. ' ())' → logprob: -11.789250373840332
    6. '()))' → logprob: -12.539250373840332
    7. '());' → logprob: -13.664250373840332
    8. '(),' → logprob: -13.789250373840332
    9. '();)' → logprob: -13.789250373840332
    10. '())

' → logprob: -13.789250373840332

Token 109: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04364461079239845
    2. ' la' → logprob: -4.543644428253174
    3. 'le' → logprob: -4.793644428253174
    4. ' the' → logprob: -4.793644428253174
    5. '<|end|>' → logprob: -5.293644428253174
    6. ' l' → logprob: -5.418644428253174
    7. 'the' → logprob: -6.418644428253174
    8. ' ' → logprob: -6.793644428253174
    9. ' nombre' → logprob: -6.918644428253174
    10. 'nombre' → logprob: -7.293644428253174

Token 114: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04314614087343216
    2. 'nombre' → logprob: -3.1681461334228516
    3. ' ' → logprob: -10.043146133422852
    4. ' nombres' → logprob: -10.668146133422852
    5. 'n' → logprob: -11.043146133422852
    6. 'Nombre' → logprob: -11.418146133422852
    7. ' nomb' → logprob: -11.543146133422852
    8. 's' → logprob: -11.793146133422852
    9. '_nombre' → logprob: -11.793146133422852
    10. ' number' → logprob: -12.293146133422852

Token 115: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9351591467857361
    2. 'de' → logprob: -1.4351592063903809
    3. ' des' → logprob: -2.185159206390381
    4. ' d' → logprob: -2.310159206390381
    5. 'des' → logprob: -2.560159206390381
    6. ' ' → logprob: -3.935159206390381
    7. 'd' → logprob: -4.060159206390381
    8. '<|end|>' → logprob: -4.310159206390381
    9. '_de' → logprob: -4.685159206390381
    10. '_d' → logprob: -5.685159206390381

Token 116: ' somm' (ID: 44830)
  Prédit: ' joueurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' joueurs' → logprob: -1.354978322982788
    2. ' points' → logprob: -2.354978322982788
    3. ' espaces' → logprob: -2.479978322982788
    4. ' items' → logprob: -2.479978322982788
    5. ' stations' → logprob: -3.354978322982788
    6. ' villes' → logprob: -3.479978322982788
    7. ' articles' → logprob: -3.604978322982788
    8. ' participants' → logprob: -3.604978322982788
    9. ' players' → logprob: -3.854978322982788
    10. 's' → logprob: -4.104978561401367

Token 117: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.022044630721211433
    2. 'êts' → logprob: -5.147044658660889
    3. 'its' → logprob: -5.272044658660889
    4. 'ètes' → logprob: -6.147044658660889
    5. 'ites' → logprob: -6.272044658660889
    6. 'ètres' → logprob: -6.647044658660889
    7. 'et' → logprob: -6.897044658660889
    8. 'es' → logprob: -7.022044658660889
    9. '<|end|>' → logprob: -7.522044658660889
    10. 'èves' → logprob: -8.64704418182373

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25774747133255005
    2. '<|end|>' → logprob: -1.6327474117279053
    3. ')' → logprob: -4.007747650146484
    4. '   ' → logprob: -5.007747650146484
    5. ' ' → logprob: -6.007747650146484
    6. ' ,' → logprob: -6.132747650146484
    7. '<|end|>' → logprob: -7.007747650146484
    8. '#' → logprob: -7.382747650146484
    9. '  ' → logprob: -8.257747650146484
    10. ' )' → logprob: -9.257747650146484

Token 119: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5472729802131653
    2. 'M' → logprob: -1.0472729206085205
    3. ' ' → logprob: -3.1722729206085205
    4. '<|end|>' → logprob: -3.7972729206085205
    5. '  ' → logprob: -6.0472731590271
    6. 's' → logprob: -7.2972731590271
    7. '   ' → logprob: -7.5472731590271
    8. '    ' → logprob: -7.6722731590271
    9. '<|end|>' → logprob: -7.7972731590271
    10. 'and' → logprob: -8.297272682189941

Token 120: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.12716443836688995
    2. 'nombre' → logprob: -2.127164363861084
    3. ' nombres' → logprob: -8.627164840698242
    4. '_nombre' → logprob: -10.252164840698242
    5. 'Nombre' → logprob: -12.252164840698242
    6. ' espace' → logprob: -12.877164840698242
    7. 'n' → logprob: -13.127164840698242
    8. 'ombre' → logprob: -13.252164840698242
    9. ' ' → logprob: -13.502164840698242
    10. ' number' → logprob: -13.752164840698242

Token 122: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7681843638420105
    2. 'd' → logprob: -1.7681844234466553
    3. ' des' → logprob: -2.0181844234466553
    4. '<|end|>' → logprob: -2.5181844234466553
    5. ' de' → logprob: -3.0181844234466553
    6. 'des' → logprob: -3.0181844234466553
    7. 'de' → logprob: -3.5181844234466553
    8. ' ' → logprob: -5.018184185028076
    9. '_d' → logprob: -5.768184185028076
    10. '_' → logprob: -5.768184185028076

Token 123: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.135633647441864
    2. '_ar' → logprob: -3.010633707046509
    3. '_' → logprob: -4.01063346862793
    4. ' ar' → logprob: -4.01063346862793
    5. 'ar' → logprob: -4.38563346862793
    6. '’ar' → logprob: -5.13563346862793
    7. ''' → logprob: -5.13563346862793
    8. 'e' → logprob: -5.38563346862793
    9. '_are' → logprob: -5.63563346862793
    10. 'are' → logprob: -6.13563346862793

Token 124: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.014679561369121075
    2. 'tes' → logprob: -5.389679431915283
    3. 'cs' → logprob: -5.889679431915283
    4. 'etes' → logprob: -6.389679431915283
    5. '�' → logprob: -7.014679431915283
    6. 'êts' → logprob: -7.139679431915283
    7. 'c' → logprob: -7.389679431915283
    8. 'ê' → logprob: -7.639679431915283
    9. '^' → logprob: -7.639679431915283
    10. '\xc8' → logprob: -7.764679431915283

Token 125: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.02258405089378357
    2. ' graph' → logprob: -4.022583961486816
    3. 'graph' → logprob: -5.647583961486816
    4. ' ' → logprob: -7.897583961486816
    5. 'gr' → logprob: -8.397583961486816
    6. ' ' → logprob: -8.647583961486816
    7. ' graphique' → logprob: -9.397583961486816
    8. ' Grap' → logprob: -10.897583961486816
    9. 'raph' → logprob: -12.147583961486816
    10. '	graph' → logprob: -12.522583961486816

Token 127: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.004259088542312384
    2. 'aphe' → logprob: -5.87925910949707
    3. 'phe' → logprob: -6.62925910949707
    4. 'h' → logprob: -9.37925910949707
    5. '#' → logprob: -11.87925910949707
    6. 'hep' → logprob: -12.12925910949707
    7. 'ph' → logprob: -12.25425910949707
    8. 'heme' → logprob: -12.62925910949707
    9. '```' → logprob: -12.75425910949707
    10. '   ' → logprob: -12.75425910949707

Token 128: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44281136989593506
    2. '   ' → logprob: -1.317811369895935
    3. '<|end|>' → logprob: -3.0678114891052246
    4. '    
' → logprob: -3.5678114891052246
    5. '  
' → logprob: -5.567811489105225
    6. ' 
' → logprob: -5.942811489105225
    7. '#' → logprob: -6.192811489105225
    8. '   
' → logprob: -6.567811489105225
    9. ')' → logprob: -6.692811489105225
    10. '```' → logprob: -7.192811489105225

Token 130: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07326578348875046
    2. '#' (adapté à ' #') → logprob: -3.573265790939331
    3. 'g' → logprob: -3.698265790939331
    4. 'edges' → logprob: -4.948265552520752
    5. '   ' → logprob: -5.323265552520752
    6. 'adj' → logprob: -6.448265552520752
    7. ' graph' → logprob: -6.573265552520752
    8. 'e' → logprob: -7.823265552520752
    9. 'neighbors' → logprob: -8.07326602935791
    10. 'd' → logprob: -8.07326602935791

Token 131: ' Cré' (ID: 109203)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13074839115142822
    2. ' graph' → logprob: -3.1307482719421387
    3. 'adj' → logprob: -3.6307482719421387
    4. '#' → logprob: -3.7557482719421387
    5. 'edges' → logprob: -4.755748271942139
    6. ' adjacency' → logprob: -4.880748271942139
    7. ' edges' → logprob: -5.630748271942139
    8. 'neighbors' → logprob: -6.255748271942139
    9. 'g' → logprob: -6.505748271942139
    10. ' neighbors' → logprob: -7.380748271942139

Token 132: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0042414008639752865
    2. 'er' → logprob: -6.254241466522217
    3. '#' → logprob: -6.629241466522217
    4. 'a' → logprob: -7.254241466522217
    5. 'tion' → logprob: -9.504240989685059
    6. 'at' → logprob: -9.504240989685059
    7. 'e' → logprob: -10.254240989685059
    8. 'lation' → logprob: -11.004240989685059
    9. 'ate' → logprob: -11.004240989685059
    10. 'atio' → logprob: -11.379240989685059

Token 133: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8770731687545776
    2. ' ' → logprob: -1.6270731687545776
    3. '<|end|>' → logprob: -1.8770731687545776
    4. ' des' → logprob: -3.127073287963867
    5. '[]' → logprob: -3.127073287963867
    6. '[' → logprob: -3.502073287963867
    7. '(' → logprob: -3.877073287963867
    8. ')' → logprob: -4.127073287963867
    9. '<|end|>' → logprob: -4.127073287963867
    10. 'd' → logprob: -4.502073287963867

Token 134: ''une' (ID: 13337)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0755705833435059
    2. ' une' → logprob: -1.0755705833435059
    3. 'une' → logprob: -1.8255705833435059
    4. ' d' → logprob: -2.700570583343506
    5. ' la' → logprob: -3.450570583343506
    6. '[' → logprob: -3.700570583343506
    7. ' un' → logprob: -4.325570583343506
    8. ' ' → logprob: -5.200570583343506
    9. 'a' → logprob: -5.325570583343506
    10. 'e' → logprob: -5.700570583343506

Token 135: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.28278109431266785
    2. 'list' → logprob: -2.2827811241149902
    3. 'liste' → logprob: -3.1577811241149902
    4. ' graph' → logprob: -3.4077811241149902
    5. ' adjacency' → logprob: -4.28278112411499
    6. 'default' → logprob: -4.28278112411499
    7. 'dict' → logprob: -4.40778112411499
    8. 'adj' → logprob: -5.15778112411499
    9. ' list' → logprob: -5.28278112411499
    10. ' liste' → logprob: -5.53278112411499

Token 136: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2628504037857056
    2. ' d' → logprob: -1.3878504037857056
    3. ' de' → logprob: -1.7628504037857056
    4. ' des' → logprob: -1.8878504037857056
    5. '[]' → logprob: -2.887850284576416
    6. 'd' → logprob: -3.762850284576416
    7. 'adj' → logprob: -4.262850284576416
    8. ' of' → logprob: -4.887850284576416
    9. ' adjacency' → logprob: -4.887850284576416
    10. 'de' → logprob: -5.012850284576416

Token 137: ''ad' (ID: 36162)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.557630717754364
    2. '[' → logprob: -1.3076307773590088
    3. ' adjacency' → logprob: -2.807630777359009
    4. ' lists' → logprob: -3.432630777359009
    5. 'lists' → logprob: -3.682630777359009
    6. 'list' → logprob: -3.807630777359009
    7. ' listes' → logprob: -5.43263053894043
    8. 'adj' → logprob: -6.05763053894043
    9. 'liste' → logprob: -6.68263053894043
    10. '_lists' → logprob: -7.30763053894043

Token 138: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2821062505245209
    2. 'jac' → logprob: -1.4071062803268433
    3. '[j' → logprob: -7.532106399536133
    4. 'jec' → logprob: -9.032106399536133
    5. 'jc' → logprob: -9.157106399536133
    6. '[' → logprob: -9.907106399536133
    7. 'ja' → logprob: -10.032106399536133
    8. 'd' → logprob: -10.532106399536133
    9. 'js' → logprob: -11.157106399536133
    10. 'dj' → logprob: -11.532106399536133

Token 139: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.20178821682929993
    2. 'acency' → logprob: -1.8267881870269775
    3. 'cence' → logprob: -5.076788425445557
    4. 'escence' → logprob: -5.576788425445557
    5. 'ences' → logprob: -5.826788425445557
    6. 'ac' → logprob: -6.326788425445557
    7. '[' → logprob: -6.451788425445557
    8. 'es' → logprob: -6.576788425445557
    9. 'rence' → logprob: -7.076788425445557
    10. '```' → logprob: -7.451788425445557

Token 140: ' standard' (ID: 7024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7019842267036438
    2. '[' → logprob: -1.451984167098999
    3. '   ' → logprob: -1.951984167098999
    4. 'graph' → logprob: -4.201984405517578
    5. '(' → logprob: -4.326984405517578
    6. ' (' → logprob: -4.701984405517578
    7. 's' → logprob: -4.701984405517578
    8. '[]' → logprob: -4.701984405517578
    9. '(graph' → logprob: -4.826984405517578
    10. '[N' → logprob: -4.951984405517578

Token 141: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6985199451446533
    2. ' =' → logprob: -1.6985199451446533
    3. '[]' → logprob: -2.0735199451446533
    4. '   ' → logprob: -2.1985199451446533
    5. ',' → logprob: -2.1985199451446533
    6. ' graph' → logprob: -2.6985199451446533
    7. 'graph' → logprob: -2.8235199451446533
    8. ' adjacency' → logprob: -3.6985199451446533
    9. 'adj' → logprob: -3.6985199451446533
    10. ':' → logprob: -3.9485199451446533

Token 142: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36569148302078247
    2. '[]' → logprob: -1.8656914234161377
    3. ' [[]' → logprob: -2.6156914234161377
    4. 'graph' → logprob: -3.7406914234161377
    5. ' graph' → logprob: -3.9906914234161377
    6. '_' → logprob: -3.9906914234161377
    7. '[N' → logprob: -5.490691661834717
    8. 'range' → logprob: -5.740691661834717
    9. ' range' → logprob: -6.115691661834717
    10. ' adjacency' → logprob: -6.865691661834717

Token 143: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.006064240820705891
    2. ' node' → logprob: -6.506064414978027
    3. ' vertex' → logprob: -6.756064414978027
    4. ' somm' → logprob: -7.131064414978027
    5. ' ' → logprob: -7.631064414978027
    6. ' som' → logprob: -7.756064414978027
    7. ' _' → logprob: -8.131064414978027
    8. 's' → logprob: -8.631064414978027
    9. 'n' → logprob: -8.881064414978027
    10. 'som' → logprob: -9.131064414978027

Token 144: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8130287528038025
    2. '   ' → logprob: -1.8130288124084473
    3. 'adj' → logprob: -2.3130288124084473
    4. '[' → logprob: -2.5630288124084473
    5. 'graph' → logprob: -2.8130288124084473
    6. '(' → logprob: -3.1880288124084473
    7. '=' → logprob: -3.1880288124084473
    8. ' (' → logprob: -4.688028812408447
    9. ',' → logprob: -4.813028812408447
    10. '(n' → logprob: -5.063028812408447

Token 145: ' adj' (ID: 20251)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.22430351376533508
    2. ' adjacency' → logprob: -2.3493034839630127
    3. ' adj' → logprob: -2.8493034839630127
    4. 'graph' → logprob: -3.3493034839630127
    5. 'adj' → logprob: -4.599303722381592
    6. '   ' → logprob: -6.349303722381592
    7. ' grap' → logprob: -8.724303245544434
    8. '	graph' → logprob: -8.724303245544434
    9. ' edges' → logprob: -9.349303245544434
    10. ' neighbors' → logprob: -9.599303245544434

Token 146: 'L' (ID: 43)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.47714030742645264
    2. '=' → logprob: -1.2271403074264526
    3. ' =' → logprob: -2.477140426635742
    4. 'acent' → logprob: -7.102140426635742
    5. '_list' → logprob: -7.227140426635742
    6. 'ac' → logprob: -7.352140426635742
    7. '=[]' → logprob: -10.227140426635742
    8. 'list' → logprob: -10.477140426635742
    9. 'acen' → logprob: -10.602140426635742
    10. 'List' → logprob: -11.352140426635742

Token 147: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3657822012901306
    2. '=' → logprob: -1.2407822608947754
    3. 'acency' → logprob: -4.740782260894775
    4. 'ist' → logprob: -5.240782260894775
    5. '=[]' → logprob: -6.115782260894775
    6. 'ac' → logprob: -8.115781784057617
    7. '=[' → logprob: -8.240781784057617
    8. ']' → logprob: -9.490781784057617
    9. 'acent' → logprob: -10.115781784057617
    10. '=[]
' → logprob: -10.240781784057617

Token 148: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009195777587592602
    2. '=' → logprob: -5.384195804595947
    3. 'adj' → logprob: -6.009195804595947
    4. ' ' → logprob: -7.009195804595947
    5. '   ' → logprob: -8.134195327758789
    6. '[' → logprob: -8.134195327758789
    7. ' adj' → logprob: -8.759195327758789
    8. ' adjacency' → logprob: -8.884195327758789
    9. '_adj' → logprob: -9.509195327758789
    10. ' =[' → logprob: -10.259195327758789

Token 149: ' #' (ID: 1069)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.6648567318916321
    2. 'adj' → logprob: -0.7898567318916321
    3. ' =' → logprob: -4.039856910705566
    4. '[' → logprob: -5.414856910705566
    5. ' adjacency' → logprob: -5.414856910705566
    6. '   ' → logprob: -5.914856910705566
    7. '_adj' → logprob: -7.539856910705566
    8. '=' → logprob: -7.789856910705566
    9. ' graph' → logprob: -8.539856910705566
    10. ' [' → logprob: -8.664856910705566

Token 150: ' La' (ID: 3038)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.523431658744812
    2. 'adj' → logprob: -0.898431658744812
    3. ' adjacency' → logprob: -8.273431777954102
    4. 'Adj' → logprob: -10.648431777954102
    5. ' adjacent' → logprob: -12.398431777954102
    6. '   ' → logprob: -12.523431777954102
    7. '```' → logprob: -12.523431777954102
    8. 'graph' → logprob: -12.898431777954102
    9. '(adj' → logprob: -13.023431777954102
    10. 'ad' → logprob: -13.148431777954102

Token 151: ' compréhension' (ID: 142333)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.0974637269973755
    2. 'd' → logprob: -1.5974637269973755
    3. 'dj' → logprob: -1.8474637269973755
    4. ' adj' → logprob: -1.9724637269973755
    5. ' adjacency' → logprob: -2.222463607788086
    6. 'j' → logprob: -3.847463607788086
    7. ' ' → logprob: -4.222463607788086
    8. ' =' → logprob: -5.347463607788086
    9. '[' → logprob: -5.472463607788086
    10. ' d' → logprob: -6.347463607788086

Token 152: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1317288875579834
    2. ' adj' → logprob: -2.8817288875579834
    3. ' [' → logprob: -3.8817288875579834
    4. ' ' → logprob: -5.0067291259765625
    5. '[
' → logprob: -5.0067291259765625
    6. '<|end|>' → logprob: -5.0067291259765625
    7. 'adj' → logprob: -5.5067291259765625
    8. '[]' → logprob: -5.6317291259765625
    9. ']' → logprob: -6.0067291259765625
    10. ' suivante' → logprob: -6.1317291259765625

Token 153: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14053672552108765
    2. ' range' → logprob: -2.5155367851257324
    3. 'range' → logprob: -4.015536785125732
    4. ' la' → logprob: -4.265536785125732
    5. ' [' → logprob: -5.015536785125732
    6. ' ' → logprob: -5.015536785125732
    7. ' [[]' → logprob: -5.765536785125732
    8. 's' → logprob: -7.890536785125732
    9. '[]' → logprob: -8.140536308288574
    10. '[N' → logprob: -8.515536308288574

Token 154: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028034603223204613
    2. ' [' → logprob: -5.028034687042236
    3. ' =' → logprob: -5.028034687042236
    4. '[]' → logprob: -5.153034687042236
    5. '[:]' → logprob: -5.778034687042236
    6. '=' → logprob: -6.528034687042236
    7. 's' → logprob: -7.278034687042236
    8. ']' → logprob: -7.528034687042236
    9. 'adj' → logprob: -7.528034687042236
    10. ' adj' → logprob: -8.028034210205078

Token 155: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004664372652769089
    2. ' []' → logprob: -5.379664421081543
    3. '[' → logprob: -11.004664421081543
    4. 'set' → logprob: -11.254664421081543
    5. '[]
' → logprob: -11.879664421081543
    6. '0' → logprob: -13.254664421081543
    7. '[]

' → logprob: -13.504664421081543
    8. ' ' → logprob: -13.629664421081543
    9. '   ' → logprob: -13.879664421081543
    10. '([]' → logprob: -14.379664421081543

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933552622795105
    2. 'for' → logprob: -0.6933552622795105
    3. '()' → logprob: -8.693355560302734
    4. ' ' → logprob: -11.068355560302734
    5. ']' → logprob: -11.318355560302734
    6. '   ' → logprob: -12.318355560302734
    7. '	for' → logprob: -12.443355560302734
    8. '```' → logprob: -13.193355560302734
    9. ' pour' → logprob: -14.443355560302734
    10. '  ' → logprob: -14.943355560302734

Token 157: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10263605415821075
    2. ' _' → logprob: -2.3526360988616943
    3. '_i' → logprob: -6.102635860443115
    4. '_s' → logprob: -9.977636337280273
    5. ' i' → logprob: -10.227636337280273
    6. 'i' → logprob: -10.227636337280273
    7. '_j' → logprob: -10.727636337280273
    8. '_N' → logprob: -11.102636337280273
    9. '_n' → logprob: -11.852636337280273
    10. '_x' → logprob: -12.102636337280273

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14273592829704285
    2. 'in' → logprob: -2.0177359580993652
    3. 'range' → logprob: -11.392735481262207
    4. ' ' → logprob: -11.517735481262207
    5. 'import' → logprob: -12.267735481262207
    6. '_in' → logprob: -12.767735481262207
    7. 'en' → logprob: -12.767735481262207
    8. 'n' → logprob: -12.767735481262207
    9. 'i' → logprob: -13.142735481262207
    10. 'd' → logprob: -13.267735481262207

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324780821800232
    2. ' range' → logprob: -3.773247718811035
    3. 'rang' → logprob: -14.523247718811035
    4. 'in' → logprob: -14.773247718811035
    5. '	range' → logprob: -14.898247718811035
    6. '(range' → logprob: -15.648247718811035
    7. ' ' → logprob: -16.02324867248535
    8. '_range' → logprob: -16.14824867248535
    9. '_' → logprob: -16.27324867248535
    10. '0' → logprob: -16.27324867248535

Token 160: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.827200897736475e-05
    2. '(' → logprob: -9.500078201293945
    3. ' (' → logprob: -13.750078201293945
    4. '(n' → logprob: -13.875078201293945
    5. 'N' → logprob: -14.000078201293945
    6. '(M' → logprob: -16.125078201293945
    7. '(
' → logprob: -16.375078201293945
    8. '

' → logprob: -16.625078201293945
    9. '(int' → logprob: -16.625078201293945
    10. '((' → logprob: -17.375078201293945

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04114117473363876
    2. ')]' → logprob: -3.2911412715911865
    3. ']' → logprob: -5.791141033172607
    4. ' )' → logprob: -11.416141510009766
    5. '(' → logprob: -11.541141510009766
    6. '()' → logprob: -12.041141510009766
    7. ' ]' → logprob: -12.291141510009766
    8. '()]' → logprob: -12.541141510009766
    9. '}' → logprob: -14.416141510009766
    10. '))' → logprob: -14.791141510009766

Token 162: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007607458624988794
    2. ' ]' → logprob: -4.882607460021973
    3. ']:' → logprob: -15.382607460021973
    4. '],' → logprob: -15.382607460021973
    5. '];' → logprob: -16.007606506347656
    6. '()]' → logprob: -16.132606506347656
    7. ')' → logprob: -16.632606506347656
    8. ']

' → logprob: -16.757606506347656
    9. ' ' → logprob: -16.882606506347656
    10. ']
' → logprob: -17.257606506347656

Token 163: ' crée' (ID: 102256)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02090456709265709
    2. '<|end|>' → logprob: -4.770904541015625
    3. '[' → logprob: -5.145904541015625
    4. ' ]' → logprob: -5.770904541015625
    5. '[]' → logprob: -6.895904541015625
    6. ')' → logprob: -6.895904541015625
    7. '[:]' → logprob: -7.770904541015625
    8. ' continues' → logprob: -8.520904541015625
    9. '<|end|>' → logprob: -9.020904541015625
    10. '   ' → logprob: -9.395904541015625

Token 164: ' une' (ID: 2463)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.6806412935256958
    2. 'N' → logprob: -1.6806412935256958
    3. ' une' → logprob: -2.1806411743164062
    4. '[]' → logprob: -2.4306411743164062
    5. ' N' → logprob: -2.5556411743164062
    6. ' a' → logprob: -4.930641174316406
    7. ' [[]' → logprob: -5.305641174316406
    8. '[' → logprob: -5.305641174316406
    9. 'une' → logprob: -5.430641174316406
    10. ' []' → logprob: -6.305641174316406

Token 165: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5107290148735046
    2. 'list' → logprob: -1.3857290744781494
    3. ' liste' → logprob: -2.1357290744781494
    4. ' list' → logprob: -4.01072883605957
    5. '[]' → logprob: -5.26072883605957
    6. '[' → logprob: -5.51072883605957
    7. 'adj' → logprob: -6.01072883605957
    8. 's' → logprob: -8.26072883605957
    9. 'lists' → logprob: -8.51072883605957
    10. 'n' → logprob: -8.51072883605957

Token 166: ' contenant' (ID: 131049)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6668457984924316
    2. ' de' → logprob: -1.5418457984924316
    3. '<|end|>' → logprob: -2.1668457984924316
    4. '[N' → logprob: -3.1668457984924316
    5. '[n' → logprob: -3.6668457984924316
    6. '[]' → logprob: -4.291845798492432
    7. '(N' → logprob: -4.291845798492432
    8. ' ' → logprob: -4.416845798492432
    9. ' of' → logprob: -4.416845798492432
    10. '(' → logprob: -4.791845798492432

Token 167: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5922382473945618
    2. '[]' → logprob: -1.217238187789917
    3. ' N' → logprob: -1.967238187789917
    4. ' []' → logprob: -4.842238426208496
    5. '[N' → logprob: -5.967238426208496
    6. '	N' → logprob: -8.592238426208496
    7. ' ' → logprob: -8.967238426208496
    8. ' ' → logprob: -9.967238426208496
    9. 'n' → logprob: -10.092238426208496
    10. '[' → logprob: -10.467238426208496

Token 168: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -1.138431429862976
    2. '[]' → logprob: -1.638431429862976
    3. ' []' → logprob: -1.763431429862976
    4. ' lists' → logprob: -1.763431429862976
    5. ' empty' → logprob: -2.8884315490722656
    6. 'lists' → logprob: -3.7634315490722656
    7. 'empty' → logprob: -4.013431549072266
    8. 'list' → logprob: -4.888431549072266
    9. 's' → logprob: -5.013431549072266
    10. ' espaces' → logprob: -5.263431549072266

Token 169: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -1.044411540031433
    2. 'vide' → logprob: -1.044411540031433
    3. 'v' → logprob: -1.544411540031433
    4. ' v' → logprob: -3.6694116592407227
    5. 'vier' → logprob: -3.9194116592407227
    6. '<|end|>' → logprob: -4.044411659240723
    7. ' ' → logprob: -5.294411659240723
    8. '[]' → logprob: -5.794411659240723
    9. ' vide' → logprob: -6.044411659240723
    10. '```' → logprob: -6.169411659240723

Token 170: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.003063391661271453
    2. 'ide' → logprob: -6.503063201904297
    3. 'id' → logprob: -7.128063201904297
    4. 'i' → logprob: -7.878063201904297
    5. 'ïdes' → logprob: -8.878063201904297
    6. 'al' → logprob: -9.628063201904297
    7. 'ideos' → logprob: -9.878063201904297
    8. 'a' → logprob: -10.378063201904297
    9. 'identes' → logprob: -10.628063201904297
    10. '```' → logprob: -11.503063201904297

Token 171: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7326174378395081
    2. ']' → logprob: -0.8576174378395081
    3. ',' → logprob: -2.4826173782348633
    4. '[' → logprob: -5.857617378234863
    5. '[]' → logprob: -5.857617378234863
    6. '<|end|>' → logprob: -6.607617378234863
    7. '.]' → logprob: -7.232617378234863
    8. '[:]' → logprob: -7.357617378234863
    9. ' ]' → logprob: -7.732617378234863
    10. '].' → logprob: -7.732617378234863

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2384893298149109
    2. 'adj' → logprob: -2.3634893894195557
    3. ']' → logprob: -2.6134893894195557
    4. '[]' → logprob: -4.238489151000977
    5. '<|end|>' → logprob: -4.613489151000977
    6. 'graph' → logprob: -5.238489151000977
    7. ')' → logprob: -5.863489151000977
    8. ' adj' → logprob: -6.488489151000977
    9. '[' → logprob: -6.488489151000977
    10. '    
' → logprob: -6.738489151000977

Token 173: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.29590219259262085
    2. ' adj' → logprob: -1.4209022521972656
    3. '   ' → logprob: -5.045902252197266
    4. ' adjacency' → logprob: -5.670902252197266
    5. 'graph' → logprob: -6.170902252197266
    6. ' graph' → logprob: -7.170902252197266
    7. '[]' → logprob: -7.295902252197266
    8. '[' → logprob: -8.420902252197266
    9. '_adj' → logprob: -8.420902252197266
    10. 'Adj' → logprob: -8.545902252197266

Token 174: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.742448022123426e-05
    2. 'List' → logprob: -9.750067710876465
    3. '_list' → logprob: -12.625067710876465
    4. '[L' → logprob: -12.875067710876465
    5. '[' → logprob: -13.375067710876465
    6. ' L' → logprob: -14.875067710876465
    7. 'Liste' → logprob: -15.375067710876465
    8. ' =' → logprob: -15.375067710876465
    9. 'list' → logprob: -15.875067710876465
    10. 'acency' → logprob: -16.00006675720215

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869769275188446
    2. ' =' → logprob: -1.136976957321167
    3. '[' → logprob: -9.386977195739746
    4. '=[]' → logprob: -11.511977195739746
    5. '=[' → logprob: -12.511977195739746
    6. ' ' → logprob: -13.511977195739746
    7. ']' → logprob: -13.886977195739746
    8. '[]' → logprob: -14.011977195739746
    9. ')' → logprob: -14.136977195739746
    10. '.' → logprob: -14.261977195739746

Token 176: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016337241686414927
    2. ' [[]' → logprob: -8.750163078308105
    3. ' [' → logprob: -12.250163078308105
    4. '[]' → logprob: -16.375164031982422
    5. '[[' → logprob: -18.875164031982422
    6. ' ' → logprob: -20.625164031982422
    7. ' []' → logprob: -21.750164031982422
    8. '[][]' → logprob: -22.625164031982422
    9. '[['' → logprob: -22.750164031982422
    10. '[
' → logprob: -23.000164031982422

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.57601398229599
    2. ' for' → logprob: -0.82601398229599
    3. ')' → logprob: -9.826013565063477
    4. ' ' → logprob: -11.201013565063477
    5. ']' → logprob: -12.326013565063477
    6. '   ' → logprob: -13.826013565063477
    7. '()' → logprob: -14.576013565063477
    8. '	for' → logprob: -14.951013565063477
    9. 'f' → logprob: -15.701013565063477
    10. '  ' → logprob: -15.951013565063477

Token 178: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.26050084829330444
    2. '_' → logprob: -1.5105009078979492
    3. ' range' → logprob: -5.260500907897949
    4. ' ' → logprob: -5.760500907897949
    5. ' in' → logprob: -9.38550090789795
    6. 'range' → logprob: -9.38550090789795
    7. ' i' → logprob: -10.76050090789795
    8. '_range' → logprob: -13.13550090789795
    9. ' ' → logprob: -14.88550090789795
    10. ' x' → logprob: -15.26050090789795

Token 179: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05128738284111023
    2. ' range' → logprob: -3.6762874126434326
    3. ' in' → logprob: -4.1762871742248535
    4. 'in' → logprob: -4.6762871742248535
    5. ' ' → logprob: -11.926287651062012
    6. '(range' → logprob: -13.926287651062012
    7. '  ' → logprob: -15.426287651062012
    8. 'ran' → logprob: -15.801287651062012
    9. '	range' → logprob: -15.926287651062012
    10. 'rang' → logprob: -16.301286697387695

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141352713108063
    2. ' range' → logprob: -1.7014135122299194
    3. '(range' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.701414108276367
    5. '	range' → logprob: -16.951414108276367
    6. 'rang' → logprob: -18.576414108276367
    7. ' rang' → logprob: -19.951414108276367
    8. '   ' → logprob: -20.326414108276367
    9. ' xrange' → logprob: -20.451414108276367
    10. '  ' → logprob: -20.576414108276367

Token 181: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00011689399980241433
    2. '(' → logprob: -9.125117301940918
    3. ' (' → logprob: -12.500117301940918
    4. 'N' → logprob: -12.750117301940918
    5. 'range' → logprob: -14.375117301940918
    6. ' range' → logprob: -15.250117301940918
    7. '(range' → logprob: -16.5001163482666
    8. ')' → logprob: -16.5001163482666
    9. '(n' → logprob: -16.6251163482666
    10. '(
' → logprob: -17.2501163482666

Token 182: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006934931734576821
    2. ']' → logprob: -7.625693321228027
    3. ')' → logprob: -8.500693321228027
    4. ' )' → logprob: -13.875693321228027
    5. ' ]' → logprob: -14.875693321228027
    6. ')]
' → logprob: -15.875693321228027
    7. '])' → logprob: -16.125694274902344
    8. ')],' → logprob: -16.125694274902344
    9. '}]' → logprob: -16.500694274902344
    10. '   ' → logprob: -16.625694274902344

Token 183: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10852571576833725
    2. '<|end|>' → logprob: -2.6085257530212402
    3. '   ' → logprob: -4.23352575302124
    4. '  
' → logprob: -5.23352575302124
    5. ' 
' → logprob: -5.98352575302124
    6. '    
' → logprob: -5.98352575302124
    7. 'for' → logprob: -6.85852575302124
    8. ' for' → logprob: -7.10852575302124
    9. '<|end|>' → logprob: -7.10852575302124
    10. ' ' → logprob: -8.108525276184082

Token 184: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3594611585140228
    2. 'for' → logprob: -1.2344611883163452
    3. ' for' → logprob: -5.109461307525635
    4. '   ' → logprob: -6.234461307525635
    5. '  
' → logprob: -6.734461307525635
    6. '    
' → logprob: -7.734461307525635
    7. ' 
' → logprob: -8.109460830688477
    8. '<|end|>' → logprob: -8.109460830688477
    9. '#' → logprob: -8.734460830688477
    10. '' → logprob: -8.734460830688477

Token 185: ' Liste' (ID: 61030)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9432350993156433
    2. 'for' → logprob: -1.068235158920288
    3. '<|end|>' → logprob: -2.193235158920288
    4. ' ' → logprob: -2.318235158920288
    5. '
' → logprob: -3.568235158920288
    6. ' 
' → logprob: -3.818235158920288
    7. '<|end|>' → logprob: -5.818234920501709
    8. '  
' → logprob: -6.068234920501709
    9. '  ' → logprob: -7.818234920501709
    10. ' ' → logprob: -8.443235397338867

Token 186: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.15545326471328735
    2. ' ar' → logprob: -2.4054532051086426
    3. ' voisin' → logprob: -3.7804532051086426
    4. ' adjacency' → logprob: -5.030453205108643
    5. ' adj' → logprob: -5.530453205108643
    6. ' neighbors' → logprob: -5.780453205108643
    7. ' vois' → logprob: -5.780453205108643
    8. 'adj' → logprob: -6.155453205108643
    9. ' somm' → logprob: -6.655453205108643
    10. '[]' → logprob: -6.905453205108643

Token 188: ' directs' (ID: 104758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11085451394319534
    2. '<|end|>' → logprob: -2.9858546257019043
    3. ' for' → logprob: -3.2358546257019043
    4. '[' → logprob: -5.235854625701904
    5. '   ' → logprob: -5.860854625701904
    6. ')' → logprob: -6.235854625701904
    7. '
' → logprob: -6.360854625701904
    8. '<|end|>' → logprob: -7.485854625701904
    9. ':' → logprob: -7.610854625701904
    10. '.' → logprob: -7.985854625701904

Token 189: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6485338807106018
    2. '<|end|>' → logprob: -1.148533821105957
    3. ' for' → logprob: -2.523533821105957
    4. '   ' → logprob: -3.148533821105957
    5. '[' → logprob: -4.273533821105957
    6. '
' → logprob: -5.148533821105957
    7. '.' → logprob: -5.273533821105957
    8. ')' → logprob: -5.648533821105957
    9. '<|end|>' → logprob: -6.523533821105957
    10. ' ' → logprob: -7.023533821105957

Token 190: 'ar' (ID: 277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01469025481492281
    2. ' )' → logprob: -5.514690399169922
    3. ' for' → logprob: -6.264690399169922
    4. 'i' → logprob: -6.639690399169922
    5. 'for' → logprob: -6.639690399169922
    6. 's' → logprob: -6.764690399169922
    7. ']' → logprob: -7.264690399169922
    8. ' i' → logprob: -7.514690399169922
    9. ')]' → logprob: -7.764690399169922
    10. '])' → logprob: -8.389690399169922

Token 191: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.01254615094512701
    2. 'cs' → logprob: -4.887546062469482
    3. 'r' → logprob: -6.012546062469482
    4. 'c' → logprob: -7.012546062469482
    5. 'êts' → logprob: -8.01254653930664
    6. 'ê' → logprob: -8.26254653930664
    7. 'tes' → logprob: -9.01254653930664
    8. 'e' → logprob: -9.26254653930664
    9. 'ête' → logprob: -9.26254653930664
    10. 'êt' → logprob: -9.38754653930664

Token 192: ' sort' (ID: 4506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6648229360580444
    2. ' sort' → logprob: -0.9148229360580444
    3. ' directed' → logprob: -3.539823055267334
    4. ')]' → logprob: -3.914823055267334
    5. 'sort' → logprob: -4.039823055267334
    6. 'direct' → logprob: -5.539823055267334
    7. ' )' → logprob: -5.789823055267334
    8. 'entr' → logprob: -6.164823055267334
    9. ' entr' → logprob: -6.289823055267334
    10. ' dirig' → logprob: -6.664823055267334

Token 193: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.013903497718274593
    2. 'ies' → logprob: -4.638903617858887
    3. 'ant' → logprob: -5.888903617858887
    4. ']' → logprob: -7.888903617858887
    5. 'ante' → logprob: -8.263903617858887
    6. '[]' → logprob: -8.388903617858887
    7. 'i' → logprob: -8.888903617858887
    8. '[' → logprob: -9.138903617858887
    9. 'ants' → logprob: -9.138903617858887
    10. 'y' → logprob: -10.513903617858887

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003292851848527789
    2. ' pour' → logprob: -6.378293037414551
    3. ' )' → logprob: -7.503293037414551
    4. 'pour' → logprob: -8.25329303741455
    5. ' des' → logprob: -8.62829303741455
    6. ').' → logprob: -8.62829303741455
    7. 'for' → logprob: -8.87829303741455
    8. ' de' → logprob: -9.12829303741455
    9. ' for' → logprob: -10.00329303741455
    10. ']' → logprob: -10.00329303741455

Token 195: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40522500872612
    2. '   ' → logprob: -1.4052250385284424
    3. '<|end|>' → logprob: -2.6552250385284424
    4. '    
' → logprob: -5.155224800109863
    5. 'for' → logprob: -5.280224800109863
    6. ' for' → logprob: -5.655224800109863
    7. '  
' → logprob: -7.155224800109863
    8. '<|end|>' → logprob: -7.280224800109863
    9. ')' → logprob: -8.030224800109863
    10. ' 
' → logprob: -8.155224800109863

Token 196: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4260999262332916
    2. '_' → logprob: -1.4260998964309692
    3. ' _' → logprob: -2.676100015640259
    4. 'i' → logprob: -3.926100015640259
    5. ' ' → logprob: -5.17609977722168
    6. ' each' → logprob: -5.92609977722168
    7. ' chaque' → logprob: -6.05109977722168
    8. ' ' → logprob: -6.42609977722168
    9. ' range' → logprob: -6.92609977722168
    10. ' u' → logprob: -7.05109977722168

Token 197: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.13299569487571716
    2. ' ' → logprob: -2.13299560546875
    3. '_' → logprob: -6.38299560546875
    4. ' vertex' → logprob: -7.00799560546875
    5. ' node' → logprob: -7.25799560546875
    6. ' somm' → logprob: -7.38299560546875
    7. ')' → logprob: -7.63299560546875
    8. ' )' → logprob: -7.88299560546875
    9. ' _' → logprob: -8.00799560546875
    10. 'vertex' → logprob: -8.38299560546875

Token 198: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03214649856090546
    2. '   ' → logprob: -3.907146453857422
    3. '<|end|>' → logprob: -4.782146453857422
    4. '    
' → logprob: -6.907146453857422
    5. '  
' → logprob: -7.032146453857422
    6. '<|end|>' → logprob: -7.657146453857422
    7. ' for' → logprob: -8.157146453857422
    8. 'for' → logprob: -8.907146453857422
    9. '
' → logprob: -9.032146453857422
    10. ' 
' → logprob: -9.532146453857422

Token 199: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18111304938793182
    2. ' for' → logprob: -2.3061130046844482
    3. '
' → logprob: -3.0561130046844482
    4. '<|end|>' → logprob: -4.681113243103027
    5. '   ' → logprob: -4.931113243103027
    6. '  
' → logprob: -7.056113243103027
    7. '    
' → logprob: -7.806113243103027
    8. '<|end|>' → logprob: -8.306113243103027
    9. '	for' → logprob: -8.806113243103027
    10. ' 
' → logprob: -9.056113243103027

Token 200: ' adj' (ID: 20251)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2654109001159668
    2. ' for' → logprob: -1.8904109001159668
    3. '   ' → logprob: -2.890410900115967
    4. '
' → logprob: -3.890410900115967
    5. '  
' → logprob: -6.640410900115967
    6. '<|end|>' → logprob: -6.640410900115967
    7. '    
' → logprob: -6.765410900115967
    8. '	for' → logprob: -7.015410900115967
    9. ' 
' → logprob: -7.640410900115967
    10. ' ' → logprob: -7.890410900115967

Token 201: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04712643846869469
    2. 'R' → logprob: -3.547126531600952
    3. 'M' → logprob: -5.422126293182373
    4. 'S' → logprob: -6.047126293182373
    5. ' =' → logprob: -6.422126293182373
    6. '=' → logprob: -6.672126293182373
    7. '[' → logprob: -6.797126293182373
    8. 'List' → logprob: -7.172126293182373
    9. 'F' → logprob: -7.422126293182373
    10. 'Ls' → logprob: -7.422126293182373

Token 202: 'Rev' (ID: 46580)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5174791812896729
    2. '<|end|>' → logprob: -1.3924791812896729
    3. '[M' → logprob: -3.142479181289673
    4. '.' → logprob: -3.142479181289673
    5. '[:]' → logprob: -4.642478942871094
    6. '.append' → logprob: -4.767478942871094
    7. 'for' → logprob: -4.767478942871094
    8. ',' → logprob: -5.017478942871094
    9. '[N' → logprob: -5.392478942871094
    10. '[]' → logprob: -5.517478942871094

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761404037475586
    2. ' =' → logprob: -0.8261404037475586
    3. '=[]' → logprob: -9.076140403747559
    4. '[' → logprob: -10.201140403747559
    5. '=[' → logprob: -11.076140403747559
    6. '[]' → logprob: -12.201140403747559
    7. 's' → logprob: -12.451140403747559
    8. ' ' → logprob: -12.451140403747559
    9. '[:]' → logprob: -12.576140403747559
    10. ']' → logprob: -12.951140403747559

Token 204: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.029751179739832878
    2. '[' → logprob: -3.5297510623931885
    3. ' [' → logprob: -14.52975082397461
    4. ' ' → logprob: -15.77975082397461
    5. '[List' → logprob: -17.15475082397461
    6. '[]' → logprob: -17.65475082397461
    7. '[['' → logprob: -17.77975082397461
    8. '([' → logprob: -18.02975082397461
    9. '[N' → logprob: -18.02975082397461
    10. ' []' → logprob: -18.77975082397461

Token 205: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16025204956531525
    2. 'for' → logprob: -1.9102520942687988
    3. '[' → logprob: -10.78525161743164
    4. '[N' → logprob: -13.03525161743164
    5. ')' → logprob: -13.53525161743164
    6. ' ' → logprob: -13.53525161743164
    7. ' [' → logprob: -13.66025161743164
    8. '	for' → logprob: -14.91025161743164
    9. ']' → logprob: -15.91025161743164
    10. ' ' → logprob: -16.03525161743164

Token 206: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3141288161277771
    2. ' _' → logprob: -1.3141288757324219
    3. ' range' → logprob: -7.564128875732422
    4. '_range' → logprob: -8.189128875732422
    5. 'range' → logprob: -10.564128875732422
    6. '_N' → logprob: -10.939128875732422
    7. ' ' → logprob: -11.189128875732422
    8. ' ' → logprob: -12.189128875732422
    9. ' in' → logprob: -12.814128875732422
    10. '_in' → logprob: -13.439128875732422

Token 207: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380479171872139
    2. ' range' → logprob: -3.288048028945923
    3. '(range' → logprob: -12.038047790527344
    4. 'in' → logprob: -15.413047790527344
    5. ' in' → logprob: -15.913047790527344
    6. '_range' → logprob: -17.038047790527344
    7. '	range' → logprob: -17.788047790527344
    8. 'ange' → logprob: -18.913047790527344
    9. '_' → logprob: -19.538047790527344
    10. ' ' → logprob: -20.163047790527344

Token 208: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200163811445236
    2. ' range' → logprob: -2.8120017051696777
    3. '(range' → logprob: -10.31200122833252
    4. '(N' → logprob: -14.18700122833252
    5. 'N' → logprob: -18.562002182006836
    6. '[N' → logprob: -18.812002182006836
    7. '	range' → logprob: -19.687002182006836
    8. '(' → logprob: -20.312002182006836
    9. '_range' → logprob: -20.312002182006836
    10. ' ' → logprob: -20.687002182006836

Token 209: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00025526012177579105
    2. ' (' → logprob: -8.375255584716797
    3. '(' → logprob: -10.875255584716797
    4. 'range' → logprob: -13.000255584716797
    5. ' range' → logprob: -13.500255584716797
    6. '(M' → logprob: -13.875255584716797
    7. 'N' → logprob: -14.625255584716797
    8. '(n' → logprob: -15.875255584716797
    9. ')' → logprob: -15.875255584716797
    10. '(range' → logprob: -16.250255584716797

Token 210: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018353741616010666
    2. ']' → logprob: -4.0183539390563965
    3. ')' → logprob: -8.518353462219238
    4. ' ]' → logprob: -13.143353462219238
    5. '])' → logprob: -14.018353462219238
    6. ' )' → logprob: -15.268353462219238
    7. '()]' → logprob: -16.018354415893555
    8. '}]' → logprob: -16.018354415893555
    9. ']]' → logprob: -16.268354415893555
    10. '])]' → logprob: -16.268354415893555

Token 211: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014402423053979874
    2. ' for' → logprob: -4.264402389526367
    3. '#' → logprob: -8.764402389526367
    4. '<|end|>' → logprob: -9.764402389526367
    5. '   ' → logprob: -12.014402389526367
    6. ')' → logprob: -12.389402389526367
    7. 'in' → logprob: -12.764402389526367
    8. '
' → logprob: -12.889402389526367
    9. '[' → logprob: -13.264402389526367
    10. ' ' → logprob: -13.389402389526367

Token 213: ' Liste' (ID: 61030)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23549342155456543
    2. '[' → logprob: -1.7354934215545654
    3. ' [[]' → logprob: -3.8604934215545654
    4. '[]
' → logprob: -5.6104936599731445
    5. '#' → logprob: -5.9854936599731445
    6. 'for' → logprob: -6.2354936599731445
    7. ' []' → logprob: -6.9854936599731445
    8. '[List' → logprob: -7.4854936599731445
    9. '[][]' → logprob: -7.7354936599731445
    10. '[#' → logprob: -7.8604936599731445

Token 214: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4557809829711914
    2. 'des' → logprob: -1.0807809829711914
    3. '<|end|>' → logprob: -4.205780982971191
    4. '[' → logprob: -5.080780982971191
    5. 's' → logprob: -5.580780982971191
    6. '_des' → logprob: -7.205780982971191
    7. ' of' → logprob: -8.330780982971191
    8. '[]' → logprob: -8.330780982971191
    9. '(' → logprob: -8.830780982971191
    10. 'd' → logprob: -8.830780982971191

Token 215: ''ad' (ID: 36162)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7080637216567993
    2. 'des' → logprob: -1.0830637216567993
    3. '[]' → logprob: -2.5830636024475098
    4. 's' → logprob: -3.4580636024475098
    5. 'e' → logprob: -3.8330636024475098
    6. '<|end|>' → logprob: -3.8330636024475098
    7. ' des' → logprob: -4.83306360244751
    8. '_des' → logprob: -6.08306360244751
    9. 'a' → logprob: -6.45806360244751
    10. ''s' → logprob: -6.70806360244751

Token 216: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.1310509294271469
    2. 'j' → logprob: -2.1310508251190186
    3. 'Jac' → logprob: -6.381051063537598
    4. '[j' → logprob: -7.131051063537598
    5. 'J' → logprob: -7.131051063537598
    6. 'L' → logprob: -8.506051063537598
    7. 'acency' → logprob: -8.881051063537598
    8. 'd' → logprob: -9.756051063537598
    9. 'jc' → logprob: -9.756051063537598
    10. ' j' → logprob: -10.381051063537598

Token 217: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.0124101638793945
    2. 'ence' → logprob: -1.2624101638793945
    3. 'L' → logprob: -1.8874101638793945
    4. 'acency' → logprob: -2.5124101638793945
    5. 'escence' → logprob: -3.6374101638793945
    6. 'es' → logprob: -3.6374101638793945
    7. 'ences' → logprob: -4.1374101638793945
    8. ']' → logprob: -5.2624101638793945
    9. 'ance' → logprob: -5.3874101638793945
    10. 'l' → logprob: -5.5749101638793945

Token 218: ' invers' (ID: 38721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.013408205471932888
    2. 'e' → logprob: -4.513408184051514
    3. 'ées' → logprob: -6.638408184051514
    4. 'es' → logprob: -7.638408184051514
    5. 'é' → logprob: -8.263408660888672
    6. '[' → logprob: -9.138408660888672
    7. 'ion' → logprob: -9.263408660888672
    8. 'ee' → logprob: -9.888408660888672
    9. '[e' → logprob: -10.388408660888672
    10. 'és' → logprob: -11.763408660888672

Token 220: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' pour' (ID: 1930)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4031883776187897
    2. ' [[]' → logprob: -1.1531883478164673
    3. '<|end|>' → logprob: -5.528188228607178
    4. '[' → logprob: -5.528188228607178
    5. ' []' → logprob: -5.778188228607178
    6. ' for' → logprob: -5.903188228607178
    7. '[][]' → logprob: -7.153188228607178
    8. 'for' → logprob: -7.153188228607178
    9. '[]
' → logprob: -8.028188705444336
    10. '[][' → logprob: -10.028188705444336

Token 222: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2624940574169159
    2. ' _' → logprob: -2.0124940872192383
    3. ' i' → logprob: -2.6374940872192383
    4. 'i' → logprob: -4.137494087219238
    5. ')' → logprob: -6.262494087219238
    6. ' j' → logprob: -6.262494087219238
    7. ' chaque' → logprob: -6.262494087219238
    8. '_i' → logprob: -7.512494087219238
    9. ' line' → logprob: -7.512494087219238
    10. ' ' → logprob: -7.637494087219238

Token 223: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.6668714880943298
    2. '_' → logprob: -1.1668715476989746
    3. ' _' → logprob: -2.9168715476989746
    4. ' i' → logprob: -3.6668715476989746
    5. 'i' → logprob: -3.7918715476989746
    6. ' ar' → logprob: -3.9168715476989746
    7. ' edge' → logprob: -4.416871547698975
    8. 'ar' → logprob: -5.416871547698975
    9. 's' → logprob: -5.541871547698975
    10. 'u' → logprob: -5.666871547698975

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.284791499376297
    2. ' for' → logprob: -1.9097914695739746
    3. 'for' → logprob: -3.5347914695739746
    4. ')' → logprob: -3.7847914695739746
    5. '<|end|>' → logprob: -4.284791469573975
    6. ' pour' → logprob: -4.784791469573975
    7. '[]' → logprob: -5.034791469573975
    8. ' in' → logprob: -5.409791469573975
    9. ' (' → logprob: -5.909791469573975
    10. ' ,' → logprob: -6.659791469573975

Token 225: ' ses' (ID: 6707)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08480409532785416
    2. ' []' → logprob: -3.084804058074951
    3. '=[]' → logprob: -4.209804058074951
    4. '<|end|>' → logprob: -5.459804058074951
    5. ')' → logprob: -5.709804058074951
    6. '[]
' → logprob: -6.334804058074951
    7. ' on' → logprob: -6.709804058074951
    8. '   ' → logprob: -6.709804058074951
    9. '[][]' → logprob: -6.709804058074951
    10. ' les' → logprob: -7.209804058074951

Token 226: ' préd' (ID: 98710)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.6475508809089661
    2. 'vo' → logprob: -1.0225508213043213
    3. 'ar' → logprob: -3.0225508213043213
    4. ' espaces' → logprob: -3.8975508213043213
    5. '_' → logprob: -4.5225510597229
    6. 'esp' → logprob: -5.3975510597229
    7. 'neighbors' → logprob: -5.6475510597229
    8. 'entr' → logprob: -5.8975510597229
    9. 'parents' → logprob: -6.1475510597229
    10. 'arri' → logprob: -6.1475510597229

Token 227: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.16661188006401062
    2. 'ec' → logprob: -2.416611909866333
    3. 'éc' → logprob: -2.791611909866333
    4. 'esseurs' → logprob: -6.541611671447754
    5. '[' → logprob: -7.916611671447754
    6. 'és' → logprob: -8.166611671447754
    7. 's' → logprob: -9.291611671447754
    8. 'éci' → logprob: -9.416611671447754
    9. 'èces' → logprob: -9.791611671447754
    10. 'e' → logprob: -9.916611671447754

Token 228: 'cesse' (ID: 120787)
  Prédit: 'cesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cesse' → logprob: -0.026068156585097313
    2. 'cess' → logprob: -3.9010682106018066
    3. 'c' → logprob: -5.651068210601807
    4. 's' → logprob: -6.401068210601807
    5. 'ss' → logprob: -9.401067733764648
    6. 'ces' → logprob: -9.401067733764648
    7. 'ccess' → logprob: -9.776067733764648
    8. 'esseurs' → logprob: -10.526067733764648
    9. '```' → logprob: -11.651067733764648
    10. '\s' → logprob: -11.651067733764648

Token 229: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5502104163169861
    2. 'urs' → logprob: -0.9252104163169861
    3. 'esseurs' → logprob: -4.425210475921631
    4. 'ss' → logprob: -4.675210475921631
    5. 'teurs' → logprob: -6.675210475921631
    6. 'rs' → logprob: -6.800210475921631
    7. '```' → logprob: -6.925210475921631
    8. 'reurs' → logprob: -7.925210475921631
    9. 'ur' → logprob: -8.300209999084473
    10. '#' → logprob: -8.300209999084473

Token 230: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.633718729019165
    2. ' for' → logprob: -1.508718729019165
    3. '   ' → logprob: -2.133718729019165
    4. '<|end|>' → logprob: -2.383718729019165
    5. '.' → logprob: -4.258718490600586
    6. '(' → logprob: -5.133718490600586
    7. '()' → logprob: -5.258718490600586
    8. ')' → logprob: -5.633718490600586
    9. '(N' → logprob: -6.758718490600586
    10. ' (' → logprob: -6.883718490600586

Token 231: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7994643449783325
    2. '   ' → logprob: -1.5494643449783325
    3. ' for' → logprob: -1.5494643449783325
    4. '<|end|>' → logprob: -2.299464225769043
    5. '
' → logprob: -4.174464225769043
    6. '    
' → logprob: -5.549464225769043
    7. ')' → logprob: -5.924464225769043
    8. '  
' → logprob: -7.049464225769043
    9. '<|end|>' → logprob: -7.049464225769043
    10. ' 
' → logprob: -8.049464225769043

Token 232: ' out' (ID: 842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7269800305366516
    2. '
' → logprob: -1.3519799709320068
    3. ' for' → logprob: -1.6019799709320068
    4. '   ' → logprob: -3.226979970932007
    5. '  
' → logprob: -5.351980209350586
    6. '<|end|>' → logprob: -5.476980209350586
    7. ' 
' → logprob: -5.726980209350586
    8. '    
' → logprob: -5.726980209350586
    9. ' ' → logprob: -8.226980209350586
    10. '[' → logprob: -8.476980209350586

Token 233: 'de' (ID: 613)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_degree' → logprob: -1.0004020929336548
    2. 'degree' → logprob: -1.2504020929336548
    3. '_edges' → logprob: -1.7504020929336548
    4. 'degrees' → logprob: -2.6254019737243652
    5. 'deg' → logprob: -3.7504019737243652
    6. ' =' → logprob: -4.250401973724365
    7. '_deg' → logprob: -4.625401973724365
    8. 'd' → logprob: -4.750401973724365
    9. 'Degrees' → logprob: -4.750401973724365
    10. '_' → logprob: -5.000401973724365

Token 234: 'gs' (ID: 9233)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11609981209039688
    2. 'gree' → logprob: -2.7410998344421387
    3. 'grees' → logprob: -3.1160998344421387
    4. 'gs' → logprob: -7.366099834442139
    5. 'gress' → logprob: -10.61609935760498
    6. 'gr' → logprob: -10.74109935760498
    7. 'G' → logprob: -10.86609935760498
    8. '[' → logprob: -11.11609935760498
    9. 'gres' → logprob: -11.36609935760498
    10. '```' → logprob: -11.36609935760498

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07414346933364868
    2. ' =' → logprob: -2.699143409729004
    3. 'rees' → logprob: -6.699143409729004
    4. 's' → logprob: -6.699143409729004
    5. 'ree' → logprob: -7.574143409729004
    6. 'e' → logprob: -7.699143409729004
    7. '[' → logprob: -8.574143409729004
    8. '=[]' → logprob: -8.574143409729004
    9. 're' → logprob: -9.074143409729004
    10. 'é' → logprob: -9.824143409729004

Token 236: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602635383605957
    2. ' [' → logprob: -1.9102635383605957
    3. '[N' → logprob: -10.285263061523438
    4. '[M' → logprob: -12.285263061523438
    5. '[n' → logprob: -15.160263061523438
    6. '[m' → logprob: -16.285263061523438
    7. ' ' → logprob: -16.910263061523438
    8. '[-' → logprob: -17.535263061523438
    9. '[i' → logprob: -17.785263061523438
    10. '[]' → logprob: -17.910263061523438

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. ']' → logprob: -14.875805854797363
    4. 'M' → logprob: -14.875805854797363
    5. '   ' → logprob: -15.250805854797363
    6. ' M' → logprob: -15.875805854797363
    7. 'int' → logprob: -16.750804901123047
    8. ')' → logprob: -17.688304901123047
    9. '       ' → logprob: -17.875804901123047
    10. '(' → logprob: -18.375804901123047

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.743931233882904
    2. ' for' → logprob: -0.993931233882904
    3. 'for' → logprob: -1.9939312934875488
    4. ']*' → logprob: -3.993931293487549
    5. ' ]' → logprob: -10.99393081665039
    6. ']*(' → logprob: -11.36893081665039
    7. ' ' → logprob: -11.74393081665039
    8. '	for' → logprob: -12.24393081665039
    9. '   ' → logprob: -12.61893081665039
    10. '(N' → logprob: -12.74393081665039

Token 239: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4946936070919037
    2. 'for' → logprob: -1.119693636894226
    3. ']' → logprob: -3.3696935176849365
    4. '[' → logprob: -4.619693756103516
    5. '[N' → logprob: -5.244693756103516
    6. ')' → logprob: -5.369693756103516
    7. '(N' → logprob: -5.869693756103516
    8. '*' → logprob: -5.994693756103516
    9. ']*' → logprob: -6.869693756103516
    10. '(' → logprob: -7.119693756103516

Token 240: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.3464544432936236e-05
    2. ' N' → logprob: -10.250043869018555
    3. '(N' → logprob: -11.750043869018555
    4. '(' → logprob: -16.250043869018555
    5. '   ' → logprob: -17.000043869018555
    6. '	N' → logprob: -18.375043869018555
    7. ' (' → logprob: -19.000043869018555
    8. 'M' → logprob: -19.500043869018555
    9. ' ' → logprob: -20.750043869018555
    10. 'n' → logprob: -21.375043869018555

Token 241: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09141787141561508
    2. '<|end|>' → logprob: -2.5914177894592285
    3. '<|end|>' → logprob: -5.3414177894592285
    4. '   ' → logprob: -5.5914177894592285
    5. 'for' → logprob: -6.9664177894592285
    6. '    
' → logprob: -6.9664177894592285
    7. ' for' → logprob: -7.0914177894592285
    8. '  
' → logprob: -7.7164177894592285
    9. '
' → logprob: -8.216418266296387
    10. ' 
' → logprob: -8.716418266296387

Token 242: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050535786896944046
    2. '   ' → logprob: -3.5505356788635254
    3. 'for' → logprob: -4.300535678863525
    4. ' for' → logprob: -5.675535678863525
    5. '    
' → logprob: -6.425535678863525
    6. '  
' → logprob: -7.300535678863525
    7. '<|end|>' → logprob: -7.425535678863525
    8. '
' → logprob: -8.425536155700684
    9. ' 
' → logprob: -8.800536155700684
    10. '   
' → logprob: -9.550536155700684

Token 243: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42939475178718567
    2. ' [' → logprob: -2.3043947219848633
    3. 'M' → logprob: -2.6793947219848633
    4. ' M' → logprob: -3.0543947219848633
    5. '0' → logprob: -3.4293947219848633
    6. '[]' → logprob: -3.8043947219848633
    7. '[M' → logprob: -4.304394721984863
    8. 'N' → logprob: -4.429394721984863
    9. '[N' → logprob: -4.679394721984863
    10. ')' → logprob: -4.679394721984863

Token 244: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.1361480951309204
    2. ' compter' → logprob: -1.3861480951309204
    3. 'stock' → logprob: -1.3861480951309204
    4. 'count' → logprob: -3.011147975921631
    5. '<|end|>' → logprob: -3.011147975921631
    6. ' compt' → logprob: -4.261147975921631
    7. 'out' → logprob: -4.761147975921631
    8. ' suivre' → logprob: -5.011147975921631
    9. ' enregistr' → logprob: -5.136147975921631
    10. ' out' → logprob: -5.136147975921631

Token 246: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.007529966998845339
    2. 'iner' → logprob: -5.3825297355651855
    3. 'érer' → logprob: -6.2575297355651855
    4. '[' → logprob: -7.3825297355651855
    5. '   ' → logprob: -8.632530212402344
    6. 'urer' → logprob: -10.132530212402344
    7. 'rer' → logprob: -10.382530212402344
    8. '[i' → logprob: -10.507530212402344
    9. '[]' → logprob: -11.132530212402344
    10. ']' → logprob: -12.007530212402344

Token 247: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' degré' (ID: 169072)
  Prédit: ' degré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degré' → logprob: -0.6081414222717285
    2. 'de' → logprob: -1.6081414222717285
    3. ' nombre' → logprob: -1.7331414222717285
    4. 'nombre' → logprob: -3.3581414222717285
    5. ' degrés' → logprob: -3.7331414222717285
    6. ' out' → logprob: -4.8581414222717285
    7. ' degr' → logprob: -5.6081414222717285
    8. ' nombres' → logprob: -5.6081414222717285
    9. 'deg' → logprob: -6.3581414222717285
    10. 'out' → logprob: -6.8581414222717285

Token 249: ' sort' (ID: 4506)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6790408492088318
    2. 's' → logprob: -1.3040409088134766
    3. '_de' → logprob: -2.1790409088134766
    4. 'de' → logprob: -3.3040409088134766
    5. '_sort' → logprob: -3.5540409088134766
    6. 'sort' → logprob: -4.179040908813477
    7. ' de' → logprob: -4.554040908813477
    8. '_s' → logprob: -4.679040908813477
    9. '_out' → logprob: -6.304040908813477
    10. '_des' → logprob: -6.679040908813477

Token 250: 'ant' (ID: 493)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.12302014976739883
    2. 'ant' → logprob: -2.2480201721191406
    3. 'ing' → logprob: -5.248020172119141
    4. 's' → logprob: -5.748020172119141
    5. 'g' → logprob: -7.623020172119141
    6. 'eg' → logprob: -7.998020172119141
    7. '[]' → logprob: -8.49802017211914
    8. '   ' → logprob: -8.74802017211914
    9. 'going' → logprob: -9.12302017211914
    10. 'ans' → logprob: -9.37302017211914

Token 251: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03959712013602257
    2. '<|end|>' → logprob: -4.539597034454346
    3. 'de' → logprob: -5.164597034454346
    4. 'for' → logprob: -5.289597034454346
    5. ' de' → logprob: -5.414597034454346
    6. 'des' → logprob: -5.914597034454346
    7. ' des' → logprob: -6.164597034454346
    8. ')' → logprob: -6.664597034454346
    9. ' for' → logprob: -6.664597034454346
    10. '(s' → logprob: -6.914597034454346

Token 252: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29273268580436707
    2. 's' → logprob: -3.0427327156066895
    3. 'u' → logprob: -3.0427327156066895
    4. '[u' → logprob: -3.5427327156066895
    5. '[node' → logprob: -3.7927327156066895
    6. ' )' → logprob: -3.9177327156066895
    7. ' des' → logprob: -4.2927327156066895
    8. '[i' → logprob: -4.2927327156066895
    9. 'des' → logprob: -4.4177327156066895
    10. ' u' → logprob: -5.1677327156066895

Token 253: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6603441834449768
    2. ' de' → logprob: -1.535344123840332
    3. ')' → logprob: -2.160344123840332
    4. '[' → logprob: -3.535344123840332
    5. '_' → logprob: -3.535344123840332
    6. 'des' → logprob: -3.535344123840332
    7. 'de' → logprob: -4.035344123840332
    8. 'd' → logprob: -4.910344123840332
    9. ' d' → logprob: -4.910344123840332
    10. ' ' → logprob: -5.035344123840332

Token 254: ''ar' (ID: 54307)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.093595027923584
    2. ' de' → logprob: -1.843595027923584
    3. 'de' → logprob: -2.093595027923584
    4. 's' → logprob: -2.093595027923584
    5. ' des' → logprob: -2.343595027923584
    6. ')' → logprob: -3.093595027923584
    7. 'd' → logprob: -3.343595027923584
    8. 'des' → logprob: -4.093595027923584
    9. '_' → logprob: -4.343595027923584
    10. ' ' → logprob: -5.218595027923584

Token 255: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0031992164440453053
    2. 'tes' → logprob: -6.128199100494385
    3. 'cs' → logprob: -7.878199100494385
    4. 'etes' → logprob: -9.128199577331543
    5. 'ç' → logprob: -9.378199577331543
    6. 'ètes' → logprob: -9.378199577331543
    7. 'ê' → logprob: -9.753199577331543
    8. 'c' → logprob: -10.003199577331543
    9. 'ct' → logprob: -10.003199577331543
    10. 'es' → logprob: -10.128199577331543

Token 256: ' sort' (ID: 4506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5173333883285522
    2. '[u' → logprob: -1.5173333883285522
    3. 'sort' → logprob: -2.892333507537842
    4. '[i' → logprob: -3.142333507537842
    5. 'de' → logprob: -4.142333507537842
    6. '[' → logprob: -4.142333507537842
    7. ' sort' → logprob: -4.267333507537842
    8. 's' → logprob: -5.517333507537842
    9. 'u' → logprob: -5.642333507537842
    10. ' for' → logprob: -5.767333507537842

Token 257: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.12419269979000092
    2. 'ant' → logprob: -2.249192714691162
    3. 'ante' → logprob: -5.374192714691162
    4. '[' → logprob: -5.999192714691162
    5. 'nt' → logprob: -7.249192714691162
    6. ']' → logprob: -7.499192714691162
    7. '_' → logprob: -8.374192237854004
    8. '   ' → logprob: -8.374192237854004
    9. 't' → logprob: -8.624192237854004
    10. '**' → logprob: -8.624192237854004

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004763568751513958
    2. ' )' → logprob: -5.379763603210449
    3. ' pour' → logprob: -10.12976360321045
    4. ' de' → logprob: -10.62976360321045
    5. 'pour' → logprob: -10.62976360321045
    6. 'de' → logprob: -11.50476360321045
    7. ' des' → logprob: -11.62976360321045
    8. 'for' → logprob: -11.75476360321045
    9. ').' → logprob: -12.25476360321045
    10. ' ' → logprob: -12.37976360321045

Token 259: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.19242410361766815
    2. ' each' → logprob: -2.6924240589141846
    3. 'i' → logprob: -2.9424240589141846
    4. ' chaque' → logprob: -3.0674240589141846
    5. ' i' → logprob: -6.192424297332764
    6. 'u' → logprob: -6.192424297332764
    7. 's' → logprob: -6.442424297332764
    8. ' u' → logprob: -7.817424297332764
    9. ' chacun' → logprob: -8.317423820495605
    10. ' sommet' → logprob: -8.317423820495605

Token 261: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.059777989983558655
    2. 'som' → logprob: -3.4347779750823975
    3. 'vertex' → logprob: -4.809778213500977
    4. 's' → logprob: -5.184778213500977
    5. ')' → logprob: -5.559778213500977
    6. ' somm' → logprob: -6.559778213500977
    7. '_' → logprob: -6.809778213500977
    8. 'node' → logprob: -6.934778213500977
    9. ' ' → logprob: -7.059778213500977
    10. ' )' → logprob: -7.059778213500977

Token 262: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22225052118301392
    2. '   ' → logprob: -2.222250461578369
    3. '<|end|>' → logprob: -2.597250461578369
    4. '    
' → logprob: -4.972250461578369
    5. ' for' → logprob: -5.972250461578369
    6. 'for' → logprob: -6.097250461578369
    7. '<|end|>' → logprob: -6.097250461578369
    8. '  
' → logprob: -7.222250461578369
    9. ')' → logprob: -7.847250461578369
    10. '.' → logprob: -7.972250461578369

Token 263: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.6453080773353577
    2. 'isée' → logprob: -0.7703080773353577
    3. 'isés' → logprob: -4.770308017730713
    4. 'isées' → logprob: -6.645308017730713
    5. 'ement' → logprob: -7.770308017730713
    6. 'ized' → logprob: -8.020308494567871
    7. 'iser' → logprob: -8.395308494567871
    8. 'al' → logprob: -8.395308494567871
    9. ' =' → logprob: -8.395308494567871
    10. '=' → logprob: -8.520308494567871

Token 265: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8366401195526123
    2. '[' → logprob: -1.0866401195526123
    3. '[N' → logprob: -1.9616401195526123
    4. ')' → logprob: -3.8366401195526123
    5. '0' → logprob: -4.836640357971191
    6. '[]' → logprob: -4.836640357971191
    7. ' ' → logprob: -5.086640357971191
    8. ' =' → logprob: -5.211640357971191
    9. '<|end|>' → logprob: -5.211640357971191
    10. ' to' → logprob: -5.336640357971191

Token 266: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25058114528656006
    2. '0' → logprob: -1.62558114528656
    3. ' N' → logprob: -3.7505812644958496
    4. ' ' → logprob: -6.62558126449585
    5. 'M' → logprob: -11.500580787658691
    6. 'n' → logprob: -12.500580787658691
    7. '   ' → logprob: -12.875580787658691
    8. '[N' → logprob: -13.375580787658691
    9. '	N' → logprob: -14.000580787658691
    10. ' M' → logprob: -14.625580787658691

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6443204283714294
    2. 'N' → logprob: -0.7693204283714294
    3. ' N' → logprob: -4.769320487976074
    4. ' ' → logprob: -5.769320487976074
    5. 'M' → logprob: -11.269320487976074
    6. '   ' → logprob: -11.644320487976074
    7. '[N' → logprob: -11.769320487976074
    8. '[' → logprob: -12.644320487976074
    9. '(N' → logprob: -13.519320487976074
    10. '  ' → logprob: -13.519320487976074

Token 268: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038930028676986694
    2. '<|end|>' → logprob: -3.4139299392700195
    3. ')' → logprob: -6.6639299392700195
    4. '   ' → logprob: -6.9139299392700195
    5. 'for' → logprob: -7.0389299392700195
    6. ' for' → logprob: -7.5389299392700195
    7. '<|end|>' → logprob: -7.6639299392700195
    8. '    
' → logprob: -8.16392993927002
    9. '

' → logprob: -8.53892993927002
    10. '  
' → logprob: -8.78892993927002

Token 269: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1381770670413971
    2. ' for' → logprob: -3.0131771564483643
    3. '
' → logprob: -3.1381771564483643
    4. '   ' → logprob: -3.3881771564483643
    5. '    
' → logprob: -6.763176918029785
    6. '  
' → logprob: -7.263176918029785
    7. '<|end|>' → logprob: -7.763176918029785
    8. '	for' → logprob: -8.888176918029785
    9. '```' → logprob: -9.638176918029785
    10. ' 
' → logprob: -9.763176918029785

Token 270: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02232644334435463
    2. '   ' → logprob: -4.397326469421387
    3. ' for' → logprob: -4.647326469421387
    4. '
' → logprob: -9.147326469421387
    5. '	for' → logprob: -10.147326469421387
    6. '    
' → logprob: -10.397326469421387
    7. '  
' → logprob: -14.022326469421387
    8. '  ' → logprob: -14.022326469421387
    9. ' 
' → logprob: -14.147326469421387
    10. '   
' → logprob: -14.897326469421387

Token 271: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.983476436696947e-05
    2. ' for' → logprob: -9.375089645385742
    3. '   ' → logprob: -12.250089645385742
    4. '
' → logprob: -16.750089645385742
    5. '	for' → logprob: -17.125089645385742
    6. 'For' → logprob: -17.625089645385742
    7. 'pour' → logprob: -18.250089645385742
    8. '#' → logprob: -18.375089645385742
    9. 'range' → logprob: -18.750089645385742
    10. '    
' → logprob: -19.125089645385742

Token 272: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0023452038876712322
    2. 'c' → logprob: -6.127345085144043
    3. 'cles' → logprob: -9.377345085144043
    4. 't' → logprob: -10.627345085144043
    5. '   ' → logprob: -11.002345085144043
    6. 'cler' → logprob: -11.752345085144043
    7. 'cl' → logprob: -12.002345085144043
    8. ' cle' → logprob: -12.377345085144043
    9. 'clé' → logprob: -12.752345085144043
    10. 'r' → logprob: -13.002345085144043

Token 273: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015009364113211632
    2. 'for' → logprob: -5.39000940322876
    3. ' i' → logprob: -5.39000940322876
    4. ' _' → logprob: -5.76500940322876
    5. '   ' → logprob: -6.14000940322876
    6. '_' → logprob: -7.89000940322876
    7. ' M' → logprob: -10.765008926391602
    8. ' ' → logprob: -11.015008926391602
    9. ' range' → logprob: -11.265008926391602
    10. ' in' → logprob: -11.265008926391602

Token 274: ' lire' (ID: 46082)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21282845735549927
    2. ' range' → logprob: -1.7128283977508545
    3. ' _' → logprob: -4.962828636169434
    4. 'range' → logprob: -5.962828636169434
    5. '_range' → logprob: -6.337828636169434
    6. ' in' → logprob: -11.462828636169434
    7. '_i' → logprob: -13.462828636169434
    8. ' ' → logprob: -13.962828636169434
    9. ' ' → logprob: -14.087828636169434
    10. '_m' → logprob: -14.712828636169434

Token 275: ' les' (ID: 1341)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.20183098316192627
    2. '_' → logprob: -2.3268308639526367
    3. ' _' → logprob: -2.7018308639526367
    4. 'M' → logprob: -4.576830863952637
    5. ' range' → logprob: -5.076830863952637
    6. ' ' → logprob: -7.451830863952637
    7. 'range' → logprob: -7.451830863952637
    8. '   ' → logprob: -9.076830863952637
    9. ' in' → logprob: -9.576830863952637
    10. ' i' → logprob: -9.826830863952637

Token 276: ' M' (ID: 391)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018500378355383873
    2. '_' → logprob: -4.268500328063965
    3. ' M' → logprob: -5.768500328063965
    4. ' range' → logprob: -7.018500328063965
    5. 'M' → logprob: -9.143500328063965
    6. 'range' → logprob: -9.518500328063965
    7. ' ' → logprob: -10.018500328063965
    8. '_M' → logprob: -10.143500328063965
    9. ' i' → logprob: -10.518500328063965
    10. ' ' → logprob: -12.393500328063965

Token 277: ' ar' (ID: 646)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.996106743812561
    2. ' lines' → logprob: -1.121106743812561
    3. ' _' → logprob: -2.2461066246032715
    4. ' for' → logprob: -2.4961066246032715
    5. 'for' → logprob: -3.7461066246032715
    6. ' ' → logprob: -3.8711066246032715
    7. ' range' → logprob: -3.8711066246032715
    8. 'range' → logprob: -4.4961066246032715
    9. ' ' → logprob: -5.3711066246032715
    10. ' edges' → logprob: -5.4961066246032715

Token 278: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0014647466596215963
    2. 'cs' → logprob: -6.87646484375
    3. 'ê' → logprob: -8.87646484375
    4. 'ètes' → logprob: -9.37646484375
    5. 'etes' → logprob: -10.37646484375
    6. 'tes' → logprob: -10.50146484375
    7. 'r' → logprob: -10.87646484375
    8. 'êts' → logprob: -11.00146484375
    9. 'c' → logprob: -11.12646484375
    10. '^' → logprob: -11.62646484375

Token 279: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42019325494766235
    2. '   ' → logprob: -1.1701931953430176
    3. ':
' → logprob: -3.9201931953430176
    4. 'for' → logprob: -4.670193195343018
    5. ' for' → logprob: -5.795193195343018
    6. ',' → logprob: -9.295193672180176
    7. '():
' → logprob: -9.670193672180176
    8. '():' → logprob: -9.795193672180176
    9. ' :' → logprob: -9.920193672180176
    10. '  ' → logprob: -9.920193672180176

Token 280: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20758986473083496
    2. ' grap' → logprob: -2.332589864730835
    3. ' graph' → logprob: -2.457589864730835
    4. 'range' → logprob: -5.957590103149414
    5. ' range' → logprob: -6.832590103149414
    6. 'gr' → logprob: -7.332590103149414
    7. ' code' → logprob: -9.207590103149414
    8. 'g' → logprob: -10.082590103149414
    9. ' ' → logprob: -10.082590103149414
    10. '_graph' → logprob: -10.082590103149414

Token 281: 'he' (ID: 273)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.5938627123832703
    2. 'bre' → logprob: -2.343862771987915
    3. 've' → logprob: -2.968862771987915
    4. 'g' → logprob: -3.343862771987915
    5. '```' → logprob: -3.593862771987915
    6. 'ge' → logprob: -3.718862771987915
    7. 'che' → logprob: -3.718862771987915
    8. 'c' → logprob: -3.718862771987915
    9. 'e' → logprob: -3.843862771987915
    10. 'ête' → logprob: -4.093862533569336

Token 282: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05799831449985504
    2. ' for' → logprob: -3.5579984188079834
    3. 'for' → logprob: -3.9329984188079834
    4. ':' → logprob: -4.932998180389404
    5. ':
' → logprob: -7.557998180389404
    6. '
' → logprob: -8.057998657226562
    7. '    
' → logprob: -9.057998657226562
    8. '	for' → logprob: -10.432998657226562
    9. '```' → logprob: -10.807998657226562
    10. '<|end|>' → logprob: -10.932998657226562

Token 283: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20586441457271576
    2. ' for' → logprob: -2.205864429473877
    3. '   ' → logprob: -2.580864429473877
    4. '
' → logprob: -8.955863952636719
    5. '	for' → logprob: -10.080863952636719
    6. '    
' → logprob: -11.330863952636719
    7. '```' → logprob: -11.955863952636719
    8. ' 
' → logprob: -13.955863952636719
    9. '  
' → logprob: -14.705863952636719
    10. '    ' → logprob: -14.830863952636719

Token 284: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09208150953054428
    2. ' for' → logprob: -2.5920815467834473
    3. '   ' → logprob: -4.342081546783447
    4. '
' → logprob: -9.592081069946289
    5. '	for' → logprob: -10.592081069946289
    6. '    
' → logprob: -13.467081069946289
    7. ' 
' → logprob: -14.592081069946289
    8. '```' → logprob: -15.717081069946289
    9. ' ' → logprob: -16.84208106994629
    10. '_for' → logprob: -16.84208106994629

Token 285: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0068636126816272736
    2. '_' → logprob: -5.006863594055176
    3. ' i' → logprob: -8.881863594055176
    4. ' ' → logprob: -11.631863594055176
    5. ' ' → logprob: -14.506863594055176
    6. 'i' → logprob: -17.006864547729492
    7. '_i' → logprob: -17.131864547729492
    8. ' _
' → logprob: -17.756864547729492
    9. ' line' → logprob: -18.256864547729492
    10. ' ‌' → logprob: -18.756864547729492

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01116100512444973
    2. 'in' → logprob: -4.511160850524902
    3. ' ' → logprob: -9.386160850524902
    4. 's' → logprob: -11.386160850524902
    5. '  ' → logprob: -11.761160850524902
    6. ' ,' → logprob: -13.136160850524902
    7. ' i' → logprob: -13.386160850524902
    8. '_' → logprob: -13.636160850524902
    9. 'i' → logprob: -13.886160850524902
    10. ',' → logprob: -14.261160850524902

Token 287: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042180240154266
    2. ' range' → logprob: -3.2880420684814453
    3. 'input' → logprob: -15.163042068481445
    4. '	range' → logprob: -15.913042068481445
    5. '(range' → logprob: -16.413042068481445
    6. 'in' → logprob: -16.663042068481445
    7. ' ' → logprob: -16.788042068481445
    8. ' in' → logprob: -17.413042068481445
    9. ' input' → logprob: -17.663042068481445
    10. '  ' → logprob: -18.038042068481445

Token 288: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.009854190051555634
    2. ' (' → logprob: -4.759854316711426
    3. '(' → logprob: -7.009854316711426
    4. ' M' → logprob: -8.134854316711426
    5. 'M' → logprob: -10.134854316711426
    6. '   ' → logprob: -13.884854316711426
    7. ' range' → logprob: -14.509854316711426
    8. '(m' → logprob: -14.884854316711426
    9. '(range' → logprob: -14.884854316711426
    10. ' ' → logprob: -15.134854316711426

Token 289: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005355193745344877
    2. '):
' → logprob: -5.255355358123779
    3. ' ):' → logprob: -9.380354881286621
    4. ')' → logprob: -10.380354881286621
    5. ':' → logprob: -12.505354881286621
    6. '):
' → logprob: -13.505354881286621
    7. '():' → logprob: -15.255354881286621
    8. ' ):
' → logprob: -15.380354881286621
    9. '   ' → logprob: -15.505354881286621
    10. '}:' → logprob: -16.880355834960938

Token 290: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13607819378376007
    2. ' u' → logprob: -2.761078119277954
    3. '   ' → logprob: -4.261078357696533
    4. 'u' → logprob: -4.636078357696533
    5. ' 
' → logprob: -4.636078357696533
    6. ' a' → logprob: -5.261078357696533
    7. '<|end|>' → logprob: -5.261078357696533
    8. ' s' → logprob: -5.511078357696533
    9. ' line' → logprob: -5.511078357696533
    10. 'a' → logprob: -6.261078357696533

Token 291: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.24141621589660645
    2. ' u' → logprob: -1.8664162158966064
    3. '       ' → logprob: -2.9914162158966064
    4. 'a' → logprob: -5.241415977478027
    5. '   ' → logprob: -6.616415977478027
    6. 'from' → logprob: -7.116415977478027
    7. 'src' → logprob: -7.616415977478027
    8. '(u' → logprob: -7.991415977478027
    9. ' line' → logprob: -8.366415977478027
    10. 'A' → logprob: -8.491415977478027

Token 292: ' Pour' (ID: 13931)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07125543802976608
    2. ' u' → logprob: -2.6962554454803467
    3. 'a' → logprob: -7.446255207061768
    4. '   ' → logprob: -7.696255207061768
    5. 'U' → logprob: -9.571255683898926
    6. 's' → logprob: -10.196255683898926
    7. 'x' → logprob: -10.571255683898926
    8. '	u' → logprob: -10.696255683898926
    9. 'v' → logprob: -10.821255683898926
    10. 'A' → logprob: -10.946255683898926

Token 293: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11766871809959412
    2. 'range' → logprob: -2.492668628692627
    3. ' _' → logprob: -3.867668628692627
    4. ' ' → logprob: -5.367668628692627
    5. '_' → logprob: -6.492668628692627
    6. ' in' → logprob: -7.492668628692627
    7. '_range' → logprob: -8.867669105529785
    8. '  ' → logprob: -9.242669105529785
    9. '   ' → logprob: -9.367669105529785
    10. ' ' → logprob: -9.617669105529785

Token 294: ' ar' (ID: 646)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4471946358680725
    2. ' _' → logprob: -1.6971945762634277
    3. '_' → logprob: -3.0721945762634277
    4. ' ' → logprob: -3.0721945762634277
    5. ' in' → logprob: -4.322194576263428
    6. ' edge' → logprob: -4.447194576263428
    7. '   ' → logprob: -4.822194576263428
    8. '  ' → logprob: -4.947194576263428
    9. 'ligne' → logprob: -5.072194576263428
    10. ' i' → logprob: -5.197194576263428

Token 295: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.011788425967097282
    2. 'te' → logprob: -4.761788368225098
    3. 'r' → logprob: -7.136788368225098
    4. 'ète' → logprob: -7.636788368225098
    5. 'êtes' → logprob: -7.636788368225098
    6. 'e' → logprob: -7.761788368225098
    7. 'ate' → logprob: -8.386788368225098
    8. 'êt' → logprob: -8.636788368225098
    9. 't' → logprob: -8.761788368225098
    10. 'ete' → logprob: -9.761788368225098

Token 296: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.58937668800354
    2. '():' → logprob: -1.83937668800354
    3. ' :' → logprob: -1.96437668800354
    4. '   ' → logprob: -2.46437668800354
    5. ',' → logprob: -4.089376449584961
    6. '():
' → logprob: -4.339376449584961
    7. ' ():' → logprob: -4.964376449584961
    8. '):' → logprob: -4.964376449584961
    9. ' :
' → logprob: -5.464376449584961
    10. ':
' → logprob: -5.589376449584961

Token 297: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.35913074016571045
    2. '       ' → logprob: -1.8591307401657104
    3. '   ' → logprob: -2.359130859375
    4. 'u' → logprob: -3.484130859375
    5. ' a' → logprob: -5.359130859375
    6. 'a' → logprob: -5.859130859375
    7. ' s' → logprob: -5.859130859375
    8. ' 
' → logprob: -6.359130859375
    9. ' A' → logprob: -6.734130859375
    10. ' from' → logprob: -6.859130859375

Token 298: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2555636167526245
    2. ' u' → logprob: -1.5055636167526245
    3. 'a' → logprob: -6.005563735961914
    4. '   ' → logprob: -7.380563735961914
    5. ' a' → logprob: -8.005563735961914
    6. 'U' → logprob: -9.380563735961914
    7. 'x' → logprob: -10.380563735961914
    8. 's' → logprob: -10.630563735961914
    9. 'v' → logprob: -11.505563735961914
    10. ' U' → logprob: -11.630563735961914

Token 299: ' On' (ID: 2160)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.025725476443767548
    2. ' u' → logprob: -3.7757253646850586
    3. 'a' → logprob: -6.150725364685059
    4. 'U' → logprob: -8.900725364685059
    5. '   ' → logprob: -9.775725364685059
    6. ' a' → logprob: -10.275725364685059
    7. 'x' → logprob: -10.650725364685059
    8. 's' → logprob: -10.650725364685059
    9. 'src' → logprob: -11.400725364685059
    10. 'A' → logprob: -11.525725364685059

Token 300: ' lit' (ID: 11980)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.23518335819244385
    2. 'u' → logprob: -1.6101833581924438
    3. ' line' → logprob: -6.235183238983154
    4. 'a' → logprob: -6.235183238983154
    5. ' s' → logprob: -6.485183238983154
    6. 's' → logprob: -6.735183238983154
    7. ' a' → logprob: -6.860183238983154
    8. ' v' → logprob: -7.860183238983154
    9. ' x' → logprob: -8.610183715820312
    10. 'x' → logprob: -8.735183715820312

Token 301: ' deux' (ID: 10301)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.35792306065559387
    2. 'u' → logprob: -1.2329230308532715
    3. 'a' → logprob: -5.6079230308532715
    4. '(u' → logprob: -5.9829230308532715
    5. '   ' → logprob: -6.3579230308532715
    6. ' a' → logprob: -7.8579230308532715
    7. '()' → logprob: -8.23292350769043
    8. '	u' → logprob: -9.10792350769043
    9. 's' → logprob: -9.35792350769043
    10. ' un' → logprob: -9.60792350769043

Token 302: ' ent' (ID: 1121)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3277316689491272
    2. ' integers' → logprob: -1.9527316093444824
    3. ' vertices' → logprob: -3.2027316093444824
    4. 's' → logprob: -3.7027316093444824
    5. ' somm' → logprob: -3.9527316093444824
    6. 'u' → logprob: -4.327731609344482
    7. ' nodes' → logprob: -5.077731609344482
    8. ' s' → logprob: -5.577731609344482
    9. 'vertices' → logprob: -5.577731609344482
    10. ' tokens' → logprob: -5.702731609344482

Token 303: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.000363590574124828
    2. 's' → logprob: -8.87536334991455
    3. 'ints' → logprob: -9.62536334991455
    4. 'ières' → logprob: -10.00036334991455
    5. 't' → logprob: -11.00036334991455
    6. '   ' → logprob: -11.00036334991455
    7. ' ints' → logprob: -11.25036334991455
    8. ',' → logprob: -11.62536334991455
    9. 'ier' → logprob: -11.75036334991455
    10. '       ' → logprob: -12.62536334991455

Token 304: ' s' (ID: 265)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.14574739336967468
    2. 'u' → logprob: -2.895747423171997
    3. ',' → logprob: -3.395747423171997
    4. '(u' → logprob: -3.395747423171997
    5. '()' → logprob: -5.645747184753418
    6. ' (' → logprob: -5.770747184753418
    7. ' ,' → logprob: -5.895747184753418
    8. ',u' → logprob: -6.395747184753418
    9. 'a' → logprob: -7.520747184753418
    10. ' =' → logprob: -7.770747184753418

Token 305: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009344830177724361
    2. ' ,' → logprob: -5.259345054626465
    3. ',u' → logprob: -6.384345054626465
    4. 'rc' → logprob: -6.634345054626465
    5. 'tr' → logprob: -8.259345054626465
    6. 'u' → logprob: -8.509345054626465
    7. ',s' → logprob: -9.259345054626465
    8. ',t' → logprob: -9.259345054626465
    9. 'ource' → logprob: -9.259345054626465
    10. ',tr' → logprob: -9.634345054626465

Token 306: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08347070962190628
    2. 'd' → logprob: -3.4584708213806152
    3. ' t' → logprob: -3.7084708213806152
    4. 'e' → logprob: -3.8334708213806152
    5. 'r' → logprob: -6.083470821380615
    6. ' d' → logprob: -9.208470344543457
    7. ' e' → logprob: -10.083470344543457
    8. 'f' → logprob: -11.208470344543457
    9. ' r' → logprob: -11.708470344543457
    10. 'v' → logprob: -12.958470344543457

Token 307: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8170340657234192
    2. ' =' → logprob: -0.9420340657234192
    3. '=' → logprob: -1.8170340061187744
    4. ' ,' → logprob: -6.0670342445373535
    5. '()' → logprob: -6.6920342445373535
    6. '       ' → logprob: -7.0670342445373535
    7. '<|end|>' → logprob: -7.9420342445373535
    8. '   ' → logprob: -8.067033767700195
    9. ')' → logprob: -8.192033767700195
    10. '(' → logprob: -9.317033767700195

Token 308: 'origine' (ID: 52218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03909111022949219
    2. ' )' → logprob: -4.164091110229492
    3. '):' → logprob: -4.539091110229492
    4. ')=' → logprob: -5.539091110229492
    5. ' =' → logprob: -6.039091110229492
    6. '),' → logprob: -6.289091110229492
    7. '=' → logprob: -6.539091110229492
    8. '):
' → logprob: -6.539091110229492
    9. ',' → logprob: -8.289091110229492
    10. ' s' → logprob: -8.789091110229492

Token 309: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028000064194202423
    2. ' ,' → logprob: -6.002799987792969
    3. ')' → logprob: -9.002799987792969
    4. '   ' → logprob: -9.377799987792969
    5. '),' → logprob: -10.377799987792969
    6. ',s' → logprob: -10.877799987792969
    7. 's' → logprob: -11.002799987792969
    8. ',t' → logprob: -11.627799987792969
    9. '_,' → logprob: -11.877799987792969
    10. '       ' → logprob: -12.002799987792969

Token 310: ' destination' (ID: 13330)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.06112048774957657
    2. 't' → logprob: -2.9361205101013184
    3. ' destination' → logprob: -6.061120510101318
    4. ' cible' → logprob: -6.311120510101318
    5. ')' → logprob: -7.436120510101318
    6. ' target' → logprob: -7.811120510101318
    7. 'destination' → logprob: -8.06112003326416
    8. ' s' → logprob: -8.68612003326416
    9. 'target' → logprob: -8.81112003326416
    10. ',' → logprob: -9.18612003326416

Token 311: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04467841610312462
    2. ')
' → logprob: -3.4196784496307373
    3. '):' → logprob: -5.544678211212158
    4. '):
' → logprob: -5.669678211212158
    5. '       ' → logprob: -6.169678211212158
    6. ' )' → logprob: -6.919678211212158
    7. '   ' → logprob: -8.669678688049316
    8. '),' → logprob: -9.169678688049316
    9. ',' → logprob: -9.544678688049316
    10. ' )
' → logprob: -9.669678688049316

Token 312: '       ' (ID: 309)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06119630113244057
    2. 's' → logprob: -2.9361963272094727
    3. '       ' → logprob: -5.186196327209473
    4. '   ' → logprob: -8.311196327209473
    5. ',' → logprob: -8.811196327209473
    6. ' ' → logprob: -9.686196327209473
    7. '<|end|>' → logprob: -9.686196327209473
    8. ')' → logprob: -10.311196327209473
    9. ' 
' → logprob: -10.561196327209473
    10. '	s' → logprob: -10.686196327209473

Token 313: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25196123123168945
    2. 's' (adapté à ' s') → logprob: -1.5019612312316895
    3. '       ' → logprob: -11.001960754394531
    4. '   ' → logprob: -11.376960754394531
    5. '	s' → logprob: -13.876960754394531
    6. ' 
' → logprob: -14.251960754394531
    7. ' ' → logprob: -14.501960754394531
    8. ',' → logprob: -15.126960754394531
    9. '_s' → logprob: -15.251960754394531
    10. '    ' → logprob: -15.376960754394531

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007335089612752199
    2. ' ,' → logprob: -7.500733375549316
    3. ',t' → logprob: -8.625733375549316
    4. ',v' → logprob: -15.500733375549316
    5. '=' → logprob: -15.875733375549316
    6. ',s' → logprob: -16.250734329223633
    7. ',
' → logprob: -16.250734329223633
    8. ',int' → logprob: -16.500734329223633
    9. ' =' → logprob: -16.625734329223633
    10. '_,' → logprob: -16.750734329223633

Token 315: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47407716512680054
    2. ' t' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.349077224731445
    4. ' ' → logprob: -16.474077224731445
    5. '	t' → logprob: -17.349077224731445
    6. ' 
' → logprob: -18.974077224731445
    7. '<|end|>' → logprob: -19.099077224731445
    8. '`t' → logprob: -19.599077224731445
    9. ' ' → logprob: -19.724077224731445
    10. 'd' → logprob: -19.974077224731445

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407862544059753
    2. ' =' → logprob: -0.9740786552429199
    3. ')' → logprob: -13.974078178405762
    4. '=input' → logprob: -14.349078178405762
    5. '=line' → logprob: -16.849079132080078
    6. ')=' → logprob: -17.099079132080078
    7. '=int' → logprob: -17.349079132080078
    8. ' ' → logprob: -17.724079132080078
    9. '＝' → logprob: -17.849079132080078
    10. '=s' → logprob: -17.974079132080078

Token 317: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002475777640938759
    2. 'map' → logprob: -6.002475738525391
    3. '	map' → logprob: -16.50247573852539
    4. '(map' → logprob: -19.12747573852539
    5. ' ' → logprob: -19.25247573852539
    6. ' mapa' → logprob: -19.37747573852539
    7. '    ' → logprob: -20.00247573852539
    8. '.map' → logprob: -20.25247573852539
    9. '_map' → logprob: -20.25247573852539
    10. 'm' → logprob: -21.87747573852539

Token 318: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.625006675720215
    3. 'int' → logprob: -12.750006675720215
    4. '[int' → logprob: -15.500006675720215
    5. '<int' → logprob: -15.625006675720215
    6. ' (' → logprob: -15.625006675720215
    7. '=int' → logprob: -15.750006675720215
    8. ' int' → logprob: -16.37500762939453
    9. ',int' → logprob: -17.37500762939453
    10. '(
' → logprob: -18.50000762939453

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011475988430902362
    2. ',input' → logprob: -7.251147747039795
    3. '(input' → logprob: -8.751147270202637
    4. '   ' → logprob: -8.751147270202637
    5. ' ,' → logprob: -10.001147270202637
    6. '(' → logprob: -10.376147270202637
    7. '(),' → logprob: -10.376147270202637
    8. 'input' → logprob: -12.376147270202637
    9. ' (' → logprob: -12.376147270202637
    10. ' input' → logprob: -13.501147270202637

Token 320: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687190413475037
    2. ' input' → logprob: -1.1368719339370728
    3. '(input' → logprob: -14.386872291564941
    4. ')' → logprob: -16.136871337890625
    5. '=input' → logprob: -16.261871337890625
    6. ',input' → logprob: -16.511871337890625
    7. '_input' → logprob: -16.886871337890625
    8. '[input' → logprob: -17.636871337890625
    9. '	input' → logprob: -17.886871337890625
    10. 'Input' → logprob: -18.761871337890625

Token 321: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001005630983854644
    2. '()' → logprob: -9.250100135803223
    3. ')' → logprob: -12.625100135803223
    4. ').' → logprob: -14.750100135803223
    5. '(' → logprob: -15.000100135803223
    6. ' ().' → logprob: -15.625100135803223
    7. '   ' → logprob: -16.50010108947754
    8. '>().' → logprob: -17.37510108947754
    9. ' ' → logprob: -17.50010108947754
    10. '())' → logprob: -17.62510108947754

Token 322: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'strip' → logprob: -13.62500286102295
    3. ' split' → logprob: -14.37500286102295
    4. ')' → logprob: -14.50000286102295
    5. 'rstrip' → logprob: -15.87500286102295
    6. '(split' → logprob: -16.375001907348633
    7. ').' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.000001907348633
    10. 'spl' → logprob: -18.000001907348633

Token 323: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06414024531841278
    2. '())' → logprob: -2.9391403198242188
    3. '()' → logprob: -4.689140319824219
    4. ' )' → logprob: -11.939140319824219
    5. '(' → logprob: -12.439140319824219
    6. ')
' → logprob: -12.689140319824219
    7. '())
' → logprob: -12.814140319824219
    8. '   ' → logprob: -14.189140319824219
    9. '))' → logprob: -14.189140319824219
    10. ')`' → logprob: -14.439140319824219

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14934034645557404
    2. '
' → logprob: -2.8993403911590576
    3. '<|end|>' → logprob: -2.8993403911590576
    4. '        
' → logprob: -4.0243401527404785
    5. ')' → logprob: -5.8993401527404785
    6. '    
' → logprob: -6.0243401527404785
    7. '   ' → logprob: -6.5243401527404785
    8. '  
' → logprob: -7.1493401527404785
    9. ' 
' → logprob: -7.1493401527404785
    10. 's' → logprob: -7.6493401527404785

Token 325: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05136484280228615
    2. 's' → logprob: -3.6763648986816406
    3. '<|end|>' → logprob: -4.051364898681641
    4. '        
' → logprob: -5.801364898681641
    5. ')' → logprob: -6.301364898681641
    6. '
' → logprob: -7.426364898681641
    7. ' s' → logprob: -7.801364898681641
    8. 'adj' → logprob: -8.30136489868164
    9. '<|end|>' → logprob: -8.30136489868164
    10. ' 
' → logprob: -8.55136489868164

Token 326: ' Conversion' (ID: 74433)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5011509656906128
    2. ' adj' → logprob: -1.1261509656906128
    3. 's' → logprob: -3.5011510848999023
    4. '       ' → logprob: -3.6261510848999023
    5. ' s' → logprob: -4.376151084899902
    6. '   ' → logprob: -8.626151084899902
    7. 'out' → logprob: -9.126151084899902
    8. '#' → logprob: -9.376151084899902
    9. ' out' → logprob: -10.001151084899902
    10. '        
' → logprob: -10.501151084899902

Token 327: ' pour' (ID: 1930)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6583489179611206
    2. 's' → logprob: -1.1583489179611206
    3. '(' → logprob: -2.03334903717041
    4. '       ' → logprob: -3.53334903717041
    5. ' (' → logprob: -6.15834903717041
    6. ')' → logprob: -6.78334903717041
    7. ' =' → logprob: -6.90834903717041
    8. '-' → logprob: -7.03334903717041
    9. '=' → logprob: -7.53334903717041
    10. '(
' → logprob: -7.65834903717041

Token 328: ' passer' (ID: 27727)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38111990690231323
    2. '0' → logprob: -1.631119966506958
    3. ' s' → logprob: -2.506119966506958
    4. ' ' → logprob: -3.256119966506958
    5. '1' → logprob: -7.756119728088379
    6. 't' → logprob: -9.006119728088379
    7. '-' → logprob: -9.256119728088379
    8. 'sou' → logprob: -9.631119728088379
    9. '_s' → logprob: -10.131119728088379
    10. 'zero' → logprob: -10.256119728088379

Token 329: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08024172484874725
    2. '(s' → logprob: -3.2052416801452637
    3. '(' → logprob: -4.705241680145264
    4. ' to' → logprob: -4.955241680145264
    5. ' s' → logprob: -5.080241680145264
    6. ' à' → logprob: -5.205241680145264
    7. 'to' → logprob: -5.330241680145264
    8. '-' → logprob: -6.455241680145264
    9. ' ' → logprob: -7.955241680145264
    10. ' des' → logprob: -8.205242156982422

Token 330: ''une' (ID: 13337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5308170914649963
    2. '0' → logprob: -1.1558170318603516
    3. '(s' → logprob: -3.2808170318603516
    4. '-' → logprob: -3.6558170318603516
    5. '(' → logprob: -3.7808170318603516
    6. ' s' → logprob: -5.280817031860352
    7. ' ' → logprob: -6.280817031860352
    8. ' -' → logprob: -7.280817031860352
    9. 'zero' → logprob: -7.530817031860352
    10. ' à' → logprob: -8.155817031860352

Token 331: ' index' (ID: 3472)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010525152087211609
    2. '0' → logprob: -4.885525226593018
    3. ' -' → logprob: -6.135525226593018
    4. ' ' → logprob: -7.260525226593018
    5. '-zero' → logprob: -11.26052474975586
    6. 'zero' → logprob: -11.63552474975586
    7. 's' → logprob: -11.76052474975586
    8. ' zero' → logprob: -12.26052474975586
    9. '-s' → logprob: -12.76052474975586
    10. ' zéro' → logprob: -12.88552474975586

Token 332: 'ation' (ID: 387)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0112897157669067
    2. '-' → logprob: -1.2612897157669067
    3. '0' → logprob: -2.636289596557617
    4. 's' → logprob: -2.886289596557617
    5. ' ' → logprob: -3.011289596557617
    6. 'ation' → logprob: -3.136289596557617
    7. ' s' → logprob: -3.886289596557617
    8. ' -' → logprob: -3.886289596557617
    9. '+' → logprob: -4.261289596557617
    10. '=' → logprob: -4.511289596557617

Token 333: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2376043796539307
    2. '=' → logprob: -1.3626043796539307
    3. 's' → logprob: -2.1126043796539307
    4. ' =' → logprob: -2.2376043796539307
    5. ' -' → logprob: -2.3626043796539307
    6. '(s' → logprob: -2.9876043796539307
    7. '0' → logprob: -3.4876043796539307
    8. ' -=' → logprob: -4.612604141235352
    9. '       ' → logprob: -4.737604141235352
    10. ' s' → logprob: -4.737604141235352

Token 334: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7672381401062012
    2. '(s' → logprob: -0.8922381401062012
    3. '-' → logprob: -2.267238140106201
    4. ' -' → logprob: -5.392238140106201
    5. '0' → logprob: -5.517238140106201
    6. '(' → logprob: -5.892238140106201
    7. '=' → logprob: -6.017238140106201
    8. '       ' → logprob: -6.142238140106201
    9. ' s' → logprob: -6.517238140106201
    10. ' à' → logprob: -6.892238140106201

Token 335: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.029531998559832573
    2. '-' → logprob: -4.029531955718994
    3. ' -' → logprob: -4.779531955718994
    4. '-base' → logprob: -6.779531955718994
    5. 'based' → logprob: -7.029531955718994
    6. 'def' → logprob: -8.529532432556152
    7. '_based' → logprob: -9.154532432556152
    8. ')-' → logprob: -9.404532432556152
    9. ')' → logprob: -10.154532432556152
    10. ' à' → logprob: -10.154532432556152

Token 336: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1920708417892456
    2. 's' → logprob: -1.8170708417892456
    3. '       ' → logprob: -1.8170708417892456
    4. ' à' → logprob: -1.8170708417892456
    5. ' s' → logprob: -2.692070960998535
    6. '-' → logprob: -3.067070960998535
    7. '   ' → logprob: -3.567070960998535
    8. ',' → logprob: -3.942070960998535
    9. ' ' → logprob: -4.317070960998535
    10. ')' → logprob: -4.442070960998535

Token 337: 'comm' (ID: 2280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2758217453956604
    2. ')' → logprob: -1.7758216857910156
    3. ' s' → logprob: -3.1508216857910156
    4. '-' → logprob: -3.9008216857910156
    5. ' -' → logprob: -5.275821685791016
    6. ' )' → logprob: -6.150821685791016
    7. ')-' → logprob: -7.650821685791016
    8. '0' → logprob: -8.025821685791016
    9. ' ' → logprob: -8.775821685791016
    10. ')s' → logprob: -8.775821685791016

Token 338: 'ence' (ID: 1082)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6009806394577026
    2. 'ence' → logprob: -1.4759806394577026
    3. 'ent' → logprob: -2.100980758666992
    4. '-' → logprob: -2.600980758666992
    5. 'encé' → logprob: -3.975980758666992
    6. 'en' → logprob: -6.475980758666992
    7. 'enç' → logprob: -6.475980758666992
    8. 'ents' → logprob: -7.100980758666992
    9. 'encent' → logprob: -7.225980758666992
    10. 'encer' → logprob: -7.600980758666992

Token 339: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8020710945129395
    2. '-' → logprob: -1.1770710945129395
    3. ' à' → logprob: -1.9270710945129395
    4. 'à' → logprob: -2.9270710945129395
    5. ')' → logprob: -4.1770710945129395
    6. '0' → logprob: -5.0520710945129395
    7. ' par' → logprob: -5.5520710945129395
    8. 'from' → logprob: -5.5520710945129395
    9. '       ' → logprob: -5.8020710945129395
    10. ' -' → logprob: -6.0520710945129395

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10348575562238693
    2. '1' → logprob: -2.3534858226776123
    3. ' ' → logprob: -5.728485584259033
    4. 's' → logprob: -11.478486061096191
    5. '```' → logprob: -12.478486061096191
    6. ')' → logprob: -12.978486061096191
    7. '   ' → logprob: -13.103486061096191
    8. ' s' → logprob: -13.353486061096191
    9. '-' → logprob: -14.228486061096191
    10. 'zero' → logprob: -14.728486061096191

Token 341: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931619048118591
    2. '1' → logprob: -0.6931619048118591
    3. ' ' → logprob: -11.443161964416504
    4. 's' → logprob: -13.193161964416504
    5. '   ' → logprob: -13.818161964416504
    6. 'zero' → logprob: -14.318161964416504
    7. '```' → logprob: -15.068161964416504
    8. '-' → logprob: -16.693161010742188
    9. ')' → logprob: -16.943161010742188
    10. '=' → logprob: -17.318161010742188

Token 342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014628469944000244
    2. '-' → logprob: -4.5146284103393555
    3. '       ' → logprob: -6.6396284103393555
    4. ' -' → logprob: -6.7646284103393555
    5. ' )' → logprob: -7.2646284103393555
    6. '   ' → logprob: -8.764628410339355
    7. ',' → logprob: -8.889628410339355
    8. ')-' → logprob: -9.764628410339355
    9. '           ' → logprob: -11.264628410339355
    10. '-)' → logprob: -11.264628410339355

Token 343: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3944236934185028
    2. '-' → logprob: -1.5194237232208252
    3. ',' → logprob: -3.394423723220825
    4. ' to' → logprob: -3.519423723220825
    5. ')' → logprob: -4.269423484802246
    6. ' -' → logprob: -4.269423484802246
    7. 's' → logprob: -4.644423484802246
    8. '[' → logprob: -6.269423484802246
    9. '   ' → logprob: -6.644423484802246
    10. 'to' → logprob: -7.019423484802246

Token 344: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.40293174982070923
    2. '0' → logprob: -1.6529316902160645
    3. 's' → logprob: -2.1529316902160645
    4. ' ' → logprob: -3.9029316902160645
    5. '-' → logprob: -6.2779316902160645
    6. ' -' → logprob: -6.7779316902160645
    7. ' zero' → logprob: -7.7779316902160645
    8. '1' → logprob: -9.277932167053223
    9. '   ' → logprob: -10.152932167053223
    10. '_' → logprob: -10.402932167053223

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010981805389747024
    2. ' ' → logprob: -7.001098155975342
    3. '-' → logprob: -9.2510986328125
    4. 's' → logprob: -10.2510986328125
    5. ' zero' → logprob: -10.8760986328125
    6. 'zero' → logprob: -10.8760986328125
    7. ' s' → logprob: -11.7510986328125
    8. ' -' → logprob: -12.6260986328125
    9. '-zero' → logprob: -13.2510986328125
    10. ' zéro' → logprob: -13.2510986328125

Token 346: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.07119671255350113
    2. '-' → logprob: -2.6961967945098877
    3. 'based' → logprob: -7.321196556091309
    4. ' -' → logprob: -8.321196556091309
    5. '-index' → logprob: -8.696196556091309
    6. ')-' → logprob: -9.696196556091309
    7. '-base' → logprob: -10.321196556091309
    8. ')' → logprob: -10.696196556091309
    9. '-
' → logprob: -10.821196556091309
    10. '_based' → logprob: -11.321196556091309

Token 347: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2387670874595642
    2. ',' → logprob: -2.488767147064209
    3. 's' → logprob: -2.613767147064209
    4. ')' → logprob: -3.238767147064209
    5. ' s' → logprob: -5.238767147064209
    6. '(s' → logprob: -5.988767147064209
    7. ' (' → logprob: -5.988767147064209
    8. '<|end|>' → logprob: -6.113767147064209
    9. '        
' → logprob: -6.863767147064209
    10. '(' → logprob: -7.863767147064209

Token 348: 'comm' (ID: 2280)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3878065347671509
    2. 's' → logprob: -1.1378065347671509
    3. ')' → logprob: -7.137806415557861
    4. ' )' → logprob: -9.13780689239502
    5. ' t' → logprob: -11.01280689239502
    6. ' ' → logprob: -12.13780689239502
    7. ')s' → logprob: -12.76280689239502
    8. '	s' → logprob: -13.38780689239502
    9. 't' → logprob: -13.38780689239502
    10. ' ' → logprob: -13.51280689239502

Token 349: 'ence' (ID: 1082)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07763773947954178
    2. 'ex' → logprob: -4.202637672424316
    3. 'encé' → logprob: -4.577637672424316
    4. 'ence' → logprob: -4.702637672424316
    5. ')' → logprob: -4.827637672424316
    6. 'enç' → logprob: -4.952637672424316
    7. '=' → logprob: -5.327637672424316
    8. 'en' → logprob: -5.702637672424316
    9. 'encing' → logprob: -5.827637672424316
    10. 'encer' → logprob: -5.952637672424316

Token 350: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3332481384277344
    2. '=' → logprob: -1.9582481384277344
    3. 'à' → logprob: -2.2082481384277344
    4. '-' → logprob: -4.208248138427734
    5. ')' → logprob: -4.833248138427734
    6. '       ' → logprob: -5.958248138427734
    7. '   ' → logprob: -6.333248138427734
    8. ' =' → logprob: -6.833248138427734
    9. 's' → logprob: -7.458248138427734
    10. '-à' → logprob: -7.708248138427734

Token 351: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. 's' → logprob: -15.875096321105957
    4. '```' → logprob: -17.25009536743164
    5. 'zero' → logprob: -17.75009536743164
    6. ' s' → logprob: -18.00009536743164
    7. ' zero' → logprob: -18.50009536743164
    8. ' zéro' → logprob: -19.25009536743164
    9. '   ' → logprob: -19.75009536743164
    10. '1' → logprob: -20.37509536743164

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.00000286102295
    4. ' s' → logprob: -18.000001907348633
    5. '```' → logprob: -18.125001907348633
    6. '1' → logprob: -18.875001907348633
    7. 'zero' → logprob: -18.875001907348633
    8. '
' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '-' → logprob: -19.875001907348633

Token 353: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13000452518463135
    2. ')
' → logprob: -2.130004405975342
    3. '       ' → logprob: -5.880004405975342
    4. '
' → logprob: -10.0050048828125
    5. ' )' → logprob: -10.1300048828125
    6. ',' → logprob: -10.1300048828125
    7. ')s' → logprob: -10.3800048828125
    8. ' )
' → logprob: -10.7550048828125
    9. '),' → logprob: -11.0050048828125
    10. ')
' → logprob: -11.2550048828125

Token 354: ' python' (ID: 22752)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7032744288444519
    2. 's' → logprob: -1.2032744884490967
    3. '       ' → logprob: -2.0782744884490967
    4. ' s' → logprob: -2.7032744884490967
    5. ')
' → logprob: -5.453274250030518
    6. ' )' → logprob: -5.828274250030518
    7. '   ' → logprob: -6.328274250030518
    8. ' -' → logprob: -7.328274250030518
    9. 't' → logprob: -7.703274250030518
    10. '-' → logprob: -7.703274250030518

Token 355: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008593888953328133
    2. '-' → logprob: -5.633594036102295
    3. ')-' → logprob: -5.883594036102295
    4. ' -' → logprob: -7.008594036102295
    5. ' )' → logprob: -7.758594036102295
    6. '[' → logprob: -8.008593559265137
    7. 's' → logprob: -8.758593559265137
    8. '   ' → logprob: -9.008593559265137
    9. '-)' → logprob: -10.258593559265137
    10. ')
' → logprob: -10.258593559265137

Token 356: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032984360586851835
    2. ')
' → logprob: -5.753298282623291
    3. '       ' → logprob: -10.62829875946045
    4. ')s' → logprob: -10.62829875946045
    5. ' )' → logprob: -10.87829875946045
    6. 's' → logprob: -11.25329875946045
    7. '   ' → logprob: -11.62829875946045
    8. '):' → logprob: -12.00329875946045
    9. '):
' → logprob: -12.37829875946045
    10. ')
' → logprob: -12.50329875946045

Token 357: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3283306360244751
    2. '       ' → logprob: -1.578330636024475
    3. ' s' → logprob: -2.8283305168151855
    4. '        
' → logprob: -4.7033305168151855
    5. ' 
' → logprob: -6.2033305168151855
    6. '   ' → logprob: -6.7033305168151855
    7. '    
' → logprob: -7.2033305168151855
    8. '<|end|>' → logprob: -7.7033305168151855
    9. ')' → logprob: -8.578330993652344
    10. ',' → logprob: -8.578330993652344

Token 358: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.272588312625885
    2. 's' (adapté à ' s') → logprob: -1.5225882530212402
    3. '       ' → logprob: -3.8975882530212402
    4. '   ' → logprob: -9.647588729858398
    5. '	s' → logprob: -10.147588729858398
    6. ' 
' → logprob: -10.647588729858398
    7. '        
' → logprob: -11.647588729858398
    8. '    ' → logprob: -12.022588729858398
    9. '_s' → logprob: -12.522588729858398
    10. ' ' → logprob: -12.647588729858398

Token 359: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14202521741390228
    2. ' -=' → logprob: -2.3920252323150635
    3. ' -' → logprob: -3.5170252323150635
    4. '-=' → logprob: -4.767024993896484
    5. '=' → logprob: -6.392024993896484
    6. 's' → logprob: -7.767024993896484
    7. ' =' → logprob: -8.142024993896484
    8. ',' → logprob: -8.392024993896484
    9. '   ' → logprob: -9.642024993896484
    10. ' ' → logprob: -9.892024993896484

Token 360: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04301837086677551
    2. 't' → logprob: -3.168018341064453
    3. ' ' → logprob: -11.918018341064453
    4. 's' → logprob: -12.293018341064453
    5. ' ' → logprob: -12.418018341064453
    6. ' 
' → logprob: -13.418018341064453
    7. ' s' → logprob: -14.418018341064453
    8. '_t' → logprob: -14.668018341064453
    9. '<|end|>' → logprob: -14.668018341064453
    10. ' ' → logprob: -15.293018341064453

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871496021747589
    2. ' =' → logprob: -1.1371495723724365
    3. ' -=' → logprob: -8.887149810791016
    4. '-=' → logprob: -9.012149810791016
    5. '-' → logprob: -11.512149810791016
    6. '=s' → logprob: -12.012149810791016
    7. 's' → logprob: -14.637149810791016
    8. '   ' → logprob: -15.012149810791016
    9. '[' → logprob: -15.637149810791016
    10. '=int' → logprob: -15.762149810791016

Token 362: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750952497124672
    2. ' s' → logprob: -3.5297510623931885
    3. '   ' → logprob: -14.65475082397461
    4. '	s' → logprob: -17.15475082397461
    5. '(s' → logprob: -18.02975082397461
    6. '_s' → logprob: -19.02975082397461
    7. ' ' → logprob: -19.15475082397461
    8. '{s' → logprob: -19.15475082397461
    9. 'int' → logprob: -19.65475082397461
    10. 't' → logprob: -19.65475082397461

Token 363: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687387108802795
    2. ' -' → logprob: -1.1368738412857056
    3. ' ' → logprob: -13.386874198913574
    4. '   ' → logprob: -14.386874198913574
    5. 's' → logprob: -15.261874198913574
    6. '–' → logprob: -16.261873245239258
    7. ' ' → logprob: -16.511873245239258
    8. '−' → logprob: -16.511873245239258
    9. '1' → logprob: -16.636873245239258
    10. '[' → logprob: -17.261873245239258

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -19.875011444091797
    4. '   ' → logprob: -20.000011444091797
    5. '<|end|>' → logprob: -20.625011444091797
    6. '１' → logprob: -21.750011444091797
    7. '`' → logprob: -22.250011444091797
    8. '۱' → logprob: -22.625011444091797
    9. '2' → logprob: -22.750011444091797
    10. ',' → logprob: -22.875011444091797

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035846480750478804
    2. ',t' → logprob: -8.125358581542969
    3. ' ,' → logprob: -9.750358581542969
    4. ',
' → logprob: -12.625358581542969
    5. 't' → logprob: -14.125358581542969
    6. ' t' → logprob: -16.37535858154297
    7. ',s' → logprob: -17.00035858154297
    8. 's' → logprob: -17.37535858154297
    9. '‌,' → logprob: -18.25035858154297
    10. ',
' → logprob: -18.25035858154297

Token 366: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931471824645996
    2. ' t' → logprob: -0.6931471824645996
    3. 's' → logprob: -18.068147659301758
    4. '	t' → logprob: -18.318147659301758
    5. ' ' → logprob: -19.193147659301758
    6. '`t' → logprob: -19.568147659301758
    7. ' ' → logprob: -19.693147659301758
    8. ' s' → logprob: -19.818147659301758
    9. 'T' → logprob: -20.693147659301758
    10. '_t' → logprob: -21.068147659301758

Token 367: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.3358446166384965e-05
    2. ' -' → logprob: -9.875053405761719
    3. 't' → logprob: -13.750053405761719
    4. '<|end|>' → logprob: -14.875053405761719
    5. '1' → logprob: -16.62505340576172
    6. 's' → logprob: -16.62505340576172
    7. '<|end|>' → logprob: -16.75005340576172
    8. '[' → logprob: -17.37505340576172
    9. '–' → logprob: -17.50005340576172
    10. ' t' → logprob: -17.50005340576172

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -15.375001907348633
    4. '<|end|>' → logprob: -18.875001907348633
    5. 's' → logprob: -19.250001907348633
    6. 't' → logprob: -19.750001907348633
    7. '۱' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.187501907348633
    10. '１' → logprob: -20.312501907348633

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10472029447555542
    2. '
' → logprob: -2.3547203540802
    3. '   ' → logprob: -5.979720115661621
    4. 'adj' → logprob: -6.604720115661621
    5. '<|end|>' → logprob: -8.354720115661621
    6. '        
' → logprob: -8.854720115661621
    7. ' adj' → logprob: -9.229720115661621
    8. '    
' → logprob: -9.854720115661621
    9. '
' → logprob: -10.854720115661621
    10. ',
' → logprob: -11.229720115661621

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16433565318584442
    2. '   ' → logprob: -2.0393357276916504
    3. '
' → logprob: -4.53933572769165
    4. 'adj' → logprob: -4.66433572769165
    5. ' adj' → logprob: -7.66433572769165
    6. '    
' → logprob: -7.91433572769165
    7. '        
' → logprob: -8.039335250854492
    8. '```' → logprob: -10.539335250854492
    9. '  
' → logprob: -11.039335250854492
    10. 'out' → logprob: -11.039335250854492

Token 371: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4083876311779022
    2. '       ' → logprob: -1.1583876609802246
    3. '   ' → logprob: -4.283387660980225
    4. ' adj' → logprob: -5.158387660980225
    5. 'out' → logprob: -7.158387660980225
    6. '
' → logprob: -7.158387660980225
    7. '        
' → logprob: -9.533387184143066
    8. 'ad' → logprob: -10.408387184143066
    9. ' out' → logprob: -11.033387184143066
    10. '    
' → logprob: -11.283387184143066

Token 372: ' On' (ID: 2160)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.002396936295554042
    2. ' adj' → logprob: -6.752397060394287
    3. '       ' → logprob: -7.252397060394287
    4. 'out' → logprob: -7.627397060394287
    5. '   ' → logprob: -10.502396583557129
    6. ' out' → logprob: -13.377396583557129
    7. '#' → logprob: -15.127396583557129
    8. '        
' → logprob: -15.502396583557129
    9. '```' → logprob: -15.752396583557129
    10. 'ad' → logprob: -16.127397537231445

Token 373: ' ajoute' (ID: 91611)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.3870454430580139
    2. 'adj' → logprob: -1.1370453834533691
    3. '.append' → logprob: -9.387045860290527
    4. 'append' → logprob: -9.887045860290527
    5. ' append' → logprob: -11.637045860290527
    6. '[' → logprob: -12.262045860290527
    7. 'Adj' → logprob: -12.512045860290527
    8. 'ad' → logprob: -12.637045860290527
    9. '.add' → logprob: -12.762045860290527
    10. '.ad' → logprob: -13.012045860290527

Token 374: ' le' (ID: 505)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31375589966773987
    2. 't' → logprob: -1.3137558698654175
    3. ' s' → logprob: -8.063755989074707
    4. 's' → logprob: -9.063755989074707
    5. 'adj' → logprob: -10.438755989074707
    6. ' adj' → logprob: -11.938755989074707
    7. '(t' → logprob: -11.938755989074707
    8. '	t' → logprob: -12.438755989074707
    9. '<|end|>' → logprob: -12.563755989074707
    10. '   ' → logprob: -12.938755989074707

Token 375: ' sommet' (ID: 130502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06196846812963486
    2. ' t' → logprob: -2.8119685649871826
    3. 's' → logprob: -15.561968803405762
    4. '	t' → logprob: -15.561968803405762
    5. 'token' → logprob: -15.811968803405762
    6. ' ' → logprob: -16.561967849731445
    7. ' voisin' → logprob: -16.561967849731445
    8. '_t' → logprob: -17.311967849731445
    9. '   ' → logprob: -17.311967849731445
    10. ' token' → logprob: -17.561967849731445

Token 376: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.30302271246910095
    2. 't' → logprob: -1.6780227422714233
    3. 's' → logprob: -3.178022623062134
    4. ' s' → logprob: -4.053022861480713
    5. '[t' → logprob: -5.178022861480713
    6. 'adj' → logprob: -5.553022861480713
    7. ' adj' → logprob: -6.053022861480713
    8. '       ' → logprob: -6.553022861480713
    9. '   ' → logprob: -6.678022861480713
    10. '[s' → logprob: -8.178022384643555

Token 377: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.437278151512146
    2. ' à' → logprob: -1.437278151512146
    3. '       ' → logprob: -2.3122782707214355
    4. ' to' → logprob: -2.5622782707214355
    5. '   ' → logprob: -2.8122782707214355
    6. 's' → logprob: -3.1872782707214355
    7. ']' → logprob: -3.1872782707214355
    8. '<|end|>' → logprob: -3.1872782707214355
    9. 'to' → logprob: -3.4372782707214355
    10. ' dans' → logprob: -3.4372782707214355

Token 378: ' voisin' (ID: 145411)
  Prédit: ' voisin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.012006948702037334
    2. ' neighbor' → logprob: -5.387006759643555
    3. ' un' → logprob: -6.262006759643555
    4. 'vo' → logprob: -6.762006759643555
    5. ' adj' → logprob: -7.137006759643555
    6. 'neighbor' → logprob: -7.137006759643555
    7. ' voisins' → logprob: -7.637006759643555
    8. ' vois' → logprob: -7.637006759643555
    9. 'adj' → logprob: -8.012006759643555
    10. ' sommet' → logprob: -8.262006759643555

Token 379: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7157859802246094
    2. 's' → logprob: -1.7157859802246094
    3. '[s' → logprob: -1.9657859802246094
    4. '[' → logprob: -2.9657859802246094
    5. 'adj' → logprob: -3.3407859802246094
    6. '       ' → logprob: -3.5907859802246094
    7. '   ' → logprob: -3.7157859802246094
    8. 'de' → logprob: -3.7157859802246094
    9. ' adj' → logprob: -3.9657859802246094
    10. ' [' → logprob: -5.715785980224609

Token 380: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08726288378238678
    2. ' s' → logprob: -3.0872628688812256
    3. 'adj' → logprob: -3.8372628688812256
    4. ' sommet' → logprob: -4.212263107299805
    5. 'som' → logprob: -6.587263107299805
    6. ' adj' → logprob: -8.712263107299805
    7. '	s' → logprob: -11.837263107299805
    8. ' som' → logprob: -12.212263107299805
    9. '[s' → logprob: -13.212263107299805
    10. '```' → logprob: -13.212263107299805

Token 381: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4743170142173767
    2. ' s' → logprob: -0.9743170142173767
    3. '[s' → logprob: -8.349316596984863
    4. ' [' → logprob: -13.974316596984863
    5. '[' → logprob: -14.224316596984863
    6. '    ' → logprob: -14.599316596984863
    7. '	s' → logprob: -14.849316596984863
    8. '_s' → logprob: -15.099316596984863
    9. ' ' → logprob: -15.599316596984863
    10. '   ' → logprob: -15.599316596984863

Token 382: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2954656481742859
    2. '[s' → logprob: -2.1704657077789307
    3. '[' → logprob: -2.4204657077789307
    4. '   ' → logprob: -3.2954657077789307
    5. 'adj' → logprob: -4.795465469360352
    6. ' adj' → logprob: -5.295465469360352
    7. 's' → logprob: -7.295465469360352
    8. '           ' → logprob: -7.420465469360352
    9. '.append' → logprob: -7.670465469360352
    10. ']' → logprob: -8.545465469360352

Token 383: 'ar' (ID: 277)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.3523644506931305
    2. 'adj' → logprob: -1.227364420890808
    3. ' s' → logprob: -5.852364540100098
    4. ')' → logprob: -7.852364540100098
    5. 's' → logprob: -8.102364540100098
    6. ' )' → logprob: -8.477364540100098
    7. '   ' → logprob: -9.852364540100098
    8. '           ' → logprob: -10.602364540100098
    9. '       ' → logprob: -11.102364540100098
    10. ' ' → logprob: -11.602364540100098

Token 384: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9606707096099854
    2. 'g' → logprob: -1.4606707096099854
    3. 'adj' → logprob: -1.9606707096099854
    4. 'c' → logprob: -2.5856707096099854
    5. 'e' → logprob: -3.5856707096099854
    6. 'ête' → logprob: -3.8356707096099854
    7. ' adj' → logprob: -3.9606707096099854
    8. 'gs' → logprob: -4.335670471191406
    9. '[' → logprob: -4.585670471191406
    10. 'd' → logprob: -4.710670471191406

Token 385: ' sort' (ID: 4506)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.08625752478837967
    2. 's' → logprob: -3.7112574577331543
    3. '   ' → logprob: -3.8362574577331543
    4. '[' → logprob: -3.9612574577331543
    5. ' s' → logprob: -5.086257457733154
    6. '.append' → logprob: -5.336257457733154
    7. ')' → logprob: -6.336257457733154
    8. ' adj' → logprob: -6.711257457733154
    9. '       ' → logprob: -6.711257457733154
    10. '[source' → logprob: -7.711257457733154

Token 386: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.04209187254309654
    2. '   ' → logprob: -3.7920918464660645
    3. 'ant' → logprob: -4.4170918464660645
    4. ')' → logprob: -6.2920918464660645
    5. 'nante' → logprob: -6.6670918464660645
    6. 'ing' → logprob: -7.5420918464660645
    7. '       ' → logprob: -7.5420918464660645
    8. ']' → logprob: -8.042092323303223
    9. ',' → logprob: -8.417092323303223
    10. 'ente' → logprob: -8.417092323303223

Token 387: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5088199973106384
    2. '[s' → logprob: -1.5088200569152832
    3. '       ' → logprob: -2.758820056915283
    4. '[' → logprob: -2.883820056915283
    5. '   ' → logprob: -3.258820056915283
    6. ']' → logprob: -4.883820056915283
    7. 's' → logprob: -4.883820056915283
    8. ' )' → logprob: -7.008820056915283
    9. '           ' → logprob: -7.508820056915283
    10. '),' → logprob: -7.508820056915283

Token 388: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4958914816379547
    2. 's' → logprob: -1.2458914518356323
    3. 'adj' → logprob: -2.495891571044922
    4. ' adj' → logprob: -3.870891571044922
    5. ')' → logprob: -11.995891571044922
    6. '    ' → logprob: -12.370891571044922
    7. ' ' → logprob: -12.370891571044922
    8. ' )' → logprob: -12.870891571044922
    9. '   ' → logprob: -13.620891571044922
    10. '_s' → logprob: -13.870891571044922

Token 389: ' vers' (ID: 3640)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1455341875553131
    2. '[' → logprob: -3.2705342769622803
    3. ']' → logprob: -3.5205342769622803
    4. '.append' → logprob: -3.6455342769622803
    5. '   ' → logprob: -3.7705342769622803
    6. '       ' → logprob: -5.270534038543701
    7. '])' → logprob: -5.520534038543701
    8. ').' → logprob: -5.895534038543701
    9. ' )' → logprob: -6.145534038543701
    10. ',' → logprob: -6.770534038543701

Token 390: ' t' (ID: 260)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.678587794303894
    2. ' t' → logprob: -0.928587794303894
    3. 's' → logprob: -2.6785879135131836
    4. 't' → logprob: -3.5535879135131836
    5. ')' → logprob: -9.178587913513184
    6. 'adj' → logprob: -9.303587913513184
    7. ' )' → logprob: -9.928587913513184
    8. ' adj' → logprob: -11.053587913513184
    9. ')t' → logprob: -12.428587913513184
    10. ' ' → logprob: -12.678587913513184

Token 391: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07189631462097168
    2. '       ' → logprob: -2.6968963146209717
    3. ')
' → logprob: -7.446896553039551
    4. '   ' → logprob: -7.696896553039551
    5. ').' → logprob: -7.821896553039551
    6. ' )' → logprob: -8.19689655303955
    7. ']' → logprob: -9.07189655303955
    8. '[' → logprob: -10.19689655303955
    9. '.append' → logprob: -10.94689655303955
    10. '),' → logprob: -11.44689655303955

Token 392: '       ' (ID: 309)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6054031848907471
    2. ' adj' → logprob: -1.355403184890747
    3. '       ' → logprob: -1.855403184890747
    4. '   ' → logprob: -3.230403184890747
    5. '
' → logprob: -8.980402946472168
    6. '        
' → logprob: -9.480402946472168
    7. '    
' → logprob: -10.605402946472168
    8. '(adj' → logprob: -10.730402946472168
    9. '           ' → logprob: -10.855402946472168
    10. '    ' → logprob: -11.230402946472168

Token 393: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.03371774032711983
    2. ' adj' → logprob: -3.408717632293701
    3. '       ' → logprob: -9.90871810913086
    4. '   ' → logprob: -10.90871810913086
    5. 'ad' → logprob: -12.90871810913086
    6. '(adj' → logprob: -14.53371810913086
    7. '
' → logprob: -15.65871810913086
    8. '    ' → logprob: -15.90871810913086
    9. '```' → logprob: -16.40871810913086
    10. 'adm' → logprob: -16.53371810913086

Token 394: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.125004768371582
    3. 's' → logprob: -13.750004768371582
    4. ' L' → logprob: -13.875004768371582
    5. 'LS' → logprob: -15.875004768371582
    6. 'Ls' → logprob: -16.000003814697266
    7. 'LObject' → logprob: -16.375003814697266
    8. 'adj' → logprob: -16.625003814697266
    9. 'List' → logprob: -17.125003814697266
    10. '[L' → logprob: -17.125003814697266

Token 395: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.125000953674316
    3. 's' → logprob: -15.000000953674316
    4. ' [' → logprob: -15.375000953674316
    5. '   ' → logprob: -18.375001907348633
    6. '```' → logprob: -18.625001907348633
    7. '[S' → logprob: -20.125001907348633
    8. '[i' → logprob: -20.250001907348633
    9. '       ' → logprob: -20.375001907348633
    10. '\[' → logprob: -20.750001907348633

Token 396: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0012336840154603124
    2. '.append' → logprob: -6.7512335777282715
    3. ']' → logprob: -10.25123405456543
    4. ' ].' → logprob: -11.75123405456543
    5. '[s' → logprob: -11.87623405456543
    6. '.' → logprob: -12.12623405456543
    7. '   ' → logprob: -12.50123405456543
    8. ').' → logprob: -13.37623405456543
    9. 'append' → logprob: -14.12623405456543
    10. '[' → logprob: -14.25123405456543

Token 397: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -16.5
    4. 'appen' → logprob: -19.75
    5. '_append' → logprob: -20.5
    6. '	append' → logprob: -20.625
    7. 'app' → logprob: -20.75
    8. 'Append' → logprob: -22.75
    9. 'add' → logprob: -23.375
    10. 'push' → logprob: -24.75

Token 398: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -6.630610641877865e-06
    2. 't' → logprob: -12.250006675720215
    3. '(' → logprob: -13.250006675720215
    4. ' (' → logprob: -20.0000057220459
    5. '	t' → logprob: -20.6250057220459
    6. '(
' → logprob: -20.7500057220459
    7. ' t' → logprob: -21.1250057220459
    8. '(T' → logprob: -22.8750057220459
    9. '[t' → logprob: -23.1250057220459
    10. '((' → logprob: -23.2500057220459

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.227250610711053e-05
    2. ')
' → logprob: -10.500041961669922
    3. ' )' → logprob: -11.250041961669922
    4. '       ' → logprob: -14.000041961669922
    5. '<|end|>' → logprob: -14.750041961669922
    6. '   ' → logprob: -16.125041961669922
    7. '[' → logprob: -16.625041961669922
    8. ')

' → logprob: -17.000041961669922
    9. '),' → logprob: -17.375041961669922
    10. ')#' → logprob: -18.250041961669922

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022118736524134874
    2. 'out' → logprob: -6.252212047576904
    3. '
' → logprob: -9.127211570739746
    4. ' out' → logprob: -9.502211570739746
    5. '   ' → logprob: -9.877211570739746
    6. '        
' → logprob: -10.252211570739746
    7. '           ' → logprob: -12.377211570739746
    8. '	out' → logprob: -13.377211570739746
    9. '      ' → logprob: -13.627211570739746
    10. '    
' → logprob: -13.877211570739746

Token 401: ' #' (ID: 1069)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.07721938192844391
    2. '       ' → logprob: -3.0772194862365723
    3. ' out' → logprob: -3.5772194862365723
    4. '   ' → logprob: -8.577219009399414
    5. '	out' → logprob: -10.327219009399414
    6. '
' → logprob: -10.827219009399414
    7. '[out' → logprob: -11.452219009399414
    8. ' ' → logprob: -12.202219009399414
    9. '```' → logprob: -12.952219009399414
    10. '        
' → logprob: -12.952219009399414

Token 402: ' Pour' (ID: 13931)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.20244863629341125
    2. 'out' → logprob: -1.7024486064910889
    3. ' adj' → logprob: -7.952448844909668
    4. '   ' → logprob: -8.202448844909668
    5. '       ' → logprob: -8.202448844909668
    6. ' out' → logprob: -9.077448844909668
    7. 'ad' → logprob: -12.327448844909668
    8. '           ' → logprob: -13.077448844909668
    9. 'Adj' → logprob: -13.452448844909668
    10. '```' → logprob: -13.702448844909668

Token 403: ' la' (ID: 557)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.39063429832458496
    2. ' adj' → logprob: -1.140634298324585
    3. 'out' → logprob: -6.140634536743164
    4. ' out' → logprob: -6.640634536743164
    5. 't' → logprob: -8.390634536743164
    6. 's' → logprob: -11.265634536743164
    7. ' ' → logprob: -11.265634536743164
    8. 'ad' → logprob: -11.515634536743164
    9. ' t' → logprob: -11.890634536743164
    10. 'Adj' → logprob: -12.265634536743164

Token 404: ' liste' (ID: 31719)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.160507932305336
    2. ' adj' → logprob: -1.9105079174041748
    3. 't' → logprob: -9.035508155822754
    4. 'out' → logprob: -10.285508155822754
    5. 'rev' → logprob: -10.660508155822754
    6. ' out' → logprob: -10.660508155822754
    7. ' t' → logprob: -10.785508155822754
    8. ' adjacency' → logprob: -10.910508155822754
    9. 's' → logprob: -11.410508155822754
    10. 'Adj' → logprob: -11.535508155822754

Token 405: ' d' (ID: 272)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0010678203543648124
    2. ' adj' → logprob: -7.376067638397217
    3. 'Adj' → logprob: -9.001068115234375
    4. 'd' → logprob: -9.126068115234375
    5. 'Rev' → logprob: -9.751068115234375
    6. '_adj' → logprob: -9.751068115234375
    7. '_rev' → logprob: -10.001068115234375
    8. 'rev' → logprob: -10.876068115234375
    9. '_reverse' → logprob: -11.626068115234375
    10. 'Re' → logprob: -12.001068115234375

Token 406: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -7.159660890465602e-05
    2. ' adj' → logprob: -10.12507152557373
    3. 'Adj' → logprob: -11.00007152557373
    4. 'ad' → logprob: -12.37507152557373
    5. 'aj' → logprob: -13.00007152557373
    6. ''ad' → logprob: -13.00007152557373
    7. 'Rev' → logprob: -13.00007152557373
    8. 'rev' → logprob: -13.25007152557373
    9. 'j' → logprob: -15.12507152557373
    10. '_adj' → logprob: -15.25007152557373

Token 407: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000344640837283805
    2. 'jac' → logprob: -8.250344276428223
    3. 'J' → logprob: -9.625344276428223
    4. '[j' → logprob: -12.375344276428223
    5. 'adj' → logprob: -13.000344276428223
    6. 'jc' → logprob: -13.125344276428223
    7. 'd' → logprob: -13.250344276428223
    8. ' j' → logprob: -13.500344276428223
    9. 'L' → logprob: -13.625344276428223
    10. 'dj' → logprob: -13.625344276428223

Token 408: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.015479790978133678
    2. 'L' → logprob: -4.390479564666748
    3. 'es' → logprob: -6.765479564666748
    4. 'e' → logprob: -7.265479564666748
    5. 'ense' → logprob: -8.265480041503906
    6. 'ce' → logprob: -8.890480041503906
    7. 'ance' → logprob: -9.140480041503906
    8. 'Rev' → logprob: -9.265480041503906
    9. 'ences' → logprob: -10.015480041503906
    10. 'Liste' → logprob: -10.140480041503906

Token 409: ' invers' (ID: 38721)
  Prédit: 'Rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rev' → logprob: -0.013433612883090973
    2. 'rev' → logprob: -4.763433456420898
    3. 'Re' → logprob: -6.638433456420898
    4. 'Reverse' → logprob: -7.138433456420898
    5. '_rev' → logprob: -7.513433456420898
    6. 'Adj' → logprob: -7.513433456420898
    7. 'adj' → logprob: -7.513433456420898
    8. '[' → logprob: -8.263433456420898
    9. '[s' → logprob: -8.513433456420898
    10. 'reverse' → logprob: -8.763433456420898

Token 410: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0012273734901100397
    2. 'e' → logprob: -6.876227378845215
    3. '[' → logprob: -10.126227378845215
    4. 'es' → logprob: -10.251227378845215
    5. 'ee' → logprob: -10.251227378845215
    6. 'é' → logprob: -10.751227378845215
    7. '[e' → logprob: -11.376227378845215
    8. 'ated' → logprob: -11.501227378845215
    9. 'ed' → logprob: -11.876227378845215
    10. 'éd' → logprob: -12.376227378845215

Token 411: ',' (ID: 11)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.282920129597187e-05
    2. 't' → logprob: -11.500012397766113
    3. '[' → logprob: -13.250012397766113
    4. 'adj' → logprob: -14.625012397766113
    5. '[s' → logprob: -15.875012397766113
    6. ' [' → logprob: -16.37501335144043
    7. '       ' → logprob: -17.00001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '[T' → logprob: -17.25001335144043
    10. 'Adj' → logprob: -17.87501335144043

Token 412: ' on' (ID: 402)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.22581198811531067
    2. 'adj' → logprob: -1.6008119583129883
    3. '       ' → logprob: -7.850811958312988
    4. '(adj' → logprob: -12.975811958312988
    5. ' ' → logprob: -13.350811958312988
    6. '   ' → logprob: -13.350811958312988
    7. 'ad' → logprob: -14.100811958312988
    8. ' ' → logprob: -14.350811958312988
    9. ' adjunct' → logprob: -14.975811958312988
    10. 'Adj' → logprob: -15.100811958312988

Token 413: ' ajoute' (ID: 91611)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.47412583231925964
    2. 'adj' → logprob: -0.974125862121582
    3. '[' → logprob: -10.349125862121582
    4. 'append' → logprob: -12.349125862121582
    5. '.append' → logprob: -12.724125862121582
    6. 'Adj' → logprob: -12.849125862121582
    7. 'aj' → logprob: -13.349125862121582
    8. 'ad' → logprob: -13.474125862121582
    9. '_adj' → logprob: -14.349125862121582
    10. '```' → logprob: -14.474125862121582

Token 414: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.032257650047540665
    2. ' s' → logprob: -3.532257556915283
    3. '(s' → logprob: -6.157257556915283
    4. 't' → logprob: -8.032258033752441
    5. '(' → logprob: -11.032258033752441
    6. ' t' → logprob: -11.157258033752441
    7. '   ' → logprob: -11.907258033752441
    8. 'adj' → logprob: -12.407258033752441
    9. '[s' → logprob: -12.532258033752441
    10. ' the' → logprob: -12.657258033752441

Token 415: ' comme' (ID: 7971)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.12851150333881378
    2. 'adj' → logprob: -2.878511428833008
    3. '[' → logprob: -3.378511428833008
    4. 't' → logprob: -3.878511428833008
    5. ')' → logprob: -6.253511428833008
    6. '[s' → logprob: -7.003511428833008
    7. ' to' → logprob: -7.128511428833008
    8. ']' → logprob: -7.128511428833008
    9. 'to' → logprob: -7.253511428833008
    10. 'Adj' → logprob: -7.253511428833008

Token 416: ' préd' (ID: 98710)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7419252395629883
    2. 'pred' → logprob: -1.3669252395629883
    3. 'adj' → logprob: -1.7419252395629883
    4. 'pré' → logprob: -2.8669252395629883
    5. ' préd' → logprob: -4.366925239562988
    6. 'pre' → logprob: -4.366925239562988
    7. 'un' → logprob: -4.866925239562988
    8. 'vo' → logprob: -6.116925239562988
    9. ' pred' → logprob: -7.116925239562988
    10. ' adj' → logprob: -8.116925239562988

Token 417: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.14277766644954681
    2. 'ec' → logprob: -2.267777681350708
    3. 'éc' → logprob: -3.767777681350708
    4. 'cess' → logprob: -5.892777442932129
    5. 'adj' → logprob: -7.142777442932129
    6. 'cesse' → logprob: -7.392777442932129
    7. 'ess' → logprob: -7.767777442932129
    8. 'édé' → logprob: -8.142777442932129
    9. 'esseur' → logprob: -8.392777442932129
    10. 'és' → logprob: -8.767777442932129

Token 418: 'cesse' (ID: 120787)
  Prédit: 'cesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cesse' → logprob: -0.0009731597383506596
    2. 'cess' → logprob: -7.625973224639893
    3. 'c' → logprob: -7.750973224639893
    4. 's' → logprob: -10.500972747802734
    5. 'ces' → logprob: -11.250972747802734
    6. 'ss' → logprob: -12.750972747802734
    7. 'esseur' → logprob: -13.000972747802734
    8. 'ccess' → logprob: -13.000972747802734
    9. 'cc' → logprob: -13.375972747802734
    10. 'cé' → logprob: -14.000972747802734

Token 419: 'ur' (ID: 330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006007479038089514
    2. 'ur' → logprob: -5.256007671356201
    3. 'esseur' → logprob: -7.881007671356201
    4. 'ss' → logprob: -8.506007194519043
    5. 'usse' → logprob: -10.131007194519043
    6. '```' → logprob: -10.881007194519043
    7. 'sure' → logprob: -11.131007194519043
    8. 'reur' → logprob: -11.256007194519043
    9. 'se' → logprob: -11.256007194519043
    10. '#' → logprob: -11.506007194519043

Token 420: ' de' (ID: 334)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.020394377410411835
    2. 'adj' → logprob: -4.145394325256348
    3. 't' → logprob: -5.645394325256348
    4. '[' → logprob: -7.895394325256348
    5. ' adj' → logprob: -8.020394325256348
    6. '(t' → logprob: -10.520394325256348
    7. ' [' → logprob: -11.020394325256348
    8. 'for' → logprob: -11.270394325256348
    9. ' at' → logprob: -12.270394325256348
    10. 'to' → logprob: -12.395394325256348

Token 421: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004109627101570368
    2. ' t' → logprob: -5.754109859466553
    3. 'adj' → logprob: -7.004109859466553
    4. ' adj' → logprob: -10.754109382629395
    5. '[t' → logprob: -13.629109382629395
    6. '`t' → logprob: -14.504109382629395
    7. '	t' → logprob: -16.00411033630371
    8. '(t' → logprob: -16.75411033630371
    9. 'Adj' → logprob: -18.25411033630371
    10. ')t' → logprob: -18.25411033630371

Token 422: '.
' (ID: 558)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0029966009315103292
    2. '       ' → logprob: -6.502996444702148
    3. '.' → logprob: -7.002996444702148
    4. '[' → logprob: -8.002996444702148
    5. 'adj' → logprob: -10.127996444702148
    6. 'Adj' → logprob: -10.252996444702148
    7. '   ' → logprob: -10.627996444702148
    8. ')' → logprob: -10.752996444702148
    9. ']' → logprob: -10.877996444702148
    10. ' adj' → logprob: -11.127996444702148

Token 423: '       ' (ID: 309)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00796562060713768
    2. ' adj' → logprob: -5.257965564727783
    3. '       ' → logprob: -6.007965564727783
    4. '   ' → logprob: -8.257966041564941
    5. '```' → logprob: -13.132966041564941
    6. '
' → logprob: -13.257966041564941
    7. '(adj' → logprob: -13.257966041564941
    8. '           ' → logprob: -13.382966041564941
    9. 'ad' → logprob: -14.007966041564941
    10. '        
' → logprob: -14.382966041564941

Token 424: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.0015381926205009222
    2. ' adj' → logprob: -6.501538276672363
    3. '       ' → logprob: -10.251538276672363
    4. '   ' → logprob: -15.126538276672363
    5. 'ad' → logprob: -16.001537322998047
    6. '(adj' → logprob: -16.001537322998047
    7. 'Adj' → logprob: -17.501537322998047
    8. '           ' → logprob: -18.251537322998047
    9. 'adm' → logprob: -18.251537322998047
    10. '
' → logprob: -18.751537322998047

Token 425: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: 0.0
    2. 'l' → logprob: -17.375
    3. '[' → logprob: -19.5
    4. ' L' → logprob: -19.5
    5. 's' → logprob: -20.125
    6. 'LObject' → logprob: -20.25
    7. 't' → logprob: -20.5
    8. 'List' → logprob: -21.5
    9. '<|end|>' → logprob: -21.5
    10. 'Ls' → logprob: -21.625

Token 426: 'Rev' (ID: 46580)
  Prédit: 'Rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rev' → logprob: -2.6776029699249193e-05
    2. '[t' → logprob: -11.00002670288086
    3. '[' → logprob: -11.75002670288086
    4. '[s' → logprob: -13.75002670288086
    5. 'rev' → logprob: -14.75002670288086
    6. 'Re' → logprob: -15.37502670288086
    7. ' Rev' → logprob: -16.12502670288086
    8. '_rev' → logprob: -16.25002670288086
    9. '[T' → logprob: -16.37502670288086
    10. 'Reverse' → logprob: -17.12502670288086

Token 427: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.250006675720215
    3. ' [' → logprob: -14.250006675720215
    4. 't' → logprob: -14.250006675720215
    5. '[s' → logprob: -14.500006675720215
    6. '[T' → logprob: -15.125006675720215
    7. '[target' → logprob: -16.62500762939453
    8. '][' → logprob: -18.00000762939453
    9. ')[' → logprob: -18.62500762939453
    10. '[c' → logprob: -18.87500762939453

Token 428: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00022094044834375381
    2. ').' → logprob: -9.125221252441406
    3. '.append' → logprob: -9.125221252441406
    4. '.' → logprob: -13.250221252441406
    5. ']' → logprob: -14.250221252441406
    6. '}.' → logprob: -15.500221252441406
    7. ' ].' → logprob: -15.750221252441406
    8. 'append' → logprob: -15.875221252441406
    9. '   ' → logprob: -17.375221252441406
    10. 'Append' → logprob: -17.750221252441406

Token 429: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.625000953674316
    3. ' append' → logprob: -15.375000953674316
    4. 'appen' → logprob: -17.0
    5. '	append' → logprob: -19.625
    6. 'Append' → logprob: -20.25
    7. 'app' → logprob: -21.25
    8. 'add' → logprob: -21.625
    9. '_append' → logprob: -22.375
    10. '   ' → logprob: -22.875

Token 430: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.048587825149297714
    2. 's' → logprob: -3.0485877990722656
    3. '(' → logprob: -14.798587799072266
    4. ' s' → logprob: -18.673587799072266
    5. '(
' → logprob: -18.923587799072266
    6. ' (' → logprob: -20.423587799072266
    7. 't' → logprob: -20.548587799072266
    8. '{s' → logprob: -21.923587799072266
    9. '[s' → logprob: -22.048587799072266
    10. ')s' → logprob: -22.048587799072266

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000283265660982579
    2. ')
' → logprob: -8.875283241271973
    3. '       ' → logprob: -9.000283241271973
    4. '   ' → logprob: -11.750283241271973
    5. ' )' → logprob: -12.125283241271973
    6. '<|end|>' → logprob: -12.750283241271973
    7. '[' → logprob: -13.500283241271973
    8. '
' → logprob: -15.250283241271973
    9. '#' → logprob: -15.375283241271973
    10. ')

' → logprob: -15.500283241271973

Token 432: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7205890417098999
    2. '       ' → logprob: -0.7205890417098999
    3. '   ' → logprob: -4.0955891609191895
    4. 'out' → logprob: -5.0955891609191895
    5. '<|end|>' → logprob: -6.3455891609191895
    6. '        
' → logprob: -6.7205891609191895
    7. '    
' → logprob: -7.0955891609191895
    8. '  
' → logprob: -8.720588684082031
    9. '
' → logprob: -9.720588684082031
    10. '	out' → logprob: -9.970588684082031

Token 433: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6001155376434326
    2. 'out' → logprob: -0.8501155376434326
    3. '   ' → logprob: -4.100115776062012
    4. ' out' → logprob: -4.975115776062012
    5. '	out' → logprob: -8.350115776062012
    6. '
' → logprob: -9.475115776062012
    7. '```' → logprob: -10.725115776062012
    8. '      ' → logprob: -11.225115776062012
    9. '[out' → logprob: -11.225115776062012
    10. '        
' → logprob: -11.475115776062012

Token 434: ' On' (ID: 2160)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0006268949946388602
    2. ' out' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.500626564025879
    4. '	out' → logprob: -16.750627517700195
    5. '       ' → logprob: -17.750627517700195
    6. ' ' → logprob: -18.125627517700195
    7. '```' → logprob: -18.875627517700195
    8. '
' → logprob: -19.375627517700195
    9. 'ou' → logprob: -19.625627517700195
    10. '[out' → logprob: -20.375627517700195

Token 435: ' incr' (ID: 52395)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.005643635988235474
    2. ' out' → logprob: -5.880643844604492
    3. '[out' → logprob: -5.880643844604492
    4. '[' → logprob: -10.880643844604492
    5. '_out' → logprob: -12.130643844604492
    6. 's' → logprob: -12.630643844604492
    7. '```' → logprob: -12.630643844604492
    8. '	out' → logprob: -13.005643844604492
    9. '   ' → logprob: -13.255643844604492
    10. '       ' → logprob: -13.630643844604492

Token 436: 'é' (ID: 377)
  Prédit: '[out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[out' → logprob: -1.3479437828063965
    2. '[' → logprob: -1.4729437828063965
    3. 'out' → logprob: -1.4729437828063965
    4. ' out' → logprob: -2.3479437828063965
    5. 'rement' → logprob: -2.7229437828063965
    6. '   ' → logprob: -2.9729437828063965
    7. '       ' → logprob: -3.5979437828063965
    8. '=' → logprob: -5.0979437828063965
    9. '+=' → logprob: -5.0979437828063965
    10. 'crement' → logprob: -5.5979437828063965

Token 437: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.002298228442668915
    2. 'mente' → logprob: -7.002298355102539
    3. 'ments' → logprob: -7.002298355102539
    4. 'm' → logprob: -8.752298355102539
    5. 'mentation' → logprob: -8.752298355102539
    6. 'mented' → logprob: -9.377298355102539
    7. 'nt' → logprob: -10.752298355102539
    8. 'out' → logprob: -11.502298355102539
    9. 'ent' → logprob: -11.502298355102539
    10. 'mentar' → logprob: -12.002298355102539

Token 438: ' le' (ID: 505)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.008616345934569836
    2. ' out' → logprob: -4.7586164474487305
    3. '[out' → logprob: -13.50861644744873
    4. '   ' → logprob: -15.63361644744873
    5. '	out' → logprob: -16.008615493774414
    6. '(out' → logprob: -16.008615493774414
    7. ' ' → logprob: -16.258615493774414
    8. '       ' → logprob: -16.883615493774414
    9. 'space' → logprob: -17.758615493774414
    10. '$out' → logprob: -18.133615493774414

Token 439: ' nombre' (ID: 9733)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0008062947308644652
    2. ' out' → logprob: -7.1258063316345215
    3. 'ou' → logprob: -14.625805854797363
    4. 's' → logprob: -14.625805854797363
    5. 'space' → logprob: -14.875805854797363
    6. '[out' → logprob: -15.000805854797363
    7. '	out' → logprob: -16.62580680847168
    8. '1' → logprob: -17.00080680847168
    9. ' ' → logprob: -17.37580680847168
    10. 'o' → logprob: -17.50080680847168

Token 440: ' d' (ID: 272)
  Prédit: '[out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[out' → logprob: -0.032312244176864624
    2. 'out' → logprob: -3.5323121547698975
    3. ' out' → logprob: -6.782312393188477
    4. '(out' → logprob: -7.407312393188477
    5. '[' → logprob: -7.532312393188477
    6. 's' → logprob: -9.282312393188477
    7. '[s' → logprob: -9.532312393188477
    8. ' [' → logprob: -10.407312393188477
    9. '   ' → logprob: -10.657312393188477
    10. '	out' → logprob: -11.157312393188477

Token 441: ''ar' (ID: 54307)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.018444545567035675
    2. '[out' → logprob: -4.643444538116455
    3. ' out' → logprob: -4.768444538116455
    4. '[' → logprob: -10.018445014953613
    5. 's' → logprob: -10.393445014953613
    6. '_out' → logprob: -10.768445014953613
    7. '(out' → logprob: -11.393445014953613
    8. '[s' → logprob: -11.768445014953613
    9. ' ' → logprob: -12.143445014953613
    10. '	out' → logprob: -12.268445014953613

Token 442: 'êtes' (ID: 23720)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1405632346868515
    2. 'gs' → logprob: -2.6405632495880127
    3. ' out' → logprob: -3.7655632495880127
    4. 'de' → logprob: -4.140563011169434
    5. 'cs' → logprob: -4.265563011169434
    6. 'g' → logprob: -6.265563011169434
    7. 'ts' → logprob: -7.640563011169434
    8. 's' → logprob: -7.890563011169434
    9. 'eg' → logprob: -7.890563011169434
    10. 'c' → logprob: -8.015563011169434

Token 443: ' sort' (ID: 4506)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.39659401774406433
    2. '[out' → logprob: -1.3965940475463867
    3. ' out' → logprob: -2.7715940475463867
    4. '[s' → logprob: -4.146594047546387
    5. 's' → logprob: -6.896594047546387
    6. '_out' → logprob: -9.021594047546387
    7. '	out' → logprob: -9.271594047546387
    8. 'de' → logprob: -9.521594047546387
    9. 'sort' → logprob: -9.646594047546387
    10. '[' → logprob: -9.771594047546387

Token 444: 'antes' (ID: 5193)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.21241076290607452
    2. 'ant' → logprob: -1.962410807609558
    3. 'ing' → logprob: -3.0874106884002686
    4. '   ' → logprob: -6.837410926818848
    5. 's' → logprob: -6.962410926818848
    6. 'ents' → logprob: -7.337410926818848
    7. 'e' → logprob: -7.962410926818848
    8. 't' → logprob: -8.087410926818848
    9. 'ging' → logprob: -8.087410926818848
    10. 'ting' → logprob: -8.212410926818848

Token 445: ' pour' (ID: 1930)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.022289369255304337
    2. '[out' → logprob: -4.022289276123047
    3. 'out' → logprob: -5.772289276123047
    4. ' out' → logprob: -7.147289276123047
    5. 's' → logprob: -9.272289276123047
    6. ' [' → logprob: -9.397289276123047
    7. '[' → logprob: -10.022289276123047
    8. '   ' → logprob: -12.397289276123047
    9. '_out' → logprob: -13.522289276123047
    10. '	out' → logprob: -14.022289276123047

Token 446: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02288692072033882
    2. ' s' → logprob: -4.272886753082275
    3. 'out' → logprob: -4.772886753082275
    4. ' out' → logprob: -8.397887229919434
    5. '[s' → logprob: -12.772887229919434
    6. '[out' → logprob: -13.647887229919434
    7. '	s' → logprob: -16.647886276245117
    8. '```' → logprob: -17.022886276245117
    9. 'adj' → logprob: -17.522886276245117
    10. '   ' → logprob: -18.522886276245117

Token 447: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0028080830816179514
    2. ' s' → logprob: -5.877808094024658
    3. '[s' → logprob: -13.6278076171875
    4. ' sommet' → logprob: -13.6278076171875
    5. '_s' → logprob: -15.5028076171875
    6. '(s' → logprob: -15.8778076171875
    7. '	s' → logprob: -16.0028076171875
    8. ' out' → logprob: -16.2528076171875
    9. 'som' → logprob: -16.5028076171875
    10. 'out' → logprob: -16.8778076171875

Token 448: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0627252608537674
    2. '[s' → logprob: -2.812725305557251
    3. ' s' → logprob: -7.187725067138672
    4. '(s' → logprob: -13.937725067138672
    5. ' [' → logprob: -15.687725067138672
    6. '[' → logprob: -15.812725067138672
    7. '[out' → logprob: -16.062725067138672
    8. '```' → logprob: -16.187725067138672
    9. '   ' → logprob: -17.187725067138672
    10. 'out' → logprob: -17.312725067138672

Token 449: '.
' (ID: 558)
  Prédit: '[out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[out' → logprob: -0.06216788664460182
    2. '[s' → logprob: -3.3121678829193115
    3. 'out' → logprob: -3.8121678829193115
    4. '       ' → logprob: -7.437168121337891
    5. '[' → logprob: -7.687168121337891
    6. ' out' → logprob: -8.06216812133789
    7. 's' → logprob: -8.18716812133789
    8. '   ' → logprob: -9.56216812133789
    9. '	out' → logprob: -11.56216812133789
    10. '```' → logprob: -12.06216812133789

Token 450: '       ' (ID: 309)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0674816220998764
    2. ' out' → logprob: -2.817481517791748
    3. '       ' → logprob: -5.442481517791748
    4. '   ' → logprob: -6.817481517791748
    5. '[out' → logprob: -10.192481994628906
    6. '	out' → logprob: -11.192481994628906
    7. '```' → logprob: -11.192481994628906
    8. '        
' → logprob: -13.692481994628906
    9. '1' → logprob: -13.817481994628906
    10. '    ' → logprob: -14.067481994628906

Token 451: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.0009117019944824278
    2. ' out' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.375911712646484
    4. '	out' → logprob: -17.375911712646484
    5. '       ' → logprob: -18.000911712646484
    6. '_out' → logprob: -21.125911712646484
    7. ' ' → logprob: -21.500911712646484
    8. '[out' → logprob: -21.875911712646484
    9. '(out' → logprob: -22.125911712646484
    10. '```' → logprob: -22.125911712646484

Token 452: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -4.320199877838604e-07
    2. 'out' → logprob: -15.375
    3. 'd' → logprob: -16.75
    4. 'deg' → logprob: -18.5
    5. 'degrees' → logprob: -18.5
    6. '	de' → logprob: -19.25
    7. 's' → logprob: -19.375
    8. 'do' → logprob: -19.5
    9. '_de' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 453: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -3.106736039626412e-05
    2. 's' → logprob: -11.125031471252441
    3. 'egs' → logprob: -11.500031471252441
    4. 'ds' → logprob: -12.500031471252441
    5. 'qs' → logprob: -13.875031471252441
    6. 'g' → logprob: -14.000031471252441
    7. 'fs' → logprob: -15.875031471252441
    8. 'cs' → logprob: -16.375030517578125
    9. 'ks' → logprob: -16.625030517578125
    10. 'bs' → logprob: -17.625030517578125

Token 454: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -16.0
    4. 's' → logprob: -16.125
    5. '[S' → logprob: -19.25
    6. '[t' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. ' s' → logprob: -21.25
    9. '(s' → logprob: -21.5
    10. '[i' → logprob: -22.0

Token 455: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011066090315580368
    2. ']+=' → logprob: -4.51106595993042
    3. ' ]' → logprob: -12.136066436767578
    4. ']+' → logprob: -12.136066436767578
    5. '[' → logprob: -12.761066436767578
    6. '+=' → logprob: -13.261066436767578
    7. '[s' → logprob: -13.386066436767578
    8. ')' → logprob: -14.511066436767578
    9. 's' → logprob: -14.886066436767578
    10. '']' → logprob: -15.761066436767578

Token 456: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0012620178749784827
    2. ' +=' → logprob: -6.751262187957764
    3. '+' → logprob: -10.251261711120605
    4. '=' → logprob: -10.251261711120605
    5. ']+=' → logprob: -11.376261711120605
    6. '[' → logprob: -11.626261711120605
    7. '+='' → logprob: -15.376261711120605
    8. '++' → logprob: -15.876261711120605
    9. '+="' → logprob: -16.001262664794922
    10. '```' → logprob: -16.501262664794922

Token 457: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -21.875
    5. '+' → logprob: -24.125
    6. '[' → logprob: -24.375
    7. '۱' → logprob: -24.5
    8. '>' → logprob: -24.75
    9. '１' → logprob: -24.75
    10. '  ' → logprob: -25.0

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '```' → logprob: -22.5
    4. '<|end|>' → logprob: -24.25
    5. '   ' → logprob: -24.625
    6. '۱' → logprob: -24.75
    7. '１' → logprob: -25.125
    8. '[' → logprob: -25.875
    9. '2' → logprob: -26.0
    10. '0' → logprob: -26.25

Token 459: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034893590956926346
    2. '   ' → logprob: -3.53489351272583
    3. 'from' → logprob: -6.78489351272583
    4. '<|end|>' → logprob: -6.78489351272583
    5. '```' → logprob: -6.78489351272583
    6. '    
' → logprob: -7.15989351272583
    7. 'queue' → logprob: -8.159893989562988
    8. 'deque' → logprob: -9.034893989562988
    9. '

' → logprob: -9.909893989562988
    10. 'def' → logprob: -9.909893989562988

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14968793094158173
    2. 'from' → logprob: -2.2746880054473877
    3. 'queue' → logprob: -3.7746880054473877
    4. 'q' → logprob: -5.774687767028809
    5. '```' → logprob: -5.774687767028809
    6. 'import' → logprob: -6.524687767028809
    7. '#' → logprob: -6.899687767028809
    8. '    
' → logprob: -7.024687767028809
    9. ' from' → logprob: -7.149687767028809
    10. '
' → logprob: -7.274687767028809

Token 461: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0877794027328491
    2. '   ' → logprob: -1.2127794027328491
    3. 'dp' → logprob: -1.8377794027328491
    4. 'from' → logprob: -2.4627795219421387
    5. 'dist' → logprob: -3.3377795219421387
    6. 'q' → logprob: -3.3377795219421387
    7. 'stack' → logprob: -3.8377795219421387
    8. 'visited' → logprob: -5.587779521942139
    9. 'Q' → logprob: -5.712779521942139
    10. 'reachable' → logprob: -5.837779521942139

Token 462: ' Initial' (ID: 9209)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.41473889350891113
    2. 'queue' → logprob: -1.9147388935089111
    3. 'q' → logprob: -2.664738893508911
    4. 'dp' → logprob: -3.164738893508911
    5. 'import' → logprob: -4.039738655090332
    6. '#' → logprob: -4.414738655090332
    7. 'stack' → logprob: -4.789738655090332
    8. 'que' → logprob: -4.914738655090332
    9. 'Q' → logprob: -5.289738655090332
    10. 'dist' → logprob: -5.789738655090332

Token 463: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.5724626779556274
    2. 'e' → logprob: -1.0724626779556274
    3. 'ization' → logprob: -2.822462558746338
    4. 'al' → logprob: -3.822462558746338
    5. 'queue' → logprob: -5.072462558746338
    6. '#' → logprob: -6.072462558746338
    7. 'que' → logprob: -6.697462558746338
    8. 'from' → logprob: -7.072462558746338
    9. 'ize' → logprob: -8.197463035583496
    10. 'ation' → logprob: -8.572463035583496

Token 464: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5408452749252319
    2. 'queue' → logprob: -1.415845274925232
    3. ' queue' → logprob: -2.5408453941345215
    4. ' of' → logprob: -3.9158453941345215
    5. 'd' → logprob: -4.5408453941345215
    6. 'de' → logprob: -4.5408453941345215
    7. 'deque' → logprob: -4.7908453941345215
    8. 'que' → logprob: -5.1658453941345215
    9. 'q' → logprob: -5.4158453941345215
    10. ' d' → logprob: -5.5408453941345215

Token 465: ' tableaux' (ID: 176599)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.268512487411499
    2. 'queue' → logprob: -1.643512487411499
    3. 'q' → logprob: -4.018512725830078
    4. 'stack' → logprob: -4.768512725830078
    5. 'import' → logprob: -5.393512725830078
    6. ' from' → logprob: -5.393512725830078
    7. 'deque' → logprob: -5.768512725830078
    8. 'que' → logprob: -6.268512725830078
    9. ' queue' → logprob: -7.893512725830078
    10. 'dp' → logprob: -8.643512725830078

Token 466: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7146173119544983
    2. '   ' → logprob: -1.4646172523498535
    3. 'dist' → logprob: -1.9646172523498535
    4. 'distance' → logprob: -4.3396172523498535
    5. 'reachable' → logprob: -4.4646172523498535
    6. 'de' → logprob: -4.7146172523498535
    7. 'can' → logprob: -4.8396172523498535
    8. ' dp' → logprob: -4.8396172523498535
    9. 'que' → logprob: -4.8396172523498535
    10. 'queue' → logprob: -5.0896172523498535

Token 467: ' probabil' (ID: 76890)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5468068718910217
    2. 'dp' → logprob: -1.671806812286377
    3. 'distance' → logprob: -2.296806812286377
    4. 'queue' → logprob: -3.421806812286377
    5. 'bool' → logprob: -3.796806812286377
    6. 'val' → logprob: -4.046806812286377
    7. 'deque' → logprob: -4.171806812286377
    8. 'score' → logprob: -4.546806812286377
    9. 'scores' → logprob: -4.921806812286377
    10. 'res' → logprob: -5.546806812286377

Token 468: 'ités' (ID: 12479)
  Prédit: 'ités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ités' → logprob: -0.24787141382694244
    2. 'ité' → logprob: -1.7478713989257812
    3. 'té' → logprob: -3.7478713989257812
    4. 't' → logprob: -3.8728713989257812
    5. 'ites' → logprob: -8.247871398925781
    6. 'és' → logprob: -9.247871398925781
    7. 'étés' → logprob: -9.372871398925781
    8. '```' → logprob: -9.372871398925781
    9. '#' → logprob: -9.622871398925781
    10. 'it' → logprob: -9.747871398925781

Token 469: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1852011680603027
    2. 'prob' → logprob: -1.3102011680603027
    3. 'dp' → logprob: -1.8102011680603027
    4. 'pro' → logprob: -2.1852011680603027
    5. 'p' → logprob: -2.9352011680603027
    6. 'P' → logprob: -3.3102011680603027
    7. ' =' → logprob: -3.4352011680603027
    8. 'dist' → logprob: -4.560201168060303
    9. '=' → logprob: -5.810201168060303
    10. ',' → logprob: -6.060201168060303

Token 470: ' d' (ID: 272)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.1267387866973877
    2. 'dp' → logprob: -1.8767387866973877
    3. 'esp' → logprob: -1.8767387866973877
    4. 'esper' → logprob: -2.2517387866973877
    5. 'expect' → logprob: -2.5017387866973877
    6. 'es' → logprob: -3.6267387866973877
    7. 'dist' → logprob: -3.7517387866973877
    8. 'prob' → logprob: -4.001738548278809
    9. 'pro' → logprob: -4.126738548278809
    10. 'val' → logprob: -4.376738548278809

Token 471: ''esp' (ID: 73244)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.0898953676223755
    2. ''esp' → logprob: -1.8398953676223755
    3. 'e' → logprob: -1.9648953676223755
    4. 'es' → logprob: -2.089895248413086
    5. ''att' → logprob: -2.464895248413086
    6. 'expected' → logprob: -3.464895248413086
    7. 'esper' → logprob: -3.589895248413086
    8. 'u' → logprob: -4.339895248413086
    9. 'p' → logprob: -4.714895248413086
    10. 'att' → logprob: -4.964895248413086

Token 472: 'ér' (ID: 2156)
  Prédit: 'oir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oir' → logprob: -0.47858843207359314
    2. 'ér' → logprob: -1.9785884618759155
    3. 'érance' → logprob: -2.728588342666626
    4. 'o' → logprob: -2.978588342666626
    5. 'er' → logprob: -2.978588342666626
    6. 'érences' → logprob: -4.728588581085205
    7. 'é' → logprob: -4.853588581085205
    8. '=' → logprob: -5.166088581085205
    9. 'r' → logprob: -5.478588581085205
    10. '0' → logprob: -5.791088581085205

Token 473: 'ances' (ID: 3528)
  Prédit: 'ér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.6036965847015381
    2. 'ances' → logprob: -1.103696584701538
    3. 'érance' → logprob: -3.103696584701538
    4. 'er' → logprob: -3.728696584701538
    5. '```' → logprob: -3.978696584701538
    6. 'ance' → logprob: -4.728696823120117
    7. '#' → logprob: -5.103696823120117
    8. 'érences' → logprob: -5.228696823120117
    9. 'r' → logprob: -6.478696823120117
    10. 'é' → logprob: -6.728696823120117

Token 474: ' d' (ID: 272)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.1349767446517944
    2. 'pro' → logprob: -1.2599767446517944
    3. 'dp' → logprob: -2.009976863861084
    4. 'expected' → logprob: -2.759976863861084
    5. '   ' → logprob: -3.259976863861084
    6. 'p' → logprob: -3.259976863861084
    7. 'E' → logprob: -3.259976863861084
    8. 'P' → logprob: -3.759976863861084
    9. ' prob' → logprob: -4.134976863861084
    10. ' expected' → logprob: -4.884976863861084

Token 475: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4699728488922119
    2. ''att' → logprob: -2.344972848892212
    3. 'é' → logprob: -2.469972848892212
    4. 'esp' → logprob: -3.344972848892212
    5. 'es' → logprob: -3.969972848892212
    6. ''achat' → logprob: -3.969972848892212
    7. ''arrivée' → logprob: -4.094972610473633
    8. 'att' → logprob: -4.344972610473633
    9. 'esper' → logprob: -4.469972610473633
    10. ''avenir' → logprob: -4.719972610473633

Token 476: 'iver' (ID: 1788)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.7380514740943909
    2. 'ivée' → logprob: -0.7380514740943909
    3. 'ive' → logprob: -3.613051414489746
    4. 'ivals' → logprob: -5.238051414489746
    5. 'ival' → logprob: -5.363051414489746
    6. 'ivé' → logprob: -5.988051414489746
    7. 'êts' → logprob: -7.238051414489746
    8. 'êt' → logprob: -7.488051414489746
    9. 'ives' → logprob: -7.988051414489746
    10. 'ivi' → logprob: -8.488051414489746

Token 477: ' à' (ID: 1221)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1160719022154808
    2. 'es' → logprob: -2.991071939468384
    3. 'ée' → logprob: -3.741071939468384
    4. 'ées' → logprob: -3.991071939468384
    5. 'é' → logprob: -4.366071701049805
    6. 'a' → logprob: -6.491071701049805
    7. 'à' → logprob: -6.741071701049805
    8. 'és' → logprob: -7.491071701049805
    9. 'de' → logprob: -7.741071701049805
    10. ' à' → logprob: -8.741071701049805

Token 478: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.09620415419340134
    2. 'ch' → logprob: -3.0962040424346924
    3. 'each' → logprob: -4.0962042808532715
    4. ' chaque' → logprob: -4.5962042808532715
    5. 'un' → logprob: -4.8462042808532715
    6. '[]' → logprob: -5.3462042808532715
    7. 't' → logprob: -6.0962042808532715
    8. '0' → logprob: -7.2212042808532715
    9. '1' → logprob: -7.4712042808532715
    10. 'une' → logprob: -7.7212042808532715

Token 479: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.05315427482128143
    2. 's' → logprob: -3.803154230117798
    3. 'no' → logprob: -4.178154468536377
    4. ' sommet' → logprob: -4.553154468536377
    5. 'n' → logprob: -6.303154468536377
    6. ' noe' → logprob: -7.553154468536377
    7. '```' → logprob: -7.678154468536377
    8. 'point' → logprob: -8.178153991699219
    9. 'node' → logprob: -8.303153991699219
    10. '#' → logprob: -9.428153991699219

Token 480: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9344750046730042
    2. 'prob' → logprob: -1.1844749450683594
    3. 'dp' → logprob: -2.3094749450683594
    4. 'p' → logprob: -3.1844749450683594
    5. ',' → logprob: -3.5594749450683594
    6. ':' → logprob: -3.6844749450683594
    7. 'pro' → logprob: -3.8094749450683594
    8. 'P' → logprob: -4.184474945068359
    9. ' prob' → logprob: -4.434474945068359
    10. 'E' → logprob: -4.684474945068359

Token 481: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.4424710273742676
    2. ' la' → logprob: -2.0674710273742676
    3. '[]' → logprob: -2.4424710273742676
    4. 'le' → logprob: -2.4424710273742676
    5. 'queue' → logprob: -2.6924710273742676
    6. 'sys' → logprob: -2.6924710273742676
    7. ' sys' → logprob: -3.4424710273742676
    8. 'N' → logprob: -3.8174710273742676
    9. 't' → logprob: -3.8174710273742676
    10. 'any' → logprob: -3.9424710273742676

Token 482: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5772076845169067
    2. 'N' → logprob: -0.9522076845169067
    3. ' N' → logprob: -4.327207565307617
    4. ' ' → logprob: -4.452207565307617
    5. 's' → logprob: -4.702207565307617
    6. 'M' → logprob: -5.827207565307617
    7. '[N' → logprob: -6.452207565307617
    8. 'i' → logprob: -6.577207565307617
    9. 'S' → logprob: -6.952207565307617
    10. '[' → logprob: -6.952207565307617

Token 483: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.059895772486925125
    2. 'N' → logprob: -2.9348957538604736
    3. ' ' → logprob: -6.559895992279053
    4. ' N' → logprob: -6.684895992279053
    5. 's' → logprob: -7.309895992279053
    6. '   ' → logprob: -8.184895515441895
    7. 'source' → logprob: -8.559895515441895
    8. 'de' → logprob: -8.559895515441895
    9. '1' → logprob: -8.809895515441895
    10. 'd' → logprob: -8.934895515441895

Token 484: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.009041020646691322
    2. 'd' → logprob: -5.759040832519531
    3. ' départ' → logprob: -6.259040832519531
    4. '0' → logprob: -6.384040832519531
    5. 'destination' → logprob: -7.134040832519531
    6. 's' → logprob: -7.509040832519531
    7. 'depart' → logprob: -7.634040832519531
    8. '#' → logprob: -9.009040832519531
    9. ' ' → logprob: -9.759040832519531
    10. 'ré' → logprob: -10.009040832519531

Token 485: ' (' (ID: 350)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.4236815869808197
    2. 'pro' → logprob: -2.4236814975738525
    3. 'p' → logprob: -2.5486814975738525
    4. 'P' → logprob: -3.1736814975738525
    5. 'dp' → logprob: -3.1736814975738525
    6. 'expected' → logprob: -3.4236814975738525
    7. 'E' → logprob: -4.173681735992432
    8. ' prob' → logprob: -4.548681735992432
    9. '   ' → logprob: -5.173681735992432
    10. ',' → logprob: -5.173681735992432

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04087652266025543
    2. 'start' → logprob: -4.790876388549805
    3. '   ' → logprob: -4.915876388549805
    4. '#' → logprob: -4.915876388549805
    5. '[' → logprob: -5.540876388549805
    6. ')' → logprob: -6.040876388549805
    7. ' ' → logprob: -6.165876388549805
    8. 's' → logprob: -6.415876388549805
    9. 'prob' → logprob: -7.040876388549805
    10. 'range' → logprob: -7.165876388549805

Token 487: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10998057574033737
    2. ')
' → logprob: -2.484980583190918
    3. '   ' → logprob: -4.109980583190918
    4. ').' → logprob: -5.859980583190918
    5. '):' → logprob: -7.984980583190918
    6. ']' → logprob: -8.359980583190918
    7. '):
' → logprob: -8.484980583190918
    8. ')
' → logprob: -8.734980583190918
    9. ' )' → logprob: -8.734980583190918
    10. ').
' → logprob: -9.484980583190918

Token 488: '   ' (ID: 271)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.7459334135055542
    2. 'pro' → logprob: -0.9959334135055542
    3. '   ' → logprob: -3.3709335327148438
    4. 'P' → logprob: -3.7459335327148438
    5. 'dp' → logprob: -3.7459335327148438
    6. 'p' → logprob: -3.8709335327148438
    7. 'expected' → logprob: -3.9959335327148438
    8. ' prob' → logprob: -4.620933532714844
    9. 'expect' → logprob: -5.245933532714844
    10. 'E' → logprob: -5.370933532714844

Token 489: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.42827996611595154
    2. 'prob' → logprob: -1.553279995918274
    3. 'p' → logprob: -2.9282798767089844
    4. 'P' → logprob: -3.5532798767089844
    5. 'expect' → logprob: -4.178279876708984
    6. 'E' → logprob: -4.553279876708984
    7. 'dp' → logprob: -4.553279876708984
    8. 'expected' → logprob: -4.678279876708984
    9. 'pr' → logprob: -6.803279876708984
    10. 'eps' → logprob: -6.803279876708984

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10034771263599396
    2. '=' → logprob: -2.3503477573394775
    3. '[' → logprob: -9.350347518920898
    4. '=[' → logprob: -10.975347518920898
    5. ')' → logprob: -11.475347518920898
    6. ',' → logprob: -11.725347518920898
    7. ']' → logprob: -11.725347518920898
    8. 's' → logprob: -13.225347518920898
    9. '=[]' → logprob: -13.225347518920898
    10. ' ' → logprob: -13.850347518920898

Token 491: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010282796574756503
    2. ' [' → logprob: -9.250102996826172
    3. '[N' → logprob: -12.125102996826172
    4. '[-' → logprob: -13.875102996826172
    5. '[n' → logprob: -15.125102996826172
    6. '[p' → logprob: -17.125102996826172
    7. '[node' → logprob: -17.625102996826172
    8. '   ' → logprob: -18.250102996826172
    9. '1' → logprob: -18.375102996826172
    10. '[int' → logprob: -18.750102996826172

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010429323883727193
    2. '1' → logprob: -6.87604284286499
    3. '-' → logprob: -12.626043319702148
    4. ' ' → logprob: -12.876043319702148
    5. '[' → logprob: -13.751043319702148
    6. 'False' → logprob: -13.876043319702148
    7. 'float' → logprob: -14.501043319702148
    8. 'Fraction' → logprob: -15.063543319702148
    9. '(' → logprob: -15.438543319702148
    10. ']' → logprob: -15.501043319702148

Token 493: ']' (ID: 60)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5763387680053711
    2. ']' → logprob: -0.8263387680053711
    3. ' ]' → logprob: -8.826338768005371
    4. ']*' → logprob: -9.201338768005371
    5. '0' → logprob: -9.826338768005371
    6. '.]' → logprob: -9.826338768005371
    7. '   ' → logprob: -11.326338768005371
    8. ']*(' → logprob: -11.451338768005371
    9. '[' → logprob: -11.701338768005371
    10. ' ' → logprob: -12.576338768005371

Token 494: ' *' (ID: 425)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.298326700925827
    2. ']' → logprob: -1.4233267307281494
    3. ']*' → logprob: -4.17332649230957
    4. ']*(' → logprob: -7.79832649230957
    5. '0' → logprob: -7.92332649230957
    6. ' for' → logprob: -7.92332649230957
    7. ' ]' → logprob: -8.54832649230957
    8. '*' → logprob: -9.04832649230957
    9. 'for' → logprob: -9.79832649230957
    10. '.]' → logprob: -10.42332649230957

Token 495: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.128163257315464e-07
    2. ' N' → logprob: -15.625
    3. '(N' → logprob: -16.75
    4. '   ' → logprob: -18.875
    5. '	N' → logprob: -19.625
    6. '>N' → logprob: -21.375
    7. '```' → logprob: -21.5
    8. '(' → logprob: -21.625
    9. '<|end|>' → logprob: -21.875
    10. '[N' → logprob: -22.25

Token 496: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10697920620441437
    2. '<|end|>' → logprob: -2.7319791316986084
    3. '   ' → logprob: -4.4819793701171875
    4. 'pro' → logprob: -5.1069793701171875
    5. '    
' → logprob: -5.1069793701171875
    6. '  
' → logprob: -5.4819793701171875
    7. 'prob' → logprob: -5.6069793701171875
    8. '   
' → logprob: -6.7319793701171875
    9. '_probs' → logprob: -6.7319793701171875
    10. ' 
' → logprob: -7.3569793701171875

Token 497: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031899888068437576
    2. 'pro' → logprob: -3.906899929046631
    3. '<|end|>' → logprob: -5.031899929046631
    4. 'prob' → logprob: -6.656899929046631
    5. '  
' → logprob: -6.906899929046631
    6. '    
' → logprob: -7.531899929046631
    7. '\n' → logprob: -7.906899929046631
    8. '   ' → logprob: -8.156899452209473
    9. '
' → logprob: -8.531899452209473
    10. '\' → logprob: -8.656899452209473

Token 498: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.008608783595263958
    2. 'prob' → logprob: -5.258608818054199
    3. ' probs' → logprob: -5.883608818054199
    4. '
' → logprob: -8.0086088180542
    5. '0' → logprob: -9.3836088180542
    6. '_probs' → logprob: -9.6336088180542
    7. '```' → logprob: -10.6336088180542
    8. ' pro' → logprob: -11.0086088180542
    9. '1' → logprob: -11.3836088180542
    10. '
' → logprob: -11.6336088180542

Token 499: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03476337715983391
    2. '_probs' → logprob: -3.9097633361816406
    3. 'pro' → logprob: -4.909763336181641
    4. '
' → logprob: -5.784763336181641
    5. 'prob' → logprob: -6.659763336181641
    6. '   ' → logprob: -7.159763336181641
    7. '.' → logprob: -8.78476333618164
    8. '0' → logprob: -9.03476333618164
    9. '[:]' → logprob: -9.03476333618164
    10. 'Pro' → logprob: -9.15976333618164

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02553863450884819
    2. 'pro' → logprob: -4.275538444519043
    3. '   ' → logprob: -6.150538444519043
    4. 'prob' → logprob: -6.525538444519043
    5. '_probs' → logprob: -6.650538444519043
    6. ' ]' → logprob: -6.650538444519043
    7. ')' → logprob: -6.775538444519043
    8. 'for' → logprob: -6.775538444519043
    9. '
' → logprob: -7.525538444519043
    10. ']
' → logprob: -7.775538444519043

Token 501: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07388951629400253
    2. ' =' → logprob: -2.6988894939422607
    3. '[' → logprob: -6.07388973236084
    4. 'pro' → logprob: -6.94888973236084
    5. 'prob' → logprob: -8.44888973236084
    6. '<|end|>' → logprob: -8.94888973236084
    7. '_probs' → logprob: -9.19888973236084
    8. ',' → logprob: -9.32388973236084
    9. '.' → logprob: -10.94888973236084
    10. '#' → logprob: -10.94888973236084

Token 502: 'i' (ID: 72)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.2536510229110718
    2. 'in' → logprob: -1.6286510229110718
    3. '=' → logprob: -4.503651142120361
    4. 'i' → logprob: -5.128651142120361
    5. ' =' → logprob: -6.253651142120361
    6. 'ient' → logprob: -6.253651142120361
    7. 'inu' → logprob: -6.753651142120361
    8. 'ent' → logprob: -7.003651142120361
    9. 'ains' → logprob: -7.128651142120361
    10. '[' → logprob: -7.253651142120361

Token 503: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.025098346173763275
    2. 'n' → logprob: -4.5250983238220215
    3. 'nent' → logprob: -4.7750983238220215
    4. 'nt' → logprob: -6.1500983238220215
    5. 'ents' → logprob: -6.4000983238220215
    6. 'nu' → logprob: -8.02509880065918
    7. 'en' → logprob: -8.40009880065918
    8. 'e' → logprob: -8.65009880065918
    9. 'ient' → logprob: -8.65009880065918
    10. 'nts' → logprob: -9.27509880065918

Token 504: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3174873888492584
    2. ' la' → logprob: -1.817487359046936
    3. 'la' → logprob: -2.9424874782562256
    4. ' ' → logprob: -3.3174874782562256
    5. '1' → logprob: -5.0674872398376465
    6. 'prob' → logprob: -5.3174872398376465
    7. 'float' → logprob: -5.8174872398376465
    8. 'le' → logprob: -6.4424872398376465
    9. '   ' → logprob: -6.4424872398376465
    10. 'les' → logprob: -6.6924872398376465

Token 505: ' prob' (ID: 4921)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3836217522621155
    2. '1' → logprob: -1.3836216926574707
    3. 'float' → logprob: -3.3836216926574707
    4. ' ' → logprob: -3.7586216926574707
    5. 'prob' → logprob: -5.258621692657471
    6. 'pro' → logprob: -5.883621692657471
    7. ' float' → logprob: -6.383621692657471
    8. '.' → logprob: -7.883621692657471
    9. '[' → logprob: -9.508622169494629
    10. '   ' → logprob: -9.758622169494629

Token 506: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.05383351817727089
    2. 'ability' → logprob: -3.303833484649658
    3. 'abil' → logprob: -4.928833484649658
    4. 'ab' → logprob: -5.678833484649658
    5. 'a' → logprob: -6.928833484649658
    6. 'alité' → logprob: -7.053833484649658
    7. 'ility' → logprob: -7.428833484649658
    8. '   ' → logprob: -7.553833484649658
    9. ' ' → logprob: -7.678833484649658
    10. '[' → logprob: -8.303833961486816

Token 507: ' actuelle' (ID: 104951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2619563341140747
    2. ' de' → logprob: -1.2619563341140747
    3. '[v' → logprob: -1.6369563341140747
    4. ' que' → logprob: -2.511956214904785
    5. 's' → logprob: -2.761956214904785
    6. ' d' → logprob: -3.261956214904785
    7. '   ' → logprob: -4.261956214904785
    8. ' ' → logprob: -4.511956214904785
    9. 'v' → logprob: -5.011956214904785
    10. ' that' → logprob: -5.511956214904785

Token 508: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1943007707595825
    2. '[' → logprob: -1.4443007707595825
    3. '[v' → logprob: -1.6943007707595825
    4. ' que' → logprob: -2.194300651550293
    5. ' d' → logprob: -3.319300651550293
    6. 's' → logprob: -3.319300651550293
    7. '   ' → logprob: -3.694300651550293
    8. ' ' → logprob: -4.319300651550293
    9. 'v' → logprob: -4.319300651550293
    10. ',' → logprob: -4.944300651550293

Token 509: ''arr' (ID: 49695)
  Prédit: ''arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arr' → logprob: -0.1505080759525299
    2. ''arrivée' → logprob: -2.775508165359497
    3. 'e' → logprob: -3.525508165359497
    4. ''' → logprob: -4.025507926940918
    5. ''arrive' → logprob: -4.025507926940918
    6. ''être' → logprob: -5.525507926940918
    7. '’arr' → logprob: -5.900507926940918
    8. ''obtenir' → logprob: -6.650507926940918
    9. 'arr' → logprob: -7.275507926940918
    10. ''aller' → logprob: -7.275507926940918

Token 510: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.01347912847995758
    2. 'ivée' → logprob: -4.763479232788086
    3. 'iv' → logprob: -6.138479232788086
    4. 'ive' → logprob: -6.388479232788086
    5. 'ivé' → logprob: -7.888479232788086
    6. 'iving' → logprob: -8.388479232788086
    7. 'ival' → logprob: -9.513479232788086
    8. 'ived' → logprob: -9.638479232788086
    9. 'i' → logprob: -9.638479232788086
    10. 'ivable' → logprob: -10.763479232788086

Token 511: ' au' (ID: 2791)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3281620740890503
    2. ' à' → logprob: -1.7031620740890503
    3. ' au' → logprob: -2.95316219329834
    4. '[' → logprob: -4.20316219329834
    5. 'v' → logprob: -5.20316219329834
    6. '   ' → logprob: -5.20316219329834
    7. 'au' → logprob: -5.20316219329834
    8. '(v' → logprob: -5.32816219329834
    9. ' v' → logprob: -5.45316219329834
    10. ' de' → logprob: -7.20316219329834

Token 512: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016350233927369118
    2. ' v' → logprob: -4.141350269317627
    3. ' sommet' → logprob: -8.141349792480469
    4. 'som' → logprob: -11.516349792480469
    5. '0' → logprob: -12.391349792480469
    6. 'vertex' → logprob: -12.391349792480469
    7. ' ' → logprob: -12.766349792480469
    8. 's' → logprob: -13.766349792480469
    9. ' vertex' → logprob: -14.766349792480469
    10. ' som' → logprob: -14.891349792480469

Token 513: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6409471035003662
    2. ' v' → logprob: -1.0159471035003662
    3. '[v' → logprob: -2.765947103500366
    4. '0' → logprob: -3.140947103500366
    5. ' ' → logprob: -6.015947341918945
    6. '[' → logprob: -6.265947341918945
    7. '(v' → logprob: -7.640947341918945
    8. '   ' → logprob: -10.140947341918945
    9. ' [' → logprob: -10.390947341918945
    10. '
' → logprob: -11.390947341918945

Token 514: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044390998780727386
    2. '<|end|>' → logprob: -3.669390916824341
    3. 'prob' → logprob: -5.41939115524292
    4. '.' → logprob: -5.66939115524292
    5. '   ' → logprob: -6.16939115524292
    6. 'pro' → logprob: -6.66939115524292
    7. '_probs' → logprob: -6.79439115524292
    8. ')' → logprob: -7.29439115524292
    9. ' probabilities' → logprob: -7.41939115524292
    10. ' ' → logprob: -7.41939115524292

Token 515: '   ' (ID: 271)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.025726638734340668
    2. '
' → logprob: -4.275726795196533
    3. 'prob' → logprob: -5.400726795196533
    4. '   ' → logprob: -5.525726795196533
    5. ' probs' → logprob: -6.400726795196533
    6. '    
' → logprob: -8.025726318359375
    7. ' pro' → logprob: -8.400726318359375
    8. '  
' → logprob: -8.775726318359375
    9. '0' → logprob: -9.025726318359375
    10. '\n' → logprob: -9.525726318359375

Token 516: ' exp' (ID: 2794)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.006940802559256554
    2. ' probs' → logprob: -5.506940841674805
    3. 'prob' → logprob: -6.131940841674805
    4. ' pro' → logprob: -8.256940841674805
    5. '   ' → logprob: -8.631940841674805
    6. '
' → logprob: -9.381940841674805
    7. '[' → logprob: -10.131940841674805
    8. 'p' → logprob: -10.381940841674805
    9. '```' → logprob: -10.631940841674805
    10. '0' → logprob: -10.756940841674805

Token 517: 'es' (ID: 268)
  Prédit: 'ects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ects' → logprob: -0.6401865482330322
    2. 'ected' → logprob: -1.5151865482330322
    3. 'ect' → logprob: -1.6401865482330322
    4. 's' → logprob: -3.2651865482330322
    5. ' =' → logprob: -4.640186309814453
    6. '=' → logprob: -5.515186309814453
    7. 'ecs' → logprob: -6.140186309814453
    8. '_probs' → logprob: -7.140186309814453
    9. 'ections' → logprob: -7.390186309814453
    10. 'er' → logprob: -7.390186309814453

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47719889879226685
    2. ' =' → logprob: -1.602198839187622
    3. 'ect' → logprob: -1.852198839187622
    4. 'ected' → logprob: -4.727199077606201
    5. 'ects' → logprob: -4.727199077606201
    6. 's' → logprob: -6.977199077606201
    7. 'ections' → logprob: -6.977199077606201
    8. '=[' → logprob: -8.102198600769043
    9. 'ct' → logprob: -8.477198600769043
    10. '[' → logprob: -8.602198600769043

Token 519: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016063109040260315
    2. ' [' → logprob: -4.141063213348389
    3. '[N' → logprob: -11.01606273651123
    4. '[-' → logprob: -11.39106273651123
    5. '0' → logprob: -14.64106273651123
    6. '[n' → logprob: -15.51606273651123
    7. ' ' → logprob: -15.64106273651123
    8. '   ' → logprob: -15.76606273651123
    9. ' [-' → logprob: -16.516063690185547
    10. '  ' → logprob: -18.266063690185547

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03383034095168114
    2. '[' → logprob: -3.408830404281616
    3. '[N' → logprob: -9.533830642700195
    4. ' [' → logprob: -10.158830642700195
    5. ' ' → logprob: -10.283830642700195
    6. 'float' → logprob: -10.908830642700195
    7. '[-' → logprob: -11.533830642700195
    8. '1' → logprob: -13.283830642700195
    9. '   ' → logprob: -13.283830642700195
    10. '-' → logprob: -13.283830642700195

Token 521: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.906711546937004e-05
    2. ' ]' → logprob: -10.125048637390137
    3. '   ' → logprob: -12.500048637390137
    4. '.' → logprob: -13.250048637390137
    5. ']*' → logprob: -13.750048637390137
    6. '+' → logprob: -14.375048637390137
    7. ')' → logprob: -14.625048637390137
    8. '[' → logprob: -15.250048637390137
    9. '0' → logprob: -15.750048637390137
    10. '']' → logprob: -15.875048637390137

Token 522: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3137180805206299
    2. ']' → logprob: -1.4387180805206299
    3. ')' → logprob: -4.563717842102051
    4. '*' → logprob: -4.938717842102051
    5. ' ]' → logprob: -4.938717842102051
    6. '[' → logprob: -5.688717842102051
    7. ' [' → logprob: -6.188717842102051
    8. ' ' → logprob: -7.813717842102051
    9. '[]' → logprob: -8.06371784210205
    10. ']*' → logprob: -8.31371784210205

Token 523: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.6405310816480778e-05
    2. '(N' → logprob: -11.375016212463379
    3. ' N' → logprob: -12.250016212463379
    4. '(' → logprob: -18.500017166137695
    5. '
' → logprob: -18.625017166137695
    6. ' ' → logprob: -19.000017166137695
    7. '   ' → logprob: -19.125017166137695
    8. '	N' → logprob: -19.750017166137695
    9. '[N' → logprob: -19.875017166137695
    10. '```' → logprob: -20.375017166137695

Token 524: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11579599976539612
    2. '   ' → logprob: -2.8657960891723633
    3. ')' → logprob: -3.9907960891723633
    4. '#' → logprob: -4.740796089172363
    5. '
' → logprob: -5.115796089172363
    6. '[' → logprob: -5.365796089172363
    7. '    
' → logprob: -5.490796089172363
    8. ' 
' → logprob: -6.365796089172363
    9. '<|end|>' → logprob: -6.490796089172363
    10. ' ' → logprob: -6.490796089172363

Token 526: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.13380281627178192
    2. '0' → logprob: -2.758802890777588
    3. '[' → logprob: -3.133802890777588
    4. ' exp' → logprob: -4.383802890777588
    5. 'pro' → logprob: -5.883802890777588
    6. '   ' → logprob: -7.133802890777588
    7. 'prob' → logprob: -7.258802890777588
    8. ' ' → logprob: -7.758802890777588
    9. ' [' → logprob: -7.758802890777588
    10. '1' → logprob: -8.00880241394043

Token 527: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0026824220549315214
    2. 's' → logprob: -7.127682209014893
    3. 'ected' → logprob: -7.252682209014893
    4. 'ects' → logprob: -7.377682209014893
    5. 'ect' → logprob: -7.752682209014893
    6. '=' → logprob: -11.25268268585205
    7. 'ections' → logprob: -11.25268268585205
    8. 'ex' → logprob: -11.37768268585205
    9. 'os' → logprob: -11.50268268585205
    10. '[' → logprob: -11.75268268585205

Token 528: '[v' (ID: 36561)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0495202541351318
    2. '<|end|>' → logprob: -1.1745202541351318
    3. ' =' → logprob: -1.5495202541351318
    4. ')' → logprob: -2.799520254135132
    5. '[' → logprob: -3.424520254135132
    6. '<|end|>' → logprob: -4.674520492553711
    7. '=' → logprob: -4.799520492553711
    8. '   ' → logprob: -5.424520492553711
    9. '[]' → logprob: -5.924520492553711
    10. '#' → logprob: -6.299520492553711

Token 529: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020535506773740053
    2. ' =' → logprob: -6.752053737640381
    3. '=' → logprob: -7.127053737640381
    4. '[v' → logprob: -10.252053260803223
    5. ' ]' → logprob: -10.752053260803223
    6. ']=' → logprob: -11.252053260803223
    7. '   ' → logprob: -12.252053260803223
    8. ')' → logprob: -12.627053260803223
    9. '[' → logprob: -14.877053260803223
    10. '#' → logprob: -15.377053260803223

Token 530: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033674973994493484
    2. ' =' → logprob: -3.408674955368042
    3. ')' → logprob: -11.783675193786621
    4. ']' → logprob: -11.908675193786621
    5. '[' → logprob: -12.033675193786621
    6. '<|end|>' → logprob: -12.408675193786621
    7. '#' → logprob: -13.158675193786621
    8. ' ' → logprob: -13.533675193786621
    9. '=
' → logprob: -14.783675193786621
    10. '=[]' → logprob: -15.283675193786621

Token 531: 'i' (ID: 72)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41688624024391174
    2. 'ains' → logprob: -2.041886329650879
    3. 'u' → logprob: -2.541886329650879
    4. ' =' → logprob: -3.666886329650879
    5. 'a' → logprob: -4.041886329650879
    6. '=' → logprob: -4.166886329650879
    7. '   ' → logprob: -4.416886329650879
    8. 'ues' → logprob: -4.416886329650879
    9. 'in' → logprob: -4.916886329650879
    10. 'ents' → logprob: -5.416886329650879

Token 532: 'endra' (ID: 32364)
  Prédit: 'nent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nent' → logprob: -1.205259084701538
    2. '[' → logprob: -1.455259084701538
    3. 'n' → logprob: -1.705259084701538
    4. 'nt' → logprob: -2.330259084701538
    5. 'ent' → logprob: -2.580259084701538
    6. ']' → logprob: -3.080259084701538
    7. 't' → logprob: -4.330259323120117
    8. 'a' → logprob: -5.205259323120117
    9. 'ner' → logprob: -5.330259323120117
    10. ' =' → logprob: -5.455259323120117

Token 533: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003982943017035723
    2. ' ' → logprob: -5.878983020782471
    3. '[' → logprob: -6.878983020782471
    4. '(' → logprob: -9.628982543945312
    5. ']' → logprob: -11.003982543945312
    6. '   ' → logprob: -11.253982543945312
    7. '1' → logprob: -11.503982543945312
    8. 'float' → logprob: -11.878982543945312
    9. ')' → logprob: -12.003982543945312
    10. ' [' → logprob: -12.253982543945312

Token 534: ''esp' (ID: 73244)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0166743993759155
    2. ''' → logprob: -1.1416743993759155
    3. '[' → logprob: -2.391674518585205
    4. 'prob' → logprob: -3.516674518585205
    5. ' =' → logprob: -3.516674518585205
    6. ''esp' → logprob: -3.641674518585205
    7. 'e' → logprob: -4.016674518585205
    8. ']' → logprob: -4.391674518585205
    9. '_prob' → logprob: -4.391674518585205
    10. '=' → logprob: -4.641674518585205

Token 535: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.10381541401147842
    2. 'er' → logprob: -2.8538153171539307
    3. 'ected' → logprob: -4.35381555557251
    4. 'é' → logprob: -4.60381555557251
    5. 'ér' → logprob: -6.22881555557251
    6. 'érence' → logprob: -6.47881555557251
    7. '[]' → logprob: -6.60381555557251
    8. 'ect' → logprob: -6.72881555557251
    9. 'aces' → logprob: -6.85381555557251
    10. 'es' → logprob: -7.10381555557251

Token 536: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5895718336105347
    2. 'de' → logprob: -2.089571952819824
    3. '   ' → logprob: -2.214571952819824
    4. ' de' → logprob: -2.589571952819824
    5. 'd' → logprob: -3.339571952819824
    6. '[v' → logprob: -3.839571952819824
    7. ' =' → logprob: -3.964571952819824
    8. '[]' → logprob: -4.589571952819824
    9. '_' → logprob: -4.714571952819824
    10. ' d' → logprob: -4.714571952819824

Token 537: 'le' (ID: 282)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11493871361017227
    2. ')' → logprob: -3.614938735961914
    3. 'prob' → logprob: -4.239938735961914
    4. 'de' → logprob: -4.489938735961914
    5. 'v' → logprob: -4.864938735961914
    6. 'float' → logprob: -4.989938735961914
    7. 'd' → logprob: -5.114938735961914
    8. 'pro' → logprob: -5.614938735961914
    9. '[' → logprob: -5.989938735961914
    10. 'esp' → logprob: -5.989938735961914

Token 538: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.33527234196662903
    2. 'nombre' → logprob: -1.3352723121643066
    3. 'temps' → logprob: -4.585272312164307
    4. ')' → logprob: -5.210272312164307
    5. ']' → logprob: -5.960272312164307
    6. ' )' → logprob: -7.210272312164307
    7. 'd' → logprob: -7.835272312164307
    8. '   ' → logprob: -8.335272789001465
    9. ' coût' → logprob: -8.585272789001465
    10. ' temps' → logprob: -8.585272789001465

Token 539: ' moyen' (ID: 46111)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49596524238586426
    2. ' de' → logprob: -1.3709652423858643
    3. 'de' → logprob: -2.3709652423858643
    4. ' d' → logprob: -3.8709652423858643
    5. 'd' → logprob: -4.495965003967285
    6. ')' → logprob: -6.120965003967285
    7. '_' → logprob: -6.245965003967285
    8. '    ' → logprob: -6.620965003967285
    9. '_de' → logprob: -6.620965003967285
    10. '  ' → logprob: -6.745965003967285

Token 540: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7249862551689148
    2. ' de' → logprob: -0.9749862551689148
    3. '   ' → logprob: -2.5999863147735596
    4. ' d' → logprob: -3.7249863147735596
    5. ')' → logprob: -3.8499863147735596
    6. 'd' → logprob: -4.2249860763549805
    7. '_' → logprob: -6.8499860763549805
    8. '_de' → logprob: -6.9749860763549805
    9. ' ' → logprob: -7.9749860763549805
    10. '  ' → logprob: -7.9749860763549805

Token 541: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08718890696763992
    2. 'steps' → logprob: -3.587188959121704
    3. 'ar' → logprob: -3.837188959121704
    4. 'clic' → logprob: -4.587188720703125
    5. 'pass' → logprob: -4.587188720703125
    6. 'vis' → logprob: -5.587188720703125
    7. 'passes' → logprob: -6.087188720703125
    8. 'arr' → logprob: -6.212188720703125
    9. 'cou' → logprob: -6.587188720703125
    10. 'c' → logprob: -7.087188720703125

Token 542: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0693846046924591
    2. ')' → logprob: -2.9443845748901367
    3. ' )' → logprob: -4.819384574890137
    4. '_' → logprob: -6.069384574890137
    5. '   ' → logprob: -6.694384574890137
    6. ' s' → logprob: -6.944384574890137
    7. '+' → logprob: -7.569384574890137
    8. ' ' → logprob: -8.194384574890137
    9. ' nécessaires' → logprob: -8.694384574890137
    10. ' +' → logprob: -8.944384574890137

Token 543: ' atteindre' (ID: 95734)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6204448938369751
    2. 'arr' → logprob: -0.8704448938369751
    3. '   ' → logprob: -4.4954447746276855
    4. ' arriver' → logprob: -4.6204447746276855
    5. 'atte' → logprob: -4.7454447746276855
    6. ' v' → logprob: -5.2454447746276855
    7. ' ' → logprob: -5.9954447746276855
    8. 'venir' → logprob: -6.4954447746276855
    9. ' atteindre' → logprob: -6.9954447746276855
    10. ' parvenir' → logprob: -7.1204447746276855

Token 544: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01342750247567892
    2. ' v' → logprob: -4.388427734375
    3. 'le' → logprob: -7.388427734375
    4. ' le' → logprob: -8.263427734375
    5. '   ' → logprob: -11.138427734375
    6. ')' → logprob: -11.388427734375
    7. '[v' → logprob: -12.763427734375
    8. '0' → logprob: -12.888427734375
    9. ' chaque' → logprob: -12.888427734375
    10. 'cha' → logprob: -13.138427734375

Token 545: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008371785283088684
    2. '   ' → logprob: -5.258371829986572
    3. ' )' → logprob: -6.383371829986572
    4. '[' → logprob: -7.508371829986572
    5. ')
' → logprob: -8.008371353149414
    6. 'from' → logprob: -8.508371353149414
    7. ']' → logprob: -9.258371353149414
    8. '[v' → logprob: -10.008371353149414
    9. ' depuis' → logprob: -10.008371353149414
    10. ').' → logprob: -10.508371353149414

Token 546: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10808873176574707
    2. ' ' → logprob: -2.733088731765747
    3. 'v' → logprob: -4.483088493347168
    4. ' v' → logprob: -4.733088493347168
    5. 'le' → logprob: -4.858088493347168
    6. ' le' → logprob: -5.108088493347168
    7. ')' → logprob: -6.108088493347168
    8. ' la' → logprob: -7.733088493347168
    9. '   ' → logprob: -8.608088493347168
    10. 'start' → logprob: -9.108088493347168

Token 547: ' départ' (ID: 32693)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014088050462305546
    2. 'start' → logprob: -5.139088153839111
    3. 'dé' → logprob: -5.264088153839111
    4. ' ' → logprob: -6.639088153839111
    5. 's' → logprob: -7.514088153839111
    6. 'depart' → logprob: -8.389087677001953
    7. ' départ' → logprob: -8.639087677001953
    8. 'd' → logprob: -8.764087677001953
    9. ')' → logprob: -8.764087677001953
    10. 'som' → logprob: -9.139087677001953

Token 548: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009807445108890533
    2. ')
' → logprob: -5.009807586669922
    3. '   ' → logprob: -6.134807586669922
    4. ' )' → logprob: -7.509807586669922
    5. ').' → logprob: -9.384807586669922
    6. '[' → logprob: -9.384807586669922
    7. ']' → logprob: -9.759807586669922
    8. ' )
' → logprob: -10.384807586669922
    9. '.' → logprob: -10.634807586669922
    10. '.)' → logprob: -11.384807586669922

Token 549: '   ' (ID: 271)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.21200592815876007
    2. '   ' → logprob: -1.9620059728622437
    3. '
' → logprob: -3.212005853652954
    4. '```' → logprob: -5.587006092071533
    5. '    
' → logprob: -5.962006092071533
    6. 'prob' → logprob: -6.712006092071533
    7. '  
' → logprob: -6.837006092071533
    8. ' probs' → logprob: -7.837006092071533
    9. '   
' → logprob: -8.087005615234375
    10. '[' → logprob: -8.212005615234375

Token 550: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.007512568961828947
    2. '   ' → logprob: -5.50751256942749
    3. '
' → logprob: -6.25751256942749
    4. 'prob' → logprob: -7.00751256942749
    5. ' probs' → logprob: -7.63251256942749
    6. '```' → logprob: -9.632512092590332
    7. '    
' → logprob: -11.257512092590332
    8. 'import' → logprob: -11.257512092590332
    9. 'p' → logprob: -11.882512092590332
    10. 'for' → logprob: -12.507512092590332

Token 551: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000205566844670102
    2. ' =' → logprob: -9.000205993652344
    3. '=' → logprob: -9.625205993652344
    4. '=[' → logprob: -11.750205993652344
    5. ' [' → logprob: -13.000205993652344
    6. '\[' → logprob: -13.500205993652344
    7. 's' → logprob: -14.125205993652344
    8. '[:]' → logprob: -14.375205993652344
    9. ',' → logprob: -14.500205993652344
    10. ']' → logprob: -14.750205993652344

Token 552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -20.5
    4. '[' → logprob: -20.625
    5. '
' → logprob: -20.75
    6. '```' → logprob: -21.25
    7. '۰' → logprob: -21.375
    8. ']' → logprob: -21.625
    9. '０' → logprob: -22.875
    10. '1' → logprob: -22.875

Token 553: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.7432603272027336e-06
    2. ' ]' → logprob: -13.500001907348633
    3. ']=' → logprob: -15.250001907348633
    4. ']+=' → logprob: -17.500001907348633
    5. ')' → logprob: -17.875001907348633
    6. ']
' → logprob: -18.000001907348633
    7. '[' → logprob: -18.500001907348633
    8. '()]' → logprob: -19.625001907348633
    9. '=' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.125001907348633

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. ',' → logprob: -16.673587799072266
    4. '[' → logprob: -17.173587799072266
    5. '1' → logprob: -19.048587799072266
    6. '＝' → logprob: -19.173587799072266
    7. '+=' → logprob: -19.423587799072266
    8. ' ' → logprob: -19.923587799072266
    9. 's' → logprob: -20.048587799072266
    10. ' +=' → logprob: -20.298587799072266

Token 555: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.125001907348633
    3. '100' → logprob: -14.625001907348633
    4. 'Fraction' → logprob: -15.875001907348633
    5. '0' → logprob: -16.625001907348633
    6. 'Decimal' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.125001907348633
    8. 'float' → logprob: -17.500001907348633
    9. '[' → logprob: -17.562501907348633
    10. 'fraction' → logprob: -18.062501907348633

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '100' → logprob: -14.375000953674316
    3. 'Fraction' → logprob: -15.625000953674316
    4. ' ' → logprob: -15.750000953674316
    5. '0' → logprob: -15.750000953674316
    6. '[' → logprob: -16.500001907348633
    7. 'Decimal' → logprob: -17.250001907348633
    8. 'float' → logprob: -17.375001907348633
    9. '(' → logprob: -17.562501907348633
    10. '{' → logprob: -17.625001907348633

Token 557: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11348456144332886
    2. '<|end|>' → logprob: -2.8634846210479736
    3. '
' → logprob: -3.4884846210479736
    4. '0' → logprob: -4.4884843826293945
    5. '   ' → logprob: -5.8634843826293945
    6. ')' → logprob: -5.9884843826293945
    7. '  ' → logprob: -7.3634843826293945
    8. '<|end|>' → logprob: -7.4884843826293945
    9. ' ' → logprob: -7.7384843826293945
    10. '    
' → logprob: -8.113484382629395

Token 559: ' Au' (ID: 18016)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7255648970603943
    2. '<|end|>' → logprob: -1.100564956665039
    3. '
' → logprob: -2.725564956665039
    4. '0' → logprob: -2.850564956665039
    5. '1' → logprob: -3.350564956665039
    6. '```' → logprob: -4.725564956665039
    7. ')' → logprob: -5.850564956665039
    8. '<|end|>' → logprob: -5.850564956665039
    9. ' ' → logprob: -5.975564956665039
    10. 'pro' → logprob: -6.475564956665039

Token 560: ' début' (ID: 29589)
  Prédit: ' départ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' départ' → logprob: -0.7719457149505615
    2. 'def' → logprob: -1.6469457149505615
    3. '0' → logprob: -2.0219457149505615
    4. 'd' → logprob: -3.0219457149505615
    5. 'dé' → logprob: -3.0219457149505615
    6. '<|end|>' → logprob: -3.5219457149505615
    7. '[' → logprob: -4.271945953369141
    8. 'depart' → logprob: -4.521945953369141
    9. 'start' → logprob: -4.771945953369141
    10. '_' → logprob: -5.146945953369141

Token 561: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07375498861074448
    2. ' ' → logprob: -3.9487550258636475
    3. 'pro' → logprob: -3.9487550258636475
    4. 'prob' → logprob: -4.573754787445068
    5. '1' → logprob: -4.698754787445068
    6. 'exp' → logprob: -4.948754787445068
    7. '#' → logprob: -5.948754787445068
    8. '<|end|>' → logprob: -6.948754787445068
    9. '...' → logprob: -7.573754787445068
    10. '   ' → logprob: -8.073755264282227

Token 563: ' prob' (ID: 4921)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6944688558578491
    2. ' point' → logprob: -2.3194689750671387
    3. ' départ' → logprob: -2.6944689750671387
    4. 'pro' → logprob: -2.8194689750671387
    5. 'dé' → logprob: -2.8194689750671387
    6. 'start' → logprob: -2.9444689750671387
    7. ' sommet' → logprob: -3.1944689750671387
    8. 'prem' → logprob: -3.4444689750671387
    9. 's' → logprob: -3.6944689750671387
    10. 'prob' → logprob: -3.9444689750671387

Token 564: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.0011941560078412294
    2. 'ability' → logprob: -7.751194000244141
    3. '   ' → logprob: -8.62619400024414
    4. 'b' → logprob: -9.00119400024414
    5. 'ab' → logprob: -9.00119400024414
    6. 'abil' → logprob: -9.00119400024414
    7. ' ' → logprob: -9.75119400024414
    8. 'alité' → logprob: -10.00119400024414
    9. 'ilité' → logprob: -11.00119400024414
    10. 's' → logprob: -11.25119400024414

Token 565: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.077377438545227
    2. 'd' → logprob: -1.327377438545227
    3. 'de' → logprob: -1.577377438545227
    4. ' d' → logprob: -1.827377438545227
    5. '[' → logprob: -4.4523773193359375
    6. ' ' → logprob: -5.5773773193359375
    7. ' que' → logprob: -5.8273773193359375
    8. 'def' → logprob: -6.3273773193359375
    9. 'pour' → logprob: -6.4523773193359375
    10. ' pour' → logprob: -6.8273773193359375

Token 566: ''être' (ID: 47704)
  Prédit: ''arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''arr' → logprob: -0.24263440072536469
    2. ''arrivée' → logprob: -2.2426342964172363
    3. 'arr' → logprob: -3.2426342964172363
    4. '_' → logprob: -3.6176342964172363
    5. '_arr' → logprob: -3.7426342964172363
    6. ''arrive' → logprob: -4.867634296417236
    7. 'e' → logprob: -5.367634296417236
    8. 'd' → logprob: -5.992634296417236
    9. '’arr' → logprob: -6.867634296417236
    10. ''' → logprob: -6.992634296417236

Token 567: ' sur' (ID: 1512)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.04241150990128517
    2. ' au' → logprob: -4.0424113273620605
    3. 'sur' → logprob: -4.6674113273620605
    4. 'à' → logprob: -4.9174113273620605
    5. ' ' → logprob: -6.0424113273620605
    6. '1' → logprob: -6.1674113273620605
    7. 'dans' → logprob: -6.6674113273620605
    8. ' at' → logprob: -8.167411804199219
    9. '0' → logprob: -8.167411804199219
    10. 'exact' → logprob: -8.667411804199219

Token 568: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002124684164300561
    2. ' ' → logprob: -6.377124786376953
    3. 'pro' → logprob: -8.252124786376953
    4. 'le' → logprob: -9.127124786376953
    5. ' le' → logprob: -10.002124786376953
    6. ' la' → logprob: -12.877124786376953
    7. 'prob' → logprob: -13.502124786376953
    8. '[' → logprob: -13.877124786376953
    9. 'la' → logprob: -14.002124786376953
    10. '   ' → logprob: -14.252124786376953

Token 569: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045115601271390915
    2. 'som' → logprob: -3.1701157093048096
    3. ' ' → logprob: -6.5451154708862305
    4. ' sommet' → logprob: -7.6701154708862305
    5. 'prem' → logprob: -9.17011547088623
    6. 's' → logprob: -9.92011547088623
    7. 'dé' → logprob: -10.42011547088623
    8. 'point' → logprob: -11.79511547088623
    9. 'start' → logprob: -11.92011547088623
    10. 'no' → logprob: -12.79511547088623

Token 570: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12701451778411865
    2. ' ' → logprob: -2.127014636993408
    3. ' de' → logprob: -10.25201416015625
    4. 'de' → logprob: -10.25201416015625
    5. '[' → logprob: -11.62701416015625
    6. '_' → logprob: -13.00201416015625
    7. '(' → logprob: -13.62701416015625
    8. '```' → logprob: -14.12701416015625
    9. ' ' → logprob: -14.87701416015625
    10. ' zéro' → logprob: -15.00201416015625

Token 571: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.20142608880996704
    2. '0' → logprob: -1.8264260292053223
    3. 'd' → logprob: -4.326426029205322
    4. ' départ' → logprob: -5.326426029205322
    5. 'depart' → logprob: -5.951426029205322
    6. ' ' → logprob: -7.576426029205322
    7. 'l' → logprob: -8.95142650604248
    8. 'departure' → logprob: -10.70142650604248
    9. 'origine' → logprob: -10.82642650604248
    10. '_' → logprob: -11.07642650604248

Token 572: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8421311974525452
    2. '0' → logprob: -1.2171311378479004
    3. '<|end|>' → logprob: -1.7171311378479004
    4. '[' → logprob: -2.8421311378479004
    5. ' (' → logprob: -4.5921311378479
    6. ' =' → logprob: -5.2171311378479
    7. ' is' → logprob: -5.3421311378479
    8. ' at' → logprob: -6.2171311378479
    9. ',' → logprob: -6.2171311378479
    10. ' est' → logprob: -6.5921311378479

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -17.000030517578125
    4. '```' → logprob: -17.500030517578125
    5. '`' → logprob: -17.750030517578125
    6. '#' → logprob: -19.625030517578125
    7. '=' → logprob: -19.750030517578125
    8. '[' → logprob: -19.875030517578125
    9. '(' → logprob: -20.000030517578125
    10. '`)' → logprob: -20.250030517578125

Token 574: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004746129736304283
    2. ' )' → logprob: -5.754745960235596
    3. ']' → logprob: -6.879745960235596
    4. ' est' → logprob: -8.379746437072754
    5. '[' → logprob: -9.004746437072754
    6. '0' → logprob: -9.879746437072754
    7. '   ' → logprob: -10.129746437072754
    8. '])' → logprob: -10.754746437072754
    9. 'def' → logprob: -11.629746437072754
    10. ',' → logprob: -12.004746437072754

Token 575: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.000335693359375
    4. '   ' → logprob: -17.125335693359375
    5. '=' → logprob: -17.625335693359375
    6. '`' → logprob: -17.750335693359375
    7. ' ' → logprob: -19.375335693359375
    8. ' =' → logprob: -19.500335693359375
    9. '100' → logprob: -20.125335693359375
    10. '  ' → logprob: -20.375335693359375

Token 577: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '```' → logprob: -17.126171112060547
    4. '   ' → logprob: -18.751171112060547
    5. '`' → logprob: -19.251171112060547
    6. '  ' → logprob: -19.376171112060547
    7. ' ' → logprob: -19.501171112060547
    8. '=' → logprob: -20.376171112060547
    9. '0' → logprob: -21.126171112060547
    10. '    ' → logprob: -21.251171112060547

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.500295639038086
    4. '  ' → logprob: -17.125295639038086
    5. '100' → logprob: -18.000295639038086
    6. '

' → logprob: -18.750295639038086
    7. '`' → logprob: -18.875295639038086
    8. '0' → logprob: -19.000295639038086
    9. '```' → logprob: -19.000295639038086
    10. '
' → logprob: -19.250295639038086

Token 579: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: 'certain' (ID: 155618)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019351007416844368
    2. ' )' → logprob: -4.519351005554199
    3. '.' → logprob: -5.894351005554199
    4. '
' → logprob: -6.644351005554199
    5. '   ' → logprob: -6.644351005554199
    6. ').' → logprob: -6.644351005554199
    7. ')
' → logprob: -8.0193510055542
    8. ')\' → logprob: -8.3943510055542
    9. '1' → logprob: -8.6443510055542
    10. ',' → logprob: -8.6443510055542

Token 581: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017401513177901506
    2. 'e' → logprob: -6.626739978790283
    3. ' )' → logprob: -8.626740455627441
    4. '.' → logprob: -9.001740455627441
    5. ').' → logprob: -9.501740455627441
    6. ' ' → logprob: -11.376740455627441
    7. '  ' → logprob: -12.126740455627441
    8. '   ' → logprob: -12.751740455627441
    9. ' ' → logprob: -12.751740455627441
    10. ']' → logprob: -13.376740455627441

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.919031023979187
    2. '
' → logprob: -1.169031023979187
    3. 'for' → logprob: -1.919031023979187
    4. 'queue' → logprob: -2.7940311431884766
    5. '```' → logprob: -3.0440311431884766
    6. 'from' → logprob: -3.9190311431884766
    7. ' for' → logprob: -5.419031143188477
    8. 'import' → logprob: -5.544031143188477
    9. '    
' → logprob: -6.169031143188477
    10. 'deque' → logprob: -6.919031143188477

Token 583: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9212678670883179
    2. '   ' → logprob: -1.4212678670883179
    3. 'queue' → logprob: -1.4212678670883179
    4. 'for' → logprob: -2.6712679862976074
    5. 'import' → logprob: -3.5462679862976074
    6. '
' → logprob: -4.046267986297607
    7. 'while' → logprob: -7.296267986297607
    8. '#' (adapté à ' #') → logprob: -7.296267986297607
    9. 'visited' → logprob: -7.421267986297607
    10. ' from' → logprob: -7.921267986297607

Token 584: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0603281632065773
    2. 'for' → logprob: -3.310328245162964
    3. 'queue' → logprob: -4.060328006744385
    4. 'import' → logprob: -5.435328006744385
    5. 'changed' → logprob: -8.310328483581543
    6. '#' → logprob: -9.560328483581543
    7. 'while' → logprob: -10.810328483581543
    8. 'stack' → logprob: -10.810328483581543
    9. '```' → logprob: -11.060328483581543
    10. 'visited' → logprob: -11.435328483581543

Token 585: ' parc' (ID: 22138)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6669699549674988
    2. ' from' → logprob: -0.9169699549674988
    3. ' for' → logprob: -3.0419700145721436
    4. 'for' → logprob: -3.5419700145721436
    5. '   ' → logprob: -5.7919697761535645
    6. ' queue' → logprob: -6.1669697761535645
    7. 'import' → logprob: -6.2919697761535645
    8. 'queue' → logprob: -6.6669697761535645
    9. ' import' → logprob: -7.4169697761535645
    10. '
' → logprob: -7.6669697761535645

Token 586: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.12837447226047516
    2. 'ours' → logprob: -2.1283745765686035
    3. 'oure' → logprob: -7.0033745765686035
    4. 'court' → logprob: -8.628374099731445
    5. 'our' → logprob: -9.503374099731445
    6. 'c' → logprob: -9.503374099731445
    7. '
' → logprob: -9.628374099731445
    8. '_' → logprob: -9.628374099731445
    9. 's' → logprob: -11.253374099731445
    10. 'ourse' → logprob: -11.878374099731445

Token 587: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2035636007785797
    2. 'range' → logprob: -1.7035635709762573
    3. ' in' → logprob: -8.078563690185547
    4. ' reversed' → logprob: -8.203563690185547
    5. ' out' → logprob: -8.328563690185547
    6. 's' → logprob: -8.828563690185547
    7. 'out' → logprob: -8.953563690185547
    8. ' for' → logprob: -9.078563690185547
    9. ' i' → logprob: -9.203563690185547
    10. '_' → logprob: -9.453563690185547

Token 588: ' somm' (ID: 44830)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6784506440162659
    2. 'range' → logprob: -1.803450584411621
    3. 'v' → logprob: -3.053450584411621
    4. 's' → logprob: -3.303450584411621
    5. ' v' → logprob: -3.803450584411621
    6. ' for' → logprob: -3.803450584411621
    7. 'adj' → logprob: -3.803450584411621
    8. ' vertices' → logprob: -3.928450584411621
    9. 'for' → logprob: -4.053450584411621
    10. 'i' → logprob: -4.178450584411621

Token 589: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.01095172856003046
    2. 'es' → logprob: -5.260951519012451
    3. 'et' → logprob: -5.635951519012451
    4. 'e' → logprob: -6.260951519012451
    5. 'etes' → logprob: -9.88595199584961
    6. 'ètres' → logprob: -9.88595199584961
    7. 't' → logprob: -10.88595199584961
    8. 'tes' → logprob: -11.13595199584961
    9. 'ètes' → logprob: -11.38595199584961
    10. '#' → logprob: -11.63595199584961

Token 590: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9853401780128479
    2. '   ' → logprob: -0.9853401780128479
    3. ' in' → logprob: -2.610340118408203
    4. ',' → logprob: -2.735340118408203
    5. ' :' → logprob: -2.985340118408203
    6. ' en' → logprob: -4.235340118408203
    7. ' v' → logprob: -4.735340118408203
    8. 'v' → logprob: -5.235340118408203
    9. ' for' → logprob: -5.360340118408203
    10. ' ' → logprob: -5.485340118408203

Token 591: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005473398603498936
    2. ' range' → logprob: -5.255473613739014
    3. 're' → logprob: -8.630473136901855
    4. 'queue' → logprob: -11.505473136901855
    5. '
' → logprob: -11.880473136901855
    6. '(range' → logprob: -12.005473136901855
    7. 'top' → logprob: -12.255473136901855
    8. 'reverse' → logprob: -12.505473136901855
    9. 'rang' → logprob: -12.505473136901855
    10. '[]' → logprob: -12.630473136901855

Token 592: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09916383773088455
    2. ' range' → logprob: -2.724163770675659
    3. 'ange' → logprob: -3.724163770675659
    4. 'e' → logprob: -7.099164009094238
    5. 'rang' → logprob: -7.349164009094238
    6. 'for' → logprob: -7.474164009094238
    7. ''ordre' → logprob: -7.849164009094238
    8. '_range' → logprob: -8.224164009094238
    9. '#' → logprob: -8.349164009094238
    10. 're' → logprob: -8.349164009094238

Token 593: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11711231619119644
    2. ',' → logprob: -3.617112398147583
    3. ' for' → logprob: -3.742112398147583
    4. ' de' → logprob: -4.492112159729004
    5. ' des' → logprob: -5.117112159729004
    6. ' in' → logprob: -5.117112159729004
    7. ' range' → logprob: -5.117112159729004
    8. 'for' → logprob: -5.242112159729004
    9. ' =' → logprob: -5.742112159729004
    10. ' of' → logprob: -5.867112159729004

Token 594: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.03002782352268696
    2. 'issante' → logprob: -3.5300278663635254
    3. 'issance' → logprob: -8.905027389526367
    4. 'issent' → logprob: -10.280027389526367
    5. 'iss' → logprob: -10.655027389526367
    6. 'issan' → logprob: -10.905027389526367
    7. 'ss' → logprob: -10.905027389526367
    8. 'issa' → logprob: -11.405027389526367
    9. 'isse' → logprob: -11.530027389526367
    10. 'ix' → logprob: -11.905027389526367

Token 595: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8924227356910706
    2. ':' → logprob: -1.5174226760864258
    3. 'range' → logprob: -2.517422676086426
    4. '(range' → logprob: -2.517422676086426
    5. ' range' → logprob: -2.642422676086426
    6. 'for' → logprob: -2.892422676086426
    7. '(' → logprob: -3.142422676086426
    8. ' for' → logprob: -3.517422676086426
    9. ',' → logprob: -5.642422676086426
    10. ' in' → logprob: -6.517422676086426

Token 596: ' prop' (ID: 5892)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9377985596656799
    2. ' range' → logprob: -1.5627985000610352
    3. ' v' → logprob: -1.6877985000610352
    4. '_' → logprob: -1.8127985000610352
    5. 'range' → logprob: -3.437798500061035
    6. 'i' → logprob: -5.187798500061035
    7. ' i' → logprob: -6.062798500061035
    8. 't' → logprob: -6.187798500061035
    9. ' _' → logprob: -6.687798500061035
    10. 's' → logprob: -6.812798500061035

Token 597: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.0005678066518157721
    2. 'ag' → logprob: -8.500567436218262
    3. 'érer' → logprob: -9.125567436218262
    4. 'agir' → logprob: -10.000567436218262
    5. 'er' → logprob: -10.625567436218262
    6. '   ' → logprob: -10.875567436218262
    7. 'agé' → logprob: -11.000567436218262
    8. 'oser' → logprob: -11.250567436218262
    9. 'arger' → logprob: -11.375567436218262
    10. 'r' → logprob: -11.500567436218262

Token 598: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6040427684783936
    2. ' la' → logprob: -1.6040427684783936
    3. 'prob' → logprob: -2.1040427684783936
    4. ' les' → logprob: -3.3540427684783936
    5. ' the' → logprob: -3.4790427684783936
    6. ' probabilities' → logprob: -3.6040427684783936
    7. 'the' → logprob: -4.479043006896973
    8. 'pro' → logprob: -5.729043006896973
    9. ')' → logprob: -5.854043006896973
    10. ' le' → logprob: -6.354043006896973

Token 599: ' probabil' (ID: 76890)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.35700878500938416
    2. 'pro' → logprob: -1.7320088148117065
    3. 'for' → logprob: -3.107008695602417
    4. ' probabil' → logprob: -3.857008695602417
    5. '   ' → logprob: -3.982008695602417
    6. ' for' → logprob: -3.982008695602417
    7. '```' → logprob: -5.357008934020996
    8. ' probabilities' → logprob: -5.982008934020996
    9. ' ' → logprob: -6.107008934020996
    10. 's' → logprob: -6.482008934020996

Token 600: 'ités' (ID: 12479)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031995147466659546
    2. 'ités' → logprob: -3.5319950580596924
    3. 'és' → logprob: -6.6569952964782715
    4. 'té' → logprob: -7.6569952964782715
    5. 'ties' → logprob: -8.406994819641113
    6. 'étés' → logprob: -9.031994819641113
    7. 's' → logprob: -9.406994819641113
    8. 'tes' → logprob: -11.656994819641113
    9. '#' → logprob: -11.781994819641113
    10. '##' → logprob: -12.406994819641113

Token 601: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07175707072019577
    2. ':' → logprob: -3.3217570781707764
    3. ',' → logprob: -4.571756839752197
    4. ' for' → logprob: -5.196756839752197
    5. 'for' → logprob: -5.696756839752197
    6. '.' → logprob: -5.821756839752197
    7. '    
' → logprob: -6.321756839752197
    8. '
' → logprob: -6.446756839752197
    9. '  
' → logprob: -6.446756839752197
    10. ' 
' → logprob: -6.821756839752197

Token 602: ' esp' (ID: 7461)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8153677582740784
    2. 'exp' → logprob: -1.3153676986694336
    3. 'l' → logprob: -1.8153676986694336
    4. 'esp' → logprob: -2.4403676986694336
    5. 'calcul' → logprob: -4.065367698669434
    6. ' les' → logprob: -4.565367698669434
    7. '   ' → logprob: -6.065367698669434
    8. ' calcul' → logprob: -6.440367698669434
    9. ' l' → logprob: -6.565367698669434
    10. ' esp' → logprob: -6.565367698669434

Token 603: 'ér' (ID: 2156)
  Prédit: 'érance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.9065155982971191
    2. 'érer' → logprob: -1.7815155982971191
    3. 'ér' → logprob: -2.281515598297119
    4. 'èces' → logprob: -2.406515598297119
    5. 'érences' → logprob: -3.406515598297119
    6. 'érons' → logprob: -3.406515598297119
    7. 'érés' → logprob: -3.531515598297119
    8. 'er' → logprob: -3.656515598297119
    9. 'aces' → logprob: -3.781515598297119
    10. 'érées' → logprob: -3.906515598297119

Token 604: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.017323249951004982
    2. 'ences' → logprob: -4.767323017120361
    3. 'n' → logprob: -5.142323017120361
    4. 'r' → logprob: -6.892323017120361
    5. 'ance' → logprob: -7.517323017120361
    6. 'v' → logprob: -7.892323017120361
    7. 't' → logprob: -8.51732349395752
    8. 'c' → logprob: -8.64232349395752
    9. 's' → logprob: -9.26732349395752
    10. '#' → logprob: -9.76732349395752

Token 605: ' aux' (ID: 5850)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41275620460510254
    2. '   ' → logprob: -1.4127562046051025
    3. 'for' → logprob: -3.4127562046051025
    4. '.' → logprob: -4.037755966186523
    5. ':
' → logprob: -4.037755966186523
    6. ' for' → logprob: -4.912755966186523
    7. ',' → logprob: -4.912755966186523
    8. ' :' → logprob: -5.162755966186523
    9. ' :
' → logprob: -6.537755966186523
    10. 'v' → logprob: -6.787755966186523

Token 606: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.24130918085575104
    2. '   ' → logprob: -2.99130916595459
    3. 'adj' → logprob: -2.99130916595459
    4. 'neighbors' → logprob: -3.49130916595459
    5. ' neighbors' → logprob: -3.61630916595459
    6. ' voisin' → logprob: -3.86630916595459
    7. ' range' → logprob: -4.99130916595459
    8. 's' → logprob: -5.11630916595459
    9. ' adj' → logprob: -5.49130916595459
    10. ' sommet' → logprob: -5.99130916595459

Token 607: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2428792268037796
    2. ':' → logprob: -1.6178792715072632
    3. '.' → logprob: -4.617879390716553
    4. ':
' → logprob: -6.242879390716553
    5. ' :' → logprob: -6.367879390716553
    6. ',' → logprob: -6.492879390716553
    7. '    
' → logprob: -7.867879390716553
    8. '
' → logprob: -7.992879390716553
    9. ' for' → logprob: -8.117878913879395
    10. 's' → logprob: -8.242878913879395

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11126459389925003
    2. 'for' → logprob: -2.486264705657959
    3. ' for' → logprob: -4.111264705657959
    4. '```' → logprob: -5.236264705657959
    5. '
' → logprob: -8.6112642288208
    6. '    
' → logprob: -9.2362642288208
    7. '       ' → logprob: -10.2362642288208
    8. '	for' → logprob: -10.7362642288208
    9. ' 
' → logprob: -11.4862642288208
    10. '   
' → logprob: -12.6112642288208

Token 609: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.41221556067466736
    2. '   ' → logprob: -1.4122155904769897
    3. ' for' → logprob: -2.4122154712677
    4. '
' → logprob: -5.787215709686279
    5. '```' → logprob: -6.537215709686279
    6. '    
' → logprob: -10.037215232849121
    7. '	for' → logprob: -10.537215232849121
    8. ' 
' → logprob: -12.287215232849121
    9. '       ' → logprob: -13.037215232849121
    10. '  
' → logprob: -13.412215232849121

Token 610: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16435649991035461
    2. 'u' → logprob: -2.0393564701080322
    3. ' v' → logprob: -4.039356708526611
    4. ' u' → logprob: -5.789356708526611
    5. 'i' → logprob: -7.539356708526611
    6. 'node' → logprob: -9.039356231689453
    7. 's' → logprob: -10.039356231689453
    8. ' node' → logprob: -10.039356231689453
    9. ' i' → logprob: -11.164356231689453
    10. 'x' → logprob: -12.164356231689453

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029895232990384102
    2. 'in' → logprob: -3.529895305633545
    3. ' ' → logprob: -9.529894828796387
    4. ',' → logprob: -10.529894828796387
    5. 'v' → logprob: -11.404894828796387
    6. '  ' → logprob: -12.279894828796387
    7. '	in' → logprob: -12.654894828796387
    8. ' ' → logprob: -13.029894828796387
    9. ' v' → logprob: -13.154894828796387
    10. ' ,' → logprob: -13.154894828796387

Token 612: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.611323624383658e-05
    2. ' range' → logprob: -9.625065803527832
    3. '(range' → logprob: -18.00006675720215
    4. '	range' → logprob: -19.75006675720215
    5. 'rang' → logprob: -20.12506675720215
    6. 'r' → logprob: -20.50006675720215
    7. '   ' → logprob: -20.50006675720215
    8. '0' → logprob: -20.62506675720215
    9. 'pro' → logprob: -20.87506675720215
    10. 'ran' → logprob: -21.37506675720215

Token 613: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02977166697382927
    2. '(' → logprob: -3.529771566390991
    3. '(
' → logprob: -11.77977180480957
    4. 'N' → logprob: -12.40477180480957
    5. '1' → logprob: -12.77977180480957
    6. ' (' → logprob: -13.02977180480957
    7. '(n' → logprob: -13.27977180480957
    8. '(V' → logprob: -13.77977180480957
    9. '(v' → logprob: -14.40477180480957
    10. '(len' → logprob: -15.15477180480957

Token 614: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015370006440207362
    2. '):
' → logprob: -6.501536846160889
    3. ':' → logprob: -11.126537322998047
    4. '+' → logprob: -11.251537322998047
    5. ')' → logprob: -12.876537322998047
    6. ' ):' → logprob: -13.251537322998047
    7. '   ' → logprob: -13.501537322998047
    8. '():' → logprob: -14.626537322998047
    9. '):
' → logprob: -15.001537322998047
    10. '}:' → logprob: -15.876537322998047

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03069089725613594
    2. 'if' → logprob: -4.280690670013428
    3. ' if' → logprob: -4.530690670013428
    4. '   ' → logprob: -6.030690670013428
    5. 'for' → logprob: -6.530690670013428
    6. ' for' → logprob: -6.905690670013428
    7. '```' → logprob: -7.405690670013428
    8. '	   ' → logprob: -10.030691146850586
    9. 'prob' → logprob: -10.280691146850586
    10. '	if' → logprob: -11.405691146850586

Token 616: ' prob' (ID: 4921)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2591467499732971
    2. ' if' → logprob: -2.0091466903686523
    3. '       ' → logprob: -3.0091466903686523
    4. 'for' → logprob: -3.3841466903686523
    5. ' for' → logprob: -5.634146690368652
    6. '   ' → logprob: -5.759146690368652
    7. 'deg' → logprob: -7.009146690368652
    8. 'neighbors' → logprob: -7.009146690368652
    9. 'prob' (adapté à ' prob') → logprob: -7.384146690368652
    10. 'out' → logprob: -7.634146690368652

Token 617: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23712992668151855
    2. '_v' → logprob: -1.7371299266815186
    3. '=' → logprob: -4.487130165100098
    4. 's' → logprob: -4.612130165100098
    5. 'v' → logprob: -4.862130165100098
    6. '_' → logprob: -5.362130165100098
    7. ',' → logprob: -8.237130165100098
    8. '[v' → logprob: -8.237130165100098
    9. '_s' → logprob: -8.362130165100098
    10. '_val' → logprob: -8.737130165100098

Token 618: ' ex' (ID: 513)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.48802614212036133
    2. ' exp' → logprob: -1.3630261421203613
    3. 'ex' → logprob: -2.7380261421203613
    4. ' prob' → logprob: -4.613026142120361
    5. 'pro' → logprob: -4.738026142120361
    6. 'prob' → logprob: -4.863026142120361
    7. 'p' → logprob: -5.113026142120361
    8. 'out' → logprob: -5.113026142120361
    9. '   ' → logprob: -5.363026142120361
    10. ' ex' → logprob: -5.363026142120361

Token 619: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.5665372014045715
    2. 'pes' → logprob: -1.4415371417999268
    3. 'p' → logprob: -1.6915371417999268
    4. 'ps' → logprob: -5.066537380218506
    5. '=' → logprob: -5.941537380218506
    6. ' =' → logprob: -6.441537380218506
    7. 'pos' → logprob: -8.066536903381348
    8. ',' → logprob: -8.691536903381348
    9. '```' → logprob: -9.566536903381348
    10. '   ' → logprob: -9.816536903381348

Token 620: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19595867395401
    2. ' =' → logprob: -1.8209586143493652
    3. 'ct' → logprob: -4.820958614349365
    4. 'c' → logprob: -5.320958614349365
    5. 'r' → logprob: -7.195958614349365
    6. 's' → logprob: -7.195958614349365
    7. 'v' → logprob: -7.570958614349365
    8. '   ' → logprob: -7.820958614349365
    9. ',' → logprob: -8.195959091186523
    10. '=v' → logprob: -8.945959091186523

Token 621: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.28046518564224243
    2. 'deg' → logprob: -2.0304651260375977
    3. 'prob' → logprob: -3.4054651260375977
    4. '   ' → logprob: -4.155465126037598
    5. 'de' → logprob: -4.280465126037598
    6. 'pro' → logprob: -4.655465126037598
    7. 'p' → logprob: -5.030465126037598
    8. 'neighbors' → logprob: -5.030465126037598
    9. 'count' → logprob: -5.280465126037598
    10. 'd' → logprob: -6.030465126037598

Token 622: 'deg' (ID: 30546)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.011095100082457066
    2. 'deg' → logprob: -4.63609504699707
    3. '=' → logprob: -7.51109504699707
    4. ' =' → logprob: -7.76109504699707
    5. '_de' → logprob: -8.38609504699707
    6. 'd' → logprob: -10.38609504699707
    7. 'degree' → logprob: -10.76109504699707
    8. 's' → logprob: -10.88609504699707
    9. '_deg' → logprob: -11.76109504699707
    10. 'degrees' → logprob: -11.88609504699707

Token 623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5510912537574768
    2. '=' → logprob: -0.9260912537574768
    3. 's' → logprob: -3.801091194152832
    4. '[v' → logprob: -5.426091194152832
    5. 'v' → logprob: -7.676091194152832
    6. '[s' → logprob: -8.426091194152832
    7. '=v' → logprob: -10.176091194152832
    8. '   ' → logprob: -10.426091194152832
    9. ' ' → logprob: -10.801091194152832
    10. '=s' → logprob: -11.176091194152832

Token 624: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -4.4418171455617994e-05
    2. ' probs' → logprob: -10.250044822692871
    3. 'prob' → logprob: -11.875044822692871
    4. '   ' → logprob: -13.250044822692871
    5. '       ' → logprob: -16.500043869018555
    6. '	pro' → logprob: -17.500043869018555
    7. '_probs' → logprob: -17.625043869018555
    8. '           ' → logprob: -17.875043869018555
    9. '(pro' → logprob: -18.125043869018555
    10. 'pr' → logprob: -18.375043869018555

Token 625: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.625004768371582
    3. 'v' → logprob: -14.125004768371582
    4. ' [' → logprob: -16.250003814697266
    5. '\[' → logprob: -17.375003814697266
    6. '```' → logprob: -17.500003814697266
    7. '[s' → logprob: -18.000003814697266
    8. '[u' → logprob: -18.125003814697266
    9. '[val' → logprob: -18.500003814697266
    10. '[V' → logprob: -19.375003814697266

Token 626: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5763794779777527
    2. '],' → logprob: -0.8263794779777527
    3. ']' → logprob: -7.826379299163818
    4. ' ,' → logprob: -11.076379776000977
    5. '   ' → logprob: -11.201379776000977
    6. ' ],' → logprob: -12.576379776000977
    7. '},' → logprob: -13.326379776000977
    8. '),' → logprob: -13.451379776000977
    9. '],[' → logprob: -13.701379776000977
    10. '[' → logprob: -13.701379776000977

Token 627: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -2.2007883671903983e-05
    2. ' exp' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. 'out' → logprob: -16.000022888183594
    5. 'adj' → logprob: -16.250022888183594
    6. '	exp' → logprob: -16.875022888183594
    7. 'ex' → logprob: -18.750022888183594
    8. ' ' → logprob: -19.000022888183594
    9. '(exp' → logprob: -19.375022888183594
    10. '  ' → logprob: -19.875022888183594

Token 628: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0004854882718063891
    2. 'out' → logprob: -7.750485420227051
    3. 'exp' → logprob: -11.37548542022705
    4. 'des' → logprob: -11.50048542022705
    5. 'ex' → logprob: -12.50048542022705
    6. ' out' → logprob: -12.87548542022705
    7. ' es' → logprob: -13.12548542022705
    8. 'ses' → logprob: -13.37548542022705
    9. 'res' → logprob: -13.62548542022705
    10. '=' → logprob: -13.62548542022705

Token 629: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. 'v' → logprob: -16.250001907348633
    4. ' [' → logprob: -16.500001907348633
    5. '[out' → logprob: -16.625001907348633
    6. '```' → logprob: -18.125001907348633
    7. '(v' → logprob: -18.500001907348633
    8. '[val' → logprob: -18.875001907348633
    9. '\[' → logprob: -19.000001907348633
    10. '[u' → logprob: -19.500001907348633

Token 630: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. ' ,' → logprob: -11.37501335144043
    3. '],' → logprob: -13.87501335144043
    4. ',v' → logprob: -15.00001335144043
    5. '   ' → logprob: -15.37501335144043
    6. '‌,' → logprob: -16.12501335144043
    7. ']' → logprob: -16.25001335144043
    8. '       ' → logprob: -16.75001335144043
    9. ',
' → logprob: -17.12501335144043
    10. ',out' → logprob: -17.62501335144043

Token 631: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -3.547789674485102e-05
    2. ' out' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.000036239624023
    4. '	out' → logprob: -19.250036239624023
    5. ' ' → logprob: -19.500036239624023
    6. 'max' → logprob: -19.750036239624023
    7. '(out' → logprob: -20.375036239624023
    8. 'len' → logprob: -21.125036239624023
    9. '0' → logprob: -21.250036239624023
    10. '```' → logprob: -21.375036239624023

Token 632: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.03589694947004318
    2. 'eg' → logprob: -3.7858970165252686
    3. 'egs' → logprob: -4.5358967781066895
    4. 'e' → logprob: -6.9108967781066895
    5. 'ge' → logprob: -7.2858967781066895
    6. 'deg' → logprob: -9.535897254943848
    7. '(de' → logprob: -11.285897254943848
    8. '[' → logprob: -11.410897254943848
    9. 'egree' → logprob: -11.410897254943848
    10. '_de' → logprob: -11.660897254943848

Token 633: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.002813313389196992
    2. 'g' → logprob: -5.877813339233398
    3. 'egs' → logprob: -12.252813339233398
    4. ' gs' → logprob: -13.127813339233398
    5. 'qs' → logprob: -15.127813339233398
    6. 'cs' → logprob: -15.502813339233398
    7. 'Gs' → logprob: -15.627813339233398
    8. 's' → logprob: -15.877813339233398
    9. ' ' → logprob: -15.877813339233398
    10. '[' → logprob: -15.877813339233398

Token 634: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.0
    3. '[' → logprob: -16.875
    4. '(v' → logprob: -18.5
    5. ' [' → logprob: -19.125
    6. '[s' → logprob: -19.5
    7. ']' → logprob: -20.25
    8. '[u' → logprob: -20.75
    9. '	v' → logprob: -20.875
    10. '][' → logprob: -21.25

Token 635: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1677716225385666
    2. ')' → logprob: -2.042771577835083
    3. '       ' → logprob: -3.917771577835083
    4. ']
' → logprob: -5.792771816253662
    5. '   ' → logprob: -7.167771816253662
    6. ')
' → logprob: -7.792771816253662
    7. ' ]' → logprob: -9.167771339416504
    8. ':' → logprob: -9.292771339416504
    9. ')]' → logprob: -9.292771339416504
    10. '<|end|>' → logprob: -9.667771339416504

Token 636: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019967252388596535
    2. ':' → logprob: -4.894967079162598
    3. ' if' → logprob: -5.519967079162598
    4. '   ' → logprob: -6.144967079162598
    5. '<|end|>' → logprob: -6.769967079162598
    6. ':
' → logprob: -6.894967079162598
    7. '
' → logprob: -6.894967079162598
    8. 'if' → logprob: -7.269967079162598
    9. '        
' → logprob: -7.644967079162598
    10. '	' → logprob: -8.019967079162598

Token 637: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6695131659507751
    2. '       ' → logprob: -0.7945131659507751
    3. '   ' → logprob: -4.66951322555542
    4. '    
' → logprob: -4.79451322555542
    5. '        
' → logprob: -5.04451322555542
    6. '  
' → logprob: -5.79451322555542
    7. 'if' → logprob: -5.91951322555542
    8. ' if' → logprob: -6.04451322555542
    9. ' 
' → logprob: -6.04451322555542
    10. '   
' → logprob: -7.66951322555542

Token 638: ' R' (ID: 460)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10337182134389877
    2. ' if' → logprob: -2.3533718585968018
    3. '       ' → logprob: -6.103371620178223
    4. '   ' → logprob: -7.478371620178223
    5. 'for' → logprob: -8.353371620178223
    6. '	if' → logprob: -9.603371620178223
    7. ' for' → logprob: -10.478371620178223
    8. '
' → logprob: -11.603371620178223
    9. '        
' → logprob: -11.728371620178223
    10. ' 
' → logprob: -12.353371620178223

Token 639: 'éc' (ID: 5675)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20261549949645996
    2. 'o' → logprob: -2.82761549949646
    3. ' =' → logprob: -3.45261549949646
    4. ' ' → logprob: -3.57761549949646
    5. '=' → logprob: -3.82761549949646
    6. 'eturn' → logprob: -4.077615737915039
    7. ' if' → logprob: -5.202615737915039
    8. '   ' → logprob: -5.827615737915039
    9. '  ' → logprob: -5.952615737915039
    10. ' e' → logprob: -6.202615737915039

Token 640: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.02974771335721016
    2. 'u' → logprob: -3.779747724533081
    3. 'uper' → logprob: -5.529747486114502
    4. 'upr' → logprob: -6.279747486114502
    5. 'ur' → logprob: -8.27974796295166
    6. '   ' → logprob: -9.90474796295166
    7. 'upro' → logprob: -9.90474796295166
    8. 'urrent' → logprob: -9.90474796295166
    9. 'upe' → logprob: -10.02974796295166
    10. 'upart' → logprob: -10.90474796295166

Token 641: 'ération' (ID: 24977)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.005400476977229118
    2. 'ère' → logprob: -5.630400657653809
    3. 'érez' → logprob: -7.255400657653809
    4. 'er' → logprob: -8.005400657653809
    5. 'ération' → logprob: -8.255400657653809
    6. 'éré' → logprob: -9.130400657653809
    7. 'ér' → logprob: -9.255400657653809
    8. '   ' → logprob: -9.630400657653809
    9. 'èr' → logprob: -9.630400657653809
    10. 'èrent' → logprob: -10.005400657653809

Token 642: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09052383899688721
    2. ' v' → logprob: -3.8405237197875977
    3. ' valeurs' → logprob: -3.8405237197875977
    4. ' voisins' → logprob: -4.715523719787598
    5. ' ' → logprob: -5.340523719787598
    6. 'prob' → logprob: -5.340523719787598
    7. ' val' → logprob: -5.465523719787598
    8. ' _' → logprob: -5.840523719787598
    9. ' values' → logprob: -5.965523719787598
    10. ' neighbors' → logprob: -6.340523719787598

Token 644: ' cour' (ID: 2871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.659580409526825
    2. '   ' → logprob: -2.0345804691314697
    3. '    
' → logprob: -2.0345804691314697
    4. '       ' → logprob: -2.4095804691314697
    5. ' if' → logprob: -3.5345804691314697
    6. ' 
' → logprob: -3.6595804691314697
    7. '        
' → logprob: -3.7845804691314697
    8. '<|end|>' → logprob: -3.9095804691314697
    9. '  
' → logprob: -5.034580230712891
    10. '	
' → logprob: -5.659580230712891

Token 645: 'antes' (ID: 5193)
  Prédit: 'entes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.578088641166687
    2. 'ent' → logprob: -1.453088641166687
    3. 'antes' → logprob: -2.3280887603759766
    4. 'u' → logprob: -2.7030887603759766
    5. 'r' → logprob: -3.7030887603759766
    6. 'ente' → logprob: -5.328088760375977
    7. 'ents' → logprob: -5.328088760375977
    8. 'ant' → logprob: -6.703088760375977
    9. 'ues' → logprob: -7.203088760375977
    10. 'rent' → logprob: -7.203088760375977

Token 646: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7325674295425415
    2. '<|end|>' → logprob: -1.3575674295425415
    3. '   ' → logprob: -2.232567310333252
    4. '       ' → logprob: -2.482567310333252
    5. '    
' → logprob: -3.357567310333252
    6. ' if' → logprob: -4.607567310333252
    7. ' 
' → logprob: -4.732567310333252
    8. '        
' → logprob: -5.482567310333252
    9. '<|end|>' → logprob: -5.482567310333252
    10. '  
' → logprob: -5.857567310333252

Token 647: ' ce' (ID: 2357)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3147059381008148
    2. ' v' → logprob: -1.3147059679031372
    3. 'prob' → logprob: -7.314705848693848
    4. 'neighbors' → logprob: -8.439705848693848
    5. 'pro' → logprob: -9.064705848693848
    6. ' neighbors' → logprob: -9.314705848693848
    7. 'adj' → logprob: -9.689705848693848
    8. ' out' → logprob: -10.314705848693848
    9. 'out' → logprob: -10.314705848693848
    10. ' ' → logprob: -10.314705848693848

Token 648: ' sommet' (ID: 130502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16979096829891205
    2. 'v' → logprob: -2.6697909832000732
    3. ' v' → logprob: -2.7947909832000732
    4. ' 
' → logprob: -4.794790744781494
    5. '   ' → logprob: -5.794790744781494
    6. '  ' → logprob: -5.794790744781494
    7. '  
' → logprob: -5.919790744781494
    8. ' sommet' → logprob: -7.169790744781494
    9. ' ' → logprob: -7.294790744781494
    10. ' node' → logprob: -7.544790744781494

Token 649: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1503531038761139
    2. '       ' → logprob: -2.900353193283081
    3. '<|end|>' → logprob: -3.400353193283081
    4. '   ' → logprob: -3.900353193283081
    5. '    
' → logprob: -4.025352954864502
    6. ' 
' → logprob: -5.650352954864502
    7. '        
' → logprob: -5.775352954864502
    8. '  
' → logprob: -6.150352954864502
    9. ':' → logprob: -6.650352954864502
    10. ' if' → logprob: -7.400352954864502

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8292258977890015
    2. ' if' → logprob: -1.3292258977890015
    3. '   ' → logprob: -1.7042258977890015
    4. 'if' → logprob: -2.454226016998291
    5. '	if' → logprob: -4.579226016998291
    6. '    
' → logprob: -5.329226016998291
    7. '        
' → logprob: -5.579226016998291
    8. ' for' → logprob: -5.704226016998291
    9. ' 
' → logprob: -6.204226016998291
    10. 'for' → logprob: -6.329226016998291

Token 651: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9197602272033691
    2. '       ' → logprob: -1.1697602272033691
    3. ' if' → logprob: -1.2947602272033691
    4. '   ' → logprob: -4.419760227203369
    5. 'for' → logprob: -6.169760227203369
    6. ' for' → logprob: -6.919760227203369
    7. '	if' → logprob: -7.169760227203369
    8. '
' → logprob: -7.794760227203369
    9. '        
' → logprob: -8.294759750366211
    10. ' 
' → logprob: -8.669759750366211

Token 652: ' prob' (ID: 4921)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.0789155662059784
    2. 'out' → logprob: -2.578915596008301
    3. 'prob' → logprob: -11.5789155960083
    4. ' prob' → logprob: -11.8289155960083
    5. '	out' → logprob: -12.2039155960083
    6. ' ' → logprob: -13.0789155960083
    7. ' ' → logprob: -13.7039155960083
    8. '   ' → logprob: -14.8289155960083
    9. ' not' → logprob: -15.5789155960083
    10. 'not' → logprob: -16.328914642333984

Token 653: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17988425493240356
    2. '>' → logprob: -1.8048841953277588
    3. ' ==' → logprob: -9.55488395690918
    4. ':' → logprob: -11.05488395690918
    5. ' ' → logprob: -11.42988395690918
    6. '==' → logprob: -11.67988395690918
    7. ' !=' → logprob: -11.67988395690918
    8. ' ' → logprob: -11.92988395690918
    9. ')' → logprob: -12.17988395690918
    10. '   ' → logprob: -12.92988395690918

Token 654: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.878178596496582
    4. ' ' → logprob: -16.503177642822266
    5. '```' → logprob: -16.628177642822266
    6. '=' → logprob: -16.878177642822266
    7. '>' → logprob: -17.003177642822266
    8. '1' → logprob: -17.253177642822266
    9. '  ' → logprob: -17.753177642822266
    10. '	' → logprob: -18.315677642822266

Token 655: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '1' → logprob: -18.25000762939453
    4. '   ' → logprob: -20.00000762939453
    5. '```' → logprob: -21.12500762939453
    6. '=' → logprob: -21.37500762939453
    7. '  ' → logprob: -21.37500762939453
    8. 'None' → logprob: -21.62500762939453
    9. '
' → logprob: -21.75000762939453
    10. '>' → logprob: -22.37500762939453

Token 656: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004418743774294853
    2. ' and' → logprob: -8.375441551208496
    3. ':
' → logprob: -8.625441551208496
    4. ' :' → logprob: -10.625441551208496
    5. 'and' → logprob: -12.250441551208496
    6. '       ' → logprob: -13.750441551208496
    7. '):' → logprob: -14.125441551208496
    8. '   ' → logprob: -14.750441551208496
    9. ':
' → logprob: -15.750441551208496
    10. ':**' → logprob: -16.000442504882812

Token 657: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07247025519609451
    2. '
' → logprob: -3.072470188140869
    3. '       ' → logprob: -4.822470188140869
    4. '<|end|>' → logprob: -5.697470188140869
    5. ' if' → logprob: -6.072470188140869
    6. '            
' → logprob: -6.197470188140869
    7. ' 
' → logprob: -6.447470188140869
    8. ' for' → logprob: -6.447470188140869
    9. '               ' → logprob: -6.697470188140869
    10. '    
' → logprob: -6.947470188140869

Token 658: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6708822846412659
    2. '           ' → logprob: -1.420882225036621
    3. '
' → logprob: -1.670882225036621
    4. ' 
' → logprob: -4.295882225036621
    5. '    
' → logprob: -5.045882225036621
    6. '   ' → logprob: -5.045882225036621
    7. ' for' → logprob: -5.170882225036621
    8. '        
' → logprob: -5.295882225036621
    9. '            
' → logprob: -5.795882225036621
    10. ':' → logprob: -5.795882225036621

Token 659: ' S' (ID: 336)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.604414165019989
    2. '       ' → logprob: -1.2294142246246338
    3. '
' → logprob: -2.479414224624634
    4. ' if' → logprob: -2.854414224624634
    5. '   ' → logprob: -4.979413986206055
    6. ' for' → logprob: -5.604413986206055
    7. 'if' → logprob: -6.354413986206055
    8. ' out' → logprob: -6.854413986206055
    9. '            
' → logprob: -7.354413986206055
    10. '               ' → logprob: -7.604413986206055

Token 660: ''il' (ID: 14683)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04359222948551178
    2. '   ' → logprob: -4.16859245300293
    3. 'pace' → logprob: -5.04359245300293
    4. 'i' → logprob: -6.04359245300293
    5. ' if' → logprob: -6.04359245300293
    6. 'paces' → logprob: -6.04359245300293
    7. '       ' → logprob: -6.16859245300293
    8. 'if' → logprob: -6.29359245300293
    9. ':
' → logprob: -6.41859245300293
    10. 't' → logprob: -6.41859245300293

Token 661: ' y' (ID: 342)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.2502278685569763
    2. ' a' → logprob: -2.500227928161621
    3. ' !=' → logprob: -3.125227928161621
    4. ' est' → logprob: -3.750227928161621
    5. 'out' → logprob: -4.000227928161621
    6. ' ' → logprob: -4.375227928161621
    7. ' ' → logprob: -4.375227928161621
    8. ' has' → logprob: -5.750227928161621
    9. ' existe' → logprob: -5.750227928161621
    10. ' ==' → logprob: -5.875227928161621

Token 662: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07709015160799026
    2. 'a' → logprob: -2.827090263366699
    3. '   ' → logprob: -6.077090263366699
    4. ' ' → logprob: -6.452090263366699
    5. ' is' → logprob: -6.452090263366699
    6. '>' → logprob: -6.702090263366699
    7. 'is' → logprob: -6.827090263366699
    8. 'y' → logprob: -6.952090263366699
    9. ' y' → logprob: -7.202090263366699
    10. ' existe' → logprob: -7.202090263366699

Token 663: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.862630307674408
    2. 'prob' → logprob: -1.9876303672790527
    3. ' un' → logprob: -2.3626303672790527
    4. ' une' → logprob: -2.7376303672790527
    5. ' >' → logprob: -2.9876303672790527
    6. ' )' → logprob: -3.1126303672790527
    7. ' a' → logprob: -3.1126303672790527
    8. ' out' → logprob: -3.3626303672790527
    9. '   ' → logprob: -3.6126303672790527
    10. '  ' → logprob: -4.487630367279053

Token 664: ' chance' (ID: 8058)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.08984375
    2. ' ' → logprob: -1.21484375
    3. 'out' → logprob: -1.83984375
    4. ' out' → logprob: -2.83984375
    5. ' chance' → logprob: -3.71484375
    6. '   ' → logprob: -4.71484375
    7. ' outgoing' → logprob: -4.83984375
    8. ' probabil' → logprob: -4.83984375
    9. 'ar' → logprob: -4.96484375
    10. 'chance' → logprob: -5.08984375

Token 665: ' non' (ID: 2893)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.36076444387435913
    2. '   ' → logprob: -1.985764503479004
    3. ' d' → logprob: -2.735764503479004
    4. ' de' → logprob: -3.485764503479004
    5. '       ' → logprob: -3.860764503479004
    6. '           ' → logprob: -4.235764503479004
    7. '    ' → logprob: -4.485764503479004
    8. ' that' → logprob: -5.235764503479004
    9. ' ' → logprob: -5.985764503479004
    10. 'que' → logprob: -6.110764503479004

Token 666: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6972905397415161
    2. ' n' → logprob: -0.6972905397415161
    3. '0' → logprob: -6.072290420532227
    4. '   ' → logprob: -7.822290420532227
    5. 'zero' → logprob: -7.947290420532227
    6. 'ég' → logprob: -8.072290420532227
    7. ' ég' → logprob: -8.697290420532227
    8. 'nul' → logprob: -8.822290420532227
    9. '       ' → logprob: -9.322290420532227
    10. 'None' → logprob: -9.572290420532227

Token 667: 'ulle' (ID: 14644)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.2162909060716629
    2. 'ulle' → logprob: -2.0912909507751465
    3. 'ul' → logprob: -3.0912909507751465
    4. ' zero' → logprob: -3.9662909507751465
    5. 'zero' → logprob: -6.7162909507751465
    6. 'ule' → logprob: -6.7162909507751465
    7. '0' → logprob: -6.8412909507751465
    8. '   ' → logprob: -7.2162909507751465
    9. 'ulla' → logprob: -7.9662909507751465
    10. ' zéro' → logprob: -7.9662909507751465

Token 668: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4784049689769745
    2. '   ' → logprob: -1.3534049987792969
    3. ' que' → logprob: -2.728404998779297
    4. '       ' → logprob: -3.603404998779297
    5. ' d' → logprob: -4.978404998779297
    6. ' de' → logprob: -5.478404998779297
    7. ' :' → logprob: -5.478404998779297
    8. '           ' → logprob: -5.478404998779297
    9. '    ' → logprob: -6.103404998779297
    10. ' ' → logprob: -6.478404998779297

Token 669: ''être' (ID: 47704)
  Prédit: ''être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''être' → logprob: -0.33412429690361023
    2. 'être' → logprob: -2.3341243267059326
    3. ''aller' → logprob: -2.7091243267059326
    4. ''arr' → logprob: -3.0841243267059326
    5. ' être' → logprob: -3.2091243267059326
    6. '_' → logprob: -4.7091240882873535
    7. '’être' → logprob: -4.8341240882873535
    8. ' d' → logprob: -5.3341240882873535
    9. ' arriver' → logprob: -5.4591240882873535
    10. 'e' → logprob: -6.3341240882873535

Token 670: ' arrivé' (ID: 109777)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.2077251672744751
    2. 'l' → logprob: -2.3327250480651855
    3. 'ici' → logprob: -2.8327250480651855
    4. 'dans' → logprob: -4.4577250480651855
    5. ' sur' → logprob: -5.0827250480651855
    6. 'à' → logprob: -5.3327250480651855
    7. 'prés' → logprob: -6.2077250480651855
    8. 'au' → logprob: -6.2077250480651855
    9. 'arr' → logprob: -6.5827250480651855
    10. ' ici' → logprob: -6.7077250480651855

Token 671: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.042900800704956
    2. ' au' → logprob: -1.792900800704956
    3. ' sur' → logprob: -1.917900800704956
    4. 'sur' → logprob: -2.167900800704956
    5. '   ' → logprob: -2.292900800704956
    6. 'à' → logprob: -3.042900800704956
    7. '       ' → logprob: -3.542900800704956
    8. 'au' → logprob: -3.792900800704956
    9. '           ' → logprob: -5.292901039123535
    10. ' que' → logprob: -6.042901039123535

Token 672: ' ce' (ID: 2357)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013513120822608471
    2. ' v' → logprob: -4.513513088226318
    3. ' ce' → logprob: -6.013513088226318
    4. 'ce' → logprob: -12.388513565063477
    5. '   ' → logprob: -12.388513565063477
    6. ' ' → logprob: -12.763513565063477
    7. '       ' → logprob: -13.263513565063477
    8. ' cet' → logprob: -14.013513565063477
    9. '```' → logprob: -14.513513565063477
    10. '[v' → logprob: -14.763513565063477

Token 673: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.004536457825452089
    2. 'som' → logprob: -5.7545366287231445
    3. ' som' → logprob: -7.0045366287231445
    4. 'v' → logprob: -8.504536628723145
    5. ' somm' → logprob: -9.129536628723145
    6. 's' → logprob: -9.629536628723145
    7. ' v' → logprob: -10.129536628723145
    8. ' ' → logprob: -10.754536628723145
    9. 'summ' → logprob: -12.754536628723145
    10. '   ' → logprob: -13.504536628723145

Token 674: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017299938946962357
    2. ',' → logprob: -4.892300128936768
    3. '       ' → logprob: -5.142300128936768
    4. ':
' → logprob: -6.392300128936768
    5. ' :' → logprob: -6.767300128936768
    6. '           ' → logprob: -7.392300128936768
    7. ' and' → logprob: -8.51729965209961
    8. '):' → logprob: -9.89229965209961
    9. '   ' → logprob: -10.64229965209961
    10. '<|end|>' → logprob: -10.76729965209961

Token 675: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12317637354135513
    2. ' 
' → logprob: -3.373176336288452
    3. '    
' → logprob: -3.748176336288452
    4. '   ' → logprob: -3.998176336288452
    5. '        
' → logprob: -4.123176574707031
    6. '  
' → logprob: -5.623176574707031
    7. '
' → logprob: -5.623176574707031
    8. '           ' → logprob: -5.873176574707031
    9. ' for' → logprob: -6.248176574707031
    10. '     
' → logprob: -6.623176574707031

Token 676: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8636311292648315
    2. '           ' → logprob: -0.9886311292648315
    3. 'for' → logprob: -2.113631248474121
    4. ' if' → logprob: -2.863631248474121
    5. 'if' → logprob: -3.988631248474121
    6. '   ' → logprob: -5.738631248474121
    7. '               ' → logprob: -5.863631248474121
    8. '       ' → logprob: -6.113631248474121
    9. '	       ' → logprob: -7.738631248474121
    10. 'prob' → logprob: -8.363631248474121

Token 677: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08529625087976456
    2. 'if' → logprob: -2.960296154022217
    3. ' for' → logprob: -4.210296154022217
    4. '           ' → logprob: -4.335296154022217
    5. ' if' → logprob: -6.710296154022217
    6. 'prob' → logprob: -8.085296630859375
    7. 'next' → logprob: -8.585296630859375
    8. 'step' → logprob: -8.835296630859375
    9. '       ' → logprob: -10.085296630859375
    10. '   ' → logprob: -10.960296630859375

Token 678: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053217578679323196
    2. ' for' → logprob: -3.053217649459839
    3. 'if' → logprob: -6.30321741104126
    4. '       ' → logprob: -6.67821741104126
    5. '           ' → logprob: -7.55321741104126
    6. ' if' → logprob: -7.67821741104126
    7. '   ' → logprob: -7.67821741104126
    8. 'pour' → logprob: -11.053217887878418
    9. 'continue' → logprob: -11.053217887878418
    10. '    ' → logprob: -11.553217887878418

Token 679: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.026682132855057716
    2. 'uler' → logprob: -4.401681900024414
    3. 'u' → logprob: -5.401681900024414
    4. 'for' → logprob: -6.276681900024414
    5. 'ul' → logprob: -6.526681900024414
    6. 'érer' → logprob: -6.776681900024414
    7. 'er' → logprob: -7.276681900024414
    8. 'l' → logprob: -7.401681900024414
    9. 'ulé' → logprob: -7.401681900024414
    10. 'uter' → logprob: -7.901681900024414

Token 680: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1880402565002441
    2. ' l' → logprob: -1.4380402565002441
    3. ' le' → logprob: -1.9380402565002441
    4. '           ' → logprob: -2.063040256500244
    5. ' for' → logprob: -2.938040256500244
    6. ' une' → logprob: -3.438040256500244
    7. 'l' → logprob: -4.188040256500244
    8. 'for' → logprob: -4.313040256500244
    9. ' les' → logprob: -4.438040256500244
    10. 'la' → logprob: -4.438040256500244

Token 681: ' nombre' (ID: 9733)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7315175533294678
    2. 'if' → logprob: -0.9815175533294678
    3. 'pas' → logprob: -2.9815175533294678
    4. ' for' → logprob: -3.8565175533294678
    5. 'for' → logprob: -3.9815175533294678
    6. 'prob' → logprob: -4.106517791748047
    7. 'increment' → logprob: -4.731517791748047
    8. ' pas' → logprob: -4.856517791748047
    9. ' next' → logprob: -6.231517791748047
    10. '   ' → logprob: -6.231517791748047

Token 682: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9118782877922058
    2. 'd' → logprob: -1.6618783473968506
    3. ' de' → logprob: -1.9118783473968506
    4. ' d' → logprob: -2.0368783473968506
    5. '           ' → logprob: -2.4118783473968506
    6. '       ' → logprob: -4.5368781089782715
    7. '   ' → logprob: -4.6618781089782715
    8. 'total' → logprob: -4.7868781089782715
    9. '               ' → logprob: -6.1618781089782715
    10. 'for' → logprob: -6.2868781089782715

Token 683: ''ét' (ID: 23771)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.297034353017807
    2. '_neighbors' → logprob: -2.29703426361084
    3. 'neighbors' → logprob: -3.42203426361084
    4. 'out' → logprob: -3.42203426361084
    5. 'vo' → logprob: -4.29703426361084
    6. '_' → logprob: -4.54703426361084
    7. ' neighbors' → logprob: -4.54703426361084
    8. '_vo' → logprob: -4.92203426361084
    9. '_out' → logprob: -5.04703426361084
    10. 's' → logprob: -5.42203426361084

Token 684: 'apes' (ID: 11864)
  Prédit: 'apes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.00407199002802372
    2. 'ape' → logprob: -5.629072189331055
    3. 'ats' → logprob: -8.379072189331055
    4. 'udi' → logprob: -10.379072189331055
    5. 'iers' → logprob: -10.379072189331055
    6. 'ages' → logprob: -10.629072189331055
    7. 'endants' → logprob: -11.379072189331055
    8. 'r' → logprob: -11.566572189331055
    9. 'ar' → logprob: -11.566572189331055
    10. 'aliers' → logprob: -12.004072189331055

Token 685: ' moyen' (ID: 46111)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3219996690750122
    2. '+' → logprob: -1.5719996690750122
    3. '   ' → logprob: -2.3219995498657227
    4. 'pour' → logprob: -3.1969995498657227
    5. 'plus' → logprob: -3.3219995498657227
    6. 'sup' → logprob: -3.4469995498657227
    7. 'for' → logprob: -3.4469995498657227
    8. ' supplémentaires' → logprob: -3.4469995498657227
    9. ' +' → logprob: -3.5719995498657227
    10. 's' → logprob: -4.071999549865723

Token 686: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7017968893051147
    2. 'pour' → logprob: -1.8267968893051147
    3. ' pour' → logprob: -1.9517968893051147
    4. '           ' → logprob: -2.3267970085144043
    5. ' à' → logprob: -2.5767970085144043
    6. 'plus' → logprob: -2.9517970085144043
    7. '   ' → logprob: -3.0767970085144043
    8. ' plus' → logprob: -3.2017970085144043
    9. ' +' → logprob: -3.4517970085144043
    10. ' supplémentaires' → logprob: -3.9517970085144043

Token 687: 'esp' (ID: 18342)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.913397490978241
    2. 'out' → logprob: -1.9133975505828857
    3. ' ex' → logprob: -1.9133975505828857
    4. '1' → logprob: -2.1633975505828857
    5. '+' → logprob: -3.0383975505828857
    6. ' out' → logprob: -3.0383975505828857
    7. ' +' → logprob: -3.4133975505828857
    8. ')' → logprob: -4.288397312164307
    9. ' )' → logprob: -4.413397312164307
    10. 'prob' → logprob: -4.788397312164307

Token 688: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.1195758655667305
    2. 'érées' → logprob: -3.4945759773254395
    3. 'ère' → logprob: -4.7445759773254395
    4. 'èces' → logprob: -4.8695759773254395
    5. 'érés' → logprob: -4.9945759773254395
    6. '+' → logprob: -4.9945759773254395
    7. 'ér' → logprob: -4.9945759773254395
    8. 'érée' → logprob: -5.2445759773254395
    9. 'aces' → logprob: -5.3695759773254395
    10. 'er' → logprob: -5.4945759773254395

Token 689: '/' (ID: 14)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6713242530822754
    2. ' +' → logprob: -0.7963242530822754
    3. ' plus' → logprob: -4.171324253082275
    4. 'plus' → logprob: -4.796324253082275
    5. ')' → logprob: -5.171324253082275
    6. 's' → logprob: -6.421324253082275
    7. ' )' → logprob: -6.671324253082275
    8. '   ' → logprob: -7.046324253082275
    9. ' +=' → logprob: -7.421324253082275
    10. '           ' → logprob: -7.421324253082275

Token 690: ' prob' (ID: 4921)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0040148841217160225
    2. ' out' → logprob: -5.62901496887207
    3. '(out' → logprob: -8.25401496887207
    4. 'prob' → logprob: -9.75401496887207
    5. ')' → logprob: -11.00401496887207
    6. '(' → logprob: -11.12901496887207
    7. '+' → logprob: -11.62901496887207
    8. ' (' → logprob: -11.62901496887207
    9. ' ' → logprob: -11.87901496887207
    10. '2' → logprob: -12.25401496887207

Token 691: 'abilité' (ID: 49097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4907383620738983
    2. ' /' → logprob: -1.6157383918762207
    3. ' *' → logprob: -2.9907383918762207
    4. '*' → logprob: -3.1157383918762207
    5. 'e' → logprob: -3.8657383918762207
    6. ' +' → logprob: -4.365738391876221
    7. '+' → logprob: -4.490738391876221
    8. 'es' → logprob: -4.615738391876221
    9. ' )' → logprob: -4.740738391876221
    10. '/' → logprob: -5.115738391876221

Token 692: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9905698895454407
    2. '+' → logprob: -1.240569829940796
    3. ')' → logprob: -1.490569829940796
    4. ' *' → logprob: -2.740569829940796
    5. ' )' → logprob: -3.990569829940796
    6. '*' → logprob: -4.490570068359375
    7. ' /' → logprob: -4.990570068359375
    8. ' pour' → logprob: -5.990570068359375
    9. ',' → logprob: -6.365570068359375
    10. '           ' → logprob: -7.115570068359375

Token 693: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7934228777885437
    2. '+' → logprob: -1.5434229373931885
    3. '           ' → logprob: -1.5434229373931885
    4. ' /' → logprob: -3.4184229373931885
    5. ' if' → logprob: -3.6684229373931885
    6. ',' → logprob: -4.918422698974609
    7. 'if' → logprob: -5.043422698974609
    8. '   ' → logprob: -5.043422698974609
    9. ' +=' → logprob: -5.293422698974609
    10. ' =' → logprob: -5.293422698974609

Token 694: ' arriver' (ID: 78302)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.2114343643188477
    2. 'v' → logprob: -2.0864343643188477
    3. ' chaque' → logprob: -2.0864343643188477
    4. ' each' → logprob: -2.4614343643188477
    5. ' ' → logprob: -2.5864343643188477
    6. 'ch' → logprob: -2.8364343643188477
    7. 'aller' → logprob: -3.2114343643188477
    8. ' v' → logprob: -3.4614343643188477
    9. 'arr' → logprob: -3.7114343643188477
    10. 'all' → logprob: -3.9614343643188477

Token 695: ' ici' (ID: 27994)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5271246433258057
    2. ' à' → logprob: -1.1521246433258057
    3. 'au' → logprob: -2.6521246433258057
    4. 'à' → logprob: -4.402124404907227
    5. ' aux' → logprob: -4.902124404907227
    6. '_' → logprob: -6.652124404907227
    7. ' ' → logprob: -6.652124404907227
    8. 'aux' → logprob: -8.402124404907227
    9. '           ' → logprob: -8.777124404907227
    10. ' ' → logprob: -9.277124404907227

Token 696: '.
' (ID: 558)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3433802127838135
    2. ' +' → logprob: -1.5933802127838135
    3. '           ' → logprob: -2.8433802127838135
    4. ' if' → logprob: -4.843379974365234
    5. '+' → logprob: -5.218379974365234
    6. ' *' → logprob: -5.343379974365234
    7. '               ' → logprob: -5.343379974365234
    8. ',' → logprob: -6.343379974365234
    9. 'if' → logprob: -7.343379974365234
    10. '   ' → logprob: -7.468379974365234

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009661642834544182
    2. '               ' → logprob: -6.509661674499512
    3. '            
' → logprob: -6.759661674499512
    4. ' for' → logprob: -6.884661674499512
    5. ' if' → logprob: -7.134661674499512
    6. ' 
' → logprob: -7.134661674499512
    7. '       ' → logprob: -7.259661674499512
    8. 'for' → logprob: -7.509661674499512
    9. '
' → logprob: -7.634661674499512
    10. '            ' → logprob: -8.134661674499512

Token 698: ' num' (ID: 2269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.848977267742157
    2. ' ex' → logprob: -1.8489773273468018
    3. ' if' → logprob: -2.2239773273468018
    4. ' step' → logprob: -2.3489773273468018
    5. 'ex' → logprob: -2.8489773273468018
    6. 'step' → logprob: -3.0989773273468018
    7. ' exp' → logprob: -3.5989773273468018
    8. '               ' → logprob: -3.5989773273468018
    9. 'exp' → logprob: -4.473977088928223
    10. 'if' → logprob: -4.723977088928223

Token 699: ' =' (ID: 314)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.4122491180896759
    2. ' =' → logprob: -1.1622490882873535
    3. '_tokens' → logprob: -4.5372490882873535
    4. '_' → logprob: -5.4122490882873535
    5. 's' → logprob: -6.0372490882873535
    6. 'Steps' → logprob: -6.9122490882873535
    7. '=' → logprob: -7.0372490882873535
    8. 'ber' → logprob: -7.2872490882873535
    9. '_exp' → logprob: -7.6622490882873535
    10. '_prob' → logprob: -7.6622490882873535

Token 700: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.08159106969833374
    2. ' ex' → logprob: -2.5815911293029785
    3. 'exp' → logprob: -6.2065911293029785
    4. ' exp' → logprob: -7.9565911293029785
    5. 'prob' → logprob: -8.70659065246582
    6. ' prob' → logprob: -9.58159065246582
    7. '   ' → logprob: -9.58159065246582
    8. '(ex' → logprob: -12.08159065246582
    9. '       ' → logprob: -12.20659065246582
    10. '	ex' → logprob: -12.95659065246582

Token 701: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.3771995007991791
    2. 'es' → logprob: -1.7521995306015015
    3. 'prob' → logprob: -3.627199411392212
    4. 'e' → logprob: -3.752199411392212
    5. '/v' → logprob: -4.002199649810791
    6. 'p' → logprob: -4.252199649810791
    7. 'v' → logprob: -4.377199649810791
    8. 'pro' → logprob: -4.377199649810791
    9. ' /' → logprob: -5.252199649810791
    10. '/' → logprob: -5.252199649810791

Token 702: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1761205494403839
    2. '/' → logprob: -2.0511205196380615
    3. ' *' → logprob: -3.9261205196380615
    4. '*' → logprob: -5.051120758056641
    5. ' +' → logprob: -5.551120758056641
    6. '+' → logprob: -5.926120758056641
    7. '/pro' → logprob: -9.55112075805664
    8. '/v' → logprob: -9.92612075805664
    9. ' ' → logprob: -10.55112075805664
    10. ' ' → logprob: -11.17612075805664

Token 703: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.004630907438695431
    2. ' prob' → logprob: -5.379631042480469
    3. '(prob' → logprob: -11.504631042480469
    4. ' ' → logprob: -15.379631042480469
    5. 'pro' → logprob: -15.379631042480469
    6. '   ' → logprob: -16.50463104248047
    7. '1' → logprob: -17.12963104248047
    8. 'pr' → logprob: -17.75463104248047
    9. '_prob' → logprob: -18.12963104248047
    10. ' (' → logprob: -18.12963104248047

Token 704: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08125733584165573
    2. '
' → logprob: -3.9562573432922363
    3. '            
' → logprob: -3.9562573432922363
    4. ' if' → logprob: -4.206257343292236
    5. '               ' → logprob: -4.831257343292236
    6. '<|end|>' → logprob: -5.581257343292236
    7. '       ' → logprob: -6.081257343292236
    8. ' 
' → logprob: -6.331257343292236
    9. 'if' → logprob: -6.331257343292236
    10. ' for' → logprob: -6.956257343292236

Token 705: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6929901838302612
    2. '
' → logprob: -1.1929901838302612
    3. '            
' → logprob: -2.317990303039551
    4. ' 
' → logprob: -3.317990303039551
    5. '       ' → logprob: -3.942990303039551
    6. ' if' → logprob: -4.567990303039551
    7. ' +' → logprob: -5.067990303039551
    8. '+' → logprob: -5.192990303039551
    9. '               ' → logprob: -5.942990303039551
    10. '    
' → logprob: -6.192990303039551

Token 706: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1364352703094482
    2. ' for' → logprob: -1.7614352703094482
    3. ' 
' → logprob: -1.7614352703094482
    4. ' ' → logprob: -2.5114352703094482
    5. 'for' → logprob: -2.8864352703094482
    6. '<|end|>' → logprob: -3.5114352703094482
    7. ')' → logprob: -3.7614352703094482
    8. '       ' → logprob: -3.8864352703094482
    9. '            
' → logprob: -3.8864352703094482
    10. '\n' → logprob: -3.8864352703094482

Token 707: ' év' (ID: 23692)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5197846293449402
    2. 'continue' → logprob: -1.519784688949585
    3. ')' → logprob: -2.644784688949585
    4. '<|end|>' → logprob: -2.894784688949585
    5. ' ' → logprob: -4.894784450531006
    6. '+' → logprob: -4.894784450531006
    7. 'contin' → logprob: -5.019784450531006
    8. ' +=' → logprob: -5.144784450531006
    9. ' )' → logprob: -5.769784450531006
    10. '.' → logprob: -6.019784450531006

Token 708: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.9064525365829468
    2. 'alue' → logprob: -1.0314525365829468
    3. 'ale' → logprob: -2.1564526557922363
    4. 'al' → logprob: -2.5314526557922363
    5. 'value' → logprob: -3.9064526557922363
    6. 'alu' → logprob: -5.156452655792236
    7. 'alite' → logprob: -5.531452655792236
    8. 'ALUE' → logprob: -5.781452655792236
    9. 'v' → logprob: -6.781452655792236
    10. 'alve' → logprob: -7.031452655792236

Token 709: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9777370095252991
    2. 'division' → logprob: -1.6027369499206543
    3. ' la' → logprob: -1.8527369499206543
    4. 'une' → logprob: -2.1027369499206543
    5. ' une' → logprob: -2.4777369499206543
    6. 'div' → logprob: -3.3527369499206543
    7. 'l' → logprob: -4.602736949920654
    8. 'd' → logprob: -5.602736949920654
    9. 'de' → logprob: -5.727736949920654
    10. 'le' → logprob: -6.102736949920654

Token 710: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.03453400358557701
    2. ' division' → logprob: -4.159533977508545
    3. 'div' → logprob: -4.284533977508545
    4. 'Zero' → logprob: -5.659533977508545
    5. ' Zero' → logprob: -7.534533977508545
    6. 'multip' → logprob: -8.034534454345703
    7. 'zero' → logprob: -9.534534454345703
    8. 'Division' → logprob: -10.284534454345703
    9. '0' → logprob: -11.159534454345703
    10. ' div' → logprob: -11.284534454345703

Token 711: ' par' (ID: 686)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1951711177825928
    2. ' by' → logprob: -1.3201711177825928
    3. '<|end|>' → logprob: -1.9451711177825928
    4. ')' → logprob: -2.4451711177825928
    5. '+' → logprob: -3.0701711177825928
    6. ' /' → logprob: -3.4451711177825928
    7. 'if' → logprob: -3.8201711177825928
    8. 'by' → logprob: -4.070171356201172
    9. '/' → logprob: -4.820171356201172
    10. ' )' → logprob: -4.945171356201172

Token 712: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017852524761110544
    2. 'zero' → logprob: -6.8767852783203125
    3. ' zero' → logprob: -8.251785278320312
    4. ' ' → logprob: -8.251785278320312
    5. 'prob' → logprob: -8.376785278320312
    6. ' zéro' → logprob: -15.876785278320312
    7. '```' → logprob: -16.376785278320312
    8. ' prob' → logprob: -16.626785278320312
    9. '_zero' → logprob: -17.126785278320312
    10. 'if' → logprob: -17.251785278320312

Token 713: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.955453634262085
    2. ' if' → logprob: -1.205453634262085
    3. '       ' → logprob: -2.080453634262085
    4. '<|end|>' → logprob: -2.955453634262085
    5. '            
' → logprob: -3.830453634262085
    6. '               ' → logprob: -3.830453634262085
    7. ' ' → logprob: -3.955453634262085
    8. ' 
' → logprob: -4.205453872680664
    9. ')' → logprob: -4.205453872680664
    10. '
' → logprob: -4.580453872680664

Token 714: ' on' (ID: 402)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.12743596732616425
    2. ' prob' → logprob: -2.1274359226226807
    3. 'out' → logprob: -8.252435684204102
    4. ' out' → logprob: -8.502435684204102
    5. 'if' → logprob: -11.377435684204102
    6. '(prob' → logprob: -11.502435684204102
    7. '   ' → logprob: -11.877435684204102
    8. ' if' → logprob: -12.627435684204102
    9. 'pro' → logprob: -12.877435684204102
    10. ' probabil' → logprob: -13.502435684204102

Token 715: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3489153385162354
    2. 'a' → logprob: -1.5989153385162354
    3. ' sait' → logprob: -1.7239153385162354
    4. 's' → logprob: -1.9739153385162354
    5. 'v' → logprob: -2.2239153385162354
    6. ' checked' → logprob: -3.4739153385162354
    7. ' prob' → logprob: -3.8489153385162354
    8. ' est' → logprob: -4.348915100097656
    9. 'prob' → logprob: -4.723915100097656
    10. ' vér' → logprob: -4.848915100097656

Token 716: ' déjà' (ID: 21229)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.7417372465133667
    2. 'if' → logprob: -1.1167372465133667
    3. 'v' → logprob: -2.7417373657226562
    4. 'dé' → logprob: -3.3667373657226562
    5. ' vér' → logprob: -3.4917373657226562
    6. ' prob' → logprob: -3.6167373657226562
    7. ' if' → logprob: -4.366737365722656
    8. 'un' → logprob: -5.241737365722656
    9. 'assert' → logprob: -5.616737365722656
    10. 'une' → logprob: -5.866737365722656

Token 717: ' ver' (ID: 1245)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.21888527274131775
    2. 'v' → logprob: -2.3438851833343506
    3. 'if' → logprob: -2.9688851833343506
    4. ' prob' → logprob: -3.5938851833343506
    5. ' vér' → logprob: -4.34388542175293
    6. ' if' → logprob: -5.71888542175293
    7. 'checked' → logprob: -7.09388542175293
    8. 'fait' → logprob: -7.46888542175293
    9. ' checked' → logprob: -7.59388542175293
    10. 'une' → logprob: -7.59388542175293

Token 718: 'ifié' (ID: 49927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05873529613018036
    2. 'ified' → logprob: -3.5587353706359863
    3. 'ifié' → logprob: -4.058735370635986
    4. 'ifie' → logprob: -5.808735370635986
    5. 'prob' → logprob: -5.933735370635986
    6. 'r' → logprob: -6.308735370635986
    7. 'rif' → logprob: -6.433735370635986
    8. 'ifi' → logprob: -7.308735370635986
    9. 'f' → logprob: -8.308734893798828
    10. '```' → logprob: -8.433734893798828

Token 719: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22432950139045715
    2. '           ' → logprob: -2.5993294715881348
    3. 'prob' → logprob: -3.4743294715881348
    4. ' que' → logprob: -3.5993294715881348
    5. 'if' → logprob: -3.9743294715881348
    6. '               ' → logprob: -4.474329471588135
    7. ' out' → logprob: -4.974329471588135
    8. '            ' → logprob: -4.974329471588135
    9. ' that' → logprob: -5.349329471588135
    10. 'out' → logprob: -5.599329471588135

Token 720: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.00026264708139933646
    2. ' prob' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.375262260437012
    4. 'pro' → logprob: -15.750262260437012
    5. '(prob' → logprob: -15.750262260437012
    6. '           ' → logprob: -16.250263214111328
    7. '```' → logprob: -17.000263214111328
    8. 'out' → logprob: -17.125263214111328
    9. '	pro' → logprob: -17.375263214111328
    10. ' ' → logprob: -17.375263214111328

Token 721: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47483476996421814
    2. ' !=' → logprob: -0.9748347997665405
    3. '>' → logprob: -7.22483491897583
    4. ' >' → logprob: -10.599834442138672
    5. ' ' → logprob: -13.724834442138672
    6. '```' → logprob: -13.974834442138672
    7. ')!=' → logprob: -14.099834442138672
    8. '   ' → logprob: -14.849834442138672
    9. ')' → logprob: -15.599834442138672
    10. '!==' → logprob: -15.599834442138672

Token 722: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. '```' → logprob: -15.626702308654785
    4. '   ' → logprob: -16.0017032623291
    5. '  ' → logprob: -17.2517032623291
    6. '1' → logprob: -17.3767032623291
    7. ' ' → logprob: -17.5017032623291
    8. ' ' → logprob: -18.2517032623291
    9. '=' → logprob: -18.3767032623291
    10. '
' → logprob: -18.3767032623291

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -18.250179290771484
    4. ' ' → logprob: -19.000179290771484
    5. '
' → logprob: -19.375179290771484
    6. '1' → logprob: -19.375179290771484
    7. '   ' → logprob: -19.750179290771484
    8. 'v' → logprob: -20.000179290771484
    9. '  ' → logprob: -20.000179290771484
    10. '=' → logprob: -20.125179290771484

Token 724: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01639796420931816
    2. '            
' → logprob: -5.016397953033447
    3. '<|end|>' → logprob: -5.891397953033447
    4. '       ' → logprob: -6.016397953033447
    5. '               ' → logprob: -6.891397953033447
    6. ' 
' → logprob: -7.391397953033447
    7. '
' → logprob: -7.516397953033447
    8. '<|end|>' → logprob: -8.266398429870605
    9. ')' → logprob: -8.391398429870605
    10. ' for' → logprob: -8.641398429870605

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024872900918126106
    2. '       ' → logprob: -4.649872779846191
    3. '<|end|>' → logprob: -4.899872779846191
    4. '               ' → logprob: -6.399872779846191
    5. '            
' → logprob: -6.649872779846191
    6. ' for' → logprob: -7.149872779846191
    7. ' 
' → logprob: -7.399872779846191
    8. '   ' → logprob: -7.774872779846191
    9. '		' → logprob: -7.899872779846191
    10. '[' → logprob: -8.774872779846191

Token 726: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3052424490451813
    2. '           ' → logprob: -1.6802424192428589
    3. ' for' → logprob: -2.6802425384521484
    4. 'if' → logprob: -5.180242538452148
    5. '       ' → logprob: -7.430242538452148
    6. '               ' → logprob: -7.555242538452148
    7. '	       ' → logprob: -7.555242538452148
    8. ' if' → logprob: -7.805242538452148
    9. '   ' → logprob: -9.555242538452148
    10. '	for' → logprob: -9.805242538452148

Token 727: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28199151158332825
    2. 'if' → logprob: -1.4069914817810059
    3. '           ' → logprob: -7.156991481781006
    4. '#' → logprob: -10.656991958618164
    5. ' for' → logprob: -11.906991958618164
    6. 'next' → logprob: -12.031991958618164
    7. 'num' → logprob: -12.156991958618164
    8. 'prob' → logprob: -12.281991958618164
    9. ' if' → logprob: -13.031991958618164
    10. '            
' → logprob: -13.156991958618164

Token 728: ' pro' (ID: 440)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0718042328953743
    2. ' for' → logprob: -2.8218042850494385
    3. 'if' → logprob: -5.696804046630859
    4. '       ' → logprob: -6.446804046630859
    5. 'continue' → logprob: -6.571804046630859
    6. '   ' → logprob: -7.071804046630859
    7. ' if' → logprob: -7.196804046630859
    8. ' continue' → logprob: -8.32180404663086
    9. '           ' → logprob: -8.44680404663086
    10. '    ' → logprob: -8.82180404663086

Token 729: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.42346763610839844
    2. 'pag' → logprob: -1.1734676361083984
    3. 'p' → logprob: -3.4234676361083984
    4. 'pager' → logprob: -6.298467636108398
    5. 'pog' → logprob: -7.798467636108398
    6. 'pa' → logprob: -7.798467636108398
    7. 'po' → logprob: -8.923467636108398
    8. 'm' → logprob: -9.548467636108398
    9. 'pulse' → logprob: -9.798467636108398
    10. 'pose' → logprob: -9.923467636108398

Token 730: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.9611595273017883
    2. ' les' → logprob: -1.9611594676971436
    3. ' the' → logprob: -2.5861594676971436
    4. 'prob' → logprob: -2.7111594676971436
    5. ' la' → logprob: -2.8361594676971436
    6. ' to' → logprob: -3.0861594676971436
    7. '   ' → logprob: -3.2111594676971436
    8. ' le' → logprob: -3.2111594676971436
    9. ' this' → logprob: -3.4611594676971436
    10. ' ' → logprob: -3.5861594676971436

Token 731: ' voisins' (ID: 166720)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.8764673471450806
    2. 'adj' → logprob: -1.3764673471450806
    3. 'w' → logprob: -2.626467227935791
    4. 'neighbors' → logprob: -2.751467227935791
    5. ' neighbors' → logprob: -3.001467227935791
    6. ' for' → logprob: -3.251467227935791
    7. 'for' → logprob: -3.251467227935791
    8. ' w' → logprob: -3.751467227935791
    9. ' voisins' → logprob: -4.001467227935791
    10. 'u' → logprob: -5.126467227935791

Token 732: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08739428222179413
    2. '   ' → logprob: -3.5873942375183105
    3. ':' → logprob: -4.3373942375183105
    4. '           ' → logprob: -4.9623942375183105
    5. '<|end|>' → logprob: -5.2123942375183105
    6. '    
' → logprob: -5.7123942375183105
    7. '	' → logprob: -5.8373942375183105
    8. '
' → logprob: -5.9623942375183105
    9. '        
' → logprob: -5.9623942375183105
    10. ',' → logprob: -6.3373942375183105

Token 733: 'succ' (ID: 194659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5290191769599915
    2. ' for' → logprob: -1.2790191173553467
    3. 'adj' → logprob: -3.0290191173553467
    4. ' adj' → logprob: -3.5290191173553467
    5. ')' → logprob: -3.9040191173553467
    6. '       ' → logprob: -4.529019355773926
    7. 'v' → logprob: -5.529019355773926
    8. '   ' → logprob: -5.904019355773926
    9. 'neighbors' → logprob: -5.904019355773926
    10. '           ' → logprob: -5.904019355773926

Token 734: 'esseurs' (ID: 164131)
  Prédit: 'esseurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esseurs' → logprob: -0.0024904031306505203
    2. 'es' → logprob: -6.627490520477295
    3. 'esseur' → logprob: -7.502490520477295
    4. 'ès' → logprob: -8.252490043640137
    5. 'ess' → logprob: -9.002490043640137
    6. '[v' → logprob: -9.877490043640137
    7. 'és' → logprob: -9.877490043640137
    8. '[' → logprob: -10.002490043640137
    9. 'eurs' → logprob: -11.127490043640137
    10. 's' → logprob: -11.502490043640137

Token 735: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42038494348526
    2. '       ' → logprob: -1.4203848838806152
    3. ' )' → logprob: -4.045384883880615
    4. ':' → logprob: -4.170384883880615
    5. '   ' → logprob: -4.295384883880615
    6. '):' → logprob: -4.420384883880615
    7. '[v' → logprob: -4.670384883880615
    8. ',' → logprob: -5.420384883880615
    9. ' for' → logprob: -5.420384883880615
    10. ' :' → logprob: -5.670384883880615

Token 736: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007329129730351269
    2. 'adj' → logprob: -7.875732898712158
    3. ' v' → logprob: -8.125733375549316
    4. '```' → logprob: -11.250733375549316
    5. 'code' → logprob: -12.000733375549316
    6. ' sommet' → logprob: -12.000733375549316
    7. ')' → logprob: -12.125733375549316
    8. ' adj' → logprob: -12.750733375549316
    9. '   ' → logprob: -12.875733375549316
    10. '
' → logprob: -13.000733375549316

Token 737: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47907087206840515
    2. ' v' → logprob: -0.9790709018707275
    3. '[v' → logprob: -5.729070663452148
    4. ')' → logprob: -6.979070663452148
    5. ' )' → logprob: -7.354070663452148
    6. ')v' → logprob: -10.229070663452148
    7. ']' → logprob: -10.354070663452148
    8. ' ]' → logprob: -11.104070663452148
    9. '	v' → logprob: -11.354070663452148
    10. ' ' → logprob: -11.729070663452148

Token 738: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23019368946552277
    2. '       ' → logprob: -2.355193614959717
    3. '):' → logprob: -2.480193614959717
    4. '):
' → logprob: -3.730193614959717
    5. ')
' → logprob: -6.605193614959717
    6. '           ' → logprob: -7.605193614959717
    7. ').' → logprob: -7.980193614959717
    8. '):

' → logprob: -8.480194091796875
    9. '   ' → logprob: -8.730194091796875
    10. ' )' → logprob: -9.480194091796875

Token 739: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009397029876708984
    2. ' for' → logprob: -5.759397029876709
    3. '	' → logprob: -6.009397029876709
    4. '	   ' → logprob: -7.009397029876709
    5. '<|end|>' → logprob: -7.259397029876709
    6. '           ' → logprob: -7.509397029876709
    7. '   ' → logprob: -8.134397506713867
    8. 'for' → logprob: -8.134397506713867
    9. '	       ' → logprob: -8.134397506713867
    10. '		
' → logprob: -8.634397506713867

Token 740: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2927481532096863
    2. 'for' (adapté à ' for') → logprob: -1.667748212814331
    3. ' for' → logprob: -2.792748212814331
    4. '   ' → logprob: -6.417747974395752
    5. '           ' → logprob: -6.417747974395752
    6. '	   ' → logprob: -8.41774845123291
    7. '	for' → logprob: -8.41774845123291
    8. '	' → logprob: -9.16774845123291
    9. '	       ' → logprob: -10.66774845123291
    10. ' ' → logprob: -12.16774845123291

Token 741: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3922785818576813
    2. 'u' → logprob: -1.3922785520553589
    3. 't' → logprob: -3.8922786712646484
    4. 'n' → logprob: -4.017278671264648
    5. ' w' → logprob: -4.892278671264648
    6. 'to' → logprob: -4.892278671264648
    7. ' u' → logprob: -5.517278671264648
    8. ' nxt' → logprob: -5.892278671264648
    9. 'nei' → logprob: -6.017278671264648
    10. 'nbr' → logprob: -6.142278671264648

Token 742: '2' (ID: 17)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6154565215110779
    2. ' in' → logprob: -1.4904565811157227
    3. 'v' → logprob: -1.6154565811157227
    4. '.' → logprob: -4.990456581115723
    5. 'adj' → logprob: -4.990456581115723
    6. '[v' → logprob: -5.115456581115723
    7. '       ' → logprob: -6.365456581115723
    8. ' v' → logprob: -6.365456581115723
    9. 's' → logprob: -6.740456581115723
    10. '   ' → logprob: -6.990456581115723

Token 743: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22572141885757446
    2. 'in' → logprob: -1.6007213592529297
    3. '	in' → logprob: -8.85072135925293
    4. ' ' → logprob: -9.22572135925293
    5. 'v' → logprob: -11.22572135925293
    6. '  ' → logprob: -11.22572135925293
    7. ')' → logprob: -11.85072135925293
    8. '_in' → logprob: -12.10072135925293
    9. '   ' → logprob: -12.10072135925293
    10. 's' → logprob: -12.35072135925293

Token 744: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00020377879263833165
    2. ' adj' → logprob: -8.500204086303711
    3. '(adj' → logprob: -15.875204086303711
    4. '   ' → logprob: -16.50020408630371
    5. 'ad' → logprob: -17.12520408630371
    6. 'range' → logprob: -18.00020408630371
    7. '  ' → logprob: -18.37520408630371
    8. '    ' → logprob: -18.75020408630371
    9. 'adm' → logprob: -19.25020408630371
    10. ' ' → logprob: -19.75020408630371

Token 745: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.320199877838604e-07
    2. '[v' → logprob: -14.75
    3. '[' → logprob: -17.625
    4. 'v' → logprob: -17.75
    5. '[s' → logprob: -18.5
    6. ' L' → logprob: -18.5
    7. 'Ls' → logprob: -19.875
    8. '[L' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. 's' → logprob: -20.875

Token 746: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2664456789934775e-06
    2. '][' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'v' → logprob: -15.375000953674316
    5. ' [' → logprob: -15.500000953674316
    6. '[s' → logprob: -16.000001907348633
    7. '       ' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '(v' → logprob: -17.750001907348633

Token 747: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.014811711385846138
    2. ']:
' → logprob: -4.2648115158081055
    3. ']' → logprob: -7.5148115158081055
    4. ']:
' → logprob: -9.639811515808105
    5. '       ' → logprob: -11.639811515808105
    6. ' ]' → logprob: -12.014811515808105
    7. '):' → logprob: -12.139811515808105
    8. '   ' → logprob: -12.264811515808105
    9. ']:

' → logprob: -12.764811515808105
    10. ']):' → logprob: -13.139811515808105

Token 748: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024994369596242905
    2. '           ' → logprob: -6.252499580383301
    3. '       ' → logprob: -8.8774995803833
    4. 'prob' → logprob: -9.0024995803833
    5. '```' → logprob: -9.6274995803833
    6. '	       ' → logprob: -9.8774995803833
    7. ' probs' → logprob: -10.3774995803833
    8. '                   ' → logprob: -10.3774995803833
    9. 'pro' → logprob: -10.5024995803833
    10. '	           ' → logprob: -10.8774995803833

Token 749: ' #' (ID: 1069)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.07129184156656265
    2. 'prob' → logprob: -3.071291923522949
    3. '               ' → logprob: -4.071291923522949
    4. ' probs' → logprob: -5.321291923522949
    5. ' prob' → logprob: -8.07129192352295
    6. 'p' → logprob: -10.07129192352295
    7. '           ' → logprob: -10.32129192352295
    8. '```' → logprob: -10.82129192352295
    9. ' pro' → logprob: -10.94629192352295
    10. '                   ' → logprob: -11.07129192352295

Token 750: ' On' (ID: 2160)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.008692334406077862
    2. 'prob' → logprob: -5.008692264556885
    3. 'p' → logprob: -6.508692264556885
    4. 'increment' → logprob: -8.383692741394043
    5. 'new' → logprob: -10.133692741394043
    6. 'inc' → logprob: -10.758692741394043
    7. '           ' → logprob: -10.883692741394043
    8. 'ch' → logprob: -11.008692741394043
    9. 'delta' → logprob: -11.258692741394043
    10. '               ' → logprob: -11.383692741394043

Token 751: ' augmente' (ID: 150199)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.453869104385376
    2. 'prob' → logprob: -1.078869104385376
    3. ' probs' → logprob: -4.078868865966797
    4. ' prob' → logprob: -5.203868865966797
    5. 'p' → logprob: -7.078868865966797
    6. ' pro' → logprob: -8.203868865966797
    7. 'pr' → logprob: -8.203868865966797
    8. 'v' → logprob: -9.078868865966797
    9. '_probs' → logprob: -9.328868865966797
    10. '           ' → logprob: -9.328868865966797

Token 752: ' la' (ID: 557)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.43584200739860535
    2. ' probs' → logprob: -1.0608420372009277
    3. '               ' → logprob: -5.935842037200928
    4. 'prob' → logprob: -6.185842037200928
    5. '                   ' → logprob: -7.185842037200928
    6. ' pro' → logprob: -7.685842037200928
    7. '_probs' → logprob: -7.810842037200928
    8. ' prob' → logprob: -8.06084156036377
    9. '                ' → logprob: -9.06084156036377
    10. 's' → logprob: -9.31084156036377

Token 753: ' prob' (ID: 4921)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.02931404858827591
    2. ' probs' → logprob: -3.9043140411376953
    3. 'prob' → logprob: -4.779314041137695
    4. ' pro' → logprob: -8.904314041137695
    5. ' prob' → logprob: -9.029314041137695
    6. '```' → logprob: -10.654314041137695
    7. '_probs' → logprob: -10.904314041137695
    8. '   ' → logprob: -12.654314041137695
    9. 'space' → logprob: -12.654314041137695
    10. 's' → logprob: -12.904314041137695

Token 754: 'abilité' (ID: 49097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -6.217951886355877e-05
    2. '[v' → logprob: -10.125061988830566
    3. 'bs' → logprob: -12.625061988830566
    4. '[s' → logprob: -12.625061988830566
    5. '   ' → logprob: -12.875061988830566
    6. 'abilities' → logprob: -13.000061988830566
    7. 'rs' → logprob: -13.125061988830566
    8. '2' → logprob: -13.875061988830566
    9. 'ls' → logprob: -14.000061988830566
    10. 'r' → logprob: -14.000061988830566

Token 755: ' d' (ID: 272)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.010572804138064384
    2. '               ' → logprob: -4.635572910308838
    3. '[' → logprob: -8.01057243347168
    4. 'v' → logprob: -9.13557243347168
    5. '                   ' → logprob: -9.13557243347168
    6. ' [' → logprob: -9.63557243347168
    7. '           ' → logprob: -9.88557243347168
    8. 's' → logprob: -10.51057243347168
    9. '                ' → logprob: -10.88557243347168
    10. '[token' → logprob: -11.01057243347168

Token 756: ''arr' (ID: 49695)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.010794192552566528
    2. 'v' → logprob: -4.635794162750244
    3. ' v' → logprob: -8.510794639587402
    4. 'e' → logprob: -8.760794639587402
    5. '(v' → logprob: -9.135794639587402
    6. '```' → logprob: -9.135794639587402
    7. '[' → logprob: -9.510794639587402
    8. 'éc' → logprob: -10.385794639587402
    9. '[u' → logprob: -10.385794639587402
    10. 'u' → logprob: -10.510794639587402

Token 757: 'iver' (ID: 1788)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10483161360025406
    2. 'ivée' → logprob: -3.1048316955566406
    3. 'iv' → logprob: -3.8548316955566406
    4. '[v' → logprob: -4.104831695556641
    5. 'ive' → logprob: -4.479831695556641
    6. 'ival' → logprob: -5.604831695556641
    7. '2' → logprob: -7.854831695556641
    8. '[' → logprob: -7.854831695556641
    9. 'ivé' → logprob: -8.22983169555664
    10. '(v' → logprob: -8.35483169555664

Token 758: ' à' (ID: 1221)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4279310405254364
    2. '               ' → logprob: -1.5529310703277588
    3. ' à' → logprob: -2.302931070327759
    4. '                   ' → logprob: -4.55293083190918
    5. '[' → logprob: -4.92793083190918
    6. '                ' → logprob: -5.67793083190918
    7. 'v' → logprob: -5.92793083190918
    8. '(v' → logprob: -6.17793083190918
    9. ' v' → logprob: -6.30293083190918
    10. '_' → logprob: -6.42793083190918

Token 759: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007112398743629456
    2. ' v' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.500711441040039
    4. '```' → logprob: -15.250711441040039
    5. '	v' → logprob: -15.625711441040039
    6. ' ' → logprob: -16.25071144104004
    7. '[v' → logprob: -16.25071144104004
    8. '`' → logprob: -16.87571144104004
    9. '(v' → logprob: -17.50071144104004
    10. '       ' → logprob: -18.37571144104004

Token 760: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018534889444708824
    2. '[v' → logprob: -4.0185346603393555
    3. 'v' → logprob: -8.143534660339355
    4. ' ' → logprob: -10.768534660339355
    5. ' v' → logprob: -10.768534660339355
    6. '```' → logprob: -11.018534660339355
    7. '(v' → logprob: -11.143534660339355
    8. '   ' → logprob: -12.518534660339355
    9. '       ' → logprob: -12.643534660339355
    10. '[' → logprob: -13.143534660339355

Token 761: ' avec' (ID: 3937)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3275086283683777
    2. '[v' → logprob: -1.3275086879730225
    3. '                   ' → logprob: -4.702508449554443
    4. ' +=' → logprob: -5.827508449554443
    5. '[' → logprob: -6.952508449554443
    6. '+=' → logprob: -8.452508926391602
    7. '```' → logprob: -9.077508926391602
    8. '   ' → logprob: -9.202508926391602
    9. '           ' → logprob: -9.202508926391602
    10. '                       ' → logprob: -9.327508926391602

Token 762: ' la' (ID: 557)
  Prédit: ' prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.5772978663444519
    2. 'prob' → logprob: -0.8272978663444519
    3. '(prob' → logprob: -6.702297687530518
    4. '   ' → logprob: -9.952298164367676
    5. 'out' → logprob: -11.077298164367676
    6. ' out' → logprob: -11.452298164367676
    7. 'pro' → logprob: -11.827298164367676
    8. ' (' → logprob: -11.827298164367676
    9. ' v' → logprob: -11.952298164367676
    10. ' probability' → logprob: -12.327298164367676

Token 763: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.34871986508369446
    2. ' prob' → logprob: -1.223719835281372
    3. '(prob' → logprob: -8.473719596862793
    4. ' probability' → logprob: -10.098719596862793
    5. 'pro' → logprob: -12.348719596862793
    6. ' (' → logprob: -12.848719596862793
    7. ' probabil' → logprob: -12.848719596862793
    8. '`' → logprob: -13.473719596862793
    9. '_prob' → logprob: -13.473719596862793
    10. '```' → logprob: -13.473719596862793

Token 764: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.32808446884155273
    2. '               ' → logprob: -3.2030844688415527
    3. '           ' → logprob: -3.4530844688415527
    4. '+' → logprob: -3.4530844688415527
    5. '   ' → logprob: -3.5780844688415527
    6. ' ' → logprob: -3.7030844688415527
    7. ' v' → logprob: -3.8280844688415527
    8. 'v' → logprob: -3.9530844688415527
    9. '*' → logprob: -4.203084468841553
    10. ' +' → logprob: -4.328084468841553

Token 765: ' div' (ID: 4223)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10399549454450607
    2. '*' → logprob: -3.1039955615997314
    3. ' +' → logprob: -3.6039955615997314
    4. 'prob' → logprob: -5.103995323181152
    5. 'v' → logprob: -5.603995323181152
    6. ' v' → logprob: -5.603995323181152
    7. ' +=' → logprob: -5.978995323181152
    8. '               ' → logprob: -6.353995323181152
    9. '+' → logprob: -6.353995323181152
    10. '[v' → logprob: -6.603995323181152

Token 766: 'isé' (ID: 30065)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.8034551739692688
    2. 'prob' → logprob: -2.178455114364624
    3. 'isé' → logprob: -2.178455114364624
    4. 'id' → logprob: -2.553455114364624
    5. 'ided' → logprob: -2.553455114364624
    6. '               ' → logprob: -3.553455114364624
    7. '   ' → logprob: -3.553455114364624
    8. 'ise' → logprob: -4.053455352783203
    9. 'v' → logprob: -4.428455352783203
    10. '           ' → logprob: -4.553455352783203

Token 767: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.0176290273666382
    2. ' par' → logprob: -1.1426290273666382
    3. 'out' → logprob: -1.6426290273666382
    4. '(out' → logprob: -3.3926291465759277
    5. 'e' → logprob: -3.5176291465759277
    6. 'by' → logprob: -3.8926291465759277
    7. ' out' → logprob: -4.017629146575928
    8. ' by' → logprob: -4.392629146575928
    9. '               ' → logprob: -6.142629146575928
    10. '           ' → logprob: -6.892629146575928

Token 768: ' le' (ID: 505)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.006718925200402737
    2. ' out' → logprob: -5.00671911239624
    3. '(out' → logprob: -13.631718635559082
    4. '   ' → logprob: -13.756718635559082
    5. '```' → logprob: -14.756718635559082
    6. '	out' → logprob: -14.881718635559082
    7. '[out' → logprob: -15.881718635559082
    8. '               ' → logprob: -16.1317195892334
    9. 'the' → logprob: -16.1317195892334
    10. '*out' → logprob: -16.3817195892334

Token 769: ' nombre' (ID: 9733)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0009166974923573434
    2. ' out' → logprob: -7.000916481018066
    3. '   ' → logprob: -13.125916481018066
    4. 'nombre' → logprob: -13.500916481018066
    5. '(out' → logprob: -14.625916481018066
    6. '```' → logprob: -14.625916481018066
    7. '               ' → logprob: -15.625916481018066
    8. ' ' → logprob: -16.375917434692383
    9. '[out' → logprob: -16.625917434692383
    10. '	out' → logprob: -16.875917434692383

Token 770: ' de' (ID: 334)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.30872538685798645
    2. ' out' → logprob: -2.058725357055664
    3. 'd' → logprob: -2.933725357055664
    4. ' d' → logprob: -3.933725357055664
    5. '               ' → logprob: -4.183725357055664
    6. '[out' → logprob: -4.308725357055664
    7. '*out' → logprob: -5.058725357055664
    8. '_out' → logprob: -5.058725357055664
    9. '	out' → logprob: -5.308725357055664
    10. '(out' → logprob: -5.433725357055664

Token 771: ' choix' (ID: 28642)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.029763920232653618
    2. ' out' → logprob: -3.52976393699646
    3. '```' → logprob: -12.654764175415039
    4. '	out' → logprob: -12.904764175415039
    5. '(out' → logprob: -13.279764175415039
    6. '   ' → logprob: -13.654764175415039
    7. '_out' → logprob: -13.654764175415039
    8. ' outgoing' → logprob: -13.779764175415039
    9. '[out' → logprob: -14.529764175415039
    10. ' ' → logprob: -14.779764175415039

Token 772: ' possibles' (ID: 97753)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.16919054090976715
    2. 'sort' → logprob: -3.4191906452178955
    3. ' out' → logprob: -3.5441906452178955
    4. '_out' → logprob: -3.6691906452178955
    5. 'de' → logprob: -4.169190406799316
    6. '   ' → logprob: -4.669190406799316
    7. 'd' → logprob: -4.794190406799316
    8. ' ' → logprob: -5.419190406799316
    9. '               ' → logprob: -5.544190406799316
    10. 'v' → logprob: -5.544190406799316

Token 773: ' (' (ID: 350)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.4224897623062134
    2. '               ' → logprob: -1.4224897623062134
    3. ' out' → logprob: -2.797489643096924
    4. '                   ' → logprob: -4.547489643096924
    5. 'd' → logprob: -4.922489643096924
    6. '(out' → logprob: -5.297489643096924
    7. ' d' → logprob: -5.672489643096924
    8. '*out' → logprob: -5.797489643096924
    9. '[out' → logprob: -6.172489643096924
    10. '_out' → logprob: -6.172489643096924

Token 774: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.07889870554208755
    2. ' out' → logprob: -2.5788986682891846
    3. '```' → logprob: -12.703898429870605
    4. '   ' → logprob: -13.203898429870605
    5. '(out' → logprob: -13.703898429870605
    6. '	out' → logprob: -14.078898429870605
    7. '*out' → logprob: -15.203898429870605
    8. '_out' → logprob: -15.328898429870605
    9. '
' → logprob: -15.328898429870605
    10. '               ' → logprob: -15.328898429870605

Token 775: 'deg' (ID: 30546)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5234648585319519
    2. 'deg' → logprob: -0.8984648585319519
    3. 'out' → logprob: -8.398465156555176
    4. ' deg' → logprob: -10.523465156555176
    5. '   ' → logprob: -11.523465156555176
    6. 'd' → logprob: -11.523465156555176
    7. '       ' → logprob: -11.835965156555176
    8. '
' → logprob: -12.273465156555176
    9. '_de' → logprob: -12.398465156555176
    10. 's' → logprob: -12.523465156555176

Token 776: ').
' (ID: 6294)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.017791660502552986
    2. 'v' → logprob: -4.642791748046875
    3. ')' → logprob: -5.267791748046875
    4. '(v' → logprob: -8.142791748046875
    5. '```' → logprob: -8.267791748046875
    6. 's' → logprob: -8.267791748046875
    7. ')[' → logprob: -8.392791748046875
    8. '[s' → logprob: -8.392791748046875
    9. '   ' → logprob: -8.767791748046875
    10. '),' → logprob: -8.767791748046875

Token 777: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17215514183044434
    2. '                   ' → logprob: -2.6721551418304443
    3. ' probs' → logprob: -3.1721551418304443
    4. 'prob' → logprob: -4.172155380249023
    5. '                ' → logprob: -4.547155380249023
    6. '           ' → logprob: -5.172155380249023
    7. 'pro' → logprob: -5.297155380249023
    8. '`' → logprob: -6.422155380249023
    9. '                    ' → logprob: -6.672155380249023
    10. '                       ' → logprob: -7.547155380249023

Token 778: ' probs' (ID: 167628)
  Prédit: ' probs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' probs' → logprob: -0.14621683955192566
    2. 'pro' → logprob: -2.146216869354248
    3. 'prob' → logprob: -4.271216869354248
    4. ' prob' → logprob: -6.146216869354248
    5. '               ' → logprob: -6.396216869354248
    6. '                   ' → logprob: -7.896216869354248
    7. ' pro' → logprob: -7.896216869354248
    8. '_probs' → logprob: -8.64621639251709
    9. '           ' → logprob: -9.27121639251709
    10. 'v' → logprob: -9.89621639251709

Token 779: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. 'v' → logprob: -17.875
    4. ' [' → logprob: -18.75
    5. '```' → logprob: -19.375
    6. '(v' → logprob: -21.0
    7. '[u' → logprob: -21.375
    8. '][' → logprob: -21.5
    9. '[V' → logprob: -21.5
    10. '[val' → logprob: -21.875

Token 780: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013461847556754947
    2. '[v' → logprob: -6.626346111297607
    3. '][' → logprob: -11.376346588134766
    4. '[' → logprob: -12.751346588134766
    5. 'v' → logprob: -12.876346588134766
    6. ']' → logprob: -14.001346588134766
    7. '```' → logprob: -14.251346588134766
    8. '   ' → logprob: -15.126346588134766
    9. ' ' → logprob: -15.751346588134766
    10. ' ][' → logprob: -15.813846588134766

Token 781: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.7461551427841187
    2. '[' → logprob: -1.8711551427841187
    3. ']' → logprob: -1.8711551427841187
    4. ' +=' → logprob: -2.371155261993408
    5. '+=' → logprob: -2.871155261993408
    6. ']+=' → logprob: -2.871155261993408
    7. '+' → logprob: -4.871155261993408
    8. '   ' → logprob: -6.996155261993408
    9. ']+' → logprob: -7.496155261993408
    10. '[i' → logprob: -7.996155261993408

Token 782: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07071589678525925
    2. ' +=' → logprob: -2.69571590423584
    3. '[' → logprob: -7.69571590423584
    4. '+' → logprob: -9.07071590423584
    5. '=' → logprob: -9.07071590423584
    6. ']+=' → logprob: -10.07071590423584
    7. '   ' → logprob: -10.32071590423584
    8. '+=(' → logprob: -11.94571590423584
    9. '[v' → logprob: -12.07071590423584
    10. '```' → logprob: -12.94571590423584

Token 783: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0036420035175979137
    2. ' prob' → logprob: -5.6286420822143555
    3. '   ' → logprob: -10.628642082214355
    4. '(prob' → logprob: -11.253642082214355
    5. 'pro' → logprob: -13.128642082214355
    6. '       ' → logprob: -13.753642082214355
    7. '           ' → logprob: -14.378642082214355
    8. '               ' → logprob: -15.253642082214355
    9. '     ' → logprob: -15.628642082214355
    10. '	pro' → logprob: -16.25364112854004

Token 784: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.127054825425148
    2. '/' → logprob: -2.1270549297332764
    3. '/out' → logprob: -9.002055168151855
    4. ' ' → logprob: -13.752055168151855
    5. ' ' → logprob: -14.252055168151855
    6. '               ' → logprob: -15.002055168151855
    7. '*out' → logprob: -15.127055168151855
    8. '*' → logprob: -15.127055168151855
    9. '/output' → logprob: -15.252055168151855
    10. '/div' → logprob: -16.12705421447754

Token 785: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0007099286303855479
    2. ' out' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.875709533691406
    4. '(out' → logprob: -18.250709533691406
    5. '	out' → logprob: -18.625709533691406
    6. 'max' → logprob: -19.625709533691406
    7. ' ' → logprob: -20.125709533691406
    8. '```' → logprob: -20.500709533691406
    9. '[out' → logprob: -20.750709533691406
    10. '       ' → logprob: -20.875709533691406

Token 786: 'deg' (ID: 30546)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -8.613945101387799e-05
    2. 'deg' → logprob: -9.375085830688477
    3. 'out' → logprob: -14.000085830688477
    4. 'd' → logprob: -16.625085830688477
    5. 's' → logprob: -17.250085830688477
    6. '(de' → logprob: -17.500085830688477
    7. ' ' → logprob: -17.875085830688477
    8. '   ' → logprob: -17.875085830688477
    9. '  ' → logprob: -17.875085830688477
    10. 'eg' → logprob: -17.875085830688477

Token 787: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07219391316175461
    2. '<|end|>' → logprob: -2.8221938610076904
    3. '                ' → logprob: -5.4471940994262695
    4. ')' → logprob: -5.6971940994262695
    5. '                
' → logprob: -7.1971940994262695
    6. '           ' → logprob: -7.5721940994262695
    7. '              ' → logprob: -8.94719409942627
    8. '                   ' → logprob: -9.07219409942627
    9. ' 
' → logprob: -9.19719409942627
    10. ' )' → logprob: -9.32219409942627

Token 788: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01900602877140045
    2. '<|end|>' → logprob: -4.144006252288818
    3. '                ' → logprob: -7.019006252288818
    4. '           ' → logprob: -7.644006252288818
    5. ')' → logprob: -7.769006252288818
    6. 'exp' → logprob: -8.26900577545166
    7. '                   ' → logprob: -8.89400577545166
    8. '              ' → logprob: -9.01900577545166
    9. 'ex' → logprob: -9.01900577545166
    10. ' ex' → logprob: -9.14400577545166

Token 789: ' #' (ID: 1069)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0009421924478374422
    2. ' exp' → logprob: -7.250942230224609
    3. '               ' → logprob: -8.50094223022461
    4. 'ex' → logprob: -11.12594223022461
    5. '                
' → logprob: -11.50094223022461
    6. '                ' → logprob: -13.62594223022461
    7. '           ' → logprob: -14.50094223022461
    8. '	exp' → logprob: -14.62594223022461
    9. '   ' → logprob: -14.75094223022461
    10. '.exp' → logprob: -15.50094223022461

Token 790: ' On' (ID: 2160)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -4.320199877838604e-07
    2. ' exp' → logprob: -15.5
    3. '#' → logprob: -17.0
    4. '       ' → logprob: -17.0
    5. '   ' → logprob: -17.0
    6. 'ex' → logprob: -17.0
    7. '           ' → logprob: -18.625
    8. '               ' → logprob: -19.0
    9. ' ' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 791: ' met' (ID: 1421)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00012701898231171072
    2. ' exp' → logprob: -9.000126838684082
    3. 'ex' → logprob: -14.000126838684082
    4. '#' → logprob: -14.625126838684082
    5. '           ' → logprob: -15.000126838684082
    6. '               ' → logprob: -15.375126838684082
    7. 'import' → logprob: -15.500126838684082
    8. '
' → logprob: -15.750126838684082
    9. '       ' → logprob: -15.875126838684082
    10. '   ' → logprob: -16.1251277923584

Token 792: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5828315615653992
    2. 'exp' → logprob: -1.082831621170044
    3. ' à' → logprob: -2.332831621170044
    4. 'ex' → logprob: -5.332831382751465
    5. 'a' → logprob: -7.582831382751465
    6. '   ' → logprob: -8.582831382751465
    7. '           ' → logprob: -8.832831382751465
    8. 'aj' → logprob: -8.832831382751465
    9. '```' → logprob: -9.957831382751465
    10. '               ' → logprob: -10.082831382751465

Token 793: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.003179975086823106
    2. 'jours' → logprob: -6.378180027008057
    3. ' jour' → logprob: -7.128180027008057
    4. 'j' → logprob: -8.128179550170898
    5. 'pro' → logprob: -8.628179550170898
    6. '```' → logprob: -9.253179550170898
    7. 'jou' → logprob: -10.503179550170898
    8. 'Jour' → logprob: -10.628179550170898
    9. 'journ' → logprob: -11.253179550170898
    10. 'prob' → logprob: -11.378179550170898

Token 794: ' l' (ID: 305)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00020401719666551799
    2. ' exp' → logprob: -8.500204086303711
    3. '               ' → logprob: -15.875204086303711
    4. '   ' → logprob: -16.12520408630371
    5. '           ' → logprob: -16.50020408630371
    6. 'ex' → logprob: -16.50020408630371
    7. '       ' → logprob: -16.75020408630371
    8. ' ' → logprob: -18.75020408630371
    9. '(exp' → logprob: -19.25020408630371
    10. '                   ' → logprob: -19.62520408630371

Token 795: ''esp' (ID: 73244)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.04868978634476662
    2. 'ex' → logprob: -3.173689842224121
    3. ' exp' → logprob: -5.298689842224121
    4. 'es' → logprob: -7.548689842224121
    5. ' ex' → logprob: -9.798689842224121
    6. 'esp' → logprob: -10.673689842224121
    7. ''exp' → logprob: -10.923689842224121
    8. '   ' → logprob: -11.548689842224121
    9. 'e' → logprob: -12.173689842224121
    10. '```' → logprob: -12.298689842224121

Token 796: 'érance' (ID: 122504)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0031097421888262033
    2. 'ex' → logprob: -6.003109931945801
    3. 'exp' → logprob: -7.503109931945801
    4. '               ' → logprob: -9.7531099319458
    5. '   ' → logprob: -11.6281099319458
    6. '       ' → logprob: -12.0031099319458
    7. '           ' → logprob: -12.8781099319458
    8. ' ' → logprob: -13.3781099319458
    9. ' exp' → logprob: -13.8781099319458
    10. '                   ' → logprob: -14.2531099319458

Token 797: ' pour' (ID: 1930)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.930552313453518e-05
    2. ' [' → logprob: -10.375049591064453
    3. 'v' → logprob: -12.000049591064453
    4. '               ' → logprob: -12.375049591064453
    5. '[' → logprob: -12.375049591064453
    6. 'exp' → logprob: -12.875049591064453
    7. '```' → logprob: -15.250049591064453
    8. 'ex' → logprob: -15.500049591064453
    9. '           ' → logprob: -16.000049591064453
    10. '                   ' → logprob: -16.250049591064453

Token 798: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03525133058428764
    2. 'exp' → logprob: -3.4102513790130615
    3. ' v' → logprob: -7.660251140594482
    4. '           ' → logprob: -7.785251140594482
    5. '               ' → logprob: -7.910251140594482
    6. '   ' → logprob: -8.66025161743164
    7. '       ' → logprob: -9.78525161743164
    8. 'ex' → logprob: -10.28525161743164
    9. '[v' → logprob: -10.53525161743164
    10. '                   ' → logprob: -11.78525161743164

Token 799: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040043316781520844
    2. 'exp' → logprob: -3.915043354034424
    3. '[v' → logprob: -4.415043354034424
    4. 'v' → logprob: -5.540043354034424
    5. 'ex' → logprob: -6.415043354034424
    6. '[' → logprob: -6.790043354034424
    7. 'es' → logprob: -8.790042877197266
    8. '_probs' → logprob: -10.415042877197266
    9. '   ' → logprob: -10.540042877197266
    10. 'otes' → logprob: -10.540042877197266

Token 800: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2079530507326126
    2. '[v' → logprob: -1.8329530954360962
    3. '[' → logprob: -4.332952976226807
    4. 'exp' → logprob: -4.457952976226807
    5. ' +=' → logprob: -6.332952976226807
    6. '```' → logprob: -8.207953453063965
    7. ' exp' → logprob: -8.457953453063965
    8. 'v' → logprob: -8.582953453063965
    9. '+=' → logprob: -8.707953453063965
    10. '                   ' → logprob: -8.707953453063965

Token 801: ' elle' (ID: 11451)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00071553117595613
    2. ' exp' → logprob: -7.250715732574463
    3. '               ' → logprob: -12.125715255737305
    4. '                   ' → logprob: -16.125715255737305
    5. '   ' → logprob: -18.000715255737305
    6. 'ex' → logprob: -18.375715255737305
    7. '```' → logprob: -18.500715255737305
    8. '           ' → logprob: -18.750715255737305
    9. '                       ' → logprob: -19.750715255737305
    10. '                ' → logprob: -20.000715255737305

Token 802: ' augmente' (ID: 150199)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.025779854506254196
    2. '+=' → logprob: -4.400779724121094
    3. 'v' → logprob: -5.025779724121094
    4. ' +=' → logprob: -5.525779724121094
    5. '[' → logprob: -6.775779724121094
    6. 's' → logprob: -7.275779724121094
    7. '2' → logprob: -7.525779724121094
    8. ']+=' → logprob: -9.900779724121094
    9. '               ' → logprob: -10.150779724121094
    10. ' v' → logprob: -10.400779724121094

Token 803: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02835969440639019
    2. '                   ' → logprob: -4.153359889984131
    3. ' +=' → logprob: -5.903359889984131
    4. '+=' → logprob: -5.903359889984131
    5. '```' → logprob: -6.278359889984131
    6. 'de' → logprob: -7.153359889984131
    7. ' de' → logprob: -7.403359889984131
    8. '           ' → logprob: -7.403359889984131
    9. 'exp' → logprob: -7.403359889984131
    10. '=' → logprob: -7.903359889984131

Token 804: ' coût' (ID: 73109)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0572260618209839
    2. 'prob' → logprob: -1.1822260618209839
    3. '(prob' → logprob: -1.8072260618209839
    4. '(num' → logprob: -1.9322260618209839
    5. 'ex' → logprob: -4.182226181030273
    6. ' (' → logprob: -5.182226181030273
    7. ' num' → logprob: -5.307226181030273
    8. '(' → logprob: -5.682226181030273
    9. ' prob' → logprob: -5.682226181030273
    10. '1' → logprob: -6.432226181030273

Token 805: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24854178726673126
    2. '+' → logprob: -2.248541831970215
    3. ' moyen' → logprob: -2.623541831970215
    4. ' *' → logprob: -4.123541831970215
    5. ' plus' → logprob: -4.873541831970215
    6. ' num' → logprob: -5.873541831970215
    7. 'num' → logprob: -6.123541831970215
    8. '               ' → logprob: -6.248541831970215
    9. ' (' → logprob: -6.373541831970215
    10. '*' → logprob: -6.498541831970215

Token 806: ' venir' (ID: 42933)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.8522013425827026
    2. '1' → logprob: -1.4772013425827026
    3. '(' → logprob: -2.102201461791992
    4. 'num' → logprob: -2.227201461791992
    5. ' (' → logprob: -2.477201461791992
    6. ' num' → logprob: -4.102201461791992
    7. 'un' → logprob: -5.727201461791992
    8. ' ' → logprob: -5.727201461791992
    9. '+' → logprob: -6.477201461791992
    10. 'une' → logprob: -6.602201461791992

Token 807: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08618786185979843
    2. ' +' → logprob: -2.5861878395080566
    3. '               ' → logprob: -5.836187839508057
    4. '                   ' → logprob: -6.711187839508057
    5. 'plus' → logprob: -7.336187839508057
    6. 'de' → logprob: -7.711187839508057
    7. 'from' → logprob: -7.836187839508057
    8. ' plus' → logprob: -8.336188316345215
    9. ' de' → logprob: -8.461188316345215
    10. '           ' → logprob: -9.086188316345215

Token 808: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09817122668027878
    2. ' v' → logprob: -2.4731712341308594
    3. '1' → logprob: -5.223171234130859
    4. 'un' → logprob: -6.723171234130859
    5. ' un' → logprob: -7.598171234130859
    6. ' ' → logprob: -7.973171234130859
    7. 'l' → logprob: -8.22317123413086
    8. ' (' → logprob: -8.59817123413086
    9. '```' → logprob: -8.72317123413086
    10. '(v' → logprob: -8.84817123413086

Token 809: ' à' (ID: 1221)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.029765989631414413
    2. 'v' → logprob: -3.904766082763672
    3. '1' → logprob: -5.779766082763672
    4. '+' → logprob: -6.904766082763672
    5. ' plus' → logprob: -6.904766082763672
    6. ' ' → logprob: -7.029766082763672
    7. '[v' → logprob: -7.529766082763672
    8. 'u' → logprob: -7.779766082763672
    9. ' +' → logprob: -7.904766082763672
    10. '   ' → logprob: -7.904766082763672

Token 810: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.737622857093811
    2. 'v' → logprob: -0.737622857093811
    3. '+' → logprob: -4.8626227378845215
    4. 'plus' → logprob: -4.8626227378845215
    5. '(' → logprob: -5.8626227378845215
    6. 'l' → logprob: -6.1126227378845215
    7. ' v' → logprob: -6.2376227378845215
    8. '(v' → logprob: -6.2376227378845215
    9. 'prob' → logprob: -6.2376227378845215
    10. 'un' → logprob: -6.3626227378845215

Token 811: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9671120047569275
    2. '+' → logprob: -1.0921120643615723
    3. ' +' → logprob: -1.3421120643615723
    4. '   ' → logprob: -4.342112064361572
    5. ' plus' → logprob: -5.342112064361572
    6. 'v' → logprob: -6.217112064361572
    7. 'plus' → logprob: -6.467112064361572
    8. ' ' → logprob: -7.717112064361572
    9. ' v' → logprob: -8.092111587524414
    10. '  ' → logprob: -8.467111587524414

Token 812: ' (=' (ID: 72569)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.15055637061595917
    2. '+' → logprob: -2.0255563259124756
    3. '               ' → logprob: -4.900556564331055
    4. '                   ' → logprob: -9.275556564331055
    5. ' plus' → logprob: -9.275556564331055
    6. '```' → logprob: -9.525556564331055
    7. ',' → logprob: -10.400556564331055
    8. ' *' → logprob: -10.525556564331055
    9. '*' → logprob: -11.650556564331055
    10. '           ' → logprob: -11.775556564331055

Token 813: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04388456791639328
    2. '1' → logprob: -3.668884515762329
    3. '(num' → logprob: -4.168884754180908
    4. ' num' → logprob: -6.543884754180908
    5. '(' → logprob: -7.793884754180908
    6. ' (' → logprob: -10.41888427734375
    7. ' ' → logprob: -10.66888427734375
    8. '   ' → logprob: -11.04388427734375
    9. '
' → logprob: -11.16888427734375
    10. 'prob' → logprob: -12.16888427734375

Token 814: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20144228637218475
    2. '+' → logprob: -1.7014422416687012
    3. ' plus' → logprob: -11.07644271850586
    4. ')' → logprob: -11.70144271850586
    5. ' ' → logprob: -13.95144271850586
    6. ')+' → logprob: -14.07644271850586
    7. ' )' → logprob: -14.32644271850586
    8. ' ' → logprob: -14.70144271850586
    9. 'plus' → logprob: -14.82644271850586
    10. 's' → logprob: -14.82644271850586

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028421927709132433
    2. ' ' → logprob: -8.250284194946289
    3. '
' → logprob: -11.500284194946289
    4. '+' → logprob: -11.750284194946289
    5. ' +' → logprob: -12.500284194946289
    6. '   ' → logprob: -15.125284194946289
    7. '```' → logprob: -15.500284194946289
    8. '                   ' → logprob: -15.750284194946289
    9. '               ' → logprob: -15.875284194946289
    10. ')' → logprob: -16.25028419494629

Token 816: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006961400154978037
    2. ' )' → logprob: -5.506961345672607
    3. '               ' → logprob: -7.006961345672607
    4. '+' → logprob: -7.006961345672607
    5. ' +' → logprob: -7.506961345672607
    6. ')+' → logprob: -9.006961822509766
    7. ')*' → logprob: -9.006961822509766
    8. ')
' → logprob: -9.131961822509766
    9. '                   ' → logprob: -10.506961822509766
    10. '           ' → logprob: -10.631961822509766

Token 817: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22264018654823303
    2. ' )' → logprob: -1.7226401567459106
    3. '1' → logprob: -4.097640037536621
    4. '               ' → logprob: -6.097640037536621
    5. ' ' → logprob: -7.722640037536621
    6. '                   ' → logprob: -7.722640037536621
    7. '0' → logprob: -8.347640037536621
    8. '                ' → logprob: -9.472640037536621
    9. '           ' → logprob: -9.597640037536621
    10. ' ' → logprob: -9.722640037536621

Token 818: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6939792633056641
    2. ' ' → logprob: -0.6939792633056641
    3. ' num' → logprob: -8.818979263305664
    4. '+' → logprob: -9.443979263305664
    5. 'num' → logprob: -9.443979263305664
    6. '               ' → logprob: -9.568979263305664
    7. ' )' → logprob: -9.568979263305664
    8. ' +' → logprob: -9.568979263305664
    9. ' ' → logprob: -9.943979263305664
    10. '                   ' → logprob: -9.943979263305664

Token 819: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7891443371772766
    2. ' pas' → logprob: -1.4141442775726318
    3. ')' → logprob: -1.9141442775726318
    4. ' step' → logprob: -2.914144277572632
    5. ' )' → logprob: -3.164144277572632
    6. 'step' → logprob: -4.039144515991211
    7. '+' → logprob: -4.789144515991211
    8. 'pass' → logprob: -5.039144515991211
    9. ' passage' → logprob: -5.289144515991211
    10. ' étape' → logprob: -5.289144515991211

Token 820: ' supplémentaire' (ID: 111252)
  Prédit: ' supplémentaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaire' → logprob: -1.139493703842163
    2. ' de' → logprob: -1.639493703842163
    3. 'de' → logprob: -1.764493703842163
    4. ')' → logprob: -2.139493703842163
    5. '+' → logprob: -2.264493703842163
    6. ' supplémentaires' → logprob: -3.139493703842163
    7. 'supp' → logprob: -4.764493942260742
    8. ' +' → logprob: -5.139493942260742
    9. ' plus' → logprob: -5.389493942260742
    10. 'sup' → logprob: -5.389493942260742

Token 821: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062215834856033325
    2. ' )' → logprob: -2.937215805053711
    3. '               ' → logprob: -5.062215805053711
    4. ').' → logprob: -8.187215805053711
    5. '                   ' → logprob: -8.812215805053711
    6. ')\' → logprob: -9.437215805053711
    7. '+' → logprob: -9.562215805053711
    8. '),' → logprob: -9.562215805053711
    9. ')+' → logprob: -9.562215805053711
    10. ' +' → logprob: -10.187215805053711

Token 822: ' pond' (ID: 42367)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016494720475748181
    2. '                   ' → logprob: -7.876649379730225
    3. ' +' → logprob: -8.126649856567383
    4. ' *' → logprob: -8.251649856567383
    5. '           ' → logprob: -8.626649856567383
    6. '+' → logprob: -9.126649856567383
    7. ',' → logprob: -9.126649856567383
    8. '*' → logprob: -9.376649856567383
    9. '```' → logprob: -9.376649856567383
    10. '                ' → logprob: -10.626649856567383

Token 823: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.00027325618430040777
    2. 'er' → logprob: -9.750273704528809
    3. 'érée' → logprob: -10.000273704528809
    4. 'ér' → logprob: -10.125273704528809
    5. 'érant' → logprob: -10.750273704528809
    6. '   ' → logprob: -11.125273704528809
    7. 'érer' → logprob: -11.125273704528809
    8. 'é' → logprob: -11.500273704528809
    9. '+' → logprob: -11.500273704528809
    10. '	' → logprob: -11.750273704528809

Token 824: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4642232060432434
    2. '               ' → logprob: -1.4642231464385986
    3. '*' → logprob: -2.8392231464385986
    4. ' *' → logprob: -3.3392231464385986
    5. 'by' → logprob: -4.589223384857178
    6. '                   ' → logprob: -4.589223384857178
    7. 'par' → logprob: -5.089223384857178
    8. 'prob' → logprob: -5.589223384857178
    9. ')' → logprob: -5.839223384857178
    10. ' by' → logprob: -5.964223384857178

Token 825: ' la' (ID: 557)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.055335357785224915
    2. ' prob' → logprob: -2.930335283279419
    3. '(prob' → logprob: -7.805335521697998
    4. 'pro' → logprob: -10.30533504486084
    5. '   ' → logprob: -12.05533504486084
    6. ' ' → logprob: -14.18033504486084
    7. '    ' → logprob: -14.55533504486084
    8. ' probability' → logprob: -14.55533504486084
    9. '  ' → logprob: -14.68033504486084
    10. '```' → logprob: -14.93033504486084

Token 826: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0037307259626686573
    2. ' prob' → logprob: -5.753730773925781
    3. '(prob' → logprob: -7.628730773925781
    4. 'pro' → logprob: -10.003730773925781
    5. '```' → logprob: -12.253730773925781
    6. ' probability' → logprob: -12.378730773925781
    7. '   ' → logprob: -12.378730773925781
    8. 'prop' → logprob: -13.753730773925781
    9. '
' → logprob: -13.753730773925781
    10. 'p' → logprob: -14.253730773925781

Token 827: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.36482271552085876
    2. 'abil' → logprob: -1.9898227453231812
    3. 'ab' → logprob: -2.3648226261138916
    4. 'alité' → logprob: -4.114822864532471
    5. '   ' → logprob: -4.864822864532471
    6. 'prob' → logprob: -4.989822864532471
    7. 'ability' → logprob: -5.364822864532471
    8. 'ilité' → logprob: -5.489822864532471
    9. '    ' → logprob: -5.614822864532471
    10. '(prob' → logprob: -5.739822864532471

Token 828: ' associ' (ID: 5516)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06263412535190582
    2. '               ' → logprob: -3.562634229660034
    3. '/' → logprob: -3.937634229660034
    4. '[v' → logprob: -5.187633991241455
    5. ' *' → logprob: -5.687633991241455
    6. '                   ' → logprob: -6.562633991241455
    7. '/v' → logprob: -7.062633991241455
    8. '           ' → logprob: -7.562633991241455
    9. '*' → logprob: -8.562634468078613
    10. '   ' → logprob: -8.937634468078613

Token 829: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.004344310145825148
    2. 'é' → logprob: -6.129344463348389
    3. 'i' → logprob: -6.754344463348389
    4. 'ié' → logprob: -7.754344463348389
    5. 'uée' → logprob: -8.00434398651123
    6. '   ' → logprob: -9.87934398651123
    7. ' à' → logprob: -10.50434398651123
    8. 'à' → logprob: -10.87934398651123
    9. '           ' → logprob: -11.25434398651123
    10. 'lée' → logprob: -11.25434398651123

Token 830: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1378083974123001
    2. ' *' → logprob: -2.512808322906494
    3. '                   ' → logprob: -3.637808322906494
    4. ')' → logprob: -5.262808322906494
    5. '[v' → logprob: -5.512808322906494
    6. ' /' → logprob: -5.637808322906494
    7. '*' → logprob: -5.762808322906494
    8. '           ' → logprob: -7.012808322906494
    9. '```' → logprob: -7.012808322906494
    10. '/pro' → logprob: -7.137808322906494

Token 831: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024235008284449577
    2. ' exp' → logprob: -3.8992350101470947
    3. 'exp' → logprob: -6.149234771728516
    4. '```' → logprob: -7.274234771728516
    5. ' ex' → logprob: -7.899234771728516
    6. '                ' → logprob: -8.399234771728516
    7. '                
' → logprob: -9.899234771728516
    8. '                   ' → logprob: -9.899234771728516
    9. ' ' → logprob: -10.274234771728516
    10. '              ' → logprob: -10.524234771728516

Token 832: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -1.3663626305060461e-05
    2. '               ' → logprob: -11.50001335144043
    3. ' exp' → logprob: -12.62501335144043
    4. '           ' → logprob: -16.75001335144043
    5. '                   ' → logprob: -17.12501335144043
    6. '```' → logprob: -17.12501335144043
    7. '   ' → logprob: -17.37501335144043
    8. '       ' → logprob: -17.50001335144043
    9. '``' → logprob: -19.00001335144043
    10. 'ex' → logprob: -19.87501335144043

Token 833: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -9.253090865968261e-06
    2. '               ' → logprob: -13.125009536743164
    3. 'ex' → logprob: -13.500009536743164
    4. 'exp' → logprob: -13.875009536743164
    5. '       ' → logprob: -14.125009536743164
    6. '   ' → logprob: -14.250009536743164
    7. '           ' → logprob: -14.375009536743164
    8. '[' → logprob: -14.875009536743164
    9. 'eses' → logprob: -14.875009536743164
    10. 'res' → logprob: -14.875009536743164

Token 834: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.0
    3. 'v' → logprob: -17.125
    4. ' [' → logprob: -18.875
    5. '[u' → logprob: -19.5
    6. '   ' → logprob: -19.625
    7. '```' → logprob: -19.875
    8. '[t' → logprob: -20.625
    9. '[val' → logprob: -21.0
    10. '[w' → logprob: -21.0

Token 835: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8030427694320679
    2. '[v' → logprob: -1.1780427694320679
    3. 'v' → logprob: -1.4280427694320679
    4. ']' → logprob: -6.553042888641357
    5. 's' → logprob: -6.678042888641357
    6. ' v' → logprob: -7.428042888641357
    7. 'es' → logprob: -8.3030424118042
    8. '   ' → logprob: -8.6780424118042
    9. '               ' → logprob: -8.8030424118042
    10. '[' → logprob: -8.9280424118042

Token 836: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.8770654201507568
    2. '+=' → logprob: -1.1270654201507568
    3. ' +=' → logprob: -2.002065420150757
    4. ']' → logprob: -2.502065420150757
    5. '[' → logprob: -3.752065420150757
    6. '[v' → logprob: -4.002065658569336
    7. '+' → logprob: -8.002065658569336
    8. ']+' → logprob: -8.252065658569336
    9. '   ' → logprob: -9.127065658569336
    10. ' ]' → logprob: -9.627065658569336

Token 837: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001183799933642149
    2. ' +=' → logprob: -6.751183986663818
    3. ']+=' → logprob: -11.50118350982666
    4. '+=(' → logprob: -12.75118350982666
    5. '[' → logprob: -15.50118350982666
    6. '   ' → logprob: -15.62618350982666
    7. '=' → logprob: -16.001184463500977
    8. '+' → logprob: -16.876184463500977
    9. '```' → logprob: -17.376184463500977
    10. '+='' → logprob: -17.376184463500977

Token 838: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.301289826631546
    2. '(prob' → logprob: -1.4262897968292236
    3. ' prob' → logprob: -4.051290035247803
    4. 'pro' → logprob: -6.926290035247803
    5. ' (' → logprob: -7.176290035247803
    6. '(pro' → logprob: -7.676290035247803
    7. '   ' → logprob: -8.426289558410645
    8. 'p' → logprob: -10.676289558410645
    9. '(p' → logprob: -10.926289558410645
    10. '(' → logprob: -11.301289558410645

Token 839: ' *' (ID: 425)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.038251250982284546
    2. '/' → logprob: -3.2882511615753174
    3. '*' → logprob: -9.288250923156738
    4. ' *' → logprob: -9.413250923156738
    5. '   ' → logprob: -12.038250923156738
    6. '                   ' → logprob: -12.288250923156738
    7. '/v' → logprob: -12.538250923156738
    8. '<|end|>' → logprob: -12.788250923156738
    9. '               ' → logprob: -13.288250923156738
    10. ' ' → logprob: -13.413250923156738

Token 840: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.7079879641532898
    2. '(prob' → logprob: -0.7079879641532898
    3. ' (' → logprob: -5.0829877853393555
    4. '(' → logprob: -5.5829877853393555
    5. '(out' → logprob: -6.0829877853393555
    6. '((' → logprob: -6.4579877853393555
    7. '(pro' → logprob: -7.3329877853393555
    8. '(v' → logprob: -8.957987785339355
    9. '   ' → logprob: -9.832987785339355
    10. '
' → logprob: -11.207987785339355

Token 841: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0002497767563909292
    2. '(num' → logprob: -8.375249862670898
    3. ' num' → logprob: -10.875249862670898
    4. '1' → logprob: -15.875249862670898
    5. ' (' → logprob: -16.7502498626709
    6. '   ' → logprob: -17.1252498626709
    7. '	num' → logprob: -17.7502498626709
    8. '$num' → logprob: -18.7502498626709
    9. '[num' → logprob: -18.8752498626709
    10. '(' → logprob: -18.8752498626709

Token 842: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3484569787979126
    2. '+' → logprob: -1.2234569787979126
    3. '/' → logprob: -11.848457336425781
    4. ' /' → logprob: -13.098457336425781
    5. ' ' → logprob: -13.723457336425781
    6. '()+' → logprob: -14.848457336425781
    7. '[' → logprob: -15.223457336425781
    8. '   ' → logprob: -15.348457336425781
    9. '```' → logprob: -15.848457336425781
    10. '＋' → logprob: -15.973457336425781

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.875024795532227
    4. '```' → logprob: -16.125024795532227
    5. '
' → logprob: -16.875024795532227
    6. '(' → logprob: -17.625024795532227
    7. '/' → logprob: -17.875024795532227
    8. ')' → logprob: -18.000024795532227
    9. '  ' → logprob: -18.125024795532227
    10. '                   ' → logprob: -18.375024795532227

Token 844: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.214019307051785e-05
    2. ' )' → logprob: -10.500032424926758
    3. ')
' → logprob: -12.875032424926758
    4. ')/' → logprob: -14.000032424926758
    5. '   ' → logprob: -15.000032424926758
    6. '               ' → logprob: -15.750032424926758
    7. '))' → logprob: -16.000032424926758
    8. '       ' → logprob: -16.000032424926758
    9. ')}' → logprob: -16.750032424926758
    10. '           ' → logprob: -16.875032424926758

Token 845: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 846: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -4.5491004129871726e-05
    2. ' out' → logprob: -10.000045776367188
    3. '	out' → logprob: -19.750045776367188
    4. '(out' → logprob: -19.750045776367188
    5. '[out' → logprob: -21.375045776367188
    6. '_out' → logprob: -21.500045776367188
    7. '   ' → logprob: -21.625045776367188
    8. '*out' → logprob: -22.875045776367188
    9. '$out' → logprob: -23.250045776367188
    10. '```' → logprob: -23.250045776367188

Token 847: 'deg' (ID: 30546)
  Prédit: 'deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.00283281528390944
    2. 'de' → logprob: -5.877832889556885
    3. 'out' → logprob: -11.252832412719727
    4. 'eg' → logprob: -11.502832412719727
    5. ' deg' → logprob: -12.877832412719727
    6. 'ed' → logprob: -14.127832412719727
    7. 'def' → logprob: -14.377832412719727
    8. 'd' → logprob: -14.877832412719727
    9. 'g' → logprob: -15.377832412719727
    10. '_deg' → logprob: -16.377832412719727

Token 848: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 849: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 850: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5150429010391235
    2. '#' (adapté à ' #') → logprob: -2.015042781829834
    3. 'if' → logprob: -2.140042781829834
    4. 'expected' → logprob: -2.640042781829834
    5. '   ' → logprob: -2.890042781829834
    6. 'answer' → logprob: -5.140042781829834
    7. 'max' → logprob: -5.265042781829834
    8. 'result' → logprob: -5.890042781829834
    9. 'total' → logprob: -6.390042781829834
    10. 'res' → logprob: -6.390042781829834

Token 851: ' Initial' (ID: 9209)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.7606112360954285
    2. '#' → logprob: -1.0106112957000732
    3. 'print' → logprob: -3.1356112957000732
    4. 'res' → logprob: -3.7606112957000732
    5. 'if' → logprob: -4.010611057281494
    6. 'max' → logprob: -4.010611057281494
    7. 'result' → logprob: -4.135611057281494
    8. 'min' → logprob: -4.510611057281494
    9. 'best' → logprob: -4.510611057281494
    10. 'ans' → logprob: -4.760611057281494

Token 852: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.010666227899491787
    2. 'ization' → logprob: -4.635666370391846
    3. '#' → logprob: -7.135666370391846
    4. 'al' → logprob: -10.510665893554688
    5. 'is' → logprob: -10.510665893554688
    6. 'e' → logprob: -11.260665893554688
    7. 'ial' → logprob: -11.510665893554688
    8. 'ation' → logprob: -12.010665893554688
    9. '   ' → logprob: -12.010665893554688
    10. 'ement' → logprob: -12.760665893554688

Token 853: ' des' (ID: 731)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.076462984085083
    2. '   ' → logprob: -1.701462984085083
    3. 'res' → logprob: -1.951462984085083
    4. 'min' → logprob: -2.326462984085083
    5. 'dp' → logprob: -2.826462984085083
    6. 'result' → logprob: -3.076462984085083
    7. 'max' → logprob: -3.451462984085083
    8. 'dist' → logprob: -3.826462984085083
    9. 'answer' → logprob: -4.076462745666504
    10. 'ans' → logprob: -4.201462745666504

Token 854: ' mêmes' (ID: 71634)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5815897583961487
    2. 'ans' → logprob: -1.581589698791504
    3. 'result' → logprob: -2.956589698791504
    4. 'min' → logprob: -3.331589698791504
    5. 'max' → logprob: -3.581589698791504
    6. '#' → logprob: -3.581589698791504
    7. 'best' → logprob: -3.831589698791504
    8. 'ret' → logprob: -4.206589698791504
    9. 'answer' → logprob: -4.956589698791504
    10. 'expected' → logprob: -4.956589698791504

Token 855: ' variables' (ID: 13955)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9695549607276917
    2. 'pro' → logprob: -1.2195549011230469
    3. 'prob' → logprob: -1.3445549011230469
    4. 'for' → logprob: -3.844554901123047
    5. 'v' → logprob: -4.469554901123047
    6. 'indices' → logprob: -4.844554901123047
    7. '[' → logprob: -6.094554901123047
    8. '   ' → logprob: -6.094554901123047
    9. 'variables' → logprob: -6.344554901123047
    10. 's' → logprob: -6.344554901123047

Token 856: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3804081678390503
    2. 'prob' → logprob: -1.3804081678390503
    3. '   ' → logprob: -1.7554081678390503
    4. 'final' → logprob: -2.13040828704834
    5. 'v' → logprob: -2.63040828704834
    6. ' =' → logprob: -3.63040828704834
    7. '#' → logprob: -3.75540828704834
    8. 'result' → logprob: -4.38040828704834
    9. 'res' → logprob: -4.88040828704834
    10. 'best' → logprob: -5.00540828704834

Token 857: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.09279947727918625
    2. '#' → logprob: -2.967799425125122
    3. 'en' → logprob: -4.092799663543701
    4. 'for' → logprob: -5.217799663543701
    5. 'dans' → logprob: -6.092799663543701
    6. 'sans' → logprob: -6.217799663543701
    7. ' pour' → logprob: -6.217799663543701
    8. 'sur' → logprob: -6.217799663543701
    9. 'à' → logprob: -6.842799663543701
    10. 'rev' → logprob: -6.967799663543701

Token 858: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7938029170036316
    2. 'l' → logprob: -1.5438029766082764
    3. 'une' → logprob: -2.2938029766082764
    4. ' la' → logprob: -2.9188029766082764
    5. '#' → logprob: -3.1688029766082764
    6. 'les' → logprob: -3.1688029766082764
    7. 'le' → logprob: -3.5438029766082764
    8. 'rev' → logprob: -3.6688029766082764
    9. 'reverse' → logprob: -4.668802738189697
    10. ' l' → logprob: -4.793802738189697

Token 859: ' grap' (ID: 60955)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.0968576669692993
    2. 'rev' → logprob: -1.8468576669692993
    3. 'out' → logprob: -1.9718576669692993
    4. '#' → logprob: -1.9718576669692993
    5. 'reverse' → logprob: -2.0968575477600098
    6. 'pro' → logprob: -3.5968575477600098
    7. 'prob' → logprob: -3.5968575477600098
    8. 'for' → logprob: -4.34685754776001
    9. ' adj' → logprob: -4.72185754776001
    10. ' reverse' → logprob: -5.22185754776001

Token 860: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03538883477449417
    2. 'phe' → logprob: -4.160388946533203
    3. 'aphe' → logprob: -4.535388946533203
    4. 'h' → logprob: -4.910388946533203
    5. '#' → logprob: -7.035388946533203
    6. 'hé' → logprob: -10.535388946533203
    7. 'ph' → logprob: -10.660388946533203
    8. 'e' → logprob: -10.785388946533203
    9. 'heme' → logprob: -11.410388946533203
    10. '[' → logprob: -11.660388946533203

Token 861: ' invers' (ID: 38721)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.31826022267341614
    2. ' inverse' → logprob: -2.3182601928710938
    3. 'in' → logprob: -3.0682601928710938
    4. ' invers' → logprob: -3.3182601928710938
    5. 'rev' → logprob: -4.068260192871094
    6. 'reverse' → logprob: -4.193260192871094
    7. ' reverse' → logprob: -4.568260192871094
    8. 'Inverse' → logprob: -5.193260192871094
    9. 'adj' → logprob: -5.193260192871094
    10. '#' → logprob: -5.193260192871094

Token 862: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.26255136728286743
    2. 'sé' → logprob: -2.1375513076782227
    3. 'h' → logprob: -3.8875513076782227
    4. 'e' → logprob: -4.012551307678223
    5. 'es' → logprob: -4.387551307678223
    6. 'se' → logprob: -4.387551307678223
    7. 'ée' → logprob: -4.637551307678223
    8. 'ése' → logprob: -4.887551307678223
    9. 'hé' → logprob: -4.887551307678223
    10. 'és' → logprob: -4.887551307678223

Token 863: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7522584795951843
    2. 'pro' → logprob: -0.7522584795951843
    3. 'prob' → logprob: -3.877258539199829
    4. ' probs' → logprob: -4.12725830078125
    5. '
' → logprob: -4.25225830078125
    6. ',' → logprob: -6.50225830078125
    7. '#' → logprob: -7.00225830078125
    8. ' =' → logprob: -7.12725830078125
    9. '_probs' → logprob: -7.37725830078125
    10. ':' → logprob: -7.62725830078125

Token 864: 'pour' (ID: 52723)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5434212684631348
    2. 'pro' → logprob: -1.7934212684631348
    3. 'prob' → logprob: -2.6684212684631348
    4. 'for' → logprob: -3.1684212684631348
    5. ' probs' → logprob: -3.4184212684631348
    6. '
' → logprob: -3.6684212684631348
    7. '   ' → logprob: -3.9184212684631348
    8. ')' → logprob: -4.418421268463135
    9. ' #' → logprob: -4.543421268463135
    10. 'v' → logprob: -4.543421268463135

Token 865: ' sim' (ID: 1845)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.148071050643921
    2. 'le' → logprob: -1.648071050643921
    3. 'v' → logprob: -2.523071050643921
    4. 'les' → logprob: -2.648071050643921
    5. ' calcul' → logprob: -2.773071050643921
    6. 'la' → logprob: -2.898071050643921
    7. 'l' → logprob: -3.023071050643921
    8. 'prop' → logprob: -3.773071050643921
    9. 'detect' → logprob: -3.773071050643921
    10. 'prob' → logprob: -3.898071050643921

Token 866: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.5851844549179077
    2. 'ple' → logprob: -1.2101844549179077
    3. 'ulation' → logprob: -3.0851845741271973
    4. 'plement' → logprob: -3.7101845741271973
    5. 'pler' → logprob: -4.085184574127197
    6. 'pl' → logprob: -4.335184574127197
    7. '#' → logprob: -4.585184574127197
    8. 'ulate' → logprob: -4.710184574127197
    9. 'ulating' → logprob: -5.085184574127197
    10. 'er' → logprob: -5.710184574127197

Token 867: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.20467209815979
    2. 'une' → logprob: -1.57967209815979
    3. 'le' → logprob: -1.82967209815979
    4. 'la' → logprob: -2.32967209815979
    5. 'les' → logprob: -2.45467209815979
    6. ' une' → logprob: -3.07967209815979
    7. ' la' → logprob: -3.57967209815979
    8. ' l' → logprob: -3.82967209815979
    9. ' le' → logprob: -4.079671859741211
    10. 'un' → logprob: -4.579671859741211

Token 868: ' processus' (ID: 49849)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -1.378537893295288
    2. 'calcul' → logprob: -1.878537893295288
    3. 'reverse' → logprob: -2.003537893295288
    4. 'ret' → logprob: -2.003537893295288
    5. ' calcul' → logprob: -2.753537893295288
    6. ' retour' → logprob: -3.503537893295288
    7. 'sens' → logprob: -3.753537893295288
    8. '```' → logprob: -3.753537893295288
    9. 'c' → logprob: -3.878537893295288
    10. ' passage' → logprob: -4.003538131713867

Token 869: ' en' (ID: 469)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.9690367579460144
    2. ')' → logprob: -1.3440368175506592
    3. 'de' → logprob: -1.8440368175506592
    4. ' inverse' → logprob: -2.469036817550659
    5. 'd' → logprob: -3.594036817550659
    6. '#' → logprob: -4.34403657913208
    7. ' de' → logprob: -4.34403657913208
    8. 'à' → logprob: -4.96903657913208
    9. 'def' → logprob: -5.09403657913208
    10. 'com' → logprob: -5.21903657913208

Token 870: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.6204550862312317
    2. 'part' → logprob: -1.870455026626587
    3. 'reverse' → logprob: -2.370455026626587
    4. ' sens' → logprob: -2.495455026626587
    5. 'prob' → logprob: -2.995455026626587
    6. 'vue' → logprob: -4.995455265045166
    7. 're' → logprob: -5.245455265045166
    8. 'ar' → logprob: -5.495455265045166
    9. 'pro' → logprob: -5.495455265045166
    10. 'avance' → logprob: -5.495455265045166

Token 871: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.02713180147111416
    2. ' inverse' → logprob: -3.7771317958831787
    3. 'reverse' → logprob: -5.652132034301758
    4. '_inverse' → logprob: -8.902132034301758
    5. ' reverse' → logprob: -9.277132034301758
    6. 'sens' → logprob: -10.652132034301758
    7. ' invers' → logprob: -10.777132034301758
    8. 'op' → logprob: -11.277132034301758
    9. '逆' → logprob: -11.527132034301758
    10. 'in' → logprob: -11.652132034301758

Token 872: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5095876455307007
    2. '   ' → logprob: -1.0095876455307007
    3. ')
' → logprob: -4.00958776473999
    4. ').' → logprob: -4.38458776473999
    5. '):
' → logprob: -6.50958776473999
    6. '):' → logprob: -7.00958776473999
    7. '
' → logprob: -7.38458776473999
    8. ',' → logprob: -7.63458776473999
    9. ').
' → logprob: -7.88458776473999
    10. 'def' → logprob: -9.759587287902832

Token 873: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002047840040177107
    2. 'range' → logprob: -7.252048015594482
    3. '0' → logprob: -7.752048015594482
    4. ' N' → logprob: -8.002047538757324
    5. '   ' → logprob: -8.377047538757324
    6. 'the' → logprob: -9.627047538757324
    7. 'le' → logprob: -9.752047538757324
    8. ')' → logprob: -10.252047538757324
    9. 'la' → logprob: -10.502047538757324
    10. '[N' → logprob: -10.752047538757324

Token 874: ''arrivée' (ID: 156076)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.08580655604600906
    2. 's' → logprob: -3.3358066082000732
    3. 'som' → logprob: -3.9608066082000732
    4. '0' → logprob: -4.585806369781494
    5. ')' → logprob: -5.210806369781494
    6. '#' → logprob: -5.460806369781494
    7. ' somm' → logprob: -6.085806369781494
    8. 'e' → logprob: -6.710806369781494
    9. 'a' → logprob: -6.835806369781494
    10. ' som' → logprob: -7.710806369781494

Token 875: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.2850255072116852
    2. '):' → logprob: -1.9100254774093628
    3. '):
' → logprob: -3.2850255966186523
    4. ')' → logprob: -3.4100255966186523
    5. '   ' → logprob: -4.160025596618652
    6. ').
' → logprob: -5.035025596618652
    7. ',' → logprob: -6.035025596618652
    8. 'v' → logprob: -6.660025596618652
    9. '):
' → logprob: -6.785025596618652
    10. '):

' → logprob: -7.535025596618652

Token 876: '   ' (ID: 271)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.07211616635322571
    2. 'rev' → logprob: -3.5721161365509033
    3. 'prob' → logprob: -4.072116374969482
    4. '   ' → logprob: -4.447116374969482
    5. 'inv' → logprob: -5.322116374969482
    6. 'r' → logprob: -5.947116374969482
    7. ' probs' → logprob: -6.447116374969482
    8. 'reverse' → logprob: -6.572116374969482
    9. 're' → logprob: -7.822116374969482
    10. 'p' → logprob: -8.197115898132324

Token 877: ' prob' (ID: 4921)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0816088616847992
    2. 'prob' (adapté à ' prob') → logprob: -3.331608772277832
    3. 'rev' → logprob: -3.831608772277832
    4. 'inv' → logprob: -4.706608772277832
    5. 'r' → logprob: -4.831608772277832
    6. '#' → logprob: -6.331608772277832
    7. 'reverse' → logprob: -7.581608772277832
    8. 're' → logprob: -7.831608772277832
    9. 'back' → logprob: -8.331608772277832
    10. '   ' → logprob: -8.706608772277832

Token 878: 'Re' (ID: 720)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00012308525037951767
    2. '=' → logprob: -9.875123023986816
    3. ' =' → logprob: -10.000123023986816
    4. ' s' → logprob: -12.250123023986816
    5. ',' → logprob: -12.250123023986816
    6. 'sv' → logprob: -12.750123023986816
    7. '[' → logprob: -13.625123023986816
    8. 'es' → logprob: -13.875123023986816
    9. 'rev' → logprob: -14.000123023986816
    10. '   ' → logprob: -14.000123023986816

Token 879: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00186307227704674
    2. 'vs' → logprob: -6.8768630027771
    3. 'v' → logprob: -7.5018630027771
    4. '=' → logprob: -9.001863479614258
    5. ' =' → logprob: -9.001863479614258
    6. '[' → logprob: -12.126863479614258
    7. 'sv' → logprob: -12.501863479614258
    8. 'ves' → logprob: -12.751863479614258
    9. ' s' → logprob: -13.126863479614258
    10. '```' → logprob: -13.251863479614258

Token 880: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03285236656665802
    2. '=' → logprob: -3.9078524112701416
    3. ' =' → logprob: -4.4078521728515625
    4. 'es' → logprob: -10.782852172851562
    5. 'os' → logprob: -11.032852172851562
    6. 'o' → logprob: -12.032852172851562
    7. '[' → logprob: -12.657852172851562
    8. '=[' → logprob: -12.907852172851562
    9. ',' → logprob: -13.407852172851562
    10. '=s' → logprob: -13.657852172851562

Token 881: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002477796748280525
    2. ' [' → logprob: -6.002477645874023
    3. 'pro' → logprob: -13.502477645874023
    4. 'prob' → logprob: -15.002477645874023
    5. '   ' → logprob: -16.127477645874023
    6. ' ' → logprob: -16.377477645874023
    7. 's' → logprob: -16.752477645874023
    8. '0' → logprob: -16.877477645874023
    9. '[N' → logprob: -17.252477645874023
    10. 'Pro' → logprob: -18.627477645874023

Token 882: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.125005722045898
    3. ' ' → logprob: -15.125005722045898
    4. '۰' → logprob: -19.7500057220459
    5. ' [' → logprob: -19.8750057220459
    6. '=' → logprob: -21.2500057220459
    7. '```' → logprob: -21.3750057220459
    8. '[N' → logprob: -21.5000057220459
    9. ')' → logprob: -22.0000057220459
    10. '1' → logprob: -22.1250057220459

Token 883: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008176080300472677
    2. ' ]' → logprob: -7.500817775726318
    3. ' *' → logprob: -9.37581729888916
    4. '*' → logprob: -9.37581729888916
    5. ']*' → logprob: -9.50081729888916
    6. ')' → logprob: -11.87581729888916
    7. '[' → logprob: -12.12581729888916
    8. ' ' → logprob: -13.12581729888916
    9. ',' → logprob: -13.37581729888916
    10. '<|end|>' → logprob: -14.12581729888916

Token 884: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.37616270780563354
    2. '*' → logprob: -1.3761627674102783
    3. '[' → logprob: -2.8761627674102783
    4. ' [' → logprob: -6.001162528991699
    5. '   ' → logprob: -7.126162528991699
    6. ')' → logprob: -8.1261625289917
    7. ' ' → logprob: -8.8761625289917
    8. '*[' → logprob: -8.8761625289917
    9. '```' → logprob: -9.0011625289917
    10. '[]' → logprob: -9.0011625289917

Token 885: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.5491004129871726e-05
    2. ' N' → logprob: -10.000045776367188
    3. '(N' → logprob: -19.500045776367188
    4. '```' → logprob: -19.750045776367188
    5. '   ' → logprob: -20.750045776367188
    6. '[N' → logprob: -21.375045776367188
    7. '[' → logprob: -22.000045776367188
    8. '	N' → logprob: -22.125045776367188
    9. '(' → logprob: -23.125045776367188
    10. ' ' → logprob: -23.375045776367188

Token 886: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6594164371490479
    2. ' prob' → logprob: -1.2844164371490479
    3. 'prob' → logprob: -1.6594164371490479
    4. ',' → logprob: -5.034416198730469
    5. '
' → logprob: -5.909416198730469
    6. ' ' → logprob: -6.659416198730469
    7. '[' → logprob: -6.784416198730469
    8. '```' → logprob: -6.784416198730469
    9. ')' → logprob: -7.159416198730469
    10. '  ' → logprob: -7.784416198730469

Token 887: ' #' (ID: 1069)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.16356484591960907
    2. ' prob' → logprob: -1.9135648012161255
    3. '
' → logprob: -6.788564682006836
    4. ' ' → logprob: -7.788564682006836
    5. '#' → logprob: -8.038564682006836
    6. ',' → logprob: -8.163564682006836
    7. '[' → logprob: -8.163564682006836
    8. 'pro' → logprob: -8.788564682006836
    9. '   ' → logprob: -9.163564682006836
    10. '(prob' → logprob: -9.163564682006836

Token 888: ' Prob' (ID: 36768)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0018291724845767021
    2. ' prob' → logprob: -6.376829147338867
    3. 'N' → logprob: -10.001829147338867
    4. 'M' → logprob: -11.001829147338867
    5. '0' → logprob: -11.001829147338867
    6. 'pro' → logprob: -11.751829147338867
    7. '(prob' → logprob: -12.001829147338867
    8. '[' → logprob: -12.001829147338867
    9. '```' → logprob: -12.501829147338867
    10. '
' → logprob: -12.751829147338867

Token 889: 'abil' (ID: 4168)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.14165489375591278
    2. 's' → logprob: -2.5166549682617188
    3. 'ro' → logprob: -3.5166549682617188
    4. 'rob' → logprob: -4.391654968261719
    5. 'ob' → logprob: -6.141654968261719
    6. 'o' → logprob: -6.766654968261719
    7. '_re' → logprob: -7.016654968261719
    8. 'os' → logprob: -7.016654968261719
    9. 'r' → logprob: -7.141654968261719
    10. '_ro' → logprob: -7.141654968261719

Token 890: 'ités' (ID: 12479)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.9547721743583679
    2. 'é' → logprob: -1.8297722339630127
    3. 'ity' → logprob: -1.9547722339630127
    4. 's' → logprob: -2.3297722339630127
    5. 'és' → logprob: -3.2047722339630127
    6. '_' → logprob: -3.7047722339630127
    7. 'es' → logprob: -3.7047722339630127
    8. 'y' → logprob: -3.8297722339630127
    9. 'ité' → logprob: -3.9547722339630127
    10. '_probs' → logprob: -3.9547722339630127

Token 891: ' invers' (ID: 38721)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8002841472625732
    2. '<|end|>' → logprob: -1.4252841472625732
    3. 'Re' → logprob: -2.0502841472625732
    4. '=' → logprob: -2.9252841472625732
    5. 'prob' → logprob: -3.4252841472625732
    6. ')' → logprob: -3.6752841472625732
    7. ' =' → logprob: -3.6752841472625732
    8. ']' → logprob: -4.300284385681152
    9. '[::-' → logprob: -4.925284385681152
    10. '[]' → logprob: -5.175284385681152

Token 892: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.20255836844444275
    2. 'ities' → logprob: -2.9525582790374756
    3. '[' → logprob: -3.5775582790374756
    4. 'ités' → logprob: -3.5775582790374756
    5. 'és' → logprob: -3.8275582790374756
    6. 'ites' → logprob: -4.077558517456055
    7. 'prob' → logprob: -4.202558517456055
    8. 'ity' → logprob: -4.952558517456055
    9. 'ité' → logprob: -5.702558517456055
    10. 'al' → logprob: -5.827558517456055

Token 893: ':' (ID: 25)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.05129462853074074
    2. '<|end|>' → logprob: -4.426294803619385
    3. '[' → logprob: -4.676294803619385
    4. '   ' → logprob: -4.801294803619385
    5. '
' → logprob: -4.801294803619385
    6. 'pro' → logprob: -5.426294803619385
    7. ' =' → logprob: -6.051294803619385
    8. ')' → logprob: -7.051294803619385
    9. ' prob' → logprob: -7.176294803619385
    10. '=' → logprob: -7.176294803619385

Token 894: ' part' (ID: 997)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.2236967533826828
    2. ' prob' → logprob: -2.223696708679199
    3. '[' → logprob: -2.973696708679199
    4. '0' → logprob: -3.598696708679199
    5. ' probs' → logprob: -5.223696708679199
    6. 'pro' → logprob: -5.473696708679199
    7. ' [' → logprob: -6.348696708679199
    8. ' ' → logprob: -6.848696708679199
    9. '[]' → logprob: -7.473696708679199
    10. '(prob' → logprob: -8.8486967086792

Token 895: 'ant' (ID: 493)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8954264521598816
    2. 'ies' → logprob: -1.7704265117645264
    3. 'ie' → logprob: -1.7704265117645264
    4. '```' → logprob: -3.0204265117645264
    5. 's' → logprob: -3.1454265117645264
    6. 'ant' → logprob: -3.3954265117645264
    7. '=' → logprob: -3.7704265117645264
    8. 'out' → logprob: -4.020426273345947
    9. '_probs' → logprob: -4.020426273345947
    10. 'i' → logprob: -4.520426273345947

Token 896: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08054390549659729
    2. 'from' → logprob: -3.4555439949035645
    3. ' du' → logprob: -3.8305439949035645
    4. 'du' → logprob: -5.0805439949035645
    5. 'de' → logprob: -5.2055439949035645
    6. ' de' → logprob: -5.7055439949035645
    7. '=' → logprob: -6.2055439949035645
    8. ' from' → logprob: -6.2055439949035645
    9. '```' → logprob: -6.8305439949035645
    10. 'prob' → logprob: -7.3305439949035645

Token 897: ' sommet' (ID: 130502)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13370521366596222
    2. '(N' → logprob: -2.1337051391601562
    3. '0' → logprob: -5.383705139160156
    4. '[N' → logprob: -6.258705139160156
    5. ' (' → logprob: -8.508705139160156
    6. ' N' → logprob: -10.508705139160156
    7. 'n' → logprob: -12.383705139160156
    8. 's' → logprob: -13.008705139160156
    9. '(' → logprob: -13.383705139160156
    10. '(n' → logprob: -13.633705139160156

Token 898: ' d' (ID: 272)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012890440411865711
    2. '(N' → logprob: -6.876288890838623
    3. '[N' → logprob: -8.376289367675781
    4. ' N' → logprob: -11.251289367675781
    5. ' (' → logprob: -12.876289367675781
    6. '
' → logprob: -13.251289367675781
    7. '   ' → logprob: -13.251289367675781
    8. '[' → logprob: -13.501289367675781
    9. 'n' → logprob: -13.876289367675781
    10. '(' → logprob: -13.876289367675781

Token 899: ''arrivée' (ID: 156076)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6003343462944031
    2. 'ef' → logprob: -1.6003344058990479
    3. 'estination' → logprob: -2.475334405899048
    4. '[N' → logprob: -3.475334405899048
    5. '[' → logprob: -3.975334405899048
    6. '(N' → logprob: -4.100334167480469
    7. 'N' → logprob: -4.225334167480469
    8. '0' → logprob: -4.475334167480469
    9. 'est' → logprob: -4.600334167480469
    10. 'éf' → logprob: -4.725334167480469

Token 900: ' vers' (ID: 3640)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42097339034080505
    2. '=' → logprob: -1.9209734201431274
    3. ',' → logprob: -2.295973300933838
    4. '
' → logprob: -2.795973300933838
    5. '[N' → logprob: -4.420973300933838
    6. ' (' → logprob: -5.170973300933838
    7. 's' → logprob: -5.420973300933838
    8. '<|end|>' → logprob: -6.295973300933838
    9. '(N' → logprob: -6.420973300933838
    10. 'N' → logprob: -6.545973300933838

Token 901: ' les' (ID: 1341)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10423461347818375
    2. '0' → logprob: -3.1042346954345703
    3. ' N' → logprob: -3.1042346954345703
    4. '[N' → logprob: -5.72923469543457
    5. 'le' → logprob: -6.35423469543457
    6. 'l' → logprob: -6.47923469543457
    7. ' le' → logprob: -6.97923469543457
    8. 's' → logprob: -7.85423469543457
    9. ' ' → logprob: -7.97923469543457
    10. '[' → logprob: -8.35423469543457

Token 902: ' précéd' (ID: 55435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017840027809143066
    2. 'N' → logprob: -5.1428399085998535
    3. '[' → logprob: -5.5178399085998535
    4. 's' → logprob: -6.0178399085998535
    5. '[N' → logprob: -6.3928399085998535
    6. '#' → logprob: -7.0178399085998535
    7. 'pro' → logprob: -7.6428399085998535
    8. ' ' → logprob: -8.392840385437012
    9. 'som' → logprob: -8.517840385437012
    10. 'sources' → logprob: -8.642840385437012

Token 903: 'ents' (ID: 1094)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9030575752258301
    2. 'éc' → logprob: -2.02805757522583
    3. 'é' → logprob: -2.02805757522583
    4. 'e' → logprob: -2.40305757522583
    5. 'ef' → logprob: -2.65305757522583
    6. 'és' → logprob: -3.02805757522583
    7. 'éf' → logprob: -3.52805757522583
    8. 'ec' → logprob: -3.90305757522583
    9. 's' → logprob: -4.52805757522583
    10. 'efs' → logprob: -4.77805757522583

Token 904: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7121666073799133
    2. '=' → logprob: -1.3371665477752686
    3. '
' → logprob: -1.5871665477752686
    4. ',' → logprob: -4.712166786193848
    5. '[' → logprob: -4.962166786193848
    6. 'prob' → logprob: -4.962166786193848
    7. 's' → logprob: -5.212166786193848
    8. '0' → logprob: -5.712166786193848
    9. '(' → logprob: -6.087166786193848
    10. ' (' → logprob: -6.212166786193848

Token 905: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.537007212638855
    2. 'prob' → logprob: -1.412007212638855
    3. ' =' → logprob: -1.912007212638855
    4. '=' → logprob: -4.0370073318481445
    5. '   ' → logprob: -6.4120073318481445
    6. ' prob' → logprob: -6.5370073318481445
    7. '[]' → logprob: -7.2870073318481445
    8. ',' → logprob: -7.6620073318481445
    9. '```' → logprob: -8.037007331848145
    10. ' [' → logprob: -8.037007331848145

Token 906: ' ex' (ID: 513)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.00020127551397308707
    2. 'exp' → logprob: -9.375201225280762
    3. ' prob' → logprob: -9.625201225280762
    4. '   ' → logprob: -10.750201225280762
    5. 'M' → logprob: -11.000201225280762
    6. 'input' → logprob: -12.750201225280762
    7. 'pro' → logprob: -12.875201225280762
    8. '[' → logprob: -14.000201225280762
    9. 'N' → logprob: -14.000201225280762
    10. '```' → logprob: -14.000201225280762

Token 907: 'pe' (ID: 424)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0027373512275516987
    2. 'pes' → logprob: -6.627737522125244
    3. 'ps' → logprob: -6.752737522125244
    4. 'prob' → logprob: -8.752737045288086
    5. 'pos' → logprob: -11.002737045288086
    6. 'pe' → logprob: -11.127737045288086
    7. 'exp' → logprob: -11.752737045288086
    8. 'po' → logprob: -12.252737045288086
    9. 'pet' → logprob: -12.252737045288086
    10. 'pres' → logprob: -12.627737045288086

Token 908: 'Re' (ID: 720)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5370888113975525
    2. 'Re' → logprob: -0.9120888113975525
    3. 'r' → logprob: -5.037088871002197
    4. 'Rev' → logprob: -5.787088871002197
    5. 'ct' → logprob: -6.912088871002197
    6. 'Rs' → logprob: -7.037088871002197
    7. 'c' → logprob: -7.787088871002197
    8. '=' → logprob: -7.787088871002197
    9. ' =' → logprob: -8.412088394165039
    10. 'rs' → logprob: -8.412088394165039

Token 909: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0016463837819173932
    2. 'es' → logprob: -7.251646518707275
    3. 'ps' → logprob: -7.626646518707275
    4. '[' → logprob: -9.376646041870117
    5. 'vs' → logprob: -9.626646041870117
    6. 'ses' → logprob: -9.876646041870117
    7. 'prob' → logprob: -10.001646041870117
    8. '=' → logprob: -10.501646041870117
    9. 'xes' → logprob: -10.501646041870117
    10. 'exp' → logprob: -10.751646041870117

Token 910: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521098554134369
    2. ' =' → logprob: -1.5021098852157593
    3. 's' → logprob: -8.62710952758789
    4. '[' → logprob: -14.75210952758789
    5. '=[' → logprob: -14.87710952758789
    6. ']' → logprob: -15.75210952758789
    7. ')' → logprob: -15.87710952758789
    8. ' ' → logprob: -16.50210952758789
    9. 'es' → logprob: -17.25210952758789
    10. '<|end|>' → logprob: -17.25210952758789

Token 911: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.542423165636137e-05
    2. ' [' → logprob: -9.375085830688477
    3. '0' → logprob: -14.625085830688477
    4. '   ' → logprob: -17.625085830688477
    5. 's' → logprob: -18.000085830688477
    6. ' ' → logprob: -18.125085830688477
    7. '[N' → logprob: -19.625085830688477
    8. '```' → logprob: -19.750085830688477
    9. '[-' → logprob: -20.000085830688477
    10. '[...,' → logprob: -20.375085830688477

Token 912: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.975612187583465e-05
    2. '[' → logprob: -10.500029563903809
    3. 'N' → logprob: -13.500029563903809
    4. '[N' → logprob: -14.375029563903809
    5. ' ' → logprob: -15.875029563903809
    6. ' [' → logprob: -18.625030517578125
    7. '   ' → logprob: -18.625030517578125
    8. '
' → logprob: -18.750030517578125
    9. '```' → logprob: -18.875030517578125
    10. '1' → logprob: -19.250030517578125

Token 913: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.127333340875339e-06
    2. ' ]' → logprob: -12.625003814697266
    3. ']*' → logprob: -15.250003814697266
    4. '[' → logprob: -15.375003814697266
    5. '*' → logprob: -15.875003814697266
    6. '']' → logprob: -16.250003814697266
    7. ')' → logprob: -17.375003814697266
    8. ']
' → logprob: -17.875003814697266
    9. ']=' → logprob: -18.125003814697266
    10. '}' → logprob: -18.250003814697266

Token 914: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11893077194690704
    2. '*' → logprob: -2.7439308166503906
    3. '[' → logprob: -3.4939308166503906
    4. ' [' → logprob: -4.493930816650391
    5. ']' → logprob: -6.118930816650391
    6. ' ' → logprob: -6.493930816650391
    7. ')' → logprob: -7.368930816650391
    8. '[N' → logprob: -7.493930816650391
    9. '[]' → logprob: -7.868930816650391
    10. '=' → logprob: -7.868930816650391

Token 915: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.088346359931165e-07
    2. ' N' → logprob: -14.000000953674316
    3. '[' → logprob: -16.875
    4. '   ' → logprob: -18.5
    5. '[N' → logprob: -18.75
    6. '```' → logprob: -19.75
    7. ' ' → logprob: -21.5
    8. '  ' → logprob: -22.0
    9. '	N' → logprob: -22.25
    10. '
' → logprob: -22.5

Token 916: ' ' (ID: 220)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.18528680503368378
    2. '[' → logprob: -1.9352867603302002
    3. ' prob' → logprob: -4.560286998748779
    4. ' =' → logprob: -4.810286998748779
    5. '   ' → logprob: -5.935286998748779
    6. '=' → logprob: -7.185286998748779
    7. '(prob' → logprob: -7.310286998748779
    8. '_prob' → logprob: -7.685286998748779
    9. '
' → logprob: -7.935286998748779
    10. ' [' → logprob: -8.185286521911621

Token 917: ' #' (ID: 1069)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.6267203688621521
    2. '[' → logprob: -0.8767203688621521
    3. '=' → logprob: -3.501720428466797
    4. ' =' → logprob: -4.251720428466797
    5. '#' → logprob: -5.626720428466797
    6. ' [' → logprob: -7.251720428466797
    7. ' prob' → logprob: -7.751720428466797
    8. '*' → logprob: -9.001720428466797
    9. 'pro' → logprob: -9.501720428466797
    10. '   ' → logprob: -10.001720428466797

Token 918: ' Esp' (ID: 13391)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.07856904715299606
    2. 'exp' → logprob: -2.703568935394287
    3. ' prob' → logprob: -5.078568935394287
    4. '0' → logprob: -6.828568935394287
    5. ' exp' → logprob: -6.828568935394287
    6. 'pro' → logprob: -9.203569412231445
    7. '[' → logprob: -9.578569412231445
    8. '(prob' → logprob: -12.078569412231445
    9. ' ' → logprob: -12.453569412231445
    10. 'N' → logprob: -12.578569412231445

Token 919: 'ér' (ID: 2156)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10198229551315308
    2. 'ects' → logprob: -3.476982355117798
    3. 'é' → logprob: -4.726982116699219
    4. 'e' → logprob: -4.726982116699219
    5. 'ces' → logprob: -4.726982116699219
    6. 'ect' → logprob: -4.726982116699219
    7. 'er' → logprob: -4.851982116699219
    8. 'ec' → logprob: -5.101982116699219
    9. 'ecs' → logprob: -5.101982116699219
    10. 'ected' → logprob: -5.351982116699219

Token 920: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.42427337169647217
    2. 'es' → logprob: -2.2992734909057617
    3. 'ces' → logprob: -3.0492734909057617
    4. 'ans' → logprob: -3.2992734909057617
    5. 's' → logprob: -3.5492734909057617
    6. 'ences' → logprob: -3.6742734909057617
    7. 'ance' → logprob: -3.7992734909057617
    8. 'er' → logprob: -3.9242734909057617
    9. 'aces' → logprob: -4.299273490905762
    10. 'érance' → logprob: -4.799273490905762

Token 921: ' invers' (ID: 38721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745335578918457
    2. '=' → logprob: -0.9745335578918457
    3. '[' → logprob: -7.724533557891846
    4. 'Re' → logprob: -11.724533081054688
    5. '=[' → logprob: -12.474533081054688
    6. ' =[' → logprob: -14.224533081054688
    7. ' [' → logprob: -14.724533081054688
    8. ']' → logprob: -15.224533081054688
    9. '   ' → logprob: -15.474533081054688
    10. '#' → logprob: -15.474533081054688

Token 922: 'es' (ID: 268)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.35785046219825745
    2. 'es' → logprob: -1.607850432395935
    3. '[' → logprob: -2.9828505516052246
    4. 'ées' → logprob: -4.732850551605225
    5. 'c' → logprob: -4.857850551605225
    6. 's' → logprob: -4.982850551605225
    7. 'ages' → logprob: -5.107850551605225
    8. 'p' → logprob: -5.357850551605225
    9. '   ' → logprob: -5.982850551605225
    10. 'és' → logprob: -6.357850551605225

Token 923: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026375075802206993
    2. '=' → logprob: -3.6513750553131104
    3. '[' → logprob: -9.651374816894531
    4. '=[' → logprob: -12.026374816894531
    5. ' =[' → logprob: -13.401374816894531
    6. '<|end|>' → logprob: -14.401374816894531
    7. '```' → logprob: -14.526374816894531
    8. 'prob' → logprob: -14.526374816894531
    9. ']' → logprob: -15.026374816894531
    10. ' [' → logprob: -15.526374816894531

Token 924: ' nombre' (ID: 9733)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005893126595765352
    2. 'exp' → logprob: -6.005893230438232
    3. '0' → logprob: -6.130893230438232
    4. ' [' → logprob: -6.755893230438232
    5. 'ex' → logprob: -10.505892753601074
    6. ' ' → logprob: -10.880892753601074
    7. ' exp' → logprob: -11.005892753601074
    8. 'prob' → logprob: -12.005892753601074
    9. '#' → logprob: -13.755892753601074
    10. ' ex' → logprob: -14.005892753601074

Token 925: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0536017417907715
    2. 'de' → logprob: -1.1786017417907715
    3. '=' → logprob: -2.3036017417907715
    4. '<|end|>' → logprob: -2.5536017417907715
    5. 'tokens' → logprob: -3.3036017417907715
    6. ' de' → logprob: -3.4286017417907715
    7. ' d' → logprob: -3.8036017417907715
    8. ' =' → logprob: -3.8036017417907715
    9. 'token' → logprob: -4.8036017417907715
    10. ')' → logprob: -5.0536017417907715

Token 926: ''ét' (ID: 23771)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3078743517398834
    2. 'de' → logprob: -2.0578744411468506
    3. 'pas' → logprob: -2.3078744411468506
    4. ' pas' → logprob: -4.5578742027282715
    5. '   ' → logprob: -4.9328742027282715
    6. '_steps' → logprob: -5.4328742027282715
    7. '_' → logprob: -5.6828742027282715
    8. 'steps' → logprob: -6.0578742027282715
    9. '_pas' → logprob: -6.1828742027282715
    10. '_de' → logprob: -6.8078742027282715

Token 927: 'apes' (ID: 11864)
  Prédit: 'apes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.006810584105551243
    2. 'ape' → logprob: -5.381810665130615
    3. 'app' → logprob: -7.881810665130615
    4. 'ap' → logprob: -8.381810188293457
    5. '#' → logprob: -8.506810188293457
    6. '```' → logprob: -8.756810188293457
    7. 'p' → logprob: -9.506810188293457
    8. '[' → logprob: -9.506810188293457
    9. 'pas' → logprob: -9.506810188293457
    10. '{' → logprob: -9.819310188293457

Token 928: ' moyen' (ID: 46111)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.620482325553894
    2. '[' → logprob: -1.620482325553894
    3. ' =' → logprob: -1.995482325553894
    4. 'pour' → logprob: -3.2454824447631836
    5. '=' → logprob: -3.9954824447631836
    6. '*' → logprob: -4.120482444763184
    7. ' *' → logprob: -4.245482444763184
    8. '[]' → logprob: -4.495482444763184
    9. '  ' → logprob: -5.370482444763184
    10. ')' → logprob: -5.620482444763184

Token 929: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.9637315273284912
    2. '*' → logprob: -1.4637315273284912
    3. '[' → logprob: -2.338731527328491
    4. ' *' → logprob: -2.463731527328491
    5. '   ' → logprob: -2.963731527328491
    6. ' pour' → logprob: -3.213731527328491
    7. 'for' → logprob: -3.338731527328491
    8. ' =' → logprob: -3.463731527328491
    9. '=' → logprob: -4.33873176574707
    10. '```' → logprob: -4.71373176574707

Token 930: ' venir' (ID: 42933)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1539589762687683
    2. 'atte' → logprob: -2.278959035873413
    3. 're' → logprob: -3.278959035873413
    4. ' arriver' → logprob: -7.278958797454834
    5. 'att' → logprob: -7.653958797454834
    6. 'rev' → logprob: -8.653959274291992
    7. ' atteindre' → logprob: -8.778959274291992
    8. 'at' → logprob: -9.153959274291992
    9. '#' → logprob: -9.153959274291992
    10. '   ' → logprob: -9.278959274291992

Token 931: ' de' (ID: 334)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.959956705570221
    2. 'à' → logprob: -1.2099566459655762
    3. 'du' → logprob: -1.7099566459655762
    4. 'de' → logprob: -3.209956645965576
    5. 'dep' → logprob: -3.334956645965576
    6. 'd' → logprob: -3.709956645965576
    7. 'arr' → logprob: -5.334956645965576
    8. ' ' → logprob: -5.584956645965576
    9. ' à' → logprob: -5.584956645965576
    10. ' du' → logprob: -5.709956645965576

Token 932: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10068170726299286
    2. '[N' → logprob: -3.350681781768799
    3. ' N' → logprob: -3.475681781768799
    4. 'M' → logprob: -4.100681781768799
    5. ' M' → logprob: -5.350681781768799
    6. '[M' → logprob: -6.350681781768799
    7. '0' → logprob: -6.600681781768799
    8. '(N' → logprob: -6.850681781768799
    9. '[' → logprob: -7.225681781768799
    10. 's' → logprob: -7.225681781768799

Token 933: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.0915636420249939
    2. 'arrival' → logprob: -2.9665637016296387
    3. 'arr' → logprob: -4.466563701629639
    4. ''arr' → logprob: -4.841563701629639
    5. ''arrive' → logprob: -5.716563701629639
    6. 'e' → logprob: -5.841563701629639
    7. 'N' → logprob: -6.341563701629639
    8. ''entrée' → logprob: -6.966563701629639
    9. ']' → logprob: -7.091563701629639
    10. '’arrivée' → logprob: -7.091563701629639

Token 934: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2597804069519043
    2. '[' → logprob: -1.5097804069519043
    3. ' =' → logprob: -1.7597804069519043
    4. '```' → logprob: -2.3847804069519043
    5. ' à' → logprob: -2.8847804069519043
    6. ')' → logprob: -3.6347804069519043
    7. '=' → logprob: -3.7597804069519043
    8. ']' → logprob: -3.7597804069519043
    9. 'à' → logprob: -4.134780406951904
    10. 'from' → logprob: -4.259780406951904

Token 935: ' chaque' (ID: 21194)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0786067396402359
    2. '0' → logprob: -3.0786068439483643
    3. '[N' → logprob: -4.578606605529785
    4. ' N' → logprob: -4.953606605529785
    5. '[' → logprob: -5.078606605529785
    6. 'v' → logprob: -6.703606605529785
    7. 'M' → logprob: -6.953606605529785
    8. ' ' → logprob: -6.953606605529785
    9. '```' → logprob: -7.578606605529785
    10. 's' → logprob: -7.703606605529785

Token 936: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.09945353120565414
    2. 'som' → logprob: -2.8494534492492676
    3. 's' → logprob: -3.7244534492492676
    4. 'v' → logprob: -5.349453449249268
    5. ' ' → logprob: -5.474453449249268
    6. ' v' → logprob: -7.099453449249268
    7. ' som' → logprob: -7.224453449249268
    8. '```' → logprob: -7.849453449249268
    9. ' somm' → logprob: -8.349453926086426
    10. ' ' → logprob: -8.349453926086426

Token 937: '.
' (ID: 558)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.10223664343357086
    2. '   ' → logprob: -2.602236747741699
    3. '
' → logprob: -4.102236747741699
    4. 'pro' → logprob: -5.977236747741699
    5. ' =' → logprob: -5.977236747741699
    6. '=' → logprob: -8.2272367477417
    7. '.' → logprob: -8.3522367477417
    8. ')' → logprob: -8.4772367477417
    9. ')
' → logprob: -9.2272367477417
    10. ',' → logprob: -9.3522367477417

Token 938: '   ' (ID: 271)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.00041506090201437473
    2. '   ' → logprob: -8.000414848327637
    3. '```' → logprob: -10.125414848327637
    4. ' prob' → logprob: -10.250414848327637
    5. '
' → logprob: -13.500414848327637
    6. '``' → logprob: -13.875414848327637
    7. '(prob' → logprob: -14.125414848327637
    8. '`' → logprob: -14.875414848327637
    9. 'prov' → logprob: -15.500414848327637
    10. ',' → logprob: -16.500415802001953

Token 939: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.5
    4. '
' → logprob: -17.0
    5. 'prov' → logprob: -17.5
    6. '(prob' → logprob: -17.875
    7. ' prob' → logprob: -18.125
    8. 'proc' → logprob: -18.25
    9. 'M' → logprob: -18.75
    10. 'for' → logprob: -18.875

Token 940: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -2.129266067640856e-05
    2. 's' → logprob: -11.375020980834961
    3. '=' → logprob: -12.125020980834961
    4. 'e' → logprob: -12.750020980834961
    5. ' =' → logprob: -15.000020980834961
    6. 'Rev' → logprob: -15.250020980834961
    7. ' Re' → logprob: -15.625020980834961
    8. 'R' → logprob: -16.00002098083496
    9. 'Ré' → logprob: -16.00002098083496
    10. '_re' → logprob: -16.12502098083496

Token 941: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36718255281448364
    2. 'vs' → logprob: -1.2421824932098389
    3. 'v' → logprob: -4.242182731628418
    4. 'Re' → logprob: -5.742182731628418
    5. 'Vs' → logprob: -8.617182731628418
    6. 'Rev' → logprob: -8.867182731628418
    7. '=' → logprob: -9.117182731628418
    8. 'ves' → logprob: -9.367182731628418
    9. 'sv' → logprob: -9.617182731628418
    10. 'ev' → logprob: -9.742182731628418

Token 942: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015897808596491814
    2. '[N' → logprob: -4.390897750854492
    3. '=' → logprob: -6.265897750854492
    4. '[-' → logprob: -7.140897750854492
    5. ' =' → logprob: -7.640897750854492
    6. '[M' → logprob: -8.765897750854492
    7. '=[' → logprob: -10.515897750854492
    8. ' [' → logprob: -12.640897750854492
    9. '[s' → logprob: -13.015897750854492
    10. '[S' → logprob: -13.265897750854492

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ']' → logprob: -10.625045776367188
    3. '=' → logprob: -11.125045776367188
    4. ']=' → logprob: -12.375045776367188
    5. ' ' → logprob: -12.875045776367188
    6. '```' → logprob: -16.125045776367188
    7. ' =' → logprob: -17.000045776367188
    8. '   ' → logprob: -17.250045776367188
    9. '0' → logprob: -17.375045776367188
    10. ')' → logprob: -17.500045776367188

Token 944: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008522743592038751
    2. '=' → logprob: -7.500852108001709
    3. ']=' → logprob: -8.125852584838867
    4. ' ]' → logprob: -13.125852584838867
    5. ' =' → logprob: -13.750852584838867
    6. '[' → logprob: -15.500852584838867
    7. ')' → logprob: -16.375852584838867
    8. 's' → logprob: -17.750852584838867
    9. '   ' → logprob: -17.750852584838867
    10. ',' → logprob: -17.875852584838867

Token 945: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '[' → logprob: -18.251171112060547
    4. ']=' → logprob: -20.126171112060547
    5. ']' → logprob: -20.626171112060547
    6. ',' → logprob: -20.626171112060547
    7. '＝' → logprob: -20.751171112060547
    8. '```' → logprob: -21.001171112060547
    9. '=}' → logprob: -21.251171112060547
    10. '.=' → logprob: -21.376171112060547

Token 946: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.75
    4. '[' → logprob: -21.5
    5. '<|end|>' → logprob: -21.5
    6. '0' → logprob: -21.5
    7. '۱' → logprob: -22.125
    8. '   ' → logprob: -22.25
    9. '`' → logprob: -22.5
    10. '১' → logprob: -23.6875

Token 947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -20.125
    4. '[' → logprob: -21.25
    5. '   ' → logprob: -21.375
    6. '۱' → logprob: -21.625
    7. '0' → logprob: -21.625
    8. '`' → logprob: -22.5625
    9. '১' → logprob: -22.625
    10. '<|end|>' → logprob: -22.75

Token 948: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11931373178958893
    2. '<|end|>' → logprob: -2.3693137168884277
    3. '   ' → logprob: -4.619313716888428
    4. '#' → logprob: -5.744313716888428
    5. ' for' → logprob: -6.369313716888428
    6. ' ' → logprob: -6.744313716888428
    7. '<|end|>' → logprob: -6.744313716888428
    8. '  
' → logprob: -7.119313716888428
    9. ' #' → logprob: -8.244314193725586
    10. '
' → logprob: -8.744314193725586

Token 949: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7262814044952393
    2. '   ' → logprob: -0.8512814044952393
    3. ' for' → logprob: -2.7262814044952393
    4. '
' → logprob: -4.85128116607666
    5. ' #' → logprob: -4.85128116607666
    6. 'for' → logprob: -5.10128116607666
    7. ' ' → logprob: -7.35128116607666
    8. '<|end|>' → logprob: -7.47628116607666
    9. '	for' → logprob: -7.72628116607666
    10. '  ' → logprob: -8.85128116607666

Token 950: ' On' (ID: 2160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013238313840702176
    2. ' ' → logprob: -9.62513256072998
    3. 'prob' → logprob: -10.12513256072998
    4. '#' → logprob: -10.62513256072998
    5. '0' → logprob: -14.00013256072998
    6. '```' → logprob: -14.62513256072998
    7. '[' → logprob: -16.250131607055664
    8. ' prob' → logprob: -16.500131607055664
    9. 'pro' → logprob: -16.500131607055664
    10. 'True' → logprob: -16.875131607055664

Token 951: ' part' (ID: 997)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 952: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.3815247118473053
    2. 'from' → logprob: -1.506524682044983
    3. 'du' → logprob: -3.0065248012542725
    4. ' from' → logprob: -3.8815248012542725
    5. 'de' → logprob: -4.631524562835693
    6. '<|end|>' → logprob: -5.006524562835693
    7. ' de' → logprob: -5.381524562835693
    8. 'd' → logprob: -6.256524562835693
    9. '```' → logprob: -7.631524562835693
    10. '   ' → logprob: -7.631524562835693

Token 953: ' dernier' (ID: 27982)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00090741430176422
    2. ' N' → logprob: -7.7509074211120605
    3. '(N' → logprob: -8.375906944274902
    4. 'prob' → logprob: -9.125906944274902
    5. '[N' → logprob: -10.375906944274902
    6. 'n' → logprob: -10.375906944274902
    7. ' (' → logprob: -11.000906944274902
    8. '-' → logprob: -11.125906944274902
    9. '```' → logprob: -11.500906944274902
    10. '0' → logprob: -11.875906944274902

Token 954: ' sommet' (ID: 130502)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1279553291387856e-05
    2. ' N' → logprob: -11.875011444091797
    3. '-' → logprob: -12.750011444091797
    4. ')' → logprob: -14.000011444091797
    5. '(N' → logprob: -15.125011444091797
    6. '   ' → logprob: -16.375011444091797
    7. ']' → logprob: -16.750011444091797
    8. '-N' → logprob: -17.250011444091797
    9. '
' → logprob: -17.500011444091797
    10. '[N' → logprob: -17.500011444091797

Token 957: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020544764993246645
    2. ' -' → logprob: -8.500205039978027
    3. ')' → logprob: -13.500205039978027
    4. '()-' → logprob: -15.750205039978027
    5. '−' → logprob: -16.000205993652344
    6. ')-' → logprob: -16.000205993652344
    7. '1' → logprob: -16.125205993652344
    8. '```' → logprob: -17.250205993652344
    9. '#' → logprob: -17.625205993652344
    10. '–' → logprob: -17.750205993652344

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.375
    3. '-' → logprob: -17.5
    4. ')' → logprob: -18.125
    5. ' ' → logprob: -18.625
    6. '
' → logprob: -19.625
    7. '   ' → logprob: -19.75
    8. '۱' → logprob: -20.375
    9. '１' → logprob: -21.0
    10. '``' → logprob: -21.5

Token 959: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09838765114545822
    2. '<|end|>' → logprob: -2.4733877182006836
    3. '   ' → logprob: -4.848387718200684
    4. ' )' → logprob: -7.223387718200684
    5. '<|end|>' → logprob: -8.348387718200684
    6. '
' → logprob: -8.348387718200684
    7. '[' → logprob: -9.723387718200684
    8. '#' → logprob: -9.848387718200684
    9. ')
' → logprob: -10.223387718200684
    10. ' ' → logprob: -10.473387718200684

Token 960: ' prob' (ID: 4921)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7542885541915894
    2. '0' → logprob: -2.129288673400879
    3. 'for' → logprob: -2.254288673400879
    4. ' for' → logprob: -2.879288673400879
    5. '<|end|>' → logprob: -2.879288673400879
    6. '#' → logprob: -3.004288673400879
    7. '
' → logprob: -3.629288673400879
    8. ' ' → logprob: -3.879288673400879
    9. ')' → logprob: -3.879288673400879
    10. '1' → logprob: -4.379288673400879

Token 961: 'abilité' (ID: 49097)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.0015733062755316496
    2. '=' → logprob: -7.501573085784912
    3. ' =' → logprob: -7.751573085784912
    4. 's' → logprob: -8.12657356262207
    5. 'ability' → logprob: -8.87657356262207
    6. 'abilité' → logprob: -10.37657356262207
    7. '_re' → logprob: -10.62657356262207
    8. 'abil' → logprob: -10.87657356262207
    9. 'ity' → logprob: -11.12657356262207
    10. 're' → logprob: -11.25157356262207

Token 962: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06227990612387657
    2. ' =' → logprob: -2.8122799396514893
    3. '<|end|>' → logprob: -8.18727970123291
    4. '[' → logprob: -10.81227970123291
    5. '   ' → logprob: -12.81227970123291
    6. '=True' → logprob: -13.31227970123291
    7. 'de' → logprob: -13.43727970123291
    8. '```' → logprob: -13.68727970123291
    9. '.' → logprob: -14.18727970123291
    10. ')' → logprob: -14.31227970123291

Token 963: ''être' (ID: 47704)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2084469199180603
    2. 'être' → logprob: -1.708446979522705
    3. ''être' → logprob: -5.208446979522705
    4. 'arr' → logprob: -7.458446979522705
    5. ' être' → logprob: -8.583446502685547
    6. ' ' → logprob: -8.583446502685547
    7. '’être' → logprob: -8.708446502685547
    8. '0' → logprob: -9.708446502685547
    9. 'avoir' → logprob: -10.083446502685547
    10. '=' → logprob: -10.333446502685547

Token 964: ' là' (ID: 8052)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19693972170352936
    2. 'sur' → logprob: -1.9469397068023682
    3. '=' → logprob: -3.696939706802368
    4. 'à' → logprob: -5.446939945220947
    5. 'certain' → logprob: -5.696939945220947
    6. ' ' → logprob: -7.321939945220947
    7. 'sure' → logprob: -7.446939945220947
    8. '```' → logprob: -7.446939945220947
    9. 'ég' → logprob: -7.821939945220947
    10. 'égal' → logprob: -8.196939468383789

Token 965: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2813040614128113
    2. ' =' → logprob: -1.406304121017456
    3. '<|end|>' → logprob: -10.031304359436035
    4. '=True' → logprob: -10.531304359436035
    5. '.' → logprob: -11.281304359436035
    6. '[' → logprob: -11.531304359436035
    7. '```' → logprob: -11.656304359436035
    8. ' est' → logprob: -11.656304359436035
    9. 'est' → logprob: -11.781304359436035
    10. '1' → logprob: -12.156304359436035

Token 966: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -22.000001907348633
    4. '
' → logprob: -22.375001907348633
    5. '   ' → logprob: -23.625001907348633
    6. '=' → logprob: -24.625001907348633
    7. '۱' → logprob: -24.750001907348633
    8. '0' → logprob: -25.250001907348633
    9. '  ' → logprob: -25.500001907348633
    10. '`' → logprob: -25.625001907348633

Token 967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '
' → logprob: -22.875
    4. '```' → logprob: -22.875
    5. '۱' → logprob: -24.0
    6. '   ' → logprob: -24.5
    7. '

' → logprob: -25.25
    8. '１' → logprob: -25.5
    9. '=' → logprob: -25.875
    10. '0' → logprob: -26.0

Token 968: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40800797939300537
    2. '<|end|>' → logprob: -1.2830079793930054
    3. '
' → logprob: -3.283008098602295
    4. ' for' → logprob: -4.158008098602295
    5. 'for' → logprob: -5.658008098602295
    6. '<|end|>' → logprob: -7.283008098602295
    7. '    
' → logprob: -8.408007621765137
    8. ')' → logprob: -8.908007621765137
    9. '	for' → logprob: -10.033007621765137
    10. '```' → logprob: -10.658007621765137

Token 969: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21121640503406525
    2. '
' → logprob: -2.586216449737549
    3. '   ' → logprob: -2.836216449737549
    4. ' for' → logprob: -2.961216449737549
    5. '```' → logprob: -5.461216449737549
    6. '<|end|>' → logprob: -8.21121597290039
    7. '	for' → logprob: -9.21121597290039
    8. '    
' → logprob: -10.71121597290039
    9. '``' → logprob: -11.33621597290039
    10. '\' → logprob: -11.83621597290039

Token 970: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001217813478433527
    2. ' for' → logprob: -9.8751220703125
    3. '   ' → logprob: -10.2501220703125
    4. '```' → logprob: -10.3751220703125
    5. 'from' → logprob: -13.1251220703125
    6. '
' → logprob: -14.3751220703125
    7. '#' (adapté à ' #') → logprob: -14.7501220703125
    8. 'import' → logprob: -15.0001220703125
    9. '``' → logprob: -15.5001220703125
    10. '	for' → logprob: -16.3751220703125

Token 971: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006627569673582911
    2. 'from' → logprob: -7.375662803649902
    3. 'queue' → logprob: -11.625662803649902
    4. '#' → logprob: -12.000662803649902
    5. '   ' → logprob: -12.000662803649902
    6. '
' → logprob: -12.125662803649902
    7. 'import' → logprob: -12.875662803649902
    8. '```' → logprob: -13.250662803649902
    9. 'reverse' → logprob: -13.250662803649902
    10. 'stack' → logprob: -13.750662803649902

Token 972: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032606400549411774
    2. ' for' → logprob: -3.657606363296509
    3. 'range' → logprob: -5.532606601715088
    4. 'reverse' → logprob: -7.157606601715088
    5. ' range' → logprob: -8.15760612487793
    6. '#' → logprob: -8.28260612487793
    7. '
' → logprob: -8.40760612487793
    8. 'import' → logprob: -8.65760612487793
    9. 'from' → logprob: -8.78260612487793
    10. '   ' → logprob: -8.90760612487793

Token 973: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.03405630961060524
    2. 'our' → logprob: -3.7840564250946045
    3. 'ours' → logprob: -4.534056186676025
    4. '#' → logprob: -12.034056663513184
    5. '```' → logprob: -13.159056663513184
    6. 'or' → logprob: -13.409056663513184
    7. 'r' → logprob: -13.784056663513184
    8. 'court' → logprob: -14.034056663513184
    9. 'oure' → logprob: -14.534056663513184
    10. 't' → logprob: -14.909056663513184

Token 974: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011926259845495224
    2. 're' → logprob: -5.136926174163818
    3. ' range' → logprob: -5.136926174163818
    4. ' reversed' → logprob: -9.636926651000977
    5. 'reverse' → logprob: -10.261926651000977
    6. '(range' → logprob: -13.886926651000977
    7. '   ' → logprob: -14.136926651000977
    8. 'N' → logprob: -14.886926651000977
    9. 'v' → logprob: -14.886926651000977
    10. 'for' → logprob: -15.011926651000977

Token 975: ' somm' (ID: 44830)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10123763978481293
    2. 're' → logprob: -2.3512375354766846
    3. ' range' → logprob: -7.226237773895264
    4. ' reversed' → logprob: -8.351237297058105
    5. 'reverse' → logprob: -9.976237297058105
    6. 'v' → logprob: -11.101237297058105
    7. 'rev' → logprob: -12.726237297058105
    8. 'r' → logprob: -14.601237297058105
    9. 'for' → logprob: -14.601237297058105
    10. '   ' → logprob: -14.976237297058105

Token 976: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.09252642095088959
    2. 'et' → logprob: -3.467526435852051
    3. 'ents' → logprob: -3.842526435852051
    4. 'es' → logprob: -4.217526435852051
    5. 'ent' → logprob: -4.967526435852051
    6. 'ètres' → logprob: -5.217526435852051
    7. 'e' → logprob: -6.217526435852051
    8. '#' → logprob: -6.467526435852051
    9. 'ur' → logprob: -7.467526435852051
    10. 'ettes' → logprob: -7.717526435852051

Token 977: ' en' (ID: 469)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4755571782588959
    2. ' in' → logprob: -0.9755572080612183
    3. ' en' → logprob: -7.225557327270508
    4. 'for' → logprob: -8.475557327270508
    5. '[::-' → logprob: -8.600557327270508
    6. 'range' → logprob: -9.475557327270508
    7. '   ' → logprob: -9.725557327270508
    8. 're' → logprob: -9.975557327270508
    9. ' for' → logprob: -10.475557327270508
    10. 'en' → logprob: -10.600557327270508

Token 978: ' ordre' (ID: 103061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07118982821702957
    2. 're' → logprob: -2.9461898803710938
    3. ' range' → logprob: -4.196189880371094
    4. 'reverse' → logprob: -7.321189880371094
    5. ' reversed' → logprob: -7.821189880371094
    6. '```' → logprob: -10.946189880371094
    7. 'rang' → logprob: -11.446189880371094
    8. 'ré' → logprob: -12.196189880371094
    9. 'r' → logprob: -12.571189880371094
    10. '   ' → logprob: -12.571189880371094

Token 979: ' décro' (ID: 176854)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.47784608602523804
    2. 'range' → logprob: -1.1028461456298828
    3. '(range' → logprob: -4.102846145629883
    4. '(re' → logprob: -4.602846145629883
    5. 'reverse' → logprob: -5.102846145629883
    6. '   ' → logprob: -5.102846145629883
    7. '(N' → logprob: -5.352846145629883
    8. '(' → logprob: -7.227846145629883
    9. ' reversed' → logprob: -7.227846145629883
    10. 'r' → logprob: -7.352846145629883

Token 980: 'issant' (ID: 31359)
  Prédit: 'sent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.896000325679779
    2. 'ss' → logprob: -1.5210003852844238
    3. 'issant' → logprob: -1.5210003852844238
    4. 's' → logprob: -2.021000385284424
    5. 'sc' → logprob: -4.646000385284424
    6. 'cent' → logprob: -4.896000385284424
    7. 'nt' → logprob: -6.396000385284424
    8. 'ent' → logprob: -7.771000385284424
    9. 'nd' → logprob: -7.896000385284424
    10. 'sens' → logprob: -8.020999908447266

Token 981: ' (' (ID: 350)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.8937186598777771
    2. ' for' → logprob: -1.1437187194824219
    3. '   ' → logprob: -2.393718719482422
    4. ':' → logprob: -2.768718719482422
    5. ' in' → logprob: -3.143718719482422
    6. 'for' → logprob: -3.518718719482422
    7. ':
' → logprob: -4.518718719482422
    8. '(range' → logprob: -4.643718719482422
    9. ' range' → logprob: -5.393718719482422
    10. 'range' → logprob: -5.518718719482422

Token 982: 'sens' (ID: 146566)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025250399485230446
    2. ' range' → logprob: -3.7752504348754883
    3. 're' → logprob: -6.900250434875488
    4. 'reverse' → logprob: -7.900250434875488
    5. ' reversed' → logprob: -7.900250434875488
    6. '   ' → logprob: -8.525250434875488
    7. 'for' → logprob: -10.900250434875488
    8. ')' → logprob: -11.525250434875488
    9. '```' → logprob: -11.525250434875488
    10. ' reverse' → logprob: -12.275250434875488

Token 983: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.4368683993816376
    2. 'inverse' → logprob: -1.06186842918396
    3. ' invers' → logprob: -6.311868190765381
    4. 'in' → logprob: -7.061868190765381
    5. 'de' → logprob: -7.061868190765381
    6. ' décro' → logprob: -7.186868190765381
    7. 'reverse' → logprob: -7.311868190765381
    8. ' reverse' → logprob: -7.561868190765381
    9. '=' → logprob: -7.561868190765381
    10. '_inverse' → logprob: -7.561868190765381

Token 984: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10980916023254395
    2. 'range' → logprob: -3.609809160232544
    3. '(range' → logprob: -4.109808921813965
    4. 'for' → logprob: -4.359808921813965
    5. '   ' → logprob: -4.609808921813965
    6. 'de' → logprob: -4.734808921813965
    7. '(N' → logprob: -4.859808921813965
    8. ' range' → logprob: -5.109808921813965
    9. ' for' → logprob: -5.484808921813965
    10. ' ,' → logprob: -5.984808921813965

Token 985: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08754447102546692
    2. '   ' → logprob: -3.0875444412231445
    3. 'for' → logprob: -3.3375444412231445
    4. '[::-' → logprob: -7.0875444412231445
    5. ' in' → logprob: -7.3375444412231445
    6. ':' → logprob: -8.087544441223145
    7. ':
' → logprob: -8.087544441223145
    8. '<|end|>' → logprob: -8.712544441223145
    9. ',' → logprob: -8.837544441223145
    10. '```' → logprob: -10.337544441223145

Token 986: ' prop' (ID: 5892)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5834088325500488
    2. 'range' → logprob: -0.8334088325500488
    3. 'v' → logprob: -5.708408832550049
    4. ' v' → logprob: -5.708408832550049
    5. 'for' → logprob: -7.833408832550049
    6. 'reverse' → logprob: -8.83340835571289
    7. ' for' → logprob: -9.20840835571289
    8. ' reverse' → logprob: -10.33340835571289
    9. '   ' → logprob: -10.58340835571289
    10. 'rev' → logprob: -10.70840835571289

Token 987: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.0004666577442549169
    2. 'pager' → logprob: -8.250466346740723
    3. 'ag' → logprob: -9.375466346740723
    4. 'g' → logprob: -10.250466346740723
    5. 'agers' → logprob: -11.500466346740723
    6. 'oser' → logprob: -11.625466346740723
    7. '   ' → logprob: -12.000466346740723
    8. 'arger' → logprob: -12.125466346740723
    9. 'agger' → logprob: -12.250466346740723
    10. 'oger' → logprob: -12.250466346740723

Token 988: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08662828803062439
    2. 'v' → logprob: -3.4616281986236572
    3. ' range' → logprob: -3.8366281986236572
    4. 'reverse' → logprob: -4.836628437042236
    5. 're' → logprob: -4.961628437042236
    6. 'for' → logprob: -5.086628437042236
    7. '   ' → logprob: -5.711628437042236
    8. 'rev' → logprob: -5.961628437042236
    9. ' v' → logprob: -7.586628437042236
    10. ')' → logprob: -7.586628437042236

Token 989: ''information' (ID: 111036)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34262344241142273
    2. 'range' → logprob: -1.4676234722137451
    3. 'prob' → logprob: -3.592623472213745
    4. ' for' → logprob: -4.717623233795166
    5. ' probs' → logprob: -4.967623233795166
    6. '_probs' → logprob: -5.467623233795166
    7. ' probabilities' → logprob: -5.592623233795166
    8. 'for' → logprob: -5.592623233795166
    9. '```' → logprob: -6.967623233795166
    10. '`' → logprob: -7.467623233795166

Token 990: '.
' (ID: 558)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24144046008586884
    2. 'in' → logprob: -2.491440534591675
    3. '   ' → logprob: -2.616440534591675
    4. ' for' → logprob: -4.366440296173096
    5. 'for' → logprob: -4.491440296173096
    6. ' range' → logprob: -4.616440296173096
    7. ' en' → logprob: -4.741440296173096
    8. '[::-' → logprob: -5.366440296173096
    9. 'range' → logprob: -5.616440296173096
    10. ':' → logprob: -5.991440296173096

Token 991: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008249186910688877
    2. ' for' → logprob: -4.883249282836914
    3. '```' → logprob: -7.883249282836914
    4. '   ' → logprob: -8.258249282836914
    5. 'range' → logprob: -12.133249282836914
    6. '<|end|>' → logprob: -14.758249282836914
    7. '	for' → logprob: -15.258249282836914
    8. '``' → logprob: -15.508249282836914
    9. '[::-' → logprob: -15.883249282836914
    10. 'reverse' → logprob: -16.133249282836914

Token 992: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001546406652778387
    2. ' for' → logprob: -6.501546382904053
    3. 'range' → logprob: -10.626546859741211
    4. '```' → logprob: -10.876546859741211
    5. '   ' → logprob: -14.501546859741211
    6. ' range' → logprob: -15.251546859741211
    7. 'reverse' → logprob: -16.12654685974121
    8. 'from' → logprob: -17.00154685974121
    9. '``' → logprob: -17.37654685974121
    10. '
' → logprob: -17.75154685974121

Token 993: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16047890484333038
    2. ' v' → logprob: -1.910478949546814
    3. 'rev' → logprob: -8.535478591918945
    4. 'u' → logprob: -10.660478591918945
    5. 'rv' → logprob: -11.535478591918945
    6. 'i' → logprob: -11.910478591918945
    7. ' rev' → logprob: -12.035478591918945
    8. ' u' → logprob: -12.285478591918945
    9. ' i' → logprob: -13.410478591918945
    10. 'w' → logprob: -13.410478591918945

Token 994: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0232619009912014
    2. 'in' → logprob: -3.773261785507202
    3. 'v' → logprob: -12.273262023925781
    4. ' ' → logprob: -12.273262023925781
    5. 'de' → logprob: -13.773262023925781
    6. 'd' → logprob: -14.023262023925781
    7. 's' → logprob: -14.023262023925781
    8. '   ' → logprob: -14.273262023925781
    9. 'down' → logprob: -14.773262023925781
    10. '```' → logprob: -14.773262023925781

Token 995: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005399276851676404
    2. ' range' → logprob: -8.000539779663086
    3. 're' → logprob: -8.500539779663086
    4. ' reversed' → logprob: -14.000539779663086
    5. 'reverse' → logprob: -15.375539779663086
    6. '   ' → logprob: -19.000539779663086
    7. '(range' → logprob: -19.125539779663086
    8. 'rang' → logprob: -19.875539779663086
    9. '```' → logprob: -20.375539779663086
    10. '	range' → logprob: -20.375539779663086

Token 996: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.31418803334236145
    2. 'range' → logprob: -1.314188003540039
    3. ' range' → logprob: -7.064188003540039
    4. '(' → logprob: -9.564188003540039
    5. '(N' → logprob: -15.689188003540039
    6. '	range' → logprob: -15.939188003540039
    7. ' (' → logprob: -16.43918800354004
    8. '(
' → logprob: -16.81418800354004
    9. '   ' → logprob: -17.93918800354004
    10. '(s' → logprob: -18.31418800354004

Token 997: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002502535644453019
    2. '(' → logprob: -8.875249862670898
    3. 'N' → logprob: -9.125249862670898
    4. '(
' → logprob: -13.750249862670898
    5. '(len' → logprob: -15.875249862670898
    6. '```' → logprob: -16.5002498626709
    7. ' (' → logprob: -16.8752498626709
    8. '1' → logprob: -17.0002498626709
    9. '[N' → logprob: -17.3752498626709
    10. '	N' → logprob: -17.7502498626709

Token 998: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.10316239297389984
    2. ')):' → logprob: -2.3531622886657715
    3. '):
' → logprob: -6.1031622886657715
    4. '):' → logprob: -7.7281622886657715
    5. '))' → logprob: -8.97816276550293
    6. ')' → logprob: -9.85316276550293
    7. ')):
' → logprob: -9.97816276550293
    8. '-' → logprob: -10.47816276550293
    9. '   ' → logprob: -11.60316276550293
    10. ':' → logprob: -13.10316276550293

Token 999: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04730883613228798
    2. 'prob' → logprob: -3.297308921813965
    3. '   ' → logprob: -4.922308921813965
    4. '```' → logprob: -6.797308921813965
    5. 'if' → logprob: -7.922308921813965
    6. ' if' → logprob: -8.672308921813965
    7. ' prob' → logprob: -9.172308921813965
    8. 'pro' → logprob: -9.797308921813965
    9. 'v' → logprob: -10.297308921813965
    10. '	pro' → logprob: -10.797308921813965

Token 1000: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.008540578186511993
    2. ' prob' → logprob: -5.383540630340576
    3. '       ' → logprob: -5.633540630340576
    4. 'if' → logprob: -8.883540153503418
    5. '   ' → logprob: -9.633540153503418
    6. '           ' → logprob: -9.758540153503418
    7. '```' → logprob: -10.008540153503418
    8. ' if' → logprob: -10.883540153503418
    9. '_prob' → logprob: -12.633540153503418
    10. 'pro' → logprob: -12.883540153503418

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047333501279354095
    2. '[v' → logprob: -3.5473334789276123
    3. ',v' → logprob: -5.172333717346191
    4. 'Re' → logprob: -5.172333717346191
    5. 's' → logprob: -5.672333717346191
    6. 'v' → logprob: -7.047333717346191
    7. ' ,' → logprob: -7.297333717346191
    8. '[' → logprob: -7.422333717346191
    9. '[s' → logprob: -8.422333717346191
    10. ' =' → logprob: -9.797333717346191

Token 1002: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2527275085449219
    2. ' ex' → logprob: -1.5027275085449219
    3. 'exp' → logprob: -7.252727508544922
    4. ' exp' → logprob: -9.377727508544922
    5. 'prob' → logprob: -12.877727508544922
    6. 'pro' → logprob: -13.502727508544922
    7. 'exo' → logprob: -14.627727508544922
    8. ' prob' → logprob: -15.377727508544922
    9. ',' → logprob: -16.377727508544922
    10. 're' → logprob: -16.502727508544922

Token 1003: 'pe' (ID: 424)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.24760231375694275
    2. 'pe' → logprob: -1.7476023435592651
    3. 'p' → logprob: -4.122602462768555
    4. '=' → logprob: -4.122602462768555
    5. 'ps' → logprob: -5.122602462768555
    6. 'prob' → logprob: -6.747602462768555
    7. ' =' → logprob: -6.997602462768555
    8. 'e' → logprob: -7.122602462768555
    9. ' Re' → logprob: -7.247602462768555
    10. 'v' → logprob: -7.497602462768555

Token 1004: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001298330957069993
    2. '=' → logprob: -7.001298427581787
    3. ' =' → logprob: -7.876298427581787
    4. ' ,' → logprob: -12.626297950744629
    5. ',v' → logprob: -12.626297950744629
    6. 's' → logprob: -15.376297950744629
    7. '=v' → logprob: -16.251298904418945
    8. 'v' → logprob: -16.501298904418945
    9. '```' → logprob: -17.126298904418945
    10. '<|end|>' → logprob: -17.126298904418945

Token 1005: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -9.698698704596609e-05
    2. ' prob' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.500097274780273
    4. 'pro' → logprob: -15.375097274780273
    5. '(prob' → logprob: -16.000097274780273
    6. '	pro' → logprob: -18.750097274780273
    7. 'prop' → logprob: -19.000097274780273
    8. 'prof' → logprob: -19.875097274780273
    9. '       ' → logprob: -19.875097274780273
    10. 'prot' → logprob: -20.125097274780273

Token 1006: 'Re' (ID: 720)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003510741807986051
    2. 'Re' → logprob: -8.375350952148438
    3. 's' → logprob: -10.125350952148438
    4. '=' → logprob: -10.625350952148438
    5. 'v' → logprob: -11.000350952148438
    6. ' =' → logprob: -11.125350952148438
    7. '=v' → logprob: -11.625350952148438
    8. '[' → logprob: -12.125350952148438
    9. '[s' → logprob: -13.000350952148438
    10. 'prob' → logprob: -13.125350952148438

Token 1007: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0010685354936867952
    2. 'v' → logprob: -7.876068592071533
    3. 'Vs' → logprob: -7.876068592071533
    4. 's' → logprob: -8.126068115234375
    5. '[' → logprob: -12.126068115234375
    6. '[v' → logprob: -13.126068115234375
    7. ' vs' → logprob: -14.001068115234375
    8. '_vs' → logprob: -14.251068115234375
    9. 'vsp' → logprob: -14.376068115234375
    10. 'sv' → logprob: -15.126068115234375

Token 1008: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0280383548888494e-06
    2. 'v' → logprob: -13.875000953674316
    3. '[' → logprob: -17.625001907348633
    4. '[u' → logprob: -18.500001907348633
    5. '```' → logprob: -18.875001907348633
    6. ' [' → logprob: -19.125001907348633
    7. '[val' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '\[' → logprob: -19.750001907348633
    10. '[s' → logprob: -20.875001907348633

Token 1009: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5252596464706585e-05
    2. '       ' → logprob: -10.500044822692871
    3. '],' → logprob: -12.000044822692871
    4. ' ,' → logprob: -12.375044822692871
    5. '),' → logprob: -13.125044822692871
    6. ',v' → logprob: -13.250044822692871
    7. '           ' → logprob: -13.750044822692871
    8. '   ' → logprob: -14.125044822692871
    9. ',
' → logprob: -14.875044822692871
    10. '‌,' → logprob: -15.875044822692871

Token 1010: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.013867519795894623
    2. 'exp' → logprob: -4.763867378234863
    3. ' ex' → logprob: -5.263867378234863
    4. 'prob' → logprob: -10.388867378234863
    5. ' exp' → logprob: -11.138867378234863
    6. 'out' → logprob: -11.138867378234863
    7. '   ' → logprob: -12.763867378234863
    8. ' ' → logprob: -14.388867378234863
    9. '	ex' → logprob: -15.638867378234863
    10. 'ext' → logprob: -15.638867378234863

Token 1011: 'pe' (ID: 424)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24488632380962372
    2. 'ps' → logprob: -2.1198863983154297
    3. 'out' → logprob: -3.4948863983154297
    4. 'xp' → logprob: -3.4948863983154297
    5. 'p' → logprob: -3.6198863983154297
    6. 'prob' → logprob: -6.61988639831543
    7. 'exp' → logprob: -6.61988639831543
    8. 'ex' → logprob: -7.11988639831543
    9. 'pt' → logprob: -7.24488639831543
    10. '[' → logprob: -7.36988639831543

Token 1012: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.25211262702941895
    2. '[v' → logprob: -1.502112627029419
    3. 'v' → logprob: -8.75211238861084
    4. '[' → logprob: -11.62711238861084
    5. 'Rev' → logprob: -12.00211238861084
    6. ' Re' → logprob: -12.75211238861084
    7. 're' → logprob: -13.00211238861084
    8. '[e' → logprob: -13.25211238861084
    9. '_re' → logprob: -14.25211238861084
    10. '```' → logprob: -14.25211238861084

Token 1013: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0069894613698124886
    2. 's' → logprob: -5.506989479064941
    3. 'v' → logprob: -5.881989479064941
    4. '[' → logprob: -9.756989479064941
    5. '[v' → logprob: -10.256989479064941
    6. 'Vs' → logprob: -11.631989479064941
    7. 'sv' → logprob: -12.506989479064941
    8. 'vsp' → logprob: -13.006989479064941
    9. 'ves' → logprob: -13.381989479064941
    10. 'ds' → logprob: -13.756989479064941

Token 1014: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.054500666621607e-06
    2. 'v' → logprob: -12.75000286102295
    3. '[' → logprob: -17.375003814697266
    4. '```' → logprob: -19.250003814697266
    5. '[u' → logprob: -19.375003814697266
    6. '(v' → logprob: -20.125003814697266
    7. '	v' → logprob: -20.125003814697266
    8. '[
' → logprob: -20.375003814697266
    9. '[t' → logprob: -20.500003814697266
    10. ' [' → logprob: -20.500003814697266

Token 1015: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014494070783257484
    2. ']
' → logprob: -4.264493942260742
    3. '],' → logprob: -8.139493942260742
    4. ']
' → logprob: -11.014493942260742
    5. ' ]' → logprob: -11.514493942260742
    6. ',' → logprob: -12.764493942260742
    7. ')' → logprob: -13.014493942260742
    8. ']

' → logprob: -13.264493942260742
    9. '   ' → logprob: -13.264493942260742
    10. '];' → logprob: -13.639493942260742

Token 1016: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3372586667537689
    2. '       ' → logprob: -1.3372586965560913
    3. ' if' → logprob: -4.337258815765381
    4. '   ' → logprob: -5.462258815765381
    5. 'out' → logprob: -5.962258815765381
    6. ' out' → logprob: -6.837258815765381
    7. 'if' → logprob: -7.212258815765381
    8. '<|end|>' → logprob: -7.337258815765381
    9. ',out' → logprob: -8.337258338928223
    10. '           ' → logprob: -8.462258338928223

Token 1017: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03865377977490425
    2. '       ' → logprob: -3.41365385055542
    3. 'out' → logprob: -6.53865385055542
    4. '
' → logprob: -6.66365385055542
    5. ' if' → logprob: -7.66365385055542
    6. 'if' → logprob: -7.78865385055542
    7. ',out' → logprob: -7.91365385055542
    8. ',
' → logprob: -8.288653373718262
    9. '=' → logprob: -8.413653373718262
    10. '<|end|>' → logprob: -8.788653373718262

Token 1018: ' Vale' (ID: 55242)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1630266010761261
    2. 'if' → logprob: -1.9130265712738037
    3. '       ' → logprob: -6.288026809692383
    4. ' if' → logprob: -7.788026809692383
    5. ' out' → logprob: -8.163026809692383
    6. '   ' → logprob: -8.913026809692383
    7. 'prob' → logprob: -9.788026809692383
    8. '```' → logprob: -10.413026809692383
    9. 'for' → logprob: -11.288026809692383
    10. '           ' → logprob: -12.788026809692383

Token 1019: 'urs' (ID: 1628)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7031073570251465
    2. 's' → logprob: -1.7031073570251465
    3. '   ' → logprob: -1.8281073570251465
    4. 'prob' → logprob: -2.5781073570251465
    5. '       ' → logprob: -3.2031073570251465
    6. 'out' → logprob: -4.5781073570251465
    7. 'rs' → logprob: -4.5781073570251465
    8. 'ifs' → logprob: -5.3281073570251465
    9. 'u' → logprob: -6.0781073570251465
    10. 'd' → logprob: -6.3281073570251465

Token 1020: ' cour' (ID: 2871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6319771409034729
    2. ' =' → logprob: -1.3819770812988281
    3. '=' → logprob: -2.131977081298828
    4. ',v' → logprob: -4.381977081298828
    5. '[v' → logprob: -4.381977081298828
    6. '=v' → logprob: -4.381977081298828
    7. '	' → logprob: -4.756977081298828
    8. '       ' → logprob: -5.131977081298828
    9. 's' → logprob: -5.506977081298828
    10. 'v' → logprob: -5.631977081298828

Token 1021: 'antes' (ID: 5193)
  Prédit: 'entes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.12407360970973969
    2. 'r' → logprob: -2.3740735054016113
    3. 'tes' → logprob: -3.8740735054016113
    4. 'antes' → logprob: -7.249073505401611
    5. 'ents' → logprob: -7.499073505401611
    6. 'es' → logprob: -7.874073505401611
    7. 'ertes' → logprob: -8.24907398223877
    8. 'otes' → logprob: -9.37407398223877
    9. '```' → logprob: -9.49907398223877
    10. 'rr' → logprob: -9.87407398223877

Token 1022: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002006791764870286
    2. '       ' → logprob: -6.502007007598877
    3. ',out' → logprob: -8.252006530761719
    4. '<|end|>' → logprob: -8.752006530761719
    5. 'out' → logprob: -10.377006530761719
    6. ' ,' → logprob: -11.502006530761719
    7. ' =' → logprob: -11.627006530761719
    8. ',v' → logprob: -12.252006530761719
    9. ',
' → logprob: -12.627006530761719
    10. '   ' → logprob: -12.627006530761719

Token 1023: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07921604812145233
    2. 'prob' → logprob: -2.5792160034179688
    3. ' v' → logprob: -8.454216003417969
    4. 'pro' → logprob: -10.079216003417969
    5. 'for' → logprob: -10.329216003417969
    6. '```' → logprob: -10.954216003417969
    7. ' prob' → logprob: -12.329216003417969
    8. '
' → logprob: -12.954216003417969
    9. '[v' → logprob: -13.204216003417969
    10. '(v' → logprob: -13.329216003417969

Token 1024: ' v' (ID: 323)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04340529069304466
    2. ',v' → logprob: -3.793405294418335
    3. '<|end|>' → logprob: -4.918405055999756
    4. '       ' → logprob: -5.293405055999756
    5. ' ,' → logprob: -6.043405055999756
    6. '   ' → logprob: -6.793405055999756
    7. '=' → logprob: -7.293405055999756
    8. 'v' → logprob: -7.543405055999756
    9. 'if' → logprob: -8.043405532836914
    10. ' if' → logprob: -8.168405532836914

Token 1025: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2893785238265991
    2. ',' → logprob: -1.4143785238265991
    3. '<|end|>' → logprob: -5.539378643035889
    4. 'out' → logprob: -6.414378643035889
    5. '   ' → logprob: -6.789378643035889
    6. ' out' → logprob: -7.539378643035889
    7. '        
' → logprob: -8.53937816619873
    8. '	' → logprob: -9.28937816619873
    9. '```' → logprob: -9.28937816619873
    10. ',out' → logprob: -9.66437816619873

Token 1026: ' sens' (ID: 5050)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.039052363485097885
    2. 'range' → logprob: -3.5390522480010986
    3. 'if' → logprob: -5.539052486419678
    4. ' prob' → logprob: -6.289052486419678
    5. 'pro' → logprob: -6.414052486419678
    6. '[' → logprob: -7.914052486419678
    7. '(prob' → logprob: -8.03905200958252
    8. ' range' → logprob: -8.16405200958252
    9. '   ' → logprob: -8.41405200958252
    10. 'out' → logprob: -8.66405200958252

Token 1027: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.05627752095460892
    2. ' inverse' → logprob: -3.3062775135040283
    3. 'reverse' → logprob: -4.431277751922607
    4. ' invers' → logprob: -6.556277751922607
    5. 'inv' → logprob: -7.181277751922607
    6. 'normal' → logprob: -7.181277751922607
    7. ' reverse' → logprob: -7.556277751922607
    8. 'direct' → logprob: -7.681277751922607
    9. 'v' → logprob: -7.931277751922607
    10. 'in' → logprob: -8.05627727508545

Token 1028: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20835401117801666
    2. '<|end|>' → logprob: -2.2083539962768555
    3. ',' → logprob: -2.7083539962768555
    4. '   ' → logprob: -5.4583539962768555
    5. 'out' → logprob: -6.2083539962768555
    6. ' out' → logprob: -6.7083539962768555
    7. '```' → logprob: -6.7083539962768555
    8. ':' → logprob: -7.0833539962768555
    9. '<|end|>' → logprob: -7.2083539962768555
    10. '
' → logprob: -8.708353996276855

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4340873956680298
    2. 'out' → logprob: -1.4340873956680298
    3. '   ' → logprob: -2.4340872764587402
    4. 'if' → logprob: -3.8090872764587402
    5. ' out' → logprob: -6.30908727645874
    6. ' if' → logprob: -6.43408727645874
    7. '```' → logprob: -8.434087753295898
    8. '           ' → logprob: -8.559087753295898
    9. '	out' → logprob: -9.559087753295898
    10. ' ' → logprob: -11.559087753295898

Token 1030: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20782162249088287
    2. '       ' → logprob: -2.2078216075897217
    3. 'if' (adapté à ' if') → logprob: -3.4578216075897217
    4. '<|end|>' → logprob: -3.7078216075897217
    5. '   ' → logprob: -4.707821846008301
    6. ' out' → logprob: -5.707821846008301
    7. '	if' → logprob: -5.957821846008301
    8. 'out' → logprob: -6.082821846008301
    9. '        ' → logprob: -6.582821846008301
    10. '```' → logprob: -7.082821846008301

Token 1031: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.4740796387195587
    2. ' prob' → logprob: -0.9740796089172363
    3. '(prob' → logprob: -13.224080085754395
    4. 'pro' → logprob: -14.849080085754395
    5. '	pro' → logprob: -16.474079132080078
    6. '_prob' → logprob: -16.599079132080078
    7. ' probabil' → logprob: -16.849079132080078
    8. ' ' → logprob: -16.974079132080078
    9. ' probability' → logprob: -17.474079132080078
    10. ' ' → logprob: -17.474079132080078

Token 1032: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.038275111466646194
    2. '!=' → logprob: -3.2882750034332275
    3. '<|end|>' → logprob: -8.538274765014648
    4. '```' → logprob: -11.538274765014648
    5. '<|end|>' → logprob: -12.288274765014648
    6. '()!=' → logprob: -12.538274765014648
    7. ' ' → logprob: -12.538274765014648
    8. ')!=' → logprob: -12.663274765014648
    9. '!="' → logprob: -12.788274765014648
    10. '!='' → logprob: -13.538274765014648

Token 1033: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003602798329666257
    2. ' ' → logprob: -5.628602981567383
    3. '=' → logprob: -13.003602981567383
    4. '```' → logprob: -15.003602981567383
    5. '   ' → logprob: -16.628602981567383
    6. ' ' → logprob: -17.128602981567383
    7. '1' → logprob: -17.378602981567383
    8. '>' → logprob: -17.503602981567383
    9. '  ' → logprob: -18.503602981567383
    10. '!=' → logprob: -18.628602981567383

Token 1034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '=' → logprob: -18.375011444091797
    4. '```' → logprob: -19.125011444091797
    5. '   ' → logprob: -19.625011444091797
    6. ' ' → logprob: -20.125011444091797
    7. '۰' → logprob: -20.500011444091797
    8. '1' → logprob: -20.750011444091797
    9. '  ' → logprob: -21.125011444091797
    10. '00' → logprob: -21.250011444091797

Token 1035: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016671013145241886
    2. ':
' → logprob: -9.250166893005371
    3. ' :' → logprob: -10.125166893005371
    4. '<|end|>' → logprob: -11.125166893005371
    5. ' and' → logprob: -11.875166893005371
    6. '       ' → logprob: -13.000166893005371
    7. '<|end|>' → logprob: -13.375166893005371
    8. '):' → logprob: -13.375166893005371
    9. '   ' → logprob: -13.875166893005371
    10. 'and' → logprob: -14.000166893005371

Token 1036: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6738675832748413
    2. '<|end|>' → logprob: -1.2988675832748413
    3. '           ' → logprob: -2.048867702484131
    4. '	       ' → logprob: -3.673867702484131
    5. ' for' → logprob: -4.173867702484131
    6. '   ' → logprob: -4.423867702484131
    7. '<|end|>' → logprob: -5.048867702484131
    8. '```' → logprob: -5.173867702484131
    9. ' out' → logprob: -5.673867702484131
    10. '	   ' → logprob: -5.923867702484131

Token 1037: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34023967385292053
    2. '       ' → logprob: -1.3402396440505981
    3. 'for' → logprob: -4.340239524841309
    4. ' for' → logprob: -5.465239524841309
    5. '#' → logprob: -5.590239524841309
    6. '```' → logprob: -6.340239524841309
    7. '   ' → logprob: -6.590239524841309
    8. 'out' → logprob: -6.965239524841309
    9. '	       ' → logprob: -7.715239524841309
    10. '               ' → logprob: -7.840239524841309

Token 1038: ' On' (ID: 2160)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.48276668787002563
    2. '           ' → logprob: -1.4827666282653809
    3. '       ' → logprob: -2.482766628265381
    4. '#' → logprob: -2.857766628265381
    5. ' out' → logprob: -4.732766628265381
    6. '   ' → logprob: -5.982766628265381
    7. 'for' → logprob: -6.482766628265381
    8. '```' → logprob: -6.857766628265381
    9. '	out' → logprob: -8.732767105102539
    10. '        ' → logprob: -8.857767105102539

Token 1039: ' n' (ID: 297)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.5790188908576965
    2. 'for' → logprob: -2.4540188312530518
    3. '   ' → logprob: -2.7040188312530518
    4. ' out' → logprob: -3.0790188312530518
    5. '.' → logprob: -3.5790188312530518
    6. ' ' → logprob: -3.5790188312530518
    7. ' for' → logprob: -3.5790188312530518
    8. '<|end|>' → logprob: -3.9540188312530518
    9. ':' → logprob: -4.079019069671631
    10. 'in' → logprob: -4.204019069671631

Token 1040: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3864139914512634
    2. '       ' → logprob: -1.8864140510559082
    3. ' continue' → logprob: -3.011414051055908
    4. 'e' → logprob: -3.511414051055908
    5. 'continue' → logprob: -4.386414051055908
    6. '    ' → logprob: -5.136414051055908
    7. '_continue' → logprob: -5.136414051055908
    8. '      ' → logprob: -5.261414051055908
    9. ''acc' → logprob: -5.386414051055908
    10. '  ' → logprob: -5.636414051055908

Token 1041: 'actual' (ID: 19106)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6334354877471924
    2. ' continue' → logprob: -2.0084354877471924
    3. '       ' → logprob: -2.0084354877471924
    4. 't' → logprob: -2.1334354877471924
    5. '   ' → logprob: -2.1334354877471924
    6. 'continue' → logprob: -2.2584354877471924
    7. 'contin' → logprob: -2.8834354877471924
    8. ' v' → logprob: -3.6334354877471924
    9. 's' → logprob: -3.8834354877471924
    10. 'n' → logprob: -4.883435249328613

Token 1042: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.4894498586654663
    2. 'f' → logprob: -2.239449977874756
    3. 'se' → logprob: -2.989449977874756
    4. 'ifie' → logprob: -3.114449977874756
    5. 'fic' → logprob: -3.864449977874756
    6. 't' → logprob: -3.989449977874756
    7. 's' → logprob: -4.114449977874756
    8. 'te' → logprob: -4.239449977874756
    9. '       ' → logprob: -4.364449977874756
    10. '   ' → logprob: -4.489449977874756

Token 1043: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10742437839508057
    2. ' :' → logprob: -2.357424259185791
    3. '   ' → logprob: -6.357424259185791
    4. ' pas' → logprob: -7.607424259185791
    5. '[' → logprob: -7.732424259185791
    6. '```' → logprob: -7.857424259185791
    7. 'pas' → logprob: -7.982424259185791
    8. ' =' → logprob: -7.982424259185791
    9. 'prob' → logprob: -8.35742473602295
    10. ' ' → logprob: -8.48242473602295

Token 1044: ' si' (ID: 1784)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.10359345376491547
    2. '   ' → logprob: -2.728593349456787
    3. ':' → logprob: -4.353593349456787
    4. '       ' → logprob: -4.728593349456787
    5. ' prob' → logprob: -5.228593349456787
    6. 'v' → logprob: -6.353593349456787
    7. '```' → logprob: -7.353593349456787
    8. '           ' → logprob: -7.478593349456787
    9. ' v' → logprob: -7.728593349456787
    10. 'pro' → logprob: -7.728593349456787

Token 1045: ' la' (ID: 557)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.4531893730163574
    2. ' prob' → logprob: -1.2031893730163574
    3. 'out' → logprob: -3.4531893730163574
    4. ' out' → logprob: -3.4531893730163574
    5. '(prob' → logprob: -8.328189849853516
    6. 'not' → logprob: -8.453189849853516
    7. ' not' → logprob: -9.078189849853516
    8. ' ' → logprob: -9.453189849853516
    9. 'pro' → logprob: -9.953189849853516
    10. 'v' → logprob: -10.703189849853516

Token 1046: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.009879328310489655
    2. ' prob' → logprob: -4.634879112243652
    3. 'pro' → logprob: -10.009879112243652
    4. 'v' → logprob: -10.759879112243652
    5. 'out' → logprob: -10.759879112243652
    6. ' probability' → logprob: -11.884879112243652
    7. ' ' → logprob: -12.134879112243652
    8. ' out' → logprob: -12.509879112243652
    9. ' ' → logprob: -12.634879112243652
    10. ' probabil' → logprob: -13.009879112243652

Token 1047: 'abilité' (ID: 49097)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.010780861601233482
    2. '!=' → logprob: -4.6357808113098145
    3. ' ' → logprob: -7.5107808113098145
    4. '   ' → logprob: -9.010781288146973
    5. ' ' → logprob: -9.135781288146973
    6. 'r' → logprob: -10.135781288146973
    7. '  ' → logprob: -11.010781288146973
    8. ' +=' → logprob: -11.010781288146973
    9. 'v' → logprob: -11.135781288146973
    10. '`' → logprob: -11.260781288146973

Token 1048: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5152351260185242
    2. '!=' → logprob: -1.140235185623169
    3. '<|end|>' → logprob: -2.515235185623169
    4. '   ' → logprob: -7.89023494720459
    5. '<|end|>' → logprob: -8.01523494720459
    6. '!==' → logprob: -8.89023494720459
    7. ')!=' → logprob: -9.01523494720459
    8. '!' → logprob: -9.01523494720459
    9. ' ' → logprob: -9.01523494720459
    10. '.' → logprob: -9.26523494720459

Token 1049: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.07957577705383301
    2. ' non' → logprob: -3.079575777053833
    3. '>' → logprob: -4.704575538635254
    4. 'nonnull' → logprob: -4.954575538635254
    5. '!=' → logprob: -5.079575538635254
    6. '0' → logprob: -5.579575538635254
    7. 'not' → logprob: -7.079575538635254
    8. '<|end|>' → logprob: -7.329575538635254
    9. ' !=' → logprob: -7.579575538635254
    10. '```' → logprob: -7.704575538635254

Token 1050: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29676133394241333
    2. 'n' → logprob: -1.4217612743377686
    3. '0' → logprob: -4.546761512756348
    4. 'zero' → logprob: -5.671761512756348
    5. ' nul' → logprob: -7.421761512756348
    6. ' zero' → logprob: -8.171761512756348
    7. 'nul' → logprob: -8.421761512756348
    8. ' zéro' → logprob: -8.421761512756348
    9. '=n' → logprob: -10.546761512756348
    10. '	n' → logprob: -10.671761512756348

Token 1051: 'ulle' (ID: 14644)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.9607294797897339
    2. '0' → logprob: -1.3357294797897339
    3. '=' → logprob: -2.0857295989990234
    4. ' None' → logprob: -2.5857295989990234
    5. 'zero' → logprob: -2.8357295989990234
    6. 'ull' → logprob: -3.9607295989990234
    7. '==' → logprob: -3.9607295989990234
    8. ' zéro' → logprob: -3.9607295989990234
    9. ' nul' → logprob: -5.335729598999023
    10. ' =' → logprob: -5.460729598999023

Token 1052: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12446904182434082
    2. '       ' → logprob: -2.249469041824341
    3. '           ' → logprob: -4.874468803405762
    4. ':
' → logprob: -6.749468803405762
    5. '<|end|>' → logprob: -7.249468803405762
    6. '   ' → logprob: -7.374468803405762
    7. ',' → logprob: -7.374468803405762
    8. '```' → logprob: -8.749468803405762
    9. ' and' → logprob: -8.874468803405762
    10. '.' → logprob: -9.374468803405762

Token 1053: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09947113692760468
    2. '           ' → logprob: -3.349471092224121
    3. ' for' → logprob: -3.599471092224121
    4. '   ' → logprob: -4.599471092224121
    5. '```' → logprob: -4.724471092224121
    6. 'for' → logprob: -5.349471092224121
    7. '<|end|>' → logprob: -5.974471092224121
    8. '	       ' → logprob: -6.099471092224121
    9. '	for' → logprob: -6.724471092224121
    10. '               ' → logprob: -7.349471092224121

Token 1054: ' num' (ID: 2269)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1874811351299286
    2. 'for' → logprob: -1.937481164932251
    3. '               ' → logprob: -4.062480926513672
    4. '           ' → logprob: -5.187480926513672
    5. ' for' → logprob: -6.687480926513672
    6. '```' → logprob: -6.812480926513672
    7. ' out' → logprob: -6.937480926513672
    8. 'num' (adapté à ' num') → logprob: -8.437480926513672
    9. 'if' → logprob: -8.437480926513672
    10. '   ' → logprob: -8.687480926513672

Token 1055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033515440300107002
    2. '=' → logprob: -5.75335168838501
    3. '<|end|>' → logprob: -8.878351211547852
    4. '=num' → logprob: -11.128351211547852
    5. ',' → logprob: -12.378351211547852
    6. ' ' → logprob: -12.503351211547852
    7. ' ' → logprob: -12.878351211547852
    8. ')' → logprob: -13.003351211547852
    9. '<|end|>' → logprob: -13.503351211547852
    10. 'num' → logprob: -13.753351211547852

Token 1056: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3868717551231384
    2. ' ex' → logprob: -1.1368718147277832
    3. 'exp' → logprob: -15.136871337890625
    4. '(ex' → logprob: -15.511871337890625
    5. '	ex' → logprob: -15.636871337890625
    6. ' exp' → logprob: -16.511871337890625
    7. '   ' → logprob: -17.011871337890625
    8. 'e' → logprob: -18.761871337890625
    9. ' ' → logprob: -18.886871337890625
    10. ' ' → logprob: -19.011871337890625

Token 1057: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0011010414455085993
    2. 'p' → logprob: -6.876101016998291
    3. 'ex' → logprob: -11.00110149383545
    4. 'пе' → logprob: -11.12610149383545
    5. 'po' → logprob: -11.87610149383545
    6. 'pro' → logprob: -12.12610149383545
    7. 'pet' → logprob: -12.37610149383545
    8. '=' → logprob: -12.62610149383545
    9. 'prob' → logprob: -12.75110149383545
    10. 'pex' → logprob: -12.87610149383545

Token 1058: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2520056366920471
    2. '/' → logprob: -1.5020055770874023
    3. '/pro' → logprob: -9.502005577087402
    4. ' ' → logprob: -14.002005577087402
    5. '[' → logprob: -14.752005577087402
    6. 'prob' → logprob: -15.377005577087402
    7. '(prob' → logprob: -16.37700653076172
    8. ' /
' → logprob: -16.50200653076172
    9. ')' → logprob: -16.75200653076172
    10. '   ' → logprob: -17.50200653076172

Token 1059: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.00012356207298580557
    2. ' prob' → logprob: -9.000123977661133
    3. '(prob' → logprob: -15.875123977661133
    4. 'pro' → logprob: -17.625123977661133
    5. 'prov' → logprob: -19.625123977661133
    6. 'prop' → logprob: -19.750123977661133
    7. '```' → logprob: -20.750123977661133
    8. '_prob' → logprob: -21.000123977661133
    9. 'prot' → logprob: -21.000123977661133
    10. 'proc' → logprob: -21.500123977661133

Token 1060: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4683288335800171
    2. '<|end|>' → logprob: -1.968328833580017
    3. ' for' → logprob: -2.2183289527893066
    4. 'for' → logprob: -2.8433289527893066
    5. '               ' → logprob: -3.2183289527893066
    6. '            
' → logprob: -4.718328952789307
    7. '            ' → logprob: -5.843328952789307
    8. '
' → logprob: -6.468328952789307
    9. '```' → logprob: -6.468328952789307
    10. '   ' → logprob: -6.468328952789307

Token 1061: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0326058864593506
    2. '           ' → logprob: -1.2826058864593506
    3. ' for' → logprob: -1.4076058864593506
    4. 'for' → logprob: -2.6576058864593506
    5. '       ' → logprob: -4.15760612487793
    6. '<|end|>' → logprob: -4.40760612487793
    7. '	for' → logprob: -5.15760612487793
    8. '```' → logprob: -5.28260612487793
    9. '   ' → logprob: -5.40760612487793
    10. '	       ' → logprob: -5.90760612487793

Token 1062: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005066060461103916
    2. ' for' → logprob: -6.13006591796875
    3. '           ' → logprob: -6.50506591796875
    4. '               ' → logprob: -7.00506591796875
    5. 'out' → logprob: -8.25506591796875
    6. '```' → logprob: -8.63006591796875
    7. '	for' → logprob: -11.25506591796875
    8. '   ' → logprob: -11.38006591796875
    9. '       ' → logprob: -12.63006591796875
    10. 'if' → logprob: -13.00506591796875

Token 1063: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011102409102022648
    2. ' for' → logprob: -4.511102199554443
    3. '```' → logprob: -9.886102676391602
    4. '           ' → logprob: -12.886102676391602
    5. 'v' → logprob: -14.636102676391602
    6. '	for' → logprob: -15.136102676391602
    7. 'if' → logprob: -15.886102676391602
    8. '               ' → logprob: -16.0111026763916
    9. '
' → logprob: -16.3861026763916
    10. '   ' → logprob: -16.5111026763916

Token 1064: ' tous' (ID: 10688)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16407528519630432
    2. 'u' → logprob: -2.2890753746032715
    3. 'pred' → logprob: -3.7890753746032715
    4. 'p' → logprob: -3.9140753746032715
    5. 'pr' → logprob: -6.1640753746032715
    6. 'w' → logprob: -6.4140753746032715
    7. 'pre' → logprob: -7.1640753746032715
    8. 'prev' → logprob: -7.1640753746032715
    9. 'prec' → logprob: -7.2890753746032715
    10. 's' → logprob: -7.6640753746032715

Token 1065: ' les' (ID: 1341)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11847418546676636
    2. 'u' → logprob: -2.993474245071411
    3. ' v' → logprob: -2.993474245071411
    4. 'w' → logprob: -5.618474006652832
    5. ' u' → logprob: -5.743474006652832
    6. 'p' → logprob: -5.743474006652832
    7. ' w' → logprob: -7.993474006652832
    8. 'pred' → logprob: -8.118474006652832
    9. ' p' → logprob: -8.368474006652832
    10. ' pred' → logprob: -8.868474006652832

Token 1066: ' préd' (ID: 98710)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9108355045318604
    2. 'p' → logprob: -1.1608355045318604
    3. 'pred' → logprob: -1.6608355045318604
    4. 'u' → logprob: -2.6608355045318604
    5. 'pr' → logprob: -4.535835266113281
    6. 's' → logprob: -5.035835266113281
    7. 'prev' → logprob: -5.910835266113281
    8. 'pre' → logprob: -6.535835266113281
    9. 'w' → logprob: -6.660835266113281
    10. 'prec' → logprob: -7.410835266113281

Token 1067: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0337955951690674
    2. 'v' → logprob: -1.1587955951690674
    3. 'ec' → logprob: -1.7837955951690674
    4. '[v' → logprob: -2.9087955951690674
    5. 'esseurs' → logprob: -3.4087955951690674
    6. 'de' → logprob: -3.5337955951690674
    7. 'cesse' → logprob: -4.033795356750488
    8. 's' → logprob: -5.033795356750488
    9. 'éc' → logprob: -5.158795356750488
    10. 'cess' → logprob: -5.658795356750488

Token 1068: 'cesse' (ID: 120787)
  Prédit: 'cesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cesse' → logprob: -0.005685953423380852
    2. 's' → logprob: -5.755685806274414
    3. 'c' → logprob: -6.255685806274414
    4. 'cess' → logprob: -8.005685806274414
    5. 'v' → logprob: -9.005685806274414
    6. 'esseurs' → logprob: -9.380685806274414
    7. 'ces' → logprob: -10.880685806274414
    8. 'ss' → logprob: -11.630685806274414
    9. 'cs' → logprob: -12.505685806274414
    10. '[v' → logprob: -12.755685806274414

Token 1069: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020275115966796875
    2. 'esseurs' → logprob: -4.020275115966797
    3. 'ss' → logprob: -6.645275115966797
    4. 'de' → logprob: -8.145275115966797
    5. 'd' → logprob: -8.895275115966797
    6. 'cesse' → logprob: -9.395275115966797
    7. 'teurs' → logprob: -9.770275115966797
    8. 'v' → logprob: -9.770275115966797
    9. 'rs' → logprob: -10.395275115966797
    10. '```' → logprob: -10.520275115966797

Token 1070: ' v' (ID: 323)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42377370595932007
    2. 'in' → logprob: -1.5487737655639648
    3. 'v' → logprob: -2.173773765563965
    4. ' v' → logprob: -4.673773765563965
    5. '[v' → logprob: -4.673773765563965
    6. ' of' → logprob: -9.298773765563965
    7. '```' → logprob: -9.423773765563965
    8. 's' → logprob: -9.673773765563965
    9. 'for' → logprob: -10.048773765563965
    10. '[in' → logprob: -10.298773765563965

Token 1071: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17462123930454254
    2. 'in' → logprob: -2.549621343612671
    3. ' in' → logprob: -2.549621343612671
    4. 'for' → logprob: -6.549621105194092
    5. 'v' → logprob: -7.049621105194092
    6. '```' → logprob: -7.549621105194092
    7. ' for' → logprob: -7.924621105194092
    8. '[v' → logprob: -8.17462158203125
    9. 'rev' → logprob: -9.29962158203125
    10. '[' → logprob: -9.67462158203125

Token 1072: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043063707649707794
    2. 'in' → logprob: -3.1680636405944824
    3. 's' → logprob: -10.66806411743164
    4. ' ' → logprob: -11.79306411743164
    5. '_in' → logprob: -12.04306411743164
    6. '	in' → logprob: -12.29306411743164
    7. '
' → logprob: -12.41806411743164
    8. 'dans' → logprob: -12.66806411743164
    9. ' ' → logprob: -12.91806411743164
    10. '[' → logprob: -13.41806411743164

Token 1073: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00017517358355689794
    2. 'adj' → logprob: -9.000175476074219
    3. ' v' → logprob: -9.875175476074219
    4. ' adj' → logprob: -15.375175476074219
    5. '```' → logprob: -17.62517547607422
    6. '[v' → logprob: -18.12517547607422
    7. '	v' → logprob: -18.25017547607422
    8. '   ' → logprob: -19.50017547607422
    9. '
' → logprob: -20.37517547607422
    10. '`' → logprob: -20.62517547607422

Token 1074: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.792904794216156
    2. ' in' → logprob: -0.792904794216156
    3. 'in' → logprob: -3.042904853820801
    4. ':
' → logprob: -3.542904853820801
    5. ' :' → logprob: -4.417904853820801
    6. '```' → logprob: -5.792904853820801
    7. ',' → logprob: -7.167904853820801
    8. '               ' → logprob: -7.667904853820801
    9. 'v' → logprob: -7.917904853820801
    10. ' :
' → logprob: -8.2929048538208

Token 1075: ' le' (ID: 505)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0004309076175559312
    2. ' adj' → logprob: -7.750431060791016
    3. '(adj' → logprob: -15.875431060791016
    4. 'range' → logprob: -16.750431060791016
    5. 'ad' → logprob: -17.500431060791016
    6. 'Adj' → logprob: -18.375431060791016
    7. '```' → logprob: -18.500431060791016
    8. '
' → logprob: -19.500431060791016
    9. '   ' → logprob: -19.500431060791016
    10. 'for' → logprob: -19.625431060791016

Token 1076: ' grap' (ID: 60955)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0007417303277179599
    2. 'graph' → logprob: -7.875741958618164
    3. ' adj' → logprob: -8.500741958618164
    4. 'for' → logprob: -9.000741958618164
    5. 'code' → logprob: -11.625741958618164
    6. '```' → logprob: -12.000741958618164
    7. 'range' → logprob: -12.625741958618164
    8. 'gr' → logprob: -12.750741958618164
    9. '
' → logprob: -13.000741958618164
    10. '(adj' → logprob: -13.000741958618164

Token 1077: 'he' (ID: 273)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03474138304591179
    2. 'h' → logprob: -3.4097414016723633
    3. 'raph' → logprob: -7.659741401672363
    4. 'adj' → logprob: -8.159741401672363
    5. 'aph' → logprob: -8.659741401672363
    6. 'he' → logprob: -9.784741401672363
    7. 'aphe' → logprob: -10.409741401672363
    8. 'ph' → logprob: -10.784741401672363
    9. ' adj' → logprob: -11.534741401672363
    10. 'v' → logprob: -11.659741401672363

Token 1078: ' original' (ID: 4756)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0031890016980469227
    2. ':' → logprob: -7.5031890869140625
    3. ' adj' → logprob: -7.6281890869140625
    4. 'in' → logprob: -7.6281890869140625
    5. 'Adj' → logprob: -7.7531890869140625
    6. 'Rev' → logprob: -7.8781890869140625
    7. ':
' → logprob: -7.8781890869140625
    8. '(adj' → logprob: -9.253189086914062
    9. '[' → logprob: -9.503189086914062
    10. 'ad' → logprob: -9.628189086914062

Token 1079: ' (' (ID: 350)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8375247120857239
    2. ':' → logprob: -1.337524652481079
    3. ':
' → logprob: -1.337524652481079
    4. '           ' → logprob: -3.837524652481079
    5. ' adj' → logprob: -4.712524890899658
    6. '(adj' → logprob: -5.337524890899658
    7. '               ' → logprob: -5.962524890899658
    8. ',' → logprob: -6.712524890899658
    9. ' :' → logprob: -7.587524890899658
    10. ' :
' → logprob: -7.712524890899658

Token 1080: 'succ' (ID: 194659)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0003049570368602872
    2. ' adj' → logprob: -8.12530517578125
    3. 'for' → logprob: -12.37530517578125
    4. '           ' → logprob: -12.62530517578125
    5. '   ' → logprob: -14.62530517578125
    6. '       ' → logprob: -15.12530517578125
    7. '(adj' → logprob: -15.25030517578125
    8. 'v' → logprob: -16.37530517578125
    9. '
' → logprob: -16.50030517578125
    10. 'range' → logprob: -16.75030517578125

Token 1081: 'esseurs' (ID: 164131)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0028401799499988556
    2. 'adj' → logprob: -7.127840042114258
    3. 'v' → logprob: -7.252840042114258
    4. '[v' → logprob: -7.752840042114258
    5. 'esseur' → logprob: -8.877840042114258
    6. '[' → logprob: -9.377840042114258
    7. 'for' → logprob: -9.627840042114258
    8. '][' → logprob: -9.752840042114258
    9. 'ès' → logprob: -9.877840042114258
    10. ']' → logprob: -9.877840042114258

Token 1082: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0972901582717896
    2. '[v' → logprob: -1.0972901582717896
    3. 'de' → logprob: -1.7222901582717896
    4. 'v' → logprob: -3.3472900390625
    5. ' in' → logprob: -3.4722900390625
    6. ' de' → logprob: -4.0972900390625
    7. '```' → logprob: -4.4722900390625
    8. ' of' → logprob: -4.5972900390625
    9. '<|end|>' → logprob: -4.5972900390625
    10. ')v' → logprob: -4.8472900390625

Token 1083: ' le' (ID: 505)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.020563960075378418
    2. ' adj' → logprob: -3.895564079284668
    3. '(adj' → logprob: -11.395564079284668
    4. 'l' → logprob: -12.645564079284668
    5. 'the' → logprob: -13.645564079284668
    6. '           ' → logprob: -13.770564079284668
    7. 'Adj' → logprob: -13.770564079284668
    8. '```' → logprob: -13.770564079284668
    9. 'ad' → logprob: -14.145564079284668
    10. 'range' → logprob: -14.395564079284668

Token 1084: ' grap' (ID: 60955)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.025917507708072662
    2. 'gr' → logprob: -4.0259175300598145
    3. 'graph' → logprob: -5.1509175300598145
    4. ' adj' → logprob: -7.2759175300598145
    5. '```' → logprob: -7.7759175300598145
    6. 'reverse' → logprob: -8.150917053222656
    7. ' grap' → logprob: -8.275917053222656
    8. '
' → logprob: -9.650917053222656
    9. 'rev' → logprob: -10.025917053222656
    10. 'for' → logprob: -10.025917053222656

Token 1085: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20545709133148193
    2. 'ph' → logprob: -2.8304572105407715
    3. 'he' → logprob: -3.3304572105407715
    4. 'phe' → logprob: -3.4554572105407715
    5. 'aphe' → logprob: -3.7054572105407715
    6. 'L' → logprob: -3.8304572105407715
    7. 'p' → logprob: -4.9554572105407715
    8. 'pe' → logprob: -6.7054572105407715
    9. 'aph' → logprob: -7.5804572105407715
    10. '```' → logprob: -7.5804572105407715

Token 1086: ' invers' (ID: 38721)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5840184092521667
    2. 'rev' → logprob: -1.9590184688568115
    3. 'inv' → logprob: -2.2090184688568115
    4. 'inverse' → logprob: -2.2090184688568115
    5. 'Rev' → logprob: -2.8340184688568115
    6. 'in' → logprob: -4.834018230438232
    7. 'Re' → logprob: -5.459018230438232
    8. '```' → logprob: -5.459018230438232
    9. 'reverse' → logprob: -6.084018230438232
    10. '[::-' → logprob: -6.584018230438232

Token 1087: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.012395212426781654
    2. 'L' → logprob: -4.76239538192749
    3. 'e' → logprob: -5.63739538192749
    4. '[' → logprob: -10.262394905090332
    5. 'ed' → logprob: -10.512394905090332
    6. ')' → logprob: -10.512394905090332
    7. 'ée' → logprob: -10.637394905090332
    8. ']' → logprob: -10.762394905090332
    9. '[e' → logprob: -11.137394905090332
    10. 'É' → logprob: -11.762394905090332

Token 1088: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4758763611316681
    2. '):' → logprob: -0.9758763313293457
    3. '[v' → logprob: -7.475876331329346
    4. ')' → logprob: -7.600876331329346
    5. ':' → logprob: -8.225876808166504
    6. 'v' → logprob: -8.350876808166504
    7. '```' → logprob: -9.975876808166504
    8. '):
' → logprob: -9.975876808166504
    9. '):

' → logprob: -10.600876808166504
    10. ':
' → logprob: -10.600876808166504

Token 1089: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.207011416554451
    2. ' for' → logprob: -1.8320114612579346
    3. 'for' → logprob: -3.7070114612579346
    4. '```' → logprob: -6.4570112228393555
    5. '           ' → logprob: -7.9570112228393555
    6. '   ' → logprob: -8.582011222839355
    7. '	for' → logprob: -9.207011222839355
    8. '	           ' → logprob: -10.082011222839355
    9. '                   ' → logprob: -10.957011222839355
    10. 'v' → logprob: -11.707011222839355

Token 1090: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01881195791065693
    2. ' for' → logprob: -4.01881217956543
    3. '               ' → logprob: -7.89381217956543
    4. '           ' → logprob: -8.39381217956543
    5. '```' → logprob: -9.76881217956543
    6. 'v' → logprob: -13.26881217956543
    7. '	for' → logprob: -13.39381217956543
    8. '   ' → logprob: -13.51881217956543
    9. '``' → logprob: -15.76881217956543
    10. '       ' → logprob: -15.76881217956543

Token 1091: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00317783304490149
    2. ' v' → logprob: -5.753177642822266
    3. '	v' → logprob: -16.253177642822266
    4. '   ' → logprob: -18.003177642822266
    5. '_v' → logprob: -18.878177642822266
    6. '```' → logprob: -19.503177642822266
    7. '`' → logprob: -19.878177642822266
    8. 's' → logprob: -20.003177642822266
    9. 'vv' → logprob: -20.253177642822266
    10. 'prev' → logprob: -20.628177642822266

Token 1092: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003136552404612303
    2. '_' → logprob: -8.625313758850098
    3. '2' → logprob: -9.750313758850098
    4. 'Rev' → logprob: -10.250313758850098
    5. 'Re' → logprob: -10.625313758850098
    6. '[' → logprob: -12.500313758850098
    7. 'v' → logprob: -12.750313758850098
    8. ' in' → logprob: -13.375313758850098
    9. '_rev' → logprob: -13.875313758850098
    10. '_re' → logprob: -14.125313758850098

Token 1093: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.126969575881958
    2. 'in' → logprob: -2.126969575881958
    3. '	in' → logprob: -10.626969337463379
    4. '_in' → logprob: -11.751969337463379
    5. 'In' → logprob: -12.751969337463379
    6. ' ' → logprob: -13.376969337463379
    7. '_' → logprob: -13.501969337463379
    8. 's' → logprob: -15.001969337463379
    9. 'I' → logprob: -15.126969337463379
    10. ' ' → logprob: -15.251969337463379

Token 1094: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005234121344983578
    2. ' adj' → logprob: -5.255234241485596
    3. 'ad' → logprob: -15.880233764648438
    4. '(adj' → logprob: -16.005233764648438
    5. 'aj' → logprob: -17.630233764648438
    6. 'Adj' → logprob: -17.630233764648438
    7. '   ' → logprob: -18.255233764648438
    8. ' ' → logprob: -18.630233764648438
    9. 'adm' → logprob: -18.880233764648438
    10. '```' → logprob: -19.005233764648438

Token 1095: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0683535037969705e-05
    2. 'Rev' → logprob: -11.50001049041748
    3. '[' → logprob: -15.50001049041748
    4. 'Re' → logprob: -15.62501049041748
    5. '[v' → logprob: -17.000011444091797
    6. '[L' → logprob: -17.000011444091797
    7. ' L' → logprob: -18.500011444091797
    8. '```' → logprob: -18.875011444091797
    9. 'l' → logprob: -19.250011444091797
    10. 'v' → logprob: -20.000011444091797

Token 1096: 'Rev' (ID: 46580)
  Prédit: 'Rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rev' → logprob: -0.00021867557370569557
    2. '[v' → logprob: -8.625218391418457
    3. 'Re' → logprob: -10.250218391418457
    4. '[' → logprob: -13.500218391418457
    5. ' Rev' → logprob: -14.250218391418457
    6. '```' → logprob: -14.250218391418457
    7. '_rev' → logprob: -15.250218391418457
    8. 'rev' → logprob: -15.500218391418457
    9. 'Reverse' → logprob: -15.875218391418457
    10. 'Rep' → logprob: -15.875218391418457

Token 1097: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.088346359931165e-07
    2. 'v' → logprob: -14.000000953674316
    3. '[' → logprob: -18.25
    4. ' [' → logprob: -19.125
    5. '[u' → logprob: -19.875
    6. '(v' → logprob: -20.0
    7. '<v' → logprob: -20.625
    8. '```' → logprob: -21.0
    9. '[s' → logprob: -21.25
    10. '[t' → logprob: -21.375

Token 1098: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08987072110176086
    2. ']:
' → logprob: -2.4648706912994385
    3. ']' → logprob: -7.589870929718018
    4. ':' → logprob: -8.08987045288086
    5. ']:
' → logprob: -9.46487045288086
    6. ']:

' → logprob: -11.58987045288086
    7. ':
' → logprob: -12.21487045288086
    8. '):' → logprob: -12.33987045288086
    9. ']>' → logprob: -12.71487045288086
    10. '"]:' → logprob: -12.71487045288086

Token 1099: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015792554477229714
    2. '```' → logprob: -7.126579284667969
    3. 'prob' → logprob: -7.626579284667969
    4. '           ' → logprob: -9.626579284667969
    5. '(prob' → logprob: -10.126579284667969
    6. '<|end|>' → logprob: -10.251579284667969
    7. '                   ' → logprob: -10.251579284667969
    8. ' prob' → logprob: -11.126579284667969
    9. '`' → logprob: -11.126579284667969
    10. '[' → logprob: -11.501579284667969

Token 1100: ' #' (ID: 1069)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.3901739716529846
    2. '               ' → logprob: -1.2651739120483398
    3. '                   ' → logprob: -3.51517391204834
    4. ' prob' → logprob: -5.39017391204834
    5. '```' → logprob: -5.76517391204834
    6. '(prob' → logprob: -6.39017391204834
    7. '                ' → logprob: -7.26517391204834
    8. '                               ' → logprob: -8.26517391204834
    9. '              ' → logprob: -8.89017391204834
    10. '                       ' → logprob: -8.89017391204834

Token 1101: ' Actual' (ID: 46731)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -2.935296834039036e-06
    2. '               ' → logprob: -13.37500286102295
    3. '```' → logprob: -14.25000286102295
    4. ' prob' → logprob: -15.00000286102295
    5. '                   ' → logprob: -15.50000286102295
    6. 'pro' → logprob: -16.125003814697266
    7. '(prob' → logprob: -17.375003814697266
    8. '           ' → logprob: -17.625003814697266
    9. '   ' → logprob: -19.250003814697266
    10. '``' → logprob: -19.375003814697266

Token 1102: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.19543112814426422
    2. 'prob' → logprob: -2.1954312324523926
    3. 'ise' → logprob: -3.3204312324523926
    4. 'ize' → logprob: -4.070431232452393
    5. 'isez' → logprob: -4.945431232452393
    6. '               ' → logprob: -6.195431232452393
    7. '                   ' → logprob: -6.945431232452393
    8. 'is' → logprob: -7.570431232452393
    9. 'isé' → logprob: -7.570431232452393
    10. 'izer' → logprob: -8.320430755615234

Token 1103: ' de' (ID: 334)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.08004235476255417
    2. '               ' → logprob: -2.7050423622131348
    3. '                   ' → logprob: -4.955042362213135
    4. ' prob' → logprob: -6.705042362213135
    5. '(prob' → logprob: -7.080042362213135
    6. '```' → logprob: -7.455042362213135
    7. '[' → logprob: -8.955041885375977
    8. '   ' → logprob: -9.580041885375977
    9. 'pro' → logprob: -10.705041885375977
    10. '                ' → logprob: -10.955041885375977

Token 1104: ' leurs' (ID: 16348)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.000352266215486452
    2. ' prob' → logprob: -8.000351905822754
    3. '(prob' → logprob: -11.375351905822754
    4. 'pro' → logprob: -12.875351905822754
    5. '```' → logprob: -13.375351905822754
    6. '               ' → logprob: -14.375351905822754
    7. '_prob' → logprob: -15.125351905822754
    8. '                   ' → logprob: -15.625351905822754
    9. '   ' → logprob: -16.75035285949707
    10. 'Prob' → logprob: -16.87535285949707

Token 1105: ' probabil' (ID: 76890)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0030759908258914948
    2. ' prob' → logprob: -6.003076076507568
    3. ' probabilities' → logprob: -7.878076076507568
    4. ' probability' → logprob: -9.37807559967041
    5. '_prob' → logprob: -10.12807559967041
    6. ' probabil' → logprob: -10.75307559967041
    7. 'pro' → logprob: -10.87807559967041
    8. '```' → logprob: -11.00307559967041
    9. '(prob' → logprob: -11.87807559967041
    10. ' probs' → logprob: -12.25307559967041

Token 1106: 'ités' (ID: 12479)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8082872033119202
    2. 'té' → logprob: -1.6832871437072754
    3. 'ités' → logprob: -2.0582871437072754
    4. 'tes' → logprob: -2.1832871437072754
    5. 's' → logprob: -2.8082871437072754
    6. 'és' → logprob: -3.6832871437072754
    7. 'ties' → logprob: -4.058287143707275
    8. 'es' → logprob: -4.808287143707275
    9. 'prob' → logprob: -4.808287143707275
    10. 'te' → logprob: -5.933287143707275

Token 1107: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: 'esp' (ID: 18342)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.4061613082885742
    2. ' +=' → logprob: -1.4061613082885742
    3. '<|end|>' → logprob: -3.531161308288574
    4. '```' → logprob: -3.656161308288574
    5. '+=' → logprob: -3.906161308288574
    6. 'v' → logprob: -5.656161308288574
    7. '=' → logprob: -6.281161308288574
    8. ' ' → logprob: -7.031161308288574
    9. ']+=' → logprob: -7.031161308288574
    10. ' and' → logprob: -7.156161308288574

Token 1109: 'ér' (ID: 2156)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.8049931526184082
    2. 'prob' → logprob: -1.8049931526184082
    3. 'ro' → logprob: -1.9299931526184082
    4. 'Re' → logprob: -2.554993152618408
    5. 'robes' → logprob: -2.554993152618408
    6. 'r' → logprob: -2.679993152618408
    7. 's' → logprob: -3.304993152618408
    8. 'rob' → logprob: -3.304993152618408
    9. 'ds' → logprob: -3.554993152618408
    10. '_probs' → logprob: -3.804993152618408

Token 1110: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.29489365220069885
    2. 'ités' → logprob: -2.294893741607666
    3. 'aces' → logprob: -2.294893741607666
    4. 'ces' → logprob: -3.669893741607666
    5. 'es' → logprob: -4.794893741607666
    6. 't' → logprob: -5.544893741607666
    7. 'ences' → logprob: -5.544893741607666
    8. 'ites' → logprob: -5.794893741607666
    9. 'érences' → logprob: -6.669893741607666
    10. 'er' → logprob: -6.794893741607666

Token 1111: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.160146713256836
    2. '               ' → logprob: -1.535146713256836
    3. '```' → logprob: -1.660146713256836
    4. 'prob' → logprob: -1.910146713256836
    5. '<|end|>' → logprob: -3.160146713256836
    6. ' +=' → logprob: -3.785146713256836
    7. '[' → logprob: -3.910146713256836
    8. '[token' → logprob: -3.910146713256836
    9. '<|end|>' → logprob: -5.160146713256836
    10. '+=' → logprob: -5.660146713256836

Token 1112: ' même' (ID: 9679)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.23797903954982758
    2. '                   ' → logprob: -1.9879790544509888
    3. '               ' → logprob: -2.737978935241699
    4. ' prob' → logprob: -5.237978935241699
    5. '                       ' → logprob: -6.112978935241699
    6. '```' → logprob: -6.362978935241699
    7. '                    ' → logprob: -8.6129789352417
    8. '   ' → logprob: -9.3629789352417
    9. '(prob' → logprob: -9.3629789352417
    10. '``' → logprob: -9.3629789352417

Token 1113: ' logique' (ID: 115350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47983917593955994
    2. ' if' → logprob: -1.4798392057418823
    3. '               ' → logprob: -2.6048390865325928
    4. 'prob' → logprob: -3.2298390865325928
    5. '```' → logprob: -4.229839324951172
    6. '   ' → logprob: -5.604839324951172
    7. '                
' → logprob: -5.604839324951172
    8. '                   ' → logprob: -6.229839324951172
    9. '           ' → logprob: -6.604839324951172
    10. 'indent' → logprob: -6.604839324951172

Token 1114: ' que' (ID: 661)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20957018435001373
    2. '                   ' → logprob: -2.3345701694488525
    3. 'prob' → logprob: -2.8345701694488525
    4. '```' → logprob: -4.334570407867432
    5. '(prob' → logprob: -4.709570407867432
    6. '[' → logprob: -6.209570407867432
    7. '<|end|>' → logprob: -6.584570407867432
    8. '                
' → logprob: -6.959570407867432
    9. ':' → logprob: -7.084570407867432
    10. '                ' → logprob: -7.334570407867432

Token 1115: ' plus' (ID: 2932)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0014158309204503894
    2. ' prob' → logprob: -6.626415729522705
    3. '```' → logprob: -10.751416206359863
    4. '               ' → logprob: -10.876416206359863
    5. '(prob' → logprob: -11.126416206359863
    6. 'for' → logprob: -11.626416206359863
    7. 'this' → logprob: -12.001416206359863
    8. '           ' → logprob: -12.751416206359863
    9. 'before' → logprob: -12.876416206359863
    10. '
' → logprob: -13.251416206359863

Token 1116: ' haut' (ID: 28223)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6745080947875977
    2. '[v' → logprob: -1.4245080947875977
    3. 'haut' → logprob: -2.2995080947875977
    4. '```' → logprob: -3.1745080947875977
    5. 'v' → logprob: -3.4245080947875977
    6. '[' → logprob: -3.5495080947875977
    7. ' haut' → logprob: -4.924508094787598
    8. '           ' → logprob: -5.049508094787598
    9. '[]' → logprob: -5.299508094787598
    10. 'bas' → logprob: -5.799508094787598

Token 1117: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48963630199432373
    2. '                   ' → logprob: -1.3646363019943237
    3. ':' → logprob: -2.7396364212036133
    4. '```' → logprob: -3.6146364212036133
    5. 'prob' → logprob: -4.614636421203613
    6. '(prob' → logprob: -5.114636421203613
    7. '[' → logprob: -5.489636421203613
    8. ' =' → logprob: -6.114636421203613
    9. '<|end|>' → logprob: -6.239636421203613
    10. '                       ' → logprob: -6.364636421203613

Token 1118: ' en' (ID: 469)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.2681717574596405
    2. '               ' → logprob: -1.518171787261963
    3. '                   ' → logprob: -4.268171787261963
    4. ' prob' → logprob: -6.643171787261963
    5. '```' → logprob: -7.768171787261963
    6. '                       ' → logprob: -9.393171310424805
    7. '   ' → logprob: -9.768171310424805
    8. '                ' → logprob: -9.768171310424805
    9. '``' → logprob: -10.268171310424805
    10. 'pro' → logprob: -10.518171310424805

Token 1119: ' utilisant' (ID: 92474)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.1195090264081955
    2. 'out' → logprob: -2.619508981704712
    3. ' prob' → logprob: -4.119509220123291
    4. 'pro' → logprob: -4.869509220123291
    5. '               ' → logprob: -4.994509220123291
    6. ' out' → logprob: -5.619509220123291
    7. '                   ' → logprob: -7.244509220123291
    8. '                               ' → logprob: -7.869509220123291
    9. '           ' → logprob: -7.994509220123291
    10. 'range' → logprob: -7.994509220123291

Token 1120: ' le' (ID: 505)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.008439401164650917
    2. ' prob' → logprob: -4.883439540863037
    3. '               ' → logprob: -8.133439064025879
    4. '```' → logprob: -8.508439064025879
    5. '   ' → logprob: -9.258439064025879
    6. '(prob' → logprob: -9.508439064025879
    7. '                   ' → logprob: -10.133439064025879
    8. 'pro' → logprob: -10.133439064025879
    9. '           ' → logprob: -11.008439064025879
    10. '
' → logprob: -11.258439064025879

Token 1121: ' degré' (ID: 169072)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0009608853724785149
    2. '```' → logprob: -8.250961303710938
    3. 'out' → logprob: -8.375961303710938
    4. ' prob' → logprob: -8.500961303710938
    5. '/' → logprob: -10.125961303710938
    6. '(prob' → logprob: -10.375961303710938
    7. '1' → logprob: -10.625961303710938
    8. '`' → logprob: -10.750961303710938
    9. 'pro' → logprob: -10.875961303710938
    10. 'v' → logprob: -11.375961303710938

Token 1122: ' sort' (ID: 4506)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.04077181592583656
    2. 'sort' → logprob: -4.165771961212158
    3. '[v' → logprob: -4.915771961212158
    4. 'v' → logprob: -4.915771961212158
    5. '```' → logprob: -5.540771961212158
    6. '_out' → logprob: -6.040771961212158
    7. '[out' → logprob: -6.415771961212158
    8. '0' → logprob: -7.415771961212158
    9. '               ' → logprob: -7.790771961212158
    10. '_sort' → logprob: -8.665771484375

Token 1123: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.1027476042509079
    2. 'ing' → logprob: -2.352747678756714
    3. 'out' → logprob: -6.727747440338135
    4. 'ante' → logprob: -8.102747917175293
    5. 'ants' → logprob: -8.102747917175293
    6. 's' → logprob: -8.602747917175293
    7. '   ' → logprob: -9.352747917175293
    8. 'going' → logprob: -9.602747917175293
    9. 'v' → logprob: -9.727747917175293
    10. '[]' → logprob: -10.352747917175293

Token 1124: ' de' (ID: 334)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00026217024424113333
    2. '(v' → logprob: -9.250262260437012
    3. 'v' → logprob: -9.375262260437012
    4. 's' → logprob: -11.000262260437012
    5. '[s' → logprob: -11.000262260437012
    6. 'de' → logprob: -11.250262260437012
    7. '```' → logprob: -11.625262260437012
    8. '[' → logprob: -12.000262260437012
    9. '0' → logprob: -12.250262260437012
    10. 'out' → logprob: -12.250262260437012

Token 1125: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.537868779967539e-06
    2. 'out' → logprob: -12.500008583068848
    3. '```' → logprob: -12.875008583068848
    4. ' v' → logprob: -13.250008583068848
    5. '[v' → logprob: -15.125008583068848
    6. 's' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.50000762939453
    8. '(v' → logprob: -17.87500762939453
    9. '`' → logprob: -18.12500762939453
    10. '
' → logprob: -18.87500762939453

Token 1126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16730955243110657
    2. '[v' → logprob: -2.042309522628784
    3. '               ' → logprob: -4.292309761047363
    4. 'v' → logprob: -5.167309761047363
    5. '```' → logprob: -6.042309761047363
    6. ']' → logprob: -7.167309761047363
    7. '                   ' → logprob: -8.042309761047363
    8. '(v' → logprob: -8.042309761047363
    9. '   ' → logprob: -8.667309761047363
    10. '           ' → logprob: -8.792309761047363

Token 1127: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01438315212726593
    2. ':' → logprob: -4.639383316040039
    3. '                   ' → logprob: -5.639383316040039
    4. '```' → logprob: -8.264383316040039
    5. 'prob' → logprob: -8.389383316040039
    6. '.' → logprob: -9.764383316040039
    7. '              ' → logprob: -9.764383316040039
    8. '                ' → logprob: -9.889383316040039
    9. ',' → logprob: -9.889383316040039
    10. ' :' → logprob: -10.014383316040039

Token 1128: 'dans' (ID: 108151)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0002820736262947321
    2. ' out' → logprob: -8.250282287597656
    3. '               ' → logprob: -11.000282287597656
    4. ')' → logprob: -13.750282287597656
    5. '```' → logprob: -13.875282287597656
    6. '
' → logprob: -14.500282287597656
    7. '[out' → logprob: -15.250282287597656
    8. '                   ' → logprob: -15.375282287597656
    9. '   ' → logprob: -15.625282287597656
    10. '                
' → logprob: -15.625282287597656

Token 1129: ' le' (ID: 505)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.006772688124328852
    2. 'adj' → logprob: -5.256772518157959
    3. ' out' → logprob: -7.881772518157959
    4. 'v' → logprob: -8.131772994995117
    5. '```' → logprob: -8.256772994995117
    6. ')' → logprob: -8.506772994995117
    7. 'range' → logprob: -9.381772994995117
    8. 'the' → logprob: -10.381772994995117
    9. '1' → logprob: -10.506772994995117
    10. '[out' → logprob: -10.756772994995117

Token 1130: ' grap' (ID: 60955)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.10219143331050873
    2. '```' → logprob: -3.72719144821167
    3. 'v' → logprob: -3.97719144821167
    4. 'adj' → logprob: -3.97719144821167
    5. ')' → logprob: -4.35219144821167
    6. ' out' → logprob: -5.22719144821167
    7. 'original' → logprob: -5.47719144821167
    8. 'code' → logprob: -6.35219144821167
    9. 'range' → logprob: -6.60219144821167
    10. '`' → logprob: -6.72719144821167

Token 1131: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.11463526636362076
    2. 'aph' → logprob: -2.7396352291107178
    3. 'ap' → logprob: -4.364635467529297
    4. 'phe' → logprob: -4.739635467529297
    5. 'he' → logprob: -5.114635467529297
    6. 'out' → logprob: -5.614635467529297
    7. 'ph' → logprob: -5.739635467529297
    8. 'ad' → logprob: -5.864635467529297
    9. 'h' → logprob: -6.739635467529297
    10. '   ' → logprob: -7.114635467529297

Token 1132: ' normal' (ID: 6078)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.3617142140865326
    2. ')' → logprob: -1.861714243888855
    3. ' original' → logprob: -2.8617141246795654
    4. '[v' → logprob: -3.8617141246795654
    5. 'v' → logprob: -4.2367143630981445
    6. 'orig' → logprob: -4.7367143630981445
    7. 'out' → logprob: -4.7367143630981445
    8. 'origin' → logprob: -4.9867143630981445
    9. 'adj' → logprob: -5.6117143630981445
    10. 'inverse' → logprob: -5.8617143630981445

Token 1133: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22771595418453217
    2. '):' → logprob: -1.6027159690856934
    3. '):
' → logprob: -6.977715969085693
    4. ').' → logprob: -7.852715969085693
    5. ' )' → logprob: -7.852715969085693
    6. '[v' → logprob: -8.977715492248535
    7. 'v' → logprob: -8.977715492248535
    8. ' ):' → logprob: -9.477715492248535
    9. '),' → logprob: -9.727715492248535
    10. ')
' → logprob: -9.852715492248535

Token 1134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8618314862251282
    2. '                   ' → logprob: -1.2368314266204834
    3. 'prob' → logprob: -1.4868314266204834
    4. '```' → logprob: -3.3618314266204834
    5. ' prob' → logprob: -4.8618316650390625
    6. '                ' → logprob: -5.2368316650390625
    7. '(prob' → logprob: -5.3618316650390625
    8. '                               ' → logprob: -5.7368316650390625
    9. '`' → logprob: -6.8618316650390625
    10. '   ' → logprob: -6.9868316650390625

Token 1135: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.009791390039026737
    2. '               ' → logprob: -5.134791374206543
    3. '                   ' → logprob: -5.759791374206543
    4. ' prob' → logprob: -8.634791374206543
    5. '```' → logprob: -8.759791374206543
    6. '(prob' → logprob: -9.009791374206543
    7. '   ' → logprob: -9.884791374206543
    8. '                  ' → logprob: -10.134791374206543
    9. '                ' → logprob: -10.259791374206543
    10. '           ' → logprob: -10.634791374206543

Token 1136: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.005557693541049957
    2. 's' → logprob: -5.255557537078857
    3. '[s' → logprob: -8.380558013916016
    4. '[' → logprob: -10.130558013916016
    5. '[v' → logprob: -10.380558013916016
    6. 'v' → logprob: -12.130558013916016
    7. '_re' → logprob: -12.380558013916016
    8. 'Pro' → logprob: -12.880558013916016
    9. '```' → logprob: -13.130558013916016
    10. '_Re' → logprob: -13.255558013916016

Token 1137: 'vs' (ID: 16121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2454269528388977
    2. 'vs' → logprob: -1.620426893234253
    3. 'v' → logprob: -4.370427131652832
    4. 'Re' → logprob: -5.245427131652832
    5. 'Vs' → logprob: -6.870427131652832
    6. '0' → logprob: -7.370427131652832
    7. 'sv' → logprob: -9.995427131652832
    8. 'ev' → logprob: -10.245427131652832
    9. 'V' → logprob: -10.745427131652832
    10. 'ves' → logprob: -10.745427131652832

Token 1138: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.125
    3. '[' → logprob: -16.375
    4. ' [' → logprob: -18.0
    5. '[s' → logprob: -18.625
    6. '[val' → logprob: -19.5
    7. '               ' → logprob: -19.625
    8. '[u' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. '[V' → logprob: -20.0

Token 1139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. '[v' → logprob: -17.125
    4. 'v' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. 'o' → logprob: -18.5
    7. ' ' → logprob: -18.625
    8. '   ' → logprob: -20.0
    9. 'O' → logprob: -20.5
    10. ']' → logprob: -20.5

Token 1140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9845364689826965
    2. ']+=' → logprob: -0.9845364689826965
    3. ' +=' → logprob: -1.6095364093780518
    4. '+=' → logprob: -2.9845364093780518
    5. ' ]' → logprob: -7.359536647796631
    6. '[' → logprob: -7.359536647796631
    7. ']+' → logprob: -8.234536170959473
    8. ')' → logprob: -8.734536170959473
    9. '```' → logprob: -8.984536170959473
    10. '               ' → logprob: -9.109536170959473

Token 1141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024854077491909266
    2. ' +=' → logprob: -6.002485275268555
    3. ']+=' → logprob: -11.627485275268555
    4. '```' → logprob: -14.627485275268555
    5. '[' → logprob: -16.002485275268555
    6. '+' → logprob: -16.252485275268555
    7. '+=(' → logprob: -17.127485275268555
    8. '   ' → logprob: -17.502485275268555
    9. '+='' → logprob: -17.752485275268555
    10. '           ' → logprob: -17.877485275268555

Token 1142: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.008618354797363281
    2. ' prob' → logprob: -4.758618354797363
    3. '(prob' → logprob: -12.883618354797363
    4. 'pro' → logprob: -14.258618354797363
    5. '   ' → logprob: -14.758618354797363
    6. '               ' → logprob: -16.133617401123047
    7. '           ' → logprob: -17.383617401123047
    8. '	pro' → logprob: -17.883617401123047
    9. '_prob' → logprob: -18.008617401123047
    10. '                   ' → logprob: -18.008617401123047

Token 1143: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2048218548297882
    2. '/' → logprob: -1.7048218250274658
    3. '/out' → logprob: -5.704822063446045
    4. '               ' → logprob: -9.829821586608887
    5. '                   ' → logprob: -11.829821586608887
    6. '   ' → logprob: -12.829821586608887
    7. '           ' → logprob: -13.204821586608887
    8. '              ' → logprob: -13.454821586608887
    9. '                ' → logprob: -13.454821586608887
    10. ' ' → logprob: -14.329821586608887

Token 1144: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -5.836499985889532e-05
    2. ' out' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.750059127807617
    4. '(out' → logprob: -17.000059127807617
    5. '	out' → logprob: -18.000059127807617
    6. '[out' → logprob: -19.125059127807617
    7. '               ' → logprob: -19.250059127807617
    8. ' ' → logprob: -19.500059127807617
    9. '```' → logprob: -19.500059127807617
    10. '
' → logprob: -19.625059127807617

Token 1145: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.9504606825648807e-05
    2. 'deg' → logprob: -10.875019073486328
    3. 'out' → logprob: -15.000019073486328
    4. 's' → logprob: -17.125019073486328
    5. '_de' → logprob: -17.375019073486328
    6. 'd' → logprob: -18.375019073486328
    7. ' de' → logprob: -18.625019073486328
    8. '0' → logprob: -19.125019073486328
    9. 'ge' → logprob: -19.125019073486328
    10. ' out' → logprob: -19.375019073486328

Token 1146: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -6.392202976712724e-06
    2. 'g' → logprob: -12.000006675720215
    3. 'egs' → logprob: -16.1250057220459
    4. 's' → logprob: -16.6250057220459
    5. 'ds' → logprob: -17.6250057220459
    6. 'qs' → logprob: -18.2500057220459
    7. '[s' → logprob: -18.5000057220459
    8. ' gs' → logprob: -18.7500057220459
    9. 'Gs' → logprob: -19.5000057220459
    10. 'cs' → logprob: -19.6250057220459

Token 1147: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.25683799386024475
    2. 'v' → logprob: -1.5068379640579224
    3. '(v' → logprob: -5.506837844848633
    4. ' v' → logprob: -7.756837844848633
    5. '[' → logprob: -8.381837844848633
    6. '<|end|>' → logprob: -9.506837844848633
    7. '0' → logprob: -9.881837844848633
    8. '               ' → logprob: -11.256837844848633
    9. '<v' → logprob: -11.756837844848633
    10. ' ' → logprob: -12.006837844848633

Token 1148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030417663510888815
    2. '[v' → logprob: -6.128041744232178
    3. 'v' → logprob: -7.128041744232178
    4. '```' → logprob: -10.628042221069336
    5. 's' → logprob: -10.753042221069336
    6. '[' → logprob: -12.378042221069336
    7. 'o' → logprob: -13.878042221069336
    8. '[s' → logprob: -14.003042221069336
    9. ']' → logprob: -14.378042221069336
    10. '`' → logprob: -14.753042221069336

Token 1149: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058445025235414505
    2. '<|end|>' → logprob: -3.5584449768066406
    3. '               ' → logprob: -4.683444976806641
    4. ' )' → logprob: -4.808444976806641
    5. ']' → logprob: -5.058444976806641
    6. '[' → logprob: -6.558444976806641
    7. '}' → logprob: -7.433444976806641
    8. '                ' → logprob: -7.808444976806641
    9. '<|end|>' → logprob: -8.55844497680664
    10. ' ' → logprob: -8.55844497680664

Token 1150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013329991139471531
    2. 'ex' → logprob: -5.513329982757568
    3. '```' → logprob: -5.888329982757568
    4. '                   ' → logprob: -6.138329982757568
    5. '   ' → logprob: -6.763329982757568
    6. ' ex' → logprob: -6.888329982757568
    7. '           ' → logprob: -7.138329982757568
    8. '              ' → logprob: -8.513330459594727
    9. '	ex' → logprob: -8.513330459594727
    10. '                ' → logprob: -8.763330459594727

Token 1151: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' (adapté à ' ex') → logprob: -0.0067828623577952385
    2. ' ex' → logprob: -5.1317830085754395
    3. '               ' → logprob: -7.1317830085754395
    4. '                   ' → logprob: -10.631782531738281
    5. 'exp' → logprob: -10.881782531738281
    6. '```' → logprob: -12.506782531738281
    7. '	ex' → logprob: -12.756782531738281
    8. '           ' → logprob: -13.381782531738281
    9. '                ' → logprob: -13.756782531738281
    10. '                       ' → logprob: -14.506782531738281

Token 1152: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0001899511698866263
    2. 'p' → logprob: -9.125189781188965
    3. 'ex' → logprob: -10.125189781188965
    4. 'pes' → logprob: -11.375189781188965
    5. 'Re' → logprob: -11.500189781188965
    6. 'x' → logprob: -12.625189781188965
    7. ' pe' → logprob: -12.875189781188965
    8. 'пе' → logprob: -12.875189781188965
    9. 'pet' → logprob: -13.250189781188965
    10. 'peq' → logprob: -14.000189781188965

Token 1153: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -3.190178904333152e-05
    2. '[v' → logprob: -10.500031471252441
    3. 'v' → logprob: -13.250031471252441
    4. '[' → logprob: -14.125031471252441
    5. ' Re' → logprob: -14.375031471252441
    6. '_re' → logprob: -14.625031471252441
    7. '_Re' → logprob: -15.000031471252441
    8. 's' → logprob: -15.875031471252441
    9. 'Rev' → logprob: -17.000032424926758
    10. 'R' → logprob: -17.125032424926758

Token 1154: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.005248106550425291
    2. 's' → logprob: -5.755248069763184
    3. 'v' → logprob: -6.380248069763184
    4. 'Vs' → logprob: -8.630248069763184
    5. '[v' → logprob: -8.630248069763184
    6. '[' → logprob: -12.255248069763184
    7. 'ves' → logprob: -12.505248069763184
    8. 'Re' → logprob: -13.255248069763184
    9. '0' → logprob: -13.505248069763184
    10. '[s' → logprob: -14.255248069763184

Token 1155: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.625000953674316
    3. 'v' → logprob: -15.625000953674316
    4. '```' → logprob: -16.75
    5. '(v' → logprob: -20.0
    6. '<v' → logprob: -20.375
    7. ' [' → logprob: -20.5
    8. '   ' → logprob: -20.5
    9. '\[' → logprob: -20.625
    10. '       ' → logprob: -20.75

Token 1156: '0' (ID: 15)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.6210724711418152
    2. 'v' → logprob: -1.24607253074646
    3. '0' → logprob: -1.74607253074646
    4. '[' → logprob: -8.996072769165039
    5. '```' → logprob: -8.996072769165039
    6. '[s' → logprob: -9.621072769165039
    7. ']' → logprob: -9.871072769165039
    8. '               ' → logprob: -10.121072769165039
    9. 's' → logprob: -10.496072769165039
    10. ' v' → logprob: -10.621072769165039

Token 1157: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3995400667190552
    2. ' +=' → logprob: -1.1495400667190552
    3. ']+=' → logprob: -4.524539947509766
    4. '[' → logprob: -6.899539947509766
    5. ']' → logprob: -7.774539947509766
    6. '[v' → logprob: -8.649539947509766
    7. '+' → logprob: -10.149539947509766
    8. '               ' → logprob: -10.899539947509766
    9. '                   ' → logprob: -11.274539947509766
    10. '                ' → logprob: -11.649539947509766

Token 1158: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0486038476228714
    2. ' +=' → logprob: -3.0486037731170654
    3. ']+=' → logprob: -11.423604011535645
    4. '+=(' → logprob: -13.173604011535645
    5. '```' → logprob: -14.048604011535645
    6. '[' → logprob: -14.298604011535645
    7. '+='' → logprob: -14.548604011535645
    8. '+="' → logprob: -14.673604011535645
    9. '   ' → logprob: -15.173604011535645
    10. '    ' → logprob: -15.798604011535645

Token 1159: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0024788661394268274
    2. ' prob' → logprob: -6.002479076385498
    3. '(prob' → logprob: -12.87747859954834
    4. '   ' → logprob: -15.00247859954834
    5. 'pro' → logprob: -15.75247859954834
    6. '```' → logprob: -16.377479553222656
    7. 'prot' → logprob: -18.127479553222656
    8. '	pro' → logprob: -18.252479553222656
    9. 'probe' → logprob: -18.377479553222656
    10. '`' → logprob: -18.377479553222656

Token 1160: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009799418970942497
    2. '*' → logprob: -4.634799480438232
    3. '[v' → logprob: -11.759799003601074
    4. '   ' → logprob: -12.009799003601074
    5. ' ' → logprob: -12.134799003601074
    6. '[' → logprob: -12.134799003601074
    7. '```' → logprob: -12.259799003601074
    8. '*v' → logprob: -12.759799003601074
    9. '*(' → logprob: -13.134799003601074
    10. '    ' → logprob: -13.634799003601074

Token 1161: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.10059773921966553
    2. ' (' → logprob: -2.350597858428955
    3. '(prob' → logprob: -7.850597858428955
    4. '(' → logprob: -15.225597381591797
    5. '`' → logprob: -15.475597381591797
    6. '   ' → logprob: -15.725597381591797
    7. 'num' → logprob: -15.975597381591797
    8. ' ' → logprob: -16.100597381591797
    9. '```' → logprob: -16.225597381591797
    10. '
' → logprob: -16.225597381591797

Token 1162: 'num' (ID: 4571)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0008909751777537167
    2. 'num' → logprob: -7.500891208648682
    3. ' (' → logprob: -8.000890731811523
    4. ' num' → logprob: -13.000890731811523
    5. '[num' → logprob: -16.125890731811523
    6. '   ' → logprob: -16.250890731811523
    7. '(' → logprob: -16.500890731811523
    8. ',num' → logprob: -16.625890731811523
    9. '(n' → logprob: -16.750890731811523
    10. '=num' → logprob: -16.750890731811523

Token 1163: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10029853880405426
    2. ' +' → logprob: -2.3502986431121826
    3. '[v' → logprob: -9.475298881530762
    4. '[' → logprob: -12.225298881530762
    5. ' /' → logprob: -12.850298881530762
    6. '/v' → logprob: -13.225298881530762
    7. '/' → logprob: -13.475298881530762
    8. '```' → logprob: -13.475298881530762
    9. '+[' → logprob: -13.475298881530762
    10. '(v' → logprob: -14.725298881530762

Token 1164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -16.125003814697266
    4. '```' → logprob: -16.250003814697266
    5. '   ' → logprob: -18.125003814697266
    6. ')' → logprob: -18.750003814697266
    7. '+' → logprob: -19.625003814697266
    8. '(' → logprob: -20.250003814697266
    9. '``' → logprob: -20.375003814697266
    10. '                   ' → logprob: -20.375003814697266

Token 1165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. ' )' → logprob: -10.500032424926758
    3. ')/' → logprob: -12.750032424926758
    4. '               ' → logprob: -14.125032424926758
    5. '   ' → logprob: -14.875032424926758
    6. '       ' → logprob: -15.750032424926758
    7. '                   ' → logprob: -16.125032424926758
    8. '/' → logprob: -16.375032424926758
    9. ' /' → logprob: -16.625032424926758
    10. ')
' → logprob: -16.875032424926758

Token 1166: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.04334912821650505
    2. '/' → logprob: -3.168349027633667
    3. '/out' → logprob: -8.043349266052246
    4. '               ' → logprob: -10.793349266052246
    5. ' ' → logprob: -13.043349266052246
    6. ' ' → logprob: -13.043349266052246
    7. '/output' → logprob: -13.793349266052246
    8. '                   ' → logprob: -13.918349266052246
    9. '```' → logprob: -15.168349266052246
    10. '           ' → logprob: -15.168349266052246

Token 1167: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.06196768581867218
    2. ' out' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.311967849731445
    4. '	out' → logprob: -17.561967849731445
    5. '(out' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.561967849731445
    7. '       ' → logprob: -19.811967849731445
    8. '_out' → logprob: -20.061967849731445
    9. '           ' → logprob: -20.311967849731445
    10. '    ' → logprob: -20.686967849731445

Token 1168: 'de' (ID: 613)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.12195473909378052
    2. 'de' → logprob: -2.3719546794891357
    3. 'deg' → logprob: -3.8719546794891357
    4. ' out' → logprob: -7.746954917907715
    5. 'v' → logprob: -8.746954917907715
    6. '   ' → logprob: -10.996954917907715
    7. '_de' → logprob: -11.371954917907715
    8. 'od' → logprob: -11.746954917907715
    9. ' ' → logprob: -12.121954917907715
    10. '0' → logprob: -12.121954917907715

Token 1169: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.0002737330214586109
    2. 'g' → logprob: -8.250273704528809
    3. 'egs' → logprob: -11.375273704528809
    4. 's' → logprob: -15.375273704528809
    5. 'ds' → logprob: -16.500274658203125
    6. 'qs' → logprob: -16.625274658203125
    7. '   ' → logprob: -16.750274658203125
    8. 'gr' → logprob: -16.875274658203125
    9. 'out' → logprob: -17.000274658203125
    10. 'gst' → logprob: -17.125274658203125

Token 1170: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.550411151489243e-05
    2. 'v' → logprob: -9.875055313110352
    3. '   ' → logprob: -13.125055313110352
    4. 'out' → logprob: -14.750055313110352
    5. '[' → logprob: -15.000055313110352
    6. ' [' → logprob: -15.125055313110352
    7. '(v' → logprob: -15.250055313110352
    8. '       ' → logprob: -15.500055313110352
    9. '```' → logprob: -15.750055313110352
    10. '0' → logprob: -17.00005531311035

Token 1171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006784170400351286
    2. 'v' → logprob: -5.256783962249756
    3. '[v' → logprob: -6.506783962249756
    4. 's' → logprob: -11.006784439086914
    5. '```' → logprob: -11.006784439086914
    6. 'o' → logprob: -11.756784439086914
    7. '[' → logprob: -12.006784439086914
    8. 'x' → logprob: -12.381784439086914
    9. ']' → logprob: -13.881784439086914
    10. ' ' → logprob: -14.256784439086914

Token 1172: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050514593720436096
    2. ']' → logprob: -3.8005146980285645
    3. '<|end|>' → logprob: -4.3005146980285645
    4. '               ' → logprob: -4.4255146980285645
    5. '}' → logprob: -8.425514221191406
    6. '       ' → logprob: -8.550514221191406
    7. '<|end|>' → logprob: -8.550514221191406
    8. '           ' → logprob: -8.675514221191406
    9. ')
' → logprob: -8.925514221191406
    10. '```' → logprob: -9.300514221191406

Token 1173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5742456316947937
    2. '
' → logprob: -1.3242456912994385
    3. '<|end|>' → logprob: -1.8242456912994385
    4. '```' → logprob: -6.074245452880859
    5. '    
' → logprob: -6.324245452880859
    6. ')' → logprob: -6.449245452880859
    7. '\n' → logprob: -7.324245452880859
    8. '       ' → logprob: -7.449245452880859
    9. '

' → logprob: -7.574245452880859
    10. '<|end|>' → logprob: -7.824245452880859

Token 1174: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2287847250699997
    2. 'best' → logprob: -2.6037847995758057
    3. 'res' → logprob: -3.3537847995758057
    4. '
' → logprob: -3.9787847995758057
    5. 'max' → logprob: -3.9787847995758057
    6. 'ans' → logprob: -4.103784561157227
    7. '#' (adapté à ' #') → logprob: -4.603784561157227
    8. 'min' → logprob: -4.728784561157227
    9. 'answer' → logprob: -4.853784561157227
    10. 'expected' → logprob: -5.353784561157227

Token 1175: ' La' (ID: 3038)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8235784769058228
    2. 'expected' → logprob: -1.9485784769058228
    3. 'ans' → logprob: -2.323578357696533
    4. '#' → logprob: -2.323578357696533
    5. 'res' → logprob: -2.448578357696533
    6. 'max' → logprob: -2.948578357696533
    7. 'min' → logprob: -3.198578357696533
    8. 'answer' → logprob: -4.198578357696533
    9. 'result' → logprob: -4.948578357696533
    10. 'E' → logprob: -5.073578357696533

Token 1176: ' réponse' (ID: 50332)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47836241126060486
    2. 'max' → logprob: -1.7283624410629272
    3. 'best' → logprob: -2.9783623218536377
    4. 'total' → logprob: -3.1033623218536377
    5. 'min' → logprob: -3.2283623218536377
    6. ' #' → logprob: -4.228362560272217
    7. 's' → logprob: -4.353362560272217
    8. 'for' → logprob: -5.603362560272217
    9. 'result' → logprob: -5.603362560272217
    10. ' max' → logprob: -5.603362560272217

Token 1177: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07643880695104599
    2. ' =' → logprob: -3.0764389038085938
    3. '
' → logprob: -4.826438903808594
    4. 'res' → logprob: -5.076438903808594
    5. 'result' → logprob: -5.826438903808594
    6. 'total' → logprob: -5.951438903808594
    7. 'answer' → logprob: -6.451438903808594
    8. 'ans' → logprob: -6.826438903808594
    9. '=' → logprob: -6.826438903808594
    10. '    
' → logprob: -7.076438903808594

Token 1178: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30543699860572815
    2. ' =' → logprob: -1.5554369688034058
    3. '=' → logprob: -3.1804370880126953
    4. 's' → logprob: -5.805437088012695
    5. '_' → logprob: -6.180437088012695
    6. ':' → logprob: -7.180437088012695
    7. '   ' → logprob: -7.430437088012695
    8. ' e' → logprob: -7.555437088012695
    9. '#' → logprob: -7.930437088012695
    10. 'est' → logprob: -8.055437088012695

Token 1179: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08975990861654282
    2. '=' → logprob: -2.7147598266601562
    3. '
' → logprob: -4.714759826660156
    4. '   ' → logprob: -5.464759826660156
    5. 'ans' → logprob: -5.714759826660156
    6. 'answer' → logprob: -7.339759826660156
    7. 'final' → logprob: -7.964759826660156
    8. ':' → logprob: -8.089759826660156
    9. '=
' → logprob: -8.214759826660156
    10. 'exp' → logprob: -8.214759826660156

Token 1180: ' simplement' (ID: 45065)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.12971213459968567
    2. 'ex' → logprob: -2.2547121047973633
    3. ' exp' → logprob: -4.254712104797363
    4. 'ans' → logprob: -6.754712104797363
    5. 'res' → logprob: -7.504712104797363
    6. ' ex' → logprob: -8.129712104797363
    7. 'pro' → logprob: -8.254712104797363
    8. 'prob' → logprob: -9.254712104797363
    9. '   ' → logprob: -10.004712104797363
    10. ' ans' → logprob: -10.379712104797363

Token 1181: ' l' (ID: 305)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.08343715965747833
    2. 'ex' → logprob: -2.833437204360962
    3. 'ans' → logprob: -4.708436965942383
    4. 'print' → logprob: -5.583436965942383
    5. ' exp' → logprob: -5.583436965942383
    6. 'res' → logprob: -5.583436965942383
    7. 'answer' → logprob: -7.583436965942383
    8. 'result' → logprob: -9.208436965942383
    9. ' ans' → logprob: -9.458436965942383
    10. 'ret' → logprob: -9.458436965942383

Token 1182: ''esp' (ID: 73244)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.5796011090278625
    2. 'ex' → logprob: -1.8296010494232178
    3. 'pro' → logprob: -2.5796010494232178
    4. 'e' → logprob: -2.5796010494232178
    5. 'esp' → logprob: -2.7046010494232178
    6. 'expected' → logprob: -4.079601287841797
    7. 'prob' → logprob: -4.204601287841797
    8. 'sum' → logprob: -5.079601287841797
    9. ''exp' → logprob: -5.579601287841797
    10. 'max' → logprob: -5.704601287841797

Token 1183: 'érance' (ID: 122504)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06744829565286636
    2. 'érance' → logprob: -3.317448377609253
    3. 'exp' → logprob: -5.067448139190674
    4. 'ex' → logprob: -5.692448139190674
    5. 'ec' → logprob: -5.692448139190674
    6. 'er' → logprob: -5.817448139190674
    7. 'eres' → logprob: -5.817448139190674
    8. 'aces' → logprob: -6.192448139190674
    9. 'ected' → logprob: -6.692448139190674
    10. 'e' → logprob: -6.817448139190674

Token 1184: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014429331757128239
    2. '[N' → logprob: -4.764429569244385
    3. '   ' → logprob: -5.639429569244385
    4. '[-' → logprob: -6.139429569244385
    5. 's' → logprob: -9.889429092407227
    6. '0' → logprob: -10.764429092407227
    7. ' [' → logprob: -12.639429092407227
    8. '[s' → logprob: -13.264429092407227
    9. 'def' → logprob: -13.639429092407227
    10. '       ' → logprob: -14.014429092407227

Token 1185: ''arr' (ID: 49695)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.02378692850470543
    2. ''arrivée' → logprob: -4.023787021636963
    3. ''arr' → logprob: -5.398787021636963
    4. ''arrive' → logprob: -7.273787021636963
    5. 'arrival' → logprob: -8.648786544799805
    6. 'ar' → logprob: -10.273786544799805
    7. '’arrivée' → logprob: -10.773786544799805
    8. 'arri' → logprob: -10.898786544799805
    9. ' arrivée' → logprob: -11.023786544799805
    10. ''aller' → logprob: -11.148786544799805

Token 1186: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.6129980683326721
    2. 'ivée' → logprob: -1.3629980087280273
    3. 'iv' → logprob: -1.6129980087280273
    4. 'ivé' → logprob: -7.362998008728027
    5. 'ive' → logprob: -7.487998008728027
    6. '[' → logprob: -7.737998008728027
    7. '#' → logprob: -7.987998008728027
    8. 'i' → logprob: -9.112998008728027
    9. '\' → logprob: -9.612998008728027
    10. 'ivable' → logprob: -9.737998008728027

Token 1187: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.14576707780361176
    2. 'à' → logprob: -2.5207669734954834
    3. '[N' → logprob: -3.6457669734954834
    4. '[' → logprob: -4.6457672119140625
    5. '[-' → logprob: -5.1457672119140625
    6. 'exp' → logprob: -5.3957672119140625
    7. '   ' → logprob: -5.7707672119140625
    8. ' au' → logprob: -5.8957672119140625
    9. ' à' → logprob: -6.8957672119140625
    10. 'at' → logprob: -7.2707672119140625

Token 1188: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4579034745693207
    2. 'exp' → logprob: -1.082903504371643
    3. 'l' → logprob: -3.7079033851623535
    4. ' N' → logprob: -6.7079033851623535
    5. 'la' → logprob: -6.8329033851623535
    6. 'ex' → logprob: -7.3329033851623535
    7. '[N' → logprob: -7.5829033851623535
    8. ' exp' → logprob: -8.457903861999512
    9. 'pro' → logprob: -8.832903861999512
    10. 'le' → logprob: -9.082903861999512

Token 1189: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04361208900809288
    2. '[-' → logprob: -3.168612003326416
    3. ' -' → logprob: -7.418612003326416
    4. '[' → logprob: -13.293612480163574
    5. '```' → logprob: -13.293612480163574
    6. '_' → logprob: -13.418612480163574
    7. '1' → logprob: -13.418612480163574
    8. '   ' → logprob: -13.418612480163574
    9. '
' → logprob: -14.168612480163574
    10. '`' → logprob: -14.168612480163574

Token 1190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '```' → logprob: -17.0
    6. '
' → logprob: -17.125
    7. '_' → logprob: -19.625
    8. '#' → logprob: -19.75
    9. '１' → logprob: -20.0
    10. '  ' → logprob: -20.25

Token 1191: ' à' (ID: 1221)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.3258463144302368
    2. '[' → logprob: -2.3258461952209473
    3. '   ' → logprob: -2.3258461952209473
    4. '
' → logprob: -3.2008461952209473
    5. ' exp' → logprob: -4.700846195220947
    6. '.' → logprob: -4.950846195220947
    7. ' ' → logprob: -5.325846195220947
    8. '<|end|>' → logprob: -5.575846195220947
    9. 'from' → logprob: -6.200846195220947
    10. ',' → logprob: -6.200846195220947

Token 1192: ' partir' (ID: 12100)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.5470514893531799
    2. 'exp' → logprob: -1.2970514297485352
    3. 'ex' → logprob: -3.547051429748535
    4. 'l' → logprob: -3.672051429748535
    5. 'prob' → logprob: -3.672051429748535
    6. 'print' → logprob: -3.797051429748535
    7. '0' → logprob: -4.047051429748535
    8. 'la' → logprob: -4.672051429748535
    9. 'part' → logprob: -4.922051429748535
    10. '#' → logprob: -6.422051429748535

Token 1193: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.781588613986969
    2. '   ' → logprob: -1.2815885543823242
    3. 'de' → logprob: -1.9065885543823242
    4. '0' → logprob: -3.156588554382324
    5. ' du' → logprob: -3.281588554382324
    6. '[' → logprob: -3.781588554382324
    7. '#' → logprob: -5.031588554382324
    8. ' de' → logprob: -5.781588554382324
    9. '(' → logprob: -6.531588554382324
    10. 'pro' → logprob: -7.781588554382324

Token 1194: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -9.805981972021982e-05
    2. 'start' → logprob: -10.25009822845459
    3. 'dé' → logprob: -10.75009822845459
    4. ' ' → logprob: -10.87509822845459
    5. ' départ' → logprob: -12.12509822845459
    6. 'som' → logprob: -12.37509822845459
    7. 'dern' → logprob: -12.87509822845459
    8. 'd' → logprob: -13.37509822845459
    9. 'v' → logprob: -13.37509822845459
    10. '#' → logprob: -13.50009822845459

Token 1195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02337801642715931
    2. '[' → logprob: -4.023377895355225
    3. '(' → logprob: -5.398377895355225
    4. '
' → logprob: -8.523378372192383
    5. '   ' → logprob: -8.898378372192383
    6. '#' → logprob: -9.148378372192383
    7. '```' → logprob: -9.148378372192383
    8. '`' → logprob: -10.023378372192383
    9. 'def' → logprob: -10.398378372192383
    10. ' ' → logprob: -10.773378372192383

Token 1196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024950411170721054
    2. '[' → logprob: -6.127494812011719
    3. '(' → logprob: -8.377494812011719
    4. '
' → logprob: -10.502494812011719
    5. '```' → logprob: -10.877494812011719
    6. '[-' → logprob: -11.127494812011719
    7. '`' → logprob: -11.627494812011719
    8. '   ' → logprob: -13.002494812011719
    9. '[N' → logprob: -13.627494812011719
    10. ' ' → logprob: -13.752494812011719

Token 1197: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7709550261497498
    2. '
' → logprob: -1.0209550857543945
    3. 'result' → logprob: -2.3959550857543945
    4. 'print' → logprob: -2.8959550857543945
    5. 'answer' → logprob: -4.0209550857543945
    6. 'res' → logprob: -4.8959550857543945
    7. 'exp' → logprob: -6.1459550857543945
    8. '```' → logprob: -7.3959550857543945
    9. ' result' → logprob: -7.6459550857543945
    10. ' print' → logprob: -7.7709550857543945

Token 1198: '   ' (ID: 271)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.8208436965942383
    2. 'res' → logprob: -1.0708436965942383
    3. 'ans' → logprob: -1.8208436965942383
    4. 'result' → logprob: -3.0708436965942383
    5. 'ret' → logprob: -5.445843696594238
    6. '   ' → logprob: -5.820843696594238
    7. '```' → logprob: -7.945843696594238
    8. ' ans' → logprob: -8.320843696594238
    9. ' answer' → logprob: -8.570843696594238
    10. 'ex' → logprob: -8.695843696594238

Token 1199: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.40760520100593567
    2. 'ans' (adapté à ' ans') → logprob: -1.6576051712036133
    3. 'res' → logprob: -2.1576051712036133
    4. 'result' → logprob: -3.6576051712036133
    5. 'ret' → logprob: -6.657605171203613
    6. 'ex' → logprob: -6.907605171203613
    7. 'print' → logprob: -9.157605171203613
    8. 'exp' → logprob: -9.407605171203613
    9. ' answer' → logprob: -10.032605171203613
    10. '```' → logprob: -10.032605171203613

Token 1200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012569697573781013
    2. '=' → logprob: -4.387569904327393
    3. '[' → logprob: -10.762569427490234
    4. '_' → logprob: -11.262569427490234
    5. '   ' → logprob: -11.887569427490234
    6. '    ' → logprob: -12.262569427490234
    7. ' ' → logprob: -12.637569427490234
    8. ',' → logprob: -13.512569427490234
    9. 's' → logprob: -13.637569427490234
    10. ' =[' → logprob: -13.637569427490234

Token 1201: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00014036978245712817
    2. ' exp' → logprob: -9.000140190124512
    3. 'ex' → logprob: -11.000140190124512
    4. 'pro' → logprob: -16.375141143798828
    5. '   ' → logprob: -16.875141143798828
    6. 'prob' → logprob: -19.875141143798828
    7. 'expr' → logprob: -20.000141143798828
    8. '	exp' → logprob: -20.250141143798828
    9. '(exp' → logprob: -20.625141143798828
    10. 'float' → logprob: -21.625141143798828

Token 1202: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.735893965815194e-05
    2. 'ex' → logprob: -11.500017166137695
    3. 'exp' → logprob: -12.750017166137695
    4. 's' → logprob: -13.250017166137695
    5. 'esper' → logprob: -14.000017166137695
    6. 'res' → logprob: -14.875017166137695
    7. 'er' → logprob: -15.000017166137695
    8. 'esp' → logprob: -15.375017166137695
    9. 'eses' → logprob: -15.625017166137695
    10. 'pro' → logprob: -16.375017166137695

Token 1203: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0004306692280806601
    2. '[N' → logprob: -7.750430583953857
    3. '[' → logprob: -17.750431060791016
    4. '[n' → logprob: -17.750431060791016
    5. '   ' → logprob: -18.625431060791016
    6. ' [-' → logprob: -19.875431060791016
    7. 'N' → logprob: -20.500431060791016
    8. '][-' → logprob: -21.125431060791016
    9. '[:-' → logprob: -21.625431060791016
    10. '[M' → logprob: -21.625431060791016

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.250000953674316
    3. ' ' → logprob: -16.5
    4. '   ' → logprob: -16.75
    5. ']' → logprob: -17.625
    6. '``' → logprob: -19.1875
    7. '#' → logprob: -19.5625
    8. '１' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. '`' → logprob: -20.0625

Token 1205: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16180972754955292
    2. '<|end|>' → logprob: -2.2868096828460693
    3. '   ' → logprob: -3.4118096828460693
    4. ')' → logprob: -4.536809921264648
    5. '<|end|>' → logprob: -6.286809921264648
    6. ' ]' → logprob: -7.036809921264648
    7. '  ' → logprob: -7.911809921264648
    8. '
' → logprob: -8.411809921264648
    9. '#' → logprob: -8.786809921264648
    10. '']' → logprob: -9.161809921264648

Token 1206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13229277729988098
    2. '   ' → logprob: -2.2572927474975586
    3. '    
' → logprob: -4.382292747497559
    4. 'for' → logprob: -5.882292747497559
    5. '```' → logprob: -6.382292747497559
    6. '  
' → logprob: -6.632292747497559
    7. 'if' → logprob: -7.632292747497559
    8. '   
' → logprob: -8.632292747497559
    9. '``' → logprob: -9.882292747497559
    10. '

' → logprob: -10.007292747497559

Token 1207: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03929354250431061
    2. '   ' → logprob: -3.5392935276031494
    3. '```' → logprob: -5.4142937660217285
    4. '
' → logprob: -5.6642937660217285
    5. ' for' → logprob: -6.5392937660217285
    6. 'if' → logprob: -9.53929328918457
    7. '``' → logprob: -11.16429328918457
    8. '#' (adapté à ' #') → logprob: -11.53929328918457
    9. '    
' → logprob: -11.66429328918457
    10. 'import' → logprob: -12.03929328918457

Token 1208: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28984227776527405
    2. '   ' → logprob: -1.4148422479629517
    3. 'best' → logprob: -5.039842128753662
    4. '#' → logprob: -7.039842128753662
    5. 'max' → logprob: -7.414842128753662
    6. 'min' → logprob: -8.78984260559082
    7. 'change' → logprob: -9.16484260559082
    8. 'import' → logprob: -9.66484260559082
    9. 'c' → logprob: -10.16484260559082
    10. '
' → logprob: -10.28984260559082

Token 1209: ' explore' (ID: 14326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08816210180521011
    2. '   ' → logprob: -3.5881621837615967
    3. ' for' → logprob: -4.338161945343018
    4. '#' → logprob: -4.588161945343018
    5. ' =' → logprob: -4.713161945343018
    6. '       ' → logprob: -4.838161945343018
    7. 'abs' → logprob: -5.838161945343018
    8. 'tab' → logprob: -6.213161945343018
    9. '
' → logprob: -6.338161945343018
    10. '=' → logprob: -6.338161945343018

Token 1210: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43365931510925293
    2. 'for' → logprob: -1.683659315109253
    3. ' for' → logprob: -2.808659315109253
    4. 's' → logprob: -3.058659315109253
    5. '       ' → logprob: -4.308659553527832
    6. 'v' → logprob: -4.433659553527832
    7. ' les' → logprob: -5.058659553527832
    8. 'range' → logprob: -5.308659553527832
    9. '(' → logprob: -5.683659553527832
    10. '(v' → logprob: -6.058659553527832

Token 1211: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35144245624542236
    2. 'range' → logprob: -1.8514424562454224
    3. ' range' → logprob: -2.976442337036133
    4. ' for' → logprob: -3.226442337036133
    5. 'e' → logprob: -3.851442337036133
    6. 'v' → logprob: -5.726442337036133
    7. '#' → logprob: -5.851442337036133
    8. '```' → logprob: -5.851442337036133
    9. ''' → logprob: -6.101442337036133
    10. '(range' → logprob: -6.226442337036133

Token 1212: 'optim' (ID: 29513)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000827017764095217
    2. ' range' → logprob: -7.375826835632324
    3. 'for' → logprob: -8.625826835632324
    4. 'ange' → logprob: -11.875826835632324
    5. '(range' → logprob: -12.000826835632324
    6. '_' → logprob: -13.875826835632324
    7. 'rang' → logprob: -14.000826835632324
    8. '   ' → logprob: -14.125826835632324
    9. '=' → logprob: -14.250826835632324
    10. 'possible' → logprob: -14.375826835632324

Token 1213: 'isation' (ID: 6993)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.354220986366272
    2. 'al' → logprob: -1.479220986366272
    3. 'isation' → logprob: -1.479220986366272
    4. 'um' → logprob: -2.4792208671569824
    5. '```' → logprob: -2.8542208671569824
    6. 'ization' → logprob: -2.9792208671569824
    7. 'ale' → logprob: -3.8542208671569824
    8. '   ' → logprob: -4.229220867156982
    9. '#' → logprob: -4.729220867156982
    10. 'aux' → logprob: -4.854220867156982

Token 1214: ' évent' (ID: 80346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012797567993402481
    2. 'for' → logprob: -4.7627973556518555
    3. ' for' → logprob: -5.6377973556518555
    4. '	for' → logprob: -8.762797355651855
    5. ' des' → logprob: -8.887797355651855
    6. 's' → logprob: -9.387797355651855
    7. '       ' → logprob: -10.512797355651855
    8. ':' → logprob: -10.512797355651855
    9. ' pour' → logprob: -10.512797355651855
    10. 'de' → logprob: -10.887797355651855

Token 1215: 'uelle' (ID: 18079)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0907287523150444
    2. 'ation' → logprob: -2.965728759765625
    3. '       ' → logprob: -3.715728759765625
    4. 'isation' → logprob: -5.215728759765625
    5. 'iation' → logprob: -6.090728759765625
    6. '           ' → logprob: -7.590728759765625
    7. 'ion' → logprob: -7.715728759765625
    8. '    ' → logprob: -8.090728759765625
    9. 'isée' → logprob: -8.590728759765625
    10. ' ' → logprob: -8.715728759765625

Token 1216: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00956518854945898
    2. 'for' → logprob: -5.259565353393555
    3. ' for' → logprob: -6.134565353393555
    4. '	for' → logprob: -7.509565353393555
    5. ':' → logprob: -7.759565353393555
    6. '
' → logprob: -8.384565353393555
    7. ' des' → logprob: -8.759565353393555
    8. '<|end|>' → logprob: -9.259565353393555
    9. '       ' → logprob: -9.384565353393555
    10. ',' → logprob: -9.384565353393555

Token 1217: ' retirer' (ID: 136490)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4398576319217682
    2. ' for' → logprob: -1.3148576021194458
    3. '   ' → logprob: -2.4398577213287354
    4. '
' → logprob: -9.314857482910156
    5. 'best' → logprob: -9.939857482910156
    6. '	for' → logprob: -11.439857482910156
    7. '#' → logprob: -12.314857482910156
    8. ' ' → logprob: -12.439857482910156
    9. ' best' → logprob: -12.689857482910156
    10. 'import' → logprob: -12.939857482910156

Token 1218: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.40251171588897705
    2. 'une' → logprob: -1.777511715888977
    3. ' un' → logprob: -2.4025115966796875
    4. 'un' → logprob: -3.2775115966796875
    5. ' for' → logprob: -4.6525115966796875
    6. ' ' → logprob: -5.0275115966796875
    7. 'for' → logprob: -5.4025115966796875
    8. ' l' → logprob: -5.5275115966796875
    9. 'out' → logprob: -6.2775115966796875
    10. 'l' → logprob: -6.9025115966796875

Token 1219: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3585469424724579
    2. ' ar' → logprob: -1.6085469722747803
    3. 'r' → logprob: -3.1085469722747803
    4. ' are' → logprob: -4.108546733856201
    5. 'are' → logprob: -4.483546733856201
    6. 'arr' → logprob: -4.858546733856201
    7. 'arest' → logprob: -5.358546733856201
    8. 'arre' → logprob: -5.483546733856201
    9. '_ar' → logprob: -6.108546733856201
    10. 'a' → logprob: -6.483546733856201

Token 1220: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.21236872673034668
    2. 'ê' → logprob: -2.2123687267303467
    3. '^' → logprob: -3.5873687267303467
    4. '_' → logprob: -3.8373687267303467
    5. 'r' → logprob: -4.087368965148926
    6. 'êt' → logprob: -5.837368965148926
    7. 'c' → logprob: -6.087368965148926
    8. '   ' → logprob: -6.337368965148926
    9. 'e' → logprob: -6.712368965148926
    10. ' ' → logprob: -6.712368965148926

Token 1221: ' sort' (ID: 4506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09878817945718765
    2. 'for' → logprob: -2.973788261413574
    3. ' for' → logprob: -3.348788261413574
    4. '
' → logprob: -5.723788261413574
    5. 's' → logprob: -6.848788261413574
    6. '       ' → logprob: -7.473788261413574
    7. 'from' → logprob: -7.598788261413574
    8. '	for' → logprob: -7.848788261413574
    9. '    
' → logprob: -8.598788261413574
    10. '  ' → logprob: -8.723788261413574

Token 1222: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0006712094182148576
    2. '   ' → logprob: -8.50067138671875
    3. 's' → logprob: -8.87567138671875
    4. 'ant' → logprob: -8.87567138671875
    5. '
' → logprob: -10.50067138671875
    6. 'nante' → logprob: -10.50067138671875
    7. '[' → logprob: -10.75067138671875
    8. '#' → logprob: -11.25067138671875
    9. ' ante' → logprob: -11.37567138671875
    10. 'nte' → logprob: -11.50067138671875

Token 1223: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3337846994400024
    2. 'for' → logprob: -1.7087846994400024
    3. 'from' → logprob: -1.9587846994400024
    4. 'e' → logprob: -2.583784580230713
    5. 'sort' → logprob: -2.583784580230713
    6. '   ' → logprob: -2.708784580230713
    7. 'u' → logprob: -3.083784580230713
    8. 'd' → logprob: -3.583784580230713
    9. 'de' → logprob: -3.583784580230713
    10. 'out' → logprob: -4.208784580230713

Token 1224: ''un' (ID: 9788)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.4782702922821045
    2. 'un' → logprob: -1.7282702922821045
    3. 't' → logprob: -1.8532702922821045
    4. 's' → logprob: -2.4782702922821045
    5. 'une' → logprob: -2.8532702922821045
    6. ' chaque' → logprob: -3.1032702922821045
    7. 'cha' → logprob: -3.1032702922821045
    8. 'adj' → logprob: -3.1032702922821045
    9. ''un' → logprob: -3.2282702922821045
    10. 'out' → logprob: -3.6032702922821045

Token 1225: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.0027325977571308613
    2. ' v' → logprob: -6.627732753753662
    3. ' som' → logprob: -7.502732753753662
    4. 'som' → logprob: -7.877732753753662
    5. ' somm' → logprob: -8.252732276916504
    6. 'v' → logprob: -9.127732276916504
    7. 's' → logprob: -10.377732276916504
    8. ' s' → logprob: -11.252732276916504
    9. ' voisin' → logprob: -11.252732276916504
    10. ' vertex' → logprob: -11.627732276916504

Token 1226: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0745810270309448
    2. ' v' → logprob: -1.5745810270309448
    3. 'u' → logprob: -1.6995810270309448
    4. ' u' → logprob: -2.1995811462402344
    5. ',' → logprob: -3.5745811462402344
    6. ' sort' → logprob: -3.5745811462402344
    7. '   ' → logprob: -3.8245811462402344
    8. 'sort' → logprob: -3.8245811462402344
    9. 's' → logprob: -4.324581146240234
    10. ' for' → logprob: -5.199581146240234

Token 1227: 's' (ID: 82)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.41626331210136414
    2. 'v' → logprob: -1.5412633419036865
    3. ')' → logprob: -2.2912633419036865
    4. ' )' → logprob: -4.291263103485107
    5. '```' → logprob: -5.666263103485107
    6. ' s' → logprob: -6.416263103485107
    7. ' #' → logprob: -6.791263103485107
    8. ' `' → logprob: -7.541263103485107
    9. 'out' → logprob: -7.666263103485107
    10. '`' → logprob: -7.791263103485107

Token 1228: 'auf' (ID: 7483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03135626018047333
    2. ',' → logprob: -4.406356334686279
    3. '):' → logprob: -5.781356334686279
    4. '=' → logprob: -6.031356334686279
    5. '   ' → logprob: -6.531356334686279
    6. '[i' → logprob: -6.531356334686279
    7. 'ur' → logprob: -6.781356334686279
    8. 't' → logprob: -7.031356334686279
    9. ')[' → logprob: -7.156356334686279
    10. ']' → logprob: -7.156356334686279

Token 1229: ' arrive' (ID: 18338)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5834627151489258
    2. '0' → logprob: -1.5834627151489258
    3. 's' → logprob: -2.583462715148926
    4. 'le' → logprob: -2.833462715148926
    5. '-le' → logprob: -3.458462715148926
    6. '-' → logprob: -4.083462715148926
    7. ' N' → logprob: -4.208462715148926
    8. ')' → logprob: -4.583462715148926
    9. 'la' → logprob: -5.333462715148926
    10. '-N' → logprob: -5.708462715148926

Token 1230: 'e' (ID: 68)
  Prédit: 'nte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nte' → logprob: -0.16608403623104095
    2. 'e' → logprob: -2.791084051132202
    3. 'inte' → logprob: -2.916084051132202
    4. 'nt' → logprob: -3.916084051132202
    5. 'ante' → logprob: -4.541083812713623
    6. 'n' → logprob: -5.916083812713623
    7. 'ant' → logprob: -7.291083812713623
    8. ')' → logprob: -7.791083812713623
    9. '}' → logprob: -7.916083812713623
    10. 'nante' → logprob: -8.041084289550781

Token 1231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01746464893221855
    2. ')
' → logprob: -5.267464637756348
    3. 's' → logprob: -6.017464637756348
    4. '[-' → logprob: -6.517464637756348
    5. 'v' → logprob: -6.767464637756348
    6. '')' → logprob: -6.892464637756348
    7. '[:-' → logprob: -7.267464637756348
    8. '   ' → logprob: -7.517464637756348
    9. '[' → logprob: -7.642464637756348
    10. ',' → logprob: -7.767464637756348

Token 1232: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03176594525575638
    2. '
' → logprob: -4.406765937805176
    3. ' for' → logprob: -5.031765937805176
    4. ',' → logprob: -5.531765937805176
    5. 'for' → logprob: -5.656765937805176
    6. ':' → logprob: -6.906765937805176
    7. '.' → logprob: -7.156765937805176
    8. '    
' → logprob: -7.781765937805176
    9. ' =' → logprob: -8.281765937805176
    10. ' pour' → logprob: -8.656765937805176

Token 1233: ' cela' (ID: 17542)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.10101234912872314
    2. ' out' → logprob: -2.3510122299194336
    3. 'pro' → logprob: -8.226012229919434
    4. 'prob' → logprob: -8.726012229919434
    5. 'not' → logprob: -9.351012229919434
    6. 's' → logprob: -9.601012229919434
    7. ' s' → logprob: -9.851012229919434
    8. '```' → logprob: -9.851012229919434
    9. 'len' → logprob: -11.351012229919434
    10. ' not' → logprob: -11.476012229919434

Token 1234: ' dim' (ID: 6051)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.217995285987854
    2. ' permet' → logprob: -2.0929951667785645
    3. ' réduit' → logprob: -2.0929951667785645
    4. '```' → logprob: -2.5929951667785645
    5. ' améli' → logprob: -2.9679951667785645
    6. 's' → logprob: -2.9679951667785645
    7. ' >' → logprob: -2.9679951667785645
    8. 'redu' → logprob: -3.0929951667785645
    9. ' peut' → logprob: -3.5929951667785645
    10. ' reduces' → logprob: -4.0929951667785645

Token 1235: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -1.0802738870552275e-05
    2. 'inu' → logprob: -12.50001049041748
    3. 'in' → logprob: -12.62501049041748
    4. 'ine' → logprob: -13.50001049041748
    5. 'e' → logprob: -14.25001049041748
    6. 'INUE' → logprob: -15.00001049041748
    7. 'inut' → logprob: -15.12501049041748
    8. 'inite' → logprob: -15.37501049041748
    9. 'init' → logprob: -15.87501049041748
    10. 'une' → logprob: -15.87501049041748

Token 1236: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0627416372299194
    2. ' l' → logprob: -1.8127416372299194
    3. 'ans' → logprob: -1.9377416372299194
    4. 'l' → logprob: -2.062741756439209
    5. 'la' → logprob: -2.187741756439209
    6. '(ans' → logprob: -3.187741756439209
    7. ' ans' → logprob: -3.562741756439209
    8. 'le' → logprob: -4.062741756439209
    9. ' le' → logprob: -4.187741756439209
    10. 'leur' → logprob: -6.687741756439209

Token 1237: ''esp' (ID: 73244)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4212435483932495
    2. 'a' → logprob: -1.5462435483932495
    3. ''' → logprob: -3.421243667602539
    4. 'en' → logprob: -3.421243667602539
    5. 'ans' → logprob: -3.671243667602539
    6. 'ength' → logprob: -4.671243667602539
    7. 'ine' → logprob: -5.046243667602539
    8. 'es' → logprob: -5.796243667602539
    9. '_' → logprob: -5.921243667602539
    10. ''en' → logprob: -6.046243667602539

Token 1238: 'érance' (ID: 122504)
  Prédit: 'ace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.17171938717365265
    2. 'aces' → logprob: -2.4217193126678467
    3. '   ' → logprob: -3.5467193126678467
    4. 'ans' → logprob: -3.9217193126678467
    5. 'érance' → logprob: -5.546719551086426
    6. '       ' → logprob: -6.296719551086426
    7. '
' → logprob: -6.421719551086426
    8. 'ce' → logprob: -6.421719551086426
    9. 'acement' → logprob: -6.546719551086426
    10. 'ance' → logprob: -7.046719551086426

Token 1239: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048546139150857925
    2. 'for' → logprob: -3.923546075820923
    3. 's' → logprob: -4.923546314239502
    4. '[s' → logprob: -5.048546314239502
    5. ',' → logprob: -6.048546314239502
    6. 'de' → logprob: -6.173546314239502
    7. '(s' → logprob: -6.423546314239502
    8. 'pour' → logprob: -6.548546314239502
    9. 'd' → logprob: -6.673546314239502
    10. ' for' → logprob: -7.048546314239502

Token 1240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014210639521479607
    2. ' for' → logprob: -4.8892107009887695
    3. 'for' → logprob: -5.3892107009887695
    4. '
' → logprob: -6.2642107009887695
    5. '    
' → logprob: -9.26421070098877
    6. '```' → logprob: -11.51421070098877
    7. '	for' → logprob: -12.13921070098877
    8. '  
' → logprob: -14.51421070098877
    9. '``' → logprob: -14.51421070098877
    10. ' 
' → logprob: -14.63921070098877

Token 1241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013897583121433854
    2. '   ' → logprob: -6.751389980316162
    3. ' for' → logprob: -8.626389503479004
    4. '```' → logprob: -10.626389503479004
    5. '
' → logprob: -11.501389503479004
    6. '``' → logprob: -13.251389503479004
    7. 'max' → logprob: -13.376389503479004
    8. '#' → logprob: -14.376389503479004
    9. '    
' → logprob: -14.501389503479004
    10. 'min' → logprob: -14.626389503479004

Token 1242: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2400444746017456
    2. ' v' → logprob: -1.6150444746017456
    3. 's' → logprob: -4.740044593811035
    4. ' s' → logprob: -5.365044593811035
    5. 'u' → logprob: -7.115044593811035
    6. ' u' → logprob: -8.490044593811035
    7. 'i' → logprob: -9.740044593811035
    8. ' i' → logprob: -11.240044593811035
    9. '   ' → logprob: -12.240044593811035
    10. ' ' → logprob: -12.990044593811035

Token 1243: 'Rem' (ID: 6882)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062164973467588425
    2. 'in' → logprob: -2.8121650218963623
    3. ' ' → logprob: -9.687165260314941
    4. ' v' → logprob: -10.187165260314941
    5. 'v' → logprob: -10.312165260314941
    6. '   ' → logprob: -11.437165260314941
    7. '_' → logprob: -11.687165260314941
    8. '<|end|>' → logprob: -11.937165260314941
    9. '0' → logprob: -12.062165260314941
    10. '	in' → logprob: -12.187165260314941

Token 1244: ' in' (ID: 306)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3211267590522766
    2. ' in' → logprob: -2.071126699447632
    3. '[' → logprob: -3.321126699447632
    4. 'in' → logprob: -3.446126699447632
    5. 'v' → logprob: -4.321126937866211
    6. '[]' → logprob: -4.446126937866211
    7. '   ' → logprob: -4.571126937866211
    8. '[:-' → logprob: -4.571126937866211
    9. '[:' → logprob: -4.821126937866211
    10. 'inue' → logprob: -4.821126937866211

Token 1245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196869537234306
    2. ' range' → logprob: -2.8119688034057617
    3. '   ' → logprob: -14.936968803405762
    4. ' ' → logprob: -15.186968803405762
    5. '(range' → logprob: -15.436968803405762
    6. '	range' → logprob: -16.061967849731445
    7. '  ' → logprob: -17.436967849731445
    8. '0' → logprob: -17.936967849731445
    9. '    ' → logprob: -18.311967849731445
    10. 'in' → logprob: -18.311967849731445

Token 1246: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06376473605632782
    2. '(' → logprob: -2.813764810562134
    3. 'N' → logprob: -6.438764572143555
    4. '1' → logprob: -9.063764572143555
    5. '   ' → logprob: -9.813764572143555
    6. '(len' → logprob: -11.813764572143555
    7. '(
' → logprob: -11.938764572143555
    8. ' (' → logprob: -12.063764572143555
    9. '(n' → logprob: -12.938764572143555
    10. ')' → logprob: -13.938764572143555

Token 1247: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39446985721588135
    2. '):' → logprob: -1.2694698572158813
    3. '-' → logprob: -3.269469738006592
    4. ' -' → logprob: -5.644469738006592
    5. '   ' → logprob: -6.019469738006592
    6. '):
' → logprob: -8.26947021484375
    7. '+' → logprob: -8.76947021484375
    8. ':' → logprob: -9.14447021484375
    9. ')' → logprob: -9.26947021484375
    10. '       ' → logprob: -9.64447021484375

Token 1248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '2' → logprob: -12.875008583068848
    3. '   ' → logprob: -12.875008583068848
    4. ' ' → logprob: -13.000008583068848
    5. '```' → logprob: -14.125008583068848
    6. '
' → logprob: -15.875008583068848
    7. ')' → logprob: -16.00000762939453
    8. '...' → logprob: -17.37500762939453
    9. '``' → logprob: -18.00000762939453
    10. '):
' → logprob: -18.37500762939453

Token 1249: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43366384506225586
    2. '):' → logprob: -1.0586638450622559
    3. '-' → logprob: -5.433663845062256
    4. '   ' → logprob: -8.808664321899414
    5. '):
' → logprob: -8.933664321899414
    6. ' -' → logprob: -9.058664321899414
    7. ':' → logprob: -9.183664321899414
    8. '       ' → logprob: -11.308664321899414
    9. '):

' → logprob: -11.433664321899414
    10. ' ):' → logprob: -11.808664321899414

Token 1250: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4750022292137146
    2. '       ' → logprob: -1.1000022888183594
    3. ' if' → logprob: -3.8500022888183594
    4. 'out' → logprob: -4.475002288818359
    5. ' out' → logprob: -4.975002288818359
    6. '	out' → logprob: -6.100002288818359
    7. '	if' → logprob: -6.975002288818359
    8. 'if' → logprob: -7.600002288818359
    9. '```' → logprob: -7.850002288818359
    10. '	   ' → logprob: -8.10000228881836

Token 1251: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9027652144432068
    2. '       ' → logprob: -1.1527652740478516
    3. 'out' → logprob: -1.7777652740478516
    4. 'if' → logprob: -2.5277652740478516
    5. ' if' → logprob: -4.277765274047852
    6. 'for' → logprob: -5.652765274047852
    7. ' out' → logprob: -5.652765274047852
    8. '	out' → logprob: -5.902765274047852
    9. '```' → logprob: -6.402765274047852
    10. '#' → logprob: -6.652765274047852

Token 1252: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20032623410224915
    2. 'out' → logprob: -1.9503262042999268
    3. ' out' → logprob: -3.7003262042999268
    4. '       ' → logprob: -5.325326442718506
    5. ' if' → logprob: -5.450326442718506
    6. 'if' → logprob: -5.700326442718506
    7. 'v' → logprob: -6.950326442718506
    8. '	out' → logprob: -7.950326442718506
    9. 'for' → logprob: -8.700325965881348
    10. '#' → logprob: -8.950325965881348

Token 1253: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8041520118713379
    2. 'for' → logprob: -1.054152011871338
    3. '   ' → logprob: -2.054152011871338
    4. 'in' → logprob: -4.054152011871338
    5. 'v' → logprob: -4.679152011871338
    6. ' in' → logprob: -4.679152011871338
    7. ' continue' → logprob: -4.804152011871338
    8. 'continue' → logprob: -5.054152011871338
    9. '       ' → logprob: -5.554152011871338
    10. ':' → logprob: -5.804152011871338

Token 1254: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6399832367897034
    2. 'orre' → logprob: -2.8899831771850586
    3. 'ourt' → logprob: -3.0149831771850586
    4. 'ète' → logprob: -3.1399831771850586
    5. 'ève' → logprob: -3.2649831771850586
    6. 'u' → logprob: -3.2649831771850586
    7. 'ère' → logprob: -3.2649831771850586
    8. 'ure' → logprob: -3.6399831771850586
    9. 'ute' → logprob: -4.014983177185059
    10. 'v' → logprob: -4.014983177185059

Token 1255: ' tous' (ID: 10688)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3785889148712158
    2. ' N' → logprob: -1.5035889148712158
    3. ' out' → logprob: -3.503588914871216
    4. '(N' → logprob: -4.003588676452637
    5. ' v' → logprob: -4.253588676452637
    6. 'v' → logprob: -4.503588676452637
    7. 'out' → logprob: -5.003588676452637
    8. '<|end|>' → logprob: -6.003588676452637
    9. ' range' → logprob: -6.128588676452637
    10. 'range' → logprob: -6.253588676452637

Token 1256: ' les' (ID: 1341)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2440776824951172
    2. '(v' → logprob: -2.119077682495117
    3. ' v' → logprob: -2.619077682495117
    4. 'range' → logprob: -5.369077682495117
    5. 's' → logprob: -5.494077682495117
    6. ' out' → logprob: -5.744077682495117
    7. '(' → logprob: -5.869077682495117
    8. 'out' → logprob: -5.994077682495117
    9. '(s' → logprob: -6.494077682495117
    10. ' (' → logprob: -6.744077682495117

Token 1257: ' somm' (ID: 44830)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6870301365852356
    2. 'tokens' → logprob: -1.9370300769805908
    3. 'neighbors' → logprob: -2.062030076980591
    4. 'out' → logprob: -2.312030076980591
    5. 'vertices' → logprob: -3.187030076980591
    6. ' out' → logprob: -3.687030076980591
    7. ' v' → logprob: -3.812030076980591
    8. 'nodes' → logprob: -4.68703031539917
    9. ' vertices' → logprob: -5.06203031539917
    10. ':' → logprob: -5.68703031539917

Token 1258: 'ets' (ID: 1719)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.056541085243225
    2. 'it' → logprob: -1.431541085243225
    3. 'v' → logprob: -1.431541085243225
    4. 'et' → logprob: -3.0565409660339355
    5. 'ets' → logprob: -3.5565409660339355
    6. 'es' → logprob: -4.0565409660339355
    7. 'its' → logprob: -4.1815409660339355
    8. '[v' → logprob: -4.1815409660339355
    9. 'e' → logprob: -4.4315409660339355
    10. 'i' → logprob: -5.0565409660339355

Token 1259: ' sauf' (ID: 87919)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29562947154045105
    2. '[:-' → logprob: -1.6706295013427734
    3. '[v' → logprob: -3.7956295013427734
    4. ':
' → logprob: -4.295629501342773
    5. '[' → logprob: -4.420629501342773
    6. '   ' → logprob: -4.920629501342773
    7. ' :' → logprob: -5.670629501342773
    8. '<|end|>' → logprob: -6.170629501342773
    9. '[:' → logprob: -6.420629501342773
    10. '(v' → logprob: -6.795629501342773

Token 1260: ' le' (ID: 505)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.027280645444989204
    2. '<|end|>' → logprob: -3.902280569076538
    3. 'v' → logprob: -6.652280807495117
    4. ' N' → logprob: -7.277280807495117
    5. 'last' → logprob: -7.277280807495117
    6. '	N' → logprob: -7.652280807495117
    7. '-' → logprob: -7.652280807495117
    8. ' ' → logprob: -7.902280807495117
    9. '(N' → logprob: -8.027280807495117
    10. 'the' → logprob: -8.027280807495117

Token 1261: ' dernier' (ID: 27982)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010930694406852126
    2. '-' → logprob: -6.876092910766602
    3. ' N' → logprob: -10.501092910766602
    4. '   ' → logprob: -12.126092910766602
    5. '(N' → logprob: -12.126092910766602
    6. 'last' → logprob: -12.126092910766602
    7. '-N' → logprob: -12.376092910766602
    8. '[-' → logprob: -12.501092910766602
    9. '[N' → logprob: -12.751092910766602
    10. '
' → logprob: -13.751092910766602

Token 1262: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22989627718925476
    2. '   ' → logprob: -2.104896306991577
    3. ':
' → logprob: -2.854896306991577
    4. ' :' → logprob: -4.229896068572998
    5. '<|end|>' → logprob: -4.979896068572998
    6. ' :
' → logprob: -5.979896068572998
    7. ',' → logprob: -7.729896068572998
    8. ' if' → logprob: -8.229896545410156
    9. '<|end|>' → logprob: -8.354896545410156
    10. '  ' → logprob: -8.604896545410156

Token 1263: 'l' (ID: 75)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5586331486701965
    2. ':' → logprob: -1.6836330890655518
    3. '):
' → logprob: -2.3086330890655518
    4. '
' → logprob: -2.8086330890655518
    5. '<|end|>' → logprob: -3.1836330890655518
    6. ')' → logprob: -4.558633327484131
    7. '#' → logprob: -4.808633327484131
    8. 'v' → logprob: -5.183633327484131
    9. '```' → logprob: -5.433633327484131
    10. '0' → logprob: -6.183633327484131

Token 1264: ''arrivée' (ID: 156076)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3089780807495117
    2. ')' → logprob: -1.6839780807495117
    3. 'e' → logprob: -1.6839780807495117
    4. '')' → logprob: -1.9339780807495117
    5. ''' → logprob: -3.1839780807495117
    6. '`' → logprob: -3.3089780807495117
    7. '#' → logprob: -3.8089780807495117
    8. '-' → logprob: -4.433978080749512
    9. '   ' → logprob: -4.808978080749512
    10. ')
' → logprob: -4.808978080749512

Token 1265: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39439645409584045
    2. ':
' → logprob: -1.269396424293518
    3. '):
' → logprob: -3.5193965435028076
    4. '   ' → logprob: -4.6443963050842285
    5. '):' → logprob: -5.7693963050842285
    6. '       ' → logprob: -6.5193963050842285
    7. ' :' → logprob: -7.6443963050842285
    8. ',' → logprob: -8.519396781921387
    9. ' :
' → logprob: -8.894396781921387
    10. '```' → logprob: -9.269396781921387

Token 1266: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8394428491592407
    2. ' if' → logprob: -1.0894428491592407
    3. '       ' → logprob: -1.5894428491592407
    4. ':' → logprob: -4.714442729949951
    5. 'if' → logprob: -5.089442729949951
    6. '<|end|>' → logprob: -5.464442729949951
    7. ':
' → logprob: -5.839442729949951
    8. '```' → logprob: -6.839442729949951
    9. ' out' → logprob: -6.964442729949951
    10. '	if' → logprob: -7.089442729949951

Token 1267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09716876596212387
    2. ' if' → logprob: -3.3471686840057373
    3. '       ' → logprob: -3.5971686840057373
    4. 'out' → logprob: -3.7221686840057373
    5. '   ' → logprob: -6.097168922424316
    6. 'for' → logprob: -6.097168922424316
    7. '```' → logprob: -7.847168922424316
    8. '#' → logprob: -8.972168922424316
    9. ' out' → logprob: -9.222168922424316
    10. 'deg' → logprob: -9.222168922424316

Token 1268: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.07891656458377838
    2. ' out' → logprob: -2.578916549682617
    3. '   ' → logprob: -10.703916549682617
    4. '	out' → logprob: -12.953916549682617
    5. ' ' → logprob: -14.328916549682617
    6. '(out' → logprob: -15.078916549682617
    7. '       ' → logprob: -15.078916549682617
    8. '[out' → logprob: -16.078916549682617
    9. '  ' → logprob: -16.328916549682617
    10. '
' → logprob: -16.453916549682617

Token 1269: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.7120533811976202e-05
    2. 'deg' → logprob: -11.750017166137695
    3. 's' → logprob: -12.625017166137695
    4. '_de' → logprob: -13.375017166137695
    5. ' de' → logprob: -13.500017166137695
    6. '[v' → logprob: -14.375017166137695
    7. 'v' → logprob: -14.500017166137695
    8. 'out' → logprob: -15.250017166137695
    9. '[' → logprob: -15.500017166137695
    10. 'ge' → logprob: -15.625017166137695

Token 1270: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.0025760135613381863
    2. 'egs' → logprob: -6.127575874328613
    3. 's' → logprob: -8.502575874328613
    4. 'g' → logprob: -8.627575874328613
    5. 'ds' → logprob: -12.877575874328613
    6. 'eg' → logprob: -14.127575874328613
    7. '[s' → logprob: -14.252575874328613
    8. '   ' → logprob: -14.377575874328613
    9. 'de' → logprob: -14.752575874328613
    10. 'qs' → logprob: -14.877575874328613

Token 1271: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.319370302458992e-06
    2. ' [' → logprob: -12.500005722045898
    3. '[' → logprob: -13.750005722045898
    4. 'v' → logprob: -14.500005722045898
    5. '```' → logprob: -17.5000057220459
    6. '[s' → logprob: -17.8750057220459
    7. '>' → logprob: -18.8750057220459
    8. ' v' → logprob: -19.0000057220459
    9. '[
' → logprob: -19.0000057220459
    10. '<v' → logprob: -19.0000057220459

Token 1272: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.38887402415275574
    2. '[v' → logprob: -1.1388740539550781
    3. 'v' → logprob: -6.388874053955078
    4. 's' → logprob: -8.888874053955078
    5. '[' → logprob: -9.513874053955078
    6. '[s' → logprob: -9.763874053955078
    7. ' Rem' → logprob: -11.263874053955078
    8. 'rem' → logprob: -11.763874053955078
    9. ' v' → logprob: -12.138874053955078
    10. ' [' → logprob: -12.263874053955078

Token 1273: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28459182381629944
    2. ' >' → logprob: -1.409591794013977
    3. ']' → logprob: -6.1595916748046875
    4. ')' → logprob: -7.0345916748046875
    5. ']>' → logprob: -8.784591674804688
    6. '   ' → logprob: -9.034591674804688
    7. ')>' → logprob: -9.534591674804688
    8. '[' → logprob: -10.159591674804688
    9. '==' → logprob: -11.409591674804688
    10. ' ==' → logprob: -11.784591674804688

Token 1274: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31329968571662903
    2. ' >' → logprob: -1.3132996559143066
    3. '>=' → logprob: -11.188300132751465
    4. '   ' → logprob: -11.563300132751465
    5. ' >=' → logprob: -12.438300132751465
    6. ' <=' → logprob: -12.563300132751465
    7. '<=' → logprob: -12.688300132751465
    8. '&gt' → logprob: -13.938300132751465
    9. '==' → logprob: -14.563300132751465
    10. ' ' → logprob: -14.688300132751465

Token 1275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009340902324765921
    2. '1' → logprob: -7.00093412399292
    3. '>' → logprob: -11.250933647155762
    4. ' ' → logprob: -11.625933647155762
    5. '   ' → logprob: -15.000933647155762
    6. '```' → logprob: -15.750933647155762
    7. ' >' → logprob: -16.500934600830078
    8. '=' → logprob: -17.500934600830078
    9. '۰' → logprob: -18.500934600830078
    10. '">' → logprob: -18.750934600830078

Token 1276: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003606244223192334
    2. '1' → logprob: -5.62860631942749
    3. ' ' → logprob: -12.253605842590332
    4. '   ' → logprob: -14.503605842590332
    5. '>' → logprob: -14.628605842590332
    6. '```' → logprob: -14.878605842590332
    7. '۰' → logprob: -17.25360679626465
    8. ' >' → logprob: -18.06610679626465
    9. '    ' → logprob: -18.44110679626465
    10. '  ' → logprob: -18.94110679626465

Token 1277: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005371191073209047
    2. ':
' → logprob: -5.25537109375
    3. '           ' → logprob: -9.88037109375
    4. ' and' → logprob: -10.50537109375
    5. '       ' → logprob: -10.63037109375
    6. ' :' → logprob: -10.88037109375
    7. ' or' → logprob: -12.25537109375
    8. ':return' → logprob: -12.75537109375
    9. ':
' → logprob: -13.38037109375
    10. '   ' → logprob: -13.75537109375

Token 1278: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46218395233154297
    2. '           ' → logprob: -1.087183952331543
    3. '       ' → logprob: -4.337183952331543
    4. ':
' → logprob: -4.587183952331543
    5. ' continue' → logprob: -5.712183952331543
    6. '               ' → logprob: -6.087183952331543
    7. ' :' → logprob: -7.212183952331543
    8. '   ' → logprob: -7.337183952331543
    9. ' or' → logprob: -7.962183952331543
    10. '        ' → logprob: -8.087183952331543

Token 1279: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4034968912601471
    2. '       ' → logprob: -1.7784968614578247
    3. ' continue' → logprob: -1.9034968614578247
    4. '	continue' → logprob: -4.653496742248535
    5. '           ' → logprob: -5.778496742248535
    6. '   ' → logprob: -6.778496742248535
    7. '_continue' → logprob: -9.653496742248535
    8. '\t' → logprob: -9.778496742248535
    9. '	       ' → logprob: -10.278496742248535
    10. '	' → logprob: -10.278496742248535

Token 1280: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.38509660959243774
    2. ' continue' → logprob: -1.510096549987793
    3. '           ' → logprob: -2.510096549987793
    4. '       ' → logprob: -4.510096549987793
    5. '	continue' → logprob: -5.510096549987793
    6. '   ' → logprob: -6.385096549987793
    7. '               ' → logprob: -8.510096549987793
    8. ' ' → logprob: -8.635096549987793
    9. '_continue' → logprob: -10.010096549987793
    10. '		' → logprob: -10.135096549987793

Token 1281: ' le' (ID: 505)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.7239879369735718
    2. 'out' → logprob: -1.2239879369735718
    3. ' continue' → logprob: -2.7239880561828613
    4. ' not' → logprob: -3.2239880561828613
    5. ' True' → logprob: -3.7239880561828613
    6. '           ' → logprob: -3.8489880561828613
    7. ' probs' → logprob: -4.348988056182861
    8. 'True' → logprob: -4.473988056182861
    9. ' ' → logprob: -4.723988056182861
    10. 'continue' → logprob: -4.848988056182861

Token 1282: ' sommet' (ID: 130502)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6195576786994934
    2. 'continue' → logprob: -0.8695576786994934
    3. 'out' → logprob: -3.6195576190948486
    4. ' out' → logprob: -5.119557857513428
    5. '       ' → logprob: -6.119557857513428
    6. '	continue' → logprob: -6.494557857513428
    7. '   ' → logprob: -6.619557857513428
    8. '           ' → logprob: -6.619557857513428
    9. '```' → logprob: -7.369557857513428
    10. ' ' → logprob: -7.744557857513428

Token 1283: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2699698209762573
    2. 'out' → logprob: -1.2699698209762573
    3. 'a' → logprob: -2.019969940185547
    4. ' has' → logprob: -2.144969940185547
    5. ' out' → logprob: -2.394969940185547
    6. 's' → logprob: -3.394969940185547
    7. ' n' → logprob: -3.519969940185547
    8. 'v' → logprob: -4.769969940185547
    9. 'n' → logprob: -4.769969940185547
    10. 'has' → logprob: -5.644969940185547

Token 1284: ''a' (ID: 10443)
  Prédit: ''a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.6486266255378723
    2. 'a' → logprob: -0.8986266255378723
    3. 'e' → logprob: -3.1486265659332275
    4. ''' → logprob: -5.148626804351807
    5. ''ont' → logprob: -5.648626804351807
    6. ''est' → logprob: -5.773626804351807
    7. ' a' → logprob: -5.898626804351807
    8. 'o' → logprob: -6.023626804351807
    9. 'out' → logprob: -6.148626804351807
    10. ''ai' → logprob: -6.523626804351807

Token 1285: ' qu' (ID: 474)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.44460687041282654
    2. 'plus' → logprob: -1.194606900215149
    3. 'a' → logprob: -3.9446067810058594
    4. '```' → logprob: -4.444606781005859
    5. 'out' → logprob: -4.569606781005859
    6. ' plus' → logprob: -5.194606781005859
    7. ' pas' → logprob: -5.819606781005859
    8. 's' → logprob: -5.819606781005859
    9. 't' → logprob: -7.569606781005859
    10. '_pas' → logprob: -7.819606781005859

Token 1286: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.9912963509559631
    2. 'un' → logprob: -1.6162962913513184
    3. '```' → logprob: -2.2412962913513184
    4. 'e' → logprob: -2.3662962913513184
    5. 'pas' → logprob: -2.3662962913513184
    6. ''une' → logprob: -3.2412962913513184
    7. 'une' → logprob: -3.3662962913513184
    8. 'out' → logprob: -3.8662962913513184
    9. 'a' → logprob: -4.866296291351318
    10. ''' → logprob: -4.866296291351318

Token 1287: ' seule' (ID: 41983)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -1.1579138040542603
    2. 'se' → logprob: -1.4079138040542603
    3. 'ar' → logprob: -1.5329138040542603
    4. ' ' → logprob: -2.2829136848449707
    5. ' seule' → logprob: -3.4079136848449707
    6. '```' → logprob: -3.6579136848449707
    7. 'are' → logprob: -4.157913684844971
    8. 'out' → logprob: -4.532913684844971
    9. ' seul' → logprob: -5.282913684844971
    10. ' out' → logprob: -5.657913684844971

Token 1288: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.08570391684770584
    2. ' out' → logprob: -3.2107038497924805
    3. ' ' → logprob: -4.0857038497924805
    4. 'ar' → logprob: -4.0857038497924805
    5. ' outgoing' → logprob: -5.5857038497924805
    6. 'out' → logprob: -6.0857038497924805
    7. ' sortie' → logprob: -7.9607038497924805
    8. '```' → logprob: -7.9607038497924805
    9. ' edge' → logprob: -8.33570384979248
    10. ' ' → logprob: -8.58570384979248

Token 1289: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.4055391252040863
    2. 'g' → logprob: -1.9055391550064087
    3. 'c' → logprob: -2.405539035797119
    4. 'r' → logprob: -2.780539035797119
    5. 't' → logprob: -3.905539035797119
    6. '_' → logprob: -5.405539035797119
    7. 'm' → logprob: -6.655539035797119
    8. 'row' → logprob: -6.905539035797119
    9. 'e' → logprob: -7.030539035797119
    10. '```' → logprob: -7.655539035797119

Token 1290: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.8233247995376587
    2. ' sort' → logprob: -1.1983247995376587
    3. '           ' → logprob: -2.073324680328369
    4. '       ' → logprob: -2.948324680328369
    5. ':' → logprob: -3.198324680328369
    6. ',' → logprob: -4.698324680328369
    7. 'out' → logprob: -5.073324680328369
    8. '   ' → logprob: -5.698324680328369
    9. ' out' → logprob: -5.698324680328369
    10. ' :' → logprob: -5.948324680328369

Token 1291: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00932038202881813
    2. '   ' → logprob: -5.384320259094238
    3. '       ' → logprob: -6.759320259094238
    4. 'nante' → logprob: -7.134320259094238
    5. '           ' → logprob: -7.384320259094238
    6. 's' → logprob: -7.509320259094238
    7. 'ant' → logprob: -8.259320259094238
    8. '        ' → logprob: -8.509320259094238
    9. 'n' → logprob: -8.884320259094238
    10. '               ' → logprob: -9.009320259094238

Token 1292: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07682514190673828
    2. ':
' → logprob: -2.8268251419067383
    3. ',' → logprob: -4.826825141906738
    4. '           ' → logprob: -5.451825141906738
    5. ' continue' → logprob: -6.701825141906738
    6. '               ' → logprob: -7.826825141906738
    7. 'continue' → logprob: -8.076825141906738
    8. ':return' → logprob: -8.826825141906738
    9. '.' → logprob: -9.701825141906738
    10. ' :' → logprob: -9.826825141906738

Token 1293: ' l' (ID: 305)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6349579691886902
    2. 'continue' → logprob: -0.8849579691886902
    3. '           ' → logprob: -3.634958028793335
    4. '               ' → logprob: -4.384957790374756
    5. '	continue' → logprob: -4.384957790374756
    6. '   ' → logprob: -6.509957790374756
    7. 'contin' → logprob: -6.634957790374756
    8. '       ' → logprob: -6.884957790374756
    9. '	       ' → logprob: -7.634957790374756
    10. ' ' → logprob: -8.009958267211914

Token 1294: ''en' (ID: 16740)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2963982820510864
    2. ' continue' → logprob: -1.5463982820510864
    3. '#' → logprob: -4.171398162841797
    4. '   ' → logprob: -5.046398162841797
    5. 'e' → logprob: -5.171398162841797
    6. '	continue' → logprob: -5.546398162841797
    7. '       ' → logprob: -6.046398162841797
    8. 'a' → logprob: -6.171398162841797
    9. 'contin' → logprob: -6.171398162841797
    10. 'Continue' → logprob: -6.796398162841797

Token 1295: 'lever' (ID: 43558)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1997576355934143
    2. 't' → logprob: -3.3247575759887695
    3. '```' → logprob: -3.4497575759887695
    4. 'for' → logprob: -3.6997575759887695
    5. '#' → logprob: -4.3247575759887695
    6. 'e' → logprob: -4.5747575759887695
    7. 'd' → logprob: -4.9497575759887695
    8. ' continue' → logprob: -4.9497575759887695
    9. 'semble' → logprob: -5.1997575759887695
    10. 'lever' → logprob: -5.1997575759887695

Token 1296: ' le' (ID: 505)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1798822432756424
    2. 'continue' → logprob: -2.304882287979126
    3. '	continue' → logprob: -3.429882287979126
    4. ' continues' → logprob: -4.179882049560547
    5. '           ' → logprob: -4.554882049560547
    6. '               ' → logprob: -6.179882049560547
    7. '<|end|>' → logprob: -6.554882049560547
    8. '_continue' → logprob: -7.554882049560547
    9. 'contin' → logprob: -8.054882049560547
    10. '   ' → logprob: -8.179882049560547

Token 1297: ' dé' (ID: 2393)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1267632395029068
    2. 'contin' → logprob: -2.501763343811035
    3. ' continue' → logprob: -3.501763343811035
    4. '	continue' → logprob: -6.751763343811035
    5. 'continu' → logprob: -7.126763343811035
    6. ' continues' → logprob: -7.251763343811035
    7. '_continue' → logprob: -7.501763343811035
    8. 's' → logprob: -8.001763343811035
    9. '```' → logprob: -8.251763343811035
    10. 'cont' → logprob: -8.376763343811035

Token 1298: 'connect' (ID: 9291)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.22289565205574036
    2. 'crement' → logprob: -2.347895622253418
    3. 'cre' → logprob: -3.722895622253418
    4. 'cré' → logprob: -3.972895622253418
    5. 'c' → logprob: -4.472895622253418
    6. 'st' → logprob: -4.847895622253418
    7. 'crease' → logprob: -5.097895622253418
    8. 'skip' → logprob: -5.097895622253418
    9. 'crements' → logprob: -5.222895622253418
    10. 's' → logprob: -5.597895622253418

Token 1299: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.48719537258148193
    2. 'e' → logprob: -0.9871953725814819
    3. 'era' → logprob: -4.4871954917907715
    4. 'é' → logprob: -7.7371954917907715
    5. 'rer' → logprob: -8.237195014953613
    6. 'rait' → logprob: -8.362195014953613
    7. 'r' → logprob: -8.987195014953613
    8. 'erer' → logprob: -9.237195014953613
    9. 'ra' → logprob: -9.362195014953613
    10. '#' → logprob: -9.487195014953613

Token 1300: 'ait' (ID: 1271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1301: ',' (ID: 11)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16888582706451416
    2. ' v' → logprob: -2.2938857078552246
    3. ' le' → logprob: -4.293885707855225
    4. ' #' → logprob: -4.918885707855225
    5. ',' → logprob: -5.168885707855225
    6. '       ' → logprob: -5.293885707855225
    7. '#' → logprob: -5.668885707855225
    8. 'the' → logprob: -6.043885707855225
    9. 'le' → logprob: -6.168885707855225
    10. ')' → logprob: -6.418885707855225

Token 1302: ' donc' (ID: 14206)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4224148094654083
    2. 'continue' → logprob: -1.547414779663086
    3. '           ' → logprob: -2.172414779663086
    4. '       ' → logprob: -5.422414779663086
    5. ' continuer' → logprob: -5.672414779663086
    6. '               ' → logprob: -5.922414779663086
    7. '	continue' → logprob: -6.047414779663086
    8. 'contin' → logprob: -6.547414779663086
    9. ' donc' → logprob: -6.797414779663086
    10. '_continue' → logprob: -8.422414779663086

Token 1303: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0038800002075731754
    2. ' continue' → logprob: -5.753880023956299
    3. 'contin' → logprob: -7.378880023956299
    4. '	continue' → logprob: -10.12887954711914
    5. '   ' → logprob: -10.75387954711914
    6. 'continu' → logprob: -11.62887954711914
    7. '```' → logprob: -13.12887954711914
    8. 'pass' → logprob: -13.25387954711914
    9. '       ' → logprob: -13.75387954711914
    10. ' continuer' → logprob: -14.12887954711914

Token 1304: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.007131385616958141
    2. ' continue' → logprob: -5.632131576538086
    3. '	continue' → logprob: -6.507131576538086
    4. 'contin' → logprob: -7.007131576538086
    5. '           ' → logprob: -7.382131576538086
    6. '       ' → logprob: -8.132131576538086
    7. '   ' → logprob: -9.007131576538086
    8. '_continue' → logprob: -11.007131576538086
    9. '               ' → logprob: -11.257131576538086
    10. '	       ' → logprob: -11.257131576538086

Token 1305: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016961266519501805
    2. '       ' → logprob: -7.1266961097717285
    3. '               ' → logprob: -7.5016961097717285
    4. 'continue' → logprob: -9.001696586608887
    5. '
' → logprob: -9.376696586608887
    6. '		' → logprob: -10.501696586608887
    7. ' continue' → logprob: -10.751696586608887
    8. '	       ' → logprob: -11.001696586608887
    9. '<|end|>' → logprob: -11.001696586608887
    10. '.' → logprob: -11.251696586608887

Token 1306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030290482100099325
    2. '       ' → logprob: -6.378028869628906
    3. '		' → logprob: -7.503028869628906
    4. '               ' → logprob: -8.253028869628906
    5. 'continue' → logprob: -8.753028869628906
    6. ' continue' → logprob: -9.003028869628906
    7. '	       ' → logprob: -9.003028869628906
    8. '	' → logprob: -10.253028869628906
    9. '	continue' → logprob: -10.253028869628906
    10. '   ' → logprob: -11.503028869628906

Token 1307: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057506054639816284
    2. 'continue' (adapté à ' continue') → logprob: -3.0575060844421387
    3. ' continue' → logprob: -5.057506084442139
    4. '		' → logprob: -7.182506084442139
    5. '       ' → logprob: -7.432506084442139
    6. '               ' → logprob: -7.682506084442139
    7. '	continue' → logprob: -7.682506084442139
    8. '	       ' → logprob: -8.93250560760498
    9. '   ' → logprob: -9.93250560760498
    10. '_continue' → logprob: -10.68250560760498

Token 1308: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051018837839365005
    2. '<|end|>' → logprob: -5.755101680755615
    3. '
' → logprob: -6.880101680755615
    4. '   ' → logprob: -8.380102157592773
    5. '	' → logprob: -8.380102157592773
    6. '        
' → logprob: -8.505102157592773
    7. '           ' → logprob: -10.255102157592773
    8. '		
' → logprob: -10.630102157592773
    9. '<|end|>' → logprob: -10.630102157592773
    10. '	   ' → logprob: -11.255102157592773

Token 1309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039182258769869804
    2. ' for' → logprob: -6.628918170928955
    3. 'for' → logprob: -7.253918170928955
    4. '   ' → logprob: -7.753918170928955
    5. '
' → logprob: -8.003918647766113
    6. 'v' → logprob: -8.378918647766113
    7. '	' → logprob: -8.628918647766113
    8. '        
' → logprob: -8.878918647766113
    9. '           ' → logprob: -9.003918647766113
    10. '```' → logprob: -9.753918647766113

Token 1310: ' values' (ID: 4824)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012570051476359367
    2. ' for' → logprob: -5.762569904327393
    3. '   ' → logprob: -6.012569904327393
    4. 'out' → logprob: -6.137569904327393
    5. 'for' → logprob: -6.762569904327393
    6. '```' → logprob: -6.887569904327393
    7. '        
' → logprob: -7.887569904327393
    8. ' ' → logprob: -8.13757038116455
    9. '	' → logprob: -8.38757038116455
    10. ' out' → logprob: -8.51257038116455

Token 1311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28139904141426086
    2. '=' → logprob: -1.4063990116119385
    3. 's' → logprob: -9.65639877319336
    4. '       ' → logprob: -9.90639877319336
    5. '=[]' → logprob: -10.28139877319336
    6. '[' → logprob: -10.90639877319336
    7. '   ' → logprob: -10.90639877319336
    8. ',' → logprob: -11.28139877319336
    9. '=[' → logprob: -11.78139877319336
    10. '        ' → logprob: -12.28139877319336

Token 1312: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07153170555830002
    2. '[' → logprob: -2.8215317726135254
    3. '[]
' → logprob: -5.196531772613525
    4. ' []' → logprob: -6.196531772613525
    5. '0' → logprob: -6.821531772613525
    6. '[
' → logprob: -7.696531772613525
    7. ' [' → logprob: -9.196531295776367
    8. '[(' → logprob: -9.946531295776367
    9. '[out' → logprob: -9.946531295776367
    10. 'adj' → logprob: -10.196531295776367

Token 1313: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23214410245418549
    2. ' for' → logprob: -2.4821441173553467
    3. '       ' → logprob: -2.7321441173553467
    4. '(' → logprob: -3.9821441173553467
    5. '[' → logprob: -4.232143878936768
    6. '   ' → logprob: -5.107143878936768
    7. '(
' → logprob: -5.482143878936768
    8. '=' → logprob: -5.857143878936768
    9. '.append' → logprob: -5.857143878936768
    10. ':' → logprob: -6.107143878936768

Token 1314: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024450011551380157
    2. '       ' → logprob: -4.649449825286865
    3. '=' → logprob: -5.024449825286865
    4. '#' → logprob: -6.274449825286865
    5. '.append' → logprob: -6.274449825286865
    6. ' for' → logprob: -6.649449825286865
    7. '(' → logprob: -7.524449825286865
    8. '   ' → logprob: -7.649449825286865
    9. ')' → logprob: -7.899449825286865
    10. '()' → logprob: -7.899449825286865

Token 1315: ' Liste' (ID: 61030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06630632281303406
    2. '[' → logprob: -4.316306114196777
    3. '[]' → logprob: -4.691306114196777
    4. '[v' → logprob: -4.816306114196777
    5. '[]
' → logprob: -5.191306114196777
    6. 'values' → logprob: -5.316306114196777
    7. '[(' → logprob: -5.566306114196777
    8. 'prob' → logprob: -5.566306114196777
    9. 'adj' → logprob: -5.566306114196777
    10. ' for' → logprob: -6.191306114196777

Token 1316: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7995838522911072
    2. '(' → logprob: -1.049583911895752
    3. '=' → logprob: -2.049583911895752
    4. '(
' → logprob: -3.424583911895752
    5. '.append' → logprob: -4.424583911895752
    6. ' =' → logprob: -4.924583911895752
    7. '[' → logprob: -5.174583911895752
    8. '()
' → logprob: -5.549583911895752
    9. '       ' → logprob: -6.174583911895752
    10. '   ' → logprob: -6.424583911895752

Token 1317: ' stock' (ID: 6546)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.13834938406944275
    2. 'values' → logprob: -3.6383492946624756
    3. 'adj' → logprob: -3.6383492946624756
    4. 'val' → logprob: -3.8883492946624756
    5. 't' → logprob: -4.138349533081055
    6. 's' → logprob: -4.263349533081055
    7. '(v' → logprob: -5.013349533081055
    8. 'value' → logprob: -6.138349533081055
    9. '_' → logprob: -6.138349533081055
    10. 'out' → logprob: -6.263349533081055

Token 1318: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0010259009432047606
    2. 'uer' → logprob: -8.001026153564453
    3. '               ' → logprob: -8.501026153564453
    4. '.append' → logprob: -9.126026153564453
    5. 'e' → logprob: -9.501026153564453
    6. 'urer' → logprob: -9.876026153564453
    7. '       ' → logprob: -10.126026153564453
    8. '=[]' → logprob: -10.376026153564453
    9. '[]' → logprob: -10.501026153564453
    10. 'érer' → logprob: -10.876026153564453

Token 1319: ' le' (ID: 505)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6780880093574524
    2. 'v' → logprob: -2.3030879497528076
    3. '(v' → logprob: -2.4280879497528076
    4. 'out' → logprob: -2.5530879497528076
    5. 'prob' → logprob: -2.5530879497528076
    6. 'for' → logprob: -3.4280879497528076
    7. '[v' → logprob: -3.6780879497528076
    8. '(adj' → logprob: -3.6780879497528076
    9. 'values' → logprob: -4.303088188171387
    10. '(prob' → logprob: -4.928088188171387

Token 1320: ' "' (ID: 392)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.2786705195903778
    2. 'adj' → logprob: -2.5286705493927
    3. 'prob' → logprob: -2.9036705493927
    4. 'v' → logprob: -3.0286705493927
    5. 'for' → logprob: -3.9036705493927
    6. 'pro' → logprob: -4.528670310974121
    7. 'val' → logprob: -4.903670310974121
    8. 's' → logprob: -5.153670310974121
    9. 'vals' → logprob: -5.903670310974121
    10. '(s' → logprob: -6.778670310974121

Token 1321: 'co' (ID: 1191)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.053741693496704
    2. 'out' → logprob: -1.178741693496704
    3. 'v' → logprob: -1.428741693496704
    4. ' prob' → logprob: -3.928741693496704
    5. 'pro' → logprob: -4.178741455078125
    6. ' v' → logprob: -4.428741455078125
    7. 's' → logprob: -4.803741455078125
    8. 'val' → logprob: -4.928741455078125
    9. 'adj' → logprob: -4.928741455078125
    10. 'diff' → logprob: -5.678741455078125

Token 1322: 'ût' (ID: 24581)
  Prédit: 'unts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unts' → logprob: -1.4309593439102173
    2. 'sts' → logprob: -1.8059593439102173
    3. 'nst' → logprob: -1.9309593439102173
    4. 'nt' → logprob: -2.0559592247009277
    5. 'nts' → logprob: -2.5559592247009277
    6. '[' → logprob: -3.6809592247009277
    7. 'r' → logprob: -3.6809592247009277
    8. 's' → logprob: -3.6809592247009277
    9. 'st' → logprob: -3.8059592247009277
    10. 'ut' → logprob: -3.9309592247009277

Token 1323: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10242775827646255
    2. ' des' → logprob: -2.9774277210235596
    3. ')' → logprob: -4.602427959442139
    4. 'des' → logprob: -5.352427959442139
    5. '[]' → logprob: -5.602427959442139
    6. '(s' → logprob: -5.602427959442139
    7. ' =' → logprob: -5.852427959442139
    8. ' de' → logprob: -5.977427959442139
    9. '[' → logprob: -6.102427959442139
    10. '_' → logprob: -6.352427959442139

Token 1324: ' associé' (ID: 152099)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2276991605758667
    2. 'for' → logprob: -2.1026992797851562
    3. '   ' → logprob: -2.4776992797851562
    4. '[' → logprob: -2.7276992797851562
    5. ' des' → logprob: -2.7276992797851562
    6. '=' → logprob: -3.1026992797851562
    7. ' =' → logprob: -3.3526992797851562
    8. '       ' → logprob: -3.3526992797851562
    9. '.append' → logprob: -3.3526992797851562
    10. '[v' → logprob: -3.4776992797851562

Token 1325: ' à' (ID: 1221)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9864732027053833
    2. '_' → logprob: -1.7364732027053833
    3. 's' → logprob: -1.8614732027053833
    4. 'des' → logprob: -2.7364730834960938
    5. ' aux' → logprob: -2.7364730834960938
    6. ' =' → logprob: -2.9864730834960938
    7. '_des' → logprob: -3.6114730834960938
    8. '=' → logprob: -4.486473083496094
    9. '[' → logprob: -4.611473083496094
    10. ' de' → logprob: -4.861473083496094

Token 1326: ' chaque' (ID: 21194)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.41785764694213867
    2. 'v' → logprob: -1.1678576469421387
    3. '[v' → logprob: -4.792857646942139
    4. 'out' → logprob: -5.167857646942139
    5. '(v' → logprob: -5.292857646942139
    6. '(adj' → logprob: -5.917857646942139
    7. 'each' → logprob: -6.042857646942139
    8. ' adj' → logprob: -6.542857646942139
    9. ' v' → logprob: -7.292857646942139
    10. 'neighbor' → logprob: -7.292857646942139

Token 1327: ' ar' (ID: 646)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4643649160861969
    2. 'adj' → logprob: -1.7143648862838745
    3. 'vo' → logprob: -2.714365005493164
    4. 'ar' → logprob: -2.964365005493164
    5. ' v' → logprob: -3.839365005493164
    6. 'neighbor' → logprob: -3.964365005493164
    7. 'out' → logprob: -4.464365005493164
    8. 't' → logprob: -5.089365005493164
    9. ' voisin' → logprob: -5.964365005493164
    10. 'arc' → logprob: -6.089365005493164

Token 1328: 'ête' (ID: 16808)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13319948315620422
    2. 'ête' → logprob: -2.758199453353882
    3. 'r' → logprob: -3.133199453353882
    4. 'cs' → logprob: -5.133199691772461
    5. 'g' → logprob: -5.758199691772461
    6. 't' → logprob: -6.258199691772461
    7. 'e' → logprob: -6.883199691772461
    8. 'cc' → logprob: -7.008199691772461
    9. 'rc' → logprob: -7.883199691772461
    10. 'ce' → logprob: -7.883199691772461

Token 1329: ' sort' (ID: 4506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.816717803478241
    2. 's' → logprob: -1.9417178630828857
    3. '[v' → logprob: -2.6917178630828857
    4. 'v' → logprob: -2.8167178630828857
    5. 'sort' → logprob: -2.8167178630828857
    6. 'out' → logprob: -2.9417178630828857
    7. '   ' → logprob: -3.0667178630828857
    8. '(v' → logprob: -3.3167178630828857
    9. '.append' → logprob: -3.9417178630828857
    10. '_out' → logprob: -4.066717624664307

Token 1330: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0016263832803815603
    2. 'antes' → logprob: -6.876626491546631
    3. 'ing' → logprob: -8.126626014709473
    4. 'ant' → logprob: -8.626626014709473
    5. 'ente' → logprob: -10.876626014709473
    6. '[' → logprob: -10.876626014709473
    7. '[]' → logprob: -11.001626014709473
    8. 'e' → logprob: -11.876626014709473
    9. '[v' → logprob: -11.876626014709473
    10. 'out' → logprob: -12.001626014709473

Token 1331: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7480782270431519
    2. '   ' → logprob: -1.8730782270431519
    3. '[v' → logprob: -2.2480783462524414
    4. '(v' → logprob: -2.4980783462524414
    5. '<|end|>' → logprob: -3.2480783462524414
    6. '.append' → logprob: -3.8730783462524414
    7. 'for' → logprob: -3.9980783462524414
    8. '[' → logprob: -4.123078346252441
    9. '(' → logprob: -4.623078346252441
    10. ')' → logprob: -4.748078346252441

Token 1332: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006716555915772915
    2. ' v' → logprob: -5.006716728210449
    3. '	v' → logprob: -14.63171672821045
    4. 'adj' → logprob: -14.88171672821045
    5. '[v' → logprob: -16.006715774536133
    6. ')v' → logprob: -16.506715774536133
    7. '```' → logprob: -16.506715774536133
    8. '(v' → logprob: -18.006715774536133
    9. '   ' → logprob: -18.256715774536133
    10. ' adj' → logprob: -18.381715774536133

Token 1333: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.0038003118243068457
    2. '[v' → logprob: -5.878800392150879
    3. '```' → logprob: -7.753800392150879
    4. '[' → logprob: -9.128800392150879
    5. 'v' → logprob: -9.628800392150879
    6. 'Adj' → logprob: -9.753800392150879
    7. '[]' → logprob: -10.003800392150879
    8. ']' → logprob: -10.003800392150879
    9. '   ' → logprob: -10.003800392150879
    10. ' Rem' → logprob: -10.253800392150879

Token 1334: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1334310919046402
    2. ':' → logprob: -3.5084311962127686
    3. '   ' → logprob: -3.5084311962127686
    4. ')' → logprob: -4.2584309577941895
    5. ' =' → logprob: -4.5084309577941895
    6. '.' → logprob: -5.0084309577941895
    7. '
' → logprob: -5.2584309577941895
    8. 'for' → logprob: -5.5084309577941895
    9. ':
' → logprob: -5.6334309577941895
    10. ',' → logprob: -5.7584309577941895

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7522894740104675
    2. ' for' → logprob: -1.3772895336151123
    3. 'for' → logprob: -1.5022895336151123
    4. '[' → logprob: -4.377289295196533
    5. '   ' → logprob: -4.502289295196533
    6. '               ' → logprob: -4.752289295196533
    7. '           ' → logprob: -5.502289295196533
    8. '```' → logprob: -5.627289295196533
    9. '[v' → logprob: -6.002289295196533
    10. '[
' → logprob: -6.502289295196533

Token 1336: ' prob' (ID: 4921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0703950747847557
    2. '       ' → logprob: -3.445394992828369
    3. ' for' → logprob: -3.695394992828369
    4. 'v' → logprob: -5.695394992828369
    5. '```' → logprob: -5.945394992828369
    6. 'out' → logprob: -6.320394992828369
    7. 'num' → logprob: -6.695394992828369
    8. 'prob' (adapté à ' prob') → logprob: -6.945394992828369
    9. '           ' → logprob: -8.695395469665527
    10. '``' → logprob: -8.820395469665527

Token 1337: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22024357318878174
    2. ' =' → logprob: -2.470243453979492
    3. 'v' → logprob: -3.220243453979492
    4. ',' → logprob: -3.470243453979492
    5. 's' → logprob: -4.345243453979492
    6. '[v' → logprob: -4.345243453979492
    7. '_values' → logprob: -5.595243453979492
    8. '[' → logprob: -5.845243453979492
    9. 'values' → logprob: -6.220243453979492
    10. 'for' → logprob: -6.845243453979492

Token 1338: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.3707566261291504
    2. 'ex' → logprob: -1.4957566261291504
    3. ' exp' → logprob: -2.7457566261291504
    4. 'exp' → logprob: -3.9957566261291504
    5. 'out' → logprob: -6.12075662612915
    6. ' out' → logprob: -7.24575662612915
    7. 'pro' → logprob: -9.120756149291992
    8. '=' → logprob: -10.620756149291992
    9. ' prob' → logprob: -10.745756149291992
    10. ' =' → logprob: -11.120756149291992

Token 1339: 'pe' (ID: 424)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.017845526337623596
    2. 'deg' → logprob: -4.392845630645752
    3. 'out' → logprob: -5.517845630645752
    4. 'Deg' → logprob: -8.142845153808594
    5. '=' → logprob: -8.642845153808594
    6. 'd' → logprob: -8.642845153808594
    7. 'v' → logprob: -8.767845153808594
    8. 'De' → logprob: -8.892845153808594
    9. '_de' → logprob: -9.142845153808594
    10. ' =' → logprob: -9.517845153808594

Token 1340: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29886218905448914
    2. '=' → logprob: -1.4238622188568115
    3. ',' → logprob: -4.048861980438232
    4. ' ,' → logprob: -10.17386245727539
    5. '[' → logprob: -10.79886245727539
    6. ' ' → logprob: -11.04886245727539
    7. '[v' → logprob: -11.29886245727539
    8. ',v' → logprob: -11.79886245727539
    9. '	' → logprob: -12.54886245727539
    10. '=v' → logprob: -12.67386245727539

Token 1341: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.007679741829633713
    2. 'out' → logprob: -4.8826799392700195
    3. ' num' → logprob: -10.50767993927002
    4. ' ' → logprob: -11.38267993927002
    5. '	out' → logprob: -11.38267993927002
    6. ' ex' → logprob: -12.25767993927002
    7. 'num' → logprob: -12.50767993927002
    8. ' ' → logprob: -12.75767993927002
    9. ' =' → logprob: -13.13267993927002
    10. ' prob' → logprob: -13.50767993927002

Token 1342: 'deg' (ID: 30546)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0007616263465024531
    2. 'deg' → logprob: -7.62576150894165
    3. '_de' → logprob: -9.000761985778809
    4. '=' → logprob: -9.250761985778809
    5. ' =' → logprob: -10.625761985778809
    6. 's' → logprob: -12.375761985778809
    7. '   ' → logprob: -12.375761985778809
    8. 'out' → logprob: -12.500761985778809
    9. ' de' → logprob: -13.500761985778809
    10. 'eg' → logprob: -13.500761985778809

Token 1343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2602589428424835
    2. '=' → logprob: -1.6352589130401611
    3. '[v' → logprob: -3.510258913040161
    4. '[' → logprob: -5.51025915145874
    5. ' [' → logprob: -9.510258674621582
    6. ',' → logprob: -9.510258674621582
    7. '       ' → logprob: -10.760258674621582
    8. '   ' → logprob: -10.885258674621582
    9. ' ' → logprob: -11.010258674621582
    10. 'v' → logprob: -11.135258674621582

Token 1344: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.16067646443843842
    2. ' probs' → logprob: -1.9106764793395996
    3. 'prob' → logprob: -7.9106764793396
    4. '   ' → logprob: -9.910676002502441
    5. '	pro' → logprob: -11.160676002502441
    6. '_probs' → logprob: -11.910676002502441
    7. ' prob' → logprob: -12.785676002502441
    8. ' ' → logprob: -12.910676002502441
    9. '    ' → logprob: -12.910676002502441
    10. '       ' → logprob: -13.660676002502441

Token 1345: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.500005722045898
    3. 'v' → logprob: -13.125005722045898
    4. ' [' → logprob: -16.8750057220459
    5. ',v' → logprob: -17.1250057220459
    6. '[val' → logprob: -17.1250057220459
    7. ',' → logprob: -17.2500057220459
    8. '	v' → logprob: -17.7500057220459
    9. '```' → logprob: -18.0000057220459
    10. ' v' → logprob: -18.0000057220459

Token 1346: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.004121142439544201
    2. '[v' → logprob: -5.50412130355835
    3. '[' → logprob: -10.254120826721191
    4. ' Rem' → logprob: -12.629120826721191
    5. ' [' → logprob: -14.254120826721191
    6. '_rem' → logprob: -14.504120826721191
    7. 'v' → logprob: -14.504120826721191
    8. 'rem' → logprob: -14.879120826721191
    9. '][' → logprob: -15.004120826721191
    10. ']' → logprob: -15.004120826721191

Token 1347: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004295757971704006
    2. ' ,' → logprob: -6.129295825958252
    3. ']' → logprob: -6.254295825958252
    4. '],' → logprob: -9.004295349121094
    5. '[v' → logprob: -11.254295349121094
    6. ',
' → logprob: -11.629295349121094
    7. ' ]' → logprob: -11.879295349121094
    8. '][' → logprob: -12.004295349121094
    9. '[' → logprob: -12.129295349121094
    10. ',v' → logprob: -12.129295349121094

Token 1348: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.014168446883559227
    2. ' exp' → logprob: -4.2641682624816895
    3. '   ' → logprob: -13.014168739318848
    4. 'ex' → logprob: -13.014168739318848
    5. '	exp' → logprob: -15.639168739318848
    6. ' ' → logprob: -15.889168739318848
    7. '       ' → logprob: -17.01416778564453
    8. '
' → logprob: -17.88916778564453
    9. '(exp' → logprob: -17.88916778564453
    10. '  ' → logprob: -18.01416778564453

Token 1349: 'es' (ID: 268)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.022208349779248238
    2. 'out' → logprob: -4.272208213806152
    3. 'eg' → logprob: -6.147208213806152
    4. 'deg' → logprob: -6.147208213806152
    5. 'd' → logprob: -6.647208213806152
    6. 's' → logprob: -7.272208213806152
    7. ' out' → logprob: -7.397208213806152
    8. 'egs' → logprob: -7.897208213806152
    9. '=' → logprob: -8.397208213806152
    10. 'es' → logprob: -9.272208213806152

Token 1350: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.491498531133402e-06
    2. '[out' → logprob: -12.000009536743164
    3. 'v' → logprob: -13.375009536743164
    4. '[' → logprob: -14.125009536743164
    5. ',v' → logprob: -15.000009536743164
    6. '(v' → logprob: -15.750009536743164
    7. 'out' → logprob: -16.000009536743164
    8. '```' → logprob: -16.375009536743164
    9. ' [' → logprob: -17.125009536743164
    10. '[var' → logprob: -17.375009536743164

Token 1351: 'Rem' (ID: 6882)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5509944558143616
    2. 'Rem' → logprob: -1.0509943962097168
    3. 'v' → logprob: -2.675994396209717
    4. '],' → logprob: -6.050994396209717
    5. ']' → logprob: -6.675994396209717
    6. '[' → logprob: -8.050994873046875
    7. '   ' → logprob: -8.300994873046875
    8. ' v' → logprob: -8.550994873046875
    9. '][' → logprob: -8.550994873046875
    10. ',v' → logprob: -8.800994873046875

Token 1352: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010359067237004638
    2. '],' → logprob: -7.626035690307617
    3. ' ,' → logprob: -7.751035690307617
    4. ']' → logprob: -9.251035690307617
    5. '       ' → logprob: -12.376035690307617
    6. ',
' → logprob: -12.376035690307617
    7. '           ' → logprob: -12.501035690307617
    8. ',v' → logprob: -12.501035690307617
    9. '               ' → logprob: -13.126035690307617
    10. '   ' → logprob: -14.501035690307617

Token 1353: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0010374527191743255
    2. ' out' → logprob: -6.87603759765625
    3. '   ' → logprob: -12.37603759765625
    4. '       ' → logprob: -14.75103759765625
    5. ' ' → logprob: -17.12603759765625
    6. '	out' → logprob: -17.25103759765625
    7. '  ' → logprob: -17.62603759765625
    8. '           ' → logprob: -17.62603759765625
    9. '    ' → logprob: -18.00103759765625
    10. '     ' → logprob: -18.75103759765625

Token 1354: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.006269324570894241
    2. 'eg' → logprob: -5.631269454956055
    3. 'deg' → logprob: -6.381269454956055
    4. 'egs' → logprob: -7.631269454956055
    5. 'ge' → logprob: -7.756269454956055
    6. 'g' → logprob: -10.631269454956055
    7. '=' → logprob: -12.381269454956055
    8. 'out' → logprob: -12.381269454956055
    9. 's' → logprob: -12.506269454956055
    10. '   ' → logprob: -12.506269454956055

Token 1355: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.0017200425500050187
    2. 'g' → logprob: -6.376719951629639
    3. ' gs' → logprob: -11.751720428466797
    4. 'egs' → logprob: -12.126720428466797
    5. 's' → logprob: -13.626720428466797
    6. ' ' → logprob: -13.751720428466797
    7. ' g' → logprob: -14.626720428466797
    8. 'Gs' → logprob: -15.251720428466797
    9. '[' → logprob: -15.626720428466797
    10. '_g' → logprob: -15.876720428466797

Token 1356: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.875
    3. 'v' → logprob: -16.25
    4. '```' → logprob: -16.75
    5. '   ' → logprob: -17.875
    6. ' [' → logprob: -18.125
    7. '(v' → logprob: -18.125
    8. ',v' → logprob: -18.375
    9. '<v' → logprob: -19.25
    10. '[out' → logprob: -19.375

Token 1357: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.006911680102348328
    2. ']' → logprob: -5.131911754608154
    3. ']+' → logprob: -7.881911754608154
    4. '   ' → logprob: -8.006911277770996
    5. 'v' → logprob: -9.131911277770996
    6. '],' → logprob: -10.006911277770996
    7. ' ]' → logprob: -10.631911277770996
    8. '  ' → logprob: -11.506911277770996
    9. '_rem' → logprob: -11.631911277770996
    10. ']-' → logprob: -11.881911277770996

Token 1358: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00351716042496264
    2. ']
' → logprob: -6.378517150878906
    3. ',' → logprob: -6.628517150878906
    4. '       ' → logprob: -8.378517150878906
    5. ' ]' → logprob: -9.003517150878906
    6. '],' → logprob: -9.628517150878906
    7. ')' → logprob: -10.253517150878906
    8. ']
' → logprob: -11.378517150878906
    9. '   ' → logprob: -11.503517150878906
    10. '           ' → logprob: -12.503517150878906

Token 1359: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11054813861846924
    2. ',' → logprob: -2.8605480194091797
    3. '        
' → logprob: -4.86054801940918
    4. '<|end|>' → logprob: -4.86054801940918
    5. ' for' → logprob: -5.36054801940918
    6. '   ' → logprob: -5.36054801940918
    7. '
' → logprob: -5.86054801940918
    8. '```' → logprob: -5.86054801940918
    9. '=' → logprob: -5.98554801940918
    10. 'for' → logprob: -6.11054801940918

Token 1360: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9562274813652039
    2. ',' → logprob: -1.4562275409698486
    3. 'for' → logprob: -1.5812275409698486
    4. ' for' → logprob: -2.2062275409698486
    5. '```' → logprob: -4.0812273025512695
    6. '[' → logprob: -5.0812273025512695
    7. '<|end|>' → logprob: -5.0812273025512695
    8. '   ' → logprob: -5.3312273025512695
    9. '=' → logprob: -5.4562273025512695
    10. '
' → logprob: -5.7062273025512695

Token 1361: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012581112794578075
    2. '       ' → logprob: -4.7625813484191895
    3. ' for' → logprob: -6.1375813484191895
    4. 'values' → logprob: -7.0125813484191895
    5. 'v' → logprob: -8.012580871582031
    6. '```' → logprob: -8.637580871582031
    7. 'prob' → logprob: -8.762580871582031
    8. '   ' → logprob: -9.137580871582031
    9. 'out' → logprob: -9.887580871582031
    10. '           ' → logprob: -10.387580871582031

Token 1362: ' récup' (ID: 62856)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10328839719295502
    2. ' for' → logprob: -3.353288412094116
    3. '=' → logprob: -3.728288412094116
    4. '       ' → logprob: -3.978288412094116
    5. '           ' → logprob: -5.478288173675537
    6. '   ' → logprob: -5.603288173675537
    7. 'v' → logprob: -5.853288173675537
    8. 'continue' → logprob: -5.978288173675537
    9. '#' → logprob: -6.228288173675537
    10. '
' → logprob: -6.978288173675537

Token 1363: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0055797407403588295
    2. 'ére' → logprob: -5.505579948425293
    3. 'ere' → logprob: -7.755579948425293
    4. 're' → logprob: -8.005579948425293
    5. 'èr' → logprob: -8.130579948425293
    6. 'érer' → logprob: -8.630579948425293
    7. 'érez' → logprob: -9.755579948425293
    8. '       ' → logprob: -9.755579948425293
    9. '   ' → logprob: -10.255579948425293
    10. 'ères' → logprob: -10.630579948425293

Token 1364: ' les' (ID: 1341)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.5484268069267273
    2. 'prob' → logprob: -1.548426866531372
    3. '1' → logprob: -2.423426866531372
    4. ' out' → logprob: -3.548426866531372
    5. ' prob' → logprob: -4.173426628112793
    6. '```' → logprob: -4.173426628112793
    7. '0' → logprob: -4.298426628112793
    8. 'pro' → logprob: -4.923426628112793
    9. 'values' → logprob: -4.923426628112793
    10. 'v' → logprob: -4.923426628112793

Token 1365: ' valeurs' (ID: 73668)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.842318058013916
    2. 'prob' → logprob: -1.342318058013916
    3. ' v' → logprob: -2.342318058013916
    4. '```' → logprob: -2.717318058013916
    5. 'adj' → logprob: -3.467318058013916
    6. '_' → logprob: -4.217318058013916
    7. ' _' → logprob: -4.342318058013916
    8. 'pro' → logprob: -4.592318058013916
    9. 'values' → logprob: -4.717318058013916
    10. '1' → logprob: -4.717318058013916

Token 1366: ' associ' (ID: 5516)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.9628264904022217
    2. '=' → logprob: -1.4628264904022217
    3. '[' → logprob: -1.7128264904022217
    4. ' =' → logprob: -2.4628264904022217
    5. ',' → logprob: -3.9628264904022217
    6. 'v' → logprob: -4.087826728820801
    7. '   ' → logprob: -4.212826728820801
    8. '```' → logprob: -4.712826728820801
    9. '       ' → logprob: -4.962826728820801
    10. 'for' → logprob: -4.962826728820801

Token 1367: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0056816875003278255
    2. 'é' → logprob: -5.88068151473999
    3. 'és' → logprob: -6.63068151473999
    4. '   ' → logprob: -7.25568151473999
    5. 'à' → logprob: -8.755681991577148
    6. '       ' → logprob: -8.755681991577148
    7. '```' → logprob: -9.255681991577148
    8. 'u' → logprob: -9.505681991577148
    9. 'es' → logprob: -9.505681991577148
    10. 'ée' → logprob: -9.630681991577148

Token 1368: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03456554934382439
    2. ',' → logprob: -3.9095654487609863
    3. '<|end|>' → logprob: -5.034565448760986
    4. ' =' → logprob: -6.784565448760986
    5. '=' → logprob: -6.784565448760986
    6. '	' → logprob: -7.284565448760986
    7. '	       ' → logprob: -7.409565448760986
    8. ' for' → logprob: -7.409565448760986
    9. ')' → logprob: -7.534565448760986
    10. '   ' → logprob: -7.784565448760986

Token 1369: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001323691918514669
    2. ' v' → logprob: -6.876323699951172
    3. 'adj' → logprob: -9.251323699951172
    4. 'values' → logprob: -9.626323699951172
    5. 'pro' → logprob: -10.251323699951172
    6. '```' → logprob: -10.501323699951172
    7. 'prob' → logprob: -11.001323699951172
    8. ' ' → logprob: -11.376323699951172
    9. '   ' → logprob: -11.376323699951172
    10. '[v' → logprob: -11.876323699951172

Token 1370: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.00010652327910065651
    2. ' Rem' → logprob: -9.375106811523438
    3. '   ' → logprob: -12.375106811523438
    4. '[' → logprob: -12.750106811523438
    5. 'em' → logprob: -12.750106811523438
    6. '_rem' → logprob: -12.750106811523438
    7. '```' → logprob: -13.500106811523438
    8. 'Out' → logprob: -14.125106811523438
    9. 'out' → logprob: -14.375106811523438
    10. '
' → logprob: -14.625106811523438

Token 1371: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03913181275129318
    2. '<|end|>' → logprob: -3.5391318798065186
    3. ',' → logprob: -5.0391316413879395
    4. ')' → logprob: -7.4141316413879395
    5. '<|end|>' → logprob: -7.5391316413879395
    6. '
' → logprob: -8.039132118225098
    7. '        
' → logprob: -8.039132118225098
    8. '```' → logprob: -8.414132118225098
    9. '	' → logprob: -8.539132118225098
    10. '[' → logprob: -8.914132118225098

Token 1372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1064731627702713
    2. ' for' → logprob: -3.606473207473755
    3. '<|end|>' → logprob: -3.606473207473755
    4. '[' → logprob: -4.481472969055176
    5. '```' → logprob: -4.731472969055176
    6. '	' → logprob: -4.856472969055176
    7. '	for' → logprob: -5.356472969055176
    8. 'for' → logprob: -5.356472969055176
    9. '	       ' → logprob: -6.106472969055176
    10. '        
' → logprob: -6.731472969055176

Token 1373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23617534339427948
    2. '       ' → logprob: -1.611175298690796
    3. ' for' → logprob: -4.736175537109375
    4. '```' → logprob: -7.111175537109375
    5. 'v' → logprob: -7.361175537109375
    6. '   ' → logprob: -8.486175537109375
    7. '           ' → logprob: -9.111175537109375
    8. '	for' → logprob: -9.486175537109375
    9. '	' → logprob: -10.986175537109375
    10. 'out' → logprob: -11.236175537109375

Token 1374: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011616885662078857
    2. 'w' → logprob: -5.5116167068481445
    3. ' v' → logprob: -5.7616167068481445
    4. 'e' → logprob: -7.0116167068481445
    5. 'succ' → logprob: -7.6366167068481445
    6. 't' → logprob: -7.7616167068481445
    7. 'to' → logprob: -7.8866167068481445
    8. 'n' → logprob: -8.386616706848145
    9. 'nbr' → logprob: -8.761616706848145
    10. 'neighbor' → logprob: -8.886616706848145

Token 1375: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00041935223271138966
    2. 'in' → logprob: -8.750419616699219
    3. ' in' → logprob: -9.125419616699219
    4. 'for' → logprob: -9.625419616699219
    5. '               ' → logprob: -10.875419616699219
    6. ' for' → logprob: -11.250419616699219
    7. 'v' → logprob: -12.125419616699219
    8. '```' → logprob: -12.250419616699219
    9. 'Rem' → logprob: -12.250419616699219
    10. ' ' → logprob: -12.500419616699219

Token 1376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11292164772748947
    2. 'in' → logprob: -2.237921714782715
    3. '	in' → logprob: -9.987921714782715
    4. '        ' → logprob: -11.237921714782715
    5. ' ' → logprob: -11.487921714782715
    6. '_in' → logprob: -11.737921714782715
    7. 'In' → logprob: -12.362921714782715
    8. ',' → logprob: -12.987921714782715
    9. '   ' → logprob: -13.237921714782715
    10. '```' → logprob: -13.237921714782715

Token 1377: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005234002135694027
    2. ' adj' → logprob: -5.2552337646484375
    3. 'range' → logprob: -15.755233764648438
    4. '(adj' → logprob: -16.755233764648438
    5. 'ad' → logprob: -17.255233764648438
    6. '   ' → logprob: -19.380233764648438
    7. 'out' → logprob: -19.505233764648438
    8. ' range' → logprob: -19.630233764648438
    9. ' ' → logprob: -19.880233764648438
    10. '[' → logprob: -20.005233764648438

Token 1378: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00015181333583313972
    2. '[v' → logprob: -8.875151634216309
    3. '[s' → logprob: -11.875151634216309
    4. 'v' → logprob: -12.500151634216309
    5. 's' → logprob: -14.750151634216309
    6. '[
' → logprob: -15.125151634216309
    7. '2' → logprob: -15.875151634216309
    8. '[' → logprob: -16.000152587890625
    9. '```' → logprob: -16.250152587890625
    10. ']' → logprob: -16.500152587890625

Token 1379: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -10.625025749206543
    3. 'Rem' → logprob: -14.375025749206543
    4. 'v' → logprob: -15.000025749206543
    5. '```' → logprob: -16.625024795532227
    6. '[
' → logprob: -17.000024795532227
    7. ' [' → logprob: -17.250024795532227
    8. '\[' → logprob: -18.250024795532227
    9. '(v' → logprob: -18.375024795532227
    10. '<v' → logprob: -18.375024795532227

Token 1380: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.02107931673526764
    2. '[v' → logprob: -3.8960793018341064
    3. 'v' → logprob: -8.146079063415527
    4. '[' → logprob: -8.646079063415527
    5. '_rem' → logprob: -10.521079063415527
    6. ' Rem' → logprob: -10.521079063415527
    7. 'rem' → logprob: -11.896079063415527
    8. '```' → logprob: -13.146079063415527
    9. ' v' → logprob: -13.271079063415527
    10. '[
' → logprob: -13.771079063415527

Token 1381: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3589823544025421
    2. ']:
' → logprob: -1.2339823246002197
    3. ':' → logprob: -4.733982563018799
    4. ':
' → logprob: -7.358982563018799
    5. '       ' → logprob: -7.733982563018799
    6. ']' → logprob: -8.48398208618164
    7. ']:
' → logprob: -8.73398208618164
    8. '[v' → logprob: -9.48398208618164
    9. '           ' → logprob: -10.23398208618164
    10. ']:

' → logprob: -10.23398208618164

Token 1382: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003505992004647851
    2. '               ' → logprob: -7.003506183624268
    3. '#' → logprob: -7.878506183624268
    4. '       ' → logprob: -8.00350570678711
    5. '            
' → logprob: -8.25350570678711
    6. '<|end|>' → logprob: -8.25350570678711
    7. '
' → logprob: -8.75350570678711
    8. ' #' → logprob: -8.87850570678711
    9. '            ' → logprob: -8.87850570678711
    10. '   ' → logprob: -8.87850570678711

Token 1383: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037192381569184363
    2. 'values' → logprob: -9.375371932983398
    3. '	       ' → logprob: -9.500371932983398
    4. '```' → logprob: -9.625371932983398
    5. '(values' → logprob: -10.500371932983398
    6. '   ' → logprob: -10.750371932983398
    7. '       ' → logprob: -11.000371932983398
    8. '               ' → logprob: -11.125371932983398
    9. '[' → logprob: -11.125371932983398
    10. '<|end|>' → logprob: -12.000371932983398

Token 1384: ' Pour' (ID: 13931)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.18379943072795868
    2. '           ' → logprob: -2.0587995052337646
    3. 'val' → logprob: -4.8087992668151855
    4. 'cost' → logprob: -4.8087992668151855
    5. '   ' → logprob: -5.1837992668151855
    6. 'values' → logprob: -5.4337992668151855
    7. 'n' → logprob: -6.4337992668151855
    8. 'value' → logprob: -6.4337992668151855
    9. 'v' → logprob: -6.4337992668151855
    10. '#' → logprob: -6.6837992668151855

Token 1385: ' chaque' (ID: 21194)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.027001623064279556
    2. ' v' → logprob: -3.6520016193389893
    3. 'value' → logprob: -8.77700138092041
    4. 'prob' → logprob: -9.02700138092041
    5. 'out' → logprob: -9.15200138092041
    6. 'values' → logprob: -9.52700138092041
    7. 'pro' → logprob: -10.27700138092041
    8. 'val' → logprob: -10.27700138092041
    9. 'range' → logprob: -10.65200138092041
    10. ' out' → logprob: -10.90200138092041

Token 1386: ' voisin' (ID: 145411)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07960748672485352
    2. ' v' → logprob: -2.5796074867248535
    3. 'out' → logprob: -8.579607009887695
    4. 'neighbor' → logprob: -9.079607009887695
    5. '```' → logprob: -9.329607009887695
    6. ' voisin' → logprob: -9.454607009887695
    7. 'adj' → logprob: -9.579607009887695
    8. '   ' → logprob: -10.204607009887695
    9. 'vo' → logprob: -10.204607009887695
    10. 'ar' → logprob: -11.204607009887695

Token 1387: ' vers' (ID: 3640)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8233386278152466
    2. 'in' → logprob: -1.1983386278152466
    3. ':' → logprob: -1.5733386278152466
    4. '<|end|>' → logprob: -3.823338508605957
    5. ' :' → logprob: -4.823338508605957
    6. 'v' → logprob: -4.823338508605957
    7. ':
' → logprob: -5.573338508605957
    8. '<|end|>' → logprob: -5.823338508605957
    9. '[v' → logprob: -6.698338508605957
    10. '(v' → logprob: -6.823338508605957

Token 1388: ' lequel' (ID: 55154)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.027137605473399162
    2. '<|end|>' → logprob: -4.777137756347656
    3. 'which' → logprob: -5.652137756347656
    4. ' ' → logprob: -5.902137756347656
    5. ' lequel' → logprob: -5.902137756347656
    6. '```' → logprob: -5.902137756347656
    7. ' v' → logprob: -6.277137756347656
    8. ' laquelle' → logprob: -6.527137756347656
    9. ' which' → logprob: -6.777137756347656
    10. '   ' → logprob: -8.027137756347656

Token 1389: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11536866426467896
    2. ' v' → logprob: -2.240368604660034
    3. 'on' → logprob: -7.740368843078613
    4. 'adj' → logprob: -7.865368843078613
    5. '   ' → logprob: -7.990368843078613
    6. 'out' → logprob: -8.240368843078613
    7. '```' → logprob: -8.490368843078613
    8. ' on' → logprob: -8.490368843078613
    9. '(v' → logprob: -8.615368843078613
    10. 'prob' → logprob: -9.115368843078613

Token 1390: 'Rem' (ID: 6882)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030637383460998535
    2. 'Rem' → logprob: -3.530637264251709
    3. 'v' → logprob: -8.030637741088867
    4. ' v' → logprob: -8.405637741088867
    5. '   ' → logprob: -8.905637741088867
    6. '```' → logprob: -9.780637741088867
    7. ' ' → logprob: -10.655637741088867
    8. '_rem' → logprob: -11.155637741088867
    9. 'rem' → logprob: -11.280637741088867
    10. '[v' → logprob: -11.280637741088867

Token 1391: ' peut' (ID: 9216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.815466046333313
    2. ':' → logprob: -2.3154659271240234
    3. '.' → logprob: -2.4404659271240234
    4. '<|end|>' → logprob: -2.4404659271240234
    5. '       ' → logprob: -2.9404659271240234
    6. '2' → logprob: -3.3154659271240234
    7. '   ' → logprob: -3.4404659271240234
    8. '```' → logprob: -3.6904659271240234
    9. 'v' → logprob: -4.065465927124023
    10. 'in' → logprob: -4.190465927124023

Token 1392: ' aller' (ID: 18383)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.013907026499509811
    2. 'se' → logprob: -4.513906955718994
    3. 'all' → logprob: -6.388906955718994
    4. ' aller' → logprob: -7.263906955718994
    5. 'env' → logprob: -9.263907432556152
    6. 'part' → logprob: -9.388907432556152
    7. '   ' → logprob: -10.138907432556152
    8. 'contin' → logprob: -10.263907432556152
    9. ' se' → logprob: -10.388907432556152
    10. '’aller' → logprob: -10.513907432556152

Token 1393: ' directement' (ID: 52317)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5980662107467651
    2. '           ' → logprob: -1.0980662107467651
    3. ':
' → logprob: -2.2230663299560547
    4. '<|end|>' → logprob: -5.848066329956055
    5. '               ' → logprob: -6.098066329956055
    6. ',' → logprob: -6.723066329956055
    7. '<|end|>' → logprob: -7.473066329956055
    8. '       ' → logprob: -8.348066329956055
    9. '   ' → logprob: -8.598066329956055
    10. ' :' → logprob: -8.598066329956055

Token 1394: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.731086254119873
    2. ':
' → logprob: -1.106086254119873
    3. '           ' → logprob: -1.731086254119873
    4. ',' → logprob: -5.856086254119873
    5. '       ' → logprob: -6.106086254119873
    6. '               ' → logprob: -6.731086254119873
    7. '<|end|>' → logprob: -6.731086254119873
    8. '   ' → logprob: -7.231086254119873
    9. ' :' → logprob: -7.356086254119873
    10. ' :
' → logprob: -7.856086254119873

Token 1395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009120595059357584
    2. '   ' → logprob: -7.500912189483643
    3. 'values' → logprob: -9.125911712646484
    4. '	       ' → logprob: -9.500911712646484
    5. '       ' → logprob: -10.125911712646484
    6. '               ' → logprob: -10.500911712646484
    7. '```' → logprob: -10.500911712646484
    8. '(values' → logprob: -11.000911712646484
    9. ' values' → logprob: -11.125911712646484
    10. '	values' → logprob: -11.750911712646484

Token 1396: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44000479578971863
    2. 'num' → logprob: -2.190004825592041
    3. '               ' → logprob: -2.815004825592041
    4. 'values' → logprob: -2.940004825592041
    5. 'prob' → logprob: -3.065004825592041
    6. 'val' → logprob: -4.190004825592041
    7. ' values' → logprob: -4.315004825592041
    8. ' num' → logprob: -4.440004825592041
    9. '```' → logprob: -5.065004825592041
    10. 'value' → logprob: -5.315004825592041

Token 1397: ' Calcul' (ID: 57243)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.3589022159576416
    2. 'val' → logprob: -1.8589022159576416
    3. 'value' → logprob: -2.3589022159576416
    4. 'delta' → logprob: -3.9839022159576416
    5. 'cost' → logprob: -4.6089019775390625
    6. 'num' → logprob: -4.8589019775390625
    7. 'tmp' → logprob: -5.3589019775390625
    8. 'v' → logprob: -6.4839019775390625
    9. 'diff' → logprob: -6.7339019775390625
    10. 'temp' → logprob: -7.2339019775390625

Token 1398: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8995622396469116
    2. '               ' → logprob: -1.1495622396469116
    3. '           ' → logprob: -1.6495622396469116
    4. '=' → logprob: -2.774562358856201
    5. '                   ' → logprob: -5.399562358856201
    6. 's' → logprob: -5.649562358856201
    7. ' de' → logprob: -6.274562358856201
    8. ' des' → logprob: -6.649562358856201
    9. 'ation' → logprob: -6.774562358856201
    10. 'v' → logprob: -6.899562358856201

Token 1399: ''une' (ID: 13337)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.6436418890953064
    2. '(prob' → logprob: -1.5186419486999512
    3. '   ' → logprob: -2.893641948699951
    4. ' prob' → logprob: -3.268641948699951
    5. ' (' → logprob: -3.268641948699951
    6. 's' → logprob: -3.768641948699951
    7. 'ex' → logprob: -4.268641948699951
    8. '       ' → logprob: -4.393641948699951
    9. '(' → logprob: -4.518641948699951
    10. '(pro' → logprob: -4.643641948699951

Token 1400: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.150390863418579
    2. 'prob' → logprob: -1.275390863418579
    3. ' prob' → logprob: -2.650390863418579
    4. 'delta' → logprob: -3.025390863418579
    5. '(prob' → logprob: -3.275390863418579
    6. 'v' → logprob: -3.400390863418579
    7. 'value' → logprob: -3.900390863418579
    8. ' (' → logprob: -4.150390625
    9. 'co' → logprob: -4.275390625
    10. '(pro' → logprob: -4.275390625

Token 1401: ' représentant' (ID: 136122)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2709965407848358
    2. '=' → logprob: -2.145996570587158
    3. '           ' → logprob: -2.395996570587158
    4. '               ' → logprob: -4.770996570587158
    5. '```' → logprob: -5.520996570587158
    6. '   ' → logprob: -6.020996570587158
    7. '                   ' → logprob: -6.270996570587158
    8. 'v' → logprob: -6.270996570587158
    9. 'prob' → logprob: -6.270996570587158
    10. 'val' → logprob: -6.395996570587158

Token 1402: ' la' (ID: 557)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.34757786989212036
    2. ' prob' → logprob: -1.5975778102874756
    3. '(prob' → logprob: -3.7225778102874756
    4. 'ex' → logprob: -3.7225778102874756
    5. 'exp' → logprob: -4.722578048706055
    6. '-pro' → logprob: -5.097578048706055
    7. ' exp' → logprob: -5.472578048706055
    8. ' (' → logprob: -5.597578048706055
    9. ' ex' → logprob: -5.597578048706055
    10. 'pro' → logprob: -5.972578048706055

Token 1403: ' contribution' (ID: 26735)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.08995658904314041
    2. 'ex' → logprob: -3.464956521987915
    3. 'exp' → logprob: -3.839956521987915
    4. ' prob' → logprob: -4.214956760406494
    5. '(prob' → logprob: -5.089956760406494
    6. 'pro' → logprob: -5.714956760406494
    7. 'out' → logprob: -6.089956760406494
    8. '-pro' → logprob: -6.339956760406494
    9. '(pro' → logprob: -6.839956760406494
    10. ' exp' → logprob: -7.214956760406494

Token 1404: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6324770450592041
    2. '               ' → logprob: -1.507477045059204
    3. 'prob' → logprob: -3.132477045059204
    4. '                   ' → logprob: -3.257477045059204
    5. '```' → logprob: -3.257477045059204
    6. ' =' → logprob: -3.382477045059204
    7. '=' → logprob: -3.757477045059204
    8. '(prob' → logprob: -4.257476806640625
    9. 'de' → logprob: -4.757476806640625
    10. '(' → logprob: -5.257476806640625

Token 1405: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.798573911190033
    2. ' l' → logprob: -1.1735739707946777
    3. ' cette' → logprob: -1.6735739707946777
    4. 'v' → logprob: -3.1735739707946777
    5. ' chaque' → logprob: -5.548573970794678
    6. ' v' → logprob: -5.548573970794678
    7. 'c' → logprob: -7.673573970794678
    8. ' la' → logprob: -7.798573970794678
    9. 'la' → logprob: -8.17357349395752
    10. 'each' → logprob: -8.42357349395752

Token 1406: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6284790635108948
    2. 'v' → logprob: -1.00347900390625
    3. ' ar' → logprob: -3.25347900390625
    4. 'are' → logprob: -4.00347900390625
    5. ' v' → logprob: -4.75347900390625
    6. 'adj' → logprob: -5.00347900390625
    7. '```' → logprob: -5.12847900390625
    8. ' ' → logprob: -5.50347900390625
    9. 'edge' → logprob: -5.50347900390625
    10. ' are' → logprob: -6.37847900390625

Token 1407: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.6038929224014282
    2. 'c' → logprob: -1.3538929224014282
    3. 'r' → logprob: -1.8538929224014282
    4. 't' → logprob: -4.978892803192139
    5. '�' → logprob: -5.103892803192139
    6. 'te' → logprob: -5.603892803192139
    7. '^' → logprob: -5.853892803192139
    8. 'ê' → logprob: -6.103892803192139
    9. '**' → logprob: -6.603892803192139
    10. 'êt' → logprob: -6.728892803192139

Token 1408: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.398490846157074
    2. '=' → logprob: -1.5234909057617188
    3. '           ' → logprob: -3.1484909057617188
    4. '               ' → logprob: -3.2734909057617188
    5. '                   ' → logprob: -4.648490905761719
    6. '```' → logprob: -5.523490905761719
    7. ' +=' → logprob: -6.148490905761719
    8. '   ' → logprob: -6.648490905761719
    9. ')' → logprob: -6.773490905761719
    10. ':' → logprob: -6.773490905761719

Token 1409: ' l' (ID: 305)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.37807607650756836
    2. 'exp' → logprob: -1.6280760765075684
    3. 'ex' → logprob: -3.6280760765075684
    4. 'pro' → logprob: -3.8780760765075684
    5. 'out' → logprob: -3.8780760765075684
    6. ' prob' → logprob: -4.378076076507568
    7. 'ans' → logprob: -4.628076076507568
    8. 'values' → logprob: -4.628076076507568
    9. ' exp' → logprob: -5.753076076507568
    10. '-pro' → logprob: -5.878076076507568

Token 1410: ''esp' (ID: 73244)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0902668237686157
    2. 'a' → logprob: -1.2152668237686157
    3. ''' → logprob: -2.340266704559326
    4. ''exp' → logprob: -2.340266704559326
    5. 'exp' → logprob: -2.465266704559326
    6. ''esp' → logprob: -3.340266704559326
    7. 'pro' → logprob: -4.715266704559326
    8. 'e' → logprob: -4.715266704559326
    9. ''ex' → logprob: -5.090266704559326
    10. ''s' → logprob: -5.715266704559326

Token 1411: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.00042149791261181235
    2. 'érence' → logprob: -8.250421524047852
    3. 'érience' → logprob: -9.375421524047852
    4. 'er' → logprob: -11.000421524047852
    5. 'èce' → logprob: -11.375421524047852
    6. 'ér' → logprob: -11.500421524047852
    7. 'é' → logprob: -11.625421524047852
    8. 'èr' → logprob: -12.250421524047852
    9. 'érer' → logprob: -12.875421524047852
    10. 'ération' → logprob: -13.250421524047852

Token 1412: ' totale' (ID: 52898)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0742862224578857
    2. '               ' → logprob: -1.4492862224578857
    3. ' =' → logprob: -1.4492862224578857
    4. '=' → logprob: -2.9492862224578857
    5. '                   ' → logprob: -3.1992862224578857
    6. '   ' → logprob: -4.199286460876465
    7. ',' → logprob: -4.449286460876465
    8. ':' → logprob: -4.699286460876465
    9. '(v' → logprob: -4.824286460876465
    10. '(' → logprob: -5.074286460876465

Token 1413: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15248264372348785
    2. '               ' → logprob: -2.652482748031616
    3. ',' → logprob: -3.152482748031616
    4. ' =' → logprob: -4.152482509613037
    5. '=' → logprob: -5.402482509613037
    6. ' *' → logprob: -6.652482509613037
    7. '(' → logprob: -6.902482509613037
    8. '                   ' → logprob: -7.402482509613037
    9. '.' → logprob: -7.652482509613037
    10. ')' → logprob: -7.652482509613037

Token 1414: ' en' (ID: 469)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.7471829652786255
    2. '               ' → logprob: -1.7471829652786255
    3. '           ' → logprob: -1.9971829652786255
    4. ' prob' → logprob: -2.122182846069336
    5. ' (' → logprob: -3.122182846069336
    6. '(prob' → logprob: -3.747182846069336
    7. '                   ' → logprob: -4.497182846069336
    8. '            ' → logprob: -6.122182846069336
    9. 'v' → logprob: -6.372182846069336
    10. ' values' → logprob: -6.622182846069336

Token 1415: ' tenant' (ID: 38634)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.33555296063423157
    2. '           ' → logprob: -2.085552930831909
    3. 'prob' → logprob: -2.085552930831909
    4. 'pro' → logprob: -4.710553169250488
    5. ' prob' → logprob: -5.335553169250488
    6. '               ' → logprob: -5.460553169250488
    7. ' values' → logprob: -5.710553169250488
    8. ')' → logprob: -5.835553169250488
    9. '                   ' → logprob: -6.085553169250488
    10. '+' → logprob: -6.335553169250488

Token 1416: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.023514380678534508
    2. 'comp' → logprob: -4.023514270782471
    3. 'account' → logprob: -6.523514270782471
    4. '           ' → logprob: -6.773514270782471
    5. '   ' → logprob: -7.398514270782471
    6. '       ' → logprob: -7.398514270782471
    7. '```' → logprob: -8.273514747619629
    8. 'à' → logprob: -8.398514747619629
    9. '               ' → logprob: -8.523514747619629
    10. '=' → logprob: -9.398514747619629

Token 1417: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3454577326774597
    2. ' du' → logprob: -2.0954577922821045
    3. '           ' → logprob: -2.7204577922821045
    4. '               ' → logprob: -3.2204577922821045
    5. '            ' → logprob: -3.5954577922821045
    6. 'de' → logprob: -4.595457553863525
    7. '              ' → logprob: -5.470457553863525
    8. ' des' → logprob: -5.595457553863525
    9. 'prob' → logprob: -5.720457553863525
    10. '                ' → logprob: -6.220457553863525

Token 1418: ' probabil' (ID: 76890)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.2738484740257263
    2. 'pro' → logprob: -2.148848533630371
    3. ' prob' → logprob: -2.148848533630371
    4. ' probs' → logprob: -6.023848533630371
    5. 'out' → logprob: -7.023848533630371
    6. ' probabil' → logprob: -7.148848533630371
    7. ' pro' → logprob: -8.023848533630371
    8. 'v' → logprob: -8.398848533630371
    9. 'p' → logprob: -9.023848533630371
    10. ' out' → logprob: -9.148848533630371

Token 1419: 'ités' (ID: 12479)
  Prédit: 'té'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'té' → logprob: -0.7140763998031616
    2. 't' → logprob: -0.9640763998031616
    3. 'ités' → logprob: -2.089076519012451
    4. 'ité' → logprob: -5.714076519012451
    5. 'és' → logprob: -6.964076519012451
    6. 'tes' → logprob: -8.214076042175293
    7. 'é' → logprob: -8.339076042175293
    8. 'étés' → logprob: -8.839076042175293
    9. ' té' → logprob: -9.464076042175293
    10. '```' → logprob: -10.214076042175293

Token 1420: ' direct' (ID: 2823)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2100449949502945
    2. ',' → logprob: -2.585045099258423
    3. ' /' → logprob: -3.335045099258423
    4. '/' → logprob: -3.835045099258423
    5. '            ' → logprob: -3.835045099258423
    6. ' et' → logprob: -4.460044860839844
    7. '               ' → logprob: -5.335044860839844
    8. ' and' → logprob: -5.460044860839844
    9. '          ' → logprob: -6.585044860839844
    10. ')' → logprob: -6.835044860839844

Token 1421: 'es' (ID: 268)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4250504970550537
    2. 'é' → logprob: -2.4250504970550537
    3. 'ion' → logprob: -2.6750504970550537
    4. ' /' → logprob: -3.0500504970550537
    5. 'et' → logprob: -3.1750504970550537
    6. 'e' → logprob: -4.050050735473633
    7. '           ' → logprob: -4.550050735473633
    8. 'és' → logprob: -4.550050735473633
    9. 'ions' → logprob: -4.800050735473633
    10. '       ' → logprob: -5.175050735473633

Token 1422: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9042079448699951
    2. ',' → logprob: -2.279207944869995
    3. 'et' → logprob: -2.404207944869995
    4. '                   ' → logprob: -2.404207944869995
    5. ' et' → logprob: -2.404207944869995
    6. 'and' → logprob: -2.654207944869995
    7. '           ' → logprob: -2.779207944869995
    8. ' and' → logprob: -3.279207944869995
    9. '+' → logprob: -4.279208183288574
    10. ')' → logprob: -5.154208183288574

Token 1423: ' invers' (ID: 38721)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.43210020661354065
    2. 'inverse' → logprob: -2.057100296020508
    3. 'esp' → logprob: -2.432100296020508
    4. 'exp' → logprob: -2.932100296020508
    5. ' inverse' → logprob: -4.057100296020508
    6. 'l' → logprob: -4.307100296020508
    7. ' ex' → logprob: -4.807100296020508
    8. 'ind' → logprob: -4.932100296020508
    9. ' invers' → logprob: -5.182100296020508
    10. 'in' → logprob: -5.307100296020508

Token 1424: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.650399386882782
    2. 'ées' → logprob: -1.4003994464874268
    3. 'e' → logprob: -2.6503994464874268
    4. 'és' → logprob: -2.7753994464874268
    5. 'ément' → logprob: -2.7753994464874268
    6. 'é' → logprob: -4.275399208068848
    7. 'ée' → logprob: -4.525399208068848
    8. '   ' → logprob: -6.025399208068848
    9. 'v' → logprob: -6.650399208068848
    10. '```' → logprob: -6.900399208068848

Token 1425: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2427334487438202
    2. ',' → logprob: -1.6177334785461426
    3. '               ' → logprob: -4.867733478546143
    4. '[' → logprob: -6.867733478546143
    5. '```' → logprob: -6.992733478546143
    6. 'v' → logprob: -7.117733478546143
    7. '                   ' → logprob: -7.367733478546143
    8. ',v' → logprob: -7.492733478546143
    9. '[v' → logprob: -7.617733478546143
    10. ',
' → logprob: -7.742733478546143

Token 1426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12423628568649292
    2. '               ' → logprob: -2.2492363452911377
    3. '                   ' → logprob: -5.624236106872559
    4. '```' → logprob: -6.874236106872559
    5. ',' → logprob: -6.999236106872559
    6. ' ' → logprob: -6.999236106872559
    7. '            ' → logprob: -7.249236106872559
    8. ' (' → logprob: -7.874236106872559
    9. '(' → logprob: -7.999236106872559
    10. '   ' → logprob: -8.249236106872559

Token 1427: ' value' (ID: 1432)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.7651357054710388
    2. 'val' → logprob: -1.3901357650756836
    3. 'values' → logprob: -2.2651357650756836
    4. 'value' (adapté à ' value') → logprob: -2.5151357650756836
    5. '           ' → logprob: -4.015135765075684
    6. ' val' → logprob: -4.015135765075684
    7. '               ' → logprob: -4.390135765075684
    8. 'tmp' → logprob: -4.765135765075684
    9. ' prob' → logprob: -4.890135765075684
    10. ' value' → logprob: -5.140135765075684

Token 1428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520710229873657
    2. ' =' → logprob: -1.5020710229873657
    3. '           ' → logprob: -10.377071380615234
    4. '               ' → logprob: -10.502071380615234
    5. '[' → logprob: -11.002071380615234
    6. ',' → logprob: -11.127071380615234
    7. 'v' → logprob: -11.627071380615234
    8. '=v' → logprob: -12.002071380615234
    9. '   ' → logprob: -12.127071380615234
    10. '[v' → logprob: -12.377071380615234

Token 1429: ' ex' (ID: 513)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.27958253026008606
    2. ' prob' → logprob: -1.5295825004577637
    3. '(prob' → logprob: -4.279582500457764
    4. '-pro' → logprob: -5.529582500457764
    5. ' (' → logprob: -5.654582500457764
    6. '(' → logprob: -6.779582500457764
    7. '   ' → logprob: -6.904582500457764
    8. 'pro' → logprob: -7.404582500457764
    9. ' -' → logprob: -7.529582500457764
    10. '           ' → logprob: -7.654582500457764

Token 1430: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.01902555488049984
    2. 'pes' → logprob: -4.2690253257751465
    3. 'p' → logprob: -5.5190253257751465
    4. 'pet' → logprob: -7.7690253257751465
    5. 'ves' → logprob: -9.769025802612305
    6. 'pev' → logprob: -10.144025802612305
    7. 'ps' → logprob: -10.269025802612305
    8. 'po' → logprob: -10.394025802612305
    9. 'es' → logprob: -10.394025802612305
    10. 'e' → logprob: -10.644025802612305

Token 1431: '*' (ID: 9)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.005852235481142998
    2. 'Re' → logprob: -5.255852222442627
    3. '[' → logprob: -7.880852222442627
    4. ' /' → logprob: -9.005852699279785
    5. '/v' → logprob: -9.630852699279785
    6. '   ' → logprob: -11.380852699279785
    7. '```' → logprob: -11.880852699279785
    8. '/' → logprob: -12.005852699279785
    9. ' [' → logprob: -12.755852699279785
    10. '       ' → logprob: -12.880852699279785

Token 1432: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.03901614248752594
    2. 'pro' → logprob: -3.4140162467956543
    3. ' prob' → logprob: -6.164016246795654
    4. ' probs' → logprob: -6.539016246795654
    5. 'v' → logprob: -7.414016246795654
    6. '1' → logprob: -7.664016246795654
    7. '(prob' → logprob: -8.039015769958496
    8. '[' → logprob: -9.664015769958496
    9. '/' → logprob: -9.789015769958496
    10. '[v' → logprob: -10.039015769958496

Token 1433: 'Re' (ID: 720)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3772449791431427
    2. '/' → logprob: -1.3772449493408203
    3. '[v' → logprob: -3.5022449493408203
    4. ' -' → logprob: -4.25224494934082
    5. '/v' → logprob: -5.12724494934082
    6. '*' → logprob: -5.37724494934082
    7. ' *' → logprob: -5.75224494934082
    8. '-' → logprob: -6.37724494934082
    9. '[' → logprob: -7.50224494934082
    10. 'Re' → logprob: -7.62724494934082

Token 1434: 'vs' (ID: 16121)
  Prédit: '/v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/v' → logprob: -1.1091477870941162
    2. '/' → logprob: -1.4841477870941162
    3. 's' → logprob: -1.8591477870941162
    4. ' /' → logprob: -1.9841477870941162
    5. 'v' → logprob: -2.609147787094116
    6. '[' → logprob: -3.859147787094116
    7. '[v' → logprob: -3.859147787094116
    8. 'vs' → logprob: -4.359148025512695
    9. '/s' → logprob: -4.859148025512695
    10. '/div' → logprob: -5.734148025512695

Token 1435: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003244990948587656
    2. '[' → logprob: -8.125324249267578
    3. 'v' → logprob: -10.500324249267578
    4. ' [' → logprob: -15.125324249267578
    5. '(v' → logprob: -15.625324249267578
    6. ' v' → logprob: -16.250324249267578
    7. '[s' → logprob: -17.000324249267578
    8. '[
' → logprob: -17.125324249267578
    9. '[val' → logprob: -17.125324249267578
    10. '```' → logprob: -17.375324249267578

Token 1436: '2' (ID: 17)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.6425453424453735
    2. 'Rem' → logprob: -1.2675453424453735
    3. 'v' → logprob: -1.8925453424453735
    4. '2' → logprob: -3.267545223236084
    5. ' v' → logprob: -6.642545223236084
    6. '[' → logprob: -7.267545223236084
    7. '           ' → logprob: -8.017545700073242
    8. 'rem' → logprob: -8.392545700073242
    9. '   ' → logprob: -8.642545700073242
    10. ' [' → logprob: -8.642545700073242

Token 1437: ']' (ID: 60)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5281555652618408
    2. ' /' → logprob: -0.9031555652618408
    3. '[v' → logprob: -5.778155326843262
    4. '/v' → logprob: -6.778155326843262
    5. ' -' → logprob: -7.653155326843262
    6. '-' → logprob: -10.028155326843262
    7. ')' → logprob: -10.403155326843262
    8. '[' → logprob: -10.403155326843262
    9. '           ' → logprob: -10.528155326843262
    10. ')/' → logprob: -10.778155326843262

Token 1438: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.024814296513795853
    2. '-' → logprob: -3.8998143672943115
    3. '/' → logprob: -6.274814128875732
    4. ' /' → logprob: -6.524814128875732
    5. '+' → logprob: -7.899814128875732
    6. ' +' → logprob: -8.27481460571289
    7. ' ' → logprob: -9.64981460571289
    8. '/v' → logprob: -9.89981460571289
    9. '/pro' → logprob: -10.39981460571289
    10. ' *' → logprob: -10.52481460571289

Token 1439: ' ex' (ID: 513)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.062185026705265045
    2. ' prob' → logprob: -3.437185049057007
    3. 'pro' → logprob: -4.187184810638428
    4. '(prob' → logprob: -4.687184810638428
    5. '(' → logprob: -7.062184810638428
    6. '(pro' → logprob: -7.187184810638428
    7. ' (' → logprob: -7.562184810638428
    8. 'exp' → logprob: -7.937184810638428
    9. ' probs' → logprob: -7.937184810638428
    10. '   ' → logprob: -8.562185287475586

Token 1440: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0012841640273109078
    2. 'pes' → logprob: -7.501284122467041
    3. 'p' → logprob: -8.2512845993042
    4. 'pet' → logprob: -8.7512845993042
    5. 'po' → logprob: -9.3762845993042
    6. 'te' → logprob: -9.7512845993042
    7. 'pose' → logprob: -10.8762845993042
    8. 'prob' → logprob: -10.8762845993042
    9. 'pos' → logprob: -11.0012845993042
    10. 'pec' → logprob: -11.2512845993042

Token 1441: 'Re' (ID: 720)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.014803599566221237
    2. 'Re' → logprob: -4.389803409576416
    3. '[-' → logprob: -6.764803409576416
    4. '[' → logprob: -7.389803409576416
    5. ' -' → logprob: -8.889803886413574
    6. 'Rem' → logprob: -9.514803886413574
    7. '-' → logprob: -9.639803886413574
    8. 'v' → logprob: -10.014803886413574
    9. '*v' → logprob: -10.764803886413574
    10. '-v' → logprob: -11.139803886413574

Token 1442: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.023367417976260185
    2. 's' → logprob: -4.023367404937744
    3. 'v' → logprob: -5.398367404937744
    4. 'ves' → logprob: -7.398367404937744
    5. 'sv' → logprob: -10.773367881774902
    6. 'Vs' → logprob: -11.398367881774902
    7. 'vsp' → logprob: -11.648367881774902
    8. 'ps' → logprob: -12.398367881774902
    9. 'vers' → logprob: -12.773367881774902
    10. 'Re' → logprob: -13.023367881774902

Token 1443: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.47626737493556e-05
    2. 'v' → logprob: -10.75003433227539
    3. '[' → logprob: -11.25003433227539
    4. '```' → logprob: -16.00003433227539
    5. '[val' → logprob: -17.25003433227539
    6. ' v' → logprob: -17.50003433227539
    7. '(v' → logprob: -17.62503433227539
    8. '[
' → logprob: -17.75003433227539
    9. '
' → logprob: -18.00003433227539
    10. '\[' → logprob: -18.12503433227539

Token 1444: '2' (ID: 17)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02408769354224205
    2. 'v' → logprob: -3.77408766746521
    3. '[' → logprob: -7.274087905883789
    4. ']' → logprob: -10.399087905883789
    5. '][' → logprob: -10.399087905883789
    6. '(v' → logprob: -11.149087905883789
    7. '```' → logprob: -11.274087905883789
    8. '[s' → logprob: -11.524087905883789
    9. '   ' → logprob: -11.899087905883789
    10. ' v' → logprob: -12.024087905883789

Token 1445: ']*' (ID: 18579)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01244266051799059
    2. '-' → logprob: -4.512442588806152
    3. '*' → logprob: -7.262442588806152
    4. ' *' → logprob: -7.512442588806152
    5. ')' → logprob: -9.512442588806152
    6. ' ' → logprob: -10.512442588806152
    7. '[v' → logprob: -11.012442588806152
    8. '-pro' → logprob: -12.387442588806152
    9. '```' → logprob: -12.387442588806152
    10. ' )' → logprob: -12.762442588806152

Token 1446: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -7.314625690924004e-05
    2. 'pro' → logprob: -10.125073432922363
    3. '(prob' → logprob: -11.250073432922363
    4. '   ' → logprob: -12.125073432922363
    5. ' prob' → logprob: -12.125073432922363
    6. '-pro' → logprob: -12.625073432922363
    7. '```' → logprob: -13.000073432922363
    8. 'p' → logprob: -14.500073432922363
    9. '`' → logprob: -14.625073432922363
    10. '           ' → logprob: -14.625073432922363

Token 1447: ' +' (ID: 659)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.0354132317006588
    2. '/' → logprob: -3.4104132652282715
    3. '<|end|>' → logprob: -7.1604132652282715
    4. '/v' → logprob: -7.9104132652282715
    5. '[v' → logprob: -7.9104132652282715
    6. '[' → logprob: -9.535412788391113
    7. ' *' → logprob: -10.285412788391113
    8. ' /
' → logprob: -10.785412788391113
    9. '*' → logprob: -10.910412788391113
    10. 'v' → logprob: -11.035412788391113

Token 1448: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.013196938671171665
    2. ' prob' → logprob: -5.13819694519043
    3. '-pro' → logprob: -5.51319694519043
    4. '(prob' → logprob: -6.88819694519043
    5. 'pro' → logprob: -7.13819694519043
    6. '-' → logprob: -8.01319694519043
    7. '   ' → logprob: -8.63819694519043
    8. '(-' → logprob: -8.76319694519043
    9. '           ' → logprob: -9.01319694519043
    10. ' -' → logprob: -9.01319694519043

Token 1449: '*' (ID: 9)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4515126347541809
    2. '/' → logprob: -1.7015125751495361
    3. ' *' → logprob: -1.8265125751495361
    4. '*' → logprob: -4.451512813568115
    5. '<|end|>' → logprob: -5.451512813568115
    6. '[' → logprob: -6.701512813568115
    7. '[v' → logprob: -6.951512813568115
    8. '          ' → logprob: -8.201512336730957
    9. '/v' → logprob: -8.201512336730957
    10. ')' → logprob: -8.701512336730957

Token 1450: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -8.93579563125968e-05
    2. ' prob' → logprob: -9.750089645385742
    3. 'pro' → logprob: -11.125089645385742
    4. '(prob' → logprob: -12.000089645385742
    5. '-pro' → logprob: -12.250089645385742
    6. 'out' → logprob: -13.500089645385742
    7. '_prob' → logprob: -14.500089645385742
    8. 'ex' → logprob: -14.500089645385742
    9. ' ' → logprob: -14.750089645385742
    10. '-' → logprob: -14.875089645385742

Token 1451: 'Re' (ID: 720)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.31132370233535767
    2. ' /' → logprob: -1.686323642730713
    3. '/v' → logprob: -3.561323642730713
    4. '[v' → logprob: -4.311323642730713
    5. '_out' → logprob: -4.811323642730713
    6. 'Re' → logprob: -4.936323642730713
    7. '2' → logprob: -5.061323642730713
    8. '[out' → logprob: -5.186323642730713
    9. '/out' → logprob: -5.561323642730713
    10. 'out' → logprob: -6.186323642730713

Token 1452: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.19999893009662628
    2. 'gs' → logprob: -1.8249989748001099
    3. 's' → logprob: -4.07499885559082
    4. 'ds' → logprob: -6.69999885559082
    5. 'g' → logprob: -6.94999885559082
    6. 'v' → logprob: -7.32499885559082
    7. 'Vs' → logprob: -9.94999885559082
    8. 'd' → logprob: -10.19999885559082
    9. 'ms' → logprob: -11.19999885559082
    10. 'gv' → logprob: -11.32499885559082

Token 1453: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00012654215970542282
    2. '[' → logprob: -9.000126838684082
    3. 'v' → logprob: -13.000126838684082
    4. '```' → logprob: -14.875126838684082
    5. '[out' → logprob: -15.750126838684082
    6. '[s' → logprob: -16.000125885009766
    7. '\[' → logprob: -16.125125885009766
    8. '[
' → logprob: -16.875125885009766
    9. '(v' → logprob: -17.000125885009766
    10. ' [' → logprob: -17.375125885009766

Token 1454: '2' (ID: 17)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20274661481380463
    2. '[v' → logprob: -1.7027466297149658
    3. '2' → logprob: -6.702746391296387
    4. 'Rem' → logprob: -10.077746391296387
    5. ' v' → logprob: -10.327746391296387
    6. '(v' → logprob: -12.077746391296387
    7. '   ' → logprob: -12.327746391296387
    8. '	v' → logprob: -12.452746391296387
    9. '$v' → logprob: -12.577746391296387
    10. '```' → logprob: -12.952746391296387

Token 1455: ']
' (ID: 1592)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6186850070953369
    2. '/' → logprob: -1.243685007095337
    3. '*' → logprob: -2.743685007095337
    4. ' *' → logprob: -2.993685007095337
    5. '/v' → logprob: -3.368685007095337
    6. '*(' → logprob: -4.743684768676758
    7. ' -' → logprob: -4.868684768676758
    8. ')' → logprob: -6.743684768676758
    9. '-' → logprob: -6.993684768676758
    10. ' ' → logprob: -7.118684768676758

Token 1456: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1457: ' values' (ID: 4824)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6900039315223694
    2. ' values' → logprob: -0.8150039315223694
    3. 'values' (adapté à ' values') → logprob: -3.4400038719177246
    4. ')' → logprob: -4.940003871917725
    5. '	values' → logprob: -5.190003871917725
    6. ',' → logprob: -5.815003871917725
    7. '(values' → logprob: -6.065003871917725
    8. '       ' → logprob: -6.690003871917725
    9. '               ' → logprob: -6.815003871917725
    10. '.values' → logprob: -7.190003871917725

Token 1458: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3134777247905731
    2. '.' → logprob: -1.3134777545928955
    3. ' .' → logprob: -8.813477516174316
    4. '.app' → logprob: -9.813477516174316
    5. 'append' → logprob: -12.688477516174316
    6. ',' → logprob: -12.938477516174316
    7. '=' → logprob: -13.313477516174316
    8. 'Append' → logprob: -13.688477516174316
    9. '_app' → logprob: -14.313477516174316
    10. ').' → logprob: -14.813477516174316

Token 1459: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4869990646839142
    2. '(value' → logprob: -1.2369990348815918
    3. '(prob' → logprob: -2.361999034881592
    4. '((' → logprob: -7.986999034881592
    5. 'prob' → logprob: -8.36199951171875
    6. 'value' → logprob: -8.48699951171875
    7. '(
' → logprob: -8.98699951171875
    8. ' (' → logprob: -9.23699951171875
    9. '0' → logprob: -11.36199951171875
    10. '1' → logprob: -12.23699951171875

Token 1460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025887389201670885
    2. '<|end|>' → logprob: -6.377588748931885
    3. '       ' → logprob: -7.877588748931885
    4. ' )' → logprob: -9.377588272094727
    5. ')
' → logprob: -9.627588272094727
    6. '<|end|>' → logprob: -9.752588272094727
    7. '   ' → logprob: -9.752588272094727
    8. '               ' → logprob: -10.502588272094727
    9. ',' → logprob: -10.627588272094727
    10. '           ' → logprob: -10.627588272094727

Token 1461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035454075783491135
    2. ')' → logprob: -4.535454273223877
    3. '
' → logprob: -5.160454273223877
    4. ',' → logprob: -5.535454273223877
    5. '           ' → logprob: -5.785454273223877
    6. '-' → logprob: -6.035454273223877
    7. '```' → logprob: -6.535454273223877
    8. '<|end|>' → logprob: -6.785454273223877
    9. '+' → logprob: -7.160454273223877
    10. '        
' → logprob: -7.160454273223877

Token 1462: ' sum' (ID: 4215)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.42487987875938416
    2. '       ' → logprob: -1.2998799085617065
    3. ' values' → logprob: -3.299879789352417
    4. '   ' → logprob: -4.174880027770996
    5. 'import' → logprob: -5.174880027770996
    6. 'min' → logprob: -5.299880027770996
    7. '#' → logprob: -6.174880027770996
    8. '
' → logprob: -6.174880027770996
    9. '```' → logprob: -6.799880027770996
    10. 'if' → logprob: -7.174880027770996

Token 1463: 'V' (ID: 53)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4424307942390442
    2. '_values' → logprob: -1.1924307346343994
    3. '=' → logprob: -3.8174307346343994
    4. '(values' → logprob: -4.1924309730529785
    5. 's' → logprob: -4.9424309730529785
    6. 'values' → logprob: -5.6924309730529785
    7. '_vals' → logprob: -6.1924309730529785
    8. '(' → logprob: -6.6924309730529785
    9. ' =' → logprob: -6.8174309730529785
    10. 'Values' → logprob: -7.5674309730529785

Token 1464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8414717316627502
    2. '_' → logprob: -1.4664716720581055
    3. 's' → logprob: -1.7164716720581055
    4. ' =' → logprob: -2.3414716720581055
    5. '_values' → logprob: -3.2164716720581055
    6. '(values' → logprob: -4.4664716720581055
    7. 'values' → logprob: -5.3414716720581055
    8. '_vals' → logprob: -6.0914716720581055
    9. 'al' → logprob: -7.5914716720581055
    10. 'als' → logprob: -7.7164716720581055

Token 1465: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11543653160333633
    2. ' sum' → logprob: -2.365436553955078
    3. 'out' → logprob: -4.865436553955078
    4. '0' → logprob: -5.240436553955078
    5. 'ex' → logprob: -7.115436553955078
    6. 'prob' → logprob: -7.240436553955078
    7. ' out' → logprob: -8.115436553955078
    8. ' ex' → logprob: -8.990436553955078
    9. ' prob' → logprob: -9.865436553955078
    10. 'value' → logprob: -10.490436553955078

Token 1466: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.04864129796624184
    2. 'values' → logprob: -3.0486412048339844
    3. '(value' → logprob: -10.673641204833984
    4. ' values' → logprob: -10.923641204833984
    5. 'value' → logprob: -12.798641204833984
    6. 'V' → logprob: -12.923641204833984
    7. '(' → logprob: -13.048641204833984
    8. '	values' → logprob: -13.423641204833984
    9. '(v' → logprob: -13.798641204833984
    10. 'v' → logprob: -13.923641204833984

Token 1467: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20619939267635345
    2. ' -' → logprob: -2.2061994075775146
    3. '-' → logprob: -2.8311994075775146
    4. '       ' → logprob: -4.7061991691589355
    5. ')
' → logprob: -5.7061991691589355
    6. '   ' → logprob: -6.4561991691589355
    7. '
' → logprob: -6.8311991691589355
    8. ' /' → logprob: -7.3311991691589355
    9. '/' → logprob: -8.206199645996094
    10. '-values' → logprob: -8.206199645996094

Token 1468: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8171367645263672
    2. '       ' → logprob: -0.8171367645263672
    3. ' -' → logprob: -3.192136764526367
    4. ' /' → logprob: -3.567136764526367
    5. '<|end|>' → logprob: -4.442136764526367
    6. '/' → logprob: -4.567136764526367
    7. ')' → logprob: -5.067136764526367
    8. '
' → logprob: -5.442136764526367
    9. '   ' → logprob: -5.692136764526367
    10. '+' → logprob: -6.192136764526367

Token 1469: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024909423664212227
    2. ' -' → logprob: -4.399909496307373
    3. '       ' → logprob: -4.649909496307373
    4. '
' → logprob: -6.649909496307373
    5. '   ' → logprob: -8.024909019470215
    6. '```' → logprob: -8.399909019470215
    7. ')' → logprob: -8.649909019470215
    8. '<|end|>' → logprob: -9.024909019470215
    9. '+' → logprob: -9.274909019470215
    10. '#' → logprob: -9.899909019470215

Token 1470: ' Som' (ID: 12116)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4598757028579712
    2. 'out' → logprob: -2.2098755836486816
    3. 'if' → logprob: -2.5848755836486816
    4. 'values' → logprob: -2.9598755836486816
    5. 'prob' → logprob: -2.9598755836486816
    6. ' if' → logprob: -3.7098755836486816
    7. ' sum' → logprob: -4.209875583648682
    8. ' out' → logprob: -4.459875583648682
    9. 'for' → logprob: -5.334875583648682
    10. 'value' → logprob: -5.459875583648682

Token 1471: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.5871089100837708
    2. '       ' → logprob: -2.087108850479126
    3. '   ' → logprob: -2.337108850479126
    4. 'ma' → logprob: -2.712108850479126
    5. 'm' → logprob: -3.212108850479126
    6. '=' → logprob: -3.712108850479126
    7. 'e' → logprob: -3.712108850479126
    8. '           ' → logprob: -4.087109088897705
    9. '(values' → logprob: -4.337109088897705
    10. 'sum' → logprob: -4.587109088897705

Token 1472: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7553732991218567
    2. ' -' → logprob: -1.880373239517212
    3. '(values' → logprob: -1.880373239517212
    4. '=' → logprob: -2.005373239517212
    5. 'values' → logprob: -3.630373239517212
    6. '       ' → logprob: -4.130373477935791
    7. '   ' → logprob: -4.255373477935791
    8. ' =' → logprob: -4.380373477935791
    9. 'of' → logprob: -5.755373477935791
    10. ' of' → logprob: -5.880373477935791

Token 1473: ' toutes' (ID: 17502)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.001716827624477446
    2. ' values' → logprob: -6.376716613769531
    3. '(values' → logprob: -11.751716613769531
    4. 'value' → logprob: -12.001716613769531
    5. '	values' → logprob: -15.001716613769531
    6. 'v' → logprob: -17.12671661376953
    7. 'all' → logprob: -17.37671661376953
    8. 'prob' → logprob: -17.37671661376953
    9. 'val' → logprob: -17.50171661376953
    10. '.values' → logprob: -17.50171661376953

Token 1474: ' les' (ID: 1341)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.01826466992497444
    2. ' values' → logprob: -4.0182647705078125
    3. '(values' → logprob: -9.268264770507812
    4. 'value' → logprob: -10.893264770507812
    5. '	values' → logprob: -14.018264770507812
    6. ' value' → logprob: -15.393264770507812
    7. '.values' → logprob: -15.393264770507812
    8. 'v' → logprob: -15.768264770507812
    9. ' valeurs' → logprob: -16.018264770507812
    10. '_values' → logprob: -16.393264770507812

Token 1475: ' contributions' (ID: 29298)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.005821548402309418
    2. ' values' → logprob: -5.255821704864502
    3. 'value' → logprob: -7.505821704864502
    4. 'prob' → logprob: -11.380821228027344
    5. 'v' → logprob: -12.005821228027344
    6. 'out' → logprob: -12.130821228027344
    7. ' value' → logprob: -12.630821228027344
    8. '(values' → logprob: -12.880821228027344
    9. 'val' → logprob: -13.130821228027344
    10. '	values' → logprob: -13.380821228027344

Token 1476: ' des' (ID: 731)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19836457073688507
    2. ' -' → logprob: -2.448364496231079
    3. '<|end|>' → logprob: -3.073364496231079
    4. '       ' → logprob: -3.448364496231079
    5. '
' → logprob: -5.073364734649658
    6. '```' → logprob: -5.948364734649658
    7. ')' → logprob: -6.198364734649658
    8. '   ' → logprob: -6.323364734649658
    9. '+' → logprob: -7.323364734649658
    10. ',' → logprob: -8.0733642578125

Token 1477: ' ar' (ID: 646)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.14349301159381866
    2. ' values' → logprob: -2.0184929370880127
    3. '_values' → logprob: -7.643493175506592
    4. ' ar' → logprob: -9.893492698669434
    5. ' valeurs' → logprob: -10.018492698669434
    6. ' edges' → logprob: -10.143492698669434
    7. 'value' → logprob: -10.393492698669434
    8. '	values' → logprob: -10.518492698669434
    9. 'edges' → logprob: -10.643492698669434
    10. 'ar' → logprob: -10.643492698669434

Token 1478: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.018478142097592354
    2. 'tes' → logprob: -4.643477916717529
    3. 'cs' → logprob: -5.518477916717529
    4. 'r' → logprob: -6.768477916717529
    5. 'ètes' → logprob: -7.143477916717529
    6. 't' → logprob: -7.268477916717529
    7. 'ê' → logprob: -7.393477916717529
    8. 'c' → logprob: -8.018478393554688
    9. '�' → logprob: -8.268478393554688
    10. 'ées' → logprob: -8.268478393554688

Token 1479: ' sort' (ID: 4506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1480: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -3.333223139634356e-05
    2. 'entes' → logprob: -10.875033378601074
    3. '[' → logprob: -13.000033378601074
    4. '+' → logprob: -13.500033378601074
    5. '
' → logprob: -13.625033378601074
    6. '=' → logprob: -13.875033378601074
    7. 'ants' → logprob: -13.875033378601074
    8. 's' → logprob: -14.000033378601074
    9. '__' → logprob: -14.250033378601074
    10. '   ' → logprob: -14.500033378601074

Token 1481: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7874962091445923
    2. ' -' → logprob: -1.6624962091445923
    3. '-' → logprob: -1.7874962091445923
    4. '
' → logprob: -2.1624960899353027
    5. '<|end|>' → logprob: -2.7874960899353027
    6. '   ' → logprob: -5.287496089935303
    7. ')' → logprob: -6.162496089935303
    8. '<|end|>' → logprob: -7.162496089935303
    9. '+' → logprob: -7.287496089935303
    10. ',' → logprob: -7.412496089935303

Token 1482: ' v' (ID: 323)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.17209583520889282
    2. 'v' → logprob: -1.922095775604248
    3. ' values' → logprob: -4.797095775604248
    4. 'adj' → logprob: -6.172095775604248
    5. ' v' → logprob: -6.672095775604248
    6. 'out' → logprob: -9.297096252441406
    7. ' adj' → logprob: -9.547096252441406
    8. 'vals' → logprob: -11.422096252441406
    9. '[v' → logprob: -12.172096252441406
    10. ' out' → logprob: -12.672096252441406

Token 1483: 'Rem' (ID: 6882)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.09098967164754868
    2. '(values' → logprob: -4.090989589691162
    3. '.values' → logprob: -4.215989589691162
    4. '   ' → logprob: -4.465989589691162
    5. ' values' → logprob: -4.590989589691162
    6. 'ues' → logprob: -4.715989589691162
    7. 'Rem' → logprob: -5.215989589691162
    8. '       ' → logprob: -5.715989589691162
    9. ' =' → logprob: -5.715989589691162
    10. 'em' → logprob: -5.840989589691162

Token 1484: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06954375654459
    2. '<|end|>' → logprob: -2.8195438385009766
    3. ',' → logprob: -6.194543838500977
    4. '<|end|>' → logprob: -6.194543838500977
    5. '
' → logprob: -6.694543838500977
    6. ')' → logprob: -6.944543838500977
    7. '+' → logprob: -8.069543838500977
    8. '   ' → logprob: -8.444543838500977
    9. '```' → logprob: -9.319543838500977
    10. '        
' → logprob: -9.444543838500977

Token 1485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05430198088288307
    2. '-' → logprob: -3.5543019771575928
    3. '```' → logprob: -4.554302215576172
    4. ',' → logprob: -5.429302215576172
    5. '           ' → logprob: -6.304302215576172
    6. ' if' → logprob: -6.554302215576172
    7. ')' → logprob: -6.929302215576172
    8. '+' → logprob: -7.429302215576172
    9. '
' → logprob: -7.554302215576172
    10. '#' → logprob: -7.804302215576172

Token 1486: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10574383288621902
    2. '-' → logprob: -3.105743885040283
    3. 'for' → logprob: -3.605743885040283
    4. '   ' → logprob: -5.355743885040283
    5. '           ' → logprob: -5.355743885040283
    6. ' for' → logprob: -5.730743885040283
    7. 'values' → logprob: -5.980743885040283
    8. 'if' → logprob: -6.105743885040283
    9. 'max' → logprob: -6.230743885040283
    10. '```' → logprob: -6.230743885040283

Token 1487: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2834125757217407
    2. 'best' → logprob: -1.4084125757217407
    3. 'max' → logprob: -1.5334125757217407
    4. 'if' → logprob: -2.783412456512451
    5. 'min' → logprob: -3.033412456512451
    6. 'avg' → logprob: -3.033412456512451
    7. '   ' → logprob: -3.658412456512451
    8. 'm' → logprob: -4.533412456512451
    9. 'new' → logprob: -4.658412456512451
    10. '       ' → logprob: -4.783412456512451

Token 1488: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5382518768310547
    2. '       ' → logprob: -1.4132518768310547
    3. '=' → logprob: -2.7882518768310547
    4. ' de' → logprob: -3.2882518768310547
    5. ' d' → logprob: -4.038251876831055
    6. '   ' → logprob: -4.288251876831055
    7. ' of' → logprob: -4.913251876831055
    8. '```' → logprob: -5.163251876831055
    9. '           ' → logprob: -5.288251876831055
    10. ' if' → logprob: -5.913251876831055

Token 1489: ''une' (ID: 13337)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5232776403427124
    2. '(ans' → logprob: -2.398277759552002
    3. ' ans' → logprob: -2.773277759552002
    4. '   ' → logprob: -3.023277759552002
    5. '=' → logprob: -3.148277759552002
    6. ' =' → logprob: -3.148277759552002
    7. 'e' → logprob: -3.273277759552002
    8. ' (' → logprob: -3.648277759552002
    9. '(' → logprob: -4.273277759552002
    10. '(sum' → logprob: -4.398277759552002

Token 1490: ' esp' (ID: 7461)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -1.0752239227294922
    2. 'for' → logprob: -1.7002239227294922
    3. 'diff' → logprob: -1.7002239227294922
    4. 'gain' → logprob: -2.700223922729492
    5. 'max' → logprob: -3.075223922729492
    6. 'val' → logprob: -3.325223922729492
    7. 'best' → logprob: -4.075223922729492
    8. 'new' → logprob: -4.075223922729492
    9. 're' → logprob: -4.200223922729492
    10. ' delta' → logprob: -4.700223922729492

Token 1491: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.06987318396568298
    2. 'er' → logprob: -3.569873094558716
    3. 'érée' → logprob: -3.694873094558716
    4. 'érence' → logprob: -6.194873332977295
    5. '   ' → logprob: -6.319873332977295
    6. 'ér' → logprob: -6.819873332977295
    7. '=' → logprob: -6.944873332977295
    8. 'érience' → logprob: -6.944873332977295
    9. 'é' → logprob: -7.194873332977295
    10. 'érées' → logprob: -7.194873332977295

Token 1492: ' mod' (ID: 1812)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7141609787940979
    2. '_' → logprob: -2.339160919189453
    3. '_possible' → logprob: -2.714160919189453
    4. '_mod' → logprob: -2.839160919189453
    5. '_rem' → logprob: -2.964160919189453
    6. ' -=' → logprob: -3.214160919189453
    7. '_re' → logprob: -3.839160919189453
    8. '   ' → logprob: -3.964160919189453
    9. '_im' → logprob: -3.964160919189453
    10. 'am' → logprob: -3.964160919189453

Token 1493: 'ifiée' (ID: 88506)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.1986047327518463
    2. '   ' → logprob: -2.9486048221588135
    3. 'os' → logprob: -3.6986048221588135
    4. 'ans' → logprob: -4.198604583740234
    5. '=' → logprob: -4.198604583740234
    6. 'ort' → logprob: -4.323604583740234
    7. 'or' → logprob: -4.823604583740234
    8. 'lée' → logprob: -5.073604583740234
    9. ' =' → logprob: -5.198604583740234
    10. '       ' → logprob: -5.323604583740234

Token 1494: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10341127216815948
    2. '=' → logprob: -2.4784111976623535
    3. '       ' → logprob: -5.2284111976623535
    4. '   ' → logprob: -5.4784111976623535
    5. '```' → logprob: -5.7284111976623535
    6. '           ' → logprob: -7.3534111976623535
    7. '_tmp' → logprob: -9.478411674499512
    8. 'tmp' → logprob: -9.603411674499512
    9. ':' → logprob: -9.728411674499512
    10. '_mod' → logprob: -9.853411674499512

Token 1495: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1141027882695198
    2. 'new' → logprob: -3.614102840423584
    3. ' ans' → logprob: -3.739102840423584
    4. '(ans' → logprob: -3.739102840423584
    5. 'sum' → logprob: -4.489102840423584
    6. 'tmp' → logprob: -5.239102840423584
    7. '   ' → logprob: -5.989102840423584
    8. '       ' → logprob: -5.989102840423584
    9. ' new' → logprob: -6.364102840423584
    10. 'ex' → logprob: -6.864102840423584

Token 1496: ' retire' (ID: 48410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7843905687332153
    2. '#' → logprob: -2.534390449523926
    3. 'calc' → logprob: -2.534390449523926
    4. 'rem' → logprob: -3.034390449523926
    5. 'calcul' → logprob: -3.159390449523926
    6. 'ret' → logprob: -3.409390449523926
    7. 'mult' → logprob: -3.409390449523926
    8. '   ' → logprob: -3.409390449523926
    9. '       ' → logprob: -3.409390449523926
    10. 'sub' → logprob: -3.909390449523926

Token 1497: ' la' (ID: 557)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7421920299530029
    2. 'max' → logprob: -1.242192029953003
    3. ' values' → logprob: -2.867192029953003
    4. 'sum' → logprob: -3.367192029953003
    5. ' (' → logprob: -3.492192029953003
    6. ' max' → logprob: -3.492192029953003
    7. '(max' → logprob: -3.742192029953003
    8. '(values' → logprob: -3.992192029953003
    9. '(' → logprob: -5.117192268371582
    10. '(sum' → logprob: -5.117192268371582

Token 1498: ' moyenne' (ID: 57480)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.927945077419281
    2. 'values' → logprob: -1.4279451370239258
    3. 'prob' → logprob: -2.302945137023926
    4. 'value' → logprob: -2.677945137023926
    5. ' max' → logprob: -2.927945137023926
    6. ' values' → logprob: -3.302945137023926
    7. 'sum' → logprob: -3.302945137023926
    8. ' value' → logprob: -3.927945137023926
    9. ' prob' → logprob: -4.677945137023926
    10. ' sum' → logprob: -5.052945137023926

Token 1499: ' des' (ID: 731)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.21525341272354126
    2. 'values' → logprob: -1.7152533531188965
    3. ' values' → logprob: -4.7152533531188965
    4. ' of' → logprob: -6.3402533531188965
    5. '*' → logprob: -6.5902533531188965
    6. 'of' → logprob: -7.7152533531188965
    7. ' *' → logprob: -8.340253829956055
    8. 'value' → logprob: -8.715253829956055
    9. '(sum' → logprob: -8.965253829956055
    10. ' (' → logprob: -9.090253829956055

Token 1500: ' valeurs' (ID: 73668)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.01346395630389452
    2. ' values' → logprob: -4.388463973999023
    3. '(values' → logprob: -7.138463973999023
    4. 'value' → logprob: -9.013463973999023
    5. 'val' → logprob: -10.638463973999023
    6. ' valeurs' → logprob: -12.013463973999023
    7. ' value' → logprob: -13.013463973999023
    8. '	values' → logprob: -13.138463973999023
    9. 'valu' → logprob: -14.388463973999023
    10. ' val' → logprob: -14.513463973999023

Token 1501: ' des' (ID: 731)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6030327081680298
    2. ' *' → logprob: -1.2280327081680298
    3. 'values' → logprob: -2.8530325889587402
    4. '(values' → logprob: -3.1030325889587402
    5. '   ' → logprob: -4.22803258895874
    6. '       ' → logprob: -4.47803258895874
    7. '/' → logprob: -4.85303258895874
    8. ' /' → logprob: -4.97803258895874
    9. ' des' → logprob: -5.22803258895874
    10. '*(' → logprob: -6.22803258895874

Token 1502: ' ar' (ID: 646)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.007329032756388187
    2. ' values' → logprob: -5.507328987121582
    3. 'edges' → logprob: -6.382328987121582
    4. 'ar' → logprob: -7.007328987121582
    5. ' edges' → logprob: -8.507328987121582
    6. 'val' → logprob: -8.757328987121582
    7. '(values' → logprob: -8.757328987121582
    8. ' valeurs' → logprob: -10.257328987121582
    9. 'vals' → logprob: -11.007328987121582
    10. 'adj' → logprob: -11.007328987121582

Token 1503: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0010915198363363743
    2. '^' → logprob: -7.751091480255127
    3. 'ê' → logprob: -8.376091957092285
    4. 'tes' → logprob: -8.876091957092285
    5. '\' → logprob: -10.376091957092285
    6. '**' → logprob: -10.376091957092285
    7. 'êts' → logprob: -10.626091957092285
    8. 'ètes' → logprob: -10.751091957092285
    9. '[' → logprob: -11.126091957092285
    10. '\xc8' → logprob: -11.126091957092285

Token 1504: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.12326890230178833
    2. ' sort' → logprob: -2.9982688426971436
    3. 'out' → logprob: -3.2482688426971436
    4. '   ' → logprob: -4.998269081115723
    5. '```' → logprob: -5.623269081115723
    6. '       ' → logprob: -5.873269081115723
    7. 'de' → logprob: -6.123269081115723
    8. 'values' → logprob: -6.373269081115723
    9. ' /' → logprob: -6.498269081115723
    10. 'div' → logprob: -6.998269081115723

Token 1505: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.000996963819488883
    2. 'ante' → logprob: -7.750997066497803
    3. 's' → logprob: -8.375996589660645
    4. 'tes' → logprob: -9.625996589660645
    5. 't' → logprob: -9.750996589660645
    6. '
' → logprob: -9.875996589660645
    7. '   ' → logprob: -10.500996589660645
    8. 'ant' → logprob: -10.875996589660645
    9. '{' → logprob: -11.250996589660645
    10. 'g' → logprob: -11.625996589660645

Token 1506: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5403459668159485
    2. ' *' → logprob: -1.2903459072113037
    3. '*' → logprob: -2.5403459072113037
    4. ' /' → logprob: -3.1653459072113037
    5. ',' → logprob: -5.165346145629883
    6. '           ' → logprob: -5.415346145629883
    7. 'from' → logprob: -5.915346145629883
    8. '/' → logprob: -6.415346145629883
    9. '   ' → logprob: -6.665346145629883
    10. '               ' → logprob: -6.915346145629883

Token 1507: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.2013496160507202
    2. '       ' → logprob: -1.3263496160507202
    3. '   ' → logprob: -1.8263496160507202
    4. ' -' → logprob: -2.2013497352600098
    5. ' =' → logprob: -2.5763497352600098
    6. '-' → logprob: -3.0763497352600098
    7. '           ' → logprob: -4.32634973526001
    8. ' -=' → logprob: -4.57634973526001
    9. 'ans' → logprob: -5.07634973526001
    10. '=' → logprob: -6.07634973526001

Token 1508: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.4031050205230713
    2. ' ans' → logprob: -1.5281050205230713
    3. '   ' → logprob: -2.2781050205230713
    4. ' new' → logprob: -5.278104782104492
    5. 'new' → logprob: -5.653104782104492
    6. '       ' → logprob: -7.028104782104492
    7. '```' → logprob: -7.278104782104492
    8. '``' → logprob: -8.403104782104492
    9. 'diff' → logprob: -8.528104782104492
    10. 'exp' → logprob: -8.653104782104492

Token 1509: '2' (ID: 17)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0473412349820137
    2. '-=' → logprob: -3.5473413467407227
    3. '=' → logprob: -4.422341346740723
    4. ' =' → logprob: -5.422341346740723
    5. '-' → logprob: -7.797341346740723
    6. ' +=' → logprob: -8.672341346740723
    7. '   ' → logprob: -8.797341346740723
    8. '+=' → logprob: -9.672341346740723
    9. ' -' → logprob: -9.797341346740723
    10. '	' → logprob: -10.047341346740723

Token 1510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01675732433795929
    2. '=' → logprob: -4.141757488250732
    3. ' -=' → logprob: -7.391757488250732
    4. ' +=' → logprob: -10.141757011413574
    5. '   ' → logprob: -11.266757011413574
    6. ' ' → logprob: -11.391757011413574
    7. '```' → logprob: -11.516757011413574
    8. '<|end|>' → logprob: -11.891757011413574
    9. '    ' → logprob: -12.391757011413574
    10. ',' → logprob: -12.641757011413574

Token 1511: ' exp' (ID: 2794)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20176103711128235
    2. ' ans' → logprob: -1.70176100730896
    3. '   ' → logprob: -8.576761245727539
    4. 'exp' → logprob: -10.326761245727539
    5. 'ex' → logprob: -10.451761245727539
    6. ' min' → logprob: -10.576761245727539
    7. 'min' → logprob: -11.076761245727539
    8. '       ' → logprob: -11.326761245727539
    9. '(ans' → logprob: -11.326761245727539
    10. '	ans' → logprob: -11.576761245727539

Token 1512: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0030259599443525076
    2. '   ' → logprob: -6.628026008605957
    3. '       ' → logprob: -8.253026008605957
    4. ' -' → logprob: -8.253026008605957
    5. '-' → logprob: -8.753026008605957
    6. 'ex' → logprob: -8.878026008605957
    7. '           ' → logprob: -9.003026008605957
    8. ' ' → logprob: -9.128026008605957
    9. 's' → logprob: -9.503026008605957
    10. 'ans' → logprob: -9.503026008605957

Token 1513: '[-' (ID: 17503)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02988261915743351
    2. '[-' → logprob: -3.7798826694488525
    3. '-' → logprob: -5.779882431030273
    4. '[' → logprob: -6.279882431030273
    5. '[:-' → logprob: -7.029882431030273
    6. ' -' → logprob: -7.654882431030273
    7. '[:' → logprob: -9.904882431030273
    8. '   ' → logprob: -10.029882431030273
    9. '-v' → logprob: -10.154882431030273
    10. '[:]' → logprob: -10.279882431030273

Token 1514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.125000953674316
    3. '-' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.25
    5. ' ' → logprob: -16.625
    6. '
' → logprob: -17.5
    7. ']' → logprob: -18.125
    8. '  ' → logprob: -18.5
    9. '           ' → logprob: -18.75
    10. '``' → logprob: -19.0

Token 1515: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023541506379842758
    2. '-' → logprob: -3.7735414505004883
    3. '       ' → logprob: -8.773541450500488
    4. '        ' → logprob: -10.648541450500488
    5. ' ' → logprob: -11.023541450500488
    6. '   ' → logprob: -11.023541450500488
    7. ')' → logprob: -11.273541450500488
    8. '          ' → logprob: -11.398541450500488
    9. '           ' → logprob: -11.648541450500488
    10. '    ' → logprob: -11.648541450500488

Token 1516: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14549359679222107
    2. '-' → logprob: -2.020493507385254
    3. '       ' → logprob: -6.645493507385254
    4. '
' → logprob: -8.020493507385254
    5. '*' → logprob: -8.520493507385254
    6. '   ' → logprob: -8.645493507385254
    7. '+' → logprob: -8.770493507385254
    8. ' +' → logprob: -8.895493507385254
    9. ',' → logprob: -9.645493507385254
    10. '```' → logprob: -9.645493507385254

Token 1517: ' sum' (ID: 4215)
  Prédit: '(prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prob' → logprob: -0.33125290274620056
    2. '(sum' → logprob: -1.706252932548523
    3. 'sum' → logprob: -2.5812528133392334
    4. '(pro' → logprob: -4.9562530517578125
    5. 'prob' → logprob: -4.9562530517578125
    6. ' (' → logprob: -5.7062530517578125
    7. '(' → logprob: -5.8312530517578125
    8. '(max' → logprob: -6.2062530517578125
    9. '((' → logprob: -7.4562530517578125
    10. 'max' → logprob: -7.8312530517578125

Token 1518: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1283000260591507
    2. '(values' → logprob: -2.1282999515533447
    3. 'values' → logprob: -6.753300189971924
    4. '(' → logprob: -9.878299713134766
    5. '(v' → logprob: -10.253299713134766
    6. '/' → logprob: -10.628299713134766
    7. '(value' → logprob: -10.878299713134766
    8. ' values' → logprob: -11.003299713134766
    9. '(V' → logprob: -11.503299713134766
    10. 'v' → logprob: -11.878299713134766

Token 1519: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.18110568821430206
    2. '/' → logprob: -1.8061057329177856
    3. '       ' → logprob: -7.931105613708496
    4. '/out' → logprob: -8.056105613708496
    5. '*' → logprob: -8.431105613708496
    6. '           ' → logprob: -9.056105613708496
    7. ' *' → logprob: -9.056105613708496
    8. '   ' → logprob: -9.181105613708496
    9. '               ' → logprob: -10.556105613708496
    10. '                   ' → logprob: -11.556105613708496

Token 1520: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.07905734330415726
    2. '(out' → logprob: -2.579057455062866
    3. ' out' → logprob: -8.829057693481445
    4. ' (' → logprob: -10.954057693481445
    5. '(' → logprob: -13.954057693481445
    6. '[out' → logprob: -14.204057693481445
    7. '_out' → logprob: -14.579057693481445
    8. '((' → logprob: -14.829057693481445
    9. '(prob' → logprob: -14.954057693481445
    10. '	out' → logprob: -15.204057693481445

Token 1521: 'deg' (ID: 30546)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00045379105722531676
    2. 'deg' → logprob: -7.750453948974609
    3. 'out' → logprob: -10.87545394897461
    4. '   ' → logprob: -13.50045394897461
    5. 'eg' → logprob: -15.00045394897461
    6. '_de' → logprob: -15.12545394897461
    7. ' de' → logprob: -15.12545394897461
    8. 'd' → logprob: -15.12545394897461
    9. 'egs' → logprob: -15.25045394897461
    10. '       ' → logprob: -15.62545394897461

Token 1522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046838801354169846
    2. '<|end|>' → logprob: -3.6718387603759766
    3. ' +' → logprob: -5.046838760375977
    4. '+' → logprob: -5.171838760375977
    5. '
' → logprob: -5.671838760375977
    6. ' if' → logprob: -6.296838760375977
    7. '               ' → logprob: -6.921838760375977
    8. ')' → logprob: -7.671838760375977
    9. '	' → logprob: -8.421838760375977
    10. '<|end|>' → logprob: -8.546838760375977

Token 1523: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1524: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8811321258544922
    2. '   ' → logprob: -1.1311321258544922
    3. '       ' → logprob: -2.006132125854492
    4. 'if' → logprob: -2.881132125854492
    5. ':' → logprob: -3.256132125854492
    6. ')' → logprob: -4.131132125854492
    7. '<|end|>' → logprob: -4.756132125854492
    8. '	if' → logprob: -5.881132125854492
    9. '           ' → logprob: -6.756132125854492
    10. ' ' → logprob: -7.006132125854492

Token 1525: ' value' (ID: 1432)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38909104466438293
    2. ' v' → logprob: -1.1390910148620605
    3. 'adj' → logprob: -7.7640910148620605
    4. 'i' → logprob: -8.264091491699219
    5. 'neighbor' → logprob: -9.014091491699219
    6. ' i' → logprob: -9.014091491699219
    7. 'idx' → logprob: -9.139091491699219
    8. 'value' → logprob: -9.139091491699219
    9. ' idx' → logprob: -9.264091491699219
    10. 'val' → logprob: -9.389091491699219

Token 1526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25298699736595154
    2. 'in' → logprob: -1.502987027168274
    3. ',' → logprob: -8.127986907958984
    4. ' ' → logprob: -8.502986907958984
    5. '_in' → logprob: -9.127986907958984
    6. 'value' → logprob: -9.502986907958984
    7. '```' → logprob: -9.502986907958984
    8. ' ,' → logprob: -9.877986907958984
    9. '_value' → logprob: -10.127986907958984
    10. '  ' → logprob: -10.252986907958984

Token 1527: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.004090274218469858
    2. ' values' → logprob: -5.504090309143066
    3. '(values' → logprob: -11.504090309143066
    4. '.values' → logprob: -13.754090309143066
    5. '	values' → logprob: -14.504090309143066
    6. 'value' → logprob: -16.12908935546875
    7. '
' → logprob: -17.37908935546875
    8. 'adj' → logprob: -17.50408935546875
    9. 'range' → logprob: -17.62908935546875
    10. '_values' → logprob: -17.75408935546875

Token 1528: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051301538944244385
    2. ':
' → logprob: -3.6763014793395996
    3. '<|end|>' → logprob: -4.8013014793396
    4. '       ' → logprob: -5.0513014793396
    5. '           ' → logprob: -5.3013014793396
    6. ' if' → logprob: -7.0513014793396
    7. '+' → logprob: -7.4263014793396
    8. ',' → logprob: -7.4263014793396
    9. '	       ' → logprob: -7.6763014793396
    10. '   ' → logprob: -7.6763014793396

Token 1529: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1668655425310135
    2. ' if' → logprob: -2.291865587234497
    3. '<|end|>' → logprob: -3.666865587234497
    4. '               ' → logprob: -5.291865348815918
    5. '	       ' → logprob: -5.416865348815918
    6. '```' → logprob: -5.666865348815918
    7. '       ' → logprob: -5.791865348815918
    8. ' ans' → logprob: -6.541865348815918
    9. 'if' → logprob: -6.541865348815918
    10. '<|end|>' → logprob: -7.166865348815918

Token 1530: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6234294772148132
    2. 'if' → logprob: -1.623429536819458
    3. ' if' → logprob: -2.373429536819458
    4. '   ' → logprob: -2.498429536819458
    5. '       ' → logprob: -2.748429536819458
    6. 'ans' → logprob: -4.123429298400879
    7. ' ans' → logprob: -5.748429298400879
    8. '```' → logprob: -6.248429298400879
    9. '
' → logprob: -6.623429298400879
    10. ':
' → logprob: -6.873429298400879

Token 1531: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8855556845664978
    2. 'if' → logprob: -1.2605557441711426
    3. '   ' → logprob: -1.3855557441711426
    4. ' if' → logprob: -3.0105557441711426
    5. '           ' → logprob: -6.010555744171143
    6. '```' → logprob: -6.885555744171143
    7. 'ans' → logprob: -7.135555744171143
    8. ' ans' → logprob: -9.760555267333984
    9. 'for' → logprob: -10.135555267333984
    10. '	ans' → logprob: -10.510555267333984

Token 1532: ' chaque' (ID: 21194)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.009849820286035538
    2. ' value' → logprob: -4.634850025177002
    3. 'v' → logprob: -10.009849548339844
    4. '   ' → logprob: -11.509849548339844
    5. 'values' → logprob: -12.134849548339844
    6. 'range' → logprob: -12.134849548339844
    7. ' ' → logprob: -12.259849548339844
    8. '(value' → logprob: -12.634849548339844
    9. 'val' → logprob: -12.884849548339844
    10. '```' → logprob: -12.884849548339844

Token 1533: ' ar' (ID: 646)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.22664235532283783
    2. ' value' → logprob: -1.601642370223999
    3. 'v' → logprob: -7.97664213180542
    4. '
' → logprob: -7.97664213180542
    5. '```' → logprob: -8.976642608642578
    6. ' v' → logprob: -9.351642608642578
    7. '   ' → logprob: -9.601642608642578
    8. 'prob' → logprob: -9.601642608642578
    9. '(value' → logprob: -9.726642608642578
    10. 'out' → logprob: -11.226642608642578

Token 1534: 'ête' (ID: 16808)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5372448563575745
    2. 'r' → logprob: -1.0372447967529297
    3. ' value' → logprob: -3.7872447967529297
    4. 'g' → logprob: -4.53724479675293
    5. 'v' → logprob: -5.66224479675293
    6. '2' → logprob: -6.28724479675293
    7. 'e' → logprob: -6.28724479675293
    8. ' ' → logprob: -6.28724479675293
    9. '   ' → logprob: -6.28724479675293
    10. '_value' → logprob: -6.28724479675293

Token 1535: ' potent' (ID: 35668)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7314223051071167
    2. 'in' → logprob: -2.3564224243164062
    3. '   ' → logprob: -2.3564224243164062
    4. '           ' → logprob: -2.6064224243164062
    5. ' in' → logprob: -2.7314224243164062
    6. '       ' → logprob: -2.8564224243164062
    7. ':
' → logprob: -3.2314224243164062
    8. ' :' → logprob: -3.8564224243164062
    9. '<|end|>' → logprob: -3.9814224243164062
    10. '```' → logprob: -5.106422424316406

Token 1536: 'iellement' (ID: 70958)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4432775676250458
    2. 'r' → logprob: -2.943277597427368
    3. 'ine' → logprob: -2.943277597427368
    4. '   ' → logprob: -3.193277597427368
    5. 'ête' → logprob: -3.443277597427368
    6. 'v' → logprob: -3.693277597427368
    7. 'value' → logprob: -3.693277597427368
    8. 'ière' → logprob: -4.193277359008789
    9. 'te' → logprob: -4.693277359008789
    10. 'ente' → logprob: -5.068277359008789

Token 1537: ' supprim' (ID: 142986)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.20372404158115387
    2. '   ' → logprob: -2.4537241458892822
    3. ' value' → logprob: -3.2037241458892822
    4. 'values' → logprob: -4.203723907470703
    5. '       ' → logprob: -4.328723907470703
    6. '```' → logprob: -4.703723907470703
    7. '           ' → logprob: -5.203723907470703
    8. ':' → logprob: -5.953723907470703
    9. 'possible' → logprob: -6.328723907470703
    10. ' ' → logprob: -6.828723907470703

Token 1538: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.008784271776676178
    2. 'er' → logprob: -4.883784294128418
    3. 'é' → logprob: -7.508784294128418
    4. 'ee' → logprob: -8.258784294128418
    5. 'ant' → logprob: -8.758784294128418
    6. '   ' → logprob: -8.883784294128418
    7. 'ées' → logprob: -10.508784294128418
    8. 'ante' → logprob: -12.008784294128418
    9. 'éer' → logprob: -12.133784294128418
    10. 'e' → logprob: -12.258784294128418

Token 1539: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15907107293605804
    2. ':' → logprob: -2.4090709686279297
    3. ':
' → logprob: -3.6590709686279297
    4. '<|end|>' → logprob: -4.78407096862793
    5. '       ' → logprob: -4.90907096862793
    6. '   ' → logprob: -5.53407096862793
    7. ',' → logprob: -5.65907096862793
    8. ' if' → logprob: -5.65907096862793
    9. '<|end|>' → logprob: -6.15907096862793
    10. '	       ' → logprob: -7.78407096862793

Token 1540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08445369452238083
    2. ' if' → logprob: -2.709453582763672
    3. '       ' → logprob: -4.959453582763672
    4. '```' → logprob: -5.959453582763672
    5. 'if' → logprob: -6.084453582763672
    6. '   ' → logprob: -6.834453582763672
    7. '	       ' → logprob: -7.334453582763672
    8. '<|end|>' → logprob: -7.959453582763672
    9. '               ' → logprob: -8.834453582763672
    10. '		' → logprob: -10.584453582763672

Token 1541: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4069894552230835
    2. '               ' → logprob: -2.281989574432373
    3. 'if' → logprob: -2.781989574432373
    4. ' ans' → logprob: -2.781989574432373
    5. 'ans' → logprob: -3.031989574432373
    6. '           ' → logprob: -3.406989574432373
    7. 'tmp' → logprob: -5.531989574432373
    8. '   ' → logprob: -5.656989574432373
    9. 'temp' → logprob: -5.656989574432373
    10. '```' → logprob: -6.031989574432373

Token 1542: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4415721893310547
    2. '           ' → logprob: -1.6915721893310547
    3. 'if' → logprob: -1.8165721893310547
    4. '               ' → logprob: -1.9415721893310547
    5. 'ans' → logprob: -2.3165721893310547
    6. '   ' → logprob: -2.3165721893310547
    7. 'diff' → logprob: -3.6915721893310547
    8. ' ans' → logprob: -4.316572189331055
    9. 'cost' → logprob: -5.191572189331055
    10. 'delta' → logprob: -5.316572189331055

Token 1543: ' calc' (ID: 25691)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2891968786716461
    2. ' ans' → logprob: -2.1641969680786133
    3. 'val' → logprob: -3.1641969680786133
    4. 'candidate' → logprob: -3.5391969680786133
    5. 'value' → logprob: -5.164196968078613
    6. 'calc' → logprob: -5.289196968078613
    7. 'tmp' → logprob: -5.414196968078613
    8. 'possible' → logprob: -5.664196968078613
    9. '       ' → logprob: -5.789196968078613
    10. 'c' → logprob: -5.789196968078613

Token 1544: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0110066719353199
    2. 'ère' → logprob: -4.886006832122803
    3. 'cule' → logprob: -5.886006832122803
    4. '       ' → logprob: -8.511006355285645
    5. '           ' → logprob: -9.386006355285645
    6. 'le' → logprob: -9.636006355285645
    7. 'ére' → logprob: -10.261006355285645
    8. 'ulate' → logprob: -10.386006355285645
    9. 'cul' → logprob: -10.511006355285645
    10. 'ulé' → logprob: -10.886006355285645

Token 1545: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7538543939590454
    2. 'ans' → logprob: -1.7538543939590454
    3. '           ' → logprob: -2.128854274749756
    4. '(ans' → logprob: -2.753854274749756
    5. 'tmp' → logprob: -3.378854274749756
    6. ' tmp' → logprob: -3.753854274749756
    7. 'possible' → logprob: -3.878854274749756
    8. ' new' → logprob: -4.128854274749756
    9. ' max' → logprob: -4.128854274749756
    10. 'max' → logprob: -4.503854274749756

Token 1546: ' nouvelle' (ID: 24562)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3446202576160431
    2. 'new' → logprob: -2.8446202278137207
    3. 'diff' → logprob: -2.8446202278137207
    4. 'possible' → logprob: -2.8446202278137207
    5. 'val' → logprob: -3.4696202278137207
    6. ' ans' → logprob: -3.9696202278137207
    7. 'delta' → logprob: -4.219620227813721
    8. 'tmp' → logprob: -4.344620227813721
    9. 'gain' → logprob: -4.594620227813721
    10. ' new' → logprob: -5.594620227813721

Token 1547: ' esp' (ID: 7461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.033860065042972565
    2. 'val' → logprob: -4.658860206604004
    3. 'exp' → logprob: -5.283860206604004
    4. 'cost' → logprob: -5.533860206604004
    5. 'diff' → logprob: -5.908860206604004
    6. 'est' → logprob: -6.033860206604004
    7. '_ans' → logprob: -6.408860206604004
    8. 'esp' → logprob: -6.533860206604004
    9. '```' → logprob: -6.908860206604004
    10. '   ' → logprob: -7.158860206604004

Token 1548: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.3094635009765625
    2. 'es' → logprob: -2.5594635009765625
    3. 'ération' → logprob: -2.5594635009765625
    4. '           ' → logprob: -3.9344635009765625
    5. 'é' → logprob: -4.0594635009765625
    6. '               ' → logprob: -4.3094635009765625
    7. 'er' → logprob: -4.4344635009765625
    8. '                   ' → logprob: -5.1844635009765625
    9. 'ére' → logprob: -5.4344635009765625
    10. 'éra' → logprob: -5.4344635009765625

Token 1549: ' si' (ID: 1784)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5044960975646973
    2. '-' → logprob: -1.7544960975646973
    3. '           ' → logprob: -2.1294960975646973
    4. ' =' → logprob: -3.1294960975646973
    5. '               ' → logprob: -4.129496097564697
    6. '=' → logprob: -5.254496097564697
    7. ' -=' → logprob: -5.254496097564697
    8. ' +' → logprob: -5.629496097564697
    9. '2' → logprob: -5.879496097564697
    10. ' ans' → logprob: -5.879496097564697

Token 1550: ' on' (ID: 402)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1649487167596817
    2. ' value' → logprob: -1.9149487018585205
    3. 'ans' → logprob: -5.9149489402771
    4. '(value' → logprob: -6.7899489402771
    5. ' ans' → logprob: -7.6649489402771
    6. '   ' → logprob: -9.039948463439941
    7. '(ans' → logprob: -9.289948463439941
    8. '```' → logprob: -10.039948463439941
    9. 'out' → logprob: -10.164948463439941
    10. ')value' → logprob: -10.414948463439941

Token 1551: ' enl' (ID: 116494)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8008055090904236
    2. 'sup' → logprob: -1.1758055686950684
    3. 'ret' → logprob: -2.0508055686950684
    4. '(ans' → logprob: -3.5508055686950684
    5. 'rem' → logprob: -4.300805568695068
    6. 'remove' → logprob: -4.425805568695068
    7. '```' → logprob: -4.800805568695068
    8. ' sup' → logprob: -4.925805568695068
    9. '           ' → logprob: -5.300805568695068
    10. 'en' → logprob: -5.550805568695068

Token 1552: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.00023059594968799502
    2. '           ' → logprob: -9.37523078918457
    3. '               ' → logprob: -10.37523078918457
    4. 'eve' → logprob: -11.00023078918457
    5. 'è' → logprob: -11.25023078918457
    6. 'èves' → logprob: -11.25023078918457
    7. '       ' → logprob: -12.12523078918457
    8. 'value' → logprob: -12.12523078918457
    9. 'èv' → logprob: -12.37523078918457
    10. 'out' → logprob: -12.62523078918457

Token 1553: ' précisément' (ID: 139179)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16318266093730927
    2. 'value' → logprob: -1.9131826162338257
    3. '(value' → logprob: -6.288182735443115
    4. '           ' → logprob: -8.538182258605957
    5. ' out' → logprob: -8.663182258605957
    6. 'out' → logprob: -8.788182258605957
    7. ' v' → logprob: -8.913182258605957
    8. '"value' → logprob: -9.288182258605957
    9. '   ' → logprob: -9.913182258605957
    10. '```' → logprob: -10.038182258605957

Token 1554: ' cette' (ID: 7696)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5234419107437134
    2. 'value' → logprob: -0.8984419107437134
    3. '(value' → logprob: -8.898442268371582
    4. '"value' → logprob: -9.648442268371582
    5. ''value' → logprob: -10.273442268371582
    6. '```' → logprob: -11.398442268371582
    7. '   ' → logprob: -11.523442268371582
    8. ' ' → logprob: -11.523442268371582
    9. ''' → logprob: -11.648442268371582
    10. '"' → logprob: -11.648442268371582

Token 1555: ' ar' (ID: 646)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.04188784956932068
    2. 'value' → logprob: -3.4168877601623535
    3. ' edge' → logprob: -5.2918877601623535
    4. ' ar' → logprob: -6.0418877601623535
    5. 'edge' → logprob: -7.9168877601623535
    6. 'ar' → logprob: -9.416888236999512
    7. ' ' → logprob: -9.416888236999512
    8. '+' → logprob: -9.541888236999512
    9. ' valeur' → logprob: -10.166888236999512
    10. ' +' → logprob: -10.666888236999512

Token 1556: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0027891844511032104
    2. 'te' → logprob: -6.12778902053833
    3. 'ê' → logprob: -9.252789497375488
    4. ' ' → logprob: -9.377789497375488
    5. 'ète' → logprob: -9.502789497375488
    6. '^' → logprob: -9.627789497375488
    7. 'ôte' → logprob: -10.252789497375488
    8. 'âte' → logprob: -10.377789497375488
    9. 'êt' → logprob: -10.502789497375488
    10. 'é' → logprob: -10.877789497375488

Token 1557: ' (' (ID: 350)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.2976431846618652
    2. '(ans' → logprob: -1.4226431846618652
    3. '           ' → logprob: -1.9226431846618652
    4. ' (' → logprob: -2.5476431846618652
    5. '(value' → logprob: -3.2976431846618652
    6. '(' → logprob: -3.5476431846618652
    7. ' =' → logprob: -3.7976431846618652
    8. 'ans' → logprob: -4.172643184661865
    9. '               ' → logprob: -4.172643184661865
    10. '<|end|>' → logprob: -4.172643184661865

Token 1558: 'en' (ID: 262)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.2145051956176758
    2. '           ' → logprob: -1.5895051956176758
    3. ' /' → logprob: -1.8395051956176758
    4. ')' → logprob: -2.839505195617676
    5. ' out' → logprob: -3.089505195617676
    6. ' value' → logprob: -3.339505195617676
    7. 'value' → logprob: -3.464505195617676
    8. '               ' → logprob: -3.589505195617676
    9. '/' → logprob: -3.839505195617676
    10. '```' → logprob: -4.089505195617676

Token 1559: ' rec' (ID: 1369)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6481224894523621
    2. 'ans' → logprob: -1.2731225490570068
    3. ' ans' → logprob: -2.773122549057007
    4. '(ans' → logprob: -2.773122549057007
    5. ' value' → logprob: -3.523122549057007
    6. '           ' → logprob: -4.273122310638428
    7. '(value' → logprob: -4.523122310638428
    8. 'out' → logprob: -4.773122310638428
    9. 'prob' → logprob: -6.273122310638428
    10. '```' → logprob: -6.648122310638428

Token 1560: 'alc' (ID: 27187)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -1.8453296422958374
    2. 'v' → logprob: -2.095329761505127
    3. 'alc' → logprob: -2.595329761505127
    4. 'al' → logprob: -2.595329761505127
    5. 'alculate' → logprob: -2.595329761505127
    6. '   ' → logprob: -3.220329761505127
    7. '-' → logprob: -3.345329761505127
    8. 'e' → logprob: -3.720329761505127
    9. 'placer' → logprob: -3.845329761505127
    10. 'for' → logprob: -3.845329761505127

Token 1561: 'ult' (ID: 576)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.07945346087217331
    2. '       ' → logprob: -3.704453468322754
    3. 'ul' → logprob: -4.454453468322754
    4. '   ' → logprob: -5.079453468322754
    5. 'value' → logprob: -5.329453468322754
    6. 'cule' → logprob: -5.329453468322754
    7. 'uler' → logprob: -5.454453468322754
    8. '           ' → logprob: -5.704453468322754
    9. 'ule' → logprob: -5.954453468322754
    10. 'ulator' → logprob: -6.454453468322754

Token 1562: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.348798930644989
    2. 'ating' → logprob: -1.8487989902496338
    3. 'ing' → logprob: -2.098798990249634
    4. 'e' → logprob: -4.848798751831055
    5. 'a' → logprob: -5.473798751831055
    6. '           ' → logprob: -7.348798751831055
    7. '   ' → logprob: -7.848798751831055
    8. '       ' → logprob: -7.848798751831055
    9. '```' → logprob: -8.098798751831055
    10. '#' → logprob: -8.973798751831055

Token 1563: ' la' (ID: 557)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.14202572405338287
    2. 'value' → logprob: -4.017025947570801
    3. ' la' → logprob: -4.017025947570801
    4. ' value' → logprob: -4.267025947570801
    5. ' l' → logprob: -4.642025947570801
    6. '1' → logprob: -4.767025947570801
    7. ' *' → logprob: -4.767025947570801
    8. '/' → logprob: -4.892025947570801
    9. ' le' → logprob: -5.267025947570801
    10. '           ' → logprob: -5.267025947570801

Token 1564: ' moyenne' (ID: 57480)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6398206353187561
    2. ' ans' → logprob: -1.1398205757141113
    3. 'prob' → logprob: -3.3898205757141113
    4. ' /' → logprob: -3.3898205757141113
    5. '```' → logprob: -3.6398205757141113
    6. '/' → logprob: -4.139820575714111
    7. ')' → logprob: -4.514820575714111
    8. 'value' → logprob: -5.264820575714111
    9. 'out' → logprob: -5.764820575714111
    10. '`' → logprob: -5.889820575714111

Token 1565: ' sur' (ID: 1512)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4936537444591522
    2. ')' → logprob: -1.8686537742614746
    3. '           ' → logprob: -2.7436537742614746
    4. '                   ' → logprob: -3.3686537742614746
    5. '               ' → logprob: -3.3686537742614746
    6. ',' → logprob: -4.118653774261475
    7. ' *' → logprob: -4.243653774261475
    8. 'out' → logprob: -4.618653774261475
    9. '/' → logprob: -4.743653774261475
    10. ' -' → logprob: -4.743653774261475

Token 1566: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1791883111000061
    2. '(out' → logprob: -2.1791882514953613
    3. ' (' → logprob: -3.6791882514953613
    4. ' out' → logprob: -4.054188251495361
    5. '```' → logprob: -5.179188251495361
    6. '           ' → logprob: -6.929188251495361
    7. '       ' → logprob: -8.05418872833252
    8. '   ' → logprob: -8.30418872833252
    9. '[out' → logprob: -8.67918872833252
    10. '(' → logprob: -8.92918872833252

Token 1567: 'deg' (ID: 30546)
  Prédit: 'deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.00011629798245849088
    2. ' deg' → logprob: -9.875116348266602
    3. 'de' → logprob: -10.500116348266602
    4. '   ' → logprob: -11.750116348266602
    5. '_deg' → logprob: -12.250116348266602
    6. '-' → logprob: -12.375116348266602
    7. ' -' → logprob: -12.750116348266602
    8. 'degree' → logprob: -12.875116348266602
    9. '  ' → logprob: -13.000116348266602
    10. 'd' → logprob: -13.625116348266602

Token 1568: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6060225367546082
    2. ' -' → logprob: -0.9810225367546082
    3. ')' → logprob: -2.731022596359253
    4. '```' → logprob: -4.981022357940674
    5. 'e' → logprob: -7.231022357940674
    6. '   ' → logprob: -7.231022357940674
    7. '):
' → logprob: -7.231022357940674
    8. '2' → logprob: -7.231022357940674
    9. '+' → logprob: -7.481022357940674
    10. '),' → logprob: -7.606022357940674

Token 1569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003872974484693259
    2. ' ' → logprob: -7.875387191772461
    3. ')' → logprob: -12.625387191772461
    4. '           ' → logprob: -14.000387191772461
    5. '```' → logprob: -14.000387191772461
    6. '   ' → logprob: -14.375387191772461
    7. '+' → logprob: -14.500387191772461
    8. '-' → logprob: -15.625387191772461
    9. '       ' → logprob: -16.00038719177246
    10. '                   ' → logprob: -16.12538719177246

Token 1570: ' ar' (ID: 646)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1018033027648926
    2. ')' → logprob: -1.2268033027648926
    3. '-' → logprob: -1.6018033027648926
    4. '):
' → logprob: -2.9768033027648926
    5. ' +' → logprob: -3.1018033027648926
    6. '+' → logprob: -3.2268033027648926
    7. '):' → logprob: -4.226803302764893
    8. '```' → logprob: -4.351803302764893
    9. ')
' → logprob: -5.226803302764893
    10. ':' → logprob: -6.851803302764893

Token 1571: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.546106219291687
    2. ')' → logprob: -1.671106219291687
    3. '-' → logprob: -2.1711063385009766
    4. 'out' → logprob: -2.2961063385009766
    5. 'g' → logprob: -2.4211063385009766
    6. '```' → logprob: -2.7961063385009766
    7. 'e' → logprob: -3.1711063385009766
    8. '+' → logprob: -3.1711063385009766
    9. '2' → logprob: -3.5461063385009766
    10. 'range' → logprob: -4.171106338500977

Token 1572: '),
' (ID: 2313)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0360780954360962
    2. '-' → logprob: -1.4110780954360962
    3. '           ' → logprob: -1.9110780954360962
    4. ' +' → logprob: -2.6610779762268066
    5. '):
' → logprob: -2.6610779762268066
    6. '+' → logprob: -3.0360779762268066
    7. '):' → logprob: -3.5360779762268066
    8. '               ' → logprob: -4.286077976226807
    9. ')' → logprob: -4.411077976226807
    10. '```' → logprob: -5.911077976226807

Token 1573: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.842252254486084
    2. '           ' → logprob: -1.217252254486084
    3. ' ans' → logprob: -2.092252254486084
    4. '                   ' → logprob: -3.592252254486084
    5. '                                   ' → logprob: -4.092252254486084
    6. '```' → logprob: -4.342252254486084
    7. '
' → logprob: -4.592252254486084
    8. ' if' → logprob: -4.717252254486084
    9. '                               ' → logprob: -4.967252254486084
    10. '"' → logprob: -5.092252254486084

Token 1574: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2597488462924957
    2. ' ans' → logprob: -1.8847488164901733
    3. '               ' → logprob: -3.259748935699463
    4. 'ans' → logprob: -3.759748935699463
    5. ' if' → logprob: -4.509748935699463
    6. '                   ' → logprob: -6.509748935699463
    7. 'if' → logprob: -7.134748935699463
    8. '                       ' → logprob: -7.759748935699463
    9. '   ' → logprob: -8.134748458862305
    10. '(ans' → logprob: -8.634748458862305

Token 1575: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06631213426589966
    2. ' if' → logprob: -3.691312074661255
    3. ' ans' → logprob: -3.816312074661255
    4. '               ' → logprob: -5.066312313079834
    5. 'ans' → logprob: -5.191312313079834
    6. 'if' → logprob: -6.691312313079834
    7. '                   ' → logprob: -6.941312313079834
    8. ' for' → logprob: -7.066312313079834
    9. '                       ' → logprob: -7.941312313079834
    10. '                           ' → logprob: -8.066311836242676

Token 1576: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46407967805862427
    2. 'ans' → logprob: -1.4640796184539795
    3. 'if' → logprob: -2.2140796184539795
    4. ' if' → logprob: -3.8390796184539795
    5. ' ans' → logprob: -5.214079856872559
    6. '#' → logprob: -5.964079856872559
    7. '               ' → logprob: -7.839079856872559
    8. '(ans' → logprob: -8.214079856872559
    9. '       ' → logprob: -8.714079856872559
    10. ' #' → logprob: -9.464079856872559

Token 1577: ' met' (ID: 1421)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20113259553909302
    2. 'if' → logprob: -2.0761325359344482
    3. 'for' → logprob: -3.9511325359344482
    4. '           ' → logprob: -4.201132774353027
    5. 'v' → logprob: -5.451132774353027
    6. 'updates' → logprob: -5.451132774353027
    7. ' if' → logprob: -6.326132774353027
    8. ' ans' → logprob: -6.451132774353027
    9. '#' → logprob: -6.576132774353027
    10. '       ' → logprob: -6.701132774353027

Token 1578: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.10324925929307938
    2. '           ' → logprob: -3.1032493114471436
    3. ' à' → logprob: -3.1032493114471436
    4. '```' → logprob: -5.9782490730285645
    5. '#' → logprob: -6.8532490730285645
    6. 'ans' → logprob: -6.9782490730285645
    7. '-à' → logprob: -7.1032490730285645
    8. '=' → logprob: -7.6032490730285645
    9. 'aj' → logprob: -7.9782490730285645
    10. ' ' → logprob: -8.478249549865723

Token 1579: ' jour' (ID: 8379)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22796209156513214
    2. 'min' → logprob: -1.7279621362686157
    3. 'jour' → logprob: -4.477962017059326
    4. 'ans' → logprob: -4.977962017059326
    5. '```' → logprob: -5.352962017059326
    6. ' jour' → logprob: -6.852962017059326
    7. '
' → logprob: -7.102962017059326
    8. 'day' → logprob: -7.477962017059326
    9. '``' → logprob: -8.727962493896484
    10. 'jours' → logprob: -8.852962493896484

Token 1580: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018721171654760838
    2. ' ans' → logprob: -6.3768720626831055
    3. '           ' → logprob: -9.251872062683105
    4. '(ans' → logprob: -9.751872062683105
    5. '	ans' → logprob: -12.251872062683105
    6. '   ' → logprob: -12.376872062683105
    7. '       ' → logprob: -12.876872062683105
    8. '               ' → logprob: -13.876872062683105
    9. '```' → logprob: -14.001872062683105
    10. 'if' → logprob: -14.501872062683105

Token 1581: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01593535766005516
    2. 'if' → logprob: -4.76593542098999
    3. ' ans' → logprob: -5.14093542098999
    4. ' if' → logprob: -6.89093542098999
    5. '```' → logprob: -8.765934944152832
    6. '           ' → logprob: -8.890934944152832
    7. '``' → logprob: -10.515934944152832
    8. '	ans' → logprob: -10.890934944152832
    9. '(ans' → logprob: -11.015934944152832
    10. '               ' → logprob: -11.140934944152832

Token 1582: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4727812707424164
    2. '=' → logprob: -1.2227813005447388
    3. ' if' → logprob: -3.222781181335449
    4. '=max' → logprob: -3.847781181335449
    5. '=min' → logprob: -4.472781181335449
    6. '           ' → logprob: -5.847781181335449
    7. 'if' → logprob: -5.972781181335449
    8. '```' → logprob: -7.097781181335449
    9. '   ' → logprob: -7.347781181335449
    10. '(max' → logprob: -7.722781181335449

Token 1583: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5807502269744873
    2. ' min' → logprob: -0.9557502269744873
    3. 'max' → logprob: -3.0807502269744873
    4. ' max' → logprob: -4.955750465393066
    5. 'ans' → logprob: -6.330750465393066
    6. ' ans' → logprob: -7.080750465393066
    7. '`' → logprob: -9.705750465393066
    8. '```' → logprob: -9.955750465393066
    9. '=min' → logprob: -9.955750465393066
    10. '(min' → logprob: -10.205750465393066

Token 1584: ' minimum' (ID: 11085)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20458939671516418
    2. ' max' → logprob: -2.204589366912842
    3. 'min' → logprob: -2.829589366912842
    4. ' min' → logprob: -4.204589366912842
    5. '"' → logprob: -8.70458984375
    6. '`' → logprob: -8.82958984375
    7. ''' → logprob: -9.20458984375
    8. '=max' → logprob: -9.20458984375
    9. 'if' → logprob: -10.20458984375
    10. 'minimum' → logprob: -10.57958984375

Token 1585: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6859539151191711
    2. '(' → logprob: -1.4359538555145264
    3. '(min' → logprob: -2.1859538555145264
    4. '(
' → logprob: -2.3109538555145264
    5. 'ans' → logprob: -4.3109540939331055
    6. '           ' → logprob: -4.8109540939331055
    7. '(value' → logprob: -4.8109540939331055
    8. ' (' → logprob: -5.0609540939331055
    9. ' ans' → logprob: -5.6859540939331055
    10. '=' → logprob: -6.1859540939331055

Token 1586: 'on' (ID: 263)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11126215010881424
    2. ' ans' → logprob: -2.736262083053589
    3. 'value' → logprob: -4.236262321472168
    4. '(ans' → logprob: -4.736262321472168
    5. 'min' → logprob: -5.361262321472168
    6. ')' → logprob: -5.861262321472168
    7. ' value' → logprob: -5.986262321472168
    8. 'key' → logprob: -6.486262321472168
    9. ',' → logprob: -6.611262321472168
    10. ' min' → logprob: -6.611262321472168

Token 1587: ' cherche' (ID: 52345)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12068723887205124
    2. ' =' → logprob: -3.495687246322632
    3. 'max' → logprob: -3.870687246322632
    4. '=max' → logprob: -4.620687007904053
    5. '+=' → logprob: -4.995687007904053
    6. 'continue' → logprob: -5.245687007904053
    7. ')' → logprob: -5.370687007904053
    8. ' continue' → logprob: -5.495687007904053
    9. '=min' → logprob: -5.495687007904053
    10. '           ' → logprob: -5.870687007904053

Token 1588: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.738078236579895
    2. '(ans' → logprob: -0.988078236579895
    3. ')' → logprob: -2.1130781173706055
    4. ' ans' → logprob: -3.9880781173706055
    5. '=' → logprob: -6.4880781173706055
    6. 'min' → logprob: -6.6130781173706055
    7. '(
' → logprob: -6.7380781173706055
    8. 'max' → logprob: -6.7380781173706055
    9. 'value' → logprob: -7.3630781173706055
    10. ' min' → logprob: -7.6130781173706055

Token 1589: ''' (ID: 6)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4375634789466858
    2. ' min' → logprob: -1.312563419342041
    3. ' minimum' → logprob: -3.937563419342041
    4. 'max' → logprob: -4.062563419342041
    5. ')' → logprob: -4.562563419342041
    6. ' max' → logprob: -4.937563419342041
    7. ')
' → logprob: -5.062563419342041
    8. 'minimum' → logprob: -5.312563419342041
    9. ' possible' → logprob: -5.937563419342041
    10. '=min' → logprob: -6.187563419342041

Token 1590: 'optim' (ID: 29513)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7773777842521667
    2. ' ans' → logprob: -0.7773777842521667
    3. ')' → logprob: -3.7773778438568115
    4. ' min' → logprob: -4.652377605438232
    5. 'min' → logprob: -4.652377605438232
    6. ')
' → logprob: -5.277377605438232
    7. '(ans' → logprob: -5.277377605438232
    8. 'possible' → logprob: -5.777377605438232
    9. ' value' → logprob: -6.027377605438232
    10. ' max' → logprob: -6.152377605438232

Token 1591: 'isation' (ID: 6993)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.21630291640758514
    2. 'um' → logprob: -1.7163028717041016
    3. 'alité' → logprob: -5.091302871704102
    4. '```' → logprob: -5.841302871704102
    5. 'isation' → logprob: -6.466302871704102
    6. 'm' → logprob: -7.091302871704102
    7. '#' → logprob: -7.341302871704102
    8. 'ale' → logprob: -7.716302871704102
    9. 'imum' → logprob: -8.091302871704102
    10. 'ization' → logprob: -8.091302871704102

Token 1592: ' maximale' (ID: 76380)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7548353672027588
    2. '(' → logprob: -1.8798353672027588
    3. '(min' → logprob: -2.879835367202759
    4. ' =' → logprob: -3.004835367202759
    5. '(
' → logprob: -3.129835367202759
    6. ')' → logprob: -3.129835367202759
    7. '(value' → logprob: -3.504835367202759
    8. ',' → logprob: -3.754835367202759
    9. 'min' → logprob: -3.754835367202759
    10. '           ' → logprob: -4.12983512878418

Token 1593: ').
' (ID: 6294)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0041793584823608
    2. ',' → logprob: -1.8791793584823608
    3. '):
' → logprob: -2.2541794776916504
    4. '(ans' → logprob: -2.2541794776916504
    5. ')' → logprob: -2.3791794776916504
    6. ':
' → logprob: -3.5041794776916504
    7. '               ' → logprob: -3.7541794776916504
    8. ' if' → logprob: -4.12917947769165
    9. ')
' → logprob: -4.37917947769165
    10. '```' → logprob: -4.50417947769165

Token 1594: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10006161779165268
    2. '           ' → logprob: -2.9750616550445557
    3. 'if' → logprob: -4.100061416625977
    4. ' ans' → logprob: -4.475061416625977
    5. '               ' → logprob: -4.725061416625977
    6. '   ' → logprob: -6.100061416625977
    7. '       ' → logprob: -6.975061416625977
    8. ' for' → logprob: -7.100061416625977
    9. 'ans' → logprob: -7.475061416625977
    10. '```' → logprob: -7.725061416625977

Token 1595: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.43899592757225037
    2. ' if' → logprob: -1.5639959573745728
    3. 'ans' (adapté à ' ans') → logprob: -2.688995838165283
    4. 'if' → logprob: -3.563995838165283
    5. '           ' → logprob: -4.313995838165283
    6. '   ' → logprob: -4.813995838165283
    7. ' for' → logprob: -4.813995838165283
    8. '(ans' → logprob: -5.438995838165283
    9. 'for' → logprob: -5.938995838165283
    10. 'value' → logprob: -6.063995838165283

Token 1596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38735541701316833
    2. '=' → logprob: -1.1373554468154907
    3. '2' → logprob: -8.01235580444336
    4. '=min' → logprob: -9.38735580444336
    5. '   ' → logprob: -9.88735580444336
    6. '=max' → logprob: -12.13735580444336
    7. '    ' → logprob: -12.26235580444336
    8. '	' → logprob: -12.63735580444336
    9. '  ' → logprob: -13.76235580444336
    10. ' ' → logprob: -14.13735580444336

Token 1597: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.31326231360435486
    2. 'min' → logprob: -1.3132623434066772
    3. 'max' → logprob: -15.188261985778809
    4. '	min' → logprob: -15.313261985778809
    5. ' max' → logprob: -16.188262939453125
    6. '(min' → logprob: -16.563262939453125
    7. '=min' → logprob: -18.063262939453125
    8. '[min' → logprob: -19.313262939453125
    9. '   ' → logprob: -19.563262939453125
    10. '_min' → logprob: -19.813262939453125

Token 1598: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00011522514978423715
    2. 'ans' → logprob: -9.250115394592285
    3. '(' → logprob: -11.000115394592285
    4. ' ans' → logprob: -13.000115394592285
    5. '(
' → logprob: -16.25011444091797
    6. ' (' → logprob: -17.25011444091797
    7. '	ans' → logprob: -17.50011444091797
    8. '(answer' → logprob: -20.25011444091797
    9. '   ' → logprob: -20.25011444091797
    10. '(min' → logprob: -20.37511444091797

Token 1599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034967951476573944
    2. '(ans' → logprob: -3.4099678993225098
    3. '(' → logprob: -6.90996789932251
    4. ' ,' → logprob: -8.909968376159668
    5. ' ans' → logprob: -9.409968376159668
    6. '   ' → logprob: -9.909968376159668
    7. '           ' → logprob: -10.534968376159668
    8. ' (' → logprob: -11.409968376159668
    9. '       ' → logprob: -12.284968376159668
    10. 'ans' → logprob: -12.784968376159668

Token 1600: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06236783415079117
    2. ' ans' → logprob: -2.8123679161071777
    3. '           ' → logprob: -8.18736743927002
    4. '               ' → logprob: -9.93736743927002
    5. 'exp' → logprob: -10.31236743927002
    6. '(ans' → logprob: -11.31236743927002
    7. '       ' → logprob: -12.18736743927002
    8. '   ' → logprob: -12.43736743927002
    9. '	ans' → logprob: -12.43736743927002
    10. '            ' → logprob: -12.93736743927002

Token 1601: '2' (ID: 17)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06301050633192062
    2. '2' → logprob: -3.6880104541778564
    3. '-' → logprob: -4.0630106925964355
    4. ' +' → logprob: -4.8130106925964355
    5. '  ' → logprob: -6.3130106925964355
    6. ' /' → logprob: -6.3130106925964355
    7. '   ' → logprob: -6.4380106925964355
    8. ' ' → logprob: -6.5630106925964355
    9. '+' → logprob: -6.8130106925964355
    10. '          ' → logprob: -7.1880106925964355

Token 1602: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03558224439620972
    2. '-' → logprob: -3.4105823040008545
    3. '-value' → logprob: -7.160582065582275
    4. '           ' → logprob: -8.285582542419434
    5. '```' → logprob: -8.410582542419434
    6. ' +' → logprob: -8.910582542419434
    7. '          ' → logprob: -9.160582542419434
    8. '       ' → logprob: -9.785582542419434
    9. ')' → logprob: -10.035582542419434
    10. '(value' → logprob: -10.160582542419434

Token 1603: ' (' (ID: 350)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.05750323832035065
    2. 'sum' → logprob: -3.8075032234191895
    3. ' value' → logprob: -4.0575032234191895
    4. '(value' → logprob: -4.3075032234191895
    5. ' (' → logprob: -6.6825032234191895
    6. '(sum' → logprob: -7.1825032234191895
    7. '(' → logprob: -7.9325032234191895
    8. 'values' → logprob: -8.557503700256348
    9. ' sum' → logprob: -8.682503700256348
    10. '   ' → logprob: -9.307503700256348

Token 1604: 'sum' (ID: 12298)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.060137130320072174
    2. 'sum' → logprob: -2.9351370334625244
    3. 'out' → logprob: -6.3101372718811035
    4. '(value' → logprob: -6.4351372718811035
    5. ' value' → logprob: -6.8101372718811035
    6. '(sum' → logprob: -8.060136795043945
    7. ' sum' → logprob: -8.810136795043945
    8. '   ' → logprob: -9.810136795043945
    9. 'values' → logprob: -10.060136795043945
    10. '(' → logprob: -10.560136795043945

Token 1605: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.22113820910453796
    2. 'value' → logprob: -1.8461382389068604
    3. ' -' → logprob: -4.346138000488281
    4. 'values' → logprob: -4.471138000488281
    5. '(value' → logprob: -5.596138000488281
    6. '-' → logprob: -5.596138000488281
    7. ' value' → logprob: -5.971138000488281
    8. ' /' → logprob: -6.346138000488281
    9. '```' → logprob: -7.346138000488281
    10. '   ' → logprob: -7.721138000488281

Token 1606: '-value' (ID: 38798)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.33880239725112915
    2. '-' → logprob: -1.3388023376464844
    3. '-value' → logprob: -3.7138023376464844
    4. '  ' → logprob: -8.463802337646484
    5. '   ' → logprob: -8.713802337646484
    6. ' ' → logprob: -9.213802337646484
    7. '          ' → logprob: -10.213802337646484
    8. '    ' → logprob: -10.338802337646484
    9. ')' → logprob: -10.338802337646484
    10. 'value' → logprob: -10.463802337646484

Token 1607: ')' (ID: 8)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7352550625801086
    2. ' /' → logprob: -1.1102550029754639
    3. ')' → logprob: -1.7352550029754639
    4. ')/(' → logprob: -4.860255241394043
    5. ')/' → logprob: -5.485255241394043
    6. '/(' → logprob: -6.735255241394043
    7. '*' → logprob: -7.235255241394043
    8. '   ' → logprob: -8.110255241394043
    9. ' )' → logprob: -8.610255241394043
    10. '```' → logprob: -9.110255241394043

Token 1608: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.25357136130332947
    2. ' /' → logprob: -1.5035713911056519
    3. '/(' → logprob: -6.503571510314941
    4. '   ' → logprob: -9.878571510314941
    5. '*' → logprob: -10.253571510314941
    6. '```' → logprob: -10.878571510314941
    7. ')' → logprob: -12.128571510314941
    8. '/
' → logprob: -12.253571510314941
    9. '           ' → logprob: -12.503571510314941
    10. '       ' → logprob: -12.503571510314941

Token 1609: ' (' (ID: 350)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.18285158276557922
    2. ' (' → logprob: -1.8078515529632568
    3. '(' → logprob: -6.807851791381836
    4. 'out' → logprob: -6.932851791381836
    5. ' out' → logprob: -7.307851791381836
    6. '[out' → logprob: -8.807851791381836
    7. ''' → logprob: -9.932851791381836
    8. '   ' → logprob: -10.557851791381836
    9. ' ' → logprob: -10.682851791381836
    10. '`' → logprob: -11.432851791381836

Token 1610: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.04462563619017601
    2. '(out' → logprob: -3.1696255207061768
    3. '[out' → logprob: -7.169625759124756
    4. ' out' → logprob: -7.669625759124756
    5. '   ' → logprob: -8.044625282287598
    6. ' (' → logprob: -10.794625282287598
    7. '       ' → logprob: -11.419625282287598
    8. '	out' → logprob: -11.419625282287598
    9. '```' → logprob: -12.294625282287598
    10. '           ' → logprob: -12.919625282287598

Token 1611: 'deg' (ID: 30546)
  Prédit: 'deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.004346329253166914
    2. 'out' → logprob: -5.8793463706970215
    3. 'd' → logprob: -7.3793463706970215
    4. 'de' → logprob: -8.004345893859863
    5. ' deg' → logprob: -8.254345893859863
    6. '(out' → logprob: -9.879345893859863
    7. 'def' → logprob: -9.879345893859863
    8. ' (' → logprob: -9.879345893859863
    9. '_deg' → logprob: -10.879345893859863
    10. ' out' → logprob: -10.879345893859863

Token 1612: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20143623650074005
    2. ' -' → logprob: -1.7014362812042236
    3. ')' → logprob: -11.451436042785645
    4. '```' → logprob: -12.826436042785645
    5. 'v' → logprob: -13.076436042785645
    6. ' ' → logprob: -13.451436042785645
    7. '(v' → logprob: -13.576436042785645
    8. '   ' → logprob: -14.201436042785645
    9. ')-' → logprob: -14.451436042785645
    10. '[v' → logprob: -14.576436042785645

Token 1613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.75003433227539
    3. '```' → logprob: -11.87503433227539
    4. '   ' → logprob: -12.87503433227539
    5. '0' → logprob: -14.12503433227539
    6. '2' → logprob: -14.25003433227539
    7. ')' → logprob: -14.62503433227539
    8. '<|end|>' → logprob: -14.75003433227539
    9. '...' → logprob: -15.75003433227539
    10. '`' → logprob: -15.87503433227539

Token 1614: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002216562628746
    2. '))' → logprob: -2.350221633911133
    3. ' )' → logprob: -11.975221633911133
    4. ')))' → logprob: -12.475221633911133
    5. '))
' → logprob: -13.850221633911133
    6. ')
' → logprob: -14.225221633911133
    7. ' ))' → logprob: -14.225221633911133
    8. '           ' → logprob: -14.975221633911133
    9. '])' → logprob: -15.350221633911133
    10. '})' → logprob: -15.350221633911133

Token 1615: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1616: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00955786369740963
    2. 'return' → logprob: -5.759557723999023
    3. '
' → logprob: -6.134557723999023
    4. 'print' → logprob: -6.259557723999023
    5. ' return' → logprob: -6.384557723999023
    6. '	return' → logprob: -8.884557723999023
    7. '<|end|>' → logprob: -9.259557723999023
    8. ' print' → logprob: -9.384557723999023
    9. '    
' → logprob: -9.634557723999023
    10. '```' → logprob: -10.009557723999023

Token 1617: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011832444579340518
    2. '   ' → logprob: -9.500118255615234
    3. '```' → logprob: -10.500118255615234
    4. ' print' → logprob: -11.750118255615234
    5. 'return' → logprob: -11.750118255615234
    6. '
' → logprob: -16.750118255615234
    7. '#print' → logprob: -17.500118255615234
    8. '``' → logprob: -17.750118255615234
    9. '    
' → logprob: -18.500118255615234
    10. 'printf' → logprob: -19.250118255615234

Token 1618: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.3016134798526764
    2. 'ichage' → logprob: -2.0516135692596436
    3. 'iche' → logprob: -2.0516135692596436
    4. '#' → logprob: -6.5516133308410645
    5. 'ich' → logprob: -6.6766133308410645
    6. 'f' → logprob: -8.801613807678223
    7. '```' → logprob: -9.176613807678223
    8. '   ' → logprob: -9.551613807678223
    9. 'ichier' → logprob: -9.676613807678223
    10. '\' → logprob: -10.551613807678223

Token 1619: ' de' (ID: 334)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6245018243789673
    2. '()' → logprob: -1.9995018243789673
    3. '("\' → logprob: -2.1245017051696777
    4. '('\' → logprob: -2.2495017051696777
    5. '   ' → logprob: -2.6245017051696777
    6. '(' → logprob: -3.7495017051696777
    7. '(ans' → logprob: -5.749501705169678
    8. '
' → logprob: -6.749501705169678
    9. '()\' → logprob: -6.749501705169678
    10. 'print' → logprob: -7.124501705169678

Token 1620: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8318403363227844
    2. '(f' → logprob: -1.2068402767181396
    3. 'ans' → logprob: -2.3318402767181396
    4. '(ans' → logprob: -2.7068402767181396
    5. 'print' → logprob: -2.8318402767181396
    6. 'round' → logprob: -4.081840515136719
    7. '   ' → logprob: -4.956840515136719
    8. '("{' → logprob: -5.581840515136719
    9. ' f' → logprob: -5.706840515136719
    10. 'int' → logprob: -5.956840515136719

Token 1621: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06901651620864868
    2. '(ans' → logprob: -3.569016456604004
    3. 'ans' → logprob: -3.694016456604004
    4. 'round' → logprob: -4.694016456604004
    5. 'result' → logprob: -6.944016456604004
    6. '("%.' → logprob: -7.194016456604004
    7. ' print' → logprob: -7.444016456604004
    8. '("{' → logprob: -7.694016456604004
    9. '(round' → logprob: -7.819016456604004
    10. 'int' → logprob: -8.069016456604004

Token 1622: ' finale' (ID: 37759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05103468894958496
    2. 'print' → logprob: -3.176034688949585
    3. '()
' → logprob: -5.301034927368164
    4. '()' → logprob: -6.426034927368164
    5. '```' → logprob: -7.676034927368164
    6. '(ans' → logprob: -8.176034927368164
    7. '
' → logprob: -8.426034927368164
    8. '\' → logprob: -9.176034927368164
    9. '(' → logprob: -9.301034927368164
    10. '("\' → logprob: -9.676034927368164

Token 1623: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2524532377719879
    2. 'print' → logprob: -1.5024532079696655
    3. '```' → logprob: -8.377452850341797
    4. ' print' → logprob: -8.752452850341797
    5. '
' → logprob: -9.377452850341797
    6. '    
' → logprob: -11.252452850341797
    7. '(print' → logprob: -11.377452850341797
    8. '\' → logprob: -11.752452850341797
    9. '()
' → logprob: -12.377452850341797
    10. '``' → logprob: -12.502452850341797

Token 1624: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03859803080558777
    2. '   ' → logprob: -3.28859806060791
    3. ' print' → logprob: -7.53859806060791
    4. ')' → logprob: -11.53859806060791
    5. ')
' → logprob: -12.03859806060791
    6. 'round' → logprob: -13.03859806060791
    7. '```' → logprob: -13.16359806060791
    8. 'end' → logprob: -13.78859806060791
    9. '"\' → logprob: -14.41359806060791
    10. 'f' → logprob: -14.66359806060791

Token 1625: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7381631135940552
    2. 'ode' → logprob: -2.2381629943847656
    3. 'lose' → logprob: -2.8631629943847656
    4. 'har' → logprob: -2.8631629943847656
    5. '#' → logprob: -3.1131629943847656
    6. 'ont' → logprob: -3.2381629943847656
    7. '```' → logprob: -3.2381629943847656
    8. 'ho' → logprob: -3.3631629943847656
    9. 'on' → logprob: -4.113162994384766
    10. '   ' → logprob: -4.238162994384766

Token 1626: '-à' (ID: 56297)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6465482711791992
    2. '   ' → logprob: -0.8965482711791992
    3. 'print' → logprob: -3.146548271179199
    4. ' f' → logprob: -4.521548271179199
    5. ' print' → logprob: -5.146548271179199
    6. '```' → logprob: -5.896548271179199
    7. '"' → logprob: -6.146548271179199
    8. '{' → logprob: -7.021548271179199
    9. '(f' → logprob: -7.146548271179199
    10. '
' → logprob: -7.896548271179199

Token 1627: '-dire' (ID: 76064)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33736109733581543
    2. 's' → logprob: -2.9623610973358154
    3. '   ' → logprob: -2.9623610973358154
    4. 'r' → logprob: -3.2123610973358154
    5. ''' → logprob: -3.8373610973358154
    6. '1' → logprob: -3.9623610973358154
    7. 'n' → logprob: -4.0873613357543945
    8. 'ans' → logprob: -4.4623613357543945
    9. 'f' → logprob: -4.7123613357543945
    10. 'x' → logprob: -5.0873613357543945

Token 1628: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1905258297920227
    2. ' f' → logprob: -2.565525770187378
    3. 'print' → logprob: -2.815525770187378
    4. 'f' → logprob: -3.815525770187378
    5. ' print' → logprob: -4.690526008605957
    6. 'round' → logprob: -5.940526008605957
    7. '"' → logprob: -7.815526008605957
    8. 'int' → logprob: -7.940526008605957
    9. ' round' → logprob: -8.065526008605957
    10. '
' → logprob: -8.190526008605957

Token 1629: ' plus' (ID: 2932)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11875008046627045
    2. ' print' → logprob: -2.2437500953674316
    3. '   ' → logprob: -6.618750095367432
    4. 'round' → logprob: -6.868750095367432
    5. '"' → logprob: -7.368750095367432
    6. '0' → logprob: -8.118749618530273
    7. ' ' → logprob: -8.243749618530273
    8. '
' → logprob: -8.243749618530273
    9. 'f' → logprob: -8.368749618530273
    10. '6' → logprob: -8.493749618530273

Token 1630: ' petite' (ID: 28119)
  Prédit: ' grande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -1.7205872535705566
    2. 'pet' → logprob: -2.3455872535705566
    3. ' faible' → logprob: -2.3455872535705566
    4. 'import' → logprob: -2.4705872535705566
    5. ' précise' → logprob: -2.7205872535705566
    6. ' proche' → logprob: -2.8455872535705566
    7. ' petite' → logprob: -2.8455872535705566
    8. 'pr' → logprob: -2.9705872535705566
    9. '```' → logprob: -3.2205872535705566
    10. ' -' → logprob: -3.7205872535705566

Token 1631: ' esp' (ID: 7461)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5320499539375305
    2. 'possible' → logprob: -2.4070498943328857
    3. 'esp' → logprob: -2.6570498943328857
    4. 'att' → logprob: -2.6570498943328857
    5. '\n' → logprob: -2.7820498943328857
    6. '\' → logprob: -3.0320498943328857
    7. '   ' → logprob: -3.5320498943328857
    8. ' valeur' → logprob: -5.157050132751465
    9. '(ans' → logprob: -5.532050132751465
    10. 'ans' → logprob: -5.657050132751465

Token 1632: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.0017887057038024068
    2. 'érence' → logprob: -7.37678861618042
    3. 'érée' → logprob: -8.251789093017578
    4. '
' → logprob: -9.126789093017578
    5. 'ération' → logprob: -9.501789093017578
    6. '\n' → logprob: -9.501789093017578
    7. 'érience' → logprob: -9.876789093017578
    8. '\r' → logprob: -10.126789093017578
    9. 'é' → logprob: -10.126789093017578
    10. '```' → logprob: -10.126789093017578

Token 1633: ' trouv' (ID: 40254)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48456111550331116
    2. '   ' → logprob: -1.8595610857009888
    3. '(' → logprob: -2.2345612049102783
    4. '()
' → logprob: -2.8595612049102783
    5. 'print' → logprob: -3.1095612049102783
    6. '(print' → logprob: -4.359560966491699
    7. '(ans' → logprob: -6.859560966491699
    8. ',' → logprob: -6.859560966491699
    9. '("\' → logprob: -7.359560966491699
    10. '
' → logprob: -7.609560966491699

Token 1634: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9621442556381226
    2. 'ée' → logprob: -1.2121442556381226
    3. 'ur' → logprob: -2.087144374847412
    4. 'e' → logprob: -2.212144374847412
    5. 'ue' → logprob: -3.337144374847412
    6. 'é' → logprob: -3.587144374847412
    7. ')' → logprob: -5.462144374847412
    8. 'print' → logprob: -5.462144374847412
    9. 'urée' → logprob: -5.587144374847412
    10. 'uré' → logprob: -6.337144374847412

Token 1635: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033900451380759478
    2. '
' → logprob: -7.003389835357666
    3. '()' → logprob: -7.003389835357666
    4. '()
' → logprob: -7.253389835357666
    5. 'print' → logprob: -7.503389835357666
    6. '```' → logprob: -9.128390312194824
    7. '(' → logprob: -9.628390312194824
    8. '    
' → logprob: -10.128390312194824
    9. '("\' → logprob: -10.753390312194824
    10. '\' → logprob: -11.128390312194824

Token 1636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2592182159423828
    2. 'print' → logprob: -1.5092182159423828
    3. '
' → logprob: -5.759218215942383
    4. ' print' → logprob: -6.134218215942383
    5. '```' → logprob: -6.259218215942383
    6. '``' → logprob: -11.634218215942383
    7. '    
' → logprob: -11.759218215942383
    8. '\' → logprob: -12.384218215942383
    9. '  
' → logprob: -13.384218215942383
    10. '	print' → logprob: -13.509218215942383

Token 1637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010220900876447558
    2. ' print' → logprob: -7.001021862030029
    3. '```' → logprob: -9.501022338867188
    4. '   ' → logprob: -10.251022338867188
    5. '
' → logprob: -15.376022338867188
    6. '``' → logprob: -16.501022338867188
    7. '`' → logprob: -16.876022338867188
    8. '    
' → logprob: -17.501022338867188
    9. '	print' → logprob: -19.376022338867188
    10. '\' → logprob: -19.751022338867188

Token 1638: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0071861883625388145
    2. '(round' → logprob: -5.632186412811279
    3. '(f' → logprob: -5.757186412811279
    4. '("%.' → logprob: -9.132185935974121
    5. '(' → logprob: -9.382185935974121
    6. '()' → logprob: -9.507185935974121
    7. '(int' → logprob: -9.757185935974121
    8. '("{' → logprob: -10.757185935974121
    9. '('' → logprob: -10.882185935974121
    10. '(float' → logprob: -11.007185935974121

Token 1639: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3596853831550106e-05
    2. ' )' → logprob: -11.000053405761719
    3. '()' → logprob: -11.125053405761719
    4. '())' → logprob: -12.375053405761719
    5. ')
' → logprob: -12.500053405761719
    6. '**' → logprob: -12.500053405761719
    7. '   ' → logprob: -12.875053405761719
    8. '    ' → logprob: -13.625053405761719
    9. '`)' → logprob: -13.625053405761719
    10. '```' → logprob: -13.875053405761719

Token 1640: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1641: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1642: 'el' (ID: 296)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.48113974928855896
    2. 'end' → logprob: -1.6061397790908813
    3. 'e' → logprob: -2.231139659881592
    4. 'l' → logprob: -4.231139659881592
    5. 'en' → logprob: -4.481139659881592
    6. '```' → logprob: -4.481139659881592
    7. ')' → logprob: -4.731139659881592
    8. '()' → logprob: -4.981139659881592
    9. 'le' → logprob: -5.356139659881592
    10. 'solve' → logprob: -5.606139659881592

Token 1643: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0131597518920898
    2. 'solve' → logprob: -1.1381597518920898
    3. '(' → logprob: -1.3881597518920898
    4. '(s' → logprob: -3.13815975189209
    5. '(
' → logprob: -3.88815975189209
    6. ' solve' → logprob: -6.63815975189209
    7. '```' → logprob: -7.38815975189209
    8. 'def' → logprob: -7.38815975189209
    9. '()
' → logprob: -8.63815975189209
    10. '   ' → logprob: -9.13815975189209

Token 1644: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00042292833677493036
    2. ' solve' → logprob: -7.875422954559326
    3. '```' → logprob: -10.375422477722168
    4. '(s' → logprob: -11.625422477722168
    5. '`s' → logprob: -13.375422477722168
    6. '__' → logprob: -14.750422477722168
    7. 'def' → logprob: -15.500422477722168
    8. '.solve' → logprob: -15.750422477722168
    9. '``' → logprob: -16.125423431396484
    10. '_s' → logprob: -16.500423431396484

Token 1645: ' fonction' (ID: 17610)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.02120385691523552
    2. '```' → logprob: -4.021203994750977
    3. 'def' → logprob: -6.646203994750977
    4. 'if' → logprob: -7.396203994750977
    5. ' solve' → logprob: -7.396203994750977
    6. '`' → logprob: -8.896203994750977
    7. '__' → logprob: -9.021203994750977
    8. '``' → logprob: -9.521203994750977
    9. 'function' → logprob: -10.021203994750977
    10. 'solution' → logprob: -10.146203994750977

Token 1646: ' principale' (ID: 68926)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07491430640220642
    2. 'solve' → logprob: -2.8249142169952393
    3. '()
' → logprob: -4.574914455413818
    4. '```' → logprob: -6.824914455413818
    5. '()\' → logprob: -7.949914455413818
    6. '(' → logprob: -8.57491397857666
    7. ' solve' → logprob: -8.94991397857666
    8. '(
' → logprob: -8.94991397857666
    9. '()<' → logprob: -9.07491397857666
    10. '()`' → logprob: -9.19991397857666

Token 1647: ' qui' (ID: 2780)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23259301483631134
    2. '
' → logprob: -2.232593059539795
    3. '<|end|>' → logprob: -3.232593059539795
    4. '```' → logprob: -3.732593059539795
    5. 'solve' → logprob: -3.857593059539795
    6. '()
' → logprob: -4.982593059539795
    7. '(
' → logprob: -6.107593059539795
    8. '\n' → logprob: -6.232593059539795
    9. '\' → logprob: -6.607593059539795
    10. ' solve' → logprob: -6.732593059539795

Token 1648: ' effect' (ID: 3159)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3002621531486511
    2. 'if' → logprob: -1.425262212753296
    3. '```' → logprob: -4.550261974334717
    4. '__' → logprob: -5.425261974334717
    5. ' solve' → logprob: -6.300261974334717
    6. '()' → logprob: -7.175261974334717
    7. ' if' → logprob: -7.550261974334717
    8. '_' → logprob: -8.300262451171875
    9. '{' → logprob: -9.675262451171875
    10. '
' → logprob: -9.675262451171875

Token 1649: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00012082771718269214
    2. 'u' → logprob: -9.625121116638184
    3. 'uera' → logprob: -10.000121116638184
    4. 'uer' → logprob: -12.125121116638184
    5. 'uent' → logprob: -13.875121116638184
    6. 'uez' → logprob: -14.500121116638184
    7. 'ues' → logprob: -14.875121116638184
    8. '#' → logprob: -15.000121116638184
    9. 'ure' → logprob: -15.125121116638184
    10. 'uet' → logprob: -15.375121116638184

Token 1650: ' tous' (ID: 10688)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1390666514635086
    2. 'solve' → logprob: -2.139066696166992
    3. '()
' → logprob: -4.764066696166992
    4. '```' → logprob: -5.889066696166992
    5. '()\' → logprob: -8.264066696166992
    6. '()`' → logprob: -8.514066696166992
    7. '()

' → logprob: -10.264066696166992
    8. '();' → logprob: -10.389066696166992
    9. '(
' → logprob: -10.389066696166992
    10. '())' → logprob: -10.639066696166992

Token 1651: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008377424674108624
    2. '_' → logprob: -8.625837326049805
    3. '()
' → logprob: -8.875837326049805
    4. 'def' → logprob: -9.125837326049805
    5. '<|end|>' → logprob: -9.375837326049805
    6. '()>' → logprob: -9.500837326049805
    7. 'solve' → logprob: -9.875837326049805
    8. '()<' → logprob: -10.250837326049805
    9. '```' → logprob: -11.000837326049805
    10. ')' → logprob: -11.125837326049805

Token 1652: ' calcul' (ID: 7559)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6616354584693909
    2. 'calcul' → logprob: -2.036635398864746
    3. 'solve' → logprob: -2.036635398864746
    4. '```' → logprob: -2.161635398864746
    5. '__' → logprob: -3.161635398864746
    6. 'import' → logprob: -4.036635398864746
    7. 'tests' → logprob: -4.911635398864746
    8. '#' → logprob: -5.036635398864746
    9. 'test' → logprob: -5.161635398864746
    10. 'def' → logprob: -5.661635398864746

Token 1653: 's' (ID: 82)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.708840548992157
    2. 'ate' → logprob: -0.708840548992157
    3. 'ation' → logprob: -5.458840370178223
    4. 'solve' → logprob: -5.583840370178223
    5. 'ée' → logprob: -6.083840370178223
    6. 'er' → logprob: -6.958840370178223
    7. 'é' → logprob: -7.333840370178223
    8. 'aire' → logprob: -7.583840370178223
    9. 'te' → logprob: -7.708840370178223
    10. 'es' → logprob: -7.833840370178223

Token 1654: ' quand' (ID: 18026)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06526558101177216
    2. '<|end|>' → logprob: -3.315265655517578
    3. '```' → logprob: -4.315265655517578
    4. '
' → logprob: -5.565265655517578
    5. '(' → logprob: -5.690265655517578
    6. '\' → logprob: -6.315265655517578
    7. '()
' → logprob: -6.940265655517578
    8. '\n' → logprob: -6.940265655517578
    9. 'solve' → logprob: -7.190265655517578
    10. '(
' → logprob: -7.690265655517578

Token 1655: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007330321241170168
    2. ' __' → logprob: -7.250732898712158
    3. 'True' → logprob: -11.375733375549316
    4. 'solve' → logprob: -11.500733375549316
    5. ' True' → logprob: -14.375733375549316
    6. '```' → logprob: -14.625733375549316
    7. 'if' → logprob: -15.875733375549316
    8. '___' → logprob: -16.000732421875
    9. '__
' → logprob: -17.000732421875
    10. ''' → logprob: -17.500732421875

Token 1656: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019295861711725593
    2. '```' → logprob: -6.751929759979248
    3. ' __' → logprob: -7.501929759979248
    4. 'if' → logprob: -9.12692928314209
    5. ''' → logprob: -10.12692928314209
    6. '___' → logprob: -11.12692928314209
    7. 'name' → logprob: -11.12692928314209
    8. '``' → logprob: -11.37692928314209
    9. '"' → logprob: -12.75192928314209
    10. '_' → logprob: -13.00192928314209

Token 1657: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05745922774076462
    2. '__' → logprob: -3.4324591159820557
    3. '```' → logprob: -4.057459354400635
    4. 'is' → logprob: -5.307459354400635
    5. 'est' → logprob: -7.307459354400635
    6. '#' → logprob: -8.682458877563477
    7. 's' → logprob: -9.307458877563477
    8. ' is' → logprob: -9.432458877563477
    9. '``' → logprob: -9.557458877563477
    10. '==' → logprob: -10.182458877563477

Token 1658: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2924429178237915
    2. 'ex' → logprob: -2.042442798614502
    3. 'execut' → logprob: -2.167442798614502
    4. ' exécut' → logprob: -5.167442798614502
    5. '_ex' → logprob: -6.792442798614502
    6. 'run' → logprob: -7.167442798614502
    7. 'exec' → logprob: -7.542442798614502
    8. 'import' → logprob: -7.792442798614502
    9. ' __' → logprob: -8.54244327545166
    10. 'direct' → logprob: -8.54244327545166

Token 1659: 'é' (ID: 377)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007972388411872089
    2. '()
' → logprob: -7.625797271728516
    3. '(' → logprob: -8.875797271728516
    4. '()\' → logprob: -10.250797271728516
    5. '```' → logprob: -10.750797271728516
    6. ')' → logprob: -10.750797271728516
    7. '())' → logprob: -11.375797271728516
    8. '<|end|>' → logprob: -11.750797271728516
    9. '_' → logprob: -11.875797271728516
    10. '()<' → logprob: -12.125797271728516

Token 1660: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33180031180381775
    2. '()' → logprob: -1.4568003416061401
    3. '<|end|>' → logprob: -3.4568002223968506
    4. '()
' → logprob: -4.33180046081543
    5. '(
' → logprob: -6.33180046081543
    6. '```' → logprob: -6.70680046081543
    7. '\n' → logprob: -7.20680046081543
    8. '\' → logprob: -7.95680046081543
    9. '(' → logprob: -8.95680046081543
    10. 'solve' → logprob: -9.33180046081543

Token 1661: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.33550387620925903
    2. '```' → logprob: -1.8355038166046143
    3. '
' → logprob: -2.2105038166046143
    4. 'if' → logprob: -4.210504055023193
    5. '``' → logprob: -7.835504055023193
    6. ' solve' → logprob: -8.085503578186035
    7. '\' → logprob: -9.210503578186035
    8. '\n' → logprob: -9.835503578186035
    9. '<|end|>' → logprob: -10.835503578186035
    10. '\
' → logprob: -10.960503578186035

Token 1662: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1660
Tokens correctement prédits (1ère position, stricte): 451
Tokens correctement prédits (1ère position, avec adaptation): 470
Tokens correctement prédits (top 10): 931
Précision stricte (1ère position): 27.17%
Précision adaptée (1ère position): 28.31%
Précision (top 10): 56.08%
================================================================================
