================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
import operator

def read_input():
    return next(map(lambda s: list(map(int, s.split())), sys.stdin)).__iter__()

A, B = (lambda gen: (lambda x, y: (x, y))(*gen))(read_input())

f = lambda a, b: {True: "IMPOSSIBLE", False: reduce(lambda x, y: operator.floordiv(x, 2), [a + b])}[(a - b) & 1 == 1]
print(f(A, B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32055988907814026
    2. '.' → logprob: -1.4455598592758179
    3. 'import' → logprob: -4.570559978485107
    4. '\' → logprob: -4.570559978485107
    5. 'newline' → logprob: -5.195559978485107
    6. '<|end|>' → logprob: -5.320559978485107
    7. '
' → logprob: -6.570559978485107
    8. '```' → logprob: -7.070559978485107
    9. '<|end|>' → logprob: -7.195559978485107
    10. '\r' → logprob: -7.195559978485107

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.02227257750928402
    2. 'os' → logprob: -3.8972725868225098
    3. ' pathlib' → logprob: -7.89727258682251
    4. ' Py' → logprob: -8.022272109985352
    5. ' math' → logprob: -8.147272109985352
    6. ' collections' → logprob: -8.397272109985352
    7. ' ' → logprob: -9.022272109985352
    8. 'collections' → logprob: -9.772272109985352
    9. ' datetime' → logprob: -9.897272109985352
    10. ' subprocess' → logprob: -10.522272109985352

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11333024501800537
    2. 'import' → logprob: -2.238330364227295
    3. '_import' → logprob: -8.113329887390137
    4. ' ' → logprob: -8.863329887390137
    5. '_' → logprob: -10.363329887390137
    6. '	import' → logprob: -10.988329887390137
    7. '.' → logprob: -12.488329887390137
    8. ' _' → logprob: -12.613329887390137
    9. ' ' → logprob: -12.738329887390137
    10. '```' → logprob: -13.238329887390137

Token 6: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.575727105140686
    2. 'wrap' → logprob: -1.575727105140686
    3. ' wraps' → logprob: -1.700727105140686
    4. ' l' → logprob: -1.825727105140686
    5. 'partial' → logprob: -1.825727105140686
    6. ' partial' → logprob: -2.8257269859313965
    7. 'reduce' → logprob: -4.0757269859313965
    8. 'import' → logprob: -5.9507269859313965
    9. ' reduce' → logprob: -6.8257269859313965
    10. 'cache' → logprob: -8.075727462768555

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7310811281204224
    2. ',' → logprob: -1.1060811281204224
    3. '(' → logprob: -2.856081008911133
    4. '\n' → logprob: -3.106081008911133
    5. '\' → logprob: -3.231081008911133
    6. '```' → logprob: -4.231081008911133
    7. '.' → logprob: -4.356081008911133
    8. '`' → logprob: -5.606081008911133
    9. 'def' → logprob: -6.106081008911133
    10. '[' → logprob: -6.606081008911133

Token 8: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21973106265068054
    2. ',' → logprob: -2.219731092453003
    3. '```' → logprob: -3.469731092453003
    4. '\n' → logprob: -3.844731092453003
    5. 'def' → logprob: -4.344730854034424
    6. '\' → logprob: -5.469730854034424
    7. ',

' → logprob: -5.719730854034424
    8. ' 

' → logprob: -5.844730854034424
    9. '

' → logprob: -6.094730854034424
    10. '.' → logprob: -6.719730854034424

Token 9: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006351180840283632
    2. ' math' → logprob: -5.256350994110107
    3. ' itertools' → logprob: -8.006351470947266
    4. 'os' → logprob: -8.506351470947266
    5. ' functools' → logprob: -8.506351470947266
    6. ' operator' → logprob: -8.756351470947266
    7. ' collections' → logprob: -8.756351470947266
    8. ' re' → logprob: -11.131351470947266
    9. ' ' → logprob: -11.381351470947266
    10. ' sys' → logprob: -11.631351470947266

Token 10: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11323647201061249
    2. ',' → logprob: -3.613236427307129
    3. '\' → logprob: -3.988236427307129
    4. '(' → logprob: -4.113236427307129
    5. '\n' → logprob: -4.738236427307129
    6. 'def' → logprob: -4.863236427307129
    7. 'import' → logprob: -4.988236427307129
    8. '#' → logprob: -5.363236427307129
    9. 'newline' → logprob: -5.613236427307129
    10. '<|end|>' → logprob: -6.113236427307129

Token 11: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2297266274690628
    2. '\' → logprob: -2.479726552963257
    3. '.' → logprob: -2.854726552963257
    4. '#' → logprob: -4.604726791381836
    5. '(' → logprob: -4.604726791381836
    6. '```' → logprob: -5.229726791381836
    7. 'import' → logprob: -5.354726791381836
    8. ',' → logprob: -5.354726791381836
    9. '\n' → logprob: -5.479726791381836
    10. '(
' → logprob: -5.854726791381836

Token 12: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1919693499803543
    2. ' factorial' → logprob: -2.816969394683838
    3. ' reduce' → logprob: -3.441969394683838
    4. ' calculate' → logprob: -3.441969394683838
    5. ' sum' → logprob: -3.691969394683838
    6. ' map' → logprob: -5.566969394683838
    7. ' add' → logprob: -5.691969394683838
    8. ' process' → logprob: -5.691969394683838
    9. '_' → logprob: -5.691969394683838
    10. ' factor' → logprob: -6.191969394683838

Token 13: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004059998318552971
    2. '_line' → logprob: -5.879059791564941
    3. '(' → logprob: -7.504059791564941
    4. '_input' → logprob: -7.879059791564941
    5. '_:' → logprob: -9.379059791564941
    6. '_(' → logprob: -9.754059791564941
    7. '_data' → logprob: -10.129059791564941
    8. '_space' → logprob: -10.754059791564941
    9. '_file' → logprob: -10.754059791564941
    10. ' _' → logprob: -11.129059791564941

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004433205351233482
    2. '_' → logprob: -6.2544331550598145
    3. '():' → logprob: -6.6294331550598145
    4. '```' → logprob: -8.004433631896973
    5. '()' → logprob: -8.129433631896973
    6. '("("' → logprob: -8.754433631896973
    7. ' (' → logprob: -9.504433631896973
    8. '_parent' → logprob: -10.504433631896973
    9. '(_' → logprob: -10.629433631896973
    10. '('' → logprob: -10.754433631896973

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13718575239181519
    2. '():' → logprob: -3.13718581199646
    3. '()' → logprob: -3.76218581199646
    4. '\' → logprob: -4.387185573577881
    5. ' return' → logprob: -4.512185573577881
    6. '(' → logprob: -4.762185573577881
    7. '    ' → logprob: -5.262185573577881
    8. '```' → logprob: -5.387185573577881
    9. '\n' → logprob: -5.887185573577881
    10. 'return' → logprob: -6.012185573577881

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08033908158540726
    2. ' return' → logprob: -3.330339193344116
    3. ' line' → logprob: -3.955339193344116
    4. 'return' (adapté à ' return') → logprob: -4.330338954925537
    5. ' lines' → logprob: -5.830338954925537
    6. 'data' → logprob: -6.080338954925537
    7. ' data' → logprob: -6.705338954925537
    8. ' input' → logprob: -7.205338954925537
    9. 'line' → logprob: -7.455338954925537
    10. 'input' → logprob: -7.580338954925537

Token 17: ' next' (ID: 2613)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10948299616575241
    2. ' list' → logprob: -2.484483003616333
    3. 'sys' → logprob: -5.234482765197754
    4. ' input' → logprob: -5.359482765197754
    5. ' ' → logprob: -5.359482765197754
    6. 'list' → logprob: -6.109482765197754
    7. ' map' → logprob: -6.609482765197754
    8. ' int' → logprob: -7.109482765197754
    9. 'input' → logprob: -7.359482765197754
    10. 'int' → logprob: -9.234482765197754

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7440512180328369
    2. '(sys' → logprob: -0.7440512180328369
    3. '(iter' → logprob: -3.244051218032837
    4. '(input' → logprob: -4.869050979614258
    5. '(iterator' → logprob: -7.494050979614258
    6. '(lambda' → logprob: -8.119050979614258
    7. '()' → logprob: -8.244050979614258
    8. '(line' → logprob: -8.244050979614258
    9. '(eval' → logprob: -8.244050979614258
    10. '(file' → logprob: -8.369050979614258

Token 19: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03461506590247154
    2. '(str' → logprob: -4.0346150398254395
    3. '(' → logprob: -4.1596150398254395
    4. 'int' → logprob: -8.534615516662598
    5. 'str' → logprob: -8.909615516662598
    6. '(lambda' → logprob: -8.909615516662598
    7. '(eval' → logprob: -10.409615516662598
    8. '(operator' → logprob: -10.659615516662598
    9. ' int' → logprob: -10.784615516662598
    10. ',int' → logprob: -10.909615516662598

Token 20: ' s' (ID: 265)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8168877363204956
    2. 'int' → logprob: -1.0668877363204956
    3. ' str' → logprob: -2.441887855529785
    4. 'str' → logprob: -2.691887855529785
    5. ' sys' → logprob: -3.066887855529785
    6. 'sys' → logprob: -5.066887855529785
    7. 'line' → logprob: -6.691887855529785
    8. ' line' → logprob: -7.066887855529785
    9. '(int' → logprob: -7.191887855529785
    10. ' x' → logprob: -7.441887855529785

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31714048981666565
    2. ' :' → logprob: -2.067140579223633
    3. ' s' → logprob: -2.317140579223633
    4. 's' → logprob: -3.192140579223633
    5. ':int' → logprob: -5.692140579223633
    6. ' int' → logprob: -7.942140579223633
    7. 'lambda' → logprob: -7.942140579223633
    8. ':s' → logprob: -8.067140579223633
    9. ':str' → logprob: -8.192140579223633
    10. 'int' → logprob: -8.192140579223633

Token 22: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17393426597118378
    2. 's' → logprob: -2.1739342212677
    3. ' int' → logprob: -3.2989342212677
    4. ' s' → logprob: -5.173934459686279
    5. 'sys' → logprob: -6.298934459686279
    6. 'str' → logprob: -7.798934459686279
    7. ' sys' → logprob: -8.173933982849121
    8. '[int' → logprob: -8.423933982849121
    9. 'list' → logprob: -8.923933982849121
    10. '(int' → logprob: -9.173933982849121

Token 23: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0026121633127331734
    2. '(s' → logprob: -6.252612113952637
    3. '(' → logprob: -7.377612113952637
    4. '(int' → logprob: -10.377612113952637
    5. '(filter' → logprob: -11.002612113952637
    6. 'map' → logprob: -12.752612113952637
    7. ' map' → logprob: -13.252612113952637
    8. '(str' → logprob: -13.377612113952637
    9. '(sys' → logprob: -14.252612113952637
    10. '	map' → logprob: -14.252612113952637

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006996880983933806
    2. '(' → logprob: -7.625699520111084
    3. '(str' → logprob: -8.625699996948242
    4. '(lambda' → logprob: -11.750699996948242
    5. '(ord' → logprob: -11.750699996948242
    6. '(operator' → logprob: -12.125699996948242
    7. '<int' → logprob: -12.250699996948242
    8. 'int' → logprob: -13.625699996948242
    9. ')' → logprob: -13.750699996948242
    10. '[int' → logprob: -13.875699996948242

Token 25: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005431188736110926
    2. '(' → logprob: -5.630431175231934
    3. ',' → logprob: -7.005431175231934
    4. 's' → logprob: -7.630431175231934
    5. '(sys' → logprob: -8.130431175231934
    6. ' (' → logprob: -9.630431175231934
    7. ',s' → logprob: -11.130431175231934
    8. '(
' → logprob: -11.755431175231934
    9. '),' → logprob: -11.880431175231934
    10. ' ' → logprob: -12.005431175231934

Token 26: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5231411457061768
    2. ' s' → logprob: -0.8981411457061768
    3. ' ' → logprob: -12.523140907287598
    4. '(s' → logprob: -12.898140907287598
    5. '	s' → logprob: -12.898140907287598
    6. '_s' → logprob: -13.023140907287598
    7. 'sys' → logprob: -13.148140907287598
    8. 'str' → logprob: -13.773140907287598
    9. ' sys' → logprob: -14.023140907287598
    10. ')s' → logprob: -14.523140907287598

Token 27: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2098739594221115
    2. '.split' → logprob: -1.709873914718628
    3. '.' → logprob: -5.334874153137207
    4. '().' → logprob: -5.709874153137207
    5. ' .' → logprob: -8.834874153137207
    6. '.rstrip' → logprob: -9.084874153137207
    7. '.readline' → logprob: -11.209874153137207
    8. 'strip' → logprob: -12.209874153137207
    9. '(strip' → logprob: -12.709874153137207
    10. '.replace' → logprob: -13.084874153137207

Token 28: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2354031652212143
    2. '())))' → logprob: -2.610403060913086
    3. '()' → logprob: -2.735403060913086
    4. '())' → logprob: -3.360403060913086
    5. '()))' → logprob: -3.360403060913086
    6. '())))
' → logprob: -7.735403060913086
    7. '())),
' → logprob: -7.735403060913086
    8. '(','' → logprob: -8.110403060913086
    9. '()),' → logprob: -8.360403060913086
    10. '("' → logprob: -8.485403060913086

Token 29: ')),' (ID: 12098)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1081559658050537
    2. '()' → logprob: -1.4831559658050537
    3. '()),' → logprob: -1.6081559658050537
    4. '())' → logprob: -2.2331559658050537
    5. '())))' → logprob: -3.3581559658050537
    6. ')),' → logprob: -3.4831559658050537
    7. '()))' → logprob: -3.8581559658050537
    8. ')))' → logprob: -4.483156204223633
    9. '(','' → logprob: -4.608156204223633
    10. '),' → logprob: -4.608156204223633

Token 30: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.024807199835777283
    2. ' sys' → logprob: -3.8998072147369385
    3. '(sys' → logprob: -5.524806976318359
    4. '[' → logprob: -9.77480697631836
    5. '	sys' → logprob: -9.89980697631836
    6. '   ' → logprob: -9.89980697631836
    7. 'iter' → logprob: -10.02480697631836
    8. '=sys' → logprob: -10.27480697631836
    9. ' iter' → logprob: -11.89980697631836
    10. ' [' → logprob: -11.89980697631836

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.7133641196996905e-05
    2. '.' → logprob: -11.25002670288086
    3. '.argv' → logprob: -11.37502670288086
    4. 'stdin' → logprob: -13.75002670288086
    5. '.stdout' → logprob: -14.62502670288086
    6. ' stdin' → logprob: -15.00002670288086
    7. '.std' → logprob: -15.00002670288086
    8. ' .' → logprob: -15.12502670288086
    9. '.st' → logprob: -15.75002670288086
    10. '.input' → logprob: -18.00002670288086

Token 32: ')).' (ID: 8784)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1455688178539276
    2. '()))' → logprob: -2.27056884765625
    3. '.readline' → logprob: -3.64556884765625
    4. ')))' → logprob: -6.27056884765625
    5. ')' → logprob: -6.39556884765625
    6. ' ))' → logprob: -7.14556884765625
    7. '.readlines' → logprob: -7.39556884765625
    8. '.' → logprob: -7.64556884765625
    9. '()' → logprob: -8.77056884765625
    10. '),' → logprob: -9.27056884765625

Token 33: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006379136815667152
    2. 'read' → logprob: -5.256379127502441
    3. '___' → logprob: -7.881379127502441
    4. 'strip' → logprob: -8.006379127502441
    5. 'next' → logprob: -9.006379127502441
    6. 'rstrip' → logprob: -9.506379127502441
    7. 'copy' → logprob: -9.756379127502441
    8. '.__' → logprob: -10.006379127502441
    9. '```' → logprob: -10.881379127502441
    10. '.readline' → logprob: -11.006379127502441

Token 34: 'iter' (ID: 2340)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.026579637080430984
    2. 'iter' → logprob: -3.6515796184539795
    3. 'getitem' → logprob: -8.901579856872559
    4. ' next' → logprob: -9.526579856872559
    5. '_next' → logprob: -11.026579856872559
    6. 'len' → logprob: -11.151579856872559
    7. 'index' → logprob: -11.776579856872559
    8. 'class' → logprob: -11.901579856872559
    9. 'ait' → logprob: -12.026579856872559
    10. 'length' → logprob: -12.276579856872559

Token 35: '__()

' (ID: 165037)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00017064384883269668
    2. '__()
' → logprob: -9.875170707702637
    3. '__.__' → logprob: -10.125170707702637
    4. '__()

' → logprob: -10.750170707702637
    5. '__)' → logprob: -10.875170707702637
    6. '()' → logprob: -11.000170707702637
    7. '__('' → logprob: -11.875170707702637
    8. '_' → logprob: -12.250170707702637
    9. '___' → logprob: -12.375170707702637
    10. '__((' → logprob: -13.875170707702637

Token 36: 'A' (ID: 32)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.053528591990470886
    2. '(' → logprob: -3.3035285472869873
    3. ')' → logprob: -5.178528785705566
    4. '()
' → logprob: -5.678528785705566
    5. '()

' → logprob: -6.178528785705566
    6. '(
' → logprob: -6.428528785705566
    7. 'def' → logprob: -6.678528785705566
    8. '())' → logprob: -8.053528785705566
    9. ',' → logprob: -8.303528785705566
    10. ' ()' → logprob: -8.678528785705566

Token 37: ',' (ID: 11)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -1.4703325033187866
    2. 'rray' → logprob: -1.9703325033187866
    3. '=' → logprob: -2.220332622528076
    4. '_' → logprob: -2.345332622528076
    5. 'def' → logprob: -3.095332622528076
    6. ' =' → logprob: -3.220332622528076
    7. 'r' → logprob: -3.345332622528076
    8. 'rr' → logprob: -3.345332622528076
    9. ' ' → logprob: -3.345332622528076
    10. 's' → logprob: -3.345332622528076

Token 38: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16837069392204285
    2. ' B' → logprob: -1.9183707237243652
    3. 'b' → logprob: -6.293370723724365
    4. ' =' → logprob: -6.918370723724365
    5. 'K' → logprob: -7.043370723724365
    6. '*' → logprob: -7.168370723724365
    7. '_' → logprob: -7.543370723724365
    8. 'iter' → logprob: -7.918370723724365
    9. 'N' → logprob: -8.293370246887207
    10. 'n' → logprob: -8.293370246887207

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01856052689254284
    2. '=' → logprob: -4.018560409545898
    3. ',' → logprob: -8.018560409545898
    4. '_' → logprob: -10.393560409545898
    5. ' ' → logprob: -10.393560409545898
    6. ' ,' → logprob: -12.268560409545898
    7. '  ' → logprob: -12.393560409545898
    8. ' =
' → logprob: -13.018560409545898
    9. ')' → logprob: -13.393560409545898
    10. 's' → logprob: -13.893560409545898

Token 40: ' (' (ID: 350)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.432380735874176
    2. ' read' → logprob: -2.0573806762695312
    3. 'next' → logprob: -2.1823806762695312
    4. ' next' → logprob: -2.6823806762695312
    5. 'map' → logprob: -4.432380676269531
    6. ' map' → logprob: -4.682380676269531
    7. 'list' → logprob: -5.182380676269531
    8. ' iter' → logprob: -5.557380676269531
    9. 'iter' → logprob: -6.057380676269531
    10. ' A' → logprob: -6.182380676269531

Token 41: 'lambda' (ID: 35280)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2785070240497589
    2. 'next' → logprob: -1.6535069942474365
    3. 'map' → logprob: -3.7785069942474365
    4. 'list' → logprob: -4.403507232666016
    5. ' read' → logprob: -5.278507232666016
    6. ' next' → logprob: -5.778507232666016
    7. 'int' → logprob: -5.903507232666016
    8. 'a' → logprob: -6.028507232666016
    9. ' map' → logprob: -7.153507232666016
    10. ')' → logprob: -7.778507232666016

Token 42: ' gen' (ID: 3645)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.1440893411636353
    2. ':' → logprob: -1.8940893411636353
    3. ' x' → logprob: -1.8940893411636353
    4. 'read' → logprob: -2.0190892219543457
    5. 'x' → logprob: -3.3940892219543457
    6. ' sys' → logprob: -3.5190892219543457
    7. ' iter' → logprob: -3.7690892219543457
    8. ' list' → logprob: -4.019089221954346
    9. ' a' → logprob: -4.019089221954346
    10. ' lambda' → logprob: -4.394089221954346

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013710441067814827
    2. ' :' → logprob: -4.5137104988098145
    3. '=' → logprob: -6.5137104988098145
    4. ',' → logprob: -8.013710021972656
    5. 's' → logprob: -8.263710021972656
    6. 'next' → logprob: -8.763710021972656
    7. ' next' → logprob: -9.513710021972656
    8. ' ' → logprob: -10.263710021972656
    9. ':(' → logprob: -10.388710021972656
    10. '1' → logprob: -10.451210021972656

Token 44: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.8167496919631958
    2. ' (' → logprob: -1.4417496919631958
    3. 'next' → logprob: -1.9417496919631958
    4. '[next' → logprob: -2.9417495727539062
    5. '(list' → logprob: -3.4417495727539062
    6. 'list' → logprob: -3.5667495727539062
    7. ' next' → logprob: -3.6917495727539062
    8. ' [' → logprob: -4.941749572753906
    9. '(lambda' → logprob: -5.066749572753906
    10. ' list' → logprob: -5.191749572753906

Token 45: 'lambda' (ID: 35280)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.008519897237420082
    2. ' next' → logprob: -5.258520126342773
    3. 'list' → logprob: -6.383520126342773
    4. '[next' → logprob: -6.883520126342773
    5. '(next' → logprob: -7.883520126342773
    6. 'tuple' → logprob: -9.633520126342773
    7. 'reduce' → logprob: -9.883520126342773
    8. ' list' → logprob: -10.883520126342773
    9. '   ' → logprob: -11.383520126342773
    10. 'int' → logprob: -11.758520126342773

Token 46: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36664387583732605
    2. 'a' → logprob: -2.6166439056396484
    3. ' x' → logprob: -2.6166439056396484
    4. 'x' → logprob: -2.9916439056396484
    5. ' :' → logprob: -3.4916439056396484
    6. ' a' → logprob: -3.4916439056396484
    7. '_:' → logprob: -4.866643905639648
    8. ' _:' → logprob: -4.866643905639648
    9. ' ' → logprob: -5.491643905639648
    10. '_' → logprob: -5.491643905639648

Token 47: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28937870264053345
    2. ',' → logprob: -1.6643786430358887
    3. '=' → logprob: -3.4143786430358887
    4. ',y' → logprob: -4.539378643035889
    5. 'next' → logprob: -4.664378643035889
    6. ' :' → logprob: -5.789378643035889
    7. ',next' → logprob: -6.289378643035889
    8. 's' → logprob: -7.289378643035889
    9. ' next' → logprob: -7.789378643035889
    10. ':x' → logprob: -7.914378643035889

Token 48: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3199494481086731
    2. ' y' → logprob: -1.3199493885040283
    3. 'next' → logprob: -5.444949626922607
    4. ' next' → logprob: -6.319949626922607
    5. ' operator' → logprob: -8.94494915008545
    6. 'operator' → logprob: -9.81994915008545
    7. 'lambda' → logprob: -9.94494915008545
    8. 'list' → logprob: -10.19494915008545
    9. 'reduce' → logprob: -10.31994915008545
    10. ' lambda' → logprob: -10.69494915008545

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004513312131166458
    2. ',' → logprob: -6.379513263702393
    3. ' :' → logprob: -6.504513263702393
    4. '=' → logprob: -7.004513263702393
    5. 'next' → logprob: -8.25451374053955
    6. ',next' → logprob: -10.37951374053955
    7. 's' → logprob: -11.12951374053955
    8. ' next' → logprob: -11.37951374053955
    9. ':x' → logprob: -11.62951374053955
    10. ':(' → logprob: -11.62951374053955

Token 50: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45364344120025635
    2. ' next' → logprob: -1.8286434412002563
    3. '(next' → logprob: -2.078643321990967
    4. 'next' → logprob: -2.953643321990967
    5. '(x' → logprob: -5.078643321990967
    6. ' x' → logprob: -5.453643321990967
    7. '(operator' → logprob: -5.453643321990967
    8. '(gen' → logprob: -5.828643321990967
    9. ' operator' → logprob: -5.953643321990967
    10. '(' → logprob: -6.453643321990967

Token 51: 'x' (ID: 87)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.720967710018158
    2. ' next' → logprob: -1.5959677696228027
    3. 'x' → logprob: -1.7209677696228027
    4. ' x' → logprob: -2.0959677696228027
    5. '(next' → logprob: -5.845967769622803
    6. ' (' → logprob: -6.970967769622803
    7. ' A' → logprob: -7.095967769622803
    8. ' operator' → logprob: -7.470967769622803
    9. 'A' → logprob: -7.720967769622803
    10. '[next' → logprob: -7.720967769622803

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32213011384010315
    2. ' +' → logprob: -2.5721302032470703
    3. 'next' → logprob: -2.6971302032470703
    4. '+' → logprob: -3.3221302032470703
    5. ' next' → logprob: -3.3221302032470703
    6. ' *' → logprob: -3.9471302032470703
    7. ' ,' → logprob: -5.07213020324707
    8. '*' → logprob: -5.32213020324707
    9. '.next' → logprob: -5.32213020324707
    10. '[next' → logprob: -5.32213020324707

Token 53: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5241408348083496
    2. 'y' → logprob: -0.8991408348083496
    3. ' next' → logprob: -7.77414083480835
    4. 'next' → logprob: -7.89914083480835
    5. '    ' → logprob: -9.524141311645508
    6. ' ' → logprob: -10.399141311645508
    7. '  ' → logprob: -11.149141311645508
    8. ' operator' → logprob: -11.211641311645508
    9. 'lambda' → logprob: -11.524141311645508
    10. ' (' → logprob: -11.586641311645508

Token 54: '))' (ID: 915)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9185880422592163
    2. '))' → logprob: -1.5435880422592163
    3. ' next' → logprob: -1.6685880422592163
    4. ')' → logprob: -2.793588161468506
    5. '))(' → logprob: -3.043588161468506
    6. '(next' → logprob: -3.293588161468506
    7. ')))' → logprob: -4.418588161468506
    8. ').__' → logprob: -4.418588161468506
    9. ' ))' → logprob: -5.168588161468506
    10. '.next' → logprob: -5.418588161468506

Token 55: '(*' (ID: 9000)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.008517531678080559
    2. '(' → logprob: -5.008517742156982
    3. '(gen' → logprob: -7.758517742156982
    4. '(*' → logprob: -7.883517742156982
    5. '(read' → logprob: -8.008517265319824
    6. '(list' → logprob: -8.633517265319824
    7. 'next' → logprob: -9.008517265319824
    8. ' (' → logprob: -9.508517265319824
    9. '(tuple' → logprob: -9.883517265319824
    10. '(int' → logprob: -10.008517265319824

Token 56: 'gen' (ID: 2468)
  Prédit: 'gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.5669054985046387
    2. '(gen' → logprob: -1.1919054985046387
    3. '[' → logprob: -2.6919054985046387
    4. 'map' → logprob: -3.9419054985046387
    5. 'next' → logprob: -4.191905498504639
    6. 'list' → logprob: -4.566905498504639
    7. '[next' → logprob: -5.066905498504639
    8. '(next' → logprob: -5.816905498504639
    9. 'tuple' → logprob: -6.441905498504639
    10. '(list' → logprob: -7.066905498504639

Token 57: '))(' (ID: 72297)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16926564276218414
    2. '))' → logprob: -1.919265627861023
    3. '()' → logprob: -5.0442657470703125
    4. '())' → logprob: -6.9192657470703125
    5. '()))
' → logprob: -7.6692657470703125
    6. ')' → logprob: -8.169265747070312
    7. '())).' → logprob: -8.669265747070312
    8. '()))

' → logprob: -8.919265747070312
    9. ')))' → logprob: -9.419265747070312
    10. '()));' → logprob: -9.669265747070312

Token 58: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.05492594838142395
    2. ' read' → logprob: -2.9299259185791016
    3. '(read' → logprob: -10.179925918579102
    4. '	read' → logprob: -12.929925918579102
    5. ' ' → logprob: -13.679925918579102
    6. ' iter' → logprob: -14.929925918579102
    7. '   ' → logprob: -15.304925918579102
    8. 'iter' → logprob: -15.554925918579102
    9. ' (' → logprob: -15.804925918579102
    10. '  ' → logprob: -15.804925918579102

Token 59: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: 0.0
    2. '_' → logprob: -17.75
    3. 'input' → logprob: -19.625
    4. '_inputs' → logprob: -19.75
    5. '_in' → logprob: -20.0
    6. ')_' → logprob: -20.25
    7. '_INPUT' → logprob: -20.25
    8. '_Input' → logprob: -20.5
    9. '_output' → logprob: -20.875
    10. ' _' → logprob: -21.0

Token 60: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001672802958637476
    2. '()' → logprob: -6.626672744750977
    3. '()))' → logprob: -8.001672744750977
    4. '())
' → logprob: -12.376672744750977
    5. ')' → logprob: -13.126672744750977
    6. ' ())' → logprob: -13.501672744750977
    7. '())

' → logprob: -13.876672744750977
    8. '()),' → logprob: -14.126672744750977
    9. '();)' → logprob: -14.251672744750977
    10. '())))' → logprob: -14.501672744750977

Token 61: 'f' (ID: 69)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14249549806118011
    2. '()
' → logprob: -3.1424953937530518
    3. '.' → logprob: -4.142495632171631
    4. ' ' → logprob: -4.267495632171631
    5. ')' → logprob: -4.392495632171631
    6. '+' → logprob: -4.892495632171631
    7. 'def' → logprob: -5.267495632171631
    8. '*' → logprob: -5.392495632171631
    9. ':' → logprob: -5.392495632171631
    10. '#' → logprob: -5.517495632171631

Token 62: ' =' (ID: 314)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.5196670889854431
    2. 'or' → logprob: -1.269667148590088
    3. 'unc' → logprob: -2.519667148590088
    4. 'un' → logprob: -3.769667148590088
    5. 'ilter' → logprob: -5.144667148590088
    6. 'ro' → logprob: -5.519667148590088
    7. 'unct' → logprob: -5.894667148590088
    8. 'old' → logprob: -6.269667148590088
    9. '"' → logprob: -7.394667148590088
    10. '=' → logprob: -7.394667148590088

Token 63: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.37364259362220764
    2. 'reduce' → logprob: -1.7486425638198853
    3. ' lambda' → logprob: -2.498642683029175
    4. 'operator' → logprob: -3.623642683029175
    5. '(lambda' → logprob: -3.748642683029175
    6. ' ' → logprob: -6.623642444610596
    7. ' reduce' → logprob: -6.748642444610596
    8. ' functools' → logprob: -7.248642444610596
    9. '   ' → logprob: -7.498642444610596
    10. '  ' → logprob: -7.623642444610596

Token 64: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.37431493401527405
    2. ' operator' → logprob: -2.249315023422241
    3. 'lambda' → logprob: -2.374315023422241
    4. 'operator' → logprob: -2.749315023422241
    5. ' reduce' → logprob: -4.499314785003662
    6. ' x' → logprob: -4.624314785003662
    7. '(lambda' → logprob: -5.124314785003662
    8. 'x' → logprob: -5.374314785003662
    9. 'reduce' → logprob: -5.374314785003662
    10. ' op' → logprob: -6.124314785003662

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023609625175595284
    2. ' ,' → logprob: -4.273609638214111
    3. ',b' → logprob: -4.898609638214111
    4. ':' → logprob: -7.898609638214111
    5. ',B' → logprob: -8.023609161376953
    6. ' :' → logprob: -8.023609161376953
    7. ',x' → logprob: -8.148609161376953
    8. ',f' → logprob: -8.898609161376953
    9. ',y' → logprob: -9.023609161376953
    10. ',a' → logprob: -9.148609161376953

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6944605708122253
    2. ' b' → logprob: -0.6944605708122253
    3. ' operator' → logprob: -7.194460391998291
    4. 'operator' → logprob: -8.44446086883545
    5. ' op' → logprob: -9.19446086883545
    6. ' ' → logprob: -9.94446086883545
    7. ' f' → logprob: -10.19446086883545
    8. ' lambda' → logprob: -10.19446086883545
    9. 'f' → logprob: -10.56946086883545
    10. 'lambda' → logprob: -10.81946086883545

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001463692169636488
    2. ',' → logprob: -7.126463890075684
    3. ' :' → logprob: -7.501463890075684
    4. '=' → logprob: -10.626463890075684
    5. 'a' → logprob: -11.126463890075684
    6. ',:' → logprob: -11.376463890075684
    7. ':f' → logprob: -11.626463890075684
    8. ':a' → logprob: -11.751463890075684
    9. ':b' → logprob: -11.876463890075684
    10. ':(' → logprob: -12.126463890075684

Token 68: ' {' (ID: 354)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47053614258766174
    2. ' a' → logprob: -1.3455361127853394
    3. 'operator' → logprob: -2.845536231994629
    4. ' operator' → logprob: -3.970536231994629
    5. 'reduce' → logprob: -4.220536231994629
    6. ' reduce' → logprob: -5.220536231994629
    7. ' (' → logprob: -5.720536231994629
    8. '(operator' → logprob: -5.970536231994629
    9. '(a' → logprob: -6.095536231994629
    10. 'b' → logprob: -6.470536231994629

Token 69: 'True' (ID: 4710)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45374536514282227
    2. ''' → logprob: -2.3287453651428223
    3. ''a' → logprob: -2.4537453651428223
    4. 'k' → logprob: -2.7037453651428223
    5. '**' → logprob: -3.3287453651428223
    6. ''+' → logprob: -3.8287453651428223
    7. '"' → logprob: -4.453745365142822
    8. '   ' → logprob: -4.578745365142822
    9. '(' → logprob: -5.328745365142822
    10. '"+' → logprob: -5.453745365142822

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015871763229370117
    2. ' :' → logprob: -4.640872001647949
    3. ':a' → logprob: -5.265872001647949
    4. ':b' → logprob: -7.515872001647949
    5. ':(' → logprob: -9.26587200164795
    6. ':A' → logprob: -9.64087200164795
    7. ':f' → logprob: -9.76587200164795
    8. '   ' → logprob: -10.26587200164795
    9. 'a' → logprob: -10.39087200164795
    10. ' ' → logprob: -11.39087200164795

Token 71: ' "' (ID: 392)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.615750789642334
    2. ' a' → logprob: -1.240750789642334
    3. 'operator' → logprob: -2.490750789642334
    4. ' operator' → logprob: -3.115750789642334
    5. 'b' → logprob: -4.490750789642334
    6. ' b' → logprob: -4.865750789642334
    7. ' (' → logprob: -5.990750789642334
    8. '(operator' → logprob: -5.990750789642334
    9. 'lambda' → logprob: -5.990750789642334
    10. ' lambda' → logprob: -6.115750789642334

Token 72: 'IMP' (ID: 67171)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.5514310598373413
    2. 'YES' → logprob: -1.9264310598373413
    3. 'a' → logprob: -2.051431179046631
    4. '"' → logprob: -2.551431179046631
    5. '>' → logprob: -2.551431179046631
    6. 'A' → logprob: -3.301431179046631
    7. 'Possible' → logprob: -3.426431179046631
    8. 'First' → logprob: -3.551431179046631
    9. 'Win' → logprob: -3.676431179046631
    10. 'Alice' → logprob: -3.676431179046631

Token 73: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.0030530504882335663
    2. 'OS' → logprob: -6.378053188323975
    3. 'O' → logprob: -6.628053188323975
    4. '``' → logprob: -11.878052711486816
    5. 'oss' → logprob: -11.878052711486816
    6. 'P' → logprob: -12.878052711486816
    7. ' OSS' → logprob: -13.378052711486816
    8. '0' → logprob: -13.378052711486816
    9. '```' → logprob: -13.628052711486816
    10. '"' → logprob: -14.503052711486816

Token 74: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -7.226628895296017e-06
    2. 'IB' → logprob: -12.125007629394531
    3. 'IBE' → logprob: -14.000007629394531
    4. 'I' → logprob: -15.125007629394531
    5. 'IPLE' → logprob: -15.375007629394531
    6. 'ABLE' → logprob: -16.37500762939453
    7. 'ible' → logprob: -16.75000762939453
    8. 'IBILITY' → logprob: -16.87500762939453
    9. 'ILE' → logprob: -16.87500762939453
    10. 'IVE' → logprob: -17.12500762939453

Token 75: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.004498954396694899
    2. '"' → logprob: -5.5044989585876465
    3. '"}' → logprob: -8.129498481750488
    4. '",
' → logprob: -10.129498481750488
    5. ',' → logprob: -10.504498481750488
    6. '',' → logprob: -11.504498481750488
    7. '","' → logprob: -11.629498481750488
    8. '",
' → logprob: -11.754498481750488
    9. '"},' → logprob: -12.004498481750488
    10. '",(' → logprob: -12.379498481750488

Token 76: ' False' (ID: 7983)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.5147945880889893
    2. '"' → logprob: -1.6397945880889893
    3. ' False' → logprob: -1.7647945880889893
    4. ' str' → logprob: -2.5147945880889893
    5. 'False' → logprob: -2.5147945880889893
    6. ' a' → logprob: -3.1397945880889893
    7. ' ' → logprob: -3.7647945880889893
    8. 'a' → logprob: -3.7647945880889893
    9. ' (' → logprob: -4.01479434967041
    10. ' max' → logprob: -4.01479434967041

Token 77: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009306333377026021
    2. ' :' → logprob: -7.0009307861328125
    3. '[' → logprob: -11.500930786132812
    4. ':"' → logprob: -12.750930786132812
    5. ':
' → logprob: -14.000930786132812
    6. ':f' → logprob: -14.125930786132812
    7. '"' → logprob: -14.250930786132812
    8. '   ' → logprob: -14.625930786132812
    9. ' ' → logprob: -14.875930786132812
    10. ':

' → logprob: -15.125930786132812

Token 78: ' reduce' (ID: 10389)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.9821585416793823
    2. 'str' → logprob: -2.232158660888672
    3. '"' → logprob: -2.607158660888672
    4. ' a' → logprob: -2.607158660888672
    5. ' "' → logprob: -2.857158660888672
    6. ' (' → logprob: -3.232158660888672
    7. ' b' → logprob: -3.357158660888672
    8. 'a' → logprob: -3.357158660888672
    9. ' abs' → logprob: -3.607158660888672
    10. '""' → logprob: -4.232158660888672

Token 79: '(lambda' (ID: 43341)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.007559771649539471
    2. '(' → logprob: -5.007559776306152
    3. 'operator' → logprob: -7.757559776306152
    4. '(lambda' → logprob: -8.132559776306152
    5. ' operator' → logprob: -10.007559776306152
    6. ' (' → logprob: -10.257559776306152
    7. '(
' → logprob: -11.007559776306152
    8. '	operator' → logprob: -11.257559776306152
    9. '.operator' → logprob: -12.507559776306152
    10. '(op' → logprob: -13.132559776306152

Token 80: ' x' (ID: 1215)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.10213106125593185
    2. 'operator' → logprob: -2.6021311283111572
    3. '(operator' → logprob: -4.102130889892578
    4. '	operator' → logprob: -6.102130889892578
    5. ',' → logprob: -6.352130889892578
    6. ' operador' → logprob: -7.602130889892578
    7. ' lambda' → logprob: -7.852130889892578
    8. ' ' → logprob: -7.852130889892578
    9. '_operator' → logprob: -8.477130889892578
    10. '.operator' → logprob: -8.727130889892578

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015654563903808594
    2. 'operator' → logprob: -5.515654563903809
    3. ' operator' → logprob: -5.515654563903809
    4. ' ' → logprob: -6.140654563903809
    5. '(operator' → logprob: -6.640654563903809
    6. ' ,' → logprob: -7.015654563903809
    7. ':' → logprob: -7.390654563903809
    8. '*' → logprob: -7.515654563903809
    9. 'lambda' → logprob: -8.015654563903809
    10. 'a' → logprob: -8.140654563903809

Token 82: ' y' (ID: 342)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.26148721575737
    2. 'operator' → logprob: -1.5114872455596924
    3. '(operator' → logprob: -5.511487007141113
    4. '<|end|>' → logprob: -6.261487007141113
    5. '	operator' → logprob: -7.511487007141113
    6. '_operator' → logprob: -7.511487007141113
    7. ' y' → logprob: -7.886487007141113
    8. ' ' → logprob: -7.886487007141113
    9. ' op' → logprob: -8.386487007141113
    10. 'y' → logprob: -8.511487007141113

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39690619707107544
    2. ',' → logprob: -1.2719061374664307
    3. 'operator' → logprob: -3.6469061374664307
    4. ' operator' → logprob: -4.77190637588501
    5. '(operator' → logprob: -4.77190637588501
    6. '	operator' → logprob: -7.27190637588501
    7. '=' → logprob: -7.64690637588501
    8. ' :' → logprob: -8.146905899047852
    9. '/operator' → logprob: -8.271905899047852
    10. '.operator' → logprob: -8.271905899047852

Token 84: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.44063523411750793
    2. 'operator' → logprob: -1.0656352043151855
    3. '(operator' → logprob: -5.0656352043151855
    4. ' x' → logprob: -5.9406352043151855
    5. 'x' → logprob: -6.1906352043151855
    6. '	operator' → logprob: -7.9406352043151855
    7. ' y' → logprob: -9.440635681152344
    8. ' ' → logprob: -9.565635681152344
    9. ' (' → logprob: -10.065635681152344
    10. ' operador' → logprob: -10.378135681152344

Token 85: '.f' (ID: 1196)
  Prédit: '.mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.025691896677017212
    2. '.add' → logprob: -3.9006919860839844
    3. '.im' → logprob: -5.900691986083984
    4. '.' → logprob: -6.650691986083984
    5. '.x' → logprob: -8.275691986083984
    6. '.pow' → logprob: -8.775691986083984
    7. '.and' → logprob: -9.025691986083984
    8. '.__' → logprob: -9.275691986083984
    9. '.f' → logprob: -9.275691986083984
    10. '.or' → logprob: -9.525691986083984

Token 86: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.0025412975810468197
    2. 'l' → logprob: -7.0025410652160645
    3. 'mul' → logprob: -7.3775410652160645
    4. 'loor' → logprob: -8.377541542053223
    5. 'ro' → logprob: -9.002541542053223
    6. 'loat' → logprob: -9.377541542053223
    7. 'unc' → logprob: -9.502541542053223
    8. 'or' → logprob: -9.752541542053223
    9. 'n' → logprob: -9.752541542053223
    10. 'unct' → logprob: -10.002541542053223

Token 87: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.4043080806732178
    2. 'r' → logprob: -1.5293080806732178
    3. 'or' → logprob: -2.4043080806732178
    4. 'orm' → logprob: -3.7793080806732178
    5. 'rd' → logprob: -7.029308319091797
    6. 'ormap' → logprob: -7.654308319091797
    7. 'rm' → logprob: -8.029308319091797
    8. 'reduce' → logprob: -8.404308319091797
    9. 'o' → logprob: -8.529308319091797
    10. 'od' → logprob: -8.904308319091797

Token 88: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.5208777785301208
    2. 'or' → logprob: -1.3958778381347656
    3. 'ord' → logprob: -2.2708778381347656
    4. 'r' → logprob: -3.2708778381347656
    5. 'div' → logprob: -4.645877838134766
    6. 'v' → logprob: -6.020877838134766
    7. '```' → logprob: -6.645877838134766
    8. '   ' → logprob: -7.395877838134766
    9. 'o' → logprob: -7.395877838134766
    10. 'Div' → logprob: -7.895877838134766

Token 89: '(x' (ID: 4061)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21557892858982086
    2. '(x' → logprob: -2.715579032897949
    3. ' ,' → logprob: -2.840579032897949
    4. '(' → logprob: -4.340579032897949
    5. 'a' → logprob: -4.340579032897949
    6. ' x' → logprob: -4.465579032897949
    7. ' a' → logprob: -4.715579032897949
    8. ' y' → logprob: -4.840579032897949
    9. '(a' → logprob: -5.715579032897949
    10. 'x' → logprob: -5.715579032897949

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10211308300495148
    2. ' y' → logprob: -3.1021130084991455
    3. ',y' → logprob: -3.4771130084991455
    4. ' ,' → logprob: -4.227113246917725
    5. ',b' → logprob: -5.727113246917725
    6. 'y' → logprob: -6.102113246917725
    7. ' b' → logprob: -8.102112770080566
    8. 'a' → logprob: -8.602112770080566
    9. ' ' → logprob: -8.852112770080566
    10. 'b' → logprob: -8.852112770080566

Token 91: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.033820196986198425
    2. ' y' → logprob: -3.408820152282715
    3. 'a' → logprob: -9.408820152282715
    4. 'b' → logprob: -10.283820152282715
    5. ' ' → logprob: -11.158820152282715
    6. 'x' → logprob: -11.533820152282715
    7. 'operator' → logprob: -11.533820152282715
    8. ' operator' → logprob: -12.283820152282715
    9. ' a' → logprob: -12.408820152282715
    10. '    ' → logprob: -12.533820152282715

Token 92: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04014318808913231
    2. ' y' → logprob: -3.4151432514190674
    3. 'b' → logprob: -5.415143013000488
    4. 'a' → logprob: -6.540143013000488
    5. 'operator' → logprob: -8.790143013000488
    6. ' ' → logprob: -9.290143013000488
    7. ' b' → logprob: -9.415143013000488
    8. '  ' → logprob: -9.540143013000488
    9. ' a' → logprob: -9.540143013000488
    10. ' operator' → logprob: -10.540143013000488

Token 93: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.100078821182251
    2. '**' → logprob: -1.725078821182251
    3. '*y' → logprob: -2.100078821182251
    4. '),' → logprob: -2.350078821182251
    5. '))' → logprob: -3.100078821182251
    6. ' *' → logprob: -3.225078821182251
    7. ' +' → logprob: -3.350078821182251
    8. ' if' → logprob: -3.475078821182251
    9. ' **' → logprob: -3.850078821182251
    10. ')))' → logprob: -3.850078821182251

Token 94: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6947826147079468
    2. 'range' → logprob: -0.8197826147079468
    3. ' [' → logprob: -4.194782733917236
    4. '(range' → logprob: -4.319782733917236
    5. ' list' → logprob: -5.069782733917236
    6. 'b' → logprob: -5.444782733917236
    7. '[b' → logprob: -5.444782733917236
    8. '[a' → logprob: -5.694782733917236
    9. ' b' → logprob: -5.944782733917236
    10. 'list' → logprob: -5.944782733917236

Token 95: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.686034083366394
    2. 'range' → logprob: -1.686034083366394
    3. 'A' → logprob: -2.0610342025756836
    4. 'b' → logprob: -2.8110342025756836
    5. 'B' → logprob: -3.5610342025756836
    6. ' a' → logprob: -3.9360342025756836
    7. ' range' → logprob: -4.061034202575684
    8. ' A' → logprob: -4.811034202575684
    9. '[a' → logprob: -4.811034202575684
    10. 'str' → logprob: -5.186034202575684

Token 96: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03507833927869797
    2. ' ,' → logprob: -3.910078287124634
    3. ']' → logprob: -5.410078525543213
    4. ',b' → logprob: -6.035078525543213
    5. ' +' → logprob: -6.785078525543213
    6. '+' → logprob: -7.285078525543213
    7. ' for' → logprob: -7.535078525543213
    8. '-' → logprob: -7.660078525543213
    9. ' //' → logprob: -7.785078525543213
    10. ' -' → logprob: -7.910078525543213

Token 97: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34245672821998596
    2. ' b' → logprob: -1.3424566984176636
    3. 'i' → logprob: -4.842456817626953
    4. '1' → logprob: -5.592456817626953
    5. 'B' → logprob: -5.717456817626953
    6. ' y' → logprob: -6.092456817626953
    7. 'y' → logprob: -6.217456817626953
    8. ' ' → logprob: -6.217456817626953
    9. ' i' → logprob: -6.467456817626953
    10. ' (' → logprob: -6.967456817626953

Token 98: '])' (ID: 4636)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0454341173171997
    2. ']' → logprob: -1.2954341173171997
    3. ',' → logprob: -1.4204341173171997
    4. 'for' → logprob: -3.42043399810791
    5. ' -' → logprob: -3.42043399810791
    6. '-' → logprob: -4.04543399810791
    7. ']*' → logprob: -4.29543399810791
    8. '],' → logprob: -4.42043399810791
    9. ']),' → logprob: -5.54543399810791
    10. ' +' → logprob: -5.79543399810791

Token 99: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04323531314730644
    2. ')' → logprob: -3.9182353019714355
    3. ' ,' → logprob: -5.0432353019714355
    4. '})' → logprob: -5.2932353019714355
    5. ')}' → logprob: -5.4182353019714355
    6. '}' → logprob: -6.2932353019714355
    7. '(False' → logprob: -7.4182353019714355
    8. '},' → logprob: -7.9182353019714355
    9. 'False' → logprob: -8.043235778808594
    10. ' })' → logprob: -8.168235778808594

Token 100: '[(' (ID: 20542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12753523886203766
    2. '<|end|>' → logprob: -2.377535343170166
    3. '(' → logprob: -4.377535343170166
    4. ':' → logprob: -5.252535343170166
    5. '[' → logprob: -6.127535343170166
    6. '()' → logprob: -7.002535343170166
    7. '<|end|>' → logprob: -7.127535343170166
    8. ' ' → logprob: -7.127535343170166
    9. '(True' → logprob: -7.252535343170166
    10. '(
' → logprob: -7.377535343170166

Token 101: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15439529716968536
    2. 'b' → logprob: -2.654395341873169
    3. 'A' → logprob: -3.154395341873169
    4. 'B' → logprob: -4.40439510345459
    5. '(a' → logprob: -5.15439510345459
    6. ' a' → logprob: -5.27939510345459
    7. 'not' → logprob: -6.40439510345459
    8. '0' → logprob: -6.90439510345459
    9. ' A' → logprob: -7.02939510345459
    10. '(A' → logprob: -7.27939510345459

Token 102: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7690964937210083
    2. '>' → logprob: -1.6440964937210083
    3. '==' → logprob: -1.8940964937210083
    4. ' ==' → logprob: -2.6440963745117188
    5. ' <' → logprob: -3.0190963745117188
    6. '<' → logprob: -3.8940963745117188
    7. '+' → logprob: -4.144096374511719
    8. ' +' → logprob: -4.894096374511719
    9. '%' → logprob: -5.394096374511719
    10. ' %' → logprob: -5.519096374511719

Token 103: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11849259585142136
    2. ' b' → logprob: -2.243492603302002
    3. '1' → logprob: -5.493492603302002
    4. '0' → logprob: -7.368492603302002
    5. ' ' → logprob: -7.493492603302002
    6. 'a' → logprob: -9.118492126464844
    7. 'B' → logprob: -9.493492126464844
    8. '2' → logprob: -9.743492126464844
    9. ' a' → logprob: -10.493492126464844
    10. '    ' → logprob: -11.618492126464844

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045127686113119125
    2. ')==' → logprob: -3.4201276302337646
    3. ')!=' → logprob: -4.670127868652344
    4. ')>' → logprob: -7.545127868652344
    5. '==' → logprob: -7.670127868652344
    6. ' )' → logprob: -7.920127868652344
    7. ')%' → logprob: -8.420127868652344
    8. ')<' → logprob: -8.420127868652344
    9. '!=' → logprob: -9.170127868652344
    10. ')>=' → logprob: -10.545127868652344

Token 105: ' &' (ID: 827)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.199031949043274
    2. '==' → logprob: -1.324031949043274
    3. ')' → logprob: -1.949031949043274
    4. ' !=' → logprob: -2.4490318298339844
    5. '!=' → logprob: -2.9490318298339844
    6. '>' → logprob: -3.1990318298339844
    7. ' ' → logprob: -3.4490318298339844
    8. ' <' → logprob: -3.8240318298339844
    9. '%' → logprob: -4.074031829833984
    10. ' >' → logprob: -4.199031829833984

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35064414143562317
    2. ' ' → logprob: -1.2256441116333008
    3. ' (' → logprob: -7.225644111633301
    4. '(a' → logprob: -7.725644111633301
    5. '0' → logprob: -8.7256441116333
    6. '(' → logprob: -8.9756441116333
    7. 'a' → logprob: -8.9756441116333
    8. ' a' → logprob: -9.1006441116333
    9. 'b' → logprob: -9.2256441116333
    10. ' b' → logprob: -9.6006441116333

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006894154939800501
    2. ' ' → logprob: -5.131894111633301
    3. '(a' → logprob: -7.631894111633301
    4. 'a' → logprob: -8.7568941116333
    5. '0' → logprob: -9.8818941116333
    6. ' (' → logprob: -10.0068941116333
    7. '(' → logprob: -10.0068941116333
    8. '7' → logprob: -10.5068941116333
    9. ' a' → logprob: -10.6318941116333
    10. '-' → logprob: -10.6318941116333

Token 108: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08493266254663467
    2. ']==' → logprob: -3.834932565689087
    3. ')]' → logprob: -3.834932565689087
    4. '])' → logprob: -4.459932804107666
    5. '==' → logprob: -4.709932804107666
    6. ')' → logprob: -4.709932804107666
    7. ' ==' → logprob: -5.209932804107666
    8. ' ]' → logprob: -6.209932804107666
    9. ')])' → logprob: -8.334932327270508
    10. ' ' → logprob: -8.709932327270508

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16373760998249054
    2. '0' → logprob: -2.4137375354766846
    3. ' ' → logprob: -2.7887375354766846
    4. 'True' → logprob: -10.038737297058105
    5. ' True' → logprob: -11.663737297058105
    6. 'False' → logprob: -13.663737297058105
    7. '(' → logprob: -14.726237297058105
    8. '
' → logprob: -15.038737297058105
    9. ' ' → logprob: -15.351237297058105
    10. '```' → logprob: -15.413737297058105

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11345945298671722
    2. '0' → logprob: -2.238459348678589
    3. ' ' → logprob: -7.363459587097168
    4. 'True' → logprob: -12.988459587097168
    5. 'False' → logprob: -15.363459587097168
    6. '```' → logprob: -16.42595863342285
    7. ' True' → logprob: -16.98845863342285
    8. '!' → logprob: -17.48845863342285
    9. '
' → logprob: -17.55095863342285
    10. '(' → logprob: -17.55095863342285

Token 111: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10325281322002411
    2. ')]' → logprob: -2.60325288772583
    3. '])' → logprob: -3.97825288772583
    4. ')' → logprob: -5.47825288772583
    5. ' ]' → logprob: -7.35325288772583
    6. ')])' → logprob: -8.103252410888672
    7. '])]' → logprob: -9.728252410888672
    8. ']
' → logprob: -10.353252410888672
    9. '}]' → logprob: -10.728252410888672
    10. ' ])' → logprob: -10.853252410888672

Token 112: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18172672390937805
    2. '(' → logprob: -2.0567266941070557
    3. ' ' → logprob: -4.181726932525635
    4. '<|end|>' → logprob: -4.556726932525635
    5. '[' → logprob: -5.431726932525635
    6. '(
' → logprob: -5.556726932525635
    7. '()' → logprob: -7.306726932525635
    8. ' )' → logprob: -7.431726932525635
    9. ':' → logprob: -7.681726932525635
    10. '
' → logprob: -7.806726932525635

Token 113: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.12727443873882294
    2. '(' → logprob: -2.127274513244629
    3. '()' → logprob: -8.502274513244629
    4. '(print' → logprob: -9.752274513244629
    5. '('' → logprob: -10.127274513244629
    6. 'f' → logprob: -11.002274513244629
    7. '(
' → logprob: -12.127274513244629
    8. ' (' → logprob: -12.377274513244629
    9. '(`' → logprob: -12.377274513244629
    10. '(end' → logprob: -12.627274513244629

Token 114: '(A' (ID: 10706)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03844271972775459
    2. '(A' → logprob: -3.413442611694336
    3. '(' → logprob: -5.913442611694336
    4. '))' → logprob: -7.163442611694336
    5. '(a' → logprob: -7.288442611694336
    6. ',' → logprob: -8.288442611694336
    7. ' )' → logprob: -9.163442611694336
    8. '(B' → logprob: -9.538442611694336
    9. ')`' → logprob: -10.038442611694336
    10. ')(' → logprob: -10.288442611694336

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002547832846175879
    2. ' ,' → logprob: -8.50025463104248
    3. ',B' → logprob: -10.12525463104248
    4. ',b' → logprob: -12.50025463104248
    5. ',
' → logprob: -12.87525463104248
    6. ')' → logprob: -12.87525463104248
    7. ' ' → logprob: -13.37525463104248
    8. 'B' → logprob: -15.87525463104248
    9. ',A' → logprob: -16.312755584716797
    10. ',
' → logprob: -16.687755584716797

Token 116: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018151700496673584
    2. ' B' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.64315128326416
    4. '  ' → logprob: -14.76815128326416
    5. 'b' → logprob: -14.76815128326416
    6. '   ' → logprob: -15.39315128326416
    7. ')' → logprob: -15.76815128326416
    8. '    ' → logprob: -16.268152236938477
    9. '	B' → logprob: -17.018152236938477
    10. '0' → logprob: -17.955652236938477

Token 117: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889727503061295
    2. ')' → logprob: -2.57889723777771
    3. ')))' → logprob: -12.453897476196289
    4. '))
' → logprob: -12.953897476196289
    5. ')
' → logprob: -14.578897476196289
    6. '),' → logprob: -15.203897476196289
    7. ' ))' → logprob: -16.07889747619629
    8. ' )' → logprob: -16.20389747619629
    9. '})' → logprob: -16.70389747619629
    10. ')}' → logprob: -16.82889747619629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 34.78%
Précision adaptée (1ère position): 34.78%
Précision (top 10): 71.30%
================================================================================
