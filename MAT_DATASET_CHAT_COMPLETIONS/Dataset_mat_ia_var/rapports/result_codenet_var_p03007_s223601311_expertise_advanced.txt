================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():
    N = int(stdin.readline())
    A = sorted(map(int, stdin.readline().split()))

    if N == 2:
        x, y = A[1], A[0]
        print(x - y)
        print(x, y)
        return

    positives = [a for a in A if a >= 0]
    negatives = [a for a in A if a < 0]

    steps = []
    # Case: Both positive and negative numbers
    if positives and negatives:
        # Take the largest positive and accumulate subtractions
        tmp = negatives[0]
        for x in positives[:-1]:
            steps.append((tmp, x))
            tmp -= x
        steps.append((positives[-1], tmp))
        tmp = positives[-1] - tmp
        for x in negatives[1:]:
            steps.append((tmp, x))
            tmp -= x
    # Case: All numbers are positive
    elif positives:
        tmp = A[0]
        for x in A[1:-1]:
            steps.append((tmp, x))
            tmp -= x
        steps.append((A[-1], tmp))
        tmp = A[-1] - tmp
    # Case: All numbers are negative
    else:
        tmp = A[-1]
        for x in reversed(A[:-1]):
            steps.append((tmp, x))
            tmp -= x
    print(tmp)
    for x, y in steps:
        print(x, y)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10843159258365631
    2. '.readline' → logprob: -2.608431577682495
    3. '\n' → logprob: -3.983431577682495
    4. '.read' → logprob: -5.983431816101074
    5. 'import' → logprob: -6.233431816101074
    6. 'newline' → logprob: -6.233431816101074
    7. '```' → logprob: -6.858431816101074
    8. '\' → logprob: -7.233431816101074
    9. '
' → logprob: -7.483431816101074
    10. '' → logprob: -7.858431816101074

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03538239002227783
    2. '.readline' → logprob: -3.5353822708129883
    3. '\n' → logprob: -6.035382270812988
    4. '.
' → logprob: -7.410382270812988
    5. '.read' → logprob: -7.660382270812988
    6. ',' → logprob: -7.660382270812988
    7. '```' → logprob: -7.910382270812988
    8. '
' → logprob: -7.910382270812988
    9. 'print' → logprob: -8.160382270812988
    10. 'for' → logprob: -8.660382270812988

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047279614955186844
    2. ' read' → logprob: -3.4222795963287354
    3. ' process' → logprob: -4.7972798347473145
    4. ' parse' → logprob: -6.9222798347473145
    5. ' space' → logprob: -7.1722798347473145
    6. ' main' → logprob: -7.1722798347473145
    7. '_read' → logprob: -7.5472798347473145
    8. ' ' → logprob: -7.5472798347473145
    9. ' readline' → logprob: -8.172279357910156
    10. 'read' → logprob: -8.672279357910156

Token 7: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5837025046348572
    2. '(' → logprob: -0.9587025046348572
    3. ':' → logprob: -3.083702564239502
    4. '(:' → logprob: -4.458702564239502
    5. '```' → logprob: -7.708702564239502
    6. '):' → logprob: -8.458702087402344
    7. '(":' → logprob: -8.583702087402344
    8. ' ():' → logprob: -8.708702087402344
    9. '(
' → logprob: -9.458702087402344
    10. ' (' → logprob: -9.708702087402344

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008683474734425545
    2. ' ' → logprob: -6.383683681488037
    3. '(' → logprob: -6.633683681488037
    4. '    ' → logprob: -6.758683681488037
    5. 'print' → logprob: -6.758683681488037
    6. '(stdin' → logprob: -7.508683681488037
    7. 'stdin' → logprob: -7.633683681488037
    8. '    
' → logprob: -7.883683681488037
    9. ':' → logprob: -8.258683204650879
    10. 'for' → logprob: -8.383683204650879

Token 9: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6136534810066223
    2. '   ' → logprob: -2.1136534214019775
    3. 'n' → logprob: -2.6136534214019775
    4. ' ' → logprob: -2.6136534214019775
    5. 'pass' → logprob: -2.7386534214019775
    6. ' for' → logprob: -3.4886534214019775
    7. 'user' → logprob: -3.8636534214019775
    8. 'data' → logprob: -4.113653659820557
    9. 'x' → logprob: -4.613653659820557
    10. '    ' → logprob: -4.863653659820557

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08956898003816605
    2. '=' → logprob: -2.589569091796875
    3. ' ' → logprob: -4.964569091796875
    4. ',' → logprob: -6.214569091796875
    5. '  ' → logprob: -7.339569091796875
    6. ')' → logprob: -8.339569091796875
    7. '.' → logprob: -8.589569091796875
    8. '_' → logprob: -8.589569091796875
    9. '   ' → logprob: -8.964569091796875
    10. ' ,' → logprob: -9.214569091796875

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018337000161409378
    2. 'int' → logprob: -4.018336772918701
    3. ' ' → logprob: -8.64333724975586
    4. '  ' → logprob: -12.89333724975586
    5. '=int' → logprob: -13.26833724975586
    6. ' stdin' → logprob: -13.64333724975586
    7. '   ' → logprob: -13.76833724975586
    8. ' input' → logprob: -13.76833724975586
    9. ' len' → logprob: -14.01833724975586
    10. '	int' → logprob: -14.39333724975586

Token 12: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.2899601459503174
    2. '(' → logprob: -1.5399601459503174
    3. '(input' → logprob: -3.2899601459503174
    4. '(st' → logprob: -10.414959907531738
    5. ' (' → logprob: -11.039959907531738
    6. '(std' → logprob: -12.289959907531738
    7. '()' → logprob: -12.414959907531738
    8. 'stdin' → logprob: -13.414959907531738
    9. 'input' → logprob: -13.539959907531738
    10. '(
' → logprob: -14.164959907531738

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006004044320434332
    2. '.read' → logprob: -5.2560038566589355
    3. '.' → logprob: -7.7560038566589355
    4. '().' → logprob: -8.006004333496094
    5. ')' → logprob: -12.881004333496094
    6. '.readlines' → logprob: -13.131004333496094
    7. 'read' → logprob: -13.881004333496094
    8. '.Read' → logprob: -14.131004333496094
    9. ' .' → logprob: -14.381004333496094
    10. '())' → logprob: -14.506004333496094

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007838473655283451
    2. '()' → logprob: -5.257838249206543
    3. '()))' → logprob: -6.132838249206543
    4. ')' → logprob: -8.882838249206543
    5. '().' → logprob: -9.007838249206543
    6. '(' → logprob: -9.382838249206543
    7. ' ())' → logprob: -9.507838249206543
    8. '('' → logprob: -12.757838249206543
    9. '))' → logprob: -13.382838249206543
    10. '())
' → logprob: -13.507838249206543

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2825884521007538
    2. '\n' → logprob: -2.032588481903076
    3. '    
' → logprob: -3.157588481903076
    4. '\' → logprob: -3.157588481903076
    5. ')' → logprob: -5.032588481903076
    6. '```' → logprob: -5.532588481903076
    7. ' ' → logprob: -5.657588481903076
    8. '
' → logprob: -5.782588481903076
    9. '    ' → logprob: -6.407588481903076
    10. ' 
' → logprob: -6.532588481903076

Token 16: ' A' (ID: 355)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7814497947692871
    2. '   ' → logprob: -1.656449794769287
    3. '\' → logprob: -2.281449794769287
    4. 'for' → logprob: -2.656449794769287
    5. ' for' → logprob: -3.281449794769287
    6. ' \' → logprob: -3.781449794769287
    7. ' ' → logprob: -4.031449794769287
    8. '    
' → logprob: -4.031449794769287
    9. '`' → logprob: -4.156449794769287
    10. ' 
' → logprob: -4.281449794769287

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4050177037715912
    2. '[' → logprob: -1.1550177335739136
    3. '.append' → logprob: -5.280017852783203
    4. '=' → logprob: -5.405017852783203
    5. '[]' → logprob: -5.655017852783203
    6. '.' → logprob: -6.405017852783203
    7. '[i' → logprob: -6.780017852783203
    8. ')' → logprob: -7.655017852783203
    9. '[:]' → logprob: -7.905017852783203
    10. ' ' → logprob: -8.155017852783203

Token 18: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.35696032643318176
    2. 'list' → logprob: -1.2319602966308594
    3. ' [' → logprob: -4.981960296630859
    4. '[' → logprob: -7.231960296630859
    5. ' []' → logprob: -7.981960296630859
    6. '[list' → logprob: -8.10696029663086
    7. '[]' → logprob: -8.48196029663086
    8. ' ' → logprob: -11.35696029663086
    9. '[int' → logprob: -11.35696029663086
    10. '[input' → logprob: -12.73196029663086

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18227992951869965
    2. '(stdin' → logprob: -1.8072799444198608
    3. '(st' → logprob: -6.18228006362915
    4. '((' → logprob: -9.307279586791992
    5. '(int' → logprob: -9.557279586791992
    6. '(list' → logprob: -9.932279586791992
    7. '(A' → logprob: -10.432279586791992
    8. '(
' → logprob: -10.807279586791992
    9. '(input' → logprob: -10.807279586791992
    10. '(std' → logprob: -10.932279586791992

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002491945633664727
    2. '(' → logprob: -6.0024919509887695
    3. '(
' → logprob: -11.37749195098877
    4. '(lambda' → logprob: -13.75249195098877
    5. 'int' → logprob: -14.00249195098877
    6. '<int' → logprob: -14.12749195098877
    7. '(str' → logprob: -14.25249195098877
    8. ' (' → logprob: -15.00249195098877
    9. '=int' → logprob: -15.25249195098877
    10. ',int' → logprob: -15.62749195098877

Token 21: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0006777655798941851
    2. ',' → logprob: -7.625677585601807
    3. '(' → logprob: -9.375678062438965
    4. '(std' → logprob: -9.875678062438965
    5. '(st' → logprob: -11.375678062438965
    6. ' (' → logprob: -11.500678062438965
    7. 'stdin' → logprob: -11.625678062438965
    8. '),' → logprob: -12.125678062438965
    9. ' ,' → logprob: -12.750678062438965
    10. ',std' → logprob: -12.750678062438965

Token 22: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01884741149842739
    2. ' stdin' → logprob: -4.018847465515137
    3. '(stdin' → logprob: -7.518847465515137
    4. 'std' → logprob: -9.018847465515137
    5. ' std' → logprob: -11.268847465515137
    6. '.stdin' → logprob: -11.268847465515137
    7. 'stdout' → logprob: -12.518847465515137
    8. ')' → logprob: -13.143847465515137
    9. ' ' → logprob: -14.143847465515137
    10. '   ' → logprob: -14.643847465515137

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.843177233240567e-05
    2. '.' → logprob: -11.250018119812012
    3. '().' → logprob: -12.625018119812012
    4. '.readlines' → logprob: -13.375018119812012
    5. ' .' → logprob: -14.750018119812012
    6. ').' → logprob: -16.000019073486328
    7. '.read' → logprob: -18.000019073486328
    8. ')' → logprob: -19.000019073486328
    9. ' readline' → logprob: -20.000019073486328
    10. '.write' → logprob: -20.625019073486328

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014662963803857565
    2. '()' → logprob: -6.876466274261475
    3. '()))' → logprob: -8.126466751098633
    4. '())' → logprob: -9.001466751098633
    5. ' ().' → logprob: -12.126466751098633
    6. '())))' → logprob: -12.251466751098633
    7. '()),' → logprob: -13.751466751098633
    8. '()));' → logprob: -14.376466751098633
    9. ')' → logprob: -14.751466751098633
    10. ' ()' → logprob: -14.751466751098633

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07973881810903549
    2. 'strip' → logprob: -2.5797388553619385
    3. 'rstrip' → logprob: -7.079738616943359
    4. ' split' → logprob: -12.20473861694336
    5. 'read' → logprob: -14.20473861694336
    6. 'spl' → logprob: -14.82973861694336
    7. ' strip' → logprob: -14.95473861694336
    8. 's' → logprob: -16.45473861694336
    9. '(split' → logprob: -16.57973861694336
    10. 'str' → logprob: -17.07973861694336

Token 26: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.025459500029683113
    2. '())' → logprob: -4.275459289550781
    3. '))' → logprob: -4.650459289550781
    4. '()' → logprob: -6.775459289550781
    5. '()),' → logprob: -8.400459289550781
    6. '()))
' → logprob: -8.900459289550781
    7. ')' → logprob: -9.650459289550781
    8. '())))' → logprob: -9.775459289550781
    9. '(' → logprob: -10.900459289550781
    10. '(),' → logprob: -11.900459289550781

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5431315302848816
    2. ')' → logprob: -1.9181315898895264
    3. 'for' → logprob: -2.6681315898895264
    4. ' ' → logprob: -3.1681315898895264
    5. ' for' → logprob: -3.2931315898895264
    6. '    
' → logprob: -3.6681315898895264
    7. '
' → logprob: -4.168131351470947
    8. '<|end|>' → logprob: -4.168131351470947
    9. ' 
' → logprob: -4.293131351470947
    10. ':' → logprob: -4.418131351470947

Token 28: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5221933126449585
    2. 'for' → logprob: -1.8971933126449585
    3. 'dp' → logprob: -2.272193431854248
    4. 'max' → logprob: -2.397193431854248
    5. 'answer' → logprob: -2.772193431854248
    6. 'result' → logprob: -3.022193431854248
    7. 'median' → logprob: -3.022193431854248
    8. 'left' → logprob: -3.522193431854248
    9. 'ans' → logprob: -3.522193431854248
    10. 'if' (adapté à ' if') → logprob: -3.897193431854248

Token 29: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6400486826896667
    2. ' A' → logprob: -0.8900486826896667
    3. 'A' → logprob: -3.5150487422943115
    4. 'N' → logprob: -3.6400487422943115
    5. ' len' → logprob: -5.765048503875732
    6. ' ' → logprob: -6.265048503875732
    7. ' not' → logprob: -7.140048503875732
    8. 'len' → logprob: -8.76504898071289
    9. ' B' → logprob: -10.64004898071289
    10. '   ' → logprob: -11.14004898071289

Token 30: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9403254985809326
    2. ' <' → logprob: -1.4403254985809326
    3. ' ' → logprob: -1.9403254985809326
    4. ' ==' → logprob: -2.1903254985809326
    5. ' >=' → logprob: -3.5653254985809326
    6. ' <=' → logprob: -3.5653254985809326
    7. ' %' → logprob: -3.9403254985809326
    8. '>' → logprob: -3.9403254985809326
    9. '<' → logprob: -4.565325736999512
    10. '==' → logprob: -5.315325736999512

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021096238866448402
    2. '1' → logprob: -3.8960962295532227
    3. '0' → logprob: -7.646096229553223
    4. '2' → logprob: -9.646096229553223
    5. '3' → logprob: -12.521096229553223
    6. '   ' → logprob: -12.646096229553223
    7. '    ' → logprob: -13.646096229553223
    8. '=' → logprob: -13.646096229553223
    9. ' ' → logprob: -14.708596229553223
    10. '  ' → logprob: -14.896096229553223

Token 32: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02739652805030346
    2. '0' → logprob: -3.6523964405059814
    3. ' ' → logprob: -7.2773966789245605
    4. '2' → logprob: -7.9023966789245605
    5. '3' → logprob: -10.527396202087402
    6. '   ' → logprob: -13.464896202087402
    7. '  ' → logprob: -13.527396202087402
    8. '100' → logprob: -14.089896202087402
    9. '10' → logprob: -14.839896202087402
    10. '5' → logprob: -14.839896202087402

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00255318870767951
    2. ' and' → logprob: -6.1275529861450195
    3. ':
' → logprob: -8.37755298614502
    4. ' :' → logprob: -9.50255298614502
    5. 'and' → logprob: -10.12755298614502
    6. ':return' → logprob: -11.37755298614502
    7. ' or' → logprob: -11.62755298614502
    8. '   ' → logprob: -13.62755298614502
    9. ':**' → logprob: -14.75255298614502
    10. ' :
' → logprob: -15.50255298614502

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31716418266296387
    2. ':' → logprob: -1.5671641826629639
    3. '   ' → logprob: -2.942164182662964
    4. '\n' → logprob: -5.317164421081543
    5. ':
' → logprob: -6.317164421081543
    6. '    ' → logprob: -6.942164421081543
    7. ' ' → logprob: -7.692164421081543
    8. '    
' → logprob: -7.692164421081543
    9. '        
' → logprob: -8.442164421081543
    10. '     ' → logprob: -8.567164421081543

Token 35: ' x' (ID: 1215)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6326635479927063
    2. ' print' → logprob: -1.2576634883880615
    3. 'print' → logprob: -2.0076634883880615
    4. ' return' → logprob: -4.507663726806641
    5. ' 
' → logprob: -4.632663726806641
    6. '   ' → logprob: -4.757663726806641
    7. '    
' → logprob: -4.757663726806641
    8. '\n' → logprob: -5.132663726806641
    9. '
' → logprob: -6.257663726806641
    10. 'return' → logprob: -6.382663726806641

Token 36: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010946299880743027
    2. '1' → logprob: -5.510946273803711
    3. '=' → logprob: -5.885946273803711
    4. ',' → logprob: -6.135946273803711
    5. ',y' → logprob: -7.135946273803711
    6. ' ,' → logprob: -7.885946273803711
    7. 'or' → logprob: -8.135946273803711
    8. ' ' → logprob: -9.135946273803711
    9. '0' → logprob: -9.260946273803711
    10. '[' → logprob: -9.760946273803711

Token 37: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5231567621231079
    2. ' y' → logprob: -0.8981567621231079
    3. ' ' → logprob: -10.773157119750977
    4. '_' → logprob: -12.523157119750977
    5. '_y' → logprob: -12.898157119750977
    6. 'x' → logprob: -14.023157119750977
    7. '	y' → logprob: -14.023157119750977
    8. ' _' → logprob: -14.273157119750977
    9. '*y' → logprob: -14.398157119750977
    10. ',y' → logprob: -14.648157119750977

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519362270832062
    2. '=' → logprob: -1.5019361972808838
    3. ',' → logprob: -12.001935958862305
    4. ' ' → logprob: -15.501935958862305
    5. ')' → logprob: -16.126935958862305
    6. ' =)' → logprob: -16.126935958862305
    7. '=}' → logprob: -16.376935958862305
    8. '<|end|>' → logprob: -16.626935958862305
    9. '[' → logprob: -16.876935958862305
    10. '＝' → logprob: -17.001935958862305

Token 39: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47496509552001953
    2. ' A' → logprob: -0.9749650955200195
    3. ' ' → logprob: -7.3499650955200195
    4. '0' → logprob: -9.22496509552002
    5. '   ' → logprob: -9.59996509552002
    6. 'sorted' → logprob: -10.97496509552002
    7. ' sorted' → logprob: -11.09996509552002
    8. '  ' → logprob: -11.59996509552002
    9. '(A' → logprob: -11.97496509552002
    10. '	A' → logprob: -12.09996509552002

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005288542713969946
    2. '[:' → logprob: -6.255288600921631
    3. '
' → logprob: -7.005288600921631
    4. '[:]' → logprob: -7.130288600921631
    5. ' ' → logprob: -7.380288600921631
    6. '  ' → logprob: -8.380288124084473
    7. ' =' → logprob: -8.755288124084473
    8. '[-' → logprob: -9.255288124084473
    9. '    ' → logprob: -9.505288124084473
    10. '' → logprob: -10.005288124084473

Token 41: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003816937794908881
    2. ' ' → logprob: -5.628817081451416
    3. '-' → logprob: -8.628816604614258
    4. '1' → logprob: -10.753816604614258
    5. ']' → logprob: -12.253816604614258
    6. '   ' → logprob: -12.628816604614258
    7. ' -' → logprob: -13.253816604614258
    8. '[' → logprob: -13.316316604614258
    9. '  ' → logprob: -13.816316604614258
    10. '(' → logprob: -13.941316604614258

Token 42: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005267549771815538
    2. '],' → logprob: -6.38026762008667
    3. '-' → logprob: -6.50526762008667
    4. ']-' → logprob: -6.63026762008667
    5. ' ]' → logprob: -7.38026762008667
    6. ' -' → logprob: -9.630267143249512
    7. ']
' → logprob: -11.255267143249512
    8. ':]' → logprob: -11.880267143249512
    9. ' ],' → logprob: -12.005267143249512
    10. ',' → logprob: -12.505267143249512

Token 43: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2542620897293091
    2. 'A' → logprob: -1.504262089729309
    3. ' ' → logprob: -6.3792619705200195
    4. '0' → logprob: -8.00426197052002
    5. '10' → logprob: -9.87926197052002
    6. ''A' → logprob: -9.87926197052002
    7. '"A' → logprob: -10.75426197052002
    8. 'x' → logprob: -11.25426197052002
    9. ' -' → logprob: -11.25426197052002
    10. '  ' → logprob: -11.37926197052002

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026791063137352467
    2. '0' → logprob: -6.002678871154785
    3. '-' → logprob: -9.627678871154785
    4. '[-' → logprob: -9.627678871154785
    5. '1' → logprob: -10.752678871154785
    6. ' [' → logprob: -11.377678871154785
    7. '```' → logprob: -11.377678871154785
    8. 'x' → logprob: -11.877678871154785
    9. ' ' → logprob: -12.627678871154785
    10. '2' → logprob: -12.877678871154785

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002380403922870755
    2. ' ' → logprob: -6.37738037109375
    3. '-' → logprob: -7.37738037109375
    4. '1' → logprob: -10.12738037109375
    5. '   ' → logprob: -12.25238037109375
    6. ' -' → logprob: -12.25238037109375
    7. '  ' → logprob: -13.25238037109375
    8. ']' → logprob: -14.43988037109375
    9. '۰' → logprob: -15.68988037109375
    10. '2' → logprob: -16.06488037109375

Token 46: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009981781244277954
    2. ')' → logprob: -5.509981632232666
    3. '+' → logprob: -6.384981632232666
    4. ' ]' → logprob: -6.634981632232666
    5. '])' → logprob: -7.259981632232666
    6. '-' → logprob: -7.384981632232666
    7. '<|end|>' → logprob: -7.384981632232666
    8. ']
' → logprob: -7.759981632232666
    9. ')]' → logprob: -9.259982109069824
    10. '   ' → logprob: -9.384982109069824

Token 47: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3975851833820343
    2. '<|end|>' → logprob: -2.647585153579712
    3. '+' → logprob: -2.772585153579712
    4. '   ' → logprob: -2.897585153579712
    5. ')' → logprob: -3.397585153579712
    6. '-' → logprob: -3.397585153579712
    7. ' ' → logprob: -4.022585391998291
    8. ' 
' → logprob: -4.647585391998291
    9. '\n' → logprob: -5.022585391998291
    10. ' else' → logprob: -5.147585391998291

Token 48: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6121307015419006
    2. ' print' → logprob: -1.8621306419372559
    3. '
' → logprob: -2.112130641937256
    4. '   ' → logprob: -2.737130641937256
    5. '+' → logprob: -3.362130641937256
    6. ' ' → logprob: -4.112130641937256
    7. '-' → logprob: -4.237130641937256
    8. ' if' → logprob: -4.487130641937256
    9. ',' → logprob: -4.987130641937256
    10. '\n' → logprob: -4.987130641937256

Token 49: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29377657175064087
    2. '(x' → logprob: -1.543776512145996
    3. '(abs' → logprob: -3.418776512145996
    4. '(y' → logprob: -5.168776512145996
    5. '('' → logprob: -7.293776512145996
    6. '()' → logprob: -7.543776512145996
    7. '(f' → logprob: -8.043776512145996
    8. '((' → logprob: -8.168776512145996
    9. '(A' → logprob: -8.168776512145996
    10. '("' → logprob: -8.543776512145996

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6215123534202576
    2. '-' → logprob: -0.8715123534202576
    3. ',' → logprob: -4.121512413024902
    4. ')' → logprob: -4.621512413024902
    5. ' ,' → logprob: -5.246512413024902
    6. '-y' → logprob: -5.496512413024902
    7. '+' → logprob: -5.746512413024902
    8. ' ' → logprob: -6.246512413024902
    9. '-x' → logprob: -6.496512413024902
    10. ' +' → logprob: -6.996512413024902

Token 51: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740793704986572
    2. ' y' → logprob: -0.9740793704986572
    3. ' ' → logprob: -13.849079132080078
    4. '1' → logprob: -13.974079132080078
    5. '	y' → logprob: -15.599079132080078
    6. 'x' → logprob: -15.724079132080078
    7. '  ' → logprob: -16.724079132080078
    8. '_y' → logprob: -16.974079132080078
    9. '   ' → logprob: -17.349079132080078
    10. '(y' → logprob: -17.349079132080078

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035536551149562
    2. ' )' → logprob: -8.25035572052002
    3. ')
' → logprob: -10.00035572052002
    4. '+' → logprob: -10.25035572052002
    5. '))' → logprob: -11.87535572052002
    6. ' +' → logprob: -13.25035572052002
    7. '`)' → logprob: -14.62535572052002
    8. '+)' → logprob: -14.75035572052002
    9. ',' → logprob: -15.12535572052002
    10. ')`' → logprob: -15.12535572052002

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5657040476799011
    2. '       ' → logprob: -0.9407040476799011
    3. '
' → logprob: -3.315704107284546
    4. '\n' → logprob: -6.565703868865967
    5. 'return' → logprob: -7.065703868865967
    6. '```' → logprob: -7.440703868865967
    7. 'else' → logprob: -7.565703868865967
    8. '    
' → logprob: -7.565703868865967
    9. ' ' → logprob: -7.940703868865967
    10. ')' → logprob: -8.065704345703125

Token 55: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7226292490959167
    2. '(x' → logprob: -1.4726293087005615
    3. '()' → logprob: -1.8476293087005615
    4. '(y' → logprob: -2.2226293087005615
    5. '(A' → logprob: -4.347629070281982
    6. '0' → logprob: -6.472629070281982
    7. '('' → logprob: -6.472629070281982
    8. '("' → logprob: -7.222629070281982
    9. '(abs' → logprob: -7.597629070281982
    10. '((' → logprob: -7.972629070281982

Token 56: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21766559779644012
    2. '+' → logprob: -1.9676655530929565
    3. ' +' → logprob: -3.592665672302246
    4. '-' → logprob: -4.467665672302246
    5. ' -' → logprob: -5.467665672302246
    6. ' )' → logprob: -5.592665672302246
    7. ' ' → logprob: -5.842665672302246
    8. '<|end|>' → logprob: -5.842665672302246
    9. '   ' → logprob: -7.217665672302246
    10. ' y' → logprob: -7.592665672302246

Token 57: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0026458101347088814
    2. 'x' → logprob: -6.127645969390869
    3. ')' → logprob: -9.002645492553711
    4. ''y' → logprob: -9.502645492553711
    5. '0' → logprob: -9.627645492553711
    6. '"' → logprob: -9.877645492553711
    7. ' y' → logprob: -10.002645492553711
    8. 'end' → logprob: -10.252645492553711
    9. '-' → logprob: -11.502645492553711
    10. '-y' → logprob: -11.877645492553711

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011796683247666806
    2. '   ' → logprob: -9.875118255615234
    3. ')
' → logprob: -10.125118255615234
    4. ' )' → logprob: -10.875118255615234
    5. '       ' → logprob: -12.875118255615234
    6. '))' → logprob: -13.000118255615234
    7. '`)' → logprob: -14.250118255615234
    8. '')' → logprob: -14.500118255615234
    9. ')")' → logprob: -15.250118255615234
    10. ')))' → logprob: -15.500118255615234

Token 59: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08375382423400879
    2. 'else' → logprob: -3.208753824234009
    3. ' else' → logprob: -4.33375358581543
    4. '
' → logprob: -4.45875358581543
    5. '    
' → logprob: -4.45875358581543
    6. ' 
' → logprob: -6.58375358581543
    7. '```' → logprob: -7.20875358581543
    8. '\n' → logprob: -7.83375358581543
    9. 'elif' → logprob: -7.95875358581543
    10. '<|end|>' → logprob: -8.45875358581543

Token 60: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016930224373936653
    2. 'return' (adapté à ' return') → logprob: -4.391930103302002
    3. 'else' → logprob: -6.016930103302002
    4. '       ' → logprob: -6.891930103302002
    5. ' return' → logprob: -7.266930103302002
    6. ' else' → logprob: -8.64193058013916
    7. '```' → logprob: -10.64193058013916
    8. 'elif' → logprob: -11.14193058013916
    9. '    
' → logprob: -11.14193058013916
    10. ' ' → logprob: -11.26693058013916

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0364514589309692
    2. '   ' → logprob: -1.5364514589309692
    3. 'for' → logprob: -2.0364513397216797
    4. '<|end|>' → logprob: -2.0364513397216797
    5. 'x' → logprob: -3.1614513397216797
    6. ' for' → logprob: -3.1614513397216797
    7. '    
' → logprob: -3.6614513397216797
    8. '```' → logprob: -4.16145133972168
    9. 'diff' → logprob: -5.03645133972168
    10. 'if' → logprob: -5.16145133972168

Token 62: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8745929002761841
    2. 'd' → logprob: -1.874592900276184
    3. 'diff' → logprob: -1.999592900276184
    4. '   ' → logprob: -2.2495927810668945
    5. 'dif' → logprob: -3.6245927810668945
    6. 'm' → logprob: -3.8745927810668945
    7. 'dist' → logprob: -3.8745927810668945
    8. 'for' → logprob: -3.9995927810668945
    9. 'prev' → logprob: -4.3745927810668945
    10. 'ans' → logprob: -4.4995927810668945

Token 63: ' positives' (ID: 95584)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2232524156570435
    2. 'diff' → logprob: -1.3482524156570435
    3. 'min' → logprob: -2.098252296447754
    4. '   ' → logprob: -2.973252296447754
    5. 'dp' → logprob: -3.473252296447754
    6. 'dif' → logprob: -3.598252296447754
    7. 'ans' → logprob: -3.723252296447754
    8. 'm' → logprob: -3.848252296447754
    9. 'best' → logprob: -4.098252296447754
    10. 'D' → logprob: -4.223252296447754

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033349180594086647
    2. '=' → logprob: -6.003334999084473
    3. ',' → logprob: -7.128334999084473
    4. '=[]' → logprob: -10.878334999084473
    5. ' ' → logprob: -11.378334999084473
    6. ' ,' → logprob: -12.003334999084473
    7. '   ' → logprob: -13.065834999084473
    8. ' and' → logprob: -13.315834999084473
    9. 'and' → logprob: -13.378334999084473
    10. 's' → logprob: -13.503334999084473

Token 65: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9588611721992493
    2. '[' → logprob: -1.4588611125946045
    3. '[]' → logprob: -1.5838611125946045
    4. '[A' → logprob: -2.3338611125946045
    5. ' []' → logprob: -3.8338611125946045
    6. '[list' → logprob: -3.9588611125946045
    7. '[len' → logprob: -4.083861351013184
    8. '[i' → logprob: -5.083861351013184
    9. '[]
' → logprob: -5.458861351013184
    10. 'list' → logprob: -5.708861351013184

Token 66: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1331622451543808
    2. 'x' → logprob: -2.133162260055542
    3. ']' → logprob: -5.758162021636963
    4. '0' → logprob: -7.008162021636963
    5. 'i' → logprob: -7.383162021636963
    6. 'A' → logprob: -7.633162021636963
    7. 'num' → logprob: -7.633162021636963
    8. ' a' → logprob: -8.633162498474121
    9. 'v' → logprob: -9.258162498474121
    10. 'ai' → logprob: -9.883162498474121

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012534257024526596
    2. 'for' → logprob: -4.387534141540527
    3. ' ' → logprob: -11.012534141540527
    4. '   ' → logprob: -12.512534141540527
    5. '	for' → logprob: -13.762534141540527
    6. '
' → logprob: -14.137534141540527
    7. '  ' → logprob: -14.887534141540527
    8. '>' → logprob: -15.012534141540527
    9. 'd' → logprob: -15.637534141540527
    10. 'x' → logprob: -15.762534141540527

Token 68: ' a' (ID: 261)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3218654990196228
    2. 'A' → logprob: -1.4468655586242676
    3. ' a' → logprob: -3.6968655586242676
    4. 'a' → logprob: -4.321865558624268
    5. ' in' → logprob: -6.571865558624268
    6. ' ' → logprob: -8.19686508178711
    7. '  ' → logprob: -10.19686508178711
    8. '   ' → logprob: -10.82186508178711
    9. ' the' → logprob: -11.19686508178711
    10. '_a' → logprob: -11.57186508178711

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001362020499072969
    2. 'in' → logprob: -6.626361846923828
    3. ' ' → logprob: -11.501361846923828
    4. '   ' → logprob: -11.751361846923828
    5. 's' → logprob: -12.376361846923828
    6. 'A' → logprob: -12.501361846923828
    7. 'a' → logprob: -13.001361846923828
    8. 'n' → logprob: -13.251361846923828
    9. ' A' → logprob: -13.376361846923828
    10. '  ' → logprob: -13.751361846923828

Token 70: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10024431347846985
    2. ' A' → logprob: -2.3502442836761475
    3. '   ' → logprob: -10.725244522094727
    4. ' ' → logprob: -11.225244522094727
    5. '  ' → logprob: -13.725244522094727
    6. '	A' → logprob: -14.975244522094727
    7. '>A' → logprob: -15.350244522094727
    8. '    ' → logprob: -16.475244522094727
    9. '(A' → logprob: -16.600244522094727
    10. 'a' → logprob: -16.600244522094727

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0009277798235416412
    2. 'if' → logprob: -7.000927925109863
    3. ' ' → logprob: -11.375927925109863
    4. '   ' → logprob: -12.750927925109863
    5. ' in' → logprob: -14.000927925109863
    6. '[' → logprob: -15.125927925109863
    7. '  ' → logprob: -15.750927925109863
    8. '>' → logprob: -16.125926971435547
    9. ' for' → logprob: -16.125926971435547
    10. '```' → logprob: -16.125926971435547

Token 72: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12708663940429688
    2. 'a' → logprob: -2.127086639404297
    3. ' ' → logprob: -9.127086639404297
    4. '>' → logprob: -11.002086639404297
    5. '   ' → logprob: -11.002086639404297
    6. '0' → logprob: -11.877086639404297
    7. '  ' → logprob: -12.627086639404297
    8. '    ' → logprob: -12.877086639404297
    9. '	a' → logprob: -13.127086639404297
    10. ' >' → logprob: -14.377086639404297

Token 73: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6381836533546448
    2. ' >' → logprob: -0.7631836533546448
    3. ' >=' → logprob: -5.51318359375
    4. '>=' → logprob: -6.76318359375
    5. ' ' → logprob: -8.13818359375
    6. ' <' → logprob: -10.63818359375
    7. '0' → logprob: -10.76318359375
    8. '<' → logprob: -11.63818359375
    9. ']' → logprob: -11.88818359375
    10. '   ' → logprob: -12.51318359375

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994910538196564
    2. ' ' → logprob: -2.694949150085449
    3. '1' → logprob: -11.69494915008545
    4. '   ' → logprob: -13.06994915008545
    5. '  ' → logprob: -14.38244915008545
    6. '
' → logprob: -14.50744915008545
    7. '2' → logprob: -15.50744915008545
    8. '>' → logprob: -15.75744915008545
    9. '```' → logprob: -15.81994915008545
    10. '۰' → logprob: -16.132448196411133

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002316892147064209
    2. ' ' → logprob: -6.127316951751709
    3. '1' → logprob: -9.00231647491455
    4. '   ' → logprob: -12.25231647491455
    5. '
' → logprob: -14.12731647491455
    6. '  ' → logprob: -14.37731647491455
    7. '>' → logprob: -14.43981647491455
    8. '2' → logprob: -15.06481647491455
    9. '```' → logprob: -15.06481647491455
    10. '    ' → logprob: -15.50231647491455

Token 76: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007770824711769819
    2. ']
' → logprob: -4.882771015167236
    3. ' ]' → logprob: -9.007770538330078
    4. ']
' → logprob: -10.882770538330078
    5. ']

' → logprob: -11.007770538330078
    6. ' ]
' → logprob: -12.757770538330078
    7. '   ' → logprob: -12.757770538330078
    8. ' and' → logprob: -15.632770538330078
    9. ']

' → logprob: -16.007770538330078
    10. '()]' → logprob: -16.382770538330078

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01766880974173546
    2. '   ' → logprob: -5.142668724060059
    3. '    
' → logprob: -5.267668724060059
    4. '<|end|>' → logprob: -5.642668724060059
    5. '  
' → logprob: -6.642668724060059
    6. ' 
' → logprob: -7.017668724060059
    7. '```' → logprob: -8.642668724060059
    8. '   
' → logprob: -8.767668724060059
    9. '
' → logprob: -8.892668724060059
    10. '[' → logprob: -9.767668724060059

Token 78: ' negatives' (ID: 128140)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.05539987236261368
    2. ' negatives' → logprob: -3.3053998947143555
    3. '   ' → logprob: -4.6803998947143555
    4. 'ne' → logprob: -6.4303998947143555
    5. 'posit' → logprob: -7.1178998947143555
    6. 'zeros' → logprob: -7.3678998947143555
    7. 'if' → logprob: -7.4303998947143555
    8. 'non' → logprob: -7.5553998947143555
    9. '```' → logprob: -7.6178998947143555
    10. 'n' → logprob: -7.6803998947143555

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975442260503769
    2. '=' → logprob: -3.529754400253296
    3. ' ' → logprob: -13.154754638671875
    4. ',' → logprob: -15.279754638671875
    5. '=[]' → logprob: -15.279754638671875
    6. ' =[' → logprob: -15.279754638671875
    7. '[' → logprob: -15.404754638671875
    8. '=[' → logprob: -15.654754638671875
    9. '```' → logprob: -15.654754638671875
    10. '   ' → logprob: -15.654754638671875

Token 80: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.05075767636299133
    2. '[a' → logprob: -3.050757646560669
    3. '[' → logprob: -6.425757884979248
    4. ' ' → logprob: -8.42575740814209
    5. '[-' → logprob: -9.30075740814209
    6. ' [-' → logprob: -9.30075740814209
    7. '   ' → logprob: -9.42575740814209
    8. '  ' → logprob: -11.42575740814209
    9. ' a' → logprob: -11.42575740814209
    10. 'a' → logprob: -11.55075740814209

Token 81: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014223679900169373
    2. ' a' → logprob: -4.264223575592041
    3. '-' → logprob: -10.8892240524292
    4. '   ' → logprob: -11.0142240524292
    5. ' ' → logprob: -12.1392240524292
    6. ' -' → logprob: -12.2642240524292
    7. '    ' → logprob: -12.2642240524292
    8. '-a' → logprob: -12.6392240524292
    9. '  ' → logprob: -13.2642240524292
    10. '(a' → logprob: -14.0142240524292

Token 82: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009891019202768803
    2. 'for' → logprob: -4.634891033172607
    3. ' ' → logprob: -10.00989055633545
    4. 'a' → logprob: -10.38489055633545
    5. ' <' → logprob: -10.75989055633545
    6. '<' → logprob: -11.00989055633545
    7. '	for' → logprob: -11.50989055633545
    8. ' a' → logprob: -12.13489055633545
    9. '   ' → logprob: -13.00989055633545
    10. '  ' → logprob: -14.00989055633545

Token 83: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4861253798007965
    2. ' ' → logprob: -1.1111253499984741
    3. ' a' → logprob: -3.3611254692077637
    4. 'a' → logprob: -3.8611254692077637
    5. 'A' → logprob: -10.361124992370605
    6. '   ' → logprob: -11.486124992370605
    7. ' A' → logprob: -11.986124992370605
    8. '  ' → logprob: -12.111124992370605
    9. ' x' → logprob: -12.611124992370605
    10. 'x' → logprob: -12.736124992370605

Token 84: ' in' (ID: 306)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3546465039253235
    2. ' <' → logprob: -1.2296464443206787
    3. '0' → logprob: -5.729646682739258
    4. ' ' → logprob: -5.979646682739258
    5. ' if' → logprob: -8.604646682739258
    6. ' for' → logprob: -9.604646682739258
    7. 'if' → logprob: -10.604646682739258
    8. 'a' → logprob: -10.604646682739258
    9. '1' → logprob: -10.729646682739258
    10. 'for' → logprob: -10.729646682739258

Token 85: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.45375382900238037
    2. 'A' → logprob: -1.2037538290023804
    3. '0' → logprob: -2.95375394821167
    4. ' ' → logprob: -4.57875394821167
    5. ' a' → logprob: -6.70375394821167
    6. 'a' → logprob: -7.07875394821167
    7. '[' → logprob: -9.578753471374512
    8. ' [' → logprob: -10.328753471374512
    9. '   ' → logprob: -10.953753471374512
    10. '[A' → logprob: -10.953753471374512

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012287236750125885
    2. '<' → logprob: -5.262287139892578
    3. 'if' → logprob: -5.262287139892578
    4. ' <' → logprob: -6.387287139892578
    5. '   ' → logprob: -9.137287139892578
    6. ' ' → logprob: -10.887287139892578
    7. ')' → logprob: -12.012287139892578
    8. 'import' → logprob: -12.387287139892578
    9. '[' → logprob: -12.637287139892578
    10. ' for' → logprob: -12.637287139892578

Token 87: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3638356924057007
    2. '0' → logprob: -1.7388356924057007
    3. ' <' → logprob: -2.4888358116149902
    4. ' a' → logprob: -3.7388358116149902
    5. '<' → logprob: -4.11383581161499
    6. 'a' → logprob: -5.11383581161499
    7. '1' → logprob: -10.613835334777832
    8. '  ' → logprob: -10.613835334777832
    9. '<|end|>' → logprob: -11.363835334777832
    10. '-' → logprob: -11.863835334777832

Token 88: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.428823322057724
    2. '<' → logprob: -1.0538233518600464
    3. ' ' → logprob: -9.553823471069336
    4. '0' → logprob: -10.678823471069336
    5. '1' → logprob: -12.303823471069336
    6. '<|end|>' → logprob: -12.303823471069336
    7. ')' → logprob: -12.678823471069336
    8. 'a' → logprob: -13.053823471069336
    9. ']' → logprob: -13.803823471069336
    10. '[' → logprob: -14.178823471069336

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740869402885437
    2. ' ' → logprob: -0.9740869402885437
    3. '   ' → logprob: -12.47408676147461
    4. '=' → logprob: -13.41158676147461
    5. ')' → logprob: -13.84908676147461
    6. '  ' → logprob: -14.16158676147461
    7. ' ' → logprob: -14.22408676147461
    8. '```' → logprob: -15.66158676147461
    9. ' 
' → logprob: -15.84908676147461
    10. '1' → logprob: -15.91158676147461

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '=' → logprob: -15.25048828125
    4. '   ' → logprob: -15.87548828125
    5. ')' → logprob: -16.37548828125
    6. ']' → logprob: -17.00048828125
    7. '  ' → logprob: -17.50048828125
    8. '1' → logprob: -17.62548828125
    9. '```' → logprob: -18.06298828125
    10. '۰' → logprob: -18.50048828125

Token 91: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037597675691358745
    2. ']

' → logprob: -8.625375747680664
    3. ']
' → logprob: -8.750375747680664
    4. ' ]' → logprob: -10.875375747680664
    5. '   ' → logprob: -11.000375747680664
    6. ')]' → logprob: -13.750375747680664
    7. ')' → logprob: -14.375375747680664
    8. ']
' → logprob: -15.500375747680664
    9. ']


' → logprob: -16.000375747680664
    10. ']

' → logprob: -16.125375747680664

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47545889019966125
    2. '+' → logprob: -2.600458860397339
    3. 'max' → logprob: -2.600458860397339
    4. ' if' → logprob: -3.850458860397339
    5. '#' → logprob: -3.975458860397339
    6. 'pos' → logprob: -4.100459098815918
    7. 'i' → logprob: -4.100459098815918
    8. 'if' → logprob: -4.100459098815918
    9. 'min' → logprob: -4.350459098815918
    10. ')' → logprob: -4.350459098815918

Token 93: ' steps' (ID: 10331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.05718994140625
    2. 'result' → logprob: -1.80718994140625
    3. 'res' → logprob: -2.05718994140625
    4. 'ans' → logprob: -2.43218994140625
    5. 'diff' → logprob: -2.55718994140625
    6. 'x' → logprob: -3.30718994140625
    7. 'pos' → logprob: -3.80718994140625
    8. 'ops' → logprob: -3.93218994140625
    9. 'max' → logprob: -4.18218994140625
    10. 'answer' → logprob: -4.30718994140625

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002317130332812667
    2. '=' → logprob: -6.127316951751709
    3. ' ' → logprob: -10.127317428588867
    4. '_' → logprob: -10.377317428588867
    5. '=[]' → logprob: -10.377317428588867
    6. '   ' → logprob: -11.627317428588867
    7. 's' → logprob: -11.752317428588867
    8. '_count' → logprob: -12.377317428588867
    9. '  ' → logprob: -13.752317428588867
    10. '[]' → logprob: -13.877317428588867

Token 95: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01823996752500534
    2. ' []' → logprob: -4.018239974975586
    3. '[]
' → logprob: -9.893239974975586
    4. '[' → logprob: -11.268239974975586
    5. '[N' → logprob: -11.393239974975586
    6. '0' → logprob: -12.518239974975586
    7. '[]

' → logprob: -13.143239974975586
    8. '[]}' → logprob: -13.268239974975586
    9. '["' → logprob: -13.393239974975586
    10. ' []
' → logprob: -13.518239974975586

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06888064742088318
    2. ' for' → logprob: -3.443880558013916
    3. '    
' → logprob: -4.443880558013916
    4. '    ' → logprob: -5.193880558013916
    5. '<|end|>' → logprob: -5.443880558013916
    6. 'for' → logprob: -5.693880558013916
    7. ' 
' → logprob: -6.068880558013916
    8. '
' → logprob: -6.568880558013916
    9. '+' → logprob: -6.818880558013916
    10. '```' → logprob: -7.318880558013916

Token 97: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.059515357017517
    2. ' for' → logprob: -1.559515357017517
    3. 'if' → logprob: -2.3095154762268066
    4. ' if' → logprob: -2.6845154762268066
    5. 'while' → logprob: -2.8095154762268066
    6. ' while' → logprob: -3.0595154762268066
    7. 'i' → logprob: -3.1845154762268066
    8. '   ' → logprob: -3.4345154762268066
    9. 'x' → logprob: -3.9345154762268066
    10. 'pos' → logprob: -4.434515476226807

Token 98: ' Case' (ID: 18964)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.293512225151062
    2. 'if' → logprob: -1.418512225151062
    3. 'for' → logprob: -1.418512225151062
    4. ' for' → logprob: -1.543512225151062
    5. 'i' → logprob: -5.418512344360352
    6. '#' → logprob: -5.418512344360352
    7. 'pos' → logprob: -5.543512344360352
    8. 'x' → logprob: -6.793512344360352
    9. ' i' → logprob: -6.918512344360352
    10. '<|end|>' → logprob: -7.043512344360352

Token 99: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6067050099372864
    2. '1' → logprob: -0.9817050099372864
    3. ' when' → logprob: -3.3567049503326416
    4. ':' → logprob: -3.4817049503326416
    5. ' where' → logprob: -5.231705188751221
    6. '   ' → logprob: -6.356705188751221
    7. ' for' → logprob: -6.981705188751221
    8. ' #' → logprob: -7.106705188751221
    9. 'when' → logprob: -7.106705188751221
    10. ' if' → logprob: -7.481705188751221

Token 100: ' Both' (ID: 17659)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3284743130207062
    2. ' len' → logprob: -1.7034742832183838
    3. ' positives' → logprob: -3.703474283218384
    4. 'posit' → logprob: -3.828474283218384
    5. ' not' → logprob: -4.078474521636963
    6. 'not' → logprob: -4.828474521636963
    7. ' if' → logprob: -5.203474521636963
    8. 'if' → logprob: -5.453474521636963
    9. 'neg' → logprob: -5.453474521636963
    10. ' negatives' → logprob: -5.953474521636963

Token 101: ' positive' (ID: 8841)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.7051249742507935
    2. ' positives' → logprob: -0.8301249742507935
    3. ' lists' → logprob: -3.455124855041504
    4. 'neg' → logprob: -4.455124855041504
    5. 'positive' → logprob: -4.830124855041504
    6. 'lists' → logprob: -5.080124855041504
    7. ' negatives' → logprob: -5.080124855041504
    8. ' positive' → logprob: -5.830124855041504
    9. 'pos' → logprob: -6.330124855041504
    10. ' arrays' → logprob: -8.330124855041504

Token 102: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20309987664222717
    2. 's' → logprob: -2.3280999660491943
    3. 'and' → logprob: -2.4530999660491943
    4. '   ' → logprob: -8.953100204467773
    5. ' ' → logprob: -10.578100204467773
    6. 'es' → logprob: -10.578100204467773
    7. ',' → logprob: -11.078100204467773
    8. '<|end|>' → logprob: -11.078100204467773
    9. ' s' → logprob: -11.328100204467773
    10. '<|end|>' → logprob: -12.078100204467773

Token 103: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.4387969672679901
    2. ' negative' → logprob: -1.5637969970703125
    3. 'neg' → logprob: -2.5637969970703125
    4. ' negatives' → logprob: -2.6887969970703125
    5. '_negative' → logprob: -8.438796997070312
    6. ' negativos' → logprob: -9.313796997070312
    7. '_neg' → logprob: -9.313796997070312
    8. '-negative' → logprob: -9.438796997070312
    9. ' ' → logprob: -10.063796997070312
    10. ' negatif' → logprob: -10.313796997070312

Token 104: ' numbers' (ID: 8663)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5756654739379883
    2. ' if' → logprob: -1.5756654739379883
    3. '<|end|>' → logprob: -2.2006654739379883
    4. 's' → logprob: -3.4506654739379883
    5. 'if' → logprob: -3.7006654739379883
    6. '    
' → logprob: -4.575665473937988
    7. '<|end|>' → logprob: -4.575665473937988
    8. ':' → logprob: -4.700665473937988
    9. ' for' → logprob: -4.825665473937988
    10. ',' → logprob: -5.700665473937988

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038058701902627945
    2. ' if' → logprob: -4.538058757781982
    3. ' for' → logprob: -4.913058757781982
    4. '    
' → logprob: -5.163058757781982
    5. '<|end|>' → logprob: -5.163058757781982
    6. '
' → logprob: -5.288058757781982
    7. '<|end|>' → logprob: -7.163058757781982
    8. 'if' → logprob: -7.663058757781982
    9. 'for' → logprob: -7.788058757781982
    10. '    ' → logprob: -8.038058280944824

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019637083634734154
    2. ' if' → logprob: -4.769637107849121
    3. ' for' → logprob: -4.894637107849121
    4. '<|end|>' → logprob: -6.894637107849121
    5. 'for' → logprob: -7.144637107849121
    6. 'if' → logprob: -7.519637107849121
    7. '    ' → logprob: -7.769637107849121
    8. '    
' → logprob: -7.894637107849121
    9. '<|end|>' → logprob: -9.769637107849121
    10. '
' → logprob: -10.019637107849121

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24394188821315765
    2. 'if' (adapté à ' if') → logprob: -1.7439419031143188
    3. '   ' → logprob: -3.7439417839050293
    4. ' for' → logprob: -4.368941783905029
    5. 'for' → logprob: -6.118941783905029
    6. 'pos' → logprob: -7.368941783905029
    7. ' positive' → logprob: -7.618941783905029
    8. ' pos' → logprob: -7.993941783905029
    9. '<|end|>' → logprob: -8.618942260742188
    10. 'positive' → logprob: -8.618942260742188

Token 108: ' positives' (ID: 95584)
  Prédit: ' positives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positives' → logprob: -0.17021095752716064
    2. 'posit' → logprob: -2.295210838317871
    3. ' negatives' → logprob: -3.545210838317871
    4. ' len' → logprob: -4.420210838317871
    5. 'len' → logprob: -4.670210838317871
    6. 'neg' → logprob: -5.545210838317871
    7. ' not' → logprob: -7.170210838317871
    8. '   ' → logprob: -8.170210838317871
    9. 'not' → logprob: -8.670210838317871
    10. 'pos' → logprob: -9.170210838317871

Token 109: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759480595588684
    2. ' and' → logprob: -0.8259480595588684
    3. ':' → logprob: -12.075947761535645
    4. '>' → logprob: -13.575947761535645
    5. ' ' → logprob: -14.825947761535645
    6. '   ' → logprob: -14.950947761535645
    7. '!=' → logprob: -15.575947761535645
    8. '	and' → logprob: -15.700947761535645
    9. '<|end|>' → logprob: -16.32594871520996
    10. '<|end|>' → logprob: -16.82594871520996

Token 110: ' negatives' (ID: 128140)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.6327283382415771
    2. ' negatives' → logprob: -0.7577283382415771
    3. 'negative' → logprob: -9.882728576660156
    4. 'len' → logprob: -10.757728576660156
    5. 'not' → logprob: -11.382728576660156
    6. '   ' → logprob: -11.757728576660156
    7. ' negativos' → logprob: -12.382728576660156
    8. '_neg' → logprob: -12.382728576660156
    9. ' ' → logprob: -12.507728576660156
    10. '```' → logprob: -12.757728576660156

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031496648443862796
    2. ':
' → logprob: -8.125314712524414
    3. ' :' → logprob: -11.500314712524414
    4. '):' → logprob: -12.000314712524414
    5. '   ' → logprob: -13.625314712524414
    6. ':

' → logprob: -14.750314712524414
    7. ':**' → logprob: -15.375314712524414
    8. ' and' → logprob: -15.750314712524414
    9. '[' → logprob: -15.875314712524414
    10. ':
' → logprob: -16.000314712524414

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003529398003593087
    2. ' for' → logprob: -6.2535295486450195
    3. '   ' → logprob: -7.5035295486450195
    4. '<|end|>' → logprob: -7.7535295486450195
    5. '        
' → logprob: -9.00352954864502
    6. '    ' → logprob: -9.50352954864502
    7. '
' → logprob: -9.50352954864502
    8. ':' → logprob: -9.62852954864502
    9. ' x' → logprob: -10.00352954864502
    10. '<|end|>' → logprob: -10.12852954864502

Token 113: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8145697712898254
    2. ' for' → logprob: -1.0645697116851807
    3. 'x' → logprob: -2.1895697116851807
    4. ' x' → logprob: -3.0645697116851807
    5. '       ' → logprob: -3.8145697116851807
    6. '   ' → logprob: -4.43956995010376
    7. 'prev' → logprob: -6.06456995010376
    8. 'while' → logprob: -6.31456995010376
    9. '#' (adapté à ' #') → logprob: -6.56456995010376
    10. ' while' → logprob: -6.81456995010376

Token 114: ' Take' (ID: 14166)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5402833223342896
    2. ' x' → logprob: -1.5402833223342896
    3. 'for' → logprob: -1.6652833223342896
    4. 'x' → logprob: -1.9152833223342896
    5. ' cur' → logprob: -3.040283203125
    6. ' current' → logprob: -3.790283203125
    7. ' prev' → logprob: -3.790283203125
    8. '   ' → logprob: -4.040283203125
    9. 'prev' → logprob: -4.290283203125
    10. ' first' → logprob: -4.665283203125

Token 115: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.364563226699829
    2. 'neg' → logprob: -1.739563226699829
    3. ' the' → logprob: -1.864563226699829
    4. ' all' → logprob: -2.364563226699829
    5. 'the' → logprob: -2.489563226699829
    6. ' negatives' → logprob: -2.614563226699829
    7. 'x' → logprob: -3.239563226699829
    8. 'prev' → logprob: -4.11456298828125
    9. 'initial' → logprob: -4.61456298828125
    10. ' positives' → logprob: -4.86456298828125

Token 116: ' largest' (ID: 10574)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.7405919432640076
    2. 'largest' → logprob: -1.6155920028686523
    3. 'first' → logprob: -2.3655920028686523
    4. 'max' → logprob: -2.4905920028686523
    5. 'posit' → logprob: -2.8655920028686523
    6. 'small' → logprob: -4.240592002868652
    7. ' smallest' → logprob: -4.740592002868652
    8. 'abs' → logprob: -4.865592002868652
    9. ' largest' → logprob: -4.865592002868652
    10. ' first' → logprob: -4.990592002868652

Token 117: ' positive' (ID: 8841)
  Prédit: ' positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.6511328220367432
    2. 'positive' → logprob: -0.9011328220367432
    3. 'negative' → logprob: -3.026132822036743
    4. ' negative' → logprob: -3.776132822036743
    5. '_positive' → logprob: -8.276132583618164
    6. 'from' → logprob: -8.901132583618164
    7. '-positive' → logprob: -9.588632583618164
    8. 'pos' → logprob: -9.713632583618164
    9. ' of' → logprob: -9.713632583618164
    10. ' and' → logprob: -9.838632583618164

Token 118: ' and' (ID: 326)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5090874433517456
    2. 'number' → logprob: -1.3840874433517456
    3. 's' → logprob: -2.384087562561035
    4. ' and' → logprob: -3.634087562561035
    5. ',' → logprob: -4.509087562561035
    6. 'value' → logprob: -5.634087562561035
    7. ' value' → logprob: -5.884087562561035
    8. ' -' → logprob: -6.259087562561035
    9. ' numbers' → logprob: -6.259087562561035
    10. 'and' → logprob: -6.384087562561035

Token 119: ' accumulate' (ID: 74226)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6750243902206421
    2. 'the' → logprob: -1.925024390220642
    3. 'pop' → logprob: -2.3000245094299316
    4. ' pop' → logprob: -2.8000245094299316
    5. ' use' → logprob: -2.9250245094299316
    6. ' smallest' → logprob: -3.1750245094299316
    7. 'neg' → logprob: -3.6750245094299316
    8. 'small' → logprob: -4.550024509429932
    9. 'subtract' → logprob: -4.550024509429932
    10. 'remove' → logprob: -4.800024509429932

Token 120: ' sub' (ID: 1543)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.8375022411346436
    2. ' all' → logprob: -2.2125022411346436
    3. ' steps' → logprob: -2.3375022411346436
    4. 'all' → logprob: -2.8375022411346436
    5. 'result' → logprob: -2.8375022411346436
    6. ' positives' → logprob: -2.9625022411346436
    7. ' result' → logprob: -3.0875022411346436
    8. ' for' → logprob: -3.2125022411346436
    9. 'steps' → logprob: -3.3375022411346436
    10. 'the' → logprob: -3.3375022411346436

Token 121: 'tractions' (ID: 26354)
  Prédit: 'tractions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tractions' → logprob: -0.4977378845214844
    2. 'tract' → logprob: -1.1227378845214844
    3. 'traction' → logprob: -3.2477378845214844
    4. 'stract' → logprob: -4.122737884521484
    5. 'tracted' → logprob: -5.372737884521484
    6. 'straction' → logprob: -6.622737884521484
    7. '-' → logprob: -6.747737884521484
    8. ' positives' → logprob: -7.497737884521484
    9. '=' → logprob: -7.747737884521484
    10. '```' → logprob: -7.997737884521484

Token 122: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0711493492126465
    2. ' from' → logprob: -1.9461493492126465
    3. ' with' → logprob: -2.0711493492126465
    4. ' =' → logprob: -2.3211493492126465
    5. '   ' → logprob: -2.5711493492126465
    6. ' in' → logprob: -2.9461493492126465
    7. 'from' → logprob: -3.5711493492126465
    8. '       ' → logprob: -3.9461493492126465
    9. ' (' → logprob: -4.1961493492126465
    10. 'for' → logprob: -4.4461493492126465

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22255268692970276
    2. ' for' → logprob: -1.7225526571273804
    3. 'for' → logprob: -5.34755277633667
    4. ' =' → logprob: -5.47255277633667
    5. ' x' → logprob: -5.72255277633667
    6. ' from' → logprob: -5.97255277633667
    7. ' (' → logprob: -6.97255277633667
    8. '   ' → logprob: -6.97255277633667
    9. '        ' → logprob: -7.22255277633667
    10. '        
' → logprob: -7.59755277633667

Token 124: ' tmp' (ID: 8919)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4875424802303314
    2. 'x' → logprob: -1.2375425100326538
    3. ' for' → logprob: -3.8625423908233643
    4. ' cur' → logprob: -3.9875423908233643
    5. ' current' → logprob: -4.487542629241943
    6. 'for' → logprob: -5.112542629241943
    7. ' pos' → logprob: -5.237542629241943
    8. ' largest' → logprob: -5.987542629241943
    9. ' result' → logprob: -6.112542629241943
    10. 'current' → logprob: -6.237542629241943

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005832456983625889
    2. '=' → logprob: -6.005832672119141
    3. '_pos' → logprob: -6.255832672119141
    4. '_' → logprob: -7.130832672119141
    5. '_val' → logprob: -8.75583267211914
    6. '_max' → logprob: -9.25583267211914
    7. ',' → logprob: -9.50583267211914
    8. '_positive' → logprob: -9.63083267211914
    9. '_value' → logprob: -9.75583267211914
    10. '   ' → logprob: -10.50583267211914

Token 126: ' negatives' (ID: 128140)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.015081108547747135
    2. ' positives' → logprob: -4.26508092880249
    3. 'neg' → logprob: -7.39008092880249
    4. 'A' → logprob: -9.015081405639648
    5. 'pos' → logprob: -9.640081405639648
    6. '0' → logprob: -10.765081405639648
    7. ' negatives' → logprob: -10.890081405639648
    8. 'abs' → logprob: -10.890081405639648
    9. 'max' → logprob: -11.640081405639648
    10. '   ' → logprob: -11.640081405639648

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11391228437423706
    2. '[-' → logprob: -2.238912343978882
    3. '.pop' → logprob: -7.113912105560303
    4. '0' → logprob: -8.863912582397461
    5. '.copy' → logprob: -10.488912582397461
    6. 'copy' → logprob: -11.113912582397461
    7. '[:]' → logprob: -11.238912582397461
    8. '[:' → logprob: -11.488912582397461
    9. '[::-' → logprob: -11.488912582397461
    10. '-' → logprob: -11.613912582397461

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16218160092830658
    2. '-' → logprob: -1.9121816158294678
    3. ' ' → logprob: -7.037181377410889
    4. ' -' → logprob: -7.537181377410889
    5. ':' → logprob: -8.037181854248047
    6. '   ' → logprob: -9.662181854248047
    7. '::-' → logprob: -9.787181854248047
    8. '
' → logprob: -10.662181854248047
    9. '-
' → logprob: -11.474681854248047
    10. '::' → logprob: -11.974681854248047

Token 129: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1813352257013321
    2. ']' → logprob: -1.806335210800171
    3. ' ]
' → logprob: -7.18133544921875
    4. ']
' → logprob: -8.18133544921875
    5. ']

' → logprob: -8.68133544921875
    6. ' ]' → logprob: -9.05633544921875
    7. '
' → logprob: -9.30633544921875
    8. '       ' → logprob: -9.80633544921875
    9. '0' → logprob: -10.68133544921875
    10. '-' → logprob: -11.18133544921875

Token 130: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04850174859166145
    2. '   ' → logprob: -3.92350172996521
    3. ' for' → logprob: -4.673501968383789
    4. '    
' → logprob: -5.298501968383789
    5. '       ' → logprob: -5.798501968383789
    6. '  
' → logprob: -6.048501968383789
    7. '\n' → logprob: -6.173501968383789
    8. 'for' → logprob: -6.548501968383789
    9. '<|end|>' → logprob: -6.548501968383789
    10. '
' → logprob: -7.048501968383789

Token 131: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6647093296051025
    2. ' for' → logprob: -0.7897093296051025
    3. ' 
' → logprob: -5.039709091186523
    4. '   ' → logprob: -5.039709091186523
    5. '    
' → logprob: -5.289709091186523
    6. 'for' (adapté à ' for') → logprob: -5.414709091186523
    7. '\n' → logprob: -6.289709091186523
    8. '<|end|>' → logprob: -6.289709091186523
    9. '  
' → logprob: -6.414709091186523
    10. '       ' → logprob: -6.539709091186523

Token 132: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1470643281936646
    2. 'a' → logprob: -1.3970643281936646
    3. ' p' → logprob: -1.8970643281936646
    4. 'i' → logprob: -2.272064208984375
    5. ' i' → logprob: -2.522064208984375
    6. ' a' → logprob: -2.772064208984375
    7. 'pos' → logprob: -4.397064208984375
    8. ' pos' → logprob: -4.522064208984375
    9. 'x' → logprob: -4.772064208984375
    10. ' x' → logprob: -5.272064208984375

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012544499710202217
    2. 'in' → logprob: -4.387544631958008
    3. 's' → logprob: -11.137544631958008
    4. ' ' → logprob: -12.012544631958008
    5. 'n' → logprob: -13.012544631958008
    6. 'In' → logprob: -13.387544631958008
    7. '_in' → logprob: -13.512544631958008
    8. '1' → logprob: -13.762544631958008
    9. 'x' → logprob: -13.887544631958008
    10. 'a' → logprob: -14.137544631958008

Token 134: ' positives' (ID: 95584)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.045479368418455124
    2. ' positives' → logprob: -3.2954792976379395
    3. 'neg' → logprob: -5.0454792976379395
    4. ' negatives' → logprob: -7.1704792976379395
    5. '   ' → logprob: -9.670479774475098
    6. 'positive' → logprob: -10.545479774475098
    7. 'range' → logprob: -10.795479774475098
    8. '[' → logprob: -10.795479774475098
    9. 'pos' → logprob: -10.920479774475098
    10. 're' → logprob: -11.982979774475098

Token 135: '[:-' (ID: 63556)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5283983945846558
    2. '[' → logprob: -0.9033983945846558
    3. '[:-' → logprob: -5.278398513793945
    4. ':
' → logprob: -9.153398513793945
    5. '[::-' → logprob: -11.153398513793945
    6. ' :' → logprob: -11.403398513793945
    7. '1' → logprob: -11.528398513793945
    8. '[:' → logprob: -11.778398513793945
    9. '):' → logprob: -13.153398513793945
    10. '[:]' → logprob: -13.403398513793945

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '-' → logprob: -13.37500286102295
    3. ']' → logprob: -14.50000286102295
    4. ' ' → logprob: -15.00000286102295
    5. '```' → logprob: -16.750001907348633
    6. ')' → logprob: -16.937501907348633
    7. '   ' → logprob: -17.312501907348633
    8. 'last' → logprob: -17.625001907348633
    9. '１' → logprob: -17.750001907348633
    10. '])' → logprob: -17.812501907348633

Token 137: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.07987275719642639
    2. ']:' → logprob: -2.5798728466033936
    3. ']:
' → logprob: -7.8298726081848145
    4. ']' → logprob: -8.329873085021973
    5. '       ' → logprob: -8.329873085021973
    6. '   ' → logprob: -10.454873085021973
    7. ' ]' → logprob: -10.704873085021973
    8. ']:

' → logprob: -10.954873085021973
    9. ':' → logprob: -11.329873085021973
    10. '):
' → logprob: -11.704873085021973

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005305619910359383
    2. '       ' → logprob: -5.755305767059326
    3. ' steps' → logprob: -7.380305767059326
    4. 'steps' → logprob: -7.505305767059326
    5. '
' → logprob: -8.130305290222168
    6. '<|end|>' → logprob: -9.005305290222168
    7. '   ' → logprob: -9.380305290222168
    8. ',' → logprob: -9.630305290222168
    9. '	       ' → logprob: -9.630305290222168
    10. ':
' → logprob: -10.005305290222168

Token 139: ' steps' (ID: 10331)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1862819194793701
    2. '               ' → logprob: -1.3112819194793701
    3. ' steps' → logprob: -1.5612819194793701
    4. 'steps' (adapté à ' steps') → logprob: -2.43628191947937
    5. ' tmp' → logprob: -3.18628191947937
    6. 'tmp' → logprob: -3.56128191947937
    7. ' print' → logprob: -4.186282157897949
    8. 'print' → logprob: -4.186282157897949
    9. '   ' → logprob: -4.561282157897949
    10. '       ' → logprob: -4.936282157897949

Token 140: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003187810070812702
    2. '.' → logprob: -8.12531852722168
    3. ' .' → logprob: -10.87531852722168
    4. 'append' → logprob: -13.37531852722168
    5. '.ap' → logprob: -14.00031852722168
    6. '.app' → logprob: -14.12531852722168
    7. '   ' → logprob: -15.25031852722168
    8. ').' → logprob: -16.37531852722168
    9. '.push' → logprob: -16.75031852722168
    10. '.Append' → logprob: -16.75031852722168

Token 141: '((' (ID: 2054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.01787363924086094
    2. '((' → logprob: -4.642873764038086
    3. '(' → logprob: -5.017873764038086
    4. '(tmp' → logprob: -7.142873764038086
    5. '("' → logprob: -8.267873764038086
    6. '('' → logprob: -8.517873764038086
    7. ' (' → logprob: -9.142873764038086
    8. '"' → logprob: -10.017873764038086
    9. '(('' → logprob: -10.892873764038086
    10. ' f' → logprob: -11.517873764038086

Token 142: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.08244001865386963
    2. 'x' → logprob: -2.83243989944458
    3. ' tmp' → logprob: -3.95743989944458
    4. ' x' → logprob: -7.58243989944458
    5. '(tmp' → logprob: -8.707440376281738
    6. '   ' → logprob: -8.707440376281738
    7. '	tmp' → logprob: -9.582440376281738
    8. '           ' → logprob: -10.582440376281738
    9. '[tmp' → logprob: -10.582440376281738
    10. ',tmp' → logprob: -10.582440376281738

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031086693052202463
    2. ' ,' → logprob: -6.128108501434326
    3. ',x' → logprob: -7.003108501434326
    4. 'x' → logprob: -12.253108978271484
    5. '   ' → logprob: -12.378108978271484
    6. ' x' → logprob: -13.503108978271484
    7. '-' → logprob: -14.003108978271484
    8. '),' → logprob: -14.753108978271484
    9. ' -' → logprob: -14.878108978271484
    10. ' ' → logprob: -15.003108978271484

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023251768201589584
    2. ' x' → logprob: -3.77325177192688
    3. '   ' → logprob: -12.8982515335083
    4. ' ' → logprob: -13.7732515335083
    5. ')' → logprob: -14.0232515335083
    6. ''x' → logprob: -14.7732515335083
    7. '    ' → logprob: -15.0232515335083
    8. '"x' → logprob: -15.3982515335083
    9. '	x' → logprob: -15.6482515335083
    10. '  ' → logprob: -15.7732515335083

Token 145: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0704459622502327
    2. '))
' → logprob: -2.695446014404297
    3. ' ))' → logprob: -8.445446014404297
    4. ')' → logprob: -8.945446014404297
    5. ',' → logprob: -9.820446014404297
    6. ' ))
' → logprob: -10.195446014404297
    7. '))

' → logprob: -10.320446014404297
    8. '))
' → logprob: -11.195446014404297
    9. ' ' → logprob: -12.445446014404297
    10. ')
' → logprob: -12.820446014404297

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033261224161833525
    2. '
' → logprob: -6.003325939178467
    3. 'tmp' → logprob: -7.503325939178467
    4. '
' → logprob: -9.128326416015625
    5. '		' → logprob: -9.878326416015625
    6. '       ' → logprob: -10.503326416015625
    7. '            
' → logprob: -10.753326416015625
    8. '   ' → logprob: -11.128326416015625
    9. '	       ' → logprob: -11.253326416015625
    10. '               ' → logprob: -11.628326416015625

Token 147: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.002886544680222869
    2. ' tmp' → logprob: -6.377886772155762
    3. '           ' → logprob: -6.752886772155762
    4. 'temp' → logprob: -11.252886772155762
    5. '   ' → logprob: -13.752886772155762
    6. '	tmp' → logprob: -14.252886772155762
    7. '$tmp' → logprob: -15.377886772155762
    8. '       ' → logprob: -15.502886772155762
    9. '/tmp' → logprob: -15.752886772155762
    10. ' ' → logprob: -15.752886772155762

Token 148: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44985872507095337
    2. '-=' → logprob: -1.5748586654663086
    3. ' -=' → logprob: -2.0748586654663086
    4. ' =' → logprob: -3.8248586654663086
    5. '-' → logprob: -4.949858665466309
    6. ' -' → logprob: -8.199858665466309
    7. '    ' → logprob: -8.449858665466309
    8. '+=' → logprob: -9.449858665466309
    9. '	' → logprob: -9.574858665466309
    10. '   ' → logprob: -10.574858665466309

Token 149: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.575943112373352
    2. ' x' → logprob: -0.825943112373352
    3. '<|end|>' → logprob: -12.950942993164062
    4. ' ' → logprob: -14.575942993164062
    5. '	x' → logprob: -14.700942993164062
    6. ' ' → logprob: -16.825942993164062
    7. '<|end|>' → logprob: -16.950942993164062
    8. '1' → logprob: -16.950942993164062
    9. '(x' → logprob: -17.075942993164062
    10. ')x' → logprob: -17.200942993164062

Token 150: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044068798422813416
    2. '\n' → logprob: -4.169068813323975
    3. '       ' → logprob: -4.294068813323975
    4. '    
' → logprob: -5.669068813323975
    5. '        
' → logprob: -6.044068813323975
    6. '
' → logprob: -6.169068813323975
    7. '  
' → logprob: -6.294068813323975
    8. '   ' → logprob: -6.544068813323975
    9. ' 
' → logprob: -6.669068813323975
    10. 'newline' → logprob: -7.544068813323975

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7266812324523926
    2. '
' → logprob: -1.7266812324523926
    3. '\n' → logprob: -1.9766812324523926
    4. ' 
' → logprob: -2.8516812324523926
    5. '    
' → logprob: -3.1016812324523926
    6. '   ' → logprob: -3.3516812324523926
    7. '  
' → logprob: -3.8516812324523926
    8. '        
' → logprob: -3.8516812324523926
    9. '<|end|>' → logprob: -5.226681232452393
    10. 'newline' → logprob: -5.851681232452393

Token 152: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.7908121943473816
    2. 'steps' (adapté à ' steps') → logprob: -0.7908121943473816
    3. '       ' → logprob: -3.2908122539520264
    4. '   ' → logprob: -4.540812015533447
    5. '
' → logprob: -4.665812015533447
    6. ')
' → logprob: -5.165812015533447
    7. '        
' → logprob: -5.290812015533447
    8. '    
' → logprob: -5.540812015533447
    9. 'tmp' → logprob: -5.915812015533447
    10. '\n' → logprob: -6.165812015533447

Token 153: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00122713518794626
    2. '.' → logprob: -6.751226902008057
    3. 'append' → logprob: -10.001227378845215
    4. ' .' → logprob: -11.876227378845215
    5. '.app' → logprob: -13.251227378845215
    6. '.extend' → logprob: -14.126227378845215
    7. '.ap' → logprob: -14.876227378845215
    8. 'Append' → logprob: -15.376227378845215
    9. '[-' → logprob: -15.626227378845215
    10. 'appen' → logprob: -15.751227378845215

Token 154: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004521222144830972
    2. '(' → logprob: -8.000452041625977
    3. '(tmp' → logprob: -9.250452041625977
    4. ' ' → logprob: -11.875452041625977
    5. ' (' → logprob: -12.500452041625977
    6. ' ((' → logprob: -12.625452041625977
    7. '   ' → logprob: -12.875452041625977
    8. '(('' → logprob: -14.125452041625977
    9. '(
' → logprob: -14.500452041625977
    10. '  ' → logprob: -14.750452041625977

Token 155: 'posit' (ID: 2904)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.05009584128856659
    2. '(tmp' → logprob: -3.550095796585083
    3. ' tmp' → logprob: -4.050096035003662
    4. '(' → logprob: -6.925096035003662
    5. 'posit' → logprob: -7.800096035003662
    6. 'pos' → logprob: -8.550095558166504
    7. '   ' → logprob: -8.550095558166504
    8. ',tmp' → logprob: -8.675095558166504
    9. ')' → logprob: -8.800095558166504
    10. ',' → logprob: -9.300095558166504

Token 156: 'ives' (ID: 2264)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3903760612010956
    2. 'ives' → logprob: -1.390376091003418
    3. 'ves' → logprob: -2.640376091003418
    4. 'os' → logprob: -6.890376091003418
    5. 'aves' → logprob: -6.890376091003418
    6. 've' → logprob: -8.390376091003418
    7. 'oes' → logprob: -9.015376091003418
    8. 'oves' → logprob: -9.140376091003418
    9. '   ' → logprob: -10.140376091003418
    10. 'v' → logprob: -10.140376091003418

Token 157: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -8.911954500945285e-05
    2. '-' → logprob: -9.500088691711426
    3. '[' → logprob: -11.625088691711426
    4. '   ' → logprob: -12.625088691711426
    5. ' [-' → logprob: -13.875088691711426
    6. '[:-' → logprob: -15.125088691711426
    7. '][-' → logprob: -15.750088691711426
    8. '1' → logprob: -16.000089645385742
    9. '```' → logprob: -16.000089645385742
    10. ' -' → logprob: -16.500089645385742

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '-' → logprob: -11.250014305114746
    3. ' ' → logprob: -14.500014305114746
    4. ' -' → logprob: -17.06251335144043
    5. '```' → logprob: -17.12501335144043
    6. '   ' → logprob: -17.37501335144043
    7. ']' → logprob: -17.68751335144043
    8. 'len' → logprob: -17.81251335144043
    9. '])' → logprob: -17.81251335144043
    10. '0' → logprob: -17.87501335144043

Token 159: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005569627974182367
    2. ' ,' → logprob: -7.500556945800781
    3. ',tmp' → logprob: -12.875556945800781
    4. ',
' → logprob: -14.375556945800781
    5. '),' → logprob: -15.250556945800781
    6. 'tmp' → logprob: -15.625556945800781
    7. '`,' → logprob: -16.87555694580078
    8. '   ' → logprob: -17.25055694580078
    9. ',

' → logprob: -17.25055694580078
    10. ')' → logprob: -17.25055694580078

Token 160: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1128358319401741
    2. ' tmp' → logprob: -2.2378358840942383
    3. '	tmp' → logprob: -12.237835884094238
    4. 'temp' → logprob: -12.987835884094238
    5. '(tmp' → logprob: -13.487835884094238
    6. ',tmp' → logprob: -13.487835884094238
    7. '   ' → logprob: -13.987835884094238
    8. '/tmp' → logprob: -14.362835884094238
    9. '$tmp' → logprob: -14.612835884094238
    10. ' ' → logprob: -14.737835884094238

Token 161: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08098681271076202
    2. '))
' → logprob: -2.580986738204956
    3. ')' → logprob: -6.205986976623535
    4. ')
' → logprob: -10.455986976623535
    5. '))

' → logprob: -10.705986976623535
    6. '))
' → logprob: -10.830986976623535
    7. ' ))' → logprob: -12.830986976623535
    8. ' ))
' → logprob: -13.705986976623535
    9. ')))' → logprob: -13.955986976623535
    10. '   ' → logprob: -14.705986976623535

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014124487526714802
    2. '   ' → logprob: -5.014124393463135
    3. 'tmp' → logprob: -5.139124393463135
    4. ' tmp' → logprob: -7.389124393463135
    5. 'x' → logprob: -8.639124870300293
    6. '    ' → logprob: -9.139124870300293
    7. '	tmp' → logprob: -9.514124870300293
    8. '	' → logprob: -9.514124870300293
    9. '        
' → logprob: -9.889124870300293
    10. '<|end|>' → logprob: -10.014124870300293

Token 163: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.3142315447330475
    2. '       ' → logprob: -1.439231514930725
    3. '   ' → logprob: -4.1892313957214355
    4. 'print' → logprob: -4.5642313957214355
    5. 'x' → logprob: -6.1892313957214355
    6. 'result' → logprob: -6.4392313957214355
    7. ' tmp' → logprob: -7.3142313957214355
    8. 'positive' → logprob: -7.6892313957214355
    9. 'final' → logprob: -7.8142313957214355
    10. 'for' → logprob: -7.9392313957214355

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35266751050949097
    2. ' =' → logprob: -1.7276675701141357
    3. ' -=' → logprob: -2.3526675701141357
    4. '-=' → logprob: -4.477667331695557
    5. ',' → logprob: -4.977667331695557
    6. '-' → logprob: -5.602667331695557
    7. '<|end|>' → logprob: -6.977667331695557
    8. ')' → logprob: -7.602667331695557
    9. ' -' → logprob: -8.352667808532715
    10. ' +=' → logprob: -8.727667808532715

Token 165: ' positives' (ID: 95584)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.03017912060022354
    2. ' positives' → logprob: -3.530179023742676
    3. 'steps' → logprob: -8.155179023742676
    4. 'positive' → logprob: -9.905179023742676
    5. 'pos' → logprob: -10.030179023742676
    6. '   ' → logprob: -11.530179023742676
    7. ' steps' → logprob: -11.780179023742676
    8. '(' → logprob: -12.155179023742676
    9. 'positions' → logprob: -12.655179023742676
    10. '0' → logprob: -12.905179023742676

Token 166: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0007188651943579316
    2. '-' → logprob: -7.25071907043457
    3. '[' → logprob: -11.75071907043457
    4. '][-' → logprob: -15.75071907043457
    5. '0' → logprob: -15.87571907043457
    6. '1' → logprob: -15.87571907043457
    7. '	' → logprob: -16.25071907043457
    8. '   ' → logprob: -16.37571907043457
    9. '[:-' → logprob: -16.87571907043457
    10. ' [-' → logprob: -16.87571907043457

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043686782009899616
    2. '2' → logprob: -7.750436782836914
    3. ' ' → logprob: -12.375436782836914
    4. '-' → logprob: -14.125436782836914
    5. '11' → logprob: -15.437936782836914
    6. '   ' → logprob: -15.562936782836914
    7. '```' → logprob: -15.687936782836914
    8. 'len' → logprob: -16.375436782836914
    9. '0' → logprob: -16.500436782836914
    10. '(' → logprob: -17.125436782836914

Token 168: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02043209969997406
    2. '<|end|>' → logprob: -4.645431995391846
    3. ')
' → logprob: -5.020431995391846
    4. ' -' → logprob: -6.270431995391846
    5. '-' → logprob: -6.770431995391846
    6. '<|end|>' → logprob: -7.645431995391846
    7. ' )' → logprob: -8.645432472229004
    8. ']' → logprob: -9.770432472229004
    9. ')-' → logprob: -10.270432472229004
    10. ')]' → logprob: -10.270432472229004

Token 169: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08488393574953079
    2. ' for' → logprob: -2.83488392829895
    3. '   ' → logprob: -4.459884166717529
    4. '       ' → logprob: -4.959884166717529
    5. '<|end|>' → logprob: -6.334884166717529
    6. '	for' → logprob: -6.584884166717529
    7. '
' → logprob: -7.209884166717529
    8. '	' → logprob: -10.209883689880371
    9. '<|end|>' → logprob: -10.459883689880371
    10. ' ' → logprob: -10.834883689880371

Token 170: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0017438429640606046
    2. ' tmp' → logprob: -7.001743793487549
    3. 'steps' → logprob: -7.126743793487549
    4. 'neg' → logprob: -11.501744270324707
    5. ' steps' → logprob: -12.376744270324707
    6. '(tmp' → logprob: -12.501744270324707
    7. 'temp' → logprob: -12.626744270324707
    8. '/tmp' → logprob: -13.751744270324707
    9. '   ' → logprob: -14.501744270324707
    10. ' ' → logprob: -14.501744270324707

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35602080821990967
    2. '
' → logprob: -1.8560208082199097
    3. '<|end|>' → logprob: -2.731020927429199
    4. 'for' → logprob: -3.231020927429199
    5. ' for' → logprob: -3.981020927429199
    6. 'steps' → logprob: -5.231020927429199
    7. '       ' → logprob: -5.481020927429199
    8. '    
' → logprob: -6.231020927429199
    9. ')' → logprob: -6.231020927429199
    10. '
' → logprob: -6.731020927429199

Token 172: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37483566999435425
    2. 'for' → logprob: -1.249835729598999
    3. ' for' → logprob: -4.37483549118042
    4. 'steps' → logprob: -4.99983549118042
    5. '       ' → logprob: -6.24983549118042
    6. '<|end|>' → logprob: -6.74983549118042
    7. '    
' → logprob: -7.12483549118042
    8. ')' → logprob: -7.37483549118042
    9. 'print' → logprob: -7.74983549118042
    10. '\n' → logprob: -7.99983549118042

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3431989848613739
    2. '   ' → logprob: -1.8431990146636963
    3. 'print' → logprob: -2.2181990146636963
    4. ' for' → logprob: -4.593198776245117
    5. 'steps' → logprob: -5.343198776245117
    6. 'else' → logprob: -5.843198776245117
    7. 'x' → logprob: -7.218198776245117
    8. '#' → logprob: -7.218198776245117
    9. '    
' → logprob: -7.468198776245117
    10. 'min' → logprob: -7.468198776245117

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4939447045326233
    2. 'neg' → logprob: -1.4939446449279785
    3. 'n' → logprob: -2.1189446449279785
    4. 'y' → logprob: -3.9939446449279785
    5. 'i' → logprob: -4.3689446449279785
    6. 'a' → logprob: -4.7439446449279785
    7. 'v' → logprob: -6.3689446449279785
    8. 'negative' → logprob: -6.7439446449279785
    9. 'num' → logprob: -6.9939446449279785
    10. ' neg' → logprob: -7.1189446449279785

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026321083307266235
    2. 'in' → logprob: -3.6513211727142334
    3. ' ' → logprob: -12.526321411132812
    4. 's' → logprob: -12.651321411132812
    5. '   ' → logprob: -13.526321411132812
    6. 'n' → logprob: -13.776321411132812
    7. 'i' → logprob: -14.026321411132812
    8. '[' → logprob: -14.026321411132812
    9. 'd' → logprob: -14.026321411132812
    10. '```' → logprob: -14.151321411132812

Token 176: ' negatives' (ID: 128140)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.11492287367582321
    2. ' negatives' → logprob: -2.2399227619171143
    3. 'posit' → logprob: -7.114923000335693
    4. 'steps' → logprob: -7.364923000335693
    5. '   ' → logprob: -7.989923000335693
    6. ' steps' → logprob: -9.614922523498535
    7. ' positives' → logprob: -9.739922523498535
    8. ' neg' → logprob: -10.239922523498535
    9. 'negative' → logprob: -10.239922523498535
    10. '_neg' → logprob: -10.614922523498535

Token 177: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5358694731257856e-05
    2. '[:-' → logprob: -10.625035285949707
    3. ' [' → logprob: -12.375035285949707
    4. '[:' → logprob: -12.875035285949707
    5. '1' → logprob: -13.125035285949707
    6. '```' → logprob: -14.125035285949707
    7. '   ' → logprob: -15.000035285949707
    8. '[::-' → logprob: -15.250035285949707
    9. ''[' → logprob: -15.625035285949707
    10. ':' → logprob: -16.125036239624023

Token 178: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3135475218296051
    2. '1' → logprob: -1.3135474920272827
    3. '][' → logprob: -9.188547134399414
    4. ' [' → logprob: -9.688547134399414
    5. ':' → logprob: -10.438547134399414
    6. '
' → logprob: -10.813547134399414
    7. '   ' → logprob: -11.063547134399414
    8. '[:' → logprob: -11.688547134399414
    9. '[:-' → logprob: -11.688547134399414
    10. '(' → logprob: -12.063547134399414

Token 179: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6047699318733066e-05
    2. ']:' → logprob: -11.750016212463379
    3. ':]' → logprob: -12.250016212463379
    4. ' :' → logprob: -13.000016212463379
    5. '[' → logprob: -14.125016212463379
    6. '：' → logprob: -16.250015258789062
    7. ':-' → logprob: -16.375015258789062
    8. '+:' → logprob: -16.625015258789062
    9. '1' → logprob: -17.000015258789062
    10. '():' → logprob: -17.000015258789062

Token 180: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5251411199569702
    2. ':' → logprob: -1.0251411199569702
    3. ']:
' → logprob: -3.1501412391662598
    4. ']:' → logprob: -5.15014123916626
    5. '   ' → logprob: -8.400140762329102
    6. '):
' → logprob: -8.400140762329102
    7. ']' → logprob: -8.400140762329102
    8. ':
' → logprob: -9.150140762329102
    9. '():
' → logprob: -9.275140762329102
    10. '       ' → logprob: -9.400140762329102

Token 181: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47103577852249146
    2. '           ' → logprob: -1.0960357189178467
    3. '   ' → logprob: -3.2210357189178467
    4. ' steps' → logprob: -6.846035957336426
    5. 'steps' → logprob: -7.971035957336426
    6. '<|end|>' → logprob: -10.471035957336426
    7. ':
' → logprob: -10.721035957336426
    8. '	       ' → logprob: -11.096035957336426
    9. '```' → logprob: -11.096035957336426
    10. '	   ' → logprob: -12.096035957336426

Token 182: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.20006422698497772
    2. 'steps' (adapté à ' steps') → logprob: -1.8250641822814941
    3. '           ' → logprob: -4.200064182281494
    4. '       ' → logprob: -5.450064182281494
    5. '   ' → logprob: -7.325064182281494
    6. ' ' → logprob: -9.700064659118652
    7. '_steps' → logprob: -11.200064659118652
    8. '               ' → logprob: -11.325064659118652
    9. '.steps' → logprob: -11.450064659118652
    10. '          ' → logprob: -11.825064659118652

Token 183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012535012501757592
    2. 'append' → logprob: -9.37512493133545
    3. '.' → logprob: -10.12512493133545
    4. ' .' → logprob: -16.375125885009766
    5. '.app' → logprob: -16.375125885009766
    6. ' append' → logprob: -16.625125885009766
    7. 'appen' → logprob: -17.125125885009766
    8. '.Append' → logprob: -17.625125885009766
    9. '	append' → logprob: -17.875125885009766
    10. 'app' → logprob: -18.250125885009766

Token 184: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00035095500061288476
    2. '(' → logprob: -8.000350952148438
    3. '(tmp' → logprob: -11.125350952148438
    4. '(
' → logprob: -15.500350952148438
    5. '(('' → logprob: -15.500350952148438
    6. ' ((' → logprob: -16.000350952148438
    7. '   ' → logprob: -16.375350952148438
    8. ' (' → logprob: -16.750350952148438
    9. '(x' → logprob: -17.000350952148438
    10. ' ' → logprob: -17.375350952148438

Token 185: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.08972252905368805
    2. 'tmp' → logprob: -2.4647226333618164
    3. ' tmp' → logprob: -7.964722633361816
    4. '[tmp' → logprob: -8.464722633361816
    5. ',tmp' → logprob: -9.589722633361816
    6. '/tmp' → logprob: -10.089722633361816
    7. '$tmp' → logprob: -10.589722633361816
    8. '	tmp' → logprob: -10.839722633361816
    9. '(' → logprob: -10.964722633361816
    10. '(temp' → logprob: -11.339722633361816

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ' ,' → logprob: -11.000024795532227
    3. ',x' → logprob: -11.750024795532227
    4. 'x' → logprob: -16.375024795532227
    5. ',
' → logprob: -17.125024795532227
    6. '),' → logprob: -18.000024795532227
    7. '   ' → logprob: -18.250024795532227
    8. ' x' → logprob: -18.375024795532227
    9. '‌,' → logprob: -18.500024795532227
    10. '',' → logprob: -18.750024795532227

Token 187: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759396553039551
    2. ' x' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.200939178466797
    4. '   ' → logprob: -16.700939178466797
    5. '	x' → logprob: -17.200939178466797
    6. ')' → logprob: -17.700939178466797
    7. '    ' → logprob: -17.700939178466797
    8. ' ' → logprob: -18.075939178466797
    9. ')x' → logprob: -18.200939178466797
    10. '(x' → logprob: -18.575939178466797

Token 188: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07891678065061569
    2. ')' → logprob: -2.5789167881011963
    3. ')
' → logprob: -10.953916549682617
    4. '           ' → logprob: -12.203916549682617
    5. '))
' → logprob: -12.703916549682617
    6. ')`
' → logprob: -14.953916549682617
    7. ' )
' → logprob: -14.953916549682617
    8. ')

' → logprob: -14.953916549682617
    9. '       ' → logprob: -15.203916549682617
    10. '))' → logprob: -15.578916549682617

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000667640648316592
    2. '   ' → logprob: -7.875667572021484
    3. '       ' → logprob: -9.000667572021484
    4. '	       ' → logprob: -9.250667572021484
    5. '               ' → logprob: -11.500667572021484
    6. '	   ' → logprob: -11.500667572021484
    7. ' ' → logprob: -11.875667572021484
    8. '
' → logprob: -12.125667572021484
    9. '		' → logprob: -12.125667572021484
    10. '<|end|>' → logprob: -12.250667572021484

Token 190: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0010706812608987093
    2. ' tmp' → logprob: -6.876070499420166
    3. 'temp' → logprob: -11.001070976257324
    4. '           ' → logprob: -11.126070976257324
    5. '	tmp' → logprob: -12.501070976257324
    6. '/tmp' → logprob: -13.251070976257324
    7. '   ' → logprob: -15.251070976257324
    8. '_tmp' → logprob: -15.876070976257324
    9. '[tmp' → logprob: -16.001070022583008
    10. '$tmp' → logprob: -16.001070022583008

Token 191: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4825906455516815
    2. '-=' → logprob: -0.9825906753540039
    3. '-' → logprob: -4.857590675354004
    4. '=' → logprob: -7.357590675354004
    5. ' -' → logprob: -10.107590675354004
    6. ' =' → logprob: -12.107590675354004
    7. ')' → logprob: -12.357590675354004
    8. '+=' → logprob: -12.482590675354004
    9. '	' → logprob: -12.607590675354004
    10. ' ' → logprob: -13.107590675354004

Token 192: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022412478923798
    2. ' x' → logprob: -1.9102240800857544
    3. '	x' → logprob: -19.16022491455078
    4. ' ' → logprob: -19.41022491455078
    5. '(x' → logprob: -19.78522491455078
    6. ')x' → logprob: -20.03522491455078
    7. ' ' → logprob: -21.41022491455078
    8. '<|end|>' → logprob: -21.41022491455078
    9. '"x' → logprob: -21.66022491455078
    10. '$x' → logprob: -22.28522491455078

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12440387904644012
    2. '       ' → logprob: -2.374403953552246
    3. '<|end|>' → logprob: -4.374403953552246
    4. ')' → logprob: -4.999403953552246
    5. 'print' → logprob: -6.249403953552246
    6. '
' → logprob: -6.249403953552246
    7. '    
' → logprob: -8.874403953552246
    8. ')
' → logprob: -8.999403953552246
    9. ' steps' → logprob: -8.999403953552246
    10. 'steps' → logprob: -9.249403953552246

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1143365278840065
    2. 'print' → logprob: -2.9893364906311035
    3. '       ' → logprob: -3.1143364906311035
    4. ')' → logprob: -4.6143364906311035
    5. '<|end|>' → logprob: -6.8643364906311035
    6. ' print' → logprob: -7.6143364906311035
    7. 'steps' → logprob: -7.8643364906311035
    8. '
' → logprob: -8.114336967468262
    9. '    
' → logprob: -8.239336967468262
    10. ' steps' → logprob: -8.364336967468262

Token 195: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03058651275932789
    2. 'print' → logprob: -3.6555864810943604
    3. 'for' → logprob: -7.0305867195129395
    4. 'else' → logprob: -7.0305867195129395
    5. 'steps' → logprob: -7.4055867195129395
    6. ' for' → logprob: -7.5305867195129395
    7. '       ' → logprob: -7.9055867195129395
    8. '    
' → logprob: -8.030586242675781
    9. '<|end|>' → logprob: -8.155586242675781
    10. ' print' → logprob: -9.155586242675781

Token 196: ' Case' (ID: 18964)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.019250690937042236
    2. ' else' → logprob: -4.144250869750977
    3. 'elif' → logprob: -5.769250869750977
    4. '   ' → logprob: -9.644250869750977
    5. ' elif' → logprob: -11.519250869750977
    6. '```' → logprob: -11.769250869750977
    7. 'return' → logprob: -12.269250869750977
    8. '	else' → logprob: -14.769250869750977
    9. 'endif' → logprob: -15.019250869750977
    10. ' return' → logprob: -15.269250869750977

Token 197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017509841127321124
    2. 'elif' → logprob: -7.001750946044922
    3. ' elif' → logprob: -7.376750946044922
    4. ' :' → logprob: -9.251750946044922
    5. ' else' → logprob: -9.501750946044922
    6. 'else' → logprob: -10.251750946044922
    7. '   ' → logprob: -12.626750946044922
    8. ':
' → logprob: -14.001750946044922
    9. '=' → logprob: -14.126750946044922
    10. ',' → logprob: -14.626750946044922

Token 198: ' All' (ID: 2545)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'posit' → logprob: -1.0057001113891602
    2. 'not' → logprob: -1.1307001113891602
    3. ' positives' → logprob: -2.38070011138916
    4. 'only' → logprob: -2.50570011138916
    5. ' not' → logprob: -2.88070011138916
    6. 'all' → logprob: -3.38070011138916
    7. 'len' → logprob: -3.88070011138916
    8. ' only' → logprob: -4.50570011138916
    9. ' all' → logprob: -4.63070011138916
    10. 'neg' → logprob: -6.63070011138916

Token 199: ' numbers' (ID: 8663)
  Prédit: ' positives'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positives' → logprob: -0.6682261824607849
    2. 'posit' → logprob: -1.2932262420654297
    3. 'positive' → logprob: -2.0432262420654297
    4. ' positive' → logprob: -2.5432262420654297
    5. ' negatives' → logprob: -7.29322624206543
    6. '_positive' → logprob: -7.41822624206543
    7. ' numbers' → logprob: -7.79322624206543
    8. '-positive' → logprob: -8.04322624206543
    9. '#' → logprob: -8.16822624206543
    10. ' non' → logprob: -8.29322624206543

Token 200: ' are' (ID: 553)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4241786003112793
    2. ' are' → logprob: -2.1741786003112793
    3. 'elif' → logprob: -2.1741786003112793
    4. ' >=' → logprob: -2.6741786003112793
    5. '>' → logprob: -4.174178600311279
    6. '<=' → logprob: -4.424178600311279
    7. 'are' → logprob: -4.924178600311279
    8. ' in' → logprob: -5.799178600311279
    9. 'positive' → logprob: -6.174178600311279
    10. ' >' → logprob: -6.299178600311279

Token 201: ' positive' (ID: 8841)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.9967210292816162
    2. 'non' → logprob: -1.1217210292816162
    3. 'positive' → logprob: -1.6217210292816162
    4. ' positive' → logprob: -2.246721029281616
    5. '>=' → logprob: -7.121721267700195
    6. 'negative' → logprob: -7.746721267700195
    7. ' positives' → logprob: -8.871721267700195
    8. 'posit' → logprob: -8.996721267700195
    9. ' >=' → logprob: -9.621721267700195
    10. '0' → logprob: -10.246721267700195

Token 202: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.049046482890844345
    2. 'else' → logprob: -3.049046516418457
    3. ' elif' → logprob: -8.299046516418457
    4. '   ' → logprob: -8.674046516418457
    5. ' else' → logprob: -10.174046516418457
    6. 'el' → logprob: -14.799046516418457
    7. ':' → logprob: -15.924046516418457
    8. '```' → logprob: -16.17404556274414
    9. 'elseif' → logprob: -16.17404556274414
    10. ',' → logprob: -16.67404556274414

Token 203: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4602902829647064
    2. '   ' → logprob: -1.2102903127670288
    3. 'else' → logprob: -2.7102901935577393
    4. ' elif' → logprob: -5.585290431976318
    5. ' else' → logprob: -7.585290431976318
    6. '```' → logprob: -12.96028995513916
    7. '    ' → logprob: -13.33528995513916
    8. '    
' → logprob: -13.46028995513916
    9. '	elif' → logprob: -13.58528995513916
    10. 'el' → logprob: -13.83528995513916

Token 204: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.08701223880052567
    2. 'else' → logprob: -3.08701229095459
    3. ' elif' → logprob: -3.46201229095459
    4. '   ' → logprob: -5.58701229095459
    5. ' else' → logprob: -5.96201229095459
    6. '	elif' → logprob: -12.46201229095459
    7. 'el' → logprob: -12.96201229095459
    8. 'if' → logprob: -14.71201229095459
    9. ':' → logprob: -15.21201229095459
    10. 'elseif' → logprob: -15.33701229095459

Token 205: ' positives' (ID: 95584)
  Prédit: ' positives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positives' → logprob: -0.6567479372024536
    2. 'posit' → logprob: -0.9067479372024536
    3. 'len' → logprob: -2.781747817993164
    4. ' len' → logprob: -4.656747817993164
    5. 'all' → logprob: -6.281747817993164
    6. ' not' → logprob: -6.406747817993164
    7. 'not' → logprob: -6.656747817993164
    8. ' all' → logprob: -7.406747817993164
    9. 'pos' → logprob: -8.531747817993164
    10. 'True' → logprob: -8.656747817993164

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002458533737808466
    2. ' and' → logprob: -6.752458572387695
    3. ':
' → logprob: -7.377458572387695
    4. 'and' → logprob: -7.627458572387695
    5. '=' → logprob: -9.752458572387695
    6. 'else' → logprob: -10.627458572387695
    7. '[' → logprob: -10.627458572387695
    8. ' =' → logprob: -10.752458572387695
    9. ' :' → logprob: -10.752458572387695
    10. '   ' → logprob: -11.377458572387695

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09575070440769196
    2. '   ' → logprob: -3.0957508087158203
    3. ':
' → logprob: -3.7207508087158203
    4. ':' → logprob: -3.8457508087158203
    5. ' for' → logprob: -8.97075080871582
    6. ' =' → logprob: -9.72075080871582
    7. ',' → logprob: -10.22075080871582
    8. 'else' → logprob: -10.59575080871582
    9. '[' → logprob: -10.72075080871582
    10. '    ' → logprob: -10.72075080871582

Token 208: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.007231282070279121
    2. ' tmp' → logprob: -5.25723123550415
    3. '       ' → logprob: -6.63223123550415
    4. '   ' → logprob: -7.75723123550415
    5. 'x' → logprob: -9.132231712341309
    6. 'for' → logprob: -10.132231712341309
    7. 'steps' → logprob: -10.382231712341309
    8. '#' → logprob: -10.757231712341309
    9. '	tmp' → logprob: -11.507231712341309
    10. 'temp' → logprob: -12.382231712341309

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055106475949287415
    2. '=' → logprob: -2.9301064014434814
    3. ',' → logprob: -8.430106163024902
    4. ' ,' → logprob: -12.680106163024902
    5. ' ' → logprob: -13.805106163024902
    6. ' =
' → logprob: -14.930106163024902
    7. '=

' → logprob: -15.805106163024902
    8. '0' → logprob: -16.11760711669922
    9. '=
' → logprob: -16.11760711669922
    10. '    ' → logprob: -16.24260711669922

Token 210: ' A' (ID: 355)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.0021590644028037786
    2. 'A' → logprob: -6.502159118652344
    3. ' positives' → logprob: -7.377159118652344
    4. 'pos' → logprob: -10.877159118652344
    5. ' A' → logprob: -12.502159118652344
    6. '   ' → logprob: -12.627159118652344
    7. 'neg' → logprob: -13.502159118652344
    8. 'positive' → logprob: -13.752159118652344
    9. 'poss' → logprob: -14.627159118652344
    10. '	' → logprob: -15.127159118652344

Token 211: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008637146092951298
    2. '[-' → logprob: -4.758636951446533
    3. '0' → logprob: -10.758637428283691
    4. '[:-' → logprob: -14.633637428283691
    5. '   ' → logprob: -14.758637428283691
    6. '-' → logprob: -16.508636474609375
    7. '[
' → logprob: -16.633636474609375
    8. '1' → logprob: -16.758636474609375
    9. '
' → logprob: -16.758636474609375
    10. '[len' → logprob: -17.133636474609375

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009724444826133549
    2. '-' → logprob: -7.125972270965576
    3. '1' → logprob: -8.750972747802734
    4. '
' → logprob: -12.625972747802734
    5. '   ' → logprob: -12.875972747802734
    6. ' ' → logprob: -13.500972747802734
    7. '[' → logprob: -13.625972747802734
    8. ' -' → logprob: -14.938472747802734
    9. '-
' → logprob: -15.813472747802734
    10. '[-' → logprob: -16.125972747802734

Token 213: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.22251279652118683
    2. ')
' → logprob: -2.222512722015381
    3. '
' → logprob: -2.847512722015381
    4. ']' → logprob: -4.472512722015381
    5. ',' → logprob: -4.847512722015381
    6. ')' → logprob: -5.347512722015381
    7. '   ' → logprob: -5.597512722015381
    8. '       ' → logprob: -5.722512722015381
    9. ',
' → logprob: -8.097513198852539
    10. ' )
' → logprob: -8.222513198852539

Token 214: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7949409484863281
    2. ' for' → logprob: -1.0449409484863281
    3. '
' → logprob: -2.169940948486328
    4. '   ' → logprob: -2.669940948486328
    5. '       ' → logprob: -4.419940948486328
    6. '	for' → logprob: -7.419940948486328
    7. '```' → logprob: -8.794940948486328
    8. '
' → logprob: -9.419940948486328
    9. '    
' → logprob: -9.544940948486328
    10. '\n' → logprob: -9.794940948486328

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42920804023742676
    2. ' for' → logprob: -1.0542080402374268
    3. '       ' → logprob: -8.054207801818848
    4. '   ' → logprob: -9.054207801818848
    5. '
' → logprob: -9.804207801818848
    6. '	for' → logprob: -11.429207801818848
    7. '    ' → logprob: -13.554207801818848
    8. ' ' → logprob: -14.054207801818848
    9. '           ' → logprob: -14.304207801818848
    10. 'from' → logprob: -14.429207801818848

Token 216: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00935734435915947
    2. ' x' → logprob: -4.884357452392578
    3. 'i' → logprob: -6.384357452392578
    4. ' i' → logprob: -9.884357452392578
    5. 'a' → logprob: -12.259357452392578
    6. '   ' → logprob: -12.259357452392578
    7. ' ' → logprob: -14.884357452392578
    8. 'A' → logprob: -15.384357452392578
    9. 'pos' → logprob: -15.884357452392578
    10. '    ' → logprob: -15.884357452392578

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20146869122982025
    2. 'in' → logprob: -1.7014687061309814
    3. ' ' → logprob: -10.826468467712402
    4. ',' → logprob: -11.576468467712402
    5. '   ' → logprob: -12.451468467712402
    6. '_in' → logprob: -12.951468467712402
    7. ' ,' → logprob: -13.076468467712402
    8. '  ' → logprob: -13.201468467712402
    9. 'In' → logprob: -13.201468467712402
    10. 'i' → logprob: -13.201468467712402

Token 218: ' A' (ID: 355)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.46843764185905457
    2. 'A' → logprob: -1.343437671661377
    3. ' positives' → logprob: -2.218437671661377
    4. ' A' → logprob: -5.468437671661377
    5. 'positive' → logprob: -10.093437194824219
    6. 'pos' → logprob: -10.968437194824219
    7. '[' → logprob: -13.093437194824219
    8. ' ' → logprob: -13.218437194824219
    9. '   ' → logprob: -13.218437194824219
    10. ' positive' → logprob: -13.343437194824219

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4272752852994017e-05
    2. '1' → logprob: -10.75002384185791
    3. ' [' → logprob: -13.37502384185791
    4. '   ' → logprob: -15.12502384185791
    5. '[
' → logprob: -15.50002384185791
    6. '[:' → logprob: -15.87502384185791
    7. '```' → logprob: -15.87502384185791
    8. '[:-' → logprob: -16.375024795532227
    9. '(' → logprob: -16.500024795532227
    10. ':' → logprob: -16.750024795532227

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -12.37501335144043
    3. '[' → logprob: -12.75001335144043
    4. 'range' → logprob: -12.75001335144043
    5. '
' → logprob: -13.50001335144043
    6. '   ' → logprob: -14.00001335144043
    7. '```' → logprob: -14.75001335144043
    8. 'from' → logprob: -15.37501335144043
    9. ':' → logprob: -15.87501335144043
    10. '...' → logprob: -16.12501335144043

Token 221: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.686778503237292e-05
    2. ':]' → logprob: -9.625097274780273
    3. ']:' → logprob: -11.000097274780273
    4. '[' → logprob: -11.250097274780273
    5. '1' → logprob: -14.500097274780273
    6. '：' → logprob: -15.500097274780273
    7. ':],' → logprob: -16.375097274780273
    8. '():' → logprob: -16.500097274780273
    9. ' :' → logprob: -16.875097274780273
    10. ':-' → logprob: -16.875097274780273

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.75000286102295
    4. '-' → logprob: -15.75000286102295
    5. '```' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.500001907348633
    7. ']' → logprob: -18.375001907348633
    8. '  ' → logprob: -18.750001907348633
    9. '2' → logprob: -18.875001907348633
    10. 'len' → logprob: -19.000001907348633

Token 223: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6932885646820068
    2. ']:
' → logprob: -0.6932885646820068
    3. ']' → logprob: -9.568288803100586
    4. ']:
' → logprob: -10.193288803100586
    5. ']:

' → logprob: -10.693288803100586
    6. ' ]' → logprob: -12.318288803100586
    7. ':' → logprob: -12.568288803100586
    8. '   ' → logprob: -13.818288803100586
    9. ']:


' → logprob: -14.443288803100586
    10. '       ' → logprob: -14.943288803100586

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008167242631316185
    2. '       ' → logprob: -5.883167266845703
    3. ':
' → logprob: -6.133167266845703
    4. '   ' → logprob: -7.383167266845703
    5. '<|end|>' → logprob: -7.383167266845703
    6. ':' → logprob: -7.633167266845703
    7. '(' → logprob: -7.758167266845703
    8. ' (' → logprob: -8.383167266845703
    9. ',' → logprob: -8.758167266845703
    10. ' steps' → logprob: -9.008167266845703

Token 225: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.7042444944381714
    2. 'steps' (adapté à ' steps') → logprob: -0.9542444944381714
    3. '           ' → logprob: -2.204244613647461
    4. '       ' → logprob: -5.454244613647461
    5. '(' → logprob: -6.454244613647461
    6. '   ' → logprob: -6.579244613647461
    7. ' (' → logprob: -6.579244613647461
    8. '            
' → logprob: -8.579244613647461
    9. '(
' → logprob: -8.579244613647461
    10. '               ' → logprob: -8.704244613647461

Token 226: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.3822154111694545e-05
    2. '.' → logprob: -10.250043869018555
    3. 'append' → logprob: -11.750043869018555
    4. ' .' → logprob: -15.500043869018555
    5. '.app' → logprob: -15.750043869018555
    6. ' append' → logprob: -16.750043869018555
    7. '   ' → logprob: -18.125043869018555
    8. '           ' → logprob: -18.500043869018555
    9. '.Append' → logprob: -19.000043869018555
    10. 'app' → logprob: -19.125043869018555

Token 227: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.131596177816391
    2. '(tmp' → logprob: -2.131596088409424
    3. ' (' → logprob: -5.381596088409424
    4. '((' → logprob: -10.131596565246582
    5. '(
' → logprob: -11.881596565246582
    6. ',' → logprob: -13.256596565246582
    7. '(t' → logprob: -13.506596565246582
    8. '(temp' → logprob: -13.756596565246582
    9. '(tab' → logprob: -14.256596565246582
    10. ')' → logprob: -14.506596565246582

Token 228: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0012608295073732734
    2. ' tmp' → logprob: -6.751260757446289
    3. '(tmp' → logprob: -9.376260757446289
    4. ',tmp' → logprob: -12.626260757446289
    5. '[tmp' → logprob: -14.376260757446289
    6. '   ' → logprob: -14.376260757446289
    7. '	tmp' → logprob: -14.751260757446289
    8. '$tmp' → logprob: -15.126260757446289
    9. '/tmp' → logprob: -15.376260757446289
    10. 'temp' → logprob: -15.751260757446289

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.100059156073257e-05
    2. ',x' → logprob: -10.250070571899414
    3. ' ,' → logprob: -10.250070571899414
    4. 'x' → logprob: -16.125070571899414
    5. ',
' → logprob: -16.625070571899414
    6. ' x' → logprob: -17.125070571899414
    7. '),' → logprob: -18.625070571899414
    8. '   ' → logprob: -18.625070571899414
    9. '```' → logprob: -19.625070571899414
    10. ',n' → logprob: -19.875070571899414

Token 230: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740789234638214
    2. ' x' → logprob: -0.974078893661499
    3. ')' → logprob: -14.349079132080078
    4. ' ' → logprob: -15.224079132080078
    5. ''' → logprob: -15.349079132080078
    6. '"' → logprob: -15.599079132080078
    7. '(x' → logprob: -15.849079132080078
    8. ' 
' → logprob: -16.349079132080078
    9. ',' → logprob: -16.474079132080078
    10. '	x' → logprob: -16.599079132080078

Token 231: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20147746801376343
    2. '))
' → logprob: -1.7014775276184082
    3. ')' → logprob: -10.20147705078125
    4. '           ' → logprob: -11.20147705078125
    5. ')
' → logprob: -12.57647705078125
    6. '       ' → logprob: -12.95147705078125
    7. '))

' → logprob: -13.07647705078125
    8. '))
' → logprob: -13.32647705078125
    9. ' ))' → logprob: -13.70147705078125
    10. '   ' → logprob: -13.95147705078125

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030261948704719543
    2. '       ' → logprob: -5.878026008605957
    3. 'tmp' → logprob: -9.128026008605957
    4. '   ' → logprob: -9.378026008605957
    5. '            
' → logprob: -12.003026008605957
    6. '        
' → logprob: -12.628026008605957
    7. '
' → logprob: -12.628026008605957
    8. '               ' → logprob: -12.628026008605957
    9. '<|end|>' → logprob: -13.253026008605957
    10. ',' → logprob: -13.378026008605957

Token 233: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6950250864028931
    2. 'tmp' (adapté à ' tmp') → logprob: -0.6950250864028931
    3. '           ' → logprob: -6.3200249671936035
    4. '            ' → logprob: -10.195025444030762
    5. '   ' → logprob: -10.945025444030762
    6. '	tmp' → logprob: -12.320025444030762
    7. ' ' → logprob: -12.570025444030762
    8. '    ' → logprob: -12.570025444030762
    9. '               ' → logprob: -12.695025444030762
    10. '       ' → logprob: -14.070025444030762

Token 234: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.36594757437705994
    2. ' -=' → logprob: -1.2409476041793823
    3. '-' → logprob: -4.115947723388672
    4. '=' → logprob: -6.990947723388672
    5. ' -' → logprob: -9.490947723388672
    6. ',' → logprob: -10.865947723388672
    7. '+=' → logprob: -11.865947723388672
    8. ')' → logprob: -11.990947723388672
    9. ' =' → logprob: -12.490947723388672
    10. '    ' → logprob: -13.240947723388672

Token 235: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25192907452583313
    2. ' x' → logprob: -1.5019290447235107
    3. '(x' → logprob: -18.001928329467773
    4. ' ' → logprob: -19.126928329467773
    5. '	x' → logprob: -19.376928329467773
    6. ' ' → logprob: -19.751928329467773
    7. ')x' → logprob: -20.501928329467773
    8. ')' → logprob: -21.251928329467773
    9. '{x' → logprob: -21.501928329467773
    10. '_x' → logprob: -21.626928329467773

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017603866290301085
    2. '   ' → logprob: -6.876760482788086
    3. '        
' → logprob: -8.376760482788086
    4. '
' → logprob: -9.126760482788086
    5. '    
' → logprob: -9.251760482788086
    6. '<|end|>' → logprob: -9.626760482788086
    7. ' steps' → logprob: -9.876760482788086
    8. '  
' → logprob: -10.001760482788086
    9. '           ' → logprob: -10.126760482788086
    10. 'steps' → logprob: -10.501760482788086

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007587105967104435
    2. '   ' → logprob: -5.00758695602417
    3. 'steps' → logprob: -8.257587432861328
    4. '        
' → logprob: -8.632587432861328
    5. ' steps' → logprob: -8.632587432861328
    6. '           ' → logprob: -8.882587432861328
    7. '    
' → logprob: -9.507587432861328
    8. '  
' → logprob: -11.882587432861328
    9. '            
' → logprob: -12.132587432861328
    10. '
' → logprob: -12.257587432861328

Token 238: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.1487693041563034
    2. ' steps' → logprob: -2.0237693786621094
    3. '       ' → logprob: -5.148769378662109
    4. '   ' → logprob: -8.39876937866211
    5. '           ' → logprob: -10.77376937866211
    6. '        
' → logprob: -12.02376937866211
    7. ' ' → logprob: -12.89876937866211
    8. 'step' → logprob: -13.02376937866211
    9. '    ' → logprob: -13.39876937866211
    10. '.steps' → logprob: -13.52376937866211

Token 239: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001346542383544147
    2. '.' → logprob: -6.626346588134766
    3. 'append' → logprob: -11.001346588134766
    4. ' .' → logprob: -12.626346588134766
    5. '_append' → logprob: -16.251346588134766
    6. ').' → logprob: -16.251346588134766
    7. '.extend' → logprob: -16.376346588134766
    8. '.app' → logprob: -17.001346588134766
    9. '	append' → logprob: -17.126346588134766
    10. '.Append' → logprob: -17.251346588134766

Token 240: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.39351412653923035
    2. '(' → logprob: -1.1435141563415527
    3. '(A' → logprob: -5.143514156341553
    4. ' (' → logprob: -7.268514156341553
    5. '(tmp' → logprob: -10.018513679504395
    6. '(
' → logprob: -11.018513679504395
    7. '(tuple' → logprob: -12.143513679504395
    8. '('' → logprob: -13.018513679504395
    9. ' ' → logprob: -13.393513679504395
    10. '(a' → logprob: -13.643513679504395

Token 241: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011779663618654013
    2. ' A' → logprob: -7.126177787780762
    3. '(A' → logprob: -8.001177787780762
    4. 'tmp' → logprob: -10.376177787780762
    5. '(' → logprob: -13.376177787780762
    6. '(tmp' → logprob: -13.751177787780762
    7. ' (' → logprob: -13.751177787780762
    8. ')' → logprob: -14.001177787780762
    9. '   ' → logprob: -14.126177787780762
    10. ' ' → logprob: -14.501177787780762

Token 242: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00012916464766021818
    2. '-' → logprob: -9.375128746032715
    3. '[' → logprob: -10.250128746032715
    4. '   ' → logprob: -12.000128746032715
    5. ' [-' → logprob: -13.875128746032715
    6. '[len' → logprob: -14.375128746032715
    7. ' ' → logprob: -14.500128746032715
    8. '1' → logprob: -16.12512969970703
    9. '```' → logprob: -16.12512969970703
    10. '
' → logprob: -16.25012969970703

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. '-' → logprob: -8.875140190124512
    3. ' -' → logprob: -15.375140190124512
    4. ' ' → logprob: -15.500140190124512
    5. '   ' → logprob: -16.125141143798828
    6. '2' → logprob: -16.375141143798828
    7. '```' → logprob: -17.000141143798828
    8. '(' → logprob: -18.125141143798828
    9. '[-' → logprob: -18.750141143798828
    10. '  ' → logprob: -18.750141143798828

Token 244: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ' ,' → logprob: -10.000046730041504
    3. '),' → logprob: -13.625046730041504
    4. ')' → logprob: -17.12504768371582
    5. '```' → logprob: -17.25004768371582
    6. ',
' → logprob: -17.50004768371582
    7. ',tmp' → logprob: -17.50004768371582
    8. '`,' → logprob: -17.50004768371582
    9. '],' → logprob: -17.62504768371582
    10. '   ' → logprob: -17.75004768371582

Token 245: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1602446287870407
    2. ' tmp' → logprob: -1.9102445840835571
    3. '(tmp' → logprob: -11.910244941711426
    4. '	tmp' → logprob: -12.410244941711426
    5. '   ' → logprob: -12.910244941711426
    6. ',tmp' → logprob: -13.410244941711426
    7. ' ' → logprob: -13.910244941711426
    8. ')' → logprob: -14.160244941711426
    9. '/tmp' → logprob: -14.160244941711426
    10. '[tmp' → logprob: -14.410244941711426

Token 246: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036501993890851736
    2. ')
' → logprob: -6.003650188446045
    3. '))' → logprob: -6.753650188446045
    4. '))
' → logprob: -12.378650665283203
    5. ' )' → logprob: -14.253650665283203
    6. ')}' → logprob: -14.503650665283203
    7. '       ' → logprob: -15.003650665283203
    8. ')
' → logprob: -15.003650665283203
    9. ')`' → logprob: -15.003650665283203
    10. '   ' → logprob: -15.753650665283203

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027756253257393837
    2. '	' → logprob: -3.7777562141418457
    3. '   ' → logprob: -5.902756214141846
    4. '	tmp' → logprob: -7.277756214141846
    5. '<|end|>' → logprob: -7.777756214141846
    6. '	   ' → logprob: -8.152756690979004
    7. 'tmp' → logprob: -8.652756690979004
    8. '	       ' → logprob: -10.902756690979004
    9. '           ' → logprob: -10.902756690979004
    10. 'newline' → logprob: -11.152756690979004

Token 248: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.14934998750686646
    2. '       ' → logprob: -2.1493499279022217
    3. ' tmp' → logprob: -4.524350166320801
    4. '   ' → logprob: -5.149350166320801
    5. 'print' → logprob: -5.774350166320801
    6. '	tmp' → logprob: -6.274350166320801
    7. '	' → logprob: -9.2743501663208
    8. '$tmp' → logprob: -9.2743501663208
    9. 'return' → logprob: -9.3993501663208
    10. '	   ' → logprob: -10.2743501663208

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16971944272518158
    2. ' =' → logprob: -2.0447194576263428
    3. ' -=' → logprob: -4.044719219207764
    4. '-=' → logprob: -4.794719219207764
    5. '-' → logprob: -7.294719219207764
    6. ',' → logprob: -9.794719696044922
    7. '_' → logprob: -10.294719696044922
    8. ')' → logprob: -10.669719696044922
    9. '+=' → logprob: -10.794719696044922
    10. ' +=' → logprob: -11.044719696044922

Token 250: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009813938289880753
    2. ' A' → logprob: -4.6348137855529785
    3. '(A' → logprob: -10.009814262390137
    4. 'steps' → logprob: -12.509814262390137
    5. 'tmp' → logprob: -13.009814262390137
    6. ' ' → logprob: -13.134814262390137
    7. '   ' → logprob: -13.634814262390137
    8. '	A' → logprob: -14.009814262390137
    9. ' (' → logprob: -14.509814262390137
    10. '  ' → logprob: -14.634814262390137

Token 251: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00020473242329899222
    2. '-' → logprob: -8.625205039978027
    3. '[' → logprob: -10.625205039978027
    4. '0' → logprob: -14.750205039978027
    5. '
' → logprob: -15.875205039978027
    6. '[:-' → logprob: -16.12520408630371
    7. '#' → logprob: -17.12520408630371
    8. '−' → logprob: -17.25020408630371
    9. '1' → logprob: -17.37520408630371
    10. '   ' → logprob: -17.50020408630371

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014166564680635929
    2. '2' → logprob: -4.264166355133057
    3. '3' → logprob: -14.576666831970215
    4. '```' → logprob: -14.764166831970215
    5. ' ' → logprob: -14.951666831970215
    6. '0' → logprob: -15.201666831970215
    7. '   ' → logprob: -15.264166831970215
    8. '
' → logprob: -15.264166831970215
    9. '-' → logprob: -15.389166831970215
    10. '(' → logprob: -16.5141658782959

Token 253: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008665509521961212
    2. '-' → logprob: -4.758665561676025
    3. ' ' → logprob: -10.258665084838867
    4. ')' → logprob: -11.508665084838867
    5. '[' → logprob: -13.008665084838867
    6. ',' → logprob: -13.383665084838867
    7. ' ' → logprob: -14.633665084838867
    8. 'tmp' → logprob: -15.133665084838867
    9. ' -
' → logprob: -15.758665084838867
    10. '<|end|>' → logprob: -16.071165084838867

Token 254: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740845859050751
    2. '-' → logprob: -0.9740846157073975
    3. ' ' → logprob: -12.849084854125977
    4. '-t' → logprob: -13.599084854125977
    5. '[' → logprob: -13.849084854125977
    6. ',' → logprob: -14.599084854125977
    7. 'tmp' → logprob: -14.974084854125977
    8. ' ' → logprob: -15.599084854125977
    9. '[tmp' → logprob: -15.724084854125977
    10. '<|end|>' → logprob: -15.724084854125977

Token 255: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.01815216802060604
    2. ' tmp' → logprob: -4.018152236938477
    3. '(tmp' → logprob: -14.393152236938477
    4. '	tmp' → logprob: -14.393152236938477
    5. '/tmp' → logprob: -14.768152236938477
    6. '$tmp' → logprob: -15.518152236938477
    7. ' ' → logprob: -15.643152236938477
    8. '[tmp' → logprob: -16.018152236938477
    9. 'temp' → logprob: -16.518152236938477
    10. '_tmp' → logprob: -16.768152236938477

Token 256: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6178483963012695
    2. 'for' → logprob: -1.3678483963012695
    3. ' for' → logprob: -1.7428483963012695
    4. '<|end|>' → logprob: -3.7428483963012695
    5. '       ' → logprob: -5.9928483963012695
    6. '
' → logprob: -6.1178483963012695
    7. '	for' → logprob: -6.3678483963012695
    8. 'else' → logprob: -8.49284839630127
    9. '<|end|>' → logprob: -8.61784839630127
    10. '    
' → logprob: -8.74284839630127

Token 258: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7073005437850952
    2. '   ' → logprob: -0.8323005437850952
    3. ' else' → logprob: -2.7073006629943848
    4. 'elif' → logprob: -5.332300662994385
    5. ' elif' → logprob: -8.832300186157227
    6. '    
' → logprob: -9.582300186157227
    7. ' for' → logprob: -9.957300186157227
    8. '
' → logprob: -10.457300186157227
    9. '	else' → logprob: -10.457300186157227
    10. '```' → logprob: -10.832300186157227

Token 259: ' Case' (ID: 18964)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.254002183675766
    2. 'elif' → logprob: -1.5040022134780884
    3. ' else' → logprob: -6.254002094268799
    4. ' elif' → logprob: -8.879002571105957
    5. '#' → logprob: -11.754002571105957
    6. 'elseif' → logprob: -14.629002571105957
    7. '   ' → logprob: -14.879002571105957
    8. 'Else' → logprob: -16.37900161743164
    9. '_else' → logprob: -17.00400161743164
    10. 'elsif' → logprob: -17.12900161743164

Token 260: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028194548562169075
    2. 'elif' → logprob: -4.528194427490234
    3. 'else' → logprob: -5.028194427490234
    4. ' else' → logprob: -5.153194427490234
    5. ' elif' → logprob: -5.528194427490234
    6. '   ' → logprob: -7.403194427490234
    7. ' :' → logprob: -9.903194427490234
    8. ':
' → logprob: -11.903194427490234
    9. ' None' → logprob: -12.153194427490234
    10. ' =' → logprob: -12.278194427490234

Token 261: ' All' (ID: 2545)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.01246656570583582
    2. ' negatives' → logprob: -4.6374664306640625
    3. 'not' → logprob: -6.2624664306640625
    4. 'all' → logprob: -8.262466430664062
    5. ' not' → logprob: -8.262466430664062
    6. 'len' → logprob: -8.762466430664062
    7. ' all' → logprob: -9.762466430664062
    8. 'else' → logprob: -10.887466430664062
    9. 'Neg' → logprob: -11.262466430664062
    10. 'elif' → logprob: -11.637466430664062

Token 262: ' numbers' (ID: 8663)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.3878075182437897
    2. ' negatives' → logprob: -1.1378074884414673
    3. 'negative' → logprob: -8.137807846069336
    4. 'else' → logprob: -8.887807846069336
    5. '_neg' → logprob: -8.887807846069336
    6. 'A' → logprob: -9.762807846069336
    7. 'elif' → logprob: -9.887807846069336
    8. '_' → logprob: -10.012807846069336
    9. ' negative' → logprob: -10.137807846069336
    10. ' ' → logprob: -10.387807846069336

Token 263: ' are' (ID: 553)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8558863401412964
    2. 'are' → logprob: -0.9808863401412964
    3. ' are' → logprob: -1.7308863401412964
    4. 'else' → logprob: -5.230886459350586
    5. 'negative' → logprob: -5.730886459350586
    6. 'elif' → logprob: -5.980886459350586
    7. '[' → logprob: -6.105886459350586
    8. ':' → logprob: -6.105886459350586
    9. '_are' → logprob: -6.355886459350586
    10. '=' → logprob: -6.605886459350586

Token 264: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.014273980632424355
    2. ' negative' → logprob: -4.2642741203308105
    3. 'neg' → logprob: -9.389273643493652
    4. 'non' → logprob: -11.639273643493652
    5. ' negatives' → logprob: -11.764273643493652
    6. '_negative' → logprob: -12.389273643493652
    7. '-negative' → logprob: -13.389273643493652
    8. 'positive' → logprob: -14.014273643493652
    9. ' negativos' → logprob: -14.139273643493652
    10. ' negatif' → logprob: -14.264273643493652

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8663935661315918
    2. 'elif' → logprob: -1.2413935661315918
    3. 'else' → logprob: -1.6163935661315918
    4. ':' → logprob: -3.241393566131592
    5. ' else' → logprob: -3.491393566131592
    6. ' elif' → logprob: -3.991393566131592
    7. ':
' → logprob: -5.616393566131592
    8. '```' → logprob: -9.49139404296875
    9. '    
' → logprob: -10.74139404296875
    10. '	elif' → logprob: -10.74139404296875

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896721482276917
    2. 'elif' → logprob: -1.4646720886230469
    3. 'else' → logprob: -1.7146720886230469
    4. ' else' → logprob: -3.964672088623047
    5. ' elif' → logprob: -4.339672088623047
    6. ':' → logprob: -6.589672088623047
    7. ':
' → logprob: -7.089672088623047
    8. '```' → logprob: -10.714672088623047
    9. '    
' → logprob: -11.214672088623047
    10. ' =' → logprob: -11.339672088623047

Token 267: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1347903609275818
    2. 'elif' → logprob: -2.8847904205322266
    3. ' else' → logprob: -3.0097904205322266
    4. '   ' → logprob: -4.009790420532227
    5. ' elif' → logprob: -5.884790420532227
    6. ' ' → logprob: -12.759790420532227
    7. '    
' → logprob: -13.009790420532227
    8. '```' → logprob: -13.134790420532227
    9. '_else' → logprob: -13.509790420532227
    10. '  ' → logprob: -13.884790420532227

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42910006642341614
    2. ':
' → logprob: -1.0541000366210938
    3. '   ' → logprob: -7.929100036621094
    4. '       ' → logprob: -10.929100036621094
    5. ':

' → logprob: -11.929100036621094
    6. ':
' → logprob: -12.304100036621094
    7. '):
' → logprob: -12.429100036621094
    8. ' :
' → logprob: -13.054100036621094
    9. ' :' → logprob: -13.679100036621094
    10. '[' → logprob: -14.304100036621094

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07850722223520279
    2. '   ' → logprob: -2.7035071849823
    3. 'tmp' → logprob: -5.078507423400879
    4. ' tmp' → logprob: -6.078507423400879
    5. '	tmp' → logprob: -11.578507423400879
    6. '
' → logprob: -14.203507423400879
    7. '   ' → logprob: -14.453507423400879
    8. '```' → logprob: -14.453507423400879
    9. ' ' → logprob: -15.078507423400879
    10. '    ' → logprob: -15.078507423400879

Token 270: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -1.6286106983898208e-05
    2. '   ' → logprob: -12.125016212463379
    3. '       ' → logprob: -12.125016212463379
    4. ' tmp' → logprob: -12.500016212463379
    5. 'temp' → logprob: -14.875016212463379
    6. '        
' → logprob: -14.875016212463379
    7. 'pos' → logprob: -14.875016212463379
    8. '#' → logprob: -15.875016212463379
    9. '	tmp' → logprob: -16.375017166137695
    10. '    
' → logprob: -17.000017166137695

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283252388238907
    2. '=' → logprob: -2.237832546234131
    3. '=A' → logprob: -11.612832069396973
    4. 'A' → logprob: -15.612832069396973
    5. '=a' → logprob: -15.737832069396973
    6. 's' → logprob: -15.737832069396973
    7. ' ' → logprob: -15.862832069396973
    8. 'a' → logprob: -16.23783302307129
    9. '_=' → logprob: -16.36283302307129
    10. ' ' → logprob: -16.61283302307129

Token 272: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004095854703336954
    2. ' A' → logprob: -5.504096031188965
    3. 'neg' → logprob: -12.129096031188965
    4. ' negatives' → logprob: -12.629096031188965
    5. 'negative' → logprob: -13.754096031188965
    6. '	A' → logprob: -13.879096031188965
    7. '-' → logprob: -13.879096031188965
    8. 'abs' → logprob: -14.004096031188965
    9. '0' → logprob: -14.129096031188965
    10. 'sorted' → logprob: -14.379096031188965

Token 273: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02653505839407444
    2. '[-' → logprob: -3.6515350341796875
    3. '0' → logprob: -8.776535034179688
    4. '[:-' → logprob: -9.526535034179688
    5. '1' → logprob: -13.026535034179688
    6. '[
' → logprob: -13.151535034179688
    7. '
' → logprob: -13.651535034179688
    8. '   ' → logprob: -14.651535034179688
    9. ' [' → logprob: -15.276535034179688
    10. '-' → logprob: -15.526535034179688

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.250000953674316
    3. '0' → logprob: -16.875
    4. ' ' → logprob: -17.375
    5. '   ' → logprob: -17.75
    6. '(' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. '[' → logprob: -18.0
    9. '１' → logprob: -18.5625
    10. ']' → logprob: -18.6875

Token 275: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11541709303855896
    2. 'for' → logprob: -2.490417003631592
    3. '
' → logprob: -3.990417003631592
    4. ']
' → logprob: -5.490417003631592
    5. ')
' → logprob: -6.240417003631592
    6. ' for' → logprob: -7.865417003631592
    7. '   ' → logprob: -7.865417003631592
    8. 'def' → logprob: -8.36541748046875
    9. '      ' → logprob: -9.61541748046875
    10. '0' → logprob: -9.99041748046875

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04094140604138374
    2. ' for' → logprob: -3.6659414768218994
    3. 'for' → logprob: -4.66594123840332
    4. '
' → logprob: -5.41594123840332
    5. '   ' → logprob: -7.91594123840332
    6. '<|end|>' → logprob: -8.29094123840332
    7. '	for' → logprob: -10.54094123840332
    8. ' ' → logprob: -11.91594123840332
    9. '```' → logprob: -12.16594123840332
    10. '<|end|>' → logprob: -12.41594123840332

Token 277: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016175013035535812
    2. ' for' → logprob: -4.141174793243408
    3. '       ' → logprob: -8.891175270080566
    4. 'from' → logprob: -13.516175270080566
    5. '   ' → logprob: -14.016175270080566
    6. '
' → logprob: -15.141175270080566
    7. 'steps' → logprob: -15.141175270080566
    8. '	for' → logprob: -15.891175270080566
    9. 'For' → logprob: -16.51617431640625
    10. '        
' → logprob: -17.01617431640625

Token 278: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03395606577396393
    2. ' x' → logprob: -3.4089560508728027
    3. 'a' → logprob: -8.158956527709961
    4. 'A' → logprob: -11.408956527709961
    5. ' a' → logprob: -11.658956527709961
    6. '   ' → logprob: -13.658956527709961
    7. ' ' → logprob: -14.033956527709961
    8. 'i' → logprob: -14.158956527709961
    9. '_x' → logprob: -15.158956527709961
    10. '```' → logprob: -15.158956527709961

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893297076225281
    2. 'in' → logprob: -2.578933000564575
    3. 'A' → logprob: -11.453932762145996
    4. 's' → logprob: -11.578932762145996
    5. '[:-' → logprob: -11.953932762145996
    6. ' ' → logprob: -12.078932762145996
    7. ' A' → logprob: -13.078932762145996
    8. '   ' → logprob: -13.578932762145996
    9. 'In' → logprob: -13.703932762145996
    10. 'x' → logprob: -14.328932762145996

Token 280: ' reversed' (ID: 57184)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889319956302643
    2. ' A' → logprob: -2.5788931846618652
    3. '   ' → logprob: -13.703893661499023
    4. ' ' → logprob: -13.828893661499023
    5. '	A' → logprob: -14.953893661499023
    6. '[' → logprob: -15.703893661499023
    7. '(A' → logprob: -16.078893661499023
    8. ' reversed' → logprob: -16.203893661499023
    9. '[:-' → logprob: -16.328893661499023
    10. 'sorted' → logprob: -16.453893661499023

Token 281: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.011220998130738735
    2. 'A' → logprob: -4.511220932006836
    3. '(' → logprob: -9.011220932006836
    4. ' A' → logprob: -10.136220932006836
    5. '[:-' → logprob: -11.636220932006836
    6. '(range' → logprob: -14.136220932006836
    7. '(
' → logprob: -14.136220932006836
    8. ' (' → logprob: -14.886220932006836
    9. '(a' → logprob: -15.386220932006836
    10. '[A' → logprob: -16.261220932006836

Token 282: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -5.955703818472102e-05
    2. '[' → logprob: -9.750059127807617
    3. '[:' → logprob: -13.750059127807617
    4. '[-' → logprob: -16.375059127807617
    5. '[::-' → logprob: -18.500059127807617
    6. '   ' → logprob: -19.625059127807617
    7. '1' → logprob: -20.125059127807617
    8. '[:,' → logprob: -21.625059127807617
    9. '[
' → logprob: -21.750059127807617
    10. ')' → logprob: -21.875059127807617

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -11.750008583068848
    3. '])' → logprob: -15.125008583068848
    4. ' ' → logprob: -16.62500762939453
    5. '
' → logprob: -18.50000762939453
    6. 'len' → logprob: -18.75000762939453
    7. '   ' → logprob: -18.75000762939453
    8. '(-' → logprob: -18.87500762939453
    9. '```' → logprob: -19.25000762939453
    10. '(' → logprob: -19.50000762939453

Token 284: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.44025567173957825
    2. '):
' → logprob: -1.1902556419372559
    3. ']):' → logprob: -3.315255641937256
    4. ']:
' → logprob: -4.690255641937256
    5. '):' → logprob: -5.690255641937256
    6. ']:' → logprob: -5.940255641937256
    7. ']' → logprob: -8.565256118774414
    8. '       ' → logprob: -9.315256118774414
    9. '   ' → logprob: -9.440256118774414
    10. '])' → logprob: -10.065256118774414

Token 285: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24435606598854065
    2. '           ' → logprob: -1.6193560361862183
    3. '   ' → logprob: -4.619356155395508
    4. ':
' → logprob: -4.994356155395508
    5. ':' → logprob: -7.619356155395508
    6. '):
' → logprob: -7.744356155395508
    7. 'steps' → logprob: -7.994356155395508
    8. '<|end|>' → logprob: -8.244356155395508
    9. ' steps' → logprob: -9.119356155395508
    10. '```' → logprob: -9.369356155395508

Token 286: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.7222175002098083
    2. 'steps' (adapté à ' steps') → logprob: -0.7222175002098083
    3. '       ' → logprob: -3.847217559814453
    4. '   ' → logprob: -4.972217559814453
    5. '           ' → logprob: -8.097217559814453
    6. ' ' → logprob: -11.097217559814453
    7. '_steps' → logprob: -11.347217559814453
    8. '    ' → logprob: -11.597217559814453
    9. '.steps' → logprob: -11.722217559814453
    10. '     ' → logprob: -12.222217559814453

Token 287: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007367274374701083
    2. '.' → logprob: -7.500736713409424
    3. 'append' → logprob: -8.625737190246582
    4. '.app' → logprob: -13.625737190246582
    5. ' .' → logprob: -13.625737190246582
    6. ' append' → logprob: -14.250737190246582
    7. '.Append' → logprob: -14.750737190246582
    8. '	append' → logprob: -15.000737190246582
    9. '_append' → logprob: -15.375737190246582
    10. 'app' → logprob: -16.125736236572266

Token 288: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006208904553204775
    2. '(tmp' → logprob: -5.256208896636963
    3. '(' → logprob: -7.006208896636963
    4. '(
' → logprob: -10.131209373474121
    5. ' (' → logprob: -10.756209373474121
    6. '   ' → logprob: -12.131209373474121
    7. ' ' → logprob: -14.881209373474121
    8. '(temp' → logprob: -15.256209373474121
    9. '  ' → logprob: -15.881209373474121
    10. '    ' → logprob: -16.006208419799805

Token 289: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.009794695302844048
    2. '(tmp' → logprob: -4.75979471206665
    3. ' tmp' → logprob: -6.75979471206665
    4. '[tmp' → logprob: -11.634794235229492
    5. ',tmp' → logprob: -12.259794235229492
    6. 'x' → logprob: -12.884794235229492
    7. '/tmp' → logprob: -13.009794235229492
    8. '(' → logprob: -14.759794235229492
    9. '	tmp' → logprob: -14.759794235229492
    10. ' (' → logprob: -15.134794235229492

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ',x' → logprob: -13.625005722045898
    4. '   ' → logprob: -17.8750057220459
    5. 'x' → logprob: -18.3750057220459
    6. ',
' → logprob: -19.2500057220459
    7. '	' → logprob: -20.2500057220459
    8. '```' → logprob: -20.3750057220459
    9. '),' → logprob: -20.5000057220459
    10. '           ' → logprob: -21.0000057220459

Token 291: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269282102584839
    2. ' x' → logprob: -2.1269283294677734
    3. '	x' → logprob: -17.126928329467773
    4. '   ' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.001928329467773
    6. '(x' → logprob: -18.126928329467773
    7. '"x' → logprob: -18.876928329467773
    8. ')x' → logprob: -19.126928329467773
    9. '    ' → logprob: -19.376928329467773
    10. '-x' → logprob: -19.501928329467773

Token 292: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.049504827708005905
    2. ')
' → logprob: -3.2995047569274902
    3. '           ' → logprob: -5.04950475692749
    4. '))' → logprob: -5.54950475692749
    5. ')' → logprob: -6.92450475692749
    6. '       ' → logprob: -9.174505233764648
    7. '   ' → logprob: -13.049505233764648
    8. '               ' → logprob: -13.299505233764648
    9. '))
' → logprob: -13.299505233764648
    10. '          ' → logprob: -14.174505233764648

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005843686521984637
    2. '   ' → logprob: -8.250584602355957
    3. 'tmp' → logprob: -8.375584602355957
    4. '       ' → logprob: -10.125584602355957
    5. '```' → logprob: -10.875584602355957
    6. ' tmp' → logprob: -11.625584602355957
    7. '		' → logprob: -12.000584602355957
    8. '
' → logprob: -12.125584602355957
    9. '	       ' → logprob: -12.625584602355957
    10. ' ' → logprob: -13.875584602355957

Token 294: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0486765056848526
    2. ' tmp' → logprob: -3.0486764907836914
    3. '           ' → logprob: -9.548676490783691
    4. '   ' → logprob: -12.298676490783691
    5. '	tmp' → logprob: -12.423676490783691
    6. '/tmp' → logprob: -12.423676490783691
    7. '       ' → logprob: -12.548676490783691
    8. ' ' → logprob: -15.298676490783691
    9. '[tmp' → logprob: -15.298676490783691
    10. '(tmp' → logprob: -15.423676490783691

Token 295: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.023343894630670547
    2. '-=' → logprob: -3.773343801498413
    3. '-' → logprob: -9.398344039916992
    4. '    ' → logprob: -12.148344039916992
    5. '=' → logprob: -12.773344039916992
    6. ' -' → logprob: -12.898344039916992
    7. '            ' → logprob: -13.523344039916992
    8. '        ' → logprob: -13.523344039916992
    9. ' ' → logprob: -15.023344039916992
    10. ' +=' → logprob: -15.148344039916992

Token 296: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740770161151886
    2. 'x' → logprob: -0.9740769863128662
    3. '(x' → logprob: -18.099077224731445
    4. ' ' → logprob: -18.724077224731445
    5. '	x' → logprob: -18.974077224731445
    6. ' ' → logprob: -18.974077224731445
    7. ')' → logprob: -20.099077224731445
    8. ')x' → logprob: -20.099077224731445
    9. 'space' → logprob: -20.599077224731445
    10. 's' → logprob: -21.099077224731445

Token 297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049227699637413025
    2. '<|end|>' → logprob: -6.379922866821289
    3. 'steps' → logprob: -6.754922866821289
    4. 'print' → logprob: -7.379922866821289
    5. '    
' → logprob: -7.504922866821289
    6. '       ' → logprob: -7.754922866821289
    7. ' steps' → logprob: -9.129922866821289
    8. 'for' → logprob: -9.504922866821289
    9. '
' → logprob: -9.504922866821289
    10. ')' → logprob: -9.504922866821289

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01918262615799904
    2. 'print' → logprob: -4.6441826820373535
    3. '       ' → logprob: -4.8941826820373535
    4. '
' → logprob: -7.1441826820373535
    5. 'steps' → logprob: -7.1441826820373535
    6. '    
' → logprob: -9.019182205200195
    7. 'for' → logprob: -9.519182205200195
    8. '```' → logprob: -10.519182205200195
    9. '        
' → logprob: -10.644182205200195
    10. ' for' → logprob: -10.894182205200195

Token 299: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1599024385213852
    2. 'print' (adapté à ' print') → logprob: -2.159902334213257
    3. '       ' → logprob: -3.784902334213257
    4. ' print' → logprob: -5.284902572631836
    5. ' for' → logprob: -5.534902572631836
    6. 'for' → logprob: -8.034902572631836
    7. '    
' → logprob: -8.784902572631836
    8. '```' → logprob: -9.034902572631836
    9. '
' → logprob: -10.159902572631836
    10. '<|end|>' → logprob: -10.784902572631836

Token 300: '(tmp' (ID: 22623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09126327186822891
    2. '(tmp' → logprob: -2.4662632942199707
    3. '(abs' → logprob: -6.966263294219971
    4. '(max' → logprob: -7.466263294219971
    5. '()' → logprob: -7.716263294219971
    6. '(len' → logprob: -8.341262817382812
    7. '(
' → logprob: -10.091262817382812
    8. '(sum' → logprob: -10.591262817382812
    9. ' (' → logprob: -10.716262817382812
    10. '((' → logprob: -11.716262817382812

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00071553117595613
    2. ')
' → logprob: -7.250715732574463
    3. ' )' → logprob: -12.375715255737305
    4. '   ' → logprob: -14.625715255737305
    5. ',' → logprob: -14.625715255737305
    6. ',)' → logprob: -16.500715255737305
    7. '")' → logprob: -16.625715255737305
    8. '),' → logprob: -16.625715255737305
    9. '()' → logprob: -16.750715255737305
    10. ')

' → logprob: -16.875715255737305

Token 302: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012823817320168018
    2. 'print' → logprob: -5.012823581695557
    3. ' for' → logprob: -6.137823581695557
    4. '    
' → logprob: -6.262823581695557
    5. '  
' → logprob: -7.387823581695557
    6. '   ' → logprob: -7.387823581695557
    7. '   
' → logprob: -8.512824058532715
    8. '\n' → logprob: -8.887824058532715
    9. 'steps' → logprob: -8.887824058532715
    10. '```' → logprob: -9.512824058532715

Token 303: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008685869397595525
    2. ' for' → logprob: -7.250868797302246
    3. '   ' → logprob: -8.750868797302246
    4. '	for' → logprob: -15.125868797302246
    5. '```' → logprob: -18.37586784362793
    6. ' ' → logprob: -18.50086784362793
    7. '    
' → logprob: -19.12586784362793
    8. 'print' → logprob: -19.25086784362793
    9. '<|end|>' → logprob: -19.75086784362793
    10. '  
' → logprob: -20.50086784362793

Token 304: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47955235838890076
    2. 'a' → logprob: -1.1045523881912231
    3. 's' → logprob: -3.7295522689819336
    4. 'step' → logprob: -4.229552268981934
    5. 'u' → logprob: -6.229552268981934
    6. '(x' → logprob: -6.604552268981934
    7. 'f' → logprob: -6.729552268981934
    8. 'l' → logprob: -6.979552268981934
    9. 'from' → logprob: -7.104552268981934
    10. 'i' → logprob: -7.354552268981934

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06159237399697304
    2. 'in' → logprob: -3.1865923404693604
    3. ',y' → logprob: -4.1865925788879395
    4. ' in' → logprob: -6.0615925788879395
    5. ',in' → logprob: -8.436592102050781
    6. ' ,' → logprob: -9.061592102050781
    7. 'y' → logprob: -9.061592102050781
    8. '_,' → logprob: -9.186592102050781
    9. ',a' → logprob: -10.186592102050781
    10. 'step' → logprob: -10.311592102050781

Token 306: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001584850688232109
    2. ' y' → logprob: -8.750158309936523
    3. '_y' → logprob: -18.750158309936523
    4. '	y' → logprob: -18.750158309936523
    5. '(y' → logprob: -20.500158309936523
    6. 'y's' → logprob: -21.500158309936523
    7. 'x' → logprob: -21.625158309936523
    8. ''y' → logprob: -21.875158309936523
    9. '   ' → logprob: -21.875158309936523
    10. 'tmp' → logprob: -21.875158309936523

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687703013420105
    2. 'in' → logprob: -1.1368770599365234
    3. 'print' → logprob: -13.511877059936523
    4. '   ' → logprob: -13.636877059936523
    5. '	in' → logprob: -14.636877059936523
    6. '  ' → logprob: -14.761877059936523
    7. ' ' → logprob: -14.761877059936523
    8. 'n' → logprob: -14.761877059936523
    9. 's' → logprob: -14.761877059936523
    10. 'steps' → logprob: -15.261877059936523

Token 308: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -5.836499985889532e-05
    2. ' steps' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.750059127807617
    4. 'step' → logprob: -19.875059127807617
    5. ' ' → logprob: -21.500059127807617
    6. '.steps' → logprob: -21.625059127807617
    7. '  ' → logprob: -22.000059127807617
    8. 'Steps' → logprob: -22.125059127807617
    9. '_steps' → logprob: -22.500059127807617
    10. '
' → logprob: -23.500059127807617

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0487203374505043
    2. ':
' → logprob: -3.048720359802246
    3. 'print' → logprob: -9.423720359802246
    4. '():
' → logprob: -10.923720359802246
    5. ' print' → logprob: -11.173720359802246
    6. '):' → logprob: -12.923720359802246
    7. ' :' → logprob: -13.048720359802246
    8. '   ' → logprob: -13.048720359802246
    9. '():' → logprob: -13.173720359802246
    10. ':
' → logprob: -13.173720359802246

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06427428871393204
    2. '():
' → logprob: -3.939274311065674
    3. ':' → logprob: -4.189274311065674
    4. ' print' → logprob: -4.564274311065674
    5. 'print' → logprob: -4.814274311065674
    6. ':
' → logprob: -5.064274311065674
    7. '():' → logprob: -6.689274311065674
    8. '   ' → logprob: -7.814274311065674
    9. '(print' → logprob: -8.189273834228516
    10. '.print' → logprob: -8.689273834228516

Token 311: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4130692183971405
    2. 'print' (adapté à ' print') → logprob: -1.163069248199463
    3. '       ' → logprob: -3.663069248199463
    4. '<|end|>' → logprob: -9.413068771362305
    5. '        
' → logprob: -10.413068771362305
    6. '	print' → logprob: -10.413068771362305
    7. '   ' → logprob: -10.538068771362305
    8. '.print' → logprob: -11.413068771362305
    9. '```' → logprob: -12.163068771362305
    10. ' ' → logprob: -12.663068771362305

Token 312: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006537384819239378
    2. '(' → logprob: -5.756537437438965
    3. 'x' → logprob: -6.131537437438965
    4. '(f' → logprob: -6.756537437438965
    5. ' x' → logprob: -11.256537437438965
    6. 'f' → logprob: -12.756537437438965
    7. '("{}' → logprob: -15.006537437438965
    8. ' (' → logprob: -15.131537437438965
    9. '('' → logprob: -15.381537437438965
    10. '("' → logprob: -15.506537437438965

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046860878355801105
    2. ' ,' → logprob: -5.504685878753662
    3. ',y' → logprob: -7.504685878753662
    4. ' y' → logprob: -10.00468635559082
    5. ',end' → logprob: -12.00468635559082
    6. ')' → logprob: -13.37968635559082
    7. 'y' → logprob: -13.62968635559082
    8. '-' → logprob: -13.87968635559082
    9. '-,' → logprob: -14.62968635559082
    10. ',
' → logprob: -15.00468635559082

Token 314: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. '   ' → logprob: -20.500335693359375
    4. '	y' → logprob: -20.875335693359375
    5. '    ' → logprob: -21.250335693359375
    6. ' ' → logprob: -22.250335693359375
    7. 'x' → logprob: -22.500335693359375
    8. '       ' → logprob: -22.625335693359375
    9. ')' → logprob: -23.125335693359375
    10. ''y' → logprob: -23.250335693359375

Token 315: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -17.25
    4. '),' → logprob: -18.25
    5. '))' → logprob: -18.5
    6. ')}' → logprob: -18.875
    7. ')`' → logprob: -19.25
    8. '<|end|>' → logprob: -19.25
    9. ')#' → logprob: -19.5
    10. ').' → logprob: -19.75

Token 316: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016169032081961632
    2. '__' → logprob: -4.14116907119751
    3. ' ' → logprob: -9.391168594360352
    4. '_' → logprob: -10.766168594360352
    5. ' main' → logprob: -11.516168594360352
    6. ' _' → logprob: -11.641168594360352
    7. ' ' → logprob: -12.641168594360352
    8. '_name' → logprob: -12.891168594360352
    9. ' ' → logprob: -14.141168594360352
    10. '_main' → logprob: -14.391168594360352

Token 318: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.4918029010295868
    2. '__' → logprob: -1.7418029308319092
    3. ' ==' → logprob: -1.8668029308319092
    4. ' __' → logprob: -2.866802930831909
    5. '==' → logprob: -6.86680269241333
    6. ' ' → logprob: -8.741803169250488
    7. 'main' → logprob: -8.991803169250488
    8. ' name' → logprob: -9.491803169250488
    9. '.name' → logprob: -9.491803169250488
    10. '.__' → logprob: -10.241803169250488

Token 319: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.350386295001954e-05
    2. '==' → logprob: -9.625073432922363
    3. '__.__' → logprob: -12.875073432922363
    4. ' ==' → logprob: -13.125073432922363
    5. '=="' → logprob: -13.250073432922363
    6. '___' → logprob: -15.250073432922363
    7. '_' → logprob: -16.00007438659668
    8. '____' → logprob: -16.00007438659668
    9. '__["' → logprob: -16.12507438659668
    10. '__('' → logprob: -16.12507438659668

Token 320: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15182019770145416
    2. '==' → logprob: -2.276820182800293
    3. ' ==' → logprob: -3.276820182800293
    4. '=="' → logprob: -7.776820182800293
    5. '=='' → logprob: -9.901820182800293
    6. '=' → logprob: -11.401820182800293
    7. '__.__' → logprob: -12.151820182800293
    8. '_' → logprob: -12.776820182800293
    9. '===' → logprob: -12.901820182800293
    10. '___' → logprob: -13.401820182800293

Token 321: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06197754293680191
    2. ''' → logprob: -2.8119776248931885
    3. '__' → logprob: -11.93697738647461
    4. ' "__' → logprob: -12.93697738647461
    5. '"user' → logprob: -15.06197738647461
    6. ' '__' → logprob: -16.06197738647461
    7. '"name' → logprob: -16.68697738647461
    8. '   ' → logprob: -16.93697738647461
    9. ''"' → logprob: -16.93697738647461
    10. ''post' → logprob: -17.31197738647461

Token 322: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20216692984104156
    2. '__' → logprob: -1.7021669149398804
    3. '"' → logprob: -7.70216703414917
    4. 'name' → logprob: -9.327166557312012
    5. ''' → logprob: -9.327166557312012
    6. '__":
' → logprob: -9.452166557312012
    7. '_main' → logprob: -11.077166557312012
    8. '__':
' → logprob: -11.827166557312012
    9. '___' → logprob: -12.077166557312012
    10. '```' → logprob: -12.452166557312012

Token 323: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0068549662828445435
    2. '__' → logprob: -5.006855010986328
    3. '__':
' → logprob: -8.881855010986328
    4. '__.' → logprob: -14.756855010986328
    5. '__["' → logprob: -16.631855010986328
    6. '__.__' → logprob: -16.881855010986328
    7. '_' → logprob: -17.006855010986328
    8. '.' → logprob: -17.256855010986328
    9. '```' → logprob: -17.381855010986328
    10. '__("' → logprob: -18.506855010986328

Token 324: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7308884263038635
    2. ' main' → logprob: -0.9808884263038635
    3. '   ' → logprob: -1.9808883666992188
    4. '	main' → logprob: -5.230888366699219
    5. '_main' → logprob: -8.730888366699219
    6. '(main' → logprob: -9.980888366699219
    7. '    
' → logprob: -10.605888366699219
    8. '__' → logprob: -12.855888366699219
    9. '```' → logprob: -13.105888366699219
    10. '.main' → logprob: -13.355888366699219

Token 325: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.20142346620559692
    2. ' main' → logprob: -1.7014234066009521
    3. '   ' → logprob: -12.201423645019531
    4. '	main' → logprob: -12.201423645019531
    5. '(main' → logprob: -17.20142364501953
    6. '.main' → logprob: -17.57642364501953
    7. '_main' → logprob: -17.95142364501953
    8. ' ' → logprob: -18.45142364501953
    9. ' ' → logprob: -18.95142364501953
    10. '    
' → logprob: -19.32642364501953

Token 326: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 324
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 278
Précision stricte (1ère position): 43.52%
Précision adaptée (1ère position): 48.46%
Précision (top 10): 85.80%
================================================================================
