================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shift_offset = int(input())
input_string = input()

def apply_shift(character, shift_amount):
    normalized_shift = shift_amount % 26
    base_ascii = ord(character)
    shifted_ascii = base_ascii + normalized_shift
    if shifted_ascii > ord('Z'):
        shifted_ascii -= 26
    return chr(shifted_ascii)

output_string = ""
for current_char in input_string:
    output_string += apply_shift(current_char, shift_offset)

print(output_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'shift' (ID: 27472)
  → Token d'amorce (pas de prédiction)

Token 1: '_offset' (ID: 15447)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2821038067340851
    2. ' ' → logprob: -1.4071037769317627
    3. '1' → logprob: -7.032104015350342
    4. '32' → logprob: -10.157103538513184
    5. '"' → logprob: -12.407103538513184
    6. 'shift' → logprob: -12.407103538513184
    7. '`' → logprob: -12.657103538513184
    8. ' _' → logprob: -12.657103538513184
    9. ' ' → logprob: -13.032103538513184
    10. ''' → logprob: -13.032103538513184

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001718496554531157
    2. '_' → logprob: -7.251718521118164
    3. '```' → logprob: -8.376718521118164
    4. ''' → logprob: -8.626718521118164
    5. '('' → logprob: -9.001718521118164
    6. 'shift' → logprob: -9.251718521118164
    7. '[' → logprob: -9.251718521118164
    8. '_shift' → logprob: -9.501718521118164
    9. '("("' → logprob: -10.251718521118164
    10. '`' → logprob: -10.626718521118164

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030879253521561623
    2. ')' → logprob: -3.905879259109497
    3. '()' → logprob: -4.780879020690918
    4. '('' → logprob: -6.905879020690918
    5. '())' → logprob: -7.780879020690918
    6. '("("' → logprob: -8.905879020690918
    7. '(()' → logprob: -9.905879020690918
    8. '(
' → logprob: -9.905879020690918
    9. '(""))' → logprob: -10.030879020690918
    10. '(

' → logprob: -10.405879020690918

Token 6: 'input' (ID: 2586)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4276804029941559
    2. '+' → logprob: -1.1776803731918335
    3. '*' → logprob: -3.427680492401123
    4. 'if' → logprob: -5.427680492401123
    5. '#' → logprob: -7.302680492401123
    6. 'shift' → logprob: -7.552680492401123
    7. 'print' → logprob: -7.927680492401123
    8. ')' → logprob: -8.427680015563965
    9. ' if' → logprob: -8.427680015563965
    10. 'for' → logprob: -8.552680015563965

Token 7: '_string' (ID: 8609)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1846768707036972
    2. '(' → logprob: -1.8096768856048584
    3. '().' → logprob: -6.309676647186279
    4. '_' → logprob: -7.559676647186279
    5. '('' → logprob: -7.684676647186279
    6. '```' → logprob: -7.684676647186279
    7. '())' → logprob: -8.184677124023438
    8. '_data' → logprob: -8.434677124023438
    9. '_str' → logprob: -8.934677124023438
    10. ')' → logprob: -9.184677124023438

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00238968338817358
    2. '.' → logprob: -7.627389907836914
    3. '.strip' → logprob: -8.002389907836914
    4. '[input' → logprob: -8.252389907836914
    5. '+' → logprob: -8.627389907836914
    6. '[token' → logprob: -9.002389907836914
    7. '[]' → logprob: -9.127389907836914
    8. '=' → logprob: -9.252389907836914
    9. '[:]' → logprob: -9.252389907836914
    10. '[int' → logprob: -9.502389907836914

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34847354888916016
    2. 'input' → logprob: -1.2234735488891602
    3. ' ' → logprob: -10.84847354888916
    4. ' ' → logprob: -12.59847354888916
    5. '=input' → logprob: -13.22347354888916
    6. '(input' → logprob: -13.59847354888916
    7. '"' → logprob: -14.22347354888916
    8. '	input' → logprob: -14.47347354888916
    9. ''' → logprob: -14.59847354888916
    10. '<input' → logprob: -15.47347354888916

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008161564357578754
    2. '()' → logprob: -4.883161544799805
    3. ')' → logprob: -9.133161544799805
    4. '```' → logprob: -9.133161544799805
    5. ' (' → logprob: -9.258161544799805
    6. '('' → logprob: -9.383161544799805
    7. '`' → logprob: -10.508161544799805
    8. ' ' → logprob: -10.758161544799805
    9. '(
' → logprob: -10.883161544799805
    10. '("("' → logprob: -10.883161544799805

Token 11: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.611946702003479
    2. 'result' → logprob: -0.986946702003479
    3. 'if' → logprob: -3.2369465827941895
    4. 'shift' → logprob: -4.6119465827941895
    5. 'output' → logprob: -4.8619465827941895
    6. 'length' → logprob: -4.8619465827941895
    7. 'i' → logprob: -5.4869465827941895
    8. ' for' → logprob: -6.1119465827941895
    9. 'count' → logprob: -6.3619465827941895
    10. 'n' → logprob: -6.3619465827941895

Token 12: ' apply' (ID: 6096)
  Prédit: ' shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.6240147948265076
    2. ' decode' → logprob: -1.6240148544311523
    3. ' process' → logprob: -2.7490148544311523
    4. ' ' → logprob: -2.7490148544311523
    5. ' calculate' → logprob: -2.9990148544311523
    6. ' my' → logprob: -3.6240148544311523
    7. '_' → logprob: -3.6240148544311523
    8. ' space' → logprob: -5.249014854431152
    9. ' reverse' → logprob: -5.249014854431152
    10. ' def' → logprob: -6.124014854431152

Token 13: '_shift' (ID: 56354)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08176399022340775
    2. '_shift' → logprob: -2.581763982772827
    3. ' _' → logprob: -6.581764221191406
    4. '(' → logprob: -6.706764221191406
    5. '_offset' → logprob: -9.456764221191406
    6. '_space' → logprob: -10.206764221191406
    7. ' ' → logprob: -10.581764221191406
    8. ' (' → logprob: -11.581764221191406
    9. '_mask' → logprob: -11.831764221191406
    10. '_token' → logprob: -11.956764221191406

Token 14: '(character' (ID: 105641)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008242443203926086
    2. '_' → logprob: -5.633242607116699
    3. '_shift' → logprob: -5.633242607116699
    4. '(_' → logprob: -7.883242607116699
    5. '_(' → logprob: -8.3832426071167
    6. '(s' → logprob: -9.6332426071167
    7. ' (' → logprob: -9.6332426071167
    8. '(text' → logprob: -10.3832426071167
    9. '(offset' → logprob: -10.5082426071167
    10. '(line' → logprob: -10.8832426071167

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043496055877767503
    2. '):' → logprob: -8.125434875488281
    3. ' ,' → logprob: -9.000434875488281
    4. ',char' → logprob: -11.375434875488281
    5. ':' → logprob: -14.000434875488281
    6. ')' → logprob: -14.250434875488281
    7. ',c' → logprob: -14.500434875488281
    8. ',index' → logprob: -15.250434875488281
    9. ',int' → logprob: -15.375434875488281
    10. ' ):' → logprob: -15.500434875488281

Token 16: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.2400115430355072
    2. 'shift' → logprob: -1.6150115728378296
    3. ' offset' → logprob: -4.365011692047119
    4. 'offset' → logprob: -6.365011692047119
    5. ' ' → logprob: -10.740011215209961
    6. ')' → logprob: -11.365011215209961
    7. '   ' → logprob: -12.552511215209961
    8. 'sh' → logprob: -12.677511215209961
    9. '_shift' → logprob: -12.740011215209961
    10. ' shifted' → logprob: -13.365011215209961

Token 17: '_amount' (ID: 29145)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08589483052492142
    2. '_' → logprob: -2.960894823074341
    3. '_offset' → logprob: -3.585894823074341
    4. ')' → logprob: -6.08589506149292
    5. '):
' → logprob: -7.83589506149292
    6. '_amount' → logprob: -10.460894584655762
    7. ')_' → logprob: -10.460894584655762
    8. '):

' → logprob: -11.085894584655762
    9. ' ):' → logprob: -11.335894584655762
    10. '=' → logprob: -11.460894584655762

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00037740718107670546
    2. ')' → logprob: -8.000377655029297
    3. '):
' → logprob: -10.375377655029297
    4. ' ):' → logprob: -12.250377655029297
    5. ':' → logprob: -12.375377655029297
    6. '=' → logprob: -14.625377655029297
    7. ',' → logprob: -15.125377655029297
    8. '):
' → logprob: -15.375377655029297
    9. ' ' → logprob: -15.500377655029297
    10. '}:' → logprob: -16.125377655029297

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7046006917953491
    2. ':' → logprob: -0.8296006917953491
    3. ')' → logprob: -2.9546008110046387
    4. '):' → logprob: -5.079600811004639
    5. ' ' → logprob: -5.954600811004639
    6. ',' → logprob: -6.579600811004639
    7. '<|end|>' → logprob: -6.829600811004639
    8. ' :' → logprob: -7.079600811004639
    9. '```' → logprob: -7.079600811004639
    10. ' if' → logprob: -7.329600811004639

Token 20: ' normalized' (ID: 59625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049111973494291306
    2. '    ' → logprob: -3.54911208152771
    3. ' if' → logprob: -4.549111843109131
    4. 'if' → logprob: -6.049111843109131
    5. '```' → logprob: -6.674111843109131
    6. ' ' → logprob: -6.799111843109131
    7. 'c' → logprob: -7.424111843109131
    8. '32' → logprob: -7.799111843109131
    9. 'shift' → logprob: -7.924111843109131
    10. '       ' → logprob: -8.424112319946289

Token 21: '_shift' (ID: 56354)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.29161643981933594
    2. '_' → logprob: -1.666616439819336
    3. '_code' → logprob: -4.166616439819336
    4. ' =' → logprob: -4.541616439819336
    5. '_ord' → logprob: -4.666616439819336
    6. '=' → logprob: -5.291616439819336
    7. '_shift' → logprob: -5.791616439819336
    8. '_value' → logprob: -5.916616439819336
    9. '_character' → logprob: -6.041616439819336
    10. ')' → logprob: -6.041616439819336

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18010689318180084
    2. '=' → logprob: -1.8051068782806396
    3. ' ' → logprob: -8.805107116699219
    4. '_' → logprob: -9.430107116699219
    5. ')' → logprob: -9.555107116699219
    6. '   ' → logprob: -10.555107116699219
    7. 'ed' → logprob: -11.555107116699219
    8. ',' → logprob: -12.055107116699219
    9. '_shift' → logprob: -12.430107116699219
    10. 'shift' → logprob: -12.680107116699219

Token 23: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.06224517896771431
    2. 'shift' → logprob: -2.8122451305389404
    3. ' (' → logprob: -8.43724536895752
    4. ' character' → logprob: -10.43724536895752
    5. '(' → logprob: -11.68724536895752
    6. 'character' → logprob: -11.93724536895752
    7. ' ' → logprob: -12.56224536895752
    8. '   ' → logprob: -12.81224536895752
    9. '.shift' → logprob: -13.06224536895752
    10. 'int' → logprob: -13.43724536895752

Token 24: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.2519787549972534
    2. '_offset' → logprob: -1.5019787549972534
    3. '_shift' → logprob: -10.001978874206543
    4. '_' → logprob: -13.876978874206543
    5. '_amt' → logprob: -13.876978874206543
    6. 'offset' → logprob: -15.126978874206543
    7. 'amount' → logprob: -15.251978874206543
    8. '_to' → logprob: -15.376978874206543
    9. '```' → logprob: -15.501978874206543
    10. '%' → logprob: -15.751978874206543

Token 25: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01607026532292366
    2. '%' → logprob: -4.141070365905762
    3. ' ' → logprob: -10.391070365905762
    4. ' %
' → logprob: -13.141070365905762
    5. '<|end|>' → logprob: -13.516070365905762
    6. ')' → logprob: -14.016070365905762
    7. ' ' → logprob: -15.016070365905762
    8. ' %=' → logprob: -15.266070365905762
    9. ' %)' → logprob: -15.766070365905762
    10. '   ' → logprob: -16.641069412231445

Token 26: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.009793395176529884
    2. ' ' → logprob: -4.634793281555176
    3. '256' → logprob: -10.884793281555176
    4. '32' → logprob: -12.634793281555176
    5. '52' → logprob: -12.884793281555176
    6. '36' → logprob: -12.884793281555176
    7. '128' → logprob: -13.009793281555176
    8. '27' → logprob: -13.509793281555176
    9. '126' → logprob: -13.759793281555176
    10. '   ' → logprob: -13.884793281555176

Token 27: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.00013321757433004677
    2. ' ' → logprob: -9.250133514404297
    3. '256' → logprob: -10.500133514404297
    4. '52' → logprob: -12.750133514404297
    5. '128' → logprob: -13.250133514404297
    6. '255' → logprob: -14.500133514404297
    7. '126' → logprob: -14.500133514404297
    8. '25' → logprob: -14.750133514404297
    9. '260' → logprob: -14.750133514404297
    10. '27' → logprob: -14.875133514404297

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006849523168057203
    2. '<|end|>' → logprob: -5.63184928894043
    3. ')' → logprob: -6.63184928894043
    4. '    
' → logprob: -7.38184928894043
    5. ' ' → logprob: -7.88184928894043
    6. ' if' → logprob: -8.63184928894043
    7. '    ' → logprob: -8.75684928894043
    8. 'if' → logprob: -9.38184928894043
    9. ',' → logprob: -9.50684928894043
    10. ':' → logprob: -9.63184928894043

Token 30: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28457945585250854
    2. 'if' → logprob: -1.5345795154571533
    3. ' if' → logprob: -3.5345795154571533
    4. ' ' → logprob: -7.159579277038574
    5. 'shift' → logprob: -7.784579277038574
    6. '    ' → logprob: -8.034579277038574
    7. '  ' → logprob: -8.534579277038574
    8. 'char' → logprob: -8.909579277038574
    9. 'ascii' → logprob: -8.909579277038574
    10. '    
' → logprob: -9.284579277038574

Token 31: '_ascii' (ID: 125321)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03179897367954254
    2. ' =' → logprob: -3.781799077987671
    3. '_ord' → logprob: -5.156798839569092
    4. '_' → logprob: -6.156798839569092
    5. '_code' → logprob: -8.78179931640625
    6. '_char' → logprob: -8.78179931640625
    7. '(ord' → logprob: -9.03179931640625
    8. '_=' → logprob: -9.28179931640625
    9. '_val' → logprob: -10.40679931640625
    10. 'ord' → logprob: -10.65679931640625

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014203518629074
    2. '=' → logprob: -1.7014203071594238
    3. '   ' → logprob: -13.576420783996582
    4. '_' → logprob: -13.701420783996582
    5. ' ' → logprob: -13.826420783996582
    6. '_code' → logprob: -13.826420783996582
    7. '32' → logprob: -14.326420783996582
    8. '```' → logprob: -14.951420783996582
    9. ',' → logprob: -15.326420783996582
    10. '	' → logprob: -15.701420783996582

Token 33: ' ord' (ID: 6608)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.5814452767372131
    2. 'ord' → logprob: -1.5814452171325684
    3. ' ord' → logprob: -1.8314452171325684
    4. '97' → logprob: -2.8314452171325684
    5. ' ' → logprob: -4.456445217132568
    6. '(ord' → logprob: -5.456445217132568
    7. '   ' → logprob: -8.456445693969727
    8. '  ' → logprob: -11.206445693969727
    9. ' (' → logprob: -12.206445693969727
    10. '91' → logprob: -13.206445693969727

Token 34: '(character' (ID: 105641)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012733547016978264
    2. '(' → logprob: -4.637733459472656
    3. '(character' → logprob: -5.887733459472656
    4. '(a' → logprob: -9.262733459472656
    5. 'character' → logprob: -10.012733459472656
    6. '(('' → logprob: -10.637733459472656
    7. '("' → logprob: -11.762733459472656
    8. 'a' → logprob: -11.762733459472656
    9. ''a' → logprob: -12.012733459472656
    10. '(A' → logprob: -12.762733459472656

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0070494795218110085
    2. ' if' → logprob: -5.757049560546875
    3. ' )' → logprob: -6.632049560546875
    4. '   ' → logprob: -6.882049560546875
    5. 'if' → logprob: -7.382049560546875
    6. ' -' → logprob: -8.382049560546875
    7. '-' → logprob: -8.632049560546875
    8. ' ' → logprob: -9.382049560546875
    9. ')
' → logprob: -9.382049560546875
    10. 'A' → logprob: -9.507049560546875

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4883476197719574
    2. ' if' → logprob: -2.1133475303649902
    3. '+' → logprob: -2.2383475303649902
    4. ' +' → logprob: -2.3633475303649902
    5. ' ' → logprob: -3.9883475303649902
    6. '-' → logprob: -4.36334753036499
    7. ' -' → logprob: -4.73834753036499
    8. 'if' → logprob: -4.86334753036499
    9. '    ' → logprob: -5.61334753036499
    10. ')' → logprob: -5.61334753036499

Token 37: ' shifted' (ID: 58644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22173811495304108
    2. '+' → logprob: -2.84673810005188
    3. '   ' → logprob: -3.34673810005188
    4. ' if' → logprob: -3.72173810005188
    5. 'if' → logprob: -4.096738338470459
    6. ' +' → logprob: -4.346738338470459
    7. '    ' → logprob: -4.346738338470459
    8. 'return' → logprob: -4.846738338470459
    9. 'c' → logprob: -5.096738338470459
    10. 'a' → logprob: -5.846738338470459

Token 38: '_ascii' (ID: 125321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7108898162841797
    2. '=' → logprob: -1.5858898162841797
    3. ' =' → logprob: -1.5858898162841797
    4. '_char' → logprob: -3.0858898162841797
    5. '_ascii' → logprob: -3.8358898162841797
    6. '_character' → logprob: -3.9608898162841797
    7. '_code' → logprob: -5.46088981628418
    8. '_value' → logprob: -5.58588981628418
    9. '_base' → logprob: -6.21088981628418
    10. '_=' → logprob: -6.58588981628418

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759442448616028
    2. '=' → logprob: -0.8259442448616028
    3. ' +=' → logprob: -13.575943946838379
    4. ' ' → logprob: -14.200943946838379
    5. 's' → logprob: -14.575943946838379
    6. '+=' → logprob: -14.700943946838379
    7. '   ' → logprob: -14.950943946838379
    8. '```' → logprob: -15.075943946838379
    9. '=
' → logprob: -15.575943946838379
    10. ' =
' → logprob: -15.575943946838379

Token 40: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.16180263459682465
    2. 'base' → logprob: -1.9118026494979858
    3. '(base' → logprob: -6.536802768707275
    4. ' (' → logprob: -9.411802291870117
    5. '(' → logprob: -11.661802291870117
    6. ' ord' → logprob: -11.911802291870117
    7. ' ' → logprob: -11.911802291870117
    8. '((' → logprob: -11.911802291870117
    9. '   ' → logprob: -12.286802291870117
    10. 'ord' → logprob: -12.661802291870117

Token 41: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0020790016278624535
    2. 'ascii' → logprob: -6.252079010009766
    3. 's' → logprob: -9.252079010009766
    4. '_' → logprob: -10.752079010009766
    5. 'shift' → logprob: -11.002079010009766
    6. '_as' → logprob: -13.127079010009766
    7. 'ASCII' → logprob: -13.627079010009766
    8. 'a' → logprob: -13.877079010009766
    9. 't' → logprob: -13.877079010009766
    10. 'c' → logprob: -13.877079010009766

Token 42: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31329473853111267
    2. '+' → logprob: -1.313294768333435
    3. ' -' → logprob: -11.188294410705566
    4. '-' → logprob: -11.813294410705566
    5. '<|end|>' → logprob: -12.063294410705566
    6. ' +
' → logprob: -12.563294410705566
    7. '+
' → logprob: -14.063294410705566
    8. ' plus' → logprob: -14.688294410705566
    9. ' ' → logprob: -15.438294410705566
    10. '+i' → logprob: -16.063295364379883

Token 43: ' normalized' (ID: 59625)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.1602294147014618
    2. ' normalized' → logprob: -1.9102294445037842
    3. 'shift' → logprob: -12.410229682922363
    4. 'normal' → logprob: -14.285229682922363
    5. '(normal' → logprob: -15.410229682922363
    6. 'normalize' → logprob: -15.660229682922363
    7. 'norm' → logprob: -16.160228729248047
    8. 'Normalized' → logprob: -16.910228729248047
    9. ' shift' → logprob: -17.285228729248047
    10. '_normal' → logprob: -17.660228729248047

Token 44: '_shift' (ID: 56354)
  Prédit: '_shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shift' → logprob: -0.00018244501552544534
    2. 'shift' → logprob: -8.625182151794434
    3. '_' → logprob: -13.375182151794434
    4. '_sh' → logprob: -14.750182151794434
    5. '_offset' → logprob: -14.875182151794434
    6. '_s' → logprob: -15.500182151794434
    7. 's' → logprob: -16.12518310546875
    8. 'Shift' → logprob: -16.75018310546875
    9. '_SHIFT' → logprob: -17.50018310546875
    10. '_skip' → logprob: -17.75018310546875

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30115726590156555
    2. '<|end|>' → logprob: -1.4261572360992432
    3. ' if' → logprob: -4.176157474517822
    4. '    ' → logprob: -7.051157474517822
    5. '<|end|>' → logprob: -7.051157474517822
    6. '```' → logprob: -7.426157474517822
    7. 'if' → logprob: -7.676157474517822
    8. '
' → logprob: -7.676157474517822
    9. ' ' → logprob: -7.801157474517822
    10. '  ' → logprob: -8.676156997680664

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34462693333625793
    2. 'if' (adapté à ' if') → logprob: -1.5946269035339355
    3. '   ' → logprob: -2.8446269035339355
    4. ' ' → logprob: -4.5946269035339355
    5. '<|end|>' → logprob: -4.5946269035339355
    6. 'return' → logprob: -5.3446269035339355
    7. ' return' → logprob: -6.3446269035339355
    8. '    ' → logprob: -6.8446269035339355
    9. '```' → logprob: -6.9696269035339355
    10. '  ' → logprob: -7.7196269035339355

Token 48: ' shifted' (ID: 58644)
  Prédit: ' shifted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.18187929689884186
    2. 'shift' → logprob: -1.8068792819976807
    3. ' shift' → logprob: -7.55687952041626
    4. ' chr' → logprob: -7.93187952041626
    5. ' character' → logprob: -8.181879043579102
    6. 'chr' → logprob: -8.181879043579102
    7. ' not' → logprob: -8.556879043579102
    8. 'character' → logprob: -8.931879043579102
    9. ' ' → logprob: -9.556879043579102
    10. ' (' → logprob: -9.681879043579102

Token 49: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.017242757603526115
    2. 'ed' → logprob: -4.517242908477783
    3. '_offset' → logprob: -5.267242908477783
    4. 'ascii' → logprob: -7.517242908477783
    5. 's' → logprob: -8.892242431640625
    6. '_shift' → logprob: -9.142242431640625
    7. 'ing' → logprob: -9.892242431640625
    8. 'shift' → logprob: -10.392242431640625
    9. '_as' → logprob: -10.517242431640625
    10. '_' → logprob: -10.767242431640625

Token 50: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.033687885850667953
    2. '>' → logprob: -3.4086878299713135
    3. ' <' → logprob: -10.658687591552734
    4. ' <=' → logprob: -11.783687591552734
    5. ' >=' → logprob: -12.533687591552734
    6. '<' → logprob: -13.158687591552734
    7. '<|end|>' → logprob: -13.408687591552734
    8. ' ' → logprob: -14.283687591552734
    9. ' ' → logprob: -14.408687591552734
    10. '>=' → logprob: -14.783687591552734

Token 51: ' ord' (ID: 6608)
  Prédit: '122'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '122' → logprob: -0.05613462254405022
    2. 'ord' → logprob: -3.0561347007751465
    3. '90' → logprob: -5.8061347007751465
    4. '(ord' → logprob: -6.3061347007751465
    5. ' ord' → logprob: -6.4311347007751465
    6. ' ' → logprob: -6.9311347007751465
    7. '126' → logprob: -10.181134223937988
    8. 'z' → logprob: -10.681134223937988
    9. '(' → logprob: -10.931134223937988
    10. '`' → logprob: -12.556134223937988

Token 52: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.791440293658525e-05
    2. '(' → logprob: -9.500078201293945
    3. ''z' → logprob: -13.250078201293945
    4. '("' → logprob: -14.000078201293945
    5. '(('' → logprob: -15.750078201293945
    6. 'z' → logprob: -16.125078201293945
    7. ''' → logprob: -16.250078201293945
    8. '(z' → logprob: -17.000078201293945
    9. ' ('' → logprob: -18.125078201293945
    10. ''s' → logprob: -18.375078201293945

Token 53: 'Z' (ID: 57)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -6.682846287731081e-05
    2. 'Z' → logprob: -10.250066757202148
    3. ''z' → logprob: -10.375066757202148
    4. '{' → logprob: -15.875066757202148
    5. '_z' → logprob: -17.37506675720215
    6. ' z' → logprob: -17.62506675720215
    7. '}' → logprob: -18.62506675720215
    8. ''' → logprob: -18.62506675720215
    9. '	z' → logprob: -18.75006675720215
    10. '`' → logprob: -18.75006675720215

Token 54: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.040831319987773895
    2. '):' → logprob: -3.2908313274383545
    3. ''):
' → logprob: -6.415831089019775
    4. ':' → logprob: -7.540831089019775
    5. '')' → logprob: -8.040831565856934
    6. ')' → logprob: -9.165831565856934
    7. ' ):' → logprob: -9.415831565856934
    8. '"):' → logprob: -10.290831565856934
    9. '':' → logprob: -10.540831565856934
    10. '):
' → logprob: -10.790831565856934

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04028002545237541
    2. '   ' → logprob: -4.165279865264893
    3. '    ' → logprob: -4.790279865264893
    4. ' shifted' → logprob: -5.165279865264893
    5. '        ' → logprob: -5.415279865264893
    6. ' return' → logprob: -6.665279865264893
    7. 'shift' → logprob: -7.665279865264893
    8. '<|end|>' → logprob: -7.665279865264893
    9. '\n' → logprob: -7.790279865264893
    10. 'return' → logprob: -8.29028034210205

Token 56: ' shifted' (ID: 58644)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.47427037358283997
    2. ' shifted' → logprob: -0.9742703437805176
    3. '
' → logprob: -9.099270820617676
    4. ' shift' → logprob: -10.474270820617676
    5. 'return' → logprob: -11.224270820617676
    6. '       ' → logprob: -11.724270820617676
    7. ' 
' → logprob: -11.974270820617676
    8. '```' → logprob: -12.099270820617676
    9. '_shift' → logprob: -12.349270820617676
    10. '   ' → logprob: -12.599270820617676

Token 57: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.000510260637383908
    2. 'ed' → logprob: -8.250510215759277
    3. '_' → logprob: -9.000510215759277
    4. 'ascii' → logprob: -9.250510215759277
    5. 'shift' → logprob: -11.375510215759277
    6. '```' → logprob: -12.625510215759277
    7. '_encoded' → logprob: -13.125510215759277
    8. '_shift' → logprob: -13.250510215759277
    9. '_ast' → logprob: -13.250510215759277
    10. 's' → logprob: -14.000510215759277

Token 58: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.8551910519599915
    2. '-' → logprob: -1.3551909923553467
    3. ' -=' → logprob: -1.7301909923553467
    4. '=' → logprob: -1.9801909923553467
    5. ' =' → logprob: -6.980191230773926
    6. ' -' → logprob: -7.355191230773926
    7. '+=' → logprob: -11.230191230773926
    8. '<|end|>' → logprob: -11.230191230773926
    9. ' ' → logprob: -12.480191230773926
    10. ')' → logprob: -12.980191230773926

Token 59: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '27' → logprob: -19.875036239624023
    4. '   ' → logprob: -19.875036239624023
    5. '```' → logprob: -21.625036239624023
    6. '2' → logprob: -22.250036239624023
    7. '  ' → logprob: -22.250036239624023
    8. '(' → logprob: -22.312536239624023
    9. '25' → logprob: -22.562536239624023
    10. '    ' → logprob: -22.625036239624023

Token 60: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.25
    4. '2' → logprob: -21.625
    5. '27' → logprob: -22.375
    6. '```' → logprob: -22.5
    7. 'Z' → logprob: -23.0625
    8. '026' → logprob: -23.0625
    9. '(' → logprob: -23.1875
    10. '  ' → logprob: -23.3125

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007691288483329117
    2. '
' → logprob: -8.125768661499023
    3. 'return' → logprob: -8.375768661499023
    4. ' return' → logprob: -8.875768661499023
    5. '    
' → logprob: -9.875768661499023
    6. '```' → logprob: -11.750768661499023
    7. 'else' → logprob: -11.875768661499023
    8. '<|end|>' → logprob: -12.000768661499023
    9. ' else' → logprob: -12.125768661499023
    10. ':return' → logprob: -12.375768661499023

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000875135709065944
    2. 'return' → logprob: -7.125874996185303
    3. ' return' → logprob: -9.625875473022461
    4. '```' → logprob: -13.000875473022461
    5. '       ' → logprob: -14.250875473022461
    6. '<|end|>' → logprob: -14.500875473022461
    7. 'else' → logprob: -14.875875473022461
    8. ')' → logprob: -15.500875473022461
    9. ':return' → logprob: -15.625875473022461
    10. '	return' → logprob: -15.875875473022461

Token 63: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6114127039909363
    2. 'return' (adapté à ' return') → logprob: -0.8614127039909363
    3. ' return' → logprob: -3.361412763595581
    4. 'else' → logprob: -8.86141300201416
    5. ' else' → logprob: -11.73641300201416
    6. ' ' → logprob: -12.36141300201416
    7. 'elif' → logprob: -12.48641300201416
    8. '	return' → logprob: -12.98641300201416
    9. '```' → logprob: -12.98641300201416
    10. '       ' → logprob: -14.61141300201416

Token 64: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.018153687939047813
    2. ' chr' → logprob: -4.018153667449951
    3. '(chr' → logprob: -12.51815414428711
    4. '_chr' → logprob: -16.76815414428711
    5. ' ' → logprob: -17.51815414428711
    6. 'char' → logprob: -17.51815414428711
    7. ' ' → logprob: -18.14315414428711
    8. 'Chr' → logprob: -19.14315414428711
    9. 'character' → logprob: -20.26815414428711
    10. ' Chr' → logprob: -20.26815414428711

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.014684110297821e-06
    2. 'shift' → logprob: -11.875008583068848
    3. ' (' → logprob: -14.500008583068848
    4. '(convert' → logprob: -14.875008583068848
    5. '(ord' → logprob: -15.750008583068848
    6. '(
' → logprob: -16.000009536743164
    7. '('' → logprob: -16.125009536743164
    8. '(`' → logprob: -16.375009536743164
    9. '(character' → logprob: -16.375009536743164
    10. ' shifted' → logprob: -16.375009536743164

Token 66: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.0206720617134124e-05
    2. ' shifted' → logprob: -11.50001049041748
    3. 'Shift' → logprob: -20.250009536743164
    4. '   ' → logprob: -20.375009536743164
    5. '```' → logprob: -20.375009536743164
    6. '_shift' → logprob: -20.500009536743164
    7. ')' → logprob: -21.000009536743164
    8. 'sh' → logprob: -21.500009536743164
    9. '.shift' → logprob: -21.625009536743164
    10. ' shift' → logprob: -21.625009536743164

Token 67: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.478889215737581e-05
    2. 'ted' → logprob: -10.625054359436035
    3. '_offset' → logprob: -12.000054359436035
    4. 'et' → logprob: -12.500054359436035
    5. ')' → logprob: -12.625054359436035
    6. 'eted' → logprob: -12.875054359436035
    7. 'sed' → logprob: -13.500054359436035
    8. 's' → logprob: -13.625054359436035
    9. 'e' → logprob: -13.625054359436035
    10. 't' → logprob: -13.750054359436035

Token 68: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.010907279327511787
    2. '_shift' → logprob: -5.260907173156738
    3. 'shift' → logprob: -5.885907173156738
    4. '_offset' → logprob: -6.510907173156738
    5. 'ascii' → logprob: -7.135907173156738
    6. '_as' → logprob: -7.885907173156738
    7. ')' → logprob: -10.010907173156738
    8. '_ast' → logprob: -10.385907173156738
    9. '_' → logprob: -10.510907173156738
    10. 's' → logprob: -11.385907173156738

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -19.625
    6. ')return' → logprob: -20.625
    7. ')}' → logprob: -20.625
    8. '),' → logprob: -20.75
    9. ')#' → logprob: -21.0
    10. ')

' → logprob: -21.0

Token 70: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5684584975242615
    2. 'result' → logprob: -1.6934585571289062
    3. 'print' → logprob: -1.9434585571289062
    4. 'shift' → logprob: -3.3184585571289062
    5. 'if' → logprob: -3.4434585571289062
    6. '#' → logprob: -4.443458557128906
    7. 'output' → logprob: -4.443458557128906
    8. '
' → logprob: -5.943458557128906
    9. 'i' → logprob: -6.193458557128906
    10. ' 
' → logprob: -6.443458557128906

Token 71: '_string' (ID: 8609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2708227038383484
    2. '=' → logprob: -1.8958227634429932
    3. '_string' → logprob: -2.770822763442993
    4. '_' → logprob: -3.770822763442993
    5. 'string' → logprob: -6.895822525024414
    6. '_str' → logprob: -8.520822525024414
    7. '_space' → logprob: -10.645822525024414
    8. '_char' → logprob: -10.770822525024414
    9. 's' → logprob: -10.895822525024414
    10. '_character' → logprob: -10.895822525024414

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028664853423833847
    2. '=' → logprob: -3.6536648273468018
    3. ' +=' → logprob: -6.653665065765381
    4. ' ' → logprob: -7.278665065765381
    5. '_' → logprob: -8.278664588928223
    6. '<|end|>' → logprob: -9.403664588928223
    7. '+=' → logprob: -11.528664588928223
    8. '_space' → logprob: -12.153664588928223
    9. ' =)' → logprob: -12.278664588928223
    10. ')' → logprob: -12.903664588928223

Token 73: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03916734829545021
    2. '''' → logprob: -3.2891674041748047
    3. '"' → logprob: -6.914167404174805
    4. ' ""' → logprob: -9.039167404174805
    5. ''' → logprob: -12.539167404174805
    6. ' ''' → logprob: -12.664167404174805
    7. '[]' → logprob: -12.914167404174805
    8. '""""' → logprob: -13.664167404174805
    9. '''.' → logprob: -14.164167404174805
    10. '"",' → logprob: -14.414167404174805

Token 74: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -18.75
    4. '```' → logprob: -19.5
    5. '	for' → logprob: -21.0
    6. '
' → logprob: -21.5
    7. 'i' → logprob: -21.625
    8. 'For' → logprob: -21.875
    9. '<|end|>' → logprob: -22.75
    10. 'if' → logprob: -22.875

Token 75: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3118540942668915
    2. ' character' → logprob: -1.4368541240692139
    3. ' char' → logprob: -4.061853885650635
    4. ' c' → logprob: -4.436853885650635
    5. 'character' → logprob: -7.311853885650635
    6. ' _' → logprob: -8.436854362487793
    7. ' i' → logprob: -9.436854362487793
    8. 'char' → logprob: -9.811854362487793
    9. 'c' → logprob: -10.186854362487793
    10. ' ch' → logprob: -10.436854362487793

Token 76: '_char' (ID: 23398)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.6535664796829224
    2. '_char' → logprob: -0.7785664796829224
    3. '_' → logprob: -4.028566360473633
    4. 'character' → logprob: -6.778566360473633
    5. '_string' → logprob: -7.278566360473633
    6. 'char' → logprob: -7.403566360473633
    7. '_c' → logprob: -8.653566360473633
    8. ' _' → logprob: -9.278566360473633
    9. ' character' → logprob: -9.278566360473633
    10. '_letter' → logprob: -10.028566360473633

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01829310692846775
    2. 'in' → logprob: -4.0182929039001465
    3. ' ' → logprob: -9.268293380737305
    4. '  ' → logprob: -10.893293380737305
    5. 's' → logprob: -11.143293380737305
    6. '	in' → logprob: -12.393293380737305
    7. 'acter' → logprob: -13.518293380737305
    8. ' i' → logprob: -13.768293380737305
    9. '   ' → logprob: -13.893293380737305
    10. 'a' → logprob: -14.018293380737305

Token 78: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740805923938751
    2. 'input' → logprob: -0.9740805625915527
    3. '(input' → logprob: -13.599081039428711
    4. ' range' → logprob: -14.224081039428711
    5. 'range' → logprob: -14.349081039428711
    6. '<input' → logprob: -15.224081039428711
    7. ' ' → logprob: -15.224081039428711
    8. '=input' → logprob: -15.724081039428711
    9. '_input' → logprob: -16.22408103942871
    10. 'user' → logprob: -16.59908103942871

Token 79: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.339278580620885e-06
    2. 'string' → logprob: -13.500001907348633
    3. '_' → logprob: -14.500001907348633
    4. '_str' → logprob: -15.750001907348633
    5. ' _' → logprob: -16.750001907348633
    6. '_STRING' → logprob: -16.750001907348633
    7. 'String' → logprob: -17.125001907348633
    8. '_String' → logprob: -18.125001907348633
    9. '_line' → logprob: -18.125001907348633
    10. '_s' → logprob: -18.250001907348633

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010684162843972445
    2. ':
' → logprob: -7.001068592071533
    3. ' :' → logprob: -8.876068115234375
    4. '=' → logprob: -12.251068115234375
    5. '<|end|>' → logprob: -12.751068115234375
    6. '):' → logprob: -13.626068115234375
    7. ':

' → logprob: -13.626068115234375
    8. ' :
' → logprob: -13.751068115234375
    9. '<|end|>' → logprob: -14.251068115234375
    10. ',' → logprob: -14.251068115234375

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03269754722714424
    2. ' if' → logprob: -3.7826974391937256
    3. ' output' → logprob: -5.407697677612305
    4. ' ' → logprob: -6.282697677612305
    5. 'output' → logprob: -6.907697677612305
    6. ' 
' → logprob: -7.407697677612305
    7. '    
' → logprob: -7.657697677612305
    8. '    ' → logprob: -8.157697677612305
    9. '<|end|>' → logprob: -8.407697677612305
    10. '	output' → logprob: -9.157697677612305

Token 82: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.9426698684692383
    2. 'output' (adapté à ' output') → logprob: -1.0676698684692383
    3. ' if' → logprob: -1.4426698684692383
    4. 'if' → logprob: -4.192669868469238
    5. '   ' → logprob: -4.192669868469238
    6. '	output' → logprob: -10.067669868469238
    7. '    ' → logprob: -10.567669868469238
    8. '    
' → logprob: -11.567669868469238
    9. '```' → logprob: -11.942669868469238
    10. '       ' → logprob: -12.817669868469238

Token 83: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00013333676906768233
    2. '_' → logprob: -9.000133514404297
    3. '_char' → logprob: -11.875133514404297
    4. 'string' → logprob: -13.875133514404297
    5. '_character' → logprob: -13.875133514404297
    6. '_str' → logprob: -14.625133514404297
    7. 'String' → logprob: -15.500133514404297
    8. '_String' → logprob: -16.500133514404297
    9. '_STRING' → logprob: -16.750133514404297
    10. '_s' → logprob: -17.125133514404297

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023282868787646294
    2. '+=' → logprob: -3.773282766342163
    3. '+' → logprob: -10.898283004760742
    4. ' +' → logprob: -11.398283004760742
    5. '+='' → logprob: -12.773283004760742
    6. '=' → logprob: -13.023283004760742
    7. '+="' → logprob: -13.523283004760742
    8. ' =' → logprob: -14.023283004760742
    9. '+=(' → logprob: -15.648283004760742
    10. ' ' → logprob: -16.648283004760742

Token 85: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.06994020938873291
    2. ' apply' → logprob: -2.6949400901794434
    3. '.apply' → logprob: -13.444940567016602
    4. '   ' → logprob: -14.069940567016602
    5. 'app' → logprob: -14.319940567016602
    6. 'chr' → logprob: -14.944940567016602
    7. ' ' → logprob: -15.569940567016602
    8. 'ap' → logprob: -16.4449405670166
    9. '"' → logprob: -17.0699405670166
    10. '  ' → logprob: -17.2574405670166

Token 86: '_shift' (ID: 56354)
  Prédit: '_shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shift' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -12.75000286102295
    3. '_sh' → logprob: -15.37500286102295
    4. '_SHIFT' → logprob: -17.000003814697266
    5. '_step' → logprob: -18.125003814697266
    6. '_offset' → logprob: -19.250003814697266
    7. 'shift' → logprob: -19.375003814697266
    8. ' _' → logprob: -19.500003814697266
    9. '_strip' → logprob: -19.625003814697266
    10. '_split' → logprob: -19.875003814697266

Token 87: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.06244342774152756
    2. '(' → logprob: -2.812443494796753
    3. '(_' → logprob: -8.187443733215332
    4. '(_,' → logprob: -8.937443733215332
    5. ' (' → logprob: -10.562443733215332
    6. '_(' → logprob: -11.687443733215332
    7. '(
' → logprob: -12.312443733215332
    8. '('' → logprob: -12.687443733215332
    9. '(Current' → logprob: -12.687443733215332
    10. '_' → logprob: -12.812443733215332

Token 88: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.841743303695694e-05
    2. 'char' → logprob: -9.25009822845459
    3. 'shift' → logprob: -13.87509822845459
    4. 'Char' → logprob: -14.12509822845459
    5. '_string' → logprob: -16.250099182128906
    6. '_CHAR' → logprob: -16.375099182128906
    7. 'ar' → logprob: -16.375099182128906
    8. 'string' → logprob: -16.625099182128906
    9. '_' → logprob: -16.750099182128906
    10. '_str' → logprob: -17.000099182128906

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.375016212463379
    3. 'shift' → logprob: -12.875016212463379
    4. ')' → logprob: -13.375016212463379
    5. '_shift' → logprob: -16.125017166137695
    6. ',
' → logprob: -16.250017166137695
    7. ' ' → logprob: -16.500017166137695
    8. '   ' → logprob: -16.750017166137695
    9. 'Shift' → logprob: -17.375017166137695
    10. '```' → logprob: -17.375017166137695

Token 90: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.03804252669215202
    2. 'shift' → logprob: -3.2880425453186035
    3. ')' → logprob: -15.038042068481445
    4. '_shift' → logprob: -15.413042068481445
    5. ' ' → logprob: -16.038042068481445
    6. '.shift' → logprob: -16.163042068481445
    7. 'sh' → logprob: -16.538042068481445
    8. 'Shift' → logprob: -16.663042068481445
    9. ' ' → logprob: -16.788042068481445
    10. ' shifts' → logprob: -17.038042068481445

Token 91: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -4.246537173457909e-06
    2. '_off' → logprob: -12.625003814697266
    3. '_shift' → logprob: -15.250003814697266
    4. '_' → logprob: -15.500003814697266
    5. 'offset' → logprob: -16.125003814697266
    6. '_amount' → logprob: -16.750003814697266
    7. '_o' → logprob: -17.125003814697266
    8. '_OFFSET' → logprob: -17.375003814697266
    9. '_offsets' → logprob: -17.375003814697266
    10. '__' → logprob: -17.875003814697266

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -16.000003814697266
    4. ')`' → logprob: -16.625003814697266
    5. '))' → logprob: -16.875003814697266
    6. ')

' → logprob: -17.500003814697266
    7. ')
' → logprob: -18.250003814697266
    8. '')' → logprob: -20.000003814697266
    9. '),' → logprob: -20.500003814697266
    10. ')**' → logprob: -20.750003814697266

Token 93: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.750000953674316
    3. '
' → logprob: -15.125000953674316
    4. '#print' → logprob: -16.875
    5. '<|end|>' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. ')' → logprob: -18.125
    8. '(print' → logprob: -18.375
    9. 'pr' → logprob: -18.875
    10. '#' → logprob: -19.125

Token 94: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005420754197984934
    2. '(output' → logprob: -5.255420684814453
    3. '("("' → logprob: -9.005420684814453
    4. '('' → logprob: -9.880420684814453
    5. '()' → logprob: -12.005420684814453
    6. '(`' → logprob: -13.130420684814453
    7. '(open' → logprob: -13.880420684814453
    8. ' (' → logprob: -14.130420684814453
    9. '(input' → logprob: -14.380420684814453
    10. '(parent' → logprob: -14.630420684814453

Token 95: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00015002528380136937
    2. '_' → logprob: -9.250149726867676
    3. '_str' → logprob: -10.250149726867676
    4. 'string' → logprob: -12.250149726867676
    5. '_s' → logprob: -12.625149726867676
    6. '_strings' → logprob: -12.625149726867676
    7. ')_' → logprob: -13.000149726867676
    8. '```' → logprob: -14.125149726867676
    9. '_output' → logprob: -14.375149726867676
    10. ')' → logprob: -14.375149726867676

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -16.75
    4. ')
' → logprob: -18.125
    5. ')`' → logprob: -18.375
    6. '')' → logprob: -18.625
    7. '`)' → logprob: -19.75
    8. '")' → logprob: -20.625
    9. '）' → logprob: -21.25
    10. '()' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 94
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 52.13%
Précision adaptée (1ère position): 52.13%
Précision (top 10): 80.85%
================================================================================
