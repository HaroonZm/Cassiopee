================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd as greatest_common_divisor

def weird_input():
    *pairs, = input().split()
    return map(int, pairs)

class LCMCalculator:
    def __init__(self, values):
        self.x, self.y = values
    
    def __invert__(self):
        return (self.x * self.y) // greatest_common_divisor(self.x, self.y)

numbers = weird_input()
calculator = LCMCalculator(numbers)
print(~calculator)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.5038918256759644
    2. ' sqrt' → logprob: -1.0038918256759644
    3. ' pi' → logprob: -4.628891944885254
    4. 'pow' → logprob: -5.003891944885254
    5. 'pi' → logprob: -5.378891944885254
    6. 'sin' → logprob: -5.503891944885254
    7. ' sin' → logprob: -6.878891944885254
    8. 's' → logprob: -7.253891944885254
    9. ' ceil' → logprob: -7.628891944885254
    10. 'ceil' → logprob: -7.878891944885254

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004503584932535887
    2. '\(' → logprob: -5.7545037269592285
    3. '\n' → logprob: -7.5045037269592285
    4. '(
' → logprob: -7.7545037269592285
    5. '\' → logprob: -8.87950325012207
    6. ',' → logprob: -10.00450325012207
    7. ' (' → logprob: -10.00450325012207
    8. 'a' → logprob: -10.37950325012207
    9. 'def' → logprob: -10.75450325012207
    10. '```' → logprob: -11.00450325012207

Token 5: ' greatest' (ID: 16983)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6174954771995544
    2. ' gcd' → logprob: -0.9924954771995544
    3. ' g' → logprob: -2.867495536804199
    4. '_g' → logprob: -3.742495536804199
    5. ' math' → logprob: -4.867495536804199
    6. 'math' → logprob: -7.617495536804199
    7. '	g' → logprob: -8.4924955368042
    8. '`' → logprob: -8.6174955368042
    9. ' gc' → logprob: -8.6174955368042
    10. ' ' → logprob: -8.7424955368042

Token 6: '_common' (ID: 49800)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2051844745874405
    2. '_common' → logprob: -1.7051844596862793
    3. 'common' → logprob: -6.580184459686279
    4. '_space' → logprob: -7.205184459686279
    5. '<|end|>' → logprob: -7.580184459686279
    6. '_token' → logprob: -7.705184459686279
    7. ' _' → logprob: -8.955184936523438
    8. '_g' → logprob: -9.080184936523438
    9. ' common' → logprob: -9.205184936523438
    10. ' ' → logprob: -10.205184936523438

Token 7: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0987800806760788
    2. '(' → logprob: -2.4737801551818848
    3. '\' → logprob: -6.098780155181885
    4. '<|end|>' → logprob: -6.098780155181885
    5. '_token' → logprob: -6.723780155181885
    6. '```' → logprob: -7.098780155181885
    7. '\(' → logprob: -7.223780155181885
    8. '__' → logprob: -7.973780155181885
    9. ',' → logprob: -8.473779678344727
    10. 'a' → logprob: -8.973779678344727

Token 8: 'isor' (ID: 65473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5658741593360901
    2. 'isible' → logprob: -1.6908740997314453
    3. '(' → logprob: -1.8158740997314453
    4. '\' → logprob: -4.190874099731445
    5. 'ision' → logprob: -4.440874099731445
    6. 'ide' → logprob: -4.940874099731445
    7. 'g' → logprob: -5.190874099731445
    8. 'erg' → logprob: -5.190874099731445
    9. 'erge' → logprob: -5.440874099731445
    10. 's' → logprob: -5.565874099731445

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008831304498016834
    2. ',' → logprob: -5.50883150100708
    3. '(
' → logprob: -6.25883150100708
    4. ' (' → logprob: -7.00883150100708
    5. '\(' → logprob: -7.13383150100708
    6. '\n' → logprob: -7.75883150100708
    7. '
' → logprob: -8.758831024169922
    8. '<|end|>' → logprob: -8.883831024169922
    9. '\' → logprob: -9.383831024169922
    10. '```' → logprob: -9.758831024169922

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00989066157490015
    2. ',' → logprob: -5.384890556335449
    3. ' (' → logprob: -6.634890556335449
    4. '(
' → logprob: -7.134890556335449
    5. '\(' → logprob: -7.384890556335449
    6. '\n' → logprob: -7.384890556335449
    7. '\' → logprob: -7.509890556335449
    8. '
' → logprob: -7.634890556335449
    9. '<|end|>' → logprob: -8.13489055633545
    10. 'a' → logprob: -9.13489055633545

Token 11: ' weird' (ID: 28783)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0011670070234686136
    2. ' gcd' → logprob: -7.501166820526123
    3. ' calculate' → logprob: -7.626166820526123
    4. ' compute' → logprob: -10.501167297363281
    5. ' find' → logprob: -11.001167297363281
    6. ' greatest' → logprob: -11.501167297363281
    7. '_' → logprob: -11.626167297363281
    8. ' divide' → logprob: -11.876167297363281
    9. ' space' → logprob: -11.876167297363281
    10. ' factor' → logprob: -12.126167297363281

Token 12: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015666383551433682
    2. '(' → logprob: -7.751566410064697
    3. '_function' → logprob: -8.501566886901855
    4. '_space' → logprob: -8.501566886901855
    5. '_:' → logprob: -8.501566886901855
    6. '_factor' → logprob: -9.376566886901855
    7. '_case' → logprob: -10.126566886901855
    8. ' _' → logprob: -10.251566886901855
    9. '_number' → logprob: -10.376566886901855
    10. '```' → logprob: -10.501566886901855

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007965262979269028
    2. '_' → logprob: -5.007965087890625
    3. '_parent' → logprob: -8.257965087890625
    4. 's' → logprob: -8.382965087890625
    5. '(_' → logprob: -8.507965087890625
    6. ' (' → logprob: -9.757965087890625
    7. '_input' → logprob: -9.757965087890625
    8. '("("' → logprob: -10.257965087890625
    9. '_(' → logprob: -10.382965087890625
    10. '(_:' → logprob: -10.507965087890625

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3699091374874115
    2. '(' → logprob: -1.4949091672897339
    3. '```' → logprob: -3.2449090480804443
    4. '():' → logprob: -4.119909286499023
    5. '()' → logprob: -4.869909286499023
    6. ':' → logprob: -4.869909286499023
    7. '(
' → logprob: -5.244909286499023
    8. ' ' → logprob: -6.244909286499023
    9. '`' → logprob: -6.869909286499023
    10. ''' → logprob: -7.119909286499023

Token 15: ' *' (ID: 425)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34210580587387085
    2. ' return' → logprob: -1.4671058654785156
    3. '   ' → logprob: -3.3421058654785156
    4. 'x' → logprob: -5.467105865478516
    5. 'input' → logprob: -5.467105865478516
    6. 'n' → logprob: -5.717105865478516
    7. ' ' → logprob: -5.842105865478516
    8. 'r' → logprob: -6.342105865478516
    9. ' input' → logprob: -6.717105865478516
    10. 'user' → logprob: -7.092105865478516

Token 16: 'pairs' (ID: 175838)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.4581730365753174
    2. 'input' → logprob: -1.7081730365753174
    3. 'return' → logprob: -1.9581730365753174
    4. 'n' → logprob: -2.0831730365753174
    5. 'x' → logprob: -3.0831730365753174
    6. 'user' → logprob: -3.2081730365753174
    7. '   ' → logprob: -3.2081730365753174
    8. 'value' → logprob: -3.3331730365753174
    9. 'inp' → logprob: -3.8331730365753174
    10. '_' → logprob: -3.9581730365753174

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3080897927284241
    2. '=' → logprob: -1.6830897331237793
    3. ',' → logprob: -2.5580897331237793
    4. ')' → logprob: -7.808089733123779
    5. '.' → logprob: -8.058090209960938
    6. ' ' → logprob: -8.183090209960938
    7. '[' → logprob: -8.433090209960938
    8. ' ,' → logprob: -8.683090209960938
    9. 's' → logprob: -9.433090209960938
    10. '(' → logprob: -9.558090209960938

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14866936206817627
    2. '=' → logprob: -2.2736692428588867
    3. 'rest' → logprob: -5.023669242858887
    4. ' rest' → logprob: -5.148669242858887
    5. ' ' → logprob: -5.523669242858887
    6. ' line' → logprob: -5.898669242858887
    7. '_' → logprob: -6.023669242858887
    8. ' remainder' → logprob: -6.398669242858887
    9. ' x' → logprob: -7.148669242858887
    10. '   ' → logprob: -7.148669242858887

Token 19: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1198287382721901
    2. ' map' → logprob: -2.494828701019287
    3. '[' → logprob: -4.244828701019287
    4. '[int' → logprob: -4.869828701019287
    5. 'input' → logprob: -5.619828701019287
    6. '[input' → logprob: -6.619828701019287
    7. 'list' → logprob: -6.994828701019287
    8. '(map' → logprob: -7.619828701019287
    9. '[]' → logprob: -7.619828701019287
    10. ' [' → logprob: -7.994828701019287

Token 20: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03199480101466179
    2. '('' → logprob: -3.6569948196411133
    3. '("("' → logprob: -5.656994819641113
    4. '"' → logprob: -7.531994819641113
    5. '()' → logprob: -7.531994819641113
    6. '("' → logprob: -8.156994819641113
    7. ''' → logprob: -8.281994819641113
    8. '```' → logprob: -9.281994819641113
    9. ''s' → logprob: -9.656994819641113
    10. '`' → logprob: -10.031994819641113

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01419759076088667
    2. 'strip' → logprob: -4.264197826385498
    3. 'rstrip' → logprob: -10.38919734954834
    4. 'spl' → logprob: -13.63919734954834
    5. ' split' → logprob: -14.01419734954834
    6. 'replace' → logprob: -14.13919734954834
    7. '(split' → logprob: -14.88919734954834
    8. 's' → logprob: -16.514198303222656
    9. '```' → logprob: -16.514198303222656
    10. 'sp' → logprob: -16.514198303222656

Token 22: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.37519535422325134
    2. '(' → logprob: -1.2501953840255737
    3. '("("' → logprob: -4.125195503234863
    4. '()' → logprob: -4.625195503234863
    5. '("' → logprob: -8.875195503234863
    6. ''' → logprob: -9.375195503234863
    7. '"' → logprob: -10.375195503234863
    8. '((' → logprob: -10.500195503234863
    9. '(
' → logprob: -10.625195503234863
    10. '('.')' → logprob: -10.875195503234863

Token 23: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0423076152801514
    2. '[
' → logprob: -1.9173076152801514
    3. '   ' → logprob: -2.1673076152801514
    4. 'for' → logprob: -2.7923076152801514
    5. '```' → logprob: -3.1673076152801514
    6. '[i' → logprob: -3.5423076152801514
    7. '
' → logprob: -3.9173076152801514
    8. ',
' → logprob: -3.9173076152801514
    9. '.' → logprob: -3.9173076152801514
    10. ',' → logprob: -3.9173076152801514

Token 24: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9573262929916382
    2. '=' → logprob: -2.3323264122009277
    3. ' ' → logprob: -2.8323264122009277
    4. ',' → logprob: -2.9573264122009277
    5. '   ' → logprob: -2.9573264122009277
    6. ')' → logprob: -3.2073264122009277
    7. ' =' → logprob: -3.2073264122009277
    8. '(' → logprob: -3.4573264122009277
    9. '\n' → logprob: -3.4573264122009277
    10. '[
' → logprob: -3.4573264122009277

Token 25: ' map' (ID: 4014)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.18451690673828125
    2. ' [(' → logprob: -1.9345169067382812
    3. '[p' → logprob: -4.184516906738281
    4. '[int' → logprob: -5.309516906738281
    5. '[' → logprob: -6.309516906738281
    6. ' [' → logprob: -6.934516906738281
    7. ' pairs' → logprob: -7.684516906738281
    8. 'pairs' → logprob: -7.934516906738281
    9. '[((' → logprob: -9.559516906738281
    10. '[list' → logprob: -9.684516906738281

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2400664985179901
    2. '(lambda' → logprob: -1.7400665283203125
    3. '(' → logprob: -3.3650665283203125
    4. '(str' → logprob: -7.1150665283203125
    5. '(g' → logprob: -7.1150665283203125
    6. 'great' → logprob: -7.7400665283203125
    7. '[int' → logprob: -7.7400665283203125
    8. '(pair' → logprob: -8.740066528320312
    9. '(p' → logprob: -8.865066528320312
    10. '(tuple' → logprob: -8.865066528320312

Token 27: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13776706159114838
    2. '(' → logprob: -2.2627670764923096
    3. ',' → logprob: -3.8877670764923096
    4. ')' → logprob: -6.7627668380737305
    5. ' (' → logprob: -7.5127668380737305
    6. '(*' → logprob: -7.6377668380737305
    7. ' pairs' → logprob: -7.8877668380737305
    8. 'pairs' → logprob: -7.8877668380737305
    9. ' ,' → logprob: -8.01276683807373
    10. ',p' → logprob: -8.13776683807373

Token 28: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.14272361993789673
    2. ' pairs' → logprob: -2.017723560333252
    3. ')' → logprob: -11.14272403717041
    4. '   ' → logprob: -11.39272403717041
    5. '_pairs' → logprob: -11.76772403717041
    6. ' ' → logprob: -12.39272403717041
    7. 'pair' → logprob: -12.76772403717041
    8. '[p' → logprob: -13.39272403717041
    9. 'p' → logprob: -13.39272403717041
    10. ')p' → logprob: -13.64272403717041

Token 29: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.662937372922897e-05
    2. '   ' → logprob: -9.750096321105957
    3. '[' → logprob: -11.625096321105957
    4. ' )' → logprob: -11.625096321105957
    5. '`)' → logprob: -11.875096321105957
    6. '))' → logprob: -12.250096321105957
    7. ')
' → logprob: -13.625096321105957
    8. '),' → logprob: -13.875096321105957
    9. ')))' → logprob: -13.875096321105957
    10. ')`' → logprob: -13.875096321105957

Token 30: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8895084261894226
    2. '<|end|>' → logprob: -2.0145084857940674
    3. '(
' → logprob: -2.2645084857940674
    4. 'def' → logprob: -2.5145084857940674
    5. '
' → logprob: -2.6395084857940674
    6. ',' → logprob: -3.3895084857940674
    7. ')' → logprob: -3.5145084857940674
    8. '\n' → logprob: -3.6395084857940674
    9. '```' → logprob: -4.014508247375488
    10. 'newline' → logprob: -4.014508247375488

Token 31: ' L' (ID: 451)
  Prédit: ' Weird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Weird' → logprob: -0.30228132009506226
    2. ' Fraction' → logprob: -2.302281379699707
    3. ' Strange' → logprob: -2.802281379699707
    4. ' Solution' → logprob: -3.802281379699707
    5. ' Pair' → logprob: -3.927281379699707
    6. ' We' → logprob: -4.302281379699707
    7. ' Factor' → logprob: -4.677281379699707
    8. ' Number' → logprob: -5.177281379699707
    9. ' Cop' → logprob: -5.677281379699707
    10. ' Counter' → logprob: -5.677281379699707

Token 32: 'CM' (ID: 14170)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -1.0556410551071167
    2. 'CM' → logprob: -1.6806410551071167
    3. 'e' → logprob: -1.8056410551071167
    4. 'ong' → logprob: -2.6806411743164062
    5. 'ist' → logprob: -2.9306411743164062
    6. 'RU' → logprob: -3.5556411743164062
    7. 'CA' → logprob: -4.180641174316406
    8. 'cm' → logprob: -4.180641174316406
    9. 'eft' → logprob: -4.305641174316406
    10. 'ast' → logprob: -4.555641174316406

Token 33: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8100508451461792
    2. 'Calculator' → logprob: -0.9350508451461792
    3. '(' → logprob: -2.1850509643554688
    4. '(Base' → logprob: -3.9350509643554688
    5. '():' → logprob: -4.810050964355469
    6. 'Calcul' → logprob: -5.185050964355469
    7. '(:' → logprob: -5.310050964355469
    8. '(C' → logprob: -5.310050964355469
    9. 'Base' → logprob: -7.185050964355469
    10. 'Finder' → logprob: -7.310050964355469

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036025596782565117
    2. '(' → logprob: -6.003602504730225
    3. '():' → logprob: -7.128602504730225
    4. '(:' → logprob: -9.003602981567383
    5. ':**' → logprob: -9.878602981567383
    6. ' :' → logprob: -10.503602981567383
    7. '):' → logprob: -10.753602981567383
    8. '<|end|>' → logprob: -10.878602981567383
    9. '   ' → logprob: -11.628602981567383
    10. '```' → logprob: -11.628602981567383

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11797458678483963
    2. '   ' → logprob: -2.3679745197296143
    3. ':
' → logprob: -4.492974758148193
    4. '(' → logprob: -5.617974758148193
    5. '():' → logprob: -7.367974758148193
    6. '    
' → logprob: -7.867974758148193
    7. ':def' → logprob: -7.992974758148193
    8. '(object' → logprob: -8.117974281311035
    9. 'def' → logprob: -8.492974281311035
    10. ' def' → logprob: -8.742974281311035

Token 36: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02169099822640419
    2. 'def' (adapté à ' def') → logprob: -4.021690845489502
    3. '   ' → logprob: -5.646690845489502
    4. '    ' → logprob: -12.89669132232666
    5. ' ' → logprob: -13.52169132232666
    6. '	def' → logprob: -13.64669132232666
    7. '  ' → logprob: -15.64669132232666
    8. '```' → logprob: -15.77169132232666
    9. ':def' → logprob: -16.646690368652344
    10. '    
' → logprob: -16.646690368652344

Token 37: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15624749660491943
    2. '_' → logprob: -3.156247615814209
    3. '__' → logprob: -3.156247615814209
    4. ' ' → logprob: -3.531247615814209
    5. ' _' → logprob: -4.031247615814209
    6. ' init' → logprob: -6.031247615814209
    7. 'n' → logprob: -6.031247615814209
    8. '_init' → logprob: -6.156247615814209
    9. 'init' → logprob: -6.281247615814209
    10. 'nit' → logprob: -6.281247615814209

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1160349458805285e-05
    2. 'ini' → logprob: -11.500011444091797
    3. ' init' → logprob: -14.625011444091797
    4. 'i' → logprob: -15.250011444091797
    5. 'in' → logprob: -15.500011444091797
    6. 'int' → logprob: -18.625011444091797
    7. 'inite' → logprob: -19.625011444091797
    8. '  ' → logprob: -19.750011444091797
    9. ' ' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.000011444091797

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011070695705711842
    2. '__' → logprob: -4.511070728302002
    3. '__(
' → logprob: -11.386070251464844
    4. '__((' → logprob: -12.011070251464844
    5. '__('' → logprob: -12.511070251464844
    6. '__(*' → logprob: -14.011070251464844
    7. '___' → logprob: -14.636070251464844
    8. '(self' → logprob: -15.511070251464844
    9. '__("' → logprob: -16.136070251464844
    10. '_(' → logprob: -16.886070251464844

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011069757863879204
    2. ' self' → logprob: -4.5110697746276855
    3. '   ' → logprob: -11.136069297790527
    4. ' ' → logprob: -12.761069297790527
    5. ')' → logprob: -12.886069297790527
    6. '       ' → logprob: -14.136069297790527
    7. '	self' → logprob: -14.386069297790527
    8. '(self' → logprob: -15.886069297790527
    9. '0' → logprob: -16.261070251464844
    10. '  ' → logprob: -16.511070251464844

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022813741117715836
    2. ' ,' → logprob: -4.52281379699707
    3. 'self' → logprob: -4.64781379699707
    4. '):' → logprob: -7.27281379699707
    5. ',self' → logprob: -7.27281379699707
    6. '_self' → logprob: -8.27281379699707
    7. ' self' → logprob: -8.52281379699707
    8. ')' → logprob: -9.39781379699707
    9. ' ):' → logprob: -9.77281379699707
    10. '   ' → logprob: -10.77281379699707

Token 42: ' values' (ID: 4824)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14624741673469543
    2. ' self' → logprob: -2.521247386932373
    3. 'numbers' → logprob: -3.271247386932373
    4. ' numbers' → logprob: -4.271247386932373
    5. '   ' → logprob: -6.771247386932373
    6. 'n' → logprob: -7.521247386932373
    7. 'nums' → logprob: -7.646247386932373
    8. 'pairs' → logprob: -7.771247386932373
    9. 'a' → logprob: -8.021247863769531
    10. 'values' → logprob: -8.396247863769531

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016952957957983017
    2. ':' → logprob: -7.001695156097412
    3. ' ):' → logprob: -7.876695156097412
    4. ')' → logprob: -8.00169563293457
    5. '):
' → logprob: -9.87669563293457
    6. '=' → logprob: -11.75169563293457
    7. '=None' → logprob: -13.00169563293457
    8. ',' → logprob: -13.37669563293457
    9. ' :' → logprob: -13.37669563293457
    10. '):
' → logprob: -14.12669563293457

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014126161113381386
    2. ' self' → logprob: -7.126412391662598
    3. '   ' → logprob: -8.626412391662598
    4. 'self' → logprob: -9.126412391662598
    5. ',' → logprob: -9.626412391662598
    6. '<|end|>' → logprob: -10.251412391662598
    7. '        
' → logprob: -10.251412391662598
    8. '):
' → logprob: -10.626412391662598
    9. ':' → logprob: -10.626412391662598
    10. '      ' → logprob: -10.876412391662598

Token 45: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.030857060104608536
    2. '       ' → logprob: -4.030857086181641
    3. 'self' (adapté à ' self') → logprob: -4.405857086181641
    4. '        ' → logprob: -8.15585708618164
    5. ' ' → logprob: -9.28085708618164
    6. '    ' → logprob: -11.15585708618164
    7. '   ' → logprob: -11.28085708618164
    8. '	self' → logprob: -11.65585708618164
    9. '      ' → logprob: -13.65585708618164
    10. '     ' → logprob: -14.15585708618164

Token 46: '.x' (ID: 3700)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.023539993911981583
    2. '.' → logprob: -4.023540019989014
    3. '_values' → logprob: -6.398540019989014
    4. ' =' → logprob: -6.398540019989014
    5. 'values' → logprob: -6.523540019989014
    6. '=' → logprob: -8.273539543151855
    7. ' .' → logprob: -8.773539543151855
    8. '   ' → logprob: -9.398539543151855
    9. ' ' → logprob: -10.648539543151855
    10. '.value' → logprob: -11.148539543151855

Token 47: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6504310965538025
    2. '_values' → logprob: -1.1504311561584473
    3. '=' → logprob: -2.5254311561584473
    4. 's' → logprob: -2.7754311561584473
    5. '_' → logprob: -5.150431156158447
    6. 'values' → logprob: -5.650431156158447
    7. '_vals' → logprob: -5.650431156158447
    8. ',' → logprob: -5.775431156158447
    9. '   ' → logprob: -6.400431156158447
    10. ' ' → logprob: -7.025431156158447

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01467486284673214
    2. ' self' → logprob: -4.764674663543701
    3. '*self' → logprob: -5.764674663543701
    4. 'y' → logprob: -6.014674663543701
    5. '*y' → logprob: -8.88967514038086
    6. ' *' → logprob: -9.13967514038086
    7. '*' → logprob: -9.63967514038086
    8. '=self' → logprob: -9.76467514038086
    9. 'values' → logprob: -10.38967514038086
    10. ' ' → logprob: -11.26467514038086

Token 49: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.054419394582509995
    2. '_y' → logprob: -3.0544192790985107
    3. '=' → logprob: -6.05441951751709
    4. '_' → logprob: -6.67941951751709
    5. '_values' → logprob: -7.17941951751709
    6. ' =' → logprob: -7.42941951751709
    7. 's' → logprob: -8.67941951751709
    8. '.y' → logprob: -9.05441951751709
    9. ',' → logprob: -9.30441951751709
    10. 'values' → logprob: -9.55441951751709

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868813216686249
    2. '=' → logprob: -1.1368813514709473
    3. ',' → logprob: -12.386880874633789
    4. ' ' → logprob: -13.261880874633789
    5. '  ' → logprob: -13.636880874633789
    6. '    ' → logprob: -14.011880874633789
    7. '<|end|>' → logprob: -14.011880874633789
    8. '   ' → logprob: -14.386880874633789
    9. ')' → logprob: -15.011880874633789
    10. '<|end|>' → logprob: -15.136880874633789

Token 51: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.04885929077863693
    2. 'values' → logprob: -3.0488593578338623
    3. ' map' → logprob: -8.298859596252441
    4. ' tuple' → logprob: -11.923859596252441
    5. 'map' → logprob: -12.173859596252441
    6. '	values' → logprob: -12.423859596252441
    7. ' list' → logprob: -12.548859596252441
    8. '(values' → logprob: -13.548859596252441
    9. ' ' → logprob: -14.048859596252441
    10. ' next' → logprob: -14.423859596252441

Token 52: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22937723994255066
    2. '<|end|>' → logprob: -1.729377269744873
    3. '

' → logprob: -4.979377269744873
    4. ' 
' → logprob: -5.479377269744873
    5. 'def' → logprob: -5.604377269744873
    6. '    
' → logprob: -5.854377269744873
    7. '<|end|>' → logprob: -5.979377269744873
    8. '   ' → logprob: -5.979377269744873
    9. ' def' → logprob: -6.604377269744873
    10. '  
' → logprob: -7.104377269744873

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2863481640815735
    2. '
' → logprob: -1.5363481044769287
    3. 'def' → logprob: -3.9113481044769287
    4. '    
' → logprob: -4.661348342895508
    5. ' def' → logprob: -5.786348342895508
    6. '       ' → logprob: -8.411348342895508
    7. '

' → logprob: -8.536348342895508
    8. ' ' → logprob: -8.536348342895508
    9. '<|end|>' → logprob: -8.661348342895508
    10. '        
' → logprob: -8.786348342895508

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5286055207252502
    2. ' def' → logprob: -0.9036055207252502
    3. '   ' → logprob: -5.2786054611206055
    4. '
' → logprob: -8.528605461120605
    5. '    
' → logprob: -10.153605461120605
    6. '       ' → logprob: -10.528605461120605
    7. ' ' → logprob: -10.653605461120605
    8. ' 
' → logprob: -10.778605461120605
    9. '	def' → logprob: -10.903605461120605
    10. '  ' → logprob: -11.903605461120605

Token 55: ' __' (ID: 2516)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.970212996006012
    2. ' l' → logprob: -1.2202129364013672
    3. ' compute' → logprob: -1.2202129364013672
    4. 'l' → logprob: -4.595212936401367
    5. 'calculate' → logprob: -4.970212936401367
    6. '_l' → logprob: -5.220212936401367
    7. 'compute' → logprob: -5.845212936401367
    8. ' get' → logprob: -6.720212936401367
    9. ' _' → logprob: -6.845212936401367
    10. ' find' → logprob: -7.095212936401367

Token 56: 'invert' (ID: 190492)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.037128616124391556
    2. 'str' → logprob: -4.287128448486328
    3. 'mul' → logprob: -4.662128448486328
    4. 'call' → logprob: -5.412128448486328
    5. 'repr' → logprob: -5.662128448486328
    6. 'lt' → logprob: -6.287128448486328
    7. 'or' → logprob: -6.787128448486328
    8. 'add' → logprob: -7.037128448486328
    9. 'eq' → logprob: -7.412128448486328
    10. 'l' → logprob: -7.912128448486328

Token 57: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7290835380554199
    2. '__(' → logprob: -0.7290835380554199
    3. '(' → logprob: -3.47908353805542
    4. ' (' → logprob: -6.85408353805542
    5. ')(' → logprob: -6.97908353805542
    6. 'self' → logprob: -7.22908353805542
    7. '__' → logprob: -7.47908353805542
    8. '_(' → logprob: -7.47908353805542
    9. '   ' → logprob: -8.604084014892578
    10. '}(' → logprob: -9.479084014892578

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005038236267864704
    2. ')' → logprob: -8.375503540039062
    3. '   ' → logprob: -8.875503540039062
    4. ' self' → logprob: -9.125503540039062
    5. '):
' → logprob: -11.375503540039062
    6. '       ' → logprob: -12.375503540039062
    7. '(self' → logprob: -13.000503540039062
    8. ' ' → logprob: -13.000503540039062
    9. '):' → logprob: -13.125503540039062
    10. '
' → logprob: -14.375503540039062

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011498815380036831
    2. '):
' → logprob: -5.261498928070068
    3. 'self' → logprob: -5.761498928070068
    4. ')' → logprob: -5.886498928070068
    5. '   ' → logprob: -8.51149845123291
    6. ' ):' → logprob: -10.13649845123291
    7. '(self' → logprob: -10.63649845123291
    8. '       ' → logprob: -11.01149845123291
    9. '):
' → logprob: -11.76149845123291
    10. ' ' → logprob: -11.88649845123291

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002262186724692583
    2. ' return' → logprob: -6.627262115478516
    3. '        ' → logprob: -7.877262115478516
    4. 'return' → logprob: -8.502262115478516
    5. '      ' → logprob: -9.252262115478516
    6. '   ' → logprob: -9.752262115478516
    7. ')' → logprob: -10.127262115478516
    8. '    ' → logprob: -10.252262115478516
    9. ' self' → logprob: -10.877262115478516
    10. '           ' → logprob: -11.002262115478516

Token 61: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6062625646591187
    2. ' self' → logprob: -1.8562625646591187
    3. ' l' → logprob: -2.356262683868408
    4. 'return' (adapté à ' return') → logprob: -2.356262683868408
    5. '       ' → logprob: -3.231262683868408
    6. 'self' → logprob: -3.231262683868408
    7. 'l' → logprob: -4.356262683868408
    8. ' (' → logprob: -5.606262683868408
    9. ' gcd' → logprob: -5.731262683868408
    10. '   ' → logprob: -5.981262683868408

Token 62: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.49161285161972046
    2. '(self' → logprob: -1.6166129112243652
    3. 'self' → logprob: -2.3666129112243652
    4. ' self' → logprob: -2.7416129112243652
    5. ' ' → logprob: -3.7416129112243652
    6. '(' → logprob: -6.366612911224365
    7. '(abs' → logprob: -6.366612911224365
    8. 'abs' → logprob: -6.491612911224365
    9. ' abs' → logprob: -6.866612911224365
    10. '((' → logprob: -7.366612911224365

Token 63: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018796052783727646
    2. '(self' → logprob: -4.393795967102051
    3. ' self' → logprob: -5.268795967102051
    4. 'abs' → logprob: -7.393795967102051
    5. ' (' → logprob: -8.76879596710205
    6. '   ' → logprob: -8.89379596710205
    7. ' ' → logprob: -9.76879596710205
    8. '(' → logprob: -10.14379596710205
    9. '((' → logprob: -10.76879596710205
    10. '(abs' → logprob: -11.01879596710205

Token 64: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.764977686339989e-05
    2. '.' → logprob: -10.875057220458984
    3. ').' → logprob: -11.000057220458984
    4. 'x' → logprob: -11.375057220458984
    5. ' .' → logprob: -12.375057220458984
    6. '`.' → logprob: -13.750057220458984
    7. '".' → logprob: -13.875057220458984
    8. ''.' → logprob: -14.250057220458984
    9. '_.' → logprob: -14.750057220458984
    10. '().' → logprob: -14.875057220458984

Token 65: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020775679498910904
    2. '*' → logprob: -3.89577579498291
    3. ' ' → logprob: -9.14577579498291
    4. '*self' → logprob: -9.89577579498291
    5. '*y' → logprob: -10.27077579498291
    6. '*l' → logprob: -10.77077579498291
    7. '*b' → logprob: -12.64577579498291
    8. '*object' → logprob: -12.89577579498291
    9. '*g' → logprob: -12.89577579498291
    10. ' //' → logprob: -13.52077579498291

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05490090325474739
    2. ' self' → logprob: -2.929900884628296
    3. '   ' → logprob: -11.679901123046875
    4. '       ' → logprob: -12.429901123046875
    5. ' ' → logprob: -13.179901123046875
    6. '(self' → logprob: -13.179901123046875
    7. '	self' → logprob: -13.929901123046875
    8. '  ' → logprob: -14.554901123046875
    9. '    ' → logprob: -15.304901123046875
    10. '[self' → logprob: -15.554901123046875

Token 67: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006410692585632205
    2. '.' → logprob: -7.375640869140625
    3. 'y' → logprob: -11.500640869140625
    4. ')' → logprob: -13.125640869140625
    5. ' .' → logprob: -14.250640869140625
    6. '<|end|>' → logprob: -15.000640869140625
    7. ' ' → logprob: -15.125640869140625
    8. '   ' → logprob: -15.375640869140625
    9. ',' → logprob: -16.000640869140625
    10. '.py' → logprob: -16.375640869140625

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04887121170759201
    2. ' //' → logprob: -3.6738712787628174
    3. ' )' → logprob: -3.9238712787628174
    4. ')//' → logprob: -6.173871040344238
    5. '//' → logprob: -7.673871040344238
    6. '   ' → logprob: -13.048871040344238
    7. ' ' → logprob: -13.173871040344238
    8. ' ' → logprob: -14.798871040344238
    9. '       ' → logprob: -14.923871040344238
    10. '+' → logprob: -15.923871040344238

Token 69: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.006012102589011192
    2. '//' → logprob: -5.131011962890625
    3. ' /' → logprob: -10.131011962890625
    4. ' ' → logprob: -10.756011962890625
    5. ')' → logprob: -11.506011962890625
    6. '   ' → logprob: -12.881011962890625
    7. '  ' → logprob: -13.756011962890625
    8. '/' → logprob: -13.881011962890625
    9. ' ' → logprob: -13.881011962890625
    10. '       ' → logprob: -14.131011962890625

Token 70: ' greatest' (ID: 16983)
  Prédit: 'great'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'great' → logprob: -0.0003377270477358252
    2. ' greatest' → logprob: -8.000337600708008
    3. ' great' → logprob: -13.000337600708008
    4. 'g' → logprob: -17.875337600708008
    5. 'greater' → logprob: -18.375337600708008
    6. '(g' → logprob: -19.625337600708008
    7. 'Great' → logprob: -20.125337600708008
    8. 'gre' → logprob: -20.625337600708008
    9. '   ' → logprob: -21.000337600708008
    10. ' ' → logprob: -21.750337600708008

Token 71: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -1.1637164789135568e-05
    2. '_' → logprob: -11.500011444091797
    3. 'common' → logprob: -14.125011444091797
    4. '_comm' → logprob: -15.000011444091797
    5. '_current' → logprob: -16.000011444091797
    6. '_COMMON' → logprob: -16.875011444091797
    7. '_com' → logprob: -17.000011444091797
    8. '_possible' → logprob: -17.000011444091797
    9. '_shared' → logprob: -17.500011444091797
    10. '_basic' → logprob: -17.750011444091797

Token 72: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.04863244667649269
    2. 'div' → logprob: -3.0486323833465576
    3. '_' → logprob: -11.298632621765137
    4. 'or' → logprob: -12.298632621765137
    5. '_factor' → logprob: -12.298632621765137
    6. 'ly' → logprob: -12.423632621765137
    7. 'den' → logprob: -13.173632621765137
    8. 'f' → logprob: -13.173632621765137
    9. '_den' → logprob: -13.173632621765137
    10. '_common' → logprob: -13.298632621765137

Token 73: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.001933397026732564
    2. 'is' → logprob: -6.251933574676514
    3. 'isible' → logprob: -13.501933097839355
    4. 'os' → logprob: -13.751933097839355
    5. '_is' → logprob: -14.501933097839355
    6. 's' → logprob: -14.751933097839355
    7. '_' → logprob: -15.001933097839355
    8. 'esor' → logprob: -15.251933097839355
    9. ' is' → logprob: -15.876933097839355
    10. 'or' → logprob: -16.501934051513672

Token 74: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022919781506061554
    2. '(self' → logprob: -4.022919654846191
    3. '((' → logprob: -5.397919654846191
    4. '(x' → logprob: -9.022919654846191
    5. '(
' → logprob: -9.272919654846191
    6. ' (' → logprob: -11.397919654846191
    7. '(

' → logprob: -12.897919654846191
    8. '(None' → logprob: -14.022919654846191
    9. '(s' → logprob: -14.272919654846191
    10. '(y' → logprob: -14.647919654846191

Token 75: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.062237899750471115
    2. '.' → logprob: -2.8122379779815674
    3. '.y' → logprob: -8.562237739562988
    4. '.)' → logprob: -10.562237739562988
    5. ').' → logprob: -10.937237739562988
    6. 'x' → logprob: -10.937237739562988
    7. ')' → logprob: -12.812237739562988
    8. ' .' → logprob: -12.937237739562988
    9. ',' → logprob: -13.312237739562988
    10. '..' → logprob: -13.437237739562988

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005388548015616834
    2. ' ,' → logprob: -7.7505388259887695
    3. ',self' → logprob: -9.37553882598877
    4. ',y' → logprob: -10.75053882598877
    5. ',
' → logprob: -13.75053882598877
    6. '.y' → logprob: -15.12553882598877
    7. ' ' → logprob: -15.62553882598877
    8. 'self' → logprob: -16.250539779663086
    9. ',

' → logprob: -16.375539779663086
    10. '.' → logprob: -16.875539779663086

Token 77: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889264822006226
    2. ' self' → logprob: -2.578892707824707
    3. '   ' → logprob: -13.703892707824707
    4. '	self' → logprob: -14.453892707824707
    5. '(self' → logprob: -14.703892707824707
    6. ' ' → logprob: -14.703892707824707
    7. ')' → logprob: -16.70389175415039
    8. '    ' → logprob: -16.82889175415039
    9. '  ' → logprob: -17.07889175415039
    10. '[self' → logprob: -17.07889175415039

Token 78: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -6.0868278524139896e-05
    2. '.' → logprob: -10.00006103515625
    3. 'y' → logprob: -11.25006103515625
    4. '.x' → logprob: -14.37506103515625
    5. ',y' → logprob: -14.50006103515625
    6. '```' → logprob: -14.50006103515625
    7. ')' → logprob: -14.62506103515625
    8. ',' → logprob: -15.50006103515625
    9. '	y' → logprob: -16.12506103515625
    10. '<|end|>' → logprob: -17.37506103515625

Token 79: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ')return' → logprob: -16.375
    5. '}' → logprob: -16.5
    6. '<|end|>' → logprob: -17.25
    7. '   ' → logprob: -17.375
    8. '))' → logprob: -17.375
    9. ']' → logprob: -17.75
    10. '[' → logprob: -17.875

Token 80: 'numbers' (ID: 85055)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9057234525680542
    2. '#' → logprob: -1.4057234525680542
    3. 'def' → logprob: -2.1557235717773438
    4. 'l' → logprob: -2.7807235717773438
    5. 'n' → logprob: -3.0307235717773438
    6. 'a' → logprob: -3.5307235717773438
    7. '(' → logprob: -3.9057235717773438
    8. 'result' → logprob: -4.030723571777344
    9. 'if' → logprob: -4.405723571777344
    10. 'calculator' → logprob: -5.155723571777344

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08934498578310013
    2. '=' → logprob: -2.4643449783325195
    3. '(' → logprob: -8.08934497833252
    4. ',' → logprob: -9.83934497833252
    5. ' =)' → logprob: -10.71434497833252
    6. ')' → logprob: -11.33934497833252
    7. '_' → logprob: -12.96434497833252
    8. ' =(' → logprob: -13.71434497833252
    9. 's' → logprob: -13.96434497833252
    10. ' ' → logprob: -13.96434497833252

Token 82: ' weird' (ID: 28783)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.555193305015564
    2. 'we' → logprob: -1.555193305015564
    3. ' list' → logprob: -1.930193305015564
    4. ' tuple' → logprob: -3.3051934242248535
    5. 'tuple' → logprob: -3.5551934242248535
    6. ' weird' → logprob: -6.0551934242248535
    7. '~' → logprob: -7.1801934242248535
    8. '*' → logprob: -8.180192947387695
    9. '(' → logprob: -8.305192947387695
    10. ' we' → logprob: -8.930192947387695

Token 83: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.32392441527918e-05
    2. '_' → logprob: -10.000053405761719
    3. '_inputs' → logprob: -12.125053405761719
    4. '_in' → logprob: -13.625053405761719
    5. '_output' → logprob: -14.875053405761719
    6. '```' → logprob: -15.625053405761719
    7. '_Input' → logprob: -16.37505340576172
    8. '__' → logprob: -16.37505340576172
    9. ' _' → logprob: -16.62505340576172
    10. '_i' → logprob: -17.12505340576172

Token 84: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1279553291387856e-05
    2. '()
' → logprob: -11.875011444091797
    3. '()

' → logprob: -13.250011444091797
    4. '(' → logprob: -13.750011444091797
    5. ' ()' → logprob: -15.125011444091797
    6. '();' → logprob: -15.500011444091797
    7. '()]' → logprob: -15.500011444091797
    8. '()`' → logprob: -15.625011444091797
    9. '()<' → logprob: -15.875011444091797
    10. '(),' → logprob: -16.000011444091797

Token 85: 'calculator' (ID: 186246)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9962947368621826
    2. 'calculator' → logprob: -0.9962947368621826
    3. 'calc' → logprob: -1.4962947368621826
    4. 'lc' → logprob: -3.9962947368621826
    5. 'result' → logprob: -4.246294975280762
    6. 'obj' → logprob: -6.121294975280762
    7. 'print' → logprob: -6.871294975280762
    8. 'cal' → logprob: -7.246294975280762
    9. 'LC' → logprob: -8.871294975280762
    10. 'lcd' → logprob: -9.121294975280762

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37996041774749756
    2. '(' → logprob: -1.6299604177474976
    3. '=' → logprob: -2.129960536956787
    4. '(numbers' → logprob: -7.629960536956787
    5. '.' → logprob: -8.504960060119629
    6. ')' → logprob: -8.879960060119629
    7. ' ' → logprob: -9.129960060119629
    8. '=(' → logprob: -9.254960060119629
    9. ' =(' → logprob: -9.379960060119629
    10. '(cal' → logprob: -9.879960060119629

Token 87: ' L' (ID: 451)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.25197669863700867
    2. ' L' → logprob: -1.501976728439331
    3. ' LC' → logprob: -10.62697696685791
    4. ' ' → logprob: -11.87697696685791
    5. 'LS' → logprob: -11.87697696685791
    6. 'L' → logprob: -12.12697696685791
    7. ' ' → logprob: -13.62697696685791
    8. '```' → logprob: -14.25197696685791
    9. ' l' → logprob: -15.12697696685791
    10. 'l' → logprob: -15.12697696685791

Token 88: 'CM' (ID: 14170)
  Prédit: 'CM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.10029865056276321
    2. 'C' → logprob: -2.3502986431121826
    3. 'CMC' → logprob: -9.975298881530762
    4. 'CMS' → logprob: -11.225298881530762
    5. 'Calculator' → logprob: -12.100298881530762
    6. 'M' → logprob: -12.100298881530762
    7. 'cm' → logprob: -12.975298881530762
    8. 'Ｃ' → logprob: -13.475298881530762
    9. 'a' → logprob: -13.537798881530762
    10. 'CMP' → logprob: -13.725298881530762

Token 89: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -1.8624639324116288e-06
    2. 'Cal' → logprob: -14.000001907348633
    3. '(C' → logprob: -15.000001907348633
    4. 'calculator' → logprob: -15.125001907348633
    5. 'C' → logprob: -16.125001907348633
    6. 'Calcul' → logprob: -16.375001907348633
    7. ' Calculator' → logprob: -16.625001907348633
    8. 'culator' → logprob: -18.375001907348633
    9. 'Calc' → logprob: -18.500001907348633
    10. 'Calculate' → logprob: -18.750001907348633

Token 90: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.0003396343090571463
    2. '(' → logprob: -8.00033950805664
    3. '(number' → logprob: -13.37533950805664
    4. '(list' → logprob: -14.00033950805664
    5. '(n' → logprob: -14.62533950805664
    6. ' (' → logprob: -14.75033950805664
    7. '(tuple' → logprob: -15.50033950805664
    8. '(next' → logprob: -15.50033950805664
    9. '((' → logprob: -15.75033950805664
    10. 'numbers' → logprob: -15.87533950805664

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. ')
' → logprob: -10.125042915344238
    3. '))' → logprob: -13.750042915344238
    4. ')

' → logprob: -14.750042915344238
    5. ' )' → logprob: -15.750042915344238
    6. ').__' → logprob: -15.875042915344238
    7. ')`' → logprob: -16.125041961669922
    8. ')#' → logprob: -16.125041961669922
    9. ')return' → logprob: -16.625041961669922
    10. ')**' → logprob: -16.750041961669922

Token 92: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00036406738217920065
    2. 'result' → logprob: -8.000364303588867
    3. '~' → logprob: -10.625364303588867
    4. '```' → logprob: -13.875364303588867
    5. 'answer' → logprob: -14.000364303588867
    6. '~
' → logprob: -14.250364303588867
    7. ' print' → logprob: -14.375364303588867
    8. 'l' → logprob: -14.750364303588867
    9. 'output' → logprob: -16.125364303588867
    10. '^' → logprob: -16.250364303588867

Token 93: '(~' (ID: 114991)
  Prédit: '(~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(~' → logprob: -0.0013591633178293705
    2. '(' → logprob: -6.626358985900879
    3. '~' → logprob: -10.876358985900879
    4. '((' → logprob: -11.626358985900879
    5. ' (~' → logprob: -12.626358985900879
    6. '(__' → logprob: -14.876358985900879
    7. '(+' → logprob: -14.876358985900879
    8. '(bin' → logprob: -15.251358985900879
    9. '(
' → logprob: -15.626358985900879
    10. '(in' → logprob: -15.626358985900879

Token 94: 'calculator' (ID: 186246)
  Prédit: 'calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -1.0280383548888494e-06
    2. ' calculator' → logprob: -13.875000953674316
    3. 'cal' → logprob: -17.875001907348633
    4. 'calcul' → logprob: -18.375001907348633
    5. 'calc' → logprob: -19.750001907348633
    6. 'culator' → logprob: -19.750001907348633
    7. ')' → logprob: -19.750001907348633
    8. 'Calculator' → logprob: -19.750001907348633
    9. 'calendar' → logprob: -20.750001907348633
    10. ' ' → logprob: -21.000001907348633

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.250003814697266
    3. '))' → logprob: -13.375003814697266
    4. ')
' → logprob: -15.750003814697266
    5. ')`' → logprob: -15.750003814697266
    6. ')#' → logprob: -16.875003814697266
    7. '`)' → logprob: -17.500003814697266
    8. '#' → logprob: -18.375003814697266
    9. '')' → logprob: -18.875003814697266
    10. ')**' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 44.09%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 69.89%
================================================================================
