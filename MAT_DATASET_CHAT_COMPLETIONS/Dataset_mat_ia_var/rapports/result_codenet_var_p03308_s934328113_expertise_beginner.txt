================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def run(n, a):
    difference = max(a) - min(a)
    return difference

def main():
    n = int(input())
    a = input().split()
    for i in range(n):
        a[i] = int(a[i])
    result = run(n, a)
    print(result)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' run' (ID: 2461)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11699036508798599
    2. '):' → logprob: -2.741990327835083
    3. 'u' → logprob: -3.741990327835083
    4. '_' → logprob: -4.241990566253662
    5. ',' → logprob: -5.116990566253662
    6. 'a' → logprob: -7.491990566253662
    7. '=' → logprob: -8.616990089416504
    8. '(' → logprob: -8.741990089416504
    9. ':' → logprob: -8.866990089416504
    10. 'e' → logprob: -8.991990089416504

Token 4: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8428128361701965
    2. '):' → logprob: -1.4678127765655518
    3. ' ):' → logprob: -1.7178127765655518
    4. ' )' → logprob: -2.0928127765655518
    5. ' ' → logprob: -3.7178127765655518
    6. ',' → logprob: -5.967813014984131
    7. 's' → logprob: -6.217813014984131
    8. '   ' → logprob: -6.467813014984131
    9. 'a' → logprob: -7.467813014984131
    10. ' ,' → logprob: -7.467813014984131

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2188984900712967
    2. ')' → logprob: -1.8438985347747803
    3. ',' → logprob: -3.3438985347747803
    4. 'u' → logprob: -7.218898296356201
    5. '_' → logprob: -7.468898296356201
    6. 's' → logprob: -7.593898296356201
    7. '[' → logprob: -7.843898296356201
    8. '=' → logprob: -8.46889877319336
    9. ':' → logprob: -8.59389877319336
    10. '```' → logprob: -9.71889877319336

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17401090264320374
    2. '   ' → logprob: -1.9240108728408813
    3. '```' → logprob: -4.424010753631592
    4. '\' → logprob: -7.799010753631592
    5. ' ' → logprob: -8.17401123046875
    6. ':
' → logprob: -8.92401123046875
    7. '\n' → logprob: -8.92401123046875
    8. '``' → logprob: -9.04901123046875
    9. '    ' → logprob: -9.17401123046875
    10. ':\' → logprob: -9.42401123046875

Token 7: ' difference' (ID: 9809)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0788114070892334
    2. ' ' → logprob: -1.7038114070892334
    3. 'r' → logprob: -1.9538114070892334
    4. 'i' → logprob: -1.9538114070892334
    5. '\' → logprob: -3.2038114070892334
    6. '```' → logprob: -3.4538114070892334
    7. '`' → logprob: -4.3288116455078125
    8. ''' → logprob: -4.5788116455078125
    9. 'if' → logprob: -4.7038116455078125
    10. '    ' → logprob: -4.8288116455078125

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4284052550792694
    2. 's' → logprob: -1.9284052848815918
    3. '_' → logprob: -2.053405284881592
    4. '=' → logprob: -2.803405284881592
    5. ' ' → logprob: -5.178405284881592
    6. '(' → logprob: -6.428405284881592
    7. '_s' → logprob: -6.553405284881592
    8. '_space' → logprob: -6.553405284881592
    9. ')' → logprob: -6.803405284881592
    10. '   ' → logprob: -7.303405284881592

Token 9: ' max' (ID: 2999)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7637116312980652
    2. ' abs' → logprob: -1.51371169090271
    3. 'a' → logprob: -2.26371169090271
    4. ' ' → logprob: -2.38871169090271
    5. ' n' → logprob: -2.88871169090271
    6. '0' → logprob: -3.26371169090271
    7. 'abs' → logprob: -4.388711452484131
    8. 'n' → logprob: -4.763711452484131
    9. ' max' → logprob: -6.013711452484131
    10. ' []' → logprob: -7.888711452484131

Token 10: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25220537185668945
    2. '(' → logprob: -1.5022053718566895
    3. '(n' → logprob: -8.377204895019531
    4. '(
' → logprob: -11.627204895019531
    5. ')' → logprob: -11.877204895019531
    6. '(abs' → logprob: -12.627204895019531
    7. '(s' → logprob: -12.627204895019531
    8. ' (' → logprob: -12.627204895019531
    9. '()' → logprob: -12.752204895019531
    10. '(

' → logprob: -13.127204895019531

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ' )' → logprob: -11.625012397766113
    3. ')-' → logprob: -13.250012397766113
    4. '   ' → logprob: -14.625012397766113
    5. '[' → logprob: -15.375012397766113
    6. '")' → logprob: -16.250011444091797
    7. '`)' → logprob: -16.625011444091797
    8. '-' → logprob: -16.750011444091797
    9. '')' → logprob: -17.000011444091797
    10. ' -' → logprob: -17.250011444091797

Token 12: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05283183604478836
    2. '-' → logprob: -3.0528318881988525
    3. ')' → logprob: -6.052831649780273
    4. '[' → logprob: -7.052831649780273
    5. '(' → logprob: -7.552831649780273
    6. ' ' → logprob: -9.177831649780273
    7. '```' → logprob: -9.177831649780273
    8. '`' → logprob: -10.302831649780273
    9. '<|end|>' → logprob: -10.302831649780273
    10. '()' → logprob: -10.302831649780273

Token 13: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20141646265983582
    2. ' min' → logprob: -1.7014164924621582
    3. '	min' → logprob: -13.701416015625
    4. '(min' → logprob: -14.326416015625
    5. ' ' → logprob: -14.576416015625
    6. '   ' → logprob: -15.201416015625
    7. '  ' → logprob: -15.701416015625
    8. 'minimum' → logprob: -16.201416015625
    9. '[min' → logprob: -16.326416015625
    10. ' minimum' → logprob: -16.701416015625

Token 14: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.026316089555621147
    2. '(' → logprob: -3.6513161659240723
    3. ' (' → logprob: -12.276315689086914
    4. '```' → logprob: -12.276315689086914
    5. '(n' → logprob: -13.526315689086914
    6. '(A' → logprob: -13.776315689086914
    7. '(
' → logprob: -14.151315689086914
    8. '(ai' → logprob: -14.526315689086914
    9. '`' → logprob: -15.151315689086914
    10. '(s' → logprob: -15.276315689086914

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.534558552724775e-05
    2. '))' → logprob: -11.500025749206543
    3. '[' → logprob: -11.875025749206543
    4. ']' → logprob: -13.375025749206543
    5. '')' → logprob: -13.750025749206543
    6. '[a' → logprob: -14.125025749206543
    7. ')))' → logprob: -14.125025749206543
    8. '`)' → logprob: -14.250025749206543
    9. ')
' → logprob: -14.500025749206543
    10. '   ' → logprob: -14.875025749206543

Token 16: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2563467025756836
    2. '   ' → logprob: -1.6313467025756836
    3. '    
' → logprob: -4.381346702575684
    4. '<|end|>' → logprob: -5.506346702575684
    5. '```' → logprob: -5.631346702575684
    6. ' if' → logprob: -6.256346702575684
    7. '\n' → logprob: -6.381346702575684
    8. '  
' → logprob: -6.756346702575684
    9. ' ' → logprob: -7.131346702575684
    10. ')' → logprob: -7.256346702575684

Token 17: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5574782490730286
    2. '
' → logprob: -2.057478189468384
    3. '\n' → logprob: -2.182478189468384
    4. '<|end|>' → logprob: -3.057478189468384
    5. 'return' (adapté à ' return') → logprob: -3.557478189468384
    6. ' ' → logprob: -3.682478189468384
    7. ' return' → logprob: -4.057478427886963
    8. '    
' → logprob: -4.182478427886963
    9. '```' → logprob: -4.682478427886963
    10. 'newline' → logprob: -5.057478427886963

Token 18: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.0020082220435142517
    2. 'difference' → logprob: -6.252008438110352
    3. ' ' → logprob: -9.752008438110352
    4. ' ' → logprob: -11.002008438110352
    5. ' d' → logprob: -12.752008438110352
    6. ' space' → logprob: -14.002008438110352
    7. '  ' → logprob: -15.502008438110352
    8. ' different' → logprob: -15.627008438110352
    9. 'd' → logprob: -16.50200843811035
    10. ' a' → logprob: -16.87700843811035

Token 19: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' main' (ID: 2758)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.15504837036132812
    2. ' calculate' → logprob: -2.655048370361328
    3. ' space' → logprob: -3.280048370361328
    4. ' ' → logprob: -4.405048370361328
    5. ' test' → logprob: -4.780048370361328
    6. ' compute' → logprob: -5.655048370361328
    7. ' add' → logprob: -6.030048370361328
    8. ' find' → logprob: -6.155048370361328
    9. ' sum' → logprob: -6.780048370361328
    10. ' process' → logprob: -7.030048370361328

Token 22: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005565632600337267
    2. '():' → logprob: -5.755565643310547
    3. '_' → logprob: -6.380565643310547
    4. '(:' → logprob: -8.505565643310547
    5. ' (' → logprob: -9.505565643310547
    6. '```' → logprob: -9.630565643310547
    7. '(_:' → logprob: -9.755565643310547
    8. ':' → logprob: -9.755565643310547
    9. '(
' → logprob: -10.255565643310547
    10. '("("' → logprob: -10.380565643310547

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10881058871746063
    2. '(' → logprob: -2.7338106632232666
    3. '(n' → logprob: -4.3588104248046875
    4. '    
' → logprob: -5.4838104248046875
    5. '```' → logprob: -5.4838104248046875
    6. '    ' → logprob: -5.6088104248046875
    7. '[' → logprob: -5.7338104248046875
    8. ' ' → logprob: -6.6088104248046875
    9. 'n' → logprob: -6.8588104248046875
    10. 'a' → logprob: -7.2338104248046875

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4383431673049927
    2. ' ' → logprob: -1.4383431673049927
    3. '    ' → logprob: -3.688343048095703
    4. 'n' (adapté à ' n') → logprob: -4.063343048095703
    5. ' for' → logprob: -4.063343048095703
    6. '   ' → logprob: -4.438343048095703
    7. ' print' → logprob: -4.438343048095703
    8. ' pass' → logprob: -4.563343048095703
    9. ' a' → logprob: -4.813343048095703
    10. 'a' → logprob: -5.938343048095703

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3743533194065094
    2. ' ' → logprob: -1.999353289604187
    3. '<|end|>' → logprob: -3.1243534088134766
    4. ')' → logprob: -3.4993534088134766
    5. ',' → logprob: -3.7493534088134766
    6. '  ' → logprob: -3.8743534088134766
    7. '=' → logprob: -3.8743534088134766
    8. ' ,' → logprob: -3.9993534088134766
    9. ' )' → logprob: -5.124353408813477
    10. '<|end|>' → logprob: -5.874353408813477

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0015240294160321355
    2. ' ' → logprob: -7.251523971557617
    3. 'int' → logprob: -7.251523971557617
    4. ' input' → logprob: -9.376523971557617
    5. '=int' → logprob: -12.126523971557617
    6. '0' → logprob: -12.376523971557617
    7. ' len' → logprob: -12.626523971557617
    8. '10' → logprob: -13.001523971557617
    9. '[int' → logprob: -13.626523971557617
    10. '<int' → logprob: -14.251523971557617

Token 27: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1605621576309204
    2. '(input' → logprob: -1.9105621576309204
    3. 'input' → logprob: -9.035562515258789
    4. '()' → logprob: -9.660562515258789
    5. '('' → logprob: -9.910562515258789
    6. '<|end|>' → logprob: -10.285562515258789
    7. ' (' → logprob: -10.535562515258789
    8. '(
' → logprob: -12.035562515258789
    9. '(n' → logprob: -12.035562515258789
    10. '(user' → logprob: -12.285562515258789

Token 28: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04089793190360069
    2. '())' → logprob: -3.665897846221924
    3. '(' → logprob: -5.040897846221924
    4. '('' → logprob: -5.165897846221924
    5. '("("' → logprob: -6.290897846221924
    6. '("' → logprob: -8.290898323059082
    7. '()))' → logprob: -10.040898323059082
    8. ')' → logprob: -10.540898323059082
    9. '().' → logprob: -10.665898323059082
    10. '("")' → logprob: -11.040898323059082

Token 29: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31405043601989746
    2. '
' → logprob: -2.9390504360198975
    3. ' ' → logprob: -3.0640504360198975
    4. ' 
' → logprob: -3.8140504360198975
    5. ' a' → logprob: -3.9390504360198975
    6. '```' → logprob: -3.9390504360198975
    7. '\' → logprob: -4.064050674438477
    8. '    
' → logprob: -4.064050674438477
    9. '<|end|>' → logprob: -4.189050674438477
    10. '   ' → logprob: -4.189050674438477

Token 30: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06434716284275055
    2. 'a' (adapté à ' a') → logprob: -2.814347267150879
    3. ' ' → logprob: -6.314347267150879
    4. '<|end|>' → logprob: -7.814347267150879
    5. '<|end|>' → logprob: -10.314347267150879
    6. '	a' → logprob: -11.064347267150879
    7. ' 
' → logprob: -11.189347267150879
    8. 'n' → logprob: -11.189347267150879
    9. ' n' → logprob: -11.439347267150879
    10. ')' → logprob: -11.689347267150879

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007227731868624687
    2. '=' → logprob: -5.007227897644043
    3. '.' → logprob: -7.632227897644043
    4. '[' → logprob: -11.632227897644043
    5. '.append' → logprob: -11.757227897644043
    6. '[:]' → logprob: -12.257227897644043
    7. ' ' → logprob: -12.632227897644043
    8. ')' → logprob: -13.882227897644043
    9. ',' → logprob: -14.757227897644043
    10. ' =[' → logprob: -15.007227897644043

Token 32: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5852900743484497
    2. ' list' → logprob: -0.8352900743484497
    3. '[list' → logprob: -4.83528995513916
    4. '[' → logprob: -6.83528995513916
    5. ' [' → logprob: -8.21028995513916
    6. '[]' → logprob: -12.58528995513916
    7. '=list' → logprob: -12.71028995513916
    8. '[int' → logprob: -12.96028995513916
    9. '(list' → logprob: -12.96028995513916
    10. '[input' → logprob: -13.46028995513916

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10328377783298492
    2. '().' → logprob: -2.3532838821411133
    3. '(' → logprob: -5.853283882141113
    4. '())' → logprob: -8.728283882141113
    5. '('' → logprob: -11.228283882141113
    6. ' ()' → logprob: -12.228283882141113
    7. '()(' → logprob: -12.228283882141113
    8. '("' → logprob: -12.853283882141113
    9. '()>' → logprob: -12.853283882141113
    10. '()

' → logprob: -13.603283882141113

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005265649873763323
    2. 'strip' → logprob: -5.255265712738037
    3. 'rstrip' → logprob: -10.505265235900879
    4. 'spl' → logprob: -12.755265235900879
    5. ' split' → logprob: -13.380265235900879
    6. '(split' → logprob: -16.755266189575195
    7. 's' → logprob: -17.880266189575195
    8. 'plit' → logprob: -18.005266189575195
    9. 'sp' → logprob: -18.005266189575195
    10. 'replace' → logprob: -18.380266189575195

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.652331531047821
    2. '(' → logprob: -1.0273315906524658
    3. '('' → logprob: -2.277331590652466
    4. '("("' → logprob: -4.027331352233887
    5. '("' → logprob: -7.527331352233887
    6. '(
' → logprob: -9.652331352233887
    7. '(`' → logprob: -10.402331352233887
    8. '`()' → logprob: -10.652331352233887
    9. '(()' → logprob: -10.777331352233887
    10. '```' → logprob: -11.027331352233887

Token 36: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3074950873851776
    2. '<|end|>' → logprob: -2.4324951171875
    3. ')' → logprob: -2.6824951171875
    4. '=' → logprob: -2.9324951171875
    5. ' =' → logprob: -4.0574951171875
    6. ' a' → logprob: -4.6824951171875
    7. '[:]' → logprob: -4.9324951171875
    8. '   ' → logprob: -5.1824951171875
    9. ' ' → logprob: -5.8074951171875
    10. '[a' → logprob: -6.0574951171875

Token 37: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026295999065041542
    2. ' a' → logprob: -3.7762959003448486
    3. '<|end|>' → logprob: -5.901296138763428
    4. ')' → logprob: -8.90129566192627
    5. '<|end|>' → logprob: -9.52629566192627
    6. '   ' → logprob: -10.77629566192627
    7. ' ' → logprob: -11.15129566192627
    8. ')a' → logprob: -11.27629566192627
    9. ' )' → logprob: -12.15129566192627
    10. '```' → logprob: -12.27629566192627

Token 38: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6241257190704346
    2. ' i' → logprob: -0.8741257190704346
    3. ' _' → logprob: -3.4991257190704346
    4. '_' → logprob: -4.1241254806518555
    5. 'i' → logprob: -7.6241254806518555
    6. ' ‌' → logprob: -9.874125480651855
    7. ' in' → logprob: -10.749125480651855
    8. '  ' → logprob: -11.249125480651855
    9. '_i' → logprob: -11.374125480651855
    10. ' I' → logprob: -11.499125480651855

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21186047792434692
    2. 'in' → logprob: -1.7118604183197021
    3. ' ' → logprob: -5.711860656738281
    4. '<|end|>' → logprob: -6.211860656738281
    5. '  ' → logprob: -6.336860656738281
    6. ' =' → logprob: -7.086860656738281
    7. '    ' → logprob: -7.461860656738281
    8. '=' → logprob: -7.711860656738281
    9. ')' → logprob: -8.211860656738281
    10. '(' → logprob: -8.336860656738281

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17235764861106873
    2. ' ' → logprob: -2.5473575592041016
    3. 'range' → logprob: -2.6723575592041016
    4. ' n' → logprob: -5.672357559204102
    5. 'n' → logprob: -5.797357559204102
    6. ' a' → logprob: -6.297357559204102
    7. ' xrange' → logprob: -7.672357559204102
    8. 'r' → logprob: -7.797357559204102
    9. ' in' → logprob: -7.922357559204102
    10. ' r' → logprob: -8.297357559204102

Token 41: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07982587814331055
    2. '(n' → logprob: -2.5798258781433105
    3. '(len' → logprob: -7.4548258781433105
    4. ' (' → logprob: -7.9548258781433105
    5. '(
' → logprob: -13.329826354980469
    6. '(length' → logprob: -13.704826354980469
    7. '()' → logprob: -13.704826354980469
    8. ' n' → logprob: -14.829826354980469
    9. 'n' → logprob: -14.954826354980469
    10. ' ' → logprob: -14.954826354980469

Token 42: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004347756505012512
    2. '):' → logprob: -5.504347801208496
    3. '[' → logprob: -9.004347801208496
    4. ' )' → logprob: -9.379347801208496
    5. '   ' → logprob: -10.754347801208496
    6. '[i' → logprob: -11.379347801208496
    7. '<|end|>' → logprob: -11.879347801208496
    8. ']' → logprob: -12.504347801208496
    9. ' ' → logprob: -13.504347801208496
    10. ')n' → logprob: -13.629347801208496

Token 43: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15854722261428833
    2. '    ' → logprob: -2.5335471630096436
    3. ' a' → logprob: -3.7835471630096436
    4. 'a' → logprob: -4.408547401428223
    5. '<|end|>' → logprob: -4.658547401428223
    6. '       ' → logprob: -4.908547401428223
    7. '   ' → logprob: -4.908547401428223
    8. '[' → logprob: -5.908547401428223
    9. '        ' → logprob: -7.033547401428223
    10. ' )' → logprob: -7.658547401428223

Token 44: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7340884208679199
    2. ' a' → logprob: -0.7340884208679199
    3. 'a' (adapté à ' a') → logprob: -3.35908842086792
    4. '    ' → logprob: -5.60908842086792
    5. '<|end|>' → logprob: -6.60908842086792
    6. '   ' → logprob: -9.609088897705078
    7. ' 
' → logprob: -9.734088897705078
    8. '<|end|>' → logprob: -10.109088897705078
    9. '  ' → logprob: -10.609088897705078
    10. '	a' → logprob: -11.109088897705078

Token 45: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4321288466453552
    2. '[int' → logprob: -1.68212890625
    3. '[i' → logprob: -1.80712890625
    4. '[a' → logprob: -7.93212890625
    5. '\[' → logprob: -9.18212890625
    6. ' [' → logprob: -9.55712890625
    7. '```' → logprob: -10.05712890625
    8. '[]' → logprob: -10.68212890625
    9. '[Int' → logprob: -10.80712890625
    10. '[...]' → logprob: -11.05712890625

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23598811030387878
    2. ')' → logprob: -1.6109881401062012
    3. ' =' → logprob: -5.360988140106201
    4. ']=' → logprob: -6.110988140106201
    5. '=' → logprob: -6.610988140106201
    6. ' ]' → logprob: -7.110988140106201
    7. '])' → logprob: -8.235987663269043
    8. '=int' → logprob: -8.235987663269043
    9. ')=' → logprob: -8.485987663269043
    10. ' )' → logprob: -8.485987663269043

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769349336624146
    2. '=' → logprob: -0.8269349336624146
    3. '=int' → logprob: -6.951934814453125
    4. '<|end|>' → logprob: -10.701934814453125
    5. ' =
' → logprob: -12.326934814453125
    6. ' ' → logprob: -12.326934814453125
    7. '=
' → logprob: -13.201934814453125
    8. ')' → logprob: -13.951934814453125
    9. ' =)' → logprob: -14.576934814453125
    10. 'int' → logprob: -14.826934814453125

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0380416102707386
    2. ' int' → logprob: -3.288041591644287
    3. '=int' → logprob: -16.163042068481445
    4. '<int' → logprob: -17.288042068481445
    5. '[int' → logprob: -17.288042068481445
    6. '(int' → logprob: -18.038042068481445
    7. ']int' → logprob: -18.288042068481445
    8. '	int' → logprob: -18.288042068481445
    9. ':int' → logprob: -18.538042068481445
    10. ',int' → logprob: -18.913042068481445

Token 49: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.47408393025398254
    2. '(' → logprob: -0.9740839004516602
    3. '('' → logprob: -12.84908390045166
    4. '(
' → logprob: -13.72408390045166
    5. '(i' → logprob: -14.84908390045166
    6. '(

' → logprob: -14.84908390045166
    7. '(`' → logprob: -14.97408390045166
    8. '(A' → logprob: -14.97408390045166
    9. '(ai' → logprob: -15.09908390045166
    10. 'a' → logprob: -15.22408390045166

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020468863658607006
    2. '[' → logprob: -6.252047061920166
    3. ')' → logprob: -9.127046585083008
    4. '[a' → logprob: -12.752046585083008
    5. '[I' → logprob: -13.002046585083008
    6. ' [' → logprob: -13.377046585083008
    7. '[
' → logprob: -14.502046585083008
    8. ')[' → logprob: -14.627046585083008
    9. ')i' → logprob: -14.877046585083008
    10. '   ' → logprob: -14.877046585083008

Token 51: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055509500205516815
    2. '])' → logprob: -2.930509567260742
    3. ']' → logprob: -7.930509567260742
    4. ')])' → logprob: -8.680509567260742
    5. '))' → logprob: -10.055509567260742
    6. ')]' → logprob: -10.805509567260742
    7. ' )' → logprob: -10.930509567260742
    8. ''])' → logprob: -12.930509567260742
    9. ' ])' → logprob: -13.055509567260742
    10. ')
' → logprob: -13.555509567260742

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2913022041320801
    2. '<|end|>' → logprob: -2.29130220413208
    3. '   ' → logprob: -2.41630220413208
    4. '    
' → logprob: -3.54130220413208
    5. ')' → logprob: -4.04130220413208
    6. '  
' → logprob: -5.16630220413208
    7. ' 
' → logprob: -5.79130220413208
    8. '\n' → logprob: -6.66630220413208
    9. '```' → logprob: -6.79130220413208
    10. ' ' → logprob: -7.16630220413208

Token 53: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6591193079948425
    2. 'result' (adapté à ' result') → logprob: -1.0341193675994873
    3. ' print' → logprob: -2.9091193675994873
    4. ' result' → logprob: -3.1591193675994873
    5. '   ' → logprob: -4.034119129180908
    6. 'difference' → logprob: -5.034119129180908
    7. 'd' → logprob: -6.284119129180908
    8. 'b' → logprob: -7.034119129180908
    9. 'diff' → logprob: -7.159119129180908
    10. ' difference' → logprob: -7.409119129180908

Token 54: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43031829595565796
    2. ' =' → logprob: -1.1803183555603027
    3. '=' → logprob: -3.3053183555603027
    4. ')' → logprob: -6.055318355560303
    5. ' ' → logprob: -6.555318355560303
    6. '()' → logprob: -7.555318355560303
    7. '<|end|>' → logprob: -7.680318355560303
    8. '(result' → logprob: -7.930318355560303
    9. '   ' → logprob: -8.555317878723145
    10. ' (' → logprob: -9.305317878723145

Token 55: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.018152287229895592
    2. 'run' → logprob: -4.018152236938477
    3. ' ' → logprob: -14.143152236938477
    4. '(run' → logprob: -14.268152236938477
    5. ' ' → logprob: -15.018152236938477
    6. '	run' → logprob: -15.018152236938477
    7. '.run' → logprob: -16.268152236938477
    8. '   ' → logprob: -16.643152236938477
    9. ' difference' → logprob: -16.893152236938477
    10. '_run' → logprob: -16.893152236938477

Token 56: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011761216446757317
    2. '(n' → logprob: -4.51176118850708
    3. '(a' → logprob: -7.26176118850708
    4. '(run' → logprob: -12.511761665344238
    5. '(
' → logprob: -12.886761665344238
    6. '(result' → logprob: -13.011761665344238
    7. ' (' → logprob: -13.636761665344238
    8. '(r' → logprob: -15.636761665344238
    9. ' ' → logprob: -15.636761665344238
    10. '(

' → logprob: -15.761761665344238

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ',a' → logprob: -10.500036239624023
    3. ' ,' → logprob: -12.500036239624023
    4. 'a' → logprob: -12.875036239624023
    5. ')' → logprob: -13.625036239624023
    6. '(' → logprob: -14.750036239624023
    7. ',
' → logprob: -16.125036239624023
    8. ' a' → logprob: -16.375036239624023
    9. ',n' → logprob: -17.250036239624023
    10. '(a' → logprob: -17.250036239624023

Token 58: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1426987200975418
    2. 'a' → logprob: -2.0176987648010254
    3. ' ' → logprob: -11.267698287963867
    4. ' ' → logprob: -11.892698287963867
    5. ')' → logprob: -13.017698287963867
    6. ' )' → logprob: -14.017698287963867
    7. '	a' → logprob: -14.892698287963867
    8. ')a' → logprob: -15.142698287963867
    9. ' а' → logprob: -16.517698287963867
    10. 'space' → logprob: -17.517698287963867

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.375
    4. '))' → logprob: -17.0
    5. '),' → logprob: -18.625
    6. ')`' → logprob: -18.75
    7. ')...' → logprob: -18.875
    8. ')#' → logprob: -19.125
    9. ')}' → logprob: -19.25
    10. ')))' → logprob: -19.375

Token 60: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5186535716056824
    2. '   ' → logprob: -1.5186536312103271
    3. '
' → logprob: -1.7686536312103271
    4. ' print' → logprob: -5.018653392791748
    5. '    
' → logprob: -5.143653392791748
    6. ' 
' → logprob: -7.268653392791748
    7. '  
' → logprob: -7.518653392791748
    8. '\n' → logprob: -8.143653869628906
    9. '' → logprob: -8.268653869628906
    10. '```' → logprob: -8.268653869628906

Token 61: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011598145589232445
    2. ' print' → logprob: -4.511598110198975
    3. '   ' → logprob: -7.511598110198975
    4. 'pr' → logprob: -13.886598587036133
    5. '```' → logprob: -14.511598587036133
    6. '    
' → logprob: -14.636598587036133
    7. '	print' → logprob: -14.636598587036133
    8. ' 
' → logprob: -15.386598587036133
    9. '.print' → logprob: -15.636598587036133
    10. '
' → logprob: -15.761598587036133

Token 62: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4741409718990326
    2. '(' → logprob: -0.974141001701355
    3. '()' → logprob: -10.099141120910645
    4. '('' → logprob: -11.349141120910645
    5. '("("' → logprob: -12.474141120910645
    6. 'result' → logprob: -13.474141120910645
    7. '(resultado' → logprob: -13.724141120910645
    8. '(res' → logprob: -13.724141120910645
    9. ' (' → logprob: -14.224141120910645
    10. '(
' → logprob: -14.349141120910645

Token 63: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -16.875
    5. ')`' → logprob: -17.375
    6. '')' → logprob: -18.0
    7. '`)' → logprob: -18.125
    8. '(' → logprob: -19.125
    9. ')#' → logprob: -19.5
    10. '()' → logprob: -19.625

Token 64: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3459813594818115
    2. 'if' → logprob: -1.5959813594818115
    3. '
' → logprob: -1.8459813594818115
    4. '#' → logprob: -1.8459813594818115
    5. '<|end|>' → logprob: -2.9709813594818115
    6. 'i' → logprob: -2.9709813594818115
    7. 'n' → logprob: -3.0959813594818115
    8. '\' → logprob: -3.2209813594818115
    9. '```' → logprob: -3.9709813594818115
    10. 'a' → logprob: -5.720981597900391

Token 65: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008600743487477303
    2. ' ' → logprob: -5.00860071182251
    3. '__' → logprob: -7.00860071182251
    4. ' ' → logprob: -7.50860071182251
    5. '_' → logprob: -8.383601188659668
    6. ' _' → logprob: -9.383601188659668
    7. ' ​' → logprob: -10.008601188659668
    8. ' ﻿' → logprob: -10.633601188659668
    9. ' ‌' → logprob: -10.883601188659668
    10. '  ' → logprob: -12.258601188659668

Token 66: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002184284385293722
    2. ' __' → logprob: -7.3771843910217285
    3. '__.__' → logprob: -7.8771843910217285
    4. '__.' → logprob: -8.12718391418457
    5. '_' → logprob: -8.50218391418457
    6. '.' → logprob: -8.50218391418457
    7. ' ==' → logprob: -8.87718391418457
    8. '[' → logprob: -8.87718391418457
    9. ' .' → logprob: -9.87718391418457
    10. '.__' → logprob: -10.00218391418457

Token 67: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.547789674485102e-05
    2. '__.__' → logprob: -10.875035285949707
    3. '_' → logprob: -11.750035285949707
    4. '___' → logprob: -12.250035285949707
    5. '__.' → logprob: -13.000035285949707
    6. '____' → logprob: -13.875035285949707
    7. '__["' → logprob: -16.250036239624023
    8. '__('' → logprob: -16.250036239624023
    9. '__
' → logprob: -16.375036239624023
    10. '__[' → logprob: -16.625036239624023

Token 68: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06292577087879181
    2. ' ==' → logprob: -2.8129258155822754
    3. '==' → logprob: -7.062925815582275
    4. ' __' → logprob: -10.437925338745117
    5. '_' → logprob: -10.562925338745117
    6. '___' → logprob: -11.062925338745117
    7. '=="' → logprob: -11.187925338745117
    8. '=='' → logprob: -12.687925338745117
    9. ' =' → logprob: -12.937925338745117
    10. ' =="' → logprob: -13.062925338745117

Token 69: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6351242065429688
    2. '"' → logprob: -0.7601242065429688
    3. ' '' → logprob: -6.635124206542969
    4. ' "' → logprob: -6.760124206542969
    5. '__' → logprob: -11.010124206542969
    6. ' "__' → logprob: -11.135124206542969
    7. ' '__' → logprob: -12.010124206542969
    8. ' ' → logprob: -12.760124206542969
    9. '_' → logprob: -13.010124206542969
    10. ' __' → logprob: -13.010124206542969

Token 70: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001793457195162773
    2. 'name' → logprob: -9.000179290771484
    3. 'm' → logprob: -10.500179290771484
    4. 'ma' → logprob: -10.625179290771484
    5. '_main' → logprob: -13.250179290771484
    6. '_' → logprob: -13.625179290771484
    7. '__' → logprob: -14.625179290771484
    8. 'mai' → logprob: -15.125179290771484
    9. ' main' → logprob: -16.125179290771484
    10. '__':
' → logprob: -16.750179290771484

Token 71: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002709415275603533
    2. '__':
' → logprob: -6.00270938873291
    3. '_' → logprob: -8.37770938873291
    4. '_'' → logprob: -13.00270938873291
    5. '__:' → logprob: -13.75270938873291
    6. '___' → logprob: -15.62770938873291
    7. '__('' → logprob: -16.002710342407227
    8. ''' → logprob: -16.377710342407227
    9. '__.' → logprob: -16.627710342407227
    10. '__)' → logprob: -17.502710342407227

Token 72: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0021205232478678226
    2. 'main' → logprob: -6.627120494842529
    3. ' run' → logprob: -8.002120971679688
    4. '	main' → logprob: -8.252120971679688
    5. ' ' → logprob: -9.627120971679688
    6. '   ' → logprob: -9.752120971679688
    7. ' __' → logprob: -10.377120971679688
    8. ' ' → logprob: -10.752120971679688
    9. 'run' → logprob: -12.502120971679688
    10. '    ' → logprob: -12.627120971679688

Token 73: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.07889363914728165
    2. ' main' → logprob: -2.5788936614990234
    3. '	main' → logprob: -13.453893661499023
    4. 'm' → logprob: -14.203893661499023
    5. '   ' → logprob: -14.703893661499023
    6. 'ma' → logprob: -15.078893661499023
    7. 'mai' → logprob: -15.203893661499023
    8. ' ma' → logprob: -15.453893661499023
    9. ' ' → logprob: -15.578893661499023
    10. ' m' → logprob: -16.203893661499023

Token 74: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00040898515726439655
    2. '(' → logprob: -7.875409126281738
    3. '()
' → logprob: -11.250409126281738
    4. '()`' → logprob: -12.125409126281738
    5. '```' → logprob: -13.000409126281738
    6. ' ()' → logprob: -13.375409126281738
    7. '();' → logprob: -13.875409126281738
    8. '()<' → logprob: -14.125409126281738
    9. '()">' → logprob: -14.125409126281738
    10. '()

' → logprob: -14.250409126281738


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 40.28%
Précision (top 10): 79.17%
================================================================================
