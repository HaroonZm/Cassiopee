================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def check_ac_string(s):
    """
    Vérifie si la chaîne fournie respecte les conditions suivantes pour être considérée comme 'AC' :
    - Le premier caractère doit être 'A'.
    - Il doit y avoir exactement un 'C' dans la sous-chaîne qui commence au troisième caractère et s'arrête à l'avant-dernier.
    - Tous les autres caractères, après avoir remplacé 'C' par 'c', doivent être des lettres minuscules.

    Args:
        s (str): La chaîne d'entrée à vérifier.

    Returns:
        str: 'AC' si la chaîne respecte toutes les conditions, sinon 'WA'.
    """
    # Vérifie que le premier caractère est 'A'
    if s[0] == "A":
        # Compte le nombre de 'C' entre le troisième caractère (inclus) et l'avant-dernier (exclus)
        c_count = s[2:-1].count("C")
        if c_count == 1:
            # Remplace tous les 'C' restants par 'c', puis vérifie si les caractères à partir du deuxième sont tous des minuscules
            if s[1:].replace("C", "c").islower():
                return "AC"
    # Retourne "WA" si l'une des conditions n'est pas respectée
    return "WA"

if __name__ == "__main__":
    # Lit la chaîne de caractères depuis l'entrée standard
    user_input = input()
    # Appelle la fonction de vérification et affiche le résultat
    print(check_ac_string(user_input))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' check' (ID: 2371)
  → Token d'amorce (pas de prédiction)

Token 2: '_ac' (ID: 41419)
  → Token d'amorce (pas de prédiction)

Token 3: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.045897364616394
    2. 'cept' → logprob: -1.170897364616394
    3. 'cess' → logprob: -1.295897364616394
    4. 'c' → logprob: -3.4208974838256836
    5. '_c' → logprob: -3.9208974838256836
    6. 'e' → logprob: -5.045897483825684
    7. 't' → logprob: -5.920897483825684
    8. 'cepts' → logprob: -7.420897483825684
    9. 'quire' → logprob: -7.795897483825684
    10. '(' → logprob: -7.920897483825684

Token 4: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004350367467850447
    2. '_' → logprob: -6.254350185394287
    3. ':' → logprob: -7.754350185394287
    4. '(_' → logprob: -7.754350185394287
    5. '```' → logprob: -8.004350662231445
    6. '(_:' → logprob: -8.004350662231445
    7. '(:' → logprob: -8.129350662231445
    8. '():' → logprob: -8.629350662231445
    9. '('' → logprob: -9.754350662231445
    10. '(a' → logprob: -10.004350662231445

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10700812190771103
    2. ')' → logprob: -2.982008218765259
    3. ':' → logprob: -2.982008218765259
    4. '(' → logprob: -11.23200798034668
    5. '):
' → logprob: -11.23200798034668
    6. '_' → logprob: -11.48200798034668
    7. '():' → logprob: -11.85700798034668
    8. '```' → logprob: -11.85700798034668
    9. '[' → logprob: -12.23200798034668
    10. '=' → logprob: -12.48200798034668

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004089085850864649
    2. '   ' → logprob: -5.629088878631592
    3. '```' → logprob: -8.50408935546875
    4. '():' → logprob: -8.87908935546875
    5. '(' → logprob: -9.62908935546875
    6. ':
' → logprob: -10.00408935546875
    7. ':return' → logprob: -11.87908935546875
    8. ' :' → logprob: -12.12908935546875
    9. ' ' → logprob: -12.50408935546875
    10. ':**' → logprob: -12.62908935546875

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27249854803085327
    2. ' ' → logprob: -2.522498607635498
    3. '```' → logprob: -2.897498607635498
    4. 'i' → logprob: -3.022498607635498
    5. ' if' → logprob: -4.147498607635498
    6. 'if' → logprob: -4.897498607635498
    7. ':' → logprob: -5.647498607635498
    8. 'r' → logprob: -5.772498607635498
    9. ''' → logprob: -5.772498607635498
    10. '_' → logprob: -5.897498607635498

Token 8: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.44153451919555664
    2. 'Checks' → logprob: -1.9415345191955566
    3. 'T' → logprob: -2.8165345191955566
    4. 'Check' → logprob: -3.0665345191955566
    5. '"""' → logprob: -3.0665345191955566
    6. 'Returns' → logprob: -3.5665345191955566
    7. '"""
' → logprob: -4.816534519195557
    8. '   ' → logprob: -5.191534519195557
    9. 'Return' → logprob: -5.816534519195557
    10. ' Checks' → logprob: -5.941534519195557

Token 9: ' Vér' (ID: 159169)
  Prédit: 'Checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Checks' → logprob: -0.6170030236244202
    2. 'Check' → logprob: -1.3670029640197754
    3. 'Returns' → logprob: -3.1170029640197754
    4. '"""' → logprob: -3.2420029640197754
    5. 'C' → logprob: -3.4920029640197754
    6. '"""
' → logprob: -4.242002964019775
    7. 'Return' → logprob: -4.242002964019775
    8. '   ' → logprob: -4.367002964019775
    9. 'T' → logprob: -4.367002964019775
    10. 'This' → logprob: -4.742002964019775

Token 10: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.010380049236118793
    2. 'if' → logprob: -5.135380268096924
    3. 'ifi' → logprob: -5.635380268096924
    4. 'i' → logprob: -7.635380268096924
    5. 'ifié' → logprob: -8.260379791259766
    6. 'ifier' → logprob: -9.510379791259766
    7. 'ifiez' → logprob: -11.135379791259766
    8. 'ifiée' → logprob: -11.385379791259766
    9. 'ification' → logprob: -11.510379791259766
    10. 'ify' → logprob: -11.510379791259766

Token 11: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.1115088164806366
    2. ' if' → logprob: -3.236508846282959
    3. ' que' → logprob: -3.611508846282959
    4. 'si' → logprob: -4.236508846282959
    5. ' ' → logprob: -4.486508846282959
    6. '   ' → logprob: -4.736508846282959
    7. 's' → logprob: -5.736508846282959
    8. ' la' → logprob: -7.986508846282959
    9. '  ' → logprob: -7.986508846282959
    10. ' s' → logprob: -8.7365083694458

Token 12: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7556971907615662
    2. ' s' → logprob: -1.130697250366211
    3. ' la' → logprob: -2.255697250366211
    4. ' le' → logprob: -3.505697250366211
    5. 'le' → logprob: -3.880697250366211
    6. 'l' → logprob: -4.505697250366211
    7. 'la' → logprob: -4.630697250366211
    8. ' l' → logprob: -4.880697250366211
    9. ' chaque' → logprob: -5.130697250366211
    10. ' the' → logprob: -5.755697250366211

Token 13: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7111610174179077
    2. 'chaine' → logprob: -1.3361610174179077
    3. 's' → logprob: -2.7111611366271973
    4. 'string' → logprob: -2.9611611366271973
    5. 'cha' → logprob: -3.2111611366271973
    6. ' string' → logprob: -3.9611611366271973
    7. ' chaine' → logprob: -3.9611611366271973
    8. ' ' → logprob: -4.336161136627197
    9. '   ' → logprob: -4.336161136627197
    10. 'ch' → logprob: -5.086161136627197

Token 14: ' four' (ID: 4242)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.29698723554611206
    2. ' ' → logprob: -1.9219872951507568
    3. ' d' → logprob: -3.546987295150757
    4. ' de' → logprob: -4.046987056732178
    5. ''' → logprob: -4.171987056732178
    6. ' suivante' → logprob: -4.296987056732178
    7. 'est' → logprob: -4.796987056732178
    8. ' contient' → logprob: -5.046987056732178
    9. ' '' → logprob: -5.671987056732178
    10. ' a' → logprob: -6.046987056732178

Token 15: 'nie' (ID: 7640)
  Prédit: 'nie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nie' → logprob: -0.08977145701646805
    2. 'ni' → logprob: -2.9647715091705322
    3. 'nit' → logprob: -3.8397715091705322
    4. 'n' → logprob: -5.339771270751953
    5. 'che' → logprob: -5.464771270751953
    6. 'ée' → logprob: -7.214771270751953
    7. 'née' → logprob: -7.214771270751953
    8. 'nis' → logprob: -7.464771270751953
    9. 'ch' → logprob: -7.839771270751953
    10. 'it' → logprob: -8.339771270751953

Token 16: ' respecte' (ID: 140483)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.048698533326387405
    2. ' contient' → logprob: -3.5486984252929688
    3. 'est' → logprob: -4.673698425292969
    4. ' ' → logprob: -4.923698425292969
    5. ' a' → logprob: -7.173698425292969
    6. '   ' → logprob: -8.798698425292969
    7. '```' → logprob: -8.798698425292969
    8. ' s' → logprob: -8.798698425292969
    9. 's' → logprob: -9.173698425292969
    10. ' d' → logprob: -9.423698425292969

Token 17: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.738981306552887
    2. ' un' → logprob: -1.7389812469482422
    3. '   ' → logprob: -2.613981246948242
    4. ' le' → logprob: -2.738981246948242
    5. ' les' → logprob: -2.738981246948242
    6. ' l' → logprob: -2.863981246948242
    7. '```' → logprob: -3.988981246948242
    8. 's' → logprob: -4.113981246948242
    9. ' ' → logprob: -4.238981246948242
    10. ' une' → logprob: -4.613981246948242

Token 18: ' conditions' (ID: 6409)
  Prédit: ' règles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -1.1877416372299194
    2. ' contraintes' → logprob: -1.6877416372299194
    3. ' critères' → logprob: -2.437741756439209
    4. 'r' → logprob: -2.437741756439209
    5. ' conditions' → logprob: -2.437741756439209
    6. 'conditions' → logprob: -3.312741756439209
    7. 'con' → logprob: -3.437741756439209
    8. ' cons' → logprob: -3.687741756439209
    9. ' caractères' → logprob: -3.812741756439209
    10. ' espaces' → logprob: -3.937741756439209

Token 19: ' suivantes' (ID: 106173)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1108273267745972
    2. ' d' → logprob: -1.4858273267745972
    3. '```' → logprob: -1.4858273267745972
    4. ' ' → logprob: -2.4858274459838867
    5. '\n' → logprob: -3.3608274459838867
    6. ' :' → logprob: -3.7358274459838867
    7. '   ' → logprob: -3.9858274459838867
    8. '\' → logprob: -4.485827445983887
    9. ' \' → logprob: -5.110827445983887
    10. 'd' → logprob: -5.235827445983887

Token 20: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4064471125602722
    2. ':' → logprob: -1.156447172164917
    3. '\n' → logprob: -4.906446933746338
    4. '```' → logprob: -5.281446933746338
    5. ' :
' → logprob: -6.156446933746338
    6. ' ' → logprob: -6.406446933746338
    7. '   ' → logprob: -6.531446933746338
    8. ':
' → logprob: -7.781446933746338
    9. '\' → logprob: -8.406447410583496
    10. '  
' → logprob: -8.531447410583496

Token 21: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7877355813980103
    2. ' ' → logprob: -1.7877355813980103
    3. ' '' → logprob: -2.7877354621887207
    4. ' l' → logprob: -3.0377354621887207
    5. ' n' → logprob: -3.2877354621887207
    6. ' chaque' → logprob: -3.4127354621887207
    7. ' une' → logprob: -3.7877354621887207
    8. ' la' → logprob: -4.162735462188721
    9. ' un' → logprob: -4.162735462188721
    10. ' "' → logprob: -4.162735462188721

Token 22: ' considér' (ID: 68502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16175618767738342
    2. ' a' → logprob: -3.2867562770843506
    3. ' valid' → logprob: -3.5367562770843506
    4. ' une' → logprob: -3.9117562770843506
    5. ' un' → logprob: -4.1617560386657715
    6. ' considér' → logprob: -4.4117560386657715
    7. ' composée' → logprob: -5.0367560386657715
    8. ' accept' → logprob: -5.6617560386657715
    9. 'a' → logprob: -6.0367560386657715
    10. ' valide' → logprob: -6.2867560386657715

Token 23: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.10027147084474564
    2. 'é' → logprob: -2.350271463394165
    3. 'e' → logprob: -9.725271224975586
    4. 'ées' → logprob: -13.725271224975586
    5. 'è' → logprob: -14.475271224975586
    6. '```' → logprob: -14.475271224975586
    7. 'ee' → logprob: -14.975271224975586
    8. 'á' → logprob: -15.350271224975586
    9. 'és' → logprob: -15.725271224975586
    10. 'u' → logprob: -15.850271224975586

Token 24: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.022800931707024574
    2. 'comme' → logprob: -3.897800922393799
    3. '```' → logprob: -7.022800922393799
    4. ' as' → logprob: -7.647800922393799
    5. ' ' → logprob: -8.647801399230957
    6. ' :' → logprob: -9.147801399230957
    7. ' valid' → logprob: -9.272801399230957
    8. ' ```' → logprob: -9.522801399230957
    9. ' como' → logprob: -9.522801399230957
    10. ' en' → logprob: -9.772801399230957

Token 25: ' '' (ID: 461)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8393998146057129
    2. ' valide' → logprob: -1.339399814605713
    3. ' un' → logprob: -1.964399814605713
    4. ' valid' → logprob: -2.964399814605713
    5. ' val' → logprob: -3.839399814605713
    6. 'une' → logprob: -4.464399814605713
    7. ' acceptable' → logprob: -4.464399814605713
    8. ' accept' → logprob: -4.589399814605713
    9. 'ac' → logprob: -4.714399814605713
    10. ' ac' → logprob: -5.089399814605713

Token 26: 'AC' (ID: 2436)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.582781434059143
    2. 'ac' → logprob: -1.832781434059143
    3. 'une' → logprob: -1.957781434059143
    4. 'valid' → logprob: -2.0827813148498535
    5. 'acceptable' → logprob: -2.8327813148498535
    6. 'AC' → logprob: -3.0827813148498535
    7. ' valide' → logprob: -3.2077813148498535
    8. 'accept' → logprob: -3.2077813148498535
    9. 'correct' → logprob: -3.5827813148498535
    10. 'un' → logprob: -3.5827813148498535

Token 27: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1355353593826294
    2. 'e' → logprob: -3.51053524017334
    3. '')' → logprob: -3.88553524017334
    4. '"' → logprob: -4.01053524017334
    5. 'cept' → logprob: -4.13553524017334
    6. '':' → logprob: -4.76053524017334
    7. ')' → logprob: -5.13553524017334
    8. 'CEPT' → logprob: -5.63553524017334
    9. ''''' → logprob: -5.63553524017334
    10. '"""' → logprob: -5.76053524017334

Token 28: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7031211256980896
    2. ':' → logprob: -0.9531211256980896
    3. ' :' → logprob: -3.2031211853027344
    4. ''' → logprob: -3.9531211853027344
    5. ')' → logprob: -4.078121185302734
    6. ' ' → logprob: -4.703121185302734
    7. '```' → logprob: -4.828121185302734
    8. '"' → logprob: -5.078121185302734
    9. '"""' → logprob: -6.078121185302734
    10. '.' → logprob: -6.078121185302734

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01584583893418312
    2. '\n' → logprob: -4.890845775604248
    3. '       ' → logprob: -5.390845775604248
    4. '    ' → logprob: -7.015845775604248
    5. '"""
' → logprob: -7.015845775604248
    6. '    
' → logprob: -7.765845775604248
    7. '```' → logprob: -7.890845775604248
    8. ' 
' → logprob: -8.765846252441406
    9. '"""' → logprob: -8.765846252441406
    10. '
' → logprob: -9.515846252441406

Token 30: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013185291551053524
    2. '\n' → logprob: -4.763185501098633
    3. '    ' → logprob: -7.388185501098633
    4. '    
' → logprob: -7.513185501098633
    5. '"""
' → logprob: -7.888185501098633
    6. '```' → logprob: -7.888185501098633
    7. ' ' → logprob: -8.138185501098633
    8. ' La' → logprob: -8.263185501098633
    9. '       ' → logprob: -8.263185501098633
    10. ' un' → logprob: -8.638185501098633

Token 31: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5402525663375854
    2. ' la' → logprob: -1.7902525663375854
    3. 's' → logprob: -2.290252685546875
    4. ' chaque' → logprob: -2.790252685546875
    5. ' La' → logprob: -3.165252685546875
    6. 'cont' → logprob: -3.665252685546875
    7. 't' → logprob: -3.665252685546875
    8. ' contient' → logprob: -3.665252685546875
    9. ' Le' → logprob: -3.790252685546875
    10. ' s' → logprob: -4.040252685546875

Token 32: ' premier' (ID: 15506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5655294060707092
    2. ' s' → logprob: -2.4405293464660645
    3. ' caractère' → logprob: -2.4405293464660645
    4. 'c' → logprob: -2.5655293464660645
    5. 'car' → logprob: -3.6905293464660645
    6. ' caract' → logprob: -3.8155293464660645
    7. 'a' → logprob: -3.9405293464660645
    8. ' c' → logprob: -4.0655293464660645
    9. ' premier' → logprob: -4.0655293464660645
    10. '   ' → logprob: -4.3155293464660645

Token 33: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.8044685125350952
    2. 'car' → logprob: -0.9294685125350952
    3. ' caract' → logprob: -2.8044686317443848
    4. ' ' → logprob: -3.1794686317443848
    5. ' car' → logprob: -3.8044686317443848
    6. 'c' → logprob: -4.554468631744385
    7. ' c' → logprob: -5.304468631744385
    8. ' caractères' → logprob: -5.429468631744385
    9. 'e' → logprob: -6.429468631744385
    10. 's' → logprob: -6.429468631744385

Token 34: ' doit' (ID: 21822)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5393284559249878
    2. ' '' → logprob: -1.6643284559249878
    3. 's' → logprob: -2.5393285751342773
    4. 'est' → logprob: -2.9143285751342773
    5. ' ' → logprob: -3.2893285751342773
    6. ''' → logprob: -3.9143285751342773
    7. 'e' → logprob: -4.664328575134277
    8. 'd' → logprob: -5.164328575134277
    9. ''est' → logprob: -5.539328575134277
    10. ''s' → logprob: -6.039328575134277

Token 35: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.1302882730960846
    2. 'être' → logprob: -2.5052883625030518
    3. ''être' → logprob: -4.130288124084473
    4. 'ê' → logprob: -4.880288124084473
    5. ' ê' → logprob: -5.255288124084473
    6. ' etre' → logprob: -5.630288124084473
    7. ' ' → logprob: -6.505288124084473
    8. 'êt' → logprob: -6.880288124084473
    9. 'e' → logprob: -7.005288124084473
    10. ' '' → logprob: -7.255288124084473

Token 36: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.1815489530563354
    2. ''un' → logprob: -1.4315489530563354
    3. ''A' → logprob: -1.5565489530563354
    4. ''' → logprob: -2.556549072265625
    5. ''a' → logprob: -3.056549072265625
    6. ''u' → logprob: -3.431549072265625
    7. 'a' → logprob: -3.931549072265625
    8. ''une' → logprob: -4.306549072265625
    9. ''U' → logprob: -4.806549072265625
    10. 'A' → logprob: -4.931549072265625

Token 37: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09036245942115784
    2. 'a' → logprob: -2.965362548828125
    3. ''A' → logprob: -3.590362548828125
    4. ''' → logprob: -5.465362548828125
    5. ''a' → logprob: -6.715362548828125
    6. '`' → logprob: -8.277862548828125
    7. 'C' → logprob: -8.902862548828125
    8. '"' → logprob: -9.402862548828125
    9. '"A' → logprob: -9.527862548828125
    10. ''ac' → logprob: -9.652862548828125

Token 38: ''.
' (ID: 49980)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.660712718963623
    2. ''' → logprob: -0.785712718963623
    3. ''C' → logprob: -4.535712718963623
    4. '')' → logprob: -4.910712718963623
    5. 'c' → logprob: -5.160712718963623
    6. '"' → logprob: -6.785712718963623
    7. '')
' → logprob: -6.910712718963623
    8. ''
' → logprob: -6.910712718963623
    9. 'u' → logprob: -8.910713195800781
    10. ''.' → logprob: -9.160713195800781

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013211406767368317
    2. '"""' → logprob: -5.388211250305176
    3. '"""
' → logprob: -5.888211250305176
    4. ')' → logprob: -7.138211250305176
    5. ' """
' → logprob: -7.513211250305176
    6. '"' → logprob: -7.888211250305176
    7. ' return' → logprob: -7.888211250305176
    8. ' if' → logprob: -8.013211250305176
    9. 'if' → logprob: -8.013211250305176
    10. 'e' → logprob: -8.138211250305176

Token 40: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005030240397900343
    2. '\n' → logprob: -6.505030155181885
    3. ')' → logprob: -7.130030155181885
    4. '"""' → logprob: -7.505030155181885
    5. '```' → logprob: -7.630030155181885
    6. '"""
' → logprob: -8.630030632019043
    7. '    ' → logprob: -8.755030632019043
    8. ' ' → logprob: -8.755030632019043
    9. '  ' → logprob: -8.880030632019043
    10. 'n' → logprob: -9.380030632019043

Token 41: ' Il' (ID: 5329)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Le' → logprob: -1.3920953273773193
    2. 'C' → logprob: -1.5170953273773193
    3. 'c' → logprob: -1.6420953273773193
    4. ' le' → logprob: -2.0170953273773193
    5. 's' → logprob: -2.6420953273773193
    6. 'Le' → logprob: -3.5170953273773193
    7. 'l' → logprob: -4.017095565795898
    8. ' C' → logprob: -4.392095565795898
    9. '   ' → logprob: -4.517095565795898
    10. 'le' → logprob: -4.642095565795898

Token 42: ' doit' (ID: 21822)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06472525000572205
    2. 'n' → logprob: -4.314725399017334
    3. ' a' → logprob: -4.689725399017334
    4. ' est' → logprob: -4.814725399017334
    5. ''' → logprob: -5.314725399017334
    6. 'f' → logprob: -5.439725399017334
    7. ' faut' → logprob: -5.564725399017334
    8. ' ' → logprob: -5.689725399017334
    9. ' s' → logprob: -6.314725399017334
    10. ' doit' → logprob: -6.439725399017334

Token 43: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20518827438354492
    2. ' être' → logprob: -2.080188274383545
    3. 'être' → logprob: -3.580188274383545
    4. 'y' → logprob: -4.330188274383545
    5. 's' → logprob: -5.080188274383545
    6. 'contin' → logprob: -6.330188274383545
    7. ' suivre' → logprob: -6.330188274383545
    8. ' conten' → logprob: -6.455188274383545
    9. ' avoir' → logprob: -7.205188274383545
    10. 'avoir' → logprob: -7.455188274383545

Token 44: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.30651071667671204
    2. ' avoir' → logprob: -1.4315106868743896
    3. 'a' → logprob: -4.431510925292969
    4. 'voir' → logprob: -4.806510925292969
    5. ''avoir' → logprob: -5.431510925292969
    6. ' a' → logprob: -8.431510925292969
    7. '’avoir' → logprob: -9.556510925292969
    8. '   ' → logprob: -9.681510925292969
    9. 'avait' → logprob: -10.306510925292969
    10. ' ' → logprob: -10.431510925292969

Token 45: ' exactement' (ID: 108701)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.09765941649675369
    2. ' un' → logprob: -3.5976593494415283
    3. ' ' → logprob: -4.097659587860107
    4. ' exactement' → logprob: -4.222659587860107
    5. 'au' → logprob: -4.472659587860107
    6. ''au' → logprob: -4.972659587860107
    7. ' exactly' → logprob: -5.722659587860107
    8. ''un' → logprob: -6.097659587860107
    9. 'exact' → logprob: -6.347659587860107
    10. ' une' → logprob: -6.597659587860107

Token 46: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.919258177280426
    2. ' one' → logprob: -1.5442581176757812
    3. ' un' → logprob: -1.7942581176757812
    4. '1' → logprob: -3.0442581176757812
    5. ''un' → logprob: -3.1692581176757812
    6. ' exactly' → logprob: -3.7942581176757812
    7. 'un' → logprob: -3.7942581176757812
    8. ' a' → logprob: -4.044258117675781
    9. 'une' → logprob: -4.044258117675781
    10. ' une' → logprob: -4.919258117675781

Token 47: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -1.0335025787353516
    2. ''' → logprob: -1.2835025787353516
    3. 'C' → logprob: -2.0335025787353516
    4. ' '' → logprob: -2.4085025787353516
    5. ' ' → logprob: -2.7835025787353516
    6. ' C' → logprob: -3.1585025787353516
    7. 'c' → logprob: -3.9085025787353516
    8. 'n' → logprob: -5.783502578735352
    9. 's' → logprob: -6.158502578735352
    10. '  ' → logprob: -6.658502578735352

Token 48: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005094768479466438
    2. ''C' → logprob: -5.8800950050354
    3. 'c' → logprob: -7.1300950050354
    4. ''' → logprob: -7.1300950050354
    5. 'A' → logprob: -8.255094528198242
    6. 'B' → logprob: -9.755094528198242
    7. ' C' → logprob: -10.255094528198242
    8. '')' → logprob: -10.442594528198242
    9. ')' → logprob: -10.630094528198242
    10. ' '' → logprob: -10.692594528198242

Token 49: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00014442270912695676
    2. '')' → logprob: -9.625144004821777
    3. ' '' → logprob: -11.000144004821777
    4. 'e' → logprob: -11.000144004821777
    5. ''''' → logprob: -11.625144004821777
    6. 'u' → logprob: -11.875144004821777
    7. '"' → logprob: -11.875144004821777
    8. ''"' → logprob: -12.375144004821777
    9. ''au' → logprob: -13.500144004821777
    10. '```' → logprob: -13.500144004821777

Token 50: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.435863733291626
    2. ' ' → logprob: -1.810863733291626
    3. ' dans' → logprob: -2.185863733291626
    4. 'entre' → logprob: -2.935863733291626
    5. '   ' → logprob: -3.060863733291626
    6. ''' → logprob: -3.060863733291626
    7. ' somewhere' → logprob: -3.185863733291626
    8. 'au' → logprob: -3.185863733291626
    9. 's' → logprob: -3.560863733291626
    10. ' au' → logprob: -4.060863494873047

Token 51: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2024211883544922
    2. ' s' → logprob: -2.577421188354492
    3. ' la' → logprob: -2.702421188354492
    4. ' le' → logprob: -4.327421188354492
    5. 'l' → logprob: -5.202421188354492
    6. 'la' → logprob: -5.202421188354492
    7. ' l' → logprob: -5.577421188354492
    8. 'le' → logprob: -5.702421188354492
    9. '<|end|>' → logprob: -5.827421188354492
    10. ' the' → logprob: -6.577421188354492

Token 52: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.414338618516922
    2. 'chaine' → logprob: -2.2893385887145996
    3. 'string' → logprob: -2.4143385887145996
    4. ' chaîne' → logprob: -2.9143385887145996
    5. ' string' → logprob: -3.4143385887145996
    6. ' s' → logprob: -4.0393385887146
    7. '   ' → logprob: -4.6643385887146
    8. ' chaine' → logprob: -5.5393385887146
    9. 'part' → logprob: -5.6643385887146
    10. ' ' → logprob: -5.7893385887146

Token 53: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.1662180423736572
    2. '_' → logprob: -1.4162180423736572
    3. '-cha' → logprob: -1.5412180423736572
    4. '-' → logprob: -2.0412180423736572
    5. 'string' → logprob: -3.6662180423736572
    6. '-string' → logprob: -4.166217803955078
    7. 's' → logprob: -4.291217803955078
    8. '_string' → logprob: -4.291217803955078
    9. '_c' → logprob: -4.916217803955078
    10. 'tring' → logprob: -5.416217803955078

Token 54: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.014985756948590279
    2. 'ine' → logprob: -5.51498556137085
    3. 'ïne' → logprob: -5.88998556137085
    4. 'î' → logprob: -5.88998556137085
    5. 'ne' → logprob: -6.38998556137085
    6. 'în' → logprob: -7.38998556137085
    7. '```' → logprob: -7.63998556137085
    8. '   ' → logprob: -7.63998556137085
    9. '\' → logprob: -8.139986038208008
    10. '^' → logprob: -8.639986038208008

Token 55: ' qui' (ID: 2780)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.30496788024902344
    2. 's' → logprob: -1.5549678802490234
    3. '   ' → logprob: -3.9299678802490234
    4. ' entre' → logprob: -5.179967880249023
    5. '[' → logprob: -5.554967880249023
    6. 'de' → logprob: -5.679967880249023
    7. ' de' → logprob: -5.679967880249023
    8. ' ' → logprob: -6.054967880249023
    9. ' située' → logprob: -6.304967880249023
    10. '```' → logprob: -6.554967880249023

Token 56: ' commence' (ID: 44755)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7378655672073364
    2. ' s' → logprob: -1.1128655672073364
    3. ' va' → logprob: -3.112865447998047
    4. 'comm' → logprob: -3.237865447998047
    5. ' commence' → logprob: -3.362865447998047
    6. 'va' → logprob: -4.237865447998047
    7. 'se' → logprob: -4.487865447998047
    8. 'su' → logprob: -4.487865447998047
    9. ' se' → logprob: -4.987865447998047
    10. ' suit' → logprob: -5.362865447998047

Token 57: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02540743164718151
    2. 'à' → logprob: -3.900407314300537
    3. 'au' → logprob: -6.400407314300537
    4. ' au' → logprob: -7.025407314300537
    5. ' ' → logprob: -7.150407314300537
    6. ' from' → logprob: -8.025407791137695
    7. ' après' → logprob: -8.400407791137695
    8. 'from' → logprob: -8.650407791137695
    9. '   ' → logprob: -8.775407791137695
    10. ' at' → logprob: -8.900407791137695

Token 58: ' troisième' (ID: 75373)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2113531529903412
    2. '2' → logprob: -2.961353063583374
    3. 'index' → logprob: -3.086353063583374
    4. '```' → logprob: -3.711353063583374
    5. 'tro' → logprob: -4.336353302001953
    6. '3' → logprob: -4.461353302001953
    7. ' ' → logprob: -4.586353302001953
    8. ' troisième' → logprob: -4.836353302001953
    9. ' index' → logprob: -5.086353302001953
    10. ' deuxième' → logprob: -5.461353302001953

Token 59: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5390036106109619
    2. 'car' → logprob: -1.039003610610962
    3. ' caract' → logprob: -3.039003610610962
    4. ' ' → logprob: -4.789003372192383
    5. ' caractères' → logprob: -6.164003372192383
    6. ' car' → logprob: -6.164003372192383
    7. 'c' → logprob: -6.914003372192383
    8. '_car' → logprob: -8.664003372192383
    9. 'élé' → logprob: -8.789003372192383
    10. 's' → logprob: -9.039003372192383

Token 60: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47869497537612915
    2. 's' → logprob: -1.2286949157714844
    3. ' s' → logprob: -3.9786949157714844
    4. ' ' → logprob: -4.603694915771484
    5. ' (' → logprob: -4.728694915771484
    6. ',' → logprob: -4.728694915771484
    7. ' et' → logprob: -4.853694915771484
    8. '(' → logprob: -5.478694915771484
    9. ''' → logprob: -5.728694915771484
    10. '"' → logprob: -5.853694915771484

Token 61: ' s' (ID: 265)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.636798620223999
    2. 'se' → logprob: -1.136798620223999
    3. 's' → logprob: -2.761798620223999
    4. ' s' → logprob: -3.386798620223999
    5. 'contin' → logprob: -3.386798620223999
    6. ' continue' → logprob: -5.011798858642578
    7. 'continue' → logprob: -5.761798858642578
    8. ' va' → logprob: -5.886798858642578
    9. ' ' → logprob: -6.511798858642578
    10. '   ' → logprob: -7.011798858642578

Token 62: ''arr' (ID: 49695)
  Prédit: ''ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.24501313269138336
    2. 'e' → logprob: -1.6200131177902222
    3. ''' → logprob: -5.620013236999512
    4. 'et' → logprob: -6.120013236999512
    5. 'ét' → logprob: -6.245013236999512
    6. 'uit' → logprob: -6.245013236999512
    7. '’ét' → logprob: -6.370013236999512
    8. ''é' → logprob: -6.620013236999512
    9. ''arr' → logprob: -6.745013236999512
    10. ''e' → logprob: -7.370013236999512

Token 63: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0007356545538641512
    2. 'êter' → logprob: -7.875735759735107
    3. 'ète' → logprob: -8.87573528289795
    4. 'ete' → logprob: -9.37573528289795
    5. 'ê' → logprob: -9.50073528289795
    6. 'êt' → logprob: -10.75073528289795
    7. '\' → logprob: -11.37573528289795
    8. '^' → logprob: -11.75073528289795
    9. 'être' → logprob: -12.75073528289795
    10. 'êtes' → logprob: -13.12573528289795

Token 64: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.3477547764778137
    2. ' à' → logprob: -1.847754716873169
    3. 'au' → logprob: -2.097754716873169
    4. 'à' → logprob: -4.972754955291748
    5. ' ' → logprob: -6.097754955291748
    6. ' après' → logprob: -7.347754955291748
    7. ' avant' → logprob: -7.347754955291748
    8. ' a' → logprob: -7.472754955291748
    9. ' aux' → logprob: -7.597754955291748
    10. ' at' → logprob: -8.34775447845459

Token 65: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7426897883415222
    2. 'la' → logprob: -1.367689847946167
    3. ' la' → logprob: -1.617689847946167
    4. ' l' → logprob: -3.117689847946167
    5. 's' → logprob: -5.367689609527588
    6. 'le' → logprob: -5.742689609527588
    7. 'au' → logprob: -5.992689609527588
    8. 'len' → logprob: -6.242689609527588
    9. 'u' → logprob: -6.367689609527588
    10. ' ' → logprob: -6.492689609527588

Token 66: ''avant' (ID: 161711)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.080734483897686
    2. 'e' → logprob: -3.3307344913482666
    3. 'en' → logprob: -3.8307344913482666
    4. 'ength' → logprob: -4.4557342529296875
    5. 'len' → logprob: -5.8307342529296875
    6. 'i' → logprob: -6.7057342529296875
    7. 'index' → logprob: -7.2057342529296875
    8. ''' → logprob: -7.4557342529296875
    9. '   ' → logprob: -7.5807342529296875
    10. '=len' → logprob: -7.7057342529296875

Token 67: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.2901378273963928
    2. '-' → logprob: -1.540137767791748
    3. 'der' → logprob: -3.415137767791748
    4. 'd' → logprob: -5.790137767791748
    5. ' ' → logprob: -7.290137767791748
    6. '   ' → logprob: -8.540138244628906
    7. ' dernier' → logprob: -8.665138244628906
    8. '```' → logprob: -9.290138244628906
    9. ' d' → logprob: -9.415138244628906
    10. ' derni' → logprob: -9.790138244628906

Token 68: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.04984636232256889
    2. 'der' → logprob: -3.0498464107513428
    3. '-' → logprob: -7.299846172332764
    4. 'd' → logprob: -8.299846649169922
    5. '```' → logprob: -8.799846649169922
    6. '   ' → logprob: -9.924846649169922
    7. ' dernier' → logprob: -10.674846649169922
    8. '``' → logprob: -10.924846649169922
    9. ' ' → logprob: -10.924846649169922
    10. 'den' → logprob: -11.174846649169922

Token 69: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.2151460349559784
    2. 'i' → logprob: -1.8401460647583008
    3. 'ière' → logprob: -3.590146064758301
    4. '-' → logprob: -5.715146064758301
    5. 'e' → logprob: -6.090146064758301
    6. '```' → logprob: -7.590146064758301
    7. '2' → logprob: -8.2151460647583
    8. '' → logprob: -8.8401460647583
    9. 'ère' → logprob: -8.8401460647583
    10. '1' → logprob: -9.5901460647583

Token 70: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6902210116386414
    2. 'e' → logprob: -2.690221071243286
    3. ' ' → logprob: -2.690221071243286
    4. ' )' → logprob: -2.690221071243286
    5. ''' → logprob: -2.940221071243286
    6. 's' → logprob: -3.565221071243286
    7. 'c' → logprob: -3.565221071243286
    8. 'car' → logprob: -3.690221071243286
    9. ' caract' → logprob: -3.690221071243286
    10. '"' → logprob: -3.815221071243286

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4017217755317688
    2. '"' → logprob: -1.276721715927124
    3. '"""
' → logprob: -3.901721715927124
    4. '"""' → logprob: -4.026721954345703
    5. ''' → logprob: -5.651721954345703
    6. ')' → logprob: -6.151721954345703
    7. ' ' → logprob: -6.401721954345703
    8. '    ' → logprob: -6.901721954345703
    9. ' """
' → logprob: -7.026721954345703
    10. ' 
' → logprob: -7.276721954345703

Token 72: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44548943638801575
    2. '\n' → logprob: -1.4454894065856934
    3. '\' → logprob: -2.8204894065856934
    4. '"' → logprob: -3.8204894065856934
    5. '"""
' → logprob: -4.070489406585693
    6. '"\' → logprob: -5.445489406585693
    7. '```' → logprob: -5.570489406585693
    8. '
' → logprob: -5.820489406585693
    9. ')
' → logprob: -5.820489406585693
    10. ''' → logprob: -6.445489406585693

Token 73: ' Tous' (ID: 64900)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14952553808689117
    2. ' Le' → logprob: -2.2745256423950195
    3. ' La' → logprob: -4.0245256423950195
    4. 'Le' → logprob: -5.2745256423950195
    5. ' return' → logprob: -5.2745256423950195
    6. '    ' → logprob: -6.2745256423950195
    7. 'La' → logprob: -6.7745256423950195
    8. 'def' → logprob: -7.0245256423950195
    9. ' ' → logprob: -7.0245256423950195
    10. 'return' → logprob: -7.0245256423950195

Token 74: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.04206674173474312
    2. 'les' → logprob: -3.417066812515259
    3. 's' → logprob: -5.04206657409668
    4. '<|end|>' → logprob: -6.54206657409668
    5. ' ' → logprob: -8.41706657409668
    6. 'es' → logprob: -9.41706657409668
    7. ' le' → logprob: -9.79206657409668
    8. 'le' → logprob: -10.91706657409668
    9. 'Les' → logprob: -11.41706657409668
    10. 'e' → logprob: -11.41706657409668

Token 75: ' autres' (ID: 18701)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2116454690694809
    2. 'aut' → logprob: -2.3366453647613525
    3. ' caractères' → logprob: -2.5866453647613525
    4. ' autres' → logprob: -4.211645603179932
    5. ' car' → logprob: -6.211645603179932
    6. ''autres' → logprob: -7.961645603179932
    7. ' ' → logprob: -8.211645126342773
    8. 's' → logprob: -8.461645126342773
    9. ' caracteres' → logprob: -8.961645126342773
    10. ' caract' → logprob: -9.086645126342773

Token 76: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.63690584897995
    2. 'car' → logprob: -0.76190584897995
    3. ' car' → logprob: -6.761905670166016
    4. ' caract' → logprob: -6.886905670166016
    5. ' caracteres' → logprob: -7.011905670166016
    6. 's' → logprob: -7.886905670166016
    7. 'c' → logprob: -8.261905670166016
    8. ' ' → logprob: -8.761905670166016
    9. ' caractère' → logprob: -9.011905670166016
    10. '_car' → logprob: -9.011905670166016

Token 77: ',' (ID: 11)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.4145083427429199
    2. 's' → logprob: -1.91450834274292
    3. ' sont' → logprob: -2.03950834274292
    4. ' de' → logprob: -3.41450834274292
    5. 'de' → logprob: -4.28950834274292
    6. 'do' → logprob: -5.78950834274292
    7. ' must' → logprob: -5.91450834274292
    8. '   ' → logprob: -6.03950834274292
    9. ' ' → logprob: -6.53950834274292
    10. ' do' → logprob: -7.28950834274292

Token 78: ' après' (ID: 16460)
  Prédit: ' sauf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sauf' → logprob: -0.8200052380561829
    2. 's' → logprob: -1.320005178451538
    3. ' except' → logprob: -2.070005178451538
    4. ' en' → logprob: -3.570005178451538
    5. ' à' → logprob: -3.695005178451538
    6. ' après' → logprob: -3.945005178451538
    7. '   ' → logprob: -4.070005416870117
    8. '    ' → logprob: -4.195005416870117
    9. 'except' → logprob: -4.195005416870117
    10. ' autres' → logprob: -5.070005416870117

Token 79: ' avoir' (ID: 16595)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3934672474861145
    2. ' '' → logprob: -1.6434671878814697
    3. 'le' → logprob: -2.8934671878814697
    4. ''' → logprob: -4.018467426300049
    5. ' la' → logprob: -4.643467426300049
    6. 's' → logprob: -4.643467426300049
    7. 'l' → logprob: -5.018467426300049
    8. ' l' → logprob: -5.143467426300049
    9. ''A' → logprob: -5.143467426300049
    10. ' A' → logprob: -5.518467426300049

Token 80: ' remplac' (ID: 140149)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.8436012864112854
    2. ' été' → logprob: -1.4686012268066406
    3. 's' → logprob: -1.7186012268066406
    4. 'v' → logprob: -2.5936012268066406
    5. 't' → logprob: -4.093601226806641
    6. ' vér' → logprob: -4.218601226806641
    7. 'é' → logprob: -5.343601226806641
    8. ' ' → logprob: -5.593601226806641
    9. 'ét' → logprob: -5.906101226806641
    10. 'être' → logprob: -6.031101226806641

Token 81: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0008484598365612328
    2. 'e' → logprob: -7.875848293304443
    3. 'u' → logprob: -8.250848770141602
    4. 'és' → logprob: -9.250848770141602
    5. 'er' → logprob: -9.500848770141602
    6. 'ç' → logprob: -12.000848770141602
    7. 'ée' → logprob: -12.375848770141602
    8. 'ées' → logprob: -12.625848770141602
    9. '#' → logprob: -12.750848770141602
    10. 'ué' → logprob: -12.875848770141602

Token 82: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.107879638671875
    2. ' les' → logprob: -1.482879638671875
    3. 's' → logprob: -1.732879638671875
    4. ' le' → logprob: -2.732879638671875
    5. ''s' → logprob: -2.857879638671875
    6. ''' → logprob: -3.482879638671875
    7. ' s' → logprob: -3.732879638671875
    8. ' ' → logprob: -3.982879638671875
    9. 'le' → logprob: -4.607879638671875
    10. 'les' → logprob: -4.732879638671875

Token 83: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1798319816589355
    2. 'A' → logprob: -1.4298319816589355
    3. 's' → logprob: -1.5548319816589355
    4. ''' → logprob: -2.4298319816589355
    5. ''s' → logprob: -3.1798319816589355
    6. ''C' → logprob: -3.5548319816589355
    7. ''A' → logprob: -3.6798319816589355
    8. 'l' → logprob: -4.0548319816589355
    9. 'c' → logprob: -4.1798319816589355
    10. ' '' → logprob: -5.3048319816589355

Token 84: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16684192419052124
    2. '',' → logprob: -1.916841983795166
    3. ''s' → logprob: -5.791841983795166
    4. 's' → logprob: -6.916841983795166
    5. 'par' → logprob: -7.291841983795166
    6. ' par' → logprob: -7.541841983795166
    7. ' '' → logprob: -7.791841983795166
    8. '')' → logprob: -8.791841506958008
    9. ' ',' → logprob: -9.291841506958008
    10. ')'' → logprob: -9.666841506958008

Token 85: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.012287826277315617
    2. 'par' → logprob: -4.637287616729736
    3. 's' → logprob: -6.637287616729736
    4. ' by' → logprob: -7.262287616729736
    5. ',' → logprob: -8.012288093566895
    6. ' dans' → logprob: -9.762288093566895
    7. 'dans' → logprob: -10.637288093566895
    8. ' ' → logprob: -10.762288093566895
    9. ' et' → logprob: -11.387288093566895
    10. ')' → logprob: -12.137288093566895

Token 86: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.43999022245407104
    2. ''' → logprob: -1.5649902820587158
    3. ' '' → logprob: -3.689990282058716
    4. 'A' → logprob: -3.689990282058716
    5. '''' → logprob: -3.939990282058716
    6. ' ' → logprob: -4.439990043640137
    7. ''un' → logprob: -4.564990043640137
    8. ' A' → logprob: -4.814990043640137
    9. '```' → logprob: -4.939990043640137
    10. ''s' → logprob: -4.939990043640137

Token 87: 'c' (ID: 66)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.8313025832176208
    2. 'A' → logprob: -0.9563025832176208
    3. ''' → logprob: -1.9563026428222656
    4. '''' → logprob: -3.4563026428222656
    5. ''.' → logprob: -6.831302642822266
    6. 'a' → logprob: -7.206302642822266
    7. ''''' → logprob: -7.456302642822266
    8. 'B' → logprob: -7.581302642822266
    9. '```' → logprob: -7.706302642822266
    10. '')' → logprob: -7.831302642822266

Token 88: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8846497535705566
    2. 'a' → logprob: -2.0096497535705566
    3. '',' → logprob: -2.0096497535705566
    4. ''' → logprob: -2.1346497535705566
    5. ''a' → logprob: -3.0096497535705566
    6. ''s' → logprob: -3.3846497535705566
    7. 'h' → logprob: -3.8846497535705566
    8. 's' → logprob: -4.384649753570557
    9. ''',' → logprob: -4.384649753570557
    10. 'e' → logprob: -5.134649753570557

Token 89: ' doivent' (ID: 44722)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8991310000419617
    2. ' sont' → logprob: -1.2741310596466064
    3. '   ' → logprob: -1.6491310596466064
    4. ' doivent' → logprob: -2.5241310596466064
    5. ' s' → logprob: -4.524130821228027
    6. ' def' → logprob: -5.274130821228027
    7. ' return' → logprob: -5.399130821228027
    8. '    ' → logprob: -6.149130821228027
    9. ' n' → logprob: -6.149130821228027
    10. 'def' → logprob: -6.524130821228027

Token 90: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.12508755922317505
    2. 'être' → logprob: -2.5000874996185303
    3. ' etre' → logprob: -4.125087738037109
    4. ' be' → logprob: -4.875087738037109
    5. ''être' → logprob: -6.125087738037109
    6. '<|end|>' → logprob: -6.625087738037109
    7. 's' → logprob: -6.875087738037109
    8. 'e' → logprob: -6.875087738037109
    9. 'êtres' → logprob: -7.250087738037109
    10. '’être' → logprob: -7.375087738037109

Token 91: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.156145453453064
    2. ' soit' → logprob: -2.1561455726623535
    3. ' '' → logprob: -2.2811455726623535
    4. 'des' → logprob: -2.7811455726623535
    5. 'dans' → logprob: -2.9061455726623535
    6. ''d' → logprob: -2.9061455726623535
    7. ' entre' → logprob: -3.4061455726623535
    8. 's' → logprob: -3.6561455726623535
    9. ' en' → logprob: -3.7811455726623535
    10. 'so' → logprob: -3.9061455726623535

Token 92: ' lettres' (ID: 101234)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2435400485992432
    2. ''A' → logprob: -1.2435400485992432
    3. ''' → logprob: -2.118540048599243
    4. 'm' → logprob: -2.868540048599243
    5. ' A' → logprob: -3.118540048599243
    6. 'a' → logprob: -3.118540048599243
    7. ' '' → logprob: -3.493540048599243
    8. ''a' → logprob: -3.743540048599243
    9. 'r' → logprob: -4.368539810180664
    10. 's' → logprob: -4.618539810180664

Token 93: ' minus' (ID: 40335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2457962036132812
    2. '_' → logprob: -1.6207962036132812
    3. 'e' → logprob: -2.2457962036132812
    4. ')' → logprob: -2.4957962036132812
    5. ''' → logprob: -3.2457962036132812
    6. 'r' → logprob: -3.3707962036132812
    7. ' )' → logprob: -3.3707962036132812
    8. 's' → logprob: -3.4957962036132812
    9. ' a' → logprob: -3.7457962036132812
    10. ' ' → logprob: -3.7457962036132812

Token 94: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.011584601365029812
    2. 'c' → logprob: -4.886584758758545
    3. '```' → logprob: -5.636584758758545
    4. '   ' → logprob: -10.011584281921387
    5. 'cul' → logprob: -10.011584281921387
    6. 'u' → logprob: -10.011584281921387
    7. 'ules' → logprob: -10.136584281921387
    8. '``' → logprob: -10.261584281921387
    9. '' → logprob: -10.511584281921387
    10. 'culas' → logprob: -10.636584281921387

Token 95: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6061221361160278
    2. '\n' → logprob: -1.4811221361160278
    3. '"' → logprob: -2.2311220169067383
    4. '"""
' → logprob: -3.6061220169067383
    5. ')' → logprob: -3.9811220169067383
    6. ':
' → logprob: -4.856122016906738
    7. '"\' → logprob: -4.856122016906738
    8. '"""' → logprob: -4.981122016906738
    9. ')
' → logprob: -5.231122016906738
    10. ' 
' → logprob: -5.231122016906738

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05160103738307953
    2. '"' → logprob: -4.051600933074951
    3. '"""
' → logprob: -4.426600933074951
    4. '"""' → logprob: -4.926600933074951
    5. '```' → logprob: -5.801600933074951
    6. '
' → logprob: -5.926600933074951
    7. ' """
' → logprob: -6.176600933074951
    8. ' 
' → logprob: -6.551600933074951
    9. ')' → logprob: -6.926600933074951
    10. ')
' → logprob: -7.426600933074951

Token 97: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07435430586338043
    2. '"""' → logprob: -3.074354410171509
    3. '"' → logprob: -4.32435417175293
    4. '"""
' → logprob: -5.07435417175293
    5. '```' → logprob: -6.82435417175293
    6. ' """
' → logprob: -7.19935417175293
    7. '  ' → logprob: -7.44935417175293
    8. ' """' → logprob: -7.82435417175293
    9. '
' → logprob: -7.82435417175293
    10. ' ' → logprob: -8.07435417175293

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7306414842605591
    2. ' :' → logprob: -1.605641484260559
    3. ')' → logprob: -2.1056413650512695
    4. '):' → logprob: -2.6056413650512695
    5. ',' → logprob: -3.2306413650512695
    6. ' )' → logprob: -4.2306413650512695
    7. '[' → logprob: -4.3556413650512695
    8. ' ,' → logprob: -4.4806413650512695
    9. ' ):' → logprob: -4.4806413650512695
    10. ' ' → logprob: -4.7306413650512695

Token 99: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43536436557769775
    2. ' s' → logprob: -1.8103643655776978
    3. '   ' → logprob: -2.185364246368408
    4. ')' → logprob: -3.435364246368408
    5. ' ' → logprob: -3.685364246368408
    6. ' )' → logprob: -4.185364246368408
    7. '    ' → logprob: -6.060364246368408
    8. '  ' → logprob: -8.060364723205566
    9. 'n' → logprob: -8.810364723205566
    10. ''' → logprob: -8.810364723205566

Token 100: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.038252752274274826
    2. ' s' → logprob: -3.288252830505371
    3. '   ' → logprob: -8.538252830505371
    4. 'str' → logprob: -11.413252830505371
    5. '`s' → logprob: -13.538252830505371
    6. 'self' → logprob: -14.163252830505371
    7. ' str' → logprob: -14.163252830505371
    8. '```' → logprob: -14.413252830505371
    9. '	s' → logprob: -14.913252830505371
    10. '       ' → logprob: -15.288252830505371

Token 101: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08030948787927628
    2. '):' → logprob: -2.5803093910217285
    3. ' :' → logprob: -7.5803093910217285
    4. ':str' → logprob: -7.7053093910217285
    5. ')' → logprob: -8.580309867858887
    6. '):
' → logprob: -9.330309867858887
    7. '.startswith' → logprob: -9.955309867858887
    8. ' ):' → logprob: -9.955309867858887
    9. '   ' → logprob: -10.580309867858887
    10. ',' → logprob: -10.830309867858887

Token 102: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.930552313453518e-05
    2. ' str' → logprob: -10.375049591064453
    3. 's' → logprob: -11.125049591064453
    4. 'st' → logprob: -13.250049591064453
    5. 'string' → logprob: -13.875049591064453
    6. ')' → logprob: -15.000049591064453
    7. ':str' → logprob: -15.500049591064453
    8. 'stri' → logprob: -15.875049591064453
    9. '[str' → logprob: -16.750049591064453
    10. '(str' → logprob: -18.375049591064453

Token 103: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1429613083600998
    2. '):' → logprob: -2.017961263656616
    3. '):
' → logprob: -8.392961502075195
    4. ' )' → logprob: -10.892961502075195
    5. ' ):' → logprob: -11.142961502075195
    6. '   ' → logprob: -11.517961502075195
    7. '<|end|>' → logprob: -12.767961502075195
    8. ' ' → logprob: -13.267961502075195
    9. '):

' → logprob: -13.392961502075195
    10. ':' → logprob: -13.767961502075195

Token 104: ' La' (ID: 3038)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.47918346524238586
    2. '   ' → logprob: -1.4791834354400635
    3. ')' → logprob: -2.3541834354400635
    4. ' La' → logprob: -3.9791834354400635
    5. ' la' → logprob: -4.229183673858643
    6. 'str' → logprob: -5.354183673858643
    7. '       ' → logprob: -5.979183673858643
    8. '    ' → logprob: -5.979183673858643
    9. 'La' → logprob: -6.229183673858643
    10. ' s' → logprob: -6.229183673858643

Token 105: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.13782097399234772
    2. ' ' → logprob: -3.2628209590911865
    3. 'chaine' → logprob: -3.2628209590911865
    4. '   ' → logprob: -3.7628209590911865
    5. ' chaine' → logprob: -4.637821197509766
    6. 'cha' → logprob: -4.762821197509766
    7. 's' → logprob: -5.512821197509766
    8. ' string' → logprob: -6.012821197509766
    9. ' cha' → logprob: -6.262821197509766
    10. 'string' → logprob: -7.637821197509766

Token 106: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6210545897483826
    2. ')' → logprob: -1.7460546493530273
    3. '<|end|>' → logprob: -1.9960546493530273
    4. ' )' → logprob: -3.2460546493530273
    5. '```' → logprob: -3.4960546493530273
    6. '[' → logprob: -3.7460546493530273
    7. ' ' → logprob: -4.246054649353027
    8. '  ' → logprob: -4.621054649353027
    9. ''' → logprob: -5.746054649353027
    10. '.startswith' → logprob: -6.183554649353027

Token 107: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.8733772039413452
    2. 'e' → logprob: -1.2483772039413452
    3. '   ' → logprob: -2.3733773231506348
    4. 'a' → logprob: -2.3733773231506348
    5. 'entrée' → logprob: -4.123377323150635
    6. ''ac' → logprob: -4.748377323150635
    7. 'onnée' → logprob: -4.873377323150635
    8. 'u' → logprob: -4.998377323150635
    9. ''é' → logprob: -5.248377323150635
    10. ''' → logprob: -5.248377323150635

Token 108: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8977658152580261
    2. ')' → logprob: -1.147765874862671
    3. '):' → logprob: -1.522765874862671
    4. '):
' → logprob: -2.897765874862671
    5. '```' → logprob: -7.147765636444092
    6. ' )' → logprob: -9.02276611328125
    7. '  ' → logprob: -9.02276611328125
    8. '):
' → logprob: -9.02276611328125
    9. '    
' → logprob: -9.14776611328125
    10. ')
' → logprob: -9.64776611328125

Token 109: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.038190215826034546
    2. 'val' → logprob: -4.2881903648376465
    3. ' val' → logprob: -4.5381903648376465
    4. 'v' → logprob: -5.0381903648376465
    5. ' tester' → logprob: -6.5381903648376465
    6. ')' → logprob: -6.6631903648376465
    7. ' analyser' → logprob: -6.9131903648376465
    8. '   ' → logprob: -7.1631903648376465
    9. '```' → logprob: -8.288189888000488
    10. ' vér' → logprob: -8.913189888000488

Token 110: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9016901850700378
    2. '   ' → logprob: -0.9016901850700378
    3. '):' → logprob: -1.7766902446746826
    4. '):
' → logprob: -4.0266900062561035
    5. '```' → logprob: -7.5266900062561035
    6. ')
' → logprob: -8.651690483093262
    7. ' ' → logprob: -9.651690483093262
    8. ':' → logprob: -9.776690483093262
    9. '  ' → logprob: -9.901690483093262
    10. '):
' → logprob: -10.401690483093262

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1525420993566513
    2. ')' → logprob: -2.1525421142578125
    3. '```' → logprob: -4.2775421142578125
    4. '"""' → logprob: -5.1525421142578125
    5. ' 
' → logprob: -6.9025421142578125
    6. '"""
' → logprob: -7.1525421142578125
    7. '):' → logprob: -7.1525421142578125
    8. ' ' → logprob: -7.4025421142578125
    9. ' )' → logprob: -7.5275421142578125
    10. '    ' → logprob: -8.152542114257812

Token 112: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.3176025450229645
    2. '   ' → logprob: -1.442602515220642
    3. '"""
' → logprob: -3.9426026344299316
    4. '"""' → logprob: -5.192602634429932
    5. '```' → logprob: -5.442602634429932
    6. 'returns' → logprob: -6.192602634429932
    7. ' Returns' → logprob: -6.317602634429932
    8. ')' → logprob: -6.817602634429932
    9. 'Retour' → logprob: -7.442602634429932
    10. 'return' → logprob: -8.192602157592773

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8927980065345764
    2. ' True' → logprob: -1.5177979469299316
    3. ' :' → logprob: -1.8927979469299316
    4. 'True' → logprob: -2.5177979469299316
    5. '```' → logprob: -3.0177979469299316
    6. ' ' → logprob: -3.5177979469299316
    7. '  ' → logprob: -3.6427979469299316
    8. ' bool' → logprob: -4.892797946929932
    9. '<|end|>' → logprob: -5.142797946929932
    10. '   ' → logprob: -5.767797946929932

Token 114: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16658855974674225
    2. ' bool' → logprob: -2.416588544845581
    3. '    ' → logprob: -3.291588544845581
    4. 'True' → logprob: -4.16658878326416
    5. '   ' → logprob: -4.54158878326416
    6. 'bool' → logprob: -7.91658878326416
    7. ' str' → logprob: -8.41658878326416
    8. ' ' → logprob: -9.04158878326416
    9. ' ' → logprob: -9.41658878326416
    10. ' False' → logprob: -11.04158878326416

Token 115: ' str' (ID: 989)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3488001823425293
    2. 'bool' → logprob: -1.2238001823425293
    3. '   ' → logprob: -8.723800659179688
    4. ' True' → logprob: -9.098800659179688
    5. 'True' → logprob: -9.973800659179688
    6. ' str' → logprob: -10.848800659179688
    7. ' 
' → logprob: -12.223800659179688
    8. 'str' (adapté à ' str') → logprob: -12.473800659179688
    9. '(bool' → logprob: -13.723800659179688
    10. '```' → logprob: -14.098800659179688

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16023844480514526
    2. '   ' → logprob: -2.41023850440979
    3. ':
' → logprob: -3.66023850440979
    4. ' :' → logprob: -3.78523850440979
    5. '"' → logprob: -5.785238265991211
    6. ' "' → logprob: -6.035238265991211
    7. ' =' → logprob: -7.410238265991211
    8. ')' → logprob: -7.410238265991211
    9. '       ' → logprob: -7.535238265991211
    10. ':"' → logprob: -7.660238265991211

Token 117: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.18139031529426575
    2. '"' → logprob: -2.0563902854919434
    3. ' '' → logprob: -3.6813902854919434
    4. ''' → logprob: -5.181390285491943
    5. '   ' → logprob: -5.306390285491943
    6. ' AC' → logprob: -6.556390285491943
    7. 'AC' → logprob: -8.306390762329102
    8. ' True' → logprob: -8.806390762329102
    9. ' ' → logprob: -9.556390762329102
    10. ' Yes' → logprob: -10.056390762329102

Token 118: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.0072340089827775955
    2. '"' → logprob: -5.0072340965271
    3. ''' → logprob: -8.382233619689941
    4. 'Yes' → logprob: -9.257233619689941
    5. ' AC' → logprob: -9.632233619689941
    6. '_AC' → logprob: -10.007233619689941
    7. '"+' → logprob: -10.757233619689941
    8. 'YES' → logprob: -11.132233619689941
    9. 'Accepted' → logprob: -11.382233619689941
    10. 'OK' → logprob: -12.007233619689941

Token 119: ''' (ID: 6)
  Prédit: 'CEPT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CEPT' → logprob: -0.42114827036857605
    2. 'EPT' → logprob: -1.7961483001708984
    3. 'e' → logprob: -2.7961483001708984
    4. 'cept' → logprob: -2.9211483001708984
    5. ''' → logprob: -3.0461483001708984
    6. 'E' → logprob: -5.546148300170898
    7. '"' → logprob: -5.921148300170898
    8. 'cepte' → logprob: -6.046148300170898
    9. 'Ce' → logprob: -6.296148300170898
    10. 'C' → logprob: -6.671148300170898

Token 120: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07496121525764465
    2. ' if' → logprob: -3.0749611854553223
    3. ''' → logprob: -5.324961185455322
    4. '"' → logprob: -5.324961185455322
    5. ' or' → logprob: -5.324961185455322
    6. 'if' → logprob: -5.949961185455322
    7. ' si' → logprob: -6.074961185455322
    8. ' ou' → logprob: -6.324961185455322
    9. '```' → logprob: -6.699961185455322
    10. '       ' → logprob: -6.824961185455322

Token 121: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.005900472868233919
    2. 's' → logprob: -5.7559003829956055
    3. ' len' → logprob: -6.3809003829956055
    4. ' la' → logprob: -7.2559003829956055
    5. ' le' → logprob: -8.630900382995605
    6. ' valid' → logprob: -10.130900382995605
    7. 'len' → logprob: -10.380900382995605
    8. ' ' → logprob: -10.630900382995605
    9. ' the' → logprob: -11.130900382995605
    10. '   ' → logprob: -12.005900382995605

Token 122: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.30762866139411926
    2. 'chaine' → logprob: -1.4326286315917969
    3. ' chaine' → logprob: -4.807628631591797
    4. ' string' → logprob: -5.182628631591797
    5. '   ' → logprob: -5.557628631591797
    6. 's' → logprob: -5.807628631591797
    7. 'string' → logprob: -5.932628631591797
    8. 'cha' → logprob: -6.307628631591797
    9. ' s' → logprob: -8.182628631591797
    10. ' ' → logprob: -8.307628631591797

Token 123: ' respecte' (ID: 140483)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0035681116860359907
    2. 'est' → logprob: -6.128568172454834
    3. ' respecte' → logprob: -7.253568172454834
    4. '   ' → logprob: -8.128567695617676
    5. ' accepte' → logprob: -9.503567695617676
    6. ' is' → logprob: -10.128567695617676
    7. ' valid' → logprob: -10.253567695617676
    8. ' retourne' → logprob: -10.628567695617676
    9. ' passe' → logprob: -10.753567695617676
    10. ' ren' → logprob: -10.878567695617676

Token 124: ' toutes' (ID: 17502)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8315982818603516
    2. ''' → logprob: -1.3315982818603516
    3. '   ' → logprob: -2.3315982818603516
    4. ' la' → logprob: -2.7065982818603516
    5. '"' → logprob: -2.9565982818603516
    6. ' s' → logprob: -3.0815982818603516
    7. ' ' → logprob: -4.331598281860352
    8. ' les' → logprob: -4.706598281860352
    9. ' "' → logprob: -4.956598281860352
    10. ' le' → logprob: -5.081598281860352

Token 125: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.006412186194211245
    2. ' conditions' → logprob: -6.006412029266357
    3. ' l' → logprob: -6.756412029266357
    4. ' ' → logprob: -7.006412029266357
    5. ' la' → logprob: -7.256412029266357
    6. '  ' → logprob: -7.381412029266357
    7. ' le' → logprob: -8.631412506103516
    8. '   ' → logprob: -8.756412506103516
    9. 'les' → logprob: -9.756412506103516
    10. '    ' → logprob: -10.756412506103516

Token 126: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.03054407797753811
    2. 'conditions' → logprob: -3.5305440425872803
    3. ' condition' → logprob: -8.15554428100586
    4. 'cond' → logprob: -8.78054428100586
    5. '   ' → logprob: -9.65554428100586
    6. ' critères' → logprob: -10.03054428100586
    7. 'condition' → logprob: -10.40554428100586
    8. ' ' → logprob: -10.40554428100586
    9. ' condit' → logprob: -10.40554428100586
    10. '_conditions' → logprob: -10.53054428100586

Token 127: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.480648934841156
    2. ',' → logprob: -0.980648934841156
    3. ''' → logprob: -6.230648994445801
    4. ' ,' → logprob: -6.730648994445801
    5. '```' → logprob: -6.730648994445801
    6. '"' → logprob: -7.480648994445801
    7. '',' → logprob: -7.605648994445801
    8. '       ' → logprob: -7.980648994445801
    9. ' ou' → logprob: -8.3556489944458
    10. ' else' → logprob: -9.1056489944458

Token 128: ' sinon' (ID: 52915)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013150000013411045
    2. ' sinon' → logprob: -5.263150215148926
    3. ' '' → logprob: -6.013150215148926
    4. '   ' → logprob: -6.263150215148926
    5. '"' → logprob: -6.388150215148926
    6. '       ' → logprob: -7.888150215148926
    7. ' else' → logprob: -8.513150215148926
    8. ''A' → logprob: -8.513150215148926
    9. ''a' → logprob: -9.013150215148926
    10. '    ' → logprob: -9.013150215148926

Token 129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22885403037071228
    2. '"' → logprob: -1.9788540601730347
    3. ' '' → logprob: -2.853853940963745
    4. ' "' → logprob: -5.728854179382324
    5. ' ' → logprob: -6.353854179382324
    6. '   ' → logprob: -6.728854179382324
    7. ' False' → logprob: -7.478854179382324
    8. '''' → logprob: -7.603854179382324
    9. ''n' → logprob: -8.728854179382324
    10. ''un' → logprob: -8.853854179382324

Token 130: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.030900863930583
    2. 'Wrong' → logprob: -4.530900955200195
    3. '"' → logprob: -5.030900955200195
    4. 'Invalid' → logprob: -5.405900955200195
    5. 'NA' → logprob: -6.405900955200195
    6. 'Not' → logprob: -6.780900955200195
    7. 'WR' → logprob: -7.280900955200195
    8. '```' → logprob: -7.780900955200195
    9. '"No' → logprob: -8.030900955200195
    10. ' WA' → logprob: -8.030900955200195

Token 131: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -5.7530574849806726e-05
    2. '"' → logprob: -10.375057220458984
    3. ''
' → logprob: -11.125057220458984
    4. '"'' → logprob: -12.125057220458984
    5. '')' → logprob: -13.375057220458984
    6. ''''' → logprob: -13.625057220458984
    7. ''
' → logprob: -13.750057220458984
    8. ')'' → logprob: -14.750057220458984
    9. '''' → logprob: -15.000057220458984
    10. ''.' → logprob: -15.000057220458984

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007586156018078327
    2. '
' → logprob: -5.8825860023498535
    3. '\n' → logprob: -6.6325860023498535
    4. '    
' → logprob: -6.8825860023498535
    5. '"""' → logprob: -7.1325860023498535
    6. '```' → logprob: -7.5075860023498535
    7. '"""
' → logprob: -7.8825860023498535
    8. '"' → logprob: -8.632586479187012
    9. ' 
' → logprob: -9.132586479187012
    10. '    ' → logprob: -9.757586479187012

Token 133: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015414286404848099
    2. '```' → logprob: -5.390414237976074
    3. '
' → logprob: -5.640414237976074
    4. '\n' → logprob: -5.890414237976074
    5. ':' → logprob: -6.140414237976074
    6. '    
' → logprob: -6.890414237976074
    7. '):
' → logprob: -7.765414237976074
    8. ')' → logprob: -8.015414237976074
    9. ':
' → logprob: -9.015414237976074
    10. '):' → logprob: -9.390414237976074

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018129866803064942
    2. ' if' → logprob: -6.876812934875488
    3. '    
' → logprob: -7.626812934875488
    4. 'def' → logprob: -8.501812934875488
    5. '    ' → logprob: -10.376812934875488
    6. '
' → logprob: -10.751812934875488
    7. ' def' → logprob: -11.751812934875488
    8. 'n' → logprob: -11.751812934875488
    9. 'if' → logprob: -11.876812934875488
    10. ' 
' → logprob: -12.251812934875488

Token 135: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018500840291380882
    2. '   ' → logprob: -4.643500804901123
    3. ' if' → logprob: -4.768500804901123
    4. '#' (adapté à ' #') → logprob: -8.768501281738281
    5. 'n' → logprob: -10.518501281738281
    6. 'def' → logprob: -10.768501281738281
    7. '```' → logprob: -12.018501281738281
    8. ' #' → logprob: -13.893501281738281
    9. 'for' → logprob: -14.143501281738281
    10. ' n' → logprob: -14.393501281738281

Token 136: ' Vér' (ID: 159169)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5471445918083191
    2. 'if' → logprob: -0.9221445918083191
    3. '   ' → logprob: -3.797144651412964
    4. 'def' → logprob: -6.797144412994385
    5. '#' → logprob: -9.547144889831543
    6. 'n' → logprob: -10.047144889831543
    7. '```' → logprob: -10.422144889831543
    8. ' #' → logprob: -11.297144889831543
    9. ' def' → logprob: -12.547144889831543
    10. ' n' → logprob: -12.672144889831543

Token 137: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.004007760901004076
    2. '   ' → logprob: -6.629007816314697
    3. 'ifier' → logprob: -7.004007816314697
    4. 'if' → logprob: -7.004007816314697
    5. 'i' → logprob: -8.004007339477539
    6. 'ifiez' → logprob: -8.004007339477539
    7. 'ifié' → logprob: -9.879007339477539
    8. 'ify' → logprob: -9.879007339477539
    9. 'ifies' → logprob: -10.254007339477539
    10. 'ifi' → logprob: -10.754007339477539

Token 138: ' que' (ID: 661)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008240790106356144
    2. 'len' → logprob: -4.883240699768066
    3. ' not' → logprob: -7.758240699768066
    4. ' ' → logprob: -9.383240699768066
    5. ' if' → logprob: -9.758240699768066
    6. ' s' → logprob: -9.883240699768066
    7. '   ' → logprob: -12.508240699768066
    8. 's' → logprob: -12.883240699768066
    9. 'not' → logprob: -13.258240699768066
    10. '(len' → logprob: -13.258240699768066

Token 139: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38964223861694336
    2. ' len' → logprob: -1.1396422386169434
    3. 's' → logprob: -6.264642238616943
    4. ' s' → logprob: -7.264642238616943
    5. ' not' → logprob: -8.889642715454102
    6. 'not' → logprob: -11.014642715454102
    7. '(len' → logprob: -12.139642715454102
    8. '   ' → logprob: -13.389642715454102
    9. ' ' → logprob: -13.514642715454102
    10. ' isinstance' → logprob: -14.264642715454102

Token 140: ' premier' (ID: 15506)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006164712831377983
    2. ' len' → logprob: -5.13116455078125
    3. 's' → logprob: -8.50616455078125
    4. ' s' → logprob: -11.25616455078125
    5. ' premier' → logprob: -11.75616455078125
    6. 'prem' → logprob: -12.25616455078125
    7. '(len' → logprob: -13.75616455078125
    8. 'not' → logprob: -13.75616455078125
    9. 'if' → logprob: -13.75616455078125
    10. ' not' → logprob: -13.88116455078125

Token 141: ' caractère' (ID: 80509)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12229267507791519
    2. ' caractère' → logprob: -3.2472927570343018
    3. ' ' → logprob: -3.3722927570343018
    4. 's' → logprob: -3.7472927570343018
    5. ' car' → logprob: -4.872292518615723
    6. ' caract' → logprob: -5.372292518615723
    7. '   ' → logprob: -6.372292518615723
    8. 'car' → logprob: -6.622292518615723
    9. ' caractères' → logprob: -7.747292518615723
    10. ' c' → logprob: -7.747292518615723

Token 142: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.044584471732378006
    2. '==' → logprob: -3.5445845127105713
    3. '   ' → logprob: -4.794584274291992
    4. 's' → logprob: -5.794584274291992
    5. ' s' → logprob: -6.419584274291992
    6. ' est' → logprob: -7.169584274291992
    7. ' ' → logprob: -7.794584274291992
    8. '=' → logprob: -8.044584274291992
    9. ' =' → logprob: -9.794584274291992
    10. '(s' → logprob: -9.794584274291992

Token 143: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.320292204618454
    2. ' '' → logprob: -1.3202922344207764
    3. ''' → logprob: -5.445291996002197
    4. 'A' → logprob: -6.695291996002197
    5. ' A' → logprob: -7.195291996002197
    6. '"A' → logprob: -7.695291996002197
    7. '   ' → logprob: -8.820292472839355
    8. ' "' → logprob: -10.695292472839355
    9. '`' → logprob: -10.820292472839355
    10. '’A' → logprob: -11.070292472839355

Token 144: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.56102097814437e-05
    2. ''A' → logprob: -10.500045776367188
    3. ' A' → logprob: -11.125045776367188
    4. ''' → logprob: -13.125045776367188
    5. '   ' → logprob: -15.125045776367188
    6. '"A' → logprob: -15.625045776367188
    7. 'a' → logprob: -15.750045776367188
    8. '`' → logprob: -16.000045776367188
    9. ' '' → logprob: -16.375045776367188
    10. ' ' → logprob: -16.500045776367188

Token 145: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3733483552932739
    2. ' and' → logprob: -1.498348355293274
    3. ')' → logprob: -3.6233482360839844
    4. ''' → logprob: -3.7483482360839844
    5. ' if' → logprob: -4.123348236083984
    6. '')' → logprob: -4.998348236083984
    7. 'if' → logprob: -5.248348236083984
    8. 'and' → logprob: -5.623348236083984
    9. 's' → logprob: -6.748348236083984
    10. ' ==' → logprob: -7.123348236083984

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008987036533653736
    2. ' if' → logprob: -4.883986949920654
    3. 'if' → logprob: -6.883986949920654
    4. '    
' → logprob: -8.508987426757812
    5. '   
' → logprob: -9.758987426757812
    6. '  ' → logprob: -10.883987426757812
    7. ' ' → logprob: -11.133987426757812
    8. '    ' → logprob: -11.633987426757812
    9. '```' → logprob: -11.758987426757812
    10. ',' → logprob: -12.008987426757812

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19267809391021729
    2. 'if' (adapté à ' if') → logprob: -2.3176779747009277
    3. '   ' → logprob: -2.5676779747009277
    4. ' i' → logprob: -11.442678451538086
    5. 'i' → logprob: -12.067678451538086
    6. ' ' → logprob: -12.067678451538086
    7. '    
' → logprob: -12.442678451538086
    8. '    ' → logprob: -13.067678451538086
    9. ' 
' → logprob: -13.067678451538086
    10. 'n' → logprob: -13.192678451538086

Token 148: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.474138468503952
    2. ' not' → logprob: -1.5991384983062744
    3. ' len' → logprob: -2.0991384983062744
    4. 's' → logprob: -3.0991384983062744
    5. 'len' → logprob: -5.099138259887695
    6. 'not' → logprob: -6.349138259887695
    7. '   ' → logprob: -13.224138259887695
    8. ' ' → logprob: -13.224138259887695
    9. ' ' → logprob: -13.849138259887695
    10. '(len' → logprob: -14.099138259887695

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.264322317088954e-05
    2. '.startswith' → logprob: -9.875052452087402
    3. ' [' → logprob: -14.500052452087402
    4. '.' → logprob: -15.000052452087402
    5. '   ' → logprob: -15.875052452087402
    6. 'startswith' → logprob: -17.25005340576172
    7. '[:' → logprob: -17.62505340576172
    8. ' ==' → logprob: -17.75005340576172
    9. '```' → logprob: -17.87505340576172
    10. 'def' → logprob: -18.00005340576172

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -16.250017166137695
    4. '   ' → logprob: -16.375017166137695
    5. '```' → logprob: -16.625017166137695
    6. '[' → logprob: -17.000017166137695
    7. ':' → logprob: -17.000017166137695
    8. '1' → logprob: -17.437517166137695
    9. ']' → logprob: -17.500017166137695
    10. ' :' → logprob: -17.812517166137695

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015391462948173285
    2. '']' → logprob: -7.25153923034668
    3. ']==' → logprob: -7.37653923034668
    4. ' ]' → logprob: -9.00153923034668
    5. ''' → logprob: -10.25153923034668
    6. '==' → logprob: -11.00153923034668
    7. ']=='' → logprob: -11.50153923034668
    8. ']!=' → logprob: -11.50153923034668
    9. ' ==' → logprob: -13.25153923034668
    10. '[' → logprob: -13.75153923034668

Token 152: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.45390185713768005
    2. ' !=' → logprob: -1.7039018869400024
    3. '==' → logprob: -1.8289018869400024
    4. ' ==' → logprob: -3.828901767730713
    5. '!='' → logprob: -7.828901767730713
    6. '=' → logprob: -9.203902244567871
    7. '=='' → logprob: -11.078902244567871
    8. ']' → logprob: -11.203902244567871
    9. '!="' → logprob: -12.203902244567871
    10. ')' → logprob: -12.203902244567871

Token 153: ' "' (ID: 392)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.16115640103816986
    2. ' '' → logprob: -1.911156415939331
    3. ''' → logprob: -7.036156177520752
    4. '"A' → logprob: -10.16115665435791
    5. 'A' → logprob: -11.41115665435791
    6. '’A' → logprob: -14.16115665435791
    7. '   ' → logprob: -14.41115665435791
    8. ' A' → logprob: -14.78615665435791
    9. ' ' → logprob: -15.03615665435791
    10. ''a' → logprob: -15.53615665435791

Token 154: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001938750152476132
    2. ''A' → logprob: -6.251938819885254
    3. ' A' → logprob: -12.251938819885254
    4. '"A' → logprob: -12.626938819885254
    5. ''' → logprob: -13.501938819885254
    6. '’A' → logprob: -15.876938819885254
    7. '	A' → logprob: -16.251937866210938
    8. 'А' → logprob: -16.376937866210938
    9. ''a' → logprob: -16.626937866210938
    10. 'a' → logprob: -17.001937866210938

Token 155: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22676390409469604
    2. '":' → logprob: -1.6017639636993408
    3. '"):' → logprob: -7.101763725280762
    4. '")' → logprob: -8.226763725280762
    5. ')' → logprob: -8.726763725280762
    6. '):' → logprob: -10.226763725280762
    7. ':' → logprob: -10.976763725280762
    8. '":
' → logprob: -11.476763725280762
    9. ' "' → logprob: -11.476763725280762
    10. '"):
' → logprob: -12.601763725280762

Token 156: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.623314380645752
    2. '       ' → logprob: -0.873314380645752
    3. '    ' → logprob: -4.248314380645752
    4. ':' → logprob: -4.498314380645752
    5. ' and' → logprob: -4.623314380645752
    6. ' ' → logprob: -5.373314380645752
    7. '\n' → logprob: -6.498314380645752
    8. '    
' → logprob: -6.623314380645752
    9. '  ' → logprob: -7.123314380645752
    10. '        
' → logprob: -7.373314380645752

Token 157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5675305724143982
    2. ' if' → logprob: -1.317530632019043
    3. 'if' → logprob: -2.192530632019043
    4. '   ' → logprob: -3.067530632019043
    5. '    ' → logprob: -6.067530632019043
    6. ' #' → logprob: -6.442530632019043
    7. '           ' → logprob: -7.692530632019043
    8. '        
' → logprob: -7.692530632019043
    9. '        ' → logprob: -8.067530632019043
    10. 'c' → logprob: -8.192530632019043

Token 158: ' Comp' (ID: 5211)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.9813097715377808
    2. '   ' → logprob: -1.8563097715377808
    3. 'substring' → logprob: -2.2313098907470703
    4. 'count' → logprob: -2.6063098907470703
    5. 'if' → logprob: -2.6063098907470703
    6. 'c' → logprob: -2.9813098907470703
    7. ' substring' → logprob: -3.3563098907470703
    8. 'middle' → logprob: -3.3563098907470703
    9. 'substr' → logprob: -4.23130989074707
    10. ' if' → logprob: -4.48130989074707

Token 159: 'te' (ID: 411)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.5312207341194153
    2. 'te' → logprob: -1.1562206745147705
    3. 't' → logprob: -2.4062206745147705
    4. 'teur' → logprob: -5.90622091293335
    5. 'ute' → logprob: -7.78122091293335
    6. '   ' → logprob: -7.78122091293335
    7. 'té' → logprob: -8.218720436096191
    8. '#' → logprob: -8.531220436096191
    9. 'tent' → logprob: -8.593720436096191
    10. 'tte' → logprob: -8.656220436096191

Token 160: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.43568193912506104
    2. 's' → logprob: -1.060681939125061
    3. '(s' → logprob: -5.5606818199157715
    4. '   ' → logprob: -6.0606818199157715
    5. ' ' → logprob: -7.5606818199157715
    6. '<|end|>' → logprob: -9.68568229675293
    7. 'c' → logprob: -10.43568229675293
    8. 'if' → logprob: -10.81068229675293
    9. '  ' → logprob: -10.81068229675293
    10. ' if' → logprob: -11.06068229675293

Token 161: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2883976399898529
    2. ' s' → logprob: -1.4133976697921753
    3. ' C' → logprob: -5.788397789001465
    4. 'C' → logprob: -6.413397789001465
    5. ' ' → logprob: -6.913397789001465
    6. 'c' → logprob: -7.538397789001465
    7. ' nombre' → logprob: -8.538397789001465
    8. ''s' → logprob: -9.288397789001465
    9. 'nombre' → logprob: -9.288397789001465
    10. ' c' → logprob: -9.413397789001465

Token 162: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7574788331985474
    2. 'de' → logprob: -1.7574788331985474
    3. 's' → logprob: -2.132478713989258
    4. ' s' → logprob: -2.257478713989258
    5. '(s' → logprob: -2.507478713989258
    6. '   ' → logprob: -3.132478713989258
    7. ' of' → logprob: -6.257478713989258
    8. ' =' → logprob: -6.382478713989258
    9. 'd' → logprob: -6.507478713989258
    10. '       ' → logprob: -6.757478713989258

Token 163: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4301224648952484
    2. 's' → logprob: -1.3051224946975708
    3. ' C' → logprob: -3.1801223754882812
    4. ' s' → logprob: -3.6801223754882812
    5. ''C' → logprob: -4.805122375488281
    6. '"C' → logprob: -7.180122375488281
    7. ' '' → logprob: -7.305122375488281
    8. 'c' → logprob: -7.430122375488281
    9. ''s' → logprob: -7.930122375488281
    10. ''' → logprob: -8.055122375488281

Token 164: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006277294596657157
    2. ''C' → logprob: -8.000627517700195
    3. ' C' → logprob: -8.875627517700195
    4. 's' → logprob: -9.250627517700195
    5. '"C' → logprob: -10.750627517700195
    6. ''' → logprob: -11.125627517700195
    7. ' ' → logprob: -12.125627517700195
    8. '"' → logprob: -12.125627517700195
    9. 'c' → logprob: -12.750627517700195
    10. ''s' → logprob: -13.375627517700195

Token 165: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16257724165916443
    2. '(s' → logprob: -2.5375771522521973
    3. ''' → logprob: -3.5375771522521973
    4. ' s' → logprob: -3.9125771522521973
    5. ''s' → logprob: -4.662577152252197
    6. '"' → logprob: -4.662577152252197
    7. '"s' → logprob: -6.537577152252197
    8. ' "' → logprob: -7.287577152252197
    9. ' ' → logprob: -8.662577629089355
    10. ' '' → logprob: -8.787577629089355

Token 166: ' entre' (ID: 3853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7343520522117615
    2. ' s' → logprob: -1.2343521118164062
    3. '(s' → logprob: -1.7343521118164062
    4. ' dans' → logprob: -3.6093521118164062
    5. ' in' → logprob: -3.9843521118164062
    6. ' =' → logprob: -6.109352111816406
    7. '   ' → logprob: -6.609352111816406
    8. 'dans' → logprob: -6.609352111816406
    9. 'if' → logprob: -7.609352111816406
    10. ' if' → logprob: -7.734352111816406

Token 167: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13883021473884583
    2. ' ' → logprob: -2.2638301849365234
    3. 's' → logprob: -4.388830184936523
    4. ' s' → logprob: -5.013830184936523
    5. '1' → logprob: -5.138830184936523
    6. '   ' → logprob: -8.138830184936523
    7. '```' → logprob: -9.638830184936523
    8. '3' → logprob: -9.763830184936523
    9. 'len' → logprob: -10.138830184936523
    10. ' la' → logprob: -10.138830184936523

Token 168: ' troisième' (ID: 75373)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029230579733848572
    2. 'de' → logprob: -3.6542305946350098
    3. 's' → logprob: -7.15423059463501
    4. ' ' → logprob: -7.52923059463501
    5. ' deuxième' → logprob: -7.52923059463501
    6. 'second' → logprob: -8.154230117797852
    7. '```' → logprob: -8.279230117797852
    8. '   ' → logprob: -8.529230117797852
    9. '3' → logprob: -8.654230117797852
    10. 'third' → logprob: -10.529230117797852

Token 169: ' caractère' (ID: 80509)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5047529339790344
    2. 'et' → logprob: -2.1297528743743896
    3. ' caractère' → logprob: -2.1297528743743896
    4. 'car' → logprob: -2.7547528743743896
    5. ' caract' → logprob: -3.0047528743743896
    6. ' ' → logprob: -3.7547528743743896
    7. ' and' → logprob: -4.379753112792969
    8. ' caractères' → logprob: -6.129753112792969
    9. ' car' → logprob: -6.254753112792969
    10. 's' → logprob: -7.004753112792969

Token 170: ' (' (ID: 350)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.5503491759300232
    2. ' et' → logprob: -0.9253491759300232
    3. '   ' → logprob: -4.550349235534668
    4. ' (' → logprob: -4.800349235534668
    5. 's' → logprob: -5.675349235534668
    6. ' and' → logprob: -6.675349235534668
    7. '(' → logprob: -7.425349235534668
    8. 'e' → logprob: -7.550349235534668
    9. ' ' → logprob: -8.175349235534668
    10. '(s' → logprob: -8.300349235534668

Token 171: 'in' (ID: 258)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.058431535959243774
    2. 's' → logprob: -2.933431625366211
    3. ' s' → logprob: -6.308431625366211
    4. ' ' → logprob: -7.058431625366211
    5. '1' → logprob: -8.308431625366211
    6. ')' → logprob: -8.558431625366211
    7. '```' → logprob: -8.933431625366211
    8. ':' → logprob: -9.558431625366211
    9. '   ' → logprob: -10.058431625366211
    10. '
' → logprob: -10.683431625366211

Token 172: 'clus' (ID: 4085)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.04112562537193298
    2. 'd' → logprob: -3.291125535964966
    3. 'de' → logprob: -6.416125774383545
    4. 'dice' → logprob: -7.666125774383545
    5. 'dx' → logprob: -8.416125297546387
    6. ' dex' → logprob: -8.541125297546387
    7. '   ' → logprob: -9.416125297546387
    8. 'des' → logprob: -9.541125297546387
    9. 'д' → logprob: -10.041125297546387
    10. 'dez' → logprob: -10.416125297546387

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039435770362615585
    2. 'et' → logprob: -3.539435863494873
    3. ' et' → logprob: -5.289435863494873
    4. 'e' → logprob: -6.664435863494873
    5. ' )' → logprob: -6.789435863494873
    6. 'if' → logprob: -7.789435863494873
    7. ',' → logprob: -8.164435386657715
    8. '0' → logprob: -8.414435386657715
    9. 'à' → logprob: -8.539435386657715
    10. ' à' → logprob: -8.664435386657715

Token 174: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3015943467617035
    2. '   ' → logprob: -1.5515943765640259
    3. ' and' → logprob: -4.301594257354736
    4. 'et' → logprob: -4.301594257354736
    5. ' ' → logprob: -4.801594257354736
    6. '    ' → logprob: -5.301594257354736
    7. 's' → logprob: -5.926594257354736
    8. ' s' → logprob: -6.051594257354736
    9. '  ' → logprob: -6.801594257354736
    10. ',' → logprob: -8.176594734191895

Token 175: ' l' (ID: 305)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.39049291610717773
    2. ' l' → logprob: -1.5154929161071777
    3. 'len' → logprob: -3.0154929161071777
    4. ' la' → logprob: -4.140492916107178
    5. 'l' → logprob: -4.265492916107178
    6. '-' → logprob: -4.390492916107178
    7. ' -' → logprob: -5.140492916107178
    8. ' ' → logprob: -6.015492916107178
    9. '   ' → logprob: -7.140492916107178
    10. 's' → logprob: -7.390492916107178

Token 176: ''avant' (ID: 161711)
  Prédit: ''avant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''avant' → logprob: -0.0032221528235822916
    2. '-' → logprob: -5.8782219886779785
    3. '[-' → logprob: -8.753222465515137
    4. '’avant' → logprob: -8.878222465515137
    5. 'a' → logprob: -10.253222465515137
    6. ''' → logprob: -10.378222465515137
    7. '[:-' → logprob: -10.753222465515137
    8. 'e' → logprob: -11.378222465515137
    9. 'avant' → logprob: -11.878222465515137
    10. '   ' → logprob: -13.128222465515137

Token 177: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.05685397610068321
    2. '-' → logprob: -3.056854009628296
    3. 'der' → logprob: -5.056853771209717
    4. '   ' → logprob: -6.931853771209717
    5. ' dernier' → logprob: -7.306853771209717
    6. ' derni' → logprob: -10.181854248046875
    7. ' ' → logprob: -10.181854248046875
    8. 'Dern' → logprob: -10.681854248046875
    9. 'd' → logprob: -11.056854248046875
    10. ' dernière' → logprob: -11.181854248046875

Token 178: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.0018896145047619939
    2. 'der' → logprob: -6.376889705657959
    3. ' dernier' → logprob: -9.5018892288208
    4. '-' → logprob: -9.6268892288208
    5. '```' → logprob: -10.7518892288208
    6. 'avant' → logprob: -12.2518892288208
    7. '   ' → logprob: -12.3768892288208
    8. 'Dern' → logprob: -12.7518892288208
    9. 'den' → logprob: -13.0018892288208
    10. '
' → logprob: -13.2518892288208

Token 179: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.07027939707040787
    2. '-' → logprob: -2.695279359817505
    3. 'i' → logprob: -8.570279121398926
    4. 'e' → logprob: -9.070279121398926
    5. 'der' → logprob: -11.570279121398926
    6. 'er' → logprob: -12.070279121398926
    7. 'iers' → logprob: -12.195279121398926
    8. 'nier' → logprob: -12.320279121398926
    9. 'ière' → logprob: -13.195279121398926
    10. 'iert' → logprob: -13.445279121398926

Token 180: ' (' (ID: 350)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.274976521730423
    2. ' caract' → logprob: -2.6499764919281006
    3. ' s' → logprob: -3.3999764919281006
    4. ' index' → logprob: -3.6499764919281006
    5. 's' → logprob: -3.6499764919281006
    6. ' caractères' → logprob: -3.8999764919281006
    7. ' ' → logprob: -4.14997673034668
    8. ' et' → logprob: -4.64997673034668
    9. ' car' → logprob: -4.77497673034668
    10. 'car' → logprob: -4.89997673034668

Token 181: 'ex' (ID: 490)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.025446943938732147
    2. '1' → logprob: -4.025446891784668
    3. ' -' → logprob: -5.275446891784668
    4. ')' → logprob: -6.400446891784668
    5. '2' → logprob: -8.525446891784668
    6. 'len' → logprob: -9.400446891784668
    7. '0' → logprob: -9.525446891784668
    8. ' ' → logprob: -10.400446891784668
    9. 'ex' → logprob: -10.900446891784668
    10. '-)' → logprob: -10.900446891784668

Token 182: 'clus' (ID: 4085)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8234418034553528
    2. 'clus' → logprob: -1.323441743850708
    3. 'cl' → logprob: -1.823441743850708
    4. 'de' → logprob: -4.448441982269287
    5. 'clude' → logprob: -4.573441982269287
    6. 'c' → logprob: -4.573441982269287
    7. 'def' → logprob: -4.698441982269287
    8. 'ded' → logprob: -4.823441982269287
    9. 'duit' → logprob: -5.198441982269287
    10. 'érieur' → logprob: -5.198441982269287

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5108816623687744
    2. 'if' → logprob: -1.2608816623687744
    3. '):' → logprob: -2.2608816623687744
    4. 'e' → logprob: -4.510881423950195
    5. '   ' → logprob: -8.010881423950195
    6. 'i' → logprob: -8.635881423950195
    7. 'ivement' → logprob: -8.760881423950195
    8. '):
' → logprob: -9.135881423950195
    9. 'de' → logprob: -9.385881423950195
    10. ':' → logprob: -9.385881423950195

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08467453718185425
    2. '   ' → logprob: -3.459674596786499
    3. ' and' → logprob: -4.08467435836792
    4. ' if' → logprob: -4.45967435836792
    5. ':' → logprob: -4.83467435836792
    6. '    ' → logprob: -5.83467435836792
    7. 'count' → logprob: -6.33467435836792
    8. ' count' → logprob: -6.45967435836792
    9. '        ' → logprob: -6.95967435836792
    10. ' :' → logprob: -7.08467435836792

Token 185: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1761291027069092
    2. ' if' → logprob: -1.4261291027069092
    3. 'c' (adapté à ' c') → logprob: -1.5511291027069092
    4. 'if' → logprob: -2.301129102706909
    5. ' count' → logprob: -3.176129102706909
    6. 'count' → logprob: -3.176129102706909
    7. '   ' → logprob: -3.301129102706909
    8. ' s' → logprob: -4.551129341125488
    9. 's' → logprob: -5.551129341125488
    10. ' C' → logprob: -6.926129341125488

Token 186: '_count' (ID: 7536)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.06027137488126755
    2. '_count' → logprob: -3.4352712631225586
    3. 's' → logprob: -4.560271263122559
    4. ' =' → logprob: -5.060271263122559
    5. 'nt' → logprob: -6.685271263122559
    6. '_s' → logprob: -6.810271263122559
    7. 'count' → logprob: -6.810271263122559
    8. '_' → logprob: -6.810271263122559
    9. '=' → logprob: -7.060271263122559
    10. 'omp' → logprob: -7.185271263122559

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201437309384346
    2. '=' → logprob: -1.7014373540878296
    3. '=s' → logprob: -10.826436996459961
    4. 's' → logprob: -12.951436996459961
    5. '   ' → logprob: -13.951436996459961
    6. ' ' → logprob: -15.076436996459961
    7. ')' → logprob: -15.451436996459961
    8. ' s' → logprob: -16.45143699645996
    9. '(s' → logprob: -16.70143699645996
    10. '=len' → logprob: -16.82643699645996

Token 188: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.026302389800548553
    2. 's' → logprob: -3.6513023376464844
    3. ' ' → logprob: -13.401302337646484
    4. '(s' → logprob: -16.026302337646484
    5. '0' → logprob: -16.151302337646484
    6. '	s' → logprob: -16.651302337646484
    7. ' sum' → logprob: -16.901302337646484
    8. '_s' → logprob: -17.026302337646484
    9. 'sum' → logprob: -17.276302337646484
    10. '`s' → logprob: -17.276302337646484

Token 189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007578118238598108
    2. '.find' → logprob: -7.375757694244385
    3. '.count' → logprob: -9.125758171081543
    4. '.index' → logprob: -10.875758171081543
    5. '   ' → logprob: -13.125758171081543
    6. '.' → logprob: -14.375758171081543
    7. '```' → logprob: -15.000758171081543
    8. ' .' → logprob: -16.000757217407227
    9. 'def' → logprob: -16.500757217407227
    10. '3' → logprob: -16.500757217407227

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017290872347075492
    2. ' ' → logprob: -8.87517261505127
    3. '```' → logprob: -10.62517261505127
    4. '   ' → logprob: -12.87517261505127
    5. ':' → logprob: -13.62517261505127
    6. '
' → logprob: -13.81267261505127
    7. '3' → logprob: -14.18767261505127
    8. '1' → logprob: -14.68767261505127
    9. '  ' → logprob: -14.93767261505127
    10. '``' → logprob: -15.31267261505127

Token 191: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019625628367066383
    2. ':].' → logprob: -4.019625663757324
    3. ' :' → logprob: -6.644625663757324
    4. ':-' → logprob: -9.269625663757324
    5. ':]' → logprob: -10.644625663757324
    6. ']' → logprob: -11.019625663757324
    7. ':s' → logprob: -11.144625663757324
    8. '   ' → logprob: -11.894625663757324
    9. 's' → logprob: -12.519625663757324
    10. ':index' → logprob: -12.894625663757324

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007607458624988794
    2. '2' → logprob: -4.882607460021973
    3. '   ' → logprob: -14.382607460021973
    4. '```' → logprob: -15.632607460021973
    5. '
' → logprob: -15.757607460021973
    6. '

' → logprob: -16.007606506347656
    7. 'len' → logprob: -16.507606506347656
    8. ' ' → logprob: -17.007606506347656
    9. '"' → logprob: -17.632606506347656
    10. '``' → logprob: -17.632606506347656

Token 193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014535190537571907
    2. ').' → logprob: -4.264535427093506
    3. '.count' → logprob: -8.139534950256348
    4. '   ' → logprob: -10.139534950256348
    5. '       ' → logprob: -11.389534950256348
    6. ']' → logprob: -11.514534950256348
    7. '"].' → logprob: -12.014534950256348
    8. '}.' → logprob: -12.514534950256348
    9. ''].' → logprob: -12.764534950256348
    10. ' ].' → logprob: -13.264534950256348

Token 194: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -9.088346359931165e-07
    2. ' count' → logprob: -14.000000953674316
    3. '.count' → logprob: -18.0
    4. '```' → logprob: -18.875
    5. '	count' → logprob: -19.5
    6. 'c' → logprob: -20.125
    7. 'counts' → logprob: -20.5
    8. ' ' → logprob: -21.125
    9. 'co' → logprob: -21.375
    10. 'cout' → logprob: -21.375

Token 195: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.34953179955482483
    2. '('' → logprob: -1.3495317697525024
    3. '(' → logprob: -3.349531888961792
    4. '"C' → logprob: -8.099532127380371
    5. ''C' → logprob: -9.099532127380371
    6. '(
' → logprob: -9.974532127380371
    7. '"' → logprob: -10.224532127380371
    8. ''' → logprob: -10.974532127380371
    9. '(C' → logprob: -13.724532127380371
    10. 'C' → logprob: -13.724532127380371

Token 196: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011409306898713112
    2. ''C' → logprob: -6.87614107131958
    3. '"C' → logprob: -9.251140594482422
    4. ''' → logprob: -12.126140594482422
    5. ' C' → logprob: -12.501140594482422
    6. '"' → logprob: -13.626140594482422
    7. ')' → logprob: -15.001140594482422
    8. '")' → logprob: -15.376140594482422
    9. '```' → logprob: -15.376140594482422
    10. '   ' → logprob: -15.501140594482422

Token 197: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007172470446676016
    2. ')' → logprob: -5.007172584533691
    3. '")
' → logprob: -8.382172584533691
    4. ')")' → logprob: -8.507172584533691
    5. '"' → logprob: -11.507172584533691
    6. ' ")' → logprob: -12.382172584533691
    7. ')
' → logprob: -13.007172584533691
    8. '')' → logprob: -13.007172584533691
    9. ')"' → logprob: -13.257172584533691
    10. '   ' → logprob: -13.507172584533691

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07856331765651703
    2. '   ' → logprob: -2.7035632133483887
    3. '
' → logprob: -5.203563213348389
    4. '\n' → logprob: -6.703563213348389
    5. '    
' → logprob: -7.703563213348389
    6. '        
' → logprob: -7.703563213348389
    7. '<|end|>' → logprob: -8.453563690185547
    8. '  
' → logprob: -8.703563690185547
    9. ' and' → logprob: -9.203563690185547
    10. '\' → logprob: -9.578563690185547

Token 199: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002780273789539933
    2. '   ' → logprob: -6.377780437469482
    3. '
' → logprob: -7.002780437469482
    4. 'if' (adapté à ' if') → logprob: -9.627779960632324
    5. ' if' → logprob: -9.877779960632324
    6. '        
' → logprob: -10.627779960632324
    7. ' ' → logprob: -12.002779960632324
    8. '  
' → logprob: -12.127779960632324
    9. '    
' → logprob: -12.252779960632324
    10. '\n' → logprob: -13.252779960632324

Token 200: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.014196882955729961
    2. 'c' → logprob: -4.264196872711182
    3. ' ' → logprob: -11.01419734954834
    4. '   ' → logprob: -11.76419734954834
    5. '  ' → logprob: -12.51419734954834
    6. '    ' → logprob: -13.51419734954834
    7. ' ' → logprob: -13.51419734954834
    8. '	c' → logprob: -14.01419734954834
    9. '     ' → logprob: -15.01419734954834
    10. 's' → logprob: -15.32669734954834

Token 201: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.009222709573805332
    2. 'c' → logprob: -5.009222507476807
    3. ' c' → logprob: -7.134222507476807
    4. '_c' → logprob: -7.634222507476807
    5. '_' → logprob: -8.009222984313965
    6. 'ount' → logprob: -8.384222984313965
    7. '   ' → logprob: -8.634222984313965
    8. 'count' → logprob: -9.009222984313965
    9. ' _' → logprob: -9.384222984313965
    10. ' ' → logprob: -9.759222984313965

Token 202: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0125176552683115
    2. '==' → logprob: -4.38751745223999
    3. '=' → logprob: -12.387517929077148
    4. ' =' → logprob: -13.137517929077148
    5. ')' → logprob: -13.637517929077148
    6. ')==' → logprob: -15.887517929077148
    7. ' ' → logprob: -16.13751792907715
    8. 's' → logprob: -16.38751792907715
    9. '1' → logprob: -16.88751792907715
    10. '()==' → logprob: -17.01251792907715

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38687121868133545
    2. ' ' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.136871337890625
    4. '0' → logprob: -17.261871337890625
    5. '   ' → logprob: -17.636871337890625
    6. '```' → logprob: -17.636871337890625
    7. '2' → logprob: -18.386871337890625
    8. '  ' → logprob: -19.011871337890625
    9. '１' → logprob: -19.761871337890625
    10. '۱' → logprob: -19.886871337890625

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.0
    4. '۱' → logprob: -21.75
    5. '<|end|>' → logprob: -22.0
    6. '   ' → logprob: -22.0
    7. '0' → logprob: -22.25
    8. '１' → logprob: -22.5
    9. '2' → logprob: -23.25
    10. 'exact' → logprob: -23.625

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026692116633057594
    2. ' and' → logprob: -4.151691913604736
    3. ':
' → logprob: -4.776691913604736
    4. '       ' → logprob: -6.526691913604736
    5. '           ' → logprob: -7.651691913604736
    6. ' :' → logprob: -8.776692390441895
    7. '   ' → logprob: -10.526692390441895
    8. ',' → logprob: -11.151692390441895
    9. 'and' → logprob: -11.276692390441895
    10. '):' → logprob: -12.276692390441895

Token 206: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11550069600343704
    2. '           ' → logprob: -2.2405006885528564
    3. '        
' → logprob: -6.2405009269714355
    4. '
' → logprob: -8.865500450134277
    5. '        ' → logprob: -8.990500450134277
    6. '   ' → logprob: -9.490500450134277
    7. '            
' → logprob: -9.740500450134277
    8. '\n' → logprob: -9.865500450134277
    9. '#' → logprob: -10.115500450134277
    10. '\' → logprob: -10.615500450134277

Token 207: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15309685468673706
    2. 'modified' → logprob: -3.528096914291382
    3. ' modified' → logprob: -3.778096914291382
    4. 'rest' → logprob: -4.403096675872803
    5. '       ' → logprob: -4.403096675872803
    6. 'temp' → logprob: -4.528096675872803
    7. '#' (adapté à ' #') → logprob: -4.903096675872803
    8. 's' → logprob: -5.028096675872803
    9. 'lower' → logprob: -5.028096675872803
    10. ' temp' → logprob: -5.403096675872803

Token 208: ' Rem' (ID: 6890)
  Prédit: 'modified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'modified' → logprob: -1.146286964416504
    2. 'temp' → logprob: -1.896286964416504
    3. 's' → logprob: -2.271286964416504
    4. 'new' → logprob: -2.646286964416504
    5. '   ' → logprob: -2.646286964416504
    6. '       ' → logprob: -3.396286964416504
    7. ' modified' → logprob: -3.396286964416504
    8. 'rest' → logprob: -3.521286964416504
    9. ' temp' → logprob: -3.646286964416504
    10. 're' → logprob: -3.771286964416504

Token 209: 'place' (ID: 3243)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.49674534797668457
    2. 'place' → logprob: -1.2467453479766846
    3. 'plac' → logprob: -2.4967453479766846
    4. 'placed' → logprob: -4.4967451095581055
    5. 'pl' → logprob: -6.3717451095581055
    6. '       ' → logprob: -6.4967451095581055
    7. '           ' → logprob: -6.6217451095581055
    8. 'placement' → logprob: -7.1217451095581055
    9. 'ar' → logprob: -7.3717451095581055
    10. '               ' → logprob: -7.4967451095581055

Token 210: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33165162801742554
    2. ' s' → logprob: -1.5816516876220703
    3. 'C' → logprob: -2.8316516876220703
    4. ' C' → logprob: -5.33165168762207
    5. '           ' → logprob: -5.83165168762207
    6. ' "' → logprob: -6.20665168762207
    7. ' '' → logprob: -6.33165168762207
    8. '"' → logprob: -6.33165168762207
    9. ''s' → logprob: -6.95665168762207
    10. '"C' → logprob: -7.20665168762207

Token 211: ' les' (ID: 1341)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5765165090560913
    2. '('' → logprob: -0.9515165090560913
    3. '   ' → logprob: -4.451516628265381
    4. 'C' → logprob: -4.826516628265381
    5. ' les' → logprob: -5.076516628265381
    6. 's' → logprob: -5.326516628265381
    7. ' "' → logprob: -5.451516628265381
    8. ' ' → logprob: -5.451516628265381
    9. ' ("' → logprob: -5.951516628265381
    10. '"C' → logprob: -6.076516628265381

Token 212: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.043395694345235825
    2. '"C' → logprob: -3.543395757675171
    3. ''C' → logprob: -4.668395519256592
    4. '"' → logprob: -6.793395519256592
    5. ' C' → logprob: -6.793395519256592
    6. 's' → logprob: -7.043395519256592
    7. '   ' → logprob: -7.793395519256592
    8. ' "' → logprob: -8.29339599609375
    9. ' ' → logprob: -9.41839599609375
    10. ''' → logprob: -9.54339599609375

Token 213: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004130344314035028
    2. ' C' → logprob: -8.625412940979004
    3. 's' → logprob: -9.375412940979004
    4. ''C' → logprob: -9.500412940979004
    5. '"C' → logprob: -10.250412940979004
    6. ' ' → logprob: -11.875412940979004
    7. ''' → logprob: -11.875412940979004
    8. '"' → logprob: -12.000412940979004
    9. '   ' → logprob: -12.250412940979004
    10. 'c' → logprob: -13.000412940979004

Token 214: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6855285167694092
    2. ' par' → logprob: -0.8105285167694092
    3. ' s' → logprob: -4.435528755187988
    4. ' by' → logprob: -4.560528755187988
    5. '<|end|>' → logprob: -5.060528755187988
    6. '<|end|>' → logprob: -5.685528755187988
    7. '   ' → logprob: -5.935528755187988
    8. '           ' → logprob: -6.060528755187988
    9. '"' → logprob: -6.060528755187988
    10. 'par' → logprob: -6.310528755187988

Token 215: ' rest' (ID: 2867)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.012181843630969524
    2. 'par' → logprob: -4.762181758880615
    3. 's' → logprob: -6.137181758880615
    4. ' by' → logprob: -7.137181758880615
    5. ' dans' → logprob: -8.637182235717773
    6. ' s' → logprob: -8.762182235717773
    7. '(s' → logprob: -9.387182235717773
    8. 'dans' → logprob: -10.387182235717773
    9. ' ' → logprob: -10.512182235717773
    10. 'by' → logprob: -10.762182235717773

Token 216: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.12760502099990845
    2. 'ant' → logprob: -2.2526049613952637
    3. 'és' → logprob: -4.502604961395264
    4. '"' → logprob: -6.877604961395264
    5. 'antes' → logprob: -7.127604961395264
    6. 's' → logprob: -7.752604961395264
    7. 'é' → logprob: -8.502605438232422
    8. 'r' → logprob: -8.877605438232422
    9. '"C' → logprob: -9.002605438232422
    10. 'it' → logprob: -9.127605438232422

Token 217: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8744696378707886
    2. 's' → logprob: -1.6244696378707886
    3. ' s' → logprob: -1.7494696378707886
    4. '           ' → logprob: -1.8744696378707886
    5. ' by' → logprob: -3.374469757080078
    6. '(s' → logprob: -4.999469757080078
    7. ' =' → logprob: -5.124469757080078
    8. ' dans' → logprob: -5.874469757080078
    9. ' ' → logprob: -6.499469757080078
    10. ' in' → logprob: -6.624469757080078

Token 218: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0321859121322632
    2. ''' → logprob: -1.2821859121322632
    3. '"' → logprob: -1.6571859121322632
    4. ''s' → logprob: -2.5321860313415527
    5. ' "' → logprob: -3.4071860313415527
    6. 'c' → logprob: -3.5321860313415527
    7. ' c' → logprob: -4.282186031341553
    8. 's' → logprob: -5.157186031341553
    9. ' ' → logprob: -5.157186031341553
    10. '"s' → logprob: -6.157186031341553

Token 219: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.893480243277736e-05
    2. ''' → logprob: -10.750039100646973
    3. ' c' → logprob: -11.000039100646973
    4. '"' → logprob: -15.000039100646973
    5. ')c' → logprob: -16.000038146972656
    6. '	c' → logprob: -16.500038146972656
    7. '```' → logprob: -17.250038146972656
    8. 'с' → logprob: -17.500038146972656
    9. '`' → logprob: -17.500038146972656
    10. ''s' → logprob: -18.000038146972656

Token 220: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4092799425125122
    2. '           ' → logprob: -1.4092799425125122
    3. 's' → logprob: -1.5342799425125122
    4. '"' → logprob: -1.7842799425125122
    5. '')' → logprob: -2.9092798233032227
    6. '")' → logprob: -3.5342798233032227
    7. ' s' → logprob: -4.534279823303223
    8. ''.' → logprob: -5.284279823303223
    9. '       ' → logprob: -5.534279823303223
    10. '".' → logprob: -6.159279823303223

Token 221: ' puis' (ID: 18766)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33174413442611694
    2. ' s' → logprob: -1.9567441940307617
    3. 's' → logprob: -2.4567441940307617
    4. ' rest' → logprob: -4.206744194030762
    5. ' new' → logprob: -4.456744194030762
    6. 'rest' → logprob: -5.081744194030762
    7. ' modified' → logprob: -5.456744194030762
    8. 'modified' → logprob: -5.706744194030762
    9. 'new' → logprob: -5.956744194030762
    10. 'temp' → logprob: -6.831744194030762

Token 222: ' vér' (ID: 42524)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9363495111465454
    2. ' s' → logprob: -1.9363495111465454
    3. ' check' → logprob: -2.311349391937256
    4. ' vér' → logprob: -2.436349391937256
    5. 'check' → logprob: -2.686349391937256
    6. 'lower' → logprob: -2.936349391937256
    7. ' lowercase' → logprob: -3.811349391937256
    8. ' checks' → logprob: -3.936349391937256
    9. ' convert' → logprob: -3.936349391937256
    10. '   ' → logprob: -4.061349391937256

Token 223: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00020687808864749968
    2. 'if' → logprob: -9.25020694732666
    3. 'ifier' → logprob: -10.25020694732666
    4. 'ife' → logprob: -10.75020694732666
    5. 'ifiez' → logprob: -11.12520694732666
    6. '   ' → logprob: -11.25020694732666
    7. '```' → logprob: -12.25020694732666
    8. 'ifi' → logprob: -12.25020694732666
    9. 'ify' → logprob: -12.50020694732666
    10. 'ifié' → logprob: -13.12520694732666

Token 224: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09273286908864975
    2. 'if' → logprob: -3.0927329063415527
    3. ' si' → logprob: -3.7177329063415527
    4. ' que' → logprob: -5.217732906341553
    5. ' s' → logprob: -5.592732906341553
    6. '   ' → logprob: -6.092732906341553
    7. 'si' → logprob: -6.342732906341553
    8. 's' → logprob: -6.342732906341553
    9. ' ' → logprob: -6.592732906341553
    10. '           ' → logprob: -7.092732906341553

Token 225: ' les' (ID: 1341)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20348365604877472
    2. 's' → logprob: -1.7034837007522583
    3. ' all' → logprob: -6.328483581542969
    4. 'all' → logprob: -8.328483581542969
    5. '(s' → logprob: -11.453483581542969
    6. ' ' → logprob: -11.578483581542969
    7. ' (' → logprob: -12.890983581542969
    8. 't' → logprob: -13.078483581542969
    9. ' the' → logprob: -13.078483581542969
    10. '   ' → logprob: -13.515983581542969

Token 226: ' caractères' (ID: 183106)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7907376885414124
    2. 'aut' → logprob: -1.9157376289367676
    3. ' autres' → logprob: -2.1657376289367676
    4. 'reste' → logprob: -2.2907376289367676
    5. ' rest' → logprob: -3.1657376289367676
    6. 're' → logprob: -3.5407376289367676
    7. ' caractères' → logprob: -3.7907376289367676
    8. 'other' → logprob: -4.165737628936768
    9. ' reste' → logprob: -4.290737628936768
    10. 'car' → logprob: -4.415737628936768

Token 227: ' à' (ID: 1221)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.0147278308868408
    2. 's' → logprob: -1.1397278308868408
    3. ' rest' → logprob: -1.5147278308868408
    4. '[' → logprob: -2.639727830886841
    5. ' restantes' → logprob: -4.389727592468262
    6. 'remaining' → logprob: -5.764727592468262
    7. 'de' → logprob: -6.139727592468262
    8. ' restante' → logprob: -6.264727592468262
    9. '   ' → logprob: -7.139727592468262
    10. 'are' → logprob: -7.389727592468262

Token 228: ' partir' (ID: 12100)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.829893946647644
    2. ' partir' → logprob: -1.329893946647644
    3. 'part' → logprob: -2.7048940658569336
    4. 'l' → logprob: -2.8298940658569336
    5. 'v' → logprob: -2.9548940658569336
    6. '[' → logprob: -2.9548940658569336
    7. 's' → logprob: -4.454894065856934
    8. '```' → logprob: -4.829894065856934
    9. ' vérifier' → logprob: -4.954894065856934
    10. 'lower' → logprob: -5.079894065856934

Token 229: ' du' (ID: 1462)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7516652941703796
    2. 'de' → logprob: -1.2516653537750244
    3. 'du' → logprob: -2.2516653537750244
    4. ' du' → logprob: -3.0016653537750244
    5. ' de' → logprob: -3.1266653537750244
    6. '2' → logprob: -3.5016653537750244
    7. 's' → logprob: -5.376665115356445
    8. '   ' → logprob: -6.126665115356445
    9. 'd' → logprob: -6.376665115356445
    10. '3' → logprob: -7.376665115356445

Token 230: ' deuxième' (ID: 51664)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6951423287391663
    2. '1' → logprob: -0.8201423287391663
    3. ' deuxième' → logprob: -3.9451422691345215
    4. 'de' → logprob: -4.5701422691345215
    5. '3' → logprob: -4.8201422691345215
    6. ' second' → logprob: -5.1951422691345215
    7. ' ' → logprob: -5.1951422691345215
    8. 'second' → logprob: -5.4451422691345215
    9. ' troisième' → logprob: -5.4451422691345215
    10. 'third' → logprob: -7.1951422691345215

Token 231: ' sont' (ID: 5242)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.46516159176826477
    2. 'car' → logprob: -1.3401615619659424
    3. 'token' → logprob: -3.3401615619659424
    4. ' caract' → logprob: -3.7151615619659424
    5. ' caractères' → logprob: -4.4651618003845215
    6. ' token' → logprob: -4.8401618003845215
    7. 'index' → logprob: -5.0901618003845215
    8. ' index' → logprob: -5.2151618003845215
    9. ' ' → logprob: -5.4651618003845215
    10. ' car' → logprob: -5.5901618003845215

Token 232: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14350776374340057
    2. ' all' → logprob: -3.143507719039917
    3. ' s' → logprob: -3.393507719039917
    4. 'all' → logprob: -3.643507719039917
    5. 'isl' → logprob: -4.268507957458496
    6. ' is' → logprob: -5.643507957458496
    7. 'is' → logprob: -6.143507957458496
    8. 'str' → logprob: -6.768507957458496
    9. ' toutes' → logprob: -6.893507957458496
    10. '   ' → logprob: -7.018507957458496

Token 233: ' des' (ID: 731)
  Prédit: 'isl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isl' → logprob: -1.0359294414520264
    2. 's' → logprob: -1.4109294414520264
    3. ' en' → logprob: -1.5359294414520264
    4. 'minus' → logprob: -3.2859294414520264
    5. 'en' → logprob: -3.4109294414520264
    6. 'lower' → logprob: -4.2859296798706055
    7. ' lowercase' → logprob: -4.4109296798706055
    8. '   ' → logprob: -4.6609296798706055
    9. '.is' → logprob: -4.9109296798706055
    10. 'is' → logprob: -5.0359296798706055

Token 234: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.14071767032146454
    2. 'lower' → logprob: -2.7657177448272705
    3. 'a' → logprob: -3.5157177448272705
    4. ' minus' → logprob: -3.8907177448272705
    5. 'isl' → logprob: -5.265717506408691
    6. 'min' → logprob: -5.515717506408691
    7. 'l' → logprob: -6.390717506408691
    8. ' lowercase' → logprob: -6.765717506408691
    9. 'car' → logprob: -6.890717506408691
    10. 'lett' → logprob: -7.015717506408691

Token 235: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.0032575693912804127
    2. 'c' → logprob: -5.753257751464844
    3. '```' → logprob: -10.378257751464844
    4. '   ' → logprob: -10.878257751464844
    5. 'culas' → logprob: -12.253257751464844
    6. 'C' → logprob: -12.378257751464844
    7. '``' → logprob: -12.378257751464844
    8. 'cule' → logprob: -12.878257751464844
    9. '
' → logprob: -13.503257751464844
    10. 'ules' → logprob: -13.503257751464844

Token 236: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0415091514587402
    2. '   ' → logprob: -1.7915091514587402
    3. ' and' → logprob: -2.1665091514587402
    4. ' s' → logprob: -2.1665091514587402
    5. ' for' → logprob: -3.0415091514587402
    6. 's' → logprob: -3.2915091514587402
    7. ' (' → logprob: -3.4165091514587402
    8. ':' → logprob: -3.4165091514587402
    9. '       ' → logprob: -3.6665091514587402
    10. ',' → logprob: -3.7915091514587402

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11280962824821472
    2. '       ' → logprob: -3.362809658050537
    3. '   ' → logprob: -3.487809658050537
    4. ' s' → logprob: -3.612809658050537
    5. 's' → logprob: -5.362809658050537
    6. ' and' → logprob: -5.987809658050537
    7. '
' → logprob: -6.737809658050537
    8. '            
' → logprob: -6.987809658050537
    9. ' if' → logprob: -7.112809658050537
    10. '    
' → logprob: -7.612809658050537

Token 238: ' if' (ID: 538)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.5261492729187012
    2. 'if' (adapté à ' if') → logprob: -1.6511492729187012
    3. 'sub' → logprob: -2.276149272918701
    4. 'temp' → logprob: -2.776149272918701
    5. 'for' → logprob: -2.901149272918701
    6. 'substring' → logprob: -2.901149272918701
    7. 'remaining' → logprob: -3.026149272918701
    8. 'modified' → logprob: -3.151149272918701
    9. ' if' → logprob: -3.401149272918701
    10. '   ' → logprob: -3.401149272918701

Token 239: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4442639946937561
    2. 'all' → logprob: -1.1942639350891113
    3. ' all' → logprob: -3.3192639350891113
    4. ' s' → logprob: -3.9442639350891113
    5. '(s' → logprob: -9.81926441192627
    6. '   ' → logprob: -9.94426441192627
    7. ' ' → logprob: -10.44426441192627
    8. 'len' → logprob: -10.56926441192627
    9. '(all' → logprob: -10.69426441192627
    10. 'set' → logprob: -12.19426441192627

Token 240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001613459608051926
    2. '.replace' → logprob: -9.375161170959473
    3. '[:' → logprob: -9.875161170959473
    4. '   ' → logprob: -11.000161170959473
    5. '.lower' → logprob: -12.875161170959473
    6. '.' → logprob: -13.125161170959473
    7. ' [' → logprob: -13.375161170959473
    8. '       ' → logprob: -14.750161170959473
    9. ' ' → logprob: -14.750161170959473
    10. ' .' → logprob: -15.250161170959473

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012799992691725492
    2. ' ' → logprob: -7.376279830932617
    3. ':' → logprob: -7.751279830932617
    4. '0' → logprob: -9.126279830932617
    5. '2' → logprob: -9.751279830932617
    6. ' :' → logprob: -10.876279830932617
    7. '   ' → logprob: -11.001279830932617
    8. '  ' → logprob: -12.688779830932617
    9. '
' → logprob: -12.813779830932617
    10. '```' → logprob: -13.063779830932617

Token 242: ':].' (ID: 193388)
  Prédit: ':].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.0720038041472435
    2. '].' → logprob: -3.4470038414001465
    3. ':' → logprob: -4.0720038414001465
    4. '[' → logprob: -4.5720038414001465
    5. '][' → logprob: -5.8220038414001465
    6. '+' → logprob: -5.8220038414001465
    7. ']' → logprob: -6.1970038414001465
    8. '1' → logprob: -7.4470038414001465
    9. ' :' → logprob: -7.5720038414001465
    10. ':]' → logprob: -7.8220038414001465

Token 243: 'replace' (ID: 15208)
  Prédit: 'replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -5.080963092041202e-06
    2. ' replace' → logprob: -12.250004768371582
    3. 'lower' → logprob: -15.750004768371582
    4. '.replace' → logprob: -16.5000057220459
    5. 'translate' → logprob: -16.6250057220459
    6. '   ' → logprob: -18.2500057220459
    7. 'count' → logprob: -19.6250057220459
    8. ' ' → logprob: -20.0000057220459
    9. 're' → logprob: -20.2500057220459
    10. 'rep' → logprob: -21.0000057220459

Token 244: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.013524174690246582
    2. '('' → logprob: -4.513524055480957
    3. '(' → logprob: -6.013524055480957
    4. '"' → logprob: -11.138524055480957
    5. '(
' → logprob: -12.013524055480957
    6. '"C' → logprob: -12.013524055480957
    7. ''' → logprob: -14.263524055480957
    8. ' ("' → logprob: -15.638524055480957
    9. '   ' → logprob: -16.763525009155273
    10. ''C' → logprob: -16.888525009155273

Token 245: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0018723555840551853
    2. '"C' → logprob: -6.376872539520264
    3. ''C' → logprob: -8.751872062683105
    4. '"' → logprob: -11.626872062683105
    5. ''' → logprob: -13.376872062683105
    6. ' C' → logprob: -13.501872062683105
    7. '   ' → logprob: -16.001873016357422
    8. '
' → logprob: -17.376873016357422
    9. ' "' → logprob: -17.626873016357422
    10. ' ' → logprob: -17.626873016357422

Token 246: '",' (ID: 672)
  Prédit: '","'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '","' → logprob: -0.47437185049057007
    2. '",' → logprob: -0.9743718504905701
    3. '"' → logprob: -8.849371910095215
    4. '",'' → logprob: -8.974371910095215
    5. 'c' → logprob: -11.849371910095215
    6. ',' → logprob: -12.099371910095215
    7. ',"' → logprob: -12.349371910095215
    8. '','' → logprob: -12.474371910095215
    9. '',' → logprob: -13.474371910095215
    10. '",
' → logprob: -13.599371910095215

Token 247: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0002656271681189537
    2. ''' → logprob: -8.625266075134277
    3. ' "' → logprob: -9.375266075134277
    4. 'c' → logprob: -14.250266075134277
    5. '   ' → logprob: -15.375266075134277
    6. '
' → logprob: -17.00026512145996
    7. ')c' → logprob: -17.00026512145996
    8. '    ' → logprob: -17.12526512145996
    9. ' ' → logprob: -17.12526512145996
    10. '")' → logprob: -17.25026512145996

Token 248: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6240566083070007e-06
    2. ' c' → logprob: -13.750001907348633
    3. '"' → logprob: -14.500001907348633
    4. '	c' → logprob: -17.000001907348633
    5. ')c' → logprob: -18.250001907348633
    6. '")' → logprob: -18.375001907348633
    7. ''' → logprob: -18.500001907348633
    8. '_c' → logprob: -19.625001907348633
    9. '
' → logprob: -21.000001907348633
    10. '.c' → logprob: -21.250001907348633

Token 249: '").' (ID: 3172)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3199935853481293
    2. '").' → logprob: -1.3199936151504517
    3. '').' → logprob: -5.194993495941162
    4. ')' → logprob: -7.569993495941162
    5. '"' → logprob: -7.944993495941162
    6. '   ' → logprob: -9.44499397277832
    7. '`).' → logprob: -10.19499397277832
    8. ' ).' → logprob: -10.31999397277832
    9. ' "").' → logprob: -10.44499397277832
    10. ')").' → logprob: -10.69499397277832

Token 250: 'isl' (ID: 13495)
  Prédit: 'isl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isl' → logprob: -1.981667537620524e-06
    2. 'is' → logprob: -14.125001907348633
    3. 'all' → logprob: -14.750001907348633
    4. 'isas' → logprob: -15.000001907348633
    5. 'isal' → logprob: -15.875001907348633
    6. ' is' → logprob: -16.000001907348633
    7. 'lower' → logprob: -16.250001907348633
    8. '```' → logprob: -17.000001907348633
    9. 'ist' → logprob: -17.125001907348633
    10. 'isdigit' → logprob: -17.875001907348633

Token 251: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -5.512236498361744e-07
    2. 'ow' → logprob: -15.375000953674316
    3. 'owe' → logprob: -16.25
    4. 'OWER' → logprob: -16.375
    5. '   ' → logprob: -17.25
    6. 'lower' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. 'owered' → logprob: -18.5
    9. 'owel' → logprob: -19.0
    10. '
' → logprob: -19.375

Token 252: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06197340786457062
    2. '()' → logprob: -2.8119733333587646
    3. '():
' → logprob: -12.686973571777344
    4. '(' → logprob: -13.936973571777344
    5. ' ():' → logprob: -14.686973571777344
    6. '()>' → logprob: -15.561973571777344
    7. '())' → logprob: -15.686973571777344
    8. '()">' → logprob: -15.811973571777344
    9. '()==' → logprob: -15.811973571777344
    10. ' ()' → logprob: -15.936973571777344

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031055594445206225
    2. '           ' → logprob: -8.375310897827148
    3. '
' → logprob: -10.375310897827148
    4. ' return' → logprob: -11.125310897827148
    5. ':
' → logprob: -12.125310897827148
    6. '                
' → logprob: -12.250310897827148
    7. '       ' → logprob: -12.375310897827148
    8. 'return' → logprob: -12.375310897827148
    9. '              ' → logprob: -12.500310897827148
    10. '             ' → logprob: -13.250310897827148

Token 254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20165042579174042
    2. '           ' → logprob: -2.701650381088257
    3. ' return' → logprob: -2.951650381088257
    4. '                   ' → logprob: -2.951650381088257
    5. '               ' → logprob: -4.701650619506836
    6. '       ' → logprob: -6.326650619506836
    7. '   ' → logprob: -8.951650619506836
    8. '
' → logprob: -11.701650619506836
    9. '	return' → logprob: -12.326650619506836
    10. '{return' → logprob: -13.826650619506836

Token 255: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06783011555671692
    2. ''' → logprob: -3.3178300857543945
    3. ' "' → logprob: -3.5678300857543945
    4. ' '' → logprob: -6.8178300857543945
    5. ''ac' → logprob: -10.317830085754395
    6. '   ' → logprob: -13.317830085754395
    7. '"A' → logprob: -13.692830085754395
    8. '"AT' → logprob: -14.567830085754395
    9. ' ' → logprob: -14.692830085754395
    10. '"'' → logprob: -15.317830085754395

Token 256: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -6.704273118884885e-07
    2. 'A' → logprob: -14.625000953674316
    3. '"' → logprob: -16.875
    4. ''' → logprob: -17.25
    5. ' AC' → logprob: -17.25
    6. '   ' → logprob: -19.25
    7. '_AC' → logprob: -19.625
    8. 'ac' → logprob: -19.875
    9. ''ac' → logprob: -20.125
    10. '```' → logprob: -20.5

Token 257: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009164590737782419
    2. '"
' → logprob: -7.000916481018066
    3. '"
' → logprob: -12.250916481018066
    4. '   ' → logprob: -17.00091552734375
    5. '"`
' → logprob: -17.25091552734375
    6. '"

' → logprob: -17.37591552734375
    7. '"`' → logprob: -17.62591552734375
    8. '```' → logprob: -17.75091552734375
    9. '"""' → logprob: -17.87591552734375
    10. ''' → logprob: -18.00091552734375

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012910704826936126
    2. 'else' → logprob: -7.751291275024414
    3. '       ' → logprob: -7.876291275024414
    4. ' else' → logprob: -8.126291275024414
    5. '	else' → logprob: -9.251291275024414
    6. '
' → logprob: -10.126291275024414
    7. '	return' → logprob: -11.001291275024414
    8. '    
' → logprob: -11.251291275024414
    9. 'return' → logprob: -11.626291275024414
    10. '```' → logprob: -12.626291275024414

Token 259: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39094021916389465
    2. 'return' → logprob: -1.1409401893615723
    3. ' return' → logprob: -5.515940189361572
    4. 'else' → logprob: -10.26594066619873
    5. '    
' → logprob: -13.89094066619873
    6. ' else' → logprob: -13.89094066619873
    7. '	return' → logprob: -14.51594066619873
    8. '
' → logprob: -14.64094066619873
    9. ' ' → logprob: -14.89094066619873
    10. 'eturn' → logprob: -15.14094066619873

Token 260: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4378848391061183e-05
    2. ' return' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.625014305114746
    4. 'Return' → logprob: -16.625015258789062
    5. 'ret' → logprob: -18.625015258789062
    6. 'eturn' → logprob: -20.625015258789062
    7. '       ' → logprob: -20.750015258789062
    8. ' ' → logprob: -20.750015258789062
    9. '	return' → logprob: -20.875015258789062
    10. 'Retour' → logprob: -21.000015258789062

Token 261: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12494732439517975
    2. 'ne' → logprob: -2.6249473094940186
    3. 'ner' → logprob: -3.7499473094940186
    4. '"' → logprob: -4.249947547912598
    5. ' "' → logprob: -5.874947547912598
    6. '   ' → logprob: -5.999947547912598
    7. 'rn' → logprob: -6.749947547912598
    8. 'ns' → logprob: -7.874947547912598
    9. 'nez' → logprob: -9.374947547912598
    10. ' n' → logprob: -9.374947547912598

Token 262: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5763848423957825
    2. ' "' → logprob: -0.8263848423957825
    3. ''' → logprob: -8.201384544372559
    4. '   ' → logprob: -9.201384544372559
    5. ' '' → logprob: -10.201384544372559
    6. ' ' → logprob: -11.201384544372559
    7. '"W' → logprob: -11.201384544372559
    8. ' ' → logprob: -12.701384544372559
    9. '  ' → logprob: -13.576384544372559
    10. '    ' → logprob: -14.576384544372559

Token 263: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -5.438573680294212e-06
    2. '"' → logprob: -12.375005722045898
    3. ' WA' → logprob: -13.875005722045898
    4. ''' → logprob: -15.375005722045898
    5. 'wa' → logprob: -18.1250057220459
    6. ' ' → logprob: -19.2500057220459
    7. '"W' → logprob: -19.2500057220459
    8. '   ' → logprob: -20.0000057220459
    9. 'W' → logprob: -20.0000057220459
    10. 'WR' → logprob: -20.2500057220459

Token 264: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.339278580620885e-06
    2. '"
' → logprob: -13.375001907348633
    3. '"""' → logprob: -15.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. '"W' → logprob: -16.625001907348633
    6. ''"' → logprob: -17.250001907348633
    7. ' "' → logprob: -17.625001907348633
    8. '"`' → logprob: -17.625001907348633
    9. '""' → logprob: -17.875001907348633
    10. '")' → logprob: -18.000001907348633

Token 265: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02600799687206745
    2. 'return' → logprob: -4.151008129119873
    3. ' return' → logprob: -4.776008129119873
    4. '    
' → logprob: -7.276008129119873
    5. '
' → logprob: -7.901008129119873
    6. '	return' → logprob: -9.026007652282715
    7. '<|end|>' → logprob: -9.776007652282715
    8. '  ' → logprob: -9.901007652282715
    9. '  
' → logprob: -10.151007652282715
    10. ' 
' → logprob: -10.651007652282715

Token 266: ' l' (ID: 305)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0659397765994072
    2. 'True' → logprob: -2.9409396648406982
    3. ' not' → logprob: -4.940939903259277
    4. ' la' → logprob: -6.565939903259277
    5. ' aucune' → logprob: -6.815939903259277
    6. ' ' → logprob: -7.565939903259277
    7. ' le' → logprob: -8.065939903259277
    8. ' ' → logprob: -9.440939903259277
    9. 'not' → logprob: -9.565939903259277
    10. '   ' → logprob: -9.690939903259277

Token 267: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.334605872631073
    2. ' s' → logprob: -2.8346059322357178
    3. 's' → logprob: -2.9596059322357178
    4. ''ensemble' → logprob: -2.9596059322357178
    5. ''' → logprob: -3.3346059322357178
    6. 'es' → logprob: -3.5846059322357178
    7. 'e' → logprob: -3.7096059322357178
    8. ''utilisateur' → logprob: -4.834605693817139
    9. ' a' → logprob: -5.709605693817139
    10. '   ' → logprob: -5.959605693817139

Token 268: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.005106387659907341
    2. 'des' → logprob: -5.630106449127197
    3. '   ' → logprob: -6.630106449127197
    4. ' de' → logprob: -10.005105972290039
    5. ' condition' → logprob: -10.255105972290039
    6. ' du' → logprob: -10.755105972290039
    7. 'def' → logprob: -10.880105972290039
    8. '  ' → logprob: -10.880105972290039
    9. ':' → logprob: -11.755105972290039
    10. ' ' → logprob: -12.005105972290039

Token 269: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.1135687455534935
    2. 'conditions' → logprob: -2.2385687828063965
    3. ' ' → logprob: -8.238568305969238
    4. 'cond' → logprob: -9.238568305969238
    5. '   ' → logprob: -9.238568305969238
    6. 'condition' → logprob: -9.613568305969238
    7. ' condition' → logprob: -9.738568305969238
    8. '条件' → logprob: -9.988568305969238
    9. '_conditions' → logprob: -10.238568305969238
    10. ' True' → logprob: -10.488568305969238

Token 270: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3894713222980499
    2. 'n' → logprob: -1.1394712924957275
    3. '   ' → logprob: -6.389471530914307
    4. ' est' → logprob: -7.889471530914307
    5. 'est' → logprob: -7.889471530914307
    6. ' not' → logprob: -10.514471054077148
    7. 'not' → logprob: -10.639471054077148
    8. '    ' → logprob: -10.764471054077148
    9. 'n't' → logprob: -11.139471054077148
    10. ' ' → logprob: -11.264471054077148

Token 271: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.533088743686676
    2. ''est' → logprob: -0.908088743686676
    3. 'pas' → logprob: -5.408088684082031
    4. 'n' → logprob: -5.658088684082031
    5. 'a' → logprob: -7.658088684082031
    6. '’est' → logprob: -8.158088684082031
    7. ''' → logprob: -8.408088684082031
    8. 'e' → logprob: -8.533088684082031
    9. 'é' → logprob: -9.283088684082031
    10. 'es' → logprob: -9.408088684082031

Token 272: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0024807697627693415
    2. ' pas' → logprob: -6.002480983734131
    3. 'p' → logprob: -13.002480506896973
    4. 'not' → logprob: -14.127480506896973
    5. '_pas' → logprob: -14.627480506896973
    6. '```' → logprob: -14.752480506896973
    7. 'Pas' → logprob: -15.377480506896973
    8. 's' → logprob: -15.627480506896973
    9. ' ' → logprob: -15.752480506896973
    10. '

' → logprob: -16.25248146057129

Token 273: ' respect' (ID: 5618)
  Prédit: ' rempl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rempl' → logprob: -0.8220727443695068
    2. 'respect' → logprob: -0.9470727443695068
    3. 'pas' → logprob: -2.447072744369507
    4. 's' → logprob: -3.197072744369507
    5. ' respect' → logprob: -3.822072744369507
    6. 'rem' → logprob: -3.947072744369507
    7. ' pas' → logprob: -6.947072982788086
    8. '   ' → logprob: -7.322072982788086
    9. '"' → logprob: -7.697072982788086
    10. '
' → logprob: -7.947072982788086

Token 274: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0018440400017425418
    2. 'é' → logprob: -6.6268439292907715
    3. 'ées' → logprob: -7.7518439292907715
    4. 'ee' → logprob: -9.37684440612793
    5. 'É' → logprob: -13.62684440612793
    6. 'e' → logprob: -14.00184440612793
    7. 'née' → logprob: -14.62684440612793
    8. 'és' → logprob: -15.50184440612793
    9. '"' → logprob: -15.62684440612793
    10. 'ed' → logprob: -16.12684440612793

Token 275: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007233412936329842
    2. '
' → logprob: -5.257233619689941
    3. '    
' → logprob: -6.757233619689941
    4. ' return' → logprob: -8.382233619689941
    5. 'return' → logprob: -8.507233619689941
    6. '  
' → logprob: -9.132233619689941
    7. ' 
' → logprob: -9.132233619689941
    8. '<|end|>' → logprob: -10.507233619689941
    9. '   
' → logprob: -10.632233619689941
    10. '  ' → logprob: -10.632233619689941

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.32523515378125e-05
    2. 'return' → logprob: -9.875062942504883
    3. ' return' → logprob: -11.375062942504883
    4. '```' → logprob: -15.250062942504883
    5. '	return' → logprob: -16.750062942504883
    6. '       ' → logprob: -17.000062942504883
    7. '    
' → logprob: -17.125062942504883
    8. '   ' → logprob: -18.750062942504883
    9. '
' → logprob: -19.500062942504883
    10. '{return' → logprob: -20.000062942504883

Token 277: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0658857673406601
    2. 'return' (adapté à ' return') → logprob: -3.0658857822418213
    3. ' return' → logprob: -4.065885543823242
    4. '       ' → logprob: -13.690885543823242
    5. '	return' → logprob: -15.440885543823242
    6. '  ' → logprob: -15.815885543823242
    7. '    ' → logprob: -16.065885543823242
    8. ' ' → logprob: -16.815885543823242
    9. '```' → logprob: -16.940885543823242
    10. '   ' → logprob: -17.065885543823242

Token 278: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47409385442733765
    2. ' "' → logprob: -0.9740938544273376
    3. ''' → logprob: -11.849093437194824
    4. ' ' → logprob: -11.849093437194824
    5. '"W' → logprob: -13.224093437194824
    6. ' '' → logprob: -14.599093437194824
    7. ' ' → logprob: -16.09909439086914
    8. '	' → logprob: -17.47409439086914
    9. '"A' → logprob: -17.47409439086914
    10. '`' → logprob: -17.47409439086914

Token 279: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -1.6240566083070007e-06
    2. '"' → logprob: -14.125001907348633
    3. 'W' → logprob: -14.375001907348633
    4. ' WA' → logprob: -16.250001907348633
    5. ''' → logprob: -16.375001907348633
    6. 'wa' → logprob: -16.750001907348633
    7. 'Wa' → logprob: -18.375001907348633
    8. '"W' → logprob: -18.750001907348633
    9. 'WAN' → logprob: -21.000001907348633
    10. '```' → logprob: -21.000001907348633

Token 280: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0656709671020508
    2. '"' → logprob: -1.6906709671020508
    3. '
' → logprob: -1.8156709671020508
    4. '```' → logprob: -2.065670967102051
    5. '\n' → logprob: -2.315670967102051
    6. '<|end|>' → logprob: -2.565670967102051
    7. ''' → logprob: -6.690670967102051
    8. '")' → logprob: -6.815670967102051
    9. '}' → logprob: -7.190670967102051
    10. '`' → logprob: -7.315670967102051

Token 281: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0027320017106831074
    2. '__' → logprob: -6.002731800079346
    3. ' _' → logprob: -9.127732276916504
    4. '_' → logprob: -9.252732276916504
    5. ' ' → logprob: -10.502732276916504
    6. ' ' → logprob: -11.752732276916504
    7. 's' → logprob: -12.627732276916504
    8. ' s' → logprob: -12.627732276916504
    9. '_name' → logprob: -12.627732276916504
    10. ' isinstance' → logprob: -13.252732276916504

Token 283: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00034750174381770194
    2. ' __' → logprob: -8.500347137451172
    3. 'name' → logprob: -9.250347137451172
    4. '__[' → logprob: -11.750347137451172
    5. '__.__' → logprob: -11.875347137451172
    6. ' ==' → logprob: -12.000347137451172
    7. 'if' → logprob: -12.125347137451172
    8. '_' → logprob: -12.125347137451172
    9. '==' → logprob: -12.500347137451172
    10. '__.' → logprob: -12.625347137451172

Token 284: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '__.__' → logprob: -15.250000953674316
    3. '__["' → logprob: -15.625000953674316
    4. '__[' → logprob: -15.875000953674316
    5. '==' → logprob: -16.625
    6. '__":
' → logprob: -17.0
    7. ' ==' → logprob: -17.875
    8. '__
' → logprob: -19.125
    9. '__
' → logprob: -19.5
    10. '__.' → logprob: -19.5

Token 285: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019451677799224854
    2. ' ==' → logprob: -4.39445161819458
    3. '==' → logprob: -5.14445161819458
    4. '=="' → logprob: -6.89445161819458
    5. '__.__' → logprob: -10.394452095031738
    6. '___' → logprob: -11.519452095031738
    7. '_' → logprob: -11.894452095031738
    8. '__":
' → logprob: -12.019452095031738
    9. '__["' → logprob: -12.269452095031738
    10. '__.' → logprob: -12.644452095031738

Token 286: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0020421291701495647
    2. ''' → logprob: -6.627042293548584
    3. ' "__' → logprob: -7.252042293548584
    4. '__' → logprob: -12.127041816711426
    5. ' '__' → logprob: -13.752041816711426
    6. ' "' → logprob: -15.002041816711426
    7. '"user' → logprob: -15.877041816711426
    8. '"name' → logprob: -16.002042770385742
    9. '"_' → logprob: -17.502042770385742
    10. '("__' → logprob: -18.002042770385742

Token 287: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0325924449716695e-05
    2. 'name' → logprob: -11.50001049041748
    3. ' main' → logprob: -16.125009536743164
    4. '__' → logprob: -17.875009536743164
    5. '_main' → logprob: -17.875009536743164
    6. 'ma' → logprob: -20.125009536743164
    7. 'm' → logprob: -20.500009536743164
    8. '	main' → logprob: -20.750009536743164
    9. '(main' → logprob: -21.375009536743164
    10. '主' → logprob: -21.875009536743164

Token 288: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014208407141268253
    2. '__' → logprob: -4.2642083168029785
    3. '__':
' → logprob: -10.014208793640137
    4. '__:' → logprob: -16.01420783996582
    5. '__["' → logprob: -17.38920783996582
    6. '__("' → logprob: -19.63920783996582
    7. '__",' → logprob: -20.01420783996582
    8. '__
' → logprob: -20.13920783996582
    9. '_' → logprob: -20.63920783996582
    10. '__[' → logprob: -20.76420783996582

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009977530688047409
    2. '    
' → logprob: -4.884977340698242
    3. '<|end|>' → logprob: -6.759977340698242
    4. '
' → logprob: -8.134977340698242
    5. '```' → logprob: -8.759977340698242
    6. 'n' → logprob: -9.134977340698242
    7. '    ' → logprob: -9.259977340698242
    8. '\' → logprob: -9.384977340698242
    9. ' 
' → logprob: -9.509977340698242
    10. ' input' → logprob: -9.759977340698242

Token 290: ' #' (ID: 1069)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07571254670619965
    2. 's' → logprob: -3.5757124423980713
    3. ' n' → logprob: -4.32571268081665
    4. '   ' → logprob: -4.57571268081665
    5. ' import' → logprob: -4.57571268081665
    6. ' input' → logprob: -4.82571268081665
    7. 'n' → logprob: -6.20071268081665
    8. 'import' → logprob: -7.20071268081665
    9. ' for' → logprob: -9.325712203979492
    10. 'input' → logprob: -9.325712203979492

Token 291: ' Lit' (ID: 45595)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9708510041236877
    2. ' s' → logprob: -1.845850944519043
    3. 'n' → logprob: -1.970850944519043
    4. ' input' → logprob: -2.220850944519043
    5. 's' → logprob: -2.470850944519043
    6. ' import' → logprob: -2.845850944519043
    7. 'import' → logprob: -3.595850944519043
    8. 'input' → logprob: -4.095850944519043
    9. ' test' → logprob: -5.095850944519043
    10. ' t' → logprob: -5.470850944519043

Token 292: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03286159783601761
    2. '   ' → logprob: -3.7828617095947266
    3. 'input' → logprob: -5.407861709594727
    4. 's' → logprob: -6.282861709594727
    5. ' input' → logprob: -6.532861709594727
    6. 'import' → logprob: -8.157861709594727
    7. '_input' → logprob: -8.407861709594727
    8. 'string' → logprob: -9.032861709594727
    9. 'a' → logprob: -9.157861709594727
    10. '(' → logprob: -9.282861709594727

Token 293: ' chaîne' (ID: 89288)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.6846732497215271
    2. 'input' → logprob: -1.8096733093261719
    3. ' input' → logprob: -2.059673309326172
    4. 's' → logprob: -2.809673309326172
    5. ' chaîne' → logprob: -3.184673309326172
    6. 'chaine' → logprob: -3.309673309326172
    7. ' entrée' → logprob: -3.559673309326172
    8. '   ' → logprob: -3.934673309326172
    9. ' ligne' → logprob: -5.434673309326172
    10. 'ligne' → logprob: -6.059673309326172

Token 294: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8808087110519409
    2. '()' → logprob: -1.505808711051941
    3. 's' → logprob: -1.755808711051941
    4. '   ' → logprob: -2.2558088302612305
    5. '=' → logprob: -2.6308088302612305
    6. '=input' → logprob: -5.2558088302612305
    7. 'input' → logprob: -5.5058088302612305
    8. '_input' → logprob: -6.3808088302612305
    9. 'string' → logprob: -7.2558088302612305
    10. '=s' → logprob: -7.8808088302612305

Token 295: ' caractères' (ID: 183106)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5673242807388306
    2. 'entrée' → logprob: -1.4423242807388306
    3. ' input' → logprob: -1.9423242807388306
    4. 'car' → logprob: -3.067324161529541
    5. ' caractères' → logprob: -6.192324161529541
    6. 'stdin' → logprob: -6.567324161529541
    7. 'l' → logprob: -7.442324161529541
    8. 's' → logprob: -7.567324161529541
    9. ' entrée' → logprob: -7.692324161529541
    10. 'entr' → logprob: -8.3173246383667

Token 296: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07468711584806442
    2. '   ' → logprob: -3.1996870040893555
    3. ' s' → logprob: -3.9496870040893555
    4. 'input' → logprob: -4.5746870040893555
    5. 'n' → logprob: -7.9496870040893555
    6. ' =' → logprob: -8.199687004089355
    7. 'user' → logprob: -8.199687004089355
    8. ' input' → logprob: -8.824687004089355
    9. 'string' → logprob: -9.074687004089355
    10. '(s' → logprob: -9.324687004089355

Token 297: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6332392692565918
    2. 'input' → logprob: -0.8832392692565918
    3. ' l' → logprob: -3.633239269256592
    4. 'l' → logprob: -3.633239269256592
    5. '   ' → logprob: -6.133239269256592
    6. ' la' → logprob: -8.63323974609375
    7. 'la' → logprob: -8.75823974609375
    8. 'stdin' → logprob: -9.50823974609375
    9. '=input' → logprob: -9.50823974609375
    10. ' stdin' → logprob: -10.13323974609375

Token 298: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3436475694179535
    2. 'entrée' → logprob: -1.7186475992202759
    3. 'input' → logprob: -2.2186474800109863
    4. 'stdin' → logprob: -6.468647480010986
    5. 'entr' → logprob: -7.718647480010986
    6. ''' → logprob: -8.218647956848145
    7. 'e' → logprob: -9.218647956848145
    8. 'Entr' → logprob: -9.593647956848145
    9. '’entrée' → logprob: -9.593647956848145
    10. 'a' → logprob: -9.968647956848145

Token 299: ' standard' (ID: 7024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20752322673797607
    2. ' s' → logprob: -2.3325233459472656
    3. '   ' → logprob: -3.2075233459472656
    4. '()' → logprob: -3.8325233459472656
    5. 'input' → logprob: -4.332523345947266
    6. 'user' → logprob: -4.707523345947266
    7. 'string' → logprob: -6.832523345947266
    8. 'import' → logprob: -7.332523345947266
    9. 'n' → logprob: -7.457523345947266
    10. ' input' → logprob: -7.457523345947266

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15167640149593353
    2. 's' → logprob: -2.0266764163970947
    3. ' s' → logprob: -5.026676177978516
    4. 'input' → logprob: -6.401676177978516
    5. 'string' → logprob: -8.026676177978516
    6. ' input' → logprob: -8.901676177978516
    7. 'n' → logprob: -9.276676177978516
    8. '    
' → logprob: -9.401676177978516
    9. 'import' → logprob: -10.526676177978516
    10. ' string' → logprob: -10.901676177978516

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08524294942617416
    2. 's' → logprob: -2.960242986679077
    3. ' s' → logprob: -3.585242986679077
    4. ' input' → logprob: -7.085242748260498
    5. 'input' → logprob: -7.210242748260498
    6. ' string' → logprob: -8.085243225097656
    7. 'string' → logprob: -8.460243225097656
    8. 'import' → logprob: -10.710243225097656
    9. 'n' → logprob: -10.835243225097656
    10. ' line' → logprob: -11.835243225097656

Token 302: ' user' (ID: 1825)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007166427560150623
    2. ' s' → logprob: -5.007166385650635
    3. 'import' → logprob: -8.632166862487793
    4. '   ' → logprob: -9.007166862487793
    5. 'input' → logprob: -9.007166862487793
    6. ' input' → logprob: -11.382166862487793
    7. 'string' → logprob: -12.007166862487793
    8. ' import' → logprob: -12.757166862487793
    9. 'S' → logprob: -13.132166862487793
    10. 'n' → logprob: -13.507166862487793

Token 303: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.006453404668718576
    2. '_' → logprob: -5.631453514099121
    3. '_string' → logprob: -6.131453514099121
    4. '_str' → logprob: -8.131453514099121
    5. ' =' → logprob: -9.006453514099121
    6. '=input' → logprob: -9.256453514099121
    7. 'input' → logprob: -9.756453514099121
    8. '_s' → logprob: -10.256453514099121
    9. '_in' → logprob: -10.631453514099121
    10. 's' → logprob: -10.881453514099121

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859350249171257
    2. '=' → logprob: -3.048593521118164
    3. '   ' → logprob: -12.548593521118164
    4. 's' → logprob: -13.548593521118164
    5. '()' → logprob: -15.173593521118164
    6. '=input' → logprob: -15.173593521118164
    7. ')' → logprob: -15.798593521118164
    8. 'string' → logprob: -16.048593521118164
    9. '_' → logprob: -16.048593521118164
    10. ' ' → logprob: -16.173593521118164

Token 305: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519293427467346
    2. 'input' → logprob: -1.5019292831420898
    3. '=input' → logprob: -15.87692928314209
    4. '	input' → logprob: -16.876930236816406
    5. '(input' → logprob: -17.501930236816406
    6. ',input' → logprob: -19.876930236816406
    7. '入力' → logprob: -20.126930236816406
    8. '.input' → logprob: -20.251930236816406
    9. ' ' → logprob: -20.376930236816406
    10. 'str' → logprob: -20.626930236816406

Token 306: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -12.000020027160645
    3. '().' → logprob: -12.125020027160645
    4. '("")' → logprob: -13.125020027160645
    5. '()>' → logprob: -13.125020027160645
    6. '())' → logprob: -13.375020027160645
    7. ' ()' → logprob: -13.875020027160645
    8. '（）' → logprob: -14.750020027160645
    9. '()`' → logprob: -15.250020027160645
    10. '()
' → logprob: -15.250020027160645

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037292122840881
    2. 'print' → logprob: -0.7037292122840881
    3. 'result' → logprob: -4.703729152679443
    4. ' print' → logprob: -7.203729152679443
    5. '
' → logprob: -8.078729629516602
    6. '    
' → logprob: -8.328729629516602
    7. ' result' → logprob: -9.703729629516602
    8. '	print' → logprob: -10.203729629516602
    9. 'output' → logprob: -10.703729629516602
    10. '  
' → logprob: -11.078729629516602

Token 308: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060086168348789215
    2. '   ' → logprob: -2.935086250305176
    3. ' print' → logprob: -6.060086250305176
    4. 'result' → logprob: -6.060086250305176
    5. '
' → logprob: -7.685086250305176
    6. ' result' → logprob: -10.310086250305176
    7. '    
' → logprob: -11.060086250305176
    8. '  
' → logprob: -12.560086250305176
    9. 'output' → logprob: -12.685086250305176
    10. '	print' → logprob: -12.935086250305176

Token 309: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006715967319905758
    2. 'result' → logprob: -5.006715774536133
    3. ' print' → logprob: -14.881715774536133
    4. 'output' → logprob: -15.131715774536133
    5. 'resultado' → logprob: -17.881715774536133
    6. ' result' → logprob: -18.006715774536133
    7. 'prin' → logprob: -19.006715774536133
    8. 'response' → logprob: -19.131715774536133
    9. 'res' → logprob: -20.131715774536133
    10. '#' → logprob: -20.131715774536133

Token 310: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.380551278591156
    2. 'ly' → logprob: -1.7555513381958008
    3. 'eler' → logprob: -2.755551338195801
    4. 'le' → logprob: -3.255551338195801
    5. '   ' → logprob: -3.630551338195801
    6. 'end' → logprob: -5.255551338195801
    7. 'ley' → logprob: -6.005551338195801
    8. 'elé' → logprob: -6.505551338195801
    9. 'ely' → logprob: -6.755551338195801
    10. 'l' → logprob: -7.130551338195801

Token 311: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10510466247797012
    2. 'check' → logprob: -2.355104684829712
    3. '   ' → logprob: -5.730104446411133
    4. ' print' → logprob: -7.605104446411133
    5. ' check' → logprob: -7.605104446411133
    6. '(check' → logprob: -7.730104446411133
    7. '(print' → logprob: -9.230104446411133
    8. 'result' → logprob: -9.355104446411133
    9. '_check' → logprob: -12.105104446411133
    10. 'def' → logprob: -12.230104446411133

Token 312: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005276807118207216
    2. 'check' → logprob: -5.505276679992676
    3. 'result' → logprob: -6.755276679992676
    4. ' print' → logprob: -10.505276679992676
    5. ' check' → logprob: -12.630276679992676
    6. 'def' → logprob: -13.505276679992676
    7. '```' → logprob: -15.005276679992676
    8. 'answer' → logprob: -15.880276679992676
    9. ' result' → logprob: -16.255277633666992
    10. 'response' → logprob: -16.880277633666992

Token 313: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24790675938129425
    2. 'print' → logprob: -1.6229068040847778
    3. '   ' → logprob: -4.622906684875488
    4. ' result' → logprob: -5.122906684875488
    5. '_result' → logprob: -6.247906684875488
    6. ' print' → logprob: -6.372906684875488
    7. 'def' → logprob: -6.872906684875488
    8. 'check' → logprob: -6.872906684875488
    9. 'resultado' → logprob: -8.872906684875488
    10. 'output' → logprob: -8.997906684875488

Token 314: ' vér' (ID: 42524)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.14176486432552338
    2. 'print' → logprob: -2.1417648792266846
    3. ' check' → logprob: -4.3917646408081055
    4. 'result' → logprob: -6.2667646408081055
    5. 'verification' → logprob: -8.766764640808105
    6. ' print' → logprob: -9.141764640808105
    7. 'v' → logprob: -10.016764640808105
    8. 'validation' → logprob: -10.641764640808105
    9. 'rés' → logprob: -10.766764640808105
    10. 'test' → logprob: -11.141764640808105

Token 315: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.054221585392951965
    2. 'if' → logprob: -3.0542216300964355
    3. 'ifie' → logprob: -5.3042216300964355
    4. 'ifi' → logprob: -8.429221153259277
    5. 'ificate' → logprob: -8.804221153259277
    6. 'ific' → logprob: -9.054221153259277
    7. 'ife' → logprob: -9.429221153259277
    8. 'ifica' → logprob: -10.929221153259277
    9. 'i' → logprob: -11.179221153259277
    10. 'ifice' → logprob: -11.304221153259277

Token 316: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.581264317035675
    2. 'print' → logprob: -1.0812642574310303
    3. 'result' → logprob: -2.5812642574310303
    4. ' print' → logprob: -4.081264495849609
    5. ' result' → logprob: -4.706264495849609
    6. '	print' → logprob: -11.20626449584961
    7. 'resultado' → logprob: -12.08126449584961
    8. '	result' → logprob: -12.58126449584961
    9. 'output' → logprob: -12.58126449584961
    10. ' resultat' → logprob: -13.08126449584961

Token 317: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.062104482203722
    2. 'print' → logprob: -2.8121044635772705
    3. '   ' → logprob: -8.937104225158691
    4. ' result' → logprob: -13.437104225158691
    5. ' prin' → logprob: -13.937104225158691
    6. ' imprime' → logprob: -14.187104225158691
    7. ' prints' → logprob: -14.437104225158691
    8. 'result' → logprob: -14.562104225158691
    9. '	print' → logprob: -15.062104225158691
    10. '_print' → logprob: -15.187104225158691

Token 318: ' le' (ID: 505)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.062191300094127655
    2. '(' → logprob: -2.8121912479400635
    3. '(
' → logprob: -8.812191009521484
    4. '(result' → logprob: -9.937191009521484
    5. '()' → logprob: -11.187191009521484
    6. 'check' → logprob: -12.937191009521484
    7. '(print' → logprob: -13.062191009521484
    8. ' check' → logprob: -13.312191009521484
    9. '(

' → logprob: -13.437191009521484
    10. ' (' → logprob: -13.562191009521484

Token 319: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0028677580412477255
    2. 'check' → logprob: -6.002867698669434
    3. 'rés' → logprob: -8.752867698669434
    4. ' résultat' → logprob: -8.877867698669434
    5. '(check' → logprob: -10.627867698669434
    6. ' resultat' → logprob: -10.752867698669434
    7. ' result' → logprob: -11.002867698669434
    8. 'resultado' → logprob: -11.127867698669434
    9. '(result' → logprob: -11.502867698669434
    10. ' check' → logprob: -13.252867698669434

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25214794278144836
    2. 'print' → logprob: -1.502147912979126
    3. ' print' → logprob: -8.627147674560547
    4. '    
' → logprob: -11.127147674560547
    5. '
' → logprob: -11.377147674560547
    6. 'result' → logprob: -11.877147674560547
    7. '```' → logprob: -12.877147674560547
    8. '	print' → logprob: -13.002147674560547
    9. '(print' → logprob: -14.377147674560547
    10. '  
' → logprob: -14.377147674560547

Token 321: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47435861825942993
    2. '   ' → logprob: -0.9743586182594299
    3. ' print' → logprob: -8.224358558654785
    4. '```' → logprob: -11.349358558654785
    5. 'result' → logprob: -13.849358558654785
    6. '	print' → logprob: -14.224358558654785
    7. '    
' → logprob: -16.5993595123291
    8. '
' → logprob: -17.2243595123291
    9. '(print' → logprob: -17.4743595123291
    10. '.print' → logprob: -17.7243595123291

Token 322: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. 'pr' → logprob: -19.5
    5. 'result' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. 'prin' → logprob: -20.625
    8. 'prit' → logprob: -24.0
    9. '`' → logprob: -24.25
    10. '    
' → logprob: -24.375

Token 323: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.00012368128227535635
    2. '(' → logprob: -9.000123977661133
    3. 'check' → logprob: -15.750123977661133
    4. '(
' → logprob: -18.375123977661133
    5. '(print' → logprob: -18.500123977661133
    6. '(Check' → logprob: -18.500123977661133
    7. '(call' → logprob: -19.375123977661133
    8. '()' → logprob: -19.875123977661133
    9. ' check' → logprob: -19.875123977661133
    10. ' (' → logprob: -19.875123977661133

Token 324: '_ac' (ID: 41419)
  Prédit: '_ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ac' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.625004768371582
    3. '_AC' → logprob: -13.625004768371582
    4. '_a' → logprob: -15.625004768371582
    5. '_acl' → logprob: -16.1250057220459
    6. '_act' → logprob: -16.7500057220459
    7. '_user' → logprob: -17.2500057220459
    8. '_acc' → logprob: -17.3750057220459
    9. '_oc' → logprob: -17.5000057220459
    10. '_uc' → logprob: -17.7500057220459

Token 325: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0003969455719925463
    2. '_ac' → logprob: -8.000396728515625
    3. '_strings' → logprob: -10.625396728515625
    4. '_str' → logprob: -10.875396728515625
    5. 'string' → logprob: -11.125396728515625
    6. '_s' → logprob: -13.250396728515625
    7. '_' → logprob: -14.375396728515625
    8. 's' → logprob: -14.750396728515625
    9. '_user' → logprob: -15.000396728515625
    10. 'String' → logprob: -16.375396728515625

Token 326: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.000017166137695
    3. '(us' → logprob: -15.375017166137695
    4. 'user' → logprob: -15.750017166137695
    5. '(s' → logprob: -15.875017166137695
    6. '(use' → logprob: -16.500017166137695
    7. ',user' → logprob: -16.625017166137695
    8. ')' → logprob: -16.625017166137695
    9. '(u' → logprob: -17.250017166137695
    10. ' (' → logprob: -17.625017166137695

Token 327: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00556848244741559
    2. 'put' → logprob: -5.255568504333496
    3. 'input' → logprob: -8.130568504333496
    4. '_put' → logprob: -10.880568504333496
    5. 'puts' → logprob: -12.130568504333496
    6. 'ut' → logprob: -12.255568504333496
    7. '_' → logprob: -12.255568504333496
    8. 't' → logprob: -12.755568504333496
    9. '_user' → logprob: -14.005568504333496
    10. 'Input' → logprob: -14.505568504333496

Token 328: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8132642507553101
    2. '))' → logprob: -1.06326425075531
    3. '())' → logprob: -1.56326425075531
    4. '()))' → logprob: -6.6882643699646
    5. '(' → logprob: -8.188263893127441
    6. '(s' → logprob: -9.063263893127441
    7. '(user' → logprob: -9.313263893127441
    8. '()' → logprob: -9.688263893127441
    9. ')))' → logprob: -11.438263893127441
    10. ' ())' → logprob: -12.813263893127441


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 234
Précision stricte (1ère position): 38.04%
Précision adaptée (1ère position): 39.26%
Précision (top 10): 71.78%
================================================================================
