================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = input().split()
cnt = 0
for i in range(N):
    a = int(A[i])
    if a % 2 == 0:
        if a % 3 == 0:
            cnt = cnt + 1
        elif a % 5 == 0:
            cnt = cnt + 1
    else:
        cnt = cnt + 1
if cnt == N:
    print("APPROVED")
else:
    print("DENIED")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7973122596740723
    2. 'if' → logprob: -1.7973122596740723
    3. '\n' → logprob: -2.1723122596740723
    4. '`' → logprob: -3.1723122596740723
    5. 'x' → logprob: -3.6723122596740723
    6. '```' → logprob: -3.6723122596740723
    7. 's' → logprob: -3.7973122596740723
    8. 'a' → logprob: -3.9223122596740723
    9. '\' → logprob: -4.047312259674072
    10. ')' → logprob: -4.297312259674072

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011585581814870238
    2. '.' → logprob: -8.001158714294434
    3. '[]' → logprob: -8.501158714294434
    4. '\[' → logprob: -8.626158714294434
    5. '+' → logprob: -9.376158714294434
    6. '=' → logprob: -9.626158714294434
    7. '[:]' → logprob: -9.626158714294434
    8. '[A' → logprob: -9.751158714294434
    9. '[i' → logprob: -10.001158714294434
    10. ')' → logprob: -11.001158714294434

Token 7: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5184847712516785
    2. 'list' → logprob: -1.5184848308563232
    3. ' []' → logprob: -2.2684848308563232
    4. '[]' → logprob: -2.8934848308563232
    5. ' [' → logprob: -3.8934848308563232
    6. '[' → logprob: -5.518484592437744
    7. '[input' → logprob: -7.018484592437744
    8. '[list' → logprob: -7.518484592437744
    9. '[int' → logprob: -7.643484592437744
    10. 'input' → logprob: -8.643485069274902

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015775939682498574
    2. ''' → logprob: -7.376577377319336
    3. '('' → logprob: -8.126577377319336
    4. '(
' → logprob: -9.001577377319336
    5. '"' → logprob: -9.126577377319336
    6. '()' → logprob: -9.126577377319336
    7. ')' → logprob: -9.626577377319336
    8. '```' → logprob: -9.751577377319336
    9. '`' → logprob: -9.876577377319336
    10. '("("' → logprob: -10.251577377319336

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000343210413120687
    2. 'strip' → logprob: -8.000343322753906
    3. ' split' → logprob: -12.625343322753906
    4. 'rstrip' → logprob: -13.000343322753906
    5. 'spl' → logprob: -13.500343322753906
    6. 's' → logprob: -15.125343322753906
    7. 'replace' → logprob: -15.250343322753906
    8. 'rs' → logprob: -15.875343322753906
    9. 'sp' → logprob: -16.750343322753906
    10. '(split' → logprob: -17.000343322753906

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015952255576848984
    2. '()' → logprob: -4.640952110290527
    3. '('' → logprob: -5.640952110290527
    4. '("("' → logprob: -6.265952110290527
    5. '(
' → logprob: -7.890952110290527
    6. '(

' → logprob: -9.015952110290527
    7. ' (' → logprob: -9.765952110290527
    8. '(`' → logprob: -10.265952110290527
    9. '"' → logprob: -10.640952110290527
    10. '("' → logprob: -10.765952110290527

Token 11: 'cnt' (ID: 33160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4644922912120819
    2. 'for' → logprob: -1.2144923210144043
    3. 'a' → logprob: -3.2144923210144043
    4. 'B' → logprob: -4.089492321014404
    5. 'result' → logprob: -5.214492321014404
    6. 'ans' → logprob: -5.964492321014404
    7. 'print' → logprob: -6.339492321014404
    8. '[' → logprob: -6.839492321014404
    9. ' for' → logprob: -6.964492321014404
    10. 'count' → logprob: -6.964492321014404

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027397338300943375
    2. '_' → logprob: -3.652397394180298
    3. '=' → logprob: -7.652397155761719
    4. '(' → logprob: -7.652397155761719
    5. '\[' → logprob: -9.777397155761719
    6. 's' → logprob: -10.277397155761719
    7. '[]' → logprob: -12.027397155761719
    8. '['' → logprob: -12.527397155761719
    9. ' =' → logprob: -12.652397155761719
    10. 'A' → logprob: -12.652397155761719

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02405719831585884
    2. '{}' → logprob: -4.149057388305664
    3. ' ' → logprob: -5.399057388305664
    4. '{' → logprob: -5.774057388305664
    5. ' {}' → logprob: -8.649057388305664
    6. '[' → logprob: -9.149057388305664
    7. 'len' → logprob: -10.149057388305664
    8. ' {' → logprob: -11.149057388305664
    9. ' [' → logprob: -12.274057388305664
    10. '1' → logprob: -12.524057388305664

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5980796813964844
    2. '{}' → logprob: -0.8480796813964844
    3. '{' → logprob: -3.9730796813964844
    4. '[' → logprob: -5.848079681396484
    5. 'dict' → logprob: -9.848079681396484
    6. 'len' → logprob: -9.973079681396484
    7. '[]' → logprob: -10.848079681396484
    8. ' {}' → logprob: -10.848079681396484
    9. 'default' → logprob: -11.473079681396484
    10. ' ' → logprob: -11.473079681396484

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08551624417304993
    2. ' for' → logprob: -3.3355162143707275
    3. '\n' → logprob: -3.7105162143707275
    4. '
' → logprob: -3.9605162143707275
    5. ' 
' → logprob: -6.835516452789307
    6. '\' → logprob: -6.835516452789307
    7. '' → logprob: -8.335515975952148
    8. '```' → logprob: -8.710515975952148
    9. '<|end|>' → logprob: -9.835515975952148
    10. '  
' → logprob: -9.835515975952148

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.741137283621356e-05
    2. ' for' → logprob: -10.375057220458984
    3. '\n' → logprob: -10.875057220458984
    4. '```' → logprob: -12.125057220458984
    5. '
' → logprob: -13.625057220458984
    6. '\' → logprob: -15.500057220458984
    7. '`' → logprob: -16.250057220458984
    8. 'For' → logprob: -16.250057220458984
    9. '``' → logprob: -16.250057220458984
    10. '' → logprob: -16.750057220458984

Token 17: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5394952893257141
    2. ' i' → logprob: -0.9144952893257141
    3. '  ' → logprob: -4.164495468139648
    4. 'i' → logprob: -8.914495468139648
    5. ' x' → logprob: -9.289495468139648
    6. '_' → logprob: -9.414495468139648
    7. ' ‌' → logprob: -9.539495468139648
    8. ' token' → logprob: -10.039495468139648
    9. ' _' → logprob: -10.164495468139648
    10. ' A' → logprob: -10.539495468139648

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1065886840224266
    2. 'in' → logprob: -2.35658860206604
    3. ' ' → logprob: -5.231588840484619
    4. '  ' → logprob: -7.481588840484619
    5. 'n' → logprob: -9.356588363647461
    6. '+' → logprob: -9.981588363647461
    7. '[' → logprob: -10.106588363647461
    8. '_' → logprob: -10.106588363647461
    9. ' n' → logprob: -10.356588363647461
    10. '<|end|>' → logprob: -10.356588363647461

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16040346026420593
    2. 'range' → logprob: -1.9104034900665283
    3. ' A' → logprob: -8.91040325164795
    4. 'A' → logprob: -10.53540325164795
    5. '(range' → logprob: -11.78540325164795
    6. '	range' → logprob: -12.66040325164795
    7. ')' → logprob: -13.16040325164795
    8. ' ' → logprob: -13.41040325164795
    9. ' xrange' → logprob: -13.41040325164795
    10. '_range' → logprob: -14.03540325164795

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018595628440380096
    2. '(N' → logprob: -4.0185956954956055
    3. '(len' → logprob: -8.268595695495605
    4. ' (' → logprob: -9.143595695495605
    5. '(n' → logprob: -9.643595695495605
    6. '(
' → logprob: -12.393595695495605
    7. ' ' → logprob: -12.768595695495605
    8. '(i' → logprob: -13.143595695495605
    9. '((' → logprob: -13.768595695495605
    10. '(A' → logprob: -13.893595695495605

Token 21: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13025185465812683
    2. '):' → logprob: -2.130251884460449
    3. ' )' → logprob: -6.130251884460449
    4. '+' → logprob: -7.255251884460449
    5. ' ):' → logprob: -8.25525188446045
    6. ':' → logprob: -9.88025188446045
    7. '-' → logprob: -10.50525188446045
    8. '):
' → logprob: -10.88025188446045
    9. '[' → logprob: -11.13025188446045
    10. ' ' → logprob: -11.75525188446045

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8692574501037598
    2. '   ' → logprob: -1.1192574501037598
    3. '    ' → logprob: -1.6192574501037598
    4. ' if' → logprob: -3.2442574501037598
    5. 'if' → logprob: -5.61925745010376
    6. ' A' → logprob: -5.74425745010376
    7. '    
' → logprob: -6.49425745010376
    8. '<|end|>' → logprob: -6.49425745010376
    9. ' 
' → logprob: -6.86925745010376
    10. '```' → logprob: -6.86925745010376

Token 23: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6085056662559509
    2. 'if' → logprob: -1.6085057258605957
    3. ' for' → logprob: -2.1085057258605957
    4. 'for' → logprob: -2.6085057258605957
    5. '   ' → logprob: -2.9835057258605957
    6. ' cnt' → logprob: -5.608505725860596
    7. ' A' → logprob: -6.233505725860596
    8. 'cnt' → logprob: -6.733505725860596
    9. 'A' → logprob: -6.858505725860596
    10. ' ' → logprob: -7.108505725860596

Token 24: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5870092511177063
    2. '[' → logprob: -0.8370092511177063
    3. '[a' → logprob: -4.837009429931641
    4. '[A' → logprob: -6.212009429931641
    5. '\[' → logprob: -7.962009429931641
    6. ' [' → logprob: -8.96200942993164
    7. 's' → logprob: -9.33700942993164
    8. '   ' → logprob: -9.46200942993164
    9. '[cnt' → logprob: -9.58700942993164
    10. '[]' → logprob: -9.71200942993164

Token 25: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25535595417022705
    2. ' int' → logprob: -1.505355954170227
    3. 'A' → logprob: -6.1303558349609375
    4. ' A' → logprob: -6.8803558349609375
    5. 'a' → logprob: -9.505355834960938
    6. 'len' → logprob: -10.255355834960938
    7. 'i' → logprob: -10.505355834960938
    8. ' i' → logprob: -10.880355834960938
    9. ' ' → logprob: -11.130355834960938
    10. ' a' → logprob: -11.130355834960938

Token 26: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16039837896823883
    2. '(' → logprob: -1.9103983640670776
    3. ' (' → logprob: -9.285398483276367
    4. '(a' → logprob: -10.160398483276367
    5. 'A' → logprob: -11.160398483276367
    6. '(
' → logprob: -11.910398483276367
    7. ')' → logprob: -11.910398483276367
    8. ' ' → logprob: -12.160398483276367
    9. '(`' → logprob: -12.785398483276367
    10. '(

' → logprob: -13.410398483276367

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016074994346126914
    2. '[' → logprob: -8.750161170959473
    3. '[a' → logprob: -14.000161170959473
    4. ')' → logprob: -14.250161170959473
    5. '[I' → logprob: -15.125161170959473
    6. ' [' → logprob: -15.625161170959473
    7. 'i' → logprob: -16.375160217285156
    8. '```' → logprob: -16.625160217285156
    9. '\[' → logprob: -16.750160217285156
    10. '[
' → logprob: -16.875160217285156

Token 28: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020424623042345047
    2. ')' → logprob: -4.020424842834473
    3. '))' → logprob: -6.270424842834473
    4. ']' → logprob: -9.145424842834473
    5. ')])' → logprob: -9.270424842834473
    6. '])
' → logprob: -9.520424842834473
    7. ']))' → logprob: -10.020424842834473
    8. ')]' → logprob: -10.645424842834473
    9. ''])' → logprob: -11.020424842834473
    10. ')
' → logprob: -12.145424842834473

Token 29: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7407866716384888
    2. 'for' → logprob: -0.9907866716384888
    3. ' if' → logprob: -2.740786552429199
    4. '   ' → logprob: -3.240786552429199
    5. 'if' (adapté à ' if') → logprob: -3.240786552429199
    6. '    ' → logprob: -4.990786552429199
    7. ')' → logprob: -6.990786552429199
    8. ' ' → logprob: -7.365786552429199
    9. '```' → logprob: -8.8657865524292
    10. '       ' → logprob: -9.2407865524292

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.00718666473403573
    2. 'a' → logprob: -5.0071868896484375
    3. ' ' → logprob: -7.7571868896484375
    4. ' (' → logprob: -10.882186889648438
    5. '0' → logprob: -12.132186889648438
    6. '(a' → logprob: -12.257186889648438
    7. ' ' → logprob: -12.257186889648438
    8. '(' → logprob: -13.632186889648438
    9. ' i' → logprob: -13.632186889648438
    10. ' abs' → logprob: -14.007186889648438

Token 32: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8916239142417908
    2. '>' → logprob: -1.2666239738464355
    3. '%' → logprob: -1.7666239738464355
    4. ' %' → logprob: -2.5166239738464355
    5. ' ==' → logprob: -4.1416239738464355
    6. '==' → logprob: -4.3916239738464355
    7. ' ' → logprob: -4.5166239738464355
    8. ' <' → logprob: -5.0166239738464355
    9. ' >=' → logprob: -5.1416239738464355
    10. '<' → logprob: -6.1416239738464355

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30796802043914795
    2. ' ' → logprob: -1.557968020439148
    3. '3' → logprob: -2.9329681396484375
    4. '4' → logprob: -8.057968139648438
    5. '5' → logprob: -8.307968139648438
    6. '10' → logprob: -8.432968139648438
    7. '7' → logprob: -8.807968139648438
    8. '19' → logprob: -9.557968139648438
    9. '6' → logprob: -9.807968139648438
    10. '1' → logprob: -10.557968139648438

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007341104093939066
    2. '3' → logprob: -5.132340908050537
    3. ' ' → logprob: -7.007340908050537
    4. '10' → logprob: -8.507341384887695
    5. '6' → logprob: -9.507341384887695
    6. '5' → logprob: -9.757341384887695
    7. '4' → logprob: -9.882341384887695
    8. '19' → logprob: -10.007341384887695
    9. '7' → logprob: -11.257341384887695
    10. '200' → logprob: -11.757341384887695

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10248543322086334
    2. '==' → logprob: -2.352485418319702
    3. ' !=' → logprob: -6.352485656738281
    4. '!=' → logprob: -8.477485656738281
    5. ' ' → logprob: -8.852485656738281
    6. '=' → logprob: -9.102485656738281
    7. ' =' → logprob: -10.477485656738281
    8. '0' → logprob: -10.727485656738281
    9. '1' → logprob: -12.477485656738281
    10. ')' → logprob: -12.602485656738281

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2534312903881073
    2. '0' → logprob: -1.5034313201904297
    3. '1' → logprob: -6.50343132019043
    4. '2' → logprob: -14.81593132019043
    5. '<|end|>' → logprob: -15.12843132019043
    6. ' ' → logprob: -15.37843132019043
    7. '```' → logprob: -15.50343132019043
    8. ')' → logprob: -15.56593132019043
    9. ''' → logprob: -15.81593132019043
    10. ' ==' → logprob: -15.87843132019043

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01771518960595131
    2. '1' → logprob: -4.267714977264404
    3. ' ' → logprob: -5.642714977264404
    4. '2' → logprob: -14.330215454101562
    5. '```' → logprob: -14.955215454101562
    6. '3' → logprob: -16.455215454101562
    7. '4' → logprob: -16.517715454101562
    8. '  ' → logprob: -16.830215454101562
    9. ':' → logprob: -16.830215454101562
    10. '5' → logprob: -16.830215454101562

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001860174525063485
    2. ' and' → logprob: -9.3751859664917
    3. ' :' → logprob: -10.1251859664917
    4. ':
' → logprob: -10.1251859664917
    5. '):' → logprob: -12.1251859664917
    6. 'and' → logprob: -12.2501859664917
    7. '       ' → logprob: -12.5001859664917
    8. ' or' → logprob: -13.0001859664917
    9. '   ' → logprob: -13.6251859664917
    10. ':**' → logprob: -13.6251859664917

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007709430996328592
    2. ' cnt' → logprob: -5.757709503173828
    3. ' ' → logprob: -6.507709503173828
    4. '   ' → logprob: -6.882709503173828
    5. '    ' → logprob: -7.257709503173828
    6. ' ' → logprob: -8.007709503173828
    7. ' continue' → logprob: -8.257709503173828
    8. 'cnt' → logprob: -8.882709503173828
    9. '<|end|>' → logprob: -9.007709503173828
    10. '	cnt' → logprob: -9.757709503173828

Token 40: ' if' (ID: 538)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.4142972528934479
    2. 'cnt' → logprob: -1.2892972230911255
    3. ' continue' → logprob: -3.789297342300415
    4. '   ' → logprob: -4.164297103881836
    5. 'continue' → logprob: -4.414297103881836
    6. '       ' → logprob: -4.539297103881836
    7. '	cnt' → logprob: -6.789297103881836
    8. '    ' → logprob: -7.789297103881836
    9. ' ' → logprob: -7.789297103881836
    10. '```' → logprob: -8.914297103881836

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.037485092878341675
    2. 'a' → logprob: -3.412485122680664
    3. ' cnt' → logprob: -6.037485122680664
    4. ' ' → logprob: -7.662485122680664
    5. ' i' → logprob: -7.912485122680664
    6. 'cnt' → logprob: -8.162485122680664
    7. ' (' → logprob: -9.287485122680664
    8. '(a' → logprob: -9.662485122680664
    9. ' not' → logprob: -10.787485122680664
    10. 'i' → logprob: -10.787485122680664

Token 42: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5487645268440247
    2. ' >' → logprob: -1.5487644672393799
    3. ' ' → logprob: -2.29876446723938
    4. ' ==' → logprob: -2.79876446723938
    5. '%' → logprob: -3.79876446723938
    6. ' !=' → logprob: -4.673764705657959
    7. '==' → logprob: -5.298764705657959
    8. ' >=' → logprob: -5.423764705657959
    9. '>' → logprob: -5.548764705657959
    10. '   ' → logprob: -6.923764705657959

Token 43: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15503212809562683
    2. ' ' → logprob: -2.530032157897949
    3. '4' → logprob: -2.780032157897949
    4. '2' → logprob: -7.155032157897949
    5. '6' → logprob: -7.905032157897949
    6. '5' → logprob: -8.15503215789795
    7. '  ' → logprob: -9.28003215789795
    8. '10' → logprob: -9.40503215789795
    9. '   ' → logprob: -9.40503215789795
    10. '```' → logprob: -9.90503215789795

Token 44: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012543961638584733
    2. ' ' → logprob: -7.376254558563232
    3. '4' → logprob: -8.251254081726074
    4. '6' → logprob: -9.126254081726074
    5. '   ' → logprob: -9.501254081726074
    6. '  ' → logprob: -9.751254081726074
    7. '``' → logprob: -10.751254081726074
    8. '```' → logprob: -10.751254081726074
    9. '    ' → logprob: -11.438754081726074
    10. '2' → logprob: -11.751254081726074

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02807331643998623
    2. '==' → logprob: -4.028073310852051
    3. ' !=' → logprob: -4.653073310852051
    4. ' ' → logprob: -8.52807331085205
    5. '!=' → logprob: -9.52807331085205
    6. ' and' → logprob: -11.15307331085205
    7. ' or' → logprob: -11.27807331085205
    8. '=' → logprob: -11.40307331085205
    9. ' ' → logprob: -11.77807331085205
    10. ' =' → logprob: -11.90307331085205

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07008525729179382
    2. '0' → logprob: -2.695085287094116
    3. '=' → logprob: -9.195085525512695
    4. '1' → logprob: -11.195085525512695
    5. '```' → logprob: -12.070085525512695
    6. ' =' → logprob: -12.382585525512695
    7. '==' → logprob: -12.445085525512695
    8. ' ' → logprob: -12.820085525512695
    9. ' or' → logprob: -12.882585525512695
    10. '2' → logprob: -13.195085525512695

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07019840180873871
    2. ' ' → logprob: -2.6951982975006104
    3. '1' → logprob: -8.820198059082031
    4. '2' → logprob: -10.257698059082031
    5. '```' → logprob: -10.945198059082031
    6. '3' → logprob: -11.007698059082031
    7. ' or' → logprob: -11.507698059082031
    8. '6' → logprob: -11.507698059082031
    9. '=' → logprob: -12.382698059082031
    10. ' and' → logprob: -13.445198059082031

Token 48: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.325630784034729
    2. ' and' → logprob: -1.575630784034729
    3. ':' → logprob: -2.8256306648254395
    4. '           ' → logprob: -4.5756306648254395
    5. 'and' → logprob: -7.4506306648254395
    6. 'or' → logprob: -7.8256306648254395
    7. '       ' → logprob: -8.325631141662598
    8. '          ' → logprob: -9.575631141662598
    9. ' ' → logprob: -10.450631141662598
    10. '        ' → logprob: -10.950631141662598

Token 49: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006638048216700554
    2. '       ' → logprob: -5.881638050079346
    3. '	       ' → logprob: -6.256638050079346
    4. '		' → logprob: -8.381637573242188
    5. '        ' → logprob: -8.381637573242188
    6. '               ' → logprob: -8.506637573242188
    7. ' ' → logprob: -8.631637573242188
    8. ' or' → logprob: -8.881637573242188
    9. '          ' → logprob: -9.006637573242188
    10. '         ' → logprob: -9.381637573242188

Token 50: ' cnt' (ID: 27340)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5821582674980164
    2. 'cnt' (adapté à ' cnt') → logprob: -1.3321583271026611
    3. ' cnt' → logprob: -2.582158327102661
    4. '           ' → logprob: -2.582158327102661
    5. 'continue' → logprob: -4.582158088684082
    6. ' ' → logprob: -5.082158088684082
    7. ' continue' → logprob: -5.832158088684082
    8. '             ' → logprob: -6.707158088684082
    9. '	cnt' → logprob: -6.707158088684082
    10. ' ' → logprob: -7.332158088684082

Token 51: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16149675846099854
    2. '+=' → logprob: -1.9114967584609985
    3. '+' → logprob: -6.786496639251709
    4. ' ' → logprob: -9.661497116088867
    5. '=' → logprob: -10.036497116088867
    6. ' +' → logprob: -11.036497116088867
    7. ' =' → logprob: -12.536497116088867
    8. '   ' → logprob: -12.786497116088867
    9. '    ' → logprob: -13.036497116088867
    10. ')' → logprob: -13.411497116088867

Token 52: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.13881269097328186
    2. ' cnt' → logprob: -2.263812780380249
    3. '0' → logprob: -4.13881254196167
    4. '1' → logprob: -5.26381254196167
    5. '+' → logprob: -5.88881254196167
    6. ' ' → logprob: -7.88881254196167
    7. '(cnt' → logprob: -8.013813018798828
    8. '2' → logprob: -8.138813018798828
    9. '	cnt' → logprob: -8.138813018798828
    10. '3' → logprob: -9.388813018798828

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001727656926959753
    2. ' +' → logprob: -6.37672758102417
    3. '+
' → logprob: -11.376728057861328
    4. '<|end|>' → logprob: -12.001728057861328
    5. '＋' → logprob: -13.251728057861328
    6. ' ' → logprob: -13.876728057861328
    7. '1' → logprob: -14.251728057861328
    8. '+++' → logprob: -14.626728057861328
    9. '-' → logprob: -14.876728057861328
    10. ')' → logprob: -15.126728057861328

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04348084330558777
    2. ' ' → logprob: -3.16848087310791
    3. '2' → logprob: -7.79348087310791
    4. 'a' → logprob: -10.54348087310791
    5. '3' → logprob: -10.79348087310791
    6. ' a' → logprob: -11.29348087310791
    7. '10' → logprob: -12.54348087310791
    8. '4' → logprob: -13.29348087310791
    9. '   ' → logprob: -14.04348087310791
    10. '0' → logprob: -14.41848087310791

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008093867218121886
    2. '2' → logprob: -7.750809192657471
    3. 'a' → logprob: -8.750809669494629
    4. '3' → logprob: -8.875809669494629
    5. '10' → logprob: -10.250809669494629
    6. ' ' → logprob: -10.875809669494629
    7. '5' → logprob: -11.750809669494629
    8. '100' → logprob: -12.000809669494629
    9. '4' → logprob: -12.500809669494629
    10. '7' → logprob: -12.875809669494629

Token 56: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.611007034778595
    2. '<|end|>' → logprob: -1.2360069751739502
    3. '\n' → logprob: -2.11100697517395
    4. '
' → logprob: -3.48600697517395
    5. '```' → logprob: -5.236007213592529
    6. ')' → logprob: -6.486007213592529
    7. '<|end|>' → logprob: -6.611007213592529
    8. 'newline' → logprob: -6.611007213592529
    9. ' ' → logprob: -6.736007213592529
    10. '\' → logprob: -7.361007213592529

Token 57: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10053282976150513
    2. 'a' → logprob: -2.3505327701568604
    3. ' ' → logprob: -8.225532531738281
    4. '0' → logprob: -11.600532531738281
    5. '7' → logprob: -11.850532531738281
    6. '    ' → logprob: -12.350532531738281
    7. '1' → logprob: -12.475532531738281
    8. '   ' → logprob: -12.475532531738281
    9. ' ' → logprob: -12.600532531738281
    10. '6' → logprob: -12.663032531738281

Token 60: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04879799112677574
    2. '%' → logprob: -3.048798084259033
    3. ' ' → logprob: -8.798797607421875
    4. ' ==' → logprob: -10.798797607421875
    5. '==' → logprob: -11.048797607421875
    6. ' >' → logprob: -12.548797607421875
    7. '2' → logprob: -12.673797607421875
    8. '>' → logprob: -12.923797607421875
    9. ' ' → logprob: -13.236297607421875
    10. '7' → logprob: -13.611297607421875

Token 61: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.023517990484833717
    2. ' ' → logprob: -3.7735180854797363
    3. '  ' → logprob: -9.648517608642578
    4. '4' → logprob: -9.773517608642578
    5. '7' → logprob: -10.398517608642578
    6. '   ' → logprob: -10.398517608642578
    7. '2' → logprob: -11.148517608642578
    8. '9' → logprob: -11.273517608642578
    9. '59' → logprob: -11.273517608642578
    10. '５' → logprob: -11.398517608642578

Token 62: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.029905186966061592
    2. '4' → logprob: -3.529905080795288
    3. '7' → logprob: -9.529905319213867
    4. ' ' → logprob: -11.279905319213867
    5. '   ' → logprob: -11.404905319213867
    6. '9' → logprob: -11.404905319213867
    7. '6' → logprob: -11.779905319213867
    8. '2' → logprob: -12.154905319213867
    9. '1' → logprob: -12.279905319213867
    10. '``' → logprob: -12.529905319213867

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193271040916443
    2. '==' → logprob: -1.5019327402114868
    3. ' ' → logprob: -13.376933097839355
    4. '=' → logprob: -15.001933097839355
    5. ')==' → logprob: -15.001933097839355
    6. '===' → logprob: -15.126933097839355
    7. ']==' → logprob: -15.501933097839355
    8. '()==' → logprob: -15.751933097839355
    9. '```' → logprob: -16.12693214416504
    10. '       ' → logprob: -16.50193214416504

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231373906135559
    2. ' ' → logprob: -0.8981373906135559
    3. '=' → logprob: -12.648137092590332
    4. '==' → logprob: -12.898137092590332
    5. '   ' → logprob: -13.085637092590332
    6. ' ' → logprob: -13.523137092590332
    7. '  ' → logprob: -13.960637092590332
    8. '```' → logprob: -14.023137092590332
    9. '1' → logprob: -14.710637092590332
    10. '2' → logprob: -14.773137092590332

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003205161774531007
    2. ' ' → logprob: -5.753205299377441
    3. '```' → logprob: -12.065705299377441
    4. '   ' → logprob: -12.378205299377441
    5. '           ' → logprob: -13.440705299377441
    6. '==' → logprob: -13.440705299377441
    7. '1' → logprob: -13.628205299377441
    8. '=' → logprob: -13.753205299377441
    9. '                           ' → logprob: -13.815705299377441
    10. '       ' → logprob: -13.878205299377441

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009502872708253562
    2. ':
' → logprob: -7.250950336456299
    3. '           ' → logprob: -8.37594985961914
    4. '       ' → logprob: -12.25094985961914
    5. ' :' → logprob: -13.75094985961914
    6. '<|end|>' → logprob: -13.87594985961914
    7. ' and' → logprob: -14.12594985961914
    8. '):' → logprob: -14.37594985961914
    9. '               ' → logprob: -15.25094985961914
    10. '   ' → logprob: -15.50094985961914

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018364854156970978
    2. 'cnt' → logprob: -4.143364906311035
    3. ' cnt' → logprob: -6.643364906311035
    4. '               ' → logprob: -7.268364906311035
    5. '       ' → logprob: -8.518364906311035
    6. 'continue' → logprob: -10.643364906311035
    7. '	cnt' → logprob: -10.768364906311035
    8. '	       ' → logprob: -10.893364906311035
    9. '          ' → logprob: -11.768364906311035
    10. '(cnt' → logprob: -11.893364906311035

Token 68: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00012773419439326972
    2. ' cnt' → logprob: -9.875127792358398
    3. 'continue' → logprob: -10.375127792358398
    4. '   ' → logprob: -10.500127792358398
    5. 'count' → logprob: -12.125127792358398
    6. '       ' → logprob: -12.250127792358398
    7. '	cnt' → logprob: -12.250127792358398
    8. '           ' → logprob: -13.875127792358398
    9. '(cnt' → logprob: -14.625127792358398
    10. '[cnt' → logprob: -15.375127792358398

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10303012281656265
    2. ' =' → logprob: -2.478030204772949
    3. '+=' → logprob: -4.478030204772949
    4. ' +=' → logprob: -6.103030204772949
    5. '+' → logprob: -7.853030204772949
    6. ' ' → logprob: -11.60303020477295
    7. '   ' → logprob: -14.10303020477295
    8. ' +' → logprob: -14.10303020477295
    9. ')' → logprob: -15.10303020477295
    10. '＝' → logprob: -15.85303020477295

Token 70: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.4741035997867584
    2. 'cnt' → logprob: -0.974103569984436
    3. '	cnt' → logprob: -10.849103927612305
    4. '(cnt' → logprob: -12.224103927612305
    5. '[cnt' → logprob: -14.224103927612305
    6. ' ' → logprob: -14.474103927612305
    7. '0' → logprob: -14.599103927612305
    8. 'counter' → logprob: -15.474103927612305
    9. '_cnt' → logprob: -16.099103927612305
    10. 'count' → logprob: -16.099103927612305

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519638240337372
    2. ' +' → logprob: -1.5019638538360596
    3. ' ' → logprob: -10.37696361541748
    4. '＋' → logprob: -14.25196361541748
    5. '-' → logprob: -14.50196361541748
    6. '1' → logprob: -14.62696361541748
    7. ' plus' → logprob: -14.62696361541748
    8. ' -' → logprob: -15.12696361541748
    9. '2' → logprob: -15.75196361541748
    10. '+n' → logprob: -15.75196361541748

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859418421983719
    2. ' ' → logprob: -3.0485942363739014
    3. '2' → logprob: -12.29859447479248
    4. '   ' → logprob: -13.92359447479248
    5. '3' → logprob: -15.04859447479248
    6. '           ' → logprob: -15.29859447479248
    7. '    ' → logprob: -16.298593521118164
    8. '  ' → logprob: -16.423593521118164
    9. '       ' → logprob: -16.548593521118164
    10. '0' → logprob: -16.736093521118164

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.12501049041748
    3. '2' → logprob: -13.00001049041748
    4. '10' → logprob: -13.12501049041748
    5. '3' → logprob: -15.12501049041748
    6. '100' → logprob: -15.87501049041748
    7. '5' → logprob: -16.500009536743164
    8. '11' → logprob: -16.750009536743164
    9. '１' → logprob: -16.875009536743164
    10. '   ' → logprob: -17.250009536743164

Token 74: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4855663721391466e-05
    2. ' print' → logprob: -11.500015258789062
    3. ')' → logprob: -13.125015258789062
    4. '```' → logprob: -13.875015258789062
    5. '<|end|>' → logprob: -14.250015258789062
    6. '
' → logprob: -14.625015258789062
    7. '\n' → logprob: -15.500015258789062
    8. '(print' → logprob: -15.500015258789062
    9. '#print' → logprob: -16.250015258789062
    10. '#' → logprob: -16.625015258789062

Token 75: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8670179997570813e-05
    2. ' print' → logprob: -11.375019073486328
    3. '```' → logprob: -12.375019073486328
    4. ')' → logprob: -14.250019073486328
    5. '\n' → logprob: -14.625019073486328
    6. '
' → logprob: -14.750019073486328
    7. '<|end|>' → logprob: -15.000019073486328
    8. '#' → logprob: -15.000019073486328
    9. '(print' → logprob: -15.500019073486328
    10. '#print' → logprob: -15.625019073486328

Token 76: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00025084958178922534
    2. ')' → logprob: -8.750250816345215
    3. ' print' → logprob: -10.000250816345215
    4. '```' → logprob: -10.750250816345215
    5. '\n' → logprob: -11.875250816345215
    6. '<|end|>' → logprob: -11.875250816345215
    7. '#' → logprob: -12.875250816345215
    8. ']' → logprob: -13.250250816345215
    9. '
' → logprob: -13.250250816345215
    10. '#print' → logprob: -14.125250816345215

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001751222531311214
    2. ':
' → logprob: -6.37675142288208
    3. ' :' → logprob: -10.751750946044922
    4. '   ' → logprob: -10.876750946044922
    5. '       ' → logprob: -12.376750946044922
    6. ' :
' → logprob: -13.751750946044922
    7. '```' → logprob: -14.626750946044922
    8. '    ' → logprob: -15.001750946044922
    9. ':return' → logprob: -15.001750946044922
    10. '<|end|>' → logprob: -15.001750946044922

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4019761383533478
    2. 'cnt' → logprob: -1.2769761085510254
    3. ' cnt' → logprob: -3.0269761085510254
    4. 'pass' → logprob: -7.151976108551025
    5. '       ' → logprob: -7.276976108551025
    6. '	cnt' → logprob: -7.401976108551025
    7. '    ' → logprob: -7.901976108551025
    8. '```' → logprob: -8.151976585388184
    9. ' pass' → logprob: -8.401976585388184
    10. 'continue' → logprob: -9.026976585388184

Token 79: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.3053893446922302
    2. 'if' → logprob: -1.555389404296875
    3. 'continue' → logprob: -3.930389404296875
    4. '   ' → logprob: -4.055389404296875
    5. 'for' → logprob: -4.930389404296875
    6. ' cnt' → logprob: -5.805389404296875
    7. 'pass' → logprob: -6.180389404296875
    8. ' if' → logprob: -6.555389404296875
    9. '```' → logprob: -7.930389404296875
    10. ' continue' → logprob: -8.180389404296875

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23064130544662476
    2. '+=' → logprob: -2.4806413650512695
    3. ' +=' → logprob: -2.6056413650512695
    4. '+' → logprob: -3.6056413650512695
    5. ' =' → logprob: -3.8556413650512695
    6. ' ' → logprob: -9.85564136505127
    7. ' +' → logprob: -10.23064136505127
    8. '   ' → logprob: -12.10564136505127
    9. ')' → logprob: -13.35564136505127
    10. '<|end|>' → logprob: -13.73064136505127

Token 81: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.31442752480506897
    2. ' cnt' → logprob: -1.3144274950027466
    3. '0' → logprob: -6.814427375793457
    4. ' ' → logprob: -10.064427375793457
    5. '	cnt' → logprob: -11.314427375793457
    6. '(cnt' → logprob: -11.939427375793457
    7. '1' → logprob: -13.564427375793457
    8. 'c' → logprob: -13.939427375793457
    9. 'ct' → logprob: -14.189427375793457
    10. '[cnt' → logprob: -14.439427375793457

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04439851641654968
    2. '<|end|>' → logprob: -3.294398546218872
    3. '0' → logprob: -5.919398307800293
    4. '
' → logprob: -6.794398307800293
    5. ' ' → logprob: -7.169398307800293
    6. '<|end|>' → logprob: -7.669398307800293
    7. '```' → logprob: -7.919398307800293
    8. ' +' → logprob: -8.544398307800293
    9. '\n' → logprob: -8.794398307800293
    10. '+
' → logprob: -8.919398307800293

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019938242621719837
    2. '0' → logprob: -6.251993656158447
    3. ' ' → logprob: -9.876994132995605
    4. '2' → logprob: -11.626994132995605
    5. 'a' → logprob: -12.501994132995605
    6. '3' → logprob: -14.126994132995605
    7. 'int' → logprob: -15.626994132995605
    8. '10' → logprob: -16.81449317932129
    9. '   ' → logprob: -17.00199317932129
    10. '(a' → logprob: -17.06449317932129

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015450954670086503
    2. '0' → logprob: -6.501544952392578
    3. '2' → logprob: -10.251544952392578
    4. '3' → logprob: -12.126544952392578
    5. ' ' → logprob: -14.001544952392578
    6. 'a' → logprob: -14.376544952392578
    7. 'int' → logprob: -16.001544952392578
    8. '10' → logprob: -16.126544952392578
    9. '5' → logprob: -17.001544952392578
    10. '-' → logprob: -17.501544952392578

Token 85: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. ')' → logprob: -12.000012397766113
    3. ' print' → logprob: -12.375012397766113
    4. '```' → logprob: -13.125012397766113
    5. '<|end|>' → logprob: -16.00001335144043
    6. '#' → logprob: -16.37501335144043
    7. '\' → logprob: -16.75001335144043
    8. '#print' → logprob: -16.87501335144043
    9. '\n' → logprob: -17.75001335144043
    10. 'pr' → logprob: -17.75001335144043

Token 86: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0802738870552275e-05
    2. '```' → logprob: -12.37501049041748
    3. ' print' → logprob: -12.75001049041748
    4. ')' → logprob: -13.50001049041748
    5. '#' → logprob: -14.25001049041748
    6. '#print' → logprob: -15.12501049041748
    7. '\' → logprob: -15.25001049041748
    8. '\n' → logprob: -15.37501049041748
    9. '<|end|>' → logprob: -15.62501049041748
    10. 'if' → logprob: -15.87501049041748

Token 87: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0015669959830120206
    2. 'cnt' → logprob: -6.5015668869018555
    3. '(cnt' → logprob: -10.501566886901855
    4. ' ' → logprob: -10.626566886901855
    5. ' ' → logprob: -11.876566886901855
    6. '	cnt' → logprob: -12.376566886901855
    7. '[cnt' → logprob: -13.751566886901855
    8. ' cn' → logprob: -15.251566886901855
    9. '　' → logprob: -16.501567840576172
    10. ' ctr' → logprob: -16.501567840576172

Token 88: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7292687296867371
    2. ' ==' → logprob: -0.8542687296867371
    3. '>' → logprob: -3.104268789291382
    4. '==' → logprob: -3.479268789291382
    5. ' <' → logprob: -4.604268550872803
    6. ' >=' → logprob: -5.979268550872803
    7. '<' → logprob: -7.104268550872803
    8. ' <=' → logprob: -7.104268550872803
    9. ' ' → logprob: -7.354268550872803
    10. ' !=' → logprob: -8.104269027709961

Token 89: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009365377016365528
    2. ' N' → logprob: -4.759365558624268
    3. '0' → logprob: -7.384365558624268
    4. ' ' → logprob: -9.13436508178711
    5. '3' → logprob: -12.00936508178711
    6. '4' → logprob: -12.75936508178711
    7. '	N' → logprob: -12.75936508178711
    8. '1' → logprob: -13.25936508178711
    9. 'n' → logprob: -13.50936508178711
    10. '2' → logprob: -13.50936508178711

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10021713376045227
    2. ':
' → logprob: -2.35021710395813
    3. 'print' → logprob: -11.97521686553955
    4. ':
' → logprob: -13.22521686553955
    5. ':

' → logprob: -13.60021686553955
    6. ' print' → logprob: -15.22521686553955
    7. '():
' → logprob: -15.72521686553955
    8. '):
' → logprob: -15.85021686553955
    9. ' :
' → logprob: -15.97521686553955
    10. ':def' → logprob: -16.600217819213867

Token 91: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02187482640147209
    2. '   ' → logprob: -3.8968749046325684
    3. ' print' → logprob: -6.646874904632568
    4. '	print' → logprob: -11.64687442779541
    5. '```' → logprob: -11.77187442779541
    6. '``' → logprob: -12.52187442779541
    7. '    ' → logprob: -13.02187442779541
    8. '       ' → logprob: -13.14687442779541
    9. ' ' → logprob: -13.39687442779541
    10. '
' → logprob: -13.64687442779541

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.625011444091797
    3. ' print' → logprob: -13.125011444091797
    4. 'Yes' → logprob: -15.000011444091797
    5. 'pr' → logprob: -16.000011444091797
    6. '
' → logprob: -16.125011444091797
    7. 'Print' → logprob: -16.625011444091797
    8. 'yes' → logprob: -17.375011444091797
    9. 'True' → logprob: -17.625011444091797
    10. '    
' → logprob: -17.750011444091797

Token 93: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.48435622453689575
    2. '(' → logprob: -0.9843562245368958
    3. '('' → logprob: -4.60935640335083
    4. '(True' → logprob: -8.734355926513672
    5. '("("' → logprob: -10.234355926513672
    6. '"' → logprob: -10.359355926513672
    7. '(":' → logprob: -11.359355926513672
    8. '()' → logprob: -12.109355926513672
    9. '(
' → logprob: -12.484355926513672
    10. ' ("' → logprob: -12.609355926513672

Token 94: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -0.0022681360132992268
    2. 'YES' → logprob: -6.877268314361572
    3. 'Yes' → logprob: -6.877268314361572
    4. 'True' → logprob: -9.502267837524414
    5. 'P' → logprob: -10.877267837524414
    6. 'yes' → logprob: -11.502267837524414
    7. 'app' → logprob: -11.502267837524414
    8. 'DEN' → logprob: -11.502267837524414
    9. 'App' → logprob: -11.627267837524414
    10. 'E' → logprob: -11.752267837524414

Token 95: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.0003374886582605541
    2. 'R' → logprob: -8.875337600708008
    3. 'END' → logprob: -9.625337600708008
    4. 'ROB' → logprob: -10.000337600708008
    5. 'rove' → logprob: -10.750337600708008
    6. 'OVE' → logprob: -11.375337600708008
    7. 'LES' → logprob: -11.750337600708008
    8. 'RU' → logprob: -12.000337600708008
    9. 'LOVE' → logprob: -12.250337600708008
    10. 'RE' → logprob: -12.375337600708008

Token 96: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.02070467732846737
    2. 'VE' → logprob: -3.895704746246338
    3. 'V' → logprob: -9.02070426940918
    4. 'VAL' → logprob: -11.02070426940918
    5. 'OVED' → logprob: -11.77070426940918
    6. 'PR' → logprob: -12.14570426940918
    7. 'ved' → logprob: -12.27070426940918
    8. 'Ved' → logprob: -12.89570426940918
    9. ' VE' → logprob: -13.89570426940918
    10. 'VI' → logprob: -14.02070426940918

Token 97: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.008645651862025261
    2. '")
' → logprob: -4.758645534515381
    3. ')' → logprob: -10.883646011352539
    4. '")
' → logprob: -11.633646011352539
    5. ')")' → logprob: -13.383646011352539
    6. '"' → logprob: -14.383646011352539
    7. '!")' → logprob: -14.508646011352539
    8. ')
' → logprob: -15.008646011352539
    9. '")

' → logprob: -15.633646011352539
    10. 'else' → logprob: -15.883646011352539

Token 98: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.9153885558771435e-06
    2. ' else' → logprob: -12.125005722045898
    3. '```' → logprob: -15.000005722045898
    4. 'elif' → logprob: -16.5000057220459
    5. '#else' → logprob: -16.7500057220459
    6. '}else' → logprob: -17.7500057220459
    7. '<|end|>' → logprob: -17.7500057220459
    8. 'endif' → logprob: -18.3750057220459
    9. '	else' → logprob: -19.0000057220459
    10. 'elser' → logprob: -19.1250057220459

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004107015673071146
    2. ':
' → logprob: -5.5041069984436035
    3. '   ' → logprob: -10.879107475280762
    4. ' :' → logprob: -12.379107475280762
    5. '():' → logprob: -13.004107475280762
    6. '):' → logprob: -13.754107475280762
    7. ' :
' → logprob: -14.879107475280762
    8. '```' → logprob: -14.879107475280762
    9. ':
' → logprob: -15.254107475280762
    10. '():
' → logprob: -15.254107475280762

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002565552946180105
    2. 'print' → logprob: -6.002565383911133
    3. ' print' → logprob: -9.377565383911133
    4. '	print' → logprob: -12.877565383911133
    5. '       ' → logprob: -13.752565383911133
    6. '```' → logprob: -14.377565383911133
    7. '   ' → logprob: -15.002565383911133
    8. ' ' → logprob: -15.002565383911133
    9. '    ' → logprob: -16.002565383911133
    10. '    
' → logprob: -16.627565383911133

Token 101: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001996066712308675
    2. '   ' → logprob: -9.000199317932129
    3. ' print' → logprob: -9.500199317932129
    4. '	print' → logprob: -13.625199317932129
    5. '```' → logprob: -18.500200271606445
    6. '.print' → logprob: -19.000200271606445
    7. ' ' → logprob: -19.375200271606445
    8. '(print' → logprob: -20.500200271606445
    9. '_print' → logprob: -20.750200271606445
    10. '  ' → logprob: -20.875200271606445

Token 102: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5764872431755066
    2. '(' → logprob: -0.8264872431755066
    3. '("("' → logprob: -7.576487064361572
    4. '('' → logprob: -11.70148754119873
    5. '("")' → logprob: -11.70148754119873
    6. '(
' → logprob: -11.82648754119873
    7. '("(' → logprob: -12.95148754119873
    8. '()' → logprob: -13.07648754119873
    9. '("""' → logprob: -13.20148754119873
    10. '(""' → logprob: -13.20148754119873

Token 103: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.12422744184732437
    2. 'DEN' → logprob: -2.624227523803711
    3. '"' → logprob: -3.124227523803711
    4. 'DIS' → logprob: -8.624227523803711
    5. 'NOT' → logprob: -8.874227523803711
    6. 'DECL' → logprob: -11.499227523803711
    7. '"D' → logprob: -12.124227523803711
    8. 'FAILED' → logprob: -12.249227523803711
    9. ' DEN' → logprob: -13.499227523803711
    10. '"C' → logprob: -13.499227523803711

Token 104: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.0002158146962756291
    2. 'I' → logprob: -8.500215530395508
    3. 'Y' → logprob: -11.625215530395508
    4. 'ied' → logprob: -13.250215530395508
    5. 'N' → logprob: -15.000215530395508
    6. 'IE' → logprob: -15.375215530395508
    7. 'IAL' → logprob: -15.500215530395508
    8. 'ED' → logprob: -15.875215530395508
    9. '"' → logprob: -16.000215530395508
    10. '```' → logprob: -16.375215530395508

Token 105: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.4849443838757e-06
    2. ')' → logprob: -12.750004768371582
    3. ')")' → logprob: -13.500004768371582
    4. '")
' → logprob: -16.125003814697266
    5. '}")' → logprob: -17.125003814697266
    6. '')' → logprob: -18.375003814697266
    7. '"' → logprob: -18.625003814697266
    8. '```' → logprob: -19.500003814697266
    9. '”)' → logprob: -20.000003814697266
    10. '")}' → logprob: -20.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 38.83%
Précision adaptée (1ère position): 42.72%
Précision (top 10): 83.50%
================================================================================
