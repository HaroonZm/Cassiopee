================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # 100*1.01^4000 = 1.9297237e+19
    X = int(input())
    val = 100
    for i in range(4000):
        val = (val * 101) // 100
        if val >= X:
            print(i + 1)
            return

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.29922357201576233
    2. '\n' → logprob: -1.67422354221344
    3. '   ' → logprob: -3.4242236614227295
    4. '(' → logprob: -4.54922342300415
    5. ' 
' → logprob: -5.17422342300415
    6. '    
' → logprob: -5.29922342300415
    7. ' ' → logprob: -5.67422342300415
    8. ''' → logprob: -5.67422342300415
    9. '```' → logprob: -6.17422342300415
    10. '    ' → logprob: -6.29922342300415

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6293826103210449
    2. '   ' → logprob: -1.629382610321045
    3. 'pass' → logprob: -1.629382610321045
    4. 'return' → logprob: -3.254382610321045
    5. '    ' → logprob: -5.004382610321045
    6. '\' → logprob: -5.129382610321045
    7. ' pass' → logprob: -5.129382610321045
    8. '```' → logprob: -5.629382610321045
    9. 'a' → logprob: -6.129382610321045
    10. '#' (adapté à ' #') → logprob: -6.129382610321045

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.950888454914093
    2. '   ' → logprob: -1.0758883953094482
    3. '#' → logprob: -1.8258883953094482
    4. ' pass' → logprob: -3.2008883953094482
    5. '    ' → logprob: -3.3258883953094482
    6. ' #' → logprob: -4.075888633728027
    7. '  ' → logprob: -5.200888633728027
    8. 'pass' → logprob: -5.200888633728027
    9. 'print' → logprob: -6.575888633728027
    10. '     ' → logprob: -6.825888633728027

Token 6: '100' (ID: 1353)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11710245162248611
    2. ' ' → logprob: -3.3671023845672607
    3. '   ' → logprob: -3.3671023845672607
    4. 'pass' → logprob: -3.4921023845672607
    5. ' pass' → logprob: -5.36710262298584
    6. 'p' → logprob: -5.86710262298584
    7. 'print' → logprob: -6.99210262298584
    8. ' #' → logprob: -7.11710262298584
    9. '  ' → logprob: -7.86710262298584
    10. 'return' → logprob: -7.99210262298584

Token 7: '*' (ID: 9)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.35220906138420105
    2. '0' → logprob: -1.8522090911865234
    3. ' ' → logprob: -2.4772090911865234
    4. ' %' → logprob: -3.7272090911865234
    5. ')' → logprob: -4.477209091186523
    6. ' )' → logprob: -5.227209091186523
    7. '    ' → logprob: -5.852209091186523
    8. '_' → logprob: -6.227209091186523
    9. '   ' → logprob: -6.602209091186523
    10. 'print' → logprob: -6.977209091186523

Token 8: '1' (ID: 16)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09787703305482864
    2. ' *' → logprob: -3.472877025604248
    3. ' ' → logprob: -3.597877025604248
    4. ''' → logprob: -4.847877025604248
    5. '0' → logprob: -4.847877025604248
    6. ')' → logprob: -5.222877025604248
    7. '"' → logprob: -6.347877025604248
    8. '`' → logprob: -6.472877025604248
    9. 'print' → logprob: -6.597877025604248
    10. ' )' → logprob: -6.722877025604248

Token 9: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9241544008255005
    2. '*' → logprob: -1.1741544008255005
    3. ' ' → logprob: -1.9241544008255005
    4. ')' → logprob: -3.174154281616211
    5. '[' → logprob: -3.424154281616211
    6. '_' → logprob: -4.674154281616211
    7. '#' → logprob: -5.049154281616211
    8. '```' → logprob: -5.174154281616211
    9. '   ' → logprob: -5.174154281616211
    10. ',' → logprob: -5.299154281616211

Token 10: '01' (ID: 2290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8507717847824097
    2. '*' → logprob: -1.3507717847824097
    3. ' ' → logprob: -1.3507717847824097
    4. ')' → logprob: -3.975771903991699
    5. ' *' → logprob: -4.225771903991699
    6. '.' → logprob: -6.100771903991699
    7. ' )' → logprob: -6.100771903991699
    8. '`' → logprob: -6.600771903991699
    9. '_' → logprob: -6.975771903991699
    10. '2' → logprob: -7.100771903991699

Token 11: '^' (ID: 61)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2039075493812561
    2. ')' → logprob: -1.9539074897766113
    3. '**' → logprob: -4.328907489776611
    4. ' ' → logprob: -4.828907489776611
    5. ' *' → logprob: -4.953907489776611
    6. '0' → logprob: -5.703907489776611
    7. '```' → logprob: -5.953907489776611
    8. '\' → logprob: -6.078907489776611
    9. ' )' → logprob: -7.078907489776611
    10. '#' → logprob: -7.328907489776611

Token 12: '400' (ID: 4812)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.948260486125946
    2. '(' → logprob: -1.0732605457305908
    3. '0' → logprob: -2.323260545730591
    4. '100' → logprob: -2.448260545730591
    5. ')' → logprob: -3.698260545730591
    6. '1' → logprob: -4.073260307312012
    7. '3' → logprob: -4.948260307312012
    8. '5' → logprob: -5.448260307312012
    9. ' ' → logprob: -5.448260307312012
    10. '-' → logprob: -5.698260307312012

Token 13: '0' (ID: 15)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3721708357334137
    2. ' ' → logprob: -2.122170925140381
    3. ')' → logprob: -2.247170925140381
    4. '(' → logprob: -3.497170925140381
    5. '**' → logprob: -3.747170925140381
    6. ' *' → logprob: -4.747170925140381
    7. '   ' → logprob: -5.122170925140381
    8. ' )' → logprob: -5.622170925140381
    9. ' **' → logprob: -5.997170925140381
    10. '0' → logprob: -6.372170925140381

Token 14: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8859851956367493
    2. '(' → logprob: -1.5109851360321045
    3. ' ' → logprob: -1.6359851360321045
    4. ')' → logprob: -2.3859851360321045
    5. '**' → logprob: -3.3859851360321045
    6. '0' → logprob: -4.260985374450684
    7. '^' → logprob: -5.510985374450684
    8. ' **' → logprob: -5.510985374450684
    9. ' )' → logprob: -5.635985374450684
    10. '\' → logprob: -6.010985374450684

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5774018168449402
    2. '2' → logprob: -1.827401876449585
    3. '0' → logprob: -2.202401876449585
    4. '4' → logprob: -2.452401876449585
    5. '1' → logprob: -3.952401876449585
    6. '3' → logprob: -3.952401876449585
    7. '(' → logprob: -4.577401638031006
    8. '9' → logprob: -4.702401638031006
    9. ' (' → logprob: -5.202401638031006
    10. '*' → logprob: -5.577401638031006

Token 16: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2795575857162476
    2. '100' → logprob: -1.9045575857162476
    3. '(' → logprob: -2.029557704925537
    4. '2' → logprob: -2.154557704925537
    5. '1' → logprob: -2.404557704925537
    6. '0' → logprob: -3.779557704925537
    7. '4' → logprob: -3.904557704925537
    8. '3' → logprob: -4.029557704925537
    9. ' (' → logprob: -4.154557704925537
    10. '5' → logprob: -4.404557704925537

Token 17: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48569589853286743
    2. ')' → logprob: -1.6106958389282227
    3. '*' → logprob: -2.1106958389282227
    4. '.' → logprob: -2.9856958389282227
    5. '**' → logprob: -6.485695838928223
    6. '1' → logprob: -6.735695838928223
    7. '2' → logprob: -6.735695838928223
    8. '```' → logprob: -6.735695838928223
    9. '#' → logprob: -6.985695838928223
    10. ' ' → logprob: -7.110695838928223

Token 18: '929' (ID: 48056)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2981706857681274
    2. '03' → logprob: -1.7981706857681274
    3. '04' → logprob: -2.048170566558838
    4. '05' → logprob: -3.173170566558838
    5. '02' → logprob: -3.298170566558838
    6. '07' → logprob: -3.423170566558838
    7. '01' → logprob: -4.173170566558838
    8. '06' → logprob: -4.235670566558838
    9. '09' → logprob: -4.360670566558838
    10. '040' → logprob: -4.423170566558838

Token 19: '723' (ID: 41019)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2451232224702835
    2. '0' → logprob: -1.870123267173767
    3. ')' → logprob: -3.2451231479644775
    4. '2' → logprob: -4.495123386383057
    5. ' *' → logprob: -5.870123386383057
    6. '**' → logprob: -5.995123386383057
    7. ' ' → logprob: -6.495123386383057
    8. '4' → logprob: -6.995123386383057
    9. '.' → logprob: -7.120123386383057
    10. 'e' → logprob: -7.245123386383057

Token 20: '7' (ID: 22)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19257239997386932
    2. '0' → logprob: -2.3175723552703857
    3. ')' → logprob: -2.9425723552703857
    4. '2' → logprob: -4.942572593688965
    5. '.' → logprob: -5.942572593688965
    6. ' ' → logprob: -6.067572593688965
    7. ' *' → logprob: -6.192572593688965
    8. '```' → logprob: -6.317572593688965
    9. '**' → logprob: -6.567572593688965
    10. '4' → logprob: -6.692572593688965

Token 21: 'e' (ID: 68)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33435726165771484
    2. '0' → logprob: -1.7093572616577148
    3. ')' → logprob: -2.709357261657715
    4. '**' → logprob: -4.584357261657715
    5. '```' → logprob: -5.209357261657715
    6. ' ' → logprob: -5.584357261657715
    7. '.' → logprob: -5.834357261657715
    8. '2' → logprob: -6.084357261657715
    9. '\n' → logprob: -6.209357261657715
    10. '4' → logprob: -6.334357261657715

Token 22: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8925295472145081
    2. '+' → logprob: -1.5175294876098633
    3. '09' → logprob: -3.0175294876098633
    4. '10' → logprob: -3.5175294876098633
    5. '12' → logprob: -3.8925294876098633
    6. '04' → logprob: -4.017529487609863
    7. '06' → logprob: -4.017529487609863
    8. '13' → logprob: -4.142529487609863
    9. '15' → logprob: -4.142529487609863
    10. '3' → logprob: -4.267529487609863

Token 23: '19' (ID: 858)
  Prédit: '03'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '03' → logprob: -0.2531856298446655
    2. '04' → logprob: -2.253185749053955
    3. '06' → logprob: -3.628185749053955
    4. '+' → logprob: -4.253185749053955
    5. '05' → logprob: -4.378185749053955
    6. '10' → logprob: -4.503185749053955
    7. '3' → logprob: -4.628185749053955
    8. '07' → logprob: -4.628185749053955
    9. '12' → logprob: -4.753185749053955
    10. '09' → logprob: -4.878185749053955

Token 24: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2852119505405426
    2. ')' → logprob: -2.4102120399475098
    3. '   ' → logprob: -2.9102120399475098
    4. ' ' → logprob: -3.5352120399475098
    5. '```' → logprob: -3.9102120399475098
    6. '**' → logprob: -4.66021203994751
    7. '0' → logprob: -4.91021203994751
    8. '\n' → logprob: -5.03521203994751
    9. '\' → logprob: -5.53521203994751
    10. '(' → logprob: -5.66021203994751

Token 25: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38888365030288696
    2. ' ' → logprob: -1.3888835906982422
    3. ' *' → logprob: -3.513883590698242
    4. '0' → logprob: -4.638883590698242
    5. '   ' → logprob: -4.763883590698242
    6. ')' → logprob: -5.388883590698242
    7. '(' → logprob: -5.513883590698242
    8. ' **' → logprob: -6.013883590698242
    9. '**' → logprob: -6.138883590698242
    10. ',' → logprob: -6.888883590698242

Token 26: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3007408082485199
    2. '   ' → logprob: -2.4257407188415527
    3. '*' → logprob: -3.3007407188415527
    4. '    ' → logprob: -3.6757407188415527
    5. ')' → logprob: -3.9257407188415527
    6. 'n' → logprob: -4.050740718841553
    7. '#' → logprob: -4.800740718841553
    8. ' return' → logprob: -5.175740718841553
    9. '_' → logprob: -5.300740718841553
    10. '  ' → logprob: -5.425740718841553

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6000354290008545
    2. ' **' → logprob: -1.3500354290008545
    3. ' *' → logprob: -3.1000354290008545
    4. '**' → logprob: -3.2250354290008545
    5. '*' → logprob: -3.3500354290008545
    6. '=' → logprob: -3.4750354290008545
    7. ' ' → logprob: -4.225035667419434
    8. ' *=' → logprob: -4.350035667419434
    9. '[' → logprob: -5.600035667419434
    10. '_' → logprob: -6.225035667419434

Token 28: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029893962666392326
    2. '100' → logprob: -3.5298938751220703
    3. '1' → logprob: -9.15489387512207
    4. '10' → logprob: -11.02989387512207
    5. '  ' → logprob: -12.40489387512207
    6. '0' → logprob: -12.65489387512207
    7. ' (' → logprob: -13.02989387512207
    8. 'int' → logprob: -13.15489387512207
    9. ' int' → logprob: -13.52989387512207
    10. '   ' → logprob: -13.65489387512207

Token 29: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002087450586259365
    2. '(input' → logprob: -6.627087593078613
    3. ' (' → logprob: -7.752087593078613
    4. '('' → logprob: -8.502087593078613
    5. '(X' → logprob: -9.627087593078613
    6. '()' → logprob: -10.877087593078613
    7. '("' → logprob: -11.002087593078613
    8. '(user' → logprob: -12.502087593078613
    9. '(x' → logprob: -12.752087593078613
    10. ' ' → logprob: -12.752087593078613

Token 30: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05458185076713562
    2. '()' → logprob: -3.554581880569458
    3. '('' → logprob: -4.554581642150879
    4. '())' → logprob: -5.304581642150879
    5. ')' → logprob: -5.429581642150879
    6. '("("' → logprob: -5.679581642150879
    7. '(""))' → logprob: -7.929581642150879
    8. '("' → logprob: -8.679581642150879
    9. '("")' → logprob: -9.054581642150879
    10. '(()' → logprob: -9.429581642150879

Token 31: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.274276614189148
    2. ')' → logprob: -1.399276614189148
    3. '*' → logprob: -1.399276614189148
    4. '**' → logprob: -2.1492767333984375
    5. '<|end|>' → logprob: -4.0242767333984375
    6. ' ' → logprob: -4.1492767333984375
    7. '%' → logprob: -4.1492767333984375
    8. '#' → logprob: -4.2742767333984375
    9. ' if' → logprob: -4.7742767333984375
    10. '
' → logprob: -4.7742767333984375

Token 32: ' val' (ID: 1459)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2544794976711273
    2. '*' → logprob: -2.12947940826416
    3. ')' → logprob: -3.00447940826416
    4. '**' → logprob: -4.62947940826416
    5. 'if' → logprob: -5.12947940826416
    6. 'i' → logprob: -5.12947940826416
    7. ' if' → logprob: -5.37947940826416
    8. ' *' → logprob: -5.50447940826416
    9. '#' → logprob: -6.00447940826416
    10. '(' → logprob: -6.37947940826416

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4051092863082886
    2. '=' → logprob: -1.1551092863082886
    3. ' ' → logprob: -4.530109405517578
    4. '*' → logprob: -6.530109405517578
    5. 's' → logprob: -6.530109405517578
    6. '_' → logprob: -6.655109405517578
    7. 'u' → logprob: -6.905109405517578
    8. 'ue' → logprob: -7.405109405517578
    9. '   ' → logprob: -7.530109405517578
    10. ' *=' → logprob: -8.405109405517578

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7431085109710693
    2. ' X' → logprob: -0.9931085109710693
    3. '100' → logprob: -2.3681085109710693
    4. 'X' → logprob: -3.1181085109710693
    5. '1' → logprob: -4.368108749389648
    6. ' int' → logprob: -7.118108749389648
    7. ' (' → logprob: -7.368108749389648
    8. '  ' → logprob: -7.743108749389648
    9. '   ' → logprob: -7.993108749389648
    10. 'int' → logprob: -8.243108749389648

Token 35: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2643192708492279
    2. 'X' → logprob: -1.5143193006515503
    3. '1' → logprob: -5.13931941986084
    4. ' ' → logprob: -6.01431941986084
    5. ' X' → logprob: -6.63931941986084
    6. 'int' → logprob: -6.63931941986084
    7. 'round' → logprob: -7.38931941986084
    8. '(' → logprob: -8.01431941986084
    9. 'pow' → logprob: -8.51431941986084
    10. '0' → logprob: -9.76431941986084

Token 36: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28259196877479553
    2. ' ' → logprob: -1.7825919389724731
    3. ' *' → logprob: -3.2825920581817627
    4. '<|end|>' → logprob: -3.6575920581817627
    5. '**' → logprob: -5.032591819763184
    6. ')' → logprob: -6.282591819763184
    7. '  ' → logprob: -7.032591819763184
    8. ' **' → logprob: -7.157591819763184
    9. '   ' → logprob: -7.157591819763184
    10. '.' → logprob: -7.157591819763184

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' for' (ID: 395)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4224054515361786
    2. '**' → logprob: -1.797405481338501
    3. ' ' → logprob: -2.297405481338501
    4. ' *' → logprob: -4.047405242919922
    5. ' for' → logprob: -4.297405242919922
    6. 'for' (adapté à ' for') → logprob: -4.672405242919922
    7. ' **' → logprob: -4.797405242919922
    8. '<|end|>' → logprob: -4.797405242919922
    9. '   ' → logprob: -6.172405242919922
    10. '```' → logprob: -6.172405242919922

Token 39: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8522577285766602
    2. ' i' → logprob: -1.1022577285766602
    3. ' ' → logprob: -1.8522577285766602
    4. '_' → logprob: -2.47725772857666
    5. ' in' → logprob: -8.22725772857666
    6. 'i' → logprob: -8.35225772857666
    7. '  ' → logprob: -10.72725772857666
    8. ' ' → logprob: -11.22725772857666
    9. ' range' → logprob: -11.72725772857666
    10. ' I' → logprob: -11.85225772857666

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018407093361020088
    2. 'in' → logprob: -4.018406867980957
    3. ' ' → logprob: -8.643406867980957
    4. '+' → logprob: -10.268406867980957
    5. '  ' → logprob: -11.018406867980957
    6. ' i' → logprob: -11.268406867980957
    7. '   ' → logprob: -13.143406867980957
    8. '=' → logprob: -13.518406867980957
    9. '	in' → logprob: -13.518406867980957
    10. '1' → logprob: -13.518406867980957

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021723806858063
    2. 'range' → logprob: -2.350217342376709
    3. ' ' → logprob: -11.97521686553955
    4. '	range' → logprob: -13.22521686553955
    5. ' xrange' → logprob: -14.35021686553955
    6. '(range' → logprob: -14.35021686553955
    7. '  ' → logprob: -14.97521686553955
    8. '   ' → logprob: -15.47521686553955
    9. '```' → logprob: -15.60021686553955
    10. 'rang' → logprob: -16.600217819213867

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.004696090007201e-05
    2. '(
' → logprob: -10.000069618225098
    3. ' (' → logprob: -11.250069618225098
    4. '(X' → logprob: -12.500069618225098
    5. '(i' → logprob: -12.750069618225098
    6. '(

' → logprob: -13.125069618225098
    7. '(len' → logprob: -14.750069618225098
    8. '(x' → logprob: -15.125069618225098
    9. '('' → logprob: -15.125069618225098
    10. '(range' → logprob: -15.250069618225098

Token 43: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.2928886115550995
    2. 'X' → logprob: -1.4178886413574219
    3. '1' → logprob: -4.542888641357422
    4. '0' → logprob: -7.542888641357422
    5. '4' → logprob: -8.292888641357422
    6. 'i' → logprob: -9.042888641357422
    7. ' X' → logprob: -9.417888641357422
    8. ' ' → logprob: -11.292888641357422
    9. ')' → logprob: -11.667888641357422
    10. '40' → logprob: -11.792888641357422

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ')' → logprob: -11.625009536743164
    3. '۰' → logprob: -14.875009536743164
    4. '1' → logprob: -15.125009536743164
    5. ' ' → logprob: -17.500009536743164
    6. '):
' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.125009536743164
    8. '০' → logprob: -18.375009536743164
    9. '०' → logprob: -18.375009536743164
    10. '٠' → logprob: -19.000009536743164

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0169516634196043
    2. ')' → logprob: -4.141951560974121
    3. ' ):' → logprob: -7.266951560974121
    4. ':' → logprob: -9.266951560974121
    5. '+' → logprob: -9.641951560974121
    6. ' )' → logprob: -10.016951560974121
    7. '):
' → logprob: -12.141951560974121
    8. '   ' → logprob: -12.641951560974121
    9. ',' → logprob: -13.516951560974121
    10. ''):' → logprob: -14.891951560974121

Token 46: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6355767250061035
    2. ' val' → logprob: -1.6355767250061035
    3. ' ' → logprob: -2.3855767250061035
    4. '<|end|>' → logprob: -3.1355767250061035
    5. '    ' → logprob: -3.2605767250061035
    6. '*' → logprob: -3.3855767250061035
    7. '    
' → logprob: -3.7605767250061035
    8. ' 
' → logprob: -5.0105767250061035
    9. '       ' → logprob: -5.1355767250061035
    10. 'val' → logprob: -5.2605767250061035

Token 47: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.014717506244778633
    2. 'val' (adapté à ' val') → logprob: -4.3897175788879395
    3. '    ' → logprob: -6.2647175788879395
    4. ' ' → logprob: -8.764717102050781
    5. '	val' → logprob: -9.764717102050781
    6. ' ' → logprob: -11.264717102050781
    7. '_val' → logprob: -11.264717102050781
    8. '     
' → logprob: -11.639717102050781
    9. '   ' → logprob: -11.764717102050781
    10. '[val' → logprob: -12.264717102050781

Token 48: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.04347286373376846
    2. ' *=' → logprob: -3.9184727668762207
    3. '=' → logprob: -4.043472766876221
    4. '*' → logprob: -5.293472766876221
    5. ' =' → logprob: -9.168473243713379
    6. ' ' → logprob: -13.418473243713379
    7. '**' → logprob: -14.043473243713379
    8. ' ' → logprob: -14.043473243713379
    9. '	' → logprob: -14.793473243713379
    10. ' *' → logprob: -14.918473243713379

Token 49: ' (' (ID: 350)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740816056728363
    2. 'val' → logprob: -0.9740816354751587
    3. '	val' → logprob: -13.099081993103027
    4. '(val' → logprob: -14.349081993103027
    5. '[val' → logprob: -14.599081993103027
    6. '   ' → logprob: -14.974081993103027
    7. ',val' → logprob: -15.224081993103027
    8. ' ' → logprob: -15.474081993103027
    9. 'int' → logprob: -15.724081993103027
    10. '```' → logprob: -16.47408103942871

Token 50: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02975917048752308
    2. ' val' → logprob: -3.529759168624878
    3. '   ' → logprob: -12.279759407043457
    4. '	val' → logprob: -12.904759407043457
    5. ' ' → logprob: -14.654759407043457
    6. '(val' → logprob: -15.404759407043457
    7. ')' → logprob: -16.02975845336914
    8. ',val' → logprob: -16.15475845336914
    9. '[val' → logprob: -16.40475845336914
    10. '_val' → logprob: -16.52975845336914

Token 51: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4303227961063385
    2. ' *' → logprob: -1.0553227663040161
    3. ')' → logprob: -6.680322647094727
    4. ')*' → logprob: -8.930322647094727
    5. ' )' → logprob: -9.305322647094727
    6. '*)' → logprob: -9.555322647094727
    7. ' ' → logprob: -10.430322647094727
    8. ' *)' → logprob: -11.555322647094727
    9. ' **' → logprob: -11.805322647094727
    10. ' ' → logprob: -12.055322647094727

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197093799710274
    2. ' ' → logprob: -2.8119709491729736
    3. '   ' → logprob: -13.811970710754395
    4. '(' → logprob: -14.311970710754395
    5. ' (' → logprob: -14.311970710754395
    6. '    ' → logprob: -15.436970710754395
    7. '  ' → logprob: -15.561970710754395
    8. ')' → logprob: -15.561970710754395
    9. '<|end|>' → logprob: -15.936970710754395
    10. ' ' → logprob: -16.68697166442871

Token 53: '101' (ID: 7959)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.00012493133545
    3. '(' → logprob: -13.87512493133545
    4. '   ' → logprob: -15.50012493133545
    5. ')' → logprob: -17.687623977661133
    6. ' (' → logprob: -17.687623977661133
    7. '  ' → logprob: -17.750123977661133
    8. '```' → logprob: -17.937623977661133
    9. '    ' → logprob: -18.250123977661133
    10. '' → logprob: -18.875123977661133

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00537036033347249
    2. ' )' → logprob: -5.380370140075684
    3. ')/' → logprob: -7.255370140075684
    4. ' ' → logprob: -11.130370140075684
    5. ')//' → logprob: -11.630370140075684
    6. '/' → logprob: -11.755370140075684
    7. ' /' → logprob: -12.505370140075684
    8. '   ' → logprob: -13.755370140075684
    9. '0' → logprob: -13.755370140075684
    10. ')/(' → logprob: -14.005370140075684

Token 55: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '10' → logprob: -17.000051498413086
    4. '1' → logprob: -17.375051498413086
    5. '```' → logprob: -17.625051498413086
    6. '  ' → logprob: -17.875051498413086
    7. '   ' → logprob: -18.500051498413086
    8. '102' → logprob: -19.250051498413086
    9. '101' → logprob: -19.875051498413086
    10. 'python' → logprob: -20.250051498413086

Token 57: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -15.375001907348633
    4. '10' → logprob: -16.500001907348633
    5. '  ' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '101' → logprob: -20.625001907348633
    8. '00' → logprob: -21.000001907348633
    9. '```' → logprob: -21.125001907348633
    10. '0' → logprob: -21.500001907348633

Token 58: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.624821126461029
    2. '<|end|>' → logprob: -1.1248211860656738
    3. ' ' → logprob: -3.374821186065674
    4. '
' → logprob: -3.499821186065674
    5. '    
' → logprob: -4.124821186065674
    6. '*' → logprob: -4.374821186065674
    7. '<|end|>' → logprob: -4.874821186065674
    8. '  ' → logprob: -4.874821186065674
    9. '  
' → logprob: -5.124821186065674
    10. '    ' → logprob: -5.874821186065674

Token 59: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2807217240333557
    2. '
' → logprob: -1.905721664428711
    3. '<|end|>' → logprob: -3.155721664428711
    4. '    
' → logprob: -3.905721664428711
    5. '  
' → logprob: -4.655721664428711
    6. ' ' → logprob: -4.655721664428711
    7. '```' → logprob: -5.530721664428711
    8. ' if' → logprob: -6.155721664428711
    9. '\n' → logprob: -6.530721664428711
    10. ' 
' → logprob: -6.530721664428711

Token 60: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.002086023800075054
    2. ' X' → logprob: -6.252086162567139
    3. 'val' → logprob: -9.00208568572998
    4. 'X' → logprob: -11.12708568572998
    5. ' (' → logprob: -11.75208568572998
    6. '(val' → logprob: -12.75208568572998
    7. ' i' → logprob: -13.12708568572998
    8. '(' → logprob: -13.25208568572998
    9. ' ' → logprob: -13.75208568572998
    10. ' x' → logprob: -13.87708568572998

Token 62: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.37554386258125305
    2. ' >=' → logprob: -1.2505438327789307
    3. ' ==' → logprob: -4.37554407119751
    4. '>' → logprob: -5.00054407119751
    5. '>=' → logprob: -6.37554407119751
    6. ' %' → logprob: -6.87554407119751
    7. ' <=' → logprob: -7.00054407119751
    8. ' ' → logprob: -7.00054407119751
    9. ' <' → logprob: -7.37554407119751
    10. ' *' → logprob: -7.75054407119751

Token 63: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10036550462245941
    2. ' X' → logprob: -2.350365400314331
    3. '100' → logprob: -9.35036563873291
    4. '10' → logprob: -10.35036563873291
    5. ' ' → logprob: -10.72536563873291
    6. '2' → logprob: -12.22536563873291
    7. '   ' → logprob: -12.47536563873291
    8. '20' → logprob: -13.47536563873291
    9. '1' → logprob: -13.85036563873291
    10. '999' → logprob: -13.97536563873291

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015383612480945885
    2. ':
' → logprob: -9.125153541564941
    3. ':return' → logprob: -10.375153541564941
    4. '       ' → logprob: -12.375153541564941
    5. ' :' → logprob: -13.125153541564941
    6. '):' → logprob: -13.125153541564941
    7. '<|end|>' → logprob: -13.125153541564941
    8. ' and' → logprob: -14.250153541564941
    9. ',' → logprob: -14.625153541564941
    10. '<|end|>' → logprob: -14.750153541564941

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011489099124446511
    2. ':' → logprob: -7.376148700714111
    3. '<|end|>' → logprob: -8.62614917755127
    4. '       ' → logprob: -9.00114917755127
    5. ' return' → logprob: -9.25114917755127
    6. '```' → logprob: -10.50114917755127
    7. 'return' → logprob: -11.12614917755127
    8. '            
' → logprob: -11.12614917755127
    9. '<|end|>' → logprob: -11.12614917755127
    10. ':return' → logprob: -11.25114917755127

Token 66: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8619160652160645
    2. '           ' → logprob: -0.9869160652160645
    3. 'print' (adapté à ' print') → logprob: -1.6119160652160645
    4. ' return' → logprob: -5.8619160652160645
    5. '       ' → logprob: -6.3619160652160645
    6. '```' → logprob: -7.9869160652160645
    7. 'return' → logprob: -8.361915588378906
    8. ' break' → logprob: -9.111915588378906
    9. '               ' → logprob: -10.111915588378906
    10. '   ' → logprob: -10.611915588378906

Token 67: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0032623191364109516
    2. '(' → logprob: -5.753262519836426
    3. 'i' → logprob: -9.628262519836426
    4. '("' → logprob: -12.003262519836426
    5. '(val' → logprob: -12.253262519836426
    6. '()' → logprob: -13.003262519836426
    7. ' i' → logprob: -13.128262519836426
    8. '('' → logprob: -14.003262519836426
    9. ' (' → logprob: -14.253262519836426
    10. '(I' → logprob: -14.378262519836426

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2170056402683258
    2. ')' → logprob: -1.8420056104660034
    3. ' +' → logprob: -3.842005729675293
    4. ')
' → logprob: -4.217005729675293
    5. '+
' → logprob: -8.592005729675293
    6. '+)' → logprob: -9.092005729675293
    7. ' )' → logprob: -10.342005729675293
    8. ')+' → logprob: -11.217005729675293
    9. ' )
' → logprob: -11.717005729675293
    10. '   ' → logprob: -11.967005729675293

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038086410495452583
    2. ' ' → logprob: -7.875380992889404
    3. '   ' → logprob: -15.000380516052246
    4. '2' → logprob: -15.500380516052246
    5. '<|end|>' → logprob: -16.500381469726562
    6. '  ' → logprob: -17.312881469726562
    7. ')' → logprob: -18.125381469726562
    8. '+' → logprob: -18.437881469726562
    9. '```' → logprob: -18.562881469726562
    10. '0' → logprob: -18.625381469726562

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.750012397766113
    4. '   ' → logprob: -16.375011444091797
    5. '<|end|>' → logprob: -17.312511444091797
    6. '  ' → logprob: -18.000011444091797
    7. ')' → logprob: -18.187511444091797
    8. '۱' → logprob: -18.750011444091797
    9. '+' → logprob: -18.812511444091797
    10. '0' → logprob: -18.812511444091797

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007277680095285177
    2. ')
' → logprob: -5.007277488708496
    3. '           ' → logprob: -7.507277488708496
    4. ')
' → logprob: -12.507277488708496
    5. ' )' → logprob: -13.382277488708496
    6. ')return' → logprob: -13.382277488708496
    7. '       ' → logprob: -13.757277488708496
    8. '`)' → logprob: -14.007277488708496
    9. ')`' → logprob: -14.007277488708496
    10. ')`
' → logprob: -14.382277488708496

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010779452277347445
    2. '<|end|>' → logprob: -7.126078128814697
    3. '       ' → logprob: -8.751077651977539
    4. '<|end|>' → logprob: -10.376077651977539
    5. ')' → logprob: -11.001077651977539
    6. '```' → logprob: -11.376077651977539
    7. '()' → logprob: -11.501077651977539
    8. '               ' → logprob: -11.751077651977539
    9. '   ' → logprob: -11.876077651977539
    10. '\' → logprob: -12.501077651977539

Token 73: ' return' (ID: 622)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5132010579109192
    2. 'return' (adapté à ' return') → logprob: -1.0132009983062744
    3. '           ' → logprob: -3.2632009983062744
    4. ' break' → logprob: -9.888200759887695
    5. '       ' → logprob: -10.388200759887695
    6. ' return' → logprob: -11.388200759887695
    7. '```' → logprob: -12.263200759887695
    8. '   ' → logprob: -12.513200759887695
    9. '	break' → logprob: -14.263200759887695
    10. '
' → logprob: -15.388200759887695

Token 74: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6140556931495667
    2. '<|end|>' → logprob: -1.8640556335449219
    3. 'X' → logprob: -2.364055633544922
    4. ')' → logprob: -3.114055633544922
    5. '\n' → logprob: -3.489055633544922
    6. ' ' → logprob: -3.739055633544922
    7. '
' → logprob: -3.989055633544922
    8. '   ' → logprob: -4.114055633544922
    9. '```' → logprob: -4.239055633544922
    10. 'n' → logprob: -4.489055633544922

Token 75: 'main' (ID: 7731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.810688316822052
    2. '<|end|>' → logprob: -1.8106882572174072
    3. '\n' → logprob: -1.9356882572174072
    4. 'X' → logprob: -2.1856882572174072
    5. '```' → logprob: -3.0606882572174072
    6. ' ' → logprob: -3.1856882572174072
    7. ')' → logprob: -4.435688495635986
    8. '
' → logprob: -4.810688495635986
    9. '\' → logprob: -5.060688495635986
    10. 'n' → logprob: -6.060688495635986

Token 76: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007461569271981716
    2. '()' → logprob: -5.7574615478515625
    3. ')' → logprob: -5.8824615478515625
    4. '#' → logprob: -7.3824615478515625
    5. '```' → logprob: -7.6324615478515625
    6. '(
' → logprob: -9.382461547851562
    7. '<|end|>' → logprob: -9.507461547851562
    8. '\n' → logprob: -10.132461547851562
    9. ' (' → logprob: -10.382461547851562
    10. '*' → logprob: -10.882461547851562


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 28.38%
Précision adaptée (1ère position): 28.38%
Précision (top 10): 63.51%
================================================================================
