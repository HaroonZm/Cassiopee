================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
if N % 2 == 1:
    for i in range(1, M + 1):
        print(i, N - i)
else:
    ANS = []
    for i in range(1, N // 4 + 1):
        ANS.append((i, N // 2 - i))
    for i in range(1, N // 4 + 1):
        ANS.append((N // 2 + i, N + 1 - i))
    check = 0
    for a, b in ANS:
        if a != b:
            print(a, b)
            check += 1
        if check == M:
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2702905237674713
    2. ',' → logprob: -1.645290493965149
    3. ' =' → logprob: -3.1452906131744385
    4. '```' → logprob: -8.64529037475586
    5. ')' → logprob: -8.89529037475586
    6. ';' → logprob: -9.02029037475586
    7. ' ,' → logprob: -9.77029037475586
    8. '.' → logprob: -9.77029037475586
    9. '[' → logprob: -9.89529037475586
    10. '#' → logprob: -10.27029037475586

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1863357424736023
    2. 'map' → logprob: -2.061335802078247
    3. ' input' → logprob: -4.186335563659668
    4. ' ' → logprob: -4.436335563659668
    5. '10' → logprob: -4.936335563659668
    6. 'input' → logprob: -5.061335563659668
    7. '0' → logprob: -7.061335563659668
    8. ' int' → logprob: -7.811335563659668
    9. 'int' → logprob: -8.311335563659668
    10. ' list' → logprob: -8.686335563659668

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03482658416032791
    2. '```' → logprob: -3.7848265171051025
    3. '(lambda' → logprob: -5.409826755523682
    4. '(int' → logprob: -6.034826755523682
    5. '<|end|>' → logprob: -7.159826755523682
    6. '(user' → logprob: -7.534826755523682
    7. '(str' → logprob: -7.659826755523682
    8. ')' → logprob: -7.909826755523682
    9. '`' → logprob: -8.659826278686523
    10. '(input' → logprob: -8.659826278686523

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.49773603677749634
    2. '(' → logprob: -1.4977359771728516
    3. ')' → logprob: -1.8727359771728516
    4. '(user' → logprob: -4.997735977172852
    5. '```' → logprob: -6.247735977172852
    6. '(str' → logprob: -7.247735977172852
    7. ')(' → logprob: -7.247735977172852
    8. '(int' → logprob: -7.622735977172852
    9. '`)' → logprob: -7.747735977172852
    10. 'input' → logprob: -7.747735977172852

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06205194070935249
    2. ' input' → logprob: -2.812052011489868
    3. '(input' → logprob: -9.562051773071289
    4. ')' → logprob: -11.312051773071289
    5. ',input' → logprob: -13.687051773071289
    6. '[input' → logprob: -15.812051773071289
    7. '<input' → logprob: -15.937051773071289
    8. '```' → logprob: -16.06205177307129
    9. '=input' → logprob: -16.31205177307129
    10. '	input' → logprob: -17.18705177307129

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46616098284721375
    2. '()' → logprob: -1.2161610126495361
    3. '(' → logprob: -3.841161012649536
    4. '('' → logprob: -4.341160774230957
    5. ')' → logprob: -4.341160774230957
    6. '().' → logprob: -4.466160774230957
    7. '`()' → logprob: -4.966160774230957
    8. '(""))' → logprob: -6.466160774230957
    9. '());' → logprob: -6.591160774230957
    10. '()))' → logprob: -6.716160774230957

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006785232108086348
    2. 'strip' → logprob: -5.0067853927612305
    3. ')' → logprob: -10.25678539276123
    4. 'rstrip' → logprob: -10.88178539276123
    5. 'read' → logprob: -11.50678539276123
    6. ' split' → logprob: -12.25678539276123
    7. '(split' → logprob: -15.25678539276123
    8. 'decode' → logprob: -15.50678539276123
    9. 'spl' → logprob: -15.63178539276123
    10. 'replace' → logprob: -15.63178539276123

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011347364634275436
    2. '())' → logprob: -4.76134729385376
    3. '))' → logprob: -6.13634729385376
    4. '()' → logprob: -8.136347770690918
    5. '`)' → logprob: -8.636347770690918
    6. '(' → logprob: -9.761347770690918
    7. '()))' → logprob: -11.886347770690918
    8. '')' → logprob: -12.261347770690918
    9. ')`' → logprob: -12.261347770690918
    10. '>)' → logprob: -12.761347770690918

Token 11: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9520363807678223
    2. 'a' → logprob: -1.8270363807678223
    3. '#' → logprob: -2.0770363807678223
    4. 'for' → logprob: -2.3270363807678223
    5. '`' → logprob: -3.0770363807678223
    6. '```' → logprob: -3.2020363807678223
    7. ' ' → logprob: -3.7020363807678223
    8. '\' → logprob: -3.8270363807678223
    9. 'x' → logprob: -4.452036380767822
    10. ',' → logprob: -4.577036380767822

Token 12: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.11696045845746994
    2. ' ' → logprob: -2.2419605255126953
    3. ' M' → logprob: -6.241960525512695
    4. 'N' → logprob: -6.741960525512695
    5. ' not' → logprob: -7.991960525512695
    6. ' a' → logprob: -8.741960525512695
    7. ' user' → logprob: -9.241960525512695
    8. '  ' → logprob: -9.616960525512695
    9. ' ' → logprob: -9.616960525512695
    10. ''' → logprob: -9.741960525512695

Token 13: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.059392765164375305
    2. '>' → logprob: -3.0593926906585693
    3. ' <' → logprob: -5.809392929077148
    4. ' ==' → logprob: -5.934392929077148
    5. ' >=' → logprob: -6.184392929077148
    6. ' ' → logprob: -6.559392929077148
    7. ' <=' → logprob: -7.434392929077148
    8. '==' → logprob: -8.434392929077148
    9. '<' → logprob: -8.559392929077148
    10. ' !=' → logprob: -8.934392929077148

Token 14: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4667425751686096
    2. 'M' → logprob: -1.7167425155639648
    3. ' ' → logprob: -2.341742515563965
    4. ' M' → logprob: -2.341742515563965
    5. '3' → logprob: -7.341742515563965
    6. '4' → logprob: -8.716742515563965
    7. '1' → logprob: -9.966742515563965
    8. '10' → logprob: -10.091742515563965
    9. '6' → logprob: -11.091742515563965
    10. '5' → logprob: -11.341742515563965

Token 15: '2' (ID: 17)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5362097024917603
    2. '2' → logprob: -0.9112097024917603
    3. '3' → logprob: -4.911209583282471
    4. '10' → logprob: -5.661209583282471
    5. '5' → logprob: -7.161209583282471
    6. '4' → logprob: -7.661209583282471
    7. '7' → logprob: -8.286210060119629
    8. '100' → logprob: -9.286210060119629
    9. ' M' → logprob: -9.411210060119629
    10. ' ' → logprob: -9.661210060119629

Token 16: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0254354327917099
    2. ' !=' → logprob: -4.400435447692871
    3. '==' → logprob: -4.400435447692871
    4. '=' → logprob: -8.650435447692871
    5. ' =' → logprob: -8.650435447692871
    6. '!=' → logprob: -9.650435447692871
    7. ' ' → logprob: -9.775435447692871
    8. ' :' → logprob: -10.275435447692871
    9. ':' → logprob: -10.525435447692871
    10. ')' → logprob: -11.525435447692871

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2267741709947586
    2. '0' → logprob: -1.6017742156982422
    3. '1' → logprob: -6.601774215698242
    4. '=' → logprob: -14.289274215698242
    5. ')' → logprob: -14.601774215698242
    6. ' ' → logprob: -15.039274215698242
    7. '```' → logprob: -15.414274215698242
    8. '  ' → logprob: -15.664274215698242
    9. '2' → logprob: -16.289274215698242
    10. '==' → logprob: -16.476774215698242

Token 18: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009985443204641342
    2. '1' → logprob: -5.134985446929932
    3. ' ' → logprob: -5.509985446929932
    4. '2' → logprob: -13.009984970092773
    5. '```' → logprob: -16.884984970092773
    6. '  ' → logprob: -18.322484970092773
    7. ')' → logprob: -18.384984970092773
    8. '   ' → logprob: -18.384984970092773
    9. '4' → logprob: -18.572484970092773
    10. '3' → logprob: -18.884984970092773

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.117345684382599e-05
    2. ' :' → logprob: -11.125020980834961
    3. ' and' → logprob: -12.750020980834961
    4. ':
' → logprob: -13.250020980834961
    5. '):' → logprob: -14.000020980834961
    6. ':**' → logprob: -15.000020980834961
    7. 'and' → logprob: -16.00002098083496
    8. ')' → logprob: -16.50002098083496
    9. ':return' → logprob: -17.00002098083496
    10. '=' → logprob: -17.00002098083496

Token 20: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.29416605830192566
    2. 'print' → logprob: -1.669166088104248
    3. '   ' → logprob: -3.544166088104248
    4. ':' → logprob: -3.669166088104248
    5. '    ' → logprob: -5.294166088104248
    6. ' ' → logprob: -5.294166088104248
    7. ' :' → logprob: -6.919166088104248
    8. ' N' → logprob: -8.79416561126709
    9. ',' → logprob: -9.04416561126709
    10. ' for' → logprob: -9.79416561126709

Token 21: ' for' (ID: 395)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.023753756657242775
    2. 'print' → logprob: -3.7737536430358887
    3. '   ' → logprob: -8.148754119873047
    4. ' ' → logprob: -9.148754119873047
    5. ' for' → logprob: -10.398754119873047
    6. '    ' → logprob: -10.648754119873047
    7. ' p' → logprob: -10.898754119873047
    8. ' `' → logprob: -11.648754119873047
    9. ' pass' → logprob: -12.023754119873047
    10. ' N' → logprob: -12.273754119873047

Token 22: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39383089542388916
    2. ' i' → logprob: -1.1438308954238892
    3. '_' → logprob: -5.5188307762146
    4. ' _' → logprob: -6.5188307762146
    5. ' range' → logprob: -7.3938307762146
    6. 'i' → logprob: -7.7688307762146
    7. '  ' → logprob: -9.018831253051758
    8. ' N' → logprob: -9.518831253051758
    9. ' in' → logprob: -9.643831253051758
    10. ' ‌' → logprob: -10.393831253051758

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02902446687221527
    2. 'in' → logprob: -3.654024362564087
    3. ' ' → logprob: -6.029024600982666
    4. 'n' → logprob: -9.279024124145508
    5. ' i' → logprob: -10.029024124145508
    6. '  ' → logprob: -10.029024124145508
    7. '_' → logprob: -10.529024124145508
    8. 'range' → logprob: -10.529024124145508
    9. ' n' → logprob: -11.029024124145508
    10. '```' → logprob: -11.654024124145508

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.57602858543396
    2. ' range' → logprob: -0.82602858543396
    3. ' ' → logprob: -9.701028823852539
    4. '   ' → logprob: -11.701028823852539
    5. '  ' → logprob: -12.326028823852539
    6. ' ran' → logprob: -13.451028823852539
    7. 'r' → logprob: -13.451028823852539
    8. '	range' → logprob: -13.451028823852539
    9. '(range' → logprob: -13.451028823852539
    10. ' N' → logprob: -13.951028823852539

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4072537422180176
    2. '(N' → logprob: -1.1572537422180176
    3. '(M' → logprob: -3.9072537422180176
    4. ' (' → logprob: -10.53225326538086
    5. '(n' → logprob: -10.90725326538086
    6. '((' → logprob: -11.40725326538086
    7. '(i' → logprob: -11.78225326538086
    8. '()' → logprob: -13.03225326538086
    9. ' ' → logprob: -13.40725326538086
    10. '(range' → logprob: -13.53225326538086

Token 26: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2085157334804535
    2. 'M' → logprob: -1.8335157632827759
    3. '1' → logprob: -3.7085156440734863
    4. ' N' → logprob: -5.958515644073486
    5. ' M' → logprob: -7.333515644073486
    6. '0' → logprob: -8.583516120910645
    7. ' ' → logprob: -8.708516120910645
    8. '3' → logprob: -9.333516120910645
    9. '2' → logprob: -9.583516120910645
    10. '   ' → logprob: -10.458516120910645

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004107846412807703
    2. ' ,' → logprob: -5.50410795211792
    3. ',N' → logprob: -11.004107475280762
    4. ' ' → logprob: -11.504107475280762
    5. ',M' → logprob: -14.754107475280762
    6. ')' → logprob: -14.754107475280762
    7. ' )' → logprob: -15.379107475280762
    8. '1' → logprob: -15.754107475280762
    9. '   ' → logprob: -15.879107475280762
    10. '+' → logprob: -16.004108428955078

Token 28: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.28563499450683594
    2. 'N' → logprob: -1.410634994506836
    3. ' M' → logprob: -5.660634994506836
    4. ' N' → logprob: -7.035634994506836
    5. '2' → logprob: -10.410634994506836
    6. '   ' → logprob: -10.535634994506836
    7. ' ' → logprob: -10.660634994506836
    8. '10' → logprob: -10.910634994506836
    9. '3' → logprob: -12.410634994506836
    10. '  ' → logprob: -13.035634994506836

Token 29: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06451661884784698
    2. ' +' → logprob: -2.814516544342041
    3. '):' → logprob: -6.564516544342041
    4. ',' → logprob: -6.939516544342041
    5. ' ):' → logprob: -10.0645170211792
    6. ' ,' → logprob: -10.4395170211792
    7. ' ' → logprob: -10.5645170211792
    8. '-' → logprob: -11.3145170211792
    9. '    ' → logprob: -11.4395170211792
    10. '   ' → logprob: -11.6895170211792

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043036188930273056
    2. ' ' → logprob: -3.1680362224578857
    3. '2' → logprob: -10.293036460876465
    4. ' N' → logprob: -14.293036460876465
    5. '  ' → logprob: -14.543036460876465
    6. ' ' → logprob: -14.730536460876465
    7. '```' → logprob: -14.793036460876465
    8. '   ' → logprob: -15.105536460876465
    9. '3' → logprob: -15.918036460876465
    10. ')' → logprob: -16.23053550720215

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.125044822692871
    3. '2' → logprob: -12.375044822692871
    4. '(' → logprob: -15.500044822692871
    5. '   ' → logprob: -16.562545776367188
    6. 'N' → logprob: -16.937545776367188
    7. '```' → logprob: -17.187545776367188
    8. '  ' → logprob: -17.375045776367188
    9. '(N' → logprob: -17.375045776367188
    10. '１' → logprob: -18.062545776367188

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035233024507761
    2. ':' → logprob: -3.4102330207824707
    3. ')' → logprob: -6.660233020782471
    4. '):
' → logprob: -9.035233497619629
    5. ' ):' → logprob: -9.535233497619629
    6. ',' → logprob: -9.660233497619629
    7. '   ' → logprob: -10.910233497619629
    8. '+' → logprob: -12.285233497619629
    9. ':)' → logprob: -12.410233497619629
    10. ' :' → logprob: -12.410233497619629

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7620965242385864
    2. '       ' → logprob: -1.3870965242385864
    3. '    ' → logprob: -1.3870965242385864
    4. ' ' → logprob: -3.762096405029297
    5. '    
' → logprob: -6.262096405029297
    6. 'print' → logprob: -6.512096405029297
    7. '     ' → logprob: -6.762096405029297
    8. '\n' → logprob: -6.887096405029297
    9. '     
' → logprob: -6.887096405029297
    10. '<|end|>' → logprob: -7.387096405029297

Token 34: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11049818992614746
    2. ' print' → logprob: -2.4854981899261475
    3. '    ' → logprob: -4.610498428344727
    4. '   ' → logprob: -4.985498428344727
    5. '       ' → logprob: -5.985498428344727
    6. ' ' → logprob: -7.610498428344727
    7. '#' → logprob: -7.860498428344727
    8. '```' → logprob: -8.610498428344727
    9. 'if' → logprob: -8.735498428344727
    10. '        ' → logprob: -9.110498428344727

Token 35: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.795247495174408
    2. '(' → logprob: -1.1702475547790527
    3. '("' → logprob: -2.2952475547790527
    4. '("#' → logprob: -2.9202475547790527
    5. '("*' → logprob: -3.0452475547790527
    6. '('' → logprob: -4.545247554779053
    7. '('*' → logprob: -4.670247554779053
    8. '('#' → logprob: -4.920247554779053
    9. '(N' → logprob: -5.045247554779053
    10. '((' → logprob: -7.045247554779053

Token 36: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01452790666371584
    2. ',' → logprob: -4.389527797698975
    3. '*' → logprob: -7.139527797698975
    4. '))' → logprob: -7.764527797698975
    5. ' )' → logprob: -8.139528274536133
    6. '   ' → logprob: -8.889528274536133
    7. ' ' → logprob: -9.889528274536133
    8. ' ,' → logprob: -9.889528274536133
    9. '*)' → logprob: -10.514528274536133
    10. '**' → logprob: -10.639528274536133

Token 37: ' N' (ID: 478)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.037231747061014175
    2. ' end' → logprob: -4.787231922149658
    3. ' ' → logprob: -4.912231922149658
    4. '"' → logprob: -5.037231922149658
    5. ')' → logprob: -5.037231922149658
    6. 'i' → logprob: -6.787231922149658
    7. 'N' → logprob: -7.037231922149658
    8. '  ' → logprob: -7.162231922149658
    9. ''' → logprob: -7.287231922149658
    10. '0' → logprob: -7.412231922149658

Token 38: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6047214865684509
    2. ')' → logprob: -0.8547214865684509
    3. '-' → logprob: -4.979721546173096
    4. '*' → logprob: -5.104721546173096
    5. ' ,' → logprob: -5.354721546173096
    6. ',end' → logprob: -5.729721546173096
    7. ' )' → logprob: -6.354721546173096
    8. '*i' → logprob: -7.104721546173096
    9. '   ' → logprob: -7.354721546173096
    10. ' *' → logprob: -7.354721546173096

Token 39: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2234477698802948
    2. '1' → logprob: -1.9734477996826172
    3. ' i' → logprob: -2.973447799682617
    4. '2' → logprob: -4.973447799682617
    5. ' ' → logprob: -6.598447799682617
    6. ')' → logprob: -7.598447799682617
    7. '(i' → logprob: -7.848447799682617
    8. '+' → logprob: -8.598447799682617
    9. ' )' → logprob: -9.098447799682617
    10. ' +' → logprob: -9.473447799682617

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014585316239390522
    2. ',' → logprob: -9.37514591217041
    3. '))' → logprob: -10.25014591217041
    4. '+' → logprob: -11.62514591217041
    5. '),' → logprob: -12.25014591217041
    6. ' )' → logprob: -13.00014591217041
    7. ')
' → logprob: -13.12514591217041
    8. '')' → logprob: -13.62514591217041
    9. '   ' → logprob: -13.75014591217041
    10. ',)' → logprob: -14.12514591217041

Token 41: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.268254896393046e-05
    2. ':
' → logprob: -9.500082969665527
    3. ' :' → logprob: -12.125082969665527
    4. '   ' → logprob: -13.375082969665527
    5. '):' → logprob: -15.750082969665527
    6. ':**' → logprob: -15.875082969665527
    7. ':

' → logprob: -16.50008201599121
    8. ':
' → logprob: -16.75008201599121
    9. '():' → logprob: -17.00008201599121
    10. ':def' → logprob: -17.12508201599121

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003787184541579336
    2. '```' → logprob: -8.375378608703613
    3. ' for' → logprob: -9.375378608703613
    4. '    
' → logprob: -10.625378608703613
    5. 'print' → logprob: -11.625378608703613
    6. ' print' → logprob: -12.000378608703613
    7. '   ' → logprob: -12.125378608703613
    8. '[' → logprob: -12.750378608703613
    9. '       ' → logprob: -12.750378608703613
    10. 'for' → logprob: -13.000378608703613

Token 44: ' AN' (ID: 3473)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5277117490768433
    2. '   ' → logprob: -1.1527117490768433
    3. 'for' → logprob: -2.402711868286133
    4. '```' → logprob: -6.527711868286133
    5. ' print' → logprob: -6.777711868286133
    6. 'print' → logprob: -7.027711868286133
    7. '    ' → logprob: -8.777711868286133
    8. ' pass' → logprob: -10.152711868286133
    9. ' ```' → logprob: -10.402711868286133
    10. '       ' → logprob: -11.027711868286133

Token 45: 'S' (ID: 50)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9921619296073914
    2. 'S' → logprob: -1.6171619892120361
    3. ' =' → logprob: -1.8671619892120361
    4. 'T' → logprob: -2.742161989212036
    5. '[' → logprob: -2.867161989212036
    6. '=' → logprob: -3.367161989212036
    7. 'd' → logprob: -3.617161989212036
    8. 'swer' → logprob: -3.742161989212036
    9. 'D' → logprob: -4.367161750793457
    10. ' ' → logprob: -5.117161750793457

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3206062614917755
    2. '=' → logprob: -1.4456062316894531
    3. ':' → logprob: -3.820606231689453
    4. '[' → logprob: -5.445606231689453
    5. ' ' → logprob: -5.570606231689453
    6. '(' → logprob: -5.570606231689453
    7. '[:]' → logprob: -6.570606231689453
    8. '_' → logprob: -6.820606231689453
    9. 's' → logprob: -7.570606231689453
    10. ')' → logprob: -7.570606231689453

Token 47: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2235468029975891
    2. ' []' → logprob: -1.9735467433929443
    3. '[' → logprob: -3.9735467433929443
    4. '[(' → logprob: -4.723546981811523
    5. '[N' → logprob: -4.723546981811523
    6. '0' → logprob: -4.973546981811523
    7. ' [' → logprob: -5.473546981811523
    8. 'N' → logprob: -6.098546981811523
    9. ' [(' → logprob: -6.098546981811523
    10. ' N' → logprob: -6.723546981811523

Token 48: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5316160321235657
    2. '   ' → logprob: -1.281615972518921
    3. ' for' → logprob: -2.531615972518921
    4. '    
' → logprob: -4.4066162109375
    5. ' 
' → logprob: -4.7816162109375
    6. '
' → logprob: -4.7816162109375
    7. '<|end|>' → logprob: -4.7816162109375
    8. '\' → logprob: -5.0316162109375
    9. '```' → logprob: -5.2816162109375
    10. ' ' → logprob: -6.4066162109375

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0210346058011055
    2. ' for' → logprob: -3.8960347175598145
    3. '   ' → logprob: -7.6460347175598145
    4. '```' → logprob: -12.021034240722656
    5. '	for' → logprob: -12.521034240722656
    6. ' ' → logprob: -12.896034240722656
    7. '    ' → logprob: -14.146034240722656
    8. 'i' → logprob: -14.646034240722656
    9. '[' → logprob: -15.146034240722656
    10. '    
' → logprob: -15.646034240722656

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39846909046173096
    2. 'i' → logprob: -1.148469090461731
    3. '_' → logprob: -5.023468971252441
    4. ' j' → logprob: -6.273468971252441
    5. ' _' → logprob: -6.398468971252441
    6. 'j' → logprob: -7.273468971252441
    7. '_i' → logprob: -7.398468971252441
    8. ' ' → logprob: -10.148468971252441
    9. '	i' → logprob: -11.398468971252441
    10. '_j' → logprob: -11.523468971252441

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04921932891011238
    2. 'in' → logprob: -3.0492193698883057
    3. ' ' → logprob: -7.424219131469727
    4. 'n' → logprob: -11.549219131469727
    5. '  ' → logprob: -12.049219131469727
    6. '	in' → logprob: -12.549219131469727
    7. ',' → logprob: -13.049219131469727
    8. '_' → logprob: -13.424219131469727
    9. ' i' → logprob: -13.424219131469727
    10. '1' → logprob: -13.549219131469727

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038127098232507706
    2. 'range' → logprob: -3.2881271839141846
    3. ' ' → logprob: -10.038126945495605
    4. '(range' → logprob: -11.038126945495605
    5. '1' → logprob: -11.913126945495605
    6. '	range' → logprob: -12.163126945495605
    7. ' xrange' → logprob: -12.288126945495605
    8. '0' → logprob: -12.788126945495605
    9. '(' → logprob: -13.538126945495605
    10. '<|end|>' → logprob: -13.913126945495605

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04867525398731232
    2. '(M' → logprob: -3.048675298690796
    3. '(N' → logprob: -9.673675537109375
    4. '1' → logprob: -11.173675537109375
    5. ' (' → logprob: -12.298675537109375
    6. ' M' → logprob: -13.298675537109375
    7. ' ' → logprob: -13.548675537109375
    8. '(i' → logprob: -14.298675537109375
    9. '((' → logprob: -14.548675537109375
    10. '(m' → logprob: -14.548675537109375

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4938170611858368
    2. 'M' → logprob: -0.9938170909881592
    3. '0' → logprob: -4.61881685256958
    4. 'N' → logprob: -5.24381685256958
    5. ' M' → logprob: -5.74381685256958
    6. ' ' → logprob: -7.61881685256958
    7. '(' → logprob: -8.368817329406738
    8. '2' → logprob: -8.368817329406738
    9. '(M' → logprob: -9.368817329406738
    10. '   ' → logprob: -9.993817329406738

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007698441040702164
    2. ' ,' → logprob: -7.25076961517334
    3. ',M' → logprob: -10.25076961517334
    4. ' M' → logprob: -12.37576961517334
    5. '   ' → logprob: -12.62576961517334
    6. ')' → logprob: -12.75076961517334
    7. ',N' → logprob: -13.12576961517334
    8. 'M' → logprob: -13.25076961517334
    9. ' ' → logprob: -13.25076961517334
    10. '1' → logprob: -13.62576961517334

Token 56: ' N' (ID: 478)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.410604327917099
    2. 'M' → logprob: -1.1606043577194214
    3. ' N' → logprob: -4.410604476928711
    4. 'N' → logprob: -4.535604476928711
    5. '   ' → logprob: -8.535604476928711
    6. ' (' → logprob: -9.160604476928711
    7. '(' → logprob: -9.160604476928711
    8. ' ' → logprob: -9.660604476928711
    9. '(M' → logprob: -10.035604476928711
    10. '    ' → logprob: -10.660604476928711

Token 57: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7195188403129578
    2. ' +' → logprob: -0.7195188403129578
    3. '//' → logprob: -4.469518661499023
    4. ' //' → logprob: -4.594518661499023
    5. '):' → logprob: -6.594518661499023
    6. ' ' → logprob: -7.094518661499023
    7. ' -' → logprob: -7.219518661499023
    8. '-' → logprob: -7.344518661499023
    9. '   ' → logprob: -7.969518661499023
    10. '):
' → logprob: -8.344518661499023

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005643398035317659
    2. ' ' → logprob: -5.255643367767334
    3. '4' → logprob: -8.255643844604492
    4. '3' → logprob: -9.255643844604492
    5. '   ' → logprob: -10.505643844604492
    6. '  ' → logprob: -12.130643844604492
    7. 'M' → logprob: -12.255643844604492
    8. '1' → logprob: -12.318143844604492
    9. '6' → logprob: -12.505643844604492
    10. ' M' → logprob: -14.130643844604492

Token 59: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006934931734576821
    2. '4' → logprob: -7.375693321228027
    3. ' ' → logprob: -10.000693321228027
    4. '3' → logprob: -11.500693321228027
    5. '   ' → logprob: -12.375693321228027
    6. '6' → logprob: -13.438193321228027
    7. '1' → logprob: -13.688193321228027
    8. '  ' → logprob: -14.500693321228027
    9. '8' → logprob: -14.813193321228027
    10. '/' → logprob: -15.063193321228027

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6903834939002991
    2. ' +' → logprob: -0.8153834939002991
    3. '):' → logprob: -2.9403834342956543
    4. ' ):' → logprob: -6.190383434295654
    5. '):
' → logprob: -7.190383434295654
    6. '-' → logprob: -8.940383911132812
    7. ':' → logprob: -9.315383911132812
    8. '   ' → logprob: -9.440383911132812
    9. ' ' → logprob: -9.815383911132812
    10. ' -' → logprob: -10.440383911132812

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020665207877755165
    2. ' ' → logprob: -3.895665168762207
    3. '2' → logprob: -9.020665168762207
    4. '  ' → logprob: -14.520665168762207
    5. '3' → logprob: -14.645665168762207
    6. ')' → logprob: -15.020665168762207
    7. '   ' → logprob: -15.395665168762207
    8. ' M' → logprob: -15.520665168762207
    9. '<|end|>' → logprob: -15.958165168762207
    10. '    ' → logprob: -16.145666122436523

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001495484757469967
    2. ' ' → logprob: -8.875149726867676
    3. '2' → logprob: -11.625149726867676
    4. '   ' → logprob: -15.125149726867676
    5. '+' → logprob: -16.00014877319336
    6. '  ' → logprob: -16.25014877319336
    7. '3' → logprob: -17.00014877319336
    8. '    ' → logprob: -17.06264877319336
    9. ')' → logprob: -17.12514877319336
    10. '```' → logprob: -17.62514877319336

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07277089357376099
    2. ':' → logprob: -2.697770833969116
    3. '):
' → logprob: -6.322771072387695
    4. ')' → logprob: -7.322771072387695
    5. ' ):' → logprob: -8.197771072387695
    6. '   ' → logprob: -10.197771072387695
    7. ' :' → logprob: -10.572771072387695
    8. ':
' → logprob: -11.822771072387695
    9. ',' → logprob: -12.072771072387695
    10. ' ' → logprob: -12.572771072387695

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08223436772823334
    2. '    ' → logprob: -3.4572343826293945
    3. '   ' → logprob: -3.8322343826293945
    4. ' ' → logprob: -4.0822343826293945
    5. '<|end|>' → logprob: -5.3322343826293945
    6. '        
' → logprob: -6.8322343826293945
    7. '    
' → logprob: -6.9572343826293945
    8. '        ' → logprob: -7.4572343826293945
    9. ' 
' → logprob: -8.582234382629395
    10. ')' → logprob: -8.707234382629395

Token 65: ' AN' (ID: 3473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.076663851737976
    2. ' AN' → logprob: -1.076663851737976
    3. '    ' → logprob: -1.451663851737976
    4. '   ' → logprob: -2.8266639709472656
    5. ' for' → logprob: -4.826663970947266
    6. '<|end|>' → logprob: -5.326663970947266
    7. '       ' → logprob: -5.951663970947266
    8. '        ' → logprob: -6.576663970947266
    9. 'AN' (adapté à ' AN') → logprob: -6.826663970947266
    10. 'ANS' → logprob: -6.951663970947266

Token 66: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.906711546937004e-05
    2. '.append' → logprob: -10.000048637390137
    3. ' S' → logprob: -13.375048637390137
    4. '=' → logprob: -15.250048637390137
    5. '	S' → logprob: -15.250048637390137
    6. 'append' → logprob: -15.250048637390137
    7. '  ' → logprob: -15.625048637390137
    8. ' ' → logprob: -15.875048637390137
    9. ' =' → logprob: -16.000049591064453
    10. 'Ｓ' → logprob: -16.250049591064453

Token 67: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20190024375915527
    2. '.' → logprob: -1.9519002437591553
    3. '.extend' → logprob: -3.2019002437591553
    4. ' .' → logprob: -9.201900482177734
    5. ' +=' → logprob: -11.576900482177734
    6. '.app' → logprob: -11.951900482177734
    7. '.ap' → logprob: -11.951900482177734
    8. 'append' → logprob: -12.326900482177734
    9. ' ' → logprob: -13.201900482177734
    10. '.add' → logprob: -13.326900482177734

Token 68: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.11142832040786743
    2. '(' → logprob: -2.3614282608032227
    3. '(i' → logprob: -4.986428260803223
    4. '([' → logprob: -5.486428260803223
    5. '(('' → logprob: -9.861428260803223
    6. '('' → logprob: -10.111428260803223
    7. '(([' → logprob: -10.986428260803223
    8. '(((' → logprob: -11.236428260803223
    9. '("("' → logprob: -11.611428260803223
    10. '(
' → logprob: -11.611428260803223

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.053367890417575836
    2. '4' → logprob: -3.178367853164673
    3. ' i' → logprob: -5.553368091583252
    4. '(' → logprob: -5.928368091583252
    5. '2' → logprob: -5.928368091583252
    6. '1' → logprob: -7.553368091583252
    7. ' ' → logprob: -8.303367614746094
    8. '   ' → logprob: -8.928367614746094
    9. '(i' → logprob: -9.428367614746094
    10. ')' → logprob: -9.928367614746094

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044030360877513885
    2. '*' → logprob: -3.6690304279327393
    3. ' ,' → logprob: -4.41903018951416
    4. ' *' → logprob: -5.41903018951416
    5. '*i' → logprob: -7.79403018951416
    6. ',i' → logprob: -8.54403018951416
    7. '*,' → logprob: -8.79403018951416
    8. ')' → logprob: -9.16903018951416
    9. '1' → logprob: -10.29403018951416
    10. ' ' → logprob: -10.41903018951416

Token 71: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0132420063018799
    2. '4' → logprob: -1.1382420063018799
    3. ' i' → logprob: -1.6382420063018799
    4. '2' → logprob: -3.01324200630188
    5. ' ' → logprob: -3.13824200630188
    6. 'M' → logprob: -4.388241767883301
    7. ' M' → logprob: -4.513241767883301
    8. 'N' → logprob: -6.263241767883301
    9. ')' → logprob: -6.638241767883301
    10. ' N' → logprob: -7.388241767883301

Token 72: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48486828804016113
    2. '//' → logprob: -2.109868288040161
    3. '-' → logprob: -2.234868288040161
    4. ' //' → logprob: -2.484868288040161
    5. ' ' → logprob: -2.734868288040161
    6. '-i' → logprob: -5.734868049621582
    7. ' i' → logprob: -6.859868049621582
    8. 'i' → logprob: -6.859868049621582
    9. '   ' → logprob: -7.734868049621582
    10. '  ' → logprob: -7.984868049621582

Token 73: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3936848044395447
    2. '4' → logprob: -1.1436848640441895
    3. ' ' → logprob: -5.0186848640441895
    4. '   ' → logprob: -9.893684387207031
    5. ')' → logprob: -10.518684387207031
    6. '  ' → logprob: -10.643684387207031
    7. '/' → logprob: -11.081184387207031
    8. '3' → logprob: -11.581184387207031
    9. '1' → logprob: -12.018684387207031
    10. 'i' → logprob: -12.268684387207031

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5767806172370911
    2. '4' → logprob: -0.8267806172370911
    3. ' ' → logprob: -7.201780796051025
    4. '3' → logprob: -10.826780319213867
    5. '  ' → logprob: -11.076780319213867
    6. '   ' → logprob: -11.139280319213867
    7. 'i' → logprob: -11.889280319213867
    8. ')' → logprob: -12.389280319213867
    9. '/' → logprob: -12.514280319213867
    10. '1' → logprob: -12.639280319213867

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2965470850467682
    2. '-' → logprob: -1.6715470552444458
    3. '+' → logprob: -3.5465471744537354
    4. ' +' → logprob: -3.6715471744537354
    5. '))' → logprob: -4.546546936035156
    6. ' ' → logprob: -6.921546936035156
    7. ',' → logprob: -7.546546936035156
    8. ')' → logprob: -7.671546936035156
    9. '-i' → logprob: -7.921546936035156
    10. '+i' → logprob: -8.046546936035156

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6701707243919373
    2. '2' → logprob: -0.9201707243919373
    3. ' i' → logprob: -2.920170783996582
    4. ' ' → logprob: -3.795170783996582
    5. '(' → logprob: -4.670170783996582
    6. ' (' → logprob: -5.795170783996582
    7. 'N' → logprob: -8.170170783996582
    8. '+' → logprob: -8.420170783996582
    9. '(i' → logprob: -9.045170783996582
    10. ' +' → logprob: -9.295170783996582

Token 77: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0016664924332872033
    2. '))
' → logprob: -6.75166654586792
    3. ' ))' → logprob: -8.126666069030762
    4. ')' → logprob: -9.001666069030762
    5. '+' → logprob: -10.126666069030762
    6. ',' → logprob: -11.876666069030762
    7. '))

' → logprob: -12.126666069030762
    8. ' ' → logprob: -12.251666069030762
    9. '   ' → logprob: -12.376666069030762
    10. ')))' → logprob: -12.751666069030762

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18147720396518707
    2. 'i' → logprob: -1.8064771890640259
    3. ' j' → logprob: -6.806477069854736
    4. 'j' → logprob: -7.681477069854736
    5. ' ' → logprob: -9.681477546691895
    6. 'M' → logprob: -11.368977546691895
    7. '_i' → logprob: -11.493977546691895
    8. 'N' → logprob: -11.556477546691895
    9. '	i' → logprob: -11.743977546691895
    10. 'I' → logprob: -12.056477546691895

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07062170654535294
    2. 'in' → logprob: -2.6956217288970947
    3. ' ' → logprob: -8.195621490478516
    4. '   ' → logprob: -8.820621490478516
    5. '  ' → logprob: -9.070621490478516
    6. '    ' → logprob: -9.820621490478516
    7. '1' → logprob: -11.195621490478516
    8. 'In' → logprob: -11.320621490478516
    9. '```' → logprob: -11.570621490478516
    10. 'range' → logprob: -11.695621490478516

Token 82: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01275402121245861
    2. 'range' → logprob: -4.387753963470459
    3. ' ' → logprob: -8.887754440307617
    4. '(range' → logprob: -9.762754440307617
    5. ' N' → logprob: -11.637754440307617
    6. '1' → logprob: -11.637754440307617
    7. '(N' → logprob: -12.012754440307617
    8. 'N' → logprob: -12.512754440307617
    9. ' in' → logprob: -12.512754440307617
    10. '  ' → logprob: -12.950254440307617

Token 83: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.42884451150894165
    2. '(' → logprob: -1.0538444519042969
    3. '(M' → logprob: -9.803844451904297
    4. '((' → logprob: -9.803844451904297
    5. ' (' → logprob: -11.803844451904297
    6. '1' → logprob: -11.803844451904297
    7. '(n' → logprob: -12.178844451904297
    8. ' ' → logprob: -12.678844451904297
    9. '(A' → logprob: -12.803844451904297
    10. '(-' → logprob: -13.678844451904297

Token 84: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5282250046730042
    2. '1' → logprob: -0.9032250046730042
    3. ' N' → logprob: -6.028224945068359
    4. ' ' → logprob: -6.403224945068359
    5. '(N' → logprob: -7.903224945068359
    6. '(' → logprob: -8.52822494506836
    7. '0' → logprob: -8.65322494506836
    8. 'M' → logprob: -10.02822494506836
    9. '   ' → logprob: -10.15322494506836
    10. '-N' → logprob: -10.40322494506836

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012689977302215993
    2. ' ,' → logprob: -9.500126838684082
    3. ',N' → logprob: -10.000126838684082
    4. ',M' → logprob: -12.625126838684082
    5. ',n' → logprob: -13.750126838684082
    6. '1' → logprob: -14.750126838684082
    7. '(N' → logprob: -15.000126838684082
    8. 'N' → logprob: -15.625126838684082
    9. '2' → logprob: -16.2501277923584
    10. ',i' → logprob: -16.3126277923584

Token 86: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.035762492567300797
    2. 'M' → logprob: -3.4107625484466553
    3. ' N' → logprob: -6.535762310028076
    4. '(N' → logprob: -8.035762786865234
    5. ' M' → logprob: -8.910762786865234
    6. '(' → logprob: -9.035762786865234
    7. '(M' → logprob: -10.035762786865234
    8. ' (' → logprob: -11.035762786865234
    9. ' ' → logprob: -11.160762786865234
    10. '   ' → logprob: -12.660762786865234

Token 87: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02492000348865986
    2. ' //' → logprob: -3.7749199867248535
    3. '2' → logprob: -7.3999199867248535
    4. '4' → logprob: -7.6499199867248535
    5. ' ' → logprob: -8.649920463562012
    6. '```' → logprob: -9.399920463562012
    7. '/' → logprob: -9.524920463562012
    8. '`' → logprob: -10.024920463562012
    9. '   ' → logprob: -10.399920463562012
    10. '1' → logprob: -10.524920463562012

Token 88: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00765738170593977
    2. '2' → logprob: -5.257657527923584
    3. ' ' → logprob: -6.132657527923584
    4. '/' → logprob: -9.132657051086426
    5. '8' → logprob: -9.382657051086426
    6. '<|end|>' → logprob: -11.195157051086426
    7. '  ' → logprob: -11.570157051086426
    8. '   ' → logprob: -12.007657051086426
    9. ' /' → logprob: -12.695157051086426
    10. '{' → logprob: -12.820157051086426

Token 89: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003705300623551011
    2. '2' → logprob: -5.7537055015563965
    3. ' ' → logprob: -7.6287055015563965
    4. '8' → logprob: -11.253705024719238
    5. '/' → logprob: -11.503705024719238
    6. '{' → logprob: -12.691205024719238
    7. '  ' → logprob: -12.753705024719238
    8. '   ' → logprob: -12.816205024719238
    9. '3' → logprob: -13.941205024719238
    10. '<|end|>' → logprob: -14.128705024719238

Token 90: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11295253038406372
    2. '+' → logprob: -2.237952470779419
    3. ' -' → logprob: -9.73795223236084
    4. '-' → logprob: -10.73795223236084
    5. ' ' → logprob: -10.73795223236084
    6. ' +
' → logprob: -12.11295223236084
    7. ')' → logprob: -13.11295223236084
    8. '<|end|>' → logprob: -13.17545223236084
    9. '   ' → logprob: -13.23795223236084
    10. '):' → logprob: -13.36295223236084

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03832581639289856
    2. ' ' → logprob: -3.288325786590576
    3. '2' → logprob: -8.788326263427734
    4. ' +' → logprob: -9.788326263427734
    5. '+' → logprob: -10.038326263427734
    6. 'i' → logprob: -11.538326263427734
    7. '<|end|>' → logprob: -11.788326263427734
    8. ')' → logprob: -12.288326263427734
    9. ' i' → logprob: -12.788326263427734
    10. '  ' → logprob: -13.663326263427734

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.041768160182983e-05
    2. ' ' → logprob: -9.750080108642578
    3. '2' → logprob: -11.000080108642578
    4. '+' → logprob: -12.875080108642578
    5. 'i' → logprob: -13.750080108642578
    6. ' +' → logprob: -15.000080108642578
    7. ')' → logprob: -15.250080108642578
    8. '   ' → logprob: -15.500080108642578
    9. '```' → logprob: -16.000080108642578
    10. '' → logprob: -16.687580108642578

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0775243416428566
    2. '):
' → logprob: -2.827524423599243
    3. ':' → logprob: -4.202524185180664
    4. '+' → logprob: -8.827524185180664
    5. ')' → logprob: -9.077524185180664
    6. ' ):' → logprob: -9.702524185180664
    7. '   ' → logprob: -10.327524185180664
    8. '       ' → logprob: -10.452524185180664
    9. '):
' → logprob: -10.577524185180664
    10. ':
' → logprob: -11.077524185180664

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31451961398124695
    2. '   ' → logprob: -1.3145196437835693
    3. ':' → logprob: -7.68951940536499
    4. ' AN' → logprob: -8.814519882202148
    5. ',' → logprob: -9.189519882202148
    6. '(' → logprob: -9.189519882202148
    7. ' ' → logprob: -9.814519882202148
    8. '	' → logprob: -10.189519882202148
    9. '```' → logprob: -10.189519882202148
    10. '      ' → logprob: -10.314519882202148

Token 95: ' AN' (ID: 3473)
  Prédit: ' AN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AN' → logprob: -1.025356650352478
    2. '   ' → logprob: -1.400356650352478
    3. 'ANS' → logprob: -1.400356650352478
    4. 'AN' (adapté à ' AN') → logprob: -2.0253567695617676
    5. 'print' → logprob: -4.900356769561768
    6. '       ' → logprob: -5.150356769561768
    7. ' ' → logprob: -6.900356769561768
    8. ' print' → logprob: -6.900356769561768
    9. '           ' → logprob: -7.525356769561768
    10. '  ' → logprob: -8.90035629272461

Token 96: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' S' → logprob: -16.375
    4. 'SOR' → logprob: -17.5
    5. 'Ѕ' → logprob: -18.0
    6. '   ' → logprob: -18.0
    7. 'ANS' → logprob: -18.75
    8. '<|end|>' → logprob: -18.75
    9. '	S' → logprob: -19.0
    10. 'SR' → logprob: -19.25

Token 97: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.025168681517243385
    2. '.extend' → logprob: -3.7751686573028564
    3. '.' → logprob: -6.5251688957214355
    4. '.pop' → logprob: -8.400168418884277
    5. '.reverse' → logprob: -8.900168418884277
    6. '.remove' → logprob: -10.150168418884277
    7. '.sort' → logprob: -11.150168418884277
    8. '.setdefault' → logprob: -11.150168418884277
    9. '.ap' → logprob: -12.775168418884277
    10. '.push' → logprob: -12.775168418884277

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012110683601349592
    2. '(((' → logprob: -7.376211166381836
    3. '(' → logprob: -8.001211166381836
    4. '((-' → logprob: -8.501211166381836
    5. '(('' → logprob: -11.001211166381836
    6. '(N' → logprob: -11.626211166381836
    7. ' ((' → logprob: -11.626211166381836
    8. '(("' → logprob: -12.751211166381836
    9. '((((' → logprob: -12.876211166381836
    10. ' ' → logprob: -13.751211166381836

Token 99: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2264901101589203
    2. '(N' → logprob: -1.7264901399612427
    3. '(' → logprob: -4.476490020751953
    4. '(i' → logprob: -5.476490020751953
    5. 'i' → logprob: -6.101490020751953
    6. 'M' → logprob: -6.351490020751953
    7. '(M' → logprob: -6.351490020751953
    8. ' N' → logprob: -7.101490020751953
    9. '-N' → logprob: -7.101490020751953
    10. '(-' → logprob: -7.476490020751953

Token 100: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6937165856361389
    2. ' //' → logprob: -0.6937165856361389
    3. ' ' → logprob: -7.818716526031494
    4. '   ' → logprob: -10.443717002868652
    5. '4' → logprob: -10.568717002868652
    6. '#' → logprob: -10.818717002868652
    7. '2' → logprob: -10.818717002868652
    8. '`' → logprob: -11.318717002868652
    9. ' #' → logprob: -11.568717002868652
    10. ' -' → logprob: -12.068717002868652

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28328460454940796
    2. '4' → logprob: -1.4082846641540527
    3. ' ' → logprob: -6.158284664154053
    4. '  ' → logprob: -12.033284187316895
    5. '   ' → logprob: -12.033284187316895
    6. '1' → logprob: -12.908284187316895
    7. ')' → logprob: -14.533284187316895
    8. '3' → logprob: -15.908284187316895
    9. '    ' → logprob: -16.22078514099121
    10. '.' → logprob: -16.22078514099121

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6329197883605957
    2. '4' → logprob: -0.7579197883605957
    3. ' ' → logprob: -8.257919311523438
    4. '1' → logprob: -9.882919311523438
    5. '  ' → logprob: -12.757919311523438
    6. '   ' → logprob: -12.882919311523438
    7. '/' → logprob: -14.757919311523438
    8. '-' → logprob: -14.820419311523438
    9. '```' → logprob: -14.820419311523438
    10. ')' → logprob: -14.882919311523438

Token 103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7842371463775635
    2. ' -' → logprob: -1.1592371463775635
    3. '+' → logprob: -1.7842371463775635
    4. '-' → logprob: -2.9092371463775635
    5. ' ' → logprob: -5.534236907958984
    6. '+i' → logprob: -6.659236907958984
    7. ',' → logprob: -7.284236907958984
    8. ' //' → logprob: -7.409236907958984
    9. '//' → logprob: -7.909236907958984
    10. ' ,' → logprob: -9.159236907958984

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023369524569716305
    2. ' i' → logprob: -8.37523365020752
    3. '1' → logprob: -12.87523365020752
    4. '2' → logprob: -15.50023365020752
    5. ' ' → logprob: -16.625234603881836
    6. '_i' → logprob: -17.000234603881836
    7. '	i' → logprob: -17.125234603881836
    8. 'N' → logprob: -17.250234603881836
    9. '   ' → logprob: -17.500234603881836
    10. '4' → logprob: -17.750234603881836

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00090407655807212
    2. ' ,' → logprob: -7.125904083251953
    3. ',N' → logprob: -10.125904083251953
    4. ',i' → logprob: -10.750904083251953
    5. '),' → logprob: -11.375904083251953
    6. ',
' → logprob: -11.750904083251953
    7. ',n' → logprob: -12.375904083251953
    8. '-' → logprob: -12.625904083251953
    9. '‌,' → logprob: -12.875904083251953
    10. ')' → logprob: -13.125904083251953

Token 106: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018783530220389366
    2. ' N' → logprob: -4.5187835693359375
    3. '3' → logprob: -5.2687835693359375
    4. '(N' → logprob: -6.7687835693359375
    5. ' ' → logprob: -8.143783569335938
    6. ' (' → logprob: -8.393783569335938
    7. 'i' → logprob: -8.393783569335938
    8. '(' → logprob: -8.518783569335938
    9. 'M' → logprob: -8.768783569335938
    10. '2' → logprob: -9.393783569335938

Token 107: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.22771558165550232
    2. '//' → logprob: -1.6027156114578247
    3. ' ' → logprob: -6.602715492248535
    4. ' -' → logprob: -7.977715492248535
    5. '`' → logprob: -9.352715492248535
    6. '   ' → logprob: -9.477715492248535
    7. '-' → logprob: -9.477715492248535
    8. '4' → logprob: -9.602715492248535
    9. '  ' → logprob: -9.602715492248535
    10. ')' → logprob: -9.727715492248535

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22489525377750397
    2. '//' → logprob: -2.8498952388763428
    3. ' ' → logprob: -2.9748952388763428
    4. '/' → logprob: -3.4748952388763428
    5. ' //' → logprob: -3.8498952388763428
    6. 'i' → logprob: -4.099895477294922
    7. ' i' → logprob: -4.224895477294922
    8. '   ' → logprob: -5.599895477294922
    9. ' -' → logprob: -6.099895477294922
    10. ' /' → logprob: -6.474895477294922

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03014221601188183
    2. ' ' → logprob: -3.905142307281494
    3. 'i' → logprob: -5.030142307281494
    4. ' i' → logprob: -6.280142307281494
    5. '2' → logprob: -8.030141830444336
    6. ' -' → logprob: -8.155141830444336
    7. '   ' → logprob: -8.530141830444336
    8. '-i' → logprob: -9.405141830444336
    9. '4' → logprob: -9.655141830444336
    10. '  ' → logprob: -10.280141830444336

Token 110: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25419360399246216
    2. '-' → logprob: -1.5041935443878174
    3. '//' → logprob: -7.0041937828063965
    4. ' //' → logprob: -7.6291937828063965
    5. ' ' → logprob: -7.8791937828063965
    6. ')' → logprob: -7.8791937828063965
    7. '`' → logprob: -10.254193305969238
    8. ',' → logprob: -11.004193305969238
    9. '```' → logprob: -11.504193305969238
    10. '+' → logprob: -11.754193305969238

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07866502553224564
    2. ' i' → logprob: -2.703665018081665
    3. '(N' → logprob: -5.578665256500244
    4. ' (' → logprob: -5.703665256500244
    5. '(i' → logprob: -7.828665256500244
    6. 'N' → logprob: -8.078664779663086
    7. '   ' → logprob: -8.328664779663086
    8. '2' → logprob: -8.453664779663086
    9. ' ' → logprob: -8.953664779663086
    10. '(' → logprob: -8.953664779663086

Token 112: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008830712176859379
    2. ')' → logprob: -4.758830547332764
    3. '))
' → logprob: -8.508831024169922
    4. ' ))' → logprob: -12.133831024169922
    5. ')))' → logprob: -12.633831024169922
    6. '   ' → logprob: -13.133831024169922
    7. ' ' → logprob: -14.008831024169922
    8. ')
' → logprob: -14.008831024169922
    9. '))

' → logprob: -15.258831024169922
    10. '))
' → logprob: -15.258831024169922

Token 113: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15122005343437195
    2. '
' → logprob: -2.7762200832366943
    3. ' for' → logprob: -3.1512200832366943
    4. '<|end|>' → logprob: -4.026219844818115
    5. '   ' → logprob: -5.276219844818115
    6. '\n' → logprob: -5.401219844818115
    7. '```' → logprob: -5.901219844818115
    8. '[' → logprob: -6.776219844818115
    9. ')' → logprob: -7.026219844818115
    10. '    
' → logprob: -7.526219844818115

Token 114: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007018702570348978
    2. ' for' → logprob: -5.132018566131592
    3. 'print' → logprob: -7.132018566131592
    4. 'ANS' → logprob: -8.63201904296875
    5. '   ' → logprob: -9.50701904296875
    6. ' AN' → logprob: -11.38201904296875
    7. 'AN' → logprob: -12.00701904296875
    8. '```' → logprob: -12.00701904296875
    9. '
' → logprob: -12.63201904296875
    10. '<|end|>' → logprob: -13.38201904296875

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.261505663394928
    2. '=' → logprob: -1.5115056037902832
    3. '_' → logprob: -5.261505603790283
    4. '(' → logprob: -6.386505603790283
    5. '()' → logprob: -6.636505603790283
    6. 'if' → logprob: -8.511506080627441
    7. ')' → logprob: -8.636506080627441
    8. ' ' → logprob: -8.886506080627441
    9. ':' → logprob: -9.511506080627441
    10. '=[]' → logprob: -9.511506080627441

Token 116: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.044533133506775
    2. '0' → logprob: -2.0445332527160645
    3. ' set' → logprob: -2.0445332527160645
    4. 'False' → logprob: -2.6695332527160645
    5. 'len' → logprob: -2.9195332527160645
    6. ' ' → logprob: -3.1695332527160645
    7. '[' → logprob: -3.4195332527160645
    8. 'True' → logprob: -3.5445332527160645
    9. 'sum' → logprob: -3.6695332527160645
    10. ' [' → logprob: -3.7945332527160645

Token 117: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1686928272247314
    2. 'len' → logprob: -1.5436928272247314
    3. '[' → logprob: -2.5436928272247314
    4. 'all' → logprob: -2.5436928272247314
    5. 'sum' → logprob: -2.6686928272247314
    6. 'False' → logprob: -3.0436928272247314
    7. '[len' → logprob: -3.1686928272247314
    8. 'N' → logprob: -3.2936928272247314
    9. '0' → logprob: -3.2936928272247314
    10. '[N' → logprob: -3.5436928272247314

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20761428773403168
    2. '   ' → logprob: -2.3326141834259033
    3. ' for' → logprob: -2.7076141834259033
    4. '<|end|>' → logprob: -3.9576141834259033
    5. '
' → logprob: -5.957614421844482
    6. ' ' → logprob: -7.207614421844482
    7. ' 
' → logprob: -7.582614421844482
    8. '    
' → logprob: -8.457613945007324
    9. '<|end|>' → logprob: -9.207613945007324
    10. '	for' → logprob: -9.457613945007324

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023080894723534584
    2. ' for' → logprob: -4.148080825805664
    3. '   ' → logprob: -5.398080825805664
    4. 'while' → logprob: -7.023080825805664
    5. 'i' → logprob: -7.148080825805664
    6. 'if' → logprob: -7.398080825805664
    7. ' i' → logprob: -9.648080825805664
    8. ' ' → logprob: -9.898080825805664
    9. ' while' → logprob: -10.898080825805664
    10. ' if' → logprob: -11.273080825805664

Token 121: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5537933111190796
    2. ' pair' → logprob: -1.5537933111190796
    3. 'a' → logprob: -2.053793430328369
    4. 'i' → logprob: -2.303793430328369
    5. ' a' → logprob: -2.303793430328369
    6. 'pair' → logprob: -2.553793430328369
    7. ' x' → logprob: -2.928793430328369
    8. 'x' → logprob: -3.678793430328369
    9. ' t' → logprob: -3.803793430328369
    10. 't' → logprob: -4.303793430328369

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009543576277792454
    2. ' in' → logprob: -4.759543418884277
    3. ',b' → logprob: -7.884543418884277
    4. 'in' → logprob: -8.384543418884277
    5. ' ,' → logprob: -8.384543418884277
    6. ',a' → logprob: -10.759543418884277
    7. ',_' → logprob: -11.759543418884277
    8. ' ' → logprob: -12.009543418884277
    9. 's' → logprob: -12.134543418884277
    10. 'b' → logprob: -12.134543418884277

Token 123: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013389317318797112
    2. ' b' → logprob: -6.626338958740234
    3. '(b' → logprob: -12.126338958740234
    4. 'a' → logprob: -12.751338958740234
    5. '```' → logprob: -13.876338958740234
    6. 't' → logprob: -14.501338958740234
    7. '(' → logprob: -15.376338958740234
    8. 'v' → logprob: -15.501338958740234
    9. 'x' → logprob: -15.501338958740234
    10. 'ans' → logprob: -15.501338958740234

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08038704842329025
    2. 'in' → logprob: -2.5803871154785156
    3. '<|end|>' → logprob: -6.580387115478516
    4. ',' → logprob: -9.955387115478516
    5. '<|end|>' → logprob: -10.830387115478516
    6. ':' → logprob: -11.080387115478516
    7. '   ' → logprob: -11.830387115478516
    8. ' ' → logprob: -12.580387115478516
    9. '	in' → logprob: -13.205387115478516
    10. '    ' → logprob: -13.642887115478516

Token 125: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.01659870333969593
    2. ' AN' → logprob: -4.141598701477051
    3. 'AN' → logprob: -7.516598701477051
    4. 'ANSWER' → logprob: -11.89159870147705
    5. 'ANTS' → logprob: -12.76659870147705
    6. 'ANE' → logprob: -13.01659870147705
    7. ' ans' → logprob: -13.26659870147705
    8. '   ' → logprob: -13.51659870147705
    9. 'ans' → logprob: -13.89159870147705
    10. ' ' → logprob: -14.26659870147705

Token 126: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.320199877838604e-07
    2. '(S' → logprob: -15.25
    3. '[' → logprob: -16.75
    4. '   ' → logprob: -16.875
    5. '```' → logprob: -17.5
    6. '(' → logprob: -17.625
    7. 'ANS' → logprob: -17.75
    8. ' S' → logprob: -17.875
    9. 's' → logprob: -18.125
    10. '(ans' → logprob: -18.625

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002996124094352126
    2. ':
' → logprob: -6.50299596786499
    3. '<|end|>' → logprob: -6.62799596786499
    4. '<|end|>' → logprob: -9.627996444702148
    5. ',' → logprob: -9.752996444702148
    6. '.' → logprob: -11.752996444702148
    7. '   ' → logprob: -11.877996444702148
    8. ' in' → logprob: -12.502996444702148
    9. '       ' → logprob: -12.752996444702148
    10. ':

' → logprob: -13.002996444702148

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000965295999776572
    2. ':' → logprob: -8.000965118408203
    3. '<|end|>' → logprob: -8.000965118408203
    4. ',' → logprob: -9.375965118408203
    5. '        
' → logprob: -9.750965118408203
    6. '   ' → logprob: -10.250965118408203
    7. 'print' → logprob: -11.125965118408203
    8. ' if' → logprob: -11.250965118408203
    9. '      ' → logprob: -11.375965118408203
    10. ':
' → logprob: -11.500965118408203

Token 129: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14151623845100403
    2. 'print' → logprob: -2.8915162086486816
    3. ' if' → logprob: -3.3915162086486816
    4. ' print' → logprob: -3.5165162086486816
    5. '   ' → logprob: -4.766516208648682
    6. ' check' → logprob: -6.016516208648682
    7. 'if' (adapté à ' if') → logprob: -6.516516208648682
    8. 'check' → logprob: -8.14151668548584
    9. '           ' → logprob: -8.64151668548584
    10. '    ' → logprob: -9.89151668548584

Token 130: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8745620846748352
    2. ' check' → logprob: -0.9995620846748352
    3. 'a' → logprob: -1.9995620250701904
    4. 'check' → logprob: -2.7495620250701904
    5. ' (' → logprob: -5.1245622634887695
    6. ' not' → logprob: -5.4995622634887695
    7. ' abs' → logprob: -6.2495622634887695
    8. '(check' → logprob: -6.3745622634887695
    9. '(a' → logprob: -7.4995622634887695
    10. ' ' → logprob: -8.12456226348877

Token 131: ' !=' (ID: 1666)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0558592081069946
    2. ' >' → logprob: -1.8058592081069946
    3. ' %' → logprob: -1.9308592081069946
    4. ' ==' → logprob: -2.180859088897705
    5. ' <' → logprob: -2.805859088897705
    6. '>' → logprob: -2.930859088897705
    7. '==' → logprob: -3.180859088897705
    8. '<' → logprob: -3.430859088897705
    9. '+' → logprob: -4.305859088897705
    10. ' ' → logprob: -4.555859088897705

Token 132: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1265518218278885
    2. 'check' → logprob: -2.251551866531372
    3. 'N' → logprob: -5.376551628112793
    4. '0' → logprob: -5.501551628112793
    5. '1' → logprob: -6.251551628112793
    6. 'a' → logprob: -6.751551628112793
    7. 'M' → logprob: -7.001551628112793
    8. ' check' → logprob: -8.001551628112793
    9. '   ' → logprob: -9.001551628112793
    10. ' b' → logprob: -9.126551628112793

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05547250434756279
    2. ' and' → logprob: -3.0554726123809814
    3. '):' → logprob: -6.305472373962402
    4. ':
' → logprob: -6.430472373962402
    5. 'and' → logprob: -6.805472373962402
    6. '<|end|>' → logprob: -6.930472373962402
    7. '       ' → logprob: -7.180472373962402
    8. ')' → logprob: -8.180472373962402
    9. ',' → logprob: -8.930472373962402
    10. ' or' → logprob: -10.305472373962402

Token 134: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2634834349155426
    2. '           ' → logprob: -1.5134834051132202
    3. '       ' → logprob: -5.01348352432251
    4. ':
' → logprob: -6.38848352432251
    5. ' and' → logprob: -6.88848352432251
    6. '<|end|>' → logprob: -7.01348352432251
    7. ',' → logprob: -7.38848352432251
    8. '):' → logprob: -8.638483047485352
    9. 'print' → logprob: -9.513483047485352
    10. ' or' → logprob: -9.513483047485352

Token 135: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6650848388671875
    2. 'print' (adapté à ' print') → logprob: -1.7900848388671875
    3. ' check' → logprob: -2.0400848388671875
    4. '       ' → logprob: -2.6650848388671875
    5. 'check' → logprob: -2.6650848388671875
    6. ' print' → logprob: -3.4150848388671875
    7. '               ' → logprob: -4.2900848388671875
    8. '
' → logprob: -6.6650848388671875
    9. '   ' → logprob: -6.7900848388671875
    10. '```' → logprob: -9.290084838867188

Token 136: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009806382469832897
    2. '(' → logprob: -5.009806156158447
    3. '(f' → logprob: -5.884806156158447
    4. '('' → logprob: -8.259806632995605
    5. '("' → logprob: -10.259806632995605
    6. 'a' → logprob: -11.884806632995605
    7. '()' → logprob: -14.009806632995605
    8. '((' → logprob: -14.134806632995605
    9. ' (' → logprob: -14.509806632995605
    10. '('',' → logprob: -14.509806632995605

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005186082329601049
    2. ',b' → logprob: -5.630186080932617
    3. ' ,' → logprob: -6.505186080932617
    4. ')' → logprob: -9.755186080932617
    5. ' b' → logprob: -11.505186080932617
    6. ',a' → logprob: -12.130186080932617
    7. 'b' → logprob: -12.255186080932617
    8. ',end' → logprob: -12.255186080932617
    9. ',
' → logprob: -13.380186080932617
    10. ' ' → logprob: -14.255186080932617

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868734836578369
    2. 'b' → logprob: -1.136873483657837
    3. ' ' → logprob: -13.261873245239258
    4. ')' → logprob: -15.386873245239258
    5. '    ' → logprob: -16.011873245239258
    6. ''' → logprob: -16.011873245239258
    7. '"' → logprob: -16.636873245239258
    8. ' ' → logprob: -16.886873245239258
    9. ' ,' → logprob: -17.261873245239258
    10. ' )' → logprob: -17.636873245239258

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. ')
' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -14.750032424926758
    4. ' )' → logprob: -15.125032424926758
    5. '')' → logprob: -16.250032424926758
    6. ')#' → logprob: -16.375032424926758
    7. '       ' → logprob: -16.875032424926758
    8. '))' → logprob: -17.125032424926758
    9. '),' → logprob: -17.250032424926758
    10. ')}}' → logprob: -17.375032424926758

Token 140: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -0.6216514706611633
    2. '           ' → logprob: -1.3716514110565186
    3. '<|end|>' → logprob: -2.2466514110565186
    4. ' check' → logprob: -2.3716514110565186
    5. '       ' → logprob: -5.371651649475098
    6. '            ' → logprob: -6.246651649475098
    7. '<|end|>' → logprob: -6.621651649475098
    8. ')' → logprob: -8.121651649475098
    9. '(check' → logprob: -8.246651649475098
    10. '	check' → logprob: -8.371651649475098

Token 142: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8706283569335938
    2. ' +=' → logprob: -0.8706283569335938
    3. ' =' → logprob: -2.2456283569335938
    4. '+=' → logprob: -2.8706283569335938
    5. '+' → logprob: -9.495628356933594
    6. ' ' → logprob: -11.745628356933594
    7. '    ' → logprob: -12.745628356933594
    8. '   ' → logprob: -12.995628356933594
    9. ' ==' → logprob: -12.995628356933594
    10. ' ^=' → logprob: -13.120628356933594

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '<|end|>' → logprob: -19.000001907348633
    5. '  ' → logprob: -20.375001907348633
    6. '```' → logprob: -21.125001907348633
    7. '１' → logprob: -21.625001907348633
    8. '    ' → logprob: -21.750001907348633
    9. '۱' → logprob: -21.875001907348633
    10. '       ' → logprob: -22.375001907348633

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -16.5000057220459
    4. '   ' → logprob: -17.0000057220459
    5. '-' → logprob: -18.3750057220459
    6. '```' → logprob: -18.7500057220459
    7. '<|end|>' → logprob: -18.8750057220459
    8. '  ' → logprob: -18.8750057220459
    9. 'int' → logprob: -19.1250057220459
    10. 'a' → logprob: -19.1875057220459

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.04306313395500183
    2. 'check' → logprob: -3.168063163757324
    3. ' not' → logprob: -9.793063163757324
    4. ' ' → logprob: -13.043063163757324
    5. '	check' → logprob: -13.293063163757324
    6. 'not' → logprob: -13.418063163757324
    7. '(check' → logprob: -13.918063163757324
    8. ' ' → logprob: -14.293063163757324
    9. ' len' → logprob: -14.918063163757324
    10. 'len' → logprob: -15.543063163757324

Token 149: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6730382442474365
    2. '==' → logprob: -0.7980382442474365
    3. ' >=' → logprob: -3.9230382442474365
    4. '>=' → logprob: -3.9230382442474365
    5. '=' → logprob: -10.798038482666016
    6. ' ' → logprob: -10.923038482666016
    7. '>' → logprob: -11.673038482666016
    8. ')' → logprob: -12.173038482666016
    9. '   ' → logprob: -12.673038482666016
    10. ')==' → logprob: -13.173038482666016

Token 150: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16384710371494293
    2. 'N' → logprob: -1.9138470888137817
    3. ' M' → logprob: -6.413846969604492
    4. 'len' → logprob: -6.413846969604492
    5. ' N' → logprob: -8.663846969604492
    6. '2' → logprob: -9.788846969604492
    7. '   ' → logprob: -10.163846969604492
    8. ' ' → logprob: -10.788846969604492
    9. '(M' → logprob: -11.538846969604492
    10. '(' → logprob: -11.913846969604492

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059355515986680984
    2. ':
' → logprob: -5.1309356689453125
    3. ':return' → logprob: -12.505935668945312
    4. '   ' → logprob: -13.505935668945312
    5. ' :' → logprob: -14.880935668945312
    6. '):' → logprob: -14.880935668945312
    7. '       ' → logprob: -15.255935668945312
    8. '):
' → logprob: -15.630935668945312
    9. '<|end|>' → logprob: -15.630935668945312
    10. ':

' → logprob: -16.130935668945312

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015236093662679195
    2. '       ' → logprob: -5.015235900878906
    3. ' break' → logprob: -5.140235900878906
    4. 'break' → logprob: -6.015235900878906
    5. '	break' → logprob: -9.515235900878906
    6. '   ' → logprob: -9.890235900878906
    7. '               ' → logprob: -10.890235900878906
    8. ':' → logprob: -11.390235900878906
    9. '	       ' → logprob: -11.765235900878906
    10. '_break' → logprob: -12.390235900878906

Token 153: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3883163332939148
    2. ' break' → logprob: -1.1383163928985596
    3. '       ' → logprob: -7.1383161544799805
    4. '           ' → logprob: -7.5133161544799805
    5. '   ' → logprob: -9.88831615447998
    6. '	break' → logprob: -9.88831615447998
    7. '               ' → logprob: -13.76331615447998
    8. '
' → logprob: -14.38831615447998
    9. '_break' → logprob: -14.38831615447998
    10. '```' → logprob: -16.263317108154297


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 38.41%
Précision adaptée (1ère position): 41.72%
Précision (top 10): 87.42%
================================================================================
