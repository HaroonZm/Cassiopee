================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def racine_carree(nombre):
    return nombre ** 0.5

def est_premier(nombre):
    if nombre == 1:
        return False

    i = 2
    while i <= int(racine_carree(nombre)):
        if nombre % i == 0:
            return False
        i += 1

    return True

X = int(input())

if est_premier(X):
    print(X)
    exit()
if X % 2 == 0:
    X = X + 1
while True:
    if est_premier(X):
        print(X)
        break
    X = X + 2
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' rac' (ID: 12334)
  → Token d'amorce (pas de prédiction)

Token 2: 'ine' (ID: 514)
  → Token d'amorce (pas de prédiction)

Token 3: '_car' (ID: 62991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030347732827067375
    2. '(' → logprob: -3.5303478240966797
    3. 's' → logprob: -8.15534782409668
    4. '_s' → logprob: -9.15534782409668
    5. '_(' → logprob: -9.65534782409668
    6. '```' → logprob: -10.40534782409668
    7. '(_)' → logprob: -11.03034782409668
    8. '_a' → logprob: -11.28034782409668
    9. '(_' → logprob: -11.65534782409668
    10. '(s' → logprob: -11.78034782409668

Token 4: 'ree' (ID: 908)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3348650336265564
    2. 're' → logprob: -1.3348650932312012
    3. 'é' → logprob: -4.084865093231201
    4. 'ree' → logprob: -6.084865093231201
    5. 'r' → logprob: -7.084865093231201
    6. 'ré' → logprob: -7.459865093231201
    7. '```' → logprob: -7.459865093231201
    8. '_re' → logprob: -9.084864616394043
    9. 'rée' → logprob: -10.084864616394043
    10. '_' → logprob: -10.334864616394043

Token 5: '(nombre' (ID: 124319)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017994173686020076
    2. ' (' → logprob: -9.2501802444458
    3. '_' → logprob: -10.3751802444458
    4. 's' → logprob: -11.1251802444458
    5. '(
' → logprob: -11.5001802444458
    6. '```' → logprob: -12.1251802444458
    7. '():' → logprob: -12.5001802444458
    8. '(s' → logprob: -12.6251802444458
    9. ':' → logprob: -13.0001802444458
    10. '('' → logprob: -13.1251802444458

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04327058047056198
    2. ')' → logprob: -3.1682705879211426
    3. ':' → logprob: -8.793270111083984
    4. '):
' → logprob: -10.043270111083984
    5. '(' → logprob: -11.043270111083984
    6. '**' → logprob: -11.418270111083984
    7. '[' → logprob: -12.293270111083984
    8. ''):' → logprob: -12.293270111083984
    9. ')**' → logprob: -12.293270111083984
    10. 's' → logprob: -12.543270111083984

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23657144606113434
    2. '   ' → logprob: -1.6115714311599731
    3. '(' → logprob: -4.986571311950684
    4. '():' → logprob: -6.361571311950684
    5. ' ' → logprob: -7.361571311950684
    6. ' :' → logprob: -7.486571311950684
    7. '```' → logprob: -8.236571311950684
    8. ':
' → logprob: -8.361571311950684
    9. ':return' → logprob: -8.986571311950684
    10. '    ' → logprob: -9.486571311950684

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06313854455947876
    2. ' ' → logprob: -3.188138484954834
    3. ' return' → logprob: -5.563138484954834
    4. ' if' → logprob: -5.563138484954834
    5. '```' → logprob: -5.938138484954834
    6. 'return' (adapté à ' return') → logprob: -6.063138484954834
    7. '    ' → logprob: -6.563138484954834
    8. '(' → logprob: -6.938138484954834
    9. 'if' → logprob: -7.438138484954834
    10. '  ' → logprob: -7.688138484954834

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05856959521770477
    2. ' nombre' → logprob: -2.9335696697235107
    3. 'nombre' → logprob: -6.433569431304932
    4. ' math' → logprob: -6.683569431304932
    5. ' (' → logprob: -8.30856990814209
    6. '  ' → logprob: -8.68356990814209
    7. ' ' → logprob: -9.55856990814209
    8. ' int' → logprob: -10.05856990814209
    9. '(nombre' → logprob: -10.18356990814209
    10. ' nombres' → logprob: -10.30856990814209

Token 10: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.04305856674909592
    2. '**' → logprob: -3.1680586338043213
    3. ' *' → logprob: -11.043058395385742
    4. '[' → logprob: -11.168058395385742
    5. ' ' → logprob: -12.293058395385742
    6. '```' → logprob: -12.543058395385742
    7. '_' → logprob: -12.668058395385742
    8. ' ' → logprob: -13.043058395385742
    9. '<|end|>' → logprob: -13.043058395385742
    10. '.' → logprob: -13.168058395385742

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16024799644947052
    2. ' ' → logprob: -1.910248041152954
    3. '(' → logprob: -10.910247802734375
    4. '2' → logprob: -12.410247802734375
    5. ' (' → logprob: -14.035247802734375
    6. '    ' → logprob: -15.410247802734375
    7. ' ' → logprob: -15.410247802734375
    8. '```' → logprob: -16.035247802734375
    9. '  ' → logprob: -16.285247802734375
    10. '   ' → logprob: -17.285247802734375

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.876193169271573e-05
    2. ' ' → logprob: -9.500088691711426
    3. '(' → logprob: -11.250088691711426
    4. '2' → logprob: -14.125088691711426
    5. '-' → logprob: -15.875088691711426
    6. ' ' → logprob: -18.250089645385742
    7. ' (' → logprob: -18.500089645385742
    8. '   ' → logprob: -18.750089645385742
    9. '1' → logprob: -19.125089645385742
    10. '```' → logprob: -19.250089645385742

Token 13: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.282920129597187e-05
    2. '```' → logprob: -12.000012397766113
    3. '0' → logprob: -13.375012397766113
    4. '.​' → logprob: -13.750012397766113
    5. '`.' → logprob: -13.875012397766113
    6. '5' → logprob: -14.750012397766113
    7. ' .' → logprob: -15.125012397766113
    8. ''.' → logprob: -15.250012397766113
    9. '​.' → logprob: -15.500012397766113
    10. ' ' → logprob: -15.500012397766113

Token 14: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.36574100604048e-06
    2. '```' → logprob: -13.000004768371582
    3. '**' → logprob: -14.625004768371582
    4. '.' → logprob: -14.625004768371582
    5. '0' → logprob: -14.875004768371582
    6. '`' → logprob: -15.000004768371582
    7. '   ' → logprob: -16.125003814697266
    8. '

' → logprob: -17.125003814697266
    9. '``' → logprob: -17.250003814697266
    10. '٥' → logprob: -17.687503814697266

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14906226098537445
    2. '
' → logprob: -2.399062156677246
    3. '(
' → logprob: -3.774062156677246
    4. '\n' → logprob: -4.899062156677246
    5. ')' → logprob: -5.399062156677246
    6. '#' → logprob: -6.149062156677246
    7. '<|end|>' → logprob: -6.399062156677246
    8. '\' → logprob: -6.649062156677246
    9. '```' → logprob: -6.649062156677246
    10. '*' → logprob: -6.774062156677246

Token 16: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1350034773349762
    2. '
' → logprob: -2.3850035667419434
    3. ')' → logprob: -4.635003566741943
    4. '(
' → logprob: -5.385003566741943
    5. '<|end|>' → logprob: -5.385003566741943
    6. '```' → logprob: -5.635003566741943
    7. '#' → logprob: -5.885003566741943
    8. '\n' → logprob: -5.885003566741943
    9. '

' → logprob: -6.760003566741943
    10. '' → logprob: -7.135003566741943

Token 17: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6182301640510559
    2. ' carre' → logprob: -1.9932301044464111
    3. ' factor' → logprob: -2.118230104446411
    4. ' addition' → logprob: -2.993230104446411
    5. ' calcul' → logprob: -3.118230104446411
    6. ' rac' → logprob: -3.493230104446411
    7. ' somme' → logprob: -3.868230104446411
    8. ' puissance' → logprob: -4.74323034286499
    9. ' facteur' → logprob: -4.86823034286499
    10. ' carré' → logprob: -5.36823034286499

Token 18: '_p' (ID: 1359)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.7183894515037537
    2. '_' → logprob: -1.2183895111083984
    3. '_p' → logprob: -1.5933895111083984
    4. '_un' → logprob: -5.218389511108398
    5. '_pal' → logprob: -5.468389511108398
    6. '_div' → logprob: -7.093389511108398
    7. ' _' → logprob: -7.593389511108398
    8. '_v' → logprob: -8.093389511108398
    9. '_val' → logprob: -8.218389511108398
    10. '_prime' → logprob: -8.468389511108398

Token 19: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017383119091391563
    2. 'rem' → logprob: -4.517383098602295
    3. 'air' → logprob: -5.517383098602295
    4. 'a' → logprob: -7.017383098602295
    5. 'os' → logprob: -8.142383575439453
    6. 'rim' → logprob: -8.767383575439453
    7. '>' → logprob: -8.892383575439453
    8. 'al' → logprob: -9.142383575439453
    9. 'ar' → logprob: -9.517383575439453
    10. '_rem' → logprob: -9.642383575439453

Token 20: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -5.44312788406387e-05
    2. 'i' → logprob: -10.125054359436035
    3. 'iere' → logprob: -12.000054359436035
    4. 'iers' → logprob: -12.250054359436035
    5. 'ie' → logprob: -13.625054359436035
    6. ' ier' → logprob: -14.000054359436035
    7. 'iert' → logprob: -14.750054359436035
    8. 'ière' → logprob: -15.000054359436035
    9. 'ieur' → logprob: -15.125054359436035
    10. 'ir' → logprob: -16.37505531311035

Token 21: '(nombre' (ID: 124319)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.388769103679806e-05
    2. ' (' → logprob: -10.000093460083008
    3. '_' → logprob: -10.500093460083008
    4. '(n' → logprob: -12.250093460083008
    5. 's' → logprob: -12.375093460083008
    6. ' ' → logprob: -12.875093460083008
    7. '("("' → logprob: -13.000093460083008
    8. '(nombre' → logprob: -14.250093460083008
    9. '(x' → logprob: -14.375093460083008
    10. '('' → logprob: -14.375093460083008

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024013672024011612
    2. ')' → logprob: -3.7740137577056885
    3. '):
' → logprob: -7.274013519287109
    4. '   ' → logprob: -10.52401351928711
    5. ' ):' → logprob: -10.52401351928711
    6. ',' → logprob: -11.64901351928711
    7. ':' → logprob: -12.89901351928711
    8. '):

' → logprob: -13.14901351928711
    9. '(n' → logprob: -13.64901351928711
    10. ')**' → logprob: -13.89901351928711

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2728388011455536
    2. ' 
' → logprob: -1.647838830947876
    3. ':' → logprob: -4.022838592529297
    4. '    
' → logprob: -4.897838592529297
    5. '  
' → logprob: -5.522838592529297
    6. '```' → logprob: -5.647838592529297
    7. '
' → logprob: -5.897838592529297
    8. '    ' → logprob: -6.272838592529297
    9. '   
' → logprob: -6.272838592529297
    10. ':
' → logprob: -6.647838592529297

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011534392833709717
    2. ' for' → logprob: -5.011534214019775
    3. '   ' → logprob: -5.386534214019775
    4. 'if' (adapté à ' if') → logprob: -9.011534690856934
    5. ' import' → logprob: -9.636534690856934
    6. ' True' → logprob: -11.761534690856934
    7. '```' → logprob: -12.011534690856934
    8. ' ' → logprob: -12.261534690856934
    9. ' """' → logprob: -12.386534690856934
    10. ' 
' → logprob: -12.511534690856934

Token 25: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0017947778105735779
    2. ' ' → logprob: -7.126794815063477
    3. 'nombre' → logprob: -7.251794815063477
    4. ' number' → logprob: -8.751794815063477
    5. ' nombres' → logprob: -9.626794815063477
    6. ' nomb' → logprob: -10.001794815063477
    7. ' n' → logprob: -13.126794815063477
    8. ' ' → logprob: -13.126794815063477
    9. ' numero' → logprob: -13.251794815063477
    10. '   ' → logprob: -13.251794815063477

Token 26: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1751851886510849
    2. ' <=' → logprob: -2.050185203552246
    3. '<' → logprob: -4.300185203552246
    4. '<=' → logprob: -5.050185203552246
    5. ' %' → logprob: -5.050185203552246
    6. ' ' → logprob: -5.425185203552246
    7. '%' → logprob: -6.800185203552246
    8. ' ==' → logprob: -10.300185203552246
    9. '==' → logprob: -10.675185203552246
    10. '   ' → logprob: -12.175185203552246

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000657750410027802
    2. '0' → logprob: -8.00065803527832
    3. '2' → logprob: -8.62565803527832
    4. '1' → logprob: -8.87565803527832
    5. '<' → logprob: -13.50065803527832
    6. ' <' → logprob: -14.25065803527832
    7. '  ' → logprob: -14.50065803527832
    8. '   ' → logprob: -15.00065803527832
    9. ' ' → logprob: -16.50065803527832
    10. '    ' → logprob: -16.75065803527832

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19404427707195282
    2. ' ' → logprob: -2.319044351577759
    3. '2' → logprob: -2.694044351577759
    4. '1' → logprob: -4.56904411315918
    5. '<' → logprob: -10.44404411315918
    6. '   ' → logprob: -12.69404411315918
    7. '  ' → logprob: -14.06904411315918
    8. '```' → logprob: -14.06904411315918
    9. '    ' → logprob: -15.44404411315918
    10. '3' → logprob: -15.50654411315918

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015937690623104572
    2. ' :' → logprob: -7.001593589782715
    3. ' or' → logprob: -7.376593589782715
    4. ':return' → logprob: -10.251593589782715
    5. ':
' → logprob: -11.001593589782715
    6. 'or' → logprob: -12.876593589782715
    7. ':**' → logprob: -15.126593589782715
    8. '):' → logprob: -15.126593589782715
    9. ' :
' → logprob: -15.376593589782715
    10. '():' → logprob: -15.376593589782715

Token 30: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10224450379610062
    2. ' :' → logprob: -2.3522446155548096
    3. ':return' → logprob: -6.6022443771362305
    4. ' or' → logprob: -7.4772443771362305
    5. ':
' → logprob: -9.85224437713623
    6. ' ' → logprob: -10.60224437713623
    7. ' :
' → logprob: -10.97724437713623
    8. '  ' → logprob: -12.47724437713623
    9. ' return' → logprob: -12.72724437713623
    10. 'or' → logprob: -12.97724437713623

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.504521369934082
    2. ' False' → logprob: -1.504521369934082
    3. '   ' → logprob: -2.004521369934082
    4. '    ' → logprob: -3.879521369934082
    5. ' True' → logprob: -5.379521369934082
    6. 'False' → logprob: -5.379521369934082
    7. 'return' (adapté à ' return') → logprob: -6.004521369934082
    8. ' ' → logprob: -6.129521369934082
    9. ' 
' → logprob: -6.379521369934082
    10. ':return' → logprob: -7.379521369934082

Token 32: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.00043353010551072657
    2. 'False' → logprob: -7.750433444976807
    3. ' True' → logprob: -12.750433921813965
    4. ' false' → logprob: -19.00043296813965
    5. ' F' → logprob: -19.87543296813965
    6. ' ' → logprob: -20.12543296813965
    7. '(False' → logprob: -20.12543296813965
    8. ' None' → logprob: -20.75043296813965
    9. ' Faux' → logprob: -21.00043296813965
    10. 'True' → logprob: -21.25043296813965

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21696187555789948
    2. '\n' → logprob: -2.5919618606567383
    3. '   ' → logprob: -2.9669618606567383
    4. ' 
' → logprob: -3.7169618606567383
    5. '  
' → logprob: -3.8419618606567383
    6. '    
' → logprob: -4.091961860656738
    7. '   
' → logprob: -5.966961860656738
    8. '
' → logprob: -6.966961860656738
    9. '' → logprob: -7.341961860656738
    10. 'n' → logprob: -7.466961860656738

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014163389801979065
    2. '    
' → logprob: -5.139163494110107
    3. '
' → logprob: -5.264163494110107
    4. ' 
' → logprob: -6.514163494110107
    5. '  
' → logprob: -7.514163494110107
    6. '   
' → logprob: -7.764163494110107
    7. ' for' → logprob: -8.63916301727295
    8. '  ' → logprob: -9.01416301727295
    9. '\n' → logprob: -9.13916301727295
    10. 'n' → logprob: -10.13916301727295

Token 35: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5380903482437134
    2. 'for' → logprob: -1.1630903482437134
    3. '   ' → logprob: -2.288090229034424
    4. ' 
' → logprob: -6.913090229034424
    5. '    
' → logprob: -7.538090229034424
    6. '```' → logprob: -8.913090705871582
    7. '
' → logprob: -9.163090705871582
    8. '   
' → logprob: -9.288090705871582
    9. '  
' → logprob: -10.038090705871582
    10. 'if' → logprob: -10.038090705871582

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0691159963607788
    2. ' =' → logprob: -1.3191159963607788
    3. ' in' → logprob: -1.3191159963607788
    4. ' ' → logprob: -2.3191161155700684
    5. 'n' → logprob: -4.444116115570068
    6. '   ' → logprob: -5.569116115570068
    7. ' for' → logprob: -6.069116115570068
    8. ' n' → logprob: -6.069116115570068
    9. 'in' → logprob: -6.319116115570068
    10. 'nt' → logprob: -7.694116115570068

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03804263845086098
    2. ' ' → logprob: -3.2880425453186035
    3. '   ' → logprob: -14.538043022155762
    4. '    ' → logprob: -15.413043022155762
    5. ' ' → logprob: -15.663043022155762
    6. '```' → logprob: -15.913043022155762
    7. '  ' → logprob: -16.163042068481445
    8. '۲' → logprob: -17.725542068481445
    9. '     ' → logprob: -18.225542068481445
    10. '２' → logprob: -18.225542068481445

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.62515926361084
    4. '  ' → logprob: -16.250158309936523
    5. '    ' → logprob: -16.750158309936523
    6. '```' → logprob: -17.000158309936523
    7. '     ' → logprob: -17.312658309936523
    8. 'de' → logprob: -17.437658309936523
    9. '0' → logprob: -18.062658309936523
    10. '1' → logprob: -18.187658309936523

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6577994227409363
    2. 'while' (adapté à ' while') → logprob: -1.407799482345581
    3. ' i' → logprob: -2.657799482345581
    4. 'i' → logprob: -3.032799482345581
    5. '<|end|>' → logprob: -3.157799482345581
    6. '
' → logprob: -3.282799482345581
    7. '   ' → logprob: -4.907799243927002
    8. ' ' → logprob: -5.407799243927002
    9. ' 
' → logprob: -5.532799243927002
    10. '	while' → logprob: -5.532799243927002

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008740678429603577
    2. 'i' → logprob: -4.7587409019470215
    3. '(i' → logprob: -10.258740425109863
    4. '	i' → logprob: -10.383740425109863
    5. ' ' → logprob: -10.633740425109863
    6. ' (' → logprob: -10.883740425109863
    7. ' ' → logprob: -11.258740425109863
    8. '   ' → logprob: -13.383740425109863
    9. '```' → logprob: -14.508740425109863
    10. '  ' → logprob: -14.758740425109863

Token 43: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1424591988325119
    2. ' *' → logprob: -2.1424591541290283
    3. '*i' → logprob: -4.767459392547607
    4. '<=' → logprob: -5.142459392547607
    5. '*' → logprob: -7.017459392547607
    6. ' **' → logprob: -9.64245891571045
    7. '**' → logprob: -10.01745891571045
    8. ' ' → logprob: -10.14245891571045
    9. ' ' → logprob: -12.14245891571045
    10. 'i' → logprob: -12.39245891571045

Token 44: ' int' (ID: 677)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.4806307256221771
    2. ' rac' → logprob: -0.9806307554244995
    3. 'nombre' → logprob: -6.105630874633789
    4. ' nombre' → logprob: -6.355630874633789
    5. 'int' → logprob: -6.855630874633789
    6. 'r' → logprob: -7.230630874633789
    7. ' int' → logprob: -7.855630874633789
    8. ' ' → logprob: -9.105630874633789
    9. '   ' → logprob: -9.230630874633789
    10. 'rat' → logprob: -10.230630874633789

Token 45: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16566050052642822
    2. '(nombre' → logprob: -2.1656603813171387
    3. '(' → logprob: -3.2906603813171387
    4. '(n' → logprob: -8.290660858154297
    5. 'nombre' → logprob: -8.540660858154297
    6. '(s' → logprob: -8.915660858154297
    7. '((' → logprob: -9.290660858154297
    8. 'r' → logprob: -11.040660858154297
    9. '(
' → logprob: -11.540660858154297
    10. ' (' → logprob: -11.790660858154297

Token 46: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0012086842907592654
    2. 'a' → logprob: -8.626208305358887
    3. '(nombre' → logprob: -8.626208305358887
    4. 'nombre' → logprob: -9.001208305358887
    5. 'rac' → logprob: -9.501208305358887
    6. '(' → logprob: -9.563708305358887
    7. ' rac' → logprob: -9.626208305358887
    8. '   ' → logprob: -9.688708305358887
    9. '[' → logprob: -9.876208305358887
    10. 'c' → logprob: -10.251208305358887

Token 47: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.002696577925235033
    2. '_' → logprob: -7.002696514129639
    3. '   ' → logprob: -7.377696514129639
    4. '```' → logprob: -8.002696990966797
    5. 'e' → logprob: -8.877696990966797
    6. 'i' → logprob: -9.002696990966797
    7. '	' → logprob: -10.002696990966797
    8. '``' → logprob: -10.252696990966797
    9. '  ' → logprob: -10.377696990966797
    10. '-' → logprob: -10.502696990966797

Token 48: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.000193527273950167
    2. '_c' → logprob: -9.25019359588623
    3. '_' → logprob: -9.62519359588623
    4. 'car' → logprob: -11.75019359588623
    5. 'Car' → logprob: -12.00019359588623
    6. '(nombre' → logprob: -12.25019359588623
    7. '_nombre' → logprob: -13.37519359588623
    8. '(car' → logprob: -13.75019359588623
    9. ' ' → logprob: -13.87519359588623
    10. 'nombre' → logprob: -14.00019359588623

Token 49: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.09437739104032516
    2. 'ee' → logprob: -2.719377279281616
    3. 'e' → logprob: -3.969377279281616
    4. 're' → logprob: -5.969377517700195
    5. 'que' → logprob: -5.969377517700195
    6. 'ée' → logprob: -9.844377517700195
    7. 'quee' → logprob: -10.469377517700195
    8. 'ere' → logprob: -11.469377517700195
    9. '_' → logprob: -12.094377517700195
    10. 'q' → logprob: -12.094377517700195

Token 50: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.00021402664424385875
    2. '(' → logprob: -8.625213623046875
    3. 'nombre' → logprob: -10.375213623046875
    4. ' (' → logprob: -13.875213623046875
    5. '(numero' → logprob: -14.375213623046875
    6. '(
' → logprob: -14.750213623046875
    7. ')' → logprob: -15.000213623046875
    8. '(nome' → logprob: -15.125213623046875
    9. ' nombre' → logprob: -15.625213623046875
    10. ' ' → logprob: -16.000213623046875

Token 51: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061952839605510235
    2. '):' → logprob: -6.131195068359375
    3. ')):' → logprob: -6.381195068359375
    4. '))' → logprob: -6.631195068359375
    5. ')+' → logprob: -7.506195068359375
    6. '())' → logprob: -8.631195068359375
    7. ' )' → logprob: -9.131195068359375
    8. '()' → logprob: -9.631195068359375
    9. '))+' → logprob: -10.131195068359375
    10. '()))' → logprob: -11.756195068359375

Token 52: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0452384315431118
    2. ' +' → logprob: -3.170238494873047
    3. ':' → logprob: -6.545238494873047
    4. '+:' → logprob: -7.670238494873047
    5. '   ' → logprob: -9.045238494873047
    6. ' and' → logprob: -9.295238494873047
    7. ' ' → logprob: -10.545238494873047
    8. ' plus' → logprob: -11.295238494873047
    9. 'and' → logprob: -11.295238494873047
    10. '**' → logprob: -11.420238494873047

Token 53: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05942792817950249
    2. ' +' → logprob: -3.0594279766082764
    3. '   ' → logprob: -5.059427738189697
    4. '+
' → logprob: -6.309427738189697
    5. ' +
' → logprob: -6.809427738189697
    6. '+i' → logprob: -7.934427738189697
    7. ' i' → logprob: -8.559428215026855
    8. ' ' → logprob: -8.684428215026855
    9. 's' → logprob: -8.934428215026855
    10. '    ' → logprob: -9.059428215026855

Token 54: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.011063147336244583
    2. 'nombre' → logprob: -4.511063098907471
    3. ' ' → logprob: -12.136063575744629
    4. ' nomb' → logprob: -12.386063575744629
    5. ' nombres' → logprob: -12.886063575744629
    6. '(nombre' → logprob: -13.386063575744629
    7. '    ' → logprob: -14.636063575744629
    8. ' ' → logprob: -15.136063575744629
    9. ' nombr' → logprob: -15.261063575744629
    10. ' number' → logprob: -15.511063575744629

Token 55: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011156757362186909
    2. '%' → logprob: -4.5111565589904785
    3. ' ' → logprob: -9.886157035827637
    4. '%i' → logprob: -9.886157035827637
    5. ' ' → logprob: -12.511157035827637
    6. '<|end|>' → logprob: -13.386157035827637
    7. '%e' → logprob: -13.886157035827637
    8. '   ' → logprob: -15.511157035827637
    9. '%s' → logprob: -15.511157035827637
    10. '%d' → logprob: -16.13615608215332

Token 56: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5760642290115356
    2. ' i' → logprob: -0.8260642290115356
    3. '	i' → logprob: -9.576064109802246
    4. ' ' → logprob: -9.951064109802246
    5. '   ' → logprob: -13.076064109802246
    6. '2' → logprob: -13.451064109802246
    7. ' ' → logprob: -13.576064109802246
    8. '<|end|>' → logprob: -13.951064109802246
    9. '  ' → logprob: -14.201064109802246
    10. '<|end|>' → logprob: -14.701064109802246

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2023402601480484
    2. '==' → logprob: -1.7023402452468872
    3. '0' → logprob: -7.202340126037598
    4. ' ' → logprob: -9.077340126037598
    5. '=' → logprob: -10.702340126037598
    6. ')==' → logprob: -11.077340126037598
    7. '<|end|>' → logprob: -11.452340126037598
    8. ')' → logprob: -12.202340126037598
    9. '<|end|>' → logprob: -13.077340126037598
    10. '===' → logprob: -13.077340126037598

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687264919281006
    2. '0' → logprob: -1.13687264919281
    3. ' ' → logprob: -13.511872291564941
    4. '<|end|>' → logprob: -16.136873245239258
    5. '```' → logprob: -16.511873245239258
    6. '  ' → logprob: -17.886873245239258
    7. '   ' → logprob: -18.511873245239258
    8. '۰' → logprob: -18.886873245239258
    9. '00' → logprob: -19.761873245239258
    10. '    ' → logprob: -20.011873245239258

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۰' → logprob: -16.75007438659668
    4. '00' → logprob: -17.37507438659668
    5. '٠' → logprob: -17.87507438659668
    6. '```' → logprob: -18.18757438659668
    7. '000' → logprob: -19.12507438659668
    8. ' ' → logprob: -19.37507438659668
    9. '০' → logprob: -19.50007438659668
    10. '०' → logprob: -19.56257438659668

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014866470592096448
    2. ':
' → logprob: -7.501486778259277
    3. ':return' → logprob: -7.751486778259277
    4. ' :' → logprob: -8.001486778259277
    5. ' and' → logprob: -9.251486778259277
    6. ' or' → logprob: -9.751486778259277
    7. 'and' → logprob: -12.876486778259277
    8. '   ' → logprob: -13.001486778259277
    9. '<|end|>' → logprob: -13.001486778259277
    10. ' ' → logprob: -13.376486778259277

Token 61: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.275709629058838
    2. '           ' → logprob: -1.400709629058838
    3. ' ' → logprob: -1.775709629058838
    4. '   ' → logprob: -2.275709629058838
    5. ' return' → logprob: -2.525709629058838
    6. ' True' → logprob: -3.025709629058838
    7. ':' → logprob: -4.150709629058838
    8. '<|end|>' → logprob: -4.275709629058838
    9. '    ' → logprob: -5.025709629058838
    10. ':return' → logprob: -5.275709629058838

Token 62: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13552942872047424
    2. 'return' (adapté à ' return') → logprob: -2.1355295181274414
    3. '               ' → logprob: -4.885529518127441
    4. '           ' → logprob: -7.760529518127441
    5. ' ' → logprob: -8.010529518127441
    6. ' ' → logprob: -9.885529518127441
    7. '   ' → logprob: -10.010529518127441
    8. '	return' → logprob: -10.135529518127441
    9. ' 
' → logprob: -10.260529518127441
    10. '       ' → logprob: -10.510529518127441

Token 63: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750952497124672
    2. ' False' → logprob: -3.5297510623931885
    3. 'True' → logprob: -14.52975082397461
    4. ' True' → logprob: -17.40475082397461
    5. 'F' → logprob: -18.52975082397461
    6. '(False' → logprob: -19.27975082397461
    7. '_false' → logprob: -21.40475082397461
    8. ' ' → logprob: -21.90475082397461
    9. '=False' → logprob: -22.15475082397461
    10. '.False' → logprob: -22.27975082397461

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19244937598705292
    2. '   ' → logprob: -2.3174493312835693
    3. '
' → logprob: -3.0674493312835693
    4. '<|end|>' → logprob: -4.692449569702148
    5. '    
' → logprob: -4.817449569702148
    6. '        
' → logprob: -5.192449569702148
    7. '    ' → logprob: -6.567449569702148
    8. '+' → logprob: -6.692449569702148
    9. '  ' → logprob: -7.442449569702148
    10. '  
' → logprob: -7.567449569702148

Token 65: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1287720650434494
    2. '   ' → logprob: -3.128772020339966
    3. '       ' → logprob: -3.628772020339966
    4. ' +' → logprob: -3.753772020339966
    5. '
' → logprob: -4.128772258758545
    6. '+
' → logprob: -5.753772258758545
    7. '+i' → logprob: -6.128772258758545
    8. ' ' → logprob: -6.628772258758545
    9. '1' → logprob: -7.128772258758545
    10. '    
' → logprob: -7.378772258758545

Token 66: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6757040023803711
    2. '   ' → logprob: -1.050704002380371
    3. '
' → logprob: -2.675704002380371
    4. '    
' → logprob: -3.675704002380371
    5. '+' → logprob: -4.300704002380371
    6. '\n' → logprob: -4.425704002380371
    7. 'i' (adapté à ' i') → logprob: -5.425704002380371
    8. '        
' → logprob: -5.425704002380371
    9. ' ' → logprob: -6.175704002380371
    10. '    ' → logprob: -6.175704002380371

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09590018540620804
    2. '+=' → logprob: -2.970900297164917
    3. '+' → logprob: -3.220900297164917
    4. ' +' → logprob: -8.345900535583496
    5. ' ' → logprob: -11.470900535583496
    6. '++' → logprob: -12.095900535583496
    7. '=' → logprob: -12.595900535583496
    8. '<|end|>' → logprob: -12.845900535583496
    9. '    ' → logprob: -12.970900535583496
    10. '+="' → logprob: -13.345900535583496

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.129077911376953
    4. '  ' → logprob: -17.254077911376953
    5. ' ' → logprob: -18.004077911376953
    6. '```' → logprob: -18.629077911376953
    7. '    ' → logprob: -18.879077911376953
    8. '<|end|>' → logprob: -19.129077911376953
    9. '2' → logprob: -19.816577911376953
    10. '۱' → logprob: -19.879077911376953

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '  ' → logprob: -18.000019073486328
    5. '```' → logprob: -19.437519073486328
    6. '<|end|>' → logprob: -19.437519073486328
    7. '    ' → logprob: -19.687519073486328
    8. '１' → logprob: -19.750019073486328
    9. '१' → logprob: -19.812519073486328
    10. '۱' → logprob: -19.875019073486328

Token 70: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2306702882051468
    2. '   ' → logprob: -1.6056703329086304
    3. 'return' → logprob: -5.98067045211792
    4. '    
' → logprob: -6.73067045211792
    5. ' return' → logprob: -7.35567045211792
    6. ' 
' → logprob: -8.355669975280762
    7. '  
' → logprob: -8.855669975280762
    8. '```' → logprob: -8.855669975280762
    9. '<|end|>' → logprob: -8.980669975280762
    10. '\n' → logprob: -9.605669975280762

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19307640194892883
    2. 'return' → logprob: -2.0680763721466064
    3. '
' → logprob: -3.0680763721466064
    4. '    
' → logprob: -6.4430766105651855
    5. ' return' → logprob: -7.1930766105651855
    6. '```' → logprob: -9.443076133728027
    7. '  
' → logprob: -9.443076133728027
    8. ' 
' → logprob: -10.318076133728027
    9. '1' → logprob: -10.568076133728027
    10. ' ' → logprob: -10.693076133728027

Token 72: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0014353510923683643
    2. '   ' → logprob: -6.751435279846191
    3. ' return' → logprob: -8.251435279846191
    4. '
' → logprob: -13.501435279846191
    5. ' ' → logprob: -13.876435279846191
    6. '    
' → logprob: -14.126435279846191
    7. '	return' → logprob: -14.626435279846191
    8. '  ' → logprob: -15.001435279846191
    9. '```' → logprob: -15.751435279846191
    10. 'eturn' → logprob: -17.001436233520508

Token 73: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020678490400314
    2. ' True' → logprob: -2.3502068519592285
    3. 'Tr' → logprob: -16.85020637512207
    4. '(True' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.22520637512207
    6. ' Tru' → logprob: -17.85020637512207
    7. 'False' → logprob: -18.22520637512207
    8. ' ' → logprob: -18.47520637512207
    9. '   ' → logprob: -19.22520637512207
    10. '  ' → logprob: -19.35020637512207

Token 74: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006350704003125429
    2. ':' → logprob: -5.256350517272949
    3. ' +' → logprob: -8.25635051727295
    4. 's' → logprob: -8.75635051727295
    5. '+:' → logprob: -9.00635051727295
    6. ')' → logprob: -9.13135051727295
    7. '<|end|>' → logprob: -9.25635051727295
    8. '+
' → logprob: -9.50635051727295
    9. '(' → logprob: -10.25635051727295
    10. '2' → logprob: -10.50635051727295

Token 75: 'X' (ID: 55)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4012914001941681
    2. '<|end|>' → logprob: -1.6512913703918457
    3. '```' → logprob: -2.9012913703918457
    4. 'def' → logprob: -3.5262913703918457
    5. ' ' → logprob: -4.276291370391846
    6. '   ' → logprob: -4.401291370391846
    7. '#' → logprob: -4.901291370391846
    8. ')' → logprob: -5.026291370391846
    9. '
' → logprob: -5.901291370391846
    10. '(' → logprob: -6.651291370391846

Token 76: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25393661856651306
    2. '_' → logprob: -2.253936529159546
    3. '=' → logprob: -2.503936529159546
    4. ' =' → logprob: -4.628936767578125
    5. '.' → logprob: -5.128936767578125
    6. ' :' → logprob: -5.253936767578125
    7. '>' → logprob: -5.753936767578125
    8. ' ==' → logprob: -6.128936767578125
    9. '(' → logprob: -6.253936767578125
    10. ' ' → logprob: -6.378936767578125

Token 77: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5516684651374817
    2. ' int' → logprob: -1.426668405532837
    3. '10' → logprob: -2.051668405532837
    4. ' ' → logprob: -3.301668405532837
    5. '100' → logprob: -4.551668643951416
    6. '20' → logprob: -5.426668643951416
    7. '50' → logprob: -7.051668643951416
    8. '[int' → logprob: -7.801668643951416
    9. '25' → logprob: -8.051668167114258
    10. '15' → logprob: -8.051668167114258

Token 78: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12705808877944946
    2. '(' → logprob: -2.1270580291748047
    3. 'input' → logprob: -9.252058029174805
    4. '()' → logprob: -11.377058029174805
    5. ' (' → logprob: -11.627058029174805
    6. '(
' → logprob: -12.002058029174805
    7. '('' → logprob: -12.502058029174805
    8. '("' → logprob: -13.752058029174805
    9. ' ' → logprob: -13.877058029174805
    10. '=input' → logprob: -14.877058029174805

Token 79: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6540087461471558
    2. '(' → logprob: -0.7790087461471558
    3. '('' → logprob: -5.029008865356445
    4. '("("' → logprob: -5.029008865356445
    5. '())' → logprob: -5.279008865356445
    6. '("' → logprob: -6.404008865356445
    7. '("")' → logprob: -7.654008865356445
    8. '(()' → logprob: -8.654008865356445
    9. '(">' → logprob: -8.654008865356445
    10. ')' → logprob: -8.779008865356445

Token 80: 'if' (ID: 366)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7999110221862793
    2. 'if' → logprob: -0.9249110221862793
    3. 'for' → logprob: -2.4249110221862793
    4. 'print' → logprob: -3.4249110221862793
    5. 'result' → logprob: -3.7999110221862793
    6. 'found' → logprob: -5.549911022186279
    7. 'comp' → logprob: -6.299911022186279
    8. 'nombre' → logprob: -7.174911022186279
    9. 'div' → logprob: -7.299911022186279
    10. 'prime' → logprob: -7.299911022186279

Token 81: ' est' (ID: 893)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.5374706387519836
    2. ' est' → logprob: -0.9124706387519836
    3. 'est' → logprob: -4.787470817565918
    4. ' ' → logprob: -5.662470817565918
    5. 'X' → logprob: -6.037470817565918
    6. '  ' → logprob: -11.037470817565918
    7. ' ' → logprob: -11.537470817565918
    8. '(est' → logprob: -11.537470817565918
    9. ' es' → logprob: -13.224970817565918
    10. ' not' → logprob: -13.349970817565918

Token 82: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.584861744660884e-05
    2. '_' → logprob: -10.000045776367188
    3. ' _' → logprob: -15.375045776367188
    4. 'prem' → logprob: -16.375045776367188
    5. '_s' → logprob: -16.875045776367188
    6. 's' → logprob: -18.250045776367188
    7. '_t' → logprob: -18.375045776367188
    8. '_pres' → logprob: -18.500045776367188
    9. 'p' → logprob: -19.000045776367188
    10. '__' → logprob: -19.500045776367188

Token 83: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.00010402000043541193
    2. 'r' → logprob: -9.750103950500488
    3. 'prem' → logprob: -10.125103950500488
    4. 'erm' → logprob: -12.750103950500488
    5. 'rim' → logprob: -13.375103950500488
    6. 're' → logprob: -15.000103950500488
    7. 'remium' → logprob: -15.750103950500488
    8. 'ram' → logprob: -15.875103950500488
    9. '_rem' → logprob: -16.500104904174805
    10. ' rem' → logprob: -16.625104904174805

Token 84: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.029766341671347618
    2. 'i' → logprob: -3.529766321182251
    3. 'e' → logprob: -12.529766082763672
    4. 'iers' → logprob: -13.404766082763672
    5. 'ierd' → logprob: -13.404766082763672
    6. '   ' → logprob: -13.529766082763672
    7. 'ière' → logprob: -13.904766082763672
    8. 'a' → logprob: -14.029766082763672
    9. '_i' → logprob: -14.154766082763672
    10. '_' → logprob: -14.154766082763672

Token 85: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029863880947232246
    2. '(X' → logprob: -3.5298638343811035
    3. '('' → logprob: -9.779864311218262
    4. '("("' → logprob: -10.654864311218262
    5. '(x' → logprob: -11.654864311218262
    6. ' (' → logprob: -11.779864311218262
    7. '(nombre' → logprob: -12.404864311218262
    8. '("' → logprob: -12.529864311218262
    9. '(
' → logprob: -12.654864311218262
    10. '(n' → logprob: -13.779864311218262

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10262691229581833
    2. ')' → logprob: -2.3526268005371094
    3. ' ):' → logprob: -6.102626800537109
    4. ' )' → logprob: -9.47762680053711
    5. '(' → logprob: -10.10262680053711
    6. ':' → logprob: -10.47762680053711
    7. '():' → logprob: -11.47762680053711
    8. '()' → logprob: -12.35262680053711
    9. ')==' → logprob: -12.47762680053711
    10. '):
' → logprob: -12.97762680053711

Token 87: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020807012333534658
    2. ':
' → logprob: -9.125207901000977
    3. ' :' → logprob: -9.250207901000977
    4. '():' → logprob: -14.375207901000977
    5. ' print' → logprob: -14.375207901000977
    6. 'print' → logprob: -14.500207901000977
    7. ' :
' → logprob: -14.625207901000977
    8. ':return' → logprob: -15.250207901000977
    9. '   ' → logprob: -16.000207901000977
    10. ':**' → logprob: -16.250207901000977

Token 88: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7106677889823914
    2. ':' → logprob: -1.4606678485870361
    3. 'print' (adapté à ' print') → logprob: -1.8356678485870361
    4. '   ' → logprob: -2.835667848587036
    5. ' 
' → logprob: -4.210667610168457
    6. '\n' → logprob: -4.460667610168457
    7. '\' → logprob: -5.085667610168457
    8. ' :' → logprob: -5.460667610168457
    9. '    ' → logprob: -5.460667610168457
    10. '(' → logprob: -5.585667610168457

Token 89: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0582890622317791
    2. '("("' → logprob: -3.058289051055908
    3. '("' → logprob: -4.683289051055908
    4. '('' → logprob: -7.933289051055908
    5. '("(' → logprob: -10.683289527893066
    6. '("")' → logprob: -11.433289527893066
    7. '(
' → logprob: -13.058289527893066
    8. '"' → logprob: -13.308289527893066
    9. '(""' → logprob: -13.433289527893066
    10. '()' → logprob: -13.433289527893066

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020830852736253291
    2. ' )' → logprob: -8.500207901000977
    3. '))' → logprob: -13.000207901000977
    4. '*' → logprob: -14.625207901000977
    5. '()' → logprob: -14.750207901000977
    6. ' ' → logprob: -15.125207901000977
    7. ',' → logprob: -15.250207901000977
    8. ')
' → logprob: -15.375207901000977
    9. '')' → logprob: -15.625207901000977
    10. '**' → logprob: -15.750207901000977

Token 91: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3557690680027008
    2. '<|end|>' → logprob: -2.105769157409668
    3. ' else' → logprob: -2.230769157409668
    4. '```' → logprob: -3.105769157409668
    5. ' ' → logprob: -4.605769157409668
    6. '.' → logprob: -5.105769157409668
    7. 'elif' → logprob: -6.230769157409668
    8. ':' → logprob: -6.855769157409668
    9. ')' → logprob: -6.855769157409668
    10. '   ' → logprob: -6.980769157409668

Token 92: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10566232353448868
    2. ' else' → logprob: -2.3556623458862305
    3. '<|end|>' → logprob: -5.9806623458862305
    4. 'elif' → logprob: -6.6056623458862305
    5. ' ' → logprob: -7.2306623458862305
    6. ')' → logprob: -8.85566234588623
    7. '```' → logprob: -8.98066234588623
    8. ' elif' → logprob: -8.98066234588623
    9. '    ' → logprob: -9.23066234588623
    10. '#' → logprob: -9.85566234588623

Token 93: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38698360323905945
    2. '()' → logprob: -1.1369836330413818
    3. '(
' → logprob: -9.636983871459961
    4. '()
' → logprob: -11.386983871459961
    5. '(

' → logprob: -11.386983871459961
    6. ')' → logprob: -13.011983871459961
    7. '_' → logprob: -13.011983871459961
    8. ' ()' → logprob: -13.511983871459961
    9. '```' → logprob: -13.511983871459961
    10. '()

' → logprob: -13.636983871459961

Token 94: 'if' (ID: 366)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09369973838329315
    2. 'elif' → logprob: -3.2186996936798096
    3. '<|end|>' → logprob: -4.343699932098389
    4. ' else' → logprob: -4.718699932098389
    5. ' ' → logprob: -4.843699932098389
    6. '  
' → logprob: -5.218699932098389
    7. ' 
' → logprob: -6.093699932098389
    8. 'print' → logprob: -6.218699932098389
    9. '    
' → logprob: -6.593699932098389
    10. '
' → logprob: -6.843699932098389

Token 95: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6498122215270996
    2. ' X' → logprob: -0.7748122215270996
    3. ' not' → logprob: -4.6498122215271
    4. '  ' → logprob: -5.8998122215271
    5. 'X' → logprob: -6.0248122215271
    6. ' ' → logprob: -7.6498122215271
    7. '_' → logprob: -7.6498122215271
    8. ' _' → logprob: -8.149812698364258
    9. 'not' → logprob: -8.399812698364258
    10. ' (' → logprob: -8.774812698364258

Token 96: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2722538709640503
    2. ' >' → logprob: -1.7722538709640503
    3. '%' → logprob: -3.39725399017334
    4. ' <' → logprob: -4.14725399017334
    5. ' ' → logprob: -4.52225399017334
    6. ' ==' → logprob: -5.14725399017334
    7. '>' → logprob: -6.77225399017334
    8. ' <=' → logprob: -7.52225399017334
    9. '==' → logprob: -8.64725399017334
    10. '<' → logprob: -9.02225399017334

Token 97: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132808804512024
    2. '2' → logprob: -1.3132808208465576
    3. ' ' → logprob: -11.813281059265137
    4. '```' → logprob: -12.813281059265137
    5. '3' → logprob: -12.938281059265137
    6. '1' → logprob: -13.438281059265137
    7. '6' → logprob: -13.813281059265137
    8. '4' → logprob: -14.500781059265137
    9. '10' → logprob: -14.750781059265137
    10. ' ```' → logprob: -14.875781059265137

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002504197880625725
    2. ' ' → logprob: -6.002504348754883
    3. '3' → logprob: -11.377504348754883
    4. '4' → logprob: -12.627504348754883
    5. '5' → logprob: -13.127504348754883
    6. '10' → logprob: -13.252504348754883
    7. '1' → logprob: -13.315004348754883
    8. '```' → logprob: -13.565004348754883
    9. '6' → logprob: -13.627504348754883
    10. '  ' → logprob: -13.752504348754883

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005031421314924955
    2. '==' → logprob: -5.630031585693359
    3. ' !=' → logprob: -6.630031585693359
    4. ' ' → logprob: -9.25503158569336
    5. ' =' → logprob: -12.25503158569336
    6. '0' → logprob: -12.38003158569336
    7. '!=' → logprob: -13.00503158569336
    8. '=' → logprob: -13.38003158569336
    9. ' ' → logprob: -14.00503158569336
    10. '1' → logprob: -15.63003158569336

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.386930376291275
    2. ' ' → logprob: -1.1369303464889526
    3. '1' → logprob: -9.761930465698242
    4. '2' → logprob: -14.574430465698242
    5. '=' → logprob: -15.449430465698242
    6. '  ' → logprob: -15.824430465698242
    7. '```' → logprob: -15.886930465698242
    8. '==' → logprob: -15.949430465698242
    9. ' ' → logprob: -16.011930465698242
    10. '   ' → logprob: -16.761930465698242

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043153904378414154
    2. ' ' → logprob: -3.168154001235962
    3. '1' → logprob: -8.793153762817383
    4. '2' → logprob: -13.543153762817383
    5. '  ' → logprob: -15.668153762817383
    6. '=' → logprob: -15.730653762817383
    7. '```' → logprob: -15.793153762817383
    8. '3' → logprob: -15.980653762817383
    9. '

' → logprob: -16.293153762817383
    10. '==' → logprob: -16.355653762817383

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1271265298128128
    2. ' :' → logprob: -2.127126455307007
    3. ' and' → logprob: -9.127126693725586
    4. ' :
' → logprob: -9.752126693725586
    5. ':
' → logprob: -10.502126693725586
    6. 'and' → logprob: -14.252126693725586
    7. ':return' → logprob: -14.252126693725586
    8. ' ):' → logprob: -14.627126693725586
    9. '):' → logprob: -14.627126693725586
    10. ':**' → logprob: -15.002126693725586

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09401696920394897
    2. ':' → logprob: -2.4690170288085938
    3. ' print' → logprob: -5.969017028808594
    4. ' :' → logprob: -6.719017028808594
    5. 'print' → logprob: -7.469017028808594
    6. ':
' → logprob: -7.719017028808594
    7. ' :
' → logprob: -9.844017028808594
    8. '  ' → logprob: -10.219017028808594
    9. '    ' → logprob: -10.344017028808594
    10. ' ' → logprob: -10.469017028808594

Token 104: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6215378046035767
    2. ' print' → logprob: -0.8715378046035767
    3. 'print' → logprob: -3.496537685394287
    4. ' for' → logprob: -5.496537685394287
    5. ' X' → logprob: -5.746537685394287
    6. ' if' → logprob: -5.746537685394287
    7. '    ' → logprob: -7.371537685394287
    8. 'X' (adapté à ' X') → logprob: -7.371537685394287
    9. '    
' → logprob: -7.871537685394287
    10. 'if' → logprob: -7.871537685394287

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.07265305519104
    2. ' -=' → logprob: -1.19765305519104
    3. ' //' → logprob: -1.82265305519104
    4. ' /=' → logprob: -2.07265305519104
    5. ' +=' → logprob: -2.82265305519104
    6. ' ' → logprob: -5.697652816772461
    7. '=' → logprob: -5.822652816772461
    8. ' *=' → logprob: -6.822652816772461
    9. '//=' → logprob: -7.197652816772461
    10. ' >>=' → logprob: -8.322652816772461

Token 106: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.04914829134941101
    2. 'X' → logprob: -3.0491483211517334
    3. ' ' → logprob: -7.799148082733154
    4. ' int' → logprob: -10.174148559570312
    5. 'int' → logprob: -10.174148559570312
    6. '   ' → logprob: -10.674148559570312
    7. '2' → logprob: -10.674148559570312
    8. '  ' → logprob: -11.424148559570312
    9. '	X' → logprob: -12.174148559570312
    10. '1' → logprob: -13.049148559570312

Token 107: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9122945666313171
    2. ' +' → logprob: -0.9122945666313171
    3. '+' → logprob: -2.037294626235962
    4. ' //' → logprob: -3.037294626235962
    5. ' -' → logprob: -4.412294387817383
    6. '-' → logprob: -5.662294387817383
    7. '//' → logprob: -7.037294387817383
    8. ' else' → logprob: -7.537294387817383
    9. '<|end|>' → logprob: -8.037294387817383
    10. ' /' → logprob: -8.412294387817383

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12704192101955414
    2. ' ' → logprob: -2.127041816711426
    3. '2' → logprob: -9.377041816711426
    4. '-' → logprob: -11.002041816711426
    5. ' -' → logprob: -11.627041816711426
    6. '  ' → logprob: -13.877041816711426
    7. '   ' → logprob: -14.252041816711426
    8. '3' → logprob: -14.439541816711426
    9. '0' → logprob: -15.127041816711426
    10. '11' → logprob: -15.689541816711426

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. '-' → logprob: -11.000028610229492
    3. '2' → logprob: -11.875028610229492
    4. ' ' → logprob: -13.250028610229492
    5. '3' → logprob: -13.500028610229492
    6. '```' → logprob: -15.000028610229492
    7. '11' → logprob: -15.812528610229492
    8. '9' → logprob: -16.187528610229492
    9. '

' → logprob: -16.437528610229492
    10. '!' → logprob: -16.500028610229492

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' True' (ID: 6432)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.004895485006272793
    2. ' not' → logprob: -6.1298956871032715
    3. ' True' → logprob: -6.1298956871032715
    4. 'X' → logprob: -7.7548956871032715
    5. ' ' → logprob: -9.629895210266113
    6. 'True' → logprob: -10.504895210266113
    7. '<|end|>' → logprob: -12.379895210266113
    8. 'not' → logprob: -13.629895210266113
    9. '	X' → logprob: -13.754895210266113
    10. '  ' → logprob: -14.379895210266113

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03376591205596924
    2. ' :' → logprob: -3.4087657928466797
    3. '<|end|>' → logprob: -10.15876579284668
    4. '   ' → logprob: -10.53376579284668
    5. ' :
' → logprob: -10.78376579284668
    6. ':
' → logprob: -10.90876579284668
    7. ' ' → logprob: -12.53376579284668
    8. '):' → logprob: -12.65876579284668
    9. '<|end|>' → logprob: -13.03376579284668
    10. '    ' → logprob: -13.78376579284668

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015320618636906147
    2. '    ' → logprob: -4.765320777893066
    3. ' ' → logprob: -6.015320777893066
    4. '<|end|>' → logprob: -6.265320777893066
    5. '    
' → logprob: -7.140320777893066
    6. ' if' → logprob: -7.140320777893066
    7. '       ' → logprob: -8.015320777893066
    8. ' 
' → logprob: -8.890320777893066
    9. '  ' → logprob: -9.265320777893066
    10. '     
' → logprob: -9.890320777893066

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26407331228256226
    2. '   ' → logprob: -1.639073371887207
    3. '    ' → logprob: -3.889073371887207
    4. 'if' (adapté à ' if') → logprob: -4.264073371887207
    5. ' ' → logprob: -6.264073371887207
    6. '<|end|>' → logprob: -7.139073371887207
    7. '    
' → logprob: -8.514073371887207
    8. ' i' → logprob: -8.764073371887207
    9. ' 
' → logprob: -9.014073371887207
    10. '  ' → logprob: -9.389073371887207

Token 116: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -3.2378600735682994e-05
    2. 'est' → logprob: -10.375032424926758
    3. '(est' → logprob: -14.750032424926758
    4. ' ' → logprob: -15.250032424926758
    5. ' ' → logprob: -16.000032424926758
    6. ' not' → logprob: -16.250032424926758
    7. '   ' → logprob: -16.500032424926758
    8. 'X' → logprob: -17.125032424926758
    9. '.est' → logprob: -17.250032424926758
    10. ' X' → logprob: -18.500032424926758

Token 117: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00011677479778882116
    2. '_' → logprob: -9.125116348266602
    3. 'prem' → logprob: -12.750116348266602
    4. ' _' → logprob: -13.625116348266602
    5. '_pr' → logprob: -14.125116348266602
    6. '_s' → logprob: -14.500116348266602
    7. '_prime' → logprob: -15.125116348266602
    8. 'p' → logprob: -15.375116348266602
    9. '_pas' → logprob: -15.375116348266602
    10. '_t' → logprob: -15.500116348266602

Token 118: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.00025764419115148485
    2. 'r' → logprob: -8.37525749206543
    3. 'erm' → logprob: -11.00025749206543
    4. 're' → logprob: -12.50025749206543
    5. 'prem' → logprob: -12.50025749206543
    6. 'rim' → logprob: -14.25025749206543
    7. '_rem' → logprob: -14.75025749206543
    8. 'ren' → logprob: -14.75025749206543
    9. 'ram' → logprob: -14.75025749206543
    10. ' rem' → logprob: -15.37525749206543

Token 119: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: 0.0
    2. ' ier' → logprob: -17.875
    3. 'iers' → logprob: -18.0
    4. 'i' → logprob: -18.25
    5. 'ierd' → logprob: -19.0
    6. 'ieur' → logprob: -19.625
    7. 'er' → logprob: -19.75
    8. 'iert' → logprob: -20.0
    9. 'iere' → logprob: -20.25
    10. '1' → logprob: -20.25

Token 120: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.00023107275774236768
    2. '(' → logprob: -8.37523078918457
    3. '(
' → logprob: -15.37523078918457
    4. '(x' → logprob: -16.00023078918457
    5. ' (' → logprob: -16.87523078918457
    6. 'X' → logprob: -17.12523078918457
    7. '((' → logprob: -17.12523078918457
    8. '(i' → logprob: -20.12523078918457
    9. '(N' → logprob: -20.25023078918457
    10. '("("' → logprob: -20.25023078918457

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048743490129709244
    2. '):
' → logprob: -3.048743486404419
    3. '+' → logprob: -9.17374324798584
    4. ':' → logprob: -10.79874324798584
    5. ')' → logprob: -11.17374324798584
    6. '   ' → logprob: -11.54874324798584
    7. '):

' → logprob: -13.04874324798584
    8. ' ):' → logprob: -13.04874324798584
    9. '):
' → logprob: -13.42374324798584
    10. '+:' → logprob: -14.92374324798584

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003479785518720746
    2. ':' → logprob: -8.750348091125488
    3. '   ' → logprob: -9.000348091125488
    4. ':
' → logprob: -10.500348091125488
    5. '
' → logprob: -11.125348091125488
    6. '<|end|>' → logprob: -12.000348091125488
    7. '```' → logprob: -12.500348091125488
    8. ',' → logprob: -12.875348091125488
    9. '    
' → logprob: -13.375348091125488
    10. '      ' → logprob: -13.375348091125488

Token 123: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37420183420181274
    2. '   ' → logprob: -1.249201774597168
    3. ' print' → logprob: -4.249201774597168
    4. 'print' (adapté à ' print') → logprob: -4.499201774597168
    5. ' ' → logprob: -11.374201774597168
    6. '```' → logprob: -12.249201774597168
    7. '	print' → logprob: -12.249201774597168
    8. '   ' → logprob: -12.749201774597168
    9. '
' → logprob: -13.249201774597168
    10. ' break' → logprob: -13.374201774597168

Token 124: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.006717743817716837
    2. '(' → logprob: -5.006717681884766
    3. 'X' → logprob: -13.131717681884766
    4. '(x' → logprob: -14.881717681884766
    5. '(
' → logprob: -16.756717681884766
    6. '('' → logprob: -17.381717681884766
    7. '("("' → logprob: -18.506717681884766
    8. '("' → logprob: -18.506717681884766
    9. '((' → logprob: -18.631717681884766
    10. ' (' → logprob: -19.381717681884766

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31846946477890015
    2. ')
' → logprob: -1.443469524383545
    3. '       ' → logprob: -3.318469524383545
    4. '   ' → logprob: -7.818469524383545
    5. ')
' → logprob: -11.943469047546387
    6. ' )
' → logprob: -13.193469047546387
    7. ',' → logprob: -13.193469047546387
    8. ' )' → logprob: -13.318469047546387
    9. '):
' → logprob: -13.818469047546387
    10. '           ' → logprob: -13.943469047546387

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.371605948312208e-05
    2. '   ' → logprob: -9.875053405761719
    3. '           ' → logprob: -14.500053405761719
    4. 'break' → logprob: -15.000053405761719
    5. '      ' → logprob: -15.250053405761719
    6. ' break' → logprob: -15.750053405761719
    7. '<|end|>' → logprob: -15.875053405761719
    8. ',' → logprob: -16.00005340576172
    9. '        
' → logprob: -16.12505340576172
    10. '
' → logprob: -16.12505340576172

Token 127: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8626936078071594
    2. 'break' (adapté à ' break') → logprob: -0.8626936078071594
    3. ' break' → logprob: -1.8626935482025146
    4. 'exit' → logprob: -7.737693786621094
    5. '   ' → logprob: -8.862693786621094
    6. '	break' → logprob: -9.487693786621094
    7. ' exit' → logprob: -10.112693786621094
    8. ' ' → logprob: -12.987693786621094
    9. '      ' → logprob: -14.487693786621094
    10. '     ' → logprob: -14.737693786621094

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3080716346157715e-05
    2. 'X' → logprob: -11.250022888183594
    3. '    
' → logprob: -12.375022888183594
    4. '<|end|>' → logprob: -12.625022888183594
    5. '<|end|>' → logprob: -14.375022888183594
    6. '	X' → logprob: -15.000022888183594
    7. '  ' → logprob: -15.500022888183594
    8. ' ' → logprob: -15.625022888183594
    9. ' X' → logprob: -15.875022888183594
    10. '       ' → logprob: -15.875022888183594

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08944298326969147
    2. 'X' → logprob: -2.4644429683685303
    3. ' X' → logprob: -9.08944320678711
    4. '    
' → logprob: -9.21444320678711
    5. 'else' → logprob: -9.96444320678711
    6. '+' → logprob: -9.96444320678711
    7. '  ' → logprob: -9.96444320678711
    8. '.' → logprob: -10.21444320678711
    9. ' ' → logprob: -10.21444320678711
    10. ' else' → logprob: -11.21444320678711

Token 130: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10317658632993698
    2. 'X' (adapté à ' X') → logprob: -2.3531765937805176
    3. ' X' → logprob: -5.853176593780518
    4. 'else' → logprob: -9.97817611694336
    5. ' else' → logprob: -11.22817611694336
    6. '
' → logprob: -11.97817611694336
    7. '	X' → logprob: -11.97817611694336
    8. '+' → logprob: -12.22817611694336
    9. ' ' → logprob: -12.35317611694336
    10. '    
' → logprob: -12.60317611694336

Token 131: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14790982007980347
    2. '+=' → logprob: -2.1479098796844482
    3. '+' → logprob: -3.8979098796844482
    4. '=' → logprob: -7.772909641265869
    5. ' =' → logprob: -10.522910118103027
    6. ' ' → logprob: -11.022910118103027
    7. ' +' → logprob: -11.647910118103027
    8. '+='' → logprob: -13.147910118103027
    9. '+="' → logprob: -13.647910118103027
    10. '	' → logprob: -13.772910118103027

Token 132: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.02325037121772766
    2. 'X' → logprob: -3.7732503414154053
    3. ' ' → logprob: -12.648250579833984
    4. '	X' → logprob: -13.648250579833984
    5. '+' → logprob: -15.148250579833984
    6. ' ' → logprob: -16.773250579833984
    7. '    ' → logprob: -18.023250579833984
    8. '>X' → logprob: -18.148250579833984
    9. '<|end|>' → logprob: -18.398250579833984
    10. '   ' → logprob: -18.523250579833984

Token 133: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015321242390200496
    2. ' +' → logprob: -6.501532077789307
    3. ' ' → logprob: -10.751532554626465
    4. '+=' → logprob: -12.876532554626465
    5. 'X' → logprob: -13.126532554626465
    6. '2' → logprob: -13.251532554626465
    7. ' +=' → logprob: -13.751532554626465
    8. '1' → logprob: -15.376532554626465
    9. ' plus' → logprob: -15.376532554626465
    10. '+
' → logprob: -15.501532554626465

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000204851632588543
    2. ' ' → logprob: -8.500205039978027
    3. '1' → logprob: -13.750205039978027
    4. '   ' → logprob: -15.375205039978027
    5. '  ' → logprob: -17.50020408630371
    6. '	' → logprob: -17.56270408630371
    7. '```' → logprob: -17.81270408630371
    8. ' ' → logprob: -18.25020408630371
    9. '0' → logprob: -18.56270408630371
    10. '۲' → logprob: -18.68770408630371

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -14.000004768371582
    4. '   ' → logprob: -17.750003814697266
    5. '0' → logprob: -19.062503814697266
    6. '  ' → logprob: -19.125003814697266
    7. '```' → logprob: -19.312503814697266
    8. '6' → logprob: -19.812503814697266
    9. '	' → logprob: -20.000003814697266
    10. '۲' → logprob: -20.687503814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 43.61%
Précision adaptée (1ère position): 44.36%
Précision (top 10): 82.71%
================================================================================
