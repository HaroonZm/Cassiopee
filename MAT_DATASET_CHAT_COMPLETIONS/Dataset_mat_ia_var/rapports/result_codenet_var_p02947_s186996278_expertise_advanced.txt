================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter, defaultdict
from sys import stdin

N = int(stdin.readline())
strings = [stdin.readline().strip() for _ in range(N)]

count = Counter(''.join(sorted(s)) for s in strings)

ans = sum(v * (v - 1) // 2 for v in count.values())

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0752272605895996
    2. 'abc' → logprob: -1.2002272605895996
    3. ' defaultdict' → logprob: -1.7002272605895996
    4. 'default' → logprob: -2.2002272605895996
    5. 'Counter' → logprob: -3.4502272605895996
    6. ' abc' → logprob: -3.9502272605895996
    7. ' Counter' → logprob: -5.2002272605896
    8. ' deque' → logprob: -5.7002272605896
    9. '```' → logprob: -6.2002272605896
    10. 'named' → logprob: -6.7002272605896

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001375089050270617
    2. '\(' → logprob: -9.750137329101562
    3. '.' → logprob: -9.875137329101562
    4. '(
' → logprob: -12.250137329101562
    5. '\' → logprob: -12.375137329101562
    6. ' (' → logprob: -12.750137329101562
    7. 'a' → logprob: -12.875137329101562
    8. 'newline' → logprob: -13.125137329101562
    9. '()' → logprob: -13.250137329101562
    10. '```' → logprob: -13.500137329101562

Token 5: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.01227499358355999
    2. 'default' → logprob: -4.512275218963623
    3. 'deque' → logprob: -7.012275218963623
    4. ' deque' → logprob: -8.137274742126465
    5. ' abc' → logprob: -11.637274742126465
    6. 'abc' → logprob: -12.012274742126465
    7. ' default' → logprob: -12.137274742126465
    8. ' Ordered' → logprob: -12.262274742126465
    9. 'Ordered' → logprob: -12.387274742126465
    10. 'named' → logprob: -13.137274742126465

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03981216624379158
    2. '.' → logprob: -4.164812088012695
    3. '```' → logprob: -4.789812088012695
    4. '(
' → logprob: -5.289812088012695
    5. '\' → logprob: -5.789812088012695
    6. ',' → logprob: -6.414812088012695
    7. '\n' → logprob: -6.664812088012695
    8. 'newline' → logprob: -7.164812088012695
    9. '`' → logprob: -7.289812088012695
    10. 'import' → logprob: -7.414812088012695

Token 7: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.189987912774086
    2. '\n' → logprob: -2.814987897872925
    3. '```' → logprob: -3.314987897872925
    4. '

' → logprob: -3.814987897872925
    5. '(
' → logprob: -4.064988136291504
    6. '
' → logprob: -4.939988136291504
    7. 'import' → logprob: -4.939988136291504
    8. '(' → logprob: -5.064988136291504
    9. ',' → logprob: -5.439988136291504
    10. '\' → logprob: -5.564988136291504

Token 8: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.06386862695217133
    2. ' typing' → logprob: -3.688868522644043
    3. ' math' → logprob: -4.063868522644043
    4. ' os' → logprob: -4.938868522644043
    5. ' collections' → logprob: -4.938868522644043
    6. ' functools' → logprob: -6.813868522644043
    7. ' heap' → logprob: -7.563868522644043
    8. 'collections' → logprob: -7.688868522644043
    9. ' datetime' → logprob: -7.938868522644043
    10. ' random' → logprob: -8.063868522644043

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.002873346209526062
    2. 'import' → logprob: -5.877873420715332
    3. ' ' → logprob: -9.752873420715332
    4. '	import' → logprob: -12.002873420715332
    5. ' imports' → logprob: -13.877873420715332
    6. ' importar' → logprob: -14.002873420715332
    7. '.' → logprob: -14.752873420715332
    8. '_import' → logprob: -15.252873420715332
    9. '.import' → logprob: -15.252873420715332
    10. ' impor' → logprob: -15.502873420715332

Token 10: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.958801805973053
    2. 'argv' → logprob: -1.3338017463684082
    3. ' argv' → logprob: -1.5838017463684082
    4. 'stdin' → logprob: -2.333801746368408
    5. ' exit' → logprob: -3.333801746368408
    6. 'exit' → logprob: -5.208801746368408
    7. 'stderr' → logprob: -5.458801746368408
    8. 'stdout' → logprob: -5.583801746368408
    9. ' stderr' → logprob: -6.958801746368408
    10. ' stdout' → logprob: -7.708801746368408

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9031125903129578
    2. '```' → logprob: -1.0281126499176025
    3. '

' → logprob: -2.4031126499176025
    4. '\n' → logprob: -2.6531126499176025
    5. 'for' → logprob: -3.6531126499176025
    6. '\' → logprob: -4.403112411499023
    7. 'import' → logprob: -4.903112411499023
    8. '.' → logprob: -4.903112411499023
    9. '``' → logprob: -5.403112411499023
    10. '
' → logprob: -6.028112411499023

Token 12: 'N' (ID: 45)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6216408610343933
    2. 'for' → logprob: -1.496640920639038
    3. '\n' → logprob: -1.996640920639038
    4. '```' → logprob: -3.371640920639038
    5. '`' → logprob: -4.371640682220459
    6. '[' → logprob: -4.746640682220459
    7. '
' → logprob: -4.996640682220459
    8. 'read' → logprob: -5.121640682220459
    9. '``' → logprob: -5.246640682220459
    10. '\' → logprob: -5.621640682220459

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07987397164106369
    2. '=' → logprob: -2.579874038696289
    3. ',' → logprob: -7.454874038696289
    4. ' ' → logprob: -8.454874038696289
    5. '.' → logprob: -9.454874038696289
    6. '_' → logprob: -10.204874038696289
    7. ')' → logprob: -10.829874038696289
    8. '  ' → logprob: -11.329874038696289
    9. ' ,' → logprob: -11.454874038696289
    10. '=int' → logprob: -11.704874038696289

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02477080561220646
    2. 'int' → logprob: -3.774770736694336
    3. ' ' → logprob: -6.649770736694336
    4. '10' → logprob: -9.524770736694336
    5. '=int' → logprob: -9.649770736694336
    6. ' input' → logprob: -10.149770736694336
    7. '[int' → logprob: -11.399770736694336
    8. '<int' → logprob: -11.649770736694336
    9. '0' → logprob: -11.899770736694336
    10. '5' → logprob: -12.149770736694336

Token 15: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1826159507036209
    2. '(stdin' → logprob: -1.8076159954071045
    3. '(input' → logprob: -6.682615756988525
    4. '('' → logprob: -6.682615756988525
    5. '(st' → logprob: -8.807616233825684
    6. '()' → logprob: -9.682616233825684
    7. '("("' → logprob: -10.307616233825684
    8. '(
' → logprob: -10.932616233825684
    9. '(`' → logprob: -11.057616233825684
    10. ''' → logprob: -11.557616233825684

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001707659917883575
    2. '.read' → logprob: -6.501707553863525
    3. '.' → logprob: -8.501708030700684
    4. '.readlines' → logprob: -13.626708030700684
    5. ')' → logprob: -14.626708030700684
    6. ').' → logprob: -15.876708030700684
    7. '.Read' → logprob: -16.126707077026367
    8. '().' → logprob: -16.126707077026367
    9. 'read' → logprob: -16.751707077026367
    10. '.)' → logprob: -17.001707077026367

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30162134766578674
    2. '()' → logprob: -1.4266213178634644
    3. ')' → logprob: -3.926621437072754
    4. '().' → logprob: -8.176621437072754
    5. '(' → logprob: -8.801621437072754
    6. ' ())' → logprob: -9.926621437072754
    7. '()))' → logprob: -11.176621437072754
    8. '('' → logprob: -11.176621437072754
    9. '()[' → logprob: -11.801621437072754
    10. '`)' → logprob: -12.051621437072754

Token 18: 'strings' (ID: 41195)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.2243669033050537
    2. 'words' → logprob: -2.0993669033050537
    3. 'counter' → logprob: -2.4743669033050537
    4. 'data' → logprob: -2.4743669033050537
    5. 'numbers' → logprob: -2.4743669033050537
    6. 'colors' → logprob: -2.5993669033050537
    7. 'arr' → logprob: -2.7243669033050537
    8. 'word' → logprob: -2.8493669033050537
    9. 'items' → logprob: -3.7243669033050537
    10. 'A' → logprob: -4.099367141723633

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46921589970588684
    2. '=' → logprob: -1.2192158699035645
    3. '[' → logprob: -2.9692158699035645
    4. '_counts' → logprob: -4.4692158699035645
    5. '_counter' → logprob: -5.0942158699035645
    6. ')' → logprob: -5.8442158699035645
    7. '_count' → logprob: -6.2192158699035645
    8. '.' → logprob: -6.7192158699035645
    9. '[]' → logprob: -6.7192158699035645
    10. '_' → logprob: -7.2192158699035645

Token 20: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6161779165267944
    2. ' [' → logprob: -0.8661779165267944
    3. '[' → logprob: -3.866178035736084
    4. '[]' → logprob: -4.116178035736084
    5. ' ' → logprob: -6.741178035736084
    6. ' defaultdict' → logprob: -7.241178035736084
    7. '[str' → logprob: -9.741177558898926
    8. '[list' → logprob: -10.241177558898926
    9. ' stdin' → logprob: -10.616177558898926
    10. ' [
' → logprob: -10.616177558898926

Token 21: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0015669959830120206
    2. ' stdin' → logprob: -6.8765668869018555
    3. '(stdin' → logprob: -7.6265668869018555
    4. 'stdout' → logprob: -11.001566886901855
    5. '.stdin' → logprob: -11.001566886901855
    6. 'line' → logprob: -12.501566886901855
    7. 'str' → logprob: -12.876566886901855
    8. 'std' → logprob: -13.376566886901855
    9. '   ' → logprob: -13.876566886901855
    10. ')' → logprob: -14.001566886901855

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.629921436891891e-05
    2. '.' → logprob: -10.62502670288086
    3. '.readlines' → logprob: -13.87502670288086
    4. '().' → logprob: -14.50002670288086
    5. '.read' → logprob: -14.62502670288086
    6. ' .' → logprob: -17.87502670288086
    7. ' readline' → logprob: -18.50002670288086
    8. '.]' → logprob: -21.00002670288086
    9. '.rstrip' → logprob: -21.00002670288086
    10. ')' → logprob: -21.12502670288086

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06857950240373611
    2. '()' → logprob: -2.8185794353485107
    3. '()]' → logprob: -5.06857967376709
    4. '())' → logprob: -8.31857967376709
    5. '()].' → logprob: -10.06857967376709
    6. ' ()' → logprob: -12.81857967376709
    7. '()`' → logprob: -13.06857967376709
    8. '()
' → logprob: -14.06857967376709
    9. '()).' → logprob: -14.19357967376709
    10. '()[' → logprob: -14.31857967376709

Token 24: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0788901224732399
    2. 'rstrip' → logprob: -2.578890085220337
    3. ' strip' → logprob: -15.203889846801758
    4. 'str' → logprob: -17.328889846801758
    5. '_strip' → logprob: -17.328889846801758
    6. '```' → logprob: -17.953889846801758
    7. '.rstrip' → logprob: -18.328889846801758
    8. 'rs' → logprob: -18.328889846801758
    9. 'split' → logprob: -18.578889846801758
    10. '(strip' → logprob: -18.703889846801758

Token 25: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6653594970703125
    2. '())' → logprob: -1.4153594970703125
    3. '()]' → logprob: -1.4153594970703125
    4. '(' → logprob: -9.540359497070312
    5. '()
' → logprob: -10.040359497070312
    6. '()`' → logprob: -10.415359497070312
    7. '()]
' → logprob: -11.165359497070312
    8. ')' → logprob: -11.415359497070312
    9. '()),' → logprob: -11.415359497070312
    10. '('' → logprob: -11.790359497070312

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034284121356904507
    2. '()' → logprob: -6.7534284591674805
    3. ')]' → logprob: -7.0034284591674805
    4. ']' → logprob: -7.6284284591674805
    5. ' )' → logprob: -7.8784284591674805
    6. ' for' → logprob: -8.62842845916748
    7. 'for' → logprob: -9.25342845916748
    8. '())' → logprob: -10.00342845916748
    9. '`)' → logprob: -10.37842845916748
    10. '')' → logprob: -10.37842845916748

Token 27: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25311362743377686
    2. ' range' → logprob: -1.6281136274337769
    3. '_' → logprob: -3.6281137466430664
    4. ' ' → logprob: -8.128113746643066
    5. 'range' → logprob: -8.128113746643066
    6. '_range' → logprob: -9.128113746643066
    7. ' i' → logprob: -10.378113746643066
    8. ' in' → logprob: -11.378113746643066
    9. ' xrange' → logprob: -12.128113746643066
    10. '(range' → logprob: -12.628113746643066

Token 28: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006948007503524423
    2. ' range' → logprob: -7.750694751739502
    3. '_' → logprob: -9.00069522857666
    4. 'in' → logprob: -9.00069522857666
    5. '(range' → logprob: -11.50069522857666
    6. ' in' → logprob: -12.37569522857666
    7. 'ange' → logprob: -14.25069522857666
    8. '(' → logprob: -14.75069522857666
    9. '	range' → logprob: -14.75069522857666
    10. 'ran' → logprob: -15.12569522857666

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.180258191714529e-06
    2. ' range' → logprob: -11.750008583068848
    3. '(range' → logprob: -15.250008583068848
    4. '	range' → logprob: -17.75000762939453
    5. ')' → logprob: -18.50000762939453
    6. '[' → logprob: -19.75000762939453
    7. '.range' → logprob: -20.00000762939453
    8. 'rang' → logprob: -20.12500762939453
    9. 'ranges' → logprob: -20.12500762939453
    10. '(' → logprob: -20.25000762939453

Token 30: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004192248452454805
    2. '(' → logprob: -5.504192352294922
    3. 'N' → logprob: -9.129192352294922
    4. ' N' → logprob: -13.379192352294922
    5. '(
' → logprob: -13.754192352294922
    6. ')' → logprob: -14.004192352294922
    7. ' (' → logprob: -14.129192352294922
    8. '(n' → logprob: -14.129192352294922
    9. '()' → logprob: -15.379192352294922
    10. '(

' → logprob: -16.129192352294922

Token 31: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039170795935206115
    2. ']' → logprob: -8.375391960144043
    3. ')' → logprob: -8.750391960144043
    4. '])]' → logprob: -13.750391960144043
    5. ')])' → logprob: -14.125391960144043
    6. '])' → logprob: -15.375391960144043
    7. '')]' → logprob: -15.500391960144043
    8. ' )' → logprob: -16.000391006469727
    9. '))' → logprob: -16.000391006469727
    10. ')],' → logprob: -16.375391006469727

Token 32: 'count' (ID: 5420)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.2883158028125763
    2. 'counts' → logprob: -2.288315773010254
    3. 'count' → logprob: -2.538315773010254
    4. 'freq' → logprob: -3.163315773010254
    5. 'word' → logprob: -4.413315773010254
    6. 'char' → logprob: -4.663315773010254
    7. 'frequency' → logprob: -5.913315773010254
    8. 'cnt' → logprob: -6.288315773010254
    9. 'c' → logprob: -7.413315773010254
    10. 'string' → logprob: -8.413315773010254

Token 33: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25201934576034546
    2. '(' → logprob: -1.5020194053649902
    3. '(s' → logprob: -9.627018928527832
    4. '_' → logprob: -12.252018928527832
    5. 'S' → logprob: -12.377018928527832
    6. '('' → logprob: -12.627018928527832
    7. '=' → logprob: -12.877018928527832
    8. '(
' → logprob: -13.377018928527832
    9. ')' → logprob: -13.502018928527832
    10. '[' → logprob: -14.377018928527832

Token 34: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.014696011319756508
    2. 'Counter' → logprob: -4.38969612121582
    3. ' defaultdict' → logprob: -6.13969612121582
    4. ' ' → logprob: -11.76469612121582
    5. 'default' → logprob: -12.26469612121582
    6. ' counter' → logprob: -12.38969612121582
    7. '.Counter' → logprob: -12.38969612121582
    8. ' default' → logprob: -12.76469612121582
    9. ' Default' → logprob: -13.01469612121582
    10. 'Default' → logprob: -13.88969612121582

Token 35: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07907496392726898
    2. '(strings' → logprob: -2.5790748596191406
    3. '(s' → logprob: -9.57907485961914
    4. '()' → logprob: -10.32907485961914
    5. '((' → logprob: -10.57907485961914
    6. '(str' → logprob: -10.70407485961914
    7. '('' → logprob: -11.82907485961914
    8. '("("' → logprob: -11.95407485961914
    9. '({' → logprob: -12.45407485961914
    10. '(words' → logprob: -12.57907485961914

Token 36: ''.' (ID: 6120)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.044379595667123795
    2. 's' → logprob: -3.794379711151123
    3. '(strings' → logprob: -4.294379711151123
    4. ''.' → logprob: -5.544379711151123
    5. 'string' → logprob: -6.294379711151123
    6. '(s' → logprob: -7.669379711151123
    7. '('' → logprob: -8.044379234313965
    8. '')' → logprob: -8.669379234313965
    9. ''' → logprob: -8.669379234313965
    10. '''.' → logprob: -9.044379234313965

Token 37: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.869639476761222e-05
    2. '''.' → logprob: -11.125039100646973
    3. 'concat' → logprob: -11.500039100646973
    4. 'j' → logprob: -12.125039100646973
    5. 'chain' → logprob: -13.000039100646973
    6. 'strip' → logprob: -13.375039100646973
    7. 'jo' → logprob: -13.500039100646973
    8. ' join' → logprob: -14.000039100646973
    9. ''.' → logprob: -14.125039100646973
    10. '".' → logprob: -14.750039100646973

Token 38: '(sorted' (ID: 92488)
  Prédit: '(strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(strings' → logprob: -0.0024874303489923477
    2. 'strings' → logprob: -6.002487659454346
    3. ' strings' → logprob: -11.877487182617188
    4. '(' → logprob: -12.877487182617188
    5. ')' → logprob: -14.502487182617188
    6. 's' → logprob: -14.627487182617188
    7. '(s' → logprob: -14.627487182617188
    8. '(str' → logprob: -14.752487182617188
    9. '(string' → logprob: -15.002487182617188
    10. ' (' → logprob: -16.502487182617188

Token 39: '(s' (ID: 1858)
  Prédit: '(strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(strings' → logprob: -0.10251609981060028
    2. 'strings' → logprob: -2.3525161743164062
    3. '(s' → logprob: -6.727516174316406
    4. 's' → logprob: -7.852516174316406
    5. '(' → logprob: -7.977516174316406
    6. ' strings' → logprob: -8.852516174316406
    7. '(string' → logprob: -9.227516174316406
    8. 'string' → logprob: -10.102516174316406
    9. ')' → logprob: -10.852516174316406
    10. '('' → logprob: -10.977516174316406

Token 40: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6751120686531067
    2. ')))' → logprob: -1.050112009048462
    3. ')' → logprob: -2.175112009048462
    4. '()))' → logprob: -4.925112247467041
    5. 's' → logprob: -5.300112247467041
    6. 'strings' → logprob: -5.425112247467041
    7. '())))' → logprob: -5.675112247467041
    8. '()' → logprob: -6.425112247467041
    9. 'tring' → logprob: -6.425112247467041
    10. 'for' → logprob: -6.800112247467041

Token 41: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017030329909175634
    2. '(' → logprob: -7.126703262329102
    3. '(s' → logprob: -7.751703262329102
    4. 's' → logprob: -8.251703262329102
    5. '))' → logprob: -9.501703262329102
    6. ')s' → logprob: -9.626703262329102
    7. '[' → logprob: -10.251703262329102
    8. '[s' → logprob: -12.501703262329102
    9. ']' → logprob: -12.751703262329102
    10. ')(' → logprob: -13.001703262329102

Token 42: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.34848546981811523
    2. 's' → logprob: -1.2234854698181152
    3. ' in' → logprob: -10.973485946655273
    4. ' ' → logprob: -11.848485946655273
    5. '_s' → logprob: -11.848485946655273
    6. '_' → logprob: -12.973485946655273
    7. ' _' → logprob: -13.223485946655273
    8. 'strings' → logprob: -13.598485946655273
    9. '<|end|>' → logprob: -14.098485946655273
    10. ' strings' → logprob: -14.223485946655273

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015728149563074112
    2. 'in' → logprob: -5.015727996826172
    3. 'strings' → logprob: -5.015727996826172
    4. ' strings' → logprob: -6.515727996826172
    5. 's' → logprob: -7.140727996826172
    6. '(strings' → logprob: -10.515727996826172
    7. '_strings' → logprob: -11.015727996826172
    8. ' s' → logprob: -11.765727996826172
    9. ' ' → logprob: -11.890727996826172
    10. '<|end|>' → logprob: -13.140727996826172

Token 44: ' strings' (ID: 18279)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.00043138445471413434
    2. ' strings' → logprob: -7.750431537628174
    3. '(strings' → logprob: -14.250431060791016
    4. 's' → logprob: -17.750431060791016
    5. 'string' → logprob: -17.750431060791016
    6. 'str' → logprob: -18.000431060791016
    7. '_strings' → logprob: -18.500431060791016
    8. 'Strings' → logprob: -18.625431060791016
    9. 'rings' → logprob: -19.750431060791016
    10. ' ' → logprob: -19.750431060791016

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '))' → logprob: -12.750004768371582
    3. ' )' → logprob: -13.750004768371582
    4. ')
' → logprob: -14.875004768371582
    5. ')`' → logprob: -15.750004768371582
    6. '`)' → logprob: -17.000003814697266
    7. ']' → logprob: -17.125003814697266
    8. ').' → logprob: -17.750003814697266
    9. '')' → logprob: -17.750003814697266
    10. '}' → logprob: -17.750003814697266

Token 46: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10618023574352264
    2. 'result' → logprob: -2.731180191040039
    3. 'print' → logprob: -4.481180191040039
    4. 's' → logprob: -5.606180191040039
    5. 'strings' → logprob: -5.731180191040039
    6. ')' → logprob: -6.106180191040039
    7. 'answer' → logprob: -6.606180191040039
    8. 'keys' → logprob: -6.731180191040039
    9. 'sorted' → logprob: -6.731180191040039
    10. 'max' → logprob: -6.856180191040039

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760546326637268
    2. '=' → logprob: -0.8260546326637268
    3. 's' → logprob: -9.326054573059082
    4. '_' → logprob: -11.201054573059082
    5. '=[]' → logprob: -13.076054573059082
    6. '[' → logprob: -13.451054573059082
    7. ')' → logprob: -13.701054573059082
    8. '＝' → logprob: -13.826054573059082
    9. ',' → logprob: -14.326054573059082
    10. '_=' → logprob: -14.576054573059082

Token 48: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8434929251670837
    2. '0' → logprob: -1.2184929847717285
    3. 'sum' → logprob: -1.7184929847717285
    4. ' max' → logprob: -2.9684929847717285
    5. '[max' → logprob: -3.8434929847717285
    6. ' sum' → logprob: -4.3434929847717285
    7. '[]' → logprob: -5.7184929847717285
    8. '[' → logprob: -6.0934929847717285
    9. ' ' → logprob: -6.3434929847717285
    10. 'len' → logprob: -7.8434929847717285

Token 49: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5051379799842834
    2. '(' → logprob: -1.6301379203796387
    3. '(count' → logprob: -2.8801379203796387
    4. '(c' → logprob: -2.8801379203796387
    5. '(value' → logprob: -3.6301379203796387
    6. '(val' → logprob: -4.005137920379639
    7. '(cnt' → logprob: -4.005137920379639
    8. '(freq' → logprob: -4.755137920379639
    9. '(x' → logprob: -5.255137920379639
    10. '((' → logprob: -5.380137920379639

Token 50: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6656291484832764
    2. ' *' → logprob: -1.0406291484832764
    3. '*' → logprob: -2.0406291484832764
    4. '*v' → logprob: -6.7906293869018555
    5. ' for' → logprob: -7.1656293869018555
    6. '-' → logprob: -8.040629386901855
    7. '>' → logprob: -8.165629386901855
    8. ' *(' → logprob: -9.040629386901855
    9. '(v' → logprob: -9.415629386901855
    10. 'for' → logprob: -10.165629386901855

Token 51: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0012649978743866086
    2. '(' → logprob: -7.126265048980713
    3. ' (' → logprob: -7.751265048980713
    4. '*(' → logprob: -11.501264572143555
    5. '(V' → logprob: -12.126264572143555
    6. '(k' → logprob: -12.251264572143555
    7. 'v' → logprob: -12.751264572143555
    8. '(n' → logprob: -12.751264572143555
    9. '[v' → logprob: -14.876264572143555
    10. '(value' → logprob: -14.876264572143555

Token 52: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009122979827225208
    2. '(v' → logprob: -7.000912189483643
    3. ' v' → logprob: -14.7509126663208
    4. '[v' → logprob: -15.5009126663208
    5. '	v' → logprob: -16.000911712646484
    6. ')v' → logprob: -17.375911712646484
    7. 'vq' → logprob: -17.750911712646484
    8. '<v' → logprob: -18.000911712646484
    9. '_v' → logprob: -18.375911712646484
    10. '$v' → logprob: -18.375911712646484

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023580729961395
    2. ' -' → logprob: -1.9102357625961304
    3. ' ' → logprob: -12.035235404968262
    4. '1' → logprob: -12.535235404968262
    5. '```' → logprob: -13.910235404968262
    6. '–' → logprob: -16.035236358642578
    7. 'v' → logprob: -16.035236358642578
    8. '−' → logprob: -16.222736358642578
    9. '2' → logprob: -16.285236358642578
    10. ' v' → logprob: -16.410236358642578

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -15.750296592712402
    4. '１' → logprob: -17.062795639038086
    5. ')' → logprob: -17.312795639038086
    6. '2' → logprob: -17.375295639038086
    7. '
' → logprob: -17.500295639038086
    8. '۱' → logprob: -17.937795639038086
    9. ' ' → logprob: -18.125295639038086
    10. '  ' → logprob: -18.125295639038086

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. ')' → logprob: -14.125020027160645
    4. '
' → logprob: -15.562520027160645
    5. '2' → logprob: -15.812520027160645
    6. '```' → logprob: -16.00002098083496
    7. '   ' → logprob: -17.06252098083496
    8. '１' → logprob: -17.18752098083496
    9. ' ' → logprob: -18.00002098083496
    10. '

' → logprob: -18.06252098083496

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09252185374498367
    2. ')//' → logprob: -3.342521905899048
    3. '//' → logprob: -3.467521905899048
    4. ' //' → logprob: -3.967521905899048
    5. ' )' → logprob: -5.842521667480469
    6. ' ' → logprob: -13.842521667480469
    7. '```' → logprob: -13.842521667480469
    8. ']' → logprob: -14.217521667480469
    9. ')/' → logprob: -14.217521667480469
    10. ')>>' → logprob: -14.717521667480469

Token 57: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20641452074050903
    2. '//' → logprob: -1.7064144611358643
    3. ')' → logprob: -5.456414699554443
    4. ')//' → logprob: -7.331414699554443
    5. ' )' → logprob: -9.706414222717285
    6. '/' → logprob: -13.456414222717285
    7. ' ' → logprob: -13.581414222717285
    8. '```' → logprob: -14.581414222717285
    9. ' /' → logprob: -15.081414222717285
    10. '>//' → logprob: -16.2064151763916

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '1' → logprob: -17.75023078918457
    4. '```' → logprob: -18.50023078918457
    5. '۲' → logprob: -18.75023078918457
    6. '２' → logprob: -19.00023078918457
    7. '   ' → logprob: -19.00023078918457
    8. '.' → logprob: -19.81273078918457
    9. ' ' → logprob: -19.87523078918457
    10. ')' → logprob: -19.93773078918457

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '1' → logprob: -17.75
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -21.0
    6. '3' → logprob: -21.25
    7. '
' → logprob: -21.75
    8. '202' → logprob: -22.0
    9. '۲' → logprob: -22.25
    10. '{' → logprob: -22.75

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027775391936302185
    2. 'for' → logprob: -3.652775287628174
    3. ')' → logprob: -6.527775287628174
    4. 'v' → logprob: -12.152775764465332
    5. ' ' → logprob: -12.902775764465332
    6. ' v' → logprob: -13.402775764465332
    7. ' )' → logprob: -14.277775764465332
    8. '	for' → logprob: -14.652775764465332
    9. '  ' → logprob: -15.152775764465332
    10. '   ' → logprob: -15.277775764465332

Token 61: ' v' (ID: 323)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.018201686441898346
    2. ' count' → logprob: -4.01820182800293
    3. 'v' → logprob: -9.89320182800293
    4. 'value' → logprob: -14.14320182800293
    5. ' v' → logprob: -15.89320182800293
    6. ',count' → logprob: -15.89320182800293
    7. '[count' → logprob: -16.39320182800293
    8. ')' → logprob: -16.64320182800293
    9. '	count' → logprob: -16.89320182800293
    10. '(count' → logprob: -17.01820182800293

Token 62: ' in' (ID: 306)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2641942501068115
    2. ' in' → logprob: -1.7641942501068115
    3. 'count' → logprob: -2.8891942501068115
    4. ')' → logprob: -6.389194488525391
    5. ' )' → logprob: -6.639194488525391
    6. ' values' → logprob: -6.889194488525391
    7. ' counts' → logprob: -7.014194488525391
    8. 'values' → logprob: -9.01419448852539
    9. '.values' → logprob: -9.63919448852539
    10. 'in' → logprob: -10.26419448852539

Token 63: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.008615754544734955
    2. ' count' → logprob: -4.758615970611572
    3. 'counter' → logprob: -14.258615493774414
    4. '[count' → logprob: -15.008615493774414
    5. '(count' → logprob: -16.258615493774414
    6. '	count' → logprob: -16.633615493774414
    7. 'counts' → logprob: -16.758615493774414
    8. '<count' → logprob: -17.133615493774414
    9. ' ' → logprob: -17.508615493774414
    10. '$count' → logprob: -17.758615493774414

Token 64: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0003374886582605541
    2. '.' → logprob: -8.500337600708008
    3. 'values' → logprob: -9.375337600708008
    4. '.value' → logprob: -11.125337600708008
    5. ').' → logprob: -11.250337600708008
    6. ')' → logprob: -11.250337600708008
    7. '().' → logprob: -12.750337600708008
    8. ' .' → logprob: -12.875337600708008
    9. '.Values' → logprob: -13.375337600708008
    10. ' values' → logprob: -13.750337600708008

Token 65: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1077064648270607
    2. ')' → logprob: -2.8577065467834473
    3. '()' → logprob: -3.1077065467834473
    4. ' ())' → logprob: -12.732706069946289
    5. '();)' → logprob: -14.732706069946289
    6. '))' → logprob: -14.732706069946289
    7. '(' → logprob: -14.857706069946289
    8. '()]' → logprob: -15.107706069946289
    9. '()))' → logprob: -15.357706069946289
    10. '())
' → logprob: -16.10770606994629

Token 66: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.875
    3. '
' → logprob: -19.625
    4. 'prin' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '#print' → logprob: -20.125
    7. 'pr' → logprob: -20.25
    8. '(print' → logprob: -20.875
    9. '<|end|>' → logprob: -22.25
    10. '-print' → logprob: -22.375

Token 67: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048627790063619614
    2. '(ans' → logprob: -3.0486278533935547
    3. '('' → logprob: -11.548627853393555
    4. '("("' → logprob: -11.548627853393555
    5. '()' → logprob: -11.923627853393555
    6. '(`' → logprob: -12.923627853393555
    7. '(answer' → logprob: -13.048627853393555
    8. '(len' → logprob: -13.798627853393555
    9. '(paren' → logprob: -13.798627853393555
    10. '(s' → logprob: -13.798627853393555

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -16.125
    4. ')`' → logprob: -17.125
    5. ')
' → logprob: -18.625
    6. '`)' → logprob: -19.0
    7. '）' → logprob: -20.25
    8. ')}' → logprob: -20.625
    9. '')' → logprob: -21.125
    10. '})' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 45.45%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 78.79%
================================================================================
