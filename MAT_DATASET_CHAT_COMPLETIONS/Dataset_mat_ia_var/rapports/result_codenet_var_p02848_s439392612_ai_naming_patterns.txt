================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shift_value = int(input())
input_string = input()

output_string = ''
ascii_upper_a = ord('A')
ascii_upper_z = ord('Z')
for char in input_string:
    shifted_ascii = ord(char) + shift_value

    if shifted_ascii > ascii_upper_z:
        wrapped_ascii = ascii_upper_a + (shifted_ascii - ascii_upper_z - 1)
        output_string += chr(wrapped_ascii)
    else:
        output_string += chr(shifted_ascii)
        
print(output_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'shift' (ID: 27472)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012497524730861187
    2. '1' → logprob: -4.512497425079346
    3. '4' → logprob: -7.012497425079346
    4. '3' → logprob: -8.137497901916504
    5. '2' → logprob: -9.262497901916504
    6. '0' → logprob: -9.512497901916504
    7. '5' → logprob: -9.887497901916504
    8. '32' → logprob: -11.012497901916504
    9. '```' → logprob: -11.637497901916504
    10. '42' → logprob: -12.887497901916504

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012482085730880499
    2. '('' → logprob: -7.876248359680176
    3. '_' → logprob: -8.251248359680176
    4. 'shift' → logprob: -8.626248359680176
    5. '_shift' → logprob: -9.251248359680176
    6. '[' → logprob: -9.751248359680176
    7. '("("' → logprob: -9.876248359680176
    8. ''' → logprob: -9.876248359680176
    9. '```' → logprob: -10.001248359680176
    10. '(
' → logprob: -10.626248359680176

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09321180731058121
    2. ')' → logprob: -2.4682118892669678
    3. '('' → logprob: -6.968211650848389
    4. '```' → logprob: -7.718211650848389
    5. '(
' → logprob: -7.843211650848389
    6. '()' → logprob: -7.968211650848389
    7. '("("' → logprob: -8.093212127685547
    8. '[' → logprob: -8.218212127685547
    9. '(token' → logprob: -8.968212127685547
    10. '(

' → logprob: -9.093212127685547

Token 6: 'input' (ID: 2586)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0334194079041481
    2. 'cipher' → logprob: -5.033419609069824
    3. '+' → logprob: -5.408419609069824
    4. 'shift' → logprob: -5.533419609069824
    5. 'result' → logprob: -6.033419609069824
    6. 's' → logprob: -6.158419609069824
    7. 'text' → logprob: -6.533419609069824
    8. '#' → logprob: -6.783419609069824
    9. 'for' → logprob: -6.783419609069824
    10. '*' → logprob: -6.783419609069824

Token 7: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.067262053489685
    2. '_str' → logprob: -1.442262053489685
    3. '_string' → logprob: -1.692262053489685
    4. '()' → logprob: -2.5672621726989746
    5. '_value' → logprob: -3.0672621726989746
    6. '_' → logprob: -3.1922621726989746
    7. '_text' → logprob: -4.192262172698975
    8. '_data' → logprob: -4.442262172698975
    9. '('' → logprob: -4.567262172698975
    10. '_char' → logprob: -5.442262172698975

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014500412158668041
    2. '+' → logprob: -4.639500617980957
    3. '[:]' → logprob: -6.514500617980957
    4. '=' → logprob: -7.639500617980957
    5. '```' → logprob: -7.639500617980957
    6. '(' → logprob: -7.889500617980957
    7. ')' → logprob: -8.014500617980957
    8. '[]' → logprob: -8.639500617980957
    9. '.strip' → logprob: -8.764500617980957
    10. '.' → logprob: -9.014500617980957

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485828936100006
    2. 'input' → logprob: -1.2235828638076782
    3. ' ' → logprob: -10.098583221435547
    4. '(input' → logprob: -10.473583221435547
    5. '=input' → logprob: -10.723583221435547
    6. '"' → logprob: -11.598583221435547
    7. ' "' → logprob: -12.098583221435547
    8. '<input' → logprob: -12.098583221435547
    9. ' str' → logprob: -12.473583221435547
    10. 'str' → logprob: -12.598583221435547

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01766190491616726
    2. '()' → logprob: -4.142662048339844
    3. '('' → logprob: -7.142662048339844
    4. ')' → logprob: -7.642662048339844
    5. ' (' → logprob: -9.142662048339844
    6. '```' → logprob: -9.767662048339844
    7. '("("' → logprob: -10.142662048339844
    8. ''' → logprob: -10.767662048339844
    9. '())' → logprob: -10.767662048339844
    10. '(
' → logprob: -11.017662048339844

Token 11: 'output' (ID: 6130)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1288583129644394
    2. 'shift' → logprob: -3.0038583278656006
    3. 'decoded' → logprob: -3.5038583278656006
    4. 'output' → logprob: -4.0038580894470215
    5. 'for' → logprob: -4.2538580894470215
    6. '```' → logprob: -5.5038580894470215
    7. 'encoded' → logprob: -5.8788580894470215
    8. 'encrypted' → logprob: -7.7538580894470215
    9. 'new' → logprob: -7.7538580894470215
    10. 'de' → logprob: -8.62885856628418

Token 12: '_string' (ID: 8609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04510319232940674
    2. '_' → logprob: -3.670103073120117
    3. ' =' → logprob: -4.545103073120117
    4. '[:]' → logprob: -6.420103073120117
    5. '[' → logprob: -6.545103073120117
    6. '```' → logprob: -6.795103073120117
    7. '(' → logprob: -7.295103073120117
    8. '_string' → logprob: -7.670103073120117
    9. '.' → logprob: -8.045103073120117
    10. ')' → logprob: -8.170103073120117

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3688805103302002
    2. ' =' → logprob: -1.2438805103302002
    3. ' +=' → logprob: -4.493880271911621
    4. '+=' → logprob: -5.368880271911621
    5. '+' → logprob: -6.118880271911621
    6. '[:]' → logprob: -7.368880271911621
    7. '[' → logprob: -7.743880271911621
    8. '<|end|>' → logprob: -8.243880271911621
    9. '+='' → logprob: -8.493880271911621
    10. '.append' → logprob: -9.243880271911621

Token 14: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6358877420425415
    2. '"' → logprob: -1.3858877420425415
    3. ' ""' → logprob: -1.6358877420425415
    4. '''' → logprob: -4.760887622833252
    5. ' ''' → logprob: -5.385887622833252
    6. ' "' → logprob: -5.510887622833252
    7. ' input' → logprob: -5.760887622833252
    8. ''' → logprob: -6.260887622833252
    9. 'input' → logprob: -6.385887622833252
    10. ' []' → logprob: -7.385887622833252

Token 15: 'ascii' (ID: 91813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005487618502229452
    2. ' for' → logprob: -5.255487442016602
    3. 'f' → logprob: -8.505487442016602
    4. 'i' → logprob: -10.255487442016602
    5. ' 
' → logprob: -11.505487442016602
    6. ' ' → logprob: -13.380487442016602
    7. '
' → logprob: -13.380487442016602
    8. '```' → logprob: -13.880487442016602
    9. 'n' → logprob: -14.380487442016602
    10. '_' → logprob: -15.255487442016602

Token 16: '_upper' (ID: 82658)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6927270293235779
    2. '_val' → logprob: -1.3177270889282227
    3. '_code' → logprob: -1.8177270889282227
    4. '_' → logprob: -2.6927270889282227
    5. '```' → logprob: -7.942727088928223
    6. '_num' → logprob: -8.067727088928223
    7. '_output' → logprob: -8.567727088928223
    8. '_char' → logprob: -8.942727088928223
    9. '_ord' → logprob: -9.067727088928223
    10. '_values' → logprob: -9.192727088928223

Token 17: '_a' (ID: 10852)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.005334674380719662
    2. '_upper' → logprob: -6.505334854125977
    3. '_letters' → logprob: -6.630334854125977
    4. '_' → logprob: -7.380334854125977
    5. 'ase' → logprob: -7.755334854125977
    6. '_case' → logprob: -8.005334854125977
    7. '```' → logprob: -8.630334854125977
    8. ' =' → logprob: -9.130334854125977
    9. 'cas' → logprob: -9.255334854125977
    10. 'uppercase' → logprob: -9.255334854125977

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43705877661705017
    2. '=' → logprob: -1.0620588064193726
    3. '_ord' → logprob: -5.812058925628662
    4. '_code' → logprob: -5.937058925628662
    5. '_' → logprob: -7.312058925628662
    6. ' ' → logprob: -7.812058925628662
    7. '_ascii' → logprob: -8.312058448791504
    8. '_CODE' → logprob: -8.687058448791504
    9. '```' → logprob: -8.937058448791504
    10. '_=' → logprob: -8.937058448791504

Token 19: ' ord' (ID: 6608)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.17989559471607208
    2. ' ' → logprob: -1.8048956394195557
    3. ' ord' → logprob: -9.054895401000977
    4. 'ord' → logprob: -10.429895401000977
    5. '66' → logprob: -13.554895401000977
    6. '64' → logprob: -13.929895401000977
    7. '   ' → logprob: -14.304895401000977
    8. '32' → logprob: -14.679895401000977
    9. '  ' → logprob: -14.929895401000977
    10. ' A' → logprob: -15.742395401000977

Token 20: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012519894167780876
    2. '(' → logprob: -4.387519836425781
    3. '("("' → logprob: -12.137519836425781
    4. '("' → logprob: -12.762519836425781
    5. '>('' → logprob: -14.512519836425781
    6. ''' → logprob: -14.762519836425781
    7. '(('' → logprob: -14.887519836425781
    8. ' ('' → logprob: -16.01251983642578
    9. ' '('' → logprob: -16.26251983642578
    10. '()' → logprob: -16.38751983642578

Token 21: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.869017852295656e-06
    2. 'a' → logprob: -13.125006675720215
    3. ''A' → logprob: -13.125006675720215
    4. 'А' → logprob: -13.375006675720215
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.125006675720215
    6. 'Z' → logprob: -15.500006675720215
    7. ' A' → logprob: -16.37500762939453
    8. '')' → logprob: -16.62500762939453
    9. ' ')' → logprob: -16.87500762939453
    10. ''' → logprob: -17.37500762939453

Token 22: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521204948425293
    2. '')' → logprob: -1.5021204948425293
    3. '')
' → logprob: -9.627120971679688
    4. ')
' → logprob: -9.752120971679688
    5. ' )' → logprob: -10.502120971679688
    6. ''' → logprob: -11.127120971679688
    7. '")' → logprob: -11.877120971679688
    8. '`)' → logprob: -12.127120971679688
    9. ' ')' → logprob: -13.002120971679688
    10. '```' → logprob: -13.252120971679688

Token 23: 'ascii' (ID: 91813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02175363525748253
    2. 'shift' → logprob: -4.271753787994385
    3. ' for' → logprob: -5.271753787994385
    4. 'ascii' → logprob: -7.021753787994385
    5. 'n' → logprob: -7.521753787994385
    6. '```' → logprob: -8.021753311157227
    7. 'i' → logprob: -8.771753311157227
    8. 'current' → logprob: -9.146753311157227
    9. 's' → logprob: -9.521753311157227
    10. 'offset' → logprob: -9.896753311157227

Token 24: '_upper' (ID: 82658)
  Prédit: '_Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Z' → logprob: -0.1262008398771286
    2. '_' → logprob: -2.2512009143829346
    3. '_upper' → logprob: -5.2512006759643555
    4. '_z' → logprob: -5.5012006759643555
    5. '_B' → logprob: -6.7512006759643555
    6. '_A' → logprob: -6.8762006759643555
    7. ' _' → logprob: -7.7512006759643555
    8. '_space' → logprob: -8.001200675964355
    9. '_a' → logprob: -8.126200675964355
    10. '_lower' → logprob: -8.126200675964355

Token 25: '_z' (ID: 18252)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.001842728815972805
    2. '_Z' → logprob: -6.501842498779297
    3. '_' → logprob: -8.751842498779297
    4. ''' → logprob: -9.376842498779297
    5. '```' → logprob: -9.876842498779297
    6. '_z' → logprob: -10.751842498779297
    7. 'z' → logprob: -12.126842498779297
    8. ' Z' → logprob: -12.751842498779297
    9. ''z' → logprob: -12.751842498779297
    10. '`' → logprob: -12.876842498779297

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34910494089126587
    2. '=' → logprob: -1.224104881286621
    3. ')' → logprob: -7.599104881286621
    4. ' ' → logprob: -9.849104881286621
    5. '+' → logprob: -10.224104881286621
    6. '<|end|>' → logprob: -11.099104881286621
    7. '_' → logprob: -11.224104881286621
    8. ' ==' → logprob: -11.349104881286621
    9. ',' → logprob: -11.724104881286621
    10. ' +' → logprob: -12.349104881286621

Token 27: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.7652527093887329
    2. ' ord' → logprob: -0.8902527093887329
    3. '90' → logprob: -2.5152525901794434
    4. ' ' → logprob: -3.3902525901794434
    5. '(ord' → logprob: -4.765252590179443
    6. ' Z' → logprob: -7.140252590179443
    7. '91' → logprob: -9.390253067016602
    8. '  ' → logprob: -9.515253067016602
    9. 'Z' → logprob: -9.640253067016602
    10. '   ' → logprob: -9.890253067016602

Token 28: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00043615259346552193
    2. '(' → logprob: -7.750436305999756
    3. ''' → logprob: -13.250435829162598
    4. '>('' → logprob: -13.625435829162598
    5. '(('' → logprob: -14.250435829162598
    6. '("("' → logprob: -14.750435829162598
    7. ' ('' → logprob: -15.000435829162598
    8. '('.')' → logprob: -15.500435829162598
    9. '("' → logprob: -15.750435829162598
    10. ''A' → logprob: -16.125436782836914

Token 29: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -8.566264295950532e-05
    2. ''' → logprob: -9.375085830688477
    3. ''z' → logprob: -14.875085830688477
    4. '')' → logprob: -15.625085830688477
    5. ' Z' → logprob: -16.125085830688477
    6. '`' → logprob: -16.625085830688477
    7. '	Z' → logprob: -18.000085830688477
    8. 'z' → logprob: -18.625085830688477
    9. 'Ζ' → logprob: -18.750085830688477
    10. '```' → logprob: -18.875085830688477

Token 30: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0624862015247345
    2. ')' → logprob: -2.812486171722412
    3. ''' → logprob: -7.687486171722412
    4. '')
' → logprob: -10.06248664855957
    5. '+' → logprob: -12.43748664855957
    6. '")' → logprob: -12.56248664855957
    7. '')
' → logprob: -13.56248664855957
    8. '`)' → logprob: -13.56248664855957
    9. '#' → logprob: -14.06248664855957
    10. ''))' → logprob: -14.18748664855957

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015782590955495834
    2. ' for' → logprob: -5.140782356262207
    3. 'i' → logprob: -5.640782356262207
    4. 'f' → logprob: -6.015782356262207
    5. 'n' → logprob: -6.390782356262207
    6. '```' → logprob: -6.640782356262207
    7. '
' → logprob: -8.765782356262207
    8. 'newline' → logprob: -9.265782356262207
    9. ' 
' → logprob: -9.390782356262207
    10. 'shift' → logprob: -9.515782356262207

Token 32: ' char' (ID: 1826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1573454141616821
    2. ' c' → logprob: -1.1573454141616821
    3. ' char' → logprob: -1.1573454141616821
    4. ' i' → logprob: -3.0323452949523926
    5. ' _' → logprob: -5.032345294952393
    6. ' ch' → logprob: -6.532345294952393
    7. 'c' → logprob: -8.28234577178955
    8. ' character' → logprob: -9.03234577178955
    9. 'char' → logprob: -9.15734577178955
    10. ' letter' → logprob: -9.53234577178955

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004822414834052324
    2. 'in' → logprob: -5.504822254180908
    3. ' ' → logprob: -7.254822254180908
    4. ' ,' → logprob: -11.254822731018066
    5. '<|end|>' → logprob: -12.129822731018066
    6. '  ' → logprob: -12.379822731018066
    7. ' :' → logprob: -12.504822731018066
    8. 's' → logprob: -12.754822731018066
    9. ',' → logprob: -12.879822731018066
    10. '<|end|>' → logprob: -14.379822731018066

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16022849082946777
    2. 'input' → logprob: -1.9102284908294678
    3. ' ' → logprob: -12.785228729248047
    4. '(input' → logprob: -14.285228729248047
    5. '_input' → logprob: -15.410228729248047
    6. ' range' → logprob: -15.535228729248047
    7. '<input' → logprob: -16.035228729248047
    8. 'range' → logprob: -16.535228729248047
    9. '=input' → logprob: -16.660228729248047
    10. 'user' → logprob: -17.035228729248047

Token 35: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.0590548703912646e-05
    2. '_' → logprob: -10.875030517578125
    3. 'string' → logprob: -11.625030517578125
    4. '_str' → logprob: -14.375030517578125
    5. ')' → logprob: -14.500030517578125
    6. 'String' → logprob: -14.750030517578125
    7. '_STRING' → logprob: -15.125030517578125
    8. '_)' → logprob: -15.625030517578125
    9. '_s' → logprob: -15.750030517578125
    10. '_String' → logprob: -16.000030517578125

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006772888009436429
    2. ':
' → logprob: -8.000677108764648
    3. ' :' → logprob: -8.250677108764648
    4. '<|end|>' → logprob: -10.625677108764648
    5. '):' → logprob: -11.125677108764648
    6. ',' → logprob: -11.125677108764648
    7. '=' → logprob: -12.125677108764648
    8. ':**' → logprob: -12.250677108764648
    9. ' if' → logprob: -13.250677108764648
    10. '<|end|>' → logprob: -13.250677108764648

Token 37: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4182890057563782
    2. '   ' → logprob: -1.6682889461517334
    3. ' if' → logprob: -2.4182889461517334
    4. ' 
' → logprob: -3.5432889461517334
    5. '    ' → logprob: -4.2932891845703125
    6. '<|end|>' → logprob: -4.7932891845703125
    7. '```' → logprob: -5.9182891845703125
    8. '    
' → logprob: -5.9182891845703125
    9. '     
' → logprob: -6.2932891845703125
    10. ' ```' → logprob: -6.9182891845703125

Token 38: ' shifted' (ID: 58644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47371819615364075
    2. ' if' → logprob: -1.0987181663513184
    3. 'if' → logprob: -3.3487181663513184
    4. '    ' → logprob: -5.723718166351318
    5. ' ```' → logprob: -6.598718166351318
    6. 'i' → logprob: -6.723718166351318
    7. '```' → logprob: -7.098718166351318
    8. '   ' → logprob: -7.473718166351318
    9. 'space' → logprob: -7.473718166351318
    10. ' i' → logprob: -8.348718643188477

Token 39: '_ascii' (ID: 125321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7132198810577393
    2. '_char' → logprob: -1.2132198810577393
    3. '_value' → logprob: -2.2132198810577393
    4. '_val' → logprob: -2.8382198810577393
    5. '_ascii' → logprob: -3.8382198810577393
    6. '_ord' → logprob: -3.9632198810577393
    7. '_code' → logprob: -6.71321964263916
    8. '_=' → logprob: -6.96321964263916
    9. '=' → logprob: -7.71321964263916
    10. ' =' → logprob: -7.83821964263916

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04330950975418091
    2. '=' → logprob: -3.168309450149536
    3. ' ' → logprob: -8.418309211730957
    4. '_' → logprob: -9.918309211730957
    5. '_value' → logprob: -11.418309211730957
    6. ' +=' → logprob: -11.918309211730957
    7. '_code' → logprob: -12.043309211730957
    8. '32' → logprob: -12.668309211730957
    9. '_val' → logprob: -12.668309211730957
    10. '```' → logprob: -13.418309211730957

Token 41: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.1547907590866089
    2. 'ord' → logprob: -2.6547908782958984
    3. '(ord' → logprob: -2.7797908782958984
    4. ' (' → logprob: -4.529790878295898
    5. '(' → logprob: -8.654790878295898
    6. '   ' → logprob: -10.654790878295898
    7. '((' → logprob: -10.654790878295898
    8. ' ' → logprob: -11.654790878295898
    9. ' ((' → logprob: -12.154790878295898
    10. '32' → logprob: -12.904790878295898

Token 42: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.0025170387234538794
    2. '(' → logprob: -6.127517223358154
    3. '('' → logprob: -8.127516746520996
    4. '("("' → logprob: -10.502516746520996
    5. '((' → logprob: -13.252516746520996
    6. ' (' → logprob: -13.627516746520996
    7. 'char' → logprob: -13.627516746520996
    8. '(chars' → logprob: -13.752516746520996
    9. '```' → logprob: -14.252516746520996
    10. '(chr' → logprob: -14.502516746520996

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007507718168199062
    2. ' )' → logprob: -5.382507801055908
    3. '+' → logprob: -6.132507801055908
    4. ' +' → logprob: -7.382507801055908
    5. ')+' → logprob: -10.00750732421875
    6. ' ' → logprob: -11.13250732421875
    7. ' -' → logprob: -11.63250732421875
    8. '+)' → logprob: -11.75750732421875
    9. '-' → logprob: -11.88250732421875
    10. '   ' → logprob: -13.63250732421875

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4794999957084656
    2. ' +' → logprob: -0.9794999957084656
    3. '<|end|>' → logprob: -5.979499816894531
    4. ' -' → logprob: -6.604499816894531
    5. '-' → logprob: -6.604499816894531
    6. ' ' → logprob: -9.354499816894531
    7. ')' → logprob: -10.479499816894531
    8. '<|end|>' → logprob: -10.854499816894531
    9. ' +
' → logprob: -11.354499816894531
    10. '+
' → logprob: -12.104499816894531

Token 45: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.0232466422021389
    2. 'shift' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.523246765136719
    4. ' space' → logprob: -14.898246765136719
    5. 'space' → logprob: -15.773246765136719
    6. ' ' → logprob: -17.02324676513672
    7. ' shifted' → logprob: -17.27324676513672
    8. '_shift' → logprob: -17.89824676513672
    9. ' (' → logprob: -18.52324676513672
    10. '1' → logprob: -18.77324676513672

Token 46: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000516217143740505
    2. '_' → logprob: -8.125515937805176
    3. '_val' → logprob: -8.625515937805176
    4. '```' → logprob: -11.125515937805176
    5. ' _' → logprob: -11.875515937805176
    6. '_token' → logprob: -12.500515937805176
    7. 'value' → logprob: -12.750515937805176
    8. '`' → logprob: -13.000515937805176
    9. ')_' → logprob: -13.000515937805176
    10. '}_' → logprob: -14.000515937805176

Token 47: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6990789771080017
    2. '<|end|>' → logprob: -1.3240790367126465
    3. ' if' → logprob: -1.5740790367126465
    4. ' ' → logprob: -4.5740790367126465
    5. 'if' → logprob: -4.8240790367126465
    6. '```' → logprob: -5.3240790367126465
    7. '<|end|>' → logprob: -6.4490790367126465
    8. '    ' → logprob: -6.6990790367126465
    9. '  ' → logprob: -7.0740790367126465
    10. '    
' → logprob: -7.4490790367126465

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6633599400520325
    2. 'if' (adapté à ' if') → logprob: -0.7883599400520325
    3. '<|end|>' → logprob: -4.413360118865967
    4. '   ' → logprob: -5.038360118865967
    5. '    ' → logprob: -5.288360118865967
    6. ' ' → logprob: -5.538360118865967
    7. '```' → logprob: -6.163360118865967
    8. 'If' → logprob: -8.038359642028809
    9. '  ' → logprob: -9.788359642028809
    10. '	if' → logprob: -10.163359642028809

Token 50: ' shifted' (ID: 58644)
  Prédit: ' shifted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.09892868250608444
    2. ' ord' → logprob: -3.848928689956665
    3. ' char' → logprob: -3.848928689956665
    4. ' ascii' → logprob: -3.848928689956665
    5. 'ascii' → logprob: -4.348928451538086
    6. 'shift' → logprob: -4.848928451538086
    7. 'char' → logprob: -4.973928451538086
    8. 'ord' → logprob: -7.223928451538086
    9. ' ' → logprob: -7.473928451538086
    10. ' '' → logprob: -8.223928451538086

Token 51: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -4.191489642835222e-05
    2. '_' → logprob: -10.625041961669922
    3. '>' → logprob: -12.250041961669922
    4. 'ascii' → logprob: -12.625041961669922
    5. '```' → logprob: -13.250041961669922
    6. '_as' → logprob: -13.625041961669922
    7. '_ast' → logprob: -13.875041961669922
    8. '_a' → logprob: -14.125041961669922
    9. 's' → logprob: -14.625041961669922
    10. '_value' → logprob: -14.750041961669922

Token 52: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16052275896072388
    2. '>' → logprob: -1.910522699356079
    3. ' <=' → logprob: -9.0355224609375
    4. '<|end|>' → logprob: -9.1605224609375
    5. ' ' → logprob: -10.2855224609375
    6. ' <' → logprob: -11.4105224609375
    7. '<=' → logprob: -11.4105224609375
    8. '<' → logprob: -12.4105224609375
    9. '>end' → logprob: -12.9105224609375
    10. '<|end|>' → logprob: -12.9105224609375

Token 53: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.3868926465511322
    2. ' ascii' → logprob: -1.1368926763534546
    3. ' ' → logprob: -11.136892318725586
    4. '_ascii' → logprob: -12.761892318725586
    5. '   ' → logprob: -13.011892318725586
    6. '  ' → logprob: -15.011892318725586
    7. '26' → logprob: -15.261892318725586
    8. '```' → logprob: -15.636892318725586
    9. ' asci' → logprob: -15.761892318725586
    10. 'asc' → logprob: -16.011892318725586

Token 54: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.00012737659562844783
    2. '_z' → logprob: -10.125127792358398
    3. '_Z' → logprob: -10.375127792358398
    4. '95' → logprob: -10.875127792358398
    5. '```' → logprob: -11.250127792358398
    6. '_' → logprob: -11.500127792358398
    7. '90' → logprob: -12.125127792358398
    8. '__' → logprob: -13.000127792358398
    9. 'Z' → logprob: -14.375127792358398
    10. '_lower' → logprob: -14.375127792358398

Token 55: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.5890710949897766
    2. 'Z' → logprob: -0.9640710949897766
    3. '90' → logprob: -3.214071035385132
    4. '_Z' → logprob: -3.839071035385132
    5. 'z' → logprob: -6.214071273803711
    6. '```' → logprob: -10.214071273803711
    7. '	Z' → logprob: -10.839071273803711
    8. '`' → logprob: -11.839071273803711
    9. '91' → logprob: -11.964071273803711
    10. ''z' → logprob: -12.214071273803711

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011143792420625687
    2. ' :' → logprob: -4.636143684387207
    3. ':
' → logprob: -6.761143684387207
    4. ' :
' → logprob: -9.261143684387207
    5. '       ' → logprob: -9.761143684387207
    6. '   ' → logprob: -10.636143684387207
    7. '):' → logprob: -11.386143684387207
    8. '    ' → logprob: -11.386143684387207
    9. ' and' → logprob: -11.886143684387207
    10. ':return' → logprob: -12.386143684387207

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0164454597979784
    2. ' shifted' → logprob: -4.516445636749268
    3. '   ' → logprob: -6.266445636749268
    4. '        ' → logprob: -7.516445636749268
    5. '```' → logprob: -7.516445636749268
    6. '    ' → logprob: -7.766445636749268
    7. '        
' → logprob: -7.891445636749268
    8. '
' → logprob: -8.51644515991211
    9. '<|end|>' → logprob: -8.76644515991211
    10. 'shift' → logprob: -9.14144515991211

Token 58: ' wrapped' (ID: 31831)
  Prédit: ' shifted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.23668888211250305
    2. 'shift' → logprob: -1.8616888523101807
    3. '       ' → logprob: -2.9866888523101807
    4. '           ' → logprob: -5.98668909072876
    5. '        ' → logprob: -6.36168909072876
    6. ' shift' → logprob: -7.98668909072876
    7. '   ' → logprob: -9.111688613891602
    8. '```' → logprob: -9.111688613891602
    9. 'output' → logprob: -10.861688613891602
    10. ' output' → logprob: -10.861688613891602

Token 59: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.04794830083847046
    2. '_' → logprob: -3.1729483604431152
    3. '_value' → logprob: -6.047948360443115
    4. '_shift' → logprob: -6.172948360443115
    5. '_char' → logprob: -9.172947883605957
    6. 'ed' → logprob: -9.422947883605957
    7. '```' → logprob: -9.922947883605957
    8. '_index' → logprob: -10.297947883605957
    9. '_val' → logprob: -10.547947883605957
    10. 'ascii' → logprob: -10.922947883605957

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993832439184189
    2. '=' → logprob: -2.6949384212493896
    3. ' ' → logprob: -14.194938659667969
    4. ' -=' → logprob: -14.819938659667969
    5. '_' → logprob: -15.194938659667969
    6. '   ' → logprob: -16.56993865966797
    7. 's' → logprob: -16.56993865966797
    8. '```' → logprob: -16.56993865966797
    9. '_=' → logprob: -16.81993865966797
    10. '  ' → logprob: -17.31993865966797

Token 61: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.07696235924959183
    2. 'shift' → logprob: -2.826962471008301
    3. ' ascii' → logprob: -4.701962471008301
    4. ' shifted' → logprob: -5.576962471008301
    5. '   ' → logprob: -6.826962471008301
    6. '(' → logprob: -7.951962471008301
    7. ' ' → logprob: -8.8269624710083
    8. ' (' → logprob: -9.3269624710083
    9. '  ' → logprob: -9.8269624710083
    10. 'asc' → logprob: -9.8269624710083

Token 62: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -7.862962229410186e-05
    2. '_lower' → logprob: -9.875078201293945
    3. 'upper' → logprob: -11.125078201293945
    4. '_shift' → logprob: -12.125078201293945
    5. '_wr' → logprob: -12.500078201293945
    6. '_wrap' → logprob: -13.750078201293945
    7. 'shift' → logprob: -14.750078201293945
    8. 'Upper' → logprob: -15.125078201293945
    9. 'uppercase' → logprob: -15.125078201293945
    10. '_' → logprob: -15.625078201293945

Token 63: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08370262384414673
    2. 'A' → logprob: -3.208702564239502
    3. '_A' → logprob: -3.333702564239502
    4. 'a' → logprob: -5.583702564239502
    5. '_z' → logprob: -8.20870304107666
    6. '```' → logprob: -10.08370304107666
    7. '65' → logprob: -10.58370304107666
    8. 'z' → logprob: -11.08370304107666
    9. '_' → logprob: -11.14620304107666
    10. 'Z' → logprob: -11.33370304107666

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4959459900856018
    2. ' +' → logprob: -0.9959459900856018
    3. '-' → logprob: -3.995945930480957
    4. ' -' → logprob: -5.745945930480957
    5. '+(' → logprob: -10.745945930480957
    6. '   ' → logprob: -11.620945930480957
    7. ' ' → logprob: -11.745945930480957
    8. '       ' → logprob: -13.245945930480957
    9. '+-' → logprob: -13.745945930480957
    10. '+
' → logprob: -14.120945930480957

Token 65: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09485791623592377
    2. 'shift' → logprob: -2.469857931137085
    3. ' (' → logprob: -5.344857692718506
    4. ' shifted' → logprob: -7.219857692718506
    5. '((' → logprob: -8.094858169555664
    6. '   ' → logprob: -10.344858169555664
    7. '(sh' → logprob: -10.844858169555664
    8. ' ' → logprob: -11.094858169555664
    9. ' shift' → logprob: -11.969858169555664
    10. '  ' → logprob: -12.094858169555664

Token 66: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0018144060159102082
    2. ' shifted' → logprob: -6.376814365386963
    3. '(' → logprob: -9.501814842224121
    4. '   ' → logprob: -11.126814842224121
    5. ' shift' → logprob: -11.501814842224121
    6. ' (' → logprob: -12.876814842224121
    7. 'sh' → logprob: -13.001814842224121
    8. '  ' → logprob: -13.126814842224121
    9. ' ' → logprob: -13.251814842224121
    10. '_shift' → logprob: -13.751814842224121

Token 67: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -2.7372048862162046e-05
    2. 'shift' → logprob: -11.250027656555176
    3. 'd' → logprob: -12.250027656555176
    4. '_value' → logprob: -12.750027656555176
    5. 'ted' → logprob: -13.875027656555176
    6. 'isted' → logprob: -13.875027656555176
    7. 'sed' → logprob: -14.125027656555176
    8. 'eded' → logprob: -14.375027656555176
    9. '_shift' → logprob: -14.625027656555176
    10. 'e' → logprob: -14.875027656555176

Token 68: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0003384422743692994
    2. 'ascii' → logprob: -8.000338554382324
    3. 'ed' → logprob: -13.875338554382324
    4. '_' → logprob: -14.500338554382324
    5. '_as' → logprob: -15.125338554382324
    6. '-' → logprob: -15.375338554382324
    7. '_s' → logprob: -15.375338554382324
    8. '_scaled' → logprob: -16.000337600708008
    9. 's' → logprob: -16.125337600708008
    10. 'shift' → logprob: -16.875337600708008

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25193047523498535
    2. ' -' → logprob: -1.5019304752349854
    3. ')' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.876930236816406
    5. '-as' → logprob: -15.876930236816406
    6. '   ' → logprob: -16.376930236816406
    7. 'ascii' → logprob: -16.751930236816406
    8. ' ascii' → logprob: -16.751930236816406
    9. '%' → logprob: -17.251930236816406
    10. '```' → logprob: -17.251930236816406

Token 70: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.00041863700607791543
    2. '1' → logprob: -8.375418663024902
    3. '(' → logprob: -9.250418663024902
    4. ' ascii' → logprob: -9.625418663024902
    5. '(as' → logprob: -11.500418663024902
    6. ' (' → logprob: -11.875418663024902
    7. '91' → logprob: -12.875418663024902
    8. '   ' → logprob: -13.125418663024902
    9. '_ascii' → logprob: -13.875418663024902
    10. ' ' → logprob: -14.875418663024902

Token 71: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -4.320199877838604e-07
    2. 'upper' → logprob: -15.625
    3. '_lower' → logprob: -16.125
    4. 'Upper' → logprob: -17.625
    5. 'uppercase' → logprob: -18.375
    6. '```' → logprob: -19.0
    7. '_updated' → logprob: -19.25
    8. '_user' → logprob: -19.25
    9. '_up' → logprob: -19.625
    10. '_plus' → logprob: -19.75

Token 72: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.0011309286346659064
    2. '_Z' → logprob: -7.001131057739258
    3. 'Z' → logprob: -8.501131057739258
    4. 'z' → logprob: -11.251131057739258
    5. '90' → logprob: -14.251131057739258
    6. '_w' → logprob: -14.626131057739258
    7. '_' → logprob: -14.876131057739258
    8. '_A' → logprob: -15.126131057739258
    9. '[z' → logprob: -15.376131057739258
    10. '_s' → logprob: -15.751131057739258

Token 73: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6397660970687866
    2. '1' → logprob: -1.2647660970687866
    3. ')' → logprob: -2.139766216278076
    4. '-' → logprob: -2.639766216278076
    5. ' ' → logprob: -7.264766216278076
    6. ' )' → logprob: -7.639766216278076
    7. ')-' → logprob: -10.389765739440918
    8. '```' → logprob: -12.764765739440918
    9. ' ' → logprob: -13.764765739440918
    10. ']' → logprob: -14.889765739440918

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -14.875041007995605
    4. '<|end|>' → logprob: -15.625041007995605
    5. '```' → logprob: -16.62504005432129
    6. '<|end|>' → logprob: -16.87504005432129
    7. '   ' → logprob: -18.00004005432129
    8. '۱' → logprob: -18.75004005432129
    9. '">' → logprob: -18.93754005432129
    10. '>' → logprob: -19.06254005432129

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -18.125001907348633
    5. ')' → logprob: -18.625001907348633
    6. '۱' → logprob: -19.375001907348633
    7. '१' → logprob: -19.500001907348633
    8. '１' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '<|end|>' → logprob: -19.875001907348633

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026444973424077034
    2. ')
' → logprob: -3.651444911956787
    3. '   ' → logprob: -9.151445388793945
    4. ')
' → logprob: -10.651445388793945
    5. ' )' → logprob: -12.401445388793945
    6. '       ' → logprob: -12.401445388793945
    7. ')

' → logprob: -12.901445388793945
    8. '')' → logprob: -13.276445388793945
    9. ' )
' → logprob: -14.901445388793945
    10. ')`' → logprob: -15.026445388793945

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41320914030075073
    2. 'else' → logprob: -1.9132091999053955
    3. '       ' → logprob: -1.9132091999053955
    4. ' else' → logprob: -3.2882091999053955
    5. '\n' → logprob: -6.163208961486816
    6. ')' → logprob: -6.663208961486816
    7. '    
' → logprob: -7.788208961486816
    8. '        
' → logprob: -7.913208961486816
    9. ''\' → logprob: -8.163208961486816
    10. 'output' → logprob: -8.413208961486816

Token 78: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.09089411050081253
    2. '       ' → logprob: -3.0908942222595215
    3. ' output' → logprob: -3.2158942222595215
    4. '   ' → logprob: -6.9658942222595215
    5. 'else' → logprob: -8.840893745422363
    6. 'char' → logprob: -9.715893745422363
    7. ' else' → logprob: -10.840893745422363
    8. '	output' → logprob: -10.840893745422363
    9. '$output' → logprob: -10.965893745422363
    10. '```' → logprob: -11.090893745422363

Token 79: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -13.125004768371582
    3. 'string' → logprob: -14.375004768371582
    4. '_char' → logprob: -14.375004768371582
    5. '_str' → logprob: -14.625004768371582
    6. 'String' → logprob: -14.625004768371582
    7. '_s' → logprob: -16.250003814697266
    8. '_String' → logprob: -16.500003814697266
    9. '_character' → logprob: -16.625003814697266
    10. '_STRING' → logprob: -17.375003814697266

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18094056844711304
    2. '+=' → logprob: -1.8059406280517578
    3. '+' → logprob: -7.180940628051758
    4. '+='' → logprob: -8.055940628051758
    5. ' +' → logprob: -9.305940628051758
    6. '=' → logprob: -11.180940628051758
    7. '+="' → logprob: -12.180940628051758
    8. ']+=' → logprob: -13.430940628051758
    9. '+=(' → logprob: -13.430940628051758
    10. '<|end|>' → logprob: -13.555940628051758

Token 81: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.0007119550718925893
    2. ' chr' → logprob: -7.250711917877197
    3. '(chr' → logprob: -13.125712394714355
    4. 'char' → logprob: -17.75071144104004
    5. '_chr' → logprob: -18.87571144104004
    6. ' ' → logprob: -19.25071144104004
    7. 'Chr' → logprob: -20.12571144104004
    8. '   ' → logprob: -20.50071144104004
    9. '  ' → logprob: -20.75071144104004
    10. '```' → logprob: -21.12571144104004

Token 82: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. '(wrapper' → logprob: -14.875204086303711
    4. ' (' → logprob: -16.62520408630371
    5. 'wrapped' → logprob: -17.37520408630371
    6. '(
' → logprob: -18.87520408630371
    7. '(W' → logprob: -19.00020408630371
    8. '	w' → logprob: -19.37520408630371
    9. '()' → logprob: -19.37520408630371
    10. 'w' → logprob: -20.00020408630371

Token 83: 'rapped' (ID: 112944)
  Prédit: 'rapped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rapped' → logprob: -3.976922744186595e-05
    2. 'wrapped' → logprob: -10.250040054321289
    3. 'r' → logprob: -12.500040054321289
    4. 'rap' → logprob: -15.000040054321289
    5. 'apped' → logprob: -15.625040054321289
    6. 'rapper' → logprob: -16.62504005432129
    7. 'ropped' → logprob: -17.12504005432129
    8. 'ra' → logprob: -17.75004005432129
    9. 'Wrapped' → logprob: -17.75004005432129
    10. ' wrapped' → logprob: -18.37504005432129

Token 84: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0005419504595920444
    2. 'ascii' → logprob: -8.625541687011719
    3. '_' → logprob: -9.125541687011719
    4. 'ed' → logprob: -9.500541687011719
    5. 'apped' → logprob: -10.000541687011719
    6. '_as' → logprob: -10.250541687011719
    7. 'd' → logprob: -10.250541687011719
    8. 's' → logprob: -11.125541687011719
    9. 'p' → logprob: -11.375541687011719
    10. '_ap' → logprob: -11.625541687011719

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012541198171675205
    2. '   ' → logprob: -4.6375412940979
    3. ')
' → logprob: -5.8875412940979
    4. '')' → logprob: -12.887540817260742
    5. ' )' → logprob: -13.137540817260742
    6. 'else' → logprob: -13.512540817260742
    7. ' else' → logprob: -14.137540817260742
    8. '       ' → logprob: -14.887540817260742
    9. ')
' → logprob: -16.387540817260742
    10. '}' → logprob: -16.512540817260742

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16178762912750244
    2. ' else' → logprob: -2.536787509918213
    3. 'else' → logprob: -2.661787509918213
    4. '	else' → logprob: -8.161787986755371
    5. 'elif' → logprob: -9.786787986755371
    6. '```' → logprob: -10.036787986755371
    7. '    
' → logprob: -11.161787986755371
    8. ' elif' → logprob: -11.661787986755371
    9. '<|end|>' → logprob: -11.786787986755371
    10. '\n' → logprob: -11.911787986755371

Token 87: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3590976893901825
    2. '   ' → logprob: -1.3590977191925049
    3. ' else' → logprob: -3.109097719192505
    4. 'elif' → logprob: -9.109097480773926
    5. '	else' → logprob: -10.234097480773926
    6. '```' → logprob: -11.859097480773926
    7. ' elif' → logprob: -13.234097480773926
    8. ' ' → logprob: -13.484097480773926
    9. '_else' → logprob: -14.234097480773926
    10. '  ' → logprob: -14.484097480773926

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7614741921424866
    2. '       ' → logprob: -0.8864741921424866
    3. ':
' → logprob: -2.136474132537842
    4. '   ' → logprob: -6.261474132537842
    5. 'output' → logprob: -7.386474132537842
    6. ' output' → logprob: -8.386474609375
    7. '    ' → logprob: -10.761474609375
    8. '           ' → logprob: -11.636474609375
    9. '	output' → logprob: -11.636474609375
    10. '      ' → logprob: -11.761474609375

Token 89: '       ' (ID: 309)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.9093108773231506
    2. 'output' → logprob: -0.9093108773231506
    3. '       ' → logprob: -1.6593108177185059
    4. '   ' → logprob: -5.534310817718506
    5. '	output' → logprob: -8.909311294555664
    6. '    ' → logprob: -10.534311294555664
    7. ' ' → logprob: -13.034311294555664
    8. ' ' → logprob: -13.034311294555664
    9. '    ' → logprob: -13.284311294555664
    10. '(output' → logprob: -13.409311294555664

Token 90: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.02325526252388954
    2. ' output' → logprob: -3.7732553482055664
    3. '       ' → logprob: -12.023255348205566
    4. '   ' → logprob: -13.148255348205566
    5. '	output' → logprob: -13.523255348205566
    6. '    ' → logprob: -15.398255348205566
    7. '$output' → logprob: -16.27325439453125
    8. ' ' → logprob: -16.52325439453125
    9. 'char' → logprob: -16.77325439453125
    10. '(output' → logprob: -16.77325439453125

Token 91: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.0206720617134124e-05
    2. 'string' → logprob: -11.75001049041748
    3. 'String' → logprob: -13.75001049041748
    4. '_' → logprob: -14.00001049041748
    5. '_str' → logprob: -16.250009536743164
    6. '_strings' → logprob: -16.500009536743164
    7. '```' → logprob: -16.625009536743164
    8. '_String' → logprob: -16.875009536743164
    9. '_s' → logprob: -17.250009536743164
    10. 's' → logprob: -17.250009536743164

Token 92: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09479926526546478
    2. '+' → logprob: -2.469799280166626
    3. ' +=' → logprob: -5.219799041748047
    4. '+='' → logprob: -8.094799041748047
    5. '+="' → logprob: -9.719799041748047
    6. ']+=' → logprob: -9.844799041748047
    7. '=' → logprob: -12.219799041748047
    8. ')' → logprob: -13.094799041748047
    9. '+=(' → logprob: -13.344799041748047
    10. ' +' → logprob: -13.594799041748047

Token 93: ' chr' (ID: 42767)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.10601791739463806
    2. 'chr' → logprob: -2.356017827987671
    3. ' char' → logprob: -5.23101806640625
    4. ' chr' → logprob: -7.73101806640625
    5. 'ch' → logprob: -11.98101806640625
    6. '(char' → logprob: -15.35601806640625
    7. ' ' → logprob: -15.60601806640625
    8. '	char' → logprob: -15.98101806640625
    9. '<char' → logprob: -16.10601806640625
    10. '   ' → logprob: -16.10601806640625

Token 94: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025687361136078835
    2. '(ord' → logprob: -3.7756874561309814
    3. '(char' → logprob: -6.025687217712402
    4. '(chr' → logprob: -11.275687217712402
    5. '(sh' → logprob: -12.525687217712402
    6. '(s' → logprob: -13.775687217712402
    7. '(`' → logprob: -14.025687217712402
    8. '(
' → logprob: -14.275687217712402
    9. 'shift' → logprob: -14.400687217712402
    10. '((' → logprob: -14.525687217712402

Token 95: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -9.088346359931165e-07
    2. ' shifted' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.875
    4. 'sh' → logprob: -21.875
    5. '
' → logprob: -22.125
    6. '```' → logprob: -22.25
    7. 'Shift' → logprob: -22.625
    8. '_shift' → logprob: -22.875
    9. ' shift' → logprob: -23.125
    10. ')' → logprob: -23.5

Token 96: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.3856492842023727e-06
    2. '_value' → logprob: -13.625000953674316
    3. '_ascii' → logprob: -16.750001907348633
    4. 'e' → logprob: -17.250001907348633
    5. 'eed' → logprob: -18.375001907348633
    6. 'eded' → logprob: -18.500001907348633
    7. 'eds' → logprob: -18.875001907348633
    8. 'ascii' → logprob: -18.875001907348633
    9. 'd' → logprob: -18.875001907348633
    10. '_' → logprob: -19.500001907348633

Token 97: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.00014442270912695676
    2. 'ascii' → logprob: -8.875144004821777
    3. '_as' → logprob: -13.625144004821777
    4. 'ed' → logprob: -13.750144004821777
    5. ')' → logprob: -13.875144004821777
    6. '_char' → logprob: -14.875144004821777
    7. '_' → logprob: -15.625144004821777
    8. 'char' → logprob: -15.875144004821777
    9. 'Ascii' → logprob: -16.125144958496094
    10. '_encoded' → logprob: -16.500144958496094

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0087516784551553e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -14.50001049041748
    4. '```' → logprob: -15.75001049041748
    5. '   ' → logprob: -16.125009536743164
    6. '')' → logprob: -16.250009536743164
    7. '<|end|>' → logprob: -16.250009536743164
    8. ')return' → logprob: -16.375009536743164
    9. '}' → logprob: -17.375009536743164
    10. ')`' → logprob: -17.375009536743164

Token 99: '        
' (ID: 3564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6860650777816772
    2. '<|end|>' → logprob: -1.3110650777816772
    3. '\n' → logprob: -2.061065196990967
    4. '#' → logprob: -3.311065196990967
    5. '```' → logprob: -3.436065196990967
    6. '
' → logprob: -3.936065196990967
    7. 'newline' → logprob: -5.436065196990967
    8. ')' → logprob: -6.061065196990967
    9. '#print' → logprob: -6.936065196990967
    10. '<|end|>' → logprob: -7.061065196990967

Token 100: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. '(print' → logprob: -15.500004768371582
    5. '#print' → logprob: -15.875004768371582
    6. '
' → logprob: -15.875004768371582
    7. '<|end|>' → logprob: -16.3750057220459
    8. ')' → logprob: -16.6250057220459
    9. '#' → logprob: -17.5000057220459
    10. '.print' → logprob: -17.7500057220459

Token 101: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01941566728055477
    2. '('' → logprob: -4.394415855407715
    3. '(output' → logprob: -5.019415855407715
    4. '("("' → logprob: -8.269415855407715
    5. '()' → logprob: -11.769415855407715
    6. '(`' → logprob: -13.519415855407715
    7. ' (' → logprob: -13.644415855407715
    8. '(
' → logprob: -13.769415855407715
    9. '(input' → logprob: -13.769415855407715
    10. 'output' → logprob: -13.894415855407715

Token 102: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -4.036524842376821e-05
    2. '_' → logprob: -10.375040054321289
    3. '_str' → logprob: -12.125040054321289
    4. ')_' → logprob: -13.750040054321289
    5. '_s' → logprob: -14.375040054321289
    6. 'string' → logprob: -14.375040054321289
    7. '_String' → logprob: -14.750040054321289
    8. '_strings' → logprob: -14.875040054321289
    9. '```' → logprob: -15.625040054321289
    10. ')' → logprob: -16.37504005432129

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. '))' → logprob: -16.75
    4. '')' → logprob: -18.0
    5. ')`' → logprob: -18.125
    6. ')
' → logprob: -18.5
    7. '()' → logprob: -19.5
    8. '`)' → logprob: -19.625
    9. '(' → logprob: -20.625
    10. '）' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 49.50%
Précision adaptée (1ère position): 52.48%
Précision (top 10): 86.14%
================================================================================
