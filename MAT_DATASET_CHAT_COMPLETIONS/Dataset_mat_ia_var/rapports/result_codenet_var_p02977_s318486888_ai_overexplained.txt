================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un entier, puis convertir la saisie (qui est une chaîne de caractères) en entier avec int()
n = int(input())

# Pour raccourcir les appels ultérieurs, on nomme print par 'p', et range par 'r'
p, r = print, range

# Vérifier si n est une puissance de deux.
# n & -n isole le bit de poids le plus faible à 1 dans n.
# Si n est une puissance de deux, n & -n == n.
if n & -n == n:
    # Si n est une puissance de deux, il faut afficher "No", puis arrêter immédiatement le programme.
    p("No")
    exit(0)  # Quitte le programme avec le code de sortie 0 (succès)

# Si on arrive ici, alors n n'est pas une puissance de deux
p("Yes")  # Afficher "Yes" car la condition est satisfaite.

# Cas particuliers : si n vaut exactement 3
if n == 3:
    # On affiche des paires de nombres.
    # Chaque appel p(a, b) affiche les deux entiers sur une ligne séparés par un espace.
    p(1, 2)
    p(2, 3)
    p(3, 4)
    p(4, 5)
    p(5, 6)
    exit(0)  # On termine le programme car ce cas est traité à part.

# Initialiser k à 1.
k = 1
# Doubler k tant que k*2 < n, pour obtenir la plus grande puissance de deux STRICTEMENT inférieure à n.
while k * 2 < n:
    k *= 2  # Multiplie k par 2 à chaque itération.

# Première boucle : pour i allant de 0 à k-3 inclus (donc k-2 éléments au total).
for i in r(k - 2):
    # Afficher deux entiers consécutifs i+1 et i+2 (parce que range commence à 0, donc on ajoute 1)
    p(i + 1, i + 2)

# Connecter le sommet k-1 (c'est-à-dire le (k-1)-ième sommet, vu qu'on part de 1) au sommet n+1
# Cela fait un lien spécial entre une puissance de deux et un nombre décalé
p(k - 1, n + 1)

# Deuxième boucle : pour i de 0 à k-3 inclus (toujours k-2 éléments)
for i in r(k - 2):
    # On ajoute n au numéro de sommet pour obtenir une nouvelle série de sommets.
    # On connecte chaque (n+i+1) à (n+i+2)
    p(n + i + 1, n + i + 2)

# On connecte le sommet n+k à n+1
p(n + k, n + 1)
# On connecte le sommet n+k+1 à k
p(n + k + 1, k)

# Dernière boucle : pour i de 0 à n-k-1 inclus (donc n-k éléments au total)
for i in r(n - k):
    # On relie (n+i+1) à (n+k+i+1)
    p(n + i + 1, n + k + i + 1)
    # On relie (n+k+i) à (k+i+1)
    p(n + k + i, k + i + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4347496032714844
    2. '_la' → logprob: -2.4347496032714844
    3. '_l' → logprob: -2.9347496032714844
    4. ' =' → logprob: -3.1847496032714844
    5. ' la' → logprob: -3.3097496032714844
    6. '_le' → logprob: -3.4347496032714844
    7. ' à' → logprob: -3.9347496032714844
    8. ' ' → logprob: -4.684749603271484
    9. '```' → logprob: -4.684749603271484
    10. '_a' → logprob: -4.809749603271484

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26014092564582825
    2. 'util' → logprob: -1.5101408958435059
    3. 'user' → logprob: -5.010140895843506
    4. ' l' → logprob: -6.885140895843506
    5. 'input' → logprob: -8.760141372680664
    6. 'un' → logprob: -9.385141372680664
    7. 'u' → logprob: -9.885141372680664
    8. 'us' → logprob: -10.010141372680664
    9. 'client' → logprob: -10.760141372680664
    10. 'la' → logprob: -11.135141372680664

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17725136876106262
    2. 'util' → logprob: -2.3022513389587402
    3. ' utilisateur' → logprob: -3.3022513389587402
    4. '’utilisateur' → logprob: -4.17725133895874
    5. 'u' → logprob: -5.55225133895874
    6. 'a' → logprob: -5.92725133895874
    7. ''' → logprob: -6.80225133895874
    8. 'user' → logprob: -7.55225133895874
    9. '_util' → logprob: -7.92725133895874
    10. 'us' → logprob: -7.92725133895874

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22842486202716827
    2. '_' → logprob: -1.9784249067306519
    3. 's' → logprob: -3.3534247875213623
    4. ' )' → logprob: -5.228425025939941
    5. ' a' → logprob: -5.353425025939941
    6. ' input' → logprob: -5.478425025939941
    7. 'input' → logprob: -6.103425025939941
    8. ' d' → logprob: -6.478425025939941
    9. ''' → logprob: -6.603425025939941
    10. '   ' → logprob: -6.853425025939941

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012901609763503075
    2. 'entr' → logprob: -5.012901782989502
    3. ' saisir' → logprob: -5.762901782989502
    4. 'r' → logprob: -6.762901782989502
    5. '```' → logprob: -6.762901782989502
    6. '#' → logprob: -9.262901306152344
    7. 'entrée' → logprob: -9.512901306152344
    8. 'contin' → logprob: -9.512901306152344
    9. 'entre' → logprob: -9.637901306152344
    10. 'input' → logprob: -9.762901306152344

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1462262123823166
    2. '_' → logprob: -2.021226167678833
    3. ''' → logprob: -6.396226406097412
    4. 'u' → logprob: -7.646226406097412
    5. 's' → logprob: -8.271225929260254
    6. ' ' → logprob: -9.021225929260254
    7. '`' → logprob: -9.271225929260254
    8. '```' → logprob: -9.271225929260254
    9. ' un' → logprob: -9.521225929260254
    10. ',' → logprob: -9.646225929260254

Token 9: ' entier' (ID: 80473)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.05011240020394325
    2. 'texte' → logprob: -3.80011248588562
    3. ' nombre' → logprob: -4.300112247467041
    4. 'nom' → logprob: -4.800112247467041
    5. 'e' → logprob: -6.550112247467041
    6. 'mot' → logprob: -6.925112247467041
    7. 'message' → logprob: -7.800112247467041
    8. 'n' → logprob: -8.4251127243042
    9. 'ent' → logprob: -8.9251127243042
    10. 'string' → logprob: -8.9251127243042

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04775648191571236
    2. 'ent' → logprob: -4.422756671905518
    3. 'x' → logprob: -4.422756671905518
    4. 'nombre' → logprob: -4.547756671905518
    5. '```' → logprob: -5.547756671905518
    6. '\n' → logprob: -6.047756671905518
    7. 'user' → logprob: -6.797756671905518
    8. '\' → logprob: -7.172756671905518
    9. 'entr' → logprob: -7.172756671905518
    10. 'input' → logprob: -7.297756671905518

Token 11: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6925650238990784
    2. 'n' → logprob: -0.9425650238990784
    3. 'input' → logprob: -3.3175649642944336
    4. ' n' → logprob: -3.9425649642944336
    5. ' input' → logprob: -4.192564964294434
    6. 'ent' → logprob: -4.942564964294434
    7. 's' → logprob: -4.942564964294434
    8. 'a' → logprob: -6.067564964294434
    9. 'num' → logprob: -6.317564964294434
    10. 'x' → logprob: -6.442564964294434

Token 12: ' convertir' (ID: 79223)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.860562801361084
    2. ' calcul' → logprob: -1.860562801361084
    3. 'aff' → logprob: -2.235562801361084
    4. ' print' → logprob: -2.610562801361084
    5. ' ' → logprob: -2.860562801361084
    6. 'print' → logprob: -3.110562801361084
    7. ' effectuer' → logprob: -3.360562801361084
    8. ' continuer' → logprob: -3.360562801361084
    9. 'calcul' → logprob: -4.235562801361084
    10. 's' → logprob: -5.235562801361084

Token 13: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7942557334899902
    2. ' ' → logprob: -0.9192557334899902
    3. '(' → logprob: -2.2942557334899902
    4. '```' → logprob: -4.04425573348999
    5. 'input' → logprob: -4.29425573348999
    6. '`' → logprob: -5.54425573348999
    7. ''' → logprob: -6.04425573348999
    8. ':' → logprob: -6.29425573348999
    9. ' input' → logprob: -7.04425573348999
    10. 'a' → logprob: -7.41925573348999

Token 14: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029284175485372543
    2. '_' → logprob: -3.9042842388153076
    3. 's' → logprob: -5.5292840003967285
    4. ' valeur' → logprob: -6.0292840003967285
    5. ' chaîne' → logprob: -7.1542840003967285
    6. ''' → logprob: -8.529284477233887
    7. 'n' → logprob: -9.279284477233887
    8. '  ' → logprob: -9.404284477233887
    9. '   ' → logprob: -9.404284477233887
    10. ' s' → logprob: -9.529284477233887

Token 15: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00902979914098978
    2. 'es' → logprob: -4.884029865264893
    3. 's' → logprob: -7.384029865264893
    4. ' e' → logprob: -8.134029388427734
    5. ' ' → logprob: -8.384029388427734
    6. 'r' → logprob: -9.634029388427734
    7. 'i' → logprob: -9.759029388427734
    8. '```' → logprob: -10.509029388427734
    9. '_e' → logprob: -10.884029388427734
    10. 'ie' → logprob: -10.884029388427734

Token 16: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1882179975509644
    2. 'n' → logprob: -2.063218116760254
    3. 'i' → logprob: -2.188218116760254
    4. 'x' → logprob: -2.313218116760254
    5. ' ' → logprob: -2.313218116760254
    6. 'e' → logprob: -2.813218116760254
    7. 's' → logprob: -3.188218116760254
    8. '```' → logprob: -3.563218116760254
    9. 'input' → logprob: -3.813218116760254
    10. 'ent' → logprob: -4.188218116760254

Token 17: 'qui' (ID: 22771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20517602562904358
    2. 'en' → logprob: -1.8301759958267212
    3. ' en' → logprob: -3.7051761150360107
    4. ' )' → logprob: -7.955175876617432
    5. ''en' → logprob: -9.58017635345459
    6. ' ' → logprob: -10.20517635345459
    7. '_en' → logprob: -11.33017635345459
    8. ' ' → logprob: -11.83017635345459
    9. 'ent' → logprob: -12.58017635345459
    10. '#' → logprob: -12.70517635345459

Token 18: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5112303495407104
    2. ' est' → logprob: -1.0112303495407104
    3. 's' → logprob: -3.76123046875
    4. ' sera' → logprob: -5.13623046875
    5. ' représente' → logprob: -6.63623046875
    6. ' s' → logprob: -7.38623046875
    7. ')' → logprob: -7.38623046875
    8. 'a' → logprob: -7.76123046875
    9. ''est' → logprob: -7.76123046875
    10. 'n' → logprob: -7.88623046875

Token 19: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23604223132133484
    2. ' convert' → logprob: -2.7360422611236572
    3. ' un' → logprob: -3.2360422611236572
    4. ' en' → logprob: -3.4860422611236572
    5. 'une' → logprob: -3.8610422611236572
    6. ' a' → logprob: -3.9860422611236572
    7. 'convert' → logprob: -4.986042022705078
    8. ' toujours' → logprob: -5.111042022705078
    9. ')' → logprob: -5.861042022705078
    10. ' sous' → logprob: -5.986042022705078

Token 20: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.19038186967372894
    2. 'chaine' → logprob: -3.0653817653656006
    3. ' string' → logprob: -3.3153817653656006
    4. ')' → logprob: -3.9403817653656006
    5. ' chaine' → logprob: -4.06538200378418
    6. 'string' → logprob: -4.44038200378418
    7. ' ' → logprob: -4.56538200378418
    8. ' entier' → logprob: -4.69038200378418
    9. 'ent' → logprob: -5.06538200378418
    10. ' )' → logprob: -5.19038200378418

Token 21: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12658900022506714
    2. ' en' → logprob: -3.126589059829712
    3. ' de' → logprob: -3.251589059829712
    4. ' )' → logprob: -3.626589059829712
    5. 'de' → logprob: -5.376588821411133
    6. 'en' → logprob: -6.001588821411133
    7. ' ' → logprob: -7.751588821411133
    8. '')' → logprob: -7.876588821411133
    9. 's' → logprob: -8.126588821411133
    10. ' à' → logprob: -8.626588821411133

Token 22: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.14343392848968506
    2. ' caractères' → logprob: -2.0184340476989746
    3. 'texte' → logprob: -8.268433570861816
    4. ' caracteres' → logprob: -8.393433570861816
    5. ' caract' → logprob: -9.018433570861816
    6. ' caractère' → logprob: -9.643433570861816
    7. '#' → logprob: -9.893433570861816
    8. '```' → logprob: -11.643433570861816
    9. 'chars' → logprob: -11.893433570861816
    10. 'char' → logprob: -12.268433570861816

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008591645397245884
    2. 'en' → logprob: -4.883591651916504
    3. ' en' → logprob: -7.133591651916504
    4. ' )' → logprob: -9.133591651916504
    5. '`)' → logprob: -10.258591651916504
    6. '')' → logprob: -10.633591651916504
    7. '")' → logprob: -11.758591651916504
    8. '#' → logprob: -13.133591651916504
    9. '```' → logprob: -13.133591651916504
    10. ''en' → logprob: -13.508591651916504

Token 24: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9848353266716003
    2. 'e' → logprob: -1.1098353862762451
    3. 'i' → logprob: -1.9848353862762451
    4. 'x' → logprob: -3.109835386276245
    5. 'ent' → logprob: -3.984835386276245
    6. '```' → logprob: -3.984835386276245
    7. 'int' → logprob: -4.234835147857666
    8. '`' → logprob: -4.359835147857666
    9. 'input' → logprob: -4.609835147857666
    10. 'en' → logprob: -4.609835147857666

Token 25: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.127382516860962
    2. 'int' → logprob: -1.377382516860962
    3. ' un' → logprob: -1.627382516860962
    4. ' entier' → logprob: -2.002382516860962
    5. 'un' → logprob: -2.627382516860962
    6. ' int' → logprob: -4.252382278442383
    7. '```' → logprob: -6.127382278442383
    8. 'nombre' → logprob: -6.627382278442383
    9. ' nombre' → logprob: -7.002382278442383
    10. ' ent' → logprob: -8.252382278442383

Token 26: ' avec' (ID: 3937)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11131365597248077
    2. 'i' → logprob: -2.986313581466675
    3. 'x' → logprob: -3.861313581466675
    4. 'e' → logprob: -4.611313819885254
    5. 'ent' → logprob: -5.236313819885254
    6. '#' → logprob: -5.361313819885254
    7. '```' → logprob: -5.611313819885254
    8. 'u' → logprob: -5.861313819885254
    9. 'v' → logprob: -6.111313819885254
    10. 'a' → logprob: -6.736313819885254

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3951716125011444
    2. ' int' → logprob: -1.3951716423034668
    3. ' la' → logprob: -3.270171642303467
    4. '```' → logprob: -3.645171642303467
    5. '`' → logprob: -4.395171642303467
    6. 'la' → logprob: -6.395171642303467
    7. '=int' → logprob: -8.895171165466309
    8. 'l' → logprob: -9.145171165466309
    9. ' `' → logprob: -9.395171165466309
    10. '``' → logprob: -9.520171165466309

Token 28: '()
' (ID: 1234)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5206029415130615
    2. 'i' → logprob: -2.0206029415130615
    3. 'e' → logprob: -2.5206029415130615
    4. 'x' → logprob: -2.5206029415130615
    5. 'u' → logprob: -3.0206029415130615
    6. 'ent' → logprob: -4.020603179931641
    7. '(' → logprob: -4.395603179931641
    8. '```' → logprob: -4.770603179931641
    9. '#' → logprob: -5.145603179931641
    10. 's' → logprob: -5.645603179931641

Token 29: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13686425983905792
    2. 'e' → logprob: -2.886864185333252
    3. 'x' → logprob: -3.386864185333252
    4. 'i' → logprob: -3.886864185333252
    5. '#' → logprob: -4.636864185333252
    6. 'ent' → logprob: -6.011864185333252
    7. 'u' → logprob: -6.136864185333252
    8. '```' → logprob: -7.136864185333252
    9. 's' → logprob: -7.511864185333252
    10. 'v' → logprob: -7.886864185333252

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5251120924949646
    2. ' =' → logprob: -0.9001120924949646
    3. 'umber' → logprob: -7.275112152099609
    4. 'ombre' → logprob: -7.650112152099609
    5. 'um' → logprob: -7.775112152099609
    6. ' ' → logprob: -9.02511215209961
    7. '=int' → logprob: -9.27511215209961
    8. '=input' → logprob: -9.65011215209961
    9. '_' → logprob: -10.15011215209961
    10. 'b' → logprob: -10.77511215209961

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06377245485782623
    2. 'int' → logprob: -2.813772439956665
    3. ' input' → logprob: -6.438772678375244
    4. 'input' → logprob: -8.563772201538086
    5. ' ' → logprob: -11.938772201538086
    6. '=int' → logprob: -12.188772201538086
    7. ' ' → logprob: -13.438772201538086
    8. '<int' → logprob: -15.563772201538086
    9. '[int' → logprob: -16.313772201538086
    10. '(int' → logprob: -16.313772201538086

Token 32: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14347721636295319
    2. '(input' → logprob: -2.018477201461792
    3. '('' → logprob: -7.268477439880371
    4. ' (' → logprob: -10.768477439880371
    5. '(n' → logprob: -10.768477439880371
    6. 'input' → logprob: -11.018477439880371
    7. '(
' → logprob: -11.143477439880371
    8. '("("' → logprob: -11.643477439880371
    9. '(user' → logprob: -11.768477439880371
    10. '()' → logprob: -11.893477439880371

Token 33: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09516124427318573
    2. '("("' → logprob: -2.720161199569702
    3. '('' → logprob: -3.970161199569702
    4. '()' → logprob: -5.470161437988281
    5. '("' → logprob: -7.095161437988281
    6. '("")' → logprob: -7.470161437988281
    7. '(""))' → logprob: -8.470161437988281
    8. '(
' → logprob: -10.345161437988281
    9. '("""' → logprob: -10.470161437988281
    10. '(()' → logprob: -10.595161437988281

Token 34: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5277742743492126
    2. ')' → logprob: -1.7777743339538574
    3. '\' → logprob: -2.9027743339538574
    4. '()' → logprob: -3.0277743339538574
    5. '\n' → logprob: -3.2777743339538574
    6. '+' → logprob: -3.6527743339538574
    7. ' ' → logprob: -3.7777743339538574
    8. '#' → logprob: -4.027774333953857
    9. '*' → logprob: -4.652774333953857
    10. '```' → logprob: -5.152774333953857

Token 35: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3293962776660919
    2. 'if' → logprob: -1.5793962478637695
    3. '#' → logprob: -3.0793962478637695
    4. ' if' → logprob: -3.9543962478637695
    5. ' print' → logprob: -5.3293962478637695
    6. 'n' → logprob: -5.9543962478637695
    7. 'factor' → logprob: -7.8293962478637695
    8. 'result' → logprob: -7.9543962478637695
    9. 's' → logprob: -8.32939624786377
    10. ' n' → logprob: -8.57939624786377

Token 36: ' racc' (ID: 146476)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.4947699010372162
    2. ' calcul' → logprob: -2.119769811630249
    3. ' i' → logprob: -2.369769811630249
    4. ' ' → logprob: -2.494769811630249
    5. ' vérifier' → logprob: -3.744769811630249
    6. ' continuer' → logprob: -4.244770050048828
    7. ' n' → logprob: -4.869770050048828
    8. '_' → logprob: -4.869770050048828
    9. 'i' → logprob: -4.869770050048828
    10. ' effectuer' → logprob: -5.119770050048828

Token 37: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00019650737522169948
    2. 'o' → logprob: -10.75019645690918
    3. 'cour' → logprob: -10.75019645690918
    4. '#' → logprob: -11.00019645690918
    5. ' our' → logprob: -11.25019645690918
    6. 'up' → logprob: -11.37519645690918
    7. 'ur' → logprob: -11.37519645690918
    8. 'ourt' → logprob: -11.50019645690918
    9. '|' → logprob: -11.75019645690918
    10. '

' → logprob: -11.87519645690918

Token 38: 'cir' (ID: 31224)
  Prédit: 'cir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.047564391046762466
    2. '_c' → logprob: -3.7975645065307617
    3. 'c' → logprob: -3.9225645065307617
    4. 'r' → logprob: -7.172564506530762
    5. 'dir' → logprob: -7.297564506530762
    6. '-c' → logprob: -7.672564506530762
    7. 'pir' → logprob: -8.172564506530762
    8. 'ir' → logprob: -8.297564506530762
    9. '```' → logprob: -8.672564506530762
    10. 'cis' → logprob: -8.922564506530762

Token 39: ' les' (ID: 1341)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20994384586811066
    2. ' ,' → logprob: -2.3349437713623047
    3. ' la' → logprob: -3.3349437713623047
    4. ' n' → logprob: -4.334943771362305
    5. ' :' → logprob: -4.584943771362305
    6. 'la' → logprob: -5.334943771362305
    7. ':' → logprob: -5.334943771362305
    8. '(),' → logprob: -5.709943771362305
    9. 'le' → logprob: -5.959943771362305
    10. '(n' → logprob: -6.209943771362305

Token 40: ' appels' (ID: 133870)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.034444808959961
    2. 'n' → logprob: -1.659444808959961
    3. ' calcul' → logprob: -2.659444808959961
    4. 'calcul' → logprob: -2.784444808959961
    5. '#' → logprob: -3.034444808959961
    6. 'range' → logprob: -3.409444808959961
    7. ' commentaires' → logprob: -3.409444808959961
    8. ' n' → logprob: -3.534444808959961
    9. ' nombres' → logprob: -3.534444808959961
    10. 'nombre' → logprob: -4.034444808959961

Token 41: ' ult' (ID: 11619)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1134190559387207
    2. ' int' → logprob: -1.6134190559387207
    3. 'print' → logprob: -2.2384190559387207
    4. ' ' → logprob: -2.7384190559387207
    5. ',' → logprob: -2.8634190559387207
    6. ' n' → logprob: -3.1134190559387207
    7. 'range' → logprob: -3.2384190559387207
    8. ' range' → logprob: -3.9884190559387207
    9. ' de' → logprob: -4.113419055938721
    10. ' print' → logprob: -4.113419055938721

Token 42: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.002038795268163085
    2. 'érieur' → logprob: -7.252038955688477
    3. 'é' → logprob: -7.377038955688477
    4. 'érents' → logprob: -8.002038955688477
    5. 'érieure' → logprob: -9.127038955688477
    6. 'ér' → logprob: -9.127038955688477
    7. 'er' → logprob: -10.627038955688477
    8. 'éri' → logprob: -10.627038955688477
    9. 'érieures' → logprob: -10.752038955688477
    10. 'r' → logprob: -10.877038955688477

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6488857269287109
    2. 'n' → logprob: -2.148885726928711
    3. 'result' → logprob: -2.648885726928711
    4. 'user' → logprob: -3.273885726928711
    5. ' n' → logprob: -3.773885726928711
    6. 'v' → logprob: -4.023885726928711
    7. 'a' → logprob: -4.148885726928711
    8. ' ,' → logprob: -4.148885726928711
    9. 'val' → logprob: -4.273885726928711
    10. ' result' → logprob: -4.398885726928711

Token 44: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6276602745056152
    2. 'x' → logprob: -2.3776602745056152
    3. ' n' → logprob: -2.7526602745056152
    4. 'val' → logprob: -2.7526602745056152
    5. 's' → logprob: -3.3776602745056152
    6. 'print' → logprob: -3.5026602745056152
    7. 'result' → logprob: -3.6276602745056152
    8. ' on' → logprob: -4.127660274505615
    9. 'a' → logprob: -4.252660274505615
    10. 'v' → logprob: -4.252660274505615

Token 45: ' nom' (ID: 8080)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7259810566902161
    2. ' crée' → logprob: -1.1009809970855713
    3. ' peut' → logprob: -2.3509809970855713
    4. 'stock' → logprob: -3.2259809970855713
    5. 'cr' → logprob: -5.10098123550415
    6. ' définit' → logprob: -5.85098123550415
    7. 'pe' → logprob: -5.97598123550415
    8. 'r' → logprob: -5.97598123550415
    9. 'dé' → logprob: -5.97598123550415
    10. 'aff' → logprob: -6.10098123550415

Token 46: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.45359835028648376
    2. 'mage' → logprob: -2.0785982608795166
    3. 'mer' → logprob: -2.8285982608795166
    4. 'bre' → logprob: -2.9535982608795166
    5. 'm' → logprob: -3.2035982608795166
    6. '=' → logprob: -3.7035982608795166
    7. ' =' → logprob: -3.8285982608795166
    8. '_' → logprob: -3.9535982608795166
    9. 'n' → logprob: -5.203598499298096
    10. 'e' → logprob: -5.328598499298096

Token 47: ' print' (ID: 2123)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.5194951295852661
    2. 'la' → logprob: -1.6444951295852661
    3. 'x' → logprob: -2.2694950103759766
    4. 'val' → logprob: -2.3944950103759766
    5. 'n' → logprob: -2.8944950103759766
    6. ' une' → logprob: -2.8944950103759766
    7. ' x' → logprob: -3.7694950103759766
    8. ' variable' → logprob: -3.8944950103759766
    9. ' val' → logprob: -3.8944950103759766
    10. 'une' → logprob: -3.8944950103759766

Token 48: ' par' (ID: 686)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.387091040611267
    2. '(print' → logprob: -1.762091040611267
    3. 'e' → logprob: -2.1370911598205566
    4. ' =' → logprob: -2.5120911598205566
    5. '_' → logprob: -2.5120911598205566
    6. 'a' → logprob: -2.8870911598205566
    7. 's' → logprob: -2.8870911598205566
    8. '_print' → logprob: -3.0120911598205566
    9. 'p' → logprob: -3.2620911598205566
    10. '(' → logprob: -3.7620911598205566

Token 49: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.21128423511981964
    2. ' p' → logprob: -1.7112842798233032
    3. '_p' → logprob: -5.461284160614014
    4. '_' → logprob: -6.336284160614014
    5. '`' → logprob: -6.836284160614014
    6. 'pr' → logprob: -7.586284160614014
    7. '```' → logprob: -7.836284160614014
    8. 'P' → logprob: -8.086284637451172
    9. 'prt' → logprob: -8.336284637451172
    10. ' ' → logprob: -8.711284637451172

Token 50: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004392609931528568
    2. ' p' → logprob: -5.879392623901367
    3. 'print' → logprob: -7.379392623901367
    4. '_p' → logprob: -8.129392623901367
    5. 'pr' → logprob: -8.254392623901367
    6. '_' → logprob: -9.629392623901367
    7. 'prt' → logprob: -9.629392623901367
    8. '`' → logprob: -10.004392623901367
    9. '```' → logprob: -10.004392623901367
    10. 'P' → logprob: -10.504392623901367

Token 51: '',' (ID: 787)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.519893501419574e-05
    2. ' r' → logprob: -10.62509536743164
    3. ' p' → logprob: -10.87509536743164
    4. 'p' → logprob: -11.00009536743164
    5. ')' → logprob: -11.25009536743164
    6. ' ' → logprob: -12.00009536743164
    7. ' =' → logprob: -12.25009536743164
    8. 'print' → logprob: -13.00009536743164
    9. '=' → logprob: -13.37509536743164
    10. ',' → logprob: -14.25009536743164

Token 52: ' et' (ID: 859)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.576026439666748
    2. ' p' → logprob: -0.826026439666748
    3. ' =' → logprob: -9.951026916503906
    4. ' ' → logprob: -10.951026916503906
    5. 'n' → logprob: -12.076026916503906
    6. '=' → logprob: -12.826026916503906
    7. ' n' → logprob: -12.826026916503906
    8. 'def' → logprob: -13.326026916503906
    9. ' ' → logprob: -14.076026916503906
    10. ' )' → logprob: -14.326026916503906

Token 53: ' range' (ID: 3352)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.03524477034807205
    2. 'p' → logprob: -4.035244941711426
    3. ' =' → logprob: -4.660244941711426
    4. ' ' → logprob: -5.410244941711426
    5. '=' → logprob: -6.910244941711426
    6. ' n' → logprob: -7.785244941711426
    7. '```' → logprob: -8.410244941711426
    8. ' `' → logprob: -8.535244941711426
    9. ' l' → logprob: -8.660244941711426
    10. '`' → logprob: -8.910244941711426

Token 54: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5169702768325806
    2. '=' → logprob: -1.2669702768325806
    3. '(' → logprob: -2.891970157623291
    4. '<|end|>' → logprob: -3.516970157623291
    5. ' as' → logprob: -5.141970157623291
    6. '(range' → logprob: -5.266970157623291
    7. ' ' → logprob: -5.641970157623291
    8. 's' → logprob: -5.891970157623291
    9. '<|end|>' → logprob: -6.016970157623291
    10. ',' → logprob: -6.141970157623291

Token 55: ' '' (ID: 461)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7170187830924988
    2. 'r' → logprob: -0.9670187830924988
    3. ' range' → logprob: -2.5920188426971436
    4. 'range' → logprob: -3.0920188426971436
    5. ' ' → logprob: -4.9670186042785645
    6. '`' → logprob: -6.5920186042785645
    7. ''r' → logprob: -7.0920186042785645
    8. ' ' → logprob: -7.3420186042785645
    9. ' ra' → logprob: -8.342019081115723
    10. '	r' → logprob: -8.592019081115723

Token 56: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004356890916824341
    2. ' r' → logprob: -5.504356861114502
    3. 'range' → logprob: -8.37935733795166
    4. '`' → logprob: -11.00435733795166
    5. ' range' → logprob: -11.37935733795166
    6. ' ' → logprob: -12.50435733795166
    7. 'ra' → logprob: -12.62935733795166
    8. 'rng' → logprob: -13.37935733795166
    9. ''r' → logprob: -13.50435733795166
    10. 'rang' → logprob: -13.75435733795166

Token 57: ''
' (ID: 2207)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9459254741668701
    2. ' =' → logprob: -1.0709254741668701
    3. '')' → logprob: -1.6959254741668701
    4. '=' → logprob: -3.57092547416687
    5. 'p' → logprob: -3.57092547416687
    6. ''' → logprob: -4.195925712585449
    7. '')
' → logprob: -5.820925712585449
    8. ')' → logprob: -6.070925712585449
    9. ' ')' → logprob: -6.070925712585449
    10. '='' → logprob: -6.695925712585449

Token 58: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08952735364437103
    2. ' p' → logprob: -2.5895273685455322
    3. 'r' → logprob: -5.089527130126953
    4. 'n' → logprob: -6.214527130126953
    5. ' =' → logprob: -7.464527130126953
    6. ' ' → logprob: -7.464527130126953
    7. '```' → logprob: -7.839527130126953
    8. '
' → logprob: -8.339527130126953
    9. ' 
' → logprob: -8.589527130126953
    10. '(p' → logprob: -9.589527130126953

Token 59: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004792514722794294
    2. '=' → logprob: -5.3797926902771
    3. ',' → logprob: -8.754792213439941
    4. ' ' → logprob: -11.379792213439941
    5. 'r' → logprob: -13.254792213439941
    6. ' =)' → logprob: -15.254792213439941
    7. ' =
' → logprob: -15.754792213439941
    8. '  ' → logprob: -15.879792213439941
    9. ' ,' → logprob: -16.004793167114258
    10. '.' → logprob: -16.379793167114258

Token 60: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.36553046107292175
    2. 'r' → logprob: -1.2405304908752441
    3. 'range' → logprob: -4.740530490875244
    4. ' range' → logprob: -4.865530490875244
    5. ' ' → logprob: -7.865530490875244
    6. '	r' → logprob: -10.365530014038086
    7. '=' → logprob: -10.615530014038086
    8. '=r' → logprob: -10.740530014038086
    9. ' =' → logprob: -11.615530014038086
    10. '  ' → logprob: -11.865530014038086

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931508183479309
    2. ' =' → logprob: -0.6931508183479309
    3. ',' → logprob: -14.068150520324707
    4. ' ' → logprob: -14.318150520324707
    5. '=int' → logprob: -14.943150520324707
    6. '=}' → logprob: -15.068150520324707
    7. ' =
' → logprob: -15.318150520324707
    8. '＝' → logprob: -15.443150520324707
    9. '=input' → logprob: -15.693150520324707
    10. '=
' → logprob: -15.818150520324707

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005937209352850914
    2. ' print' → logprob: -5.130937099456787
    3. '(print' → logprob: -12.130937576293945
    4. 'pr' → logprob: -14.130937576293945
    5. 'prin' → logprob: -14.505937576293945
    6. 'p' → logprob: -14.630937576293945
    7. ' ' → logprob: -14.755937576293945
    8. '_print' → logprob: -15.630937576293945
    9. '   ' → logprob: -15.755937576293945
    10. '	print' → logprob: -16.005937576293945

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003417366649955511
    2. ' ,' → logprob: -6.003417491912842
    3. ',input' → logprob: -7.628417491912842
    4. ',r' → logprob: -8.128417015075684
    5. ',int' → logprob: -9.628417015075684
    6. 'range' → logprob: -11.128417015075684
    7. ',p' → logprob: -11.378417015075684
    8. '(range' → logprob: -11.503417015075684
    9. 'print' → logprob: -11.503417015075684
    10. ',n' → logprob: -11.753417015075684

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0548880398273468
    2. ' range' → logprob: -2.9298880100250244
    3. ' ' → logprob: -13.179887771606445
    4. '	range' → logprob: -13.179887771606445
    5. 'rang' → logprob: -14.179887771606445
    6. 'r' → logprob: -15.179887771606445
    7. ' rang' → logprob: -15.304887771606445
    8. ' xrange' → logprob: -15.804887771606445
    9. '(range' → logprob: -15.929887771606445
    10. '```' → logprob: -16.429887771606445

Token 65: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1823291927576065
    2. '(
' → logprob: -2.4323291778564453
    3. '(n' → logprob: -3.0573291778564453
    4. '
' → logprob: -4.057329177856445
    5. 'n' → logprob: -4.682329177856445
    6. ' 
' → logprob: -7.057329177856445
    7. '(

' → logprob: -7.307329177856445
    8. 'for' → logprob: -8.057329177856445
    9. '
' → logprob: -8.057329177856445
    10. '[' → logprob: -8.057329177856445

Token 66: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13423453271389008
    2. '
' → logprob: -2.3842344284057617
    3. '(
' → logprob: -4.509234428405762
    4. '#' → logprob: -5.134234428405762
    5. '(n' → logprob: -5.259234428405762
    6. 'n' → logprob: -5.884234428405762
    7. '\n' → logprob: -6.509234428405762
    8. 's' → logprob: -6.634234428405762
    9. 'for' → logprob: -7.259234428405762
    10. '[' → logprob: -7.384234428405762

Token 67: ' Vér' (ID: 159169)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7335408926010132
    2. 'for' → logprob: -0.7335408926010132
    3. ' n' → logprob: -3.6085410118103027
    4. 'n' → logprob: -4.858541011810303
    5. '#' → logprob: -6.108541011810303
    6. ' ' → logprob: -7.858541011810303
    7. ' #' → logprob: -8.483540534973145
    8. ' i' → logprob: -8.733540534973145
    9. 'i' → logprob: -8.733540534973145
    10. ' if' → logprob: -8.858540534973145

Token 68: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.02236328087747097
    2. 'ifie' → logprob: -4.397363185882568
    3. 'if' → logprob: -4.897363185882568
    4. 'ifiez' → logprob: -7.022363185882568
    5. 'ification' → logprob: -7.272363185882568
    6. 'ifi' → logprob: -8.147363662719727
    7. 'i' → logprob: -8.897363662719727
    8. 'ifer' → logprob: -9.397363662719727
    9. 'ifié' → logprob: -9.522363662719727
    10. 'ify' → logprob: -10.397363662719727

Token 69: ' si' (ID: 1784)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6797112226486206
    2. ' (' → logprob: -1.5547112226486206
    3. '(n' → logprob: -1.9297112226486206
    4. ' ' → logprob: -2.67971134185791
    5. 's' → logprob: -3.92971134185791
    6. ' if' → logprob: -3.92971134185791
    7. ' n' → logprob: -4.67971134185791
    8. 'n' → logprob: -5.80471134185791
    9. ' si' → logprob: -5.80471134185791
    10. '<|end|>' → logprob: -5.80471134185791

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011155464686453342
    2. 'n' → logprob: -4.511155605316162
    3. '(n' → logprob: -10.011155128479004
    4. ' ' → logprob: -10.386155128479004
    5. ' (' → logprob: -10.511155128479004
    6. ' ' → logprob: -13.261155128479004
    7. '	n' → logprob: -14.261155128479004
    8. '(' → logprob: -14.886155128479004
    9. ' len' → logprob: -15.011155128479004
    10. '  ' → logprob: -15.948655128479004

Token 71: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2651022970676422
    2. '%' → logprob: -2.3901023864746094
    3. ' ' → logprob: -2.3901023864746094
    4. ' >' → logprob: -3.3901023864746094
    5. ' >=' → logprob: -5.265102386474609
    6. ' <=' → logprob: -5.515102386474609
    7. '>' → logprob: -6.140102386474609
    8. ' ==' → logprob: -6.390102386474609
    9. ' est' → logprob: -6.765102386474609
    10. ' <' → logprob: -7.640102386474609

Token 72: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.12465175986289978
    2. ' pair' → logprob: -2.4996516704559326
    3. ' premier' → logprob: -4.499651908874512
    4. ' divisible' → logprob: -4.624651908874512
    5. 'un' → logprob: -5.749651908874512
    6. ' positif' → logprob: -6.249651908874512
    7. 'prem' → logprob: -6.374651908874512
    8. ' supérieur' → logprob: -6.374651908874512
    9. ' paire' → logprob: -7.124651908874512
    10. ' une' → logprob: -7.124651908874512

Token 73: ' puissance' (ID: 63494)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2643204927444458
    2. ' paire' → logprob: -2.0143203735351562
    3. ' nombre' → logprob: -2.3893203735351562
    4. 'nombre' → logprob: -2.5143203735351562
    5. ' valeur' → logprob: -2.7643203735351562
    6. ' pair' → logprob: -3.0143203735351562
    7. ' palindrome' → logprob: -3.0143203735351562
    8. ' puissance' → logprob: -3.1393203735351562
    9. 'pal' → logprob: -3.2643203735351562
    10. ' pal' → logprob: -3.5143203735351562

Token 74: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10203643888235092
    2. '_de' → logprob: -3.352036476135254
    3. 'de' → logprob: -3.477036476135254
    4. ' ' → logprob: -3.727036476135254
    5. '_' → logprob: -5.477036476135254
    6. '(' → logprob: -7.477036476135254
    7. '2' → logprob: -7.852036476135254
    8. 's' → logprob: -8.102036476135254
    9. ' d' → logprob: -8.227036476135254
    10. ')' → logprob: -8.477036476135254

Token 75: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04343518987298012
    2. 'de' → logprob: -3.7934350967407227
    3. ' ' → logprob: -3.9184350967407227
    4. ' deux' → logprob: -9.168435096740723
    5. ' two' → logprob: -12.918435096740723
    6. '  ' → logprob: -13.293435096740723
    7. '```' → logprob: -13.543435096740723
    8. '10' → logprob: -14.293435096740723
    9. '/de' → logprob: -14.668435096740723
    10. ' ' → logprob: -14.668435096740723

Token 76: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45744016766548157
    2. ' :' → logprob: -1.0824401378631592
    3. ' :
' → logprob: -4.332440376281738
    4. 'def' → logprob: -5.457440376281738
    5. ':
' → logprob: -5.582440376281738
    6. ' ' → logprob: -6.832440376281738
    7. '
' → logprob: -7.082440376281738
    8. ' def' → logprob: -7.207440376281738
    9. ' (' → logprob: -7.457440376281738
    10. ' 
' → logprob: -7.457440376281738

Token 77: '#' (ID: 2)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.214774250984192
    2. ' ' → logprob: -1.339774250984192
    3. 'if' → logprob: -1.464774250984192
    4. ' if' → logprob: -2.7147741317749023
    5. ' :
' → logprob: -2.9647741317749023
    6. ' :' → logprob: -3.5897741317749023
    7. ':' → logprob: -3.8397741317749023
    8. '  
' → logprob: -4.714774131774902
    9. '
' → logprob: -4.839774131774902
    10. 'def' → logprob: -5.464774131774902

Token 78: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.490633487701416
    2. 'if' → logprob: -0.990633487701416
    3. ' ' → logprob: -5.490633487701416
    4. ' i' → logprob: -5.865633487701416
    5. ' for' → logprob: -6.240633487701416
    6. 'def' → logprob: -6.240633487701416
    7. 'i' → logprob: -6.615633487701416
    8. ' def' → logprob: -6.865633487701416
    9. 'for' → logprob: -7.490633487701416
    10. ' 
' → logprob: -7.615633487701416

Token 79: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6089500188827515
    2. ' %' → logprob: -1.4839500188827515
    3. '%' → logprob: -2.858950138092041
    4. ' ' → logprob: -2.858950138092041
    5. ' >' → logprob: -2.983950138092041
    6. '>' → logprob: -3.358950138092041
    7. '&' → logprob: -3.983950138092041
    8. ' ==' → logprob: -5.358950138092041
    9. ' !=' → logprob: -6.733950138092041
    10. ' <=' → logprob: -6.858950138092041

Token 80: ' -' (ID: 533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.46901944279670715
    2. '(n' → logprob: -1.0940194129943848
    3. '-' → logprob: -3.4690194129943848
    4. '(' → logprob: -5.219019412994385
    5. ' -' → logprob: -6.094019412994385
    6. 'n' → logprob: -8.594019889831543
    7. ' n' → logprob: -9.219019889831543
    8. '(-' → logprob: -9.219019889831543
    9. '-n' → logprob: -9.594019889831543
    10. ' ' → logprob: -10.219019889831543

Token 81: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007130279554985464
    2. ' n' → logprob: -7.250712871551514
    3. '	n' → logprob: -14.375713348388672
    4. ' ' → logprob: -14.750713348388672
    5. '<|end|>' → logprob: -14.750713348388672
    6. '```' → logprob: -15.125713348388672
    7. '<|end|>' → logprob: -15.125713348388672
    8. '_n' → logprob: -15.250713348388672
    9. '`' → logprob: -15.375713348388672
    10. ')n' → logprob: -16.375713348388672

Token 82: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.025460533797740936
    2. '==' → logprob: -3.7754604816436768
    3. ' ' → logprob: -6.275460720062256
    4. ' =' → logprob: -9.275460243225098
    5. ' n' → logprob: -9.650460243225098
    6. ')' → logprob: -10.025460243225098
    7. '=' → logprob: -10.275460243225098
    8. ' !=' → logprob: -11.150460243225098
    9. 'n' → logprob: -11.275460243225098
    10. ')==' → logprob: -11.275460243225098

Token 83: 'ole' (ID: 1491)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06532209366559982
    2. 'n' → logprob: -2.815322160720825
    3. ' ' → logprob: -6.190321922302246
    4. ' equal' → logprob: -7.815321922302246
    5. ' égal' → logprob: -7.940321922302246
    6. '```' → logprob: -9.315321922302246
    7. ' a' → logprob: -9.440321922302246
    8. ' `' → logprob: -10.065321922302246
    9. 'equal' → logprob: -10.315321922302246
    10. '	n' → logprob: -10.440321922302246

Token 84: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16916045546531677
    2. 'n' → logprob: -2.6691603660583496
    3. ' ' → logprob: -3.4191603660583496
    4. ' la' → logprob: -4.29416036605835
    5. ' le' → logprob: -4.54416036605835
    6. ' the' → logprob: -4.91916036605835
    7. 'le' → logprob: -5.16916036605835
    8. ' l' → logprob: -5.41916036605835
    9. '<|end|>' → logprob: -5.79416036605835
    10. 'the' → logprob: -6.04416036605835

Token 85: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5756024122238159
    2. 'dern' → logprob: -2.0756025314331055
    3. 'bit' → logprob: -2.4506025314331055
    4. ' dernier' → logprob: -2.5756025314331055
    5. ' premier' → logprob: -2.8256025314331055
    6. ' plus' → logprob: -3.5756025314331055
    7. 'prem' → logprob: -4.0756025314331055
    8. 'plus' → logprob: -4.2006025314331055
    9. '```' → logprob: -4.4506025314331055
    10. ' ' → logprob: -5.2006025314331055

Token 86: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.830607533454895
    2. ' ' → logprob: -2.4556074142456055
    3. ' qui' → logprob: -2.5806074142456055
    4. '```' → logprob: -2.5806074142456055
    5. ' faible' → logprob: -2.5806074142456055
    6. ' le' → logprob: -2.8306074142456055
    7. ' lowest' → logprob: -3.5806074142456055
    8. 'de' → logprob: -3.5806074142456055
    9. 'le' → logprob: -3.9556074142456055
    10. ' à' → logprob: -4.3306074142456055

Token 87: ' poids' (ID: 56058)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.2181621938943863
    2. ' droite' → logprob: -2.5931622982025146
    3. ' poids' → logprob: -2.8431622982025146
    4. 'po' → logprob: -3.5931622982025146
    5. ' dro' → logprob: -4.2181620597839355
    6. 'la' → logprob: -5.0931620597839355
    7. ' n' → logprob: -5.7181620597839355
    8. ' la' → logprob: -5.8431620597839355
    9. 'n' → logprob: -5.9681620597839355
    10. ' ' → logprob: -6.2181620597839355

Token 88: ' le' (ID: 505)
  Prédit: ' faible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.7465919852256775
    2. 'fa' → logprob: -1.1215920448303223
    3. '```' → logprob: -2.7465920448303223
    4. '1' → logprob: -2.9965920448303223
    5. ' ' → logprob: -3.2465920448303223
    6. ' ' → logprob: -4.496592044830322
    7. 'f' → logprob: -4.746592044830322
    8. '   ' → logprob: -5.496592044830322
    9. 'plus' → logprob: -5.871592044830322
    10. 'u' → logprob: -5.996592044830322

Token 89: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.31584277749061584
    2. 'plus' → logprob: -1.3158427476882935
    3. ' faible' → logprob: -8.065842628479004
    4. ' ' → logprob: -8.190842628479004
    5. 'ger' → logprob: -8.190842628479004
    6. ' ' → logprob: -8.565842628479004
    7. 'moins' → logprob: -8.940842628479004
    8. '_plus' → logprob: -9.065842628479004
    9. 'fa' → logprob: -9.065842628479004
    10. '-plus' → logprob: -9.190842628479004

Token 90: ' faible' (ID: 75786)
  Prédit: ' faible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.3202873468399048
    2. 'fa' → logprob: -1.3202873468399048
    3. '1' → logprob: -6.070287227630615
    4. 'fort' → logprob: -6.570287227630615
    5. '```' → logprob: -6.945287227630615
    6. ' ' → logprob: -7.320287227630615
    7. 'f' → logprob: -7.570287227630615
    8. ' faibles' → logprob: -7.945287227630615
    9. 'bas' → logprob: -8.945287704467773
    10. ' bas' → logprob: -9.320287704467773

Token 91: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5183879733085632
    2. ' de' → logprob: -1.768388032913208
    3. ' set' → logprob: -2.393388032913208
    4. '1' → logprob: -3.143388032913208
    5. ' (' → logprob: -3.768388032913208
    6. ' qui' → logprob: -3.768388032913208
    7. '```' → logprob: -4.768387794494629
    8. 'set' → logprob: -4.768387794494629
    9. ' non' → logprob: -5.393387794494629
    10. ' n' → logprob: -5.643387794494629

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12056488543748856
    2. ' ' → logprob: -2.6205649375915527
    3. ' ' → logprob: -3.3705649375915527
    4. 'un' → logprob: -6.245564937591553
    5. ' un' → logprob: -6.495564937591553
    6. ''un' → logprob: -7.245564937591553
    7. '```' → logprob: -7.370564937591553
    8. ' ' → logprob: -8.495564460754395
    9. ' droite' → logprob: -8.495564460754395
    10. '  ' → logprob: -8.620564460754395

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023772140964865685
    2. 'un' → logprob: -4.023772239685059
    3. 'dro' → logprob: -6.273772239685059
    4. ''un' → logprob: -7.148772239685059
    5. '```' → logprob: -7.398772239685059
    6. ' ' → logprob: -7.523772239685059
    7. ' droite' → logprob: -7.648772239685059
    8. ' ' → logprob: -7.648772239685059
    9. '`' → logprob: -8.023772239685059
    10. 'l' → logprob: -9.773772239685059

Token 94: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23913975059986115
    2. ' ==' → logprob: -2.4891397953033447
    3. ' =' → logprob: -4.239139556884766
    4. '  ' → logprob: -4.239139556884766
    5. ',' → logprob: -4.614139556884766
    6. ':' → logprob: -4.739139556884766
    7. ' >' → logprob: -4.739139556884766
    8. ' !=' → logprob: -4.739139556884766
    9. ' :' → logprob: -4.864139556884766
    10. '>' → logprob: -4.989139556884766

Token 95: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3873175382614136
    2. ' n' → logprob: -1.1373175382614136
    3. 'l' → logprob: -9.137317657470703
    4. '	n' → logprob: -9.387317657470703
    5. ' ' → logprob: -9.887317657470703
    6. '`' → logprob: -10.137317657470703
    7. ' l' → logprob: -10.762317657470703
    8. 'le' → logprob: -10.762317657470703
    9. ' la' → logprob: -10.887317657470703
    10. 'la' → logprob: -11.262317657470703

Token 96: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.578316330909729
    2. 'if' → logprob: -1.453316330909729
    3. 'n' → logprob: -3.9533162117004395
    4. ' if' → logprob: -3.9533162117004395
    5. '\n' → logprob: -4.0783162117004395
    6. '
' → logprob: -4.3283162117004395
    7. 's' → logprob: -4.3283162117004395
    8. '#' → logprob: -4.5783162117004395
    9. '```' → logprob: -4.7033162117004395
    10. ' 
' → logprob: -4.7033162117004395

Token 97: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8283946514129639
    2. '
' → logprob: -1.2033946514129639
    3. ' if' → logprob: -2.703394651412964
    4. ' is' → logprob: -3.328394651412964
    5. 's' → logprob: -3.953394651412964
    6. ' ' → logprob: -4.078394889831543
    7. '  
' → logprob: -4.078394889831543
    8. ' 
' → logprob: -4.203394889831543
    9. ' =' → logprob: -4.453394889831543
    10. 'is' → logprob: -4.453394889831543

Token 98: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8564791679382324
    2. 'print' → logprob: -1.2314791679382324
    3. 'result' → logprob: -2.3564791679382324
    4. ' if' → logprob: -2.9814791679382324
    5. 'is' → logprob: -3.2314791679382324
    6. 'p' → logprob: -3.9814791679382324
    7. ' print' → logprob: -3.9814791679382324
    8. ' est' → logprob: -4.106479167938232
    9. ' is' → logprob: -4.731479167938232
    10. 'est' → logprob: -5.106479167938232

Token 99: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05037008598446846
    2. 'n' → logprob: -3.17536997795105
    3. ' (' → logprob: -5.175370216369629
    4. '(n' → logprob: -6.425370216369629
    5. ' ' → logprob: -10.300370216369629
    6. '(' → logprob: -10.925370216369629
    7. ' ' → logprob: -11.300370216369629
    8. '	n' → logprob: -13.550370216369629
    9. '```' → logprob: -13.925370216369629
    10. '  ' → logprob: -14.175370216369629

Token 100: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.03917364776134491
    2. '&' → logprob: -3.2891736030578613
    3. '>' → logprob: -7.914173603057861
    4. ' >' → logprob: -7.914173603057861
    5. ' ' → logprob: -8.91417407989502
    6. '&gt' → logprob: -9.91417407989502
    7. '&a' → logprob: -9.91417407989502
    8. '&p' → logprob: -10.03917407989502
    9. '&amp' → logprob: -10.78917407989502
    10. '&r' → logprob: -10.91417407989502

Token 101: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21313269436359406
    2. 'une' → logprob: -1.9631327390670776
    3. 'n' → logprob: -4.088132858276367
    4. '>' → logprob: -4.713132858276367
    5. ' a' → logprob: -5.213132858276367
    6. ' n' → logprob: -5.338132858276367
    7. ' >' → logprob: -5.838132858276367
    8. 'a' → logprob: -6.338132858276367
    9. ' (' → logprob: -6.588132858276367
    10. ' supérieur' → logprob: -6.588132858276367

Token 102: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.3938656449317932
    2. ' puissance' → logprob: -1.1438655853271484
    3. 'power' → logprob: -5.893865585327148
    4. 'pow' → logprob: -6.393865585327148
    5. '>' → logprob: -7.143865585327148
    6. 'p' → logprob: -7.893865585327148
    7. '```' → logprob: -8.018865585327148
    8. ' power' → logprob: -8.143865585327148
    9. '#' → logprob: -8.768865585327148
    10. ' puiss' → logprob: -9.143865585327148

Token 103: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03868405520915985
    2. 'de' → logprob: -3.288684129714966
    3. '_de' → logprob: -8.038683891296387
    4. ' ' → logprob: -8.788683891296387
    5. ' (' → logprob: -9.913683891296387
    6. 'def' → logprob: -10.288683891296387
    7. '   ' → logprob: -11.163683891296387
    8. '2' → logprob: -11.538683891296387
    9. ' =' → logprob: -11.663683891296387
    10. '  ' → logprob: -11.913683891296387

Token 104: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1387709677219391
    2. 'de' → logprob: -2.2637710571289062
    3. ' deux' → logprob: -4.138771057128906
    4. ' ' → logprob: -5.013771057128906
    5. 'two' → logprob: -6.138771057128906
    6. ' two' → logprob: -7.513771057128906
    7. '```' → logprob: -8.263771057128906
    8. '   ' → logprob: -11.888771057128906
    9. '1' → logprob: -11.888771057128906
    10. '  ' → logprob: -12.013771057128906

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.093846321105957
    2. ' and' → logprob: -1.468846321105957
    3. ':' → logprob: -1.593846321105957
    4. ' et' → logprob: -1.968846321105957
    5. ' ' → logprob: -3.218846321105957
    6. ' (' → logprob: -3.968846321105957
    7. ' :' → logprob: -4.218846321105957
    8. 'et' → logprob: -4.968846321105957
    9. 'and' → logprob: -5.218846321105957
    10. ' ,' → logprob: -5.968846321105957

Token 106: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011239741928875446
    2. 'n' → logprob: -4.886239528656006
    3. ' (' → logprob: -5.886239528656006
    4. '(n' → logprob: -7.511239528656006
    5. ' p' → logprob: -8.261240005493164
    6. ' ' → logprob: -11.136240005493164
    7. '(' → logprob: -11.636240005493164
    8. ' ' → logprob: -11.636240005493164
    9. '(p' → logprob: -12.386240005493164
    10. 'p' → logprob: -12.386240005493164

Token 107: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.08946892619132996
    2. '&' → logprob: -2.4644689559936523
    3. '>' → logprob: -7.964468955993652
    4. ' ' → logprob: -9.589468955993652
    5. ' >' → logprob: -10.464468955993652
    6. ' and' → logprob: -11.339468955993652
    7. ' ==' → logprob: -11.339468955993652
    8. '&gt' → logprob: -11.589468955993652
    9. ' ' → logprob: -11.839468955993652
    10. ' !=' → logprob: -11.964468955993652

Token 108: ' -' (ID: 533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4804951846599579
    2. '(n' → logprob: -1.2304952144622803
    3. '-' → logprob: -3.6054952144622803
    4. ' n' → logprob: -3.8554952144622803
    5. 'n' → logprob: -3.9804952144622803
    6. ' -' → logprob: -4.480494976043701
    7. '-n' → logprob: -4.855494976043701
    8. '(-' → logprob: -6.230494976043701
    9. ' (-' → logprob: -7.105494976043701
    10. '(' → logprob: -8.35549545288086

Token 109: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012844942102674395
    2. ' n' → logprob: -9.000128746032715
    3. '2' → logprob: -13.000128746032715
    4. '<|end|>' → logprob: -13.875128746032715
    5. '1' → logprob: -14.500128746032715
    6. ' ' → logprob: -15.125128746032715
    7. '<|end|>' → logprob: -15.375128746032715
    8. '_n' → logprob: -15.500128746032715
    9. '	n' → logprob: -15.625128746032715
    10. ')n' → logprob: -16.7501277923584

Token 110: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28257855772972107
    2. '==' → logprob: -1.4075785875320435
    3. ')' → logprob: -7.032578468322754
    4. '=' → logprob: -8.407578468322754
    5. ')==' → logprob: -8.782578468322754
    6. ' ' → logprob: -10.032578468322754
    7. ' =' → logprob: -10.032578468322754
    8. ' n' → logprob: -11.532578468322754
    9. '===' → logprob: -11.532578468322754
    10. 'n' → logprob: -11.657578468322754

Token 111: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931514739990234
    2. ' n' → logprob: -0.6931514739990234
    3. ' ' → logprob: -12.693151473999023
    4. '	n' → logprob: -14.193151473999023
    5. ' ' → logprob: -16.068151473999023
    6. '_n' → logprob: -16.193151473999023
    7. '```' → logprob: -17.068151473999023
    8. ')n' → logprob: -17.193151473999023
    9. '1' → logprob: -17.318151473999023
    10. '#' → logprob: -17.568151473999023

Token 112: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04495721310377121
    2. '
' → logprob: -3.169957160949707
    3. ' if' → logprob: -6.294957160949707
    4. '
' → logprob: -9.919957160949707
    5. 'n' → logprob: -11.544957160949707
    6. '#' → logprob: -11.669957160949707
    7. 'p' → logprob: -11.919957160949707
    8. ':
' → logprob: -12.294957160949707
    9. 'is' → logprob: -12.419957160949707
    10. 'print' → logprob: -12.419957160949707

Token 113: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006490950006991625
    2. '
' → logprob: -5.131491184234619
    3. ' if' → logprob: -7.506491184234619
    4. 'p' → logprob: -12.756490707397461
    5. 'print' → logprob: -13.256490707397461
    6. '
' → logprob: -13.506490707397461
    7. 'result' → logprob: -13.756490707397461
    8. '```' → logprob: -13.756490707397461
    9. 'n' → logprob: -14.131490707397461
    10. 'while' → logprob: -14.381490707397461

Token 114: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01951364055275917
    2. 'n' → logprob: -4.0195136070251465
    3. ' (' → logprob: -6.7695136070251465
    4. '(n' → logprob: -8.769514083862305
    5. ' ' → logprob: -10.144514083862305
    6. '(' → logprob: -11.269514083862305
    7. ' ' → logprob: -12.394514083862305
    8. '  ' → logprob: -13.769514083862305
    9. '	n' → logprob: -13.894514083862305
    10. '   ' → logprob: -14.519514083862305

Token 115: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.018365560099482536
    2. '&' → logprob: -5.143365383148193
    3. ' >' → logprob: -5.143365383148193
    4. '>' → logprob: -5.393365383148193
    5. ' ' → logprob: -6.893365383148193
    6. ' !=' → logprob: -7.518365383148193
    7. ' ==' → logprob: -9.018365859985352
    8. ' and' → logprob: -9.268365859985352
    9. '!=' → logprob: -9.518365859985352
    10. 'and' → logprob: -9.893365859985352

Token 116: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1055971086025238
    2. '-' → logprob: -2.3555970191955566
    3. '-n' → logprob: -5.355597019195557
    4. ' (-' → logprob: -7.730597019195557
    5. '(-' → logprob: -8.730597496032715
    6. ' (' → logprob: -11.105597496032715
    7. ' ' → logprob: -11.480597496032715
    8. ' n' → logprob: -12.230597496032715
    9. '(n' → logprob: -12.730597496032715
    10. '-N' → logprob: -12.980597496032715

Token 117: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.3451433409936726e-05
    2. ' n' → logprob: -10.375033378601074
    3. '<|end|>' → logprob: -13.875033378601074
    4. '1' → logprob: -14.500033378601074
    5. '	n' → logprob: -15.625033378601074
    6. '<|end|>' → logprob: -16.12503433227539
    7. ' ' → logprob: -16.37503433227539
    8. ')n' → logprob: -16.62503433227539
    9. '2' → logprob: -16.62503433227539
    10. '_n' → logprob: -17.12503433227539

Token 118: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007804526947438717
    2. '==' → logprob: -5.0078043937683105
    3. ' ' → logprob: -7.1328043937683105
    4. ':' → logprob: -9.257804870605469
    5. ')' → logprob: -9.632804870605469
    6. ' =' → logprob: -10.007804870605469
    7. ' :' → logprob: -10.507804870605469
    8. '=' → logprob: -10.632804870605469
    9. ' !=' → logprob: -10.757804870605469
    10. ')==' → logprob: -12.257804870605469

Token 119: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.575941801071167
    2. 'n' → logprob: -0.825941801071167
    3. '	n' → logprob: -13.825942039489746
    4. ' ' → logprob: -13.825942039489746
    5. ' ' → logprob: -15.825942039489746
    6. '_n' → logprob: -16.45094108581543
    7. '1' → logprob: -16.70094108581543
    8. '(n' → logprob: -16.95094108581543
    9. '```' → logprob: -17.57594108581543
    10. '0' → logprob: -17.82594108581543

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008664563298225403
    2. ':
' → logprob: -4.758664608001709
    3. ' and' → logprob: -10.50866413116455
    4. ' :' → logprob: -11.25866413116455
    5. ':
' → logprob: -11.88366413116455
    6. ':p' → logprob: -13.50866413116455
    7. 'and' → logprob: -14.88366413116455
    8. ' :
' → logprob: -14.88366413116455
    9. ':

' → logprob: -15.38366413116455
    10. 'print' → logprob: -15.88366413116455

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03386490419507027
    2. ' p' → logprob: -3.658864974975586
    3. 'p' → logprob: -5.533864974975586
    4. ':' → logprob: -6.033864974975586
    5. ':
' → logprob: -7.658864974975586
    6. '	p' → logprob: -7.658864974975586
    7. ':p' → logprob: -10.033864974975586
    8. '   ' → logprob: -10.033864974975586
    9. ' print' → logprob: -10.158864974975586
    10. '(p' → logprob: -10.533864974975586

Token 122: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6581681966781616
    2. '   ' → logprob: -1.1581681966781616
    3. ' p' → logprob: -1.7831681966781616
    4. ' ' → logprob: -11.408167839050293
    5. 'print' → logprob: -11.533167839050293
    6. '	p' → logprob: -12.533167839050293
    7. '
' → logprob: -12.908167839050293
    8. '  ' → logprob: -13.033167839050293
    9. '   ' → logprob: -13.158167839050293
    10. ' print' → logprob: -13.283167839050293

Token 123: ' Si' (ID: 7832)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4795922636985779
    2. 'p' → logprob: -0.9795922636985779
    3. '   ' → logprob: -5.229592323303223
    4. ' ' → logprob: -9.354592323303223
    5. 'print' → logprob: -11.229592323303223
    6. '  ' → logprob: -11.354592323303223
    7. ' print' → logprob: -11.479592323303223
    8. '
' → logprob: -12.104592323303223
    9. '	p' → logprob: -12.104592323303223
    10. '    ' → logprob: -12.479592323303223

Token 124: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.025535617023706436
    2. 'n' → logprob: -3.7755355834960938
    3. ' p' → logprob: -6.650535583496094
    4. ' ' → logprob: -7.900535583496094
    5. ' not' → logprob: -8.900535583496094
    6. ' isinstance' → logprob: -9.150535583496094
    7. '   ' → logprob: -9.525535583496094
    8. 'p' → logprob: -9.525535583496094
    9. '  ' → logprob: -9.900535583496094
    10. ' True' → logprob: -10.525535583496094

Token 125: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6877208352088928
    2. ' ==' → logprob: -1.687720775604248
    3. '>' → logprob: -2.187720775604248
    4. ' !=' → logprob: -2.687720775604248
    5. '==' → logprob: -3.187720775604248
    6. '%' → logprob: -3.187720775604248
    7. ' %' → logprob: -3.437720775604248
    8. '!=' → logprob: -4.437720775604248
    9. ' >=' → logprob: -6.312720775604248
    10. 'p' → logprob: -7.312720775604248

Token 126: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08498325943946838
    2. ' ' → logprob: -3.4599833488464355
    3. '0' → logprob: -3.9599833488464355
    4. 'n' → logprob: -4.2099833488464355
    5. '   ' → logprob: -4.5849833488464355
    6. ' n' → logprob: -6.7099833488464355
    7. '2' → logprob: -7.2099833488464355
    8. 'égal' → logprob: -7.3349833488464355
    9. '>' → logprob: -7.7099833488464355
    10. 'not' → logprob: -7.7099833488464355

Token 127: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.000614624354057014
    2. ' puissance' → logprob: -8.000614166259766
    3. '   ' → logprob: -8.625614166259766
    4. '#' → logprob: -10.750614166259766
    5. 'power' → logprob: -11.250614166259766
    6. 'print' → logprob: -11.375614166259766
    7. ' ' → logprob: -11.500614166259766
    8. 'pow' → logprob: -11.625614166259766
    9. '```' → logprob: -12.750614166259766
    10. '1' → logprob: -12.875614166259766

Token 128: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6280069351196289
    2. ' de' → logprob: -0.8780069351196289
    3. '   ' → logprob: -3.003006935119629
    4. '    ' → logprob: -7.878006935119629
    5. '_de' → logprob: -8.503006935119629
    6. '  ' → logprob: -8.628006935119629
    7. ' ' → logprob: -8.628006935119629
    8. '#' → logprob: -10.003006935119629
    9. '	de' → logprob: -10.003006935119629
    10. '       ' → logprob: -10.878006935119629

Token 129: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.008370958268642426
    2. ' deux' → logprob: -5.133370876312256
    3. 'two' → logprob: -6.508370876312256
    4. ' ' → logprob: -7.633370876312256
    5. '2' → logprob: -8.633371353149414
    6. '   ' → logprob: -8.758371353149414
    7. ' two' → logprob: -9.758371353149414
    8. '  ' → logprob: -10.508371353149414
    9. 'due' → logprob: -11.008371353149414
    10. '```' → logprob: -11.258371353149414

Token 130: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48928600549697876
    2. ':
' → logprob: -1.239285945892334
    3. '   ' → logprob: -2.364285945892334
    4. ',' → logprob: -6.364285945892334
    5. '       ' → logprob: -7.364285945892334
    6. 'print' → logprob: -8.114286422729492
    7. ' and' → logprob: -8.239286422729492
    8. '
' → logprob: -9.239286422729492
    9. ' :' → logprob: -9.864286422729492
    10. ' :
' → logprob: -10.114286422729492

Token 131: ' il' (ID: 1793)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0410744808614254
    2. '   ' → logprob: -3.791074514389038
    3. 'p' → logprob: -4.041074275970459
    4. ' print' → logprob: -10.291074752807617
    5. '    ' → logprob: -10.416074752807617
    6. '
' → logprob: -11.541074752807617
    7. ' ' → logprob: -12.041074752807617
    8. 'print' → logprob: -12.291074752807617
    9. '  ' → logprob: -12.791074752807617
    10. '	p' → logprob: -13.541074752807617

Token 132: ' faut' (ID: 17821)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3400302231311798
    2. 'p' → logprob: -1.4650301933288574
    3. '   ' → logprob: -2.9650301933288574
    4. ' print' → logprob: -6.090030193328857
    5. 'print' → logprob: -6.715030193328857
    6. ' est' → logprob: -7.590030193328857
    7. ' =' → logprob: -7.965030193328857
    8. ' faut' → logprob: -8.090030670166016
    9. '=' → logprob: -8.465030670166016
    10. ' ' → logprob: -8.715030670166016

Token 133: ' afficher' (ID: 146524)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43971964716911316
    2. 'print' → logprob: -1.9397196769714355
    3. ' p' → logprob: -2.5647196769714355
    4. 'aff' → logprob: -3.0647196769714355
    5. ' afficher' → logprob: -4.3147196769714355
    6. '   ' → logprob: -4.6897196769714355
    7. ' ' → logprob: -4.6897196769714355
    8. 'v' → logprob: -4.6897196769714355
    9. 'just' → logprob: -4.8147196769714355
    10. ' print' → logprob: -5.4397196769714355

Token 134: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1533646136522293
    2. '(' → logprob: -2.778364658355713
    3. '(n' → logprob: -3.403364658355713
    4. '"' → logprob: -3.528364658355713
    5. '(p' → logprob: -4.528364658355713
    6. '('' → logprob: -5.903364658355713
    7. 'p' → logprob: -6.403364658355713
    8. 'n' → logprob: -6.778364658355713
    9. '(True' → logprob: -8.028364181518555
    10. '1' → logprob: -8.153364181518555

Token 135: 'No' (ID: 3160)
  Prédit: 'Pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pu' → logprob: -1.32742178440094
    2. 'Oui' → logprob: -1.32742178440094
    3. '"' → logprob: -1.57742178440094
    4. 'Yes' → logprob: -2.3274216651916504
    5. 'Power' → logprob: -2.8274216651916504
    6. 'O' → logprob: -3.4524216651916504
    7. '2' → logprob: -3.7024216651916504
    8. 'True' → logprob: -4.20242166519165
    9. 'YES' → logprob: -4.95242166519165
    10. 'n' → logprob: -4.95242166519165

Token 136: '",' (ID: 672)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5480863451957703
    2. 't' → logprob: -1.173086404800415
    3. 'te' → logprob: -3.298086404800415
    4. 'n' → logprob: -3.298086404800415
    5. 'r' → logprob: -4.798086166381836
    6. ' power' → logprob: -5.048086166381836
    7. 'w' → logprob: -5.298086166381836
    8. ' problem' → logprob: -5.298086166381836
    9. 'e' → logprob: -6.173086166381836
    10. 'thing' → logprob: -6.298086166381836

Token 137: ' puis' (ID: 18766)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5121461749076843
    2. 'p' → logprob: -1.012146234512329
    3. 'else' → logprob: -3.887146234512329
    4. ' else' → logprob: -4.38714599609375
    5. '"' → logprob: -6.26214599609375
    6. '   ' → logprob: -6.88714599609375
    7. 'print' → logprob: -7.26214599609375
    8. ' print' → logprob: -8.51214599609375
    9. ' ' → logprob: -9.26214599609375
    10. ' "' → logprob: -9.38714599609375

Token 138: ' arrêter' (ID: 163206)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.539781928062439
    2. 'p' → logprob: -0.914781928062439
    3. '
' → logprob: -5.2897820472717285
    4. 'n' → logprob: -6.0397820472717285
    5. '\n' → logprob: -6.1647820472717285
    6. '"\' → logprob: -6.6647820472717285
    7. '"' → logprob: -6.7897820472717285
    8. '```' → logprob: -7.2897820472717285
    9. ' ' → logprob: -7.6647820472717285
    10. ' n' → logprob: -7.9147820472717285

Token 139: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007529847789555788
    2. '(p' → logprob: -5.2575297355651855
    3. '(' → logprob: -6.7575297355651855
    4. '()
' → logprob: -7.3825297355651855
    5. 'p' → logprob: -8.132530212402344
    6. 'print' → logprob: -9.757530212402344
    7. '(
' → logprob: -10.257530212402344
    8. 'exit' → logprob: -10.757530212402344
    9. '(print' → logprob: -11.007530212402344
    10. '   ' → logprob: -11.132530212402344

Token 140: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9579674005508423
    2. '(p' → logprob: -0.9579674005508423
    3. '()' → logprob: -1.5829674005508423
    4. '   ' → logprob: -4.957967281341553
    5. '(' → logprob: -4.957967281341553
    6. '()
' → logprob: -5.082967281341553
    7. '(
' → logprob: -6.082967281341553
    8. 'print' → logprob: -6.082967281341553
    9. ' p' → logprob: -6.832967281341553
    10. 'exit' → logprob: -7.957967281341553

Token 141: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.002087569562718272
    2. ' programme' → logprob: -6.752087593078613
    3. 'program' → logprob: -7.002087593078613
    4. 'script' → logprob: -13.127087593078613
    5. 'code' → logprob: -13.752087593078613
    6. 'programma' → logprob: -13.877087593078613
    7. '```' → logprob: -14.127087593078613
    8. 'Programme' → logprob: -14.252087593078613
    9. 'prog' → logprob: -14.502087593078613
    10. 'programm' → logprob: -14.877087593078613

Token 142: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4359074532985687
    2. 'p' → logprob: -1.0609074831008911
    3. '
' → logprob: -5.685907363891602
    4. ' p' → logprob: -5.810907363891602
    5. '(p' → logprob: -8.435907363891602
    6. 'print' → logprob: -8.935907363891602
    7. 'import' → logprob: -9.185907363891602
    8. '       ' → logprob: -9.560907363891602
    9. '    
' → logprob: -9.560907363891602
    10. ',' → logprob: -10.185907363891602

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5976383090019226
    2. 'p' → logprob: -0.8476383090019226
    3. ' p' → logprob: -3.8476383686065674
    4. '
' → logprob: -9.722638130187988
    5. ' ' → logprob: -10.597638130187988
    6. '       ' → logprob: -11.097638130187988
    7. '  ' → logprob: -11.472638130187988
    8. '    ' → logprob: -11.847638130187988
    9. '    
' → logprob: -12.097638130187988
    10. '	p' → logprob: -12.597638130187988

Token 144: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.01906474307179451
    2. ' p' → logprob: -4.019064903259277
    3. '   ' → logprob: -7.019064903259277
    4. ' ' → logprob: -11.269064903259277
    5. '
' → logprob: -12.519064903259277
    6. '	p' → logprob: -13.769064903259277
    7. '    ' → logprob: -14.019064903259277
    8. '  ' → logprob: -14.269064903259277
    9. '    
' → logprob: -14.519064903259277
    10. ' 
' → logprob: -16.14406394958496

Token 145: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004997743526473641
    2. '('' → logprob: -8.125499725341797
    3. '(' → logprob: -8.500499725341797
    4. '()' → logprob: -15.375499725341797
    5. '"' → logprob: -15.625499725341797
    6. ' ("' → logprob: -16.750499725341797
    7. '("")' → logprob: -17.250499725341797
    8. '(
' → logprob: -17.750499725341797
    9. '"No' → logprob: -19.750499725341797
    10. '(("' → logprob: -20.000499725341797

Token 146: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ' No' → logprob: -18.0
    3. '"No' → logprob: -18.5
    4. 'Yes' → logprob: -18.625
    5. 'Non' → logprob: -23.75
    6. 'NO' → logprob: -23.75
    7. 'no' → logprob: -24.0
    8. 'N' → logprob: -24.5
    9. '_No' → logprob: -24.5
    10. '   ' → logprob: -24.75

Token 147: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.38943910598754883
    2. '")' → logprob: -1.1394391059875488
    3. '")
' → logprob: -6.139439105987549
    4. '");' → logprob: -8.01443862915039
    5. ')
' → logprob: -10.26443862915039
    6. ')' → logprob: -10.76443862915039
    7. ')")
' → logprob: -11.76443862915039
    8. '   ' → logprob: -12.38943862915039
    9. 'return' → logprob: -12.51443862915039
    10. '"' → logprob: -13.38943862915039

Token 148: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5310598611831665
    2. '   ' → logprob: -0.9060598611831665
    3. 'exit' → logprob: -5.031059741973877
    4. 'import' → logprob: -6.656059741973877
    5. 'elif' → logprob: -10.531060218811035
    6. ' else' → logprob: -10.656060218811035
    7. ' exit' → logprob: -11.406060218811035
    8. '	exit' → logprob: -11.656060218811035
    9. '    
' → logprob: -12.156060218811035
    10. '```' → logprob: -12.281060218811035

Token 149: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.01863177679479122
    2. 'import' → logprob: -4.018631935119629
    3. '   ' → logprob: -8.018631935119629
    4. ' exit' → logprob: -9.768631935119629
    5. 'else' → logprob: -10.018631935119629
    6. 'quit' → logprob: -10.018631935119629
    7. '	exit' → logprob: -12.518631935119629
    8. '
' → logprob: -14.268631935119629
    9. '```' → logprob: -14.893631935119629
    10. '    
' → logprob: -14.893631935119629

Token 150: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.017927029868588e-05
    2. '(' → logprob: -9.500080108642578
    3. '()
' → logprob: -12.250080108642578
    4. ' ()' → logprob: -15.625080108642578
    5. '()

' → logprob: -15.750080108642578
    6. '()`' → logprob: -16.750080108642578
    7. '0' → logprob: -17.250080108642578
    8. '()<' → logprob: -17.750080108642578
    9. '();' → logprob: -18.125080108642578
    10. '())' → logprob: -18.125080108642578

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ')' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.503177642822266
    4. ' )' → logprob: -18.753177642822266
    5. ')
' → logprob: -18.878177642822266
    6. '()' → logprob: -19.128177642822266
    7. '))' → logprob: -19.378177642822266
    8. '1' → logprob: -19.378177642822266
    9. '(' → logprob: -21.003177642822266
    10. '())' → logprob: -22.128177642822266

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.500001907348633
    3. '))' → logprob: -14.625001907348633
    4. '())' → logprob: -15.625001907348633
    5. ' )' → logprob: -16.000001907348633
    6. '()' → logprob: -17.000001907348633
    7. ')")' → logprob: -17.375001907348633
    8. ')

' → logprob: -17.500001907348633
    9. ')**' → logprob: -18.375001907348633
    10. ')`' → logprob: -18.500001907348633

Token 153: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.175697922706604
    2. 'else' → logprob: -2.1756978034973145
    3. '#' → logprob: -3.0506978034973145
    4. ' else' → logprob: -9.800698280334473
    5. '  
' → logprob: -9.925698280334473
    6. 'print' → logprob: -9.925698280334473
    7. '    
' → logprob: -10.925698280334473
    8. '```' → logprob: -10.925698280334473
    9. '
' → logprob: -11.050698280334473
    10. ' p' → logprob: -11.175698280334473

Token 154: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5800104737281799
    2. '#' → logprob: -1.4550104141235352
    3. 'else' → logprob: -1.5800104141235352
    4. '  
' → logprob: -8.705010414123535
    5. 'print' → logprob: -8.955010414123535
    6. '
' → logprob: -9.580010414123535
    7. '```' → logprob: -9.580010414123535
    8. '    
' → logprob: -9.830010414123535
    9. 'for' → logprob: -9.830010414123535
    10. 'elif' → logprob: -9.955010414123535

Token 155: ' Quit' (ID: 102950)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008822444826364517
    2. 'else' → logprob: -5.133822441101074
    3. '
' → logprob: -6.758822441101074
    4. '    
' → logprob: -7.258822441101074
    5. '  
' → logprob: -7.758822441101074
    6. ')' → logprob: -8.508822441101074
    7. '```' → logprob: -9.258822441101074
    8. ' 
' → logprob: -10.133822441101074
    9. '<|end|>' → logprob: -10.258822441101074
    10. '   
' → logprob: -10.383822441101074

Token 156: 'te' (ID: 411)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03323319926857948
    2. ')' → logprob: -3.783233165740967
    3. '())' → logprob: -5.158233165740967
    4. '(' → logprob: -5.533233165740967
    5. '()
' → logprob: -9.408233642578125
    6. '()

' → logprob: -9.533233642578125
    7. ' )' → logprob: -10.158233642578125
    8. 'ation' → logprob: -11.783233642578125
    9. '0' → logprob: -12.158233642578125
    10. ' ()' → logprob: -12.408233642578125

Token 157: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035876478999853134
    2. '(' → logprob: -3.410876512527466
    3. ')' → logprob: -6.410876274108887
    4. '0' → logprob: -8.785876274108887
    5. '()

' → logprob: -8.910876274108887
    6. '())' → logprob: -9.910876274108887
    7. '<|end|>' → logprob: -10.035876274108887
    8. 'l' → logprob: -10.285876274108887
    9. '()
' → logprob: -10.410876274108887
    10. '#' → logprob: -10.660876274108887

Token 158: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.00201595202088356
    2. 'program' → logprob: -6.252016067504883
    3. ' programme' → logprob: -9.752016067504883
    4. 'script' → logprob: -10.627016067504883
    5. 'process' → logprob: -13.627016067504883
    6. 'prog' → logprob: -13.752016067504883
    7. 'code' → logprob: -14.002016067504883
    8. 'programm' → logprob: -14.502016067504883
    9. 'programma' → logprob: -14.877016067504883
    10. 'Programme' → logprob: -15.127016067504883

Token 159: ' avec' (ID: 3937)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1864185631275177
    2. 'else' → logprob: -2.4364185333251953
    3. '#' → logprob: -2.5614185333251953
    4. '
' → logprob: -6.061418533325195
    5. '  
' → logprob: -6.561418533325195
    6. 'print' → logprob: -7.061418533325195
    7. '    
' → logprob: -8.311418533325195
    8. ' else' → logprob: -9.061418533325195
    9. '```' → logprob: -9.186418533325195
    10. ' 
' → logprob: -9.936418533325195

Token 160: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010334034450352192
    2. 'code' → logprob: -7.251033306121826
    3. 'un' → logprob: -8.626033782958984
    4. 'le' → logprob: -9.126033782958984
    5. 'une' → logprob: -11.376033782958984
    6. 'l' → logprob: -12.376033782958984
    7. '1' → logprob: -12.626033782958984
    8. 'exit' → logprob: -12.626033782958984
    9. ' ' → logprob: -12.876033782958984
    10. 'success' → logprob: -13.126033782958984

Token 161: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.016867628321051598
    2. 'succ' → logprob: -4.641867637634277
    3. '0' → logprob: -5.266867637634277
    4. 'stat' → logprob: -6.516867637634277
    5. 'success' → logprob: -8.516867637634277
    6. 'status' → logprob: -9.141867637634277
    7. ' code' → logprob: -9.391867637634277
    8. '```' → logprob: -10.766867637634277
    9. 'message' → logprob: -11.266867637634277
    10. '1' → logprob: -12.391867637634277

Token 162: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015107996761798859
    2. '1' → logprob: -4.265108108520508
    3. ' ' → logprob: -7.015108108520508
    4. '```' → logprob: -10.515108108520508
    5. '(' → logprob: -11.140108108520508
    6. 'exit' → logprob: -13.515108108520508
    7. '   ' → logprob: -13.640108108520508
    8. 'ok' → logprob: -15.140108108520508
    9. '  ' → logprob: -15.140108108520508
    10. '`' → logprob: -15.765108108520508

Token 163: ' sortie' (ID: 52761)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5826840996742249
    2. 'succ' → logprob: -0.8326840996742249
    3. 'sort' → logprob: -5.58268404006958
    4. 'success' → logprob: -5.95768404006958
    5. 'code' → logprob: -8.332684516906738
    6. ' succès' → logprob: -10.082684516906738
    7. ' ' → logprob: -10.707684516906738
    8. 'su' → logprob: -11.582684516906738
    9. 'stat' → logprob: -11.707684516906738
    10. 'ré' → logprob: -11.707684516906738

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39071422815322876
    2. '1' → logprob: -1.140714168548584
    3. '(' → logprob: -5.890714168548584
    4. ' ' → logprob: -7.390714168548584
    5. '```' → logprob: -7.890714168548584
    6. '()' → logprob: -11.140714645385742
    7. '#' → logprob: -11.265714645385742
    8. '=' → logprob: -11.640714645385742
    9. '   ' → logprob: -12.390714645385742
    10. ')' → logprob: -12.390714645385742

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014192804228514433
    2. '1' → logprob: -6.8764190673828125
    3. ' ' → logprob: -7.8764190673828125
    4. '```' → logprob: -12.751419067382812
    5. '   ' → logprob: -13.626419067382812
    6. 'ok' → logprob: -14.376419067382812
    7. '(' → logprob: -14.501419067382812
    8. '  ' → logprob: -14.751419067382812
    9. 'exit' → logprob: -15.001419067382812
    10. 'OK' → logprob: -16.126419067382812

Token 166: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04021772742271423
    2. 'else' → logprob: -3.915217638015747
    3. '#' → logprob: -4.165217876434326
    4. '
' → logprob: -6.540217876434326
    5. '  
' → logprob: -6.665217876434326
    6. 'print' → logprob: -8.040217399597168
    7. ' p' → logprob: -8.540217399597168
    8. 'if' → logprob: -8.540217399597168
    9. '    
' → logprob: -9.290217399597168
    10. 'n' → logprob: -9.415217399597168

Token 167: 'succ' (ID: 194659)
  Prédit: 'succ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'succ' → logprob: -0.038059741258621216
    2. 'success' → logprob: -3.788059711456299
    3. 'ind' → logprob: -5.163059711456299
    4. ' succès' → logprob: -5.288059711456299
    5. 'qui' → logprob: -6.788059711456299
    6. 'sign' → logprob: -7.038059711456299
    7. '#' → logprob: -8.163060188293457
    8. 'ce' → logprob: -8.163060188293457
    9. 'une' → logprob: -8.663060188293457
    10. 'auc' → logprob: -8.788060188293457

Token 168: 'ès' (ID: 4119)
  Prédit: 'ès'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ès' → logprob: -0.006829274818301201
    2. 'es' → logprob: -5.006829261779785
    3. 'ess' → logprob: -9.381829261779785
    4. 's' → logprob: -10.756829261779785
    5. 'és' → logprob: -12.756829261779785
    6. 'è' → logprob: -13.256829261779785
    7. '`' → logprob: -14.006829261779785
    8. '```' → logprob: -14.131829261779785
    9. ' ès' → logprob: -14.756829261779785
    10. 'ession' → logprob: -14.881829261779785

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. ')
' → logprob: -10.500048637390137
    3. ')

' → logprob: -10.875048637390137
    4. ' )' → logprob: -14.125048637390137
    5. '")' → logprob: -14.625048637390137
    6. '))' → logprob: -14.875048637390137
    7. '())' → logprob: -15.625048637390137
    8. '#' → logprob: -16.125049591064453
    9. ')`' → logprob: -16.375049591064453
    10. ')#' → logprob: -16.500049591064453

Token 170: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.21212664246559143
    2. 'else' → logprob: -1.712126612663269
    3. '#' → logprob: -4.587126731872559
    4. 'print' → logprob: -8.712126731872559
    5. 'for' → logprob: -8.837126731872559
    6. 'if' → logprob: -10.087126731872559
    7. '```' → logprob: -10.087126731872559
    8. 'elif' → logprob: -10.712126731872559
    9. ' else' → logprob: -10.837126731872559
    10. '#else' → logprob: -11.587126731872559

Token 171: ' Si' (ID: 7832)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.055431120097637177
    2. '#' → logprob: -3.8054311275482178
    3. 'for' → logprob: -3.8054311275482178
    4. 'else' → logprob: -4.805430889129639
    5. 'if' → logprob: -8.055431365966797
    6. 's' → logprob: -8.055431365966797
    7. 'print' → logprob: -8.930431365966797
    8. 'count' → logprob: -8.930431365966797
    9. 'sum' → logprob: -9.805431365966797
    10. '```' → logprob: -10.055431365966797

Token 172: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08204736560583115
    2. 'n' → logprob: -2.582047462463379
    3. ' not' → logprob: -6.832047462463379
    4. 'not' → logprob: -7.082047462463379
    5. '__' → logprob: -8.082047462463379
    6. ' __' → logprob: -8.457047462463379
    7. 'True' → logprob: -8.582047462463379
    8. ' True' → logprob: -9.207047462463379
    9. ' ' → logprob: -9.582047462463379
    10. '_' → logprob: -9.582047462463379

Token 173: ' arrive' (ID: 18338)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16873367130756378
    2. 'n' → logprob: -2.168733596801758
    3. 'est' → logprob: -5.168733596801758
    4. ' arrive' → logprob: -5.168733596801758
    5. '_' → logprob: -5.543733596801758
    6. ' est' → logprob: -6.043733596801758
    7. 'arr' → logprob: -6.168733596801758
    8. ' veut' → logprob: -6.293733596801758
    9. 'else' → logprob: -6.418733596801758
    10. ' atteint' → logprob: -6.418733596801758

Token 174: ' ici' (ID: 27994)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.17920416593551636
    2. ' à' → logprob: -2.679204225540161
    3. ':' → logprob: -3.554204225540161
    4. 'au' → logprob: -3.554204225540161
    5. 'ici' → logprob: -4.429203987121582
    6. 'a' → logprob: -5.304203987121582
    7. 'else' → logprob: -5.429203987121582
    8. ' ici' → logprob: -5.679203987121582
    9. '#' → logprob: -6.179203987121582
    10. 'pas' → logprob: -6.304203987121582

Token 175: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038767927326261997
    2. ',' → logprob: -6.253876686096191
    3. ':
' → logprob: -6.253876686096191
    4. 'p' → logprob: -11.878876686096191
    5. '(p' → logprob: -12.378876686096191
    6. ':p' → logprob: -12.503876686096191
    7. ' :' → logprob: -13.003876686096191
    8. '   ' → logprob: -13.628876686096191
    9. '():' → logprob: -14.003876686096191
    10. ':,' → logprob: -14.503876686096191

Token 176: ' alors' (ID: 17971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12278612703084946
    2. '#' → logprob: -2.872786045074463
    3. ' p' → logprob: -2.872786045074463
    4. ' #' → logprob: -6.872786045074463
    5. '   ' → logprob: -6.997786045074463
    6. 'c' → logprob: -8.372786521911621
    7. ' ' → logprob: -8.747786521911621
    8. ' c' → logprob: -10.372786521911621
    9. '  ' → logprob: -10.622786521911621
    10. 'cela' → logprob: -11.122786521911621

Token 177: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0878906175494194
    2. ' p' → logprob: -3.087890625
    3. 'n' → logprob: -3.337890625
    4. ' n' → logprob: -6.087890625
    5. '"' → logprob: -7.837890625
    6. '   ' → logprob: -9.087890625
    7. '  ' → logprob: -9.587890625
    8. ' ' → logprob: -9.837890625
    9. 'True' → logprob: -10.337890625
    10. ' True' → logprob: -10.587890625

Token 178: ' n' (ID: 297)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.301787793636322
    2. ' n' → logprob: -2.051787853240967
    3. '%' → logprob: -2.801787853240967
    4. ' >' → logprob: -3.176787853240967
    5. '!=' → logprob: -5.051787853240967
    6. '=' → logprob: -5.301787853240967
    7. 'n' → logprob: -5.426787853240967
    8. 'est' → logprob: -5.426787853240967
    9. ' est' → logprob: -5.551787853240967
    10. '#' → logprob: -6.801787853240967

Token 179: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.6930002570152283
    2. ''est' → logprob: -0.8180002570152283
    3. '#' → logprob: -3.818000316619873
    4. 'n' → logprob: -4.068000316619873
    5. ' n' → logprob: -5.193000316619873
    6. ''' → logprob: -5.318000316619873
    7. '>' → logprob: -5.943000316619873
    8. '’est' → logprob: -6.318000316619873
    9. ' est' → logprob: -6.818000316619873
    10. 'is' → logprob: -7.068000316619873

Token 180: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.20162607729434967
    2. ' pas' → logprob: -1.7016260623931885
    3. '#' → logprob: -9.32662582397461
    4. 'est' → logprob: -9.70162582397461
    5. '_pas' → logprob: -11.07662582397461
    6. 's' → logprob: -11.82662582397461
    7. 'p' → logprob: -12.07662582397461
    8. '   ' → logprob: -12.20162582397461
    9. '```' → logprob: -12.20162582397461
    10. 'plus' → logprob: -12.32662582397461

Token 181: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1020689606666565
    2. ' une' → logprob: -2.3520689010620117
    3. 'pas' → logprob: -6.602068901062012
    4. 'pu' → logprob: -9.102068901062012
    5. 'a' → logprob: -9.227068901062012
    6. '#' → logprob: -9.602068901062012
    7. 'n' → logprob: -10.227068901062012
    8. '=' → logprob: -10.477068901062012
    9. 'ex' → logprob: -11.102068901062012
    10. 'power' → logprob: -11.102068901062012

Token 182: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.0005458841915242374
    2. ' puissance' → logprob: -7.875545978546143
    3. '#' → logprob: -10.000545501708984
    4. '```' → logprob: -10.125545501708984
    5. 'pow' → logprob: -10.500545501708984
    6. 'power' → logprob: -10.750545501708984
    7. '   ' → logprob: -11.750545501708984
    8. '
' → logprob: -12.750545501708984
    9. '2' → logprob: -12.875545501708984
    10. ' ' → logprob: -13.250545501708984

Token 183: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1635749638080597
    2. ' de' → logprob: -1.9135749340057373
    3. '   ' → logprob: -5.788575172424316
    4. '_de' → logprob: -9.163575172424316
    5. '  ' → logprob: -9.913575172424316
    6. ' ' → logprob: -10.163575172424316
    7. '#' → logprob: -10.538575172424316
    8. ' of' → logprob: -11.413575172424316
    9. '    ' → logprob: -11.413575172424316
    10. '	de' → logprob: -12.038575172424316

Token 184: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.006540339440107346
    2. 'two' → logprob: -5.256540298461914
    3. ' deux' → logprob: -6.881540298461914
    4. '2' → logprob: -8.381540298461914
    5. ' ' → logprob: -11.256540298461914
    6. ' two' → logprob: -11.506540298461914
    7. 'due' → logprob: -12.006540298461914
    8. '```' → logprob: -12.131540298461914
    9. '   ' → logprob: -12.756540298461914
    10. 'd' → logprob: -13.256540298461914

Token 185: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0036997238639742136
    2. 'for' → logprob: -6.253699779510498
    3. '#' → logprob: -6.878699779510498
    4. 'else' → logprob: -7.753699779510498
    5. 'print' → logprob: -9.37869930267334
    6. ')' → logprob: -9.50369930267334
    7. '
' → logprob: -10.37869930267334
    8. 'n' → logprob: -10.75369930267334
    9. 'if' → logprob: -11.00369930267334
    10. ' for' → logprob: -11.12869930267334

Token 186: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014016937464475632
    2. 'for' → logprob: -4.389017105102539
    3. 'count' → logprob: -8.014017105102539
    4. '#' → logprob: -8.139017105102539
    5. 'if' → logprob: -8.139017105102539
    6. 's' → logprob: -8.389017105102539
    7. 'else' → logprob: -8.889017105102539
    8. 'while' → logprob: -10.139017105102539
    9. 'sum' → logprob: -10.139017105102539
    10. 'm' → logprob: -10.764017105102539

Token 187: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.827200897736475e-05
    2. '(' → logprob: -9.500078201293945
    3. '("("' → logprob: -13.375078201293945
    4. '('' → logprob: -13.625078201293945
    5. '("")' → logprob: -14.875078201293945
    6. '()' → logprob: -16.500078201293945
    7. '("="' → logprob: -17.250078201293945
    8. '(":' → logprob: -17.250078201293945
    9. '(("' → logprob: -17.500078201293945
    10. '"' → logprob: -17.625078201293945

Token 188: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0002625278721097857
    2. '"' → logprob: -8.750262260437012
    3. 'Oui' → logprob: -9.750262260437012
    4. 'No' → logprob: -10.500262260437012
    5. 'Ye' → logprob: -11.625262260437012
    6. 'Ok' → logprob: -12.750262260437012
    7. 'YES' → logprob: -13.750262260437012
    8. 'Go' → logprob: -14.000262260437012
    9. '""' → logprob: -14.250262260437012
    10. ' Yes' → logprob: -14.500262260437012

Token 189: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002658655575942248
    2. '()' → logprob: -8.500266075134277
    3. ')' → logprob: -10.750266075134277
    4. ')")' → logprob: -10.750266075134277
    5. '!")' → logprob: -11.000266075134277
    6. '("' → logprob: -13.125266075134277
    7. '"' → logprob: -15.250266075134277
    8. '")
' → logprob: -15.750266075134277
    9. '())' → logprob: -16.25026512145996
    10. ' ")' → logprob: -16.37526512145996

Token 190: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.01628878153860569
    2. 'iche' → logprob: -4.141288757324219
    3. 'ic' → logprob: -8.516288757324219
    4. '#' → logprob: -11.266288757324219
    5. 'ichage' → logprob: -11.391288757324219
    6. 'ich' → logprob: -12.016288757324219
    7. 'icer' → logprob: -12.141288757324219
    8. 'cher' → logprob: -12.766288757324219
    9. 'ichier' → logprob: -13.016288757324219
    10. '

' → logprob: -13.516288757324219

Token 194: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5451036691665649
    2. '()' → logprob: -1.170103669166565
    3. '(' → logprob: -2.4201035499572754
    4. '("")' → logprob: -3.9201035499572754
    5. 'Yes' → logprob: -8.295104026794434
    6. '('' → logprob: -8.920104026794434
    7. ' ' → logprob: -9.045104026794434
    8. ' ("' → logprob: -9.295104026794434
    9. '(True' → logprob: -9.295104026794434
    10. '"' → logprob: -9.795104026794434

Token 195: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.203409844194539e-05
    2. 'Oui' → logprob: -10.625041961669922
    3. ' Yes' → logprob: -11.250041961669922
    4. 'No' → logprob: -12.375041961669922
    5. '")' → logprob: -14.875041961669922
    6. 'Yeah' → logprob: -18.750041961669922
    7. 'Sure' → logprob: -18.750041961669922
    8. '"' → logprob: -18.750041961669922
    9. ' Oui' → logprob: -19.000041961669922
    10. ')' → logprob: -19.500041961669922

Token 196: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002851729223039001
    2. ')' → logprob: -8.250285148620605
    3. '()' → logprob: -11.000285148620605
    4. ')")' → logprob: -12.625285148620605
    5. '!")' → logprob: -14.000285148620605
    6. '")
' → logprob: -14.000285148620605
    7. '"' → logprob: -14.250285148620605
    8. '```' → logprob: -14.875285148620605
    9. ' ")' → logprob: -15.000285148620605
    10. ' )' → logprob: -15.375285148620605

Token 197: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11752299219369888
    2. 'n' → logprob: -2.492522954940796
    3. ' on' → logprob: -4.117523193359375
    4. ' il' → logprob: -5.492523193359375
    5. ' le' → logprob: -5.867523193359375
    6. 'on' → logprob: -6.867523193359375
    7. 'le' → logprob: -7.367523193359375
    8. ' la' → logprob: -7.367523193359375
    9. ' ' → logprob: -7.492523193359375
    10. ' ' → logprob: -7.617523193359375

Token 199: ' condition' (ID: 7060)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4942447245121002
    2. ' valeur' → logprob: -1.9942446947097778
    3. ' n' → logprob: -3.1192448139190674
    4. ' question' → logprob: -3.3692448139190674
    5. 'suite' → logprob: -3.3692448139190674
    6. ' suite' → logprob: -3.4942448139190674
    7. ' réponse' → logprob: -3.7442448139190674
    8. ' condition' → logprob: -3.9942448139190674
    9. 'condition' → logprob: -4.494244575500488
    10. 's' → logprob: -4.744244575500488

Token 200: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.801497757434845
    2. ' n' → logprob: -1.1764976978302002
    3. ' suivante' → logprob: -2.4264976978302
    4. 'n' → logprob: -3.3014976978302
    5. ' s' → logprob: -4.051497936248779
    6. ' is' → logprob: -4.176497936248779
    7. 's' → logprob: -4.426497936248779
    8. ' implies' → logprob: -4.676497936248779
    9. 'est' → logprob: -5.051497936248779
    10. ' was' → logprob: -5.176497936248779

Token 201: ' satis' (ID: 56317)
  Prédit: ' rempl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rempl' → logprob: -1.1690274477005005
    2. 'v' → logprob: -1.5440274477005005
    3. ' vér' → logprob: -2.169027328491211
    4. 's' → logprob: -2.294027328491211
    5. 'False' → logprob: -2.669027328491211
    6. 'f' → logprob: -3.044027328491211
    7. 'True' → logprob: -3.794027328491211
    8. ' vraie' → logprob: -3.794027328491211
    9. 'false' → logprob: -4.044027328491211
    10. 'fa' → logprob: -4.794027328491211

Token 202: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.0014805786777287722
    2. 'f' → logprob: -7.001480579376221
    3. 'fa' → logprob: -8.001480102539062
    4. 'fait' → logprob: -8.501480102539062
    5. 'faire' → logprob: -10.626480102539062
    6. 'e' → logprob: -13.501480102539062
    7. 'ait' → logprob: -13.751480102539062
    8. '#' → logprob: -14.126480102539062
    9. 'a' → logprob: -14.376480102539062
    10. ' faite' → logprob: -15.001480102539062

Token 203: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2890634834766388
    2. 'for' → logprob: -1.9140634536743164
    3. '<|end|>' → logprob: -3.1640634536743164
    4. ' for' → logprob: -4.164063453674316
    5. ' ' → logprob: -4.539063453674316
    6. 'n' → logprob: -4.664063453674316
    7. ' #' → logprob: -5.039063453674316
    8. ')' → logprob: -5.414063453674316
    9. '```' → logprob: -5.664063453674316
    10. 'a' → logprob: -6.289063453674316

Token 206: ' particuliers' (ID: 99172)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5663225650787354
    2. 's' → logprob: -1.6913225650787354
    3. ' ' → logprob: -1.6913225650787354
    4. 'u' → logprob: -1.8163225650787354
    5. ' =' → logprob: -2.9413225650787354
    6. 'for' → logprob: -3.1913225650787354
    7. '=' → logprob: -3.5663225650787354
    8. 'r' → logprob: -3.8163225650787354
    9. '#' → logprob: -3.8163225650787354
    10. ' for' → logprob: -4.191322326660156

Token 207: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13382293283939362
    2. 'if' → logprob: -2.5088229179382324
    3. 'n' → logprob: -4.258822917938232
    4. ' :' → logprob: -4.508822917938232
    5. 'for' → logprob: -4.758822917938232
    6. ' if' → logprob: -5.633822917938232
    7. '#' → logprob: -6.258822917938232
    8. ' =' → logprob: -6.633822917938232
    9. ' for' → logprob: -6.883822917938232
    10. ':
' → logprob: -7.133822917938232

Token 208: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002445096615701914
    2. ' if' → logprob: -6.127445220947266
    3. 'for' → logprob: -8.502445220947266
    4. 'n' → logprob: -11.127445220947266
    5. '0' → logprob: -11.377445220947266
    6. '#' → logprob: -11.627445220947266
    7. ' ' → logprob: -11.877445220947266
    8. ' for' → logprob: -12.377445220947266
    9. '```' → logprob: -12.502445220947266
    10. '1' → logprob: -12.877445220947266

Token 209: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10023190826177597
    2. 'n' → logprob: -2.350231885910034
    3. ' ' → logprob: -11.350232124328613
    4. ' ' → logprob: -11.600232124328613
    5. '	n' → logprob: -13.850232124328613
    6. '(n' → logprob: -14.600232124328613
    7. '1' → logprob: -14.725232124328613
    8. '  ' → logprob: -15.100232124328613
    9. '0' → logprob: -15.225232124328613
    10. '2' → logprob: -15.287732124328613

Token 210: ' vaut' (ID: 83004)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6871073842048645
    2. '<=' → logprob: -1.4371073246002197
    3. ' ==' → logprob: -1.5621073246002197
    4. ' <=' → logprob: -3.1871073246002197
    5. '<' → logprob: -5.687107563018799
    6. ' in' → logprob: -6.187107563018799
    7. '%' → logprob: -6.937107563018799
    8. ' <' → logprob: -6.937107563018799
    9. '>' → logprob: -7.937107563018799
    10. 'in' → logprob: -8.81210708618164

Token 211: ' exactement' (ID: 108701)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7034361958503723
    2. ' ' → logprob: -1.0784361362457275
    3. '0' → logprob: -1.8284361362457275
    4. '2' → logprob: -5.453436374664307
    5. '=' → logprob: -11.703435897827148
    6. '3' → logprob: -11.828435897827148
    7. '<' → logprob: -12.578435897827148
    8. '  ' → logprob: -12.703435897827148
    9. '42' → logprob: -12.828435897827148
    10. '<=' → logprob: -12.828435897827148

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28740644454956055
    2. '0' → logprob: -1.4124064445495605
    3. '2' → logprob: -5.7874064445495605
    4. ' ' → logprob: -5.7874064445495605
    5. '3' → logprob: -10.162406921386719
    6. '4' → logprob: -10.287406921386719
    7. '42' → logprob: -11.912406921386719
    8. '   ' → logprob: -12.787406921386719
    9. '32' → logprob: -12.912406921386719
    10. '8' → logprob: -12.912406921386719

Token 213: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45122936367988586
    2. '1' → logprob: -1.0762293338775635
    3. '2' → logprob: -4.076229572296143
    4. '3' → logprob: -5.451229572296143
    5. '4' → logprob: -8.076229095458984
    6. '42' → logprob: -8.576229095458984
    7. '-' → logprob: -9.576229095458984
    8. '100' → logprob: -9.701229095458984
    9. ' ' → logprob: -10.076229095458984
    10. '5' → logprob: -10.076229095458984

Token 214: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02248404361307621
    2. ',' → logprob: -4.647483825683594
    3. 'if' → logprob: -4.772483825683594
    4. ' or' → logprob: -6.272483825683594
    5. ' :' → logprob: -6.647483825683594
    6. ' if' → logprob: -8.022483825683594
    7. ':
' → logprob: -8.397483825683594
    8. ' ==' → logprob: -9.022483825683594
    9. '==' → logprob: -9.272483825683594
    10. '   ' → logprob: -10.147483825683594

Token 215: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005588752683252096
    2. ':' → logprob: -5.255588531494141
    3. ' if' → logprob: -8.00558853149414
    4. ':
' → logprob: -11.13058853149414
    5. ',' → logprob: -12.75558853149414
    6. '```' → logprob: -13.50558853149414
    7. ' :' → logprob: -13.88058853149414
    8. 'elif' → logprob: -14.63058853149414
    9. 'n' → logprob: -15.13058853149414
    10. '   ' → logprob: -16.00558853149414

Token 216: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01815064437687397
    2. 'n' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.768150329589844
    4. ' ' → logprob: -15.393150329589844
    5. '	n' → logprob: -16.268150329589844
    6. '(n' → logprob: -17.268150329589844
    7. '3' → logprob: -17.268150329589844
    8. ' ' → logprob: -18.893150329589844
    9. '```' → logprob: -19.393150329589844
    10. '  ' → logprob: -19.893150329589844

Token 217: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020559638738632202
    2. '==' → logprob: -3.895559549331665
    3. ' ' → logprob: -11.145559310913086
    4. ' ' → logprob: -13.645559310913086
    5. '=' → logprob: -13.895559310913086
    6. ' =' → logprob: -14.645559310913086
    7. ' !=' → logprob: -14.770559310913086
    8. '%' → logprob: -15.520559310913086
    9. ' %' → logprob: -16.645559310913086
    10. '3' → logprob: -17.270559310913086

Token 218: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3868711292743683
    2. ' ' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.136871337890625
    4. '  ' → logprob: -18.136871337890625
    5. '```' → logprob: -18.261871337890625
    6. '   ' → logprob: -18.886871337890625
    7. '2' → logprob: -19.011871337890625
    8. '1' → logprob: -19.886871337890625
    9. '۳' → logprob: -19.886871337890625
    10. '' → logprob: -20.136871337890625

Token 219: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.5000057220459
    4. '۳' → logprob: -20.5000057220459
    5. '   ' → logprob: -20.6250057220459
    6. '2' → logprob: -21.3750057220459
    7. '３' → logprob: -21.5000057220459
    8. '' → logprob: -21.8750057220459
    9. '٣' → logprob: -21.8750057220459
    10. '  ' → logprob: -22.1250057220459

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012390372576192021
    2. ':
' → logprob: -6.876238822937012
    3. ' :' → logprob: -8.501238822937012
    4. ' :
' → logprob: -13.126238822937012
    5. ':
' → logprob: -15.251238822937012
    6. ',' → logprob: -16.001239776611328
    7. '   ' → logprob: -16.126239776611328
    8. '):' → logprob: -16.126239776611328
    9. ':

' → logprob: -16.501239776611328
    10. '=' → logprob: -16.751239776611328

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03250197321176529
    2. 'p' → logprob: -3.6575019359588623
    3. ':' → logprob: -5.782502174377441
    4. ':
' → logprob: -6.407502174377441
    5. ' p' → logprob: -6.657502174377441
    6. ' ' → logprob: -9.657502174377441
    7. '  ' → logprob: -11.157502174377441
    8. '
' → logprob: -11.407502174377441
    9. ' :' → logprob: -11.407502174377441
    10. '):
' → logprob: -11.407502174377441

Token 222: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14020562171936035
    2. '   ' → logprob: -2.5152056217193604
    3. ' p' → logprob: -3.0152056217193604
    4. ':
' → logprob: -7.765205383300781
    5. ' ' → logprob: -8.515205383300781
    6. ':' → logprob: -8.765205383300781
    7. '  ' → logprob: -9.640205383300781
    8. '	p' → logprob: -11.015205383300781
    9. ' :
' → logprob: -11.515205383300781
    10. '
' → logprob: -11.952705383300781

Token 223: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01433461345732212
    2. ' p' → logprob: -4.389334678649902
    3. '   ' → logprob: -6.389334678649902
    4. 'pass' → logprob: -10.014334678649902
    5. '#' → logprob: -10.139334678649902
    6. ' ' → logprob: -10.514334678649902
    7. 'print' → logprob: -12.139334678649902
    8. '  ' → logprob: -12.389334678649902
    9. 'for' → logprob: -12.514334678649902
    10. ' pass' → logprob: -12.514334678649902

Token 224: ' affiche' (ID: 127479)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2677018344402313
    2. ' p' → logprob: -1.6427018642425537
    3. 'exit' → logprob: -3.6427018642425537
    4. 'print' → logprob: -5.767701625823975
    5. '=' → logprob: -5.767701625823975
    6. ' =' → logprob: -6.017701625823975
    7. ' exit' → logprob: -6.142701625823975
    8. '   ' → logprob: -6.892701625823975
    9. ' ' → logprob: -6.892701625823975
    10. '#' → logprob: -7.517701625823975

Token 225: ' des' (ID: 731)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19627046585083008
    2. '"No' → logprob: -2.57127046585083
    3. 'p' → logprob: -3.32127046585083
    4. ' "' → logprob: -3.82127046585083
    5. 'No' → logprob: -4.32127046585083
    6. 'Yes' → logprob: -4.69627046585083
    7. ' p' → logprob: -5.82127046585083
    8. ' No' → logprob: -5.82127046585083
    9. '1' → logprob: -6.07127046585083
    10. ' ' → logprob: -6.07127046585083

Token 226: ' p' (ID: 275)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5724979043006897
    2. ' p' → logprob: -2.197497844696045
    3. 'p' → logprob: -2.197497844696045
    4. ' ' → logprob: -2.822497844696045
    5. ' "' → logprob: -3.322497844696045
    6. ' espaces' → logprob: -3.697497844696045
    7. '1' → logprob: -4.572497844696045
    8. '3' → logprob: -5.072497844696045
    9. ' nombres' → logprob: -5.322497844696045
    10. '0' → logprob: -5.322497844696045

Token 227: 'aires' (ID: 8507)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.32487422227859497
    2. '(' → logprob: -1.9498741626739502
    3. 'r' → logprob: -2.07487416267395
    4. '()' → logprob: -6.199874401092529
    5. '('' → logprob: -6.324874401092529
    6. '("")' → logprob: -7.199874401092529
    7. '(r' → logprob: -7.199874401092529
    8. '"' → logprob: -7.574874401092529
    9. 'ar' → logprob: -7.699874401092529
    10. '("+' → logprob: -8.324873924255371

Token 228: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31675592064857483
    2. '("' → logprob: -1.5667558908462524
    3. '('' → logprob: -3.816756010055542
    4. '()' → logprob: -4.066755771636963
    5. '(n' → logprob: -5.316755771636963
    6. ' (' → logprob: -5.441755771636963
    7. '(p' → logprob: -5.566755771636963
    8. '   ' → logprob: -5.941755771636963
    9. ' =' → logprob: -7.066755771636963
    10. ' ' → logprob: -7.191755771636963

Token 229: ' nombres' (ID: 76205)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4152124226093292
    2. '(' → logprob: -1.9152123928070068
    3. '0' → logprob: -2.290212392807007
    4. '2' → logprob: -3.040212392807007
    5. 'a' → logprob: -4.665212631225586
    6. 'n' → logprob: -4.915212631225586
    7. '"' → logprob: -5.165212631225586
    8. 'p' → logprob: -5.290212631225586
    9. 'ent' → logprob: -5.790212631225586
    10. '()' → logprob: -6.290212631225586

Token 230: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.955083429813385
    2. ':' → logprob: -1.2050833702087402
    3. '(' → logprob: -1.8300833702087402
    4. 'for' → logprob: -2.8300833702087402
    5. ',' → logprob: -3.0800833702087402
    6. '(p' → logprob: -3.9550833702087402
    7. ':
' → logprob: -4.70508337020874
    8. ' for' → logprob: -5.08008337020874
    9. ' (' → logprob: -5.45508337020874
    10. 'p' → logprob: -5.58008337020874

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2029031217098236
    2. 'p' → logprob: -2.2029030323028564
    3. ' p' → logprob: -2.7029030323028564
    4. ' for' → logprob: -6.2029032707214355
    5. '(p' → logprob: -6.4529032707214355
    6. 'for' → logprob: -7.0779032707214355
    7. ' ' → logprob: -7.3279032707214355
    8. '```' → logprob: -8.077902793884277
    9. '
' → logprob: -8.577902793884277
    10. '(' → logprob: -9.202902793884277

Token 232: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02803124487400055
    2. ' p' → logprob: -3.778031349182129
    3. 'for' → logprob: -5.903031349182129
    4. '   ' → logprob: -6.528031349182129
    5. ' for' → logprob: -7.778031349182129
    6. '
' → logprob: -9.153031349182129
    7. ' ' → logprob: -10.403031349182129
    8. '    
' → logprob: -11.778031349182129
    9. '	p' → logprob: -12.278031349182129
    10. 'print' → logprob: -12.403031349182129

Token 233: ' Chaque' (ID: 94758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31824320554733276
    2. 'p' → logprob: -1.3182432651519775
    3. ' for' → logprob: -5.568243026733398
    4. '   ' → logprob: -7.318243026733398
    5. ' p' → logprob: -7.693243026733398
    6. ' ' → logprob: -11.068243026733398
    7. '
' → logprob: -12.193243026733398
    8. 'print' → logprob: -12.568243026733398
    9. '	for' → logprob: -13.818243026733398
    10. '(p' → logprob: -13.818243026733398

Token 234: ' appel' (ID: 34642)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6481736898422241
    2. 'for' → logprob: -1.1481736898422241
    3. ' p' → logprob: -2.1481738090515137
    4. ' for' → logprob: -3.2731738090515137
    5. ' ' → logprob: -5.648173809051514
    6. 'i' → logprob: -7.398173809051514
    7. '  ' → logprob: -8.148173332214355
    8. ' i' → logprob: -9.148173332214355
    9. 'n' → logprob: -9.273173332214355
    10. ')' → logprob: -9.273173332214355

Token 235: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.9549047350883484
    2. '(' → logprob: -1.0799047946929932
    3. ' p' → logprob: -1.9549047946929932
    4. 'p' → logprob: -2.204904794692993
    5. '(
' → logprob: -4.829904556274414
    6. ' à' → logprob: -5.079904556274414
    7. ' (' → logprob: -5.329904556274414
    8. '   ' → logprob: -6.954904556274414
    9. 'print' → logprob: -7.329904556274414
    10. ' ' → logprob: -7.454904556274414

Token 236: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18792478740215302
    2. '(r' → logprob: -2.187924861907959
    3. '("' → logprob: -3.437924861907959
    4. '(
' → logprob: -4.687924861907959
    5. '(i' → logprob: -5.187924861907959
    6. '('' → logprob: -5.187924861907959
    7. '(p' → logprob: -5.937924861907959
    8. '((' → logprob: -6.562924861907959
    9. '(n' → logprob: -7.312924861907959
    10. '(*' → logprob: -7.437924861907959

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11166385561227798
    2. ',b' → logprob: -2.986663818359375
    3. '(' → logprob: -3.486663818359375
    4. ',n' → logprob: -4.736663818359375
    5. ',a' → logprob: -5.236663818359375
    6. ')' → logprob: -6.361663818359375
    7. ' ,' → logprob: -6.361663818359375
    8. '(n' → logprob: -6.361663818359375
    9. 'a' → logprob: -6.611663818359375
    10. '(a' → logprob: -7.236663818359375

Token 238: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.025414874777197838
    2. ' b' → logprob: -3.7754149436950684
    3. 'a' → logprob: -6.275414943695068
    4. ' a' → logprob: -9.15041446685791
    5. ' ' → logprob: -9.27541446685791
    6. ')' → logprob: -9.90041446685791
    7. '3' → logprob: -11.27541446685791
    8. '   ' → logprob: -12.27541446685791
    9. '  ' → logprob: -12.77541446685791
    10. '    ' → logprob: -13.15041446685791

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011947697028517723
    2. ',' → logprob: -4.5119476318359375
    3. '   ' → logprob: -8.386947631835938
    4. ' )' → logprob: -8.636947631835938
    5. ' ,' → logprob: -9.261947631835938
    6. ')
' → logprob: -9.511947631835938
    7. '):' → logprob: -9.886947631835938
    8. ' ' → logprob: -10.261947631835938
    9. ')`' → logprob: -10.386947631835938
    10. '")' → logprob: -11.011947631835938

Token 240: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9247448444366455
    2. 'for' → logprob: -1.0497448444366455
    3. ':' → logprob: -2.4247448444366455
    4. ')' → logprob: -2.9247448444366455
    5. ' for' → logprob: -3.1747448444366455
    6. ',' → logprob: -3.7997448444366455
    7. '(p' → logprob: -4.424744606018066
    8. 'p' → logprob: -5.299744606018066
    9. '(' → logprob: -5.424744606018066
    10. ' p' → logprob: -5.549744606018066

Token 241: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13199344277381897
    2. '(a' → logprob: -3.131993532180786
    3. '1' → logprob: -3.631993532180786
    4. '0' → logprob: -3.881993532180786
    5. '(' → logprob: -4.256993293762207
    6. ' a' → logprob: -4.631993293762207
    7. ' ' → logprob: -5.631993293762207
    8. '2' → logprob: -5.881993293762207
    9. 'n' → logprob: -7.381993293762207
    10. '3' → logprob: -7.881993293762207

Token 242: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07890234887599945
    2. ' a' → logprob: -3.203902244567871
    3. 'n' → logprob: -3.953902244567871
    4. 'b' → logprob: -5.953902244567871
    5. 'de' → logprob: -5.953902244567871
    6. ' ' → logprob: -5.953902244567871
    7. '0' → logprob: -6.703902244567871
    8. ' n' → logprob: -6.828902244567871
    9. '2' → logprob: -6.953902244567871
    10. '1' → logprob: -7.078902244567871

Token 243: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.0683064460754395
    2. 'numbers' → logprob: -1.4433064460754395
    3. 'n' → logprob: -2.1933064460754395
    4. ')' → logprob: -2.4433064460754395
    5. 'a' → logprob: -2.6933064460754395
    6. 'p' → logprob: -3.6933064460754395
    7. ' numbers' → logprob: -3.6933064460754395
    8. 'ent' → logprob: -3.8183064460754395
    9. 'nombre' → logprob: -3.8183064460754395
    10. 'arguments' → logprob: -4.1933064460754395

Token 244: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01177299302071333
    2. 'a' → logprob: -5.261773109436035
    3. ',' → logprob: -5.386773109436035
    4. 'er' → logprob: -8.011773109436035
    5. 'eurs' → logprob: -8.011773109436035
    6. 'ers' → logprob: -8.386773109436035
    7. 'ités' → logprob: -8.511773109436035
    8. 'p' → logprob: -8.636773109436035
    9. 'r' → logprob: -9.261773109436035
    10. 't' → logprob: -9.886773109436035

Token 245: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0377005934715271
    2. 'a' → logprob: -3.787700653076172
    3. ')' → logprob: -5.537700653076172
    4. '0' → logprob: -6.412700653076172
    5. '(a' → logprob: -6.662700653076172
    6. '   ' → logprob: -6.912700653076172
    7. ',end' → logprob: -6.912700653076172
    8. 'p' → logprob: -7.037700653076172
    9. 'n' → logprob: -7.162700653076172
    10. '(' → logprob: -7.287700653076172

Token 246: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3868982195854187
    2. 'une' → logprob: -1.8868982791900635
    3. ' la' → logprob: -2.0118982791900635
    4. ' un' → logprob: -4.386898040771484
    5. 'la' → logprob: -5.386898040771484
    6. ')' → logprob: -5.761898040771484
    7. 'le' → logprob: -6.261898040771484
    8. 'un' → logprob: -6.386898040771484
    9. ' les' → logprob: -6.761898040771484
    10. ' one' → logprob: -6.886898040771484

Token 247: ' ligne' (ID: 19583)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.4747026264667511
    2. ' seule' → logprob: -1.3497025966644287
    3. 'ligne' → logprob: -3.4747025966644287
    4. ' single' → logprob: -3.5997025966644287
    5. 'se' → logprob: -3.9747025966644287
    6. ' seul' → logprob: -4.349702835083008
    7. ' ligne' → logprob: -4.599702835083008
    8. 'single' → logprob: -4.724702835083008
    9. ' ' → logprob: -5.599702835083008
    10. ' even' → logprob: -6.599702835083008

Token 248: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9084987044334412
    2. '(' → logprob: -1.033498764038086
    3. '(a' → logprob: -2.158498764038086
    4. '(n' → logprob: -2.658498764038086
    5. '   ' → logprob: -3.283498764038086
    6. '(p' → logprob: -5.408498764038086
    7. 'for' → logprob: -5.783498764038086
    8. ' ,' → logprob: -6.783498764038086
    9. ' ' → logprob: -6.783498764038086
    10. 'n' → logprob: -7.033498764038086

Token 249: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.018533609807491302
    2. 'é' → logprob: -4.768533706665039
    3. 'ées' → logprob: -5.018533706665039
    4. 'ée' → logprob: -6.018533706665039
    5. ' par' → logprob: -7.768533706665039
    6. 'par' → logprob: -8.643533706665039
    7. 'es' → logprob: -10.143533706665039
    8. 'e' → logprob: -10.518533706665039
    9. 'éd' → logprob: -10.768533706665039
    10. ',' → logprob: -11.268533706665039

Token 250: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7265761494636536
    2. 'par' → logprob: -0.7265761494636536
    3. ' d' → logprob: -4.476576328277588
    4. 'by' → logprob: -4.851576328277588
    5. ',' → logprob: -4.976576328277588
    6. ' by' → logprob: -6.601576328277588
    7. 'd' → logprob: -6.851576328277588
    8. ')' → logprob: -6.851576328277588
    9. ' ' → logprob: -6.976576328277588
    10. '```' → logprob: -8.10157585144043

Token 251: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47260716557502747
    2. ''un' → logprob: -1.472607135772705
    3. ''espace' → logprob: -3.347607135772705
    4. '"' → logprob: -3.597607135772705
    5. 'es' → logprob: -3.722607135772705
    6. ' un' → logprob: -4.347607135772705
    7. 'un' → logprob: -4.597607135772705
    8. ''une' → logprob: -4.722607135772705
    9. ' ' → logprob: -4.847607135772705
    10. ' '' → logprob: -5.347607135772705

Token 252: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8777133822441101
    2. ' espace' → logprob: -1.0027134418487549
    3. 'space' → logprob: -1.8777134418487549
    4. ''espace' → logprob: -3.127713441848755
    5. ' space' → logprob: -5.002713203430176
    6. ' ' → logprob: -5.252713203430176
    7. 'esp' → logprob: -5.377713203430176
    8. '’espace' → logprob: -5.877713203430176
    9. ''' → logprob: -8.002713203430176
    10. ' ' → logprob: -9.127713203430176

Token 253: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015650812536478043
    2. ':' → logprob: -4.640650749206543
    3. ',' → logprob: -5.765650749206543
    4. '(' → logprob: -7.390650749206543
    5. ':
' → logprob: -7.890650749206543
    6. '  ' → logprob: -8.140650749206543
    7. '    
' → logprob: -8.265650749206543
    8. '
' → logprob: -8.390650749206543
    9. '(p' → logprob: -8.390650749206543
    10. '       ' → logprob: -9.265650749206543

Token 254: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6733468770980835
    2. '   ' → logprob: -0.7983468770980835
    3. ':' → logprob: -4.173346996307373
    4. '(p' → logprob: -4.673346996307373
    5. ' p' → logprob: -4.798346996307373
    6. ':
' → logprob: -6.048346996307373
    7. '(' → logprob: -6.298346996307373
    8. 'for' → logprob: -7.298346996307373
    9. ' for' → logprob: -7.548346996307373
    10. ' ' → logprob: -8.173346519470215

Token 255: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4865551292896271
    2. 'p' (adapté à ' p') → logprob: -0.9865550994873047
    3. ' p' → logprob: -4.611555099487305
    4. 'for' → logprob: -6.736555099487305
    5. ' for' → logprob: -6.986555099487305
    6. ' ' → logprob: -8.986555099487305
    7. '  ' → logprob: -9.236555099487305
    8. '(p' → logprob: -10.111555099487305
    9. '	p' → logprob: -10.861555099487305
    10. 'a' → logprob: -10.986555099487305

Token 256: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012320445966906846
    2. '1' → logprob: -9.375123023986816
    3. '(
' → logprob: -10.875123023986816
    4. '2' → logprob: -12.125123023986816
    5. '(n' → logprob: -12.375123023986816
    6. '0' → logprob: -12.500123023986816
    7. '("' → logprob: -13.250123023986816
    8. '((' → logprob: -13.750123023986816
    9. ' (' → logprob: -13.750123023986816
    10. '3' → logprob: -14.375123023986816

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014962044544517994
    2. '2' → logprob: -4.264962196350098
    3. '3' → logprob: -7.264962196350098
    4. ' ' → logprob: -9.764962196350098
    5. '0' → logprob: -10.264962196350098
    6. '(' → logprob: -12.889962196350098
    7. '   ' → logprob: -13.764962196350098
    8. '"' → logprob: -13.764962196350098
    9. '4' → logprob: -14.764962196350098
    10. '10' → logprob: -15.764962196350098

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016085283132269979
    2. ' ,' → logprob: -7.001608371734619
    3. '2' → logprob: -7.501608371734619
    4. ' ' → logprob: -9.751608848571777
    5. '1' → logprob: -10.251608848571777
    6. '3' → logprob: -10.376608848571777
    7. '   ' → logprob: -12.001608848571777
    8. ',n' → logprob: -12.501608848571777
    9. ',p' → logprob: -13.251608848571777
    10. ')' → logprob: -13.376608848571777

Token 259: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4744710922241211
    2. '3' → logprob: -0.9744710922241211
    3. ' ' → logprob: -7.849471092224121
    4. '   ' → logprob: -13.474471092224121
    5. '```' → logprob: -14.099471092224121
    6. '1' → logprob: -14.349471092224121
    7. '  ' → logprob: -15.224471092224121
    8. ')' → logprob: -15.474471092224121
    9. '4' → logprob: -16.224472045898438
    10. '23' → logprob: -16.474472045898438

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326216459274292
    2. '3' → logprob: -0.7576216459274292
    3. ' ' → logprob: -11.257621765136719
    4. '```' → logprob: -12.757621765136719
    5. '1' → logprob: -13.070121765136719
    6. '``' → logprob: -14.257621765136719
    7. '4' → logprob: -14.445121765136719
    8. '   ' → logprob: -14.507621765136719
    9. '"' → logprob: -14.570121765136719
    10. '0' → logprob: -15.382621765136719

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02062118798494339
    2. ')
' → logprob: -3.8956212997436523
    3. ')
' → logprob: -9.520621299743652
    4. '   ' → logprob: -12.645621299743652
    5. ')

' → logprob: -13.895621299743652
    6. ' )' → logprob: -14.645621299743652
    7. ')#' → logprob: -15.145621299743652
    8. ')p' → logprob: -15.270621299743652
    9. ')`' → logprob: -16.020620346069336
    10. '),' → logprob: -16.520620346069336

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10961569100618362
    2. 'else' → logprob: -2.6096158027648926
    3. 'exit' → logprob: -4.484615802764893
    4. 'for' → logprob: -4.609615802764893
    5. 'elif' → logprob: -5.109615802764893
    6. 'p' → logprob: -6.234615802764893
    7. ' for' → logprob: -8.109615325927734
    8. 'r' → logprob: -8.984615325927734
    9. '```' → logprob: -8.984615325927734
    10. 'n' → logprob: -9.359615325927734

Token 263: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5506519675254822
    2. 'else' → logprob: -1.550652027130127
    3. 'exit' → logprob: -1.675652027130127
    4. 'elif' → logprob: -4.550652027130127
    5. 'p' (adapté à ' p') → logprob: -4.800652027130127
    6. 'for' → logprob: -5.550652027130127
    7. '#' → logprob: -7.675652027130127
    8. '	exit' → logprob: -8.300651550292969
    9. '```' → logprob: -9.175651550292969
    10. ' exit' → logprob: -9.425651550292969

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00379639258608222
    2. '2' → logprob: -5.628796577453613
    3. '1' → logprob: -9.003796577453613
    4. '3' → logprob: -10.128796577453613
    5. ' (' → logprob: -11.003796577453613
    6. ' ' → logprob: -11.628796577453613
    7. '0' → logprob: -13.128796577453613
    8. ',' → logprob: -13.128796577453613
    9. '   ' → logprob: -13.503796577453613
    10. '(n' → logprob: -14.503796577453613

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005023968406021595
    2. '3' → logprob: -7.875502586364746
    3. '1' → logprob: -9.250502586364746
    4. ' ' → logprob: -10.625502586364746
    5. '   ' → logprob: -14.688002586364746
    6. '(' → logprob: -14.875502586364746
    7. '  ' → logprob: -15.313002586364746
    8. '"' → logprob: -15.438002586364746
    9. '```' → logprob: -15.563002586364746
    10. '0' → logprob: -15.875502586364746

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0064253369346261024
    2. '3' → logprob: -5.381425380706787
    3. ' ,' → logprob: -6.381425380706787
    4. ' ' → logprob: -9.256424903869629
    5. '(' → logprob: -12.381424903869629
    6. ')' → logprob: -12.631424903869629
    7. '1' → logprob: -13.131424903869629
    8. '2' → logprob: -13.256424903869629
    9. 'n' → logprob: -14.256424903869629
    10. '   ' → logprob: -14.443924903869629

Token 267: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -15.625123977661133
    4. '  ' → logprob: -19.625123977661133
    5. 'n' → logprob: -19.625123977661133
    6. '   ' → logprob: -19.625123977661133
    7. ')' → logprob: -21.000123977661133
    8. '۳' → logprob: -22.125123977661133
    9. '３' → logprob: -22.250123977661133
    10. '_' → logprob: -22.750123977661133

Token 268: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -15.375000953674316
    4. 'n' → logprob: -17.75
    5. '   ' → logprob: -20.25
    6. '```' → logprob: -20.875
    7. '३' → logprob: -21.0
    8. '３' → logprob: -21.125
    9. '  ' → logprob: -21.125
    10. '৩' → logprob: -21.25

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017123052384704351
    2. ')
' → logprob: -6.376712322235107
    3. '   ' → logprob: -11.87671184539795
    4. ')
' → logprob: -13.87671184539795
    5. ' )' → logprob: -14.12671184539795
    6. ')p' → logprob: -15.12671184539795
    7. ')#' → logprob: -15.25171184539795
    8. ')

' → logprob: -15.50171184539795
    9. ' ' → logprob: -16.001712799072266
    10. '#' → logprob: -16.376712799072266

Token 270: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16013078391551971
    2. '<|end|>' → logprob: -2.785130739212036
    3. 'elif' → logprob: -2.785130739212036
    4. '   ' → logprob: -4.035130977630615
    5. 'for' → logprob: -6.160130977630615
    6. '```' → logprob: -6.285130977630615
    7. '...' → logprob: -7.660130977630615
    8. ' else' → logprob: -7.910130977630615
    9. ')' → logprob: -7.910130977630615
    10. '#' → logprob: -8.035130500793457

Token 271: ' p' (ID: 275)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.5828846096992493
    2. 'else' → logprob: -0.8328846096992493
    3. 'elif' → logprob: -5.457884788513184
    4. '   ' → logprob: -6.832884788513184
    5. '#' → logprob: -7.207884788513184
    6. '```' → logprob: -8.207884788513184
    7. ' exit' → logprob: -9.082884788513184
    8. '	exit' → logprob: -9.457884788513184
    9. 'quit' → logprob: -9.707884788513184
    10. 'pass' → logprob: -9.707884788513184

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003291480534244329
    2. '()' → logprob: -8.12532901763916
    3. '(
' → logprob: -11.12532901763916
    4. '3' → logprob: -12.62532901763916
    5. '(n' → logprob: -12.75032901763916
    6. '0' → logprob: -13.00032901763916
    7. '(-' → logprob: -13.00032901763916
    8. '()
' → logprob: -14.00032901763916
    9. '2' → logprob: -14.00032901763916
    10. '1' → logprob: -14.12532901763916

Token 273: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4199517071247101
    2. '3' → logprob: -1.2949516773223877
    3. ')' → logprob: -2.9199516773223877
    4. '2' → logprob: -4.669951915740967
    5. ' ' → logprob: -5.669951915740967
    6. '4' → logprob: -6.794951915740967
    7. ' )' → logprob: -7.044951915740967
    8. 'exit' → logprob: -8.919951438903809
    9. '   ' → logprob: -10.794951438903809
    10. '  ' → logprob: -11.169951438903809

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020291592925786972
    2. ')' → logprob: -4.020291805267334
    3. ' ,' → logprob: -6.895291805267334
    4. '(' → logprob: -7.770291805267334
    5. '1' → logprob: -7.770291805267334
    6. ' )' → logprob: -9.270291328430176
    7. '4' → logprob: -9.895291328430176
    8. ',)' → logprob: -10.020291328430176
    9. ' ' → logprob: -10.520291328430176
    10. '2' → logprob: -10.770291328430176

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.951771421066951e-05
    2. ' ' → logprob: -10.500029563903809
    3. '2' → logprob: -13.500029563903809
    4. '4' → logprob: -16.000028610229492
    5. ')' → logprob: -16.125028610229492
    6. '3' → logprob: -16.687528610229492
    7. '   ' → logprob: -16.937528610229492
    8. '
' → logprob: -17.500028610229492
    9. '"' → logprob: -17.687528610229492
    10. '  ' → logprob: -17.687528610229492

Token 276: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -12.12501335144043
    3. ' ' → logprob: -12.12501335144043
    4. '3' → logprob: -13.62501335144043
    5. '4' → logprob: -14.37501335144043
    6. ')' → logprob: -17.06251335144043
    7. '   ' → logprob: -17.12501335144043
    8. '0' → logprob: -17.31251335144043
    9. '  ' → logprob: -17.37501335144043
    10. '```' → logprob: -17.75001335144043

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008386960835196078
    2. ')
' → logprob: -7.125838756561279
    3. '   ' → logprob: -10.625838279724121
    4. ' )' → logprob: -12.000838279724121
    5. ')#' → logprob: -14.125838279724121
    6. ')
' → logprob: -14.625838279724121
    7. ')p' → logprob: -14.750838279724121
    8. '()' → logprob: -14.875838279724121
    9. ')

' → logprob: -15.375838279724121
    10. '#' → logprob: -15.375838279724121

Token 278: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.013055876828730106
    2. 'elif' → logprob: -4.638055801391602
    3. '   ' → logprob: -6.888055801391602
    4. '<|end|>' → logprob: -7.263055801391602
    5. '```' → logprob: -7.388055801391602
    6. ' else' → logprob: -8.013055801391602
    7. 'for' → logprob: -9.263055801391602
    8. '    
' → logprob: -9.513055801391602
    9. '#' → logprob: -9.638055801391602
    10. 'n' → logprob: -9.888055801391602

Token 279: ' p' (ID: 275)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2911332845687866
    2. '   ' → logprob: -1.9161332845687866
    3. 'exit' → logprob: -2.291133403778076
    4. 'elif' → logprob: -6.041133403778076
    5. 'for' → logprob: -7.791133403778076
    6. '	exit' → logprob: -7.791133403778076
    7. '#' → logprob: -8.041132926940918
    8. ' exit' → logprob: -8.291132926940918
    9. '```' → logprob: -9.666132926940918
    10. ' else' → logprob: -10.166132926940918

Token 280: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2020991056924686e-05
    2. '()' → logprob: -11.000032424926758
    3. '4' → logprob: -12.500032424926758
    4. '((' → logprob: -12.625032424926758
    5. '(n' → logprob: -13.125032424926758
    6. '("' → logprob: -13.125032424926758
    7. '(
' → logprob: -13.875032424926758
    8. '(-' → logprob: -14.125032424926758
    9. '3' → logprob: -14.375032424926758
    10. '('' → logprob: -14.500032424926758

Token 281: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25319766998291016
    2. '1' → logprob: -1.6281976699829102
    3. '2' → logprob: -3.75319766998291
    4. '3' → logprob: -5.62819766998291
    5. 'n' → logprob: -8.75319766998291
    6. '5' → logprob: -9.62819766998291
    7. ' ' → logprob: -9.62819766998291
    8. '(' → logprob: -10.75319766998291
    9. ')' → logprob: -10.81569766998291
    10. '(n' → logprob: -12.19069766998291

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035498205106705427
    2. ' ,' → logprob: -6.378550052642822
    3. '(' → logprob: -6.503550052642822
    4. ' ' → logprob: -8.753549575805664
    5. '5' → logprob: -9.503549575805664
    6. ')' → logprob: -9.878549575805664
    7. '3' → logprob: -10.878549575805664
    8. '4' → logprob: -11.503549575805664
    9. ' (' → logprob: -11.503549575805664
    10. ',
' → logprob: -12.003549575805664

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002348411362618208
    2. '5' → logprob: -6.12734842300415
    3. '2' → logprob: -8.877347946166992
    4. '3' → logprob: -11.127347946166992
    5. ' ' → logprob: -12.502347946166992
    6. '4' → logprob: -13.127347946166992
    7. '6' → logprob: -13.377347946166992
    8. '```' → logprob: -14.939847946166992
    9. '7' → logprob: -15.314847946166992
    10. ')' → logprob: -15.502347946166992

Token 284: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023157147224992514
    2. '5' → logprob: -6.127315521240234
    3. '2' → logprob: -9.252315521240234
    4. '3' → logprob: -11.002315521240234
    5. '```' → logprob: -12.377315521240234
    6. '4' → logprob: -12.939815521240234
    7. '6' → logprob: -13.127315521240234
    8. '7' → logprob: -13.502315521240234
    9. '``' → logprob: -13.564815521240234
    10. '(' → logprob: -14.314815521240234

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0182089414447546
    2. ')
' → logprob: -4.018208980560303
    3. '   ' → logprob: -9.893208503723145
    4. ')
' → logprob: -12.768208503723145
    5. ')p' → logprob: -13.518208503723145
    6. ')

' → logprob: -13.643208503723145
    7. ')#' → logprob: -14.393208503723145
    8. ' )' → logprob: -14.643208503723145
    9. '#' → logprob: -14.768208503723145
    10. 'p' → logprob: -15.643208503723145

Token 286: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3686937093734741
    2. '   ' → logprob: -1.2436937093734741
    3. 'elif' → logprob: -4.743693828582764
    4. 'exit' → logprob: -4.868693828582764
    5. 'for' → logprob: -6.493693828582764
    6. '#' → logprob: -7.118693828582764
    7. 'p' → logprob: -8.368693351745605
    8. ')' → logprob: -8.618693351745605
    9. '```' → logprob: -8.868693351745605
    10. ' else' → logprob: -9.618693351745605

Token 287: ' p' (ID: 275)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.12988248467445374
    2. '   ' → logprob: -2.504882574081421
    3. 'else' → logprob: -3.379882574081421
    4. 'p' (adapté à ' p') → logprob: -5.629882335662842
    5. 'elif' → logprob: -7.004882335662842
    6. ' exit' → logprob: -7.254882335662842
    7. '	exit' → logprob: -8.6298828125
    8. 'for' → logprob: -8.8798828125
    9. '#' → logprob: -9.1298828125
    10. '```' → logprob: -9.8798828125

Token 288: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0445127372804563e-05
    2. '(
' → logprob: -12.00001049041748
    3. ' (' → logprob: -13.37501049041748
    4. '()' → logprob: -13.37501049041748
    5. '((' → logprob: -14.87501049041748
    6. '5' → logprob: -15.62501049041748
    7. ',' → logprob: -15.87501049041748
    8. '6' → logprob: -16.000009536743164
    9. ' ' → logprob: -16.250009536743164
    10. '4' → logprob: -16.375009536743164

Token 289: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.14439551532268524
    2. '1' → logprob: -2.394395589828491
    3. '3' → logprob: -3.269395589828491
    4. '2' → logprob: -5.769395351409912
    5. '6' → logprob: -6.519395351409912
    6. '4' → logprob: -8.01939582824707
    7. ')' → logprob: -8.89439582824707
    8. ' ' → logprob: -9.64439582824707
    9. '7' → logprob: -10.26939582824707
    10. 'n' → logprob: -10.89439582824707

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033653350546956062
    2. '6' → logprob: -6.378365516662598
    3. ' ,' → logprob: -6.503365516662598
    4. ' ' → logprob: -9.128365516662598
    5. ')' → logprob: -11.253365516662598
    6. '(' → logprob: -11.628365516662598
    7. '4' → logprob: -12.003365516662598
    8. '7' → logprob: -12.753365516662598
    9. ',
' → logprob: -12.753365516662598
    10. '5' → logprob: -12.878365516662598

Token 291: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.007595268543809652
    2. '1' → logprob: -5.632595062255859
    3. ' ' → logprob: -5.757595062255859
    4. '3' → logprob: -7.257595062255859
    5. '4' → logprob: -9.38259506225586
    6. '2' → logprob: -10.38259506225586
    7. ')' → logprob: -12.63259506225586
    8. '7' → logprob: -13.00759506225586
    9. '  ' → logprob: -14.44509506225586
    10. 'n' → logprob: -14.44509506225586

Token 292: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10645139962434769
    2. '1' → logprob: -2.3564515113830566
    3. '3' → logprob: -5.106451511383057
    4. '2' → logprob: -8.856451034545898
    5. ' ' → logprob: -11.606451034545898
    6. '7' → logprob: -11.731451034545898
    7. 'n' → logprob: -12.731451034545898
    8. '4' → logprob: -12.981451034545898
    9. '   ' → logprob: -13.918951034545898
    10. '8' → logprob: -14.981451034545898

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005686411168426275
    2. ')
' → logprob: -7.500568866729736
    3. '   ' → logprob: -11.250568389892578
    4. ')
' → logprob: -14.375568389892578
    5. '()' → logprob: -14.625568389892578
    6. ')p' → logprob: -14.875568389892578
    7. ' )' → logprob: -15.000568389892578
    8. ',' → logprob: -16.125568389892578
    9. ')

' → logprob: -16.125568389892578
    10. ')#' → logprob: -16.625568389892578

Token 294: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.7922236323356628
    2. '   ' → logprob: -0.9172236323356628
    3. 'else' → logprob: -2.6672236919403076
    4. 'p' → logprob: -2.6672236919403076
    5. 'for' → logprob: -5.9172234535217285
    6. 'elif' → logprob: -6.1672234535217285
    7. ' exit' → logprob: -6.7922234535217285
    8. '#' → logprob: -7.6672234535217285
    9. ' p' → logprob: -7.7922234535217285
    10. 'r' → logprob: -8.042223930358887

Token 296: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.6087021473795176e-05
    2. '()' → logprob: -10.000045776367188
    3. ' (' → logprob: -14.750045776367188
    4. '0' → logprob: -16.625045776367188
    5. '()(' → logprob: -17.250045776367188
    6. '(
' → logprob: -18.250045776367188
    7. '```' → logprob: -19.125045776367188
    8. '(EXIT' → logprob: -19.250045776367188
    9. '((' → logprob: -19.875045776367188
    10. '()
' → logprob: -20.875045776367188

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.250040054321289
    3. ' ' → logprob: -12.875040054321289
    4. ')' → logprob: -13.375040054321289
    5. '   ' → logprob: -16.87504005432129
    6. '۰' → logprob: -17.37504005432129
    7. '1' → logprob: -17.50004005432129
    8. '０' → logprob: -18.00004005432129
    9. '())' → logprob: -18.62504005432129
    10. ' )' → logprob: -18.62504005432129

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008035631850361824
    2. '()' → logprob: -5.008035659790039
    3. '())' → logprob: -6.633035659790039
    4. '(' → logprob: -13.633035659790039
    5. ')
' → logprob: -14.008035659790039
    6. '))' → logprob: -15.133035659790039
    7. ' )' → logprob: -15.133035659790039
    8. '()
' → logprob: -15.758035659790039
    9. '0' → logprob: -15.883035659790039
    10. ')`' → logprob: -16.00803565979004

Token 299: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15885905921459198
    2. 'for' → logprob: -2.0338590145111084
    3. 'p' → logprob: -5.0338592529296875
    4. 'n' → logprob: -5.7838592529296875
    5. 'else' → logprob: -6.1588592529296875
    6. 'if' → logprob: -6.9088592529296875
    7. '
' → logprob: -7.5338592529296875
    8. 'i' → logprob: -7.9088592529296875
    9. 'elif' → logprob: -7.9088592529296875
    10. '<|end|>' → logprob: -7.9088592529296875

Token 300: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08981450647115707
    2. 'for' → logprob: -3.2148144245147705
    3. 'p' → logprob: -3.4648144245147705
    4. 'n' → logprob: -4.33981466293335
    5. 'else' → logprob: -7.96481466293335
    6. 'i' → logprob: -8.089814186096191
    7. 'if' → logprob: -9.464814186096191
    8. 'm' → logprob: -9.589814186096191
    9. '  
' → logprob: -9.714814186096191
    10. 'a' → logprob: -9.964814186096191

Token 301: ' On' (ID: 2160)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.4971705377101898
    2. '0' → logprob: -1.3721705675125122
    3. '#' → logprob: -2.4971704483032227
    4. 'Quit' → logprob: -3.9971704483032227
    5. '```' → logprob: -4.622170448303223
    6. ' exit' → logprob: -4.747170448303223
    7. '(' → logprob: -5.497170448303223
    8. ')' → logprob: -5.622170448303223
    9. '(exit' → logprob: -5.747170448303223
    10. ' ' → logprob: -5.747170448303223

Token 302: ' termine' (ID: 76900)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.16187970340251923
    2. '(' → logprob: -3.036879777908325
    3. '()' → logprob: -3.286879777908325
    4. ' exit' → logprob: -3.786879777908325
    5. 'continue' → logprob: -4.161879539489746
    6. ')' → logprob: -4.411879539489746
    7. 'contin' → logprob: -5.411879539489746
    8. '(exit' → logprob: -6.036879539489746
    9. '```' → logprob: -6.786879539489746
    10. ' continue' → logprob: -7.161879539489746

Token 303: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47634848952293396
    2. '()' → logprob: -0.9763485193252563
    3. '<|end|>' → logprob: -6.351348400115967
    4. '0' → logprob: -7.851348400115967
    5. ')' → logprob: -9.351348876953125
    6. '()
' → logprob: -11.601348876953125
    7. '<|end|>' → logprob: -11.726348876953125
    8. '())' → logprob: -11.726348876953125
    9. '(
' → logprob: -12.601348876953125
    10. '```' → logprob: -13.101348876953125

Token 304: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.6853433847427368
    2. 'program' → logprob: -0.9353433847427368
    3. ' programme' → logprob: -2.5603432655334473
    4. ' program' → logprob: -4.060343265533447
    5. ')' → logprob: -6.185343265533447
    6. 'code' → logprob: -6.935343265533447
    7. '_program' → logprob: -6.935343265533447
    8. ' code' → logprob: -7.185343265533447
    9. 'programm' → logprob: -7.310343265533447
    10. '()' → logprob: -7.310343265533447

Token 305: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4701070487499237
    2. 'for' → logprob: -1.345107078552246
    3. 'n' → logprob: -2.595107078552246
    4. 'p' → logprob: -3.595107078552246
    5. '
' → logprob: -5.970107078552246
    6. 'i' → logprob: -6.220107078552246
    7. 'else' → logprob: -6.345107078552246
    8. 'r' → logprob: -7.095107078552246
    9. '```' → logprob: -7.345107078552246
    10. '  
' → logprob: -7.470107078552246

Token 306: ' ce' (ID: 2357)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8730027079582214
    2. 'ici' → logprob: -1.8730027675628662
    3. 'l' → logprob: -2.123002767562866
    4. 'on' → logprob: -2.623002767562866
    5. 'auc' → logprob: -2.748002767562866
    6. '0' → logprob: -3.248002767562866
    7. 'c' → logprob: -3.498002767562866
    8. 'la' → logprob: -3.748002767562866
    9. ' ici' → logprob: -3.998002767562866
    10. ' le' → logprob: -3.998002767562866

Token 307: ' cas' (ID: 2108)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3416236937046051
    2. ' code' → logprob: -2.3416237831115723
    3. ' n' → logprob: -2.8416237831115723
    4. 's' → logprob: -2.8416237831115723
    5. '#' → logprob: -3.5916237831115723
    6. 'est' → logprob: -4.091623783111572
    7. '```' → logprob: -4.841623783111572
    8. '()' → logprob: -5.716623783111572
    9. 'code' → logprob: -5.841623783111572
    10. '(' → logprob: -5.841623783111572

Token 308: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.22475405037403107
    2. ' est' → logprob: -1.8497540950775146
    3. 'n' → logprob: -4.0997538566589355
    4. 'a' → logprob: -4.8497538566589355
    5. ' a' → logprob: -5.5997538566589355
    6. ' is' → logprob: -5.7247538566589355
    7. 's' → logprob: -5.9747538566589355
    8. ' n' → logprob: -6.2247538566589355
    9. ''est' → logprob: -6.2247538566589355
    10. '```' → logprob: -6.9747538566589355

Token 309: ' traité' (ID: 160836)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.9040694236755371
    2. ' particulier' → logprob: -1.779069423675537
    3. ' traité' → logprob: -1.904069423675537
    4. 'sp' → logprob: -2.529069423675537
    5. 'special' → logprob: -2.529069423675537
    6. 'g' → logprob: -3.029069423675537
    7. 'part' → logprob: -4.154069423675537
    8. ' spécial' → logprob: -4.154069423675537
    9. ' spécifique' → logprob: -5.029069423675537
    10. ' un' → logprob: -5.154069423675537

Token 310: ' à' (ID: 1221)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.049934595823287964
    2. 'else' → logprob: -3.7999346256256104
    3. '```' → logprob: -4.174934387207031
    4. 'n' → logprob: -4.924934387207031
    5. 'if' → logprob: -6.799934387207031
    6. '  
' → logprob: -7.549934387207031
    7. 'elif' → logprob: -7.674934387207031
    8. '\n' → logprob: -8.174934387207031
    9. 'for' → logprob: -8.299934387207031
    10. '    
' → logprob: -8.299934387207031

Token 311: ' part' (ID: 997)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.6966285109519958
    2. 'part' → logprob: -1.0716285705566406
    3. 'cet' → logprob: -2.3216285705566406
    4. 'ici' → logprob: -2.9466285705566406
    5. ' ce' → logprob: -5.946628570556641
    6. 'pe' → logprob: -6.571628570556641
    7. 'c' → logprob: -6.571628570556641
    8. 'l' → logprob: -7.446628570556641
    9. ' cet' → logprob: -7.696628570556641
    10. 'la' → logprob: -7.946628570556641

Token 312: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5565478205680847
    2. 'for' → logprob: -0.9315478205680847
    3. 'p' → logprob: -4.05654764175415
    4. 'n' → logprob: -4.43154764175415
    5. 'else' → logprob: -6.30654764175415
    6. 'if' → logprob: -7.93154764175415
    7. '
' → logprob: -8.556548118591309
    8. 'r' → logprob: -8.556548118591309
    9. 'm' → logprob: -8.681548118591309
    10. 'i' → logprob: -8.931548118591309

Token 313: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5786747932434082
    2. 'else' → logprob: -1.7036747932434082
    3. '#' → logprob: -1.9536747932434082
    4. 'if' → logprob: -2.453674793243408
    5. 'm' → logprob: -4.953674793243408
    6. 'i' → logprob: -5.328674793243408
    7. 'elif' → logprob: -5.328674793243408
    8. 'k' → logprob: -5.453674793243408
    9. 'n' → logprob: -5.828674793243408
    10. 'p' → logprob: -6.203674793243408

Token 314: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5855996608734131
    2. 'pairs' → logprob: -1.585599660873413
    3. 'if' → logprob: -2.585599660873413
    4. 'm' → logprob: -2.960599660873413
    5. 'edges' → logprob: -3.585599660873413
    6. '#' → logprob: -3.960599660873413
    7. 'a' → logprob: -4.210599899291992
    8. 'else' → logprob: -4.460599899291992
    9. 'elif' → logprob: -4.960599899291992
    10. 'd' → logprob: -5.085599899291992

Token 315: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.1314224749803543
    2. 'izer' → logprob: -2.381422519683838
    3. 'i' → logprob: -4.506422519683838
    4. 'ize' → logprob: -5.131422519683838
    5. 'izing' → logprob: -5.256422519683838
    6. 'ization' → logprob: -5.881422519683838
    7. 'er' → logprob: -6.006422519683838
    8. 'isation' → logprob: -6.881422519683838
    9. '#' → logprob: -7.006422519683838
    10. 'is' → logprob: -8.25642204284668

Token 316: ' k' (ID: 372)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7409396171569824
    2. 'a' → logprob: -1.8659396171569824
    3. 'm' → logprob: -2.4909396171569824
    4. 'edges' → logprob: -2.9909396171569824
    5. 'lst' → logprob: -3.1159396171569824
    6. 'res' → logprob: -3.6159396171569824
    7. 'ans' → logprob: -3.7409396171569824
    8. 'arr' → logprob: -3.7409396171569824
    9. 'used' → logprob: -3.9909396171569824
    10. 'visited' → logprob: -4.365939617156982

Token 317: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033746782690286636
    2. ' =' → logprob: -3.4087467193603516
    3. '=k' → logprob: -9.783746719360352
    4. ',' → logprob: -10.283746719360352
    5. 'k' → logprob: -11.783746719360352
    6. ',k' → logprob: -13.783746719360352
    7. '=-' → logprob: -14.908746719360352
    8. '=int' → logprob: -15.033746719360352
    9. '=n' → logprob: -15.158746719360352
    10. ' ' → logprob: -15.658746719360352

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07068800926208496
    2. '0' → logprob: -3.445688009262085
    3. '2' → logprob: -3.445688009262085
    4. ' ' → logprob: -5.820688247680664
    5. 'n' → logprob: -6.820688247680664
    6. 'k' → logprob: -9.445688247680664
    7. '10' → logprob: -9.945688247680664
    8. '31' → logprob: -9.945688247680664
    9. '32' → logprob: -9.945688247680664
    10. '3' → logprob: -10.195688247680664

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20362964272499084
    2. '2' → logprob: -2.203629732131958
    3. '0' → logprob: -3.078629732131958
    4. 'n' → logprob: -4.078629493713379
    5. '3' → logprob: -5.203629493713379
    6. 'k' → logprob: -6.078629493713379
    7. '4' → logprob: -6.953629493713379
    8. '(n' → logprob: -7.578629493713379
    9. '20' → logprob: -8.328629493713379
    10. '10' → logprob: -8.828629493713379

Token 320: '.
' (ID: 558)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.2842308680992573e-05
    2. ' =' → logprob: -11.000022888183594
    3. '=' → logprob: -12.375022888183594
    4. ' k' → logprob: -13.500022888183594
    5. '=k' → logprob: -15.250022888183594
    6. ',' → logprob: -15.500022888183594
    7. '
' → logprob: -16.750022888183594
    8. ',k' → logprob: -18.250022888183594
    9. '```' → logprob: -20.000022888183594
    10. '1' → logprob: -20.125022888183594

Token 321: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -19.75
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -22.25
    5. '	k' → logprob: -23.75
    6. 'к' → logprob: -24.75
    7. '#' → logprob: -25.375
    8. '    
' → logprob: -25.375
    9. '
' → logprob: -25.625
    10. ' ' → logprob: -25.75

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20159372687339783
    2. ' =' → logprob: -1.7015937566757202
    3. ',' → logprob: -9.076593399047852
    4. '=k' → logprob: -9.826593399047852
    5. ' ' → logprob: -11.951593399047852
    6. ',k' → logprob: -12.576593399047852
    7. '=int' → logprob: -14.701593399047852
    8. 'k' → logprob: -14.701593399047852
    9. '=

' → logprob: -15.201593399047852
    10. '=
' → logprob: -15.701593399047852

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000340111117111519
    2. ' ' → logprob: -8.000340461730957
    3. 'k' → logprob: -13.125340461730957
    4. '2' → logprob: -13.625340461730957
    5. '0' → logprob: -14.125340461730957
    6. 'n' → logprob: -15.000340461730957
    7. '   ' → logprob: -16.25033950805664
    8. '  ' → logprob: -16.81283950805664
    9. '3' → logprob: -16.93783950805664
    10. ' k' → logprob: -17.00033950805664

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001487140398239717
    2. '2' → logprob: -9.12514877319336
    3. '0' → logprob: -11.12514877319336
    4. 'k' → logprob: -11.62514877319336
    5. 'n' → logprob: -12.00014877319336
    6. ' ' → logprob: -12.12514877319336
    7. '3' → logprob: -12.62514877319336
    8. '4' → logprob: -14.87514877319336
    9. '   ' → logprob: -16.12514877319336
    10. '```' → logprob: -16.37514877319336

Token 325: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.423485666513443
    2. '#' → logprob: -1.4234856367111206
    3. '<|end|>' → logprob: -3.29848575592041
    4. '
' → logprob: -3.54848575592041
    5. 'for' → logprob: -3.67348575592041
    6. ' while' → logprob: -6.29848575592041
    7. 'k' → logprob: -6.42348575592041
    8. ',' → logprob: -6.42348575592041
    9. 'i' → logprob: -6.79848575592041
    10. 'w' → logprob: -6.79848575592041

Token 326: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02604748122394085
    2. '#' → logprob: -3.776047468185425
    3. ' while' → logprob: -6.776047706604004
    4. 'w' → logprob: -7.401047706604004
    5. 'pairs' → logprob: -8.401047706604004
    6. '<|end|>' → logprob: -9.151047706604004
    7. '
' → logprob: -9.276047706604004
    8. 's' → logprob: -9.526047706604004
    9. 'k' → logprob: -9.651047706604004
    10. 'b' → logprob: -9.901047706604004

Token 327: ' Doub' (ID: 105790)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10623801499605179
    2. 'pairs' → logprob: -2.8562381267547607
    3. '#' → logprob: -3.8562381267547607
    4. 'for' → logprob: -4.481237888336182
    5. 'm' → logprob: -5.856237888336182
    6. 'edges' → logprob: -6.606237888336182
    7. 'if' → logprob: -7.106237888336182
    8. 'wh' → logprob: -7.106237888336182
    9. 'k' → logprob: -7.356237888336182
    10. 'a' → logprob: -7.481237888336182

Token 328: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.6333944797515869
    2. 'le' → logprob: -0.7583944797515869
    3. 'l' → logprob: -8.008394241333008
    4. '#' → logprob: -8.258394241333008
    5. 'er' → logprob: -9.508394241333008
    6. 'e' → logprob: -10.008394241333008
    7. '>' → logprob: -11.008394241333008
    8. '```' → logprob: -11.508394241333008
    9. '   ' → logprob: -12.258394241333008
    10. ' le' → logprob: -12.695894241333008

Token 329: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11333418637514114
    2. ' k' → logprob: -2.7383341789245605
    3. 'while' → logprob: -3.7383341789245605
    4. ' while' → logprob: -4.4883341789245605
    5. ' ' → logprob: -5.7383341789245605
    6. 'n' → logprob: -6.7383341789245605
    7. 'le' → logprob: -7.1133341789245605
    8. ',' → logprob: -7.3633341789245605
    9. ' n' → logprob: -7.8633341789245605
    10. '#' → logprob: -8.238334655761719

Token 330: ' tant' (ID: 16235)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1071208715438843
    2. '*' → logprob: -1.2321208715438843
    3. ' *' → logprob: -2.107120990753174
    4. '*k' → logprob: -2.232120990753174
    5. ' <<=' → logprob: -2.732120990753174
    6. '<<' → logprob: -3.232120990753174
    7. ' while' → logprob: -3.982120990753174
    8. 'k' → logprob: -4.482120990753174
    9. ' <<' → logprob: -5.232120990753174
    10. ' *=' → logprob: -5.232120990753174

Token 331: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.13199782371520996
    2. 'que' → logprob: -2.38199782371521
    3. ' k' → logprob: -3.63199782371521
    4. 'k' → logprob: -5.631998062133789
    5. '(k' → logprob: -7.256998062133789
    6. ' qu' → logprob: -7.631998062133789
    7. 'qu' → logprob: -10.631998062133789
    8. '   ' → logprob: -11.381998062133789
    9. ' ' → logprob: -11.881998062133789
    10. '  ' → logprob: -12.756998062133789

Token 332: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006082972511649132
    2. ' k' → logprob: -5.256083011627197
    3. '2' → logprob: -7.256083011627197
    4. '(k' → logprob: -9.131082534790039
    5. ' ' → logprob: -10.881082534790039
    6. ' (' → logprob: -11.506082534790039
    7. '(' → logprob: -13.256082534790039
    8. '4' → logprob: -13.506082534790039
    9. 'n' → logprob: -14.756082534790039
    10. ' ' → logprob: -15.006082534790039

Token 333: '*' (ID: 9)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6321855187416077
    2. ' <' → logprob: -0.8821855187416077
    3. ' <=' → logprob: -3.882185459136963
    4. '<=' → logprob: -4.007185459136963
    5. '<<' → logprob: -4.507185459136963
    6. '*' → logprob: -5.882185459136963
    7. '<n' → logprob: -7.007185459136963
    8. ' <<' → logprob: -7.257185459136963
    9. ' *' → logprob: -7.882185459136963
    10. ' <<=' → logprob: -9.882185935974121

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017866259440779686
    2. '*' → logprob: -4.642866134643555
    3. '<' → logprob: -5.017866134643555
    4. '<=' → logprob: -7.267866134643555
    5. ' <' → logprob: -8.267866134643555
    6. ' ' → logprob: -8.517866134643555
    7. '<n' → logprob: -9.142866134643555
    8. ' <=' → logprob: -9.767866134643555
    9. 'k' → logprob: -10.392866134643555
    10. ' *' → logprob: -10.517866134643555

Token 335: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6643166542053223
    2. ' <=' → logprob: -0.9143166542053223
    3. '<' → logprob: -2.9143166542053223
    4. ' <' → logprob: -3.5393166542053223
    5. '<n' → logprob: -6.664316654205322
    6. 'le' → logprob: -11.289316177368164
    7. ' ' → logprob: -12.164316177368164
    8. 'k' → logprob: -12.539316177368164
    9. '<len' → logprob: -13.164316177368164
    10. ']<=' → logprob: -13.289316177368164

Token 336: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018158020451664925
    2. ' n' → logprob: -4.018157958984375
    3. '=' → logprob: -12.393157958984375
    4. '=n' → logprob: -12.768157958984375
    5. '	n' → logprob: -14.643157958984375
    6. ' ' → logprob: -15.768157958984375
    7. '(n' → logprob: -16.143157958984375
    8. ' =' → logprob: -16.643157958984375
    9. '   ' → logprob: -16.768157958984375
    10. 'k' → logprob: -16.768157958984375

Token 337: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15119217336177826
    2. ' while' → logprob: -2.0261921882629395
    3. ':
' → logprob: -5.4011921882629395
    4. '
' → logprob: -6.1511921882629395
    5. ':' → logprob: -6.9011921882629395
    6. ' and' → logprob: -7.6511921882629395
    7. 'k' → logprob: -8.776191711425781
    8. 'and' → logprob: -9.026191711425781
    9. '	while' → logprob: -11.026191711425781
    10. ' 
' → logprob: -11.151191711425781

Token 338: ' pour' (ID: 1930)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.27857306599617004
    2. ' k' → logprob: -1.5285730361938477
    3. '   ' → logprob: -3.9035730361938477
    4. ' while' → logprob: -5.403573036193848
    5. 'while' → logprob: -6.653573036193848
    6. '	k' → logprob: -8.528573036193848
    7. ' 
' → logprob: -10.278573036193848
    8. '
' → logprob: -10.653573036193848
    9. ' and' → logprob: -10.903573036193848
    10. '    ' → logprob: -11.278573036193848

Token 339: ' obtenir' (ID: 54423)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3872387111186981
    2. 'k' → logprob: -1.1372387409210205
    3. '   ' → logprob: -9.387238502502441
    4. ' ' → logprob: -9.637238502502441
    5. ' pouvoir' → logprob: -9.887238502502441
    6. '#' → logprob: -10.137238502502441
    7. '    ' → logprob: -10.887238502502441
    8. '2' → logprob: -11.012238502502441
    9. '	k' → logprob: -11.012238502502441
    10. ' obtenir' → logprob: -11.762238502502441

Token 340: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8229846358299255
    2. 'k' → logprob: -1.5729846954345703
    3. ' la' → logprob: -1.6979846954345703
    4. 'le' → logprob: -2.6979846954345703
    5. '<|end|>' → logprob: -2.6979846954345703
    6. ' le' → logprob: -4.69798469543457
    7. ' the' → logprob: -4.94798469543457
    8. 'the' → logprob: -5.19798469543457
    9. ' ' → logprob: -6.19798469543457
    10. '<|end|>' → logprob: -6.19798469543457

Token 341: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5895757675170898
    2. ' plus' → logprob: -0.8395757675170898
    3. 'k' → logprob: -4.96457576751709
    4. 'largest' → logprob: -5.58957576751709
    5. ' k' → logprob: -6.58957576751709
    6. 'pu' → logprob: -7.58957576751709
    7. ' puissance' → logprob: -8.46457576751709
    8. ' largest' → logprob: -8.58957576751709
    9. ' meilleure' → logprob: -9.08957576751709
    10. 'me' → logprob: -9.33957576751709

Token 342: ' grande' (ID: 10094)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.3154277801513672
    2. ' proche' → logprob: -1.5654277801513672
    3. 'large' → logprob: -1.9404277801513672
    4. ' grande' → logprob: -2.565427780151367
    5. 'grand' → logprob: -2.565427780151367
    6. 'pu' → logprob: -2.940427780151367
    7. 'prox' → logprob: -3.190427780151367
    8. '2' → logprob: -3.690427780151367
    9. 'k' → logprob: -4.440427780151367
    10. ' prochaine' → logprob: -4.565427780151367

Token 343: ' puissance' (ID: 63494)
  Prédit: ' puissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.555081844329834
    2. 'pu' → logprob: -0.930081844329834
    3. '2' → logprob: -4.305081844329834
    4. 'k' → logprob: -5.555081844329834
    5. 'power' → logprob: -5.805081844329834
    6. ' ' → logprob: -5.930081844329834
    7. 'pow' → logprob: -6.055081844329834
    8. ' puiss' → logprob: -6.305081844329834
    9. '   ' → logprob: -6.555081844329834
    10. ' k' → logprob: -6.930081844329834

Token 344: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10986950248479843
    2. 'de' → logprob: -2.4848694801330566
    3. '   ' → logprob: -5.234869480133057
    4. ' ' → logprob: -5.359869480133057
    5. ' k' → logprob: -5.484869480133057
    6. ' of' → logprob: -5.984869480133057
    7. '_de' → logprob: -6.609869480133057
    8. '  ' → logprob: -7.359869480133057
    9. 'k' → logprob: -7.484869480133057
    10. '2' → logprob: -7.609869480133057

Token 345: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6996686458587646
    2. 'de' → logprob: -0.6996686458587646
    3. ' ' → logprob: -5.699668884277344
    4. ' deux' → logprob: -5.824668884277344
    5. 'two' → logprob: -8.949668884277344
    6. 'k' → logprob: -9.949668884277344
    7. ' two' → logprob: -11.449668884277344
    8. '#' → logprob: -12.199668884277344
    9. '```' → logprob: -13.199668884277344
    10. '  ' → logprob: -14.199668884277344

Token 346: ' STRICT' (ID: 68735)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8994605541229248
    2. ' k' → logprob: -1.3994605541229248
    3. '*k' → logprob: -1.7744605541229248
    4. '*' → logprob: -2.649460554122925
    5. ' ' → logprob: -3.274460554122925
    6. ':' → logprob: -3.649460554122925
    7. '(k' → logprob: -4.274460792541504
    8. '   ' → logprob: -4.524460792541504
    9. '_k' → logprob: -5.149460792541504
    10. ' *' → logprob: -5.274460792541504

Token 347: 'EMENT' (ID: 25654)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.04312695935368538
    2. 'ément' → logprob: -3.6681270599365234
    3. 'e' → logprob: -4.543127059936523
    4. 'ment' → logprob: -6.543127059936523
    5. 'inf' → logprob: -6.793127059936523
    6. 'érieure' → logprob: -7.168127059936523
    7. 'ly' → logprob: -7.418127059936523
    8. 'ument' → logprob: -8.543127059936523
    9. 'ivement' → logprob: -8.543127059936523
    10. 'rement' → logprob: -8.668127059936523

Token 348: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.002919234102591872
    2. 'infer' → logprob: -6.0029191970825195
    3. ' inf' → logprob: -8.12791919708252
    4. '<' → logprob: -9.62791919708252
    5. 'k' → logprob: -10.87791919708252
    6. 'plus' → logprob: -10.87791919708252
    7. 'in' → logprob: -11.12791919708252
    8. ' inférieur' → logprob: -11.87791919708252
    9. 'strict' → logprob: -12.25291919708252
    10. 'moins' → logprob: -12.50291919708252

Token 349: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0010555570479482412
    2. 'érie' → logprob: -7.626055717468262
    3. 'érieur' → logprob: -8.126055717468262
    4. 'erie' → logprob: -8.376055717468262
    5. 'érieures' → logprob: -11.876055717468262
    6. 'é' → logprob: -12.126055717468262
    7. '{' → logprob: -12.251055717468262
    8. 'rie' → logprob: -12.251055717468262
    9. '%C' → logprob: -12.501055717468262
    10. '   ' → logprob: -12.751055717468262

Token 350: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3591356575489044
    2. 'à' → logprob: -1.609135627746582
    3. '   ' → logprob: -2.484135627746582
    4. 'k' → logprob: -4.984135627746582
    5. ' k' → logprob: -5.234135627746582
    6. '(k' → logprob: -6.109135627746582
    7. ' to' → logprob: -6.234135627746582
    8. ' a' → logprob: -7.484135627746582
    9. 'to' → logprob: -7.984135627746582
    10. 'a' → logprob: -8.234135627746582

Token 351: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132634460926056
    2. 'n' → logprob: -1.3132634162902832
    3. ' ' → logprob: -13.688263893127441
    4. ' ' → logprob: -15.188263893127441
    5. '	n' → logprob: -15.688263893127441
    6. ')n' → logprob: -17.188262939453125
    7. '```' → logprob: -17.813262939453125
    8. 'k' → logprob: -17.813262939453125
    9. '_n' → logprob: -17.938262939453125
    10. '<n' → logprob: -18.063262939453125

Token 352: '.
' (ID: 558)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.039185453206300735
    2. ' while' → logprob: -3.2891855239868164
    3. '
' → logprob: -6.789185523986816
    4. '   ' → logprob: -11.539185523986816
    5. ' 
' → logprob: -12.914185523986816
    6. '	while' → logprob: -13.414185523986816
    7. '```' → logprob: -13.789185523986816
    8. ':
' → logprob: -14.539185523986816
    9. 'wh' → logprob: -14.664185523986816
    10. '    
' → logprob: -14.789185523986816

Token 353: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007110013975761831
    2. ' while' → logprob: -7.250710964202881
    3. '	while' → logprob: -14.875711441040039
    4. '
' → logprob: -15.000711441040039
    5. '   ' → logprob: -15.500711441040039
    6. 'wh' → logprob: -16.25071144104004
    7. 'k' → logprob: -17.00071144104004
    8. 'While' → logprob: -17.87571144104004
    9. '```' → logprob: -17.87571144104004
    10. ' 
' → logprob: -20.12571144104004

Token 354: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759517550468445
    2. 'k' → logprob: -0.8259517550468445
    3. '(k' → logprob: -11.82595157623291
    4. ' ' → logprob: -12.95095157623291
    5. ' ' → logprob: -13.70095157623291
    6. ' (' → logprob: -14.45095157623291
    7. '	k' → logprob: -14.70095157623291
    8. '2' → logprob: -15.07595157623291
    9. '(' → logprob: -16.075952529907227
    10. '   ' → logprob: -16.575952529907227

Token 355: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10203730314970016
    2. ' *' → logprob: -2.727037191390991
    3. '<' → logprob: -3.602037191390991
    4. ' <' → logprob: -5.47703742980957
    5. '<<' → logprob: -9.35203742980957
    6. ' <<=' → logprob: -10.97703742980957
    7. ' <<' → logprob: -11.10203742980957
    8. 'k' → logprob: -12.22703742980957
    9. '*k' → logprob: -12.35203742980957
    10. ' ' → logprob: -12.35203742980957

Token 356: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '
' → logprob: -16.75023078918457
    4. '۲' → logprob: -16.75023078918457
    5. '<|end|>' → logprob: -17.37523078918457
    6. '  ' → logprob: -17.50023078918457
    7. '２' → logprob: -17.75023078918457
    8. '   ' → logprob: -17.87523078918457
    9. '```' → logprob: -17.87523078918457
    10. '=' → logprob: -18.37523078918457

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<' → logprob: -17.50004005432129
    4. '۲' → logprob: -17.75004005432129
    5. '２' → logprob: -18.25004005432129
    6. '
' → logprob: -19.50004005432129
    7. '  ' → logprob: -19.50004005432129
    8. '   ' → logprob: -19.87504005432129
    9. '```' → logprob: -19.93754005432129
    10. '٢' → logprob: -20.18754005432129

Token 358: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20370811223983765
    2. ' <' → logprob: -1.7037081718444824
    3. '<n' → logprob: -6.078708171844482
    4. '<=' → logprob: -14.953707695007324
    5. ' <=' → logprob: -15.578707695007324
    6. ' ' → logprob: -15.828707695007324
    7. '<num' → logprob: -15.953707695007324
    8. '<int' → logprob: -16.32870864868164
    9. ' n' → logprob: -16.70370864868164
    10. '<size' → logprob: -16.70370864868164

Token 359: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931480169296265
    2. ' n' → logprob: -0.6931480169296265
    3. '	n' → logprob: -14.568147659301758
    4. ' ' → logprob: -15.193147659301758
    5. ' ' → logprob: -16.943147659301758
    6. '```' → logprob: -17.318147659301758
    7. '_n' → logprob: -17.568147659301758
    8. '(n' → logprob: -18.193147659301758
    9. ')n' → logprob: -18.318147659301758
    10. '   ' → logprob: -18.318147659301758

Token 360: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04870818182826042
    2. ':' → logprob: -3.048708200454712
    3. '   ' → logprob: -9.173707962036133
    4. ':k' → logprob: -11.673707962036133
    5. 'k' → logprob: -12.798707962036133
    6. ':
' → logprob: -13.173707962036133
    7. ' :
' → logprob: -13.173707962036133
    8. '):
' → logprob: -13.423707962036133
    9. ':

' → logprob: -16.173707962036133
    10. ',' → logprob: -16.173707962036133

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031026117503643036
    2. 'k' → logprob: -6.253102779388428
    3. ' k' → logprob: -6.753102779388428
    4. '       ' → logprob: -12.25310230255127
    5. '	k' → logprob: -13.87810230255127
    6. '   ' → logprob: -15.25310230255127
    7. ',k' → logprob: -15.75310230255127
    8. '```' → logprob: -18.628103256225586
    9. '    
' → logprob: -19.003103256225586
    10. '[k' → logprob: -19.003103256225586

Token 362: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.031665824353694916
    2. '   ' → logprob: -3.781665802001953
    3. ' k' → logprob: -4.781665802001953
    4. '	k' → logprob: -12.781665802001953
    5. ' ' → logprob: -17.281665802001953
    6. ',k' → logprob: -17.531665802001953
    7. '_k' → logprob: -17.781665802001953
    8. '       ' → logprob: -17.906665802001953
    9. '.k' → logprob: -18.531665802001953
    10. '  ' → logprob: -18.906665802001953

Token 363: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3357442021369934
    2. ' *=' → logprob: -1.8357441425323486
    3. '=' → logprob: -2.0857441425323486
    4. ' =' → logprob: -6.585744380950928
    5. '*' → logprob: -9.71074390411377
    6. ' <<=' → logprob: -10.46074390411377
    7. '   ' → logprob: -11.58574390411377
    8. ' ' → logprob: -12.33574390411377
    9. '.=' → logprob: -14.96074390411377
    10. '  ' → logprob: -15.08574390411377

Token 364: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.750036239624023
    4. '```' → logprob: -18.125036239624023
    5. '  ' → logprob: -18.250036239624023
    6. '۲' → logprob: -19.375036239624023
    7. '<|end|>' → logprob: -20.250036239624023
    8. '
' → logprob: -20.375036239624023
    9. '２' → logprob: -20.625036239624023
    10. ' ' → logprob: -21.375036239624023

Token 365: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.7500057220459
    4. '<|end|>' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.3750057220459
    6. '  ' → logprob: -18.8750057220459
    7. '۲' → logprob: -19.5000057220459
    8. '
' → logprob: -19.8750057220459
    9. '２' → logprob: -20.2500057220459
    10. '`' → logprob: -20.9375057220459

Token 366: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0667484700679779
    2. '<|end|>' → logprob: -3.5667483806610107
    3. 'p' → logprob: -3.6917483806610107
    4. 'n' → logprob: -5.31674861907959
    5. 'k' → logprob: -5.69174861907959
    6. '
' → logprob: -6.56674861907959
    7. ')' → logprob: -7.31674861907959
    8. 'print' → logprob: -8.44174861907959
    9. '.' → logprob: -8.81674861907959
    10. '```' → logprob: -9.19174861907959

Token 367: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02436205744743347
    2. 'p' → logprob: -3.774362087249756
    3. '<|end|>' → logprob: -7.524362087249756
    4. 'print' → logprob: -8.524361610412598
    5. '
' → logprob: -8.649361610412598
    6. 'k' → logprob: -9.399361610412598
    7. 'n' → logprob: -9.899361610412598
    8. '.' → logprob: -11.149361610412598
    9. '```' → logprob: -11.649361610412598
    10. '<|end|>' → logprob: -12.149361610412598

Token 368: ' Mult' (ID: 15431)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25105130672454834
    2. 'k' → logprob: -2.126051425933838
    3. 'pass' → logprob: -2.376051425933838
    4. 'continue' → logprob: -5.626051425933838
    5. ' pass' → logprob: -6.251051425933838
    6. 'Continue' → logprob: -6.751051425933838
    7. 'n' → logprob: -7.251051425933838
    8. 'Pass' → logprob: -7.751051425933838
    9. ' continue' → logprob: -7.751051425933838
    10. ' #' → logprob: -8.37605094909668

Token 369: 'ipl' (ID: 7840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08264987170696259
    2. '2' → logprob: -2.5826499462127686
    3. '<|end|>' → logprob: -6.8326497077941895
    4. 'k' → logprob: -7.2076497077941895
    5. '*=' → logprob: -7.5826497077941895
    6. '*' → logprob: -8.332650184631348
    7. 'ip' → logprob: -8.332650184631348
    8. '=
' → logprob: -8.832650184631348
    9. ' k' → logprob: -9.207650184631348
    10. '=k' → logprob: -9.332650184631348

Token 370: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.540333092212677
    2. 'iquer' → logprob: -1.0403330326080322
    3. 'y' → logprob: -3.5403330326080322
    4. 'yer' → logprob: -4.290333271026611
    5. 'iplier' → logprob: -4.915333271026611
    6. 'er' → logprob: -6.040333271026611
    7. 'ique' → logprob: -6.165333271026611
    8. 'ie' → logprob: -6.165333271026611
    9. 'iy' → logprob: -6.790333271026611
    10. 'ic' → logprob: -6.915333271026611

Token 371: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02848181501030922
    2. ' k' → logprob: -3.6534817218780518
    3. 'par' → logprob: -7.028481960296631
    4. '2' → logprob: -7.903481960296631
    5. '(k' → logprob: -8.028481483459473
    6. '<|end|>' → logprob: -8.653481483459473
    7. ' ' → logprob: -8.903481483459473
    8. ' par' → logprob: -8.903481483459473
    9. 'le' → logprob: -9.903481483459473
    10. '```' → logprob: -10.278481483459473

Token 372: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0052342405542731285
    2. ' ' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.880233764648438
    4. '   ' → logprob: -17.130233764648438
    5. 'k' → logprob: -17.255233764648438
    6. '  ' → logprob: -17.380233764648438
    7. '```' → logprob: -17.505233764648438
    8. ' deux' → logprob: -17.630233764648438
    9. ' two' → logprob: -17.755233764648438
    10. ' k' → logprob: -17.755233764648438

Token 374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'de' → logprob: -15.125024795532227
    4. '```' → logprob: -16.500024795532227
    5. ' ' → logprob: -17.500024795532227
    6. 'k' → logprob: -17.750024795532227
    7. '  ' → logprob: -17.750024795532227
    8. ' deux' → logprob: -18.000024795532227
    9. '   ' → logprob: -18.000024795532227
    10. '<|end|>' → logprob: -18.437524795532227

Token 375: ' à' (ID: 1221)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6267984509468079
    2. '#' → logprob: -1.501798391342163
    3. '
' → logprob: -1.501798391342163
    4. '<|end|>' → logprob: -4.626798629760742
    5. 'print' → logprob: -5.876798629760742
    6. 'k' → logprob: -6.251798629760742
    7. '

' → logprob: -6.376798629760742
    8. 'n' → logprob: -6.876798629760742
    9. ' p' → logprob: -6.876798629760742
    10. 'while' → logprob: -7.876798629760742

Token 376: ' chaque' (ID: 21194)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002451161155477166
    2. ' ' → logprob: -6.127450942993164
    3. 'de' → logprob: -9.127450942993164
    4. ' k' → logprob: -9.627450942993164
    5. 'k' → logprob: -9.752450942993164
    6. ' deux' → logprob: -10.752450942993164
    7. '1' → logprob: -12.252450942993164
    8. '```' → logprob: -12.752450942993164
    9. 'l' → logprob: -13.752450942993164
    10. ' ' → logprob: -14.377450942993164

Token 377: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.6911227107048035
    2. 'it' → logprob: -0.9411227107048035
    3. 'iteration' → logprob: -2.5661227703094482
    4. 'tour' → logprob: -4.066122531890869
    5. 'fois' → logprob: -4.941122531890869
    6. ' ' → logprob: -5.816122531890869
    7. ' tour' → logprob: -6.316122531890869
    8. ' iteration' → logprob: -7.191122531890869
    9. 'iter' → logprob: -7.316122531890869
    10. ' fois' → logprob: -7.941122531890869

Token 378: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0009979173773899674
    2. 'er' → logprob: -7.000998020172119
    3. 'érations' → logprob: -9.875997543334961
    4. 'ration' → logprob: -11.000997543334961
    5. 'ér' → logprob: -11.625997543334961
    6. 'é' → logprob: -13.000997543334961
    7. 'ation' → logprob: -13.375997543334961
    8. 'éré' → logprob: -14.125997543334961
    9. 'éra' → logprob: -14.625997543334961
    10. 'étation' → logprob: -14.750997543334961

Token 379: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6591065526008606
    2. 'p' → logprob: -1.0341064929962158
    3. 'm' → logprob: -2.534106492996216
    4. 'for' → logprob: -4.034106731414795
    5. 'i' → logprob: -5.159106731414795
    6. 'k' → logprob: -5.159106731414795
    7. 'print' → logprob: -5.409106731414795
    8. 'pairs' → logprob: -5.409106731414795
    9. 'while' → logprob: -6.034106731414795
    10. 'if' → logprob: -6.534106731414795

Token 381: ' Première' (ID: 179764)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7039608955383301
    2. 'print' → logprob: -1.95396089553833
    3. 'm' → logprob: -2.07896089553833
    4. 'pairs' → logprob: -2.57896089553833
    5. 'if' → logprob: -2.70396089553833
    6. 'for' → logprob: -3.32896089553833
    7. '#' → logprob: -3.57896089553833
    8. 'edges' → logprob: -4.82896089553833
    9. 'l' → logprob: -5.07896089553833
    10. 'a' → logprob: -5.07896089553833

Token 382: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40902966260910034
    2. 'p' → logprob: -1.4090297222137451
    3. '#' → logprob: -4.034029483795166
    4. 'bou' → logprob: -4.034029483795166
    5. 'print' → logprob: -4.284029483795166
    6. ' boucle' → logprob: -4.784029483795166
    7. '=' → logprob: -5.284029483795166
    8. 'ligne' → logprob: -5.284029483795166
    9. 'part' → logprob: -5.409029483795166
    10. 'range' → logprob: -6.034029483795166

Token 383: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05530862882733345
    2. ' for' → logprob: -2.9303085803985596
    3. 'r' → logprob: -8.05530834197998
    4. 'i' → logprob: -9.30530834197998
    5. 'p' → logprob: -12.80530834197998
    6. '(r' → logprob: -12.93030834197998
    7. 'k' → logprob: -13.05530834197998
    8. ':' → logprob: -13.18030834197998
    9. 'f' → logprob: -13.43030834197998
    10. '=' → logprob: -13.43030834197998

Token 384: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0053761680610477924
    2. 'p' → logprob: -5.38037633895874
    3. ' for' → logprob: -7.88037633895874
    4. 'i' → logprob: -8.630375862121582
    5. 'r' → logprob: -8.630375862121582
    6. '_' → logprob: -11.880375862121582
    7. 'k' → logprob: -12.630375862121582
    8. ' p' → logprob: -13.255375862121582
    9. 'f' → logprob: -13.630375862121582
    10. '```' → logprob: -13.880375862121582

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016305672004818916
    2. ' i' → logprob: -4.766305446624756
    3. 'a' → logprob: -5.266305446624756
    4. 'x' → logprob: -6.391305446624756
    5. 'b' → logprob: -7.766305446624756
    6. '_' → logprob: -9.141305923461914
    7. 'd' → logprob: -10.141305923461914
    8. 'j' → logprob: -10.266305923461914
    9. 'k' → logprob: -10.266305923461914
    10. '_i' → logprob: -10.266305923461914

Token 386: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25275132060050964
    2. 'in' → logprob: -1.502751350402832
    3. ',' → logprob: -8.252751350402832
    4. 'n' → logprob: -9.002751350402832
    5. 'd' → logprob: -9.127751350402832
    6. '(' → logprob: -9.752751350402832
    7. ' ' → logprob: -10.252751350402832
    8. 'dans' → logprob: -10.377751350402832
    9. ')' → logprob: -10.877751350402832
    10. ' i' → logprob: -11.002751350402832

Token 387: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5194305181503296
    2. 'in' → logprob: -2.269430637359619
    3. ' de' → logprob: -2.394430637359619
    4. 'de' → logprob: -2.519430637359619
    5. ' in' → logprob: -2.769430637359619
    6. ' from' → logprob: -3.519430637359619
    7. 'r' → logprob: -4.769430637359619
    8. ' ' → logprob: -5.019430637359619
    9. 'd' → logprob: -5.519430637359619
    10. ' i' → logprob: -5.644430637359619

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054860059171915054
    2. 'k' → logprob: -3.0548601150512695
    3. '0' → logprob: -5.1798601150512695
    4. '2' → logprob: -8.67986011505127
    5. 'r' → logprob: -8.92986011505127
    6. ' ' → logprob: -9.05486011505127
    7. 'range' → logprob: -9.05486011505127
    8. ' k' → logprob: -10.42986011505127
    9. '(' → logprob: -10.92986011505127
    10. 'n' → logprob: -10.92986011505127

Token 389: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03455529734492302
    2. 'k' → logprob: -3.409555196762085
    3. '2' → logprob: -7.534555435180664
    4. '0' → logprob: -8.159555435180664
    5. 'r' → logprob: -10.659555435180664
    6. '(k' → logprob: -11.159555435180664
    7. '(' → logprob: -11.159555435180664
    8. 'range' → logprob: -11.159555435180664
    9. ' ' → logprob: -11.659555435180664
    10. ' k' → logprob: -12.284555435180664

Token 390: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6165671348571777
    2. ' in' → logprob: -0.8665671348571777
    3. ',' → logprob: -4.241567134857178
    4. ' à' → logprob: -4.991567134857178
    5. ' to' → logprob: -4.991567134857178
    6. 'to' → logprob: -5.241567134857178
    7. ' k' → logprob: -6.116567134857178
    8. 'k' → logprob: -6.741567134857178
    9. ' ' → logprob: -7.241567134857178
    10. 'dans' → logprob: -7.741567134857178

Token 391: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004865957424044609
    2. ' k' → logprob: -5.379866123199463
    3. 'n' → logprob: -8.629865646362305
    4. '(k' → logprob: -10.254865646362305
    5. ' n' → logprob: -11.504865646362305
    6. '(n' → logprob: -12.254865646362305
    7. ' (' → logprob: -12.254865646362305
    8. 'r' → logprob: -12.629865646362305
    9. ' ' → logprob: -12.629865646362305
    10. '2' → logprob: -12.754865646362305

Token 392: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.849378228187561
    2. 'for' → logprob: -1.224378228187561
    3. '+' → logprob: -1.849378228187561
    4. ':
' → logprob: -3.0993781089782715
    5. 'in' → logprob: -3.7243781089782715
    6. 'k' → logprob: -4.4743781089782715
    7. '(k' → logprob: -4.4743781089782715
    8. '(' → logprob: -4.8493781089782715
    9. ' for' → logprob: -5.4743781089782715
    10. ' in' → logprob: -5.7243781089782715

Token 393: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.500016212463379
    3. '-' → logprob: -12.500016212463379
    4. '2' → logprob: -13.750016212463379
    5. 'k' → logprob: -14.625016212463379
    6. ' -' → logprob: -14.875016212463379
    7. '   ' → logprob: -15.625016212463379
    8. '(' → logprob: -15.750016212463379
    9. '```' → logprob: -16.875015258789062
    10. '`' → logprob: -18.250015258789062

Token 394: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5773940682411194
    2. 'in' → logprob: -0.9523940682411194
    3. ' in' → logprob: -4.202394008636475
    4. '(p' → logprob: -4.327394008636475
    5. 'p' → logprob: -4.452394008636475
    6. ' for' → logprob: -5.577394008636475
    7. ':
' → logprob: -6.452394008636475
    8. '(' → logprob: -6.452394008636475
    9. 'k' → logprob: -6.452394008636475
    10. ':' → logprob: -6.577394008636475

Token 395: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012645211536437273
    2. ' for' → logprob: -6.751264572143555
    3. ':
' → logprob: -10.126264572143555
    4. 'in' → logprob: -10.501264572143555
    5. ':' → logprob: -10.751264572143555
    6. '
' → logprob: -13.501264572143555
    7. ',' → logprob: -13.751264572143555
    8. 'p' → logprob: -14.126264572143555
    9. '(' → logprob: -14.251264572143555
    10. ' in' → logprob: -14.876264572143555

Token 396: 'don' (ID: 22130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5453312993049622
    2. ' for' → logprob: -1.5453312397003174
    3. 'p' → logprob: -1.7953312397003174
    4. ' p' → logprob: -4.0453314781188965
    5. 'k' → logprob: -4.7953314781188965
    6. ' in' → logprob: -5.0453314781188965
    7. ')' → logprob: -6.6703314781188965
    8. ' k' → logprob: -6.6703314781188965
    9. '   ' → logprob: -6.6703314781188965
    10. 'in' → logprob: -6.6703314781188965

Token 397: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1887013465166092
    2. 'k' → logprob: -2.8137013912200928
    3. 'g' → logprob: -3.4387013912200928
    4. 'range' → logprob: -4.313701152801514
    5. 'w' → logprob: -4.563701152801514
    6. ' in' → logprob: -4.688701152801514
    7. ')' → logprob: -5.063701152801514
    8. 'r' → logprob: -5.063701152801514
    9. 'st' → logprob: -5.188701152801514
    10. '(' → logprob: -5.563701152801514

Token 398: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31663650274276733
    2. ' k' → logprob: -1.316636562347412
    3. 'p' → logprob: -7.191636562347412
    4. ' p' → logprob: -7.441636562347412
    5. 'r' → logprob: -7.691636562347412
    6. 'i' → logprob: -7.816636562347412
    7. ' r' → logprob: -8.316636085510254
    8. ' i' → logprob: -8.441636085510254
    9. ' ' → logprob: -8.691636085510254
    10. '0' → logprob: -8.691636085510254

Token 399: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5689053535461426
    2. ' -' → logprob: -0.9439053535461426
    3. ')' → logprob: -4.068905353546143
    4. '):' → logprob: -4.068905353546143
    5. '):
' → logprob: -6.068905353546143
    6. 'p' → logprob: -6.568905353546143
    7. ':' → logprob: -6.943905353546143
    8. 'in' → logprob: -7.068905353546143
    9. ' =' → logprob: -7.443905353546143
    10. '   ' → logprob: -7.443905353546143

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6935219168663025
    2. '3' → logprob: -0.6935219168663025
    3. '1' → logprob: -8.193521499633789
    4. ' ' → logprob: -9.443521499633789
    5. '```' → logprob: -11.693521499633789
    6. '   ' → logprob: -12.193521499633789
    7. ')' → logprob: -13.318521499633789
    8. '4' → logprob: -13.568521499633789
    9. '-' → logprob: -13.693521499633789
    10. '  ' → logprob: -14.443521499633789

Token 401: ' éléments' (ID: 57375)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018579013645648956
    2. '):
' → logprob: -4.518579006195068
    3. '+' → logprob: -5.643579006195068
    4. ')' → logprob: -6.768579006195068
    5. ' ):' → logprob: -6.893579006195068
    6. '-' → logprob: -7.143579006195068
    7. ':' → logprob: -7.393579006195068
    8. ' -' → logprob: -8.643579483032227
    9. ' +' → logprob: -9.643579483032227
    10. ',' → logprob: -10.018579483032227

Token 402: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17983534932136536
    2. '):' → logprob: -2.179835319519043
    3. ':
' → logprob: -3.429835319519043
    4. '):
' → logprob: -4.304835319519043
    5. ',' → logprob: -5.429835319519043
    6. ')' → logprob: -7.554835319519043
    7. '+' → logprob: -8.679835319519043
    8. ' :' → logprob: -8.804835319519043
    9. '   ' → logprob: -9.304835319519043
    10. 'for' → logprob: -9.679835319519043

Token 403: ' total' (ID: 3609)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4702480435371399
    2. ' k' → logprob: -1.4702479839324951
    3. 'k' → logprob: -2.220247983932495
    4. 'r' → logprob: -4.595248222351074
    5. ')' → logprob: -5.095248222351074
    6. ' ' → logprob: -5.595248222351074
    7. '+' → logprob: -5.720248222351074
    8. ' r' → logprob: -5.720248222351074
    9. ' in' → logprob: -6.595248222351074
    10. '```' → logprob: -6.720248222351074

Token 404: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26667654514312744
    2. ':
' → logprob: -2.016676425933838
    3. '):
' → logprob: -3.516676425933838
    4. '):' → logprob: -3.641676425933838
    5. ',' → logprob: -3.766676425933838
    6. ')' → logprob: -4.391676425933838
    7. ' in' → logprob: -5.891676425933838
    8. 'for' → logprob: -6.016676425933838
    9. 'in' → logprob: -6.141676425933838
    10. '
' → logprob: -7.766676425933838

Token 405: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001171652227640152
    2. ' for' → logprob: -6.751171588897705
    3. 'r' → logprob: -15.126172065734863
    4. '```' → logprob: -15.376172065734863
    5. '
' → logprob: -15.876172065734863
    6. ')' → logprob: -16.001171112060547
    7. 'k' → logprob: -16.126171112060547
    8. '	for' → logprob: -16.251171112060547
    9. 'p' → logprob: -16.376171112060547
    10. 'in' → logprob: -16.626171112060547

Token 406: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759601593017578
    2. 'i' → logprob: -0.8259601593017578
    3. '	i' → logprob: -10.950960159301758
    4. ' ' → logprob: -13.575960159301758
    5. ' ' → logprob: -13.575960159301758
    6. ' in' → logprob: -15.950960159301758
    7. '```' → logprob: -15.950960159301758
    8. '_i' → logprob: -16.200960159301758
    9. 'I' → logprob: -16.700960159301758
    10. ' ' → logprob: -17.075960159301758

Token 407: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543755173683167
    2. 'in' → logprob: -1.6004375219345093
    3. ' ' → logprob: -11.60043716430664
    4. '	in' → logprob: -12.10043716430664
    5. 'In' → logprob: -13.47543716430664
    6. ',' → logprob: -13.60043716430664
    7. '   ' → logprob: -13.72543716430664
    8. 'd' → logprob: -13.72543716430664
    9. ')' → logprob: -13.97543716430664
    10. 'n' → logprob: -14.22543716430664

Token 408: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25838503241539
    2. ' r' → logprob: -1.5083850622177124
    3. 'range' → logprob: -5.758385181427002
    4. ' range' → logprob: -5.758385181427002
    5. ' ' → logprob: -9.508384704589844
    6. '	r' → logprob: -11.133384704589844
    7. '0' → logprob: -11.758384704589844
    8. '(r' → logprob: -12.133384704589844
    9. ' р' → logprob: -12.383384704589844
    10. 'p' → logprob: -12.945884704589844

Token 409: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0052354102954268456
    2. '(' → logprob: -5.255235195159912
    3. ' (' → logprob: -13.63023567199707
    4. 'k' → logprob: -15.75523567199707
    5. '(
' → logprob: -16.38023567199707
    6. '(n' → logprob: -16.38023567199707
    7. '((' → logprob: -16.50523567199707
    8. ' k' → logprob: -17.00523567199707
    9. '(i' → logprob: -17.13023567199707
    10. '(s' → logprob: -18.63023567199707

Token 410: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07895742356777191
    2. ' -' → logprob: -2.5789573192596436
    3. ')' → logprob: -10.453957557678223
    4. ' ' → logprob: -10.828957557678223
    5. '   ' → logprob: -11.703957557678223
    6. '()' → logprob: -12.703957557678223
    7. '()-' → logprob: -13.078957557678223
    8. '  ' → logprob: -13.703957557678223
    9. '):
' → logprob: -14.203957557678223
    10. '1' → logprob: -14.453957557678223

Token 411: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034630970912985504
    2. '1' → logprob: -8.375346183776855
    3. ' ' → logprob: -9.250346183776855
    4. '3' → logprob: -11.875346183776855
    5. '

' → logprob: -12.625346183776855
    6. '
' → logprob: -12.625346183776855
    7. '   ' → logprob: -12.812846183776855
    8. '```' → logprob: -14.312846183776855
    9. '  ' → logprob: -14.562846183776855
    10. '
' → logprob: -15.062846183776855

Token 412: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.702754474943504e-05
    2. '3' → logprob: -10.87503719329834
    3. ' ' → logprob: -11.75003719329834
    4. '1' → logprob: -11.87503719329834
    5. '   ' → logprob: -14.00003719329834
    6. '

' → logprob: -14.31253719329834
    7. '```' → logprob: -15.00003719329834
    8. '
' → logprob: -15.18753719329834
    9. '۲' → logprob: -15.68753719329834
    10. '２' → logprob: -16.125036239624023

Token 413: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00620818929746747
    2. '):
' → logprob: -5.131208419799805
    3. ' ):' → logprob: -8.381208419799805
    4. ')' → logprob: -10.631208419799805
    5. '):
' → logprob: -11.256208419799805
    6. ':' → logprob: -11.631208419799805
    7. '   ' → logprob: -13.506208419799805
    8. ' ):
' → logprob: -13.881208419799805
    9. ',' → logprob: -14.881208419799805
    10. '):

' → logprob: -14.881208419799805

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22803895175457
    2. 'p' → logprob: -1.6030389070510864
    3. ' p' → logprob: -5.978038787841797
    4. 'if' → logprob: -10.353038787841797
    5. '(p' → logprob: -11.228038787841797
    6. '	p' → logprob: -11.478038787841797
    7. ' if' → logprob: -12.103038787841797
    8. ':' → logprob: -12.353038787841797
    9. ':
' → logprob: -12.728038787841797
    10. '       ' → logprob: -12.728038787841797

Token 415: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0029886364936828613
    2. '   ' → logprob: -5.877988815307617
    3. ' p' → logprob: -8.877988815307617
    4. 'i' → logprob: -10.252988815307617
    5. 'if' → logprob: -12.002988815307617
    6. '1' → logprob: -13.752988815307617
    7. 'print' → logprob: -14.377988815307617
    8. ' ' → logprob: -14.877988815307617
    9. '  ' → logprob: -15.627988815307617
    10. '    ' → logprob: -15.627988815307617

Token 416: ' Aff' (ID: 13741)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000353100651409477
    2. '   ' → logprob: -8.50035285949707
    3. 'if' → logprob: -9.00035285949707
    4. ' p' → logprob: -10.75035285949707
    5. 'print' → logprob: -12.87535285949707
    6. 'a' → logprob: -14.12535285949707
    7. ' ' → logprob: -14.62535285949707
    8. '  ' → logprob: -14.75035285949707
    9. '	p' → logprob: -15.75035285949707
    10. '    
' → logprob: -16.00035285949707

Token 417: 'icher' (ID: 13617)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01804586686193943
    2. '(' → logprob: -4.143045902252197
    3. 'icher' → logprob: -6.643045902252197
    4. '(p' → logprob: -8.143045425415039
    5. 'ich' → logprob: -8.893045425415039
    6. 'iche' → logprob: -9.018045425415039
    7. '(k' → logprob: -9.268045425415039
    8. '((' → logprob: -10.643045425415039
    9. 'ichage' → logprob: -11.893045425415039
    10. 'i' → logprob: -12.143045425415039

Token 418: ' deux' (ID: 10301)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0442664660513401
    2. '(i' → logprob: -3.66926646232605
    3. ' i' → logprob: -4.044266700744629
    4. '   ' → logprob: -9.044266700744629
    5. '(' → logprob: -10.169266700744629
    6. ' (' → logprob: -10.419266700744629
    7. 'p' → logprob: -10.544266700744629
    8. ' ' → logprob: -10.794266700744629
    9. 'k' → logprob: -10.919266700744629
    10. '1' → logprob: -11.169266700744629

Token 419: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1168992817401886
    2. '(i' → logprob: -2.366899251937866
    3. ' i' → logprob: -4.116899490356445
    4. '(' → logprob: -8.491899490356445
    5. 'k' → logprob: -11.366899490356445
    6. ' ' → logprob: -11.366899490356445
    7. '(k' → logprob: -11.741899490356445
    8. ' (' → logprob: -12.241899490356445
    9. ',' → logprob: -12.366899490356445
    10. '<|end|>' → logprob: -13.116899490356445

Token 420: 'iers' (ID: 11012)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5552406311035156
    2. 'i' → logprob: -0.9302406311035156
    3. 'k' → logprob: -4.555240631103516
    4. '(k' → logprob: -4.555240631103516
    5. ' i' → logprob: -4.805240631103516
    6. 'iers' → logprob: -7.680240631103516
    7. '   ' → logprob: -7.930240631103516
    8. '(' → logprob: -8.055240631103516
    9. ' (' → logprob: -8.430240631103516
    10. 'er' → logprob: -8.555240631103516

Token 421: ' cons' (ID: 1473)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.48342013359069824
    2. 'i' → logprob: -1.1084201335906982
    3. '   ' → logprob: -3.4834201335906982
    4. '(k' → logprob: -4.483420372009277
    5. 'k' → logprob: -5.108420372009277
    6. ' i' → logprob: -5.983420372009277
    7. '(' → logprob: -6.233420372009277
    8. ',' → logprob: -8.483420372009277
    9. ' (' → logprob: -9.108420372009277
    10. 'p' → logprob: -9.608420372009277

Token 422: 'écut' (ID: 96392)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3319745659828186
    2. 'i' → logprob: -2.081974506378174
    3. ' i' → logprob: -2.706974506378174
    4. '   ' → logprob: -3.081974506378174
    5. ' (' → logprob: -3.706974506378174
    6. '(' → logprob: -4.456974506378174
    7. ',' → logprob: -6.081974506378174
    8. 'k' → logprob: -6.331974506378174
    9. 'r' → logprob: -6.956974506378174
    10. '(k' → logprob: -7.331974506378174

Token 423: 'ifs' (ID: 14119)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0017928705783560872
    2. 'i' → logprob: -6.626792907714844
    3. '(' → logprob: -8.001792907714844
    4. '   ' → logprob: -10.126792907714844
    5. '(k' → logprob: -10.251792907714844
    6. ',i' → logprob: -11.251792907714844
    7. '(p' → logprob: -11.376792907714844
    8. ' i' → logprob: -11.376792907714844
    9. ',' → logprob: -11.626792907714844
    10. ' (' → logprob: -12.751792907714844

Token 424: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3288608491420746
    2. '(i' → logprob: -1.328860878944397
    3. 'p' → logprob: -4.953860759735107
    4. '   ' → logprob: -5.078860759735107
    5. ' i' → logprob: -6.578860759735107
    6. '(' → logprob: -8.078861236572266
    7. '(p' → logprob: -8.203861236572266
    8. 'k' → logprob: -9.453861236572266
    9. '(k' → logprob: -9.828861236572266
    10. ' (' → logprob: -10.078861236572266

Token 425: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40628916025161743
    2. '(i' → logprob: -1.5312891006469727
    3. '+' → logprob: -3.4062891006469727
    4. '(' → logprob: -3.5312891006469727
    5. 'i' → logprob: -3.7812891006469727
    6. ' ,' → logprob: -4.156289100646973
    7. '   ' → logprob: -4.781289100646973
    8. ' i' → logprob: -5.406289100646973
    9. ',i' → logprob: -6.156289100646973
    10. ' +' → logprob: -7.656289100646973

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. 'k' → logprob: -9.50015926361084
    3. '2' → logprob: -9.75015926361084
    4. ' ' → logprob: -10.62515926361084
    5. 'i' → logprob: -14.75015926361084
    6. '   ' → logprob: -14.75015926361084
    7. '(' → logprob: -15.37515926361084
    8. '3' → logprob: -15.62515926361084
    9. '+' → logprob: -16.125158309936523
    10. ' k' → logprob: -16.375158309936523

Token 427: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039388868026435375
    2. 'p' → logprob: -6.378938674926758
    3. '   ' → logprob: -7.003938674926758
    4. ',p' → logprob: -7.003938674926758
    5. ',i' → logprob: -8.628938674926758
    6. ' ,' → logprob: -8.878938674926758
    7. '(i' → logprob: -10.503938674926758
    8. '(' → logprob: -10.628938674926758
    9. '(p' → logprob: -10.878938674926758
    10. ' p' → logprob: -11.253938674926758

Token 428: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014177612029016018
    2. ' i' → logprob: -4.2641777992248535
    3. '   ' → logprob: -12.139177322387695
    4. ' ' → logprob: -12.389177322387695
    5. '(i' → logprob: -13.139177322387695
    6. '(' → logprob: -13.514177322387695
    7. ' (' → logprob: -14.889177322387695
    8. '	i' → logprob: -15.389177322387695
    9. '  ' → logprob: -15.764177322387695
    10. '    ' → logprob: -15.889177322387695

Token 429: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013233344070613384
    2. ' +' → logprob: -6.751323223114014
    3. ',' → logprob: -9.626323699951172
    4. '   ' → logprob: -10.126323699951172
    5. '+i' → logprob: -11.501323699951172
    6. '+,' → logprob: -12.001323699951172
    7. '(' → logprob: -12.126323699951172
    8. '```' → logprob: -12.126323699951172
    9. '1' → logprob: -12.251323699951172
    10. '()+' → logprob: -12.876323699951172

Token 430: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012582694762386382
    2. ' ' → logprob: -9.000125885009766
    3. '1' → logprob: -13.125125885009766
    4. '  ' → logprob: -15.750125885009766
    5. '3' → logprob: -15.875125885009766
    6. '```' → logprob: -16.750125885009766
    7. '   ' → logprob: -17.062625885009766
    8. '২' → logprob: -18.062625885009766
    9. '.' → logprob: -18.187625885009766
    10. '۲' → logprob: -18.375125885009766

Token 431: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015253240242600441
    2. '(p' → logprob: -4.390253067016602
    3. ':' → logprob: -7.265253067016602
    4. ',' → logprob: -7.390253067016602
    5. 'p' → logprob: -8.265253067016602
    6. ':
' → logprob: -8.265253067016602
    7. '(' → logprob: -8.390253067016602
    8. ' p' → logprob: -8.890253067016602
    9. '):
' → logprob: -8.890253067016602
    10. ')' → logprob: -9.515253067016602

Token 432: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05914032831788063
    2. '):' → logprob: -3.43414044380188
    3. '):
' → logprob: -3.93414044380188
    4. ')
' → logprob: -5.559140205383301
    5. ',' → logprob: -7.184140205383301
    6. ')p' → logprob: -8.6841402053833
    7. 'i' → logprob: -8.8091402053833
    8. 'p' → logprob: -8.8091402053833
    9. ')i' → logprob: -8.9341402053833
    10. '(i' → logprob: -9.1841402053833

Token 433: 'ce' (ID: 400)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07121092081069946
    2. ')' → logprob: -3.1962108612060547
    3. ' p' → logprob: -4.196210861206055
    4. ')p' → logprob: -6.196210861206055
    5. '```' → logprob: -6.196210861206055
    6. 'i' → logprob: -6.321210861206055
    7. '(p' → logprob: -6.321210861206055
    8. '   ' → logprob: -6.821210861206055
    9. '`)' → logprob: -7.696210861206055
    10. '(' → logprob: -7.821210861206055

Token 434: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06687067449092865
    2. ' )' → logprob: -3.69187068939209
    3. ',' → logprob: -4.06687068939209
    4. ' p' → logprob: -4.69187068939209
    5. ' i' → logprob: -5.56687068939209
    6. ' k' → logprob: -6.31687068939209
    7. ' ,' → logprob: -6.44187068939209
    8. ' ' → logprob: -6.94187068939209
    9. '   ' → logprob: -7.44187068939209
    10. '(p' → logprob: -7.56687068939209

Token 435: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15944740176200867
    2. ' i' → logprob: -2.034447431564331
    3. 'p' → logprob: -4.534447193145752
    4. ' p' → logprob: -5.909447193145752
    5. 'k' → logprob: -7.034447193145752
    6. ')' → logprob: -7.284447193145752
    7. '   ' → logprob: -7.659447193145752
    8. ' ' → logprob: -8.03444766998291
    9. ' k' → logprob: -9.03444766998291
    10. ' )' → logprob: -9.28444766998291

Token 436: ' commence' (ID: 44755)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3359529674053192
    2. '(i' → logprob: -1.3359529972076416
    3. '(' → logprob: -4.3359527587890625
    4. '(n' → logprob: -4.9609527587890625
    5. ')' → logprob: -6.7109527587890625
    6. '(len' → logprob: -7.9609527587890625
    7. 'start' → logprob: -8.960952758789062
    8. '(start' → logprob: -9.210952758789062
    9. ' )' → logprob: -9.710952758789062
    10. 's' → logprob: -10.085952758789062

Token 437: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4016723334789276
    2. 'at' → logprob: -1.65167236328125
    3. '(i' → logprob: -2.52667236328125
    4. 'à' → logprob: -3.65167236328125
    5. 'from' → logprob: -4.52667236328125
    6. '0' → logprob: -4.77667236328125
    7. 'i' → logprob: -5.02667236328125
    8. ' at' → logprob: -5.65167236328125
    9. '=' → logprob: -6.40167236328125
    10. ' à' → logprob: -7.27667236328125

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013274075172375888
    2. ' ' → logprob: -9.50013256072998
    3. '1' → logprob: -10.37513256072998
    4. 'i' → logprob: -10.62513256072998
    5. ' i' → logprob: -13.25013256072998
    6. '   ' → logprob: -15.75013256072998
    7. '```' → logprob: -16.125133514404297
    8. 'zero' → logprob: -16.937633514404297
    9. '=' → logprob: -17.187633514404297
    10. ' zéro' → logprob: -17.187633514404297

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018397385254502296
    2. '1' → logprob: -4.018397331237793
    3. 'i' → logprob: -8.643397331237793
    4. ' ' → logprob: -9.643397331237793
    5. ' i' → logprob: -12.643397331237793
    6. '```' → logprob: -13.768397331237793
    7. '   ' → logprob: -14.268397331237793
    8. ')' → logprob: -14.893397331237793
    9. '(i' → logprob: -15.643397331237793
    10. '  ' → logprob: -16.20589828491211

Token 440: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2673737704753876
    2. '):' → logprob: -1.51737380027771
    3. ',' → logprob: -4.767373561859131
    4. '):
' → logprob: -5.517373561859131
    5. '+' → logprob: -7.017373561859131
    6. '   ' → logprob: -7.142373561859131
    7. ' )' → logprob: -8.142374038696289
    8. '```' → logprob: -9.017374038696289
    9. ' ):' → logprob: -9.017374038696289
    10. ')
' → logprob: -9.142374038696289

Token 441: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08569079637527466
    2. ' )' → logprob: -3.58569073677063
    3. ' p' → logprob: -4.085690975189209
    4. 'p' → logprob: -4.585690975189209
    5. '   ' → logprob: -4.960690975189209
    6. ' i' → logprob: -5.335690975189209
    7. 'i' → logprob: -5.460690975189209
    8. '):
' → logprob: -6.210690975189209
    9. ' ,' → logprob: -6.335690975189209
    10. ',' → logprob: -6.460690975189209

Token 442: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2590808868408203
    2. ' i' → logprob: -1.5090808868408203
    3. ')' → logprob: -5.13408088684082
    4. ' )' → logprob: -8.13408088684082
    5. ' ' → logprob: -8.63408088684082
    6. '1' → logprob: -8.75908088684082
    7. 'p' → logprob: -9.13408088684082
    8. ' p' → logprob: -9.25908088684082
    9. '(i' → logprob: -9.63408088684082
    10. '   ' → logprob: -9.75908088684082

Token 443: ' ajoute' (ID: 91611)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4037502408027649
    2. ' p' → logprob: -1.5287501811981201
    3. '+' → logprob: -3.52875018119812
    4. 'i' → logprob: -3.90375018119812
    5. 'aff' → logprob: -4.028750419616699
    6. ' affiche' → logprob: -4.653750419616699
    7. ' ajoute' → logprob: -5.028750419616699
    8. 'print' → logprob: -5.153750419616699
    9. ')' → logprob: -5.153750419616699
    10. 'a' → logprob: -5.528750419616699

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016117537394165993
    2. ' ' → logprob: -4.141117572784424
    3. ' i' → logprob: -9.891117095947266
    4. 'i' → logprob: -10.766117095947266
    5. ')' → logprob: -12.141117095947266
    6. '(i' → logprob: -13.141117095947266
    7. ' )' → logprob: -13.266117095947266
    8. '```' → logprob: -14.516117095947266
    9. '   ' → logprob: -14.766117095947266
    10. ' +' → logprob: -15.016117095947266

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047214110963977873
    2. ' ' → logprob: -8.000472068786621
    3. 'i' → logprob: -9.125472068786621
    4. ' i' → logprob: -11.125472068786621
    5. '(i' → logprob: -11.875472068786621
    6. ')' → logprob: -13.375472068786621
    7. '```' → logprob: -13.500472068786621
    8. '   ' → logprob: -13.875472068786621
    9. '2' → logprob: -14.000472068786621
    10. '(' → logprob: -14.250472068786621

Token 446: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07884594053030014
    2. ',' → logprob: -2.703845977783203
    3. '):' → logprob: -5.328845977783203
    4. ' )' → logprob: -6.203845977783203
    5. '   ' → logprob: -7.328845977783203
    6. ' ,' → logprob: -7.703845977783203
    7. '):
' → logprob: -8.453845977783203
    8. '+' → logprob: -8.578845977783203
    9. '),' → logprob: -9.578845977783203
    10. ')
' → logprob: -9.578845977783203

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016847586259245872
    2. 'p' → logprob: -4.391847610473633
    3. ' p' → logprob: -6.141847610473633
    4. '(p' → logprob: -6.766847610473633
    5. '):
' → logprob: -8.516847610473633
    6. '(' → logprob: -8.766847610473633
    7. ',' → logprob: -8.766847610473633
    8. ')' → logprob: -8.891847610473633
    9. '):' → logprob: -9.391847610473633
    10. ':' → logprob: -9.516847610473633

Token 448: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.01219432894140482
    2. ' p' → logprob: -4.8871941566467285
    3. '   ' → logprob: -5.3871941566467285
    4. '	p' → logprob: -14.262194633483887
    5. '       ' → logprob: -14.262194633483887
    6. ' ' → logprob: -14.387194633483887
    7. '```' → logprob: -14.637194633483887
    8. '  ' → logprob: -15.137194633483887
    9. '(p' → logprob: -15.262194633483887
    10. '    ' → logprob: -17.01219367980957

Token 449: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.375001907348633
    3. 'i' → logprob: -14.250001907348633
    4. ' (' → logprob: -17.875001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '((' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.750001907348633
    9. '{i' → logprob: -21.000001907348633
    10. ' i' → logprob: -21.375001907348633

Token 450: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029759511351585388
    2. ' +' → logprob: -3.529759407043457
    3. '1' → logprob: -12.904759407043457
    4. '()+' → logprob: -13.279759407043457
    5. ',' → logprob: -13.404759407043457
    6. ' ' → logprob: -13.654759407043457
    7. '+i' → logprob: -14.654759407043457
    8. '   ' → logprob: -15.029759407043457
    9. '+,' → logprob: -15.029759407043457
    10. '  ' → logprob: -15.404759407043457

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. '  ' → logprob: -16.750019073486328
    5. '2' → logprob: -18.250019073486328
    6. '<|end|>' → logprob: -18.812519073486328
    7. '```' → logprob: -19.125019073486328
    8. '１' → logprob: -19.250019073486328
    9. '۱' → logprob: -19.375019073486328
    10. '    ' → logprob: -19.625019073486328

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -14.500000953674316
    4. '   ' → logprob: -18.250001907348633
    5. '  ' → logprob: -19.062501907348633
    6. '<|end|>' → logprob: -19.250001907348633
    7. '```' → logprob: -19.562501907348633
    8. '۱' → logprob: -19.750001907348633
    9. '১' → logprob: -20.375001907348633
    10. '१' → logprob: -20.437501907348633

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004971051122993231
    2. ',i' → logprob: -6.129971027374268
    3. 'i' → logprob: -6.254971027374268
    4. ' ,' → logprob: -7.129971027374268
    5. ',
' → logprob: -10.379971504211426
    6. '   ' → logprob: -11.504971504211426
    7. ' i' → logprob: -11.879971504211426
    8. '(i' → logprob: -12.379971504211426
    9. ' ' → logprob: -13.004971504211426
    10. ')' → logprob: -13.754971504211426

Token 454: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001709805685095489
    2. ' i' → logprob: -6.376709938049316
    3. '   ' → logprob: -12.001709938049316
    4. ' ' → logprob: -14.001709938049316
    5. '	i' → logprob: -14.626709938049316
    6. '(i' → logprob: -16.251708984375
    7. '  ' → logprob: -16.501708984375
    8. '    ' → logprob: -17.126708984375
    9. ')' → logprob: -18.001708984375
    10. ')i' → logprob: -18.251708984375

Token 455: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06250064820051193
    2. ' +' → logprob: -2.8125007152557373
    3. '2' → logprob: -7.562500476837158
    4. ' ' → logprob: -12.562500953674316
    5. ')' → logprob: -13.562500953674316
    6. '1' → logprob: -13.687500953674316
    7. ' +
' → logprob: -13.812500953674316
    8. 's' → logprob: -14.062500953674316
    9. ' plus' → logprob: -14.187500953674316
    10. '[' → logprob: -14.312500953674316

Token 456: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014168102643452585
    2. ' ' → logprob: -8.875142097473145
    3. '1' → logprob: -13.625142097473145
    4. '```' → logprob: -15.750142097473145
    5. ')' → logprob: -15.937642097473145
    6. '   ' → logprob: -16.562641143798828
    7. '<|end|>' → logprob: -16.812641143798828
    8. '  ' → logprob: -17.000141143798828
    9. '۲' → logprob: -17.187641143798828
    10. '২' → logprob: -18.000141143798828

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.875031471252441
    4. '```' → logprob: -16.312532424926758
    5. ')' → logprob: -16.500032424926758
    6. '۲' → logprob: -16.875032424926758
    7. '+' → logprob: -17.625032424926758
    8. '   ' → logprob: -18.250032424926758
    9. '  ' → logprob: -18.500032424926758
    10. '２' → logprob: -18.625032424926758

Token 458: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. ')
' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.500020980834961
    4. ' )' → logprob: -15.250020980834961
    5. ')
' → logprob: -16.75002098083496
    6. ')

' → logprob: -17.12502098083496
    7. '),' → logprob: -17.50002098083496
    8. '")' → logprob: -17.50002098083496
    9. '))' → logprob: -18.12502098083496
    10. '')' → logprob: -18.25002098083496

Token 459: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4617256056226324e-05
    2. 'for' → logprob: -11.250014305114746
    3. ' p' → logprob: -13.750014305114746
    4. 'if' → logprob: -15.625014305114746
    5. '#' → logprob: -15.875014305114746
    6. '   ' → logprob: -16.500015258789062
    7. '```' → logprob: -17.250015258789062
    8. 'k' → logprob: -17.375015258789062
    9. ' ' → logprob: -17.625015258789062
    10. '  
' → logprob: -17.875015258789062

Token 460: ' Connect' (ID: 16834)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00037371189682744443
    2. '#' → logprob: -8.125373840332031
    3. 'for' → logprob: -9.625373840332031
    4. 'print' → logprob: -11.500373840332031
    5. '   ' → logprob: -14.375373840332031
    6. ' p' → logprob: -15.125373840332031
    7. 'if' → logprob: -15.250373840332031
    8. 'k' → logprob: -15.375373840332031
    9. ' ' → logprob: -16.37537384033203
    10. '```' → logprob: -17.00037384033203

Token 461: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0031979158520698547
    2. 'ion' → logprob: -6.128198146820068
    3. 'ant' → logprob: -7.628198146820068
    4. 'ing' → logprob: -8.50319766998291
    5. '#' → logprob: -9.00319766998291
    6. 'ions' → logprob: -9.75319766998291
    7. 'p' → logprob: -10.37819766998291
    8. 'e' → logprob: -11.12819766998291
    9. 'i' → logprob: -11.25319766998291
    10. 'for' → logprob: -11.50319766998291

Token 462: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7642434239387512
    2. '(k' → logprob: -0.7642434239387512
    3. 'p' → logprob: -2.7642433643341064
    4. '(' → logprob: -6.0142436027526855
    5. ' k' → logprob: -6.6392436027526855
    6. '(p' → logprob: -6.7642436027526855
    7. '0' → logprob: -8.014243125915527
    8. '1' → logprob: -9.014243125915527
    9. ' p' → logprob: -9.139243125915527
    10. ' (' → logprob: -10.264243125915527

Token 463: ' sommet' (ID: 130502)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0027128576766699553
    2. '0' → logprob: -6.502712726593018
    3. 'p' → logprob: -7.377712726593018
    4. ' k' → logprob: -8.002713203430176
    5. '(k' → logprob: -8.877713203430176
    6. '1' → logprob: -10.002713203430176
    7. 'r' → logprob: -10.627713203430176
    8. 'i' → logprob: -10.752713203430176
    9. ' ' → logprob: -11.627713203430176
    10. '2' → logprob: -12.877713203430176

Token 464: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5800122618675232
    2. 'k' → logprob: -0.9550122618675232
    3. '(' → logprob: -3.455012321472168
    4. 'p' → logprob: -4.080012321472168
    5. '(p' → logprob: -5.705012321472168
    6. '0' → logprob: -6.205012321472168
    7. '1' → logprob: -7.830012321472168
    8. ' k' → logprob: -7.830012321472168
    9. ' (' → logprob: -8.705012321472168
    10. ',' → logprob: -8.830012321472168

Token 465: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33318284153938293
    2. 'p' → logprob: -1.9581828117370605
    3. '(k' → logprob: -2.4581828117370605
    4. 'k' → logprob: -3.2081828117370605
    5. ',k' → logprob: -5.2081828117370605
    6. '(' → logprob: -5.4581828117370605
    7. ' ,' → logprob: -6.0831828117370605
    8. '+' → logprob: -6.7081828117370605
    9. ' p' → logprob: -7.2081828117370605
    10. '-' → logprob: -7.5831828117370605

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11340348422527313
    2. '2' → logprob: -2.238403558731079
    3. ' ' → logprob: -7.4884033203125
    4. '3' → logprob: -11.7384033203125
    5. '   ' → logprob: -11.9884033203125
    6. 'k' → logprob: -12.3634033203125
    7. ',' → logprob: -14.6134033203125
    8. '  ' → logprob: -14.7384033203125
    9. ' k' → logprob: -15.2384033203125
    10. '(k' → logprob: -15.2384033203125

Token 467: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02718900330364704
    2. '+' → logprob: -4.652188777923584
    3. ',k' → logprob: -5.277188777923584
    4. ' +' → logprob: -5.527188777923584
    5. ' ,' → logprob: -6.027188777923584
    6. 'k' → logprob: -6.402188777923584
    7. 'p' → logprob: -6.527188777923584
    8. '(k' → logprob: -7.277188777923584
    9. ' k' → logprob: -7.527188777923584
    10. '(' → logprob: -8.277189254760742

Token 468: 'c' (ID: 66)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5846887230873108
    2. 'k' → logprob: -0.8346887230873108
    3. ' ,' → logprob: -5.334688663482666
    4. ' k' → logprob: -5.709688663482666
    5. ',k' → logprob: -7.834688663482666
    6. 'p' → logprob: -9.584689140319824
    7. ')' → logprob: -10.209689140319824
    8. '1' → logprob: -11.209689140319824
    9. '+' → logprob: -11.209689140319824
    10. 'i' → logprob: -11.334689140319824

Token 469: ''est' (ID: 6616)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5430393218994141
    2. '+' → logprob: -0.9180393218994141
    3. ' ,' → logprob: -5.293039321899414
    4. '+,' → logprob: -5.418039321899414
    5. '1' → logprob: -5.543039321899414
    6. ' +' → logprob: -6.043039321899414
    7. ' k' → logprob: -6.293039321899414
    8. 'k' → logprob: -6.668039321899414
    9. '+k' → logprob: -8.543039321899414
    10. ',k' → logprob: -8.793039321899414

Token 470: '-à' (ID: 56297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13334815204143524
    2. ' k' → logprob: -2.258348226547241
    3. ',' → logprob: -4.633347988128662
    4. ' ,' → logprob: -4.883347988128662
    5. ')' → logprob: -7.133347988128662
    6. '(k' → logprob: -7.508347988128662
    7. ',k' → logprob: -7.633347988128662
    8. 'i' → logprob: -8.38334846496582
    9. ' )' → logprob: -9.38334846496582
    10. ' à' → logprob: -9.38334846496582

Token 471: '-dire' (ID: 76064)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.032221633940935135
    2. 'i' → logprob: -3.907221555709839
    3. 'l' → logprob: -5.782221794128418
    4. '-à' → logprob: -5.907221794128418
    5. '1' → logprob: -6.032221794128418
    6. 'p' → logprob: -7.032221794128418
    7. '-k' → logprob: -7.032221794128418
    8. 'la' → logprob: -7.782221794128418
    9. '-i' → logprob: -8.532221794128418
    10. 'not' → logprob: -8.907221794128418

Token 472: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008630284108221531
    2. ' k' → logprob: -4.758630275726318
    3. ')' → logprob: -12.633630752563477
    4. '(k' → logprob: -13.008630752563477
    5. 'i' → logprob: -13.133630752563477
    6. 'p' → logprob: -13.258630752563477
    7. ',' → logprob: -13.383630752563477
    8. ' ' → logprob: -13.633630752563477
    9. '   ' → logprob: -14.258630752563477
    10. ' ' → logprob: -14.633630752563477

Token 473: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004170052707195282
    2. ' k' → logprob: -5.504169940948486
    3. 'p' → logprob: -10.004170417785645
    4. '(k' → logprob: -10.504170417785645
    5. 'i' → logprob: -11.629170417785645
    6. ' p' → logprob: -13.254170417785645
    7. ')' → logprob: -13.504170417785645
    8. ' (' → logprob: -13.754170417785645
    9. '0' → logprob: -13.754170417785645
    10. '`' → logprob: -14.254170417785645

Token 474: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.1054253011243418e-05
    2. ' k' → logprob: -11.000020980834961
    3. 'i' → logprob: -12.625020980834961
    4. '(k' → logprob: -15.250020980834961
    5. ')' → logprob: -15.375020980834961
    6. '`' → logprob: -16.00002098083496
    7. 'p' → logprob: -16.00002098083496
    8. '   ' → logprob: -16.50002098083496
    9. '```' → logprob: -17.00002098083496
    10. '	k' → logprob: -17.12502098083496

Token 475: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.253842294216156
    2. '-' → logprob: -1.5038423538208008
    3. ')' → logprob: -7.003842353820801
    4. ' ' → logprob: -7.503842353820801
    5. '   ' → logprob: -8.7538423538208
    6. ',' → logprob: -8.8788423538208
    7. ' +' → logprob: -10.3788423538208
    8. '  ' → logprob: -10.6288423538208
    9. ' ,' → logprob: -10.6288423538208
    10. '+' → logprob: -10.7538423538208

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022482690401375294
    2. '2' → logprob: -6.627248287200928
    3. ' ' → logprob: -7.002248287200928
    4. ')' → logprob: -12.37724781036377
    5. '   ' → logprob: -13.12724781036377
    6. 'k' → logprob: -13.62724781036377
    7. '```' → logprob: -13.75224781036377
    8. '  ' → logprob: -14.25224781036377
    9. '-' → logprob: -14.50224781036377
    10. '<|end|>' → logprob: -14.62724781036377

Token 477: ')-' (ID: 14080)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5776142477989197
    2. '+' → logprob: -0.9526142477989197
    3. ')' → logprob: -4.0776143074035645
    4. ',' → logprob: -4.4526143074035645
    5. '-' → logprob: -4.8276143074035645
    6. ' -' → logprob: -4.9526143074035645
    7. ' ' → logprob: -5.2026143074035645
    8. ' ,' → logprob: -6.2026143074035645
    9. ')+' → logprob: -6.4526143074035645
    10. ' plus' → logprob: -10.077613830566406

Token 478: 'ième' (ID: 41126)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1857873499393463
    2. 'th' → logprob: -2.5607874393463135
    3. ',' → logprob: -3.6857874393463135
    4. 'i' → logprob: -4.060787200927734
    5. '2' → logprob: -4.310787200927734
    6. 'k' → logprob: -4.435787200927734
    7. ' ' → logprob: -4.810787200927734
    8. 'plus' → logprob: -4.935787200927734
    9. 'ième' → logprob: -6.560787200927734
    10. '+' → logprob: -6.560787200927734

Token 479: ' sommet' (ID: 130502)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38491079211235046
    2. ' sommet' → logprob: -1.5099108219146729
    3. ')' → logprob: -4.009910583496094
    4. 'et' → logprob: -4.259910583496094
    5. ' ,' → logprob: -4.509910583496094
    6. ' node' → logprob: -4.884910583496094
    7. 'som' → logprob: -5.134910583496094
    8. 'n' → logprob: -5.134910583496094
    9. 'node' → logprob: -5.259910583496094
    10. ' n' → logprob: -5.509910583496094

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008229795843362808
    2. ' ,' → logprob: -5.883229732513428
    3. ',k' → logprob: -6.008229732513428
    4. '+' → logprob: -6.633229732513428
    5. ')' → logprob: -7.133229732513428
    6. 'k' → logprob: -7.633229732513428
    7. ' +' → logprob: -9.133230209350586
    8. ' k' → logprob: -9.258230209350586
    9. '+k' → logprob: -10.008230209350586
    10. 'et' → logprob: -11.133230209350586

Token 481: ' vu' (ID: 12005)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1834499090909958
    2. ' k' → logprob: -1.8084498643875122
    3. 'p' → logprob: -6.808449745178223
    4. 'i' → logprob: -7.308449745178223
    5. ' p' → logprob: -7.308449745178223
    6. ' i' → logprob: -7.433449745178223
    7. ')' → logprob: -8.183449745178223
    8. ',' → logprob: -9.058449745178223
    9. '"' → logprob: -9.433449745178223
    10. ' ' → logprob: -10.433449745178223

Token 482: ' qu' (ID: 474)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9838257431983948
    2. 'k' → logprob: -1.10882568359375
    3. ')' → logprob: -1.48382568359375
    4. '(k' → logprob: -3.85882568359375
    5. ' comme' → logprob: -5.23382568359375
    6. '<|end|>' → logprob: -5.23382568359375
    7. 'comme' → logprob: -5.23382568359375
    8. ',' → logprob: -5.48382568359375
    9. ' )' → logprob: -5.60882568359375
    10. 'le' → logprob: -5.73382568359375

Token 483: ''on' (ID: 25812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07245395332574844
    2. ')' → logprob: -3.5724539756774902
    3. '0' → logprob: -3.8224539756774902
    4. 'i' → logprob: -4.69745397567749
    5. ' k' → logprob: -5.32245397567749
    6. 'le' → logprob: -6.32245397567749
    7. 'l' → logprob: -7.44745397567749
    8. 'r' → logprob: -7.44745397567749
    9. 'la' → logprob: -7.69745397567749
    10. 'range' → logprob: -8.072453498840332

Token 484: ' part' (ID: 997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.665242612361908
    2. '+' → logprob: -2.0402426719665527
    3. 'n' → logprob: -2.9152426719665527
    4. ' part' → logprob: -3.6652426719665527
    5. ' n' → logprob: -3.7902426719665527
    6. 'range' → logprob: -3.7902426719665527
    7. 'k' → logprob: -3.9152426719665527
    8. 'p' → logprob: -3.9152426719665527
    9. 'a' → logprob: -4.040242671966553
    10. 'part' → logprob: -4.165242671966553

Token 485: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.006267785560339689
    2. ' de' → logprob: -5.506267547607422
    3. 'from' → logprob: -6.381267547607422
    4. 'du' → logprob: -8.006267547607422
    5. 'd' → logprob: -9.381267547607422
    6. 'k' → logprob: -10.506267547607422
    7. ')' → logprob: -11.256267547607422
    8. '   ' → logprob: -11.256267547607422
    9. '```' → logprob: -11.881267547607422
    10. ' du' → logprob: -12.131267547607422

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042629607021808624
    2. 'k' → logprob: -3.5426297187805176
    3. '1' → logprob: -4.792629718780518
    4. 'i' → logprob: -6.042629718780518
    5. ' ' → logprob: -6.542629718780518
    6. ' k' → logprob: -7.917629718780518
    7. ')' → logprob: -9.91762924194336
    8. '```' → logprob: -9.91762924194336
    9. 'index' → logprob: -10.04262924194336
    10. ' i' → logprob: -10.29262924194336

Token 487: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03283495083451271
    2. ' k' → logprob: -4.157835006713867
    3. 'i' → logprob: -5.157835006713867
    4. '0' → logprob: -5.282835006713867
    5. '1' → logprob: -5.282835006713867
    6. ' i' → logprob: -8.407835006713867
    7. ' ' → logprob: -8.907835006713867
    8. '(k' → logprob: -9.032835006713867
    9. '```' → logprob: -9.407835006713867
    10. ')' → logprob: -9.532835006713867

Token 488: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04294312745332718
    2. '+' → logprob: -3.542943239212036
    3. ' ,' → logprob: -4.917943000793457
    4. ',k' → logprob: -5.917943000793457
    5. ' +' → logprob: -6.167943000793457
    6. '+k' → logprob: -8.042943000793457
    7. ')' → logprob: -8.167943000793457
    8. 'k' → logprob: -8.542943000793457
    9. ' k' → logprob: -9.292943000793457
    10. '(k' → logprob: -10.167943000793457

Token 489: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11181586980819702
    2. 'p' → logprob: -3.111815929412842
    3. 'k' → logprob: -3.861815929412842
    4. '(k' → logprob: -3.861815929412842
    5. ',k' → logprob: -4.111815929412842
    6. ' ,' → logprob: -6.236815929412842
    7. '(' → logprob: -7.986815929412842
    8. ',p' → logprob: -8.736815452575684
    9. ')' → logprob: -9.236815452575684
    10. '   ' → logprob: -9.861815452575684

Token 490: ' sommet' (ID: 130502)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0025203691329807043
    2. '(k' → logprob: -6.377520561218262
    3. 'p' → logprob: -7.877520561218262
    4. ' k' → logprob: -8.002520561218262
    5. '(' → logprob: -9.877520561218262
    6. 'n' → logprob: -10.752520561218262
    7. 'i' → logprob: -11.002520561218262
    8. ' (' → logprob: -12.627520561218262
    9. '(i' → logprob: -13.252520561218262
    10. '2' → logprob: -13.627520561218262

Token 491: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012013656087219715
    2. 'n' → logprob: -4.7620134353637695
    3. '(k' → logprob: -6.0120134353637695
    4. ' k' → logprob: -8.01201343536377
    5. '(' → logprob: -8.26201343536377
    6. '(n' → logprob: -8.88701343536377
    7. 'i' → logprob: -9.38701343536377
    8. '1' → logprob: -10.26201343536377
    9. ' n' → logprob: -10.51201343536377
    10. 'p' → logprob: -10.51201343536377

Token 492: '+' (ID: 10)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.015847599133849144
    2. ',' → logprob: -4.640847682952881
    3. 'p' → logprob: -5.765847682952881
    4. ',k' → logprob: -7.015847682952881
    5. '(p' → logprob: -7.015847682952881
    6. '(' → logprob: -7.515847682952881
    7. 'k' → logprob: -7.640847682952881
    8. '(n' → logprob: -9.515847206115723
    9. ',p' → logprob: -11.515847206115723
    10. ' (' → logprob: -11.640847206115723

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014859484508633614
    2. ' ' → logprob: -9.50014877319336
    3. 'k' → logprob: -9.75014877319336
    4. '2' → logprob: -11.50014877319336
    5. '(' → logprob: -12.87514877319336
    6. '(k' → logprob: -14.12514877319336
    7. '0' → logprob: -15.12514877319336
    8. '   ' → logprob: -15.25014877319336
    9. '<|end|>' → logprob: -15.25014877319336
    10. '...' → logprob: -15.50014877319336

Token 494: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013569220900535583
    2. '(k' → logprob: -4.388569355010986
    3. ',' → logprob: -7.263569355010986
    4. '(' → logprob: -9.013568878173828
    5. '(p' → logprob: -9.263568878173828
    6. '   ' → logprob: -10.013568878173828
    7. '(i' → logprob: -10.388568878173828
    8. ' p' → logprob: -10.888568878173828
    9. ' (' → logprob: -11.513568878173828
    10. 'k' → logprob: -11.513568878173828

Token 495: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00016885579680092633
    2. 'k' → logprob: -9.750168800354004
    3. '(p' → logprob: -9.875168800354004
    4. '(k' → logprob: -10.000168800354004
    5. '(' → logprob: -11.875168800354004
    6. ' p' → logprob: -12.125168800354004
    7. '<|end|>' → logprob: -14.500168800354004
    8. ' (' → logprob: -15.250168800354004
    9. '```' → logprob: -15.750168800354004
    10. '()' → logprob: -15.875168800354004

Token 496: ' Cela' (ID: 44403)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005831766175106168
    2. '(k' → logprob: -7.625583171844482
    3. ' p' → logprob: -9.75058364868164
    4. '(' → logprob: -10.87558364868164
    5. '(p' → logprob: -11.25058364868164
    6. 'k' → logprob: -13.00058364868164
    7. ' (' → logprob: -14.50058364868164
    8. ')' → logprob: -14.62558364868164
    9. ',' → logprob: -14.87558364868164
    10. '(n' → logprob: -14.87558364868164

Token 497: ' fait' (ID: 7473)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.37677040696144104
    2. ',' → logprob: -1.6267703771591187
    3. ' p' → logprob: -2.501770496368408
    4. ')' → logprob: -3.751770496368408
    5. ',p' → logprob: -5.501770496368408
    6. '<|end|>' → logprob: -5.751770496368408
    7. ' ,' → logprob: -6.501770496368408
    8. ')
' → logprob: -7.751770496368408
    9. '(p' → logprob: -7.751770496368408
    10. '+' → logprob: -7.876770496368408

Token 498: ' un' (ID: 537)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00018506382184568793
    2. ' p' → logprob: -8.625185012817383
    3. 'k' → logprob: -12.500185012817383
    4. '   ' → logprob: -14.000185012817383
    5. '```' → logprob: -14.625185012817383
    6. '
' → logprob: -15.750185012817383
    7. ' ' → logprob: -15.875185012817383
    8. '(p' → logprob: -16.250185012817383
    9. '  
' → logprob: -17.000185012817383
    10. '  ' → logprob: -17.125185012817383

Token 499: ' lien' (ID: 41384)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.025197161361575127
    2. ' p' → logprob: -3.7751972675323486
    3. 'print' → logprob: -7.5251970291137695
    4. '(' → logprob: -8.02519702911377
    5. 'edge' → logprob: -8.40019702911377
    6. 'pont' → logprob: -8.90019702911377
    7. 'i' → logprob: -9.15019702911377
    8. 'k' → logprob: -9.65019702911377
    9. 'e' → logprob: -9.77519702911377
    10. ' (' → logprob: -9.90019702911377

Token 500: ' spécial' (ID: 40397)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.006850820034742355
    2. '(' → logprob: -5.006850719451904
    3. '(n' → logprob: -9.631851196289062
    4. 'k' → logprob: -10.131851196289062
    5. '(p' → logprob: -11.381851196289062
    6. 'p' → logprob: -12.006851196289062
    7. '(i' → logprob: -12.006851196289062
    8. '((' → logprob: -13.256851196289062
    9. '(
' → logprob: -13.256851196289062
    10. ' (' → logprob: -13.756851196289062

Token 501: ' entre' (ID: 3853)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3564150929450989
    2. '(k' → logprob: -1.356415033340454
    3. '(p' → logprob: -3.231415033340454
    4. '(' → logprob: -6.106415271759033
    5. ' p' → logprob: -8.356414794921875
    6. ',' → logprob: -9.356414794921875
    7. ')' → logprob: -9.981414794921875
    8. '(n' → logprob: -10.106414794921875
    9. '((' → logprob: -10.231414794921875
    10. ' (' → logprob: -11.106414794921875

Token 502: ' une' (ID: 2463)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012570773833431304
    2. ' k' → logprob: -9.000125885009766
    3. '(k' → logprob: -13.125125885009766
    4. 'n' → logprob: -15.750125885009766
    5. '   ' → logprob: -16.000125885009766
    6. '	k' → logprob: -16.875125885009766
    7. ' ' → logprob: -18.000125885009766
    8. 'p' → logprob: -18.500125885009766
    9. '{k' → logprob: -18.750125885009766
    10. ' ' → logprob: -18.750125885009766

Token 503: ' puissance' (ID: 63494)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.028344856575131416
    2. '(k' → logprob: -3.7783448696136475
    3. 'p' → logprob: -5.903344631195068
    4. ' k' → logprob: -7.278344631195068
    5. ')' → logprob: -7.653344631195068
    6. '(' → logprob: -8.028345108032227
    7. ' (' → logprob: -8.528345108032227
    8. '(n' → logprob: -8.528345108032227
    9. 'i' → logprob: -9.153345108032227
    10. 'n' → logprob: -9.153345108032227

Token 504: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20889867842197418
    2. ' de' → logprob: -1.708898663520813
    3. ',' → logprob: -5.333898544311523
    4. '2' → logprob: -6.708898544311523
    5. '(' → logprob: -8.208898544311523
    6. ' ' → logprob: -8.333898544311523
    7. ' ,' → logprob: -8.833898544311523
    8. '   ' → logprob: -9.333898544311523
    9. ' k' → logprob: -9.458898544311523
    10. 'k' → logprob: -9.583898544311523

Token 505: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.21042445302009583
    2. '2' → logprob: -2.5854244232177734
    3. ' deux' → logprob: -2.8354244232177734
    4. 'two' → logprob: -3.5854244232177734
    5. ' ' → logprob: -3.7104244232177734
    6. ' two' → logprob: -5.710424423217773
    7. '```' → logprob: -9.210424423217773
    8. ' ' → logprob: -11.210424423217773
    9. '1' → logprob: -11.710424423217773
    10. ' zwei' → logprob: -11.710424423217773

Token 506: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05849359557032585
    2. ' ,' → logprob: -3.5584936141967773
    3. '+' → logprob: -4.058493614196777
    4. ' +' → logprob: -5.433493614196777
    5. ')' → logprob: -6.808493614196777
    6. '(n' → logprob: -6.808493614196777
    7. '(k' → logprob: -6.808493614196777
    8. ',k' → logprob: -7.183493614196777
    9. ' and' → logprob: -7.433493614196777
    10. ' k' → logprob: -7.433493614196777

Token 507: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2511650621891022
    2. ' n' → logprob: -1.6261650323867798
    3. 'k' → logprob: -4.00116491317749
    4. ' k' → logprob: -5.00116491317749
    5. 'le' → logprob: -9.376165390014648
    6. '(n' → logprob: -9.751165390014648
    7. ' la' → logprob: -9.876165390014648
    8. 'l' → logprob: -9.876165390014648
    9. 'la' → logprob: -10.001165390014648
    10. ' ' → logprob: -10.626165390014648

Token 508: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2159961611032486
    2. ' sommet' → logprob: -2.090996265411377
    3. ' n' → logprob: -3.840996265411377
    4. 'p' → logprob: -4.465996265411377
    5. 'k' → logprob: -4.840996265411377
    6. '(n' → logprob: -5.090996265411377
    7. 'som' → logprob: -5.215996265411377
    8. ' p' → logprob: -5.840996265411377
    9. 's' → logprob: -6.215996265411377
    10. 'i' → logprob: -6.340996265411377

Token 509: ' dé' (ID: 2393)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.08763893693685532
    2. 'k' → logprob: -3.2126388549804688
    3. '(' → logprob: -3.5876388549804688
    4. '(n' → logprob: -5.212638854980469
    5. ',' → logprob: -5.337638854980469
    6. 'p' → logprob: -5.962638854980469
    7. '(p' → logprob: -6.337638854980469
    8. '+' → logprob: -7.712638854980469
    9. ' (' → logprob: -7.712638854980469
    10. ' k' → logprob: -8.962638854980469

Token 510: 'cal' (ID: 5842)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.15083646774292
    2. '+' → logprob: -1.52583646774292
    3. 'plus' → logprob: -2.02583646774292
    4. 'cal' → logprob: -2.27583646774292
    5. 'jà' → logprob: -2.90083646774292
    6. 'n' → logprob: -3.65083646774292
    7. 'part' → logprob: -4.02583646774292
    8. 'rang' → logprob: -4.15083646774292
    9. '_plus' → logprob: -4.40083646774292
    10. 'j' → logprob: -4.52583646774292

Token 511: 'é' (ID: 377)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7957797646522522
    2. '+' → logprob: -1.5457797050476074
    3. ' ' → logprob: -2.5457797050476074
    4. 'n' → logprob: -2.6707797050476074
    5. '   ' → logprob: -3.4207797050476074
    6. '1' → logprob: -3.4207797050476074
    7. ' k' → logprob: -3.7957797050476074
    8. ' +' → logprob: -3.7957797050476074
    9. 'é' → logprob: -3.9207797050476074
    10. ',' → logprob: -4.170779705047607

Token 512: '
' (ID: 198)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2088550478219986
    2. '(' → logprob: -1.8338550329208374
    3. '(n' → logprob: -3.708855152130127
    4. ',' → logprob: -5.583855152130127
    5. '(i' → logprob: -9.333854675292969
    6. 'k' → logprob: -9.458854675292969
    7. ' (' → logprob: -9.708854675292969
    8. ')' → logprob: -9.833854675292969
    9. ' ,' → logprob: -10.708854675292969
    10. '(p' → logprob: -10.708854675292969

Token 513: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.93579563125968e-05
    2. '(k' → logprob: -9.500089645385742
    3. 'k' → logprob: -11.250089645385742
    4. ' p' → logprob: -14.250089645385742
    5. '(p' → logprob: -14.625089645385742
    6. '(' → logprob: -15.375089645385742
    7. 'print' → logprob: -16.625089645385742
    8. '((' → logprob: -17.875089645385742
    9. '```' → logprob: -18.125089645385742
    10. '(n' → logprob: -18.250089645385742

Token 514: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.7755875129951164e-05
    2. '(' → logprob: -10.37504768371582
    3. 'k' → logprob: -11.25004768371582
    4. '((' → logprob: -12.87504768371582
    5. '   ' → logprob: -14.62504768371582
    6. ' (' → logprob: -15.37504768371582
    7. '(n' → logprob: -15.87504768371582
    8. ' ' → logprob: -17.50004768371582
    9. '(
' → logprob: -17.87504768371582
    10. '{k' → logprob: -18.00004768371582

Token 515: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01671641133725643
    2. ' -' → logprob: -4.141716480255127
    3. ',' → logprob: -7.516716480255127
    4. ' ' → logprob: -9.266716003417969
    5. '   ' → logprob: -10.891716003417969
    6. '+' → logprob: -11.516716003417969
    7. ' ,' → logprob: -12.266716003417969
    8. '  ' → logprob: -12.641716003417969
    9. ')' → logprob: -13.641716003417969
    10. '-
' → logprob: -13.641716003417969

Token 516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.250022888183594
    4. '  ' → logprob: -15.250022888183594
    5. '2' → logprob: -16.000022888183594
    6. ',' → logprob: -16.750022888183594
    7. '-' → logprob: -17.500022888183594
    8. '```' → logprob: -17.687522888183594
    9. '    ' → logprob: -18.062522888183594
    10. '0' → logprob: -18.437522888183594

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.875008583068848
    4. '  ' → logprob: -15.437508583068848
    5. ',' → logprob: -16.31250762939453
    6. '2' → logprob: -16.56250762939453
    7. '0' → logprob: -17.12500762939453
    8. '```' → logprob: -17.12500762939453
    9. '' → logprob: -17.18750762939453
    10. '    ' → logprob: -17.50000762939453

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010677010286599398
    2. ',n' → logprob: -7.126067638397217
    3. ' ,' → logprob: -8.376068115234375
    4. '+' → logprob: -11.001068115234375
    5. ',k' → logprob: -11.501068115234375
    6. ',
' → logprob: -12.626068115234375
    7. 'n' → logprob: -14.126068115234375
    8. '   ' → logprob: -14.626068115234375
    9. ' +' → logprob: -14.626068115234375
    10. ',p' → logprob: -15.251068115234375

Token 519: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815006136894226
    2. ' n' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.768150329589844
    4. '	n' → logprob: -17.018150329589844
    5. '(n' → logprob: -18.643150329589844
    6. ' ' → logprob: -18.893150329589844
    7. 'k' → logprob: -19.393150329589844
    8. ')' → logprob: -19.518150329589844
    9. ')n' → logprob: -19.643150329589844
    10. ' ' → logprob: -19.893150329589844

Token 520: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01251424103975296
    2. ' +' → logprob: -4.387514114379883
    3. ')' → logprob: -12.512514114379883
    4. '+
' → logprob: -15.262514114379883
    5. '1' → logprob: -15.512514114379883
    6. '+)' → logprob: -15.637514114379883
    7. ' plus' → logprob: -16.387514114379883
    8. ' ' → logprob: -16.637514114379883
    9. '＋' → logprob: -16.762514114379883
    10. '   ' → logprob: -16.887514114379883

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -15.125021934509277
    4. '2' → logprob: -15.375021934509277
    5. '   ' → logprob: -17.375022888183594
    6. '  ' → logprob: -18.125022888183594
    7. '0' → logprob: -18.937522888183594
    8. '+' → logprob: -19.312522888183594
    9. '۱' → logprob: -19.812522888183594
    10. '```' → logprob: -19.937522888183594

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.812501907348633
    5. '```' → logprob: -18.437501907348633
    6. ')' → logprob: -18.875001907348633
    7. '0' → logprob: -19.000001907348633
    8. '１' → logprob: -19.125001907348633
    9. '!' → logprob: -19.250001907348633
    10. '`' → logprob: -19.312501907348633

Token 523: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.250035285949707
    3. ' )' → logprob: -16.000036239624023
    4. ')

' → logprob: -16.625036239624023
    5. ')#' → logprob: -16.750036239624023
    6. ')
' → logprob: -17.375036239624023
    7. '))' → logprob: -17.500036239624023
    8. '   ' → logprob: -17.875036239624023
    9. ')`' → logprob: -18.000036239624023
    10. '")' → logprob: -18.000036239624023

Token 524: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007201764383353293
    2. '#' → logprob: -7.250720024108887
    3. 'p' → logprob: -11.750720024108887
    4. ' for' → logprob: -13.250720024108887
    5. '```' → logprob: -15.125720024108887
    6. 'k' → logprob: -15.375720024108887
    7. 'print' → logprob: -16.875720977783203
    8. 'from' → logprob: -17.500720977783203
    9. '<|end|>' → logprob: -17.875720977783203
    10. 'n' → logprob: -17.875720977783203

Token 525: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017600644379854202
    2. '#' → logprob: -4.1426005363464355
    3. 'p' → logprob: -6.5176005363464355
    4. 'print' → logprob: -9.392601013183594
    5. ' for' → logprob: -13.517601013183594
    6. 'if' → logprob: -13.892601013183594
    7. 'k' → logprob: -14.142601013183594
    8. '
' → logprob: -14.767601013183594
    9. '```' → logprob: -14.892601013183594
    10. 'from' → logprob: -16.392601013183594

Token 526: 'ième' (ID: 41126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007854487630538642
    2. ' for' → logprob: -7.2507853507995605
    3. 'p' → logprob: -9.750785827636719
    4. '
' → logprob: -12.375785827636719
    5. 'i' → logprob: -12.750785827636719
    6. '```' → logprob: -13.000785827636719
    7. '#' → logprob: -13.375785827636719
    8. 'k' → logprob: -13.375785827636719
    9. 'ième' → logprob: -14.000785827636719
    10. '.for' → logprob: -14.625785827636719

Token 527: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041642338037490845
    2. ' for' → logprob: -5.754164218902588
    3. ' boucle' → logprob: -7.629164218902588
    4. 'loop' → logprob: -8.004164695739746
    5. ' loop' → logprob: -8.754164695739746
    6. '
' → logprob: -13.129164695739746
    7. 'bou' → logprob: -13.129164695739746
    8. ' ' → logprob: -13.254164695739746
    9. '```' → logprob: -13.879164695739746
    10. '_loop' → logprob: -14.754164695739746

Token 528: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028060602489858866
    2. ' for' → logprob: -5.877806186676025
    3. '```' → logprob: -14.627805709838867
    4. '
' → logprob: -15.377805709838867
    5. '	for' → logprob: -16.002805709838867
    6. '#' → logprob: -16.127805709838867
    7. 'r' → logprob: -16.252805709838867
    8. 'i' → logprob: -17.252805709838867
    9. 's' → logprob: -17.377805709838867
    10. 'from' → logprob: -17.502805709838867

Token 529: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.1318875446449965e-05
    2. ' for' → logprob: -10.125041007995605
    3. 'i' → logprob: -14.125041007995605
    4. '
' → logprob: -15.500041007995605
    5. '```' → logprob: -16.250041961669922
    6. 'r' → logprob: -16.500041961669922
    7. 'from' → logprob: -16.750041961669922
    8. '   ' → logprob: -17.125041961669922
    9. ')' → logprob: -17.625041961669922
    10. '#' → logprob: -18.000041961669922

Token 530: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008253490086644888
    2. ' i' → logprob: -7.12582540512085
    3. '   ' → logprob: -11.875824928283691
    4. 'j' → logprob: -11.875824928283691
    5. 'for' → logprob: -12.875824928283691
    6. '	i' → logprob: -13.375824928283691
    7. '_i' → logprob: -14.875824928283691
    8. '```' → logprob: -14.875824928283691
    9. 'k' → logprob: -15.000824928283691
    10. ' ' → logprob: -15.125824928283691

Token 531: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6374531984329224
    2. 'in' → logprob: -0.7624531984329224
    3. '(k' → logprob: -6.012453079223633
    4. '(n' → logprob: -7.387453079223633
    5. 'n' → logprob: -7.887453079223633
    6. 'r' → logprob: -8.262453079223633
    7. 'k' → logprob: -8.637453079223633
    8. ' ' → logprob: -8.887453079223633
    9. 'i' → logprob: -8.887453079223633
    10. '(r' → logprob: -9.262453079223633

Token 532: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0644095316529274
    2. 'r' → logprob: -2.9394094944000244
    3. '(k' → logprob: -5.3144097328186035
    4. 'n' → logprob: -6.0644097328186035
    5. '1' → logprob: -7.5644097328186035
    6. ' k' → logprob: -7.8144097328186035
    7. 'range' → logprob: -7.8144097328186035
    8. '0' → logprob: -8.314409255981445
    9. 'i' → logprob: -8.314409255981445
    10. '2' → logprob: -8.439409255981445

Token 533: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012980091385543346
    2. 'r' → logprob: -4.637979984283447
    3. '(k' → logprob: -6.637979984283447
    4. 'n' → logprob: -6.637979984283447
    5. 'range' → logprob: -8.262980461120605
    6. '0' → logprob: -8.762980461120605
    7. '1' → logprob: -9.387980461120605
    8. '2' → logprob: -10.137980461120605
    9. '(n' → logprob: -10.512980461120605
    10. '(r' → logprob: -10.762980461120605

Token 534: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8718425631523132
    2. 'in' → logprob: -1.246842622756958
    3. ' in' → logprob: -1.496842622756958
    4. 'r' → logprob: -3.621842622756958
    5. 'k' → logprob: -4.621842384338379
    6. '(k' → logprob: -4.871842384338379
    7. '+' → logprob: -5.246842384338379
    8. 'for' → logprob: -5.621842384338379
    9. 'to' → logprob: -5.746842384338379
    10. '   ' → logprob: -6.246842384338379

Token 535: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2028825879096985
    2. 'k' → logprob: -1.7028825283050537
    3. '(n' → logprob: -6.827882766723633
    4. '(k' → logprob: -8.327882766723633
    5. 'r' → logprob: -9.452882766723633
    6. ' n' → logprob: -10.077882766723633
    7. '(' → logprob: -11.827882766723633
    8. ' k' → logprob: -12.327882766723633
    9. ' (' → logprob: -12.827882766723633
    10. ' ' → logprob: -13.202882766723633

Token 536: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39190295338630676
    2. '-' → logprob: -1.3919029235839844
    3. '(k' → logprob: -3.2669029235839844
    4. '(' → logprob: -3.5169029235839844
    5. '2' → logprob: -5.516902923583984
    6. 'k' → logprob: -6.141902923583984
    7. 'r' → logprob: -7.766902923583984
    8. '1' → logprob: -7.766902923583984
    9. ' ' → logprob: -8.766902923583984
    10. '   ' → logprob: -8.891902923583984

Token 537: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24962109327316284
    2. 'k' → logprob: -1.9996211528778076
    3. '(k' → logprob: -2.8746211528778076
    4. '1' → logprob: -4.2496209144592285
    5. 'r' → logprob: -4.3746209144592285
    6. '(' → logprob: -6.3746209144592285
    7. '(r' → logprob: -8.874621391296387
    8. ' ' → logprob: -9.624621391296387
    9. ' k' → logprob: -9.749621391296387
    10. '3' → logprob: -10.124621391296387

Token 538: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005178139545023441
    2. 'in' → logprob: -5.505177974700928
    3. ' for' → logprob: -7.255177974700928
    4. '(k' → logprob: -8.880178451538086
    5. 'r' → logprob: -9.005178451538086
    6. '(r' → logprob: -10.130178451538086
    7. ' in' → logprob: -10.505178451538086
    8. '(' → logprob: -10.630178451538086
    9. 'k' → logprob: -11.380178451538086
    10. '```' → logprob: -12.005178451538086

Token 539: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013105978723615408
    2. ' for' → logprob: -6.7513108253479
    3. 'r' → logprob: -9.626310348510742
    4. 'in' → logprob: -10.751310348510742
    5. '(k' → logprob: -11.251310348510742
    6. '(r' → logprob: -11.376310348510742
    7. '```' → logprob: -11.876310348510742
    8. '   ' → logprob: -12.126310348510742
    9. '(' → logprob: -12.501310348510742
    10. 'k' → logprob: -13.001310348510742

Token 540: 'tou' (ID: 143506)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5748156309127808
    2. 'for' → logprob: -1.0748156309127808
    3. ' for' → logprob: -2.4498157501220703
    4. ')' → logprob: -5.32481575012207
    5. ' r' → logprob: -5.82481575012207
    6. '```' → logprob: -6.69981575012207
    7. '):
' → logprob: -8.69981575012207
    8. '   ' → logprob: -9.07481575012207
    9. 'i' → logprob: -10.32481575012207
    10. '
' → logprob: -10.57481575012207

Token 541: 'jours' (ID: 15650)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011703446507453918
    2. ' r' → logprob: -7.0011701583862305
    3. 'k' → logprob: -9.12617015838623
    4. 'range' → logprob: -9.37617015838623
    5. 'for' → logprob: -11.12617015838623
    6. 'p' → logprob: -11.25117015838623
    7. '```' → logprob: -11.37617015838623
    8. ')' → logprob: -12.62617015838623
    9. 'n' → logprob: -12.87617015838623
    10. ' k' → logprob: -13.12617015838623

Token 542: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07132149487733841
    2. ')' → logprob: -3.321321487426758
    3. ' r' → logprob: -3.571321487426758
    4. 'i' → logprob: -6.321321487426758
    5. '):
' → logprob: -7.446321487426758
    6. 'k' → logprob: -7.571321487426758
    7. '):' → logprob: -7.821321487426758
    8. '```' → logprob: -7.821321487426758
    9. ' k' → logprob: -8.196321487426758
    10. ' i' → logprob: -8.821321487426758

Token 543: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34994640946388245
    2. '-' → logprob: -1.22494637966156
    3. 'r' → logprob: -8.224946022033691
    4. ')' → logprob: -8.349946022033691
    5. '(' → logprob: -8.474946022033691
    6. '(k' → logprob: -8.599946022033691
    7. '(r' → logprob: -8.724946022033691
    8. '```' → logprob: -8.849946022033691
    9. ' ' → logprob: -9.474946022033691
    10. '2' → logprob: -9.599946022033691

Token 544: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9292415749514475e-05
    2. ' ' → logprob: -10.500039100646973
    3. '3' → logprob: -11.500039100646973
    4. '   ' → logprob: -13.750039100646973
    5. '1' → logprob: -15.125039100646973
    6. '```' → logprob: -15.375039100646973
    7. '  ' → logprob: -16.93754005432129
    8. '２' → logprob: -17.68754005432129
    9. '`' → logprob: -17.81254005432129
    10. '	' → logprob: -18.18754005432129

Token 545: ' éléments' (ID: 57375)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07912331074476242
    2. '):' → logprob: -2.5791232585906982
    3. 'for' → logprob: -9.579123497009277
    4. '):
' → logprob: -9.954123497009277
    5. ':' → logprob: -10.329123497009277
    6. 'r' → logprob: -10.329123497009277
    7. '):

' → logprob: -10.579123497009277
    8. ')' → logprob: -11.454123497009277
    9. ':
' → logprob: -11.454123497009277
    10. '```' → logprob: -13.204123497009277

Token 546: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4609883725643158
    2. 'for' → logprob: -2.0859882831573486
    3. 'in' → logprob: -2.4609882831573486
    4. ':' → logprob: -3.0859882831573486
    5. ' in' → logprob: -3.0859882831573486
    6. ':
' → logprob: -3.5859882831573486
    7. '):' → logprob: -3.9609882831573486
    8. '   ' → logprob: -5.085988521575928
    9. ' for' → logprob: -5.210988521575928
    10. ')' → logprob: -5.335988521575928

Token 547: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.895480277715251e-06
    2. ' for' → logprob: -12.000008583068848
    3. '```' → logprob: -12.875008583068848
    4. 'r' → logprob: -15.875008583068848
    5. '[' → logprob: -17.500009536743164
    6. '	for' → logprob: -20.000009536743164
    7. 'in' → logprob: -21.250009536743164
    8. '``' → logprob: -21.375009536743164
    9. 'p' → logprob: -21.750009536743164
    10. 'range' → logprob: -22.000009536743164

Token 548: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033652037382125854
    2. ' i' → logprob: -3.4086520671844482
    3. '	i' → logprob: -12.908652305603027
    4. '   ' → logprob: -13.658652305603027
    5. ' ' → logprob: -14.158652305603027
    6. ' ' → logprob: -15.158652305603027
    7. 'in' → logprob: -15.658652305603027
    8. 'k' → logprob: -15.658652305603027
    9. '```' → logprob: -15.658652305603027
    10. '(i' → logprob: -15.783652305603027

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5242981314659119
    2. 'in' → logprob: -0.8992981314659119
    3. 'r' → logprob: -7.399298191070557
    4. ' r' → logprob: -8.649297714233398
    5. 'p' → logprob: -9.149297714233398
    6. 'n' → logprob: -9.524297714233398
    7. '   ' → logprob: -10.399297714233398
    8. 'd' → logprob: -10.899297714233398
    9. 's' → logprob: -10.899297714233398
    10. '(r' → logprob: -10.899297714233398

Token 550: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014621533453464508
    2. ' r' → logprob: -4.264621734619141
    3. 'range' → logprob: -7.764621734619141
    4. ' range' → logprob: -10.51462173461914
    5. 'p' → logprob: -12.88962173461914
    6. '	r' → logprob: -13.38962173461914
    7. '(r' → logprob: -13.63962173461914
    8. ' p' → logprob: -14.63962173461914
    9. '_r' → logprob: -15.76462173461914
    10. ' р' → logprob: -16.38962173461914

Token 551: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -10.500029563903809
    3. '(n' → logprob: -13.625029563903809
    4. 'k' → logprob: -13.875029563903809
    5. '((' → logprob: -16.500030517578125
    6. '(
' → logprob: -17.125030517578125
    7. ' (' → logprob: -19.000030517578125
    8. ' k' → logprob: -19.375030517578125
    9. '(m' → logprob: -20.250030517578125
    10. '2' → logprob: -20.250030517578125

Token 552: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31428465247154236
    2. ' -' → logprob: -1.3142846822738647
    3. '(' → logprob: -7.439284801483154
    4. 'k' → logprob: -9.064284324645996
    5. ' ' → logprob: -9.314284324645996
    6. '(k' → logprob: -9.439284324645996
    7. '   ' → logprob: -9.564284324645996
    8. '2' → logprob: -10.689284324645996
    9. '()' → logprob: -11.439284324645996
    10. '()-' → logprob: -11.564284324645996

Token 553: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.500035285949707
    3. '-' → logprob: -12.500035285949707
    4. '   ' → logprob: -13.625035285949707
    5. '1' → logprob: -13.687535285949707
    6. '3' → logprob: -14.062535285949707
    7. 'k' → logprob: -14.562535285949707
    8. '(' → logprob: -15.812535285949707
    9. '```' → logprob: -16.312536239624023
    10. '  ' → logprob: -16.812536239624023

Token 554: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2524021157296374e-05
    2. '-' → logprob: -10.375052452087402
    3. 'k' → logprob: -11.500052452087402
    4. ' ' → logprob: -12.125052452087402
    5. '   ' → logprob: -12.625052452087402
    6. '3' → logprob: -14.000052452087402
    7. '(' → logprob: -14.750052452087402
    8. '1' → logprob: -15.125052452087402
    9. '(k' → logprob: -15.250052452087402
    10. ' -' → logprob: -15.875052452087402

Token 555: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0049393740482628345
    2. '):' → logprob: -5.379939556121826
    3. '   ' → logprob: -8.504939079284668
    4. '):
' → logprob: -9.254939079284668
    5. '():
' → logprob: -12.129939079284668
    6. ' ):
' → logprob: -12.254939079284668
    7. '+' → logprob: -12.504939079284668
    8. ')' → logprob: -12.879939079284668
    9. '()):
' → logprob: -13.629939079284668
    10. ':
' → logprob: -14.379939079284668

Token 556: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25343388319015503
    2. '   ' → logprob: -1.5034339427947998
    3. ' p' → logprob: -6.503433704376221
    4. '(p' → logprob: -13.003434181213379
    5. 'i' → logprob: -13.628434181213379
    6. '	p' → logprob: -14.378434181213379
    7. 'k' → logprob: -14.378434181213379
    8. '```' → logprob: -15.378434181213379
    9. ' ' → logprob: -15.753434181213379
    10. '(i' → logprob: -15.878434181213379

Token 557: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0048291729763150215
    2. 'i' → logprob: -5.379829406738281
    3. 'k' → logprob: -8.754829406738281
    4. '   ' → logprob: -10.379829406738281
    5. 'n' → logprob: -11.254829406738281
    6. ' p' → logprob: -12.879829406738281
    7. '(i' → logprob: -12.879829406738281
    8. 'print' → logprob: -13.504829406738281
    9. '(k' → logprob: -15.379829406738281
    10. '(p' → logprob: -15.504829406738281

Token 558: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.023293538717553e-05
    2. '   ' → logprob: -10.500030517578125
    3. ' p' → logprob: -13.250030517578125
    4. 'print' → logprob: -15.250030517578125
    5. 'k' → logprob: -15.375030517578125
    6. 'if' → logprob: -15.875030517578125
    7. ' ' → logprob: -16.000030517578125
    8. '  ' → logprob: -16.500030517578125
    9. '#' → logprob: -16.625030517578125
    10. 'i' → logprob: -16.875030517578125

Token 559: ' ajoute' (ID: 91611)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0018342763651162386
    2. '   ' → logprob: -6.876834392547607
    3. '(i' → logprob: -7.501834392547607
    4. ' p' → logprob: -8.87683391571045
    5. 'i' → logprob: -9.87683391571045
    6. '(p' → logprob: -10.87683391571045
    7. '(k' → logprob: -11.25183391571045
    8. '(' → logprob: -11.50183391571045
    9. '+' → logprob: -12.87683391571045
    10. '(n' → logprob: -13.37683391571045

Token 560: ' n' (ID: 297)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8879743814468384
    2. 'p' → logprob: -1.7629743814468384
    3. 'k' → logprob: -2.012974262237549
    4. 'i' → logprob: -2.012974262237549
    5. '(k' → logprob: -2.012974262237549
    6. '(n' → logprob: -4.887974262237549
    7. '(p' → logprob: -5.762974262237549
    8. 'n' → logprob: -5.887974262237549
    9. '   ' → logprob: -6.137974262237549
    10. ' i' → logprob: -9.012974739074707

Token 561: ' au' (ID: 2791)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36468255519866943
    2. '-' → logprob: -2.114682674407959
    3. ' +' → logprob: -2.489682674407959
    4. ' -' → logprob: -2.989682674407959
    5. '+i' → logprob: -3.364682674407959
    6. ',' → logprob: -4.489682674407959
    7. '-i' → logprob: -5.489682674407959
    8. '   ' → logprob: -7.364682674407959
    9. ' ' → logprob: -7.739682674407959
    10. 'i' → logprob: -9.1146821975708

Token 562: ' numéro' (ID: 65036)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005410005105659366
    2. 'k' → logprob: -8.250540733337402
    3. '(i' → logprob: -9.000540733337402
    4. ' i' → logprob: -9.625540733337402
    5. 'p' → logprob: -10.125540733337402
    6. '   ' → logprob: -10.375540733337402
    7. '1' → logprob: -12.625540733337402
    8. '[i' → logprob: -12.750540733337402
    9. '+' → logprob: -13.000540733337402
    10. ' ' → logprob: -13.250540733337402

Token 563: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0360277034342289
    2. 'i' → logprob: -3.786027669906616
    3. '[i' → logprob: -5.161027908325195
    4. ',' → logprob: -6.286027908325195
    5. '   ' → logprob: -6.286027908325195
    6. '(' → logprob: -6.536027908325195
    7. '+' → logprob: -7.536027908325195
    8. 'p' → logprob: -8.286027908325195
    9. ',i' → logprob: -8.911027908325195
    10. ' (' → logprob: -9.161027908325195

Token 564: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005374244065023959
    2. 'k' → logprob: -7.625537395477295
    3. '(i' → logprob: -10.750537872314453
    4. ' i' → logprob: -11.000537872314453
    5. 'p' → logprob: -12.750537872314453
    6. 'l' → logprob: -13.000537872314453
    7. '1' → logprob: -13.250537872314453
    8. '   ' → logprob: -13.875537872314453
    9. '(k' → logprob: -14.000537872314453
    10. '[i' → logprob: -14.750537872314453

Token 565: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7705639004707336
    2. ',' → logprob: -1.0205638408660889
    3. '(i' → logprob: -2.145563840866089
    4. 'p' → logprob: -3.270563840866089
    5. 'i' → logprob: -4.395564079284668
    6. '[i' → logprob: -6.145564079284668
    7. '(' → logprob: -6.520564079284668
    8. ' ,' → logprob: -6.645564079284668
    9. ',i' → logprob: -7.020564079284668
    10. '+' → logprob: -7.020564079284668

Token 566: ' obtenir' (ID: 54423)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005773192271590233
    2. 'p' → logprob: -5.755773067474365
    3. '(i' → logprob: -6.630773067474365
    4. 'k' → logprob: -7.005773067474365
    5. ' i' → logprob: -8.505773544311523
    6. '   ' → logprob: -9.630773544311523
    7. 'n' → logprob: -10.505773544311523
    8. '(k' → logprob: -10.630773544311523
    9. '[i' → logprob: -11.130773544311523
    10. 'print' → logprob: -11.380773544311523

Token 567: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.041090838611125946
    2. '(i' → logprob: -3.916090726852417
    3. ' i' → logprob: -5.166090965270996
    4. 'n' → logprob: -5.166090965270996
    5. '   ' → logprob: -5.416090965270996
    6. 'k' → logprob: -6.666090965270996
    7. '(n' → logprob: -6.791090965270996
    8. 'p' → logprob: -6.916090965270996
    9. '(k' → logprob: -7.666090965270996
    10. ' (' → logprob: -8.541090965270996

Token 568: ' nouvelle' (ID: 24562)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2204459309577942
    2. 'p' → logprob: -1.7204458713531494
    3. '(i' → logprob: -4.3454461097717285
    4. 'n' → logprob: -5.8454461097717285
    5. '(n' → logprob: -6.5954461097717285
    6. '(p' → logprob: -7.4704461097717285
    7. 'k' → logprob: -8.09544563293457
    8. '(' → logprob: -8.84544563293457
    9. '(k' → logprob: -9.09544563293457
    10. 'print' → logprob: -9.34544563293457

Token 569: ' série' (ID: 22079)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6288356781005859
    2. 'i' → logprob: -1.378835678100586
    3. '(' → logprob: -2.128835678100586
    4. 'p' → logprob: -2.753835678100586
    5. '+' → logprob: -4.003835678100586
    6. ',' → logprob: -5.878835678100586
    7. 'k' → logprob: -6.253835678100586
    8. 'vertex' → logprob: -6.253835678100586
    9. '+i' → logprob: -6.878835678100586
    10. '(k' → logprob: -7.378835678100586

Token 570: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100050091743469
    2. 'p' → logprob: -1.5600049495697021
    3. '(i' → logprob: -3.435004949569702
    4. 'i' → logprob: -4.935005187988281
    5. '(p' → logprob: -4.935005187988281
    6. ',' → logprob: -4.935005187988281
    7. ' p' → logprob: -6.810005187988281
    8. '(' → logprob: -7.560005187988281
    9. ' i' → logprob: -7.810005187988281
    10. ',i' → logprob: -9.060005187988281

Token 571: ' somm' (ID: 44830)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11581320315599442
    2. '(i' → logprob: -2.3658132553100586
    3. 'p' → logprob: -4.365813255310059
    4. ' i' → logprob: -6.365813255310059
    5. ' (' → logprob: -7.865813255310059
    6. '(p' → logprob: -8.115813255310059
    7. 'print' → logprob: -9.365813255310059
    8. '(' → logprob: -9.740813255310059
    9. ' p' → logprob: -9.990813255310059
    10. 'pairs' → logprob: -10.240813255310059

Token 572: 'ets' (ID: 1719)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12050940096378326
    2. '(i' → logprob: -2.745509386062622
    3. 't' → logprob: -3.870509386062622
    4. 'ets' → logprob: -4.120509624481201
    5. 'et' → logprob: -5.370509624481201
    6. 'it' → logprob: -5.495509624481201
    7. '+i' → logprob: -7.120509624481201
    8. 'è' → logprob: -7.620509624481201
    9. ' i' → logprob: -7.745509624481201
    10. '{i' → logprob: -7.870509624481201

Token 573: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2251158058643341
    2. 'p' → logprob: -1.7251157760620117
    3. ',' → logprob: -3.9751157760620117
    4. '(p' → logprob: -5.850115776062012
    5. ' p' → logprob: -6.975115776062012
    6. 'i' → logprob: -8.600115776062012
    7. '(i' → logprob: -8.725115776062012
    8. ',p' → logprob: -8.725115776062012
    9. ' ,' → logprob: -9.100115776062012
    10. '(' → logprob: -9.600115776062012

Token 574: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.031627364456653595
    2. '   ' → logprob: -3.5316274166107178
    3. ' p' → logprob: -6.281627178192139
    4. '	p' → logprob: -12.781627655029297
    5. '```' → logprob: -13.781627655029297
    6. '(p' → logprob: -14.906627655029297
    7. '  ' → logprob: -15.281627655029297
    8. ' ' → logprob: -15.281627655029297
    9. '       ' → logprob: -16.781627655029297
    10. '   ' → logprob: -16.906627655029297

Token 575: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002762326330412179
    2. '   ' → logprob: -8.250276565551758
    3. ' p' → logprob: -11.125276565551758
    4. '	p' → logprob: -16.000276565551758
    5. '(p' → logprob: -16.750276565551758
    6. '```' → logprob: -17.000276565551758
    7. ' ' → logprob: -17.750276565551758
    8. '  ' → logprob: -18.375276565551758
    9. 'print' → logprob: -18.625276565551758
    10. '       ' → logprob: -19.250276565551758

Token 576: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.3596853831550106e-05
    2. '   ' → logprob: -10.000053405761719
    3. ' p' → logprob: -11.750053405761719
    4. '	p' → logprob: -16.00005340576172
    5. '(p' → logprob: -16.25005340576172
    6. '```' → logprob: -17.50005340576172
    7. ' ' → logprob: -17.75005340576172
    8. 'i' → logprob: -17.87505340576172
    9. '  ' → logprob: -18.25005340576172
    10. 'print' → logprob: -18.37505340576172

Token 577: ' connect' (ID: 4837)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008934747893363237
    2. ' p' → logprob: -7.875893592834473
    3. 'i' → logprob: -8.000893592834473
    4. 'print' → logprob: -9.125893592834473
    5. '(i' → logprob: -10.125893592834473
    6. '(p' → logprob: -11.875893592834473
    7. ' i' → logprob: -12.250893592834473
    8. '   ' → logprob: -12.625893592834473
    9. '(' → logprob: -12.750893592834473
    10. ',' → logprob: -13.688393592834473

Token 578: 'e' (ID: 68)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1273164302110672
    2. '(i' → logprob: -2.627316474914551
    3. 'e' → logprob: -3.252316474914551
    4. ' i' → logprob: -5.502316474914551
    5. 'ant' → logprob: -6.127316474914551
    6. 'n' → logprob: -7.502316474914551
    7. '(' → logprob: -7.877316474914551
    8. 'é' → logprob: -8.12731647491455
    9. '   ' → logprob: -8.37731647491455
    10. '[i' → logprob: -8.75231647491455

Token 579: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10785491019487381
    2. '(i' → logprob: -2.8578548431396484
    3. 'p' → logprob: -4.107854843139648
    4. 'n' → logprob: -4.232854843139648
    5. '(n' → logprob: -4.357854843139648
    6. '   ' → logprob: -7.607854843139648
    7. '(p' → logprob: -8.232854843139648
    8. ' i' → logprob: -8.732854843139648
    9. 'k' → logprob: -9.982854843139648
    10. '(k' → logprob: -9.982854843139648

Token 580: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47882747650146484
    2. 'i' → logprob: -0.9788274765014648
    3. '(n' → logprob: -5.853827476501465
    4. 'p' → logprob: -6.728827476501465
    5. '(i' → logprob: -7.728827476501465
    6. ' n' → logprob: -9.103827476501465
    7. ' i' → logprob: -9.478827476501465
    8. '   ' → logprob: -11.978827476501465
    9. '[n' → logprob: -12.103827476501465
    10. '(p' → logprob: -12.228827476501465

Token 581: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02989870309829712
    2. 'n' → logprob: -3.5298986434936523
    3. ' i' → logprob: -9.654898643493652
    4. '   ' → logprob: -10.279898643493652
    5. 'p' → logprob: -11.029898643493652
    6. '(i' → logprob: -12.029898643493652
    7. 'k' → logprob: -12.404898643493652
    8. ' n' → logprob: -12.404898643493652
    9. '+i' → logprob: -12.529898643493652
    10. '(n' → logprob: -12.904898643493652

Token 582: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29571080207824707
    2. ' +' → logprob: -1.545710802078247
    3. '+i' → logprob: -3.170710802078247
    4. 'i' → logprob: -7.545710563659668
    5. '+n' → logprob: -8.545710563659668
    6. ' i' → logprob: -10.295710563659668
    7. 'n' → logprob: -11.295710563659668
    8. ',' → logprob: -11.295710563659668
    9. ' ' → logprob: -11.295710563659668
    10. '+k' → logprob: -11.420710563659668

Token 583: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08054520934820175
    2. ' +' → logprob: -2.58054518699646
    3. ',' → logprob: -6.580545425415039
    4. '+n' → logprob: -8.705545425415039
    5. ')' → logprob: -10.080545425415039
    6. ' ' → logprob: -10.705545425415039
    7. '   ' → logprob: -11.455545425415039
    8. ')+' → logprob: -11.830545425415039
    9. '```' → logprob: -12.580545425415039
    10. ' ,' → logprob: -12.705545425415039

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012797261297237128
    2. ' ' → logprob: -9.250127792358398
    3. '2' → logprob: -10.875127792358398
    4. '   ' → logprob: -12.000127792358398
    5. 'i' → logprob: -13.250127792358398
    6. 'k' → logprob: -13.500127792358398
    7. ')' → logprob: -13.500127792358398
    8. '+' → logprob: -14.750127792358398
    9. 'p' → logprob: -15.250127792358398
    10. '  ' → logprob: -15.250127792358398

Token 585: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025267915334552526
    2. ' ,' → logprob: -7.127526760101318
    3. '),' → logprob: -7.627526760101318
    4. ',n' → logprob: -7.877526760101318
    5. '+' → logprob: -8.002527236938477
    6. ')' → logprob: -8.377527236938477
    7. '   ' → logprob: -9.502527236938477
    8. ' +' → logprob: -9.752527236938477
    9. '+n' → logprob: -9.877527236938477
    10. ' ' → logprob: -10.002527236938477

Token 586: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010931090451776981
    2. '+' → logprob: -4.885931015014648
    3. ' ,' → logprob: -6.885931015014648
    4. ',n' → logprob: -7.385931015014648
    5. 'p' → logprob: -7.510931015014648
    6. ' +' → logprob: -7.510931015014648
    7. '   ' → logprob: -8.510931015014648
    8. ',
' → logprob: -9.510931015014648
    9. '+n' → logprob: -9.510931015014648
    10. ',p' → logprob: -9.760931015014648

Token 587: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2587032616138458
    2. 'n' → logprob: -1.5087032318115234
    3. ' (' → logprob: -5.258703231811523
    4. ' n' → logprob: -7.133703231811523
    5. '   ' → logprob: -8.383703231811523
    6. '(' → logprob: -9.008703231811523
    7. ' ' → logprob: -9.133703231811523
    8. '
' → logprob: -9.633703231811523
    9. ',' → logprob: -10.008703231811523
    10. '  ' → logprob: -10.633703231811523

Token 588: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005023968406021595
    2. ' n' → logprob: -7.625502586364746
    3. '   ' → logprob: -12.375502586364746
    4. '(n' → logprob: -12.625502586364746
    5. '	n' → logprob: -13.500502586364746
    6. 'i' → logprob: -13.750502586364746
    7. ')n' → logprob: -13.875502586364746
    8. ' ' → logprob: -14.250502586364746
    9. 'p' → logprob: -14.625502586364746
    10. '\n' → logprob: -14.750502586364746

Token 589: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4870661795139313
    2. '+i' → logprob: -0.9870661497116089
    3. ' +' → logprob: -4.362066268920898
    4. 'i' → logprob: -8.987066268920898
    5. '+n' → logprob: -10.862066268920898
    6. ' ' → logprob: -13.237066268920898
    7. ' i' → logprob: -13.362066268920898
    8. '   ' → logprob: -13.612066268920898
    9. '+
' → logprob: -13.862066268920898
    10. '+k' → logprob: -14.237066268920898

Token 590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07896271347999573
    2. ' +' → logprob: -2.578962802886963
    3. '2' → logprob: -10.453962326049805
    4. '+n' → logprob: -11.453962326049805
    5. 's' → logprob: -11.953962326049805
    6. ' ' → logprob: -12.453962326049805
    7. ')' → logprob: -12.578962326049805
    8. ')+' → logprob: -12.891462326049805
    9. '+k' → logprob: -13.078962326049805
    10. ' plus' → logprob: -13.266462326049805

Token 591: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9875325708417222e-05
    2. ' ' → logprob: -11.000029563903809
    3. '+' → logprob: -11.625029563903809
    4. '1' → logprob: -13.000029563903809
    5. '```' → logprob: -14.875029563903809
    6. 'n' → logprob: -15.125029563903809
    7. '   ' → logprob: -16.062530517578125
    8. '  ' → logprob: -16.125030517578125
    9. ' +' → logprob: -16.125030517578125
    10. '

' → logprob: -16.187530517578125

Token 592: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2045564502477646
    2. ')
' → logprob: -1.7045564651489258
    3. '   ' → logprob: -6.579556465148926
    4. ')
' → logprob: -6.829556465148926
    5. ')p' → logprob: -8.079556465148926
    6. ',' → logprob: -9.079556465148926
    7. 'p' → logprob: -9.454556465148926
    8. ')`
' → logprob: -10.079556465148926
    9. ' )
' → logprob: -10.954556465148926
    10. '):
' → logprob: -10.954556465148926

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012808398343622684
    2. 'p' → logprob: -4.387808322906494
    3. '(p' → logprob: -9.012808799743652
    4. ' p' → logprob: -9.262808799743652
    5. '```' → logprob: -9.887808799743652
    6. '(' → logprob: -11.262808799743652
    7. 'i' → logprob: -11.887808799743652
    8. '(i' → logprob: -12.887808799743652
    9. '       ' → logprob: -13.262808799743652
    10. '    
' → logprob: -13.512808799743652

Token 594: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.004153906833380461
    2. '   ' → logprob: -5.504153728485107
    3. ' p' → logprob: -9.504154205322266
    4. '(p' → logprob: -14.629154205322266
    5. '	p' → logprob: -15.129154205322266
    6. '       ' → logprob: -16.629154205322266
    7. '```' → logprob: -17.004154205322266
    8. ' ' → logprob: -17.629154205322266
    9. 'for' → logprob: -17.754154205322266
    10. '  ' → logprob: -17.754154205322266

Token 595: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3199920178740285e-05
    2. 'n' → logprob: -10.875022888183594
    3. '(' → logprob: -12.375022888183594
    4. '	n' → logprob: -17.875022888183594
    5. ' (' → logprob: -18.375022888183594
    6. '((' → logprob: -18.625022888183594
    7. '   ' → logprob: -19.125022888183594
    8. ' n' → logprob: -19.500022888183594
    9. '(
' → logprob: -19.750022888183594
    10. ' ' → logprob: -20.625022888183594

Token 596: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09051916003227234
    2. ' +' → logprob: -2.4655191898345947
    3. '+i' → logprob: -6.465518951416016
    4. '   ' → logprob: -11.965518951416016
    5. ' ' → logprob: -11.965518951416016
    6. '+
' → logprob: -13.090518951416016
    7. ',' → logprob: -13.465518951416016
    8. '+n' → logprob: -13.965518951416016
    9. '+p' → logprob: -14.340518951416016
    10. '＋' → logprob: -14.465518951416016

Token 597: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002969703928101808
    2. '1' → logprob: -8.375296592712402
    3. ' i' → logprob: -9.625296592712402
    4. '+i' → logprob: -15.500296592712402
    5. ' ' → logprob: -15.625296592712402
    6. '	i' → logprob: -17.37529754638672
    7. '   ' → logprob: -17.87529754638672
    8. '_i' → logprob: -18.50029754638672
    9. '+' → logprob: -19.00029754638672
    10. '(i' → logprob: -19.00029754638672

Token 598: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07002613693475723
    2. ' +' → logprob: -2.695026159286499
    3. '1' → logprob: -9.695026397705078
    4. ',' → logprob: -10.695026397705078
    5. ' ' → logprob: -12.820026397705078
    6. '   ' → logprob: -13.945026397705078
    7. 's' → logprob: -14.195026397705078
    8. 'p' → logprob: -14.945026397705078
    9. '＋' → logprob: -15.882526397705078
    10. ')' → logprob: -16.132526397705078

Token 599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -14.250028610229492
    4. '   ' → logprob: -16.000028610229492
    5. '  ' → logprob: -18.125028610229492
    6. '```' → logprob: -19.250028610229492
    7. '１' → logprob: -20.000028610229492
    8. '    ' → logprob: -20.250028610229492
    9. '     ' → logprob: -20.437528610229492
    10. '۱' → logprob: -20.812528610229492

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -14.750000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '```' → logprob: -18.125001907348633
    6. '

' → logprob: -18.500001907348633
    7. '  ' → logprob: -19.062501907348633
    8. '１' → logprob: -19.312501907348633
    9. '۱' → logprob: -19.500001907348633
    10. '
' → logprob: -19.875001907348633

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015174767468124628
    2. ',n' → logprob: -6.501517295837402
    3. ' ,' → logprob: -11.251517295837402
    4. 'n' → logprob: -13.626517295837402
    5. '(n' → logprob: -14.501517295837402
    6. ')' → logprob: -15.751517295837402
    7. ',
' → logprob: -16.00151824951172
    8. '   ' → logprob: -16.12651824951172
    9. 'p' → logprob: -16.87651824951172
    10. ',p' → logprob: -18.25151824951172

Token 602: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150877207517624
    2. ' n' → logprob: -4.018150806427002
    3. '	n' → logprob: -14.64315128326416
    4. '   ' → logprob: -14.76815128326416
    5. ' ' → logprob: -16.143150329589844
    6. ' ' → logprob: -18.393150329589844
    7. '  ' → logprob: -18.518150329589844
    8. '
' → logprob: -18.518150329589844
    9. '    ' → logprob: -19.268150329589844
    10. ')n' → logprob: -20.018150329589844

Token 603: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07618974149227142
    2. 'i' → logprob: -3.3261897563934326
    3. ' +' → logprob: -3.4511897563934326
    4. '+i' → logprob: -5.2011895179748535
    5. ' ' → logprob: -8.951189994812012
    6. ' i' → logprob: -9.576189994812012
    7. '2' → logprob: -12.326189994812012
    8. '1' → logprob: -12.576189994812012
    9. 'n' → logprob: -13.451189994812012
    10. '   ' → logprob: -13.826189994812012

Token 604: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011181884910911322
    2. ' i' → logprob: -6.876118183135986
    3. '2' → logprob: -10.001118659973145
    4. '+i' → logprob: -10.501118659973145
    5. '+' → logprob: -12.626118659973145
    6. '1' → logprob: -12.876118659973145
    7. 'n' → logprob: -13.126118659973145
    8. ' +' → logprob: -13.251118659973145
    9. ' ' → logprob: -13.501118659973145
    10. '	i' → logprob: -13.751118659973145

Token 605: ' +' (ID: 659)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00044902291847392917
    2. '+' → logprob: -8.250449180603027
    3. ' ' → logprob: -8.625449180603027
    4. ' +' → logprob: -12.000449180603027
    5. '   ' → logprob: -14.125449180603027
    6. '1' → logprob: -14.625449180603027
    7. ')' → logprob: -15.500449180603027
    8. '```' → logprob: -15.500449180603027
    9. '  ' → logprob: -15.687949180603027
    10. ' ' → logprob: -17.12544822692871

Token 606: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.937566757202148
    4. '   ' → logprob: -16.12506675720215
    5. '۲' → logprob: -16.43756675720215
    6. '```' → logprob: -16.56256675720215
    7. '  ' → logprob: -16.62506675720215
    8. '+' → logprob: -16.93756675720215
    9. '２' → logprob: -17.18756675720215
    10. 'i' → logprob: -18.06256675720215

Token 607: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'i' → logprob: -14.625009536743164
    4. '1' → logprob: -15.125009536743164
    5. '+' → logprob: -16.000009536743164
    6. 'n' → logprob: -17.125009536743164
    7. '   ' → logprob: -17.187509536743164
    8. '```' → logprob: -17.562509536743164
    9. '  ' → logprob: -17.812509536743164
    10. '۲' → logprob: -18.187509536743164

Token 608: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ')
' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.250011444091797
    4. ' )' → logprob: -14.875011444091797
    5. ')

' → logprob: -17.625011444091797
    6. '<|end|>' → logprob: -17.625011444091797
    7. '),' → logprob: -17.750011444091797
    8. ')
' → logprob: -18.000011444091797
    9. ')#' → logprob: -18.500011444091797
    10. '")' → logprob: -18.625011444091797

Token 609: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.9650025428272784e-05
    2. '#' → logprob: -11.750040054321289
    3. 'for' → logprob: -11.750040054321289
    4. '(p' → logprob: -12.000040054321289
    5. 'k' → logprob: -12.375040054321289
    6. '<|end|>' → logprob: -12.375040054321289
    7. '```' → logprob: -13.000040054321289
    8. '
' → logprob: -13.000040054321289
    9. ' p' → logprob: -13.500040054321289
    10. '(' → logprob: -14.250040054321289

Token 610: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038944309926591814
    2. '#' → logprob: -7.875389575958252
    3. 'print' → logprob: -11.750389099121094
    4. 'if' → logprob: -14.375389099121094
    5. 'for' → logprob: -14.500389099121094
    6. ' p' → logprob: -15.625389099121094
    7. 'k' → logprob: -16.375389099121094
    8. '```' → logprob: -16.625389099121094
    9. '   ' → logprob: -17.250389099121094
    10. '	p' → logprob: -18.125389099121094

Token 611: ' connect' (ID: 4837)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015187136828899384
    2. '(n' → logprob: -4.5151872634887695
    3. '(' → logprob: -5.8901872634887695
    4. '(k' → logprob: -7.2651872634887695
    5. 'k' → logprob: -8.26518726348877
    6. '(p' → logprob: -8.51518726348877
    7. '#' → logprob: -9.76518726348877
    8. 'for' → logprob: -10.01518726348877
    9. 'n' → logprob: -10.51518726348877
    10. '+' → logprob: -10.76518726348877

Token 612: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0023270058445632458
    2. 'k' → logprob: -7.002326965332031
    3. '(n' → logprob: -7.627326965332031
    4. '(k' → logprob: -7.752326965332031
    5. 'p' → logprob: -8.127326965332031
    6. 'n' → logprob: -8.752326965332031
    7. '(p' → logprob: -10.377326965332031
    8. 're' → logprob: -12.502326965332031
    9. 't' → logprob: -13.377326965332031
    10. '{k' → logprob: -13.877326965332031

Token 613: ' le' (ID: 505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33272114396095276
    2. 'n' → logprob: -1.4577211141586304
    3. '(k' → logprob: -3.70772123336792
    4. 'k' → logprob: -3.83272123336792
    5. '(' → logprob: -5.70772123336792
    6. '2' → logprob: -7.83272123336792
    7. '1' → logprob: -8.582720756530762
    8. '   ' → logprob: -9.957720756530762
    9. ' n' → logprob: -9.957720756530762
    10. ' (' → logprob: -10.582720756530762

Token 614: ' sommet' (ID: 130502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018182365223765373
    2. 'k' → logprob: -4.268182277679443
    3. '(n' → logprob: -6.518182277679443
    4. '2' → logprob: -6.643182277679443
    5. '0' → logprob: -7.768182277679443
    6. 'p' → logprob: -8.018182754516602
    7. '1' → logprob: -8.018182754516602
    8. 'i' → logprob: -9.643182754516602
    9. ' n' → logprob: -10.393182754516602
    10. '(k' → logprob: -10.643182754516602

Token 615: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024191951379179955
    2. '(n' → logprob: -4.274191856384277
    3. 'k' → logprob: -4.649191856384277
    4. '2' → logprob: -8.774191856384277
    5. '(k' → logprob: -8.774191856384277
    6. '(' → logprob: -10.149191856384277
    7. ' n' → logprob: -10.524191856384277
    8. '1' → logprob: -11.024191856384277
    9. ' (' → logprob: -12.899191856384277
    10. '0' → logprob: -12.899191856384277

Token 616: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08826099336147308
    2. ' +' → logprob: -2.7132608890533447
    3. '+k' → logprob: -4.588261127471924
    4. '+n' → logprob: -5.088261127471924
    5. '-' → logprob: -7.463261127471924
    6. ',' → logprob: -7.713261127471924
    7. '+i' → logprob: -8.088260650634766
    8. '+p' → logprob: -9.338260650634766
    9. ' -' → logprob: -9.588260650634766
    10. ' ' → logprob: -9.588260650634766

Token 617: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017552385106682777
    2. ' +' → logprob: -4.767552375793457
    3. ',' → logprob: -5.142552375793457
    4. '+k' → logprob: -6.517552375793457
    5. '+n' → logprob: -7.267552375793457
    6. '-' → logprob: -8.142552375793457
    7. '+,' → logprob: -8.142552375793457
    8. '1' → logprob: -8.767552375793457
    9. ' ,' → logprob: -10.517552375793457
    10. ' ' → logprob: -10.642552375793457

Token 618: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003960616886615753
    2. ' n' → logprob: -6.128960609436035
    3. '2' → logprob: -7.003960609436035
    4. 'k' → logprob: -7.253960609436035
    5. '(n' → logprob: -9.003960609436035
    6. '1' → logprob: -11.253960609436035
    7. ' ' → logprob: -12.003960609436035
    8. '(' → logprob: -12.378960609436035
    9. 'p' → logprob: -12.503960609436035
    10. '(k' → logprob: -13.253960609436035

Token 619: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20255319774150848
    2. '+k' → logprob: -2.0775532722473145
    3. ' +' → logprob: -2.9525532722473145
    4. '+n' → logprob: -5.5775532722473145
    5. ',' → logprob: -6.4525532722473145
    6. '+,' → logprob: -8.077552795410156
    7. '+p' → logprob: -9.702552795410156
    8. '+i' → logprob: -10.327552795410156
    9. '(' → logprob: -10.327552795410156
    10. ' ' → logprob: -10.577552795410156

Token 620: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07893925160169601
    2. '1' → logprob: -2.578939199447632
    3. ' k' → logprob: -10.703939437866211
    4. '2' → logprob: -11.078939437866211
    5. 'n' → logprob: -11.578939437866211
    6. ' ' → logprob: -13.453939437866211
    7. '(k' → logprob: -14.328939437866211
    8. '(' → logprob: -16.07893943786621
    9. '+k' → logprob: -16.70393943786621
    10. 'i' → logprob: -16.95393943786621

Token 621: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002836232597474009
    2. '(n' → logprob: -8.250283241271973
    3. '(p' → logprob: -11.125283241271973
    4. ' p' → logprob: -12.125283241271973
    5. '(' → logprob: -13.875283241271973
    6. '   ' → logprob: -14.125283241271973
    7. ' ' → logprob: -15.625283241271973
    8. ',' → logprob: -15.750283241271973
    9. 'n' → logprob: -16.25028419494629
    10. '```' → logprob: -17.00028419494629

Token 622: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. '(n' → logprob: -15.25
    3. '(p' → logprob: -19.625
    4. '```' → logprob: -21.125
    5. 'print' → logprob: -21.75
    6. 'n' → logprob: -22.375
    7. '(' → logprob: -22.5
    8. ' p' → logprob: -23.125
    9. '   ' → logprob: -26.25
    10. '[n' → logprob: -26.375

Token 623: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00022570860164705664
    2. '(' → logprob: -8.500226020812988
    3. 'n' → logprob: -10.750226020812988
    4. ',' → logprob: -15.125226020812988
    5. ' (' → logprob: -15.875226020812988
    6. '(k' → logprob: -16.000225067138672
    7. '(
' → logprob: -16.125225067138672
    8. ',n' → logprob: -16.500225067138672
    9. '((' → logprob: -18.000225067138672
    10. '```' → logprob: -18.375225067138672

Token 624: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02071273699402809
    2. ' +' → logprob: -4.520712852478027
    3. '+k' → logprob: -4.645712852478027
    4. ' ' → logprob: -12.270712852478027
    5. 'k' → logprob: -12.895712852478027
    6. '+
' → logprob: -13.020712852478027
    7. '＋' → logprob: -13.645712852478027
    8. '   ' → logprob: -13.770712852478027
    9. '+n' → logprob: -14.145712852478027
    10. '	' → logprob: -14.270712852478027

Token 625: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.125
    3. '	k' → logprob: -20.5
    4. '1' → logprob: -21.875
    5. 'к' → logprob: -22.5
    6. '{k' → logprob: -23.0
    7. ' ' → logprob: -23.25
    8. 'kx' → logprob: -23.875
    9. '(k' → logprob: -24.0
    10. '+k' → logprob: -24.375

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005246329586952925
    2. '1' → logprob: -6.255246162414551
    3. ' ,' → logprob: -6.380246162414551
    4. ',n' → logprob: -7.005246162414551
    5. ',k' → logprob: -7.505246162414551
    6. ')' → logprob: -9.88024616241455
    7. '+' → logprob: -9.88024616241455
    8. ' ' → logprob: -10.63024616241455
    9. '-' → logprob: -11.50524616241455
    10. '   ' → logprob: -12.25524616241455

Token 627: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023246407508850098
    2. ' n' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.398246765136719
    4. '1' → logprob: -15.773246765136719
    5. '	n' → logprob: -15.773246765136719
    6. ' ' → logprob: -16.27324676513672
    7. ')' → logprob: -18.27324676513672
    8. ')n' → logprob: -18.27324676513672
    9. '(n' → logprob: -18.52324676513672
    10. ' ' → logprob: -18.52324676513672

Token 628: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020547958090901375
    2. ' +' → logprob: -3.895547866821289
    3. '1' → logprob: -12.520547866821289
    4. ' ' → logprob: -14.145547866821289
    5. '+
' → logprob: -14.895547866821289
    6. ' plus' → logprob: -15.520547866821289
    7. '＋' → logprob: -15.645547866821289
    8. '   ' → logprob: -16.02054786682129
    9. ')' → logprob: -16.02054786682129
    10. 'plus' → logprob: -16.08304786682129

Token 629: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -21.25
    4. '   ' → logprob: -21.625
    5. 'k' → logprob: -21.875
    6. '１' → logprob: -22.0
    7. '<|end|>' → logprob: -22.125
    8. '۱' → logprob: -22.625
    9. '  ' → logprob: -22.875
    10. '১' → logprob: -23.125

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -18.625
    4. 'k' → logprob: -19.125
    5. '2' → logprob: -20.5
    6. '۱' → logprob: -20.5
    7. '１' → logprob: -20.75
    8. '   ' → logprob: -21.125
    9. 'n' → logprob: -21.25
    10. '```' → logprob: -21.75

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -17.875
    5. ')#' → logprob: -18.125
    6. '),' → logprob: -18.875
    7. ')

' → logprob: -19.0
    8. '#' → logprob: -19.125
    9. ')}' → logprob: -19.25
    10. ')n' → logprob: -19.375

Token 632: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31011343002319336
    2. 'for' → logprob: -2.1851134300231934
    3. '<|end|>' → logprob: -2.1851134300231934
    4. 'p' → logprob: -3.4351134300231934
    5. '```' → logprob: -5.310113430023193
    6. 'n' → logprob: -6.560113430023193
    7. ')' → logprob: -7.185113430023193
    8. 'k' → logprob: -7.310113430023193
    9. 'exit' → logprob: -7.560113430023193
    10. 'print' → logprob: -8.435113906860352

Token 634: ' connect' (ID: 4837)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.09742238372564316
    2. 'p' → logprob: -2.5974223613739014
    3. ' p' → logprob: -5.4724225997924805
    4. 'for' → logprob: -5.4724225997924805
    5. 'n' → logprob: -6.3474225997924805
    6. '+' → logprob: -6.4724225997924805
    7. ' exit' → logprob: -6.8474225997924805
    8. '(n' → logprob: -6.8474225997924805
    9. 'k' → logprob: -7.5974225997924805
    10. 'continue' → logprob: -7.5974225997924805

Token 635: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09089095890522003
    2. 'le' → logprob: -3.465890884399414
    3. '(n' → logprob: -4.090890884399414
    4. 'p' → logprob: -4.340890884399414
    5. 'k' → logprob: -4.840890884399414
    6. 'n' → logprob: -4.965890884399414
    7. 'connect' → logprob: -5.715890884399414
    8. 're' → logprob: -5.965890884399414
    9. '(p' → logprob: -5.965890884399414
    10. 't' → logprob: -7.090890884399414

Token 636: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21511803567409515
    2. 'n' → logprob: -1.7151180505752563
    3. '(n' → logprob: -4.840117931365967
    4. '(k' → logprob: -5.340117931365967
    5. ' k' → logprob: -7.715117931365967
    6. ' n' → logprob: -8.215118408203125
    7. '1' → logprob: -9.465118408203125
    8. '(' → logprob: -9.715118408203125
    9. 'p' → logprob: -10.840118408203125
    10. '2' → logprob: -11.590118408203125

Token 637: ' sommet' (ID: 130502)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3892875015735626
    2. 'n' → logprob: -1.1392874717712402
    3. '1' → logprob: -6.13928747177124
    4. '2' → logprob: -9.389287948608398
    5. '0' → logprob: -9.389287948608398
    6. 'p' → logprob: -10.389287948608398
    7. ' n' → logprob: -11.014287948608398
    8. '(n' → logprob: -11.389287948608398
    9. ' k' → logprob: -11.514287948608398
    10. '(k' → logprob: -12.264287948608398

Token 638: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.32788628339767456
    2. 'n' → logprob: -1.3278863430023193
    3. ' n' → logprob: -5.45288610458374
    4. '1' → logprob: -5.57788610458374
    5. ' k' → logprob: -5.82788610458374
    6. ',' → logprob: -6.57788610458374
    7. '(n' → logprob: -6.70288610458374
    8. '(k' → logprob: -7.70288610458374
    9. '2' → logprob: -8.452886581420898
    10. ' ' → logprob: -9.327886581420898

Token 639: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02566610649228096
    2. ' +' → logprob: -4.025666236877441
    3. '+k' → logprob: -5.025666236877441
    4. ',' → logprob: -7.275666236877441
    5. '+n' → logprob: -8.525666236877441
    6. '+,' → logprob: -11.525666236877441
    7. ' ,' → logprob: -12.400666236877441
    8. '   ' → logprob: -12.650666236877441
    9. ',k' → logprob: -12.775666236877441
    10. '+p' → logprob: -12.900666236877441

Token 640: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02082587406039238
    2. ' +' → logprob: -4.3958258628845215
    3. '-' → logprob: -5.3958258628845215
    4. ',' → logprob: -5.6458258628845215
    5. '+n' → logprob: -9.64582633972168
    6. ' -' → logprob: -9.89582633972168
    7. '+k' → logprob: -10.39582633972168
    8. '+,' → logprob: -10.64582633972168
    9. ' ,' → logprob: -11.14582633972168
    10. ' ' → logprob: -11.77082633972168

Token 641: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002476724097505212
    2. ' ' → logprob: -6.627476692199707
    3. 'k' → logprob: -7.252476692199707
    4. '1' → logprob: -7.752476692199707
    5. '3' → logprob: -12.377476692199707
    6. ' k' → logprob: -12.627476692199707
    7. '+' → logprob: -13.752476692199707
    8. '   ' → logprob: -14.252476692199707
    9. 'n' → logprob: -14.377476692199707
    10. '+k' → logprob: -14.377476692199707

Token 642: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002319987630471587
    2. ',n' → logprob: -6.627319812774658
    3. ' ,' → logprob: -7.252319812774658
    4. '(n' → logprob: -8.752320289611816
    5. '+' → logprob: -9.877320289611816
    6. 'p' → logprob: -10.752320289611816
    7. 'n' → logprob: -10.877320289611816
    8. '   ' → logprob: -11.502320289611816
    9. ' +' → logprob: -11.752320289611816
    10. '(' → logprob: -12.127320289611816

Token 643: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25470414757728577
    2. ' n' → logprob: -1.5047041177749634
    3. 'k' → logprob: -6.254703998565674
    4. ' k' → logprob: -7.504703998565674
    5. ' ' → logprob: -9.504704475402832
    6. '1' → logprob: -9.629704475402832
    7. '2' → logprob: -9.629704475402832
    8. 'p' → logprob: -10.379704475402832
    9. '(n' → logprob: -11.129704475402832
    10. ' p' → logprob: -11.254704475402832

Token 644: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08634664863348007
    2. 'p' → logprob: -3.0863466262817383
    3. ',' → logprob: -3.3363466262817383
    4. '(' → logprob: -6.836346626281738
    5. '(p' → logprob: -7.961346626281738
    6. 'n' → logprob: -10.836346626281738
    7. ',n' → logprob: -10.961346626281738
    8. '(k' → logprob: -11.586346626281738
    9. ',p' → logprob: -11.711346626281738
    10. ' p' → logprob: -12.336346626281738

Token 645: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009002508595585823
    2. '(n' → logprob: -4.759002685546875
    3. '(p' → logprob: -8.009002685546875
    4. ' p' → logprob: -10.134002685546875
    5. '(' → logprob: -11.509002685546875
    6. 'n' → logprob: -12.384002685546875
    7. ',' → logprob: -14.759002685546875
    8. 'k' → logprob: -15.259002685546875
    9. '```' → logprob: -15.259002685546875
    10. '(k' → logprob: -15.384002685546875

Token 646: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003185198176652193
    2. '(' → logprob: -5.753185272216797
    3. 'n' → logprob: -12.253185272216797
    4. '(k' → logprob: -13.003185272216797
    5. ' (' → logprob: -15.378185272216797
    6. '((' → logprob: -16.878185272216797
    7. ',' → logprob: -16.878185272216797
    8. ' n' → logprob: -17.003185272216797
    9. '(+' → logprob: -17.378185272216797
    10. '+' → logprob: -17.628185272216797

Token 647: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08989905565977097
    2. ' +' → logprob: -2.4648990631103516
    3. '+k' → logprob: -6.964899063110352
    4. ' ' → logprob: -12.464899063110352
    5. '+
' → logprob: -12.714899063110352
    6. '＋' → logprob: -13.589899063110352
    7. '+,' → logprob: -14.089899063110352
    8. 'k' → logprob: -14.214899063110352
    9. '+n' → logprob: -14.214899063110352
    10. ' ' → logprob: -14.714899063110352

Token 648: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030765004456043243
    2. '1' → logprob: -4.155765056610107
    3. ' k' → logprob: -4.405765056610107
    4. ' ' → logprob: -6.030765056610107
    5. '2' → logprob: -12.40576457977295
    6. '+k' → logprob: -13.15576457977295
    7. '	k' → logprob: -13.28076457977295
    8. '+' → logprob: -13.53076457977295
    9. '  ' → logprob: -13.78076457977295
    10. '   ' → logprob: -14.53076457977295

Token 649: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009189864620566368
    2. ' +' → logprob: -4.759190082550049
    3. ',' → logprob: -7.634190082550049
    4. '+,' → logprob: -9.75918960571289
    5. '-' → logprob: -11.38418960571289
    6. ' ' → logprob: -11.88418960571289
    7. ' ,' → logprob: -12.25918960571289
    8. '+k' → logprob: -12.38418960571289
    9. '   ' → logprob: -13.13418960571289
    10. '1' → logprob: -13.88418960571289

Token 650: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022103239316493273
    2. ' ' → logprob: -6.1272101402282715
    3. '2' → logprob: -11.12721061706543
    4. '0' → logprob: -11.62721061706543
    5. '   ' → logprob: -14.12721061706543
    6. '  ' → logprob: -15.43971061706543
    7. '3' → logprob: -16.25221061706543
    8. '```' → logprob: -16.25221061706543
    9. ',' → logprob: -16.62721061706543
    10. '-' → logprob: -16.75221061706543

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.877503907773644e-05
    2. ' ' → logprob: -9.500099182128906
    3. '2' → logprob: -11.000099182128906
    4. '0' → logprob: -12.000099182128906
    5. '+' → logprob: -14.750099182128906
    6. 'k' → logprob: -15.625099182128906
    7. '-' → logprob: -16.187599182128906
    8. '   ' → logprob: -16.312599182128906
    9. '```' → logprob: -16.437599182128906
    10. '3' → logprob: -17.312599182128906

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014474987983703613
    2. ',k' → logprob: -6.751447677612305
    3. ' ,' → logprob: -8.376447677612305
    4. ',n' → logprob: -10.126447677612305
    5. ',p' → logprob: -12.251447677612305
    6. ')' → logprob: -13.751447677612305
    7. ',
' → logprob: -14.501447677612305
    8. 'k' → logprob: -16.251447677612305
    9. ' ' → logprob: -16.501447677612305
    10. '   ' → logprob: -16.501447677612305

Token 653: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011097577400505543
    2. ' k' → logprob: -4.511097431182861
    3. '1' → logprob: -10.26109790802002
    4. 'n' → logprob: -11.51109790802002
    5. ' ' → logprob: -12.88609790802002
    6. ' n' → logprob: -13.13609790802002
    7. '	k' → logprob: -15.76109790802002
    8. '2' → logprob: -16.511096954345703
    9. ',' → logprob: -16.886096954345703
    10. '9' → logprob: -17.261096954345703

Token 654: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. '+' → logprob: -11.750017166137695
    3. ')
' → logprob: -12.750017166137695
    4. '(n' → logprob: -13.250017166137695
    5. '(' → logprob: -13.500017166137695
    6. '#' → logprob: -14.500017166137695
    7. ' )' → logprob: -15.000017166137695
    8. 'n' → logprob: -15.125017166137695
    9. '(k' → logprob: -15.125017166137695
    10. ',' → logprob: -15.250017166137695

Token 655: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014727258123457432
    2. '#' → logprob: -4.3897271156311035
    3. 'n' → logprob: -6.7647271156311035
    4. 'for' → logprob: -7.8897271156311035
    5. '<|end|>' → logprob: -8.639727592468262
    6. 'k' → logprob: -8.764727592468262
    7. '(n' → logprob: -9.264727592468262
    8. '```' → logprob: -9.514727592468262
    9. ')' → logprob: -10.014727592468262
    10. 'print' → logprob: -10.264727592468262

Token 656: ' Dern' (ID: 159363)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13932999968528748
    2. 'for' → logprob: -2.2643299102783203
    3. '#' → logprob: -3.8893299102783203
    4. 'if' → logprob: -6.01432991027832
    5. 'print' → logprob: -6.13932991027832
    6. 'exit' → logprob: -7.88932991027832
    7. 'n' → logprob: -8.13932991027832
    8. 'while' → logprob: -8.63932991027832
    9. 'k' → logprob: -9.13932991027832
    10. '```' → logprob: -10.01432991027832

Token 657: 'ière' (ID: 12452)
  Prédit: 'ière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.24159055948257446
    2. 'ier' → logprob: -2.2415904998779297
    3. 'for' → logprob: -2.9915904998779297
    4. 'iers' → logprob: -3.2415904998779297
    5. 'ières' → logprob: -4.11659049987793
    6. 'iere' → logprob: -6.36659049987793
    7. 'if' → logprob: -8.11659049987793
    8. 'i' → logprob: -8.49159049987793
    9. 'ieres' → logprob: -9.11659049987793
    10. ' for' → logprob: -9.49159049987793

Token 658: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8310854434967041
    2. 'bou' → logprob: -1.081085443496704
    3. ' boucle' → logprob: -1.581085443496704
    4. 'p' → logprob: -4.206085205078125
    5. 'ligne' → logprob: -6.206085205078125
    6. ' bou' → logprob: -7.081085205078125
    7. ' for' → logprob: -7.331085205078125
    8. 'loop' → logprob: -7.956085205078125
    9. '#' → logprob: -8.331085205078125
    10. ' p' → logprob: -8.956085205078125

Token 659: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3856492842023727e-06
    2. ' for' → logprob: -14.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. '
' → logprob: -16.625001907348633
    5. '#' → logprob: -18.375001907348633
    6. 'r' → logprob: -18.500001907348633
    7. '``' → logprob: -20.500001907348633
    8. 'n' → logprob: -21.000001907348633
    9. '	for' → logprob: -21.125001907348633
    10. ')' → logprob: -21.125001907348633

Token 660: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.2987729102605954e-05
    2. 'r' → logprob: -10.125042915344238
    3. ' for' → logprob: -13.000042915344238
    4. '```' → logprob: -15.000042915344238
    5. '
' → logprob: -16.000043869018555
    6. '`' → logprob: -17.000043869018555
    7. 'p' → logprob: -17.250043869018555
    8. 'i' → logprob: -17.875043869018555
    9. '   ' → logprob: -18.000043869018555
    10. '	for' → logprob: -18.125043869018555

Token 661: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002790935104712844
    2. ' i' → logprob: -8.250279426574707
    3. 'for' → logprob: -12.375279426574707
    4. 'j' → logprob: -12.375279426574707
    5. 'k' → logprob: -13.375279426574707
    6. 'r' → logprob: -13.375279426574707
    7. 'n' → logprob: -13.500279426574707
    8. '   ' → logprob: -13.875279426574707
    9. '	i' → logprob: -14.125279426574707
    10. '_' → logprob: -14.250279426574707

Token 662: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134055733680725
    2. ' in' → logprob: -1.3134055137634277
    3. 'n' → logprob: -9.688405990600586
    4. 'i' → logprob: -10.563405990600586
    5. '(n' → logprob: -10.813405990600586
    6. ' ' → logprob: -12.188405990600586
    7. ' i' → logprob: -12.438405990600586
    8. 'k' → logprob: -12.688405990600586
    9. '   ' → logprob: -12.688405990600586
    10. 'r' → logprob: -12.813405990600586

Token 663: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001079014502465725
    2. 'range' → logprob: -6.876079082489014
    3. ' r' → logprob: -10.501078605651855
    4. '(r' → logprob: -11.126078605651855
    5. '[r' → logprob: -13.751078605651855
    6. ' range' → logprob: -14.376078605651855
    7. '	r' → logprob: -14.376078605651855
    8. 're' → logprob: -14.376078605651855
    9. 'p' → logprob: -15.501078605651855
    10. 'n' → logprob: -15.626078605651855

Token 664: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00118546886369586
    2. 'range' → logprob: -6.751185417175293
    3. '(r' → logprob: -12.001185417175293
    4. ' r' → logprob: -12.751185417175293
    5. '[r' → logprob: -13.376185417175293
    6. 're' → logprob: -13.376185417175293
    7. 'p' → logprob: -13.501185417175293
    8. '	r' → logprob: -14.751185417175293
    9. 'k' → logprob: -15.501185417175293
    10. ' range' → logprob: -15.626185417175293

Token 665: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008337968960404396
    2. ' r' → logprob: -5.63333797454834
    3. 'range' → logprob: -5.63333797454834
    4. '(r' → logprob: -7.13333797454834
    5. 'in' → logprob: -8.25833797454834
    6. 'k' → logprob: -10.13333797454834
    7. '(n' → logprob: -11.13333797454834
    8. ' in' → logprob: -11.38333797454834
    9. '(k' → logprob: -12.13333797454834
    10. 'n' → logprob: -12.38333797454834

Token 666: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3565303385257721
    2. 'k' → logprob: -1.2315303087234497
    3. 'n' → logprob: -4.98153018951416
    4. ' r' → logprob: -7.73153018951416
    5. ' k' → logprob: -8.60653018951416
    6. '2' → logprob: -8.73153018951416
    7. '(k' → logprob: -8.73153018951416
    8. '(n' → logprob: -9.48153018951416
    9. '(r' → logprob: -10.10653018951416
    10. '1' → logprob: -10.10653018951416

Token 667: '-k' (ID: 10897)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0723041370511055
    2. '-' → logprob: -3.4473042488098145
    3. ' r' → logprob: -4.4473042488098145
    4. '(n' → logprob: -4.5723042488098145
    5. 'n' → logprob: -5.1973042488098145
    6. '(r' → logprob: -5.5723042488098145
    7. ' -' → logprob: -6.3223042488098145
    8. 'for' → logprob: -6.4473042488098145
    9. ' for' → logprob: -6.9473042488098145
    10. 'range' → logprob: -7.6973042488098145

Token 668: '-' (ID: 12)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.033373866230249405
    2. '(r' → logprob: -3.6583738327026367
    3. 'for' → logprob: -6.033373832702637
    4. '(' → logprob: -6.783373832702637
    5. '(n' → logprob: -6.783373832702637
    6. '```' → logprob: -6.783373832702637
    7. ' r' → logprob: -8.033373832702637
    8. '(k' → logprob: -9.033373832702637
    9. '+r' → logprob: -9.283373832702637
    10. '-' → logprob: -9.533373832702637

Token 669: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11429665982723236
    2. '2' → logprob: -2.2392966747283936
    3. '1' → logprob: -6.6142964363098145
    4. ' ' → logprob: -9.739296913146973
    5. 'r' → logprob: -9.864296913146973
    6. '(' → logprob: -12.301796913146973
    7. '4' → logprob: -12.614296913146973
    8. '```' → logprob: -12.676796913146973
    9. '   ' → logprob: -13.051796913146973
    10. 'k' → logprob: -13.364296913146973

Token 670: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17009401321411133
    2. '(r' → logprob: -2.6700940132141113
    3. 'r' → logprob: -3.0450940132141113
    4. ' for' → logprob: -4.170094013214111
    5. '```' → logprob: -4.920094013214111
    6. 'in' → logprob: -5.295094013214111
    7. '[r' → logprob: -5.420094013214111
    8. ':' → logprob: -5.670094013214111
    9. ':r' → logprob: -7.170094013214111
    10. '(n' → logprob: -7.295094013214111

Token 671: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0054806252010166645
    2. ' for' → logprob: -5.255480766296387
    3. 'in' → logprob: -8.505480766296387
    4. '```' → logprob: -10.505480766296387
    5. 'r' → logprob: -11.755480766296387
    6. ' in' → logprob: -12.380480766296387
    7. '
' → logprob: -13.630480766296387
    8. '[' → logprob: -14.005480766296387
    9. '(r' → logprob: -14.255480766296387
    10. ':' → logprob: -14.380480766296387

Token 672: 'don' (ID: 22130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11041940003633499
    2. 'r' → logprob: -2.360419511795044
    3. ' for' → logprob: -5.235419273376465
    4. '```' → logprob: -5.360419273376465
    5. 'n' → logprob: -9.610419273376465
    6. 'in' → logprob: -10.735419273376465
    7. ' r' → logprob: -10.985419273376465
    8. 'p' → logprob: -11.735419273376465
    9. ' in' → logprob: -12.735419273376465
    10. 'i' → logprob: -12.860419273376465

Token 673: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031579919159412384
    2. ' r' → logprob: -6.003158092498779
    3. 'range' → logprob: -7.503158092498779
    4. '   ' → logprob: -10.503157615661621
    5. ' ' → logprob: -10.753157615661621
    6. ')' → logprob: -11.253157615661621
    7. '```' → logprob: -11.253157615661621
    8. '  ' → logprob: -11.878157615661621
    9. ' range' → logprob: -12.003157615661621
    10. ' ' → logprob: -12.253157615661621

Token 674: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008392347022891045
    2. 'n' → logprob: -4.883392333984375
    3. ' r' → logprob: -7.258392333984375
    4. ' n' → logprob: -10.508392333984375
    5. '(n' → logprob: -10.633392333984375
    6. 'range' → logprob: -11.008392333984375
    7. '(r' → logprob: -12.383392333984375
    8. 'p' → logprob: -12.508392333984375
    9. 'k' → logprob: -13.008392333984375
    10. '```' → logprob: -14.258392333984375

Token 675: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.04142371192574501
    2. ' -' → logprob: -3.541423797607422
    3. '-' → logprob: -4.541423797607422
    4. 'k' → logprob: -7.416423797607422
    5. '```' → logprob: -9.041423797607422
    6. '+k' → logprob: -9.541423797607422
    7. '+' → logprob: -9.791423797607422
    8. '-r' → logprob: -10.166423797607422
    9. 'r' → logprob: -11.416423797607422
    10. ' k' → logprob: -11.791423797607422

Token 676: ' éléments' (ID: 57375)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19001106917858124
    2. ' -' → logprob: -2.4400110244750977
    3. '):
' → logprob: -2.9400110244750977
    4. '):' → logprob: -3.4400110244750977
    5. '+' → logprob: -8.190011024475098
    6. '```' → logprob: -8.690011024475098
    7. '):
' → logprob: -9.065011024475098
    8. '):

' → logprob: -9.565011024475098
    9. 'r' → logprob: -9.815011024475098
    10. ')' → logprob: -9.940011024475098

Token 677: ' au' (ID: 2791)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11009697616100311
    2. 'for' → logprob: -3.2350969314575195
    3. ' in' → logprob: -3.4850969314575195
    4. 'r' → logprob: -4.6100969314575195
    5. '(r' → logprob: -4.7350969314575195
    6. '):
' → logprob: -5.2350969314575195
    7. ':' → logprob: -5.8600969314575195
    8. '```' → logprob: -6.4850969314575195
    9. '(n' → logprob: -6.6100969314575195
    10. ' for' → logprob: -6.9850969314575195

Token 678: ' total' (ID: 3609)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006293145008385181
    2. 'range' → logprob: -5.131293296813965
    3. ' r' → logprob: -8.006293296813965
    4. ' range' → logprob: -11.131293296813965
    5. '	r' → logprob: -12.131293296813965
    6. '1' → logprob: -12.131293296813965
    7. '(r' → logprob: -13.131293296813965
    8. '2' → logprob: -14.631293296813965
    9. '	range' → logprob: -14.631293296813965
    10. '```' → logprob: -14.881293296813965

Token 679: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03282894939184189
    2. ':' → logprob: -4.0328288078308105
    3. ' for' → logprob: -4.7828288078308105
    4. ':
' → logprob: -5.9078288078308105
    5. '):
' → logprob: -6.4078288078308105
    6. 'in' → logprob: -6.7828288078308105
    7. '```' → logprob: -8.407829284667969
    8. 'r' → logprob: -8.532829284667969
    9. '):' → logprob: -9.407829284667969
    10. ' in' → logprob: -9.407829284667969

Token 680: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.125003814697266
    3. ' for' → logprob: -13.375003814697266
    4. '
' → logprob: -18.625003814697266
    5. '	for' → logprob: -20.625003814697266
    6. 'r' → logprob: -21.375003814697266
    7. '``' → logprob: -21.500003814697266
    8. 'range' → logprob: -21.875003814697266
    9. '﻿' → logprob: -22.750003814697266
    10. '[' → logprob: -23.000003814697266

Token 681: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031781906727701426
    2. ' i' → logprob: -5.753178119659424
    3. '	i' → logprob: -14.878178596496582
    4. 'in' → logprob: -17.253177642822266
    5. ' ' → logprob: -17.253177642822266
    6. ' in' → logprob: -17.253177642822266
    7. '`' → logprob: -17.503177642822266
    8. '```' → logprob: -17.503177642822266
    9. '   ' → logprob: -17.878177642822266
    10. ' ' → logprob: -18.128177642822266

Token 682: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05494525283575058
    2. 'in' → logprob: -2.929945230484009
    3. 'r' → logprob: -10.17994499206543
    4. ' r' → logprob: -11.55494499206543
    5. 'd' → logprob: -12.17994499206543
    6. '   ' → logprob: -12.80494499206543
    7. 's' → logprob: -13.30494499206543
    8. 'In' → logprob: -13.55494499206543
    9. ' ' → logprob: -13.80494499206543
    10. '  ' → logprob: -14.42994499206543

Token 683: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015358183532953262
    2. ' r' → logprob: -4.390357971191406
    3. 'range' → logprob: -5.890357971191406
    4. ' range' → logprob: -9.515357971191406
    5. '	r' → logprob: -12.765357971191406
    6. '(r' → logprob: -15.015357971191406
    7. '_r' → logprob: -15.140357971191406
    8. 'rang' → logprob: -15.390357971191406
    9. 'p' → logprob: -15.765357971191406
    10. ' р' → logprob: -15.890357971191406

Token 684: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016277639952022582
    2. '(' → logprob: -8.750163078308105
    3. 'n' → logprob: -12.500163078308105
    4. '(
' → logprob: -15.000163078308105
    5. '((' → logprob: -16.37516212463379
    6. ' (' → logprob: -16.50016212463379
    7. '()' → logprob: -19.75016212463379
    8. ' ' → logprob: -19.87516212463379
    9. ' n' → logprob: -19.87516212463379
    10. '(

' → logprob: -20.25016212463379

Token 685: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3037412762641907
    2. '-k' → logprob: -1.428741216659546
    3. '-' → logprob: -3.803741216659546
    4. 'k' → logprob: -11.428741455078125
    5. ' k' → logprob: -11.803741455078125
    6. '   ' → logprob: -11.803741455078125
    7. ' ' → logprob: -11.928741455078125
    8. '(k' → logprob: -12.053741455078125
    9. '-n' → logprob: -12.803741455078125
    10. ')' → logprob: -13.553741455078125

Token 686: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.941850526549388e-06
    2. ' k' → logprob: -11.750007629394531
    3. '	k' → logprob: -16.75000762939453
    4. ' ' → logprob: -18.12500762939453
    5. '   ' → logprob: -18.50000762939453
    6. '-k' → logprob: -18.75000762939453
    7. 'к' → logprob: -20.37500762939453
    8. '{k' → logprob: -20.37500762939453
    9. ' к' → logprob: -20.62500762939453
    10. '(k' → logprob: -20.75000762939453

Token 687: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10109531879425049
    2. '):
' → logprob: -2.476095199584961
    3. '-' → logprob: -4.726095199584961
    4. ' -' → logprob: -6.851095199584961
    5. '):
' → logprob: -6.851095199584961
    6. ' ):' → logprob: -7.726095199584961
    7. ')' → logprob: -8.976095199584961
    8. '1' → logprob: -8.976095199584961
    9. '   ' → logprob: -8.976095199584961
    10. '+' → logprob: -9.476095199584961

Token 688: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006892150267958641
    2. '   ' → logprob: -5.006892204284668
    3. 'k' → logprob: -8.881892204284668
    4. '(p' → logprob: -11.506892204284668
    5. ' p' → logprob: -11.631892204284668
    6. '(n' → logprob: -12.381892204284668
    7. 'n' → logprob: -12.381892204284668
    8. '```' → logprob: -12.381892204284668
    9. '(k' → logprob: -12.631892204284668
    10. 'i' → logprob: -13.506892204284668

Token 689: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. '   ' → logprob: -7.5007100105285645
    3. 'k' → logprob: -9.625709533691406
    4. 'i' → logprob: -10.250709533691406
    5. 'print' → logprob: -10.250709533691406
    6. 'n' → logprob: -11.500709533691406
    7. ' p' → logprob: -11.750709533691406
    8. '(p' → logprob: -14.375709533691406
    9. '(n' → logprob: -14.500709533691406
    10. '    
' → logprob: -14.750709533691406

Token 690: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006426189211197197
    2. '   ' → logprob: -8.000642776489258
    3. 'if' → logprob: -8.125642776489258
    4. ' p' → logprob: -11.750642776489258
    5. ' ' → logprob: -13.750642776489258
    6. 'a' → logprob: -14.375642776489258
    7. '#' → logprob: -14.625642776489258
    8. '	p' → logprob: -14.625642776489258
    9. '  ' → logprob: -15.250642776489258
    10. 'print' → logprob: -15.375642776489258

Token 691: ' rel' (ID: 1536)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00899129081517458
    2. ' p' → logprob: -4.758991241455078
    3. '   ' → logprob: -8.258991241455078
    4. '(n' → logprob: -10.258991241455078
    5. ' ' → logprob: -10.383991241455078
    6. '(p' → logprob: -10.758991241455078
    7. 'k' → logprob: -11.508991241455078
    8. 'n' → logprob: -11.758991241455078
    9. '  ' → logprob: -12.758991241455078
    10. '    ' → logprob: -13.633991241455078

Token 692: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.05723893642425537
    2. 'p' → logprob: -3.807239055633545
    3. 'ie' → logprob: -3.807239055633545
    4. 'i' → logprob: -4.807239055633545
    5. 'ia' → logprob: -6.682239055633545
    6. '   ' → logprob: -7.807239055633545
    7. 'a' → logprob: -8.557238578796387
    8. 'e' → logprob: -9.307238578796387
    9. ' p' → logprob: -9.432238578796387
    10. 'ayer' → logprob: -9.619738578796387

Token 693: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6401982307434082
    2. 'k' → logprob: -0.8901982307434082
    3. 'n' → logprob: -3.265198230743408
    4. 'p' → logprob: -4.765198230743408
    5. '(i' → logprob: -4.890198230743408
    6. '(n' → logprob: -5.265198230743408
    7. '(k' → logprob: -6.015198230743408
    8. ' i' → logprob: -8.89019775390625
    9. '   ' → logprob: -9.01519775390625
    10. ' k' → logprob: -9.64019775390625

Token 694: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9898956418037415
    2. 'n' → logprob: -0.9898956418037415
    3. 'k' → logprob: -1.3648955821990967
    4. 'p' → logprob: -7.364895820617676
    5. '   ' → logprob: -7.989895820617676
    6. '1' → logprob: -9.239895820617676
    7. ' n' → logprob: -9.364895820617676
    8. ' i' → logprob: -9.489895820617676
    9. '(n' → logprob: -10.114895820617676
    10. ' k' → logprob: -10.364895820617676

Token 695: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6416316628456116
    2. ' +' → logprob: -0.7666316628456116
    3. '+i' → logprob: -4.766631603240967
    4. '+k' → logprob: -7.891631603240967
    5. '+n' → logprob: -9.891632080078125
    6. 'i' → logprob: -10.891632080078125
    7. ' ' → logprob: -12.266632080078125
    8. ' i' → logprob: -12.266632080078125
    9. '+p' → logprob: -12.266632080078125
    10. 'k' → logprob: -12.641632080078125

Token 696: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21150608360767365
    2. ' +' → logprob: -1.7115061283111572
    3. ',' → logprob: -4.711505889892578
    4. '+i' → logprob: -7.711505889892578
    5. '   ' → logprob: -8.586505889892578
    6. '+k' → logprob: -8.711505889892578
    7. ' ,' → logprob: -9.336505889892578
    8. '+n' → logprob: -9.836505889892578
    9. ')' → logprob: -10.461505889892578
    10. '```' → logprob: -10.836505889892578

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006334006320685148
    2. '2' → logprob: -5.506333827972412
    3. 'k' → logprob: -6.631333827972412
    4. ' ' → logprob: -7.006333827972412
    5. ' k' → logprob: -11.38133430480957
    6. '   ' → logprob: -12.25633430480957
    7. 'i' → logprob: -12.38133430480957
    8. 'n' → logprob: -12.75633430480957
    9. '  ' → logprob: -13.50633430480957
    10. '+' → logprob: -13.88133430480957

Token 698: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00373452203348279
    2. ' ,' → logprob: -6.003734588623047
    3. '+' → logprob: -7.378734588623047
    4. ',n' → logprob: -8.128734588623047
    5. '   ' → logprob: -9.003734588623047
    6. ' +' → logprob: -9.628734588623047
    7. ')' → logprob: -9.753734588623047
    8. '+n' → logprob: -10.378734588623047
    9. ',
' → logprob: -10.628734588623047
    10. '(n' → logprob: -11.753734588623047

Token 699: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006121587008237839
    2. ' ,' → logprob: -5.256121635437012
    3. ',n' → logprob: -7.256121635437012
    4. '+' → logprob: -10.006121635437012
    5. '   ' → logprob: -10.256121635437012
    6. ',
' → logprob: -10.381121635437012
    7. 'p' → logprob: -10.756121635437012
    8. '(n' → logprob: -11.131121635437012
    9. 'n' → logprob: -11.631121635437012
    10. ' +' → logprob: -11.881121635437012

Token 700: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11086998879909515
    2. '(n' → logprob: -2.360869884490967
    3. ' n' → logprob: -5.235869884490967
    4. 'k' → logprob: -5.735869884490967
    5. 'i' → logprob: -6.985869884490967
    6. '(' → logprob: -7.985869884490967
    7. ' (' → logprob: -8.235870361328125
    8. '(i' → logprob: -8.610870361328125
    9. '(k' → logprob: -8.985870361328125
    10. '   ' → logprob: -9.735870361328125

Token 701: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07195854932069778
    2. 'k' → logprob: -3.196958541870117
    3. 'i' → logprob: -3.696958541870117
    4. ' n' → logprob: -5.946958541870117
    5. '1' → logprob: -7.946958541870117
    6. ' i' → logprob: -8.821958541870117
    7. ' k' → logprob: -8.821958541870117
    8. 'p' → logprob: -9.321958541870117
    9. '(n' → logprob: -9.571958541870117
    10. '   ' → logprob: -9.571958541870117

Token 702: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.443293958902359
    2. ' +' → logprob: -1.3182939291000366
    3. '+k' → logprob: -2.568294048309326
    4. '+i' → logprob: -4.318294048309326
    5. 'k' → logprob: -8.068293571472168
    6. '+n' → logprob: -9.568293571472168
    7. ' ' → logprob: -10.193293571472168
    8. 'i' → logprob: -10.443293571472168
    9. ' k' → logprob: -11.755793571472168
    10. '   ' → logprob: -11.880793571472168

Token 703: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18169133365154266
    2. ' +' → logprob: -1.806691288948059
    3. '+i' → logprob: -6.3066911697387695
    4. ',' → logprob: -9.80669116973877
    5. '   ' → logprob: -10.55669116973877
    6. ' ' → logprob: -11.55669116973877
    7. ')' → logprob: -12.30669116973877
    8. ' ,' → logprob: -12.43169116973877
    9. '+,' → logprob: -12.55669116973877
    10. '+k' → logprob: -12.55669116973877

Token 704: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3877814710140228
    2. ' +' → logprob: -1.1377815008163452
    3. ')' → logprob: -7.262781620025635
    4. ',' → logprob: -9.137781143188477
    5. '2' → logprob: -10.887781143188477
    6. '   ' → logprob: -11.137781143188477
    7. ' )' → logprob: -11.137781143188477
    8. ' ,' → logprob: -11.637781143188477
    9. ' +
' → logprob: -12.262781143188477
    10. '+)' → logprob: -12.262781143188477

Token 705: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004517585039138794
    2. '1' → logprob: -5.629517555236816
    3. ' ' → logprob: -7.004517555236816
    4. '+' → logprob: -12.504517555236816
    5. '   ' → logprob: -12.629517555236816
    6. '3' → logprob: -14.567017555236816
    7. '  ' → logprob: -14.942017555236816
    8. '```' → logprob: -15.442017555236816
    9. '２' → logprob: -16.067018508911133
    10. 'n' → logprob: -16.379518508911133

Token 706: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34837132692337036
    2. ',' → logprob: -1.3483712673187256
    3. '+' → logprob: -4.348371505737305
    4. ' ,' → logprob: -4.723371505737305
    5. ' +' → logprob: -5.598371505737305
    6. ' )' → logprob: -5.723371505737305
    7. '   ' → logprob: -5.848371505737305
    8. ',n' → logprob: -7.223371505737305
    9. ',
' → logprob: -7.848371505737305
    10. '+n' → logprob: -7.848371505737305

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002666854066774249
    2. ' p' → logprob: -6.25266695022583
    3. 'p' → logprob: -7.87766695022583
    4. '(p' → logprob: -8.502666473388672
    5. '       ' → logprob: -9.127666473388672
    6. '	p' → logprob: -11.002666473388672
    7. ':' → logprob: -11.127666473388672
    8. ',p' → logprob: -12.252666473388672
    9. ',' → logprob: -12.627666473388672
    10. ')' → logprob: -13.252666473388672

Token 708: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.1395844668149948
    2. ' p' → logprob: -2.139584541320801
    3. '   ' → logprob: -4.389584541320801
    4. '(p' → logprob: -8.7645845413208
    5. '	p' → logprob: -11.3895845413208
    6. '  ' → logprob: -14.3895845413208
    7. '       ' → logprob: -14.3895845413208
    8. '(n' → logprob: -14.5145845413208
    9. ' ' → logprob: -14.7645845413208
    10. 'n' → logprob: -15.2645845413208

Token 709: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001600347168277949
    2. 'n' → logprob: -9.375160217285156
    3. '(' → logprob: -9.500160217285156
    4. ' (' → logprob: -15.375160217285156
    5. '(
' → logprob: -16.500160217285156
    6. '((' → logprob: -17.000160217285156
    7. '   ' → logprob: -17.125160217285156
    8. ' n' → logprob: -17.875160217285156
    9. '	n' → logprob: -18.125160217285156
    10. ' ' → logprob: -20.750160217285156

Token 710: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18022945523262024
    2. '+' → logprob: -1.8052294254302979
    3. '+i' → logprob: -7.680229663848877
    4. ' ' → logprob: -11.555229187011719
    5. '   ' → logprob: -12.430229187011719
    6. ' +
' → logprob: -13.680229187011719
    7. '+
' → logprob: -13.930229187011719
    8. '+n' → logprob: -13.992729187011719
    9. ' ' → logprob: -14.117729187011719
    10. '+k' → logprob: -14.242729187011719

Token 711: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007355354027822614
    2. ' i' → logprob: -7.250735759735107
    3. 'k' → logprob: -10.62573528289795
    4. '	i' → logprob: -14.25073528289795
    5. ' ' → logprob: -15.12573528289795
    6. '   ' → logprob: -15.75073528289795
    7. '+i' → logprob: -16.000736236572266
    8. ' k' → logprob: -16.625736236572266
    9. '_i' → logprob: -17.125736236572266
    10. '1' → logprob: -17.500736236572266

Token 712: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2137550711631775
    2. ' +' → logprob: -1.7137551307678223
    3. ',' → logprob: -4.463755130767822
    4. ' ,' → logprob: -7.713755130767822
    5. '+k' → logprob: -9.213754653930664
    6. '   ' → logprob: -9.463754653930664
    7. ' ' → logprob: -10.088754653930664
    8. '+,' → logprob: -10.338754653930664
    9. '1' → logprob: -11.588754653930664
    10. ',
' → logprob: -12.151254653930664

Token 713: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015690223081037402
    2. ' ' → logprob: -6.626568794250488
    3. 'k' → logprob: -8.501568794250488
    4. ' k' → logprob: -10.501568794250488
    5. '   ' → logprob: -12.001568794250488
    6. 'n' → logprob: -13.501568794250488
    7. '  ' → logprob: -13.501568794250488
    8. '2' → logprob: -14.564068794250488
    9. '    ' → logprob: -14.626568794250488
    10. '     ' → logprob: -14.689068794250488

Token 714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00601056357845664
    2. 'k' → logprob: -5.13101053237915
    3. ' ' → logprob: -9.631011009216309
    4. ' k' → logprob: -11.881011009216309
    5. '   ' → logprob: -12.381011009216309
    6. '  ' → logprob: -13.631011009216309
    7. 'n' → logprob: -13.756011009216309
    8. '(k' → logprob: -14.881011009216309
    9. '     ' → logprob: -15.068511009216309
    10. '+k' → logprob: -15.131011009216309

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006142667261883616
    2. ' ,' → logprob: -8.000614166259766
    3. ',n' → logprob: -8.250614166259766
    4. ',
' → logprob: -11.250614166259766
    5. '+' → logprob: -13.250614166259766
    6. '   ' → logprob: -14.125614166259766
    7. ')' → logprob: -14.750614166259766
    8. '(n' → logprob: -14.875614166259766
    9. ',k' → logprob: -14.875614166259766
    10. ',
' → logprob: -15.250614166259766

Token 716: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061968810856342316
    2. ' n' → logprob: -2.8119688034057617
    3. '	n' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.561968803405762
    6. '   ' → logprob: -15.686968803405762
    7. '(n' → logprob: -15.811968803405762
    8. ')' → logprob: -17.311969757080078
    9. '  ' → logprob: -17.936969757080078
    10. '    ' → logprob: -18.061969757080078

Token 717: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7126677632331848
    2. ' +' → logprob: -0.7126677632331848
    3. '+k' → logprob: -3.96266770362854
    4. 'k' → logprob: -8.587667465209961
    5. ' ' → logprob: -9.212667465209961
    6. ' k' → logprob: -11.212667465209961
    7. '   ' → logprob: -11.587667465209961
    8. '  ' → logprob: -12.962667465209961
    9. ' ' → logprob: -13.712667465209961
    10. '+n' → logprob: -13.962667465209961

Token 718: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019764534663408995
    2. ' k' → logprob: -6.251976490020752
    3. '+k' → logprob: -11.001976013183594
    4. ' ' → logprob: -11.251976013183594
    5. '   ' → logprob: -11.376976013183594
    6. '	k' → logprob: -12.751976013183594
    7. '  ' → logprob: -13.126976013183594
    8. '+' → logprob: -14.626976013183594
    9. ' ' → logprob: -15.126976013183594
    10. ' +' → logprob: -15.251976013183594

Token 719: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3493890166282654
    2. '+' → logprob: -1.2243890762329102
    3. '+i' → logprob: -6.97438907623291
    4. ' ' → logprob: -12.59938907623291
    5. '   ' → logprob: -12.72438907623291
    6. '	' → logprob: -14.22438907623291
    7. 'i' → logprob: -14.84938907623291
    8. '  ' → logprob: -15.34938907623291
    9. ' ' → logprob: -15.72438907623291
    10. '1' → logprob: -16.224388122558594

Token 720: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048746898770332336
    2. ' i' → logprob: -3.0487468242645264
    3. '1' → logprob: -9.173747062683105
    4. ' ' → logprob: -11.048747062683105
    5. '+i' → logprob: -11.173747062683105
    6. '   ' → logprob: -11.923747062683105
    7. '+' → logprob: -11.923747062683105
    8. ' +' → logprob: -11.923747062683105
    9. '	i' → logprob: -12.423747062683105
    10. '  ' → logprob: -13.423747062683105

Token 721: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2524873912334442
    2. ' +' → logprob: -1.5024874210357666
    3. '2' → logprob: -7.6274871826171875
    4. '1' → logprob: -9.877487182617188
    5. ' ' → logprob: -11.377487182617188
    6. ')' → logprob: -12.252487182617188
    7. '   ' → logprob: -13.127487182617188
    8. '```' → logprob: -14.752487182617188
    9. '+)' → logprob: -15.377487182617188
    10. ' +
' → logprob: -15.627487182617188

Token 722: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006386925233528018
    2. '2' → logprob: -7.500638484954834
    3. ' ' → logprob: -9.375638961791992
    4. '   ' → logprob: -14.750638961791992
    5. '+' → logprob: -15.625638961791992
    6. '```' → logprob: -16.688138961791992
    7. '  ' → logprob: -16.875638961791992
    8. ')' → logprob: -17.000638961791992
    9. '﻿' → logprob: -18.063138961791992
    10. '۱' → logprob: -18.375638961791992

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. '2' → logprob: -11.250015258789062
    3. ' ' → logprob: -12.875015258789062
    4. '+' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.500015258789062
    6. '```' → logprob: -17.625015258789062
    7. '１' → logprob: -19.250015258789062
    8. '۱' → logprob: -19.562515258789062
    9. '  ' → logprob: -19.750015258789062
    10. '﻿' → logprob: -19.875015258789062

Token 724: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.625001907348633
    3. '+' → logprob: -15.125001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '))' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. ')

' → logprob: -18.625001907348633
    8. ')`' → logprob: -18.750001907348633
    9. ')#' → logprob: -18.750001907348633
    10. '),' → logprob: -18.875001907348633

Token 725: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3083123564720154
    2. '#' → logprob: -2.68331241607666
    3. 'for' → logprob: -2.68331241607666
    4. ')' → logprob: -3.18331241607666
    5. '```' → logprob: -3.80831241607666
    6. '<|end|>' → logprob: -3.93331241607666
    7. 'n' → logprob: -4.30831241607666
    8. 'i' → logprob: -4.93331241607666
    9. 'exit' → logprob: -4.93331241607666
    10. '   ' → logprob: -5.55831241607666

Token 728: ' rel' (ID: 1536)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3588430881500244
    2. ' p' → logprob: -1.9838430881500244
    3. '(n' → logprob: -2.1088430881500244
    4. 'n' → logprob: -3.6088430881500244
    5. ' n' → logprob: -5.108842849731445
    6. '   ' → logprob: -5.983842849731445
    7. ')' → logprob: -6.733842849731445
    8. ' ' → logprob: -7.483842849731445
    9. '(p' → logprob: -7.733842849731445
    10. ' (' → logprob: -7.733842849731445

Token 729: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0030266717076301575
    2. 'i' → logprob: -6.753026485443115
    3. 'e' → logprob: -7.003026485443115
    4. '(n' → logprob: -8.253026962280273
    5. '#' → logprob: -8.878026962280273
    6. '   ' → logprob: -9.378026962280273
    7. '
' → logprob: -9.628026962280273
    8. '(p' → logprob: -10.003026962280273
    9. 'p' → logprob: -10.128026962280273
    10. 'ier' → logprob: -10.378026962280273

Token 730: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.017194243147969246
    2. '(k' → logprob: -4.1421942710876465
    3. '(' → logprob: -7.2671942710876465
    4. '(i' → logprob: -8.017193794250488
    5. 'n' → logprob: -9.892193794250488
    6. '(p' → logprob: -9.892193794250488
    7. 'k' → logprob: -11.392193794250488
    8. '(r' → logprob: -12.142193794250488
    9. '(
' → logprob: -12.392193794250488
    10. ' (' → logprob: -12.767193794250488

Token 731: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036501993890851736
    2. ' n' → logprob: -6.128650188446045
    3. 'k' → logprob: -6.628650188446045
    4. 'i' → logprob: -9.128650665283203
    5. '   ' → logprob: -11.253650665283203
    6. '(n' → logprob: -12.003650665283203
    7. ' k' → logprob: -12.128650665283203
    8. '	n' → logprob: -13.378650665283203
    9. ' ' → logprob: -13.628650665283203
    10. 'p' → logprob: -14.128650665283203

Token 732: '+k' (ID: 110434)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5235976576805115
    2. '+' → logprob: -0.8985976576805115
    3. '+k' → logprob: -8.023597717285156
    4. '+i' → logprob: -9.523597717285156
    5. '   ' → logprob: -10.648597717285156
    6. ' ' → logprob: -10.648597717285156
    7. '    ' → logprob: -12.711097717285156
    8. '+n' → logprob: -12.773597717285156
    9. '  ' → logprob: -12.836097717285156
    10. 'k' → logprob: -12.898597717285156

Token 733: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12729837000370026
    2. ' +' → logprob: -2.127298355102539
    3. '+i' → logprob: -8.377298355102539
    4. '   ' → logprob: -9.502298355102539
    5. ' ' → logprob: -11.127298355102539
    6. '	' → logprob: -11.752298355102539
    7. '  ' → logprob: -11.877298355102539
    8. ',' → logprob: -12.127298355102539
    9. '    ' → logprob: -12.502298355102539
    10. ')' → logprob: -12.814798355102539

Token 734: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31329280138015747
    2. ' +' → logprob: -1.3132927417755127
    3. '   ' → logprob: -10.813292503356934
    4. ' ' → logprob: -12.688292503356934
    5. '```' → logprob: -12.938292503356934
    6. '1' → logprob: -13.688292503356934
    7. '	' → logprob: -14.188292503356934
    8. '  ' → logprob: -14.438292503356934
    9. ',' → logprob: -14.563292503356934
    10. '    ' → logprob: -14.938292503356934

Token 735: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1255982369184494
    2. '+' → logprob: -2.250598192214966
    3. ' +' → logprob: -5.125598430633545
    4. ',n' → logprob: -5.625598430633545
    5. ' ,' → logprob: -6.375598430633545
    6. '   ' → logprob: -6.750598430633545
    7. '+,' → logprob: -9.500597953796387
    8. '+n' → logprob: -9.625597953796387
    9. ' ' → logprob: -10.875597953796387
    10. '```' → logprob: -11.250597953796387

Token 736: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5783361196517944
    2. 'n' → logprob: -1.3283361196517944
    3. '(n' → logprob: -1.8283361196517944
    4. ' (' → logprob: -4.953336238861084
    5. '   ' → logprob: -6.078336238861084
    6. '(' → logprob: -6.328336238861084
    7. ' ' → logprob: -7.828336238861084
    8. '	n' → logprob: -7.953336238861084
    9. 'k' → logprob: -8.390835762023926
    10. ' k' → logprob: -8.828335762023926

Token 737: 'k' (ID: 74)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02640189416706562
    2. ' n' → logprob: -3.651401996612549
    3. 'p' → logprob: -10.40140151977539
    4. 'k' → logprob: -10.40140151977539
    5. 'r' → logprob: -11.52640151977539
    6. '   ' → logprob: -11.77640151977539
    7. ' ' → logprob: -12.27640151977539
    8. '	n' → logprob: -12.27640151977539
    9. '(n' → logprob: -12.65140151977539
    10. ' p' → logprob: -12.77640151977539

Token 738: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34908148646354675
    2. ' +' → logprob: -1.2240815162658691
    3. '+i' → logprob: -8.474081039428711
    4. ',' → logprob: -8.599081039428711
    5. '   ' → logprob: -9.974081039428711
    6. '-' → logprob: -10.224081039428711
    7. ' ' → logprob: -10.224081039428711
    8. ' ,' → logprob: -10.474081039428711
    9. '+k' → logprob: -10.849081039428711
    10. ')' → logprob: -11.099081039428711

Token 739: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4291430711746216
    2. '+' → logprob: -1.0541430711746216
    3. '   ' → logprob: -8.554142951965332
    4. ',' → logprob: -9.304142951965332
    5. ')' → logprob: -9.929142951965332
    6. ' ,' → logprob: -10.054142951965332
    7. '```' → logprob: -10.304142951965332
    8. '1' → logprob: -11.679142951965332
    9. ' ' → logprob: -12.054142951965332
    10. '),' → logprob: -12.929142951965332

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04130590707063675
    2. '2' → logprob: -3.5413060188293457
    3. ' ' → logprob: -4.541306018829346
    4. 'n' → logprob: -7.541306018829346
    5. ' n' → logprob: -9.166305541992188
    6. '+' → logprob: -9.916305541992188
    7. 'i' → logprob: -9.916305541992188
    8. 'k' → logprob: -10.541305541992188
    9. '   ' → logprob: -10.666305541992188
    10. ' i' → logprob: -11.541305541992188

Token 741: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051673490554094315
    2. '+' → logprob: -4.051673412322998
    3. ' )' → logprob: -4.176673412322998
    4. ' +' → logprob: -4.426673412322998
    5. ',' → logprob: -5.926673412322998
    6. ')
' → logprob: -6.301673412322998
    7. '   ' → logprob: -7.551673412322998
    8. ' ,' → logprob: -8.801673889160156
    9. ' )
' → logprob: -8.926673889160156
    10. '+n' → logprob: -9.176673889160156

Token 742: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1414141654968262
    2. '(n' → logprob: -1.3914141654968262
    3. '   ' → logprob: -2.016414165496826
    4. ',' → logprob: -2.141414165496826
    5. ' p' → logprob: -2.391414165496826
    6. '(' → logprob: -3.141414165496826
    7. 'p' → logprob: -4.016414165496826
    8. ' ' → logprob: -4.516414165496826
    9. ' (' → logprob: -4.641414165496826
    10. ',p' → logprob: -5.766414165496826

Token 743: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -5.657694418914616e-05
    2. ' p' → logprob: -9.875056266784668
    3. '(n' → logprob: -12.375056266784668
    4. '(p' → logprob: -14.875056266784668
    5. 'n' → logprob: -15.375056266784668
    6. '   ' → logprob: -15.500056266784668
    7. ',' → logprob: -17.125057220458984
    8. 'k' → logprob: -18.250057220458984
    9. '(' → logprob: -18.500057220458984
    10. ' (' → logprob: -19.375057220458984

Token 744: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014240257441997528
    2. 'n' → logprob: -4.264240264892578
    3. '(' → logprob: -9.514240264892578
    4. ' n' → logprob: -13.889240264892578
    5. '	n' → logprob: -13.889240264892578
    6. '(
' → logprob: -14.139240264892578
    7. ' (' → logprob: -15.264240264892578
    8. '   ' → logprob: -17.139240264892578
    9. '_n' → logprob: -17.389240264892578
    10. '\(' → logprob: -18.764240264892578

Token 745: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42887410521507263
    2. '+' → logprob: -1.053874135017395
    3. '+k' → logprob: -8.678874015808105
    4. ' ' → logprob: -13.928874015808105
    5. '+n' → logprob: -14.553874015808105
    6. 'k' → logprob: -14.678874015808105
    7. '＋' → logprob: -15.428874015808105
    8. '+
' → logprob: -15.803874015808105
    9. ' ' → logprob: -15.928874015808105
    10. ' k' → logprob: -16.178874969482422

Token 746: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011727249948307872
    2. ' k' → logprob: -6.7511725425720215
    3. '	k' → logprob: -13.50117301940918
    4. '   ' → logprob: -14.25117301940918
    5. ' ' → logprob: -15.00117301940918
    6. '  ' → logprob: -17.25117301940918
    7. '+k' → logprob: -17.87617301940918
    8. '(k' → logprob: -18.25117301940918
    9. ' ' → logprob: -18.62617301940918
    10. '{k' → logprob: -19.37617301940918

Token 747: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10390567779541016
    2. ' +' → logprob: -2.35390567779541
    3. '+i' → logprob: -5.60390567779541
    4. ' ' → logprob: -12.72890567779541
    5. '   ' → logprob: -12.97890567779541
    6. '  ' → logprob: -13.85390567779541
    7. '	' → logprob: -13.97890567779541
    8. 'i' → logprob: -14.60390567779541
    9. '+k' → logprob: -15.10390567779541
    10. ' i' → logprob: -15.35390567779541

Token 748: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008176080300472677
    2. ' i' → logprob: -7.125817775726318
    3. '+i' → logprob: -12.12581729888916
    4. '	i' → logprob: -12.75081729888916
    5. ' ' → logprob: -13.00081729888916
    6. '   ' → logprob: -13.62581729888916
    7. '+' → logprob: -14.50081729888916
    8. ' +' → logprob: -14.75081729888916
    9. '  ' → logprob: -15.37581729888916
    10. '1' → logprob: -16.375818252563477

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04784012213349342
    2. ' ,' → logprob: -3.797840118408203
    3. '+' → logprob: -4.297840118408203
    4. '   ' → logprob: -4.672840118408203
    5. ' +' → logprob: -7.922840118408203
    6. ',n' → logprob: -8.297840118408203
    7. ',i' → logprob: -8.797840118408203
    8. '	' → logprob: -8.922840118408203
    9. ' ' → logprob: -8.922840118408203
    10. '  ' → logprob: -9.172840118408203

Token 750: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759527087211609
    2. 'k' → logprob: -0.8259527087211609
    3. ' ' → logprob: -11.950952529907227
    4. '(k' → logprob: -13.325952529907227
    5. '	k' → logprob: -13.450952529907227
    6. ' n' → logprob: -13.575952529907227
    7. 'n' → logprob: -13.950952529907227
    8. ' ' → logprob: -14.825952529907227
    9. '   ' → logprob: -15.075952529907227
    10. '    ' → logprob: -15.950952529907227

Token 751: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25346729159355164
    2. ' +' → logprob: -1.503467321395874
    3. '+i' → logprob: -6.503467082977295
    4. ' ' → logprob: -10.878467559814453
    5. '   ' → logprob: -11.628467559814453
    6. 'i' → logprob: -13.503467559814453
    7. '	' → logprob: -13.628467559814453
    8. '+k' → logprob: -13.628467559814453
    9. ' i' → logprob: -13.753467559814453
    10. ' plus' → logprob: -14.003467559814453

Token 752: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018170781433582306
    2. ' i' → logprob: -4.0181708335876465
    3. '1' → logprob: -11.143170356750488
    4. '+' → logprob: -13.018170356750488
    5. ' +' → logprob: -13.643170356750488
    6. ' ' → logprob: -13.643170356750488
    7. '+i' → logprob: -13.768170356750488
    8. '   ' → logprob: -14.768170356750488
    9. '	i' → logprob: -15.393170356750488
    10. '  ' → logprob: -17.018171310424805

Token 753: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029763219878077507
    2. ' +' → logprob: -3.5297632217407227
    3. '1' → logprob: -11.654763221740723
    4. ')' → logprob: -13.654763221740723
    5. '   ' → logprob: -13.904763221740723
    6. '+
' → logprob: -14.654763221740723
    7. '```' → logprob: -14.654763221740723
    8. ')+' → logprob: -15.529763221740723
    9. ' ' → logprob: -15.654763221740723
    10. '+)' → logprob: -15.904763221740723

Token 754: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014960631728172302
    2. ' ' → logprob: -4.264960765838623
    3. '2' → logprob: -7.139960765838623
    4. '   ' → logprob: -13.639960289001465
    5. ' i' → logprob: -13.889960289001465
    6. 'i' → logprob: -14.139960289001465
    7. '  ' → logprob: -14.639960289001465
    8. '+' → logprob: -14.764960289001465
    9. '```' → logprob: -16.01496124267578
    10. '0' → logprob: -16.63996124267578

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.625046730041504
    3. '2' → logprob: -10.750046730041504
    4. '   ' → logprob: -14.625046730041504
    5. '+' → logprob: -16.000045776367188
    6. '```' → logprob: -16.937545776367188
    7. '  ' → logprob: -17.437545776367188
    8. 'i' → logprob: -17.750045776367188
    9. '0' → logprob: -17.812545776367188
    10. '    ' → logprob: -18.500045776367188

Token 756: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019543453527148813
    2. ')
' → logprob: -8.625195503234863
    3. '   ' → logprob: -11.750195503234863
    4. ' )' → logprob: -11.875195503234863
    5. ')
' → logprob: -15.250195503234863
    6. ')

' → logprob: -15.750195503234863
    7. '")' → logprob: -15.875195503234863
    8. '))' → logprob: -16.250194549560547
    9. '),' → logprob: -16.750194549560547
    10. ')}' → logprob: -16.750194549560547


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 754
Tokens correctement prédits (1ère position, stricte): 199
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 481
Précision stricte (1ère position): 26.39%
Précision adaptée (1ère position): 27.45%
Précision (top 10): 63.79%
================================================================================
