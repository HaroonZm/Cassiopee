================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys; import numpy as np
sys.setrecursionlimit(1_000_000)
MOD = 10 ** 9 + 7
fetch = sys.stdin.readline

# Prise de l'entrée façon "script classique"
N = int(fetch())
graphe = [[] for sho in range(N + 1)]

# Style "procédure" old school
for __ in range(N - 1):
    couple = fetch().split()
    a, b = int(couple[0]), int(couple[1])
    graphe[a] += [b]
    graphe[b].append(a)

# Génération de combinaison en camouflant l'algo
F2 = [1, 0, 1]
idx = 3
while idx < N + 10:
    F2.append(F2[idx - 2] * (idx - 1) % MOD)
    idx += 1
fact2 = np.array(F2, dtype=np.int64)

# Parfois objet, parfois procédure pure, parfois fonctionnelle:
def fusionner(d1, d2):
    sz1, sz2 = len(d1) - 1, len(d2) - 1
    if sz1 > sz2:
        sz1, sz2 = sz2, sz1
        d1, d2 = d2, d1
    mix = np.zeros(sz1 + sz2, dtype=np.int64)
    # Utilisation volontaire d'une boucle for et d'une slice vectorielle
    for m in range(1, sz1 + 1):
        mix[m:m+sz2] += d1[m] * d2[1:] % MOD
    return mix % MOD

def ajouter_arete(buff):
    sz = len(buff) - 1
    add = np.zeros(sz + 2, dtype=np.int64)
    add[1:] = buff
    add[1] = - int(np.sum(buff * fact2[:sz + 1]) % MOD)
    add[1] %= MOD
    return add

# Style récursif/impératif combiné
def explorer(noeud, parent=None):
    ensemble = None
    def suite(fils):
        nonlocal ensemble
        bloc = explorer(fils, noeud)
        bloc = ajouter_arete(bloc)
        # heavy mix: ternaire/objet
        ensemble = bloc if ensemble is None else fusionner(ensemble, bloc)
    # Style "foreach lambda"
    list(map(lambda x: suite(x) if x != parent else None, graphe[noeud]))
    return np.array([0,1], dtype=np.int64) if ensemble is None else ensemble

resultat = explorer(1)
solution = int(np.sum(resultat * fact2[:N + 1]) % MOD)
print(solution)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ';' (ID: 26)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4860667884349823
    2. '\' → logprob: -1.4860668182373047
    3. '\n' → logprob: -2.6110668182373047
    4. ' ' → logprob: -2.9860668182373047
    5. 'import' → logprob: -4.486066818237305
    6. '' → logprob: -5.361066818237305
    7. ' .' → logprob: -5.486066818237305
    8. '[' → logprob: -5.736066818237305
    9. '<|end|>' → logprob: -6.236066818237305
    10. 'print' → logprob: -6.611066818237305

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00022606621496379375
    2. 'os' → logprob: -8.750226020812988
    3. ' math' → logprob: -10.125226020812988
    4. ' re' → logprob: -10.750226020812988
    5. ' json' → logprob: -13.250226020812988
    6. ' ' → logprob: -13.625226020812988
    7. ' ' → logprob: -13.875226020812988
    8. '"os' → logprob: -15.000226020812988
    9. '_os' → logprob: -15.250226020812988
    10. ' sys' → logprob: -15.250226020812988

Token 5: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05182291939854622
    2. ' as' → logprob: -3.0518229007720947
    3. 'as' → logprob: -6.176823139190674
    4. '<|end|>' → logprob: -7.176823139190674
    5. ' .' → logprob: -8.801822662353516
    6. '.as' → logprob: -9.676822662353516
    7. 'import' → logprob: -10.426822662353516
    8. ' ' → logprob: -10.551822662353516
    9. '<|end|>' → logprob: -10.926822662353516
    10. '[' → logprob: -10.926822662353516

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.004991931840777397
    2. ' ' → logprob: -5.3799920082092285
    3. 'np' → logprob: -8.25499153137207
    4. ' numpy' → logprob: -9.50499153137207
    5. ' ' → logprob: -10.25499153137207
    6. 'numpy' → logprob: -14.50499153137207
    7. ' n' → logprob: -15.25499153137207
    8. '_np' → logprob: -15.75499153137207
    9. '_numpy' → logprob: -16.00499153137207
    10. '_' → logprob: -16.00499153137207

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1807999163866043
    2. 'import' → logprob: -2.555799961090088
    3. ';' → logprob: -3.555799961090088
    4. '\' → logprob: -3.805799961090088
    5. '\n' → logprob: -4.305799961090088
    6. '<|end|>' → logprob: -5.055799961090088
    7. '
' → logprob: -5.555799961090088
    8. 'newline' → logprob: -5.680799961090088
    9. '```' → logprob: -5.930799961090088
    10. '.import' → logprob: -6.055799961090088

Token 8: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3081855773925781
    2. '<|end|>' → logprob: -1.5581855773925781
    3. ';' → logprob: -1.9331855773925781
    4. '
' → logprob: -2.058185577392578
    5. 'import' → logprob: -2.558185577392578
    6. '\' → logprob: -2.933185577392578
    7. 'newline' → logprob: -3.183185577392578
    8. '.' → logprob: -3.683185577392578
    9. '```' → logprob: -3.808185577392578
    10. '<|end|>' → logprob: -4.683185577392578

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1093578804284334e-05
    2. ' .' → logprob: -10.875051498413086
    3. '[' → logprob: -11.875051498413086
    4. '.]' → logprob: -12.625051498413086
    5. '."""' → logprob: -12.750051498413086
    6. '.[' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.125051498413086
    8. '.​' → logprob: -13.250051498413086
    9. '.readline' → logprob: -13.250051498413086
    10. '.)' → logprob: -13.375051498413086

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.37954843044281
    2. '_version' → logprob: -1.50454843044281
    3. '_trace' → logprob: -2.0045485496520996
    4. '_sys' → logprob: -2.5045485496520996
    5. '_limit' → logprob: -2.6295485496520996
    6. ' _' → logprob: -2.6295485496520996
    7. '_exc' → logprob: -3.5045485496520996
    8. '_set' → logprob: -4.0045485496521
    9. '_encoding' → logprob: -4.1295485496521
    10. '_system' → logprob: -5.3795485496521

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0029117425438016653
    2. 'urs' → logprob: -6.002911567687988
    3. 'ursive' → logprob: -8.752911567687988
    4. '_' → logprob: -9.377911567687988
    5. 'ur' → logprob: -9.502911567687988
    6. '_limit' → logprob: -10.127911567687988
    7. 'ursor' → logprob: -11.377911567687988
    8. 'limit' → logprob: -11.377911567687988
    9. 'urf' → logprob: -11.627911567687988
    10. 'urse' → logprob: -11.877911567687988

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.014219566248357296
    2. '_limit' → logprob: -4.264219760894775
    3. 'lim' → logprob: -10.139219284057617
    4. ' limit' → logprob: -12.014219284057617
    5. 'depth' → logprob: -12.139219284057617
    6. '_depth' → logprob: -12.764219284057617
    7. 'Limit' → logprob: -14.389219284057617
    8. '_lim' → logprob: -14.639219284057617
    9. '_LIMIT' → logprob: -14.764219284057617
    10. '-limit' → logprob: -15.014219284057617

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '(
' → logprob: -13.375003814697266
    3. '(

' → logprob: -13.750003814697266
    4. ' (' → logprob: -14.250003814697266
    5. '((' → logprob: -15.625003814697266
    6. '("("' → logprob: -16.125003814697266
    7. '()' → logprob: -17.250003814697266
    8. '(.' → logprob: -17.375003814697266
    9. '('' → logprob: -17.625003814697266
    10. '(None' → logprob: -17.750003814697266

Token 14: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06204733997583389
    2. '100' → logprob: -2.812047243118286
    3. ' ' → logprob: -9.812047004699707
    4. '1' → logprob: -11.437047004699707
    5. '300' → logprob: -11.687047004699707
    6. '500' → logprob: -12.687047004699707
    7. '999' → logprob: -14.187047004699707
    8. '  ' → logprob: -14.437047004699707
    9. '150' → logprob: -14.812047004699707
    10. '200' → logprob: -15.187047004699707

Token 15: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3244451880455017
    2. '000' → logprob: -1.3244452476501465
    3. '00' → logprob: -5.0744452476501465
    4. '5' → logprob: -5.5744452476501465
    5. '2' → logprob: -8.324444770812988
    6. '3' → logprob: -8.324444770812988
    7. '8' → logprob: -9.074444770812988
    8. '6' → logprob: -9.199444770812988
    9. '44' → logprob: -9.324444770812988
    10. '4' → logprob: -9.949444770812988

Token 16: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7046340107917786
    2. '000' → logprob: -0.7046340107917786
    3. '_' → logprob: -5.204634189605713
    4. '00' → logprob: -5.454634189605713
    5. '7' → logprob: -7.329634189605713
    6. '8' → logprob: -7.704634189605713
    7. '6' → logprob: -8.079633712768555
    8. '5' → logprob: -8.579633712768555
    9. '9' → logprob: -10.704633712768555
    10. '1' → logprob: -11.829633712768555

Token 17: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04142222926020622
    2. ',' → logprob: -3.541422128677368
    3. '0' → logprob: -5.541422367095947
    4. ')' → logprob: -6.041422367095947
    5. '00' → logprob: -6.541422367095947
    6. '000' → logprob: -6.541422367095947
    7. ',_' → logprob: -6.666422367095947
    8. '_,' → logprob: -7.416422367095947
    9. ',)' → logprob: -8.666421890258789
    10. ')_' → logprob: -8.916421890258789

Token 18: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6414209604263306
    2. '_' → logprob: -0.8914209604263306
    3. ',' → logprob: -3.391420841217041
    4. '00' → logprob: -4.141420841217041
    5. '0' → logprob: -4.766420841217041
    6. ')' → logprob: -5.766420841217041
    7. '_)' → logprob: -7.641420841217041
    8. ',_' → logprob: -7.891420841217041
    9. '_,' → logprob: -8.1414213180542
    10. '___' → logprob: -8.8914213180542

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -15.125001907348633
    4. ')
' → logprob: -15.625001907348633
    5. '')' → logprob: -17.125001907348633
    6. ' ' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. '）' → logprob: -18.000001907348633
    9. '`)' → logprob: -18.000001907348633
    10. '),' → logprob: -19.000001907348633

Token 20: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5150415301322937
    2. '\' → logprob: -1.3900415897369385
    3. '\n' → logprob: -3.1400415897369385
    4. '' → logprob: -3.6400415897369385
    5. '```' → logprob: -3.6400415897369385
    6. '

' → logprob: -4.140041351318359
    7. ')' → logprob: -4.765041351318359
    8. '
' → logprob: -4.890041351318359
    9. 'def' → logprob: -5.140041351318359
    10. '#' → logprob: -5.390041351318359

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22772422432899475
    2. '=' → logprob: -1.6027241945266724
    3. ' ' → logprob: -6.727724075317383
    4. '_' → logprob: -6.977724075317383
    5. ')' → logprob: -9.977724075317383
    6. '<|end|>' → logprob: -10.102724075317383
    7. '.' → logprob: -10.477724075317383
    8. ' =
' → logprob: -11.352724075317383
    9. ' =)' → logprob: -11.477724075317383
    10. ' )' → logprob: -11.852724075317383

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07914897799491882
    2. '10' → logprob: -2.579149007797241
    3. '1' → logprob: -8.70414924621582
    4. '100' → logprob: -9.32914924621582
    5. 'int' → logprob: -13.20414924621582
    6. ' ' → logprob: -14.45414924621582
    7. '998' → logprob: -14.95414924621582
    8. ' )' → logprob: -15.45414924621582
    9. '109' → logprob: -15.57914924621582
    10. '0' → logprob: -15.57914924621582

Token 23: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023390131071209908
    2. '1' → logprob: -3.773390054702759
    3. '100' → logprob: -9.02338981628418
    4. ' ' → logprob: -10.89838981628418
    5. 'int' → logprob: -12.77338981628418
    6. '998' → logprob: -13.02338981628418
    7. '2' → logprob: -15.27338981628418
    8. '(' → logprob: -16.02338981628418
    9. '```' → logprob: -16.39838981628418
    10. '999' → logprob: -17.39838981628418

Token 24: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007961366325616837
    2. '0' → logprob: -5.632961273193359
    3. '^' → logprob: -5.757961273193359
    4. '\n' → logprob: -7.507961273193359
    5. '\' → logprob: -8.00796127319336
    6. '*' → logprob: -9.13296127319336
    7. ' **' → logprob: -10.38296127319336
    8. '​' → logprob: -10.50796127319336
    9. '#' → logprob: -10.50796127319336
    10. '9' → logprob: -10.63296127319336

Token 25: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -16.875
    3. ' ' → logprob: -18.5
    4. '```' → logprob: -19.125
    5. '+' → logprob: -19.75
    6. '10' → logprob: -21.625
    7. '4' → logprob: -22.0
    8. '6' → logprob: -22.375
    9. '９' → logprob: -22.5
    10. '7' → logprob: -22.625

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.25
    3. ' ' → logprob: -20.75
    4. '```' → logprob: -21.125
    5. '+' → logprob: -23.375
    6. '９' → logprob: -23.375
    7. '   ' → logprob: -23.625
    8. '10' → logprob: -24.25
    9. '  ' → logprob: -25.0
    10. '18' → logprob: -25.25

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04860871285200119
    2. ' +' → logprob: -3.0486087799072266
    3. '7' → logprob: -12.048608779907227
    4. '+
' → logprob: -12.298608779907227
    5. ' +
' → logprob: -12.423608779907227
    6. ' ' → logprob: -13.298608779907227
    7. ' +
' → logprob: -13.548608779907227
    8. '+

' → logprob: -13.923608779907227
    9. '＋' → logprob: -14.548608779907227
    10. 'plus' → logprob: -15.173608779907227

Token 28: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '+' → logprob: -15.750001907348633
    4. '9' → logprob: -18.000001907348633
    5. '```' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '07' → logprob: -19.125001907348633
    8. '  ' → logprob: -19.625001907348633
    9. '_' → logprob: -20.625001907348633
    10. ' +' → logprob: -20.750001907348633

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '+' → logprob: -18.75
    4. '```' → logprob: -19.375
    5. '9' → logprob: -19.875
    6. '07' → logprob: -20.0
    7. '   ' → logprob: -20.75
    8. '79' → logprob: -21.3125
    9. '77' → logprob: -21.6875
    10. '

' → logprob: -21.6875

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10557393729686737
    2. '\' → logprob: -3.230573892593384
    3. 'def' → logprob: -3.480573892593384
    4. '\n' → logprob: -4.355574131011963
    5. '

' → logprob: -4.980574131011963
    6. '' → logprob: -5.105574131011963
    7. '
' → logprob: -6.730574131011963
    8. 'newline' → logprob: -6.855574131011963
    9. '```' → logprob: -6.980574131011963
    10. '#' → logprob: -7.980574131011963

Token 31: 'fetch' (ID: 19843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21979232132434845
    2. '\' → logprob: -2.094792366027832
    3. '
' → logprob: -3.344792366027832
    4. '\n' → logprob: -3.594792366027832
    5. '' → logprob: -5.344792366027832
    6. '

' → logprob: -5.844792366027832
    7. '```' → logprob: -6.594792366027832
    8. '
' → logprob: -7.094792366027832
    9. '#' → logprob: -8.094792366027832
    10. '\r' → logprob: -8.969792366027832

Token 32: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08830813318490982
    2. '_data' → logprob: -2.713308095932007
    3. '_items' → logprob: -6.088308334350586
    4. '_input' → logprob: -6.213308334350586
    5. '_val' → logprob: -6.713308334350586
    6. '(' → logprob: -6.713308334350586
    7. '_cache' → logprob: -6.963308334350586
    8. '_token' → logprob: -7.088308334350586
    9. '_user' → logprob: -7.088308334350586
    10. '_result' → logprob: -7.088308334350586

Token 33: ' sys' (ID: 12228)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.8016548752784729
    2. 'np' → logprob: -1.1766548156738281
    3. 'input' → logprob: -1.9266548156738281
    4. ' input' → logprob: -2.551654815673828
    5. 'int' → logprob: -5.301654815673828
    6. 'lambda' → logprob: -5.676654815673828
    7. ' lambda' → logprob: -5.926654815673828
    8. ' sys' → logprob: -6.426654815673828
    9. ' int' → logprob: -6.551654815673828
    10. 'sys' → logprob: -6.926654815673828

Token 34: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03386963531374931
    2. '.' → logprob: -4.033869743347168
    3. '.stdout' → logprob: -4.283869743347168
    4. '.argv' → logprob: -6.908869743347168
    5. '.std' → logprob: -8.783869743347168
    6. '.readline' → logprob: -9.033869743347168
    7. '.exit' → logprob: -9.408869743347168
    8. '.get' → logprob: -9.408869743347168
    9. '.stderr' → logprob: -9.408869743347168
    10. '.input' → logprob: -9.658869743347168

Token 35: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.15354591608047485
    2. '.read' → logprob: -2.15354585647583
    3. '.' → logprob: -3.65354585647583
    4. 'read' → logprob: -8.778546333312988
    5. '.buffer' → logprob: -9.278546333312988
    6. '.readlines' → logprob: -9.528546333312988
    7. '<|end|>' → logprob: -10.403546333312988
    8. '.Read' → logprob: -11.903546333312988
    9. 'buffer' → logprob: -13.028546333312988
    10. '.READ' → logprob: -13.153546333312988

Token 36: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3332628905773163
    2. 'def' → logprob: -1.5832629203796387
    3. '()' → logprob: -2.8332629203796387
    4. '(
' → logprob: -4.458262920379639
    5. 'for' → logprob: -6.708262920379639
    6. '\' → logprob: -6.833262920379639
    7. '\n' → logprob: -7.208262920379639
    8. 'data' → logprob: -7.583262920379639
    9. '()
' → logprob: -7.708262920379639
    10. '\(' → logprob: -7.833262920379639

Token 37: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17209473252296448
    2. 'n' → logprob: -1.922094702720642
    3. '(n' → logprob: -4.672094821929932
    4. '(' → logprob: -6.922094821929932
    5. 'class' → logprob: -7.922094821929932
    6. 'd' → logprob: -8.047094345092773
    7. '\' → logprob: -9.047094345092773
    8. '#' → logprob: -9.047094345092773
    9. '\n' → logprob: -9.172094345092773
    10. 'N' → logprob: -9.547094345092773

Token 38: ' Pr' (ID: 2284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.502906322479248
    2. ' def' → logprob: -1.127906322479248
    3. ' input' → logprob: -3.627906322479248
    4. ' n' → logprob: -4.377906322479248
    5. 'input' → logprob: -4.627906322479248
    6. ' dp' → logprob: -5.127906322479248
    7. 'dp' → logprob: -5.252906322479248
    8. 'n' → logprob: -5.502906322479248
    9. ' class' → logprob: -7.377906322479248
    10. ' ' → logprob: -7.627906322479248

Token 39: 'ise' (ID: 1096)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.4492661654949188
    2. 'int' → logprob: -1.5742661952972412
    3. 'ime' → logprob: -2.699266195297241
    4. 'e' → logprob: -2.699266195297241
    5. 'ep' → logprob: -4.699265956878662
    6. 'ev' → logprob: -6.699265956878662
    7. 'im' → logprob: -6.949265956878662
    8. 'def' → logprob: -6.949265956878662
    9. 'efi' → logprob: -6.949265956878662
    10. 'ec' → logprob: -7.074265956878662

Token 40: ' de' (ID: 334)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.11911089718341827
    2. 's' → logprob: -3.3691108226776123
    3. 'd' → logprob: -3.8691108226776123
    4. 'r' → logprob: -4.744111061096191
    5. 'def' → logprob: -4.869111061096191
    6. 't' → logprob: -4.869111061096191
    7. 'nts' → logprob: -5.244111061096191
    8. 'c' → logprob: -5.369111061096191
    9. '_' → logprob: -5.369111061096191
    10. 'n' → logprob: -5.744111061096191

Token 41: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.1686474084854126
    2. 'input' → logprob: -1.2936474084854126
    3. ' la' → logprob: -2.418647289276123
    4. 'don' → logprob: -2.418647289276123
    5. 'd' → logprob: -3.168647289276123
    6. 'entrée' → logprob: -3.793647289276123
    7. ' input' → logprob: -3.918647289276123
    8. 'l' → logprob: -3.918647289276123
    9. 'contact' → logprob: -4.043647289276123
    10. 'vue' → logprob: -4.293647289276123

Token 42: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7052943706512451
    2. ''entrée' → logprob: -1.2052943706512451
    3. 'a' → logprob: -2.205294370651245
    4. 'input' → logprob: -3.205294370651245
    5. ''' → logprob: -3.205294370651245
    6. 'e' → logprob: -5.080294609069824
    7. 'i' → logprob: -6.205294609069824
    8. ''ent' → logprob: -6.205294609069824
    9. '’entrée' → logprob: -7.455294609069824
    10. ' entrée' → logprob: -7.580294609069824

Token 43: ' façon' (ID: 33381)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0155093669891357
    2. '(' → logprob: -1.1405093669891357
    3. 'n' → logprob: -1.6405093669891357
    4. '(n' → logprob: -2.7655093669891357
    5. '\n' → logprob: -4.140509605407715
    6. 'data' → logprob: -4.515509605407715
    7. '()' → logprob: -4.890509605407715
    8. 'a' → logprob: -5.765509605407715
    9. ' (' → logprob: -5.890509605407715
    10. '(s' → logprob: -5.890509605407715

Token 44: ' "' (ID: 392)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7135400176048279
    2. 'py' → logprob: -2.7135400772094727
    3. 'standard' → logprob: -2.9635400772094727
    4. 'python' → logprob: -2.9635400772094727
    5. 's' → logprob: -3.2135400772094727
    6. 'b' → logprob: -3.5885400772094727
    7. 'Python' → logprob: -4.088540077209473
    8. 'n' → logprob: -4.213540077209473
    9. 'comp' → logprob: -4.338540077209473
    10. 'int' → logprob: -4.338540077209473

Token 45: 'script' (ID: 4822)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.72858464717865
    2. 'standard' → logprob: -2.2285847663879395
    3. 'sys' → logprob: -2.4785847663879395
    4. 'stdin' → logprob: -2.6035847663879395
    5. 'competitive' → logprob: -2.6035847663879395
    6. 'fast' → logprob: -3.1035847663879395
    7. 'B' → logprob: -3.1035847663879395
    8. 'b' → logprob: -3.2285847663879395
    9. 'dfs' → logprob: -3.4785847663879395
    10. 'n' → logprob: -3.7285847663879395

Token 46: ' classique' (ID: 76895)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03159121423959732
    2. ' "' → logprob: -3.5315911769866943
    3. '"""' → logprob: -7.406591415405273
    4. 's' → logprob: -8.531591415405273
    5. '.py' → logprob: -8.656591415405273
    6. '":' → logprob: -8.656591415405273
    7. '```' → logprob: -8.906591415405273
    8. 'python' → logprob: -9.781591415405273
    9. ':' → logprob: -9.906591415405273
    10. '#"' → logprob: -10.156591415405273

Token 47: '"
' (ID: 1092)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3754816055297852
    2. 's' → logprob: -1.7504816055297852
    3. ')' → logprob: -2.125481605529785
    4. 'def' → logprob: -2.375481605529785
    5. ':' → logprob: -2.500481605529785
    6. '"' → logprob: -3.000481605529785
    7. 'for' → logprob: -3.125481605529785
    8. '\n' → logprob: -3.375481605529785
    9. '
' → logprob: -3.500481605529785
    10. ',' → logprob: -4.250481605529785

Token 48: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005582740413956344
    2. 'a' → logprob: -9.125557899475098
    3. 't' → logprob: -9.375557899475098
    4. ' n' → logprob: -9.375557899475098
    5. '(n' → logprob: -9.625557899475098
    6. 'N' → logprob: -9.750557899475098
    7. 's' → logprob: -10.125557899475098
    8. 'num' → logprob: -10.750557899475098
    9. 'data' → logprob: -11.250557899475098
    10. 'x' → logprob: -11.250557899475098

Token 49: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6564614176750183
    2. ' =' → logprob: -0.7814614176750183
    3. ' ,' → logprob: -4.156461238861084
    4. '=' → logprob: -4.906461238861084
    5. ' ' → logprob: -8.031461715698242
    6. '=int' → logprob: -8.906461715698242
    7. ')' → logprob: -11.156461715698242
    8. ',int' → logprob: -11.781461715698242
    9. ',N' → logprob: -12.281461715698242
    10. ',n' → logprob: -12.406461715698242

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38687753677368164
    2. 'int' → logprob: -1.1368775367736816
    3. ' ' → logprob: -12.761877059936523
    4. '=int' → logprob: -13.511877059936523
    5. '[int' → logprob: -14.261877059936523
    6. '<int' → logprob: -15.011877059936523
    7. '(int' → logprob: -15.011877059936523
    8. '10' → logprob: -15.386877059936523
    9. 'len' → logprob: -15.636877059936523
    10. ' len' → logprob: -16.011877059936523

Token 51: '(fetch' (ID: 76382)
  Prédit: '(fetch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fetch' → logprob: -0.4743289649486542
    2. '(' → logprob: -0.9743289947509766
    3. '(input' → logprob: -8.849328994750977
    4. '(f' → logprob: -9.349328994750977
    5. 'fetch' → logprob: -11.099328994750977
    6. '('' → logprob: -13.599328994750977
    7. '(fe' → logprob: -13.849328994750977
    8. ' fetch' → logprob: -13.974328994750977
    9. ' (' → logprob: -14.099328994750977
    10. '(
' → logprob: -14.224328994750977

Token 52: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002236616564914584
    2. '()' → logprob: -6.127236843109131
    3. '().' → logprob: -10.502236366271973
    4. ' ())' → logprob: -11.252236366271973
    5. '())
' → logprob: -12.627236366271973
    6. ')' → logprob: -12.627236366271973
    7. '())

' → logprob: -13.752236366271973
    8. '();)' → logprob: -13.877236366271973
    9. '(' → logprob: -14.127236366271973
    10. '());' → logprob: -14.252236366271973

Token 53: 'gr' (ID: 896)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25887423753738403
    2. '<|end|>' → logprob: -2.3838741779327393
    3. ')' → logprob: -3.0088741779327393
    4. 'a' → logprob: -3.8838741779327393
    5. ' 
' → logprob: -4.258874416351318
    6. ' A' → logprob: -5.258874416351318
    7. 's' → logprob: -5.383874416351318
    8. 'data' → logprob: -5.508874416351318
    9. ',' → logprob: -5.508874416351318
    10. 'A' → logprob: -5.633874416351318

Token 54: 'aphe' (ID: 98856)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.01021131593734026
    2. 'aphe' → logprob: -4.63521146774292
    3. 'ap' → logprob: -8.260210990905762
    4. 'apho' → logprob: -10.135210990905762
    5. 'ph' → logprob: -10.260210990905762
    6. 'af' → logprob: -10.760210990905762
    7. 'e' → logprob: -11.010210990905762
    8. 'a' → logprob: -11.010210990905762
    9. '```' → logprob: -11.010210990905762
    10. ' =' → logprob: -11.135210990905762

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03373756259679794
    2. '=' → logprob: -3.4087376594543457
    3. 's' → logprob: -10.533737182617188
    4. ' ' → logprob: -11.283737182617188
    5. '[' → logprob: -11.533737182617188
    6. 'a' → logprob: -11.658737182617188
    7. ' =[' → logprob: -11.658737182617188
    8. 'd' → logprob: -12.783737182617188
    9. '=[]' → logprob: -13.033737182617188
    10. 'e' → logprob: -13.033737182617188

Token 56: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.19733436405658722
    2. '[' → logprob: -2.0723342895507812
    3. ' [' → logprob: -3.3223342895507812
    4. '[]' → logprob: -4.447334289550781
    5. ' []' → logprob: -5.947334289550781
    6. '{}' → logprob: -6.822334289550781
    7. ' {}' → logprob: -6.947334289550781
    8. ' [{}' → logprob: -8.072334289550781
    9. ' defaultdict' → logprob: -8.947334289550781
    10. ' {' → logprob: -9.572334289550781

Token 57: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.694632351398468
    2. 'for' → logprob: -1.3196322917938232
    3. '(N' → logprob: -2.0696322917938232
    4. ' for' → logprob: -2.4446322917938232
    5. ']' → logprob: -4.444632530212402
    6. ')' → logprob: -5.069632530212402
    7. '()' → logprob: -7.069632530212402
    8. '(n' → logprob: -7.569632530212402
    9. '(range' → logprob: -7.944632530212402
    10. ',' → logprob: -8.069632530212402

Token 58: ' sho' (ID: 113644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00034237600630149245
    2. ' _' → logprob: -9.12534236907959
    3. ' range' → logprob: -9.25034236907959
    4. 'range' → logprob: -9.75034236907959
    5. '_i' → logprob: -10.37534236907959
    6. '_range' → logprob: -11.00034236907959
    7. ' i' → logprob: -11.37534236907959
    8. 'i' → logprob: -11.50034236907959
    9. ' ' → logprob: -12.12534236907959
    10. '(range' → logprob: -13.50034236907959

Token 59: ' in' (ID: 306)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.010012354701757431
    2. 'w' → logprob: -4.635012149810791
    3. 'r' → logprob: -8.38501262664795
    4. 't' → logprob: -10.88501262664795
    5. 'range' → logprob: -13.13501262664795
    6. 'ort' → logprob: -14.38501262664795
    7. '_rt' → logprob: -14.63501262664795
    8. '.rt' → logprob: -14.63501262664795
    9. '```' → logprob: -14.76001262664795
    10. '``' → logprob: -14.88501262664795

Token 60: ' range' (ID: 3352)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.025207044556736946
    2. 'range' → logprob: -3.775207042694092
    3. 'r' → logprob: -6.275207042694092
    4. ' range' → logprob: -9.90020751953125
    5. 't' → logprob: -11.65020751953125
    6. 'w' → logprob: -12.02520751953125
    7. '(range' → logprob: -13.15020751953125
    8. 'p' → logprob: -13.52520751953125
    9. 'ort' → logprob: -13.65020751953125
    10. '   ' → logprob: -13.65020751953125

Token 61: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08257435262203217
    2. 'rt' → logprob: -3.4575743675231934
    3. 'w' → logprob: -3.7075743675231934
    4. 't' → logprob: -4.207574367523193
    5. '(' → logprob: -5.582574367523193
    6. 'f' → logprob: -6.207574367523193
    7. 'r' → logprob: -6.957574367523193
    8. 'N' → logprob: -7.332574367523193
    9. 's' → logprob: -9.082573890686035
    10. 'range' → logprob: -9.207573890686035

Token 62: ' +' (ID: 659)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.0006191504653543234
    2. 't' → logprob: -8.125618934631348
    3. 'r' → logprob: -8.375618934631348
    4. ')' → logprob: -10.125618934631348
    5. 'ut' → logprob: -10.750618934631348
    6. ')]' → logprob: -11.625618934631348
    7. 'st' → logprob: -11.750618934631348
    8. 'ur' → logprob: -12.375618934631348
    9. 'range' → logprob: -12.875618934631348
    10. '])' → logprob: -13.000618934631348

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026695363223552704
    2. ' ' → logprob: -3.6516952514648438
    3. '2' → logprob: -8.401695251464844
    4. ')' → logprob: -8.901695251464844
    5. ' N' → logprob: -11.651695251464844
    6. ' )' → logprob: -12.276695251464844
    7. '  ' → logprob: -12.901695251464844
    8. '   ' → logprob: -13.276695251464844
    9. 'N' → logprob: -13.464195251464844
    10. '5' → logprob: -13.464195251464844

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018741434905678034
    2. '2' → logprob: -6.876873970031738
    3. ' ' → logprob: -7.126873970031738
    4. '0' → logprob: -10.751873970031738
    5. ')' → logprob: -12.126873970031738
    6. '   ' → logprob: -13.001873970031738
    7. '```' → logprob: -13.314373970031738
    8. '  ' → logprob: -13.626873970031738
    9. '3' → logprob: -14.126873970031738
    10. '(' → logprob: -14.876873970031738

Token 65: ')]

' (ID: 56882)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.0001317871210630983
    2. 'r' → logprob: -9.500131607055664
    3. ')' → logprob: -10.250131607055664
    4. ')]' → logprob: -11.375131607055664
    5. 'st' → logprob: -12.875131607055664
    6. '])' → logprob: -13.625131607055664
    7. 'rtl' → logprob: -13.875131607055664
    8. 't' → logprob: -13.875131607055664
    9. '```' → logprob: -14.125131607055664
    10. '.rt' → logprob: -14.500131607055664

Token 66: '#' (ID: 2)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.002009768271818757
    2. 'r' → logprob: -6.377009868621826
    3. 'w' → logprob: -9.002009391784668
    4. 'uld' → logprob: -9.752009391784668
    5. 'u' → logprob: -10.502009391784668
    6. '```' → logprob: -10.627009391784668
    7. 'ul' → logprob: -11.002009391784668
    8. 't' → logprob: -11.252009391784668
    9. 'ut' → logprob: -11.502009391784668
    10. 'ur' → logprob: -12.002009391784668

Token 67: ' Style' (ID: 17602)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.002519061556085944
    2. 'r' → logprob: -6.127519130706787
    3. 'w' → logprob: -8.502518653869629
    4. 'uld' → logprob: -9.877518653869629
    5. 'ut' → logprob: -11.127518653869629
    6. 'range' → logprob: -11.252518653869629
    7. 'ul' → logprob: -11.502518653869629
    8. '```' → logprob: -11.502518653869629
    9. 'rtl' → logprob: -12.127518653869629
    10. 'st' → logprob: -12.377518653869629

Token 68: ' "' (ID: 392)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.019060879945755005
    2. 'r' → logprob: -4.019061088562012
    3. 'rtl' → logprob: -8.019061088562012
    4. '```' → logprob: -8.144061088562012
    5. 'uld' → logprob: -10.269061088562012
    6. 'rtc' → logprob: -10.519061088562012
    7. 'ul' → logprob: -10.644061088562012
    8. '``' → logprob: -11.144061088562012
    9. '   ' → logprob: -11.144061088562012
    10. 'ut' → logprob: -11.269061088562012

Token 69: 'proc' (ID: 35874)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.018597854301333427
    2. 'r' → logprob: -4.0185980796813965
    3. 'rtl' → logprob: -9.518597602844238
    4. 'range' → logprob: -9.643597602844238
    5. '```' → logprob: -9.768597602844238
    6. 'uld' → logprob: -10.268597602844238
    7. 'ur' → logprob: -10.518597602844238
    8. 'ul' → logprob: -10.518597602844238
    9. 'ut' → logprob: -11.018597602844238
    10. 'rl' → logprob: -11.643597602844238

Token 70: 'éd' (ID: 6383)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.32191935181617737
    2. 'def' → logprob: -1.821919322013855
    3. 'ur' → logprob: -3.3219194412231445
    4. 'éd' → logprob: -3.4469194412231445
    5. 'f' → logprob: -4.3219194412231445
    6. 'd' → logprob: -4.8219194412231445
    7. 'ud' → logprob: -5.9469194412231445
    8. 'n' → logprob: -6.0719194412231445
    9. 'c' → logprob: -6.1969194412231445
    10. 're' → logprob: -6.3219194412231445

Token 71: 'ure' (ID: 627)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15020540356636047
    2. 'dur' → logprob: -2.775205373764038
    3. 'éd' → logprob: -3.650205373764038
    4. 'def' → logprob: -4.400205612182617
    5. 'ed' → logprob: -4.525205612182617
    6. 'dé' → logprob: -4.775205612182617
    7. 'dures' → logprob: -5.150205612182617
    8. 'é' → logprob: -5.400205612182617
    9. 'de' → logprob: -5.650205612182617
    10. '```' → logprob: -7.150205612182617

Token 72: '"' (ID: 1)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5180485248565674
    2. 'd' → logprob: -2.1430485248565674
    3. 'ed' → logprob: -2.5180485248565674
    4. 'r' → logprob: -2.8930485248565674
    5. 'de' → logprob: -3.1430485248565674
    6. 'ur' → logprob: -4.143048286437988
    7. 'ss' → logprob: -4.268048286437988
    8. 'n' → logprob: -4.393048286437988
    9. 'for' → logprob: -4.893048286437988
    10. 'dures' → logprob: -4.893048286437988

Token 73: ' old' (ID: 2890)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.016863171011209488
    2. 'r' → logprob: -4.1418633460998535
    3. 'uld' → logprob: -7.8918633460998535
    4. 'rtl' → logprob: -9.391862869262695
    5. 'ur' → logprob: -10.266862869262695
    6. 'ut' → logprob: -10.266862869262695
    7. 'range' → logprob: -10.391862869262695
    8. 'u' → logprob: -10.516862869262695
    9. 'ul' → logprob: -10.516862869262695
    10. '```' → logprob: -10.641862869262695

Token 74: ' school' (ID: 3474)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5864719152450562
    2. 'd' → logprob: -1.5864719152450562
    3. 'ur' → logprob: -2.0864720344543457
    4. 'ure' → logprob: -3.3364720344543457
    5. '```' → logprob: -4.336472034454346
    6. 'éd' → logprob: -4.586472034454346
    7. 'urement' → logprob: -4.711472034454346
    8. 'r' → logprob: -5.211472034454346
    9. 'dur' → logprob: -5.211472034454346
    10. 'dures' → logprob: -5.211472034454346

Token 75: '
' (ID: 198)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.5254776477813721
    2. 'r' → logprob: -0.9004776477813721
    3. ' ' → logprob: -7.525477409362793
    4. ' r' → logprob: -7.775477409362793
    5. 'ur' → logprob: -8.275477409362793
    6. 'rl' → logprob: -9.275477409362793
    7. ' ' → logprob: -9.275477409362793
    8. 'u' → logprob: -9.400477409362793
    9. 't' → logprob: -9.525477409362793
    10. 'rtle' → logprob: -9.525477409362793

Token 76: 'for' (ID: 1938)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.08032478392124176
    2. 'r' → logprob: -2.58032488822937
    3. 'uld' → logprob: -8.08032512664795
    4. '```' → logprob: -8.45532512664795
    5. 'w' → logprob: -8.58032512664795
    6. 'rtl' → logprob: -9.20532512664795
    7. 'u' → logprob: -9.33032512664795
    8. 'range' → logprob: -9.33032512664795
    9. 'ul' → logprob: -9.45532512664795
    10. 'ut' → logprob: -10.08032512664795

Token 77: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.028758563101291656
    2. ' i' → logprob: -4.028758525848389
    3. ' ' → logprob: -4.778758525848389
    4. '_' → logprob: -6.153758525848389
    5. '  ' → logprob: -12.403759002685547
    6. ' sho' → logprob: -12.778759002685547
    7. ' ' → logprob: -13.028759002685547
    8. ' node' → logprob: -13.153759002685547
    9. ' s' → logprob: -13.653759002685547
    10. ' n' → logprob: -14.153759002685547

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033621031790971756
    2. 'in' → logprob: -3.658621072769165
    3. ' ' → logprob: -5.283620834350586
    4. '_' → logprob: -6.658620834350586
    5. ' i' → logprob: -7.533620834350586
    6. ' _' → logprob: -8.283620834350586
    7. '  ' → logprob: -10.408620834350586
    8. 'i' → logprob: -10.408620834350586
    9. 'range' → logprob: -11.158620834350586
    10. 'n' → logprob: -11.783620834350586

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18011975288391113
    2. 'range' → logprob: -1.8051197528839111
    3. ' ran' → logprob: -9.680119514465332
    4. ' ra' → logprob: -9.680119514465332
    5. ' ' → logprob: -10.055119514465332
    6. ' rang' → logprob: -10.430119514465332
    7. 'rang' → logprob: -10.430119514465332
    8. 'ran' → logprob: -10.430119514465332
    9. ' fetch' → logprob: -10.555119514465332
    10. ' r' → logprob: -10.680119514465332

Token 80: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0013454732252284884
    2. '(' → logprob: -6.626345634460449
    3. '(int' → logprob: -11.87634563446045
    4. ' (' → logprob: -12.25134563446045
    5. 'N' → logprob: -12.62634563446045
    6. '(n' → logprob: -13.00134563446045
    7. '(M' → logprob: -13.75134563446045
    8. '(
' → logprob: -15.25134563446045
    9. ' ' → logprob: -15.50134563446045
    10. '()' → logprob: -15.75134563446045

Token 81: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01769387349486351
    2. '+' → logprob: -4.267693996429443
    3. ')' → logprob: -6.642693996429443
    4. ' ):' → logprob: -6.767693996429443
    5. '-' → logprob: -7.767693996429443
    6. '):
' → logprob: -7.892693996429443
    7. ' +' → logprob: -8.767693519592285
    8. ' -' → logprob: -9.892693519592285
    9. '*' → logprob: -10.767693519592285
    10. '):
' → logprob: -12.017693519592285

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895713090896606
    2. ' ' → logprob: -2.4639570713043213
    3. '2' → logprob: -11.338956832885742
    4. ' ' → logprob: -12.963956832885742
    5. '<|end|>' → logprob: -13.713956832885742
    6. ')' → logprob: -13.963956832885742
    7. '  ' → logprob: -14.963956832885742
    8. '0' → logprob: -15.776456832885742
    9. '   ' → logprob: -16.151456832885742
    10. '	' → logprob: -16.276456832885742

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026300468016415834
    2. ' ' → logprob: -8.250263214111328
    3. '2' → logprob: -14.125263214111328
    4. ')' → logprob: -15.000263214111328
    5. '  ' → logprob: -16.250263214111328
    6. '   ' → logprob: -16.750263214111328
    7. '<|end|>' → logprob: -17.000263214111328
    8. '```' → logprob: -17.062763214111328
    9. '۱' → logprob: -17.312763214111328
    10. '১' → logprob: -17.500263214111328

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001352975727058947
    2. ')' → logprob: -7.126352787017822
    3. ' ):' → logprob: -8.12635326385498
    4. '):
' → logprob: -9.00135326385498
    5. ':' → logprob: -9.00135326385498
    6. ',' → logprob: -13.37635326385498
    7. ' )' → logprob: -13.37635326385498
    8. '):
' → logprob: -13.62635326385498
    9. ' :' → logprob: -14.87635326385498
    10. ']:' → logprob: -15.00135326385498

Token 85: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.08275260031223297
    2. ' line' → logprob: -3.5827527046203613
    3. ' a' → logprob: -4.207752704620361
    4. 'u' → logprob: -4.207752704620361
    5. 'a' → logprob: -4.832752704620361
    6. '   ' → logprob: -5.332752704620361
    7. ' s' → logprob: -5.832752704620361
    8. ')' → logprob: -6.457752704620361
    9. '<|end|>' → logprob: -7.332752704620361
    10. 's' → logprob: -7.457752704620361

Token 86: ' couple' (ID: 7167)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2541550397872925
    2. ' u' → logprob: -1.7541550397872925
    3. 'a' → logprob: -3.129155158996582
    4. ' line' → logprob: -6.254155158996582
    5. ' a' → logprob: -6.254155158996582
    6. '   ' → logprob: -6.504155158996582
    7. 's' → logprob: -7.004155158996582
    8. 'line' → logprob: -8.379155158996582
    9. 'x' → logprob: -9.004155158996582
    10. 'v' → logprob: -9.004155158996582

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797914355993271
    2. '=' → logprob: -1.8047914505004883
    3. 's' → logprob: -10.554791450500488
    4. '=input' → logprob: -11.929791450500488
    5. ' ' → logprob: -12.554791450500488
    6. ',' → logprob: -12.929791450500488
    7. ')' → logprob: -13.929791450500488
    8. '=int' → logprob: -14.179791450500488
    9. '=line' → logprob: -14.179791450500488
    10. '.' → logprob: -14.179791450500488

Token 88: ' fetch' (ID: 12011)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20704661309719086
    2. 'tuple' → logprob: -1.832046627998352
    3. ' list' → logprob: -4.0820465087890625
    4. ' tuple' → logprob: -4.8320465087890625
    5. 'map' → logprob: -6.2070465087890625
    6. ' map' → logprob: -10.457046508789062
    7. ' ' → logprob: -11.707046508789062
    8. 'm' → logprob: -12.332046508789062
    9. 'int' → logprob: -12.457046508789062
    10. '[' → logprob: -12.582046508789062

Token 89: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0076401131227612495
    2. '()' → logprob: -4.8826398849487305
    3. ' ().' → logprob: -10.63263988494873
    4. ' ()' → logprob: -12.38263988494873
    5. '()
' → logprob: -12.50763988494873
    6. '(' → logprob: -14.00763988494873
    7. '()

' → logprob: -15.00763988494873
    8. '.strip' → logprob: -15.25763988494873
    9. '())' → logprob: -16.007640838623047
    10. '()<' → logprob: -16.132640838623047

Token 90: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5777307152748108
    2. 'strip' → logprob: -0.8277307152748108
    3. 'rstrip' → logprob: -6.327730655670166
    4. 'spl' → logprob: -13.202731132507324
    5. ' split' → logprob: -13.827731132507324
    6. ' strip' → logprob: -14.577731132507324
    7. 's' → logprob: -15.452731132507324
    8. 'rs' → logprob: -16.077730178833008
    9. '(split' → logprob: -18.077730178833008
    10. 'replace' → logprob: -18.452730178833008

Token 91: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003000762080773711
    2. '(' → logprob: -6.003000736236572
    3. '()
' → logprob: -8.00300121307373
    4. '('' → logprob: -9.75300121307373
    5. ' ()' → logprob: -10.12800121307373
    6. '()]' → logprob: -10.75300121307373
    7. '())' → logprob: -10.75300121307373
    8. '()\' → logprob: -11.75300121307373
    9. '()[' → logprob: -12.00300121307373
    10. '()

' → logprob: -12.00300121307373

Token 92: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5435745120048523
    2. '[' → logprob: -1.543574571609497
    3. '<|end|>' → logprob: -2.418574571609497
    4. '  ' → logprob: -2.668574571609497
    5. '   ' → logprob: -4.543574333190918
    6. '  
' → logprob: -4.793574333190918
    7. ')' → logprob: -4.918574333190918
    8. ' 
' → logprob: -5.668574333190918
    9. '0' → logprob: -5.668574333190918
    10. '()' → logprob: -6.168574333190918

Token 93: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3012025058269501
    2. 'u' → logprob: -1.6762025356292725
    3. 'a' (adapté à ' a') → logprob: -3.3012025356292725
    4. ' a' → logprob: -3.4262025356292725
    5. '   ' → logprob: -7.301202297210693
    6. 'x' → logprob: -7.426202297210693
    7. ' x' → logprob: -7.426202297210693
    8. '[u' → logprob: -8.301202774047852
    9. ' for' → logprob: -8.426202774047852
    10. '    
' → logprob: -8.926202774047852

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16813604533672333
    2. ' =' → logprob: -2.2931361198425293
    3. '=' → logprob: -3.0431361198425293
    4. ' ,' → logprob: -5.793136119842529
    5. '=int' → logprob: -6.793136119842529
    6. ',b' → logprob: -7.043136119842529
    7. '.append' → logprob: -8.418135643005371
    8. ',a' → logprob: -8.918135643005371
    9. 'int' → logprob: -9.043135643005371
    10. '.' → logprob: -9.168135643005371

Token 95: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5235357284545898
    2. 'b' → logprob: -0.8985357284545898
    3. ' ' → logprob: -8.02353572845459
    4. ' =' → logprob: -10.02353572845459
    5. 'int' → logprob: -11.14853572845459
    6. '<|end|>' → logprob: -12.27353572845459
    7. 's' → logprob: -12.39853572845459
    8. '=' → logprob: -12.52353572845459
    9. ' ' → logprob: -12.52353572845459
    10. '=int' → logprob: -13.02353572845459

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688772916793823
    2. '=' → logprob: -1.136887788772583
    3. '=int' → logprob: -11.261887550354004
    4. ',' → logprob: -13.011887550354004
    5. ' ' → logprob: -14.261887550354004
    6. ')' → logprob: -15.386887550354004
    7. 'a' → logprob: -15.386887550354004
    8. ' =[' → logprob: -16.63688850402832
    9. '    ' → logprob: -16.76188850402832
    10. ' =
' → logprob: -17.01188850402832

Token 97: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2607719302177429
    2. ' map' → logprob: -1.5107719898223877
    3. 'int' → logprob: -4.885771751403809
    4. 'map' → logprob: -7.010771751403809
    5. ' ' → logprob: -8.260771751403809
    6. '[int' → logprob: -10.510771751403809
    7. ' list' → logprob: -10.760771751403809
    8. ' tuple' → logprob: -10.885771751403809
    9. '  ' → logprob: -11.510771751403809
    10. ' [' → logprob: -12.385771751403809

Token 98: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00043972869752906263
    2. '(' → logprob: -7.750439643859863
    3. '(a' → logprob: -11.750439643859863
    4. '(s' → logprob: -14.750439643859863
    5. ' (' → logprob: -15.500439643859863
    6. '(b' → logprob: -15.750439643859863
    7. '(co' → logprob: -15.750439643859863
    8. '(
' → logprob: -16.62544059753418
    9. 'cou' → logprob: -17.37544059753418
    10. 'c' → logprob: -17.50044059753418

Token 99: 'ouple' (ID: 166219)
  Prédit: 'ouple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouple' → logprob: -0.012682577595114708
    2. '[' → logprob: -5.1376824378967285
    3. '[c' → logprob: -5.3876824378967285
    4. '(c' → logprob: -6.5126824378967285
    5. 'ou' → logprob: -7.6376824378967285
    6. 'cou' → logprob: -9.262682914733887
    7. 'oupe' → logprob: -10.262682914733887
    8. ')' → logprob: -11.387682914733887
    9. 'up' → logprob: -11.512682914733887
    10. 'oup' → logprob: -11.762682914733887

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000295420759357512
    2. '()[' → logprob: -8.250295639038086
    3. '0' → logprob: -10.625295639038086
    4. '()),' → logprob: -12.875295639038086
    5. '(' → logprob: -13.375295639038086
    6. ' [' → logprob: -13.500295639038086
    7. '()' → logprob: -13.625295639038086
    8. ')' → logprob: -14.125295639038086
    9. '),' → logprob: -14.250295639038086
    10. '   ' → logprob: -14.625295639038086

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014239625306800008
    2. ' ' → logprob: -8.875142097473145
    3. '[' → logprob: -13.500142097473145
    4. '(' → logprob: -14.375142097473145
    5. ')' → logprob: -15.250142097473145
    6. '1' → logprob: -16.75014305114746
    7. '   ' → logprob: -16.87514305114746
    8. '  ' → logprob: -17.12514305114746
    9. ']' → logprob: -17.56264305114746
    10. '])' → logprob: -18.00014305114746

Token 102: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0010534112807363272
    2. ')' → logprob: -7.001053333282471
    3. ' ),' → logprob: -9.001053810119629
    4. ',' → logprob: -11.126053810119629
    5. '),(' → logprob: -13.126053810119629
    6. ' ' → logprob: -14.751053810119629
    7. '   ' → logprob: -15.251053810119629
    8. ',),' → logprob: -15.376053810119629
    9. 'a' → logprob: -15.876053810119629
    10. '],' → logprob: -16.001052856445312

Token 103: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931524872779846
    2. ' int' → logprob: -0.6931524872779846
    3. '=int' → logprob: -13.31815242767334
    4. '<int' → logprob: -13.81815242767334
    5. '(int' → logprob: -13.94315242767334
    6. '[int' → logprob: -13.94315242767334
    7. ':int' → logprob: -15.44315242767334
    8. ',int' → logprob: -15.56815242767334
    9. '<|end|>' → logprob: -15.81815242767334
    10. '	int' → logprob: -15.94315242767334

Token 104: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.27099974633893e-05
    2. '(' → logprob: -11.625012397766113
    3. ' (' → logprob: -13.250012397766113
    4. 'cou' → logprob: -13.500012397766113
    5. ' couple' → logprob: -15.500012397766113
    6. '(co' → logprob: -16.25001335144043
    7. 'c' → logprob: -16.87501335144043
    8. '	c' → logprob: -17.25001335144043
    9. '(C' → logprob: -17.62501335144043
    10. ')c' → logprob: -17.62501335144043

Token 105: 'ouple' (ID: 166219)
  Prédit: 'ouple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouple' → logprob: -0.03039364702999592
    2. 'cou' → logprob: -3.530393600463867
    3. 'ou' → logprob: -8.655393600463867
    4. '[' → logprob: -8.905393600463867
    5. 'uple' → logprob: -9.030393600463867
    6. ' couple' → logprob: -9.280393600463867
    7. 'oup' → logprob: -10.155393600463867
    8. '[c' → logprob: -10.280393600463867
    9. 'oupe' → logprob: -11.780393600463867
    10. 'oule' → logprob: -11.780393600463867

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.383526149671525e-05
    2. '1' → logprob: -9.875053405761719
    3. '])' → logprob: -13.750053405761719
    4. ')' → logprob: -15.000053405761719
    5. '[-' → logprob: -15.250053405761719
    6. '[
' → logprob: -15.625053405761719
    7. ' ' → logprob: -16.00005340576172
    8. ' [' → logprob: -16.12505340576172
    9. '   ' → logprob: -16.37505340576172
    10. '```' → logprob: -16.75005340576172

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -10.000055313110352
    3. '])' → logprob: -12.000055313110352
    4. '[' → logprob: -13.500055313110352
    5. '   ' → logprob: -14.125055313110352
    6. '0' → logprob: -14.750055313110352
    7. '  ' → logprob: -15.375055313110352
    8. '```' → logprob: -16.00005531311035
    9. ')' → logprob: -16.18755531311035
    10. '2' → logprob: -16.43755531311035

Token 108: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -12.375008583068848
    3. '),' → logprob: -13.750008583068848
    4. '))' → logprob: -14.250008583068848
    5. ' )' → logprob: -14.250008583068848
    6. '])' → logprob: -14.500008583068848
    7. '<|end|>' → logprob: -15.750008583068848
    8. ')]' → logprob: -15.875008583068848
    9. '   ' → logprob: -16.00000762939453
    10. ')])' → logprob: -16.12500762939453

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060350943356752396
    2. '
' → logprob: -3.1853508949279785
    3. 'gr' → logprob: -4.4353508949279785
    4. ')' → logprob: -6.5603508949279785
    5. '    
' → logprob: -6.8103508949279785
    6. '<|end|>' → logprob: -7.4353508949279785
    7. '	gr' → logprob: -7.5603508949279785
    8. ';' → logprob: -7.8103508949279785
    9. 'gras' → logprob: -8.435351371765137
    10. ' 
' → logprob: -8.435351371765137

Token 110: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.013127409853041172
    2. ' grap' → logprob: -4.513127326965332
    3. 'graph' → logprob: -6.888127326965332
    4. 'gra' → logprob: -7.388127326965332
    5. '
' → logprob: -8.888127326965332
    6. '   ' → logprob: -9.763127326965332
    7. 'gras' → logprob: -9.888127326965332
    8. ' graph' → logprob: -10.263127326965332
    9. '    
' → logprob: -10.513127326965332
    10. ' gr' → logprob: -11.013127326965332

Token 111: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -3.173704271830502e-06
    2. 'h' → logprob: -13.25000286102295
    3. 'phe' → logprob: -14.37500286102295
    4. 'e' → logprob: -15.37500286102295
    5. 'heap' → logprob: -16.500003814697266
    6. 'hep' → logprob: -16.875003814697266
    7. '[' → logprob: -17.125003814697266
    8. 'hehe' → logprob: -17.125003814697266
    9. '_he' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.250003814697266

Token 112: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.894790981779806e-05
    2. '[b' → logprob: -10.000048637390137
    3. '[' → logprob: -12.625048637390137
    4. 'a' → logprob: -16.125049591064453
    5. ' [' → logprob: -18.625049591064453
    6. '```' → logprob: -19.625049591064453
    7. '[c' → logprob: -20.375049591064453
    8. '   ' → logprob: -20.500049591064453
    9. '[int' → logprob: -20.500049591064453
    10. '[u' → logprob: -20.875049591064453

Token 113: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.39874544739723206
    2. '.append' → logprob: -1.1487454175949097
    3. ').' → logprob: -5.148745536804199
    4. '.' → logprob: -5.148745536804199
    5. ' .' → logprob: -9.1487455368042
    6. ']' → logprob: -10.5237455368042
    7. ' ].' → logprob: -10.8987455368042
    8. '.app' → logprob: -11.3987455368042
    9. '.ap' → logprob: -12.3987455368042
    10. '[' → logprob: -12.6487455368042

Token 114: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011847536079585552
    2. '.' → logprob: -6.751184940338135
    3. ' .' → logprob: -11.751184463500977
    4. ').' → logprob: -12.876184463500977
    5. '].' → logprob: -13.626184463500977
    6. '.app' → logprob: -14.001184463500977
    7. '.add' → logprob: -14.501184463500977
    8. '.setdefault' → logprob: -14.626184463500977
    9. '.ap' → logprob: -14.751184463500977
    10. '.extend' → logprob: -15.501184463500977

Token 115: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.08511847257614136
    2. ' [' → logprob: -2.585118532180786
    3. '[' → logprob: -5.085118293762207
    4. '[a' → logprob: -11.585118293762207
    5. ' b' → logprob: -11.960118293762207
    6. 'b' → logprob: -13.460118293762207
    7. ' ' → logprob: -13.585118293762207
    8. '[B' → logprob: -13.960118293762207
    9. '[j' → logprob: -14.585118293762207
    10. '[f' → logprob: -14.710118293762207

Token 116: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.758615493774414
    4. '   ' → logprob: -18.508615493774414
    5. ')b' → logprob: -19.383615493774414
    6. '	b' → logprob: -19.883615493774414
    7. ' ' → logprob: -20.258615493774414
    8. '  ' → logprob: -20.383615493774414
    9. '
' → logprob: -20.883615493774414
    10. '(b' → logprob: -21.508615493774414

Token 117: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039013654459267855
    2. ' ]' → logprob: -5.628901481628418
    3. ',' → logprob: -8.128901481628418
    4. ']
' → logprob: -12.503901481628418
    5. '   ' → logprob: -13.878901481628418
    6. ' ,' → logprob: -15.128901481628418
    7. ' ' → logprob: -15.378901481628418
    8. ']

' → logprob: -15.753901481628418
    9. '<|end|>' → logprob: -16.0039005279541
    10. ')]' → logprob: -16.2539005279541

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005027544684708118
    2. '<|end|>' → logprob: -8.125502586364746
    3. ' ' → logprob: -9.750502586364746
    4. ',' → logprob: -10.125502586364746
    5. 'gr' → logprob: -10.250502586364746
    6. '  ' → logprob: -10.875502586364746
    7. ' and' → logprob: -10.875502586364746
    8. '[' → logprob: -11.875502586364746
    9. '    
' → logprob: -12.125502586364746
    10. '	gr' → logprob: -12.250502586364746

Token 119: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5849707722663879
    2. ' grap' → logprob: -1.4599707126617432
    3. '   ' → logprob: -1.5849707126617432
    4. '	gr' → logprob: -6.084970951080322
    5. ' ' → logprob: -7.334970951080322
    6. ' gr' → logprob: -7.584970951080322
    7. '  ' → logprob: -7.834970951080322
    8. 'graph' → logprob: -7.834970951080322
    9. '    ' → logprob: -8.084970474243164
    10. '    
' → logprob: -8.334970474243164

Token 120: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0023448499850928783
    2. 'phe' → logprob: -6.252345085144043
    3. 'aphe' → logprob: -8.002345085144043
    4. 'e' → logprob: -10.002345085144043
    5. 'pe' → logprob: -11.127345085144043
    6. 'hep' → logprob: -12.252345085144043
    7. '[' → logprob: -12.502345085144043
    8. 'fe' → logprob: -12.502345085144043
    9. 'ap' → logprob: -13.377345085144043
    10. 'h' → logprob: -13.502345085144043

Token 121: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.111979357432574e-05
    2. '[' → logprob: -10.00007152557373
    3. '[a' → logprob: -10.75007152557373
    4. 'b' → logprob: -13.50007152557373
    5. '   ' → logprob: -13.87507152557373
    6. ' [' → logprob: -13.87507152557373
    7. '```' → logprob: -15.50007152557373
    8. ' ' → logprob: -15.75007152557373
    9. '[B' → logprob: -16.375070571899414
    10. '[c' → logprob: -16.875070571899414

Token 122: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004004434682428837
    2. ']+=' → logprob: -5.87900447845459
    3. ' ]' → logprob: -7.00400447845459
    4. '].' → logprob: -9.12900447845459
    5. ' +=' → logprob: -9.12900447845459
    6. ']+' → logprob: -10.37900447845459
    7. '   ' → logprob: -11.25400447845459
    8. ')' → logprob: -11.37900447845459
    9. '.' → logprob: -12.00400447845459
    10. '.]' → logprob: -13.00400447845459

Token 123: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.037835580878891e-05
    2. ' append' → logprob: -10.62505054473877
    3. 'add' → logprob: -11.50005054473877
    4. '+' → logprob: -11.87505054473877
    5. '.append' → logprob: -12.00005054473877
    6. '+=' → logprob: -13.00005054473877
    7. 'appen' → logprob: -16.000049591064453
    8. '_append' → logprob: -16.000049591064453
    9. '	append' → logprob: -16.375049591064453
    10. 'app' → logprob: -16.375049591064453

Token 124: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. 'a' → logprob: -15.250021934509277
    4. '(
' → logprob: -16.50002098083496
    5. ' (' → logprob: -17.87502098083496
    6. '(A' → logprob: -18.25002098083496
    7. '((' → logprob: -18.62502098083496
    8. '(b' → logprob: -20.87502098083496
    9. '(
' → logprob: -21.25002098083496
    10. '('' → logprob: -21.50002098083496

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.000019073486328
    4. '))' → logprob: -16.875019073486328
    5. '<|end|>' → logprob: -16.875019073486328
    6. '   ' → logprob: -17.500019073486328
    7. ']' → logprob: -17.625019073486328
    8. '),' → logprob: -18.000019073486328
    9. ')`' → logprob: -18.000019073486328
    10. ')

' → logprob: -18.125019073486328

Token 126: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6128250956535339
    2. ')' → logprob: -1.7378251552581787
    3. '
' → logprob: -1.8628251552581787
    4. ' 
' → logprob: -3.4878251552581787
    5. 'visited' → logprob: -3.6128251552581787
    6. '#' → logprob: -3.8628251552581787
    7. '<|end|>' → logprob: -4.4878249168396
    8. ' visited' → logprob: -4.8628249168396
    9. '    
' → logprob: -5.2378249168396
    10. ' ' → logprob: -5.4878249168396

Token 127: ' Gén' (ID: 71828)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.33314526081085205
    2. 'sys' → logprob: -2.7081451416015625
    3. 'dp' → logprob: -2.7081451416015625
    4. 'def' → logprob: -3.0831451416015625
    5. 'stack' → logprob: -3.4581451416015625
    6. 'import' → logprob: -4.2081451416015625
    7. ' visited' → logprob: -4.3331451416015625
    8. 'vis' → logprob: -4.5831451416015625
    9. 'depth' → logprob: -5.0831451416015625
    10. 'dist' → logprob: -5.4581451416015625

Token 128: 'ération' (ID: 24977)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020877130329608917
    2. 'er' → logprob: -4.395877361297607
    3. 'ération' → logprob: -5.645877361297607
    4. 'éral' → logprob: -6.395877361297607
    5. 'érer' → logprob: -7.020877361297607
    6. 'érateur' → logprob: -7.520877361297607
    7. 'ér' → logprob: -8.02087688446045
    8. 'dfs' → logprob: -8.52087688446045
    9. ' def' → logprob: -8.64587688446045
    10. 'r' → logprob: -9.02087688446045

Token 129: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4324810206890106
    2. '<|end|>' → logprob: -1.807481050491333
    3. 'des' → logprob: -2.807481050491333
    4. ' des' → logprob: -3.432481050491333
    5. 'de' → logprob: -3.557481050491333
    6. 'd' → logprob: -4.057480812072754
    7. ' de' → logprob: -4.432480812072754
    8. ' of' → logprob: -4.932480812072754
    9. 'dp' → logprob: -4.932480812072754
    10. ' d' → logprob: -5.057480812072754

Token 130: ' combinaison' (ID: 165933)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7502231597900391
    2. ' une' → logprob: -2.000223159790039
    3. ' un' → logprob: -2.500223159790039
    4. 'dp' → logprob: -2.875223159790039
    5. 'une' → logprob: -3.125223159790039
    6. 'la' → logprob: -3.375223159790039
    7. 'a' → logprob: -3.750223159790039
    8. ' l' → logprob: -3.875223159790039
    9. 'def' → logprob: -4.000223159790039
    10. 's' → logprob: -4.125223159790039

Token 131: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031389743089675903
    2. ' =' → logprob: -6.128139019012451
    3. '(n' → logprob: -7.878139019012451
    4. '(s' → logprob: -9.253138542175293
    5. 'def' → logprob: -9.253138542175293
    6. '(max' → logprob: -9.503138542175293
    7. '=' → logprob: -9.753138542175293
    8. 'n' → logprob: -10.003138542175293
    9. '(' → logprob: -10.003138542175293
    10. '_s' → logprob: -10.503138542175293

Token 132: ' cam' (ID: 4166)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.283671259880066
    2. 'def' → logprob: -2.1586713790893555
    3. '```' → logprob: -2.4086713790893555
    4. 'dfs' → logprob: -2.7836713790893555
    5. 'fact' → logprob: -2.9086713790893555
    6. 'factor' → logprob: -3.0336713790893555
    7. 'python' → logprob: -3.1586713790893555
    8. 'memo' → logprob: -3.1586713790893555
    9. 'cache' → logprob: -3.6586713790893555
    10. 'com' → logprob: -3.7836713790893555

Token 133: 'oufl' (ID: 106853)
  Prédit: 'éra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éra' → logprob: -0.03818883001804352
    2. 'era' → logprob: -3.538188934326172
    3. 'p' → logprob: -6.038188934326172
    4. 'eras' → logprob: -6.663188934326172
    5. '```' → logprob: -6.663188934326172
    6. 'b' → logprob: -6.788188934326172
    7. 'ér' → logprob: -8.038188934326172
    8. 'é' → logprob: -8.413188934326172
    9. 'el' → logprob: -9.163188934326172
    10. 'code' → logprob: -9.413188934326172

Token 134: 'ant' (ID: 493)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.1759939044713974
    2. 'ouflage' → logprob: -2.0509939193725586
    3. 'of' → logprob: -4.550993919372559
    4. 'oufl' → logprob: -4.925993919372559
    5. 'fl' → logprob: -5.175993919372559
    6. 'ou' → logprob: -5.675993919372559
    7. 'lage' → logprob: -6.550993919372559
    8. '```' → logprob: -7.300993919372559
    9. 'âge' → logprob: -7.425993919372559
    10. 'e' → logprob: -7.675993919372559

Token 135: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40070512890815735
    2. ' la' → logprob: -2.525705099105835
    3. 's' → logprob: -2.775705099105835
    4. ' def' → logprob: -3.775705099105835
    5. ' les' → logprob: -3.775705099105835
    6. 'n' → logprob: -4.275705337524414
    7. ' le' → logprob: -4.400705337524414
    8. '(n' → logprob: -4.525705337524414
    9. 'import' → logprob: -4.525705337524414
    10. 'les' → logprob: -4.775705337524414

Token 136: ''al' (ID: 47062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20470917224884033
    2. 'import' → logprob: -3.204709053039551
    3. 'e' → logprob: -3.829709053039551
    4. 'en' → logprob: -4.079709053039551
    5. 'def' → logprob: -4.204709053039551
    6. 'ambda' → logprob: -4.579709053039551
    7. 'cache' → logprob: -4.704709053039551
    8. ''import' → logprob: -4.704709053039551
    9. '```' → logprob: -5.079709053039551
    10. ''' → logprob: -5.454709053039551

Token 137: 'go' (ID: 2319)
  Prédit: 'pha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pha' → logprob: -0.42881447076797485
    2. 'g' → logprob: -1.55381441116333
    3. 'ias' → logprob: -3.30381441116333
    4. 'l' → logprob: -3.55381441116333
    5. 'phabet' → logprob: -4.17881441116333
    6. 'ph' → logprob: -4.67881441116333
    7. 'loc' → logprob: -5.05381441116333
    8. 'e' → logprob: -5.05381441116333
    9. 'len' → logprob: -5.30381441116333
    10. 'phas' → logprob: -5.30381441116333

Token 138: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5654097199440002
    2. 'import' → logprob: -1.6904096603393555
    3. 'from' → logprob: -2.5654096603393555
    4. 'n' → logprob: -2.9404096603393555
    5. '(n' → logprob: -3.0654096603393555
    6. 's' → logprob: -3.6904096603393555
    7. '(' → logprob: -4.8154096603393555
    8. ' def' → logprob: -4.8154096603393555
    9. ' from' → logprob: -5.3154096603393555
    10. ')' → logprob: -5.9404096603393555

Token 139: 'F' (ID: 37)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5116370320320129
    2. '(' → logprob: -2.136636972427368
    3. ')' → logprob: -2.761636972427368
    4. 's' → logprob: -3.011636972427368
    5. ' def' → logprob: -3.386636972427368
    6. ' ' → logprob: -3.511636972427368
    7. 'import' → logprob: -3.761636972427368
    8. '_' → logprob: -4.136637210845947
    9. ' (' → logprob: -4.636637210845947
    10. '(
' → logprob: -4.636637210845947

Token 140: '2' (ID: 17)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.6957060694694519
    2. 'ac' → logprob: -1.1957061290740967
    3. 'actor' → logprob: -1.6957061290740967
    4. ' =' → logprob: -4.945705890655518
    5. 'ACT' → logprob: -6.070705890655518
    6. 'AC' → logprob: -6.445705890655518
    7. '=' → logprob: -6.820705890655518
    8. 'rom' → logprob: -7.445705890655518
    9. 'acs' → logprob: -7.445705890655518
    10. 'acto' → logprob: -7.570705890655518

Token 141: ' =' (ID: 314)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.2677721679210663
    2. 'ACT' → logprob: -2.0177721977233887
    3. 'ac' → logprob: -2.7677721977233887
    4. 'act' → logprob: -3.8927721977233887
    5. 'actor' → logprob: -4.392772197723389
    6. '=' → logprob: -5.642772197723389
    7. 'A' → logprob: -7.142772197723389
    8. ' =' → logprob: -7.642772197723389
    9. 'CT' → logprob: -8.26777172088623
    10. '```' → logprob: -8.39277172088623

Token 142: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4218907058238983
    2. 'np' → logprob: -1.2968907356262207
    3. '[np' → logprob: -3.2968907356262207
    4. ' np' → logprob: -3.9218907356262207
    5. ' [' → logprob: -4.796890735626221
    6. '1' → logprob: -6.296890735626221
    7. '(np' → logprob: -6.671890735626221
    8. '[n' → logprob: -7.046890735626221
    9. '[int' → logprob: -7.296890735626221
    10. '[N' → logprob: -7.296890735626221

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002493968466296792
    2. '0' → logprob: -6.002493858337402
    3. ' ' → logprob: -11.252493858337402
    4. ']' → logprob: -13.252493858337402
    5. '-' → logprob: -13.877493858337402
    6. '(' → logprob: -14.127493858337402
    7. 'None' → logprob: -14.377493858337402
    8. '[' → logprob: -15.002493858337402
    9. 'False' → logprob: -15.377493858337402
    10. '2' → logprob: -15.752493858337402

Token 144: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028771309182047844
    2. ',' → logprob: -3.77877140045166
    3. ']
' → logprob: -5.27877140045166
    4. ' ]' → logprob: -8.40377140045166
    5. ']*(' → logprob: -9.90377140045166
    6. ']*' → logprob: -10.02877140045166
    7. ',
' → logprob: -11.02877140045166
    8. ' ,' → logprob: -11.27877140045166
    9. ' ]
' → logprob: -11.65377140045166
    10. ']

' → logprob: -11.77877140045166

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014433303149417043
    2. '2' → logprob: -7.251443386077881
    3. ' ' → logprob: -7.251443386077881
    4. '0' → logprob: -11.126442909240723
    5. '3' → logprob: -12.688942909240723
    6. ']' → logprob: -13.938942909240723
    7. '```' → logprob: -14.001442909240723
    8. '   ' → logprob: -14.063942909240723
    9. '  ' → logprob: -14.188942909240723
    10. '4' → logprob: -14.938942909240723

Token 146: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009667263948358595
    2. '2' → logprob: -7.000966548919678
    3. ' ' → logprob: -10.250967025756836
    4. '0' → logprob: -11.250967025756836
    5. '3' → logprob: -13.375967025756836
    6. '```' → logprob: -13.375967025756836
    7. '6' → logprob: -13.625967025756836
    8. '(' → logprob: -14.625967025756836
    9. ']' → logprob: -14.875967025756836
    10. '4' → logprob: -15.000967025756836

Token 147: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04355902224779129
    2. ',' → logprob: -3.2935590744018555
    3. '1' → logprob: -5.4185590744018555
    4. ' ]' → logprob: -7.5435590744018555
    5. ' ,' → logprob: -8.793559074401855
    6. ']
' → logprob: -9.168559074401855
    7. '2' → logprob: -9.793559074401855
    8. ' ' → logprob: -9.918559074401855
    9. '0' → logprob: -9.918559074401855
    10. ']+' → logprob: -10.168559074401855

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22388115525245667
    2. ' ' → logprob: -1.7238811254501343
    3. '0' → logprob: -3.848881244659424
    4. ']' → logprob: -7.098881244659424
    5. '2' → logprob: -10.973880767822266
    6. '  ' → logprob: -11.536380767822266
    7. ' ]' → logprob: -11.848880767822266
    8. '3' → logprob: -11.911380767822266
    9. '<|end|>' → logprob: -12.223880767822266
    10. '])' → logprob: -12.911380767822266

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017130501568317413
    2. '0' → logprob: -4.142130374908447
    3. ' ' → logprob: -7.392130374908447
    4. ']' → logprob: -7.767130374908447
    5. '2' → logprob: -10.642130851745605
    6. '3' → logprob: -11.642130851745605
    7. '-' → logprob: -12.517130851745605
    8. ' ]' → logprob: -13.267130851745605
    9. '6' → logprob: -13.392130851745605
    10. '])' → logprob: -13.454630851745605

Token 150: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021914245560765266
    2. ',' → logprob: -3.89691424369812
    3. ' ]' → logprob: -7.521914482116699
    4. ']
' → logprob: -8.5219144821167
    5. '7' → logprob: -8.7719144821167
    6. ']+' → logprob: -9.0219144821167
    7. '0' → logprob: -9.1469144821167
    8. '1' → logprob: -9.8969144821167
    9. '3' → logprob: -9.8969144821167
    10. '6' → logprob: -10.3969144821167

Token 151: 'idx' (ID: 13196)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10537034273147583
    2. '=' → logprob: -2.355370283126831
    3. 'x' → logprob: -5.60537052154541
    4. 'ex' → logprob: -6.85537052154541
    5. 'f' → logprob: -8.23037052154541
    6. 's' → logprob: -9.85537052154541
    7. ' ' → logprob: -10.60537052154541
    8. 'dx' → logprob: -10.73037052154541
    9. ',' → logprob: -10.85537052154541
    10. '2' → logprob: -12.35537052154541

Token 153: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1462230086326599
    2. '2' → logprob: -2.0212230682373047
    3. '0' → logprob: -6.521223068237305
    4. ' ' → logprob: -6.896223068237305
    5. '1' → logprob: -7.646223068237305
    6. '4' → logprob: -7.771223068237305
    7. 'len' → logprob: -9.271223068237305
    8. '5' → logprob: -11.458723068237305
    9. '6' → logprob: -11.521223068237305
    10. '  ' → logprob: -11.521223068237305

Token 154: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11859361082315445
    2. '2' → logprob: -2.243593692779541
    3. '0' → logprob: -5.993593692779541
    4. '1' → logprob: -6.618593692779541
    5. '4' → logprob: -7.243593692779541
    6. ' ' → logprob: -7.243593692779541
    7. 'len' → logprob: -8.618593215942383
    8. '-' → logprob: -9.493593215942383
    9. '[' → logprob: -9.993593215942383
    10. '5' → logprob: -10.118593215942383

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3233809173107147
    2. '<|end|>' → logprob: -2.323380947113037
    3. 'while' → logprob: -3.198380947113037
    4. 'for' → logprob: -3.448380947113037
    5. ' while' → logprob: -3.573380947113037
    6. ')' → logprob: -3.948380947113037
    7. ' for' → logprob: -4.198380947113037
    8. ' ' → logprob: -4.573380947113037
    9. '#' → logprob: -5.198380947113037
    10. 'def' → logprob: -5.323380947113037

Token 156: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21527427434921265
    2. ' while' → logprob: -1.7152743339538574
    3. '
' → logprob: -4.840274333953857
    4. '<|end|>' → logprob: -5.465274333953857
    5. 'for' → logprob: -7.215274333953857
    6. '#' → logprob: -8.4652738571167
    7. ' for' → logprob: -8.9652738571167
    8. ',' → logprob: -9.0902738571167
    9. '<|end|>' → logprob: -9.4652738571167
    10. ')' → logprob: -9.4652738571167

Token 157: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.035792287439107895
    2. ' len' → logprob: -4.035792350769043
    3. 'idx' → logprob: -4.285792350769043
    4. ' True' → logprob: -6.035792350769043
    5. 'True' → logprob: -7.035792350769043
    6. 'len' → logprob: -8.660792350769043
    7. '	idx' → logprob: -9.410792350769043
    8. '(idx' → logprob: -9.535792350769043
    9. 'F' → logprob: -9.910792350769043
    10. ' ' → logprob: -10.160792350769043

Token 158: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1055867075920105
    2. '<' → logprob: -2.6055867671966553
    3. ' <=' → logprob: -4.230586528778076
    4. '<len' → logprob: -4.730586528778076
    5. '<=' → logprob: -5.855586528778076
    6. '<N' → logprob: -9.980587005615234
    7. '<n' → logprob: -10.355587005615234
    8. '<size' → logprob: -10.980587005615234
    9. ' ' → logprob: -12.230587005615234
    10. '<num' → logprob: -12.480587005615234

Token 159: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07363473623991013
    2. '=' → logprob: -3.323634624481201
    3. '1' → logprob: -4.573634624481201
    4. '10' → logprob: -4.948634624481201
    5. '100' → logprob: -5.198634624481201
    6. ' N' → logprob: -5.448634624481201
    7. '2' → logprob: -6.073634624481201
    8. ' ' → logprob: -6.198634624481201
    9. '(' → logprob: -6.948634624481201
    10. '=N' → logprob: -7.573634624481201

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04448847845196724
    2. ' +' → logprob: -3.1694884300231934
    3. ':' → logprob: -6.919488430023193
    4. ':
' → logprob: -7.669488430023193
    5. 'and' → logprob: -11.419488906860352
    6. ' and' → logprob: -11.669488906860352
    7. '+
' → logprob: -12.669488906860352
    8. '+:' → logprob: -12.794488906860352
    9. '*' → logprob: -13.169488906860352
    10. ' ' → logprob: -13.419488906860352

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.166990727186203
    2. '2' → logprob: -1.9169907569885254
    3. '3' → logprob: -5.791990756988525
    4. ' ' → logprob: -6.041990756988525
    5. '4' → logprob: -7.416990756988525
    6. '5' → logprob: -8.041990280151367
    7. '10' → logprob: -8.166990280151367
    8. '7' → logprob: -10.416990280151367
    9. '100' → logprob: -10.666990280151367
    10. '6' → logprob: -11.291990280151367

Token 162: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0215770211070776
    2. '2' → logprob: -3.8965771198272705
    3. '3' → logprob: -7.396576881408691
    4. '10' → logprob: -8.521576881408691
    5. '4' → logprob: -9.396576881408691
    6. '5' → logprob: -9.521576881408691
    7. ' ' → logprob: -10.771576881408691
    8. '100' → logprob: -11.396576881408691
    9. '7' → logprob: -11.646576881408691
    10. '11' → logprob: -12.521576881408691

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2529204487800598
    2. ':
' → logprob: -1.502920389175415
    3. ' :
' → logprob: -7.502920627593994
    4. ' :' → logprob: -7.752920627593994
    5. ':
' → logprob: -12.752920150756836
    6. ' and' → logprob: -13.002920150756836
    7. '):
' → logprob: -13.752920150756836
    8. ':

' → logprob: -14.502920150756836
    9. 'and' → logprob: -15.002920150756836
    10. ':F' → logprob: -15.127920150756836

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2768036425113678
    2. ' F' → logprob: -2.026803731918335
    3. ' ' → logprob: -2.651803731918335
    4. ':' → logprob: -4.901803493499756
    5. 'F' → logprob: -5.151803493499756
    6. ',' → logprob: -5.401803493499756
    7. ' 
' → logprob: -5.651803493499756
    8. '    
' → logprob: -5.651803493499756
    9. '  ' → logprob: -6.026803493499756
    10. '	F' → logprob: -6.026803493499756

Token 165: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.05502118542790413
    2. '   ' → logprob: -3.305021286010742
    3. ' F' → logprob: -4.305021286010742
    4. '
' → logprob: -5.805021286010742
    5. '    
' → logprob: -9.555021286010742
    6. ' ' → logprob: -9.930021286010742
    7. 'next' → logprob: -10.180021286010742
    8. '	F' → logprob: -10.430021286010742
    9. 'f' → logprob: -10.805021286010742
    10. 'new' → logprob: -10.930021286010742

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' =' → logprob: -12.750008583068848
    3. '.append' → logprob: -12.875008583068848
    4. '=' → logprob: -13.750008583068848
    5. ' ' → logprob: -15.437508583068848
    6. '_' → logprob: -15.562508583068848
    7. '```' → logprob: -15.625008583068848
    8. '1' → logprob: -15.875008583068848
    9. '.' → logprob: -16.18750762939453
    10. '
' → logprob: -16.37500762939453

Token 167: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013926156098023057
    2. '.' → logprob: -7.251392841339111
    3. '+=' → logprob: -8.001392364501953
    4. '=' → logprob: -8.251392364501953
    5. '.extend' → logprob: -10.751392364501953
    6. ' +=' → logprob: -11.001392364501953
    7. ' .' → logprob: -11.001392364501953
    8. '.=' → logprob: -11.751392364501953
    9. 'append' → logprob: -12.001392364501953
    10. '.app' → logprob: -12.126392364501953

Token 168: '(F' (ID: 12044)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.23238886892795563
    2. '(F' → logprob: -1.6073888540267944
    3. '(' → logprob: -4.982388973236084
    4. '(((' → logprob: -10.232388496398926
    5. '(int' → logprob: -11.357388496398926
    6. '(sum' → logprob: -11.482388496398926
    7. '(
' → logprob: -11.482388496398926
    8. '(mod' → logprob: -12.607388496398926
    9. '(min' → logprob: -12.607388496398926
    10. '(abs' → logprob: -12.982388496398926

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024013224174268544
    2. '[-' → logprob: -8.375240325927734
    3. 'F' → logprob: -12.875240325927734
    4. '(F' → logprob: -13.000240325927734
    5. '-' → logprob: -13.625240325927734
    6. '[' → logprob: -13.625240325927734
    7. '[F' → logprob: -13.625240325927734
    8. ' ' → logprob: -15.125240325927734
    9. '(-' → logprob: -15.875240325927734
    10. '(' → logprob: -16.000240325927734

Token 170: '[idx' (ID: 25582)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.02324605919420719
    2. '[idx' → logprob: -3.7732460498809814
    3. '[' → logprob: -15.273245811462402
    4. ' [-' → logprob: -15.648245811462402
    5. 'idx' → logprob: -17.39824676513672
    6. '```' → logprob: -17.39824676513672
    7. '   ' → logprob: -17.64824676513672
    8. '[id' → logprob: -17.64824676513672
    9. '[:-' → logprob: -18.27324676513672
    10. '[index' → logprob: -18.27324676513672

Token 171: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028288885951042175
    2. ' -' → logprob: -5.877829074859619
    3. '2' → logprob: -11.377828598022461
    4. ' ' → logprob: -11.877828598022461
    5. ']' → logprob: -12.377828598022461
    6. '1' → logprob: -14.377828598022461
    7. '   ' → logprob: -14.877828598022461
    8. '3' → logprob: -15.752828598022461
    9. '```' → logprob: -16.12782859802246
    10. '  ' → logprob: -16.37782859802246

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14546576142311096
    2. '2' → logprob: -2.145465850830078
    3. '3' → logprob: -4.020465850830078
    4. ' ' → logprob: -8.395465850830078
    5. '
' → logprob: -9.020465850830078
    6. '   ' → logprob: -10.770465850830078
    7. '  ' → logprob: -11.520465850830078
    8. '

' → logprob: -11.770465850830078
    9. ' ' → logprob: -11.832965850830078
    10. '"' → logprob: -12.457965850830078

Token 173: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32680267095565796
    2. '2' → logprob: -1.3268027305603027
    3. '3' → logprob: -4.326802730560303
    4. '
' → logprob: -9.076802253723145
    5. ' ' → logprob: -9.326802253723145
    6. '

' → logprob: -11.951802253723145
    7. '   ' → logprob: -12.514302253723145
    8. '"' → logprob: -12.514302253723145
    9. '  ' → logprob: -12.889302253723145
    10. ' ' → logprob: -12.951802253723145

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0819978266954422
    2. '+' → logprob: -2.956997871398926
    3. ']+' → logprob: -3.956997871398926
    4. '^' → logprob: -5.081997871398926
    5. ' +' → logprob: -7.831997871398926
    6. ' ^' → logprob: -8.206997871398926
    7. ')' → logprob: -8.456997871398926
    8. '-' → logprob: -8.706997871398926
    9. '*' → logprob: -9.206997871398926
    10. ']^' → logprob: -10.206997871398926

Token 175: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04509749636054039
    2. ' +' → logprob: -3.795097589492798
    3. '^' → logprob: -3.920097589492798
    4. ' ^' → logprob: -6.420097351074219
    5. ' ' → logprob: -9.545097351074219
    6. '-' → logprob: -10.170097351074219
    7. '*' → logprob: -10.920097351074219
    8. ')' → logprob: -12.670097351074219
    9. '%' → logprob: -12.920097351074219
    10. ' plus' → logprob: -13.420097351074219

Token 176: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2028474509716034
    2. 'F' → logprob: -1.9528474807739258
    3. '3' → logprob: -3.702847480773926
    4. ' ' → logprob: -4.827847480773926
    5. 'idx' → logprob: -5.077847480773926
    6. '4' → logprob: -7.077847480773926
    7. ' F' → logprob: -7.452847480773926
    8. '1' → logprob: -8.077847480773926
    9. ' idx' → logprob: -8.577847480773926
    10. '(idx' → logprob: -8.827847480773926

Token 177: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4961751401424408
    2. '2' → logprob: -1.2461751699447632
    3. 'F' → logprob: -2.4961750507354736
    4. '(idx' → logprob: -4.496175289154053
    5. '3' → logprob: -5.371175289154053
    6. '4' → logprob: -5.996175289154053
    7. '(F' → logprob: -7.496175289154053
    8. ' ' → logprob: -7.621175289154053
    9. ' idx' → logprob: -7.621175289154053
    10. '(' → logprob: -7.746175289154053

Token 178: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026364631950855255
    2. ' -' → logprob: -3.65136456489563
    3. ' ' → logprob: -10.65136432647705
    4. '   ' → logprob: -11.02636432647705
    5. '*' → logprob: -11.27636432647705
    6. '```' → logprob: -13.15136432647705
    7. '1' → logprob: -13.40136432647705
    8. ' *' → logprob: -13.40136432647705
    9. '  ' → logprob: -13.52636432647705
    10. '**' → logprob: -13.77636432647705

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009344478603452444
    2. '2' → logprob: -7.125934600830078
    3. ' ' → logprob: -10.000934600830078
    4. '   ' → logprob: -10.250934600830078
    5. '3' → logprob: -11.125934600830078
    6. '
' → logprob: -11.375934600830078
    7. '  ' → logprob: -12.375934600830078
    8. '

' → logprob: -12.875934600830078
    9. '    ' → logprob: -12.875934600830078
    10. '```' → logprob: -13.125934600830078

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007294706883840263
    2. '2' → logprob: -7.375729560852051
    3. '3' → logprob: -10.50072956085205
    4. ' ' → logprob: -10.50072956085205
    5. '   ' → logprob: -11.12572956085205
    6. '
' → logprob: -11.37572956085205
    7. '  ' → logprob: -12.81322956085205
    8. '

' → logprob: -13.06322956085205
    9. '    ' → logprob: -13.37572956085205
    10. '           ' → logprob: -13.43822956085205

Token 181: ')' (ID: 8)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3957073390483856
    2. ')' → logprob: -1.270707368850708
    3. ' %' → logprob: -3.145707368850708
    4. '+' → logprob: -6.395707130432129
    5. ')%' → logprob: -6.770707130432129
    6. '*' → logprob: -9.395707130432129
    7. '//' → logprob: -9.770707130432129
    8. ' )' → logprob: -10.020707130432129
    9. ' +' → logprob: -10.270707130432129
    10. ' ' → logprob: -11.020707130432129

Token 182: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038343947380781174
    2. ' %' → logprob: -3.288343906402588
    3. ')' → logprob: -8.163344383239746
    4. '//' → logprob: -11.538344383239746
    5. ')%' → logprob: -13.163344383239746
    6. ' //' → logprob: -13.163344383239746
    7. ')
' → logprob: -13.538344383239746
    8. '*' → logprob: -13.663344383239746
    9. '+' → logprob: -15.288344383239746
    10. ' ' → logprob: -15.663344383239746

Token 183: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004307884373702109
    2. ' MOD' → logprob: -7.750430583953857
    3. 'MO' → logprob: -16.625431060791016
    4. ' ' → logprob: -17.875431060791016
    5. '10' → logprob: -18.375431060791016
    6. '100' → logprob: -18.750431060791016
    7. '_MOD' → logprob: -19.250431060791016
    8. '.MOD' → logprob: -19.500431060791016
    9. 'M' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.250431060791016

Token 184: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3909846246242523
    2. ')' → logprob: -1.1409846544265747
    3. '+' → logprob: -6.015984535217285
    4. ' )
' → logprob: -7.015984535217285
    5. ' )' → logprob: -8.015984535217285
    6. ' +' → logprob: -8.140984535217285
    7. ')
' → logprob: -10.265984535217285
    8. '%' → logprob: -10.390984535217285
    9. ');' → logprob: -10.515984535217285
    10. '+
' → logprob: -10.890984535217285

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011829548515379429
    2. 'idx' → logprob: -4.761829376220703
    3. ' idx' → logprob: -5.886829376220703
    4. '
' → logprob: -8.511829376220703
    5. '	idx' → logprob: -9.011829376220703
    6. '    
' → logprob: -9.386829376220703
    7. '  ' → logprob: -11.386829376220703
    8. '[idx' → logprob: -12.136829376220703
    9. '```' → logprob: -13.011829376220703
    10. ' 
' → logprob: -13.636829376220703

Token 186: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.001522599020972848
    2. ' idx' → logprob: -7.126522541046143
    3. 'F' → logprob: -7.251522541046143
    4. '   ' → logprob: -12.5015230178833
    5. '	idx' → logprob: -13.2515230178833
    6. ' F' → logprob: -14.3765230178833
    7. '
' → logprob: -14.3765230178833
    8. ' ' → logprob: -15.0015230178833
    9. '_idx' → logprob: -15.0015230178833
    10. '[idx' → logprob: -15.3765230178833

Token 187: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001052815350703895
    2. ' +=' → logprob: -7.0010528564453125
    3. '+' → logprob: -8.876052856445312
    4. '=' → logprob: -14.251052856445312
    5. '++' → logprob: -15.001052856445312
    6. '+="' → logprob: -15.001052856445312
    7. ']+=' → logprob: -15.501052856445312
    8. '+='' → logprob: -16.626052856445312
    9. '+=(' → logprob: -17.126052856445312
    10. '+++' → logprob: -18.251052856445312

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -20.0
    4. '１' → logprob: -21.375
    5. '2' → logprob: -22.5
    6. '   ' → logprob: -22.75
    7. '۱' → logprob: -23.375
    8. '0' → logprob: -23.75
    9. '3' → logprob: -24.125
    10. '  ' → logprob: -24.3125

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.625
    4. '１' → logprob: -20.75
    5. '2' → logprob: -21.75
    6. '   ' → logprob: -22.5
    7. '۱' → logprob: -22.8125
    8. '3' → logprob: -23.1875
    9. '
' → logprob: -23.375
    10. '0' → logprob: -23.375

Token 190: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4853023886680603
    2. 'def' → logprob: -2.235302448272705
    3. 'F' → logprob: -2.360302448272705
    4. '#' → logprob: -2.485302448272705
    5. 'DP' → logprob: -3.985302448272705
    6. 'fact' → logprob: -4.360302448272705
    7. 'from' → logprob: -4.485302448272705
    8. 'f' → logprob: -4.610302448272705
    9. 'factor' → logprob: -5.610302448272705
    10. 'res' → logprob: -5.735302448272705

Token 191: 'fact' (ID: 53534)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5339070558547974
    2. 'def' → logprob: -2.033906936645508
    3. '#' → logprob: -2.283906936645508
    4. 'F' → logprob: -3.158906936645508
    5. 'fact' → logprob: -3.908906936645508
    6. 'f' → logprob: -4.033906936645508
    7. 'from' → logprob: -4.533906936645508
    8. 'res' → logprob: -5.033906936645508
    9. 'visited' → logprob: -5.158906936645508
    10. 'factor' → logprob: -5.158906936645508

Token 192: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001719446387141943
    2. ' =' → logprob: -6.3767194747924805
    3. 's' → logprob: -12.00171947479248
    4. 'or' → logprob: -12.50171947479248
    5. 'rial' → logprob: -13.37671947479248
    6. '_=' → logprob: -13.87671947479248
    7. '2' → logprob: -14.37671947479248
    8. '=
' → logprob: -14.50171947479248
    9. '=[]' → logprob: -14.62671947479248
    10. ' ' → logprob: -14.75171947479248

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07900060713291168
    2. '=' → logprob: -2.57900071144104
    3. '<|end|>' → logprob: -9.704000473022461
    4. 's' → logprob: -10.954000473022461
    5. ' ' → logprob: -10.954000473022461
    6. ',' → logprob: -12.329000473022461
    7. '[' → logprob: -13.579000473022461
    8. '_' → logprob: -13.579000473022461
    9. '.append' → logprob: -13.954000473022461
    10. '  ' → logprob: -14.204000473022461

Token 194: ' np' (ID: 5374)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.015798432752490044
    2. '[F' → logprob: -4.765798568725586
    3. 'np' → logprob: -5.890798568725586
    4. '[' → logprob: -6.015798568725586
    5. ' F' → logprob: -6.640798568725586
    6. ' [' → logprob: -7.890798568725586
    7. '[np' → logprob: -9.140798568725586
    8. ' np' → logprob: -9.515798568725586
    9. '[n' → logprob: -10.515798568725586
    10. 'lambda' → logprob: -10.765798568725586

Token 195: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -2.546478935983032e-05
    2. '.zeros' → logprob: -11.125025749206543
    3. '.asarray' → logprob: -12.250025749206543
    4. '.empty' → logprob: -12.375025749206543
    5. 'array' → logprob: -14.000025749206543
    6. '.ndarray' → logprob: -14.875025749206543
    7. '.' → logprob: -15.750025749206543
    8. '.append' → logprob: -16.125024795532227
    9. ' array' → logprob: -16.625024795532227
    10. '.arange' → logprob: -17.125024795532227

Token 196: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. '(f' → logprob: -17.625001907348633
    4. '([' → logprob: -18.500001907348633
    5. '((' → logprob: -19.375001907348633
    6. '(
' → logprob: -19.750001907348633
    7. ' (' → logprob: -20.250001907348633
    8. '(A' → logprob: -22.500001907348633
    9. '([...' → logprob: -22.750001907348633
    10. '(`' → logprob: -23.500001907348633

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '(F' → logprob: -21.25
    3. 'F' → logprob: -22.25
    4. '```' → logprob: -23.625
    5. '[' → logprob: -23.875
    6. '3' → logprob: -24.125
    7. '
' → logprob: -24.375
    8. ')' → logprob: -24.375
    9. '２' → logprob: -24.5
    10. '{' → logprob: -24.5

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18927311897277832
    2. ',d' → logprob: -2.0642731189727783
    3. ' ,' → logprob: -3.5642731189727783
    4. ')' → logprob: -4.189272880554199
    5. '[:' → logprob: -6.814272880554199
    6. '[' → logprob: -7.064272880554199
    7. 'dtype' → logprob: -9.8142728805542
    8. '[],' → logprob: -12.0642728805542
    9. ',D' → logprob: -12.1892728805542
    10. 'd' → logprob: -12.1892728805542

Token 199: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0013576137134805322
    2. ' dtype' → logprob: -6.751357555389404
    3. 'np' → logprob: -8.626358032226562
    4. 'int' → logprob: -11.876358032226562
    5. ' np' → logprob: -14.876358032226562
    6. '   ' → logprob: -15.001358032226562
    7. 'nd' → logprob: -16.126358032226562
    8. ')' → logprob: -16.251358032226562
    9. '  ' → logprob: -16.626358032226562
    10. '(dtype' → logprob: -17.126358032226562

Token 200: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.5798493027687073
    2. 'np' → logprob: -1.0798492431640625
    3. 'int' → logprob: -2.3298492431640625
    4. '=int' → logprob: -5.9548492431640625
    5. '(np' → logprob: -8.329849243164062
    6. ' np' → logprob: -9.579849243164062
    7. '[np' → logprob: -10.204849243164062
    8. ''int' → logprob: -10.329849243164062
    9. 'object' → logprob: -10.329849243164062
    10. ',np' → logprob: -10.829849243164062

Token 201: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.002363040344789624
    2. '.uint' → logprob: -6.252363204956055
    3. 'int' → logprob: -7.752363204956055
    4. '.object' → logprob: -12.752363204956055
    5. '.float' → logprob: -14.377363204956055
    6. 'uint' → logprob: -15.127363204956055
    7. 'object' → logprob: -15.502363204956055
    8. ' int' → logprob: -15.627363204956055
    9. '.' → logprob: -15.627363204956055
    10. '=int' → logprob: -15.752363204956055

Token 202: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -6.392202976712724e-06
    2. 'int' → logprob: -12.000006675720215
    3. '32' → logprob: -15.625006675720215
    4. 'uint' → logprob: -18.0000057220459
    5. 'p' → logprob: -20.2500057220459
    6. 'object' → logprob: -21.0000057220459
    7. 'c' → logprob: -21.5000057220459
    8. '63' → logprob: -23.2500057220459
    9. '```' → logprob: -23.2500057220459
    10. '.int' → logprob: -24.0000057220459

Token 203: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ')#' → logprob: -14.87500286102295
    5. '[' → logprob: -15.62500286102295
    6. ')`' → logprob: -16.000003814697266
    7. '))' → logprob: -16.750003814697266
    8. '[])' → logprob: -16.875003814697266
    9. '),' → logprob: -17.375003814697266
    10. ').' → logprob: -17.625003814697266

Token 204: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5213165283203125
    2. 'def' → logprob: -1.0213165283203125
    3. 'visited' → logprob: -4.1463165283203125
    4. '#' → logprob: -4.7713165283203125
    5. 'memo' → logprob: -5.6463165283203125
    6. 'color' → logprob: -6.0213165283203125
    7. 'DP' → logprob: -6.1463165283203125
    8. 'stack' → logprob: -6.5213165283203125
    9. 'depth' → logprob: -6.5213165283203125
    10. 'from' → logprob: -6.8963165283203125

Token 205: ' Par' (ID: 3371)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5563747882843018
    2. 'def' → logprob: -1.3063747882843018
    3. 'visited' → logprob: -2.4313747882843018
    4. '#' → logprob: -4.306374549865723
    5. 'from' → logprob: -4.556374549865723
    6. 'memo' → logprob: -5.056374549865723
    7. 'vis' → logprob: -5.431374549865723
    8. 'stack' → logprob: -5.556374549865723
    9. 'fact' → logprob: -5.556374549865723
    10. 'DP' → logprob: -6.056374549865723

Token 206: 'fois' (ID: 27733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10329775512218475
    2. 'ent' → logprob: -3.478297710418701
    3. 'ents' → logprob: -3.853297710418701
    4. 't' → logprob: -4.353297710418701
    5. 'memo' → logprob: -4.353297710418701
    6. '#' → logprob: -5.103297710418701
    7. 'visited' → logprob: -6.228297710418701
    8. 'tour' → logprob: -6.228297710418701
    9. 'stack' → logprob: -6.478297710418701
    10. 'sys' → logprob: -6.728297710418701

Token 207: ' objet' (ID: 13839)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06573496013879776
    2. ',' → logprob: -3.56573486328125
    3. ' def' → logprob: -3.94073486328125
    4. '#' → logprob: -5.56573486328125
    5. 'import' → logprob: -6.19073486328125
    6. 'dp' → logprob: -6.56573486328125
    7. 'dfs' → logprob: -6.81573486328125
    8. ' la' → logprob: -7.19073486328125
    9. 'sys' → logprob: -7.31573486328125
    10. ':' → logprob: -7.56573486328125

Token 208: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.42533519864082336
    2. 'def' → logprob: -1.300335168838501
    3. ' class' → logprob: -4.80033540725708
    4. ',' → logprob: -5.05033540725708
    5. '[]' → logprob: -5.05033540725708
    6. 's' → logprob: -5.17533540725708
    7. 'fact' → logprob: -5.30033540725708
    8. 'f' → logprob: -5.55033540725708
    9. '#' → logprob: -5.67533540725708
    10. ' =' → logprob: -5.80033540725708

Token 209: ' parfois' (ID: 44575)
  Prédit: ' parfois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parfois' → logprob: -0.2271728664636612
    2. 'def' → logprob: -2.9771728515625
    3. 'class' → logprob: -3.2271728515625
    4. 'par' → logprob: -3.7271728515625
    5. '#' → logprob: -3.8521728515625
    6. ' mais' → logprob: -4.1021728515625
    7. ' sometimes' → logprob: -4.8521728515625
    8. ' class' → logprob: -4.9771728515625
    9. 'fonction' → logprob: -5.3521728515625
    10. ' souvent' → logprob: -5.6021728515625

Token 210: ' procédure' (ID: 102190)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3312273323535919
    2. 'proc' → logprob: -1.8312273025512695
    3. ' fonction' → logprob: -2.3312273025512695
    4. 'procedure' → logprob: -5.2062273025512695
    5. 'function' → logprob: -5.4562273025512695
    6. 'proced' → logprob: -5.7062273025512695
    7. ' procédure' → logprob: -5.9562273025512695
    8. 'fon' → logprob: -6.0812273025512695
    9. 'func' → logprob: -6.7062273025512695
    10. '```' → logprob: -6.8312273025512695

Token 211: ' pure' (ID: 14147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5692136883735657
    2. 'dp' → logprob: -0.9442136883735657
    3. 'visited' → logprob: -4.0692138671875
    4. 'memo' → logprob: -4.0692138671875
    5. 'parent' → logprob: -6.5692138671875
    6. 'res' → logprob: -7.1942138671875
    7. 'sys' → logprob: -7.1942138671875
    8. 'result' → logprob: -7.1942138671875
    9. 'DP' → logprob: -7.3192138671875
    10. 'count' → logprob: -7.5692138671875

Token 212: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09018415957689285
    2. 'dp' → logprob: -2.840184211730957
    3. 'visited' → logprob: -3.840184211730957
    4. 'memo' → logprob: -5.840184211730957
    5. 'sys' → logprob: -7.590184211730957
    6. '#' → logprob: -7.715184211730957
    7. 'vis' → logprob: -7.840184211730957
    8. 'dist' → logprob: -7.840184211730957
    9. 'parent' → logprob: -8.590184211730957
    10. 'stack' → logprob: -8.715184211730957

Token 213: ' parfois' (ID: 44575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28827059268951416
    2. '#' → logprob: -1.6632705926895142
    3. 'dp' → logprob: -3.5382704734802246
    4. 'visited' → logprob: -4.538270473480225
    5. 'sys' → logprob: -5.038270473480225
    6. 'memo' → logprob: -5.413270473480225
    7. ' def' → logprob: -5.663270473480225
    8. 'parent' → logprob: -7.038270473480225
    9. ' #' → logprob: -7.288270473480225
    10. 'vis' → logprob: -7.413270473480225

Token 214: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.5547256469726562
    2. ' fonction' → logprob: -1.0547256469726562
    3. 'fon' → logprob: -4.554725646972656
    4. 'proc' → logprob: -5.054725646972656
    5. 'function' → logprob: -5.679725646972656
    6. ' réc' → logprob: -5.804725646972656
    7. 'une' → logprob: -5.804725646972656
    8. ' un' → logprob: -6.054725646972656
    9. 'fun' → logprob: -6.054725646972656
    10. ' une' → logprob: -6.242225646972656

Token 215: 'nelle' (ID: 30805)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004169456660747528
    2. 'dp' → logprob: -6.379169464111328
    3. 'visited' → logprob: -6.629169464111328
    4. '#' → logprob: -7.379169464111328
    5. 'from' → logprob: -9.129169464111328
    6. 'stack' → logprob: -9.504169464111328
    7. 'memo' → logprob: -9.629169464111328
    8. 'sys' → logprob: -10.254169464111328
    9. ':' → logprob: -10.629169464111328
    10. ')' → logprob: -10.754169464111328

Token 216: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0622076541185379
    2. 'dp' → logprob: -3.3122076988220215
    3. 'visited' → logprob: -4.4372076988220215
    4. 'sys' → logprob: -5.4372076988220215
    5. 'memo' → logprob: -5.8122076988220215
    6. '#' → logprob: -6.1872076988220215
    7. 'stack' → logprob: -7.8122076988220215
    8. 'from' → logprob: -7.8122076988220215
    9. 'import' → logprob: -8.562207221984863
    10. 'seen' → logprob: -8.687207221984863

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11751727014780045
    2. 'dp' → logprob: -2.6175172328948975
    3. 'memo' → logprob: -4.117517471313477
    4. 'visited' → logprob: -4.992517471313477
    5. 'sys' → logprob: -5.117517471313477
    6. 'from' → logprob: -5.992517471313477
    7. 'cache' → logprob: -6.867517471313477
    8. 'depth' → logprob: -7.242517471313477
    9. 'sub' → logprob: -7.867517471313477
    10. 'vis' → logprob: -7.992517471313477

Token 218: ' fusion' (ID: 48115)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.06283935159444809
    2. 'dfs' → logprob: -2.9378392696380615
    3. ' dp' → logprob: -6.062839508056641
    4. ' comb' → logprob: -6.437839508056641
    5. ' count' → logprob: -6.812839508056641
    6. 'dp' → logprob: -7.312839508056641
    7. 'count' → logprob: -8.56283950805664
    8. ' solve' → logprob: -8.56283950805664
    9. ' calc' → logprob: -8.56283950805664
    10. ' DFS' → logprob: -8.56283950805664

Token 219: 'ner' (ID: 1247)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20149052143096924
    2. '(x' → logprob: -2.7014904022216797
    3. '(u' → logprob: -3.2014904022216797
    4. '(' → logprob: -3.7014904022216797
    5. '(l' → logprob: -4.45149040222168
    6. '(A' → logprob: -4.82649040222168
    7. '(parent' → logprob: -5.07649040222168
    8. '(node' → logprob: -5.07649040222168
    9. '(g' → logprob: -5.57649040222168
    10. '(gr' → logprob: -5.70149040222168

Token 220: '(d' (ID: 2572)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3906291127204895
    2. '(x' → logprob: -2.5156290531158447
    3. '(' → logprob: -2.7656290531158447
    4. '(l' → logprob: -3.3906290531158447
    5. '(u' → logprob: -3.7656290531158447
    6. '(gr' → logprob: -3.7656290531158447
    7. '(A' → logprob: -3.8906290531158447
    8. '(t' → logprob: -4.265629291534424
    9. '(g' → logprob: -4.515629291534424
    10. '(ar' → logprob: -5.015629291534424

Token 221: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7292258739471436
    2. '1' → logprob: -1.9792258739471436
    3. 'ep' → logprob: -1.9792258739471436
    4. 'ict' → logprob: -2.7292258739471436
    5. 'ico' → logprob: -2.8542258739471436
    6. 'u' → logprob: -3.7292258739471436
    7. 'ic' → logprob: -3.7292258739471436
    8. ',' → logprob: -4.229226112365723
    9. 'e' → logprob: -4.729226112365723
    10. 'eux' → logprob: -5.229226112365723

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005473146447911859
    2. ' ,' → logprob: -8.000547409057617
    3. ',d' → logprob: -8.625547409057617
    4. ',f' → logprob: -12.375547409057617
    5. 'ct' → logprob: -12.875547409057617
    6. '1' → logprob: -12.875547409057617
    7. '):' → logprob: -13.000547409057617
    8. 'f' → logprob: -13.250547409057617
    9. ',de' → logprob: -13.250547409057617
    10. ':' → logprob: -13.375547409057617

Token 223: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05502581223845482
    2. ' d' → logprob: -2.930025815963745
    3. ' ' → logprob: -9.555026054382324
    4. '   ' → logprob: -11.117526054382324
    5. '  ' → logprob: -11.805026054382324
    6. '	d' → logprob: -12.305026054382324
    7. '    ' → logprob: -12.617526054382324
    8. 'f' → logprob: -12.805026054382324
    9. '```' → logprob: -12.867526054382324
    10. ')' → logprob: -12.992526054382324

Token 224: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07933365553617477
    2. '2' → logprob: -2.579333543777466
    3. '):' → logprob: -8.579333305358887
    4. 'ict' → logprob: -9.329333305358887
    5. ',' → logprob: -9.454333305358887
    6. 'd' → logprob: -11.204333305358887
    7. ')' → logprob: -11.454333305358887
    8. ' ' → logprob: -11.454333305358887
    9. '{' → logprob: -11.704333305358887
    10. 'ct' → logprob: -11.829333305358887

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008012881153263152
    2. ',' → logprob: -7.875801086425781
    3. ')' → logprob: -8.375801086425781
    4. ' ):' → logprob: -8.875801086425781
    5. '):
' → logprob: -10.125801086425781
    6. ':' → logprob: -11.875801086425781
    7. '):
' → logprob: -14.000801086425781
    8. ' ' → logprob: -14.375801086425781
    9. '   ' → logprob: -14.625801086425781
    10. '[]):' → logprob: -15.250801086425781

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029589980840682983
    2. ' res' → logprob: -3.779589891433716
    3. ' result' → logprob: -5.654590129852295
    4. 'result' → logprob: -7.279590129852295
    5. 'res' → logprob: -7.904590129852295
    6. ' n' → logprob: -8.154589653015137
    7. ' length' → logprob: -8.404589653015137
    8. ' return' → logprob: -8.529589653015137
    9. ' size' → logprob: -8.529589653015137
    10. 'n' → logprob: -8.779589653015137

Token 227: ' sz' (ID: 8515)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6574687957763672
    2. 'res' → logprob: -1.7824687957763672
    3. 'result' → logprob: -2.657468795776367
    4. 'n' → logprob: -3.407468795776367
    5. 'ret' → logprob: -3.407468795776367
    6. ' result' → logprob: -3.782468795776367
    7. 'r' → logprob: -3.907468795776367
    8. 'd' → logprob: -4.032468795776367
    9. ' n' → logprob: -4.532468795776367
    10. 'tail' → logprob: -4.782468795776367

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013920779339969158
    2. ' =' → logprob: -4.388920783996582
    3. 'd' → logprob: -7.513920783996582
    4. ',' → logprob: -8.013920783996582
    5. '_d' → logprob: -8.263920783996582
    6. '=' → logprob: -9.513920783996582
    7. '_' → logprob: -10.013920783996582
    8. 'f' → logprob: -10.638920783996582
    9. 'x' → logprob: -10.638920783996582
    10. '   ' → logprob: -10.763920783996582

Token 229: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6584315896034241
    2. ',' → logprob: -1.1584315299987793
    3. ' =' → logprob: -1.7834315299987793
    4. ' ,' → logprob: -8.533432006835938
    5. '+' → logprob: -10.533432006835938
    6. '=len' → logprob: -10.783432006835938
    7. ' +=' → logprob: -11.408432006835938
    8. '+=' → logprob: -11.533432006835938
    9. '=size' → logprob: -11.783432006835938
    10. ' ' → logprob: -12.158432006835938

Token 230: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.22189712524414062
    2. ' sz' → logprob: -2.2218971252441406
    3. 'len' → logprob: -2.4718971252441406
    4. ' len' → logprob: -5.596897125244141
    5. 'd' → logprob: -6.346897125244141
    6. ' d' → logprob: -7.971897125244141
    7. ' ' → logprob: -9.34689712524414
    8. '   ' → logprob: -9.84689712524414
    9. 's' → logprob: -9.97189712524414
    10. '  ' → logprob: -10.72189712524414

Token 231: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009362306445837021
    2. ' =' → logprob: -5.13436222076416
    3. '=' → logprob: -6.38436222076416
    4. ',' → logprob: -6.38436222076416
    5. ' ' → logprob: -10.63436222076416
    6. 'd' → logprob: -11.63436222076416
    7. '_' → logprob: -12.13436222076416
    8. '=d' → logprob: -12.50936222076416
    9. '2' → logprob: -13.00936222076416
    10. ',d' → logprob: -13.13436222076416

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2260584831237793
    2. ' =' → logprob: -1.6010584831237793
    3. ',' → logprob: -7.351058483123779
    4. ' ' → logprob: -13.601058959960938
    5. '=len' → logprob: -13.976058959960938
    6. ')' → logprob: -14.976058959960938
    7. ' ,' → logprob: -15.226058959960938
    8. '=size' → logprob: -15.476058959960938
    9. '=int' → logprob: -15.601058959960938
    10. '   ' → logprob: -15.601058959960938

Token 233: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20404858887195587
    2. ' len' → logprob: -1.9540486335754395
    3. 'd' → logprob: -3.5790486335754395
    4. ' d' → logprob: -4.2040486335754395
    5. '(len' → logprob: -10.954048156738281
    6. ' ' → logprob: -11.329048156738281
    7. '  ' → logprob: -13.204048156738281
    8. '	len' → logprob: -13.204048156738281
    9. '[len' → logprob: -13.454048156738281
    10. '   ' → logprob: -13.579048156738281

Token 234: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.286852345103398e-05
    2. '(' → logprob: -10.375042915344238
    3. ' (' → logprob: -11.625042915344238
    4. 'd' → logprob: -13.000042915344238
    5. 's' → logprob: -16.125041961669922
    6. '(
' → logprob: -16.625041961669922
    7. ')' → logprob: -16.625041961669922
    8. ' d' → logprob: -17.125041961669922
    9. '(s' → logprob: -17.250041961669922
    10. ')d' → logprob: -18.125041961669922

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. 'd' → logprob: -12.750007629394531
    3. ')' → logprob: -13.750007629394531
    4. '2' → logprob: -14.000007629394531
    5. '
' → logprob: -14.000007629394531
    6. '(d' → logprob: -14.250007629394531
    7. ' d' → logprob: -14.875007629394531
    8. ' ' → logprob: -15.375007629394531
    9. '```' → logprob: -15.625007629394531
    10. ')d' → logprob: -15.750007629394531

Token 236: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0004913145676255226
    2. ')' → logprob: -8.12549114227295
    3. ' ),' → logprob: -8.62549114227295
    4. ')+' → logprob: -11.75049114227295
    5. '   ' → logprob: -12.62549114227295
    6. ',' → logprob: -12.75049114227295
    7. '),
' → logprob: -14.75049114227295
    8. ' ' → logprob: -14.75049114227295
    9. 'd' → logprob: -15.75049114227295
    10. ')
' → logprob: -15.75049114227295

Token 237: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00771677028387785
    2. '   ' → logprob: -6.007716655731201
    3. ' ,' → logprob: -6.132716655731201
    4. '+' → logprob: -6.132716655731201
    5. ',
' → logprob: -7.632716655731201
    6. ' +' → logprob: -8.13271713256836
    7. ' ' → logprob: -9.63271713256836
    8. ' sz' → logprob: -12.00771713256836
    9. '+,' → logprob: -12.25771713256836
    10. ',d' → logprob: -12.38271713256836

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '
' → logprob: -15.87515926361084
    4. '2' → logprob: -15.87515926361084
    5. '   ' → logprob: -16.250158309936523
    6. '  ' → logprob: -17.250158309936523
    7. '<|end|>' → logprob: -19.750158309936523
    8. ',' → logprob: -19.875158309936523
    9. '

' → logprob: -20.125158309936523
    10. '    ' → logprob: -20.125158309936523

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011844364780699834
    2. ' ' → logprob: -9.375118255615234
    3. '2' → logprob: -10.375118255615234
    4. '
' → logprob: -13.500118255615234
    5. '   ' → logprob: -14.875118255615234
    6. '3' → logprob: -15.000118255615234
    7. '  ' → logprob: -16.125118255615234
    8. 'len' → logprob: -16.875118255615234
    9. '4' → logprob: -17.125118255615234
    10. '0' → logprob: -17.375118255615234

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029605606570839882
    2. '<|end|>' → logprob: -4.154605388641357
    3. '   ' → logprob: -4.779605388641357
    4. ' ' → logprob: -6.279605388641357
    5. ')' → logprob: -6.779605388641357
    6. ' ,' → logprob: -7.154605388641357
    7. '<|end|>' → logprob: -7.904605388641357
    8. ',d' → logprob: -8.654605865478516
    9. ',
' → logprob: -8.779605865478516
    10. '+' → logprob: -9.279605865478516

Token 241: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029752686619758606
    2. ' len' → logprob: -3.529752731323242
    3. '   ' → logprob: -14.404752731323242
    4. '(len' → logprob: -14.404752731323242
    5. ' ' → logprob: -14.529752731323242
    6. '[len' → logprob: -15.154752731323242
    7. '	len' → logprob: -16.154752731323242
    8. '  ' → logprob: -17.029752731323242
    9. '=len' → logprob: -17.029752731323242
    10. '<len' → logprob: -17.154752731323242

Token 242: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.250014305114746
    3. 'd' → logprob: -13.875014305114746
    4. ' (' → logprob: -17.00001335144043
    5. '(
' → logprob: -18.37501335144043
    6. '(de' → logprob: -18.50001335144043
    7. '(def' → logprob: -18.87501335144043
    8. '(D' → logprob: -19.75001335144043
    9. '(data' → logprob: -20.12501335144043
    10. '(len' → logprob: -20.25001335144043

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10166372358798981
    2. 'd' → logprob: -2.351663827896118
    3. ' d' → logprob: -7.101663589477539
    4. '1' → logprob: -7.726663589477539
    5. ')' → logprob: -8.976663589477539
    6. ' ' → logprob: -10.476663589477539
    7. ')d' → logprob: -10.476663589477539
    8. '```' → logprob: -13.101663589477539
    9. '   ' → logprob: -13.351663589477539
    10. '(d' → logprob: -13.476663589477539

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016731605865061283
    2. ')-' → logprob: -7.001673221588135
    3. '-' → logprob: -8.251672744750977
    4. ' -' → logprob: -8.751672744750977
    5. ' )' → logprob: -9.376672744750977
    6. ')
' → logprob: -9.626672744750977
    7. '-)' → logprob: -9.751672744750977
    8. ')]' → logprob: -10.501672744750977
    9. '   ' → logprob: -10.751672744750977
    10. '])' → logprob: -10.751672744750977

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42903345823287964
    2. '-' → logprob: -1.0540335178375244
    3. ')' → logprob: -8.429033279418945
    4. '   ' → logprob: -9.804033279418945
    5. ' ' → logprob: -10.429033279418945
    6. ' -
' → logprob: -11.429033279418945
    7. '[' → logprob: -12.179033279418945
    8. '-
' → logprob: -12.929033279418945
    9. ')-' → logprob: -13.304033279418945
    10. '1' → logprob: -13.429033279418945

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -17.000261306762695
    4. '
' → logprob: -18.750261306762695
    5. 'len' → logprob: -18.750261306762695
    6. '```' → logprob: -18.875261306762695
    7. '<|end|>' → logprob: -19.250261306762695
    8. '2' → logprob: -19.375261306762695
    9. ' ' → logprob: -19.375261306762695
    10. '   ' → logprob: -20.000261306762695

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '0' → logprob: -15.000040054321289
    4. '2' → logprob: -17.12504005432129
    5. 'len' → logprob: -17.75004005432129
    6. '```' → logprob: -17.93754005432129
    7. '
' → logprob: -18.75004005432129
    8. '-' → logprob: -19.50004005432129
    9. '<|end|>' → logprob: -19.50004005432129
    10. '  ' → logprob: -19.56254005432129

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8823071122169495
    2. ')' → logprob: -1.2573070526123047
    3. '<|end|>' → logprob: -1.6323070526123047
    4. ',' → logprob: -2.8823070526123047
    5. ' ' → logprob: -4.132307052612305
    6. '
' → logprob: -4.257307052612305
    7. ']' → logprob: -5.882307052612305
    8. '    
' → logprob: -6.132307052612305
    9. 'd' → logprob: -6.257307052612305
    10. '[' → logprob: -6.507307052612305

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2270173877477646
    2. 'result' → logprob: -2.102017402648926
    3. 'res' → logprob: -2.977017402648926
    4. ' res' → logprob: -3.977017402648926
    5. ' result' → logprob: -4.727017402648926
    6. '    
' → logprob: -7.352017402648926
    7. 'd' → logprob: -7.602017402648926
    8. 'ret' → logprob: -8.352017402648926
    9. '	result' → logprob: -8.852017402648926
    10. '	res' → logprob: -8.977017402648926

Token 250: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9045383334159851
    2. 'd' → logprob: -1.2795383930206299
    3. 'result' → logprob: -2.15453839302063
    4. 'ret' → logprob: -2.65453839302063
    5. ' res' → logprob: -3.40453839302063
    6. 'r' → logprob: -4.279538154602051
    7. ' d' → logprob: -4.529538154602051
    8. 'dp' → logprob: -4.529538154602051
    9. 'R' → logprob: -4.654538154602051
    10. 'out' → logprob: -4.779538154602051

Token 251: ' sz' (ID: 8515)
  Prédit: ' sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sz' → logprob: -0.08925515413284302
    2. ' not' → logprob: -2.8392550945281982
    3. 'sz' → logprob: -3.7142550945281982
    4. 'not' → logprob: -6.589255332946777
    5. ' len' → logprob: -7.589255332946777
    6. '(sz' → logprob: -7.964255332946777
    7. 'len' → logprob: -8.839255332946777
    8. ' d' → logprob: -9.089255332946777
    9. 'd' → logprob: -11.214255332946777
    10. ' ' → logprob: -11.714255332946777

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04513520002365112
    2. '==' → logprob: -3.795135259628296
    3. ' ==' → logprob: -3.920135259628296
    4. '2' → logprob: -6.795135021209717
    5. ' <' → logprob: -8.545135498046875
    6. ' ' → logprob: -8.670135498046875
    7. '=' → logprob: -9.420135498046875
    8. '0' → logprob: -9.670135498046875
    9. '<' → logprob: -10.170135498046875
    10. '_' → logprob: -10.545135498046875

Token 253: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21918490529060364
    2. ' ==' → logprob: -1.9691848754882812
    3. '+' → logprob: -3.3441848754882812
    4. '<' → logprob: -4.969184875488281
    5. ' <' → logprob: -5.094184875488281
    6. '>' → logprob: -5.844184875488281
    7. ' +' → logprob: -6.094184875488281
    8. '=' → logprob: -6.594184875488281
    9. ' >' → logprob: -7.219184875488281
    10. '>=' → logprob: -8.469184875488281

Token 254: ' sz' (ID: 8515)
  Prédit: ' sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sz' → logprob: -0.10729675740003586
    2. 'sz' → logprob: -2.3572967052459717
    3. '0' → logprob: -5.607296943664551
    4. ' ' → logprob: -5.982296943664551
    5. '(sz' → logprob: -7.482296943664551
    6. '1' → logprob: -8.73229694366455
    7. '   ' → logprob: -10.60729694366455
    8. '2' → logprob: -10.73229694366455
    9. ' (' → logprob: -11.23229694366455
    10. '10' → logprob: -11.48229694366455

Token 255: '2' (ID: 17)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.6980718970298767
    2. '2' → logprob: -0.9480718970298767
    3. ' sz' → logprob: -2.1980719566345215
    4. '1' → logprob: -6.4480719566345215
    5. 'z' → logprob: -6.4480719566345215
    6. '(sz' → logprob: -7.6980719566345215
    7. ' ' → logprob: -8.573071479797363
    8. '   ' → logprob: -9.323071479797363
    9. '_sz' → logprob: -11.073071479797363
    10. '       ' → logprob: -11.948071479797363

Token 256: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004173018038272858
    2. ':
' → logprob: -5.7541728019714355
    3. ' :' → logprob: -7.1291728019714355
    4. ':return' → logprob: -9.879173278808594
    5. '):' → logprob: -10.129173278808594
    6. '<|end|>' → logprob: -10.379173278808594
    7. ' and' → logprob: -11.004173278808594
    8. ' or' → logprob: -11.254173278808594
    9. '   ' → logprob: -11.504173278808594
    10. ',' → logprob: -11.629173278808594

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3688003420829773
    2. ' d' → logprob: -1.368800401687622
    3. 'd' → logprob: -3.493800401687622
    4. ' return' → logprob: -4.868800163269043
    5. '   ' → logprob: -5.118800163269043
    6. '    ' → logprob: -5.993800163269043
    7. ' 
' → logprob: -6.618800163269043
    8. '[' → logprob: -6.868800163269043
    9. '        
' → logprob: -6.868800163269043
    10. ' ' → logprob: -7.368800163269043

Token 258: ' sz' (ID: 8515)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4816017746925354
    2. 'd' → logprob: -0.9816017746925354
    3. ' return' → logprob: -5.606601715087891
    4. '       ' → logprob: -6.106601715087891
    5. '   ' → logprob: -7.106601715087891
    6. 'return' → logprob: -7.231601715087891
    7. ',' → logprob: -11.35660171508789
    8. '	d' → logprob: -11.60660171508789
    9. '    ' → logprob: -11.98160171508789
    10. ',d' → logprob: -12.85660171508789

Token 259: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012570987455546856
    2. '1' → logprob: -4.387570858001709
    3. 'd' → logprob: -10.887571334838867
    4. ' d' → logprob: -11.762571334838867
    5. ' ' → logprob: -11.762571334838867
    6. '```' → logprob: -12.012571334838867
    7. '   ' → logprob: -12.262571334838867
    8. ',' → logprob: -12.512571334838867
    9. '
' → logprob: -13.137571334838867
    10. '=' → logprob: -13.137571334838867

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015550498210359365
    2. ',d' → logprob: -9.375155448913574
    3. ' ,' → logprob: -9.750155448913574
    4. ',s' → logprob: -12.000155448913574
    5. 'd' → logprob: -12.875155448913574
    6. ',
' → logprob: -13.750155448913574
    7. '=' → logprob: -14.500155448913574
    8. '   ' → logprob: -14.750155448913574
    9. 'sz' → logprob: -14.750155448913574
    10. ',size' → logprob: -15.750155448913574

Token 261: ' sz' (ID: 8515)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6625964641571045
    2. 'sz' → logprob: -1.5375964641571045
    3. ' d' → logprob: -1.7875964641571045
    4. ' sz' → logprob: -2.2875964641571045
    5. ' ' → logprob: -8.787596702575684
    6. '(sz' → logprob: -9.037596702575684
    7. '
' → logprob: -9.412596702575684
    8. '   ' → logprob: -9.600096702575684
    9. 's' → logprob: -10.287596702575684
    10. '  ' → logprob: -10.787596702575684

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ',' → logprob: -15.375
    3. '   ' → logprob: -16.875
    4. '```' → logprob: -17.5
    5. ' ' → logprob: -17.75
    6. '
' → logprob: -18.125
    7. 'ize' → logprob: -18.375
    8. '=' → logprob: -18.625
    9. 'z' → logprob: -18.75
    10. ' =' → logprob: -19.125

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3167515695095062
    2. ',' → logprob: -1.6917515993118286
    3. ' =' → logprob: -2.441751480102539
    4. ' ,' → logprob: -9.316751480102539
    5. '   ' → logprob: -9.441751480102539
    6. 'd' → logprob: -9.691751480102539
    7. ',d' → logprob: -11.191751480102539
    8. '=
' → logprob: -11.191751480102539
    9. '    ' → logprob: -11.816751480102539
    10. ' d' → logprob: -12.066751480102539

Token 264: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.0889887586236
    2. ' sz' → logprob: -2.463988780975342
    3. '   ' → logprob: -10.463988304138184
    4. '(sz' → logprob: -11.213988304138184
    5. ' ' → logprob: -12.588988304138184
    6. '    ' → logprob: -13.963988304138184
    7. '  ' → logprob: -14.338988304138184
    8. '       ' → logprob: -14.463988304138184
    9. '_sz' → logprob: -14.463988304138184
    10. 's' → logprob: -15.213988304138184

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'z' → logprob: -15.500000953674316
    3. '```' → logprob: -16.000001907348633
    4. '1' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.750001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '۲' → logprob: -16.875001907348633
    8. 's' → logprob: -17.125001907348633
    9. '₂' → logprob: -17.375001907348633
    10. '২' → logprob: -17.625001907348633

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.221884101862088e-05
    2. '
' → logprob: -10.375092506408691
    3. ',
' → logprob: -10.500092506408691
    4. ' ,' → logprob: -10.625092506408691
    5. 'd' → logprob: -12.875092506408691
    6. ',s' → logprob: -13.625092506408691
    7. '   ' → logprob: -13.875092506408691
    8. ',\
' → logprob: -14.125092506408691
    9. 'sz' → logprob: -14.250092506408691
    10. '<|end|>' → logprob: -14.375092506408691

Token 267: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.07891931384801865
    2. ' sz' → logprob: -2.5789194107055664
    3. '       ' → logprob: -10.703919410705566
    4. '(sz' → logprob: -12.453919410705566
    5. '   ' → logprob: -13.953919410705566
    6. ' ' → logprob: -14.703919410705566
    7. '      ' → logprob: -14.953919410705566
    8. '           ' → logprob: -15.078919410705566
    9. '    ' → logprob: -15.578919410705566
    10. '     ' → logprob: -15.703919410705566

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. 'sz' → logprob: -11.125015258789062
    3. ' ' → logprob: -15.875015258789062
    4. ' sz' → logprob: -16.125015258789062
    5. 'size' → logprob: -17.375015258789062
    6. '   ' → logprob: -17.500015258789062
    7. 'z' → logprob: -17.750015258789062
    8. '[' → logprob: -17.875015258789062
    9. '<|end|>' → logprob: -17.875015258789062
    10. '```' → logprob: -18.000015258789062

Token 269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09013240784406662
    2. 'd' → logprob: -3.090132474899292
    3. ',' → logprob: -3.590132474899292
    4. '   ' → logprob: -4.590132236480713
    5. ' d' → logprob: -6.215132236480713
    6. ',d' → logprob: -7.090132236480713
    7. '	d' → logprob: -11.090132713317871
    8. ' ,' → logprob: -11.340132713317871
    9. '      ' → logprob: -11.715132713317871
    10. ',
' → logprob: -11.840132713317871

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06341269612312317
    2. 'd' → logprob: -3.688412666320801
    3. ' d' → logprob: -4.063412666320801
    4. ',' → logprob: -4.188412666320801
    5. '    
' → logprob: -6.063412666320801
    6. ' 
' → logprob: -7.438412666320801
    7. ' ,' → logprob: -8.3134126663208
    8. '  
' → logprob: -8.9384126663208
    9. '[' → logprob: -9.1884126663208
    10. ',d' → logprob: -9.1884126663208

Token 271: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00019042797794099897
    2. '   ' → logprob: -8.875190734863281
    3. 'return' → logprob: -10.375190734863281
    4. ' d' → logprob: -11.000190734863281
    5. '       ' → logprob: -13.125190734863281
    6. '	d' → logprob: -15.500190734863281
    7. ' return' → logprob: -16.12519073486328
    8. '(d' → logprob: -16.50019073486328
    9. '  ' → logprob: -16.87519073486328
    10. '    ' → logprob: -17.37519073486328

Token 272: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029752571135759354
    2. '1' → logprob: -3.529752492904663
    3. ',' → logprob: -13.404752731323242
    4. ' =' → logprob: -15.404752731323242
    5. '=' → logprob: -16.717252731323242
    6. ' ' → logprob: -16.779752731323242
    7. 'd' → logprob: -17.029752731323242
    8. '₂' → logprob: -17.279752731323242
    9. '```' → logprob: -17.404752731323242
    10. '' → logprob: -17.842252731323242

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006332091288641095
    2. ',d' → logprob: -7.375633239746094
    3. ' ,' → logprob: -12.125633239746094
    4. 'd' → logprob: -13.625633239746094
    5. ',
' → logprob: -17.125633239746094
    6. ' d' → logprob: -17.750633239746094
    7. ',de' → logprob: -18.375633239746094
    8. ' ' → logprob: -19.250633239746094
    9. ',\
' → logprob: -19.625633239746094
    10. '=' → logprob: -20.000633239746094

Token 274: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03804149478673935
    2. ' d' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -16.663042068481445
    4. '	d' → logprob: -19.038042068481445
    5. ')d' → logprob: -19.413042068481445
    6. ' ' → logprob: -20.288042068481445
    7. '<|end|>' → logprob: -20.788042068481445
    8. '(d' → logprob: -21.038042068481445
    9. '_d' → logprob: -21.163042068481445
    10. '
' → logprob: -21.288042068481445

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. 'd' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.875001907348633
    6. 'def' → logprob: -17.000001907348633
    7. '  ' → logprob: -17.125001907348633
    8. ' d' → logprob: -17.125001907348633
    9. 's' → logprob: -17.625001907348633
    10. '1' → logprob: -17.875001907348633

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859452322125435
    2. ' =' → logprob: -3.0485944747924805
    3. '=d' → logprob: -12.17359447479248
    4. '=
' → logprob: -14.04859447479248
    5. 'd' → logprob: -14.67359447479248
    6. ',' → logprob: -14.92359447479248
    7. '=

' → logprob: -15.42359447479248
    8. '    ' → logprob: -17.548595428466797
    9. '   ' → logprob: -17.548595428466797
    10. ' =
' → logprob: -17.673595428466797

Token 277: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001929228543303907
    2. ' d' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.75192928314209
    4. '  ' → logprob: -16.001928329467773
    5. '	d' → logprob: -16.251928329467773
    6. '   ' → logprob: -16.626928329467773
    7. '[d' → logprob: -17.376928329467773
    8. '(d' → logprob: -17.501928329467773
    9. '
' → logprob: -19.376928329467773
    10. '    ' → logprob: -19.751928329467773

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. '```' → logprob: -17.25
    4. '[' → logprob: -17.625
    5. ' ' → logprob: -18.25
    6. '₂' → logprob: -18.375
    7. '۲' → logprob: -18.625
    8. 'd' → logprob: -19.125
    9. ' d' → logprob: -19.4375
    10. '২' → logprob: -19.5625

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004696057178080082
    2. ',d' → logprob: -5.379695892333984
    3. 'd' → logprob: -9.629695892333984
    4. '1' → logprob: -12.504695892333984
    5. ' ,' → logprob: -12.879695892333984
    6. ' d' → logprob: -12.879695892333984
    7. ',
' → logprob: -13.879695892333984
    8. ' ' → logprob: -15.879695892333984
    9. '<|end|>' → logprob: -16.129695892333984
    10. ',s' → logprob: -17.254695892333984

Token 280: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.033646274358034134
    2. ' d' → logprob: -3.40864634513855
    3. ' ' → logprob: -15.783646583557129
    4. '
' → logprob: -15.908646583557129
    5. '   ' → logprob: -16.033645629882812
    6. '	d' → logprob: -16.158645629882812
    7. '  ' → logprob: -17.283645629882812
    8. '    ' → logprob: -18.408645629882812
    9. '
' → logprob: -19.096145629882812
    10. '     ' → logprob: -19.346145629882812

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'd' → logprob: -16.75
    4. '<|end|>' → logprob: -17.75
    5. '<|end|>' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. 'token' → logprob: -20.25
    8. ' d' → logprob: -20.375
    9. '  ' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27881917357444763
    2. '
' → logprob: -1.90381920337677
    3. '    
' → logprob: -2.9038190841674805
    4. '  
' → logprob: -4.2788190841674805
    5. ' 
' → logprob: -4.6538190841674805
    6. ',' → logprob: -4.7788190841674805
    7. '<|end|>' → logprob: -5.7788190841674805
    8. '   
' → logprob: -6.1538190841674805
    9. '\n' → logprob: -7.2788190841674805
    10. ',
' → logprob: -7.9038190841674805

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04363662004470825
    2. '    
' → logprob: -3.7936365604400635
    3. '
' → logprob: -5.293636798858643
    4. 'result' → logprob: -5.918636798858643
    5. ' 
' → logprob: -6.168636798858643
    6. ' ' → logprob: -6.168636798858643
    7. '  
' → logprob: -6.168636798858643
    8. ' result' → logprob: -6.793636798858643
    9. '+' → logprob: -7.293636798858643
    10. ' res' → logprob: -7.293636798858643

Token 284: ' mix' (ID: 9762)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3380049765110016
    2. 'ret' → logprob: -2.5880050659179688
    3. 'result' → logprob: -2.7130050659179688
    4. 'd' → logprob: -2.9630050659179688
    5. 'r' → logprob: -3.2130050659179688
    6. '   ' → logprob: -4.213005065917969
    7. ' res' → logprob: -4.588005065917969
    8. 'for' → logprob: -4.963005065917969
    9. 'out' → logprob: -5.463005065917969
    10. 'rep' → logprob: -5.963005065917969

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1912761628627777
    2. '=' → logprob: -2.1912760734558105
    3. 'd' → logprob: -3.4412760734558105
    4. 'r' → logprob: -4.5662760734558105
    5. 'er' → logprob: -4.6912760734558105
    6. 'ed' → logprob: -4.9412760734558105
    7. '   ' → logprob: -6.1912760734558105
    8. '=[]' → logprob: -7.9412760734558105
    9. ' ' → logprob: -8.691276550292969
    10. '=[' → logprob: -8.941276550292969

Token 286: ' np' (ID: 5374)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35247182846069336
    2. '[np' → logprob: -1.8524718284606934
    3. 'np' → logprob: -1.9774718284606934
    4. ' [' → logprob: -7.477471828460693
    5. ' np' → logprob: -7.477471828460693
    6. '[d' → logprob: -7.852471828460693
    7. '[n' → logprob: -9.477472305297852
    8. '[-' → logprob: -10.352472305297852
    9. '(np' → logprob: -10.602472305297852
    10. '[F' → logprob: -10.977472305297852

Token 287: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -3.3213025744771585e-05
    2. '.array' → logprob: -11.000033378601074
    3. '.empty' → logprob: -11.125033378601074
    4. '.ones' → logprob: -14.625033378601074
    5. '.full' → logprob: -14.625033378601074
    6. '.ndarray' → logprob: -15.000033378601074
    7. 'zeros' → logprob: -15.375033378601074
    8. '.arange' → logprob: -16.375032424926758
    9. ' zeros' → logprob: -17.125032424926758
    10. '.concatenate' → logprob: -17.500032424926758

Token 288: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.00015181333583313972
    2. '((' → logprob: -9.000151634216309
    3. '(len' → logprob: -10.500151634216309
    4. '(' → logprob: -14.625151634216309
    5. '(s' → logprob: -16.000152587890625
    6. 'sz' → logprob: -16.375152587890625
    7. '(shape' → logprob: -16.750152587890625
    8. ' (' → logprob: -17.000152587890625
    9. ' sz' → logprob: -18.000152587890625
    10. '(si' → logprob: -18.875152587890625

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14267989993095398
    2. '2' → logprob: -2.0176799297332764
    3. '+' → logprob: -13.017680168151855
    4. '
' → logprob: -14.267680168151855
    5. ' ' → logprob: -14.517680168151855
    6. 'sz' → logprob: -14.767680168151855
    7. ' +' → logprob: -14.892680168151855
    8. '```' → logprob: -15.392680168151855
    9. 's' → logprob: -16.89267921447754
    10. '   ' → logprob: -17.08017921447754

Token 290: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34845906496047974
    2. ' +' → logprob: -1.223459005355835
    3. '+
' → logprob: -12.223459243774414
    4. ' ' → logprob: -12.348459243774414
    5. '
' → logprob: -13.598459243774414
    6. ' +
' → logprob: -13.848459243774414
    7. ',' → logprob: -13.848459243774414
    8. '2' → logprob: -15.348459243774414
    9. ' ' → logprob: -15.535959243774414
    10. '   ' → logprob: -15.660959243774414

Token 291: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.004328045062720776
    2. ' sz' → logprob: -5.50432825088501
    3. '1' → logprob: -8.379327774047852
    4. ' ' → logprob: -11.629327774047852
    5. '(sz' → logprob: -12.129327774047852
    6. '2' → logprob: -12.379327774047852
    7. '   ' → logprob: -14.504327774047852
    8. '+' → logprob: -15.504327774047852
    9. '
' → logprob: -15.504327774047852
    10. '3' → logprob: -15.629327774047852

Token 292: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008633595891296864
    2. '2' → logprob: -4.758633613586426
    3. '
' → logprob: -11.883633613586426
    4. '+' → logprob: -12.383633613586426
    5. '3' → logprob: -13.008633613586426
    6. ' ' → logprob: -13.383633613586426
    7. '0' → logprob: -13.883633613586426
    8. '   ' → logprob: -14.008633613586426
    9. ' +' → logprob: -14.758633613586426
    10. '```' → logprob: -14.758633613586426

Token 293: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08899585157632828
    2. ' +' → logprob: -2.463995933532715
    3. ')' → logprob: -10.213995933532715
    4. ',' → logprob: -11.463995933532715
    5. '+
' → logprob: -12.588995933532715
    6. '),' → logprob: -13.213995933532715
    7. ' ' → logprob: -13.338995933532715
    8. ' +
' → logprob: -14.588995933532715
    9. '
' → logprob: -14.588995933532715
    10. '-' → logprob: -15.088995933532715

Token 294: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.004091458860784769
    2. ' dtype' → logprob: -5.504091262817383
    3. 'np' → logprob: -11.379091262817383
    4. '   ' → logprob: -14.004091262817383
    5. ' ' → logprob: -16.004091262817383
    6. '(dtype' → logprob: -16.129091262817383
    7. 'd' → logprob: -16.254091262817383
    8. '     ' → logprob: -16.379091262817383
    9. ' np' → logprob: -16.629091262817383
    10. ')' → logprob: -16.629091262817383

Token 295: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -2.570319702499546e-05
    2. '=int' → logprob: -11.500025749206543
    3. ' =' → logprob: -11.750025749206543
    4. '=d' → logprob: -12.000025749206543
    5. '=' → logprob: -13.875025749206543
    6. 'np' → logprob: -15.375025749206543
    7. '   ' → logprob: -16.250024795532227
    8. '(np' → logprob: -16.500024795532227
    9. '[np' → logprob: -16.875024795532227
    10. 'd' → logprob: -17.375024795532227

Token 296: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38713690638542175
    2. '.int' → logprob: -1.1371369361877441
    3. 'object' → logprob: -8.887136459350586
    4. '.uint' → logprob: -9.637136459350586
    5. 'uint' → logprob: -10.137136459350586
    6. '.object' → logprob: -12.137136459350586
    7. ' int' → logprob: -12.512136459350586
    8. '.float' → logprob: -12.512136459350586
    9. 'float' → logprob: -13.137136459350586
    10. '=int' → logprob: -13.137136459350586

Token 297: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -3.128163257315464e-07
    2. '32' → logprob: -16.0
    3. 'int' → logprob: -16.375
    4. 'c' → logprob: -18.625
    5. '16' → logprob: -18.75
    6. 'p' → logprob: -19.0
    7. '8' → logprob: -19.75
    8. ')' → logprob: -21.5
    9. 'uint' → logprob: -21.5
    10. '128' → logprob: -22.0

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016790216614026576
    2. ')
' → logprob: -9.125167846679688
    3. ' )' → logprob: -10.000167846679688
    4. '   ' → logprob: -11.375167846679688
    5. '<|end|>' → logprob: -14.625167846679688
    6. ')#' → logprob: -15.625167846679688
    7. ' ' → logprob: -15.625167846679688
    8. ')

' → logprob: -15.875167846679688
    9. '```' → logprob: -15.875167846679688
    10. '
' → logprob: -16.625167846679688

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47838735580444336
    2. '<|end|>' → logprob: -1.6033873558044434
    3. ' for' → logprob: -1.9783873558044434
    4. ' ' → logprob: -3.9783873558044434
    5. 'for' → logprob: -4.603387355804443
    6. '+' → logprob: -5.728387355804443
    7. ')' → logprob: -5.728387355804443
    8. '  ' → logprob: -6.853387355804443
    9. ' 
' → logprob: -7.603387355804443
    10. '    
' → logprob: -7.603387355804443

Token 300: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4413585662841797
    2. ' for' → logprob: -1.1913585662841797
    3. '   ' → logprob: -3.1913585662841797
    4. 'i' → logprob: -4.94135856628418
    5. ')' → logprob: -6.44135856628418
    6. ' ' → logprob: -6.69135856628418
    7. ' i' → logprob: -7.56635856628418
    8. '	for' → logprob: -7.81635856628418
    9. '<|end|>' → logprob: -7.94135856628418
    10. '+' → logprob: -8.94135856628418

Token 301: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015384355559945107
    2. ' for' → logprob: -4.265384197235107
    3. 'i' → logprob: -6.765384197235107
    4. ' i' → logprob: -10.390384674072266
    5. '   ' → logprob: -10.765384674072266
    6. ' ' → logprob: -12.390384674072266
    7. '	for' → logprob: -12.515384674072266
    8. 'idx' → logprob: -13.515384674072266
    9. 'x' → logprob: -13.640384674072266
    10. 'n' → logprob: -13.890384674072266

Token 302: 'isation' (ID: 6993)
  Prédit: 'sage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sage' → logprob: -1.1150588989257812
    2. 's' → logprob: -1.4900588989257812
    3. 'isation' → logprob: -1.8650588989257812
    4. 'ser' → logprob: -2.2400588989257812
    5. 'se' → logprob: -3.3650588989257812
    6. 'isant' → logprob: -3.4900588989257812
    7. '#' → logprob: -3.6150588989257812
    8. 'isateur' → logprob: -3.7400588989257812
    9. '```' → logprob: -3.7400588989257812
    10. '   ' → logprob: -4.865058898925781

Token 303: ' volontaire' (ID: 170473)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47335633635520935
    2. '   ' → logprob: -1.4733563661575317
    3. ' i' → logprob: -2.223356246948242
    4. 'for' → logprob: -3.348356246948242
    5. ' in' → logprob: -6.473356246948242
    6. 'i' → logprob: -6.723356246948242
    7. '  ' → logprob: -7.723356246948242
    8. ' ' → logprob: -7.848356246948242
    9. ' of' → logprob: -7.973356246948242
    10. ' d' → logprob: -9.348356246948242

Token 304: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7941745519638062
    2. ' for' → logprob: -0.9191745519638062
    3. '   ' → logprob: -2.1691746711730957
    4. '<|end|>' → logprob: -4.419174671173096
    5. 'import' → logprob: -4.669174671173096
    6. ' of' → logprob: -5.544174671173096
    7. ' de' → logprob: -6.544174671173096
    8. ' ' → logprob: -6.544174671173096
    9. '  ' → logprob: -6.544174671173096
    10. 'de' → logprob: -7.044174671173096

Token 305: ''une' (ID: 13337)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6544496417045593
    2. 'for' → logprob: -1.154449701309204
    3. ''un' → logprob: -3.404449701309204
    4. 'une' → logprob: -3.779449701309204
    5. 'nested' → logprob: -3.779449701309204
    6. ''une' → logprob: -3.904449701309204
    7. 'np' → logprob: -3.904449701309204
    8. 'n' → logprob: -5.029449462890625
    9. ' range' → logprob: -5.154449462890625
    10. 'e' → logprob: -5.154449462890625

Token 306: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0054806252010166645
    2. ' for' → logprob: -5.255480766296387
    3. 'range' → logprob: -8.630480766296387
    4. 'import' → logprob: -10.630480766296387
    5. 'from' → logprob: -11.505480766296387
    6. 'bou' → logprob: -12.005480766296387
    7. '
' → logprob: -12.505480766296387
    8. 'double' → logprob: -12.630480766296387
    9. ' ' → logprob: -12.880480766296387
    10. 'b' → logprob: -13.005480766296387

Token 307: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18261367082595825
    2. 'for' → logprob: -2.0576136112213135
    3. '<|end|>' → logprob: -3.4326136112213135
    4. '   ' → logprob: -5.682613849639893
    5. ' ' → logprob: -6.682613849639893
    6. '<|end|>' → logprob: -7.057613849639893
    7. ' 
' → logprob: -7.932613849639893
    8. ' i' → logprob: -8.432613372802734
    9. '	for' → logprob: -8.807613372802734
    10. 'i' → logprob: -9.432613372802734

Token 308: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0973079651594162
    2. 'for' → logprob: -3.4723079204559326
    3. '<|end|>' → logprob: -3.5973079204559326
    4. ' ' → logprob: -3.7223079204559326
    5. '   ' → logprob: -4.847308158874512
    6. '    ' → logprob: -7.722308158874512
    7. ' 
' → logprob: -8.097308158874512
    8. '  ' → logprob: -8.472308158874512
    9. '	for' → logprob: -8.597308158874512
    10. ')' → logprob: -8.597308158874512

Token 309: ' d' (ID: 272)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08820532262325287
    2. 'for' → logprob: -3.463205337524414
    3. ' range' → logprob: -4.338205337524414
    4. 'np' → logprob: -4.338205337524414
    5. 'i' → logprob: -4.588205337524414
    6. '   ' → logprob: -5.713205337524414
    7. ' for' → logprob: -5.963205337524414
    8. ' i' → logprob: -6.463205337524414
    9. 'if' → logprob: -7.213205337524414
    10. 'return' → logprob: -7.463205337524414

Token 310: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20704708993434906
    2. ''une' → logprob: -2.7070469856262207
    3. 'une' → logprob: -3.0820469856262207
    4. 'u' → logprob: -3.7070469856262207
    5. 'range' → logprob: -3.8320469856262207
    6. 'i' → logprob: -4.707046985626221
    7. ''un' → logprob: -5.207046985626221
    8. ''' → logprob: -5.332046985626221
    9. 'ans' → logprob: -6.582046985626221
    10. 'for' → logprob: -6.707046985626221

Token 311: ' slice' (ID: 30288)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21564310789108276
    2. 'for' → logprob: -1.9656431674957275
    3. '
' → logprob: -4.340642929077148
    4. 'com' → logprob: -4.465642929077148
    5. 'np' → logprob: -5.215642929077148
    6. 'while' → logprob: -5.965642929077148
    7. 'nested' → logprob: -6.215642929077148
    8. '```' → logprob: -6.215642929077148
    9. 'zip' → logprob: -6.340642929077148
    10. 'fonction' → logprob: -6.590642929077148

Token 312: ' vector' (ID: 9727)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3814311623573303
    2. 'for' → logprob: -1.5064311027526855
    3. '   ' → logprob: -2.3814311027526855
    4. ':' → logprob: -7.1314311027526855
    5. '
' → logprob: -7.8814311027526855
    6. '    
' → logprob: -8.131431579589844
    7. ' ' → logprob: -8.381431579589844
    8. ' range' → logprob: -8.756431579589844
    9. '<|end|>' → logprob: -8.756431579589844
    10. 'range' → logprob: -8.881431579589844

Token 313: 'ielle' (ID: 22380)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.8470485806465149
    2. 'd' → logprob: -1.0970485210418701
    3. 'e' → logprob: -1.9720485210418701
    4. 'age' → logprob: -4.097048759460449
    5. '[:' → logprob: -4.597048759460449
    6. 'ur' → logprob: -4.972048759460449
    7. 'ing' → logprob: -5.097048759460449
    8. 'ure' → logprob: -5.097048759460449
    9. '[' → logprob: -5.347048759460449
    10. ')' → logprob: -5.597048759460449

Token 314: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.522392213344574
    2. '   ' → logprob: -1.6473922729492188
    3. 'for' → logprob: -1.7723922729492188
    4. '  
' → logprob: -4.522392272949219
    5. '
' → logprob: -4.897392272949219
    6. '<|end|>' → logprob: -4.897392272949219
    7. '    
' → logprob: -5.272392272949219
    8. ' ' → logprob: -5.522392272949219
    9. ' 
' → logprob: -5.647392272949219
    10. ':' → logprob: -6.522392272949219

Token 315: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3103525936603546
    2. '   ' → logprob: -1.5603525638580322
    3. 'for' → logprob: -3.0603525638580322
    4. '<|end|>' → logprob: -5.560352802276611
    5. ' ' → logprob: -5.685352802276611
    6. '	for' → logprob: -7.060352802276611
    7. '    
' → logprob: -8.310352325439453
    8. '  ' → logprob: -8.310352325439453
    9. ',' → logprob: -8.435352325439453
    10. ' 
' → logprob: -8.560352325439453

Token 316: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08076801896095276
    2. ' for' → logprob: -2.58076810836792
    3. '   ' → logprob: -6.33076810836792
    4. '
' → logprob: -10.080767631530762
    5. '	for' → logprob: -11.080767631530762
    6. '    
' → logprob: -11.580767631530762
    7. ' ' → logprob: -11.580767631530762
    8. 'i' → logprob: -11.580767631530762
    9. ' i' → logprob: -12.705767631530762
    10. ' 
' → logprob: -13.080767631530762

Token 317: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47399866580963135
    2. ' i' → logprob: -1.3489986658096313
    3. 'k' → logprob: -3.098998546600342
    4. ' k' → logprob: -4.098998546600342
    5. 'x' → logprob: -4.098998546600342
    6. 'j' → logprob: -4.973998546600342
    7. ' x' → logprob: -5.223998546600342
    8. ' j' → logprob: -5.473998546600342
    9. 'a' → logprob: -5.848998546600342
    10. 's' → logprob: -6.036498546600342

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13215836882591248
    2. 'in' → logprob: -2.1321582794189453
    3. ' ' → logprob: -6.007158279418945
    4. ',' → logprob: -7.382158279418945
    5. 'i' → logprob: -7.382158279418945
    6. ' i' → logprob: -7.507158279418945
    7. 'ix' → logprob: -8.632158279418945
    8. 'm' → logprob: -9.132158279418945
    9. 'x' → logprob: -9.132158279418945
    10. 'n' → logprob: -9.257158279418945

Token 319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012582694762386382
    2. ' range' → logprob: -9.000125885009766
    3. ' ' → logprob: -14.750125885009766
    4. '   ' → logprob: -14.875125885009766
    5. '(range' → logprob: -15.000125885009766
    6. 'r' → logprob: -15.125125885009766
    7. '
' → logprob: -15.375125885009766
    8. 'rang' → logprob: -15.375125885009766
    9. '  ' → logprob: -15.625125885009766
    10. '	range' → logprob: -16.000125885009766

Token 320: '(' (ID: 7)
  Prédit: '(sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.06200544163584709
    2. '(' → logprob: -2.8120055198669434
    3. '(len' → logprob: -10.937005043029785
    4. '1' → logprob: -11.562005043029785
    5. 'sz' → logprob: -12.312005043029785
    6. '(max' → logprob: -13.937005043029785
    7. ' ' → logprob: -14.062005043029785
    8. ' sz' → logprob: -14.062005043029785
    9. '((' → logprob: -14.312005043029785
    10. ' (' → logprob: -14.687005043029785

Token 321: '1' (ID: 16)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.1192663311958313
    2. '1' → logprob: -2.2442662715911865
    3. '(sz' → logprob: -5.494266510009766
    4. '0' → logprob: -6.369266510009766
    5. 'len' → logprob: -8.369266510009766
    6. '(' → logprob: -8.994266510009766
    7. ' sz' → logprob: -9.494266510009766
    8. ' ' → logprob: -9.994266510009766
    9. 'min' → logprob: -10.369266510009766
    10. 'max' → logprob: -10.494266510009766

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006128363311290741
    2. ' ,' → logprob: -7.500612735748291
    3. ',
' → logprob: -10.50061321258545
    4. '   ' → logprob: -11.62561321258545
    5. ',s' → logprob: -12.12561321258545
    6. ',len' → logprob: -12.12561321258545
    7. '(sz' → logprob: -12.50061321258545
    8. 'sz' → logprob: -12.50061321258545
    9. '
' → logprob: -13.37561321258545
    10. ' sz' → logprob: -14.37561321258545

Token 323: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.0011260485043749213
    2. ' sz' → logprob: -7.001125812530518
    3. '   ' → logprob: -9.626126289367676
    4. 'len' → logprob: -9.751126289367676
    5. 'min' → logprob: -10.501126289367676
    6. '(sz' → logprob: -10.501126289367676
    7. '  ' → logprob: -11.751126289367676
    8. ' ' → logprob: -11.751126289367676
    9. '
' → logprob: -12.126126289367676
    10. '    ' → logprob: -12.626126289367676

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. '+' → logprob: -11.375018119812012
    3. '2' → logprob: -12.875018119812012
    4. ' +' → logprob: -13.000018119812012
    5. ' ' → logprob: -13.750018119812012
    6. '```' → logprob: -15.875018119812012
    7. ',' → logprob: -16.000019073486328
    8. ')' → logprob: -16.062519073486328
    9. '   ' → logprob: -16.187519073486328
    10. ' -' → logprob: -16.437519073486328

Token 325: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269741952419281
    2. ' +' → logprob: -2.126974105834961
    3. '+
' → logprob: -10.376974105834961
    4. ' +
' → logprob: -12.251974105834961
    5. '
' → logprob: -12.876974105834961
    6. ' ' → logprob: -13.251974105834961
    7. ')+' → logprob: -14.126974105834961
    8. '   ' → logprob: -14.251974105834961
    9. '):
' → logprob: -14.251974105834961
    10. '):' → logprob: -14.501974105834961

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009348054882138968
    2. ' ' → logprob: -7.000934600830078
    3. '2' → logprob: -11.000934600830078
    4. 'sz' → logprob: -12.625934600830078
    5. '+' → logprob: -13.375934600830078
    6. ' sz' → logprob: -14.625934600830078
    7. '   ' → logprob: -14.750934600830078
    8. ' +' → logprob: -15.375934600830078
    9. '
' → logprob: -15.500934600830078
    10. '  ' → logprob: -15.938434600830078

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001967457792488858
    2. ' ' → logprob: -8.87519645690918
    3. 'sz' → logprob: -10.25019645690918
    4. '+' → logprob: -11.50019645690918
    5. '2' → logprob: -12.12519645690918
    6. ')' → logprob: -13.50019645690918
    7. ' sz' → logprob: -13.75019645690918
    8. 'm' → logprob: -13.87519645690918
    9. '
' → logprob: -14.25019645690918
    10. ' +' → logprob: -14.25019645690918

Token 328: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01906345598399639
    2. '):
' → logprob: -4.519063472747803
    3. ':' → logprob: -4.894063472747803
    4. ')' → logprob: -8.519062995910645
    5. ',' → logprob: -8.894062995910645
    6. ' ):' → logprob: -9.519062995910645
    7. '+' → logprob: -10.269062995910645
    8. '   ' → logprob: -10.519062995910645
    9. ' :' → logprob: -11.519062995910645
    10. '):
' → logprob: -13.019062995910645

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028446238487958908
    2. ' for' → logprob: -3.9034461975097656
    3. '   ' → logprob: -5.403446197509766
    4. 'for' → logprob: -5.778446197509766
    5. 'mix' → logprob: -9.153446197509766
    6. ' mix' → logprob: -9.778446197509766
    7. '	for' → logprob: -10.778446197509766
    8. '	' → logprob: -10.903446197509766
    9. '	   ' → logprob: -11.278446197509766
    10. '    ' → logprob: -11.653446197509766

Token 330: ' mix' (ID: 9762)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059403207153081894
    2. 'mix' (adapté à ' mix') → logprob: -3.05940318107605
    3. ' for' → logprob: -5.184403419494629
    4. '       ' → logprob: -5.559403419494629
    5. '   ' → logprob: -6.934403419494629
    6. ' mix' → logprob: -9.059403419494629
    7. 'm' → logprob: -10.059403419494629
    8. 'if' → logprob: -10.434403419494629
    9. 'mixed' → logprob: -11.184403419494629
    10. '	for' → logprob: -11.434403419494629

Token 331: '[m' (ID: 29271)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.12018546462059021
    2. '[m' → logprob: -2.370185375213623
    3. '[' → logprob: -4.245185375213623
    4. '+=' → logprob: -5.745185375213623
    5. ' +=' → logprob: -7.245185375213623
    6. '[:]' → logprob: -7.245185375213623
    7. '[:-' → logprob: -7.870185375213623
    8. '   ' → logprob: -9.245185852050781
    9. ']+=' → logprob: -9.870185852050781
    10. ' [:' → logprob: -9.995185852050781

Token 332: ':m' (ID: 83740)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2935532331466675
    2. ':]' → logprob: -1.6685532331466675
    3. ':' → logprob: -3.168553352355957
    4. ']+=' → logprob: -3.918553352355957
    5. ' :]' → logprob: -6.293553352355957
    6. ']=' → logprob: -7.418553352355957
    7. '-' → logprob: -7.543553352355957
    8. ' ]' → logprob: -8.668553352355957
    9. ']+' → logprob: -8.668553352355957
    10. ' :' → logprob: -9.043553352355957

Token 333: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37336108088493347
    2. '+m' → logprob: -1.2483611106872559
    3. ' +' → logprob: -3.998361110687256
    4. ']' → logprob: -5.498361110687256
    5. '+s' → logprob: -6.748361110687256
    6. ']+' → logprob: -7.873361110687256
    7. '+n' → logprob: -8.373360633850098
    8. 'm' → logprob: -8.748360633850098
    9. '   ' → logprob: -9.873360633850098
    10. ']+=' → logprob: -10.248360633850098

Token 334: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.0012690435396507382
    2. 'm' → logprob: -7.3762688636779785
    3. ' sz' → logprob: -8.001269340515137
    4. '(sz' → logprob: -8.751269340515137
    5. '1' → logprob: -9.626269340515137
    6. 'len' → logprob: -10.251269340515137
    7. '   ' → logprob: -11.001269340515137
    8. ' ' → logprob: -12.001269340515137
    9. '(' → logprob: -12.376269340515137
    10. '
' → logprob: -12.751269340515137

Token 335: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035729845985770226
    2. '2' → logprob: -6.378572940826416
    3. ']' → logprob: -6.378572940826416
    4. 'm' → logprob: -10.253573417663574
    5. '[m' → logprob: -10.628573417663574
    6. '+' → logprob: -11.128573417663574
    7. '   ' → logprob: -11.128573417663574
    8. '(m' → logprob: -11.253573417663574
    9. '<|end|>' → logprob: -11.503573417663574
    10. ',m' → logprob: -11.628573417663574

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008817951194941998
    2. ']+=' → logprob: -4.75881814956665
    3. '+' → logprob: -9.258817672729492
    4. ' ]' → logprob: -10.133817672729492
    5. ']+' → logprob: -10.383817672729492
    6. '   ' → logprob: -11.883817672729492
    7. ']=' → logprob: -12.258817672729492
    8. '+=' → logprob: -12.508817672729492
    9. '+]' → logprob: -12.633817672729492
    10. '[' → logprob: -12.883817672729492

Token 337: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3389219343662262
    2. ' +=' → logprob: -1.3389219045639038
    3. ']+=' → logprob: -3.7139220237731934
    4. ']' → logprob: -8.088921546936035
    5. '+' → logprob: -8.213921546936035
    6. '   ' → logprob: -8.463921546936035
    7. '=' → logprob: -9.463921546936035
    8. '+=(' → logprob: -11.213921546936035
    9. '    ' → logprob: -11.338921546936035
    10. '```' → logprob: -11.588921546936035

Token 338: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23178118467330933
    2. ' d' → logprob: -1.606781244277954
    3. '(d' → logprob: -5.356781005859375
    4. ' (' → logprob: -7.481781005859375
    5. '   ' → logprob: -7.856781005859375
    6. ' ' → logprob: -8.606781005859375
    7. 'fact' → logprob: -9.106781005859375
    8. '(' → logprob: -9.231781005859375
    9. 'np' → logprob: -9.481781005859375
    10. '[d' → logprob: -9.731781005859375

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052354102954268456
    2. '2' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.13023567199707
    4. 'd' → logprob: -14.81773567199707
    5. '[' → logprob: -15.69273567199707
    6. '```' → logprob: -16.31773567199707
    7. ' d' → logprob: -16.38023567199707
    8. '   ' → logprob: -16.69273567199707
    9. '0' → logprob: -17.69273567199707
    10. '  ' → logprob: -17.88023567199707

Token 340: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -6.44443862256594e-05
    2. 'm' → logprob: -10.125064849853516
    3. '[' → logprob: -11.125064849853516
    4. ' [' → logprob: -12.250064849853516
    5. '[[' → logprob: -14.000064849853516
    6. ' m' → logprob: -14.000064849853516
    7. '   ' → logprob: -14.375064849853516
    8. '[np' → logprob: -14.625064849853516
    9. '[
' → logprob: -15.125064849853516
    10. '(m' → logprob: -15.250064849853516

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06290047615766525
    2. ':]' → logprob: -3.9379005432128906
    3. ']*' → logprob: -4.562900543212891
    4. '[m' → logprob: -5.187900543212891
    5. ',' → logprob: -5.312900543212891
    6. ':m' → logprob: -5.437900543212891
    7. '[' → logprob: -5.437900543212891
    8. '][:' → logprob: -5.437900543212891
    9. '[:' → logprob: -5.687900543212891
    10. ':' → logprob: -6.937900543212891

Token 342: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026952778920531273
    2. '*' → logprob: -4.276952743530273
    3. '*d' → logprob: -4.401952743530273
    4. '[' → logprob: -9.276952743530273
    5. '*np' → logprob: -9.401952743530273
    6. 'd' → logprob: -9.401952743530273
    7. '<|end|>' → logprob: -10.151952743530273
    8. ' d' → logprob: -10.276952743530273
    9. '.reshape' → logprob: -10.276952743530273
    10. '[:]' → logprob: -10.901952743530273

Token 343: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014223679900169373
    2. ' d' → logprob: -4.264223575592041
    3. ' ' → logprob: -11.0142240524292
    4. '   ' → logprob: -11.1392240524292
    5. '(d' → logprob: -11.8892240524292
    6. '  ' → logprob: -12.1392240524292
    7. 'fact' → logprob: -12.1392240524292
    8. 'np' → logprob: -13.2642240524292
    9. '	d' → logprob: -13.3892240524292
    10. '       ' → logprob: -13.6392240524292

Token 344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۲' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. 'd' → logprob: -19.375
    6. '```' → logprob: -19.5
    7. '[' → logprob: -19.5625
    8. '２' → logprob: -19.8125
    9. 'def' → logprob: -20.25
    10. '₂' → logprob: -20.5

Token 345: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00028052396373823285
    2. '[:' → logprob: -8.375280380249023
    3. '1' → logprob: -10.500280380249023
    4. '[:-' → logprob: -11.875280380249023
    5. '
' → logprob: -12.125280380249023
    6. '[m' → logprob: -12.875280380249023
    7. '[:]' → logprob: -13.875280380249023
    8. ' [' → logprob: -14.000280380249023
    9. '(' → logprob: -14.125280380249023
    10. '[
' → logprob: -14.250280380249023

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019471932318992913
    2. ':' → logprob: -9.125194549560547
    3. '[' → logprob: -10.125194549560547
    4. ' ' → logprob: -10.500194549560547
    5. ']' → logprob: -11.625194549560547
    6. ' :' → logprob: -12.875194549560547
    7. '[:' → logprob: -13.250194549560547
    8. '(' → logprob: -13.625194549560547
    9. '0' → logprob: -14.250194549560547
    10. '   ' → logprob: -14.375194549560547

Token 347: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11153185367584229
    2. ':]' → logprob: -2.3615317344665527
    3. ':m' → logprob: -4.736531734466553
    4. ':(' → logprob: -6.861531734466553
    5. ' :' → logprob: -6.986531734466553
    6. ':]
' → logprob: -8.236532211303711
    7. ':s' → logprob: -9.861532211303711
    8. ':].' → logprob: -9.861532211303711
    9. 'm' → logprob: -9.986532211303711
    10. ':,' → logprob: -11.111532211303711

Token 348: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -20.6250057220459
    4. '.MOD' → logprob: -21.3750057220459
    5. '```' → logprob: -25.0000057220459
    6. 'MO' → logprob: -25.1250057220459
    7. '
' → logprob: -25.2500057220459
    8. '   ' → logprob: -25.2500057220459
    9. 'Mod' → logprob: -25.6250057220459
    10. ' ' → logprob: -26.3750057220459

Token 350: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2508230209350586
    2. '   ' → logprob: -1.6258230209350586
    3. '<|end|>' → logprob: -1.6258230209350586
    4. '+' → logprob: -2.5008230209350586
    5. '[' → logprob: -3.0008230209350586
    6. '
' → logprob: -3.0008230209350586
    7. '%' → logprob: -3.5008230209350586
    8. '\n' → logprob: -3.7508230209350586
    9. ' 
' → logprob: -3.7508230209350586
    10. ')' → logprob: -4.375823020935059

Token 351: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0405666828155518
    2. '<|end|>' → logprob: -1.1655666828155518
    3. '+' → logprob: -1.9155666828155518
    4. '   ' → logprob: -2.0405666828155518
    5. ' 
' → logprob: -4.040566444396973
    6. '[' → logprob: -4.540566444396973
    7. '\n' → logprob: -4.790566444396973
    8. '\' → logprob: -5.415566444396973
    9. '  
' → logprob: -6.165566444396973
    10. '  ' → logprob: -6.165566444396973

Token 352: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7680487632751465
    2. '[' → logprob: -1.8930487632751465
    3. '   ' → logprob: -1.8930487632751465
    4. '%' → logprob: -2.2680487632751465
    5. '+' → logprob: -2.3930487632751465
    6. '<|end|>' → logprob: -3.8930487632751465
    7. ')' → logprob: -4.8930487632751465
    8. '  ' → logprob: -5.8930487632751465
    9. ']' → logprob: -6.7680487632751465
    10. '\n' → logprob: -6.8930487632751465

Token 353: ' mix' (ID: 9762)
  Prédit: 'mix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mix' → logprob: -0.018616579473018646
    2. '(m' → logprob: -4.393616676330566
    3. ' mix' → logprob: -5.893616676330566
    4. 'np' → logprob: -6.018616676330566
    5. '(np' → logprob: -7.143616676330566
    6. 'm' → logprob: -10.518616676330566
    7. ' np' → logprob: -10.643616676330566
    8. ' (' → logprob: -10.768616676330566
    9. '((' → logprob: -11.768616676330566
    10. '[m' → logprob: -12.268616676330566

Token 354: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.018150178715586662
    2. ' MOD' → logprob: -4.018150329589844
    3. '_MOD' → logprob: -15.518150329589844
    4. '.MOD' → logprob: -16.393150329589844
    5. ' ' → logprob: -19.268150329589844
    6. '(M' → logprob: -19.643150329589844
    7. 'MO' → logprob: -21.018150329589844
    8. '(mod' → logprob: -21.143150329589844
    9. 'mod' → logprob: -21.393150329589844
    10. '(' → logprob: -21.518150329589844

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' ajouter' (ID: 78457)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.027181925252079964
    2. 'dfs' → logprob: -4.027182102203369
    3. ' dp' → logprob: -5.777182102203369
    4. ' calcul' → logprob: -6.152182102203369
    5. ' rec' → logprob: -7.527182102203369
    6. ' DFS' → logprob: -7.777182102203369
    7. ' calc' → logprob: -7.902182102203369
    8. 'dp' → logprob: -8.152181625366211
    9. ' ' → logprob: -8.277181625366211
    10. ' solve' → logprob: -8.652181625366211

Token 359: '_are' (ID: 150240)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.14586897194385529
    2. '(' → logprob: -2.145869016647339
    3. ' (' → logprob: -4.02086877822876
    4. '(a' → logprob: -7.89586877822876
    5. '(data' → logprob: -9.270869255065918
    6. '(de' → logprob: -9.645869255065918
    7. '(_' → logprob: -10.520869255065918
    8. '(node' → logprob: -10.645869255065918
    9. '(s' → logprob: -10.770869255065918
    10. '(m' → logprob: -11.270869255065918

Token 360: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -1.9266199160483666e-05
    2. 'tes' → logprob: -11.000019073486328
    3. 'nte' → logprob: -13.250019073486328
    4. '(te' → logprob: -14.500019073486328
    5. 'tte' → logprob: -16.375019073486328
    6. '_te' → logprob: -17.125019073486328
    7. 'tre' → logprob: -17.375019073486328
    8. 'те' → logprob: -18.125019073486328
    9. '^' → logprob: -19.625019073486328
    10. 't' → logprob: -19.750019073486328

Token 361: '(buff' (ID: 89821)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0018241697689518332
    2. '(u' → logprob: -6.751824378967285
    3. ' (' → logprob: -8.626824378967285
    4. '(a' → logprob: -8.876824378967285
    5. '(parent' → logprob: -9.126824378967285
    6. '(' → logprob: -9.251824378967285
    7. '(s' → logprob: -10.001824378967285
    8. '(D' → logprob: -11.126824378967285
    9. '(l' → logprob: -11.376824378967285
    10. '(node' → logprob: -11.501824378967285

Token 362: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1224423423409462
    2. '):' → logprob: -2.2474422454833984
    3. '(buff' → logprob: -5.747442245483398
    4. ')' → logprob: -5.872442245483398
    5. ' ,' → logprob: -6.622442245483398
    6. ',b' → logprob: -6.997442245483398
    7. '):
' → logprob: -8.247442245483398
    8. 'f' → logprob: -8.372442245483398
    9. ')(' → logprob: -8.872442245483398
    10. ',(' → logprob: -9.622442245483398

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030852556228637695
    2. ':' → logprob: -6.503085136413574
    3. '<|end|>' → logprob: -7.628085136413574
    4. '[' → logprob: -8.378085136413574
    5. '(buff' → logprob: -8.378085136413574
    6. '	buff' → logprob: -8.878085136413574
    7. '    
' → logprob: -8.878085136413574
    8. '```' → logprob: -9.503085136413574
    9. '[]' → logprob: -10.753085136413574
    10. ':
' → logprob: -10.753085136413574

Token 364: ' sz' (ID: 8515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7215453386306763
    2. ' n' → logprob: -2.4715452194213867
    3. ' def' → logprob: -2.5965452194213867
    4. ' return' → logprob: -2.7215452194213867
    5. ' new' → logprob: -3.0965452194213867
    6. 'n' → logprob: -3.0965452194213867
    7. ' for' → logprob: -3.0965452194213867
    8. 'def' → logprob: -3.3465452194213867
    9. ' buff' → logprob: -3.9715452194213867
    10. ' size' → logprob: -4.096545219421387

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05727699026465416
    2. '=' → logprob: -2.932276964187622
    3. ',' → logprob: -6.682277202606201
    4. '   ' → logprob: -6.932277202606201
    5. '=len' → logprob: -10.182276725769043
    6. '    ' → logprob: -10.432276725769043
    7. ' ' → logprob: -10.557276725769043
    8. '  ' → logprob: -10.682276725769043
    9. ' ,' → logprob: -11.557276725769043
    10. '=size' → logprob: -11.932276725769043

Token 366: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25204193592071533
    2. ' len' → logprob: -1.5020419359207153
    3. 'buff' → logprob: -9.252041816711426
    4. '(len' → logprob: -11.877041816711426
    5. ' buff' → logprob: -11.877041816711426
    6. '[len' → logprob: -12.877041816711426
    7. '	len' → logprob: -15.752041816711426
    8. '=len' → logprob: -16.252042770385742
    9. ',len' → logprob: -16.877042770385742
    10. 'buf' → logprob: -18.002042770385742

Token 367: '(buff' (ID: 89821)
  Prédit: '(buff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buff' → logprob: -4.008129963040119e-06
    2. 'buff' → logprob: -12.500003814697266
    3. '(' → logprob: -15.750003814697266
    4. '	buff' → logprob: -16.875003814697266
    5. '(b' → logprob: -17.875003814697266
    6. '(buf' → logprob: -18.250003814697266
    7. '(buffer' → logprob: -18.375003814697266
    8. '_buff' → logprob: -18.875003814697266
    9. ' (' → logprob: -19.250003814697266
    10. ' buff' → logprob: -19.500003814697266

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01304281409829855
    2. ')
' → logprob: -4.38804292678833
    3. ')-' → logprob: -7.63804292678833
    4. '   ' → logprob: -10.638042449951172
    5. ' )' → logprob: -10.888042449951172
    6. '()' → logprob: -12.513042449951172
    7. '())' → logprob: -13.763042449951172
    8. ' ' → logprob: -14.388042449951172
    9. ')
' → logprob: -14.388042449951172
    10. 'def' → logprob: -14.388042449951172

Token 369: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015950258821249008
    2. '-' → logprob: -4.3909502029418945
    3. ' -' → logprob: -5.8909502029418945
    4. ',' → logprob: -8.640950202941895
    5. 'def' → logprob: -9.015950202941895
    6. ')' → logprob: -9.765950202941895
    7. '
' → logprob: -9.765950202941895
    8. '  ' → logprob: -9.890950202941895
    9. '[' → logprob: -10.140950202941895
    10. ' ' → logprob: -10.390950202941895

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.250123977661133
    3. '2' → logprob: -10.500123977661133
    4. '   ' → logprob: -16.125123977661133
    5. '```' → logprob: -17.250123977661133
    6. '
' → logprob: -17.625123977661133
    7. '  ' → logprob: -19.312623977661133
    8. ')' → logprob: -19.562623977661133
    9. '<|end|>' → logprob: -19.562623977661133
    10. '１' → logprob: -19.750123977661133

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.375046730041504
    3. '2' → logprob: -11.125046730041504
    4. '   ' → logprob: -16.187545776367188
    5. '```' → logprob: -16.250045776367188
    6. '۱' → logprob: -17.250045776367188
    7. '１' → logprob: -17.875045776367188
    8. '
' → logprob: -18.000045776367188
    9. '<|end|>' → logprob: -18.625045776367188
    10. ')' → logprob: -18.625045776367188

Token 372: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6364161968231201
    2. '   ' → logprob: -0.7614161968231201
    3. '    
' → logprob: -5.886416435241699
    4. '  
' → logprob: -8.5114164352417
    5. '```' → logprob: -8.6364164352417
    6. ' 
' → logprob: -8.8864164352417
    7. ',' → logprob: -9.0114164352417
    8. '<|end|>' → logprob: -9.5114164352417
    9. '   
' → logprob: -10.0114164352417
    10. '     
' → logprob: -10.1364164352417

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09155069291591644
    2. ' for' → logprob: -2.966550588607788
    3. '
' → logprob: -4.591550827026367
    4. '```' → logprob: -4.841550827026367
    5. '    
' → logprob: -4.966550827026367
    6. 'for' → logprob: -5.216550827026367
    7. ' 
' → logprob: -6.841550827026367
    8. 'buff' → logprob: -7.091550827026367
    9. ',' → logprob: -7.341550827026367
    10. '[' → logprob: -7.591550827026367

Token 374: ' add' (ID: 1147)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0166354179382324
    2. '   ' → logprob: -1.7666354179382324
    3. 'mix' → logprob: -2.0166354179382324
    4. 'res' → logprob: -2.1416354179382324
    5. 'for' → logprob: -2.6416354179382324
    6. 'tmp' → logprob: -2.8916354179382324
    7. 'buff' → logprob: -3.8916354179382324
    8. ' new' → logprob: -3.8916354179382324
    9. 'temp' → logprob: -4.516635417938232
    10. ' res' → logprob: -5.016635417938232

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23811519145965576
    2. '=' → logprob: -1.7381151914596558
    3. 'd' → logprob: -4.738115310668945
    4. 'ed' → logprob: -4.863115310668945
    5. '_' → logprob: -4.988115310668945
    6. '   ' → logprob: -5.363115310668945
    7. '_buff' → logprob: -5.363115310668945
    8. 'er' → logprob: -7.863115310668945
    9. 's' → logprob: -8.363115310668945
    10. 'ition' → logprob: -8.488115310668945

Token 376: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.04376750439405441
    2. ' np' → logprob: -3.1687674522399902
    3. 'buff' → logprob: -7.79376745223999
    4. '(np' → logprob: -8.293767929077148
    5. 'fact' → logprob: -10.293767929077148
    6. ' buff' → logprob: -10.918767929077148
    7. ' (' → logprob: -11.543767929077148
    8. '[np' → logprob: -11.793767929077148
    9. '(' → logprob: -11.918767929077148
    10. ' ' → logprob: -12.293767929077148

Token 377: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.16117051243782043
    2. '.array' → logprob: -1.911170482635498
    3. '.arange' → logprob: -8.411170959472656
    4. '.roll' → logprob: -8.786170959472656
    5. '.ones' → logprob: -9.036170959472656
    6. '.empty' → logprob: -9.161170959472656
    7. '.append' → logprob: -9.286170959472656
    8. '.concatenate' → logprob: -9.286170959472656
    9. 'array' → logprob: -9.661170959472656
    10. '(array' → logprob: -10.411170959472656

Token 378: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -1.723973582556937e-05
    2. '(len' → logprob: -11.125017166137695
    3. '((' → logprob: -13.375017166137695
    4. '(buff' → logprob: -14.500017166137695
    5. '(' → logprob: -15.375017166137695
    6. '_like' → logprob: -16.875017166137695
    7. ' sz' → logprob: -17.250017166137695
    8. 'buff' → logprob: -17.750017166137695
    9. 'sz' → logprob: -18.375017166137695
    10. '(buf' → logprob: -19.000017166137695

Token 379: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1426972597837448
    2. ' +' → logprob: -2.017697334289551
    3. '()+' → logprob: -12.01769733428955
    4. '+
' → logprob: -12.14269733428955
    5. ',' → logprob: -12.64269733428955
    6. ')' → logprob: -13.14269733428955
    7. ' +
' → logprob: -13.76769733428955
    8. '
' → logprob: -14.01769733428955
    9. '+,' → logprob: -14.51769733428955
    10. ' ' → logprob: -14.64269733428955

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012584768235683441
    2. '2' → logprob: -4.387584686279297
    3. ' ' → logprob: -9.637584686279297
    4. '3' → logprob: -12.012584686279297
    5. '   ' → logprob: -13.887584686279297
    6. '
' → logprob: -14.012584686279297
    7. '4' → logprob: -14.887584686279297
    8. '10' → logprob: -15.387584686279297
    9. '11' → logprob: -15.762584686279297
    10. '  ' → logprob: -15.825084686279297

Token 381: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010342379100620747
    2. '2' → logprob: -6.876034259796143
    3. ' ' → logprob: -13.751033782958984
    4. '3' → logprob: -15.376033782958984
    5. '   ' → logprob: -17.001033782958984
    6. '10' → logprob: -17.063533782958984
    7. '
' → logprob: -17.188533782958984
    8. '4' → logprob: -17.188533782958984
    9. '  ' → logprob: -18.188533782958984
    10. '```' → logprob: -18.376033782958984

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006166507955640554
    2. ',d' → logprob: -7.500616550445557
    3. 'dtype' → logprob: -10.000617027282715
    4. ' ,' → logprob: -11.000617027282715
    5. '(dtype' → logprob: -14.250617027282715
    6. ')' → logprob: -15.375617027282715
    7. '(),' → logprob: -15.500617027282715
    8. ' dtype' → logprob: -15.625617027282715
    9. '[],' → logprob: -16.2506160736084
    10. '   ' → logprob: -16.2506160736084

Token 383: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.029754776507616043
    2. ' dtype' → logprob: -3.529754877090454
    3. '   ' → logprob: -12.779754638671875
    4. 'np' → logprob: -14.654754638671875
    5. '(dtype' → logprob: -15.029754638671875
    6. '    ' → logprob: -15.404754638671875
    7. '     ' → logprob: -15.904754638671875
    8. '  ' → logprob: -16.404754638671875
    9. '.dtype' → logprob: -16.404754638671875
    10. ' ' → logprob: -16.654754638671875

Token 384: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -1.8624639324116288e-06
    2. 'np' → logprob: -14.375001907348633
    3. '(np' → logprob: -14.500001907348633
    4. '[np' → logprob: -14.750001907348633
    5. ' =' → logprob: -16.375001907348633
    6. ',np' → logprob: -16.375001907348633
    7. '=int' → logprob: -16.750001907348633
    8. '=' → logprob: -16.875001907348633
    9. ' np' → logprob: -18.500001907348633
    10. '   ' → logprob: -19.375001907348633

Token 385: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.005253087729215622
    2. 'int' → logprob: -5.255253314971924
    3. 'np' → logprob: -11.380252838134766
    4. '.uint' → logprob: -12.005252838134766
    5. '=int' → logprob: -13.505252838134766
    6. ' int' → logprob: -16.255252838134766
    7. '[int' → logprob: -16.630252838134766
    8. ',int' → logprob: -16.880252838134766
    9. '=np' → logprob: -17.005252838134766
    10. '   ' → logprob: -17.505252838134766

Token 386: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -3.7697225252486533e-06
    2. 'int' → logprob: -12.500003814697266
    3. 'array' → logprob: -18.625003814697266
    4. 't' → logprob: -19.000003814697266
    5. 'uint' → logprob: -19.125003814697266
    6. '8' → logprob: -19.750003814697266
    7. '6' → logprob: -19.875003814697266
    8. 'p' → logprob: -20.000003814697266
    9. 'import' → logprob: -20.625003814697266
    10. 'c' → logprob: -20.625003814697266

Token 387: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029795613139867783
    2. ')
' → logprob: -3.5297956466674805
    3. '   ' → logprob: -10.15479564666748
    4. ')
' → logprob: -12.27979564666748
    5. ')

' → logprob: -13.77979564666748
    6. '<|end|>' → logprob: -15.52979564666748
    7. ' )' → logprob: -16.529794692993164
    8. '),' → logprob: -16.779794692993164
    9. '
' → logprob: -16.904794692993164
    10. ' ' → logprob: -17.154794692993164

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5159087777137756
    2. '<|end|>' → logprob: -1.5159087181091309
    3. ' for' → logprob: -3.015908718109131
    4. '+' → logprob: -3.015908718109131
    5. ')' → logprob: -3.140908718109131
    6. '[' → logprob: -4.890908718109131
    7. '```' → logprob: -5.265908718109131
    8. ' ' → logprob: -5.265908718109131
    9. '	buff' → logprob: -5.890908718109131
    10. ' add' → logprob: -6.265908718109131

Token 389: ' add' (ID: 1147)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9311128854751587
    2. 'add' (adapté à ' add') → logprob: -0.9311128854751587
    3. 'for' → logprob: -1.5561128854751587
    4. ' for' → logprob: -7.306112766265869
    5. ' add' → logprob: -9.556113243103027
    6. '```' → logprob: -10.056113243103027
    7. '    
' → logprob: -12.181113243103027
    8. '  ' → logprob: -12.556113243103027
    9. '	add' → logprob: -12.556113243103027
    10. 'import' → logprob: -12.681113243103027

Token 390: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.043206311762332916
    2. '[' → logprob: -3.918206214904785
    3. '[:]' → logprob: -3.918206214904785
    4. '[:-' → logprob: -6.043206214904785
    5. '=' → logprob: -9.293206214904785
    6. ' =' → logprob: -10.418206214904785
    7. '+=' → logprob: -10.918206214904785
    8. '[...]' → logprob: -11.418206214904785
    9. ' +=' → logprob: -12.293206214904785
    10. '```' → logprob: -14.668206214904785

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13221310079097748
    2. ':' → logprob: -2.1322131156921387
    3. '0' → logprob: -5.757213115692139
    4. '2' → logprob: -6.882213115692139
    5. ':]' → logprob: -7.632213115692139
    6. ':-' → logprob: -7.757213115692139
    7. ':s' → logprob: -10.25721263885498
    8. ' :' → logprob: -10.50721263885498
    9. '
' → logprob: -11.00721263885498
    10. '[:-' → logprob: -11.63221263885498

Token 392: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.346453458070755
    2. ']' → logprob: -1.3464534282684326
    3. ':' → logprob: -3.4714534282684326
    4. ' :]' → logprob: -7.096453666687012
    5. ']=' → logprob: -8.096453666687012
    6. ']+=' → logprob: -9.346453666687012
    7. '...]' → logprob: -9.471453666687012
    8. ':add' → logprob: -9.471453666687012
    9. ' ]' → logprob: -9.971453666687012
    10. ' :' → logprob: -10.721453666687012

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.345146119594574
    2. '+=' → logprob: -1.3451461791992188
    3. '[:' → logprob: -4.095146179199219
    4. ' +=' → logprob: -5.220146179199219
    5. '[:]' → logprob: -5.345146179199219
    6. ' =' → logprob: -5.595146179199219
    7. '[' → logprob: -7.720146179199219
    8. ']+=' → logprob: -8.345146179199219
    9. '[:-' → logprob: -9.470146179199219
    10. '[...]' → logprob: -11.095146179199219

Token 394: ' buff' (ID: 19397)
  Prédit: 'buff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buff' → logprob: -0.010270669125020504
    2. '(buff' → logprob: -4.760270595550537
    3. ' buff' → logprob: -6.510270595550537
    4. 'fact' → logprob: -9.885271072387695
    5. 'np' → logprob: -10.010271072387695
    6. '	buff' → logprob: -11.010271072387695
    7. ' (' → logprob: -11.260271072387695
    8. '(' → logprob: -11.260271072387695
    9. 'buf' → logprob: -12.260271072387695
    10. '(np' → logprob: -12.260271072387695

Token 395: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1860230267047882
    2. ' +' → logprob: -2.311022996902466
    3. '*' → logprob: -3.311022996902466
    4. '[' → logprob: -4.686023235321045
    5. '[:-' → logprob: -4.686023235321045
    6. ' *' → logprob: -5.186023235321045
    7. '[:]' → logprob: -5.436023235321045
    8. '
' → logprob: -5.811023235321045
    9. '%' → logprob: -7.186023235321045
    10. '   ' → logprob: -7.436023235321045

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008235473185777664
    2. '
' → logprob: -5.383235454559326
    3. 'add' → logprob: -6.508235454559326
    4. 'for' → logprob: -7.758235454559326
    5. ' for' → logprob: -7.883235454559326
    6. '<|end|>' → logprob: -8.133235931396484
    7. '[' → logprob: -8.258235931396484
    8. '+' → logprob: -8.383235931396484
    9. '*' → logprob: -9.133235931396484
    10. 'return' → logprob: -9.633235931396484

Token 397: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.010813522152602673
    2. 'for' → logprob: -5.0108137130737305
    3. 'return' → logprob: -5.6358137130737305
    4. ' add' → logprob: -8.26081371307373
    5. '   ' → logprob: -10.01081371307373
    6. ' for' → logprob: -10.01081371307373
    7. '+' → logprob: -10.13581371307373
    8. '```' → logprob: -10.13581371307373
    9. '*' → logprob: -10.51081371307373
    10. '(add' → logprob: -11.26081371307373

Token 398: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.416526198387146
    2. '+=' → logprob: -1.416526198387146
    3. ' *=' → logprob: -1.791526198387146
    4. ' +=' → logprob: -1.916526198387146
    5. '*=' → logprob: -2.5415263175964355
    6. '=' → logprob: -3.1665263175964355
    7. '[:]' → logprob: -3.2915263175964355
    8. '[:-' → logprob: -4.0415263175964355
    9. ' =' → logprob: -5.0415263175964355
    10. ' %=' → logprob: -5.2915263175964355

Token 399: '1' (ID: 16)
  Prédit: ':-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.5265907049179077
    2. ':]' → logprob: -1.5265907049179077
    3. ':' → logprob: -1.7765907049179077
    4. '[:-' → logprob: -4.651590824127197
    5. '1' → logprob: -5.651590824127197
    6. ':%' → logprob: -5.776590824127197
    7. '%' → logprob: -6.026590824127197
    8. ' :-' → logprob: -7.276590824127197
    9. ':)' → logprob: -7.401590824127197
    10. '2' → logprob: -7.401590824127197

Token 400: ']' (ID: 60)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005268189124763012
    2. ']' → logprob: -8.000526428222656
    3. ':' → logprob: -9.000526428222656
    4. ' :]' → logprob: -10.250526428222656
    5. ':-' → logprob: -11.750526428222656
    6. '[:]' → logprob: -11.875526428222656
    7. '[' → logprob: -12.125526428222656
    8. ':].' → logprob: -12.500526428222656
    9. ']+=' → logprob: -13.125526428222656
    10. '[:-' → logprob: -13.250526428222656

Token 401: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4005824625492096
    2. '*=' → logprob: -1.5255824327468872
    3. '=' → logprob: -2.6505825519561768
    4. ' +=' → logprob: -3.9005825519561768
    5. ' *=' → logprob: -4.150582313537598
    6. ':' → logprob: -6.525582313537598
    7. '[:]' → logprob: -6.900582313537598
    8. '*' → logprob: -7.025582313537598
    9. ']+=' → logprob: -7.025582313537598
    10. '[' → logprob: -7.650582313537598

Token 402: ' -' (ID: 533)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.007745274808257818
    2. '(' → logprob: -5.632745265960693
    3. 'add' → logprob: -6.632745265960693
    4. '0' → logprob: -6.632745265960693
    5. '1' → logprob: -6.757745265960693
    6. '(buff' → logprob: -9.132745742797852
    7. '2' → logprob: -9.757745742797852
    8. '(np' → logprob: -10.257745742797852
    9. '((' → logprob: -10.257745742797852
    10. ' (' → logprob: -10.757745742797852

Token 403: ' int' (ID: 677)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.06237511336803436
    2. '(add' → logprob: -3.687375068664551
    3. '1' → logprob: -4.062375068664551
    4. ' add' → logprob: -4.187375068664551
    5. 'buff' → logprob: -7.437375068664551
    6. '2' → logprob: -7.437375068664551
    7. ' (' → logprob: -7.687375068664551
    8. '(' → logprob: -8.06237506866455
    9. '(buff' → logprob: -8.06237506866455
    10. 'int' → logprob: -8.68737506866455

Token 404: '(np' (ID: 21997)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.13910099864006042
    2. '(buff' → logprob: -2.139101028442383
    3. '(' → logprob: -4.639101028442383
    4. '(mod' → logprob: -7.389101028442383
    5. '(M' → logprob: -7.514101028442383
    6. '(True' → logprob: -7.639101028442383
    7. 'add' → logprob: -8.764101028442383
    8. '(not' → logprob: -9.014101028442383
    9. '((' → logprob: -9.139101028442383
    10. '(False' → logprob: -9.389101028442383

Token 405: '.sum' (ID: 35381)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9614744186401367
    2. 'all' → logprob: -2.3364744186401367
    3. '64' → logprob: -2.3364744186401367
    4. 'bool' → logprob: -2.4614744186401367
    5. 'mod' → logprob: -2.7114744186401367
    6. 'add' → logprob: -2.9614744186401367
    7. 'not' → logprob: -3.8364744186401367
    8. '(abs' → logprob: -3.8364744186401367
    9. '1' → logprob: -4.086474418640137
    10. 'is' → logprob: -4.211474418640137

Token 406: '(buff' (ID: 89821)
  Prédit: '(buff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buff' → logprob: -0.04350481182336807
    2. '(add' → logprob: -3.1685047149658203
    3. '(np' → logprob: -8.54350471496582
    4. '((' → logprob: -9.41850471496582
    5. 'add' → logprob: -9.79350471496582
    6. '(' → logprob: -9.79350471496582
    7. ')' → logprob: -9.91850471496582
    8. 'buff' → logprob: -10.54350471496582
    9. '(abs' → logprob: -11.29350471496582
    10. '(buffer' → logprob: -11.91850471496582

Token 407: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04867582395672798
    2. ')' → logprob: -3.798675775527954
    3. '())' → logprob: -4.673676013946533
    4. '()' → logprob: -4.798676013946533
    5. '()[' → logprob: -5.423676013946533
    6. ')%' → logprob: -6.923676013946533
    7. '))' → logprob: -7.048676013946533
    8. '()))' → logprob: -7.298676013946533
    9. '()%' → logprob: -8.548675537109375
    10. '%' → logprob: -9.298675537109375

Token 408: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0022874027490615845
    2. 'np' → logprob: -7.1272873878479
    3. ' fact' → logprob: -7.5022873878479
    4. 'F' → logprob: -8.002287864685059
    5. 'factor' → logprob: -8.127287864685059
    6. '(np' → logprob: -9.252287864685059
    7. '(' → logprob: -10.377287864685059
    8. ' np' → logprob: -10.627287864685059
    9. 'f' → logprob: -11.002287864685059
    10. '(f' → logprob: -11.002287864685059

Token 409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'fact' → logprob: -24.5
    3. '[' → logprob: -24.75
    4. '２' → logprob: -25.125
    5. '
' → logprob: -25.75
    6. '```' → logprob: -26.0
    7. '₂' → logprob: -26.125
    8. '۲' → logprob: -26.875
    9. 'or' → logprob: -26.875
    10. 'act' → logprob: -28.125

Token 410: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.40665119886398315
    2. '[:-' → logprob: -1.656651258468628
    3. '[' → logprob: -2.031651258468628
    4. ')' → logprob: -4.906651020050049
    5. '))' → logprob: -5.656651020050049
    6. '[np' → logprob: -6.906651020050049
    7. '(' → logprob: -9.281651496887207
    8. '(np' → logprob: -9.406651496887207
    9. '[::-' → logprob: -9.906651496887207
    10. '[-' → logprob: -10.906651496887207

Token 411: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.015135363675653934
    2. '1' → logprob: -5.140135288238525
    3. ':' → logprob: -5.390135288238525
    4. 'len' → logprob: -5.765135288238525
    5. '(sz' → logprob: -7.015135288238525
    6. ' sz' → logprob: -9.015135765075684
    7. '2' → logprob: -9.140135765075684
    8. '-' → logprob: -9.640135765075684
    9. '(' → logprob: -9.640135765075684
    10. ':-' → logprob: -9.765135765075684

Token 412: ' +' (ID: 659)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.021825142204761505
    2. '+' → logprob: -4.271825313568115
    3. '])' → logprob: -6.021825313568115
    4. ' sz' → logprob: -6.271825313568115
    5. '1' → logprob: -6.646825313568115
    6. '(sz' → logprob: -6.771825313568115
    7. ']))' → logprob: -8.646824836730957
    8. '_sz' → logprob: -8.896824836730957
    9. '.sz' → logprob: -8.896824836730957
    10. '[:' → logprob: -9.396824836730957

Token 413: ' ' (ID: 220)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.21784250438213348
    2. '1' → logprob: -1.71784245967865
    3. '(sz' → logprob: -4.2178425788879395
    4. ' sz' → logprob: -7.5928425788879395
    5. '(' → logprob: -7.9678425788879395
    6. 'len' → logprob: -8.092842102050781
    7. '2' → logprob: -8.967842102050781
    8. ']' → logprob: -9.592842102050781
    9. '   ' → logprob: -10.092842102050781
    10. ' ' → logprob: -10.092842102050781

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4766135513782501
    2. 'sz' → logprob: -0.9766135215759277
    3. '(sz' → logprob: -6.226613521575928
    4. '
' → logprob: -8.976613998413086
    5. ' sz' → logprob: -9.351613998413086
    6. '2' → logprob: -9.351613998413086
    7. '(' → logprob: -9.726613998413086
    8. ']' → logprob: -9.851613998413086
    9. 'len' → logprob: -9.851613998413086
    10. '])' → logprob: -10.851613998413086

Token 415: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.14224475622177124
    2. ']))' → logprob: -2.267244815826416
    3. ']' → logprob: -3.767244815826416
    4. '[:' → logprob: -6.142244815826416
    5. '][:' → logprob: -6.642244815826416
    6. ']))
' → logprob: -7.517244815826416
    7. '][' → logprob: -8.142244338989258
    8. '(' → logprob: -8.142244338989258
    9. '])))' → logprob: -8.142244338989258
    10. '[' → logprob: -8.642244338989258

Token 416: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004904500674456358
    2. '[' → logprob: -6.004904270172119
    3. ')%' → logprob: -6.879904270172119
    4. '))' → logprob: -7.379904270172119
    5. '%' → logprob: -7.504904270172119
    6. ' )' → logprob: -9.504904747009277
    7. ' %' → logprob: -10.254904747009277
    8. '[::-' → logprob: -10.504904747009277
    9. ')
' → logprob: -10.879904747009277
    10. '   ' → logprob: -11.379904747009277

Token 417: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.107425062713446e-06
    2. ' MOD' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.37500762939453
    4. '
' → logprob: -18.75000762939453
    5. '.MOD' → logprob: -19.00000762939453
    6. ' ' → logprob: -19.62500762939453
    7. '_MOD' → logprob: -20.00000762939453
    8. 'MO' → logprob: -20.25000762939453
    9. '
' → logprob: -20.37500762939453
    10. ')' → logprob: -20.50000762939453

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. ' )' → logprob: -10.500076293945312
    3. ')
' → logprob: -10.875076293945312
    4. '   ' → logprob: -11.375076293945312
    5. '%' → logprob: -12.250076293945312
    6. ')%' → logprob: -12.375076293945312
    7. '[' → logprob: -12.500076293945312
    8. '+' → logprob: -13.250076293945312
    9. '))' → logprob: -14.000076293945312
    10. ' ' → logprob: -14.125076293945312

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008091482450254261
    2. ' return' → logprob: -7.750809192657471
    3. '
' → logprob: -8.500808715820312
    4. '<|end|>' → logprob: -9.250808715820312
    5. 'return' → logprob: -10.000808715820312
    6. '	return' → logprob: -11.250808715820312
    7. ',' → logprob: -12.750808715820312
    8. '[' → logprob: -12.875808715820312
    9. ')' → logprob: -12.875808715820312
    10. '    
' → logprob: -13.125808715820312

Token 420: ' add' (ID: 1147)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44523996114730835
    2. '+' → logprob: -1.6952400207519531
    3. ' return' → logprob: -2.195240020751953
    4. '%' → logprob: -3.695240020751953
    5. '<|end|>' → logprob: -4.570240020751953
    6. ' +' → logprob: -4.820240020751953
    7. ')' → logprob: -5.195240020751953
    8. 'return' → logprob: -5.445240020751953
    9. ' ' → logprob: -5.695240020751953
    10. ' add' → logprob: -6.570240020751953

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22383178770542145
    2. '%=' → logprob: -1.9738317728042603
    3. ' %=' → logprob: -3.22383189201355
    4. '%' → logprob: -3.97383189201355
    5. '[:]' → logprob: -6.223831653594971
    6. '=' → logprob: -8.098832130432129
    7. '[:' → logprob: -8.223832130432129
    8. '   ' → logprob: -8.723832130432129
    9. '```' → logprob: -8.973832130432129
    10. 'return' → logprob: -10.473832130432129

Token 422: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03241623938083649
    2. '1' → logprob: -3.532416343688965
    3. ':]' → logprob: -6.907416343688965
    4. '0' → logprob: -7.157416343688965
    5. ':' → logprob: -7.157416343688965
    6. ']' → logprob: -9.907416343688965
    7. '   ' → logprob: -11.282416343688965
    8. ' ' → logprob: -11.532416343688965
    9. '
' → logprob: -12.282416343688965
    10. ' :]' → logprob: -12.532416343688965

Token 423: ']' (ID: 60)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.22654759883880615
    2. ']' → logprob: -1.6015475988388062
    3. ' :]' → logprob: -7.226547718048096
    4. ']+=' → logprob: -8.976547241210938
    5. '+' → logprob: -9.101547241210938
    6. '+]' → logprob: -10.101547241210938
    7. ' ]' → logprob: -10.226547241210938
    8. '[' → logprob: -10.851547241210938
    9. ':' → logprob: -10.976547241210938
    10. '...]' → logprob: -11.476547241210938

Token 424: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -1.134300947189331
    2. '%' → logprob: -1.259300947189331
    3. '%=' → logprob: -1.259300947189331
    4. '=' → logprob: -2.384300947189331
    5. '+=' → logprob: -4.38430118560791
    6. ']' → logprob: -6.00930118560791
    7. '*=' → logprob: -7.25930118560791
    8. ')' → logprob: -7.63430118560791
    9. '[' → logprob: -7.75930118560791
    10. ' =' → logprob: -8.00930118560791

Token 425: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '_MOD' → logprob: -19.125017166137695
    4. '.MOD' → logprob: -20.750017166137695
    5. 'MO' → logprob: -22.875017166137695
    6. 'mod' → logprob: -24.000017166137695
    7. '   ' → logprob: -24.125017166137695
    8. ' ' → logprob: -24.125017166137695
    9. 'Mod' → logprob: -25.125017166137695
    10. 'MD' → logprob: -25.875017166137695

Token 426: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04494661092758179
    2. '<|end|>' → logprob: -3.1699466705322266
    3. ' return' → logprob: -8.044946670532227
    4. ' ' → logprob: -8.294946670532227
    5. ')' → logprob: -8.294946670532227
    6. '+' → logprob: -8.669946670532227
    7. '[' → logprob: -8.919946670532227
    8. '    
' → logprob: -9.294946670532227
    9. ' ' → logprob: -9.294946670532227
    10. '    ' → logprob: -9.419946670532227

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00869623851031065
    2. 'return' → logprob: -4.75869607925415
    3. 'add' → logprob: -9.758696556091309
    4. ' return' → logprob: -10.758696556091309
    5. 'for' → logprob: -13.758696556091309
    6. '    
' → logprob: -14.758696556091309
    7. '  ' → logprob: -15.258696556091309
    8. '```' → logprob: -15.508696556091309
    9. '
' → logprob: -15.633696556091309
    10. '	return' → logprob: -15.758696556091309

Token 428: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007191508077085018
    2. '   ' → logprob: -5.0071916580200195
    3. ' return' → logprob: -8.25719165802002
    4. 'for' → logprob: -8.75719165802002
    5. 'add' → logprob: -10.00719165802002
    6. '<|end|>' → logprob: -12.38219165802002
    7. '	return' → logprob: -13.00719165802002
    8. '```' → logprob: -14.00719165802002
    9. 'eturn' → logprob: -14.13219165802002
    10. '#' → logprob: -14.13219165802002

Token 429: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0009120595059357584
    2. ' add' → logprob: -7.000912189483643
    3. '(add' → logprob: -14.500911712646484
    4. '	add' → logprob: -18.375911712646484
    5. ' ' → logprob: -20.250911712646484
    6. ')add' → logprob: -21.000911712646484
    7. '   ' → logprob: -21.625911712646484
    8. '_add' → logprob: -21.875911712646484
    9. '  ' → logprob: -22.125911712646484
    10. '.add' → logprob: -22.250911712646484

Token 430: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030287250876426697
    2. '#' → logprob: -3.655287265777588
    3. '<|end|>' → logprob: -6.030287265777588
    4. '```' → logprob: -7.905287265777588
    5. 'for' → logprob: -8.03028678894043
    6. ')' → logprob: -8.28028678894043
    7. '[' → logprob: -9.78028678894043
    8. 'visited' → logprob: -9.78028678894043
    9. '...' → logprob: -9.90528678894043
    10. 'import' → logprob: -10.03028678894043

Token 432: ' Style' (ID: 17602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29677221179008484
    2. 'visited' → logprob: -1.7967722415924072
    3. 'dp' → logprob: -3.1717722415924072
    4. 'sys' → logprob: -3.6717722415924072
    5. 'memo' → logprob: -5.171772003173828
    6. 'vis' → logprob: -5.421772003173828
    7. '#' → logprob: -5.796772003173828
    8. 'seen' → logprob: -6.046772003173828
    9. 'buff' → logprob: -6.421772003173828
    10. 'import' → logprob: -7.171772003173828

Token 433: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08787523210048676
    2. ' def' → logprob: -3.2128751277923584
    3. '"' → logprob: -4.0878753662109375
    4. 'dfs' → logprob: -4.4628753662109375
    5. ' dfs' → logprob: -5.8378753662109375
    6. ' "' → logprob: -5.9628753662109375
    7. '#' → logprob: -6.0878753662109375
    8. 'de' → logprob: -6.2128753662109375
    9. ' =' → logprob: -7.3378753662109375
    10. 'd' → logprob: -7.4628753662109375

Token 434: 'urs' (ID: 1628)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.552836000919342
    2. 'urs' → logprob: -0.927836000919342
    3. 'ursion' → logprob: -4.177835941314697
    4. 'def' → logprob: -4.427835941314697
    5. 'ur' → logprob: -6.677835941314697
    6. 'rs' → logprob: -8.302836418151855
    7. 's' → logprob: -9.177836418151855
    8. '#' → logprob: -9.677836418151855
    9. 'usr' → logprob: -10.177836418151855
    10. 'urrent' → logprob: -10.302836418151855

Token 435: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6481544375419617
    2. 'ive' → logprob: -1.6481544971466064
    3. 'if' → logprob: -1.7731544971466064
    4. 's' → logprob: -2.2731544971466064
    5. 'ent' → logprob: -5.898154258728027
    6. 'ion' → logprob: -6.273154258728027
    7. 'ursive' → logprob: -6.273154258728027
    8. '#' → logprob: -6.398154258728027
    9. 'f' → logprob: -6.523154258728027
    10. 'ifs' → logprob: -8.148154258728027

Token 436: '/' (ID: 14)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006244684103876352
    2. 'visited' → logprob: -5.256244659423828
    3. 'sys' → logprob: -7.631244659423828
    4. 'dp' → logprob: -7.756244659423828
    5. 'import' → logprob: -9.631244659423828
    6. 'from' → logprob: -11.381244659423828
    7. 'dfs' → logprob: -12.631244659423828
    8. 'vis' → logprob: -12.881244659423828
    9. ' visited' → logprob: -13.131244659423828
    10. 'buff' → logprob: -13.256244659423828

Token 437: 'imp' (ID: 9230)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006473537068814039
    2. 'dfs' → logprob: -5.381473541259766
    3. ' def' → logprob: -6.881473541259766
    4. 'visited' → logprob: -8.506473541259766
    5. 'sys' → logprob: -9.131473541259766
    6. 'iter' → logprob: -9.256473541259766
    7. 'dé' → logprob: -9.256473541259766
    8. '
' → logprob: -9.506473541259766
    9. 'depth' → logprob: -9.756473541259766
    10. 'vis' → logprob: -10.881473541259766

Token 438: 'ér' (ID: 2156)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07461144775152206
    2. 'ort' → logprob: -2.9496114253997803
    3. 'ur' → logprob: -4.199611663818359
    4. 'ro' → logprob: -6.574611663818359
    5. ' def' → logprob: -7.324611663818359
    6. 'r' → logprob: -7.699611663818359
    7. 'licit' → logprob: -7.949611663818359
    8. 'l' → logprob: -7.949611663818359
    9. 'lement' → logprob: -8.69961166381836
    10. 'ursive' → logprob: -8.69961166381836

Token 439: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0013691653730347753
    2. 'ative' → logprob: -6.626368999481201
    3. 'def' → logprob: -11.25136947631836
    4. '#' → logprob: -11.62636947631836
    5. 'atifs' → logprob: -12.25136947631836
    6. 'ativement' → logprob: -12.25136947631836
    7. 't' → logprob: -13.00136947631836
    8. 'ativ' → logprob: -13.37636947631836
    9. 'act' → logprob: -13.37636947631836
    10. '```' → logprob: -14.00136947631836

Token 440: ' combin' (ID: 25307)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000331055314745754
    2. 'visited' → logprob: -8.375330924987793
    3. 'sys' → logprob: -10.000330924987793
    4. 'import' → logprob: -10.875330924987793
    5. '
' → logprob: -11.250330924987793
    6. 'from' → logprob: -11.875330924987793
    7. 'de' → logprob: -12.625330924987793
    8. 'dp' → logprob: -13.250330924987793
    9. '#' → logprob: -13.500330924987793
    10. ':def' → logprob: -13.625330924987793

Token 441: 'é' (ID: 377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2300657331943512
    2. 'atif' → logprob: -1.6050657033920288
    3. 'ative' → logprob: -5.480065822601318
    4. 'ativement' → logprob: -8.60506534576416
    5. 'itif' → logprob: -9.98006534576416
    6. '#' → logprob: -9.98006534576416
    7. '
' → logprob: -10.73006534576416
    8. 'é' → logprob: -10.73006534576416
    9. 'atifs' → logprob: -10.73006534576416
    10. 'ent' → logprob: -10.85506534576416

Token 442: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02152358926832676
    2. 'visited' → logprob: -4.021523475646973
    3. 'sys' → logprob: -6.521523475646973
    4. 'dp' → logprob: -7.021523475646973
    5. 'import' → logprob: -7.521523475646973
    6. 'from' → logprob: -8.021523475646973
    7. 'vis' → logprob: -10.521523475646973
    8. 'buff' → logprob: -10.646523475646973
    9. 'memo' → logprob: -10.646523475646973
    10. 'stack' → logprob: -11.146523475646973

Token 443: 'def' (ID: 1314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.26836511492729187
    2. 'sys' → logprob: -1.7683651447296143
    3. 'def' → logprob: -2.7683651447296143
    4. 'dp' → logprob: -7.018364906311035
    5. 'vis' → logprob: -7.643364906311035
    6. 'from' → logprob: -8.143364906311035
    7. 'buff' → logprob: -9.268364906311035
    8. 'visit' → logprob: -9.643364906311035
    9. 'import' → logprob: -9.768364906311035
    10. 'memo' → logprob: -10.393364906311035

Token 444: ' explorer' (ID: 73961)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.13428311049938202
    2. ' dfs' → logprob: -2.3842830657958984
    3. 'dp' → logprob: -4.134283065795898
    4. 'expl' → logprob: -5.509283065795898
    5. 'calcul' → logprob: -5.759283065795898
    6. 'solve' → logprob: -6.509283065795898
    7. 'rec' → logprob: -6.759283065795898
    8. 'de' → logprob: -7.009283065795898
    9. ' calcul' → logprob: -7.134283065795898
    10. 'df' → logprob: -7.259283065795898

Token 445: '(no' (ID: 67114)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.9846962690353394
    2. '(s' → logprob: -1.2346962690353394
    3. '(node' → logprob: -1.4846962690353394
    4. '(no' → logprob: -2.484696388244629
    5. '(v' → logprob: -4.109696388244629
    6. '(x' → logprob: -5.609696388244629
    7. '(n' → logprob: -5.859696388244629
    8. '(' → logprob: -6.234696388244629
    9. '(r' → logprob: -8.234696388244629
    10. '(root' → logprob: -9.109696388244629

Token 446: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008125508204102516
    2. 'ud' → logprob: -4.883125305175781
    3. 'de' → logprob: -7.758125305175781
    4. 'd' → logprob: -10.133125305175781
    5. '
' → logprob: -11.633125305175781
    6. ')' → logprob: -11.758125305175781
    7. 'eu' → logprob: -12.008125305175781
    8. '#' → logprob: -12.383125305175781
    9. 'u' → logprob: -12.633125305175781
    10. 'et' → logprob: -12.758125305175781

Token 447: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -8.061054359131958e-06
    2. 'd' → logprob: -12.375007629394531
    3. 'u' → logprob: -13.125007629394531
    4. ' ud' → logprob: -14.250007629394531
    5. '#' → logprob: -14.375007629394531
    6. 'e' → logprob: -15.500007629394531
    7. '```' → logprob: -16.62500762939453
    8. '{}' → logprob: -17.00000762939453
    9. 'uds' → logprob: -17.25000762939453
    10. ')' → logprob: -17.37500762939453

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ',node' → logprob: -12.375009536743164
    3. ' ,' → logprob: -13.000009536743164
    4. ',
' → logprob: -13.750009536743164
    5. ',n' → logprob: -14.625009536743164
    6. ',u' → logprob: -14.750009536743164
    7. ',parent' → logprob: -15.250009536743164
    8. ',d' → logprob: -15.750009536743164
    9. ',de' → logprob: -16.250009536743164
    10. ',b' → logprob: -16.375009536743164

Token 449: ' parent' (ID: 5980)
  Prédit: 'pere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pere' → logprob: -0.21760661900043488
    2. 'parent' → logprob: -1.7176066637039185
    3. ' parent' → logprob: -4.967606544494629
    4. 'p' → logprob: -5.842606544494629
    5. 'par' → logprob: -5.842606544494629
    6. 'pre' → logprob: -6.842606544494629
    7. ' pere' → logprob: -7.092606544494629
    8. 'pare' → logprob: -8.092606544494629
    9. 'prec' → logprob: -8.592606544494629
    10. 'no' → logprob: -8.717606544494629

Token 450: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12061095237731934
    2. '):' → logprob: -2.2456109523773193
    3. '):
' → logprob: -4.870611190795898
    4. ' ,' → logprob: -10.120611190795898
    5. '):
' → logprob: -11.245611190795898
    6. '   ' → logprob: -11.620611190795898
    7. ')' → logprob: -11.995611190795898
    8. ',
' → logprob: -12.245611190795898
    9. ' ):' → logprob: -12.495611190795898
    10. ':' → logprob: -12.495611190795898

Token 451: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002629281021654606
    2. '):
' → logprob: -6.002629280090332
    3. ',' → logprob: -8.877629280090332
    4. ')' → logprob: -11.752629280090332
    5. '):
' → logprob: -12.752629280090332
    6. '   ' → logprob: -13.252629280090332
    7. ':' → logprob: -14.127629280090332
    8. ' ):' → logprob: -14.252629280090332
    9. '):

' → logprob: -15.752629280090332
    10. ' ' → logprob: -18.00263023376465

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011216523125767708
    2. 'buff' → logprob: -5.136216640472412
    3. 'dp' → logprob: -6.261216640472412
    4. ' buff' → logprob: -7.386216640472412
    5. 'd' → logprob: -7.386216640472412
    6. 'data' → logprob: -7.886216640472412
    7. 'children' → logprob: -7.886216640472412
    8. ' dp' → logprob: -8.386216163635254
    9. 'res' → logprob: -8.636216163635254
    10. 'sub' → logprob: -8.761216163635254

Token 453: ' ensemble' (ID: 33081)
  Prédit: 'buff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buff' → logprob: -0.5291555523872375
    2. 'dp' → logprob: -2.0291554927825928
    3. 'd' → logprob: -2.5291554927825928
    4. 'res' → logprob: -2.6541554927825928
    5. 'data' → logprob: -3.2791554927825928
    6. 'ret' → logprob: -4.154155731201172
    7. 'result' → logprob: -4.279155731201172
    8. 'rep' → logprob: -4.654155731201172
    9. 'val' → logprob: -5.029155731201172
    10. '   ' → logprob: -5.404155731201172

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759512782096863
    2. ' =' → logprob: -0.8259512782096863
    3. '   ' → logprob: -12.70095157623291
    4. ' ' → logprob: -12.82595157623291
    5. '=np' → logprob: -13.07595157623291
    6. '=[]' → logprob: -13.45095157623291
    7. '=[' → logprob: -14.20095157623291
    8. ',' → logprob: -15.20095157623291
    9. ' ' → logprob: -15.32595157623291
    10. '[' → logprob: -15.32595157623291

Token 455: ' None' (ID: 4662)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.00024299313372466713
    2. ' np' → logprob: -9.000243186950684
    3. '[' → logprob: -9.250243186950684
    4. '[np' → logprob: -10.750243186950684
    5. '(np' → logprob: -14.375243186950684
    6. '1' → logprob: -15.000243186950684
    7. '{' → logprob: -15.250243186950684
    8. ' [' → logprob: -15.625243186950684
    9. 'numpy' → logprob: -15.875243186950684
    10. '   ' → logprob: -15.875243186950684

Token 456: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.766975462436676
    2. '   ' → logprob: -0.891975462436676
    3. '<|end|>' → logprob: -2.1419754028320312
    4. '    
' → logprob: -6.766975402832031
    5. ',' → logprob: -6.766975402832031
    6. '[' → logprob: -6.891975402832031
    7. '<|end|>' → logprob: -7.016975402832031
    8. 'def' → logprob: -7.266975402832031
    9. ' =' → logprob: -7.516975402832031
    10. ')' → logprob: -7.516975402832031

Token 457: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005776273086667061
    2. 'buff' → logprob: -5.630776405334473
    3. ' for' → logprob: -6.630776405334473
    4. 'if' → logprob: -7.630776405334473
    5. '   ' → logprob: -8.880776405334473
    6. 'acc' → logprob: -10.130776405334473
    7. 'dp' → logprob: -10.130776405334473
    8. 'tmp' → logprob: -10.630776405334473
    9. 'children' → logprob: -10.755776405334473
    10. 'result' → logprob: -11.505776405334473

Token 459: ' suite' (ID: 13800)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.36935174465179443
    2. 'dfs' → logprob: -1.2443517446517944
    3. ' visiter' → logprob: -4.619351863861084
    4. 'expl' → logprob: -6.244351863861084
    5. ' visite' → logprob: -6.619351863861084
    6. 're' → logprob: -6.744351863861084
    7. ' explorer' → logprob: -7.244351863861084
    8. 'vis' → logprob: -7.744351863861084
    9. ' helper' → logprob: -7.744351863861084
    10. ' post' → logprob: -8.119351387023926

Token 460: '(f' (ID: 1526)
  Prédit: '(no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(no' → logprob: -0.07544341683387756
    2. '(s' → logprob: -4.075443267822266
    3. '(n' → logprob: -4.075443267822266
    4. '(node' → logprob: -4.575443267822266
    5. '(vo' → logprob: -4.950443267822266
    6. '(' → logprob: -5.700443267822266
    7. '(child' → logprob: -5.700443267822266
    8. '(d' → logprob: -6.200443267822266
    9. '(v' → logprob: -6.325443267822266
    10. '(cur' → logprob: -6.450443267822266

Token 461: 'ils' (ID: 5879)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.9347511529922485
    2. 'n' → logprob: -2.184751033782959
    3. 'unction' → logprob: -2.184751033782959
    4. 'or' → logprob: -2.809751033782959
    5. '):
' → logprob: -2.809751033782959
    6. 'unc' → logprob: -2.934751033782959
    7. 'rom' → logprob: -3.184751033782959
    8. 'un' → logprob: -3.309751033782959
    9. '):' → logprob: -3.434751033782959
    10. 't' → logprob: -3.684751033782959

Token 462: '):
' (ID: 1883)
  Prédit: '(no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(no' → logprob: -0.17151114344596863
    2. '):' → logprob: -2.546511173248291
    3. ',' → logprob: -3.296511173248291
    4. '(node' → logprob: -3.671511173248291
    5. '(n' → logprob: -4.671511173248291
    6. '(f' → logprob: -5.796511173248291
    7. '(child' → logprob: -6.546511173248291
    8. '(' → logprob: -7.296511173248291
    9. '):
' → logprob: -7.296511173248291
    10. ',no' → logprob: -8.046510696411133

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001842609723098576
    2. '   ' → logprob: -7.376842498779297
    3. 'non' → logprob: -7.376842498779297
    4. ' for' → logprob: -8.751842498779297
    5. 'for' → logprob: -8.751842498779297
    6. ' non' → logprob: -8.751842498779297
    7. 'global' → logprob: -10.251842498779297
    8. 'if' → logprob: -10.876842498779297
    9. ' if' → logprob: -11.501842498779297
    10. '           ' → logprob: -11.876842498779297

Token 464: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.0557512603700161
    2. '       ' → logprob: -3.555751323699951
    3. '   ' → logprob: -4.305751323699951
    4. 'if' → logprob: -5.805751323699951
    5. ' non' → logprob: -5.930751323699951
    6. 'temp' → logprob: -6.430751323699951
    7. 'global' → logprob: -6.680751323699951
    8. 'child' → logprob: -6.680751323699951
    9. 'for' → logprob: -7.305751323699951
    10. 'tmp' → logprob: -7.930751323699951

Token 465: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -2.816093228830141e-06
    2. ' local' → logprob: -13.12500286102295
    3. 'locals' → logprob: -15.00000286102295
    4. '_local' → logprob: -15.62500286102295
    5. '(local' → logprob: -16.250001907348633
    6. 'l' → logprob: -16.875001907348633
    7. 'e' → logprob: -17.125001907348633
    8. 'locale' → logprob: -17.250001907348633
    9. '	local' → logprob: -17.375001907348633
    10. 'Local' → logprob: -17.500001907348633

Token 466: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.0017181389266625047
    2. ' ensemble' → logprob: -6.376718044281006
    3. 'ense' → logprob: -12.251718521118164
    4. '   ' → logprob: -12.376718521118164
    5. ' ' → logprob: -13.501718521118164
    6. 'en' → logprob: -13.626718521118164
    7. '  ' → logprob: -13.876718521118164
    8. 'ens' → logprob: -14.501718521118164
    9. ' ' → logprob: -14.751718521118164
    10. '	' → logprob: -14.876718521118164

Token 467: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9466376304626465
    2. ',' → logprob: -1.3216376304626465
    3. '
' → logprob: -1.4466376304626465
    4. '   ' → logprob: -2.3216376304626465
    5. '        
' → logprob: -5.5716376304626465
    6. '<|end|>' → logprob: -5.6966376304626465
    7. '<|end|>' → logprob: -7.6966376304626465
    8. '           ' → logprob: -7.6966376304626465
    9. '    
' → logprob: -7.8216376304626465
    10. '    ' → logprob: -7.9466376304626465

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057614315301179886
    2. '   ' → logprob: -3.432614326477051
    3. 'if' → logprob: -4.307614326477051
    4. 'non' → logprob: -5.557614326477051
    5. 'temp' → logprob: -6.432614326477051
    6. ' if' → logprob: -6.682614326477051
    7. 'for' → logprob: -6.807614326477051
    8. 'child' → logprob: -7.932614326477051
    9. 'global' → logprob: -8.05761432647705
    10. '           ' → logprob: -8.18261432647705

Token 469: ' bloc' (ID: 51218)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.7867806553840637
    2. 'if' → logprob: -1.036780595779419
    3. 'ensemble' → logprob: -2.661780595779419
    4. 'tmp' → logprob: -3.161780595779419
    5. 'temp' → logprob: -4.286780834197998
    6. 'd' → logprob: -4.286780834197998
    7. '   ' → logprob: -4.411780834197998
    8. 'child' → logprob: -4.661780834197998
    9. 'buff' → logprob: -5.411780834197998
    10. 'f' → logprob: -5.786780834197998

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09356653690338135
    2. '=' → logprob: -2.468566417694092
    3. '   ' → logprob: -6.093566417694092
    4. '       ' → logprob: -6.343566417694092
    5. ',' → logprob: -8.46856689453125
    6. '[' → logprob: -9.34356689453125
    7. '    ' → logprob: -10.09356689453125
    8. ' ' → logprob: -10.71856689453125
    9. '[:]' → logprob: -10.71856689453125
    10. '=[]' → logprob: -10.84356689453125

Token 471: ' explorer' (ID: 73961)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -0.8230258226394653
    2. 'expl' → logprob: -1.1980258226394653
    3. 'np' → logprob: -2.573025703430176
    4. 'aj' → logprob: -2.948025703430176
    5. ' fusion' → logprob: -3.198025703430176
    6. ' np' → logprob: -3.448025703430176
    7. '[' → logprob: -3.698025703430176
    8. ' explorer' → logprob: -3.948025703430176
    9. '{' → logprob: -5.698025703430176
    10. ' ajouter' → logprob: -5.698025703430176

Token 472: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'f' → logprob: -16.125001907348633
    4. '(
' → logprob: -19.000001907348633
    5. '	f' → logprob: -19.000001907348633
    6. ' (' → logprob: -19.750001907348633
    7. '(s' → logprob: -20.125001907348633
    8. '(fi' → logprob: -20.250001907348633
    9. '(fid' → logprob: -20.375001907348633
    10. '[f' → logprob: -20.375001907348633

Token 473: 'ils' (ID: 5879)
  Prédit: 'ils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ils' → logprob: -0.0006120019243098795
    2. 'ls' → logprob: -8.250612258911133
    3. 'il' → logprob: -8.250612258911133
    4. 's' → logprob: -10.375612258911133
    5. 'is' → logprob: -10.375612258911133
    6. '[' → logprob: -12.625612258911133
    7. 'us' → logprob: -12.750612258911133
    8. 'ois' → logprob: -12.875612258911133
    9. 'no' → logprob: -13.375612258911133
    10. 'os' → logprob: -13.375612258911133

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012090805917978287
    2. ',no' → logprob: -4.512090682983398
    3. '(no' → logprob: -7.137090682983398
    4. ' ,' → logprob: -8.637090682983398
    5. 'no' → logprob: -9.887090682983398
    6. ',n' → logprob: -12.512090682983398
    7. '   ' → logprob: -12.762090682983398
    8. ')' → logprob: -12.762090682983398
    9. ' no' → logprob: -12.762090682983398
    10. ',node' → logprob: -13.262090682983398

Token 475: ' noe' (ID: 49921)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -7.553032628493384e-05
    2. '   ' → logprob: -10.125075340270996
    3. ' no' → logprob: -11.250075340270996
    4. ' noe' → logprob: -11.250075340270996
    5. '	no' → logprob: -13.125075340270996
    6. '       ' → logprob: -13.375075340270996
    7. 'n' → logprob: -13.500075340270996
    8. 'No' → logprob: -13.625075340270996
    9. '    ' → logprob: -14.500075340270996
    10. '  ' → logprob: -15.000075340270996

Token 476: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -3.869639476761222e-05
    2. 'уд' → logprob: -11.000039100646973
    3. 'd' → logprob: -11.875039100646973
    4. 'u' → logprob: -13.500039100646973
    5. '

' → logprob: -14.125039100646973
    6. ' ud' → logprob: -14.250039100646973
    7. '   ' → logprob: -14.250039100646973
    8. ')' → logprob: -14.312539100646973
    9. 'nd' → logprob: -14.312539100646973
    10. 'udd' → logprob: -14.312539100646973

Token 477: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20144452154636383
    2. ')' → logprob: -1.7014445066452026
    3. ')
' → logprob: -11.326444625854492
    4. '       ' → logprob: -11.826444625854492
    5. '())
' → logprob: -12.326444625854492
    6. '   ' → logprob: -12.701444625854492
    7. '()' → logprob: -13.951444625854492
    8. ' )
' → logprob: -13.951444625854492
    9. '()
' → logprob: -14.451444625854492
    10. ')return' → logprob: -14.451444625854492

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0683681070804596
    2. '   ' → logprob: -3.8183681964874268
    3. ' if' → logprob: -4.443367958068848
    4. '<|end|>' → logprob: -4.443367958068848
    5. '
' → logprob: -4.568367958068848
    6. 'if' → logprob: -5.568367958068848
    7. ' for' → logprob: -6.318367958068848
    8. ')' → logprob: -6.443367958068848
    9. 'for' → logprob: -6.818367958068848
    10. '        
' → logprob: -7.318367958068848

Token 479: ' bloc' (ID: 51218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22497311234474182
    2. '       ' → logprob: -1.8499730825424194
    3. '   ' → logprob: -3.599973201751709
    4. ' if' → logprob: -4.599973201751709
    5. 'non' → logprob: -5.349973201751709
    6. 'ensemble' → logprob: -6.349973201751709
    7. 'global' → logprob: -8.97497272491455
    8. ' non' → logprob: -9.47497272491455
    9. 'for' → logprob: -10.34997272491455
    10. '  ' → logprob: -11.09997272491455

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3621973991394043
    2. ' =' → logprob: -1.3621973991394043
    3. 'if' → logprob: -3.8621973991394043
    4. ' if' → logprob: -4.237197399139404
    5. '+=' → logprob: -5.112197399139404
    6. '
' → logprob: -6.112197399139404
    7. ' +=' → logprob: -6.862197399139404
    8. '[' → logprob: -7.362197399139404
    9. 'def' → logprob: -7.612197399139404
    10. ')' → logprob: -8.362197875976562

Token 481: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.09351442754268646
    2. 'fusion' → logprob: -2.7185144424438477
    3. ' ajouter' → logprob: -3.9685144424438477
    4. ' fusion' → logprob: -5.468514442443848
    5. 'Ajouter' → logprob: -10.343514442443848
    6. ''aj' → logprob: -10.968514442443848
    7. 'addition' → logprob: -11.093514442443848
    8. ' ' → logprob: -11.593514442443848
    9. 'add' → logprob: -12.031014442443848
    10. ' aj' → logprob: -12.093514442443848

Token 482: '_are' (ID: 150240)
  Prédit: '_are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_are' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -11.625009536743164
    3. 'are' → logprob: -14.875009536743164
    4. '_ar' → logprob: -16.250009536743164
    5. '_add' → logprob: -17.500009536743164
    6. '_bloc' → logprob: -18.125009536743164
    7. '_is' → logprob: -19.500009536743164
    8. '```' → logprob: -19.625009536743164
    9. '\' → logprob: -19.875009536743164
    10. 'Are' → logprob: -20.125009536743164

Token 483: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -6.511406809295295e-06
    2. 'nte' → logprob: -13.375006675720215
    3. 'e' → logprob: -13.750006675720215
    4. 'tre' → logprob: -13.875006675720215
    5. 'de' → logprob: -14.375006675720215
    6. 'ute' → logprob: -14.625006675720215
    7. 'cte' → logprob: -14.625006675720215
    8. 'tes' → logprob: -14.875006675720215
    9. 're' → logprob: -15.500006675720215
    10. 'ste' → logprob: -15.875006675720215

Token 484: '(bl' (ID: 110427)
  Prédit: '(bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bl' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -11.00002670288086
    3. '(block' → logprob: -11.62502670288086
    4. '(br' → logprob: -14.87502670288086
    5. '((' → logprob: -16.50002670288086
    6. '(b' → logprob: -16.50002670288086
    7. '(buff' → logprob: -16.75002670288086
    8. '(blob' → logprob: -17.00002670288086
    9. ' (' → logprob: -17.25002670288086
    10. 'bloc' → logprob: -18.00002670288086

Token 485: 'oc' (ID: 432)
  Prédit: 'oc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oc' → logprob: -2.2723104848410003e-05
    2. 'ock' → logprob: -11.250022888183594
    3. 'c' → logprob: -13.250022888183594
    4. '[' → logprob: -13.750022888183594
    5. 'e' → logprob: -13.750022888183594
    6. 'ec' → logprob: -13.875022888183594
    7. '
' → logprob: -14.375022888183594
    8. '#' → logprob: -14.500022888183594
    9. 'o' → logprob: -14.625022888183594
    10. 'occ' → logprob: -14.750022888183594

Token 486: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14105729758739471
    2. ')' → logprob: -2.141057252883911
    3. '())
' → logprob: -4.39105749130249
    4. '())' → logprob: -7.14105749130249
    5. '()' → logprob: -7.76605749130249
    6. '()
' → logprob: -8.266057014465332
    7. '   ' → logprob: -8.891057014465332
    8. ')
' → logprob: -10.641057014465332
    9. ' )
' → logprob: -12.516057014465332
    10. '())
' → logprob: -14.391057014465332

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014352317666634917
    2. '   ' → logprob: -7.001435279846191
    3. '<|end|>' → logprob: -8.001435279846191
    4. '
' → logprob: -9.501435279846191
    5. 'bloc' → logprob: -10.626435279846191
    6. ',' → logprob: -10.876435279846191
    7. ' for' → logprob: -11.251435279846191
    8. '        
' → logprob: -11.376435279846191
    9. ')' → logprob: -11.751435279846191
    10. ' bloc' → logprob: -12.251435279846191

Token 488: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24870429933071136
    2. 'ensemble' → logprob: -1.9987043142318726
    3. 'if' → logprob: -2.623704195022583
    4. ' if' → logprob: -4.748704433441162
    5. '   ' → logprob: -5.998704433441162
    6. ' ensemble' → logprob: -7.373704433441162
    7. '        
' → logprob: -9.123703956604004
    8. 'for' → logprob: -9.373703956604004
    9. 'suite' → logprob: -10.248703956604004
    10. '```' → logprob: -10.748703956604004

Token 489: ' heavy' (ID: 12914)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.40845537185668945
    2. 'if' → logprob: -1.6584553718566895
    3. '       ' → logprob: -2.9084553718566895
    4. ' if' → logprob: -3.0334553718566895
    5. '   ' → logprob: -3.6584553718566895
    6. ' ensemble' → logprob: -4.1584553718566895
    7. 'for' → logprob: -9.533454895019531
    8. '  ' → logprob: -9.533454895019531
    9. '```' → logprob: -9.595954895019531
    10. '           ' → logprob: -9.658454895019531

Token 490: ' mix' (ID: 9762)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -1.1271822452545166
    2. 'if' → logprob: -1.3771822452545166
    3. ' bloc' → logprob: -1.8771822452545166
    4. 'ensemble' → logprob: -2.3771822452545166
    5. ' if' → logprob: -2.8771822452545166
    6. '   ' → logprob: -3.5021822452545166
    7. 'for' → logprob: -3.5021822452545166
    8. '       ' → logprob: -3.7521822452545166
    9. ' ensemble' → logprob: -4.8771820068359375
    10. ' for' → logprob: -5.2521820068359375

Token 491: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03209269791841507
    2. '   ' → logprob: -3.532092809677124
    3. '        
' → logprob: -7.532092571258545
    4. '
' → logprob: -7.907092571258545
    5. ',' → logprob: -8.157093048095703
    6. ' =' → logprob: -8.407093048095703
    7. '<|end|>' → logprob: -8.657093048095703
    8. '=' → logprob: -9.032093048095703
    9. '    ' → logprob: -9.282093048095703
    10. '      ' → logprob: -9.282093048095703

Token 492: ' ter' (ID: 3069)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.7333993315696716
    2. '       ' → logprob: -0.8583993315696716
    3. ' ensemble' → logprob: -3.1083993911743164
    4. '   ' → logprob: -3.1083993911743164
    5. ' if' → logprob: -5.733399391174316
    6. 'if' → logprob: -6.108399391174316
    7. ' ' → logprob: -8.733399391174316
    8. '        
' → logprob: -8.858399391174316
    9. '  ' → logprob: -9.108399391174316
    10. ' for' → logprob: -9.358399391174316

Token 493: 'naire' (ID: 30464)
  Prédit: 'rain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rain' → logprob: -0.9164482355117798
    2. 'm' → logprob: -1.1664482355117798
    3. 'min' → logprob: -1.5414482355117798
    4. 'naire' → logprob: -3.2914481163024902
    5. 'raform' → logprob: -4.66644811630249
    6. 'mp' → logprob: -5.54144811630249
    7. 'me' → logprob: -5.66644811630249
    8. 'f' → logprob: -6.04144811630249
    9. 'ra' → logprob: -6.16644811630249
    10. 'raine' → logprob: -6.41644811630249

Token 494: '/' (ID: 14)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.3962121605873108
    2. ' ensemble' → logprob: -1.646212100982666
    3. '?' → logprob: -2.771212100982666
    4. '   ' → logprob: -4.271212100982666
    5. ' ?' → logprob: -4.521212100982666
    6. '       ' → logprob: -4.646212100982666
    7. ' if' → logprob: -4.771212100982666
    8. ':' → logprob: -4.896212100982666
    9. ' bloc' → logprob: -5.021212100982666
    10. ' =' → logprob: -5.521212100982666

Token 495: 'objet' (ID: 61436)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.22439800202846527
    2. ' ensemble' → logprob: -2.599397897720337
    3. 'mix' → logprob: -3.224397897720337
    4. '(' → logprob: -4.099398136138916
    5. ' mix' → logprob: -4.099398136138916
    6. ' bloc' → logprob: -4.099398136138916
    7. 'bloc' → logprob: -4.349398136138916
    8. 'd' → logprob: -5.224398136138916
    9. ' d' → logprob: -5.474398136138916
    10. 'blend' → logprob: -6.099398136138916

Token 496: '
' (ID: 198)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.18836578726768494
    2. ' ensemble' → logprob: -1.9383658170700073
    3. '       ' → logprob: -5.313365936279297
    4. ' bloc' → logprob: -5.438365936279297
    5. ':' → logprob: -5.563365936279297
    6. ' if' → logprob: -5.938365936279297
    7. '   ' → logprob: -5.938365936279297
    8. '(' → logprob: -6.063365936279297
    9. ' =' → logprob: -6.313365936279297
    10. 'bloc' → logprob: -6.813365936279297

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020879271905869246
    2. 'ensemble' → logprob: -6.2520880699157715
    3. '   ' → logprob: -9.127087593078613
    4. ' ensemble' → logprob: -10.877087593078613
    5. '        
' → logprob: -11.502087593078613
    6. '
' → logprob: -12.002087593078613
    7. 'if' → logprob: -12.877087593078613
    8. '      ' → logprob: -13.127087593078613
    9. '           ' → logprob: -13.252087593078613
    10. ' if' → logprob: -13.502087593078613

Token 498: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' (adapté à ' ensemble') → logprob: -0.0002943479048553854
    2. ' ensemble' → logprob: -8.25029468536377
    3. '       ' → logprob: -10.87529468536377
    4. '   ' → logprob: -11.25029468536377
    5. 'ense' → logprob: -14.50029468536377
    6. '
' → logprob: -16.000293731689453
    7. '(' → logprob: -16.250293731689453
    8. '```' → logprob: -16.250293731689453
    9. 'if' → logprob: -16.375293731689453
    10. '        
' → logprob: -16.875293731689453

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018155913800001144
    2. ' =' → logprob: -4.018156051635742
    3. '+=' → logprob: -12.143156051635742
    4. '*=' → logprob: -15.643156051635742
    5. ' +=' → logprob: -16.268156051635742
    6. ',' → logprob: -16.518156051635742
    7. '=None' → logprob: -16.643156051635742
    8. '=np' → logprob: -17.018156051635742
    9. '=f' → logprob: -17.268156051635742
    10. ' ' → logprob: -17.268156051635742

Token 500: ' bloc' (ID: 51218)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -0.28283166885375977
    2. ' fusion' → logprob: -1.5328316688537598
    3. 'bloc' → logprob: -3.7828316688537598
    4. ' bloc' → logprob: -5.40783166885376
    5. 'bl' → logprob: -7.53283166885376
    6. 'mix' → logprob: -7.90783166885376
    7. 'ensemble' → logprob: -8.032831192016602
    8. '(bl' → logprob: -8.470331192016602
    9. 'blk' → logprob: -8.532831192016602
    10. 'block' → logprob: -8.532831192016602

Token 501: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31356877088546753
    2. 'if' → logprob: -1.3135688304901123
    3. 'fusion' → logprob: -9.188569068908691
    4. 'si' → logprob: -9.438569068908691
    5. ' si' → logprob: -10.438569068908691
    6. '+' → logprob: -10.688569068908691
    7. '   ' → logprob: -10.938569068908691
    8. ' ' → logprob: -10.938569068908691
    9. 'mix' → logprob: -11.563569068908691
    10. ' fusion' → logprob: -12.563569068908691

Token 502: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -5.383526149671525e-05
    2. ' ensemble' → logprob: -10.250053405761719
    3. 'ense' → logprob: -11.500053405761719
    4. 'not' → logprob: -12.000053405761719
    5. '   ' → logprob: -13.625053405761719
    6. 'en' → logprob: -15.625053405761719
    7. 'len' → logprob: -15.750053405761719
    8. ' ' → logprob: -15.875053405761719
    9. '  ' → logprob: -15.875053405761719
    10. 'ens' → logprob: -16.37505340576172

Token 503: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3132874071598053
    2. 'is' → logprob: -1.313287377357483
    3. '==' → logprob: -11.063287734985352
    4. 'if' → logprob: -12.563287734985352
    5. 'None' → logprob: -12.813287734985352
    6. ' ' → logprob: -13.563287734985352
    7. ' None' → logprob: -14.063287734985352
    8. '=None' → logprob: -15.313287734985352
    9. '
' → logprob: -15.438287734985352
    10. 'in' → logprob: -15.813287734985352

Token 504: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.662937372922897e-05
    2. ' None' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.875096321105957
    4. 'none' → logprob: -16.000097274780273
    5. '  ' → logprob: -17.625097274780273
    6. ' ' → logprob: -19.000097274780273
    7. '_None' → logprob: -19.000097274780273
    8. '(None' → logprob: -20.125097274780273
    9. '=None' → logprob: -20.500097274780273
    10. '...' → logprob: -20.750097274780273

Token 505: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47407931089401245
    2. ' else' → logprob: -0.9740793108940125
    3. '	else' → logprob: -13.724079132080078
    4. '    ' → logprob: -15.224079132080078
    5. ' ' → logprob: -15.349079132080078
    6. '   ' → logprob: -15.474079132080078
    7. '        ' → logprob: -15.599079132080078
    8. 'el' → logprob: -16.099079132080078
    9. '
' → logprob: -17.099079132080078
    10. 'elses' → logprob: -17.474079132080078

Token 506: ' fusion' (ID: 48115)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -0.04859384149312973
    2. ' fusion' → logprob: -3.048593759536743
    3. '   ' → logprob: -13.298593521118164
    4. '  ' → logprob: -13.548593521118164
    5. ' ' → logprob: -14.048593521118164
    6. 'f' → logprob: -14.173593521118164
    7. ' ' → logprob: -14.548593521118164
    8. '    ' → logprob: -15.423593521118164
    9. 'Fusion' → logprob: -15.423593521118164
    10. '	f' → logprob: -15.923593521118164

Token 507: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -6.869017852295656e-06
    2. 'er' → logprob: -12.500006675720215
    3. 'mer' → logprob: -13.625006675720215
    4. 'nner' → logprob: -13.875006675720215
    5. 'ener' → logprob: -15.625006675720215
    6. '   ' → logprob: -16.00000762939453
    7. '(' → logprob: -16.37500762939453
    8. 'ne' → logprob: -16.62500762939453
    9. 'нер' → logprob: -16.75000762939453
    10. '\' → logprob: -16.75000762939453

Token 508: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(en' → logprob: -15.000000953674316
    3. '(
' → logprob: -17.0
    4. '(bl' → logprob: -17.375
    5. 'ensemble' → logprob: -17.75
    6. '(d' → logprob: -17.875
    7. '(buff' → logprob: -18.375
    8. '(f' → logprob: -19.0
    9. ' (' → logprob: -19.625
    10. '((' → logprob: -19.75

Token 509: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.00011093381908722222
    2. '(' → logprob: -9.875110626220703
    3. 'ense' → logprob: -10.000110626220703
    4. 'bloc' → logprob: -11.375110626220703
    5. '   ' → logprob: -14.000110626220703
    6. ' ensemble' → logprob: -14.250110626220703
    7. 'ens' → logprob: -14.250110626220703
    8. '(en' → logprob: -16.125110626220703
    9. '  ' → logprob: -16.375110626220703
    10. 'en' → logprob: -16.625110626220703

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.79811754100956e-05
    2. ' ,' → logprob: -10.875038146972656
    3. ',
' → logprob: -11.625038146972656
    4. '(bl' → logprob: -12.500038146972656
    5. ',(' → logprob: -13.000038146972656
    6. '(' → logprob: -13.000038146972656
    7. ')' → logprob: -14.875038146972656
    8. '[' → logprob: -14.875038146972656
    9. ',b' → logprob: -15.000038146972656
    10. ',[' → logprob: -15.625038146972656

Token 511: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.0006327360169962049
    2. ' bloc' → logprob: -7.3756327629089355
    3. 'block' → logprob: -13.125632286071777
    4. 'blo' → logprob: -13.375632286071777
    5. 'blk' → logprob: -13.875632286071777
    6. 'blok' → logprob: -14.125632286071777
    7. 'bl' → logprob: -15.250632286071777
    8. '   ' → logprob: -15.250632286071777
    9. 'blob' → logprob: -16.000633239746094
    10. '_bloc' → logprob: -16.250633239746094

Token 512: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11424263566732407
    2. '<|end|>' → logprob: -2.2392425537109375
    3. '<|end|>' → logprob: -7.6142425537109375
    4. '[' → logprob: -7.7392425537109375
    5. '   ' → logprob: -8.489242553710938
    6. ']' → logprob: -9.114242553710938
    7. ' )' → logprob: -10.239242553710938
    8. ')
' → logprob: -10.239242553710938
    9. '  ' → logprob: -11.364242553710938
    10. '       ' → logprob: -11.614242553710938

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009513703174889088
    2. '       ' → logprob: -5.384513854980469
    3. '<|end|>' → logprob: -5.384513854980469
    4. '    
' → logprob: -9.634513854980469
    5. ')' → logprob: -10.009513854980469
    6. ' return' → logprob: -10.634513854980469
    7. 'return' → logprob: -10.759513854980469
    8. ' for' → logprob: -11.134513854980469
    9. '  
' → logprob: -11.134513854980469
    10. '.' → logprob: -11.134513854980469

Token 514: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2571714520454407
    2. ' for' → logprob: -1.507171392440796
    3. '   ' → logprob: -5.257171630859375
    4. '	for' → logprob: -11.882171630859375
    5. '
' → logprob: -12.382171630859375
    6. ' ' → logprob: -12.882171630859375
    7. '    
' → logprob: -13.007171630859375
    8. '<|end|>' → logprob: -13.507171630859375
    9. '  ' → logprob: -14.507171630859375
    10. '  
' → logprob: -15.632171630859375

Token 515: ' Style' (ID: 17602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067182136699557304
    2. ' for' → logprob: -5.006718158721924
    3. '   ' → logprob: -12.881718635559082
    4. '    
' → logprob: -16.506717681884766
    5. '
' → logprob: -16.756717681884766
    6. '	for' → logprob: -17.006717681884766
    7. ' ' → logprob: -18.381717681884766
    8. 'if' → logprob: -18.506717681884766
    9. ' 
' → logprob: -18.756717681884766
    10. '#' → logprob: -19.381717681884766

Token 516: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14268815517425537
    2. ' for' → logprob: -2.017688274383545
    3. '   ' → logprob: -12.142687797546387
    4. '
' → logprob: -12.517687797546387
    5. 'def' → logprob: -14.142687797546387
    6. ' pour' → logprob: -14.392687797546387
    7. '    
' → logprob: -14.767687797546387
    8. 'pour' → logprob: -14.767687797546387
    9. 'f' → logprob: -15.142687797546387
    10. ' 
' → logprob: -15.267687797546387

Token 517: 'foreach' (ID: 12925)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003062646137550473
    2. ' for' → logprob: -8.500306129455566
    3. 'f' → logprob: -9.375306129455566
    4. 'if' → logprob: -12.250306129455566
    5. '
' → logprob: -13.000306129455566
    6. 'stack' → logprob: -13.000306129455566
    7. 'i' → logprob: -13.375306129455566
    8. '   ' → logprob: -14.125306129455566
    9. '```' → logprob: -14.250306129455566
    10. 'pour' → logprob: -14.250306129455566

Token 518: ' lambda' (ID: 27871)
  Prédit: ' fils'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fils' → logprob: -0.18357820808887482
    2. ' enfant' → logprob: -2.6835782527923584
    3. ' for' → logprob: -4.058578014373779
    4. ' noe' → logprob: -4.058578014373779
    5. ' child' → logprob: -4.058578014373779
    6. ' f' → logprob: -4.183578014373779
    7. 'f' → logprob: -4.683578014373779
    8. ' enfants' → logprob: -5.558578014373779
    9. ' fil' → logprob: -6.308578014373779
    10. ' i' → logprob: -6.308578014373779

Token 519: '"
' (ID: 1092)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8860970735549927
    2. ' noe' → logprob: -1.2610970735549927
    3. 'for' → logprob: -1.6360970735549927
    4. ' fils' → logprob: -3.511096954345703
    5. 'no' → logprob: -3.886096954345703
    6. 'f' → logprob: -4.136096954345703
    7. ' no' → logprob: -4.386096954345703
    8. '"' → logprob: -5.386096954345703
    9. '(no' → logprob: -5.636096954345703
    10. ' (' → logprob: -6.386096954345703

Token 520: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07890069484710693
    2. ' for' → logprob: -2.5789008140563965
    3. '   ' → logprob: -11.703900337219238
    4. '
' → logprob: -13.578900337219238
    5. 'list' → logprob: -14.453900337219238
    6. '[' → logprob: -14.703900337219238
    7. '	for' → logprob: -15.703900337219238
    8. ' list' → logprob: -15.953900337219238
    9. '```' → logprob: -16.328901290893555
    10. ' [' → logprob: -16.953901290893555

Token 521: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00947744119912386
    2. '[' → logprob: -5.634477615356445
    3. 'list' (adapté à ' list') → logprob: -6.009477615356445
    4. '[list' → logprob: -6.259477615356445
    5. ' for' → logprob: -6.634477615356445
    6. '[_' → logprob: -9.634477615356445
    7. '_' → logprob: -10.384477615356445
    8. '   ' → logprob: -10.509477615356445
    9. ' list' → logprob: -11.384477615356445
    10. '[
' → logprob: -11.384477615356445

Token 522: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. '(filter' → logprob: -15.375000953674316
    4. '(
' → logprob: -16.625001907348633
    5. '((' → logprob: -18.125001907348633
    6. '(range' → logprob: -18.125001907348633
    7. '([' → logprob: -18.750001907348633
    8. 'map' → logprob: -19.125001907348633
    9. '(ma' → logprob: -20.875001907348633
    10. ',map' → logprob: -21.125001907348633

Token 523: '(lambda' (ID: 43341)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017434853361919522
    2. '(lambda' → logprob: -6.376743316650391
    3. '(' → logprob: -10.25174331665039
    4. '((' → logprob: -13.25174331665039
    5. '(
' → logprob: -13.25174331665039
    6. 'lambda' → logprob: -14.25174331665039
    7. 'suite' → logprob: -14.50174331665039
    8. '   ' → logprob: -14.87674331665039
    9. ' (' → logprob: -15.25174331665039
    10. '(f' → logprob: -15.50174331665039

Token 524: ' x' (ID: 1215)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006913099437952042
    2. '(lambda' → logprob: -5.131913185119629
    3. 'suite' → logprob: -7.756913185119629
    4. '(' → logprob: -8.381913185119629
    5. '(f' → logprob: -8.381913185119629
    6. 'lambda' → logprob: -9.631913185119629
    7. '(
' → logprob: -11.006913185119629
    8. 's' → logprob: -11.756913185119629
    9. 'f' → logprob: -11.881913185119629
    10. ' (' → logprob: -14.381913185119629

Token 525: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0044440049678087234
    2. ' :' → logprob: -5.754444122314453
    3. 'suite' → logprob: -7.254444122314453
    4. ':s' → logprob: -8.129444122314453
    5. ':
' → logprob: -9.129444122314453
    6. '(s' → logprob: -9.629444122314453
    7. ' suite' → logprob: -10.504444122314453
    8. 's' → logprob: -11.129444122314453
    9. '(lambda' → logprob: -11.379444122314453
    10. '   ' → logprob: -11.379444122314453

Token 526: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.11896771192550659
    2. ' suite' → logprob: -2.2439677715301514
    3. '   ' → logprob: -5.618967533111572
    4. 's' → logprob: -7.118967533111572
    5. 'lambda' → logprob: -7.993967533111572
    6. ' lambda' → logprob: -8.11896800994873
    7. '       ' → logprob: -8.11896800994873
    8. '(s' → logprob: -8.49396800994873
    9. '    ' → logprob: -8.99396800994873
    10. ' ' → logprob: -9.61896800994873

Token 527: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0009213464800268412
    2. ',' → logprob: -7.625921249389648
    3. '(' → logprob: -8.875921249389648
    4. ' (' → logprob: -9.375921249389648
    5. ',x' → logprob: -9.625921249389648
    6. 'x' → logprob: -10.000921249389648
    7. ':' → logprob: -10.000921249389648
    8. '(lambda' → logprob: -11.000921249389648
    9. ')' → logprob: -11.375921249389648
    10. '((' → logprob: -11.750921249389648

Token 528: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031625859439373016
    2. ' if' → logprob: -3.781625747680664
    3. 'if' → logprob: -5.656625747680664
    4. ' ,' → logprob: -6.031625747680664
    5. '(gr' → logprob: -6.531625747680664
    6. '   ' → logprob: -8.281625747680664
    7. 'for' → logprob: -9.156625747680664
    8. '),' → logprob: -9.156625747680664
    9. ' for' → logprob: -9.156625747680664
    10. 'gr' → logprob: -9.656625747680664

Token 529: ' if' (ID: 538)
  Prédit: '(gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -0.6489403247833252
    2. ',' → logprob: -0.7739403247833252
    3. 'if' → logprob: -5.148940086364746
    4. ' if' → logprob: -5.523940086364746
    5. '(filter' → logprob: -6.273940086364746
    6. 'gr' → logprob: -6.898940086364746
    7. 'filter' → logprob: -7.023940086364746
    8. ' ,' → logprob: -7.523940086364746
    9. ' for' → logprob: -7.773940086364746
    10. 'for' → logprob: -7.773940086364746

Token 530: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06214470416307449
    2. ' x' → logprob: -2.8121447563171387
    3. '(x' → logprob: -8.68714427947998
    4. ' ' → logprob: -12.93714427947998
    5. '   ' → logprob: -13.06214427947998
    6. ' (' → logprob: -13.31214427947998
    7. '  ' → logprob: -14.56214427947998
    8. '	x' → logprob: -14.56214427947998
    9. '    ' → logprob: -14.68714427947998
    10. ' ' → logprob: -15.81214427947998

Token 531: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47409185767173767
    2. ' !=' → logprob: -0.9740918874740601
    3. 'x' → logprob: -11.849091529846191
    4. '()!=' → logprob: -12.599091529846191
    5. ' x' → logprob: -12.724091529846191
    6. '!=(' → logprob: -15.599091529846191
    7. ')!=' → logprob: -15.724091529846191
    8. ' ' → logprob: -15.849091529846191
    9. 'is' → logprob: -15.974091529846191
    10. '!='' → logprob: -15.974091529846191

Token 532: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.04859134554862976
    2. ' parent' → logprob: -3.048591375350952
    3. ' ' → logprob: -13.923591613769531
    4. '	parent' → logprob: -13.923591613769531
    5. '   ' → logprob: -14.173591613769531
    6. '  ' → logprob: -14.548591613769531
    7. '(parent' → logprob: -15.173591613769531
    8. 'paren' → logprob: -15.673591613769531
    9. ',parent' → logprob: -16.04859161376953
    10. '    ' → logprob: -16.17359161376953

Token 533: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.012215410359203815
    2. ',' → logprob: -4.887215614318848
    3. 'else' → logprob: -5.512215614318848
    4. ')' → logprob: -8.012215614318848
    5. '),' → logprob: -8.887215614318848
    6. ' ,' → logprob: -10.012215614318848
    7. '))' → logprob: -11.012215614318848
    8. ' ' → logprob: -11.637215614318848
    9. ')),' → logprob: -11.637215614318848
    10. '	else' → logprob: -12.512215614318848

Token 534: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.013341273181140423
    2. ' None' → logprob: -4.388341426849365
    3. '0' → logprob: -7.388341426849365
    4. ' ' → logprob: -9.638340950012207
    5. '   ' → logprob: -9.763340950012207
    6. 'False' → logprob: -9.763340950012207
    7. '  ' → logprob: -10.888340950012207
    8. '(None' → logprob: -12.388340950012207
    9. '[]' → logprob: -12.888340950012207
    10. '_None' → logprob: -13.638340950012207

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034476007567718625
    2. '))' → logprob: -8.375345230102539
    3. ' ,' → logprob: -9.375345230102539
    4. '),' → logprob: -11.000345230102539
    5. '   ' → logprob: -12.375345230102539
    6. ',g' → logprob: -13.125345230102539
    7. '(),' → logprob: -13.500345230102539
    8. ',
' → logprob: -14.000345230102539
    9. ',list' → logprob: -14.000345230102539
    10. ',n' → logprob: -14.125345230102539

Token 536: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.07902010530233383
    2. ' grap' → logprob: -2.5790200233459473
    3. 'gra' → logprob: -10.079020500183105
    4. '   ' → logprob: -10.204020500183105
    5. 'graph' → logprob: -10.829020500183105
    6. ' gr' → logprob: -12.079020500183105
    7. '(gr' → logprob: -12.579020500183105
    8. ' ' → logprob: -12.579020500183105
    9. '	gr' → logprob: -12.579020500183105
    10. '    ' → logprob: -12.704020500183105

Token 537: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.030036145821213722
    2. 'phe' → logprob: -3.655036211013794
    3. 'aphe' → logprob: -5.655035972595215
    4. 'e' → logprob: -10.030035972595215
    5. 'pe' → logprob: -10.155035972595215
    6. 'h' → logprob: -10.155035972595215
    7. 'ophe' → logprob: -11.155035972595215
    8. 'g' → logprob: -11.405035972595215
    9. 'fe' → logprob: -11.530035972595215
    10. '[' → logprob: -11.530035972595215

Token 538: '[' (ID: 58)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7151849269866943
    2. '[' → logprob: -1.2151849269866943
    3. ')))' → logprob: -1.9651849269866943
    4. ',' → logprob: -3.4651849269866943
    5. ',no' → logprob: -4.090185165405273
    6. '(no' → logprob: -4.965185165405273
    7. ')));' → logprob: -5.465185165405273
    8. '));' → logprob: -5.590185165405273
    9. ')),' → logprob: -5.965185165405273
    10. ')' → logprob: -6.590185165405273

Token 539: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -9.841743303695694e-05
    2. ' noe' → logprob: -9.62509822845459
    3. ' no' → logprob: -11.12509822845459
    4. '   ' → logprob: -12.62509822845459
    5. 'No' → logprob: -13.00009822845459
    6. ' ' → logprob: -13.37509822845459
    7. 'ne' → logprob: -13.50009822845459
    8. '	no' → logprob: -13.50009822845459
    9. '[' → logprob: -13.75009822845459
    10. ')' → logprob: -13.87509822845459

Token 540: 'e' (ID: 68)
  Prédit: 'ud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -1.4617256056226324e-05
    2. 'e' → logprob: -11.625014305114746
    3. 'd' → logprob: -12.500014305114746
    4. 'уд' → logprob: -14.500014305114746
    5. '```' → logprob: -15.625014305114746
    6. 'u' → logprob: -15.875014305114746
    7. '
' → logprob: -15.875014305114746
    8. '``' → logprob: -16.250015258789062
    9. 'udh' → logprob: -16.250015258789062
    10. 'ed' → logprob: -16.375015258789062

Token 541: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -1.981667537620524e-06
    2. 'd' → logprob: -14.000001907348633
    3. 'уд' → logprob: -14.500001907348633
    4. '
' → logprob: -16.375001907348633
    5. '[' → logprob: -16.500001907348633
    6. '

' → logprob: -17.125001907348633
    7. 'udh' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. 'e' → logprob: -17.375001907348633
    10. ')' → logprob: -17.375001907348633

Token 542: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.6375413537025452
    2. '))' → logprob: -0.7625413537025452
    3. ')))' → logprob: -5.6375412940979
    4. ']' → logprob: -8.012541770935059
    5. ')' → logprob: -8.137541770935059
    6. '']))' → logprob: -8.512541770935059
    7. '])' → logprob: -9.012541770935059
    8. '[' → logprob: -9.262541770935059
    9. '"]))' → logprob: -9.387541770935059
    10. ')]' → logprob: -9.512541770935059

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003995173145085573
    2. 'return' → logprob: -5.878994941711426
    3. 'if' → logprob: -6.753994941711426
    4. ' if' → logprob: -11.128994941711426
    5. ' return' → logprob: -12.628994941711426
    6. '    
' → logprob: -13.003994941711426
    7. 'def' → logprob: -13.378994941711426
    8. '
' → logprob: -14.503994941711426
    9. '```' → logprob: -15.503994941711426
    10. '  ' → logprob: -15.878994941711426

Token 544: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2259528487920761
    2. '   ' → logprob: -1.6009528636932373
    3. ' return' → logprob: -7.850952625274658
    4. 'if' → logprob: -9.600953102111816
    5. '    
' → logprob: -9.975953102111816
    6. 'ret' → logprob: -11.225953102111816
    7. '#' → logprob: -11.850953102111816
    8. '	return' → logprob: -12.350953102111816
    9. '  ' → logprob: -12.975953102111816
    10. 'eturn' → logprob: -13.350953102111816

Token 545: ' np' (ID: 5374)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.00013202552509028465
    2. ' ensemble' → logprob: -9.625131607055664
    3. 'ense' → logprob: -10.125131607055664
    4. '(' → logprob: -11.375131607055664
    5. 'np' → logprob: -12.000131607055664
    6. 'ens' → logprob: -12.375131607055664
    7. '1' → logprob: -13.250131607055664
    8. ' ' → logprob: -13.750131607055664
    9. 'en' → logprob: -14.875131607055664
    10. '   ' → logprob: -16.125131607055664

Token 546: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.6954805850982666
    2. '.zeros' → logprob: -0.6954805850982666
    3. '.ones' → logprob: -6.1954803466796875
    4. 'array' → logprob: -8.570480346679688
    5. '.append' → logprob: -10.445480346679688
    6. '.copy' → logprob: -10.695480346679688
    7. '.concatenate' → logprob: -11.070480346679688
    8. '.ndarray' → logprob: -11.445480346679688
    9. '.asarray' → logprob: -11.695480346679688
    10. '.' → logprob: -12.445480346679688

Token 547: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.47437429428100586
    2. '(' → logprob: -0.9743742942810059
    3. '[' → logprob: -8.349374771118164
    4. '(np' → logprob: -11.099374771118164
    5. '([...' → logprob: -11.099374771118164
    6. '([]' → logprob: -11.224374771118164
    7. '<|end|>' → logprob: -12.474374771118164
    8. '(f' → logprob: -12.724374771118164
    9. '((' → logprob: -12.849374771118164
    10. '(([' → logprob: -13.224374771118164

Token 548: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009151478880085051
    2. '0' → logprob: -7.000915050506592
    3. ' ' → logprob: -12.87591552734375
    4. '   ' → logprob: -14.12591552734375
    5. '(' → logprob: -16.37591552734375
    6. '[' → logprob: -16.75091552734375
    7. '  ' → logprob: -17.12591552734375
    8. '       ' → logprob: -17.50091552734375
    9. '
' → logprob: -17.62591552734375
    10. '    ' → logprob: -17.87591552734375

Token 549: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09543261677026749
    2. ']+' → logprob: -2.9704325199127197
    3. '],' → logprob: -3.4704325199127197
    4. ',' → logprob: -5.095432758331299
    5. '])' → logprob: -6.220432758331299
    6. '   ' → logprob: -9.47043228149414
    7. '+' → logprob: -9.47043228149414
    8. '0' → logprob: -9.84543228149414
    9. ')' → logprob: -9.97043228149414
    10. ' ]' → logprob: -10.34543228149414

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.625009536743164
    4. '  ' → logprob: -16.250009536743164
    5. '
' → logprob: -17.625009536743164
    6. '])' → logprob: -18.250009536743164
    7. ']' → logprob: -18.375009536743164
    8. '(' → logprob: -18.500009536743164
    9. '<|end|>' → logprob: -18.625009536743164
    10. '0' → logprob: -19.250009536743164

Token 551: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7199921011924744
    2. ']' → logprob: -0.8449921011924744
    3. '])' → logprob: -2.594992160797119
    4. ']+' → logprob: -4.719992160797119
    5. ',' → logprob: -10.594991683959961
    6. '   ' → logprob: -11.344991683959961
    7. '0' → logprob: -11.719991683959961
    8. '])[' → logprob: -11.719991683959961
    9. '])]' → logprob: -11.969991683959961
    10. ' ],' → logprob: -12.094991683959961

Token 552: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0002997120900545269
    2. 'np' → logprob: -8.500299453735352
    3. ' dtype' → logprob: -9.250299453735352
    4. ' np' → logprob: -16.62529945373535
    5. 'd' → logprob: -18.12529945373535
    6. ' ' → logprob: -18.50029945373535
    7. '(dtype' → logprob: -18.50029945373535
    8. '  ' → logprob: -18.87529945373535
    9. '   ' → logprob: -18.87529945373535
    10. 'nd' → logprob: -19.12529945373535

Token 553: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0015054593095555902
    2. '=' → logprob: -6.501505374908447
    3. '=int' → logprob: -12.876505851745605
    4. '=
' → logprob: -15.876505851745605
    5. '=n' → logprob: -15.876505851745605
    6. 'np' → logprob: -16.25150489807129
    7. ' =' → logprob: -16.50150489807129
    8. '[np' → logprob: -16.75150489807129
    9. '=torch' → logprob: -18.25150489807129
    10. '=pd' → logprob: -18.50150489807129

Token 554: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.02978462539613247
    2. 'int' → logprob: -3.529784679412842
    3. '.uint' → logprob: -10.779784202575684
    4. '=int' → logprob: -11.904784202575684
    5. 'np' → logprob: -12.154784202575684
    6. 'uint' → logprob: -14.404784202575684
    7. ' int' → logprob: -14.904784202575684
    8. '=np' → logprob: -15.154784202575684
    9. ',int' → logprob: -16.90478515625
    10. '[int' → logprob: -17.02978515625

Token 555: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -2.7610454708337784e-05
    2. 'int' → logprob: -10.500027656555176
    3. 'uint' → logprob: -19.00002670288086
    4. '32' → logprob: -20.87502670288086
    5. 'array' → logprob: -21.25002670288086
    6. '6' → logprob: -21.62502670288086
    7. 'in' → logprob: -21.75002670288086
    8. '66' → logprob: -22.62502670288086
    9. 'dtype' → logprob: -22.62502670288086
    10. '8' → logprob: -22.75002670288086

Token 556: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ' )' → logprob: -12.00001049041748
    3. ')
' → logprob: -13.50001049041748
    4. ')[' → logprob: -14.62501049041748
    5. '+' → logprob: -14.75001049041748
    6. '[' → logprob: -14.87501049041748
    7. ' +' → logprob: -15.00001049041748
    8. '[])' → logprob: -15.62501049041748
    9. '   ' → logprob: -15.87501049041748
    10. ')+' → logprob: -16.125009536743164

Token 557: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.5231599807739258
    2. ' ensemble' → logprob: -1.7731599807739258
    3. ' len' → logprob: -2.273159980773926
    4. 'len' → logprob: -2.523159980773926
    5. 'parent' → logprob: -4.023159980773926
    6. ' parent' → logprob: -4.148159980773926
    7. 'not' → logprob: -4.773159980773926
    8. ' noe' → logprob: -5.273159980773926
    9. ' not' → logprob: -5.898159980773926
    10. 'no' → logprob: -6.273159980773926

Token 559: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759422183036804
    2. ' is' → logprob: -0.8259422183036804
    3. ' ' → logprob: -12.950942039489746
    4. 'None' → logprob: -15.950942039489746
    5. '==' → logprob: -16.825942993164062
    6. ' ' → logprob: -17.200942993164062
    7. 'if' → logprob: -17.450942993164062
    8. '[' → logprob: -17.450942993164062
    9. 'import' → logprob: -17.450942993164062
    10. '  ' → logprob: -17.700942993164062

Token 560: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7610454708337784e-05
    2. ' None' → logprob: -10.500027656555176
    3. 'none' → logprob: -19.25002670288086
    4. '   ' → logprob: -21.75002670288086
    5. '_None' → logprob: -21.75002670288086
    6. '(None' → logprob: -22.50002670288086
    7. '=None' → logprob: -22.62502670288086
    8. ' ' → logprob: -22.75002670288086
    9. '  ' → logprob: -22.75002670288086
    10. '0' → logprob: -24.12502670288086

Token 561: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10304670035839081
    2. ' else' → logprob: -2.3530466556549072
    3. '   ' → logprob: -5.978046894073486
    4. '	else' → logprob: -9.103046417236328
    5. ' ' → logprob: -10.103046417236328
    6. 'return' → logprob: -10.228046417236328
    7. '<|end|>' → logprob: -10.228046417236328
    8. '  ' → logprob: -10.478046417236328
    9. '
' → logprob: -10.478046417236328
    10. '[]' → logprob: -11.978046417236328

Token 562: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.020903045311570168
    2. ' ensemble' → logprob: -3.8959031105041504
    3. 'ense' → logprob: -9.645902633666992
    4. '(' → logprob: -9.645902633666992
    5. 'np' → logprob: -9.770902633666992
    6. 'fusion' → logprob: -10.145902633666992
    7. 'ens' → logprob: -10.520902633666992
    8. ' ' → logprob: -10.770902633666992
    9. ' np' → logprob: -10.895902633666992
    10. 'en' → logprob: -11.270902633666992

Token 563: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07757321745157242
    2. 'print' → logprob: -2.952573299407959
    3. 'res' → logprob: -4.077573299407959
    4. 'answer' → logprob: -5.702573299407959
    5. 'count' → logprob: -6.577573299407959
    6. 'total' → logprob: -8.8275728225708
    7. 'results' → logprob: -9.0775728225708
    8. 'comp' → logprob: -9.2025728225708
    9. 'r' → logprob: -9.8275728225708
    10. 'output' → logprob: -10.0775728225708

Token 565: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894132822751999
    2. '=' → logprob: -2.4639413356781006
    3. '(' → logprob: -14.46394157409668
    4. '[' → logprob: -15.08894157409668
    5. ' ' → logprob: -15.33894157409668
    6. ',' → logprob: -15.58894157409668
    7. ' =
' → logprob: -15.58894157409668
    8. ' =[' → logprob: -15.83894157409668
    9. ' =(' → logprob: -16.08894157409668
    10. ')' → logprob: -16.21394157409668

Token 566: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '=result' → logprob: -15.50192928314209
    4. '=f' → logprob: -16.626928329467773
    5. '=np' → logprob: -16.751928329467773
    6. '=int' → logprob: -17.001928329467773
    7. ':' → logprob: -17.126928329467773
    8. '=[' → logprob: -17.126928329467773
    9. '[' → logprob: -17.126928329467773
    10. ')' → logprob: -17.376928329467773

Token 567: ' explorer' (ID: 73961)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.002511093392968178
    2. ' explorer' → logprob: -6.002511024475098
    3. 'np' → logprob: -11.002511024475098
    4. ' np' → logprob: -12.627511024475098
    5. 'ex' → logprob: -12.752511024475098
    6. 'int' → logprob: -13.127511024475098
    7. '  ' → logprob: -13.377511024475098
    8. ' ' → logprob: -13.377511024475098
    9. 'exam' → logprob: -13.752511024475098
    10. '   ' → logprob: -13.877511024475098

Token 568: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021307668066583574
    2. '(N' → logprob: -8.500212669372559
    3. '<|end|>' → logprob: -11.750212669372559
    4. ' (' → logprob: -14.375212669372559
    5. '0' → logprob: -14.875212669372559
    6. 'N' → logprob: -15.625212669372559
    7. ' ' → logprob: -15.625212669372559
    8. '((' → logprob: -15.875212669372559
    9. '(
' → logprob: -16.750213623046875
    10. '(n' → logprob: -17.000213623046875

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.625015258789062
    3. '0' → logprob: -12.000015258789062
    4. '   ' → logprob: -18.000015258789062
    5. '(' → logprob: -20.000015258789062
    6. ')' → logprob: -20.125015258789062
    7. '  ' → logprob: -21.375015258789062
    8. '```' → logprob: -21.875015258789062
    9. '    ' → logprob: -22.375015258789062
    10. '2' → logprob: -22.875015258789062

Token 570: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25271204113960266
    2. ')
' → logprob: -1.5027120113372803
    3. ' )' → logprob: -8.62771224975586
    4. ',' → logprob: -8.87771224975586
    5. ')%' → logprob: -9.00271224975586
    6. ' )
' → logprob: -9.50271224975586
    7. ')[' → logprob: -9.62771224975586
    8. ')

' → logprob: -9.75271224975586
    9. ')
' → logprob: -10.25271224975586
    10. ').' → logprob: -10.87771224975586

Token 571: 'solution' (ID: 84819)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.723973582556937e-05
    2. 'result' → logprob: -11.625017166137695
    3. 'for' → logprob: -13.000017166137695
    4. 'prin' → logprob: -13.375017166137695
    5. ' print' → logprob: -13.625017166137695
    6. 'answer' → logprob: -14.000017166137695
    7. 'pr' → logprob: -14.250017166137695
    8. 'total' → logprob: -14.250017166137695
    9. '```' → logprob: -15.750017166137695
    10. 'res' → logprob: -16.250017166137695

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22543440759181976
    2. '=' → logprob: -1.600434422492981
    3. '[' → logprob: -11.600434303283691
    4. '=int' → logprob: -12.975434303283691
    5. '=result' → logprob: -12.975434303283691
    6. 's' → logprob: -13.225434303283691
    7. '=np' → logprob: -13.975434303283691
    8. ' ' → logprob: -14.350434303283691
    9. '=[' → logprob: -14.475434303283691
    10. ',' → logprob: -14.725434303283691

Token 573: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6871886849403381
    2. 'result' → logprob: -1.1871886253356934
    3. 'np' → logprob: -1.9371886253356934
    4. '(result' → logprob: -3.9371886253356934
    5. '(np' → logprob: -4.812188625335693
    6. ' int' → logprob: -4.812188625335693
    7. '(int' → logprob: -4.937188625335693
    8. ' np' → logprob: -5.687188625335693
    9. 'sum' → logprob: -7.187188625335693
    10. ' result' → logprob: -7.562188625335693

Token 574: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.47814053297042847
    2. '(result' → logprob: -0.9781405329704285
    3. '((' → logprob: -5.728140354156494
    4. '(sum' → logprob: -7.353140354156494
    5. 'result' → logprob: -9.478140830993652
    6. 'np' → logprob: -10.228140830993652
    7. '(' → logprob: -10.228140830993652
    8. '(pow' → logprob: -11.978140830993652
    9. '(int' → logprob: -13.353140830993652
    10. '(n' → logprob: -13.853140830993652

Token 575: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -7.553032628493384e-05
    2. 'sum' → logprob: -9.500075340270996
    3. '.dot' → logprob: -15.250075340270996
    4. ' sum' → logprob: -16.125076293945312
    5. '.' → logprob: -16.625076293945312
    6. '(sum' → logprob: -16.750076293945312
    7. '_sum' → logprob: -16.750076293945312
    8. '.abs' → logprob: -16.875076293945312
    9. '.argmax' → logprob: -17.750076293945312
    10. '.round' → logprob: -17.875076293945312

Token 576: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.002179169561713934
    2. 'result' → logprob: -6.502179145812988
    3. '((' → logprob: -7.377179145812988
    4. '(' → logprob: -10.127179145812988
    5. '(f' → logprob: -12.127179145812988
    6. '(np' → logprob: -12.877179145812988
    7. ' (' → logprob: -13.377179145812988
    8. ' result' → logprob: -15.252179145812988
    9. '(((' → logprob: -15.377179145812988
    10. '[result' → logprob: -15.377179145812988

Token 577: 'at' (ID: 266)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.06221650913357735
    2. 'at' → logprob: -3.0622165203094482
    3. 'result' → logprob: -4.312216281890869
    4. 'ation' → logprob: -9.937216758728027
    5. 'ate' → logprob: -10.687216758728027
    6. '(' → logprob: -10.812216758728027
    7. '[result' → logprob: -11.312216758728027
    8. 'a' → logprob: -11.937216758728027
    9. '=result' → logprob: -12.187216758728027
    10. 'er' → logprob: -12.812216758728027

Token 578: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35048234462738037
    2. '))' → logprob: -1.8504823446273804
    3. '%' → logprob: -2.60048246383667
    4. ' *' → logprob: -3.97548246383667
    5. ' %' → logprob: -4.47548246383667
    6. '*' → logprob: -4.72548246383667
    7. '[' → logprob: -4.72548246383667
    8. ')%' → logprob: -5.35048246383667
    9. '()' → logprob: -6.22548246383667
    10. '([' → logprob: -6.47548246383667

Token 579: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.006947668269276619
    2. ' fact' → logprob: -5.3819475173950195
    3. 'F' → logprob: -6.6319475173950195
    4. 'factor' → logprob: -7.6319475173950195
    5. 'np' → logprob: -8.63194751739502
    6. '[' → logprob: -9.50694751739502
    7. 'pow' → logprob: -9.75694751739502
    8. ' F' → logprob: -10.13194751739502
    9. ' ' → logprob: -10.38194751739502
    10. '[F' → logprob: -10.75694751739502

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '```' → logprob: -20.5
    4. '(' → logprob: -20.625
    5. '２' → logprob: -20.875
    6. ' ' → logprob: -21.625
    7. '₂' → logprob: -21.875
    8. 'fact' → logprob: -22.0
    9. '۲' → logprob: -22.0
    10. 'factor' → logprob: -22.5

Token 581: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.10306841135025024
    2. '))' → logprob: -2.6030683517456055
    3. ')' → logprob: -3.8530683517456055
    4. '))
' → logprob: -6.7280683517456055
    5. '[result' → logprob: -7.1030683517456055
    6. '[len' → logprob: -8.353068351745605
    7. ')%' → logprob: -8.728068351745605
    8. '[:-' → logprob: -9.728068351745605
    9. '[np' → logprob: -9.853068351745605
    10. '[::-' → logprob: -10.228068351745605

Token 582: 'N' (ID: 45)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.394135612528771e-05
    2. 'N' → logprob: -10.500043869018555
    3. 'result' → logprob: -11.750043869018555
    4. ' len' → logprob: -12.000043869018555
    5. '(len' → logprob: -13.000043869018555
    6. '[len' → logprob: -17.000043869018555
    7. 'np' → logprob: -17.875043869018555
    8. '   ' → logprob: -19.125043869018555
    9. ')' → logprob: -19.125043869018555
    10. 'min' → logprob: -19.500043869018555

Token 583: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002812124788761139
    2. '])' → logprob: -6.502811908721924
    3. ' +' → logprob: -7.002811908721924
    4. ']))' → logprob: -8.877812385559082
    5. ']))
' → logprob: -9.377812385559082
    6. '[:' → logprob: -9.627812385559082
    7. 'N' → logprob: -10.002812385559082
    8. '1' → logprob: -11.002812385559082
    9. '[' → logprob: -11.377812385559082
    10. ']' → logprob: -11.502812385559082

Token 584: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007068329723551869
    2. 'len' → logprob: -7.750706672668457
    3. 'result' → logprob: -8.875706672668457
    4. '2' → logprob: -9.250706672668457
    5. 'N' → logprob: -10.750706672668457
    6. ' ' → logprob: -11.375706672668457
    7. '
' → logprob: -12.875706672668457
    8. '   ' → logprob: -13.500706672668457
    9. '(' → logprob: -13.750706672668457
    10. '```' → logprob: -14.625706672668457

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001402025343850255
    2. 'result' → logprob: -7.251401901245117
    3. 'len' → logprob: -7.501401901245117
    4. '2' → logprob: -9.376401901245117
    5. '(' → logprob: -10.751401901245117
    6. 'N' → logprob: -11.001401901245117
    7. '(result' → logprob: -12.376401901245117
    8. '(len' → logprob: -12.626401901245117
    9. '(N' → logprob: -12.751401901245117
    10. ' ' → logprob: -13.376401901245117

Token 586: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11917999386787415
    2. '[:' → logprob: -2.2441799640655518
    3. '))' → logprob: -5.744180202484131
    4. ')%' → logprob: -6.369180202484131
    5. '())' → logprob: -7.369180202484131
    6. '])' → logprob: -7.994180202484131
    7. '[:-' → logprob: -8.994179725646973
    8. '))
' → logprob: -9.244179725646973
    9. '()' → logprob: -9.369179725646973
    10. '(' → logprob: -9.869179725646973

Token 587: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11620638519525528
    2. '%' → logprob: -2.491206407546997
    3. '[:' → logprob: -3.991206407546997
    4. ')%' → logprob: -4.866206169128418
    5. ' %' → logprob: -7.866206169128418
    6. '[:-' → logprob: -9.241206169128418
    7. ')
' → logprob: -9.866206169128418
    8. '))' → logprob: -9.991206169128418
    9. '()' → logprob: -10.116206169128418
    10. '%)' → logprob: -10.616206169128418

Token 588: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. ' ' → logprob: -17.625261306762695
    4. '_MOD' → logprob: -18.625261306762695
    5. '.MOD' → logprob: -19.375261306762695
    6. '   ' → logprob: -20.250261306762695
    7. 'MO' → logprob: -20.375261306762695
    8. '(M' → logprob: -20.750261306762695
    9. '```' → logprob: -20.750261306762695
    10. ' ' → logprob: -21.250261306762695

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.76628842484206e-05
    2. ')
' → logprob: -9.625067710876465
    3. '))' → logprob: -14.250067710876465
    4. ')`' → logprob: -15.250067710876465
    5. ' )' → logprob: -15.625067710876465
    6. '`)' → logprob: -16.25006675720215
    7. '```' → logprob: -16.75006675720215
    8. '')' → logprob: -17.12506675720215
    9. '())' → logprob: -17.12506675720215
    10. ')#' → logprob: -17.25006675720215

Token 590: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. 'pr' → logprob: -15.875
    3. ' print' → logprob: -16.75
    4. '#print' → logprob: -17.0
    5. '#' → logprob: -17.25
    6. 'solution' → logprob: -18.0
    7. 'prin' → logprob: -18.125
    8. '```' → logprob: -18.125
    9. '<|end|>' → logprob: -18.25
    10. '(print' → logprob: -19.875

Token 591: '(solution' (ID: 126940)
  Prédit: '(solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(solution' → logprob: -4.334533878136426e-05
    2. '(' → logprob: -10.125042915344238
    3. 'solution' → logprob: -12.875042915344238
    4. '(sol' → logprob: -15.250042915344238
    5. '()' → logprob: -15.750042915344238
    6. ' (' → logprob: -16.250043869018555
    7. '(f' → logprob: -17.125043869018555
    8. '(
' → logprob: -17.250043869018555
    9. '('' → logprob: -17.875043869018555
    10. '(problem' → logprob: -18.500043869018555

Token 592: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.791440293658525e-05
    2. ' )' → logprob: -10.125078201293945
    3. '())' → logprob: -10.500078201293945
    4. '()' → logprob: -11.750078201293945
    5. '(' → logprob: -13.500078201293945
    6. '))' → logprob: -15.000078201293945
    7. ')
' → logprob: -15.500078201293945
    8. '```' → logprob: -15.625078201293945
    9. '#' → logprob: -16.750078201293945
    10. ')#' → logprob: -16.875078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 590
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 226
Tokens correctement prédits (top 10): 444
Précision stricte (1ère position): 36.78%
Précision adaptée (1ère position): 38.31%
Précision (top 10): 75.25%
================================================================================
