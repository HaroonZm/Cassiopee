================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
from functools import partial

input = sys.stdin.readline

n, m, s, t = map(int, input().split())
edges = [([], []) for _ in range(n)]
encode = lambda cost, v: (cost << 20) | v
decode = lambda x: (x >> 20, x & ((1 << 20) - 1))

for _ in range(m):
    u, v, a, b = map(int, input().split())
    u -= 1; v -= 1
    edges[u][0].append((a, v))
    edges[v][0].append((a, u))
    edges[u][1].append((b, v))
    edges[v][1].append((b, u))

def dijkstra(graph, start):
    dist = [float('inf')] * n
    visited = [False] * n
    hq = [(0, start)]
    dist[start] = 0
    while hq:
        d, u = heapq.heappop(hq)
        if visited[u]: continue
        visited[u] = True
        for cost, v in graph[u]:
            nd = d + cost
            if nd < dist[v]:
                dist[v] = nd
                heapq.heappush(hq, (nd, v))
    return dist

d1 = dijkstra([g[0] for g in edges], s - 1)
d2 = dijkstra([g[1] for g in edges], t - 1)
acc = float('inf')
result = []
for x, y in zip(reversed(d1), reversed(d2)):
    acc = min(acc, x + y)
    result.append(acc)
for val in reversed(result):
    print(10**15 - val)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.0100624169572257e-05
    2. '#' → logprob: -11.375020027160645
    3. '.' → logprob: -12.500020027160645
    4. '_' → logprob: -13.875020027160645
    5. '=' → logprob: -14.250020027160645
    6. 'ify' → logprob: -14.500020027160645
    7. ')' → logprob: -14.875020027160645
    8. 'i' → logprob: -15.125020027160645
    9. 'u' → logprob: -15.250020027160645
    10. 'p' → logprob: -15.500020027160645

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5014697909355164
    2. '
' → logprob: -1.5014698505401611
    3. '\n' → logprob: -2.501469850540161
    4. '\' → logprob: -3.376469850540161
    5. '

' → logprob: -3.626469850540161
    6. '<|end|>' → logprob: -5.001469612121582
    7. '' → logprob: -5.376469612121582
    8. 'import' → logprob: -5.501469612121582
    9. '.
' → logprob: -5.751469612121582
    10. '```' → logprob: -6.001469612121582

Token 7: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2250409871339798
    2. '\' → logprob: -2.350040912628174
    3. '\n' → logprob: -2.850040912628174
    4. '
' → logprob: -4.225040912628174
    5. '<|end|>' → logprob: -4.725040912628174
    6. ',' → logprob: -5.100040912628174
    7. '```' → logprob: -5.350040912628174
    8. '

' → logprob: -5.475040912628174
    9. '<|end|>' → logprob: -6.225040912628174
    10. 'import' → logprob: -6.600040912628174

Token 8: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.009870948269963264
    2. 'collections' → logprob: -5.009871006011963
    3. ' queue' → logprob: -6.134871006011963
    4. ' math' → logprob: -7.884871006011963
    5. ' itertools' → logprob: -8.384870529174805
    6. ' typing' → logprob: -8.384870529174805
    7. ' threading' → logprob: -10.134870529174805
    8. ' operator' → logprob: -10.509870529174805
    9. ' heap' → logprob: -10.884870529174805
    10. '_' → logprob: -11.259870529174805

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20188212394714355
    2. 'import' → logprob: -1.7018821239471436
    3. '.' → logprob: -8.076882362365723
    4. ' ' → logprob: -9.826882362365723
    5. '	import' → logprob: -10.201882362365723
    6. '_import' → logprob: -11.076882362365723
    7. '<|end|>' → logprob: -11.326882362365723
    8. ' ' → logprob: -11.701882362365723
    9. '```' → logprob: -11.951882362365723
    10. ' .' → logprob: -12.076882362365723

Token 10: ' partial' (ID: 13664)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -1.0991225242614746
    2. ' l' → logprob: -1.2241225242614746
    3. ' total' → logprob: -1.8491225242614746
    4. ' cmp' → logprob: -1.9741225242614746
    5. 'l' → logprob: -3.4741225242614746
    6. 'total' → logprob: -3.7241225242614746
    7. 'wrap' → logprob: -5.224122524261475
    8. 'partial' → logprob: -5.224122524261475
    9. ' wraps' → logprob: -5.599122524261475
    10. ' partial' → logprob: -5.849122524261475

Token 11: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0364365577697754
    2. '\' → logprob: -1.2864365577697754
    3. 'def' → logprob: -1.6614365577697754
    4. '
' → logprob: -2.5364365577697754
    5. '

' → logprob: -3.0364365577697754
    6. '```' → logprob: -4.411436557769775
    7. '(' → logprob: -4.661436557769775
    8. 'import' → logprob: -5.036436557769775
    9. '' → logprob: -5.161436557769775
    10. ' 

' → logprob: -5.536436557769775

Token 12: 'input' (ID: 2586)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4774661958217621
    2. 'def' → logprob: -0.9774662256240845
    3. '\' → logprob: -6.477466106414795
    4. '`' → logprob: -7.477466106414795
    5. '```' → logprob: -8.477466583251953
    6. '.' → logprob: -8.477466583251953
    7. ',' → logprob: -8.852466583251953
    8. '#' → logprob: -9.352466583251953
    9. ':' → logprob: -9.477466583251953
    10. 'de' → logprob: -9.602466583251953

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028493450372479856
    2. ')' → logprob: -9.250285148620605
    3. '.' → logprob: -9.750285148620605
    4. '=' → logprob: -10.625285148620605
    5. '(
' → logprob: -10.875285148620605
    6. '()' → logprob: -11.125285148620605
    7. ' (' → logprob: -11.250285148620605
    8. '(

' → logprob: -11.375285148620605
    9. '"' → logprob: -12.125285148620605
    10. '```' → logprob: -12.125285148620605

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04719319939613342
    2. ' input' → logprob: -3.2971932888031006
    3. 'sys' → logprob: -5.0471930503845215
    4. 'input' → logprob: -6.0471930503845215
    5. ' partial' → logprob: -8.79719352722168
    6. ' lambda' → logprob: -8.79719352722168
    7. 'lambda' → logprob: -12.29719352722168
    8. '	sys' → logprob: -12.92219352722168
    9. 'partial' → logprob: -12.92219352722168
    10. '=sys' → logprob: -12.92219352722168

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.12053074687719345
    2. '.' → logprob: -2.370530843734741
    3. '.readline' → logprob: -4.620530605316162
    4. ' .' → logprob: -5.245530605316162
    5. '.input' → logprob: -6.245530605316162
    6. '.stdout' → logprob: -6.370530605316162
    7. '.argv' → logprob: -7.495530605316162
    8. '.std' → logprob: -8.74553108215332
    9. '.setdefault' → logprob: -9.12053108215332
    10. '.stderr' → logprob: -9.74553108215332

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002748053753748536
    2. 'read' → logprob: -6.252748012542725
    3. '.read' → logprob: -7.252748012542725
    4. '.' → logprob: -9.877748489379883
    5. 'buffer' → logprob: -10.502748489379883
    6. '<|end|>' → logprob: -11.377748489379883
    7. '.readlines' → logprob: -12.377748489379883
    8. '_read' → logprob: -12.627748489379883
    9. ' readline' → logprob: -12.752748489379883
    10. '.buffer' → logprob: -12.752748489379883

Token 17: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7882843017578125
    2. '(' → logprob: -1.1632843017578125
    3. '
' → logprob: -1.7882843017578125
    4. '(
' → logprob: -3.6632843017578125
    5. '

' → logprob: -3.9132843017578125
    6. '()
' → logprob: -5.4132843017578125
    7. '()

' → logprob: -5.6632843017578125
    8. 'def' → logprob: -5.7882843017578125
    9. '(

' → logprob: -5.7882843017578125
    10. ')' → logprob: -6.5382843017578125

Token 18: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008818189613521099
    2. 'class' → logprob: -5.38381814956665
    3. 'n' → logprob: -5.50881814956665
    4. 'N' → logprob: -9.758818626403809
    5. 'd' → logprob: -10.258818626403809
    6. '\' → logprob: -11.633818626403809
    7. '(n' → logprob: -11.883818626403809
    8. 'de' → logprob: -12.383818626403809
    9. 's' → logprob: -12.883818626403809
    10. '#' → logprob: -13.008818626403809

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4791454076766968
    2. '=' → logprob: -1.2291454076766968
    3. ' ' → logprob: -2.8541455268859863
    4. ',' → logprob: -3.8541455268859863
    5. ')' → logprob: -5.104145526885986
    6. '.' → logprob: -7.104145526885986
    7. '>' → logprob: -7.729145526885986
    8. ' ,' → logprob: -7.729145526885986
    9. '  ' → logprob: -7.979145526885986
    10. '<|end|>' → logprob: -7.979145526885986

Token 20: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5247808694839478
    2. 'm' → logprob: -1.0247808694839478
    3. ' k' → logprob: -3.524780750274658
    4. 'k' → logprob: -4.274780750274658
    5. ' ' → logprob: -5.149780750274658
    6. ' =' → logprob: -9.399781227111816
    7. '=' → logprob: -9.899781227111816
    8. 'input' → logprob: -10.899781227111816
    9. ' q' → logprob: -10.899781227111816
    10. 'q' → logprob: -11.274781227111816

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03843263164162636
    2. '=' → logprob: -3.2884325981140137
    3. ',' → logprob: -8.288433074951172
    4. ' ' → logprob: -9.038433074951172
    5. ' ,' → logprob: -11.163433074951172
    6. '<|end|>' → logprob: -13.288433074951172
    7. ' =
' → logprob: -13.413433074951172
    8. '=input' → logprob: -14.163433074951172
    9. ')' → logprob: -14.163433074951172
    10. ' =",' → logprob: -14.663433074951172

Token 22: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10055892169475555
    2. ' =' → logprob: -2.7255589962005615
    3. ' k' → logprob: -3.9755589962005615
    4. ' p' → logprob: -5.475558757781982
    5. '=' → logprob: -6.350558757781982
    6. ' q' → logprob: -6.475558757781982
    7. 'k' → logprob: -6.975558757781982
    8. ' s' → logprob: -7.100558757781982
    9. ' t' → logprob: -7.475558757781982
    10. '  ' → logprob: -8.35055923461914

Token 23: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740915596485138
    2. ' =' → logprob: -0.9740915298461914
    3. ',' → logprob: -11.349091529846191
    4. '=input' → logprob: -13.599091529846191
    5. ' ' → logprob: -13.974091529846191
    6. '=

' → logprob: -16.099092483520508
    7. ')' → logprob: -16.224092483520508
    8. ' =
' → logprob: -16.849092483520508
    9. '＝' → logprob: -16.974092483520508
    10. '=int' → logprob: -16.974092483520508

Token 24: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18889765441417694
    2. ' t' → logprob: -2.3138976097106934
    3. 'd' → logprob: -3.4388976097106934
    4. 'e' → logprob: -4.938897609710693
    5. 'p' → logprob: -5.188897609710693
    6. ' =' → logprob: -5.188897609710693
    7. 'v' → logprob: -5.563897609710693
    8. 'x' → logprob: -5.688897609710693
    9. '=' → logprob: -5.688897609710693
    10. ' d' → logprob: -6.188897609710693

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522331476211548
    2. '=' → logprob: -1.5022331476211548
    3. ',' → logprob: -8.127233505249023
    4. ' ' → logprob: -12.127233505249023
    5. ' =
' → logprob: -13.752233505249023
    6. ' ,' → logprob: -14.002233505249023
    7. '=

' → logprob: -14.752233505249023
    8. '=input' → logprob: -15.752233505249023
    9. ')' → logprob: -16.002233505249023
    10. ' =",' → logprob: -16.502233505249023

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.017041794955730438
    2. 'map' → logprob: -4.1420416831970215
    3. ' input' → logprob: -7.0170416831970215
    4. 'input' → logprob: -9.26704216003418
    5. ' ' → logprob: -11.76704216003418
    6. ' list' → logprob: -12.51704216003418
    7. '	map' → logprob: -14.01704216003418
    8. ' m' → logprob: -14.14204216003418
    9. ' ' → logprob: -14.26704216003418
    10. ' [' → logprob: -14.76704216003418

Token 27: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025806328281760216
    2. '(lambda' → logprob: -4.275806427001953
    3. '(int' → logprob: -4.650806427001953
    4. '(input' → logprob: -6.900806427001953
    5. '(str' → logprob: -7.275806427001953
    6. '<|end|>' → logprob: -10.275806427001953
    7. '(eval' → logprob: -10.275806427001953
    8. '(
' → logprob: -10.400806427001953
    9. '((' → logprob: -10.400806427001953
    10. '(len' → logprob: -10.775806427001953

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.582773745059967
    2. '(input' → logprob: -1.3327736854553223
    3. '(' → logprob: -1.9577736854553223
    4. ',input' → logprob: -3.5827736854553223
    5. '(sys' → logprob: -5.332773685455322
    6. ')' → logprob: -5.707773685455322
    7. 'input' → logprob: -7.832773685455322
    8. '),' → logprob: -9.83277416229248
    9. '=input' → logprob: -9.95777416229248
    10. '(','' → logprob: -10.58277416229248

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6327396035194397
    2. 'input' → logprob: -0.7577396035194397
    3. ' sys' → logprob: -9.507740020751953
    4. ')' → logprob: -10.257740020751953
    5. 'sys' → logprob: -11.132740020751953
    6. ' ' → logprob: -11.757740020751953
    7. '(input' → logprob: -13.382740020751953
    8. ',input' → logprob: -13.382740020751953
    9. '=input' → logprob: -13.507740020751953
    10. ' )' → logprob: -13.507740020751953

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.35389766097068787
    2. '()' → logprob: -1.3538976907730103
    3. '())' → logprob: -3.2288975715637207
    4. ')' → logprob: -9.728898048400879
    5. '()))' → logprob: -9.853898048400879
    6. '(' → logprob: -10.478898048400879
    7. '()
' → logprob: -11.853898048400879
    8. '());' → logprob: -11.853898048400879
    9. '()[' → logprob: -11.853898048400879
    10. '()),' → logprob: -11.978898048400879

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03807569295167923
    2. 'strip' → logprob: -3.2880756855010986
    3. 'rstrip' → logprob: -10.41307544708252
    4. ')' → logprob: -13.03807544708252
    5. ' split' → logprob: -13.78807544708252
    6. '(split' → logprob: -14.28807544708252
    7. 'read' → logprob: -16.288076400756836
    8. 'spl' → logprob: -16.413076400756836
    9. '())' → logprob: -16.788076400756836
    10. 's' → logprob: -16.913076400756836

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325456403195858
    2. '))' → logprob: -3.773254632949829
    3. '())' → logprob: -12.39825439453125
    4. ')))' → logprob: -13.14825439453125
    5. '()' → logprob: -13.77325439453125
    6. '),' → logprob: -14.52325439453125
    7. '(' → logprob: -15.52325439453125
    8. '`)' → logprob: -15.52325439453125
    9. ')`' → logprob: -15.64825439453125
    10. ' )' → logprob: -15.77325439453125

Token 33: 'edges' (ID: 39127)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5049906373023987
    2. 'graph' → logprob: -1.129990577697754
    3. 'dist' → logprob: -4.254990577697754
    4. '
' → logprob: -4.254990577697754
    5. ' graph' → logprob: -4.379990577697754
    6. ' 
' → logprob: -4.629990577697754
    7. 'edges' → logprob: -5.129990577697754
    8. 'distance' → logprob: -5.629990577697754
    9. '_graph' → logprob: -6.254990577697754
    10. '' → logprob: -6.629990577697754

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003225606167688966
    2. '=' → logprob: -5.753225803375244
    3. '=[]' → logprob: -10.378225326538086
    4. '[' → logprob: -11.878225326538086
    5. '[]' → logprob: -12.628225326538086
    6. ' =[' → logprob: -13.003225326538086
    7. '[:]' → logprob: -13.753225326538086
    8. ' ' → logprob: -14.253225326538086
    9. ')' → logprob: -14.628225326538086
    10. ' []' → logprob: -14.878225326538086

Token 35: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.042823780328035355
    2. '[' → logprob: -3.2928237915039062
    3. ' []' → logprob: -5.667823791503906
    4. ' [[]' → logprob: -7.417823791503906
    5. 'default' → logprob: -7.792823791503906
    6. '{}' → logprob: -8.792823791503906
    7. '{' → logprob: -9.417823791503906
    8. '[][]' → logprob: -10.542823791503906
    9. '[]
' → logprob: -11.167823791503906
    10. ' defaultdict' → logprob: -11.667823791503906

Token 36: '([],' (ID: 92032)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0016785101033747196
    2. 'list' → logprob: -6.751678466796875
    3. ' []' → logprob: -8.376678466796875
    4. ']' → logprob: -9.501678466796875
    5. '[]
' → logprob: -9.501678466796875
    6. 'tuple' → logprob: -9.626678466796875
    7. '[' → logprob: -11.001678466796875
    8. '()]' → logprob: -11.376678466796875
    9. '()' → logprob: -11.626678466796875
    10. '[]

' → logprob: -11.751678466796875

Token 37: ' [])' (ID: 95430)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5468811392784119
    2. ')]' → logprob: -1.7968811988830566
    3. ')' → logprob: -2.0468811988830566
    4. '[])' → logprob: -2.1718811988830566
    5. '[],' → logprob: -5.171881198883057
    6. ' [])' → logprob: -5.546881198883057
    7. '),' → logprob: -7.296881198883057
    8. ')])' → logprob: -7.296881198883057
    9. '[]
' → logprob: -7.546881198883057
    10. ')],' → logprob: -7.921881198883057

Token 38: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047178915701806545
    2. ' for' → logprob: -5.754717826843262
    3. ')]' → logprob: -7.254717826843262
    4. ']' → logprob: -7.379717826843262
    5. 'for' → logprob: -9.004717826843262
    6. '),' → logprob: -10.129717826843262
    7. ',' → logprob: -10.879717826843262
    8. '<|end|>' → logprob: -11.629717826843262
    9. ' )' → logprob: -11.879717826843262
    10. ')
' → logprob: -12.129717826843262

Token 39: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03409501910209656
    2. '_' → logprob: -3.409095048904419
    3. ' range' → logprob: -8.28409481048584
    4. ' i' → logprob: -9.28409481048584
    5. '_range' → logprob: -9.65909481048584
    6. ' ' → logprob: -11.15909481048584
    7. 'i' → logprob: -12.03409481048584
    8. '_i' → logprob: -12.03409481048584
    9. ' in' → logprob: -12.53409481048584
    10. 'range' → logprob: -12.65909481048584

Token 40: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022731589153409004
    2. ' range' → logprob: -4.147731781005859
    3. '(range' → logprob: -5.147731781005859
    4. '_range' → logprob: -7.272731781005859
    5. 'in' → logprob: -9.39773178100586
    6. '_' → logprob: -10.14773178100586
    7. 'ange' → logprob: -11.14773178100586
    8. '	range' → logprob: -11.27273178100586
    9. '(' → logprob: -12.27273178100586
    10. 'i' → logprob: -12.39773178100586

Token 41: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889319956302643
    2. ' range' → logprob: -2.5788931846618652
    3. '(range' → logprob: -12.703893661499023
    4. 'n' → logprob: -16.328893661499023
    5. ' ' → logprob: -16.953893661499023
    6. '_' → logprob: -17.203893661499023
    7. 'r' → logprob: -17.328893661499023
    8. ')' → logprob: -17.328893661499023
    9. '	range' → logprob: -17.578893661499023
    10. '_range' → logprob: -17.828893661499023

Token 42: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002622894535306841
    2. '(' → logprob: -8.250262260437012
    3. 'n' → logprob: -14.250262260437012
    4. ' (' → logprob: -15.500262260437012
    5. '(
' → logprob: -17.625263214111328
    6. '((' → logprob: -17.750263214111328
    7. ')n' → logprob: -18.125263214111328
    8. '(s' → logprob: -18.250263214111328
    9. ' n' → logprob: -18.500263214111328
    10. '(N' → logprob: -18.750263214111328

Token 43: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.273621405242011e-05
    2. ')' → logprob: -10.500032424926758
    3. ']' → logprob: -13.250032424926758
    4. ' )' → logprob: -13.750032424926758
    5. ')]
' → logprob: -13.750032424926758
    6. ')])' → logprob: -15.125032424926758
    7. ')]

' → logprob: -15.750032424926758
    8. ')],' → logprob: -16.125032424926758
    9. '))' → logprob: -16.250032424926758
    10. ')]
' → logprob: -16.250032424926758

Token 44: 'encode' (ID: 12949)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016276704147458076
    2. '
' → logprob: -4.766276836395264
    3. ' for' → logprob: -5.016276836395264
    4. '<|end|>' → logprob: -7.391276836395264
    5. '```' → logprob: -8.266276359558105
    6. '<|end|>' → logprob: -10.016276359558105
    7. '\n' → logprob: -10.641276359558105
    8. ' 
' → logprob: -11.016276359558105
    9. '
' → logprob: -11.391276359558105
    10. '  
' → logprob: -11.891276359558105

Token 45: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4303257465362549
    2. '_' → logprob: -1.4303257465362549
    3. 's' → logprob: -3.805325746536255
    4. '_edge' → logprob: -3.805325746536255
    5. ' =' → logprob: -4.555325508117676
    6. '_edges' → logprob: -4.555325508117676
    7. ')' → logprob: -5.055325508117676
    8. ']' → logprob: -5.555325508117676
    9. '(edge' → logprob: -5.555325508117676
    10. 'd' → logprob: -5.805325508117676

Token 46: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5341819524765015
    2. '(lambda' → logprob: -1.2841819524765015
    3. ' lambda' → logprob: -2.159182071685791
    4. '{}' → logprob: -4.909182071685791
    5. '{' → logprob: -5.784182071685791
    6. '(' → logprob: -6.284182071685791
    7. ' (' → logprob: -6.534182071685791
    8. 'dict' → logprob: -6.659182071685791
    9. '[]' → logprob: -6.659182071685791
    10. 'int' → logprob: -7.284182071685791

Token 47: ' cost' (ID: 3097)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.19066552817821503
    2. 'x' → logprob: -1.9406654834747314
    3. ' u' → logprob: -5.1906657218933105
    4. ' lambda' → logprob: -5.1906657218933105
    5. ' s' → logprob: -5.6906657218933105
    6. ' v' → logprob: -5.8156657218933105
    7. ' node' → logprob: -5.9406657218933105
    8. ' a' → logprob: -6.8156657218933105
    9. 'v' → logprob: -7.0656657218933105
    10. 'u' → logprob: -7.1906657218933105

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06840728968381882
    2. ':' → logprob: -3.0684072971343994
    3. ' :' → logprob: -4.19340705871582
    4. ' ,' → logprob: -5.81840705871582
    5. ',c' → logprob: -7.69340705871582
    6. ',n' → logprob: -9.06840705871582
    7. ',x' → logprob: -9.19340705871582
    8. ',:' → logprob: -9.31840705871582
    9. ',index' → logprob: -9.31840705871582
    10. ',i' → logprob: -9.56840705871582

Token 49: ' v' (ID: 323)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8005069494247437
    2. 'node' → logprob: -2.425507068634033
    3. 'index' → logprob: -2.925507068634033
    4. 'id' → logprob: -3.300507068634033
    5. 'city' → logprob: -3.550507068634033
    6. 'pos' → logprob: -3.800507068634033
    7. 'color' → logprob: -3.800507068634033
    8. 'is' → logprob: -3.925507068634033
    9. ' idx' → logprob: -3.925507068634033
    10. 'v' → logprob: -4.050507068634033

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025734021328389645
    2. ' :' → logprob: -6.002573490142822
    3. ':(' → logprob: -10.127573013305664
    4. ':v' → logprob: -10.627573013305664
    5. ',' → logprob: -10.877573013305664
    6. 'v' → logprob: -13.252573013305664
    7. ',v' → logprob: -13.377573013305664
    8. '_:' → logprob: -13.377573013305664
    9. ':n' → logprob: -13.877573013305664
    10. ':value' → logprob: -13.877573013305664

Token 51: ' (' (ID: 350)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6776578426361084
    2. ' cost' → logprob: -1.4276578426361084
    3. '(cost' → logprob: -1.5526578426361084
    4. ' (' → logprob: -3.4276578426361084
    5. 'v' → logprob: -5.5526580810546875
    6. '(v' → logprob: -5.8026580810546875
    7. ' v' → logprob: -7.1776580810546875
    8. '((' → logprob: -8.552658081054688
    9. ' ((' → logprob: -9.302658081054688
    10. '(c' → logprob: -9.302658081054688

Token 52: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05427025631070137
    2. ' cost' → logprob: -3.0542702674865723
    3. '(cost' → logprob: -5.429270267486572
    4. 'v' → logprob: -7.304270267486572
    5. ' (' → logprob: -8.929269790649414
    6. '-cost' → logprob: -8.929269790649414
    7. '(v' → logprob: -9.679269790649414
    8. '1' → logprob: -10.054269790649414
    9. 'c' → logprob: -10.304269790649414
    10. ' v' → logprob: -10.304269790649414

Token 53: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.6345203518867493
    2. '<<' → logprob: -0.7595203518867493
    3. ',' → logprob: -7.384520530700684
    4. '+' → logprob: -7.884520530700684
    5. ')<<' → logprob: -8.384520530700684
    6. ' *' → logprob: -8.634520530700684
    7. ')' → logprob: -8.634520530700684
    8. ' +' → logprob: -9.759520530700684
    9. ' ' → logprob: -10.009520530700684
    10. '*' → logprob: -10.009520530700684

Token 54: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.30797457695007324
    2. '17' → logprob: -2.3079745769500732
    3. '32' → logprob: -2.5579745769500732
    4. '21' → logprob: -3.4329745769500732
    5. '30' → logprob: -4.057974815368652
    6. '16' → logprob: -4.182974815368652
    7. '18' → logprob: -5.057974815368652
    8. '15' → logprob: -5.432974815368652
    9. '10' → logprob: -5.682974815368652
    10. '24' → logprob: -6.057974815368652

Token 55: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.18751275539398193
    2. '17' → logprob: -2.9375128746032715
    3. '32' → logprob: -3.0625128746032715
    4. '21' → logprob: -3.9375128746032715
    5. '30' → logprob: -4.0625128746032715
    6. '16' → logprob: -4.6875128746032715
    7. '18' → logprob: -5.0625128746032715
    8. '10' → logprob: -5.3125128746032715
    9. '15' → logprob: -5.5625128746032715
    10. '24' → logprob: -6.1875128746032715

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016375737031921744
    2. '|' → logprob: -7.1266374588012695
    3. ' )' → logprob: -7.7516374588012695
    4. ')|' → logprob: -8.12663745880127
    5. ')+' → logprob: -9.25163745880127
    6. ' |' → logprob: -11.50163745880127
    7. ')v' → logprob: -15.37663745880127
    8. ')|(' → logprob: -15.62663745880127
    9. '）' → logprob: -16.126638412475586
    10. '")' → logprob: -16.251638412475586

Token 57: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.002211516024544835
    2. ' |' → logprob: -6.127211570739746
    3. '+' → logprob: -11.502211570739746
    4. 'v' → logprob: -11.877211570739746
    5. '^' → logprob: -12.752211570739746
    6. '```' → logprob: -13.002211570739746
    7. ' ' → logprob: -13.252211570739746
    8. ' v' → logprob: -13.752211570739746
    9. ' +' → logprob: -14.502211570739746
    10. ' ' → logprob: -15.252211570739746

Token 58: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005678066518157721
    2. ' v' → logprob: -7.50056791305542
    3. '(v' → logprob: -11.125567436218262
    4. ' (' → logprob: -16.375568389892578
    5. '(' → logprob: -16.750568389892578
    6. '	v' → logprob: -17.875568389892578
    7. '_v' → logprob: -19.500568389892578
    8. ' ' → logprob: -19.750568389892578
    9. 'vj' → logprob: -19.875568389892578
    10. 'vq' → logprob: -19.875568389892578

Token 59: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02599487639963627
    2. ' for' → logprob: -4.400994777679443
    3. '
' → logprob: -4.525994777679443
    4. '
' → logprob: -7.400994777679443
    5. 'def' → logprob: -8.025995254516602
    6. 'n' → logprob: -8.525995254516602
    7. '\n' → logprob: -8.650995254516602
    8. '' → logprob: -8.650995254516602
    9. 'edges' → logprob: -8.775995254516602
    10. '```' → logprob: -9.025995254516602

Token 60: 'decode' (ID: 44196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037406987976282835
    2. ' for' → logprob: -5.7537407875061035
    3. '<|end|>' → logprob: -7.8787407875061035
    4. '<|end|>' → logprob: -9.253740310668945
    5. '```' → logprob: -10.503740310668945
    6. '
' → logprob: -10.628740310668945
    7. '\' → logprob: -11.628740310668945
    8. '\n' → logprob: -12.253740310668945
    9. 'n' → logprob: -12.253740310668945
    10. 'def' → logprob: -13.003740310668945

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023307904601097107
    2. '=' → logprob: -3.7733078002929688
    3. '=lambda' → logprob: -9.898307800292969
    4. ' ' → logprob: -12.148307800292969
    5. '_' → logprob: -12.898307800292969
    6. 'lambda' → logprob: -13.898307800292969
    7. 'cost' → logprob: -14.898307800292969
    8. '_=' → logprob: -15.148307800292969
    9. '_cost' → logprob: -15.398307800292969
    10. 's' → logprob: -15.398307800292969

Token 62: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3874717652797699
    2. ' lambda' → logprob: -1.1374717950820923
    3. '(lambda' → logprob: -7.512471675872803
    4. '=lambda' → logprob: -9.887472152709961
    5. '_lambda' → logprob: -14.137472152709961
    6. ' lamb' → logprob: -14.137472152709961
    7. ' =' → logprob: -15.137472152709961
    8. 'λ' → logprob: -15.137472152709961
    9. ' (' → logprob: -15.262472152709961
    10. 'cost' → logprob: -15.512472152709961

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.157297968864441
    2. ' x' → logprob: -1.407297968864441
    3. 'cost' → logprob: -1.532297968864441
    4. ' cost' → logprob: -2.5322980880737305
    5. 'encoded' → logprob: -3.2822980880737305
    6. 'lambda' → logprob: -3.4072980880737305
    7. ' encoded' → logprob: -3.6572980880737305
    8. ' lambda' → logprob: -3.7822980880737305
    9. 'code' → logprob: -4.1572980880737305
    10. ' code' → logprob: -5.9072980880737305

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18032431602478027
    2. ' :' → logprob: -1.8053243160247803
    3. 'cost' → logprob: -8.68032455444336
    4. ':x' → logprob: -9.30532455444336
    5. 'x' → logprob: -9.43032455444336
    6. ' x' → logprob: -9.68032455444336
    7. ' cost' → logprob: -9.80532455444336
    8. ',' → logprob: -9.93032455444336
    9. ' :(' → logprob: -10.05532455444336
    10. ':(' → logprob: -11.05532455444336

Token 65: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16665779054164886
    2. ' (' → logprob: -1.91665780544281
    3. 'x' → logprob: -5.5416579246521
    4. '(' → logprob: -6.7916579246521
    5. ' x' → logprob: -7.0416579246521
    6. '((' → logprob: -7.6666579246521
    7. ' ((' → logprob: -11.166657447814941
    8. ' ' → logprob: -11.541657447814941
    9. '[x' → logprob: -14.166657447814941
    10. '   ' → logprob: -14.416657447814941

Token 66: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11631377041339874
    2. ' x' → logprob: -2.2413136959075928
    3. '(x' → logprob: -5.741313934326172
    4. ' (' → logprob: -8.241313934326172
    5. ' ' → logprob: -12.241313934326172
    6. ')x' → logprob: -12.866313934326172
    7. '(' → logprob: -13.866313934326172
    8. '	x' → logprob: -14.366313934326172
    9. '((' → logprob: -14.616313934326172
    10. '   ' → logprob: -14.741313934326172

Token 67: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0027643407229334116
    2. ' >>' → logprob: -6.7527642250061035
    3. '&' → logprob: -7.2527642250061035
    4. ')' → logprob: -7.3777642250061035
    5. '>>>' → logprob: -9.127764701843262
    6. ')>>' → logprob: -9.127764701843262
    7. ' &' → logprob: -11.127764701843262
    8. '>>&' → logprob: -11.377764701843262
    9. '>>)' → logprob: -11.752764701843262
    10. '&gt' → logprob: -12.627764701843262

Token 68: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -17.000009536743164
    4. '２０' → logprob: -18.375009536743164
    5. '10' → logprob: -18.437509536743164
    6. '12' → logprob: -18.437509536743164
    7. '```' → logprob: -18.687509536743164
    8. '0' → logprob: -18.687509536743164
    9. '۲۰' → logprob: -18.750009536743164
    10. '16' → logprob: -19.250009536743164

Token 69: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -16.875
    4. '10' → logprob: -17.25
    5. '0' → logprob: -18.375
    6. '16' → logprob: -18.875
    7. '21' → logprob: -19.375
    8. '۲۰' → logprob: -19.75
    9. '22' → logprob: -19.75
    10. '1' → logprob: -19.875

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009933913825079799
    2. ' ,' → logprob: -7.250993251800537
    3. ',x' → logprob: -8.250993728637695
    4. '),' → logprob: -11.250993728637695
    5. ',
' → logprob: -12.625993728637695
    6. ',n' → logprob: -13.625993728637695
    7. ')' → logprob: -13.750993728637695
    8. ',v' → logprob: -14.125993728637695
    9. ',y' → logprob: -14.750993728637695
    10. 'x' → logprob: -15.250993728637695

Token 71: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141352713108063
    2. ' x' → logprob: -1.7014135122299194
    3. ')' → logprob: -16.701414108276367
    4. ' ' → logprob: -16.826414108276367
    5. ')x' → logprob: -17.076414108276367
    6. '(x' → logprob: -17.201414108276367
    7. '	x' → logprob: -17.701414108276367
    8. '{x' → logprob: -18.076414108276367
    9. '```' → logprob: -18.076414108276367
    10. '`' → logprob: -18.451414108276367

Token 72: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.07992152124643326
    2. ' &' → logprob: -2.5799214839935303
    3. ')' → logprob: -6.954921722412109
    4. '&amp' → logprob: -10.70492172241211
    5. ')&' → logprob: -11.07992172241211
    6. ' ' → logprob: -11.20492172241211
    7. '&
' → logprob: -11.57992172241211
    8. '&A' → logprob: -13.07992172241211
    9. '),' → logprob: -13.32992172241211
    10. ',' → logprob: -13.45492172241211

Token 73: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6955639123916626
    2. '(' → logprob: -0.8205639123916626
    3. '104' → logprob: -3.070563793182373
    4. '0' → logprob: -4.445563793182373
    5. ' ((' → logprob: -6.195563793182373
    6. ' (' → logprob: -7.195563793182373
    7. ' ' → logprob: -10.195564270019531
    8. '(((' → logprob: -10.195564270019531
    9. '[(' → logprob: -11.320564270019531
    10. '(-' → logprob: -12.320564270019531

Token 74: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00198121415451169
    2. '104' → logprob: -6.501981258392334
    3. ' (' → logprob: -8.251980781555176
    4. '((' → logprob: -8.501980781555176
    5. '2' → logprob: -11.751980781555176
    6. '1' → logprob: -12.501980781555176
    7. ' ' → logprob: -14.001980781555176
    8. ')' → logprob: -14.501980781555176
    9. '{' → logprob: -14.876980781555176
    10. '105' → logprob: -15.126980781555176

Token 75: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.051732249557971954
    2. '20' → logprob: -3.301732301712036
    3. '(' → logprob: -4.551732063293457
    4. ')' → logprob: -6.801732063293457
    5. '+' → logprob: -7.801732063293457
    6. ' <<' → logprob: -7.801732063293457
    7. '<<(' → logprob: -8.176732063293457
    8. ')<<' → logprob: -8.801732063293457
    9. '<' → logprob: -8.926732063293457
    10. '```' → logprob: -9.176732063293457

Token 76: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '2' → logprob: -16.375097274780273
    4. '２０' → logprob: -17.125097274780273
    5. '```' → logprob: -17.625097274780273
    6. ' veinte' → logprob: -17.687597274780273
    7. '   ' → logprob: -17.687597274780273
    8. '30' → logprob: -17.875097274780273
    9. '  ' → logprob: -17.875097274780273
    10. '۲۰' → logprob: -18.125097274780273

Token 77: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '2' → logprob: -20.0
    4. '30' → logprob: -20.625
    5. '10' → logprob: -21.0
    6. '0' → logprob: -21.375
    7. '```' → logprob: -21.75
    8. '21' → logprob: -22.375
    9. '２０' → logprob: -22.5
    10. '40' → logprob: -22.5

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002534640720114112
    2. ')-' → logprob: -6.002534866333008
    3. ' )' → logprob: -10.127534866333008
    4. '0' → logprob: -11.502534866333008
    5. '20' → logprob: -12.627534866333008
    6. '1' → logprob: -12.627534866333008
    7. '3' → logprob: -14.627534866333008
    8. '-' → logprob: -15.127534866333008
    9. ')-(' → logprob: -15.627534866333008
    10. ' ' → logprob: -15.752534866333008

Token 79: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014299837872385979
    2. ')-' → logprob: -4.2642998695373535
    3. '-' → logprob: -9.264299392700195
    4. ' )' → logprob: -10.389299392700195
    5. ' -' → logprob: -12.639299392700195
    6. '1' → logprob: -12.889299392700195
    7. ')-(' → logprob: -13.764299392700195
    8. ']-' → logprob: -14.389299392700195
    9. ']' → logprob: -14.639299392700195
    10. '```' → logprob: -14.764299392700195

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '20' → logprob: -16.875036239624023
    4. '   ' → logprob: -17.375036239624023
    5. '```' → logprob: -17.500036239624023
    6. ')' → logprob: -18.125036239624023
    7. '           ' → logprob: -18.812536239624023
    8. '2' → logprob: -19.625036239624023
    9. '１' → logprob: -19.812536239624023
    10. '(' → logprob: -19.875036239624023

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '20' → logprob: -16.000009536743164
    4. '```' → logprob: -16.750009536743164
    5. '2' → logprob: -17.750009536743164
    6. ')' → logprob: -18.187509536743164
    7. '   ' → logprob: -18.250009536743164
    8. '21' → logprob: -18.500009536743164
    9. '-' → logprob: -18.812509536743164
    10. 'm' → logprob: -18.875009536743164

Token 82: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029763219878077507
    2. ')' → logprob: -3.5297632217407227
    3. ')))' → logprob: -12.029763221740723
    4. '))
' → logprob: -12.529763221740723
    5. ' ))' → logprob: -13.029763221740723
    6. ')
' → logprob: -14.779763221740723
    7. '))

' → logprob: -15.404763221740723
    8. ' )' → logprob: -15.404763221740723
    9. '),' → logprob: -16.529762268066406
    10. '0' → logprob: -17.904762268066406

Token 83: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032305908389389515
    2. '
' → logprob: -5.753230571746826
    3. ' for' → logprob: -9.878231048583984
    4. '
' → logprob: -14.253231048583984
    5. '<|end|>' → logprob: -15.378231048583984
    6. '

' → logprob: -15.503231048583984
    7. '```' → logprob: -15.753231048583984
    8. 'm' → logprob: -16.128231048583984
    9. '	for' → logprob: -16.753231048583984
    10. ' 
' → logprob: -17.128231048583984

Token 84: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07690948247909546
    2. ' range' → logprob: -2.7019095420837402
    3. ' ' → logprob: -5.45190954208374
    4. '_' → logprob: -6.07690954208374
    5. ' i' → logprob: -8.076909065246582
    6. ' in' → logprob: -10.576909065246582
    7. 'range' → logprob: -10.826909065246582
    8. '_range' → logprob: -12.951909065246582
    9. ' ▁' → logprob: -13.826909065246582
    10. ' xrange' → logprob: -13.951909065246582

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47491171956062317
    2. 'in' → logprob: -0.9749116897583008
    3. '_' → logprob: -8.0999116897583
    4. ' ' → logprob: -8.2249116897583
    5. 'n' → logprob: -8.8499116897583
    6. '<|end|>' → logprob: -10.5999116897583
    7. ',' → logprob: -10.7249116897583
    8. 'range' → logprob: -10.8499116897583
    9. 'i' → logprob: -10.9749116897583
    10. ' i' → logprob: -11.2249116897583

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048589076846838
    2. ' range' → logprob: -3.048588991165161
    3. '(range' → logprob: -13.798588752746582
    4. '	range' → logprob: -14.798588752746582
    5. 'r' → logprob: -16.2985897064209
    6. 'rang' → logprob: -16.6735897064209
    7. '_range' → logprob: -17.0485897064209
    8. 'ange' → logprob: -17.0485897064209
    9. 'ran' → logprob: -17.5485897064209
    10. ' ' → logprob: -17.6735897064209

Token 87: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.07863406091928482
    2. '(' → logprob: -3.078634023666382
    3. ' (' → logprob: -3.953634023666382
    4. '(n' → logprob: -4.578634262084961
    5. '(s' → logprob: -9.328634262084961
    6. ' m' → logprob: -10.203634262084961
    7. ' ' → logprob: -11.828634262084961
    8. '(int' → logprob: -12.328634262084961
    9. '(range' → logprob: -12.453634262084961
    10. 'm' → logprob: -13.328634262084961

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020374519750475883
    2. ' ):' → logprob: -4.520374298095703
    3. '):
' → logprob: -4.895374298095703
    4. ')' → logprob: -7.020374298095703
    5. ',' → logprob: -7.270374298095703
    6. ':' → logprob: -9.395374298095703
    7. ' ):
' → logprob: -10.145374298095703
    8. '):
' → logprob: -10.270374298095703
    9. ' )' → logprob: -11.145374298095703
    10. ' ' → logprob: -11.645374298095703

Token 89: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.22904007136821747
    2. 'u' → logprob: -1.6040400266647339
    3. '   ' → logprob: -6.729040145874023
    4. 'a' → logprob: -6.854040145874023
    5. ' a' → logprob: -7.104040145874023
    6. '	u' → logprob: -8.479040145874023
    7. 'v' → logprob: -9.354040145874023
    8. ' v' → logprob: -9.354040145874023
    9. ' line' → logprob: -9.354040145874023
    10. '```' → logprob: -10.854040145874023

Token 90: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.11780675500631332
    2. ' u' → logprob: -2.3678066730499268
    3. 'a' → logprob: -4.117806911468506
    4. ' a' → logprob: -7.367806911468506
    5. 'f' → logprob: -8.742806434631348
    6. 'x' → logprob: -9.492806434631348
    7. '   ' → logprob: -9.492806434631348
    8. 'U' → logprob: -9.867806434631348
    9. ' ' → logprob: -10.367806434631348
    10. 'v' → logprob: -10.742806434631348

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031613188330084085
    2. ',v' → logprob: -5.878161430358887
    3. ' ,' → logprob: -8.128161430358887
    4. '=' → logprob: -10.253161430358887
    5. ',u' → logprob: -11.128161430358887
    6. 'v' → logprob: -13.503161430358887
    7. ' =' → logprob: -13.628161430358887
    8. 's' → logprob: -13.878161430358887
    9. '_,' → logprob: -14.003161430358887
    10. ',input' → logprob: -14.003161430358887

Token 92: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931822896003723
    2. ' v' → logprob: -0.6931822896003723
    3. ' ' → logprob: -11.193181991577148
    4. ',v' → logprob: -11.443181991577148
    5. '	v' → logprob: -12.818181991577148
    6. ',' → logprob: -12.818181991577148
    7. 'c' → logprob: -13.693181991577148
    8. '_v' → logprob: -14.318181991577148
    9. ' ,' → logprob: -14.318181991577148
    10. ' c' → logprob: -14.568181991577148

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009621741250157356
    2. '=' → logprob: -4.759621620178223
    3. ' =' → logprob: -7.259621620178223
    4. ' ,' → logprob: -8.134621620178223
    5. ' ' → logprob: -12.384621620178223
    6. 'u' → logprob: -14.009621620178223
    7. ',u' → logprob: -14.384621620178223
    8. '<|end|>' → logprob: -14.572121620178223
    9. ',v' → logprob: -14.697121620178223
    10. ',c' → logprob: -14.822121620178223

Token 94: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.044617772102356
    2. 'c' → logprob: -1.544617772102356
    3. ' c' → logprob: -1.669617772102356
    4. ' a' → logprob: -1.919617772102356
    5. ' w' → logprob: -3.6696176528930664
    6. 'w' → logprob: -3.9196176528930664
    7. 'cost' → logprob: -3.9196176528930664
    8. ' cost' → logprob: -4.544617652893066
    9. ' ' → logprob: -6.169617652893066
    10. 'x' → logprob: -6.419617652893066

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000116655595775228
    2. 'b' → logprob: -10.000116348266602
    3. ' ,' → logprob: -10.375116348266602
    4. 'cost' → logprob: -10.750116348266602
    5. ',b' → logprob: -11.625116348266602
    6. ',c' → logprob: -13.125116348266602
    7. '=' → logprob: -13.375116348266602
    8. 'c' → logprob: -13.375116348266602
    9. '_cost' → logprob: -13.625116348266602
    10. 'w' → logprob: -14.125116348266602

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007750129327178001
    2. ' b' → logprob: -5.007750034332275
    3. 'c' → logprob: -7.757750034332275
    4. 'l' → logprob: -8.257750511169434
    5. 'w' → logprob: -9.382750511169434
    6. 'd' → logprob: -9.757750511169434
    7. 'p' → logprob: -10.507750511169434
    8. 's' → logprob: -10.632750511169434
    9. 'x' → logprob: -10.632750511169434
    10. 'z' → logprob: -10.882750511169434

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868768811225891
    2. '=' → logprob: -1.1368768215179443
    3. ' ' → logprob: -12.261877059936523
    4. ',' → logprob: -14.636877059936523
    5. '=input' → logprob: -16.261877059936523
    6. '  ' → logprob: -16.261877059936523
    7. '=line' → logprob: -16.261877059936523
    8. ')' → logprob: -16.511877059936523
    9. '   ' → logprob: -16.511877059936523
    10. '＝' → logprob: -16.761877059936523

Token 98: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04859123006463051
    2. 'map' → logprob: -3.048591136932373
    3. '	map' → logprob: -13.298591613769531
    4. '   ' → logprob: -13.548591613769531
    5. ' ' → logprob: -14.673591613769531
    6. 'm' → logprob: -16.29859161376953
    7. '    ' → logprob: -16.42359161376953
    8. '(map' → logprob: -16.42359161376953
    9. '  ' → logprob: -16.54859161376953
    10. ' list' → logprob: -16.79859161376953

Token 99: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027301779482513666
    2. '(' → logprob: -8.375272750854492
    3. '(lambda' → logprob: -11.125272750854492
    4. ' (' → logprob: -11.875272750854492
    5. '[int' → logprob: -11.875272750854492
    6. '<int' → logprob: -12.500272750854492
    7. '=int' → logprob: -12.875272750854492
    8. ',int' → logprob: -13.500272750854492
    9. 'int' → logprob: -13.625272750854492
    10. '<|end|>' → logprob: -13.625272750854492

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15569457411766052
    2. ',input' → logprob: -2.0306944847106934
    3. '(input' → logprob: -4.405694484710693
    4. 'input' → logprob: -7.280694484710693
    5. '(' → logprob: -10.655694961547852
    6. ' ,' → logprob: -12.405694961547852
    7. 'import' → logprob: -12.655694961547852
    8. ' input' → logprob: -13.530694961547852
    9. '(),' → logprob: -13.530694961547852
    10. '=input' → logprob: -13.655694961547852

Token 101: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889199256896973
    2. ' input' → logprob: -2.5788919925689697
    3. '(input' → logprob: -13.32889175415039
    4. ',input' → logprob: -14.82889175415039
    5. '=input' → logprob: -16.20389175415039
    6. '	input' → logprob: -16.70389175415039
    7. ')' → logprob: -16.95389175415039
    8. ' ' → logprob: -17.95389175415039
    9. '   ' → logprob: -18.45389175415039
    10. '[input' → logprob: -18.70389175415039

Token 102: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001358400477329269
    2. ')' → logprob: -9.62513542175293
    3. '()' → logprob: -9.75013542175293
    4. '.' → logprob: -11.87513542175293
    5. ' ().' → logprob: -13.00013542175293
    6. '.readline' → logprob: -14.50013542175293
    7. '(' → logprob: -14.75013542175293
    8. ' .' → logprob: -15.37513542175293
    9. '.split' → logprob: -15.62513542175293
    10. ' ' → logprob: -15.75013542175293

Token 103: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. '(split' → logprob: -14.500000953674316
    3. 'strip' → logprob: -15.000000953674316
    4. ' split' → logprob: -16.000001907348633
    5. 'rstrip' → logprob: -17.000001907348633
    6. 'spl' → logprob: -17.625001907348633
    7. ')' → logprob: -18.625001907348633
    8. 'plit' → logprob: -18.875001907348633
    9. '.split' → logprob: -19.625001907348633
    10. '```' → logprob: -20.000001907348633

Token 104: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049094825983047485
    2. '())' → logprob: -3.1740949153900146
    3. ')
' → logprob: -5.5490946769714355
    4. '())
' → logprob: -6.4240946769714355
    5. '()' → logprob: -7.5490946769714355
    6. '(' → logprob: -10.924095153808594
    7. '()
' → logprob: -12.299095153808594
    8. ')
' → logprob: -13.049095153808594
    9. ')`' → logprob: -13.049095153808594
    10. ' )' → logprob: -13.174095153808594

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009170614182949066
    2. 'edges' → logprob: -4.7591705322265625
    3. ' edges' → logprob: -7.7591705322265625
    4. '(edges' → logprob: -9.509170532226562
    5. '    
' → logprob: -11.259170532226562
    6. '```' → logprob: -11.509170532226562
    7. '_edges' → logprob: -11.634170532226562
    8. '<|end|>' → logprob: -11.884170532226562
    9. '.edges' → logprob: -12.259170532226562
    10. '
' → logprob: -12.634170532226562

Token 106: ' u' (ID: 337)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7866876125335693
    2. '   ' → logprob: -1.0366876125335693
    3. ' edges' → logprob: -1.6616876125335693
    4. '(edges' → logprob: -9.536687850952148
    5. '    
' → logprob: -10.161687850952148
    6. '
' → logprob: -10.536687850952148
    7. '.edges' → logprob: -11.161687850952148
    8. '```' → logprob: -11.786687850952148
    9. ' ' → logprob: -11.911687850952148
    10. '_edges' → logprob: -12.036687850952148

Token 107: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1804223507642746
    2. '[' → logprob: -2.055422306060791
    3. '[u' → logprob: -3.680422306060791
    4. ' -' → logprob: -5.180422306060791
    5. ' -=' → logprob: -5.555422306060791
    6. '[-' → logprob: -7.430422306060791
    7. '.' → logprob: -8.30542278289795
    8. '][' → logprob: -8.30542278289795
    9. '-=' → logprob: -8.30542278289795
    10. '   ' → logprob: -8.43042278289795

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.750380516052246
    4. '<|end|>' → logprob: -16.250381469726562
    5. '```' → logprob: -17.000381469726562
    6. '  ' → logprob: -18.750381469726562
    7. '=' → logprob: -19.687881469726562
    8. '<|end|>' → logprob: -20.062881469726562
    9. '[' → logprob: -20.125381469726562
    10. '１' → logprob: -20.187881469726562

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -17.625001907348633
    4. '```' → logprob: -19.750001907348633
    5. '１' → logprob: -20.000001907348633
    6. '۱' → logprob: -20.125001907348633
    7. '১' → logprob: -20.875001907348633
    8. '१' → logprob: -21.062501907348633
    9. 'import' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.437501907348633

Token 110: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021466415375471115
    2. 'edges' → logprob: -4.521466255187988
    3. ' edges' → logprob: -5.146466255187988
    4. '
' → logprob: -5.771466255187988
    5. ',' → logprob: -6.771466255187988
    6. 'v' → logprob: -8.896466255187988
    7. 'u' → logprob: -10.146466255187988
    8. 'm' → logprob: -10.771466255187988
    9. ';' → logprob: -10.771466255187988
    10. '.edges' → logprob: -11.521466255187988

Token 111: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03811493143439293
    2. ' v' → logprob: -3.2881150245666504
    3. '   ' → logprob: -9.538114547729492
    4. '	v' → logprob: -14.038114547729492
    5. 'u' → logprob: -15.163114547729492
    6. '    ' → logprob: -16.413114547729492
    7. ' ' → logprob: -16.413114547729492
    8. '
' → logprob: -16.538114547729492
    9. '  ' → logprob: -17.288114547729492
    10. 'edges' → logprob: -17.288114547729492

Token 112: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.010163890197873116
    2. '-=' → logprob: -4.7601637840271
    3. '-' → logprob: -6.5101637840271
    4. ' -' → logprob: -10.385164260864258
    5. ' ' → logprob: -11.010164260864258
    6. '```' → logprob: -12.635164260864258
    7. ',' → logprob: -13.135164260864258
    8. '   ' → logprob: -13.385164260864258
    9. '=' → logprob: -13.760164260864258
    10. '<|end|>' → logprob: -13.885164260864258

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022585332393646
    2. ' ' → logprob: -1.9102258682250977
    3. '<|end|>' → logprob: -14.035225868225098
    4. '-' → logprob: -15.660225868225098
    5. '   ' → logprob: -16.28522491455078
    6. '```' → logprob: -16.28522491455078
    7. '  ' → logprob: -16.66022491455078
    8. ' -' → logprob: -16.66022491455078
    9. '0' → logprob: -16.72272491455078
    10. ' ' → logprob: -16.78522491455078

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.250030517578125
    4. '```' → logprob: -17.312530517578125
    5. '<|end|>' → logprob: -17.562530517578125
    6. 'v' → logprob: -17.875030517578125
    7. '0' → logprob: -18.125030517578125
    8. '2' → logprob: -18.250030517578125
    9. '۱' → logprob: -18.562530517578125
    10. '१' → logprob: -18.750030517578125

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014922104775905609
    2. 'edges' → logprob: -4.639922142028809
    3. ' edges' → logprob: -5.514922142028809
    4. '
' → logprob: -6.889922142028809
    5. '    
' → logprob: -9.514922142028809
    6. '(edges' → logprob: -11.139922142028809
    7. '_edges' → logprob: -12.389922142028809
    8. ',' → logprob: -12.889922142028809
    9. '.edges' → logprob: -12.889922142028809
    10. '
' → logprob: -13.139922142028809

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47536638379096985
    2. 'edges' → logprob: -1.2253663539886475
    3. ' edges' → logprob: -2.4753663539886475
    4. '
' → logprob: -8.100366592407227
    5. '(edges' → logprob: -8.850366592407227
    6. '    
' → logprob: -10.350366592407227
    7. '.edges' → logprob: -10.725366592407227
    8. '_edges' → logprob: -10.975366592407227
    9. '```' → logprob: -11.850366592407227
    10. 'for' → logprob: -11.850366592407227

Token 117: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.060566168278455734
    2. ' edges' → logprob: -3.0605661869049072
    3. '   ' → logprob: -4.435565948486328
    4. '
' → logprob: -11.185565948486328
    5. 'for' → logprob: -11.435565948486328
    6. 'if' → logprob: -11.685565948486328
    7. '(edges' → logprob: -11.685565948486328
    8. '    
' → logprob: -12.685565948486328
    9. ' for' → logprob: -12.810565948486328
    10. '.edges' → logprob: -13.310565948486328

Token 118: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.000009536743164
    3. '[v' → logprob: -12.875009536743164
    4. ' [' → logprob: -14.500009536743164
    5. '```' → logprob: -16.250009536743164
    6. '   ' → logprob: -17.250009536743164
    7. 'u' → logprob: -17.250009536743164
    8. '[a' → logprob: -17.250009536743164
    9. '][' → logprob: -17.875009536743164
    10. ')[' → logprob: -18.750009536743164

Token 119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04864584282040596
    2. '[' → logprob: -3.0486457347869873
    3. ' ][' → logprob: -10.923645973205566
    4. ']' → logprob: -11.423645973205566
    5. '"][' → logprob: -12.298645973205566
    6. '   ' → logprob: -12.423645973205566
    7. ''][' → logprob: -12.923645973205566
    8. '
' → logprob: -13.173645973205566
    9. ')[' → logprob: -13.548645973205566
    10. 's' → logprob: -13.673645973205566

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009303949191235006
    2. '1' → logprob: -7.125930309295654
    3. 'a' → logprob: -9.000930786132812
    4. 'b' → logprob: -14.000930786132812
    5. ' ' → logprob: -14.375930786132812
    6. 's' → logprob: -15.063430786132812
    7. '
' → logprob: -15.750930786132812
    8. '(a' → logprob: -16.313430786132812
    9. '[' → logprob: -16.875930786132812
    10. '   ' → logprob: -16.938430786132812

Token 121: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001062463503330946
    2. '.append' → logprob: -7.501062393188477
    3. ').' → logprob: -7.876062393188477
    4. '.' → logprob: -9.126062393188477
    5. ' ].' → logprob: -11.501062393188477
    6. ']' → logprob: -11.626062393188477
    7. '}.' → logprob: -14.876062393188477
    8. '.py' → logprob: -15.376062393188477
    9. ' .' → logprob: -15.376062393188477
    10. ')' → logprob: -15.876062393188477

Token 122: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.837811088189483e-05
    2. 'push' → logprob: -9.625068664550781
    3. '.append' → logprob: -13.875068664550781
    4. 'app' → logprob: -14.250068664550781
    5. 'heap' → logprob: -14.750068664550781
    6. 'appen' → logprob: -15.750068664550781
    7. 'he' → logprob: -16.62506866455078
    8. ' append' → logprob: -17.00006866455078
    9. '	append' → logprob: -17.75006866455078
    10. '_append' → logprob: -18.37506866455078

Token 123: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03873921558260918
    2. '(' → logprob: -3.2887392044067383
    3. '(encoded' → logprob: -7.288739204406738
    4. '(enc' → logprob: -11.788739204406738
    5. '(a' → logprob: -13.288739204406738
    6. 'encode' → logprob: -13.288739204406738
    7. '(de' → logprob: -14.538739204406738
    8. '(en' → logprob: -14.663739204406738
    9. ' (' → logprob: -14.663739204406738
    10. '(((' → logprob: -14.663739204406738

Token 124: 'a' (ID: 64)
  Prédit: 'encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encode' → logprob: -0.5603846311569214
    2. 'v' → logprob: -0.9353846311569214
    3. 'a' → logprob: -4.185384750366211
    4. ' encode' → logprob: -4.435384750366211
    5. 'b' → logprob: -5.060384750366211
    6. ' v' → logprob: -6.060384750366211
    7. '   ' → logprob: -8.560384750366211
    8. '(' → logprob: -9.310384750366211
    9. 'partial' → logprob: -9.310384750366211
    10. 'decode' → logprob: -9.310384750366211

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032084921840578318
    2. ' ,' → logprob: -6.378208637237549
    3. ',v' → logprob: -6.503208637237549
    4. 'v' → logprob: -12.87820816040039
    5. ',u' → logprob: -13.00320816040039
    6. ',b' → logprob: -15.00320816040039
    7. ' v' → logprob: -15.00320816040039
    8. ',
' → logprob: -15.50320816040039
    9. ' ' → logprob: -15.62820816040039
    10. '‌,' → logprob: -15.62820816040039

Token 126: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0017900168895721436
    2. ' v' → logprob: -6.3767900466918945
    3. 'encode' → logprob: -9.501790046691895
    4. ' encode' → logprob: -11.876790046691895
    5. ')v' → logprob: -13.501790046691895
    6. 'b' → logprob: -13.626790046691895
    7. '   ' → logprob: -14.376790046691895
    8. 'vq' → logprob: -14.501790046691895
    9. '(v' → logprob: -14.626790046691895
    10. 'u' → logprob: -14.751790046691895

Token 127: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5276339054107666
    2. '))' → logprob: -0.9026339054107666
    3. ',' → logprob: -5.5276336669921875
    4. '))
' → logprob: -8.652633666992188
    5. ' ))
' → logprob: -9.027633666992188
    6. ' ))' → logprob: -9.527633666992188
    7. '))

' → logprob: -9.652633666992188
    8. '   ' → logprob: -10.402633666992188
    9. ',))
' → logprob: -10.402633666992188
    10. '));' → logprob: -11.402633666992188

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006073490716516972
    2. 'edges' → logprob: -5.506073474884033
    3. ' edges' → logprob: -6.256073474884033
    4. ',' → logprob: -10.131073951721191
    5. ')' → logprob: -11.756073951721191
    6. '
' → logprob: -11.881073951721191
    7. '(edges' → logprob: -12.131073951721191
    8. '.edges' → logprob: -12.506073951721191
    9. '    
' → logprob: -13.256073951721191
    10. ')
' → logprob: -13.631073951721191

Token 129: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.002422033343464136
    2. '   ' → logprob: -6.377421855926514
    3. ' edges' → logprob: -7.252421855926514
    4. '(edges' → logprob: -13.002422332763672
    5. '    
' → logprob: -13.252422332763672
    6. '[' → logprob: -13.502422332763672
    7. '.edges' → logprob: -13.627422332763672
    8. '0' → logprob: -14.127422332763672
    9. '(' → logprob: -14.377422332763672
    10. '```' → logprob: -14.877422332763672

Token 130: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11024421453475952
    2. '[u' → logprob: -2.4852442741394043
    3. '[v' → logprob: -4.110244274139404
    4. '][' → logprob: -5.485244274139404
    5. ' [' → logprob: -8.985243797302246
    6. 'v' → logprob: -8.985243797302246
    7. 'u' → logprob: -10.110243797302246
    8. 's' → logprob: -10.235243797302246
    9. '
' → logprob: -10.485243797302246
    10. '```' → logprob: -10.610243797302246

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04312524572014809
    2. '[' → logprob: -3.1681251525878906
    3. ')[' → logprob: -9.66812515258789
    4. ']' → logprob: -11.16812515258789
    5. '0' → logprob: -11.79312515258789
    6. 'import' → logprob: -11.91812515258789
    7. 'def' → logprob: -12.54312515258789
    8. 's' → logprob: -12.66812515258789
    9. '"][' → logprob: -12.66812515258789
    10. ' ][' → logprob: -12.79312515258789

Token 132: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08255492895841599
    2. '0' → logprob: -2.582554817199707
    3. '1' → logprob: -5.957554817199707
    4. '][' → logprob: -7.457554817199707
    5. ' [' → logprob: -8.207554817199707
    6. ' ' → logprob: -9.082554817199707
    7. '
' → logprob: -9.582554817199707
    8. ')[' → logprob: -12.082554817199707
    9. 'import' → logprob: -12.270054817199707
    10. 'def' → logprob: -12.707554817199707

Token 133: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004717772360891104
    2. '].' → logprob: -5.379717826843262
    3. '[' → logprob: -9.629717826843262
    4. ' ][' → logprob: -11.379717826843262
    5. ']' → logprob: -11.879717826843262
    6. '.' → logprob: -12.254717826843262
    7. '   ' → logprob: -13.129717826843262
    8. ')[' → logprob: -13.379717826843262
    9. ')][' → logprob: -13.379717826843262
    10. ' ' → logprob: -13.879717826843262

Token 134: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.054500666621607e-06
    2. 'appen' → logprob: -13.87500286102295
    3. ' append' → logprob: -13.87500286102295
    4. 'app' → logprob: -14.62500286102295
    5. '.append' → logprob: -14.62500286102295
    6. '	append' → logprob: -16.125003814697266
    7. '[' → logprob: -17.000003814697266
    8. ' ' → logprob: -17.500003814697266
    9. '```' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.750003814697266

Token 135: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0036180049646645784
    2. '(a' → logprob: -5.628618240356445
    3. '(' → logprob: -11.253618240356445
    4. ' (' → logprob: -12.503618240356445
    5. '(
' → logprob: -14.753618240356445
    6. '(A' → logprob: -15.503618240356445
    7. ' ((' → logprob: -15.628618240356445
    8. ' ' → logprob: -15.753618240356445
    9. '[(' → logprob: -16.378618240356445
    10. '   ' → logprob: -16.378618240356445

Token 136: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003388502635061741
    2. 'a' → logprob: -5.878388404846191
    3. ' (' → logprob: -7.628388404846191
    4. '(' → logprob: -9.503388404846191
    5. ' a' → logprob: -11.628388404846191
    6. ')' → logprob: -12.503388404846191
    7. ')a' → logprob: -13.378388404846191
    8. '[a' → logprob: -13.628388404846191
    9. ' ' → logprob: -13.753388404846191
    10. '   ' → logprob: -14.253388404846191

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',u' → logprob: -15.750004768371582
    4. ',v' → logprob: -17.6250057220459
    5. ',w' → logprob: -18.0000057220459
    6. ',
' → logprob: -18.2500057220459
    7. '‌,' → logprob: -18.7500057220459
    8. ',n' → logprob: -20.1250057220459
    9. ' ' → logprob: -20.2500057220459
    10. '[' → logprob: -20.2500057220459

Token 138: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0031880477908998728
    2. ' u' → logprob: -5.753188133239746
    3. '   ' → logprob: -13.003188133239746
    4. '
' → logprob: -13.253188133239746
    5. ' ' → logprob: -13.378188133239746
    6. '	u' → logprob: -14.128188133239746
    7. ',' → logprob: -14.378188133239746
    8. '
' → logprob: -14.503188133239746
    9. 'v' → logprob: -14.628188133239746
    10. ')' → logprob: -14.815688133239746

Token 139: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4886467754840851
    2. ')
' → logprob: -0.9886467456817627
    3. '   ' → logprob: -4.238646984100342
    4. '))' → logprob: -10.988646507263184
    5. ')
' → logprob: -12.238646507263184
    6. '))
' → logprob: -12.363646507263184
    7. '[' → logprob: -12.613646507263184
    8. ')

' → logprob: -12.738646507263184
    9. ' )
' → logprob: -13.613646507263184
    10. ' )' → logprob: -14.238646507263184

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03853804990649223
    2. 'edges' → logprob: -3.2885379791259766
    3. ' edges' → logprob: -7.663537979125977
    4. '
' → logprob: -11.413537979125977
    5. '```' → logprob: -12.038537979125977
    6. '(edges' → logprob: -12.413537979125977
    7. '    
' → logprob: -13.663537979125977
    8. '.edges' → logprob: -13.663537979125977
    9. '[' → logprob: -14.413537979125977
    10. '_edges' → logprob: -14.413537979125977

Token 141: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.062098655849695206
    2. '   ' → logprob: -2.812098741531372
    3. ' edges' → logprob: -9.187098503112793
    4. '
' → logprob: -11.437098503112793
    5. '    
' → logprob: -12.187098503112793
    6. '(edges' → logprob: -12.687098503112793
    7. '```' → logprob: -12.687098503112793
    8. '.edges' → logprob: -13.187098503112793
    9. '  ' → logprob: -13.562098503112793
    10. '``' → logprob: -14.312098503112793

Token 142: '[u' (ID: 48750)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0094270259141922
    2. '[v' → logprob: -4.759427070617676
    3. '[u' → logprob: -7.134427070617676
    4. '][' → logprob: -12.134427070617676
    5. '[][' → logprob: -12.134427070617676
    6. '1' → logprob: -13.509427070617676
    7. 'v' → logprob: -14.009427070617676
    8. ' [' → logprob: -14.634427070617676
    9. '[s' → logprob: -15.009427070617676
    10. '```' → logprob: -15.384427070617676

Token 143: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02060612104833126
    2. '[' → logprob: -3.89560604095459
    3. ']' → logprob: -10.52060604095459
    4. ')[' → logprob: -11.02060604095459
    5. '1' → logprob: -11.52060604095459
    6. ' ][' → logprob: -12.52060604095459
    7. '
' → logprob: -14.02060604095459
    8. 'import' → logprob: -14.14560604095459
    9. '>[' → logprob: -14.27060604095459
    10. '`' → logprob: -14.27060604095459

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004083624575287104
    2. '[' → logprob: -5.504083633422852
    3. '
' → logprob: -13.254083633422852
    4. ' ' → logprob: -13.504083633422852
    5. '```' → logprob: -14.504083633422852
    6. ' [' → logprob: -15.129083633422852
    7. '[
' → logprob: -15.316583633422852
    8. '][' → logprob: -15.754083633422852
    9. '0' → logprob: -15.754083633422852
    10. '(' → logprob: -16.94158363342285

Token 145: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.058870065957307816
    2. '][' → logprob: -2.9338700771331787
    3. '].' → logprob: -6.0588698387146
    4. '.append' → logprob: -6.6838698387146
    5. '.' → logprob: -8.558870315551758
    6. ')[' → logprob: -9.308870315551758
    7. '.[' → logprob: -10.308870315551758
    8. '[].' → logprob: -10.308870315551758
    9. ').' → logprob: -10.933870315551758
    10. ']' → logprob: -12.058870315551758

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. '.append' → logprob: -13.875001907348633
    3. 'appen' → logprob: -14.250001907348633
    4. ' append' → logprob: -14.875001907348633
    5. '	append' → logprob: -17.000001907348633
    6. 'add' → logprob: -19.750001907348633
    7. '_append' → logprob: -20.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. 'app' → logprob: -20.750001907348633
    10. 'Append' → logprob: -21.125001907348633

Token 147: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. ' ((' → logprob: -16.875
    4. '(
' → logprob: -17.0
    5. '(('' → logprob: -17.25
    6. '(b' → logprob: -17.625
    7. '[(' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. '<|end|>' → logprob: -18.5
    10. ')((' → logprob: -18.75

Token 148: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0022008095402270555
    2. '(b' → logprob: -6.127200603485107
    3. ' b' → logprob: -11.377201080322266
    4. '   ' → logprob: -13.627201080322266
    5. ' (' → logprob: -13.752201080322266
    6. ')b' → logprob: -13.877201080322266
    7. ')' → logprob: -15.127201080322266
    8. '	b' → logprob: -15.627201080322266
    9. '[b' → logprob: -15.877201080322266
    10. '
' → logprob: -16.627201080322266

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.314625690924004e-05
    2. ',v' → logprob: -10.125073432922363
    3. ' ,' → logprob: -10.375073432922363
    4. ',
' → logprob: -14.000073432922363
    5. 'v' → logprob: -14.250073432922363
    6. '<|end|>' → logprob: -15.750073432922363
    7. ')' → logprob: -16.500072479248047
    8. ' v' → logprob: -16.750072479248047
    9. '‌,' → logprob: -17.375072479248047
    10. ',b' → logprob: -17.375072479248047

Token 150: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005311427637934685
    2. ' u' → logprob: -5.255311489105225
    3. 'v' → logprob: -9.505311012268066
    4. '(u' → logprob: -13.255311012268066
    5. ' v' → logprob: -14.130311012268066
    6. '[u' → logprob: -15.630311012268066
    7. '   ' → logprob: -15.755311012268066
    8. ' ' → logprob: -16.630311965942383
    9. ',u' → logprob: -16.880311965942383
    10. '	u' → logprob: -17.005311965942383

Token 151: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04919550195336342
    2. ')' → logprob: -3.0491955280303955
    3. '   ' → logprob: -7.424195289611816
    4. ')
' → logprob: -11.799195289611816
    5. ' )
' → logprob: -12.924195289611816
    6. '))
' → logprob: -14.549195289611816
    7. '[' → logprob: -15.424195289611816
    8. ')`
' → logprob: -15.549195289611816
    9. ')

' → logprob: -16.049196243286133
    10. '[])
' → logprob: -16.049196243286133

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008208265644498169
    2. 'edges' → logprob: -7.125820636749268
    3. ' edges' → logprob: -11.125821113586426
    4. '```' → logprob: -14.125821113586426
    5. '(edges' → logprob: -14.875821113586426
    6. '
' → logprob: -15.500821113586426
    7. '<|end|>' → logprob: -16.50082015991211
    8. '    
' → logprob: -16.62582015991211
    9. '   ' → logprob: -17.00082015991211
    10. '_edges' → logprob: -17.12582015991211

Token 153: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.003209084505215287
    2. '   ' → logprob: -5.753209114074707
    3. ' edges' → logprob: -10.503209114074707
    4. '(edges' → logprob: -13.128209114074707
    5. '.edges' → logprob: -14.253209114074707
    6. '
' → logprob: -14.878209114074707
    7. '```' → logprob: -15.128209114074707
    8. '    
' → logprob: -15.503209114074707
    9. '[
' → logprob: -15.503209114074707
    10. '_edges' → logprob: -17.00320816040039

Token 154: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.60414821645827e-06
    2. '[u' → logprob: -12.375004768371582
    3. '[' → logprob: -15.625004768371582
    4. 'v' → logprob: -15.625004768371582
    5. '[s' → logprob: -19.000003814697266
    6. '[val' → logprob: -20.125003814697266
    7. '[][' → logprob: -20.875003814697266
    8. '
' → logprob: -21.000003814697266
    9. '[x' → logprob: -21.125003814697266
    10. '<v' → logprob: -21.500003814697266

Token 155: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4741567373275757
    2. '[' → logprob: -0.9741567373275757
    3. ')[' → logprob: -10.224156379699707
    4. ']' → logprob: -11.099156379699707
    5. '>[' → logprob: -11.849156379699707
    6. ' [' → logprob: -11.974156379699707
    7. ' ][' → logprob: -12.724156379699707
    8. '```' → logprob: -13.474156379699707
    9. 'import' → logprob: -13.599156379699707
    10. '"][' → logprob: -13.724156379699707

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.125018119812012
    3. '0' → logprob: -13.125018119812012
    4. ' ' → logprob: -13.875018119812012
    5. '
' → logprob: -14.625018119812012
    6. '```' → logprob: -16.562519073486328
    7. '   ' → logprob: -17.187519073486328
    8. '-' → logprob: -17.312519073486328
    9. '
' → logprob: -17.437519073486328
    10. ' [' → logprob: -17.625019073486328

Token 157: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.42877915501594543
    2. '[' → logprob: -1.053779125213623
    3. ')[' → logprob: -9.928779602050781
    4. ' ][' → logprob: -11.428779602050781
    5. '].' → logprob: -12.053779602050781
    6. ')][' → logprob: -12.303779602050781
    7. ']' → logprob: -13.178779602050781
    8. ' [' → logprob: -13.678779602050781
    9. '"][' → logprob: -14.178779602050781
    10. '1' → logprob: -14.303779602050781

Token 158: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.2725986838340759
    2. '1' → logprob: -1.5225987434387207
    3. '[' → logprob: -3.8975987434387207
    4. '0' → logprob: -8.772598266601562
    5. '.append' → logprob: -12.147598266601562
    6. ' append' → logprob: -12.897598266601562
    7. '```' → logprob: -13.897598266601562
    8. 'appen' → logprob: -14.397598266601562
    9. 'app' → logprob: -14.522598266601562
    10. ' ' → logprob: -15.022598266601562

Token 159: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.000025749206543
    3. '([' → logprob: -12.375025749206543
    4. '(([' → logprob: -12.875025749206543
    5. ' ((' → logprob: -14.375025749206543
    6. '[(' → logprob: -14.375025749206543
    7. '(
' → logprob: -15.500025749206543
    8. ' (' → logprob: -15.750025749206543
    9. '([(' → logprob: -16.125024795532227
    10. '(b' → logprob: -16.625024795532227

Token 160: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.18019281327724457
    2. 'b' → logprob: -1.8051928281784058
    3. '(' → logprob: -8.180192947387695
    4. ' (' → logprob: -9.305192947387695
    5. '1' → logprob: -10.305192947387695
    6. ' b' → logprob: -11.180192947387695
    7. '(
' → logprob: -11.805192947387695
    8. ')b' → logprob: -11.805192947387695
    9. ')' → logprob: -12.430192947387695
    10. '[b' → logprob: -12.680192947387695

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045914790825918317
    2. '[' → logprob: -8.500458717346191
    3. '[u' → logprob: -8.750458717346191
    4. ',u' → logprob: -9.375458717346191
    5. ' ,' → logprob: -11.875458717346191
    6. ')' → logprob: -13.875458717346191
    7. 'u' → logprob: -14.000458717346191
    8. '][' → logprob: -14.000458717346191
    9. '   ' → logprob: -14.375458717346191
    10. ',[' → logprob: -14.625458717346191

Token 162: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00524667976424098
    2. ' u' → logprob: -5.255246639251709
    3. '   ' → logprob: -12.380247116088867
    4. ')' → logprob: -13.505247116088867
    5. '```' → logprob: -13.505247116088867
    6. ' ' → logprob: -13.630247116088867
    7. '	u' → logprob: -13.630247116088867
    8. ' ' → logprob: -13.880247116088867
    9. '[u' → logprob: -14.630247116088867
    10. '    ' → logprob: -14.755247116088867

Token 163: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.774276774493046e-05
    2. '))' → logprob: -10.375038146972656
    3. ')
' → logprob: -12.125038146972656
    4. ' )' → logprob: -14.500038146972656
    5. ')

' → logprob: -15.375038146972656
    6. '   ' → logprob: -16.000038146972656
    7. ')}' → logprob: -16.750038146972656
    8. '())' → logprob: -17.000038146972656
    9. ')`' → logprob: -17.125038146972656
    10. ')))' → logprob: -18.000038146972656

Token 164: 'def' (ID: 1314)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16098643839359283
    2. 'INF' → logprob: -2.0359864234924316
    3. 's' → logprob: -5.160986423492432
    4. 'inf' → logprob: -6.035986423492432
    5. 'dp' → logprob: -6.160986423492432
    6. 'distance' → logprob: -6.660986423492432
    7. 'import' → logprob: -6.660986423492432
    8. 'def' → logprob: -6.910986423492432
    9. 'd' → logprob: -7.035986423492432
    10. 'q' → logprob: -7.160986423492432

Token 165: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.024889182299375534
    2. 'd' → logprob: -3.7748892307281494
    3. ' shortest' → logprob: -7.89988899230957
    4. ' solve' → logprob: -8.14988899230957
    5. '
' → logprob: -8.27488899230957
    6. ' dist' → logprob: -8.77488899230957
    7. 'solve' → logprob: -9.14988899230957
    8. '```' → logprob: -9.77488899230957
    9. 'short' → logprob: -10.27488899230957
    10. ' dij' → logprob: -10.39988899230957

Token 166: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.018265122547745705
    2. 'ijk' → logprob: -4.393265247344971
    3. 'ij' → logprob: -5.268265247344971
    4. 'ijs' → logprob: -8.018264770507812
    5. 'ijks' → logprob: -9.393264770507812
    6. 'ist' → logprob: -9.893264770507812
    7. 'ijst' → logprob: -10.268264770507812
    8. 'i' → logprob: -10.268264770507812
    9. 'jik' → logprob: -11.018264770507812
    10. '
' → logprob: -12.268264770507812

Token 167: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.3376599848270416
    2. '(start' → logprob: -1.5876599550247192
    3. '(source' → logprob: -3.712660074234009
    4. '(' → logprob: -4.46265983581543
    5. '(s' → logprob: -4.83765983581543
    6. '(layer' → logprob: -4.96265983581543
    7. '(cost' → logprob: -4.96265983581543
    8. '(type' → logprob: -5.58765983581543
    9. '(g' → logprob: -5.83765983581543
    10. '(dist' → logprob: -6.08765983581543

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015467056073248386
    2. ',start' → logprob: -9.000154495239258
    3. ' ,' → logprob: -10.750154495239258
    4. '(graph' → logprob: -12.875154495239258
    5. ',s' → logprob: -13.250154495239258
    6. '(start' → logprob: -13.500154495239258
    7. ',node' → logprob: -14.375154495239258
    8. 'start' → logprob: -15.125154495239258
    9. ',n' → logprob: -15.250154495239258
    10. ',
' → logprob: -15.250154495239258

Token 169: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.010934391990303993
    2. ' start' → logprob: -5.010934352874756
    3. 's' → logprob: -5.760934352874756
    4. 'src' → logprob: -7.260934352874756
    5. 'source' → logprob: -8.010934829711914
    6. ' s' → logprob: -11.760934829711914
    7. 'dist' → logprob: -11.885934829711914
    8. ' source' → logprob: -12.510934829711914
    9. '```' → logprob: -13.635934829711914
    10. ' src' → logprob: -13.885934829711914

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14293640851974487
    2. ',' → logprob: -2.0179364681243896
    3. ' ):' → logprob: -8.892936706542969
    4. '):
' → logprob: -10.017936706542969
    5. ')' → logprob: -10.142936706542969
    6. ' ,' → logprob: -11.267936706542969
    7. ',start' → logprob: -11.392936706542969
    8. '   ' → logprob: -11.892936706542969
    9. ':' → logprob: -13.142936706542969
    10. '):
' → logprob: -13.392936706542969

Token 171: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39565759897232056
    2. '   ' → logprob: -1.1456575393676758
    3. 'INF' → logprob: -4.895657539367676
    4. 'import' → logprob: -8.020657539367676
    5. 'n' → logprob: -8.145657539367676
    6. ' dist' → logprob: -8.895657539367676
    7. ' INF' → logprob: -8.895657539367676
    8. 'inf' → logprob: -9.020657539367676
    9. ' ' → logprob: -9.645657539367676
    10. 'q' → logprob: -10.020657539367676

Token 172: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.03421633318066597
    2. 'INF' → logprob: -3.5342164039611816
    3. 'import' → logprob: -6.659216403961182
    4. 'n' → logprob: -7.159216403961182
    5. 'inf' → logprob: -7.284216403961182
    6. 'q' → logprob: -7.659216403961182
    7. '   ' → logprob: -8.409215927124023
    8. 'd' → logprob: -8.534215927124023
    9. 'hq' → logprob: -8.784215927124023
    10. 'heap' → logprob: -9.159215927124023

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026313073933124542
    2. '=' → logprob: -3.651313066482544
    3. ',' → logprob: -11.526312828063965
    4. '   ' → logprob: -14.151312828063965
    5. '=[' → logprob: -14.651312828063965
    6. '=[]' → logprob: -15.026312828063965
    7. ' ' → logprob: -15.276312828063965
    8. '[' → logprob: -15.276312828063965
    9. '＝' → logprob: -15.901312828063965
    10. '[]' → logprob: -15.901312828063965

Token 174: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005462417611852288
    2. '[int' → logprob: -8.5005464553833
    3. '{' → logprob: -8.7505464553833
    4. ' [' → logprob: -9.6255464553833
    5. '[n' → logprob: -10.5005464553833
    6. '[node' → logprob: -10.8755464553833
    7. '[len' → logprob: -11.8755464553833
    8. '[input' → logprob: -11.8755464553833
    9. '[min' → logprob: -12.1255464553833
    10. '[ind' → logprob: -12.1255464553833

Token 175: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.03207295387983322
    2. '(' → logprob: -4.032073020935059
    3. '10' → logprob: -5.282073020935059
    4. '1' → logprob: -5.282073020935059
    5. '(float' → logprob: -5.657073020935059
    6. '[' → logprob: -9.532073020935059
    7. 'int' → logprob: -10.157073020935059
    8. 'sys' → logprob: -10.782073020935059
    9. ' float' → logprob: -11.532073020935059
    10. '(int' → logprob: -11.782073020935059

Token 176: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00016671013145241886
    2. '("' → logprob: -8.750166893005371
    3. ''in' → logprob: -12.000166893005371
    4. '(' → logprob: -13.375166893005371
    5. ''' → logprob: -15.000166893005371
    6. '(in' → logprob: -16.500165939331055
    7. ''s' → logprob: -17.875165939331055
    8. ''inc' → logprob: -18.125165939331055
    9. '(
' → logprob: -18.250165939331055
    10. '"' → logprob: -18.375165939331055

Token 177: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.392202976712724e-06
    2. ''' → logprob: -12.875006675720215
    3. ''in' → logprob: -13.000006675720215
    4. '_inf' → logprob: -14.875006675720215
    5. '-inf' → logprob: -15.250006675720215
    6. 'in' → logprob: -15.375006675720215
    7. ''s' → logprob: -15.625006675720215
    8. 'INF' → logprob: -15.875006675720215
    9. ' inf' → logprob: -15.875006675720215
    10. '('' → logprob: -16.6250057220459

Token 178: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.010438804514706135
    2. ')' → logprob: -4.760438919067383
    3. '')]' → logprob: -6.510438919067383
    4. ']' → logprob: -8.635438919067383
    5. ' )' → logprob: -9.135438919067383
    6. '),' → logprob: -10.760438919067383
    7. '')' → logprob: -12.135438919067383
    8. '")]' → logprob: -13.010438919067383
    9. ')]
' → logprob: -13.135438919067383
    10. ')
' → logprob: -13.135438919067383

Token 179: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09148434549570084
    2. ' for' → logprob: -2.591484308242798
    3. 'for' → logprob: -5.216484546661377
    4. ']*' → logprob: -5.591484546661377
    5. 'dist' → logprob: -6.466484546661377
    6. ',' → logprob: -6.591484546661377
    7. '   ' → logprob: -9.216484069824219
    8. ']*(' → logprob: -9.341484069824219
    9. '
' → logprob: -9.591484069824219
    10. ' ]' → logprob: -9.966484069824219

Token 180: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005563704180531204
    2. 'len' → logprob: -7.500556468963623
    3. '(len' → logprob: -13.375555992126465
    4. ' n' → logprob: -13.375555992126465
    5. '(n' → logprob: -15.250555992126465
    6. ' len' → logprob: -17.00055694580078
    7. '   ' → logprob: -18.00055694580078
    8. '	n' → logprob: -18.50055694580078
    9. '
' → logprob: -18.62555694580078
    10. '(' → logprob: -19.37555694580078

Token 181: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42958730459213257
    2. '
' → logprob: -1.0545873641967773
    3. '   ' → logprob: -8.304587364196777
    4. '    
' → logprob: -8.429587364196777
    5. ' dist' → logprob: -8.554587364196777
    6. '
' → logprob: -9.554587364196777
    7. ' 
' → logprob: -9.929587364196777
    8. '	dist' → logprob: -10.429587364196777
    9. '  
' → logprob: -10.804587364196777
    10. '(dist' → logprob: -11.179587364196777

Token 182: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007565218023955822
    2. ' dist' → logprob: -5.632565021514893
    3. '   ' → logprob: -5.757565021514893
    4. '
' → logprob: -7.632565021514893
    5. '	dist' → logprob: -8.75756549835205
    6. '    
' → logprob: -9.63256549835205
    7. 'start' → logprob: -9.88256549835205
    8. ' 
' → logprob: -11.00756549835205
    9. '(dist' → logprob: -12.50756549835205
    10. '_dist' → logprob: -12.50756549835205

Token 183: ' visited' (ID: 18416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.2729995988775045e-06
    2. ' dist' → logprob: -12.500006675720215
    3. '   ' → logprob: -13.500006675720215
    4. 'import' → logprob: -14.250006675720215
    5. '
' → logprob: -15.875006675720215
    6. 'queue' → logprob: -15.875006675720215
    7. '```' → logprob: -16.3750057220459
    8. 'heap' → logprob: -16.8750057220459
    9. '	dist' → logprob: -17.2500057220459
    10. 'pq' → logprob: -17.5000057220459

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023744789883494377
    2. '=' → logprob: -3.773744821548462
    3. '[' → logprob: -8.398744583129883
    4. ' ' → logprob: -8.773744583129883
    5. '[start' → logprob: -9.398744583129883
    6. ',' → logprob: -11.398744583129883
    7. ' =[' → logprob: -12.273744583129883
    8. '   ' → logprob: -12.398744583129883
    9. '```' → logprob: -12.898744583129883
    10. ']' → logprob: -13.148744583129883

Token 185: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005989041528664529
    2. ' [' → logprob: -7.500598907470703
    3. '[n' → logprob: -10.000598907470703
    4. '[s' → logprob: -15.750598907470703
    5. '[int' → logprob: -16.000598907470703
    6. 'set' → logprob: -17.000598907470703
    7. '[start' → logprob: -17.125598907470703
    8. '[node' → logprob: -17.250598907470703
    9. ' ' → logprob: -18.000598907470703
    10. '[min' → logprob: -18.000598907470703

Token 186: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '0' → logprob: -18.7500057220459
    4. '(False' → logprob: -19.0000057220459
    5. '=False' → logprob: -22.7500057220459
    6. '   ' → logprob: -22.7500057220459
    7. '[' → logprob: -23.0000057220459
    8. '
' → logprob: -23.1250057220459
    9. 'True' → logprob: -23.5000057220459
    10. 'false' → logprob: -24.5000057220459

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010549608850851655
    2. ' ]' → logprob: -6.876054763793945
    3. ']*' → logprob: -10.876054763793945
    4. ')' → logprob: -14.126054763793945
    5. ' ' → logprob: -14.126054763793945
    6. '   ' → logprob: -14.501054763793945
    7. ' for' → logprob: -14.626054763793945
    8. ']
' → logprob: -14.626054763793945
    9. 'for' → logprob: -16.626054763793945
    10. ']

' → logprob: -16.751054763793945

Token 188: ' *' (ID: 425)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.060475610196590424
    2. '
' → logprob: -3.0604755878448486
    3. ' dist' → logprob: -5.185475826263428
    4. '[n' → logprob: -6.560475826263428
    5. '(n' → logprob: -6.560475826263428
    6. '(dist' → logprob: -6.560475826263428
    7. '[' → logprob: -7.435475826263428
    8. ' n' → logprob: -7.560475826263428
    9. 'n' → logprob: -9.06047534942627
    10. ']' → logprob: -9.18547534942627

Token 189: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4855663721391466e-05
    2. ' n' → logprob: -11.125015258789062
    3. '(n' → logprob: -17.250015258789062
    4. '
' → logprob: -18.250015258789062
    5. 'len' → logprob: -19.250015258789062
    6. '```' → logprob: -19.375015258789062
    7. '   ' → logprob: -20.250015258789062
    8. '(' → logprob: -20.625015258789062
    9. 'dist' → logprob: -20.750015258789062
    10. ' (' → logprob: -21.125015258789062

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14353616535663605
    2. 'dist' → logprob: -2.01853609085083
    3. '
' → logprob: -8.518536567687988
    4. ' dist' → logprob: -8.643536567687988
    5. '    
' → logprob: -8.768536567687988
    6. '	dist' → logprob: -9.018536567687988
    7. '   ' → logprob: -9.143536567687988
    8. '  
' → logprob: -11.018536567687988
    9. '_dist' → logprob: -11.268536567687988
    10. ' 
' → logprob: -11.268536567687988

Token 191: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1136266365647316
    2. '   ' → logprob: -2.738626718521118
    3. '
' → logprob: -3.238626718521118
    4. ' dist' → logprob: -6.363626480102539
    5. '    
' → logprob: -6.738626480102539
    6. '	dist' → logprob: -7.738626480102539
    7. '```' → logprob: -9.988626480102539
    8. ' 
' → logprob: -9.988626480102539
    9. '  
' → logprob: -10.613626480102539
    10. '	
' → logprob: -10.863626480102539

Token 192: ' h' (ID: 312)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.717296517104842e-05
    2. 'import' → logprob: -10.375057220458984
    3. 'heap' → logprob: -10.875057220458984
    4. 'pq' → logprob: -12.625057220458984
    5. '   ' → logprob: -13.375057220458984
    6. ' dist' → logprob: -14.000057220458984
    7. 'hq' → logprob: -14.500057220458984
    8. 'queue' → logprob: -14.750057220458984
    9. '```' → logprob: -15.750057220458984
    10. 'q' → logprob: -16.375057220458984

Token 193: 'q' (ID: 80)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40482404828071594
    2. 'e' → logprob: -1.6548240184783936
    3. 'q' → logprob: -2.2798240184783936
    4. '=' → logprob: -3.2798240184783936
    5. '=[]' → logprob: -6.654824256896973
    6. 'p' → logprob: -8.404824256896973
    7. '   ' → logprob: -9.404824256896973
    8. '=[]
' → logprob: -9.529824256896973
    9. ' ' → logprob: -9.904824256896973
    10. 'eep' → logprob: -11.029824256896973

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195959210395813
    2. '=' → logprob: -1.5019595623016357
    3. '=[]' → logprob: -10.626959800720215
    4. ' ' → logprob: -13.251959800720215
    5. 'q' → logprob: -13.751959800720215
    6. '=[]
' → logprob: -14.251959800720215
    7. ',' → logprob: -14.251959800720215
    8. 'import' → logprob: -14.876959800720215
    9. '.' → logprob: -15.001959800720215
    10. '＝' → logprob: -15.501959800720215

Token 195: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.008996127173304558
    2. '[]' → logprob: -4.75899600982666
    3. '[' → logprob: -8.50899600982666
    4. '[]
' → logprob: -8.75899600982666
    5. ' [(' → logprob: -10.75899600982666
    6. '[((' → logprob: -14.00899600982666
    7. ' []' → logprob: -15.00899600982666
    8. '[]

' → logprob: -15.63399600982666
    9. '[int' → logprob: -16.133996963500977
    10. '[start' → logprob: -16.883996963500977

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012570185353979468
    2. 'encode' → logprob: -6.751256942749023
    3. '(' → logprob: -9.751256942749023
    4. 'partial' → logprob: -11.376256942749023
    5. ' ' → logprob: -11.751256942749023
    6. ' encode' → logprob: -12.501256942749023
    7. ')' → logprob: -13.001256942749023
    8. 'start' → logprob: -13.751256942749023
    9. '   ' → logprob: -15.126256942749023
    10. 'decode' → logprob: -15.563756942749023

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ',start' → logprob: -12.75001049041748
    3. ')' → logprob: -13.00001049041748
    4. ')]' → logprob: -13.75001049041748
    5. ',)' → logprob: -13.87501049041748
    6. ',
' → logprob: -14.00001049041748
    7. ' ,' → logprob: -14.62501049041748
    8. ',input' → logprob: -15.12501049041748
    9. ',

' → logprob: -15.25001049041748
    10. ',u' → logprob: -15.37501049041748

Token 198: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0021869030315428972
    2. ' start' → logprob: -6.1271867752075195
    3. 's' → logprob: -13.62718677520752
    4. ')' → logprob: -15.25218677520752
    5. '[start' → logprob: -15.87718677520752
    6. '
' → logprob: -16.502187728881836
    7. '0' → logprob: -17.002187728881836
    8. '(start' → logprob: -17.127187728881836
    9. ' ' → logprob: -17.252187728881836
    10. '<|end|>' → logprob: -18.002187728881836

Token 199: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000418040988733992
    2. ')]
' → logprob: -7.875418186187744
    3. ')' → logprob: -10.375417709350586
    4. ')]

' → logprob: -12.625417709350586
    5. ' )' → logprob: -13.750417709350586
    6. ')])' → logprob: -13.875417709350586
    7. ')]
' → logprob: -14.500417709350586
    8. '),' → logprob: -14.625417709350586
    9. '))' → logprob: -15.375417709350586
    10. ')][' → logprob: -16.875417709350586

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12103869765996933
    2. 'dist' → logprob: -2.4960386753082275
    3. ' dist' → logprob: -3.8710386753082275
    4. '	dist' → logprob: -5.996038913726807
    5. '    
' → logprob: -6.246038913726807
    6. ' 
' → logprob: -6.496038913726807
    7. ')' → logprob: -6.871038913726807
    8. ' while' → logprob: -6.871038913726807
    9. ' ' → logprob: -6.871038913726807
    10. '
' → logprob: -7.246038913726807

Token 201: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.021295111626386642
    2. 'while' → logprob: -3.8962950706481934
    3. '   ' → logprob: -7.396295070648193
    4. ' dist' → logprob: -9.521295547485352
    5. ' while' → logprob: -10.271295547485352
    6. '	dist' → logprob: -12.271295547485352
    7. '```' → logprob: -12.396295547485352
    8. 'Dist' → logprob: -12.396295547485352
    9. 'for' → logprob: -12.646295547485352
    10. 'heap' → logprob: -12.646295547485352

Token 202: '[start' (ID: 62179)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16023458540439606
    2. '[start' → logprob: -1.9102345705032349
    3. '[s' → logprob: -12.910234451293945
    4. ' [' → logprob: -13.285234451293945
    5. '=' → logprob: -13.535234451293945
    6. ' =' → logprob: -13.660234451293945
    7. '0' → logprob: -13.785234451293945
    8. '```' → logprob: -14.535234451293945
    9. ' ' → logprob: -14.785234451293945
    10. '=start' → logprob: -14.910234451293945

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009820780251175165
    2. ')' → logprob: -7.125982284545898
    3. ']=' → logprob: -9.000982284545898
    4. ' ]' → logprob: -10.375982284545898
    5. '=' → logprob: -11.000982284545898
    6. ' =' → logprob: -12.750982284545898
    7. ')]' → logprob: -13.250982284545898
    8. '[' → logprob: -14.125982284545898
    9. ')=' → logprob: -14.500982284545898
    10. ',' → logprob: -15.000982284545898

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. ']' → logprob: -16.523244857788086
    4. ']=' → logprob: -16.648244857788086
    5. ')' → logprob: -17.023244857788086
    6. ')=' → logprob: -17.398244857788086
    7. ',' → logprob: -17.648244857788086
    8. '[' → logprob: -17.773244857788086
    9. '=

' → logprob: -18.273244857788086
    10. '＝' → logprob: -18.648244857788086

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -19.375003814697266
    4. '00' → logprob: -20.375003814697266
    5. '
' → logprob: -20.687503814697266
    6. '０' → logprob: -20.750003814697266
    7. '   ' → logprob: -20.812503814697266
    8. '000' → logprob: -21.062503814697266
    9. '  ' → logprob: -21.750003814697266
    10. '```' → logprob: -22.062503814697266

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -18.375
    4. '00' → logprob: -20.375
    5. '０' → logprob: -20.4375
    6. '000' → logprob: -20.5
    7. 's' → logprob: -21.125
    8. '```' → logprob: -21.1875
    9. '০' → logprob: -21.5
    10. '
' → logprob: -21.6875

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39451053738594055
    2. '   ' → logprob: -1.3945105075836182
    3. 'while' → logprob: -2.894510507583618
    4. ' while' → logprob: -4.394510746002197
    5. '    
' → logprob: -4.769510746002197
    6. '	while' → logprob: -7.144510746002197
    7. '  
' → logprob: -7.644510746002197
    8. ' 
' → logprob: -8.519510269165039
    9. '<|end|>' → logprob: -9.394510269165039
    10. '	
' → logprob: -9.519510269165039

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2785803973674774
    2. 'while' → logprob: -1.7785804271697998
    3. ' while' → logprob: -2.6535804271698
    4. '	while' → logprob: -6.153580188751221
    5. '    
' → logprob: -7.278580188751221
    6. '
' → logprob: -7.278580188751221
    7. ')' → logprob: -8.403580665588379
    8. '```' → logprob: -9.778580665588379
    9. '  
' → logprob: -10.778580665588379
    10. ' 
' → logprob: -10.903580665588379

Token 209: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0011439070804044604
    2. '   ' → logprob: -7.251143932342529
    3. ' while' → logprob: -7.751143932342529
    4. 'heap' → logprob: -13.251143455505371
    5. '	while' → logprob: -13.376143455505371
    6. 'While' → logprob: -16.376144409179688
    7. '```' → logprob: -16.501144409179688
    8. '
' → logprob: -16.751144409179688
    9. '    
' → logprob: -17.251144409179688
    10. ')' → logprob: -19.376144409179688

Token 210: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3142659366130829
    2. 'hq' → logprob: -1.3142659664154053
    3. 'h' → logprob: -7.189265727996826
    4. '(h' → logprob: -8.689266204833984
    5. '	h' → logprob: -9.689266204833984
    6. '[h' → logprob: -11.439266204833984
    7. '_h' → logprob: -12.814266204833984
    8. '<h' → logprob: -13.939266204833984
    9. ',h' → logprob: -13.939266204833984
    10. '.h' → logprob: -14.314266204833984

Token 211: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.127333340875339e-06
    2. 'qh' → logprob: -13.875003814697266
    3. '
' → logprob: -14.125003814697266
    4. '[' → logprob: -14.750003814697266
    5. 'Q' → logprob: -15.250003814697266
    6. 'c' → logprob: -15.375003814697266
    7. '   ' → logprob: -15.500003814697266
    8. '[q' → logprob: -15.625003814697266
    9. '(q' → logprob: -16.000003814697266
    10. ' q' → logprob: -16.250003814697266

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08906368166208267
    2. ':
' → logprob: -2.4640636444091797
    3. ' and' → logprob: -10.08906364440918
    4. '):' → logprob: -10.58906364440918
    5. '):
' → logprob: -10.83906364440918
    6. 'and' → logprob: -11.33906364440918
    7. ',' → logprob: -11.96406364440918
    8. '[' → logprob: -12.21406364440918
    9. '>:' → logprob: -12.33906364440918
    10. '.pop' → logprob: -12.58906364440918

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02061406709253788
    2. 'cost' → logprob: -4.395614147186279
    3. ' cost' → logprob: -5.770614147186279
    4. '   ' → logprob: -5.895614147186279
    5. ',' → logprob: -6.520614147186279
    6. '(cost' → logprob: -8.145613670349121
    7. '```' → logprob: -9.020613670349121
    8. ',c' → logprob: -9.145613670349121
    9. '	c' → logprob: -9.770613670349121
    10. 'c' → logprob: -10.145613670349121

Token 214: ' d' (ID: 272)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0028180740773677826
    2. ' cost' → logprob: -6.3778181076049805
    3. 'c' → logprob: -7.5028181076049805
    4. 'cur' → logprob: -8.12781810760498
    5. 'dist' → logprob: -9.00281810760498
    6. 'd' (adapté à ' d') → logprob: -10.37781810760498
    7. '   ' → logprob: -10.87781810760498
    8. '(cost' → logprob: -11.00281810760498
    9. '       ' → logprob: -11.12781810760498
    10. ',' → logprob: -11.37781810760498

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024048985505942255
    2. 'ist' → logprob: -8.875240325927734
    3. ' ,' → logprob: -9.500240325927734
    4. ',
' → logprob: -11.500240325927734
    5. 'istance' → logprob: -11.875240325927734
    6. '_,' → logprob: -12.750240325927734
    7. ',u' → logprob: -13.250240325927734
    8. 'e' → logprob: -13.875240325927734
    9. ',d' → logprob: -14.625240325927734
    10. ',\
' → logprob: -15.000240325927734

Token 216: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03167148306965828
    2. 'v' → logprob: -3.5316715240478516
    3. ' u' → logprob: -6.281671524047852
    4. ' v' → logprob: -10.281671524047852
    5. '```' → logprob: -12.031671524047852
    6. 'cur' → logprob: -12.531671524047852
    7. '(u' → logprob: -13.281671524047852
    8. 'x' → logprob: -13.906671524047852
    9. '    
' → logprob: -14.281671524047852
    10. '   ' → logprob: -14.281671524047852

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ')' → logprob: -15.75192928314209
    4. ')=' → logprob: -16.251930236816406
    5. '=u' → logprob: -16.501930236816406
    6. '=sys' → logprob: -17.501930236816406
    7. ' ' → logprob: -18.251930236816406
    8. '   ' → logprob: -18.376930236816406
    9. '＝' → logprob: -18.376930236816406
    10. '=user' → logprob: -18.626930236816406

Token 218: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.007610770873725414
    2. ' heap' → logprob: -4.88261079788208
    3. 'he' → logprob: -12.757610321044922
    4. '
' → logprob: -14.007610321044922
    5. '(heap' → logprob: -14.257610321044922
    6. ' he' → logprob: -16.257610321044922
    7. '.heap' → logprob: -16.257610321044922
    8. '   ' → logprob: -16.507610321044922
    9. '_heap' → logprob: -17.007610321044922
    10. '
' → logprob: -17.382610321044922

Token 219: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. 'h' → logprob: -15.12500286102295
    5. '```' → logprob: -16.000003814697266
    6. '

' → logprob: -16.500003814697266
    7. ')' → logprob: -16.750003814697266
    8. 'p' → logprob: -17.250003814697266
    9. ')
' → logprob: -17.500003814697266
    10. ',' → logprob: -17.625003814697266

Token 220: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.4021237802808173e-05
    2. '.heap' → logprob: -12.375014305114746
    3. 'he' → logprob: -13.000014305114746
    4. '.' → logprob: -13.000014305114746
    5. ' he' → logprob: -13.125014305114746
    6. '   ' → logprob: -13.750014305114746
    7. 'q' → logprob: -13.750014305114746
    8. ').' → logprob: -15.250014305114746
    9. '>.' → logprob: -15.500014305114746
    10. '```' → logprob: -15.875014305114746

Token 221: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.988221684878226e-06
    2. 'pp' → logprob: -12.125006675720215
    3. 'ap' → logprob: -13.625006675720215
    4. 'a' → logprob: -16.62500762939453
    5. 'appe' → logprob: -16.75000762939453
    6. 'q' → logprob: -17.12500762939453
    7. '```' → logprob: -17.50000762939453
    8. 'p' → logprob: -17.75000762939453
    9. 'appen' → logprob: -17.75000762939453
    10. '[' → logprob: -17.87500762939453

Token 222: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.12967203557491302
    2. 'ush' → logprob: -2.129672050476074
    3. 'app' → logprob: -6.379672050476074
    4. 'pp' → logprob: -7.379672050476074
    5. 'p' → logprob: -8.379672050476074
    6. 'q' → logprob: -9.379672050476074
    7. 'ap' → logprob: -10.879672050476074
    8. 'pop' → logprob: -11.129672050476074
    9. 'u' → logprob: -11.254672050476074
    10. 'h' → logprob: -11.504672050476074

Token 223: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.034592388459714e-06
    2. '(q' → logprob: -12.500005722045898
    3. '(heap' → logprob: -13.625005722045898
    4. '(' → logprob: -14.625005722045898
    5. 'h' → logprob: -15.500005722045898
    6. '(
' → logprob: -16.6250057220459
    7. '(u' → logprob: -16.7500057220459
    8. ',h' → logprob: -16.7500057220459
    9. ' (' → logprob: -17.6250057220459
    10. '(n' → logprob: -17.7500057220459

Token 224: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. ')' → logprob: -17.625
    3. '
' → logprob: -19.0
    4. '_q' → logprob: -19.0
    5. ')
' → logprob: -19.0
    6. '[' → logprob: -19.375
    7. 'Q' → logprob: -19.375
    8. 'p' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. ',' → logprob: -19.75

Token 225: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16029570996761322
    2. ')' → logprob: -1.9102957248687744
    3. ')
' → logprob: -9.785295486450195
    4. '       ' → logprob: -11.285295486450195
    5. ')

' → logprob: -13.660295486450195
    6. '   ' → logprob: -14.535295486450195
    7. ' )
' → logprob: -14.535295486450195
    8. ')`
' → logprob: -15.160295486450195
    9. ' )' → logprob: -16.785295486450195
    10. '):
' → logprob: -17.035295486450195

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002222818322479725
    2. '<|end|>' → logprob: -6.252223014831543
    3. '
' → logprob: -8.502223014831543
    4. '        
' → logprob: -10.127223014831543
    5. ' 
' → logprob: -11.127223014831543
    6. ' if' → logprob: -11.502223014831543
    7. ')' → logprob: -11.877223014831543
    8. 'if' → logprob: -12.252223014831543
    9. '<|end|>' → logprob: -12.627223014831543
    10. '  
' → logprob: -12.877223014831543

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05680553987622261
    2. '       ' → logprob: -3.0568056106567383
    3. ' if' → logprob: -4.806805610656738
    4. '
' → logprob: -11.806805610656738
    5. '	if' → logprob: -13.556805610656738
    6. '        
' → logprob: -13.681805610656738
    7. '   ' → logprob: -15.181805610656738
    8. 'If' → logprob: -16.181804656982422
    9. ' 
' → logprob: -16.306804656982422
    10. ';if' → logprob: -16.556804656982422

Token 228: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03836700692772865
    2. ' visited' → logprob: -3.2883670330047607
    3. 'dist' → logprob: -8.16336727142334
    4. ' dist' → logprob: -10.16336727142334
    5. 'd' → logprob: -13.41336727142334
    6. ' d' → logprob: -15.16336727142334
    7. '   ' → logprob: -15.91336727142334
    8. 'vis' → logprob: -16.288366317749023
    9. ' ' → logprob: -16.663366317749023
    10. '  ' → logprob: -18.038366317749023

Token 229: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -17.0
    3. '[' → logprob: -18.125
    4. '	u' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. '[d' → logprob: -20.0
    7. ' [' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '[
' → logprob: -20.5
    10. '<u' → logprob: -20.75

Token 230: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23762540519237518
    2. '):' → logprob: -1.8626253604888916
    3. ':
' → logprob: -3.3626253604888916
    4. ']:' → logprob: -4.237625598907471
    5. '):
' → logprob: -5.737625598907471
    6. ')' → logprob: -5.987625598907471
    7. ':return' → logprob: -7.737625598907471
    8. '}:' → logprob: -8.487625122070312
    9. ' or' → logprob: -8.737625122070312
    10. ')return' → logprob: -9.112625122070312

Token 231: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9400604963302612
    2. '           ' → logprob: -1.1900604963302612
    3. ' continue' → logprob: -1.1900604963302612
    4. '       ' → logprob: -7.065060615539551
    5. '	continue' → logprob: -9.81506061553955
    6. '_continue' → logprob: -10.69006061553955
    7. 'Continue' → logprob: -10.94006061553955
    8. '
' → logprob: -11.56506061553955
    9. '```' → logprob: -11.81506061553955
    10. '   ' → logprob: -12.19006061553955

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005348432343453169
    2. '<|end|>' → logprob: -5.255348205566406
    3. '        
' → logprob: -10.255348205566406
    4. ' visited' → logprob: -10.880348205566406
    5. '
' → logprob: -10.880348205566406
    6. '   ' → logprob: -11.255348205566406
    7. 'visited' → logprob: -12.005348205566406
    8. ',' → logprob: -12.380348205566406
    9. '  
' → logprob: -12.755348205566406
    10. '```' → logprob: -12.880348205566406

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00352524034678936
    2. '<|end|>' → logprob: -6.128525257110596
    3. '        
' → logprob: -7.503525257110596
    4. ' visited' → logprob: -7.878525257110596
    5. 'visited' → logprob: -8.628524780273438
    6. ' 
' → logprob: -8.878524780273438
    7. '   ' → logprob: -10.878524780273438
    8. '  
' → logprob: -11.503524780273438
    9. '```' → logprob: -11.503524780273438
    10. '
' → logprob: -11.753524780273438

Token 234: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.22404170036315918
    2. '       ' → logprob: -1.7240417003631592
    3. ' visited' → logprob: -3.849041700363159
    4. '   ' → logprob: -6.849041938781738
    5. 'Visited' → logprob: -11.849041938781738
    6. ' ' → logprob: -13.224041938781738
    7. '           ' → logprob: -13.599041938781738
    8. '```' → logprob: -13.974041938781738
    9. '     ' → logprob: -14.474041938781738
    10. '      ' → logprob: -14.724041938781738

Token 235: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '```' → logprob: -18.0
    4. 'u' → logprob: -18.125
    5. '[user' → logprob: -19.125
    6. ' [' → logprob: -19.375
    7. '	u' → logprob: -19.375
    8. '   ' → logprob: -19.625
    9. '][' → logprob: -19.625
    10. ')[' → logprob: -20.75

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031949470285326242
    2. ']=' → logprob: -6.003194808959961
    3. '=' → logprob: -7.253194808959961
    4. ' =' → logprob: -12.003194808959961
    5. ' ]' → logprob: -12.503194808959961
    6. '=True' → logprob: -14.503194808959961
    7. ')' → logprob: -14.878194808959961
    8. ']
' → logprob: -15.753194808959961
    9. '[' → logprob: -16.37819480895996
    10. '   ' → logprob: -16.87819480895996

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040799472481012344
    2. ' =' → logprob: -5.504079818725586
    3. '=True' → logprob: -13.504079818725586
    4. ']' → logprob: -17.879079818725586
    5. ']=' → logprob: -18.254079818725586
    6. '[' → logprob: -18.629079818725586
    7. '=
' → logprob: -18.879079818725586
    8. ')' → logprob: -19.504079818725586
    9. 'True' → logprob: -19.629079818725586
    10. '   ' → logprob: -19.754079818725586

Token 238: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -18.500709533691406
    4. '=True' → logprob: -20.375709533691406
    5. '1' → logprob: -20.750709533691406
    6. '
' → logprob: -21.875709533691406
    7. 'true' → logprob: -22.625709533691406
    8. 'False' → logprob: -23.125709533691406
    9. 'TRUE' → logprob: -23.375709533691406
    10. '   ' → logprob: -24.125709533691406

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004875788930803537
    2. '<|end|>' → logprob: -6.004875659942627
    3. ' for' → logprob: -6.504875659942627
    4. '
' → logprob: -7.754875659942627
    5. 'for' → logprob: -8.629876136779785
    6. '   ' → logprob: -8.754876136779785
    7. '        
' → logprob: -9.379876136779785
    8. ',' → logprob: -10.754876136779785
    9. '<|end|>' → logprob: -12.379876136779785
    10. '           ' → logprob: -12.629876136779785

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0862232968211174
    2. '<|end|>' → logprob: -2.5862233638763428
    3. ' for' → logprob: -5.586223125457764
    4. '   ' → logprob: -7.086223125457764
    5. '        
' → logprob: -7.086223125457764
    6. '
' → logprob: -7.086223125457764
    7. ' 
' → logprob: -8.336223602294922
    8. '        ' → logprob: -8.711223602294922
    9. 'for' → logprob: -8.961223602294922
    10. ',' → logprob: -9.336223602294922

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001979072345420718
    2. ' for' → logprob: -6.876978874206543
    3. '       ' → logprob: -7.001978874206543
    4. '   ' → logprob: -10.251978874206543
    5. '	for' → logprob: -14.751978874206543
    6. ' ' → logprob: -17.00197982788086
    7. '        
' → logprob: -17.50197982788086
    8. '```' → logprob: -17.50197982788086
    9. '
' → logprob: -17.87697982788086
    10. '           ' → logprob: -19.12697982788086

Token 242: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006592809222638607
    2. 'w' → logprob: -5.381592750549316
    3. 'c' → logprob: -6.506592750549316
    4. ' cost' → logprob: -8.381592750549316
    5. '(cost' → logprob: -8.506592750549316
    6. 'weight' → logprob: -10.631592750549316
    7. '(c' → logprob: -12.381592750549316
    8. ' w' → logprob: -12.506592750549316
    9. '```' → logprob: -12.506592750549316
    10. 'wt' → logprob: -13.006592750549316

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.68153518543113e-05
    2. ' ,' → logprob: -10.125057220458984
    3. ',c' → logprob: -11.375057220458984
    4. 'cost' → logprob: -13.125057220458984
    5. '‌,' → logprob: -14.625057220458984
    6. ',next' → logprob: -14.750057220458984
    7. ',v' → logprob: -14.875057220458984
    8. ' in' → logprob: -15.000057220458984
    9. ',node' → logprob: -15.500057220458984
    10. ',
' → logprob: -15.625057220458984

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015009368071332574
    2. 'w' → logprob: -6.876501083374023
    3. ' v' → logprob: -7.751501083374023
    4. 'nv' → logprob: -11.126501083374023
    5. 'to' → logprob: -11.751501083374023
    6. 'vv' → logprob: -12.126501083374023
    7. '```' → logprob: -12.626501083374023
    8. 'wv' → logprob: -13.251501083374023
    9. ' w' → logprob: -14.001501083374023
    10. '(v' → logprob: -14.626501083374023

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300365224480629
    2. 'in' → logprob: -3.168003559112549
    3. ',' → logprob: -13.293004035949707
    4. ' ' → logprob: -14.043004035949707
    5. 's' → logprob: -14.418004035949707
    6. ')' → logprob: -15.168004035949707
    7. '
' → logprob: -15.668004035949707
    8. 'n' → logprob: -15.668004035949707
    9. 'In' → logprob: -16.04300308227539
    10. 'import' → logprob: -16.16800308227539

Token 246: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0019311357755213976
    2. ' graph' → logprob: -6.251931190490723
    3. '	graph' → logprob: -13.001931190490723
    4. '(graph' → logprob: -16.001930236816406
    5. 'graphs' → logprob: -16.626930236816406
    6. '_graph' → logprob: -17.001930236816406
    7. 'graphql' → logprob: -17.251930236816406
    8. 'raph' → logprob: -17.626930236816406
    9. 'Graph' → logprob: -18.126930236816406
    10. 'edges' → logprob: -18.251930236816406

Token 247: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.003195654833689332
    2. '[' → logprob: -6.253195762634277
    3. ' in' → logprob: -6.753195762634277
    4. 'in' → logprob: -10.253195762634277
    5. ':' → logprob: -10.753195762634277
    6. 'u' → logprob: -11.253195762634277
    7. '[in' → logprob: -12.003195762634277
    8. '[_' → logprob: -12.503195762634277
    9. '[s' → logprob: -12.628195762634277
    10. 's' → logprob: -13.253195762634277

Token 248: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16637489199638367
    2. ']:
' → logprob: -1.916374921798706
    3. '[' → logprob: -5.666374683380127
    4. ':' → logprob: -7.291374683380127
    5. '):' → logprob: -7.416374683380127
    6. '][' → logprob: -7.541374683380127
    7. '):
' → logprob: -8.291375160217285
    8. ']:

' → logprob: -8.416375160217285
    9. ']' → logprob: -8.541375160217285
    10. ']:
' → logprob: -9.541375160217285

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008368000388145447
    2. ' if' → logprob: -4.883368015289307
    3. '       ' → logprob: -8.008367538452148
    4. 'if' → logprob: -9.008367538452148
    5. '<|end|>' → logprob: -9.008367538452148
    6. '            
' → logprob: -9.883367538452148
    7. ',' → logprob: -10.133367538452148
    8. '   ' → logprob: -10.758367538452148
    9. '<|end|>' → logprob: -11.133367538452148
    10. '               ' → logprob: -11.508367538452148

Token 250: ' nd' (ID: 5914)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6093787550926208
    2. ' if' → logprob: -0.8593787550926208
    3. 'if' → logprob: -3.9843788146972656
    4. ' new' → logprob: -4.859378814697266
    5. '               ' → logprob: -5.234378814697266
    6. 'new' → logprob: -7.234378814697266
    7. '            ' → logprob: -9.109378814697266
    8. ' nd' → logprob: -9.609378814697266
    9. ' next' → logprob: -9.734378814697266
    10. '   ' → logprob: -9.859378814697266

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11383324861526489
    2. '=' → logprob: -2.23883318901062
    3. 'ist' → logprob: -6.988833427429199
    4. 'istance' → logprob: -10.1138334274292
    5. ',' → logprob: -10.6138334274292
    6. 'isted' → logprob: -12.4888334274292
    7. 'st' → logprob: -12.4888334274292
    8. '   ' → logprob: -13.3638334274292
    9. ' =
' → logprob: -13.3638334274292
    10. '>' → logprob: -13.6138334274292

Token 252: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6931591629981995
    2. ' d' → logprob: -0.6931591629981995
    3. ' dist' → logprob: -11.818159103393555
    4. 'dist' → logprob: -12.693159103393555
    5. '	d' → logprob: -14.818159103393555
    6. ' ' → logprob: -15.318159103393555
    7. '
' → logprob: -15.568159103393555
    8. ')d' → logprob: -15.693159103393555
    9. ' ' → logprob: -16.068159103393555
    10. '```' → logprob: -16.443159103393555

Token 253: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602286994457245
    2. '+' → logprob: -1.9102287292480469
    3. '+c' → logprob: -12.410228729248047
    4. ' ' → logprob: -16.285228729248047
    5. '＋' → logprob: -16.410228729248047
    6. ' plus' → logprob: -16.660228729248047
    7. '+k' → logprob: -17.035228729248047
    8. '+C' → logprob: -17.285228729248047
    9. '+d' → logprob: -17.535228729248047
    10. ' +
' → logprob: -17.660228729248047

Token 254: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.061967913061380386
    2. ' cost' → logprob: -2.8119678497314453
    3. '(cost' → logprob: -15.561967849731445
    4. 'code' → logprob: -17.811967849731445
    5. '_cost' → logprob: -18.311967849731445
    6. ' ' → logprob: -18.311967849731445
    7. 'Cost' → logprob: -18.561967849731445
    8. '.cost' → logprob: -19.061967849731445
    9. ' kost' → logprob: -19.186967849731445
    10. '
' → logprob: -19.436967849731445

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028989017009735107
    2. '<|end|>' → logprob: -6.502898693084717
    3. '
' → logprob: -6.877898693084717
    4. '<|end|>' → logprob: -8.252899169921875
    5. '       ' → logprob: -10.877899169921875
    6. '		' → logprob: -10.877899169921875
    7. '            
' → logprob: -11.002899169921875
    8. '          ' → logprob: -11.752899169921875
    9. ',' → logprob: -12.002899169921875
    10. ' if' → logprob: -12.002899169921875

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009018116979859769
    2. '<|end|>' → logprob: -7.500901699066162
    3. ' if' → logprob: -8.75090217590332
    4. '            
' → logprob: -9.37590217590332
    5. '       ' → logprob: -10.50090217590332
    6. '
' → logprob: -10.62590217590332
    7. '<|end|>' → logprob: -10.87590217590332
    8. ',' → logprob: -11.50090217590332
    9. ' 
' → logprob: -12.00090217590332
    10. '               ' → logprob: -12.25090217590332

Token 257: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7089471220970154
    2. '           ' → logprob: -0.9589471220970154
    3. 'if' (adapté à ' if') → logprob: -2.08394718170166
    4. '       ' → logprob: -9.45894718170166
    5. '   ' → logprob: -11.83394718170166
    6. ' ' → logprob: -12.58394718170166
    7. '<|end|>' → logprob: -12.58394718170166
    8. ',' → logprob: -12.83394718170166
    9. '	if' → logprob: -12.95894718170166
    10. '            ' → logprob: -13.83394718170166

Token 258: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.4122386872768402
    2. ' dist' → logprob: -1.1622387170791626
    3. 'nd' → logprob: -4.037238597869873
    4. 'dist' → logprob: -4.912238597869873
    5. '(nd' → logprob: -11.287239074707031
    6. '	dist' → logprob: -12.099739074707031
    7. ' not' → logprob: -12.724739074707031
    8. 'ndl' → logprob: -12.849739074707031
    9. ' ' → logprob: -13.037239074707031
    10. '(dist' → logprob: -13.162239074707031

Token 259: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11295264959335327
    2. '<' → logprob: -2.237952709197998
    3. '<n' → logprob: -9.61295223236084
    4. '<|end|>' → logprob: -11.23795223236084
    5. '[' → logprob: -11.36295223236084
    6. '<th' → logprob: -12.11295223236084
    7. '<v' → logprob: -12.36295223236084
    8. '<int' → logprob: -12.48795223236084
    9. '<len' → logprob: -12.86295223236084
    10. ' ' → logprob: -12.86295223236084

Token 260: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07889232039451599
    2. ' dist' → logprob: -2.578892230987549
    3. '	dist' → logprob: -13.453892707824707
    4. '(dist' → logprob: -14.453892707824707
    5. '
' → logprob: -14.828892707824707
    6. '   ' → logprob: -16.95389175415039
    7. '_dist' → logprob: -17.20389175415039
    8. 'Dist' → logprob: -17.20389175415039
    9. '```' → logprob: -17.45389175415039
    10. '.dist' → logprob: -17.57889175415039

Token 261: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.375
    3. '[u' → logprob: -19.625
    4. '[' → logprob: -20.75
    5. '<v' → logprob: -20.875
    6. ' v' → logprob: -21.75
    7. '[val' → logprob: -21.75
    8. '```' → logprob: -22.25
    9. '(v' → logprob: -22.375
    10. ' [' → logprob: -23.125

Token 262: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9262130856513977
    2. ']:' → logprob: -1.301213026046753
    3. ':
' → logprob: -1.551213026046753
    4. ']:
' → logprob: -2.176213026046753
    5. '):
' → logprob: -5.426213264465332
    6. '):' → logprob: -6.426213264465332
    7. '}:' → logprob: -9.426213264465332
    8. ']' → logprob: -10.551213264465332
    9. '():
' → logprob: -10.551213264465332
    10. '[' → logprob: -10.676213264465332

Token 263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006043838220648468
    2. ':' → logprob: -8.125604629516602
    3. ':
' → logprob: -8.750604629516602
    4. '<|end|>' → logprob: -10.375604629516602
    5. '):
' → logprob: -10.625604629516602
    6. ',' → logprob: -10.625604629516602
    7. '           ' → logprob: -11.250604629516602
    8. '                
' → logprob: -11.375604629516602
    9. ' :
' → logprob: -11.750604629516602
    10. '                   ' → logprob: -12.250604629516602

Token 264: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011359857395291328
    2. 'dist' (adapté à ' dist') → logprob: -4.511359691619873
    3. '               ' → logprob: -8.136360168457031
    4. '                   ' → logprob: -11.261360168457031
    5. '	dist' → logprob: -13.011360168457031
    6. '                ' → logprob: -13.136360168457031
    7. '```' → logprob: -14.261360168457031
    8. '(dist' → logprob: -14.761360168457031
    9. '_dist' → logprob: -15.011360168457031
    10. '.dist' → logprob: -16.01136016845703

Token 265: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -15.875
    3. '[val' → logprob: -17.875
    4. '<v' → logprob: -18.0
    5. '[' → logprob: -18.75
    6. '```' → logprob: -18.875
    7. '[u' → logprob: -18.875
    8. '[var' → logprob: -19.0
    9. '	v' → logprob: -19.125
    10. ' [' → logprob: -19.5

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23160721361637115
    2. '=' → logprob: -1.73160719871521
    3. ' =' → logprob: -3.73160719871521
    4. ']=' → logprob: -5.231607437133789
    5. '[v' → logprob: -7.981607437133789
    6. '=v' → logprob: -9.481607437133789
    7. ')' → logprob: -11.606607437133789
    8. ',' → logprob: -12.231607437133789
    9. 'v' → logprob: -12.856607437133789
    10. ' ]' → logprob: -13.356607437133789

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975141443312168
    2. ' =' → logprob: -3.5297513008117676
    3. '=
' → logprob: -14.529751777648926
    4. '=v' → logprob: -16.40475082397461
    5. '[' → logprob: -16.65475082397461
    6. ']=' → logprob: -16.77975082397461
    7. '.=' → logprob: -16.77975082397461
    8. '＝' → logprob: -16.77975082397461
    9. ',' → logprob: -17.15475082397461
    10. ']' → logprob: -17.52975082397461

Token 268: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.4740821421146393
    2. ' nd' → logprob: -0.9740821123123169
    3. '(nd' → logprob: -12.849081993103027
    4. '_nd' → logprob: -14.599081993103027
    5. 'ng' → logprob: -14.724081993103027
    6. 'nb' → logprob: -15.349081993103027
    7. '
' → logprob: -15.599081993103027
    8. 'ndl' → logprob: -15.599081993103027
    9. 'nt' → logprob: -15.974081993103027
    10. ' ' → logprob: -15.974081993103027

Token 269: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.417976379045285e-05
    2. ',' → logprob: -10.875043869018555
    3. '<|end|>' → logprob: -11.500043869018555
    4. 'heap' → logprob: -11.875043869018555
    5. ' heap' → logprob: -13.125043869018555
    6. '			' → logprob: -13.250043869018555
    7. '(heap' → logprob: -13.875043869018555
    8. '              ' → logprob: -14.125043869018555
    9. ',
' → logprob: -14.500043869018555
    10. '
' → logprob: -14.875043869018555

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011164903844473884
    2. 'heap' → logprob: -9.25011157989502
    3. ' heap' → logprob: -11.25011157989502
    4. '(heap' → logprob: -14.00011157989502
    5. ',' → logprob: -14.50011157989502
    6. '              ' → logprob: -14.75011157989502
    7. '			' → logprob: -15.25011157989502
    8. '                
' → logprob: -15.62511157989502
    9. '```' → logprob: -16.000112533569336
    10. '       ' → logprob: -16.875112533569336

Token 271: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -9.088346359931165e-07
    2. ' heap' → logprob: -14.000000953674316
    3. '               ' → logprob: -18.375
    4. 'he' → logprob: -21.875
    5. '```' → logprob: -23.25
    6. '           ' → logprob: -23.375
    7. '(heap' → logprob: -23.375
    8. '                   ' → logprob: -23.5
    9. '   ' → logprob: -23.625
    10. '.heap' → logprob: -24.125

Token 272: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -17.375
    3. 'h' → logprob: -17.5
    4. '```' → logprob: -18.0
    5. 'push' → logprob: -18.125
    6. '[' → logprob: -19.125
    7. 'qh' → logprob: -19.125
    8. '.push' → logprob: -19.25
    9. 'hq' → logprob: -19.625
    10. '_push' → logprob: -19.875

Token 273: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.954393079970032e-05
    2. 'he' → logprob: -10.625049591064453
    3. 'q' → logprob: -11.000049591064453
    4. '.push' → logprob: -12.625049591064453
    5. '.heap' → logprob: -13.375049591064453
    6. 'push' → logprob: -14.000049591064453
    7. '```' → logprob: -14.375049591064453
    8. ' he' → logprob: -14.375049591064453
    9. '_he' → logprob: -14.500049591064453
    10. 'ush' → logprob: -15.000049591064453

Token 274: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.001289640087634325
    2. 'pp' → logprob: -6.7512898445129395
    3. 'push' → logprob: -9.376289367675781
    4. 'p' → logprob: -10.751289367675781
    5. 'ap' → logprob: -11.626289367675781
    6. 'ush' → logprob: -12.876289367675781
    7. '```' → logprob: -14.251289367675781
    8. 'he' → logprob: -15.001289367675781
    9. 'q' → logprob: -15.501289367675781
    10. '[' → logprob: -15.751289367675781

Token 275: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.07565729320049286
    2. 'app' → logprob: -2.950657367706299
    3. 'push' → logprob: -4.575657367706299
    4. 'pp' → logprob: -4.700657367706299
    5. 'p' → logprob: -6.825657367706299
    6. 'ap' → logprob: -9.82565689086914
    7. '```' → logprob: -11.07565689086914
    8. 'q' → logprob: -12.57565689086914
    9. 'op' → logprob: -12.57565689086914
    10. '.push' → logprob: -12.70065689086914

Token 276: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1472419600977446e-06
    2. 'h' → logprob: -14.750000953674316
    3. '(' → logprob: -15.500000953674316
    4. ',h' → logprob: -16.250001907348633
    5. '(q' → logprob: -16.750001907348633
    6. '(heap' → logprob: -16.750001907348633
    7. ' h' → logprob: -17.250001907348633
    8. '	h' → logprob: -17.625001907348633
    9. ' (' → logprob: -17.625001907348633
    10. 'heap' → logprob: -17.750001907348633

Token 277: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2200749754119897e-06
    2. '(q' → logprob: -14.000001907348633
    3. '(h' → logprob: -14.125001907348633
    4. 'c' → logprob: -14.875001907348633
    5. 'qh' → logprob: -15.750001907348633
    6. '_q' → logprob: -16.500001907348633
    7. 'sq' → logprob: -17.750001907348633
    8. '(' → logprob: -17.750001907348633
    9. ',q' → logprob: -17.875001907348633
    10. 'cq' → logprob: -18.125001907348633

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6001663208007812
    2. '(h' → logprob: -0.8501663208007812
    3. ',(' → logprob: -3.8501663208007812
    4. ',h' → logprob: -6.225166320800781
    5. '(heap' → logprob: -8.225166320800781
    6. ' (' → logprob: -8.725166320800781
    7. ' ,' → logprob: -8.850166320800781
    8. '(' → logprob: -10.225166320800781
    9. '(q' → logprob: -10.475166320800781
    10. '((' → logprob: -11.600166320800781

Token 279: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.030271755531430244
    2. ' (' → logprob: -3.7802717685699463
    3. '(' → logprob: -5.405271530151367
    4. '(encoded' → logprob: -6.030271530151367
    5. '(n' → logprob: -9.530271530151367
    6. '(enc' → logprob: -11.530271530151367
    7. '   ' → logprob: -12.030271530151367
    8. '  ' → logprob: -12.905271530151367
    9. ' ' → logprob: -12.905271530151367
    10. '(dist' → logprob: -13.530271530151367

Token 280: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0019299437990412116
    2. ' nd' → logprob: -6.251929759979248
    3. '(nd' → logprob: -14.376930236816406
    4. '   ' → logprob: -16.126930236816406
    5. 'ndl' → logprob: -16.126930236816406
    6. '_nd' → logprob: -16.251930236816406
    7. '  ' → logprob: -16.626930236816406
    8. ' ' → logprob: -16.626930236816406
    9. '
' → logprob: -17.126930236816406
    10. '               ' → logprob: -17.751930236816406

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010199354437645525
    2. ',v' → logprob: -9.250102043151855
    3. ' ,' → logprob: -12.125102043151855
    4. ',
' → logprob: -15.500102043151855
    5. 'v' → logprob: -15.875102043151855
    6. ')' → logprob: -17.25010108947754
    7. '<|end|>' → logprob: -17.75010108947754
    8. '‌,' → logprob: -18.00010108947754
    9. '```' → logprob: -18.00010108947754
    10. ' v' → logprob: -18.50010108947754

Token 282: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004306692280806601
    2. ' v' → logprob: -7.750430583953857
    3. '	v' → logprob: -18.500431060791016
    4. ')v' → logprob: -19.125431060791016
    5. '   ' → logprob: -19.625431060791016
    6. '
' → logprob: -20.000431060791016
    7. '```' → logprob: -20.875431060791016
    8. ' ' → logprob: -21.000431060791016
    9. 'vq' → logprob: -21.750431060791016
    10. '               ' → logprob: -21.750431060791016

Token 283: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020520923135336488
    2. '))
' → logprob: -8.500205039978027
    3. ')))' → logprob: -14.500205039978027
    4. ')' → logprob: -14.625205039978027
    5. ' ))' → logprob: -14.750205039978027
    6. '))

' → logprob: -15.375205039978027
    7. '               ' → logprob: -17.250205993652344
    8. '));' → logprob: -17.500205993652344
    9. '           ' → logprob: -18.125205993652344
    10. '       ' → logprob: -18.250205993652344

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011894920840859413
    2. 'return' → logprob: -4.636894702911377
    3. ' return' → logprob: -6.636894702911377
    4. ')' → logprob: -7.511894702911377
    5. ':return' → logprob: -9.511895179748535
    6. '    
' → logprob: -9.761895179748535
    7. '	return' → logprob: -9.886895179748535
    8. ')return' → logprob: -10.511895179748535
    9. '
' → logprob: -10.886895179748535
    10. '```' → logprob: -11.511895179748535

Token 285: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3146778345108032
    2. 'return' (adapté à ' return') → logprob: -1.3146778345108032
    3. ' return' → logprob: -6.564677715301514
    4. '	return' → logprob: -12.814678192138672
    5. ' ' → logprob: -14.064678192138672
    6. '       ' → logprob: -14.564678192138672
    7. ')' → logprob: -14.564678192138672
    8. '    
' → logprob: -14.814678192138672
    9. ':return' → logprob: -15.064678192138672
    10. '  ' → logprob: -15.189678192138672

Token 286: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.2729995988775045e-06
    2. ' dist' → logprob: -12.000006675720215
    3. '(dist' → logprob: -20.5000057220459
    4. '	dist' → logprob: -24.6250057220459
    5. '[' → logprob: -26.2500057220459
    6. '_dist' → logprob: -26.5000057220459
    7. 'diff' → logprob: -26.6250057220459
    8. 'Dist' → logprob: -26.7500057220459
    9. '   ' → logprob: -26.8750057220459
    10. 'dest' → logprob: -26.8750057220459

Token 287: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0155008090659976
    2. 'd' → logprob: -5.140501022338867
    3. 'distance' → logprob: -5.890501022338867
    4. 's' → logprob: -6.390501022338867
    5. 'cost' → logprob: -6.765501022338867
    6. 'def' → logprob: -7.140501022338867
    7. 'start' → logprob: -7.640501022338867
    8. '#' → logprob: -8.140501022338867
    9. 'ds' → logprob: -8.390501022338867
    10. 'dis' → logprob: -8.390501022338867

Token 288: 'd' (ID: 67)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06892327219247818
    2. 'ds' → logprob: -3.318923234939575
    3. 'd' → logprob: -4.193923473358154
    4. 'da' → logprob: -5.318923473358154
    5. 'cost' → logprob: -5.693923473358154
    6. 'a' → logprob: -7.193923473358154
    7. 'dis' → logprob: -7.443923473358154
    8. 'dp' → logprob: -7.443923473358154
    9. 'sd' → logprob: -7.568923473358154
    10. 's' → logprob: -7.568923473358154

Token 289: '1' (ID: 16)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.09541863203048706
    2. 'ijkstra' → logprob: -3.970418691635132
    3. '1' → logprob: -4.345418453216553
    4. 'i' → logprob: -4.595418453216553
    5. 'is' → logprob: -4.845418453216553
    6. 'a' → logprob: -5.470418453216553
    7. 'ijk' → logprob: -5.470418453216553
    8. 'istance' → logprob: -5.595418453216553
    9. 'ij' → logprob: -5.595418453216553
    10. '_' → logprob: -5.720418453216553

Token 290: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3395023345947266
    2. ' =' → logprob: -1.4645023345947266
    3. '1' → logprob: -1.5895023345947266
    4. '0' → logprob: -1.9645023345947266
    5. '_s' → logprob: -2.9645023345947266
    6. 's' → logprob: -3.0895023345947266
    7. '=' → logprob: -3.8395023345947266
    8. 'a' → logprob: -4.464502334594727
    9. '[' → logprob: -5.089502334594727
    10. '_a' → logprob: -5.339502334594727

Token 291: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008210649830289185
    2. ' d' → logprob: -7.125821113586426
    3. 'partial' → logprob: -12.000821113586426
    4. '(d' → logprob: -12.375821113586426
    5. '[d' → logprob: -13.000821113586426
    6. ' partial' → logprob: -13.500821113586426
    7. '[' → logprob: -14.625821113586426
    8. '	d' → logprob: -15.125821113586426
    9. ')d' → logprob: -15.125821113586426
    10. '   ' → logprob: -15.250821113586426

Token 292: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00011439072113716975
    2. 'ijk' → logprob: -9.375114440917969
    3. '1' → logprob: -11.000114440917969
    4. 'ij' → logprob: -11.375114440917969
    5. 'jik' → logprob: -14.000114440917969
    6. 'i' → logprob: -15.750114440917969
    7. 'ijkl' → logprob: -16.37511444091797
    8. 'ijks' → logprob: -16.75011444091797
    9. 'j' → logprob: -17.00011444091797
    10. 'jk' → logprob: -17.00011444091797

Token 293: '([' (ID: 5194)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -6.704273118884885e-07
    2. 'edges' → logprob: -14.750000953674316
    3. '(edge' → logprob: -16.375
    4. '(' → logprob: -16.625
    5. ' edges' → logprob: -17.5
    6. '(vertices' → logprob: -18.125
    7. ')' → logprob: -18.5
    8. ' (' → logprob: -18.625
    9. '(ed' → logprob: -18.75
    10. '.edges' → logprob: -19.0

Token 294: 'g' (ID: 70)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.06429965794086456
    2. 'x' → logprob: -3.3142995834350586
    3. 'e' → logprob: -4.564299583435059
    4. 'graph' → logprob: -5.564299583435059
    5. 'edge' → logprob: -5.689299583435059
    6. 'adj' → logprob: -5.814299583435059
    7. 'g' → logprob: -5.939299583435059
    8. 'lst' → logprob: -6.689299583435059
    9. 'ed' → logprob: -7.314299583435059
    10. ' edges' → logprob: -8.689299583435059

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003398836823180318
    2. 'edges' → logprob: -6.128398895263672
    3. 'for' → logprob: -7.503398895263672
    4. 'or' → logprob: -8.753398895263672
    5. 'x' → logprob: -8.878398895263672
    6. '][' → logprob: -9.253398895263672
    7. '0' → logprob: -10.628398895263672
    8. 'graph' → logprob: -10.628398895263672
    9. '_[' → logprob: -10.753398895263672
    10. 'r' → logprob: -10.878398895263672

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.660315895918757e-05
    2. '1' → logprob: -9.500076293945312
    3. '[' → logprob: -14.125076293945312
    4. ' ' → logprob: -14.937576293945312
    5. '][' → logprob: -15.500076293945312
    6. '
' → logprob: -16.625076293945312
    7. 'import' → logprob: -16.875076293945312
    8. ']' → logprob: -17.125076293945312
    9. '۰' → logprob: -17.375076293945312
    10. '   ' → logprob: -17.562576293945312

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019513286650180817
    2. 'for' → logprob: -4.144513130187988
    3. ' for' → logprob: -5.769513130187988
    4. '],' → logprob: -8.394513130187988
    5. ' ]' → logprob: -9.144513130187988
    6. '   ' → logprob: -12.769513130187988
    7. ')' → logprob: -13.019513130187988
    8. ' ' → logprob: -13.269513130187988
    9. '```' → logprob: -13.644513130187988
    10. '
' → logprob: -13.644513130187988

Token 298: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31330588459968567
    2. 'for' → logprob: -1.3133058547973633
    3. '],' → logprob: -11.063305854797363
    4. ']' → logprob: -11.563305854797363
    5. ' ' → logprob: -11.813305854797363
    6. '	for' → logprob: -12.813305854797363
    7. ',' → logprob: -12.938305854797363
    8. '   ' → logprob: -13.063305854797363
    9. '
' → logprob: -13.563305854797363
    10. ')' → logprob: -15.188305854797363

Token 299: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06132602319121361
    2. 'edges' → logprob: -3.061326026916504
    3. ' edges' → logprob: -4.811326026916504
    4. ' g' → logprob: -5.436326026916504
    5. 'graph' → logprob: -9.186326026916504
    6. 'e' → logprob: -10.936326026916504
    7. '(edges' → logprob: -11.061326026916504
    8. '_edges' → logprob: -11.811326026916504
    9. 'edge' → logprob: -12.936326026916504
    10. '(g' → logprob: -13.061326026916504

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741625189781189
    2. 'in' → logprob: -0.9741625189781189
    3. 'edges' → logprob: -9.474162101745605
    4. ' edges' → logprob: -12.599162101745605
    5. '(edges' → logprob: -13.599162101745605
    6. 'g' → logprob: -13.849162101745605
    7. 's' → logprob: -14.224162101745605
    8. ' ' → logprob: -14.349162101745605
    9. ']' → logprob: -14.349162101745605
    10. 'e' → logprob: -15.099162101745605

Token 301: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0024781543761491776
    2. ' edges' → logprob: -6.002478122711182
    3. '(edges' → logprob: -13.25247859954834
    4. '.edges' → logprob: -14.75247859954834
    5. 'edge' → logprob: -16.252477645874023
    6. '_edges' → logprob: -16.627477645874023
    7. 'Edges' → logprob: -17.127477645874023
    8. ')' → logprob: -17.252477645874023
    9. 'ed' → logprob: -17.502477645874023
    10. ']' → logprob: -17.877477645874023

Token 302: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0028609856963157654
    2. ',' → logprob: -5.877861022949219
    3. ' ],' → logprob: -9.877861022949219
    4. ']' → logprob: -13.377861022949219
    5. '),' → logprob: -13.377861022949219
    6. '],
' → logprob: -14.877861022949219
    7. 's' → logprob: -15.002861022949219
    8. ' ,' → logprob: -15.127861022949219
    9. '])' → logprob: -15.252861022949219
    10. '],[' → logprob: -16.00286102294922

Token 303: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007941396324895322
    2. 't' → logprob: -7.250793933868408
    3. ' s' → logprob: -10.000794410705566
    4. '0' → logprob: -10.625794410705566
    5. 'n' → logprob: -11.250794410705566
    6. '(s' → logprob: -14.500794410705566
    7. '   ' → logprob: -15.125794410705566
    8. ' t' → logprob: -15.875794410705566
    9. ' ' → logprob: -16.31329345703125
    10. '	s' → logprob: -16.68829345703125

Token 304: ' -' (ID: 533)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47592103481292725
    2. ')' → logprob: -0.9759210348129272
    3. '-' → logprob: -6.475921154022217
    4. '),' → logprob: -8.725920677185059
    5. ',' → logprob: -9.975920677185059
    6. ')
' → logprob: -10.725920677185059
    7. ')

' → logprob: -11.225920677185059
    8. ' -' → logprob: -11.475920677185059
    9. ' )
' → logprob: -11.475920677185059
    10. ')d' → logprob: -11.725920677185059

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -16.375003814697266
    4. '```' → logprob: -17.125003814697266
    5. ',' → logprob: -17.375003814697266
    6. '2' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.687503814697266
    8. '=' → logprob: -19.500003814697266
    9. '۱' → logprob: -19.625003814697266
    10. '
' → logprob: -19.937503814697266

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -15.625005722045898
    4. '2' → logprob: -16.9375057220459
    5. '```' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.6250057220459
    7. ',' → logprob: -18.0000057220459
    8. '0' → logprob: -18.1875057220459
    9. '<|end|>' → logprob: -18.1875057220459
    10. '۱' → logprob: -18.7500057220459

Token 307: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06198359653353691
    2. ')' → logprob: -2.811983585357666
    3. ')
' → logprob: -11.936984062194824
    4. ')d' → logprob: -12.186984062194824
    5. ' )
' → logprob: -12.936984062194824
    6. ')

' → logprob: -13.311984062194824
    7. '),' → logprob: -16.561983108520508
    8. ')`
' → logprob: -16.561983108520508
    9. ' )' → logprob: -16.686983108520508
    10. ')#' → logprob: -17.186983108520508

Token 308: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.522638169466518e-05
    2. ' d' → logprob: -12.875024795532227
    3. 'print' → logprob: -13.000024795532227
    4. 'dp' → logprob: -13.125024795532227
    5. 'dt' → logprob: -13.375024795532227
    6. 'ds' → logprob: -13.500024795532227
    7. 'ans' → logprob: -13.750024795532227
    8. '#' → logprob: -13.812524795532227
    9. 'r' → logprob: -13.937524795532227
    10. 'def' → logprob: -14.125024795532227

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.024085596203804016
    2. '1' → logprob: -3.774085521697998
    3. '=' → logprob: -7.899085521697998
    4. ' =' → logprob: -8.524085998535156
    5. '0' → logprob: -8.774085998535156
    6. '[' → logprob: -10.024085998535156
    7. '_' → logprob: -10.399085998535156
    8. ' ' → logprob: -11.774085998535156
    9. 'd' → logprob: -11.774085998535156
    10. '
' → logprob: -12.524085998535156

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '=d' → logprob: -16.224077224731445
    4. ' ' → logprob: -17.099077224731445
    5. 'd' → logprob: -18.474077224731445
    6. '=

' → logprob: -18.724077224731445
    7. '＝' → logprob: -18.974077224731445
    8. ',' → logprob: -18.974077224731445
    9. '=
' → logprob: -19.724077224731445
    10. ')' → logprob: -19.724077224731445

Token 311: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0036003058776259422
    2. ' d' → logprob: -5.628600120544434
    3. '   ' → logprob: -16.25360107421875
    4. '	d' → logprob: -17.00360107421875
    5. ' ' → logprob: -17.37860107421875
    6. '(d' → logprob: -18.00360107421875
    7. '  ' → logprob: -18.25360107421875
    8. '[d' → logprob: -18.75360107421875
    9. 'dist' → logprob: -18.94110107421875
    10. ')d' → logprob: -18.94110107421875

Token 312: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -8.85235276655294e-05
    2. 'd' → logprob: -9.625088691711426
    3. 'ijk' → logprob: -11.500088691711426
    4. '[' → logprob: -12.125088691711426
    5. '[d' → logprob: -13.000088691711426
    6. 'k' → logprob: -13.875088691711426
    7. '[i' → logprob: -14.250088691711426
    8. 'ij' → logprob: -14.375088691711426
    9. '1' → logprob: -14.625088691711426
    10. '(d' → logprob: -15.375088691711426

Token 313: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0009405235759913921
    2. '[g' → logprob: -7.000940322875977
    3. '[' → logprob: -10.500940322875977
    4. '(g' → logprob: -14.500940322875977
    5. ' ([' → logprob: -15.500940322875977
    6. '(([' → logprob: -15.625940322875977
    7. '   ' → logprob: -16.000940322875977
    8. '(' → logprob: -16.000940322875977
    9. ' [' → logprob: -16.125940322875977
    10. '[e' → logprob: -16.250940322875977

Token 314: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.141186450899113e-05
    2. ' g' → logprob: -11.000020980834961
    3. '[g' → logprob: -12.375020980834961
    4. '(g' → logprob: -15.000020980834961
    5. '   ' → logprob: -16.50002098083496
    6. ' ' → logprob: -17.62502098083496
    7. '	g' → logprob: -17.62502098083496
    8. '[' → logprob: -17.87502098083496
    9. '
' → logprob: -18.25002098083496
    10. ' [' → logprob: -18.37502098083496

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.656383680412546e-05
    2. '1' → logprob: -10.000046730041504
    3. ' [' → logprob: -14.875046730041504
    4. 'for' → logprob: -15.000046730041504
    5. '][' → logprob: -16.250045776367188
    6. '
' → logprob: -16.375045776367188
    7. 'def' → logprob: -16.500045776367188
    8. '```' → logprob: -16.875045776367188
    9. '[
' → logprob: -17.250045776367188
    10. 'g' → logprob: -17.500045776367188

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.375008583068848
    4. '[' → logprob: -15.500008583068848
    5. '```' → logprob: -16.50000762939453
    6. '
' → logprob: -16.87500762939453
    7. '-' → logprob: -17.43750762939453
    8. '   ' → logprob: -18.37500762939453
    9. 'for' → logprob: -18.62500762939453
    10. '(' → logprob: -18.62500762939453

Token 317: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20592331886291504
    2. ' for' → logprob: -1.705923318862915
    3. '[' → logprob: -5.705923080444336
    4. ']' → logprob: -6.955923080444336
    5. '[g' → logprob: -9.705923080444336
    6. '][' → logprob: -10.080923080444336
    7. 'g' → logprob: -10.330923080444336
    8. ')' → logprob: -10.580923080444336
    9. '   ' → logprob: -11.330923080444336
    10. '0' → logprob: -11.580923080444336

Token 318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47410833835601807
    2. ' for' → logprob: -0.9741083383560181
    3. '[' → logprob: -10.474108695983887
    4. '	for' → logprob: -13.099108695983887
    5. ' ' → logprob: -14.849108695983887
    6. ')' → logprob: -16.34910774230957
    7. '
' → logprob: -16.59910774230957
    8. '   ' → logprob: -16.59910774230957
    9. 'or' → logprob: -16.72410774230957
    10. ']' → logprob: -16.72410774230957

Token 319: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0013272607466205955
    2. ' g' → logprob: -6.626327037811279
    3. ' in' → logprob: -14.751327514648438
    4. 'edges' → logprob: -14.751327514648438
    5. '	g' → logprob: -16.126327514648438
    6. '(g' → logprob: -16.251327514648438
    7. '[g' → logprob: -16.376327514648438
    8. ' edges' → logprob: -16.501327514648438
    9. 'e' → logprob: -17.376327514648438
    10. '.g' → logprob: -17.751327514648438

Token 320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19501444697380066
    2. 'g' → logprob: -2.445014476776123
    3. 'in' → logprob: -2.445014476776123
    4. ' g' → logprob: -5.945014476776123
    5. 'edges' → logprob: -7.445014476776123
    6. 'for' → logprob: -8.695013999938965
    7. ' edges' → logprob: -8.945013999938965
    8. '[' → logprob: -9.320013999938965
    9. ' for' → logprob: -9.570013999938965
    10. '(edges' → logprob: -10.945013999938965

Token 321: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.001174747827462852
    2. ' edges' → logprob: -6.7511749267578125
    3. '(edges' → logprob: -12.626174926757812
    4. '.edges' → logprob: -14.501174926757812
    5. 'g' → logprob: -15.126174926757812
    6. '_edges' → logprob: -15.626174926757812
    7. '[' → logprob: -16.001174926757812
    8. 'range' → logprob: -16.126174926757812
    9. 'edge' → logprob: -17.501174926757812
    10. '   ' → logprob: -17.751174926757812

Token 322: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2724720537662506
    2. 'for' → logprob: -1.5224720239639282
    3. ' for' → logprob: -3.8974721431732178
    4. ',' → logprob: -11.022472381591797
    5. ' ],' → logprob: -11.397472381591797
    6. '(s' → logprob: -12.772472381591797
    7. ']' → logprob: -12.772472381591797
    8. '   ' → logprob: -13.522472381591797
    9. '),' → logprob: -13.647472381591797
    10. 's' → logprob: -14.272472381591797

Token 323: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012070851516909897
    2. ' t' → logprob: -9.125121116638184
    3. 's' → logprob: -11.500121116638184
    4. '   ' → logprob: -14.625121116638184
    5. '(t' → logprob: -14.750121116638184
    6. '	t' → logprob: -15.750121116638184
    7. '`t' → logprob: -16.125120162963867
    8. ')t' → logprob: -16.250120162963867
    9. '[t' → logprob: -16.375120162963867
    10. '0' → logprob: -16.625120162963867

Token 324: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.313262403011322
    2. ' -' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.438261985778809
    4. '   ' → logprob: -17.188262939453125
    5. ')' → logprob: -17.313262939453125
    6. '−' → logprob: -17.563262939453125
    7. '1' → logprob: -17.938262939453125
    8. '–' → logprob: -18.438262939453125
    9. '()-' → logprob: -19.313262939453125
    10. '2' → logprob: -19.688262939453125

Token 325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031786637846380472
    2. ' ' → logprob: -5.753178596496582
    3. '-' → logprob: -14.753178596496582
    4. '   ' → logprob: -15.628178596496582
    5. '2' → logprob: -16.6281795501709
    6. '```' → logprob: -16.8156795501709
    7. '0' → logprob: -17.0031795501709
    8. ')' → logprob: -17.5656795501709
    9. '  ' → logprob: -17.5656795501709
    10. '(' → logprob: -18.1906795501709

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. '-' → logprob: -15.437575340270996
    4. '2' → logprob: -15.750075340270996
    5. '   ' → logprob: -16.687576293945312
    6. '```' → logprob: -16.812576293945312
    7. '0' → logprob: -17.062576293945312
    8. '１' → logprob: -17.625076293945312
    9. '۱' → logprob: -17.687576293945312
    10. '11' → logprob: -18.250076293945312

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.12501049041748
    4. ')

' → logprob: -14.62501049041748
    5. '))' → logprob: -16.500011444091797
    6. ')d' → logprob: -17.250011444091797
    7. ')#' → logprob: -17.500011444091797
    8. ')`' → logprob: -18.000011444091797
    9. ')s' → logprob: -18.125011444091797
    10. '#' → logprob: -18.375011444091797

Token 328: 'acc' (ID: 3717)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.114555224776268
    2. 'answer' → logprob: -2.8645551204681396
    3. 'res' → logprob: -3.2395551204681396
    4. 'result' → logprob: -5.364555358886719
    5. 'answers' → logprob: -6.364555358886719
    6. 'for' → logprob: -6.489555358886719
    7. 'total' → logprob: -7.364555358886719
    8. 'INF' → logprob: -7.489555358886719
    9. 'min' → logprob: -7.614555358886719
    10. 'dp' → logprob: -8.239555358886719

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6222478151321411
    2. 'um' → logprob: -1.3722478151321411
    3. 'umulate' → logprob: -2.2472476959228516
    4. '_cost' → logprob: -3.4972476959228516
    5. 'dist' → logprob: -3.7472476959228516
    6. '_dist' → logprob: -3.7472476959228516
    7. '=' → logprob: -4.122247695922852
    8. 'umulative' → logprob: -6.247247695922852
    9. 'cost' → logprob: -6.497247695922852
    10. '=[]' → logprob: -6.997247695922852

Token 330: ' float' (ID: 4428)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2117130011320114
    2. ' [' → logprob: -1.7117129564285278
    3. '[n' → logprob: -5.336712837219238
    4. '0' → logprob: -6.461712837219238
    5. '[int' → logprob: -6.711712837219238
    6. '[d' → logprob: -7.336712837219238
    7. '[s' → logprob: -7.836712837219238
    8. '[max' → logprob: -7.836712837219238
    9. 'float' → logprob: -8.586712837219238
    10. '[i' → logprob: -8.836712837219238

Token 331: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.6700158715248108
    2. '('' → logprob: -0.7950158715248108
    3. ''s' → logprob: -4.295015811920166
    4. ''' → logprob: -5.295015811920166
    5. ''n' → logprob: -6.045015811920166
    6. ''il' → logprob: -6.920015811920166
    7. ''acc' → logprob: -6.920015811920166
    8. ''on' → logprob: -6.920015811920166
    9. ''ac' → logprob: -6.920015811920166
    10. ''i' → logprob: -7.170015811920166

Token 332: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.796184723294573e-06
    2. '-' → logprob: -12.500005722045898
    3. 'max' → logprob: -14.125005722045898
    4. '-inf' → logprob: -15.125005722045898
    5. '16' → logprob: -15.500005722045898
    6. '9' → logprob: -16.0000057220459
    7. '100' → logprob: -16.0000057220459
    8. '10' → logprob: -16.3750057220459
    9. '8' → logprob: -16.5000057220459
    10. '18' → logprob: -16.8750057220459

Token 333: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6331166625022888
    2. ')
' → logprob: -0.7581166625022888
    3. ' )
' → logprob: -8.633116722106934
    4. ' )' → logprob: -8.883116722106934
    5. ')
' → logprob: -9.508116722106934
    6. '')' → logprob: -10.008116722106934
    7. '')
' → logprob: -10.258116722106934
    8. ')

' → logprob: -11.133116722106934
    9. '[])
' → logprob: -12.133116722106934
    10. '[' → logprob: -12.258116722106934

Token 334: 'result' (ID: 2521)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3734031617641449
    2. 'res' → logprob: -1.4984031915664673
    3. 'answer' → logprob: -3.3734030723571777
    4. 'for' → logprob: -3.8734030723571777
    5. 'result' → logprob: -3.9984030723571777
    6. 'answers' → logprob: -4.623403072357178
    7. 'results' → logprob: -5.748403072357178
    8. 'print' → logprob: -7.373403072357178
    9. 'dist' → logprob: -8.248403549194336
    10. 'output' → logprob: -8.248403549194336

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05238858982920647
    2. '=' → logprob: -3.1773886680603027
    3. 's' → logprob: -4.677388668060303
    4. ' ' → logprob: -11.052388191223145
    5. '=[]' → logprob: -11.927388191223145
    6. '[' → logprob: -12.427388191223145
    7. ',' → logprob: -12.427388191223145
    8. '[]' → logprob: -12.802388191223145
    9. ' =[' → logprob: -13.552388191223145
    10. '_' → logprob: -13.677388191223145

Token 336: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4337190091609955
    2. '[' → logprob: -1.4337190389633179
    3. '[]
' → logprob: -2.1837189197540283
    4. '[n' → logprob: -7.808719158172607
    5. '[int' → logprob: -9.55871868133545
    6. '['' → logprob: -9.80871868133545
    7. '[m' → logprob: -10.18371868133545
    8. '[s' → logprob: -10.30871868133545
    9. '[f' → logprob: -10.30871868133545
    10. '[]

' → logprob: -10.80871868133545

Token 337: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.125
    3. '
' → logprob: -17.75
    4. '```' → logprob: -18.25
    5. 'fo' → logprob: -19.75
    6. 'import' → logprob: -19.75
    7. 'result' → logprob: -20.25
    8. 'print' → logprob: -20.375
    9. 'ans' → logprob: -20.75
    10. '	for' → logprob: -21.125

Token 338: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010530934669077396
    2. 'u' → logprob: -5.010530948638916
    3. ' i' → logprob: -6.135530948638916
    4. 'v' → logprob: -7.135530948638916
    5. 'x' → logprob: -7.635530948638916
    6. 'cost' → logprob: -8.510530471801758
    7. ' u' → logprob: -10.260530471801758
    8. 'node' → logprob: -11.010530471801758
    9. 'c' → logprob: -11.135530471801758
    10. '_' → logprob: -11.385530471801758

Token 339: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47561705112457275
    2. 'in' → logprob: -0.9756170511245728
    3. ',' → logprob: -6.600616931915283
    4. 'range' → logprob: -9.225617408752441
    5. 'n' → logprob: -10.725617408752441
    6. ' ' → logprob: -11.225617408752441
    7. ' ,' → logprob: -12.225617408752441
    8. 'i' → logprob: -12.350617408752441
    9. '0' → logprob: -12.600617408752441
    10. ',_' → logprob: -12.725617408752441

Token 340: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17607827484607697
    2. '(u' → logprob: -3.6760783195495605
    3. '(y' → logprob: -3.8010783195495605
    4. '(cost' → logprob: -4.0510783195495605
    5. '(_,' → logprob: -4.4260783195495605
    6. '(c' → logprob: -4.5510783195495605
    7. '(d' → logprob: -4.6760783195495605
    8. '(x' → logprob: -4.8010783195495605
    9. ' y' → logprob: -4.9260783195495605
    10. 'd' → logprob: -5.0510783195495605

Token 341: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34863176941871643
    2. ' in' → logprob: -1.223631739616394
    3. ',' → logprob: -8.723631858825684
    4. ' ' → logprob: -11.973631858825684
    5. '   ' → logprob: -12.348631858825684
    6. '
' → logprob: -12.848631858825684
    7. ')' → logprob: -12.973631858825684
    8. 'import' → logprob: -13.473631858825684
    9. '  ' → logprob: -13.598631858825684
    10. '_in' → logprob: -13.723631858825684

Token 342: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00487104244530201
    2. 'range' → logprob: -5.629870891571045
    3. 'enumer' → logprob: -6.879870891571045
    4. ' zip' → logprob: -8.379871368408203
    5. '(zip' → logprob: -11.879871368408203
    6. 're' → logprob: -13.879871368408203
    7. ' enumerate' → logprob: -13.879871368408203
    8. '
' → logprob: -14.379871368408203
    9. 'edges' → logprob: -14.629871368408203
    10. 'list' → logprob: -15.004871368408203

Token 343: '(re' (ID: 8178)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.052377623040229e-05
    2. '(re' → logprob: -9.625070571899414
    3. '(range' → logprob: -13.125070571899414
    4. '(zip' → logprob: -13.375070571899414
    5. '(' → logprob: -15.000070571899414
    6. 'd' → logprob: -15.375070571899414
    7. '(en' → logprob: -15.625070571899414
    8. ' (' → logprob: -16.875070571899414
    9. '((' → logprob: -17.250070571899414
    10. 're' → logprob: -18.250070571899414

Token 344: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.04988095536828041
    2. 'v' → logprob: -3.0498809814453125
    3. '(d' → logprob: -7.4248809814453125
    4. 'd' → logprob: -7.5498809814453125
    5. 'verse' → logprob: -8.799880981445312
    6. 'g' → logprob: -12.174880981445312
    7. 'vised' → logprob: -12.799880981445312
    8. 'verted' → logprob: -13.049880981445312
    9. '1' → logprob: -13.299880981445312
    10. '[d' → logprob: -13.924880981445312

Token 345: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.339278580620885e-06
    2. '(range' → logprob: -13.625001907348633
    3. 'd' → logprob: -13.750001907348633
    4. ' (' → logprob: -18.250001907348633
    5. 'range' → logprob: -18.750001907348633
    6. '((' → logprob: -18.875001907348633
    7. '(' → logprob: -19.625001907348633
    8. ',d' → logprob: -19.625001907348633
    9. '
' → logprob: -20.000001907348633
    10. '(re' → logprob: -20.250001907348633

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. '2' → logprob: -11.250015258789062
    3. '
' → logprob: -14.375015258789062
    4. ' ' → logprob: -14.937515258789062
    5. 'enumer' → logprob: -15.312515258789062
    6. 'range' → logprob: -15.437515258789062
    7. ')' → logprob: -15.562515258789062
    8. ',' → logprob: -15.812515258789062
    9. '

' → logprob: -16.187515258789062
    10. '```' → logprob: -16.500015258789062

Token 347: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00022082125360611826
    2. ' ),' → logprob: -8.750221252441406
    3. '[::-' → logprob: -10.250221252441406
    4. '   ' → logprob: -11.000221252441406
    5. ',' → logprob: -13.125221252441406
    6. '(re' → logprob: -13.500221252441406
    7. 're' → logprob: -13.625221252441406
    8. ' ' → logprob: -13.750221252441406
    9. '()),' → logprob: -14.000221252441406
    10. ',),' → logprob: -14.125221252441406

Token 348: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00439415592700243
    2. ' reversed' → logprob: -6.004394054412842
    3. '   ' → logprob: -6.504394054412842
    4. 'd' → logprob: -8.12939453125
    5. '       ' → logprob: -10.00439453125
    6. '           ' → logprob: -10.75439453125
    7. '    ' → logprob: -11.50439453125
    8. '          ' → logprob: -11.50439453125
    9. '  ' → logprob: -11.62939453125
    10. '     ' → logprob: -12.25439453125

Token 349: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.020562559366226196
    2. 'd' → logprob: -3.8955626487731934
    3. ' d' → logprob: -11.770562171936035
    4. ' (' → logprob: -11.895562171936035
    5. '(' → logprob: -13.145562171936035
    6. '(re' → logprob: -13.395562171936035
    7. '	d' → logprob: -14.270562171936035
    8. '
' → logprob: -14.520562171936035
    9. '   ' → logprob: -14.645562171936035
    10. ')d' → logprob: -15.520562171936035

Token 350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '(d' → logprob: -14.500001907348633
    3. 'd' → logprob: -14.875001907348633
    4. '(' → logprob: -15.500001907348633
    5. ' ' → logprob: -15.875001907348633
    6. '[' → logprob: -16.625001907348633
    7. 's' → logprob: -17.125001907348633
    8. '２' → logprob: -17.187501907348633
    9. '[d' → logprob: -17.250001907348633
    10. '
' → logprob: -17.250001907348633

Token 351: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12697084248065948
    2. '):
' → logprob: -2.1269707679748535
    3. ')' → logprob: -10.751971244812012
    4. '):
' → logprob: -11.126971244812012
    5. ')):' → logprob: -13.251971244812012
    6. ' ):' → logprob: -13.501971244812012
    7. '()):
' → logprob: -13.626971244812012
    8. ':' → logprob: -14.501971244812012
    9. '():' → logprob: -14.626971244812012
    10. '():
' → logprob: -14.751971244812012

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012299923691898584
    2. ' result' → logprob: -7.251229763031006
    3. ' acc' → logprob: -7.626229763031006
    4. '```' → logprob: -11.626230239868164
    5. 'acc' → logprob: -12.126230239868164
    6. '
' → logprob: -12.376230239868164
    7. 'result' → logprob: -12.501230239868164
    8. '	acc' → logprob: -12.876230239868164
    9. ' if' → logprob: -13.376230239868164
    10. '    
' → logprob: -13.376230239868164

Token 353: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.18989847600460052
    2. '   ' → logprob: -2.1898984909057617
    3. ' acc' → logprob: -2.8148984909057617
    4. 'ac' → logprob: -8.314898490905762
    5. 'cost' → logprob: -8.314898490905762
    6. '	acc' → logprob: -9.189898490905762
    7. 'if' → logprob: -9.689898490905762
    8. 'min' → logprob: -9.939898490905762
    9. ' if' → logprob: -10.064898490905762
    10. 'current' → logprob: -10.189898490905762

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004153429996222258
    2. ' =' → logprob: -5.504153251647949
    3. '=min' → logprob: -9.50415325164795
    4. '   ' → logprob: -15.62915325164795
    5. 'min' → logprob: -16.004154205322266
    6. '+=' → logprob: -16.254154205322266
    7. '=

' → logprob: -17.254154205322266
    8. '=max' → logprob: -17.379154205322266
    9. '=}' → logprob: -17.379154205322266
    10. '.=' → logprob: -17.504154205322266

Token 355: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009115827269852161
    2. ' min' → logprob: -7.000911712646484
    3. 'x' → logprob: -17.250911712646484
    4. 'max' → logprob: -17.375911712646484
    5. 'acc' → logprob: -17.625911712646484
    6. '	min' → logprob: -17.750911712646484
    7. '(min' → logprob: -17.875911712646484
    8. '=min' → logprob: -18.375911712646484
    9. ' ' → logprob: -18.750911712646484
    10. '[min' → logprob: -19.000911712646484

Token 356: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.7954958821064793e-05
    2. '(x' → logprob: -11.000018119812012
    3. '(' → logprob: -14.625018119812012
    4. 'acc' → logprob: -15.000018119812012
    5. '([' → logprob: -15.500018119812012
    6. '(min' → logprob: -16.875017166137695
    7. '(
' → logprob: -17.125017166137695
    8. '(ac' → logprob: -17.375017166137695
    9. '	acc' → logprob: -18.000017166137695
    10. '((' → logprob: -18.375017166137695

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011427151912357658
    2. ',x' → logprob: -9.750114440917969
    3. 'acc' → logprob: -10.500114440917969
    4. ' ,' → logprob: -11.000114440917969
    5. '(acc' → logprob: -11.875114440917969
    6. ',
' → logprob: -13.500114440917969
    7. ',min' → logprob: -14.500114440917969
    8. 'x' → logprob: -15.000114440917969
    9. ' acc' → logprob: -15.250114440917969
    10. ')' → logprob: -15.500114440917969

Token 358: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024968255311250687
    2. ' x' → logprob: -6.002496719360352
    3. '(x' → logprob: -12.002496719360352
    4. '   ' → logprob: -12.002496719360352
    5. ')' → logprob: -12.502496719360352
    6. ' ' → logprob: -13.002496719360352
    7. '  ' → logprob: -14.627496719360352
    8. '	x' → logprob: -15.127496719360352
    9. 'y' → logprob: -15.252496719360352
    10. '[x' → logprob: -15.502496719360352

Token 359: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5034584403038025
    2. '+y' → logprob: -1.5034584999084473
    3. '+' → logprob: -1.7534584999084473
    4. ')' → logprob: -11.878458023071289
    5. '+
' → logprob: -12.128458023071289
    6. ' ' → logprob: -12.753458023071289
    7. ',' → logprob: -12.878458023071289
    8. 'y' → logprob: -13.253458023071289
    9. ' y' → logprob: -13.378458023071289
    10. '   ' → logprob: -13.503458023071289

Token 360: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00026169343618676066
    2. ' y' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.250261306762695
    4. ' ' → logprob: -16.375261306762695
    5. '  ' → logprob: -17.250261306762695
    6. '	y' → logprob: -17.625261306762695
    7. ''y' → logprob: -19.250261306762695
    8. '    ' → logprob: -19.500261306762695
    9. '(y' → logprob: -20.125261306762695
    10. 'y's' → logprob: -20.625261306762695

Token 361: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006878649350255728
    2. ')' → logprob: -5.006878852844238
    3. ' )
' → logprob: -9.131878852844238
    4. '-' → logprob: -10.256878852844238
    5. ' -' → logprob: -11.506878852844238
    6. ')

' → logprob: -12.881878852844238
    7. ')
' → logprob: -12.881878852844238
    8. '   ' → logprob: -13.131878852844238
    9. ' ' → logprob: -14.006878852844238
    10. ' )' → logprob: -14.006878852844238

Token 362: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5840872526168823
    2. '   ' → logprob: -0.8340872526168823
    3. ' result' → logprob: -4.834087371826172
    4. '
' → logprob: -9.209087371826172
    5. '```' → logprob: -9.959087371826172
    6. '	result' → logprob: -12.084087371826172
    7. '``' → logprob: -13.084087371826172
    8. ' ' → logprob: -13.584087371826172
    9. '  ' → logprob: -14.084087371826172
    10. '    
' → logprob: -14.209087371826172

Token 363: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -4.179569077678025e-05
    2. '   ' → logprob: -11.000041961669922
    3. '
' → logprob: -11.125041961669922
    4. ' result' → logprob: -11.500041961669922
    5. '    
' → logprob: -16.125041961669922
    6. 'print' → logprob: -18.250041961669922
    7. '	result' → logprob: -18.500041961669922
    8. 'res' → logprob: -18.750041961669922
    9. 'answer' → logprob: -18.750041961669922
    10. 'results' → logprob: -18.750041961669922

Token 364: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001957179047167301
    2. '.' → logprob: -6.251957416534424
    3. '.ap' → logprob: -10.626956939697266
    4. '.app' → logprob: -13.001956939697266
    5. ' .' → logprob: -13.751956939697266
    6. '.insert' → logprob: -13.876956939697266
    7. '.a' → logprob: -16.876956939697266
    8. 'append' → logprob: -18.001956939697266
    9. '   ' → logprob: -18.126956939697266
    10. '.extend' → logprob: -18.751956939697266

Token 365: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.625005722045898
    3. '(str' → logprob: -13.250005722045898
    4. 'acc' → logprob: -14.750005722045898
    5. '(ac' → logprob: -15.500005722045898
    6. '((' → logprob: -18.5000057220459
    7. '	acc' → logprob: -18.6250057220459
    8. ' acc' → logprob: -18.7500057220459
    9. '(ans' → logprob: -18.8750057220459
    10. '(a' → logprob: -19.6250057220459

Token 366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1238597184419632
    2. ')' → logprob: -2.4988596439361572
    3. ')

' → logprob: -3.3738596439361572
    4. '-' → logprob: -10.623859405517578
    5. '
' → logprob: -11.248859405517578
    6. ')
' → logprob: -11.373859405517578
    7. ' )
' → logprob: -12.373859405517578
    8. ')


' → logprob: -12.748859405517578
    9. ')

' → logprob: -13.998859405517578
    10. '+' → logprob: -14.498859405517578

Token 367: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2816064953804016
    2. 'print' → logprob: -1.5316064357757568
    3. '\n' → logprob: -4.281606674194336
    4. 'for' → logprob: -4.906606674194336
    5. '```' → logprob: -5.906606674194336
    6. 'result' → logprob: -6.031606674194336
    7. '  
' → logprob: -7.156606674194336
    8. ' 
' → logprob: -7.406606674194336
    9. '``' → logprob: -8.031606674194336
    10. '
' → logprob: -8.031606674194336

Token 368: ' val' (ID: 1459)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12115655839443207
    2. 'v' → logprob: -2.8711564540863037
    3. 'val' → logprob: -4.246156692504883
    4. 'res' → logprob: -4.621156692504883
    5. 'i' → logprob: -4.871156692504883
    6. 'x' → logprob: -4.996156692504883
    7. 'a' → logprob: -5.621156692504883
    8. 'ans' → logprob: -5.871156692504883
    9. '_' → logprob: -5.996156692504883
    10. '_r' → logprob: -6.121156692504883

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028115289751440287
    2. 'in' → logprob: -5.877811431884766
    3. '_in' → logprob: -13.252811431884766
    4. 'ue' → logprob: -13.502811431884766
    5. '_' → logprob: -13.752811431884766
    6. ' ' → logprob: -14.252811431884766
    7. ',' → logprob: -14.627811431884766
    8. '   ' → logprob: -14.877811431884766
    9. 'e' → logprob: -15.377811431884766
    10. '	in' → logprob: -15.627811431884766

Token 370: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0381968691945076
    2. 'result' → logprob: -3.2881968021392822
    3. ' reversed' → logprob: -8.788196563720703
    4. ' result' → logprob: -13.163196563720703
    5. 'reverse' → logprob: -14.288196563720703
    6. '   ' → logprob: -16.413196563720703
    7. '[::-' → logprob: -16.788196563720703
    8. '
' → logprob: -17.163196563720703
    9. '(re' → logprob: -17.788196563720703
    10. '	re' → logprob: -17.913196563720703

Token 371: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.7697225252486533e-06
    2. 'result' → logprob: -12.500003814697266
    3. '(' → logprob: -17.750003814697266
    4. ' (' → logprob: -18.375003814697266
    5. '(results' → logprob: -18.500003814697266
    6. '=result' → logprob: -19.375003814697266
    7. ',result' → logprob: -19.625003814697266
    8. '(range' → logprob: -19.750003814697266
    9. '(res' → logprob: -20.375003814697266
    10. ' result' → logprob: -20.875003814697266

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23660430312156677
    2. '):
' → logprob: -1.7366043329238892
    3. '(' → logprob: -4.6116042137146
    4. '():
' → logprob: -4.7366042137146
    5. '():' → logprob: -5.1116042137146
    6. '(val' → logprob: -5.6116042137146
    7. ':' → logprob: -5.6116042137146
    8. '   ' → logprob: -6.9866042137146
    9. ':
' → logprob: -7.3616042137146
    10. '(range' → logprob: -8.361604690551758

Token 373: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03627203032374382
    2. ' print' → logprob: -3.5362720489501953
    3. '   ' → logprob: -5.036272048950195
    4. '
' → logprob: -14.161272048950195
    5. '```' → logprob: -14.286272048950195
    6. '	print' → logprob: -15.036272048950195
    7. 'printf' → logprob: -15.286272048950195
    8. '    
' → logprob: -16.161272048950195
    9. '#print' → logprob: -16.286272048950195
    10. '_print' → logprob: -16.786272048950195

Token 374: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07889342308044434
    2. ' print' → logprob: -2.5788934230804443
    3. '   ' → logprob: -12.578893661499023
    4. 'pr' → logprob: -16.703893661499023
    5. '```' → logprob: -17.578893661499023
    6. '	print' → logprob: -17.828893661499023
    7. '.print' → logprob: -17.953893661499023
    8. '
' → logprob: -18.078893661499023
    9. ' prin' → logprob: -18.078893661499023
    10. '-print' → logprob: -18.703893661499023

Token 375: '(' (ID: 7)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.004433559253811836
    2. 'val' → logprob: -5.504433631896973
    3. '(' → logprob: -8.004433631896973
    4. '10' → logprob: -11.879433631896973
    5. ' val' → logprob: -12.379433631896973
    6. '(int' → logprob: -12.379433631896973
    7. '(float' → logprob: -13.129433631896973
    8. '100' → logprob: -14.004433631896973
    9. ' (' → logprob: -14.254433631896973
    10. '(f' → logprob: -14.254433631896973

Token 376: '10' (ID: 702)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.034108493477106094
    2. '10' → logprob: -3.4091084003448486
    3. '100' → logprob: -8.03410816192627
    4. 'int' → logprob: -9.53410816192627
    5. 'float' → logprob: -10.03410816192627
    6. ' val' → logprob: -12.03410816192627
    7. '(val' → logprob: -12.28410816192627
    8. 'max' → logprob: -12.28410816192627
    9. '999' → logprob: -13.65910816192627
    10. '9' → logprob: -14.03410816192627

Token 377: '**' (ID: 410)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.5695648193359375
    2. '15' → logprob: -1.4445648193359375
    3. '13' → logprob: -2.5695648193359375
    4. '14' → logprob: -2.6945648193359375
    5. '9' → logprob: -3.0695648193359375
    6. '000' → logprob: -5.1945648193359375
    7. '10' → logprob: -7.3195648193359375
    8. '16' → logprob: -7.8195648193359375
    9. '**' → logprob: -8.319564819335938
    10. '09' → logprob: -8.319564819335938

Token 378: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.9146995327901095e-05
    2. '9' → logprob: -11.125019073486328
    3. '16' → logprob: -13.375019073486328
    4. '14' → logprob: -13.875019073486328
    5. '
' → logprob: -14.750019073486328
    6. '10' → logprob: -15.375019073486328
    7. '\
' → logprob: -15.500019073486328
    8. '1' → logprob: -15.625019073486328
    9. '8' → logprob: -15.750019073486328
    10. '5' → logprob: -15.750019073486328

Token 379: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2617029547691345
    2. '-' → logprob: -1.5117030143737793
    3. '-val' → logprob: -4.636703014373779
    4. '-end' → logprob: -11.136702537536621
    5. ' ' → logprob: -11.511702537536621
    6. ' val' → logprob: -11.761702537536621
    7. ',' → logprob: -13.761702537536621
    8. ')' → logprob: -14.136702537536621
    9. '-int' → logprob: -14.136702537536621
    10. '-Val' → logprob: -15.386702537536621

Token 380: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -6.2729995988775045e-06
    2. ' val' → logprob: -12.000006675720215
    3. '	val' → logprob: -23.0000057220459
    4. '(val' → logprob: -23.2500057220459
    5. '   ' → logprob: -24.2500057220459
    6. '_val' → logprob: -25.0000057220459
    7. '[val' → logprob: -25.5000057220459
    8. '```' → logprob: -25.7500057220459
    9. 'int' → logprob: -26.2500057220459
    10. ',val' → logprob: -26.7500057220459

Token 381: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.875000953674316
    4. '```' → logprob: -15.250000953674316
    5. '),' → logprob: -16.375001907348633
    6. ');' → logprob: -16.750001907348633
    7. ',' → logprob: -17.125001907348633
    8. '))' → logprob: -17.125001907348633
    9. '())' → logprob: -17.250001907348633
    10. ',)' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 379
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 351
Précision stricte (1ère position): 47.23%
Précision adaptée (1ère position): 51.19%
Précision (top 10): 92.61%
================================================================================
