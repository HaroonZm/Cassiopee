================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_string = input()
user_input_step = int(input())
output_string = user_input_string[::user_input_step]
print(output_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6197084188461304
    2. '[' → logprob: -1.3697084188461304
    3. '.' → logprob: -2.11970853805542
    4. ':' → logprob: -3.86970853805542
    5. ')' → logprob: -4.36970853805542
    6. ''' → logprob: -4.36970853805542
    7. '```' → logprob: -4.74470853805542
    8. ' ' → logprob: -4.86970853805542
    9. '(' → logprob: -5.49470853805542
    10. '"' → logprob: -5.86970853805542

Token 4: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07455136626958847
    2. ''' → logprob: -3.8245513439178467
    3. ' "' → logprob: -3.9495513439178467
    4. '"user' → logprob: -3.9495513439178467
    5. '""' → logprob: -5.199551582336426
    6. ' ' → logprob: -5.574551582336426
    7. ' ""' → logprob: -6.949551582336426
    8. ' '' → logprob: -7.824551582336426
    9. '''' → logprob: -8.324551582336426
    10. 'input' → logprob: -8.824551582336426

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011335473973304033
    2. ''' → logprob: -8.251133918762207
    3. '('' → logprob: -8.251133918762207
    4. '```' → logprob: -8.251133918762207
    5. '()' → logprob: -9.001133918762207
    6. '(
' → logprob: -9.751133918762207
    7. '("("' → logprob: -9.751133918762207
    8. '`' → logprob: -9.876133918762207
    9. '"' → logprob: -11.126133918762207
    10. '(

' → logprob: -11.751133918762207

Token 6: 'user' (ID: 1428)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0851433202624321
    2. '.strip' → logprob: -2.5851433277130127
    3. '.lower' → logprob: -5.960143089294434
    4. '=' → logprob: -6.585143089294434
    5. '+' → logprob: -7.710143089294434
    6. '.split' → logprob: -7.835143089294434
    7. '.upper' → logprob: -7.960143089294434
    8. '.replace' → logprob: -8.460143089294434
    9. 'if' → logprob: -9.085143089294434
    10. '```' → logprob: -9.085143089294434

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28971755504608154
    2. '.' → logprob: -1.4147175550460815
    3. '._' → logprob: -5.789717674255371
    4. '_input' → logprob: -5.914717674255371
    5. '_.' → logprob: -6.289717674255371
    6. '```' → logprob: -8.414717674255371
    7. '[' → logprob: -8.914717674255371
    8. ')' → logprob: -9.414717674255371
    9. '_user' → logprob: -9.414717674255371
    10. '_output' → logprob: -10.164717674255371

Token 8: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07589609920978546
    2. '_string' → logprob: -2.8258960247039795
    3. '.' → logprob: -5.200896263122559
    4. '._' → logprob: -6.200896263122559
    5. '[' → logprob: -6.700896263122559
    6. '_str' → logprob: -6.950896263122559
    7. '_.' → logprob: -6.950896263122559
    8. ' _' → logprob: -7.200896263122559
    9. '_s' → logprob: -7.575896263122559
    10. '```' → logprob: -7.575896263122559

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3461053669452667
    2. '_size' → logprob: -1.4711053371429443
    3. 's' → logprob: -3.2211053371429443
    4. '_s' → logprob: -4.221105575561523
    5. ' =' → logprob: -5.096105575561523
    6. '=' → logprob: -6.971105575561523
    7. '_length' → logprob: -7.346105575561523
    8. 'size' → logprob: -8.971105575561523
    9. '_len' → logprob: -9.471105575561523
    10. '_=' → logprob: -9.471105575561523

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.49034133553504944
    2. ' int' → logprob: -2.1153414249420166
    3. 'user' → logprob: -2.3653414249420166
    4. 'input' → logprob: -2.4903414249420166
    5. ' user' → logprob: -3.7403414249420166
    6. ' input' → logprob: -4.1153411865234375
    7. ' ' → logprob: -4.2403411865234375
    8. '1' → logprob: -4.6153411865234375
    9. '"' → logprob: -4.7403411865234375
    10. ''' → logprob: -5.3653411865234375

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0447419136762619
    2. '(user' → logprob: -3.4197418689727783
    3. 'user' → logprob: -4.794742107391357
    4. '('' → logprob: -6.169742107391357
    5. ''' → logprob: -8.7947416305542
    6. '("("' → logprob: -9.2947416305542
    7. '()' → logprob: -10.0447416305542
    8. ' (' → logprob: -10.1697416305542
    9. ''user' → logprob: -10.1697416305542
    10. '`' → logprob: -10.2947416305542

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06652764230966568
    2. '())' → logprob: -2.9415276050567627
    3. '()' → logprob: -4.566527843475342
    4. '(' → logprob: -6.941527843475342
    5. '))' → logprob: -9.566527366638184
    6. ' )' → logprob: -9.941527366638184
    7. '`)' → logprob: -10.191527366638184
    8. ' ())' → logprob: -10.691527366638184
    9. '')' → logprob: -11.191527366638184
    10. ')`' → logprob: -12.816527366638184

Token 13: 'output' (ID: 6130)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3564293682575226
    2. 'if' → logprob: -2.3564293384552
    3. 'for' → logprob: -3.2314293384552
    4. 'n' → logprob: -3.6064293384552
    5. 'i' → logprob: -4.106429576873779
    6. 'output' → logprob: -4.231429576873779
    7. '+' → logprob: -4.231429576873779
    8. 'step' → logprob: -4.231429576873779
    9. 'range' → logprob: -4.856429576873779
    10. 'target' → logprob: -4.856429576873779

Token 14: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08083125203847885
    2. '(' → logprob: -3.330831289291382
    3. '=' → logprob: -4.205831050872803
    4. '[' → logprob: -4.830831050872803
    5. '.' → logprob: -4.955831050872803
    6. ''' → logprob: -5.330831050872803
    7. ' =' → logprob: -6.580831050872803
    8. ')' → logprob: -6.830831050872803
    9. 's' → logprob: -7.205831050872803
    10. '"' → logprob: -7.205831050872803

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.544526994228363
    2. ' =' → logprob: -1.0445270538330078
    3. '[' → logprob: -3.794527053833008
    4. '_' → logprob: -4.294527053833008
    5. ' +=' → logprob: -4.419527053833008
    6. '+' → logprob: -4.794527053833008
    7. '+=' → logprob: -5.794527053833008
    8. '.' → logprob: -5.919527053833008
    9. '.append' → logprob: -6.669527053833008
    10. '(' → logprob: -7.044527053833008

Token 16: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.43330803513526917
    2. '''' → logprob: -2.1833081245422363
    3. '""' → logprob: -2.4333081245422363
    4. '"' → logprob: -3.1833081245422363
    5. ''' → logprob: -3.1833081245422363
    6. ' user' → logprob: -3.3083081245422363
    7. '"user' → logprob: -4.058308124542236
    8. ' ""' → logprob: -5.183308124542236
    9. ''user' → logprob: -5.558308124542236
    10. ' ''' → logprob: -5.808308124542236

Token 17: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.012598424218595028
    2. '_' → logprob: -4.637598514556885
    3. '_output' → logprob: -6.262598514556885
    4. '_put' → logprob: -7.512598514556885
    5. 'put' → logprob: -8.887598037719727
    6. '_p' → logprob: -9.012598037719727
    7. '_user' → logprob: -9.887598037719727
    8. '__' → logprob: -11.262598037719727
    9. ' _' → logprob: -11.637598037719727
    10. '```' → logprob: -12.012598037719727

Token 18: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39251312613487244
    2. '_string' → logprob: -1.2675131559371948
    3. '[' → logprob: -3.5175130367279053
    4. '[user' → logprob: -5.392513275146484
    5. '+' → logprob: -6.017513275146484
    6. '_user' → logprob: -6.767513275146484
    7. '[_' → logprob: -7.017513275146484
    8. '_step' → logprob: -7.017513275146484
    9. '[:]' → logprob: -7.517513275146484
    10. '_output' → logprob: -7.642513275146484

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03950659558176994
    2. '[:]' → logprob: -3.539506673812866
    3. '[user' → logprob: -5.289506435394287
    4. '[
' → logprob: -6.664506435394287
    5. '[:' → logprob: -6.789506435394287
    6. '.' → logprob: -7.664506435394287
    7. '.replace' → logprob: -8.039506912231445
    8. '+' → logprob: -8.289506912231445
    9. '[i' → logprob: -8.539506912231445
    10. '[::-' → logprob: -8.664506912231445

Token 20: '::' (ID: 742)
  Prédit: ':user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':user' → logprob: -0.28135237097740173
    2. '0' → logprob: -2.0313522815704346
    3. ':' → logprob: -2.7813522815704346
    4. '::' → logprob: -3.6563522815704346
    5. 'user' → logprob: -3.6563522815704346
    6. ' :' → logprob: -8.906352043151855
    7. ':::' → logprob: -9.781352043151855
    8. ':end' → logprob: -10.031352043151855
    9. ' ' → logprob: -10.031352043151855
    10. '1' → logprob: -10.281352043151855

Token 21: 'user' (ID: 1428)
  Prédit: 'user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.9385402993066236e-05
    2. ' user' → logprob: -10.875019073486328
    3. '-user' → logprob: -15.125019073486328
    4. ':user' → logprob: -17.625019073486328
    5. 'step' → logprob: -17.875019073486328
    6. '1' → logprob: -17.875019073486328
    7. '(user' → logprob: -18.125019073486328
    8. '-' → logprob: -18.875019073486328
    9. 'User' → logprob: -19.000019073486328
    10. '=user' → logprob: -19.125019073486328

Token 22: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003277887124568224
    2. '_step' → logprob: -5.753277778625488
    3. '_' → logprob: -9.378277778625488
    4. '_output' → logprob: -12.378277778625488
    5. '_p' → logprob: -12.503277778625488
    6. '_steps' → logprob: -13.378277778625488
    7. ' _' → logprob: -13.628277778625488
    8. '_put' → logprob: -14.128277778625488
    9. '__' → logprob: -14.253277778625488
    10. '_s' → logprob: -14.378277778625488

Token 23: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -2.7372048862162046e-05
    2. '_steps' → logprob: -10.875027656555176
    3. '_' → logprob: -12.000027656555176
    4. '_s' → logprob: -13.625027656555176
    5. ' _' → logprob: -14.500027656555176
    6. 'step' → logprob: -16.00002670288086
    7. ']_' → logprob: -16.00002670288086
    8. ')_' → logprob: -16.50002670288086
    9. '```' → logprob: -17.12502670288086
    10. '_STEP' → logprob: -17.12502670288086

Token 24: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.127333340875339e-06
    2. ')]' → logprob: -13.000003814697266
    3. ')' → logprob: -13.875003814697266
    4. ' ]' → logprob: -14.375003814697266
    5. ']
' → logprob: -16.125003814697266
    6. ']

' → logprob: -16.125003814697266
    7. '])' → logprob: -17.000003814697266
    8. '']' → logprob: -17.250003814697266
    9. '`]' → logprob: -18.125003814697266
    10. ']
' → logprob: -18.625003814697266

Token 25: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08318796008825302
    2. '#' → logprob: -3.833188056945801
    3. '\n' → logprob: -3.958188056945801
    4. '<|end|>' → logprob: -4.083188056945801
    5. ')' → logprob: -4.708188056945801
    6. '```' → logprob: -5.833188056945801
    7. '#print' → logprob: -6.083188056945801
    8. '
' → logprob: -6.208188056945801
    9. '[' → logprob: -6.833188056945801
    10. '\' → logprob: -7.083188056945801

Token 26: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029896501451730728
    2. '(output' → logprob: -3.5298964977264404
    3. '("("' → logprob: -9.40489673614502
    4. '(user' → logprob: -10.02989673614502
    5. '('' → logprob: -11.90489673614502
    6. '()' → logprob: -12.02989673614502
    7. '(input' → logprob: -13.27989673614502
    8. '(`' → logprob: -14.52989673614502
    9. '(out' → logprob: -14.65489673614502
    10. '((' → logprob: -14.65489673614502

Token 27: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.01156314741820097
    2. '_)' → logprob: -5.011563301086426
    3. ')' → logprob: -5.761563301086426
    4. '_' → logprob: -6.511563301086426
    5. ')_' → logprob: -8.886563301086426
    6. '_s' → logprob: -10.886563301086426
    7. '_str' → logprob: -11.136563301086426
    8. 'string' → logprob: -11.761563301086426
    9. 'String' → logprob: -12.261563301086426
    10. '_strings' → logprob: -12.511563301086426

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -14.750000953674316
    4. '`)' → logprob: -15.750000953674316
    5. '')' → logprob: -16.500001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '])' → logprob: -18.125001907348633
    8. '）' → logprob: -18.375001907348633
    9. ']' → logprob: -18.500001907348633
    10. '")' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 30.77%
Précision adaptée (1ère position): 30.77%
Précision (top 10): 69.23%
================================================================================
