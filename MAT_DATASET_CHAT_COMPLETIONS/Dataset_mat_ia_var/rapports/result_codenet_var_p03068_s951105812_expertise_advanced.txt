================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
k = int(input())
c = s[k - 1]

print(''.join(c if ch == c else '*' for ch in s))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043007321073673666
    2. ''' → logprob: -8.6254301071167
    3. '('' → logprob: -9.3754301071167
    4. '(n' → logprob: -9.8754301071167
    5. '```' → logprob: -10.3754301071167
    6. '`' → logprob: -10.7504301071167
    7. '(
' → logprob: -11.0004301071167
    8. '("("' → logprob: -11.1254301071167
    9. ')' → logprob: -11.7504301071167
    10. '()' → logprob: -12.2504301071167

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2621469497680664
    2. ')' → logprob: -1.5121469497680664
    3. '()' → logprob: -4.762146949768066
    4. '())' → logprob: -7.012146949768066
    5. '(
' → logprob: -9.137146949768066
    6. '')' → logprob: -9.262146949768066
    7. '('' → logprob: -9.387146949768066
    8. '```' → logprob: -9.637146949768066
    9. ''' → logprob: -10.012146949768066
    10. '")' → logprob: -10.137146949768066

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2314801216125488
    2. 'if' → logprob: -1.2314801216125488
    3. 'for' → logprob: -1.6064801216125488
    4. 's' → logprob: -2.606480121612549
    5. 'x' → logprob: -3.606480121612549
    6. '`' → logprob: -3.731480121612549
    7. ' ' → logprob: -4.356480121612549
    8. '\n' → logprob: -4.481480121612549
    9. ''' → logprob: -4.606480121612549
    10. 'f' → logprob: -5.106480121612549

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7569900155067444
    2. '.' → logprob: -1.5069899559020996
    3. 'um' → logprob: -2.1319899559020996
    4. ' =' → logprob: -2.6319899559020996
    5. 'u' → logprob: -4.0069899559021
    6. '=' → logprob: -4.1319899559021
    7. 't' → logprob: -4.2569899559021
    8. 'tr' → logprob: -4.3819899559021
    9. '[i' → logprob: -4.8819899559021
    10. '(' → logprob: -5.0069899559021

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.239288792014122
    2. ' input' → logprob: -1.8642888069152832
    3. '""' → logprob: -3.239288806915283
    4. '''' → logprob: -4.614288806915283
    5. '"' → logprob: -5.989288806915283
    6. ''' → logprob: -6.489288806915283
    7. '0' → logprob: -6.739288806915283
    8. ' ""' → logprob: -6.864288806915283
    9. ' ''' → logprob: -7.114288806915283
    10. ' ' → logprob: -7.364288806915283

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004480680916458368
    2. '('' → logprob: -6.004480838775635
    3. ''' → logprob: -7.004480838775635
    4. '()' → logprob: -7.504480838775635
    5. ')' → logprob: -8.879480361938477
    6. '(
' → logprob: -9.254480361938477
    7. '("("' → logprob: -9.379480361938477
    8. '"' → logprob: -9.504480361938477
    9. '`' → logprob: -10.129480361938477
    10. ' (' → logprob: -10.379480361938477

Token 9: 'k' (ID: 74)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.808319091796875
    2. 'i' → logprob: -1.433319091796875
    3. 'for' → logprob: -1.808319091796875
    4. 'count' → logprob: -2.433319091796875
    5. 'f' → logprob: -3.308319091796875
    6. 'c' → logprob: -4.933319091796875
    7. 'sum' → logprob: -5.308319091796875
    8. 'result' → logprob: -5.933319091796875
    9. 'd' → logprob: -6.058319091796875
    10. 't' → logprob: -6.433319091796875

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3896038830280304
    2. ' =' → logprob: -1.139603853225708
    3. '[' → logprob: -7.139604091644287
    4. '_' → logprob: -7.264604091644287
    5. ' ' → logprob: -7.264604091644287
    6. ')' → logprob: -9.264603614807129
    7. ''' → logprob: -9.389603614807129
    8. '.' → logprob: -9.639603614807129
    9. ',' → logprob: -9.764603614807129
    10. 's' → logprob: -10.139603614807129

Token 11: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2527061104774475
    2. ' int' → logprob: -1.5027060508728027
    3. ' n' → logprob: -8.002706527709961
    4. '0' → logprob: -9.502706527709961
    5. ' k' → logprob: -9.627706527709961
    6. 'n' → logprob: -9.877706527709961
    7. '[int' → logprob: -9.877706527709961
    8. 's' → logprob: -10.002706527709961
    9. 'k' → logprob: -10.002706527709961
    10. ' ' → logprob: -10.502706527709961

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05510207638144493
    2. '('' → logprob: -3.3051021099090576
    3. '()' → logprob: -4.5551018714904785
    4. '(k' → logprob: -5.6801018714904785
    5. '(s' → logprob: -6.8051018714904785
    6. ''' → logprob: -8.180102348327637
    7. '(input' → logprob: -8.430102348327637
    8. '```' → logprob: -8.680102348327637
    9. ' ' → logprob: -8.930102348327637
    10. '("("' → logprob: -8.930102348327637

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2463352084159851
    2. '()' → logprob: -1.9963352680206299
    3. '())' → logprob: -2.49633526802063
    4. '`)' → logprob: -9.37133502960205
    5. ' )' → logprob: -12.24633502960205
    6. '")' → logprob: -12.24633502960205
    7. ' ())' → logprob: -12.37133502960205
    8. '))' → logprob: -12.49633502960205
    9. '')' → logprob: -12.62133502960205
    10. '(' → logprob: -12.74633502960205

Token 14: 'c' (ID: 66)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1411229372024536
    2. 't' → logprob: -2.891122817993164
    3. 'p' → logprob: -3.391122817993164
    4. 's' → logprob: -3.641122817993164
    5. 'output' → logprob: -5.016122817993164
    6. 'for' → logprob: -5.766122817993164
    7. 'res' → logprob: -6.391122817993164
    8. 'print' → logprob: -6.516122817993164
    9. 'r' → logprob: -6.766122817993164
    10. 'a' → logprob: -8.016122817993164

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7705202102661133
    2. 'h' → logprob: -1.0205202102661133
    3. '=' → logprob: -1.7705202102661133
    4. 'har' → logprob: -5.645520210266113
    5. '=s' → logprob: -6.770520210266113
    6. '=h' → logprob: -7.020520210266113
    7. ' ' → logprob: -7.770520210266113
    8. 's' → logprob: -8.395520210266113
    9. '[:]' → logprob: -9.895520210266113
    10. '1' → logprob: -10.020520210266113

Token 16: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48618602752685547
    2. ''' → logprob: -1.4861860275268555
    3. ' s' → logprob: -2.4861860275268555
    4. '"' → logprob: -3.9861860275268555
    5. ' ' → logprob: -4.1111860275268555
    6. ' []' → logprob: -4.7361860275268555
    7. ''s' → logprob: -4.7361860275268555
    8. ' '' → logprob: -4.8611860275268555
    9. ' ''' → logprob: -6.1111860275268555
    10. '''' → logprob: -6.2361860275268555

Token 17: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.184711754322052
    2. '[:]' → logprob: -1.9347116947174072
    3. '[k' → logprob: -4.309711933135986
    4. '[]' → logprob: -5.809711933135986
    5. '[:' → logprob: -6.059711933135986
    6. '[n' → logprob: -7.059711933135986
    7. '[int' → logprob: -7.059711933135986
    8. '[i' → logprob: -7.559711933135986
    9. '<|end|>' → logprob: -7.559711933135986
    10. '.' → logprob: -8.184711456298828

Token 18: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016674461076036096
    2. '1' → logprob: -6.876667499542236
    3. ' -' → logprob: -7.501667499542236
    4. '0' → logprob: -10.376667022705078
    5. ')' → logprob: -10.876667022705078
    6. '-)' → logprob: -11.501667022705078
    7. ' ' → logprob: -12.001667022705078
    8. '4' → logprob: -12.751667022705078
    9. '–' → logprob: -13.251667022705078
    10. '2' → logprob: -13.251667022705078

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -16.750019073486328
    4. '１' → logprob: -17.250019073486328
    5. '```' → logprob: -17.375019073486328
    6. '2' → logprob: -18.500019073486328
    7. ''' → logprob: -18.625019073486328
    8. '۱' → logprob: -18.875019073486328
    9. ']' → logprob: -18.937519073486328
    10. '  ' → logprob: -19.250019073486328

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.375
    4. '１' → logprob: -17.5
    5. '۱' → logprob: -18.0
    6. '2' → logprob: -18.6875
    7. '১' → logprob: -18.75
    8. '१' → logprob: -18.8125
    9. ')' → logprob: -19.4375
    10. '<|end|>' → logprob: -20.375

Token 21: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6214175820350647
    2. '])' → logprob: -1.49641752243042
    3. ']' → logprob: -1.99641752243042
    4. '].' → logprob: -2.87141752243042
    5. '.upper' → logprob: -3.74641752243042
    6. ').' → logprob: -4.12141752243042
    7. '.lower' → logprob: -5.99641752243042
    8. ''])' → logprob: -7.12141752243042
    9. ')])' → logprob: -7.24641752243042
    10. '')' → logprob: -7.62141752243042

Token 22: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.307418555021286
    2. 'print' → logprob: -1.5574185848236084
    3. 'result' → logprob: -2.9324185848236084
    4. 'output' → logprob: -8.182418823242188
    5. 'r' → logprob: -8.432418823242188
    6. 'res' → logprob: -9.557418823242188
    7. 'p' → logprob: -9.682418823242188
    8. 's' → logprob: -10.307418823242188
    9. 'answer' → logprob: -11.182418823242188
    10. ' for' → logprob: -12.057418823242188

Token 23: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001878423965536058
    2. '('' → logprob: -7.126878261566162
    3. '(s' → logprob: -7.626878261566162
    4. '("("' → logprob: -8.25187873840332
    5. '(c' → logprob: -8.37687873840332
    6. '((' → logprob: -9.62687873840332
    7. '(chr' → logprob: -11.62687873840332
    8. '()' → logprob: -11.75187873840332
    9. 's' → logprob: -12.87687873840332
    10. '(ord' → logprob: -13.37687873840332

Token 24: ''.' (ID: 6120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38590699434280396
    2. 'c' → logprob: -2.260906934738159
    3. ''' → logprob: -2.385906934738159
    4. '')' → logprob: -3.010906934738159
    5. ')' → logprob: -3.260906934738159
    6. '*' → logprob: -4.010907173156738
    7. ''*' → logprob: -5.635907173156738
    8. '''' → logprob: -5.760907173156738
    9. '```' → logprob: -6.510907173156738
    10. 'end' → logprob: -6.760907173156738

Token 25: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.3133598268032074
    2. 'replace' → logprob: -1.3133598566055298
    3. 'l' → logprob: -10.688360214233398
    4. 'r' → logprob: -10.688360214233398
    5. 'concat' → logprob: -10.938360214233398
    6. 'rstrip' → logprob: -11.938360214233398
    7. 'rep' → logprob: -12.063360214233398
    8. 'swap' → logprob: -12.063360214233398
    9. 'lower' → logprob: -12.188360214233398
    10. ')' → logprob: -13.188360214233398

Token 26: '(c' (ID: 2410)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.17577993869781494
    2. '(' → logprob: -2.4257798194885254
    3. '(s' → logprob: -4.050779819488525
    4. '('' → logprob: -4.175779819488525
    5. '(c' → logprob: -4.675779819488525
    6. '(['' → logprob: -4.800779819488525
    7. '[' → logprob: -5.175779819488525
    8. '(i' → logprob: -5.425779819488525
    9. '(chr' → logprob: -5.550779819488525
    10. '(ch' → logprob: -5.675779819488525

Token 27: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4762333333492279
    2. ' if' → logprob: -0.9762333631515503
    3. ')' → logprob: -6.85123348236084
    4. 's' → logprob: -7.10123348236084
    5. '[i' → logprob: -9.47623348236084
    6. 'i' → logprob: -9.97623348236084
    7. '+' → logprob: -10.22623348236084
    8. ' for' → logprob: -11.10123348236084
    9. ' s' → logprob: -11.22623348236084
    10. ' i' → logprob: -11.35123348236084

Token 28: ' ch' (ID: 549)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1886662095785141
    2. 'ch' → logprob: -2.1886661052703857
    3. 'i' → logprob: -3.6886661052703857
    4. ' x' → logprob: -3.8136661052703857
    5. ' ch' → logprob: -4.813666343688965
    6. ' i' → logprob: -6.813666343688965
    7. '(ch' → logprob: -6.813666343688965
    8. 'char' → logprob: -7.313666343688965
    9. 'a' → logprob: -7.813666343688965
    10. 'c' → logprob: -8.188666343688965

Token 29: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5236344933509827
    2. ' ==' → logprob: -0.8986344933509827
    3. '!=' → logprob: -8.648634910583496
    4. '=' → logprob: -9.023634910583496
    5. ' !=' → logprob: -9.023634910583496
    6. '=='' → logprob: -10.023634910583496
    7. ' ' → logprob: -10.898634910583496
    8. ' =' → logprob: -11.523634910583496
    9. '=="' → logprob: -12.648634910583496
    10. 'else' → logprob: -12.773634910583496

Token 30: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09951699525117874
    2. 's' → logprob: -2.4745171070098877
    3. ' c' → logprob: -4.849516868591309
    4. 'ch' → logprob: -6.474516868591309
    5. ' s' → logprob: -6.849516868591309
    6. ' ' → logprob: -10.099516868591309
    7. ' ch' → logprob: -10.974516868591309
    8. ')' → logprob: -11.724516868591309
    9. ')c' → logprob: -11.724516868591309
    10. '   ' → logprob: -12.974516868591309

Token 31: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1602357029914856
    2. ' else' → logprob: -1.9102356433868408
    3. ' ' → logprob: -11.785235404968262
    4. '	else' → logprob: -12.910235404968262
    5. ')' → logprob: -15.285235404968262
    6. '  ' → logprob: -15.535235404968262
    7. 's' → logprob: -15.660235404968262
    8. '```' → logprob: -15.910235404968262
    9. '   ' → logprob: -16.285236358642578
    10. '_else' → logprob: -16.410236358642578

Token 32: ' '*'' (ID: 89603)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.011238210834562778
    2. ' ch' → logprob: -4.511238098144531
    3. '.' → logprob: -9.261238098144531
    4. '[ch' → logprob: -10.136238098144531
    5. ''ch' → logprob: -10.511238098144531
    6. '.ch' → logprob: -11.011238098144531
    7. '(ch' → logprob: -12.636238098144531
    8. ''.' → logprob: -12.886238098144531
    9. '	ch' → logprob: -13.011238098144531
    10. ''*' → logprob: -13.636238098144531

Token 33: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3905788064002991
    2. ' for' → logprob: -1.3905787467956543
    3. 'for' → logprob: -2.8905787467956543
    4. ' ch' → logprob: -4.265578746795654
    5. 'ch' → logprob: -6.015578746795654
    6. ' ' → logprob: -6.390578746795654
    7. '))' → logprob: -8.140579223632812
    8. '  ' → logprob: -9.515579223632812
    9. 's' → logprob: -9.765579223632812
    10. ' else' → logprob: -10.015579223632812

Token 34: ' ch' (ID: 549)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141977071762085
    2. ' s' → logprob: -1.7014198303222656
    3. 'ch' → logprob: -12.326419830322266
    4. ' ' → logprob: -13.701419830322266
    5. '	s' → logprob: -15.201419830322266
    6. '_s' → logprob: -15.576419830322266
    7. ')' → logprob: -16.451419830322266
    8. 'c' → logprob: -16.576419830322266
    9. '<s' → logprob: -16.576419830322266
    10. '`s' → logprob: -16.701419830322266

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01402728445827961
    2. 'in' → logprob: -4.514027118682861
    3. ' s' → logprob: -6.014027118682861
    4. 's' → logprob: -7.639027118682861
    5. ' ' → logprob: -10.13902759552002
    6. ' )' → logprob: -12.51402759552002
    7. ')' → logprob: -12.63902759552002
    8. 'n' → logprob: -14.38902759552002
    9. ' ,' → logprob: -14.63902759552002
    10. ',' → logprob: -15.13902759552002

Token 36: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804183006286621
    2. ' s' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.038042068481445
    4. '	s' → logprob: -16.663042068481445
    5. '`s' → logprob: -17.038042068481445
    6. '<s' → logprob: -17.038042068481445
    7. '_s' → logprob: -17.288042068481445
    8. '(s' → logprob: -17.913042068481445
    9. ')s' → logprob: -17.913042068481445
    10. ')' → logprob: -17.913042068481445

Token 37: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01815485768020153
    2. ')' → logprob: -4.018154621124268
    3. ')))' → logprob: -12.643155097961426
    4. '))
' → logprob: -14.143155097961426
    5. ' ))' → logprob: -14.268155097961426
    6. '),' → logprob: -15.643155097961426
    7. ')
' → logprob: -16.64315414428711
    8. ' )' → logprob: -17.14315414428711
    9. '));' → logprob: -17.14315414428711
    10. ').' → logprob: -17.14315414428711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 14.29%
Précision adaptée (1ère position): 14.29%
Précision (top 10): 71.43%
================================================================================
