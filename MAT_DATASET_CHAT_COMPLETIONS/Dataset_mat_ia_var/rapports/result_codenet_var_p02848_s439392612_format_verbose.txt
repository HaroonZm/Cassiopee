================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
number_of_characters_to_shift = int(input())

original_text = input()

ciphered_text = ''

ascii_value_of_A = ord('A')
ascii_value_of_Z = ord('Z')

for character in original_text:

    shifted_character_ascii = ord(character) + number_of_characters_to_shift

    if shifted_character_ascii > ascii_value_of_Z:
        wrapped_around_ascii = ascii_value_of_A + shifted_character_ascii - ascii_value_of_Z - 1
        ciphered_text += chr(wrapped_around_ascii)
    else:
        ciphered_text += chr(shifted_character_ascii)

print(ciphered_text)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'number' (ID: 8096)
  → Token d'amorce (pas de prédiction)

Token 1: '_of' (ID: 8023)
  → Token d'amorce (pas de prédiction)

Token 2: '_char' (ID: 23398)
  → Token d'amorce (pas de prédiction)

Token 3: 'acters' (ID: 8385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01167744118720293
    2. '_' → logprob: -4.886677265167236
    3. '_s' → logprob: -5.511677265167236
    4. 'acters' → logprob: -11.761677742004395
    5. 'a' → logprob: -12.261677742004395
    6. '```' → logprob: -12.511677742004395
    7. '[' → logprob: -13.261677742004395
    8. ')' → logprob: -13.761677742004395
    9. '=' → logprob: -14.136677742004395
    10. '(' → logprob: -14.136677742004395

Token 4: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013913251459598541
    2. '=' → logprob: -5.138913154602051
    3. 's' → logprob: -5.638913154602051
    4. '[' → logprob: -5.888913154602051
    5. '(' → logprob: -7.388913154602051
    6. '```' → logprob: -8.01391315460205
    7. '.' → logprob: -9.01391315460205
    8. ')' → logprob: -9.01391315460205
    9. ' =' → logprob: -9.01391315460205
    10. ':' → logprob: -10.13891315460205

Token 5: '_shift' (ID: 56354)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remove' → logprob: -2.3818418979644775
    2. '_skip' → logprob: -2.3818418979644775
    3. '_extract' → logprob: -2.6318418979644775
    4. 'remove' → logprob: -2.7568418979644775
    5. '_copy' → logprob: -3.0068418979644775
    6. '_read' → logprob: -3.0068418979644775
    7. '_write' → logprob: -3.1318418979644775
    8. 'append' → logprob: -3.2568418979644775
    9. '_strip' → logprob: -3.5068418979644775
    10. 'write' → logprob: -3.5068418979644775

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012272873893380165
    2. '=' → logprob: -4.512272834777832
    3. ' =' → logprob: -7.387272834777832
    4. '```' → logprob: -8.512272834777832
    5. '[' → logprob: -9.262272834777832
    6. '_=' → logprob: -9.637272834777832
    7. '.' → logprob: -10.512272834777832
    8. '_in' → logprob: -10.637272834777832
    9. '+' → logprob: -10.637272834777832
    10. ')' → logprob: -10.637272834777832

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024495728313922882
    2. '1' → logprob: -4.024495601654053
    3. '32' → logprob: -5.399495601654053
    4. '5' → logprob: -7.399495601654053
    5. '4' → logprob: -7.649495601654053
    6. '10' → logprob: -8.149496078491211
    7. '3' → logprob: -8.649496078491211
    8. '2' → logprob: -9.024496078491211
    9. '7' → logprob: -10.399496078491211
    10. '16' → logprob: -10.524496078491211

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013248840114101768
    2. '[' → logprob: -7.501324653625488
    3. '```' → logprob: -8.501324653625488
    4. ' (' → logprob: -8.876324653625488
    5. '('' → logprob: -9.001324653625488
    6. ''' → logprob: -9.501324653625488
    7. '_' → logprob: -9.626324653625488
    8. ' ' → logprob: -10.626324653625488
    9. '(
' → logprob: -10.751324653625488
    10. ')' → logprob: -10.751324653625488

Token 9: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5209439396858215
    2. '(' → logprob: -1.0209438800811768
    3. '()' → logprob: -3.5209438800811768
    4. '())' → logprob: -4.270944118499756
    5. '('' → logprob: -6.645944118499756
    6. '(""))' → logprob: -9.145943641662598
    7. '(()' → logprob: -9.270943641662598
    8. '("("' → logprob: -9.270943641662598
    9. '```' → logprob: -9.395943641662598
    10. '))' → logprob: -9.645943641662598

Token 10: 'original' (ID: 22155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3512303829193115
    2. 'for' → logprob: -1.7262303829193115
    3. '#' → logprob: -1.8512303829193115
    4. '\n' → logprob: -2.8512303829193115
    5. '```' → logprob: -2.9762303829193115
    6. '*' → logprob: -3.3512303829193115
    7. '%' → logprob: -3.4762303829193115
    8. 's' → logprob: -3.7262303829193115
    9. 'if' → logprob: -3.9762303829193115
    10. '`' → logprob: -3.9762303829193115

Token 11: '_text' (ID: 9118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4650361239910126
    2. '_text' → logprob: -1.715036153793335
    3. '(' → logprob: -1.965036153793335
    4. '_string' → logprob: -3.090036153793335
    5. '_str' → logprob: -6.090035915374756
    6. '_line' → logprob: -7.465035915374756
    7. '_character' → logprob: -7.840035915374756
    8. 'text' → logprob: -7.965035915374756
    9. '_name' → logprob: -8.215036392211914
    10. '()' → logprob: -8.465036392211914

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5583207011222839
    2. '_' → logprob: -1.6833207607269287
    3. ' =' → logprob: -2.0583207607269287
    4. '=' → logprob: -2.8083207607269287
    5. '[:]' → logprob: -3.9333207607269287
    6. '.' → logprob: -4.18332052230835
    7. '_shift' → logprob: -5.18332052230835
    8. '.replace' → logprob: -6.55832052230835
    9. ')' → logprob: -6.55832052230835
    10. ' ' → logprob: -6.80832052230835

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232111811637878
    2. 'input' → logprob: -0.8982111811637878
    3. ' "' → logprob: -11.023211479187012
    4. '=input' → logprob: -11.023211479187012
    5. ' ' → logprob: -11.148211479187012
    6. '"' → logprob: -11.273211479187012
    7. '(input' → logprob: -11.898211479187012
    8. '""' → logprob: -12.273211479187012
    9. '	input' → logprob: -12.523211479187012
    10. '<input' → logprob: -13.023211479187012

Token 14: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004276176914572716
    2. '('' → logprob: -6.129276275634766
    3. ')' → logprob: -7.129276275634766
    4. '()' → logprob: -7.629276275634766
    5. ''' → logprob: -8.504276275634766
    6. '.' → logprob: -9.129276275634766
    7. '("("' → logprob: -9.254276275634766
    8. ' (' → logprob: -9.629276275634766
    9. '(
' → logprob: -10.004276275634766
    10. '[' → logprob: -10.004276275634766

Token 15: 'cipher' (ID: 143933)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.015546124428510666
    2. 'result' → logprob: -4.6405463218688965
    3. 'for' → logprob: -5.8905463218688965
    4. 'encoded' → logprob: -6.5155463218688965
    5. 'decoded' → logprob: -7.2655463218688965
    6. 'cipher' → logprob: -8.390545845031738
    7. 'new' → logprob: -8.640545845031738
    8. ' shifted' → logprob: -9.265545845031738
    9. 'encrypted' → logprob: -9.390545845031738
    10. 'text' → logprob: -9.390545845031738

Token 16: 'ed' (ID: 295)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.5299867391586304
    2. '_' → logprob: -1.1549867391586304
    3. 'text' → logprob: -2.90498685836792
    4. 'ed' → logprob: -3.90498685836792
    5. ' =' → logprob: -4.02998685836792
    6. '=' → logprob: -6.02998685836792
    7. 'd' → logprob: -7.15498685836792
    8. '_=' → logprob: -9.779986381530762
    9. 'te' → logprob: -9.904986381530762
    10. 'e' → logprob: -9.904986381530762

Token 17: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.02069895714521408
    2. '_' → logprob: -3.8956990242004395
    3. 'ed' → logprob: -9.645698547363281
    4. ' =' → logprob: -10.520698547363281
    5. '_string' → logprob: -11.270698547363281
    6. '_code' → logprob: -11.645698547363281
    7. '=' → logprob: -11.895698547363281
    8. 'text' → logprob: -12.020698547363281
    9. ' _' → logprob: -12.520698547363281
    10. '_tex' → logprob: -12.520698547363281

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08398666232824326
    2. '=' → logprob: -2.708986759185791
    3. '_' → logprob: -4.708986759185791
    4. '[' → logprob: -6.208986759185791
    5. ' ' → logprob: -6.333986759185791
    6. '[:]' → logprob: -7.458986759185791
    7. ' +=' → logprob: -8.583986282348633
    8. ')' → logprob: -9.333986282348633
    9. '_space' → logprob: -9.958986282348633
    10. '(' → logprob: -10.083986282348633

Token 19: ' ''

' (ID: 107005)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.19711121916770935
    2. ' ""' → logprob: -1.9471112489700317
    3. '"' → logprob: -4.197111129760742
    4. '''' → logprob: -4.447111129760742
    5. ' ''' → logprob: -5.697111129760742
    6. ' []' → logprob: -6.072111129760742
    7. ' ' → logprob: -6.197111129760742
    8. ''' → logprob: -6.947111129760742
    9. '[]' → logprob: -7.572111129760742
    10. ' "' → logprob: -8.822111129760742

Token 20: 'ascii' (ID: 91813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003047186473850161
    2. ' for' → logprob: -8.12530517578125
    3. 'i' → logprob: -11.75030517578125
    4. '
' → logprob: -15.25030517578125
    5. '```' → logprob: -15.25030517578125
    6. 'shift' → logprob: -16.62530517578125
    7. 'For' → logprob: -17.37530517578125
    8. '\n' → logprob: -17.50030517578125
    9. 'n' → logprob: -18.12530517578125
    10. '	for' → logprob: -18.37530517578125

Token 21: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15522342920303345
    2. '_code' → logprob: -2.2802233695983887
    3. '_val' → logprob: -3.9052233695983887
    4. '_value' → logprob: -4.155223369598389
    5. '_char' → logprob: -5.905223369598389
    6. '_num' → logprob: -7.655223369598389
    7. ' _' → logprob: -7.905223369598389
    8. '_number' → logprob: -8.030223846435547
    9. '_ord' → logprob: -8.030223846435547
    10. '```' → logprob: -8.155223846435547

Token 22: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4666142165660858
    2. '_' → logprob: -1.0916142463684082
    3. 's' → logprob: -3.591614246368408
    4. '=' → logprob: -5.216614246368408
    5. ' =' → logprob: -6.841614246368408
    6. '[' → logprob: -6.966614246368408
    7. '```' → logprob: -7.466614246368408
    8. '_code' → logprob: -8.34161376953125
    9. '_value' → logprob: -8.59161376953125
    10. '('' → logprob: -8.84161376953125

Token 23: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36416736245155334
    2. ' ' → logprob: -2.1141674518585205
    3. ' original' → logprob: -2.7391674518585205
    4. 'original' → logprob: -2.9891674518585205
    5. ' o' → logprob: -4.364167213439941
    6. 'o' → logprob: -4.739167213439941
    7. 'c' → logprob: -4.739167213439941
    8. 'character' → logprob: -4.864167213439941
    9. '_char' → logprob: -5.614167213439941
    10. '  ' → logprob: -5.614167213439941

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32738515734672546
    2. '=' → logprob: -1.3273851871490479
    3. ' ' → logprob: -4.827384948730469
    4. '+' → logprob: -5.952384948730469
    5. ')' → logprob: -6.827384948730469
    6. '<|end|>' → logprob: -7.077384948730469
    7. 'A' → logprob: -7.327384948730469
    8. ',' → logprob: -8.327384948730469
    9. '_' → logprob: -8.452384948730469
    10. '  ' → logprob: -9.702384948730469

Token 25: ' ord' (ID: 6608)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.0624253936111927
    2. ' ' → logprob: -2.812425374984741
    3. ' ord' → logprob: -8.18742561340332
    4. 'ord' → logprob: -8.68742561340332
    5. '64' → logprob: -12.81242561340332
    6. ' A' → logprob: -13.18742561340332
    7. '   ' → logprob: -13.68742561340332
    8. '32' → logprob: -13.68742561340332
    9. 'A' → logprob: -14.18742561340332
    10. ' ' → logprob: -14.43742561340332

Token 26: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07895412296056747
    2. '(' → logprob: -2.5789542198181152
    3. '("("' → logprob: -10.203953742980957
    4. ''' → logprob: -10.953953742980957
    5. '("' → logprob: -12.453953742980957
    6. '(A' → logprob: -13.953953742980957
    7. ''A' → logprob: -14.203953742980957
    8. 'A' → logprob: -14.328953742980957
    9. '('(' → logprob: -14.328953742980957
    10. '40' → logprob: -14.703953742980957

Token 27: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.15441757265944e-05
    2. 'А' → logprob: -11.375031471252441
    3. 'a' → logprob: -11.625031471252441
    4. ''A' → logprob: -12.125031471252441
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -13.125031471252441
    6. ' A' → logprob: -13.125031471252441
    7. '')' → logprob: -14.750031471252441
    8. 'Α' → logprob: -15.375031471252441
    9. 'Ａ' → logprob: -15.625031471252441
    10. ''' → logprob: -15.750031471252441

Token 28: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891799509525299
    2. '')' → logprob: -2.578917980194092
    3. ' )' → logprob: -10.82891845703125
    4. ''' → logprob: -12.95391845703125
    5. '")' → logprob: -13.70391845703125
    6. '`)' → logprob: -13.70391845703125
    7. '#' → logprob: -14.07891845703125
    8. ')
' → logprob: -14.20391845703125
    9. ' ')' → logprob: -15.20391845703125
    10. '')
' → logprob: -15.32891845703125

Token 29: 'ascii' (ID: 91813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2703380286693573
    2. '
' → logprob: -2.0203380584716797
    3. ' for' → logprob: -3.1453380584716797
    4. '```' → logprob: -3.8953380584716797
    5. '<|end|>' → logprob: -4.02033805847168
    6. 'n' → logprob: -5.39533805847168
    7. ' 
' → logprob: -5.52033805847168
    8. 'i' → logprob: -5.77033805847168
    9. 'shift' → logprob: -6.39533805847168
    10. 'newline' → logprob: -6.89533805847168

Token 30: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0038256102707237005
    2. '_' → logprob: -5.628825664520264
    3. '_of' → logprob: -9.128825187683105
    4. 'value' → logprob: -10.378825187683105
    5. '_values' → logprob: -11.253825187683105
    6. '_VALUE' → logprob: -11.378825187683105
    7. '```' → logprob: -11.378825187683105
    8. '_val' → logprob: -11.753825187683105
    9. '_Value' → logprob: -11.753825187683105
    10. '<|end|>' → logprob: -12.128825187683105

Token 31: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.06450320035219193
    2. '_' → logprob: -2.8145031929016113
    3. '<|end|>' → logprob: -7.314503192901611
    4. 'of' → logprob: -7.439503192901611
    5. ' of' → logprob: -7.439503192901611
    6. '_o' → logprob: -9.18950366973877
    7. '_=' → logprob: -9.43950366973877
    8. ')' → logprob: -9.68950366973877
    9. ' =' → logprob: -9.81450366973877
    10. '```' → logprob: -9.93950366973877

Token 32: '_Z' (ID: 27268)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8144565224647522
    2. ''' → logprob: -1.5644564628601074
    3. ''a' → logprob: -1.6894564628601074
    4. ''z' → logprob: -2.1894564628601074
    5. 'Z' → logprob: -3.1894564628601074
    6. '_Z' → logprob: -6.189456462860107
    7. 'z' → logprob: -6.189456462860107
    8. ''A' → logprob: -6.939456462860107
    9. '_a' → logprob: -7.064456462860107
    10. ''s' → logprob: -7.064456462860107

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15801776945590973
    2. '=' → logprob: -2.658017873764038
    3. '+' → logprob: -3.658017873764038
    4. ')' → logprob: -3.783017873764038
    5. ' +' → logprob: -3.783017873764038
    6. ' ' → logprob: -5.533017635345459
    7. '<|end|>' → logprob: -8.408018112182617
    8. ' -' → logprob: -8.533018112182617
    9. ' )' → logprob: -8.783018112182617
    10. ',' → logprob: -9.658018112182617

Token 34: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.9749244451522827
    2. ' ord' → logprob: -1.3499244451522827
    3. '90' → logprob: -1.5999244451522827
    4. ' ' → logprob: -1.8499244451522827
    5. '(ord' → logprob: -5.474924564361572
    6. '   ' → logprob: -9.724924087524414
    7. '  ' → logprob: -10.474924087524414
    8. '65' → logprob: -10.724924087524414
    9. ' Z' → logprob: -11.224924087524414
    10. ' ' → logprob: -11.599924087524414

Token 35: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.718606891809031e-05
    2. '(' → logprob: -9.625066757202148
    3. ' ('' → logprob: -14.500066757202148
    4. '(('' → logprob: -15.125066757202148
    5. '('.')' → logprob: -16.25006675720215
    6. ''' → logprob: -16.75006675720215
    7. ''A' → logprob: -16.87506675720215
    8. '>('' → logprob: -17.25006675720215
    9. '("' → logprob: -17.75006675720215
    10. '('\' → logprob: -18.00006675720215

Token 36: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.8624639324116288e-06
    2. ''' → logprob: -13.250001907348633
    3. ''z' → logprob: -17.500001907348633
    4. '')' → logprob: -17.750001907348633
    5. 'z' → logprob: -18.250001907348633
    6. ' Z' → logprob: -18.625001907348633
    7. 'Ζ' → logprob: -19.000001907348633
    8. 'A' → logprob: -19.625001907348633
    9. '	Z' → logprob: -20.000001907348633
    10. '>Z' → logprob: -20.625001907348633

Token 37: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760654807090759
    2. '')' → logprob: -0.8260654807090759
    3. ''' → logprob: -9.701065063476562
    4. '')
' → logprob: -10.951065063476562
    5. '")' → logprob: -11.576065063476562
    6. ')
' → logprob: -11.701065063476562
    7. ' )' → logprob: -11.826065063476562
    8. '`)' → logprob: -11.826065063476562
    9. '```' → logprob: -12.326065063476562
    10. '#' → logprob: -12.701065063476562

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012071382952854037
    2. 'i' → logprob: -7.75120735168457
    3. 'f' → logprob: -7.87620735168457
    4. ' for' → logprob: -8.25120735168457
    5. '
' → logprob: -9.50120735168457
    6. '```' → logprob: -10.50120735168457
    7. 'n' → logprob: -10.75120735168457
    8. 'current' → logprob: -12.62620735168457
    9. '#' → logprob: -12.87620735168457
    10. 'F' → logprob: -13.62620735168457

Token 39: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23648159205913544
    2. ' c' → logprob: -1.8614815473556519
    3. ' char' → logprob: -3.2364816665649414
    4. ' i' → logprob: -4.361481666564941
    5. ' _' → logprob: -6.236481666564941
    6. ' character' → logprob: -7.861481666564941
    7. '  ' → logprob: -8.236481666564941
    8. ' ch' → logprob: -8.611481666564941
    9. ' )' → logprob: -9.486481666564941
    10. ' ' → logprob: -10.236481666564941

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006503509357571602
    2. 'in' → logprob: -5.131503582000732
    3. ' ' → logprob: -7.506503582000732
    4. '  ' → logprob: -11.756503105163574
    5. '<|end|>' → logprob: -12.506503105163574
    6. ' i' → logprob: -12.881503105163574
    7. ' :' → logprob: -13.006503105163574
    8. ' ,' → logprob: -13.506503105163574
    9. '	in' → logprob: -13.631503105163574
    10. 's' → logprob: -13.756503105163574

Token 41: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.007607577834278345
    2. 'original' → logprob: -4.882607460021973
    3. '(original' → logprob: -14.257607460021973
    4. ' ' → logprob: -15.007607460021973
    5. '_original' → logprob: -15.757607460021973
    6. ' range' → logprob: -16.63260841369629
    7. ' originale' → logprob: -16.88260841369629
    8. '.original' → logprob: -17.63260841369629
    9. 'Original' → logprob: -17.63260841369629
    10. ' ' → logprob: -17.63260841369629

Token 42: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.0007303050952032208
    2. '_' → logprob: -7.250730514526367
    3. '_character' → logprob: -11.250730514526367
    4. ' _' → logprob: -13.250730514526367
    5. '_string' → logprob: -13.375730514526367
    6. '_txt' → logprob: -14.125730514526367
    7. '_code' → logprob: -14.375730514526367
    8. 'text' → logprob: -14.750730514526367
    9. '_char' → logprob: -14.875730514526367
    10. '_t' → logprob: -15.000730514526367

Token 43: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004130344314035028
    2. ' :' → logprob: -7.875412940979004
    3. ':
' → logprob: -11.250412940979004
    4. ':**' → logprob: -11.750412940979004
    5. '<|end|>' → logprob: -12.500412940979004
    6. '):' → logprob: -13.000412940979004
    7. ',' → logprob: -13.875412940979004
    8. ' if' → logprob: -14.750412940979004
    9. '+:' → logprob: -14.875412940979004
    10. '=' → logprob: -14.875412940979004

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.308827668428421
    2. ' if' → logprob: -2.0588276386260986
    3. '<|end|>' → logprob: -2.6838276386260986
    4. '   ' → logprob: -3.1838276386260986
    5. '    ' → logprob: -4.558827877044678
    6. 'if' → logprob: -5.183827877044678
    7. '```' → logprob: -5.558827877044678
    8. ' 
' → logprob: -6.183827877044678
    9. ' ```' → logprob: -6.433827877044678
    10. '<|end|>' → logprob: -6.808827877044678

Token 45: ' shifted' (ID: 58644)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.021731015294790268
    2. 'if' → logprob: -4.521730899810791
    3. 'ascii' → logprob: -5.646730899810791
    4. ' ascii' → logprob: -5.896730899810791
    5. '   ' → logprob: -6.146730899810791
    6. '    ' → logprob: -6.521730899810791
    7. '```' → logprob: -8.52173137664795
    8. ' ```' → logprob: -9.02173137664795
    9. 'space' → logprob: -9.14673137664795
    10. ' shifted' → logprob: -9.89673137664795

Token 46: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8141863942146301
    2. '_value' → logprob: -1.6891863346099854
    3. '_ascii' → logprob: -1.8141863346099854
    4. '_char' → logprob: -2.0641863346099854
    5. '_character' → logprob: -2.8141863346099854
    6. ' =' → logprob: -5.3141865730285645
    7. '=' → logprob: -5.3141865730285645
    8. '_ord' → logprob: -5.6891865730285645
    9. '_val' → logprob: -5.8141865730285645
    10. '_space' → logprob: -6.0641865730285645

Token 47: '_ascii' (ID: 125321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2670820653438568
    2. '=' → logprob: -2.0170819759368896
    3. '_' → logprob: -3.5170819759368896
    4. '_code' → logprob: -3.8920819759368896
    5. '_ascii' → logprob: -3.8920819759368896
    6. 's' → logprob: -4.017082214355469
    7. '_ord' → logprob: -4.642082214355469
    8. '_value' → logprob: -6.892082214355469
    9. ' ' → logprob: -7.267082214355469
    10. '=_' → logprob: -8.392082214355469

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06281314790248871
    2. '=' → logprob: -2.8128130435943604
    3. '_value' → logprob: -7.1878132820129395
    4. ' ' → logprob: -10.062812805175781
    5. '_' → logprob: -10.937812805175781
    6. '_code' → logprob: -12.062812805175781
    7. 's' → logprob: -12.062812805175781
    8. ' +=' → logprob: -12.187812805175781
    9. 'value' → logprob: -13.187812805175781
    10. '```' → logprob: -13.187812805175781

Token 49: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.15507960319519043
    2. 'ord' → logprob: -2.4050796031951904
    3. '(ord' → logprob: -3.1550796031951904
    4. ' (' → logprob: -4.6550798416137695
    5. '(' → logprob: -7.4050798416137695
    6. 'ascii' → logprob: -8.53007984161377
    7. '((' → logprob: -8.90507984161377
    8. ' ascii' → logprob: -9.03007984161377
    9. '   ' → logprob: -9.65507984161377
    10. ' ' → logprob: -10.15507984161377

Token 50: '(character' (ID: 105641)
  Prédit: '(character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(character' → logprob: -0.0005922323907725513
    2. '(' → logprob: -7.875592231750488
    3. '('' → logprob: -8.625592231750488
    4. 'character' → logprob: -10.875592231750488
    5. '("("' → logprob: -11.875592231750488
    6. '(Character' → logprob: -12.375592231750488
    7. '(char' → logprob: -13.250592231750488
    8. '((' → logprob: -15.625592231750488
    9. ' (' → logprob: -15.875592231750488
    10. '(
' → logprob: -16.875593185424805

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003905280726030469
    2. ' )' → logprob: -5.878905296325684
    3. '+' → logprob: -7.253905296325684
    4. ' +' → logprob: -8.128905296325684
    5. ')+' → logprob: -9.378905296325684
    6. '+)' → logprob: -12.253905296325684
    7. ' ' → logprob: -12.378905296325684
    8. '`)' → logprob: -14.628905296325684
    9. '')' → logprob: -14.628905296325684
    10. '    ' → logprob: -15.128905296325684

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19069036841392517
    2. ' +' → logprob: -1.9406903982162476
    3. '<|end|>' → logprob: -3.565690279006958
    4. ' ' → logprob: -6.440690517425537
    5. '<|end|>' → logprob: -9.440690040588379
    6. ' +
' → logprob: -11.065690040588379
    7. ')' → logprob: -11.690690040588379
    8. '-' → logprob: -12.065690040588379
    9. '+
' → logprob: -12.315690040588379
    10. ' plus' → logprob: -12.690690040588379

Token 53: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.006716674659401178
    2. 'number' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.75671672821045
    4. '(number' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.756715774536133
    6. ' space' → logprob: -17.131715774536133
    7. '_number' → logprob: -17.381715774536133
    8. '	number' → logprob: -17.506715774536133
    9. 'space' → logprob: -17.631715774536133
    10. '[number' → logprob: -18.006715774536133

Token 54: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.2664456789934775e-06
    2. '_or' → logprob: -14.750000953674316
    3. '_for' → logprob: -15.375000953674316
    4. '_to' → logprob: -15.375000953674316
    5. '_' → logprob: -16.500001907348633
    6. ' _' → logprob: -16.500001907348633
    7. '```' → logprob: -16.875001907348633
    8. '_o' → logprob: -17.625001907348633
    9. '_number' → logprob: -17.750001907348633
    10. '...' → logprob: -17.875001907348633

Token 55: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -6.968934758333489e-05
    2. '_chars' → logprob: -10.250069618225098
    3. '_character' → logprob: -10.375069618225098
    4. 'characters' → logprob: -13.125069618225098
    5. 'char' → logprob: -14.750069618225098
    6. '_' → logprob: -15.000069618225098
    7. '```' → logprob: -16.625070571899414
    8. '_shift' → logprob: -16.625070571899414
    9. '_CHAR' → logprob: -17.250070571899414
    10. '_spaces' → logprob: -17.250070571899414

Token 56: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.0003291480534244329
    2. 'ers' → logprob: -8.50032901763916
    3. 'aters' → logprob: -9.62532901763916
    4. 'ters' → logprob: -10.37532901763916
    5. 'act' → logprob: -11.25032901763916
    6. 'eters' → logprob: -12.50032901763916
    7. 'ct' → logprob: -13.12532901763916
    8. 'acter' → logprob: -13.37532901763916
    9. 'ac' → logprob: -13.50032901763916
    10. 'e' → logprob: -13.75032901763916

Token 57: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -12.500003814697266
    3. '_t' → logprob: -15.750003814697266
    4. '_shift' → logprob: -16.375003814697266
    5. '<|end|>' → logprob: -17.000003814697266
    6. '__' → logprob: -17.500003814697266
    7. ' _' → logprob: -18.125003814697266
    8. 'to' → logprob: -18.750003814697266
    9. 'To' → logprob: -18.750003814697266
    10. '_TO' → logprob: -19.125003814697266

Token 58: '_shift' (ID: 56354)
  Prédit: '_shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shift' → logprob: -0.01420722994953394
    2. 'shift' → logprob: -4.264207363128662
    3. '_' → logprob: -10.639206886291504
    4. ' shift' → logprob: -11.764206886291504
    5. '_sh' → logprob: -12.014206886291504
    6. '_s' → logprob: -13.014206886291504
    7. 's' → logprob: -13.264206886291504
    8. '_SHIFT' → logprob: -14.264206886291504
    9. 'hift' → logprob: -15.014206886291504
    10. ' ' → logprob: -15.139206886291504

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31980159878730774
    2. ' if' → logprob: -1.4448015689849854
    3. '<|end|>' → logprob: -3.5698015689849854
    4. '
' → logprob: -5.6948018074035645
    5. '```' → logprob: -5.8198018074035645
    6. ' ' → logprob: -6.1948018074035645
    7. '   ' → logprob: -7.3198018074035645
    8. 'If' → logprob: -8.819801330566406
    9. '<|end|>' → logprob: -8.944801330566406
    10. '    ' → logprob: -9.194801330566406

Token 62: ' shifted' (ID: 58644)
  Prédit: ' shifted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.0020854277536273003
    2. 'shift' → logprob: -7.002085208892822
    3. ' ord' → logprob: -7.377085208892822
    4. ' ' → logprob: -8.12708568572998
    5. ' ' → logprob: -9.62708568572998
    6. ' character' → logprob: -9.87708568572998
    7. ' (' → logprob: -10.37708568572998
    8. 'ord' → logprob: -10.75208568572998
    9. ' not' → logprob: -10.87708568572998
    10. ' ascii' → logprob: -11.12708568572998

Token 63: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.2948405128554441e-05
    2. 'character' → logprob: -11.87501335144043
    3. 'ed' → logprob: -12.50001335144043
    4. '_char' → logprob: -14.00001335144043
    5. '_' → logprob: -14.50001335144043
    6. 's' → logprob: -14.62501335144043
    7. '_CHARACTER' → logprob: -15.75001335144043
    8. 'ing' → logprob: -16.62501335144043
    9. '>' → logprob: -16.87501335144043
    10. '_token' → logprob: -16.87501335144043

Token 64: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.0008290443220175803
    2. '>' → logprob: -7.500829219818115
    3. '_character' → logprob: -8.875828742980957
    4. 'ascii' → logprob: -9.875828742980957
    5. '_' → logprob: -10.125828742980957
    6. '_value' → logprob: -11.375828742980957
    7. ' >' → logprob: -11.625828742980957
    8. '_as' → logprob: -12.250828742980957
    9. '```' → logprob: -12.500828742980957
    10. 's' → logprob: -12.750828742980957

Token 65: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06200734153389931
    2. '>' → logprob: -2.812007427215576
    3. ' <=' → logprob: -10.937006950378418
    4. '<|end|>' → logprob: -11.812006950378418
    5. ' ' → logprob: -11.937006950378418
    6. ' ' → logprob: -12.937006950378418
    7. ' <' → logprob: -13.187006950378418
    8. '<=' → logprob: -13.812006950378418
    9. '>end' → logprob: -14.437006950378418
    10. '<' → logprob: -14.562006950378418

Token 66: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.3868820369243622
    2. ' ascii' → logprob: -1.1368820667266846
    3. ' ' → logprob: -11.761881828308105
    4. '   ' → logprob: -13.886881828308105
    5. '_ascii' → logprob: -14.386881828308105
    6. ' ord' → logprob: -15.261881828308105
    7. 'ord' → logprob: -15.386881828308105
    8. ' ' → logprob: -15.511881828308105
    9. '26' → logprob: -15.636881828308105
    10. 'asc' → logprob: -15.761881828308105

Token 67: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. '_Z' → logprob: -16.25
    3. '_of' → logprob: -16.375
    4. '_VALUE' → logprob: -17.375
    5. '_' → logprob: -17.875
    6. 'value' → logprob: -18.25
    7. '_Value' → logprob: -18.25
    8. 'Value' → logprob: -18.375
    9. '_z' → logprob: -18.5
    10. '```' → logprob: -19.0

Token 68: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.4849443838757e-06
    2. '_OF' → logprob: -13.125004768371582
    3. 'of' → logprob: -14.250004768371582
    4. '```' → logprob: -14.375004768371582
    5. '_Z' → logprob: -15.125004768371582
    6. ' of' → logprob: -15.125004768371582
    7. 'Of' → logprob: -16.000003814697266
    8. '_' → logprob: -16.250003814697266
    9. '__' → logprob: -16.250003814697266
    10. '...' → logprob: -17.000003814697266

Token 69: '_Z' (ID: 27268)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.012728251516819
    2. '_Z' → logprob: -4.387728214263916
    3. '90' → logprob: -8.512728691101074
    4. '	Z' → logprob: -11.387728691101074
    5. '>Z' → logprob: -13.262728691101074
    6. ' Z' → logprob: -13.887728691101074
    7. '89' → logprob: -14.137728691101074
    8. 'Ζ' → logprob: -14.512728691101074
    9. '```' → logprob: -14.512728691101074
    10. ''' → logprob: -14.887728691101074

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018981115892529488
    2. ' :' → logprob: -4.018980979919434
    3. ':
' → logprob: -7.268980979919434
    4. ' :
' → logprob: -9.143980979919434
    5. ':

' → logprob: -11.643980979919434
    6. ':return' → logprob: -12.268980979919434
    7. '):' → logprob: -12.893980979919434
    8. '   ' → logprob: -13.268980979919434
    9. '<|end|>' → logprob: -13.268980979919434
    10. ' :

' → logprob: -13.393980979919434

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1149425357580185
    2. '    ' → logprob: -3.3649425506591797
    3. '        ' → logprob: -3.3649425506591797
    4. ' shifted' → logprob: -4.11494255065918
    5. '   ' → logprob: -4.23994255065918
    6. ' ' → logprob: -6.23994255065918
    7. '<|end|>' → logprob: -6.36494255065918
    8. '        
' → logprob: -6.73994255065918
    9. '```' → logprob: -6.73994255065918
    10. '+' → logprob: -8.23994255065918

Token 72: ' wrapped' (ID: 31831)
  Prédit: ' shifted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.12567435204982758
    2. 'shift' → logprob: -2.250674247741699
    3. '       ' → logprob: -5.125674247741699
    4. ' 
' → logprob: -5.500674247741699
    5. '```' → logprob: -7.125674247741699
    6. '        ' → logprob: -7.875674247741699
    7. '        
' → logprob: -7.875674247741699
    8. '
' → logprob: -7.875674247741699
    9. '   ' → logprob: -8.8756742477417
    10. '    
' → logprob: -9.2506742477417

Token 73: '_' (ID: 62)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.010480678640305996
    2. '_shift' → logprob: -5.010480880737305
    3. '_' → logprob: -6.260480880737305
    4. '_value' → logprob: -6.510480880737305
    5. 'ed' → logprob: -8.635480880737305
    6. '_char' → logprob: -9.260480880737305
    7. '_ascii' → logprob: -10.385480880737305
    8. '_position' → logprob: -11.635480880737305
    9. '```' → logprob: -12.135480880737305
    10. '_encoded' → logprob: -12.135480880737305

Token 74: 'around' (ID: 42235)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.0028860680758953094
    2. '_character' → logprob: -5.8778862953186035
    3. 'ascii' → logprob: -10.002885818481445
    4. 'shift' → logprob: -11.002885818481445
    5. 'char' → logprob: -11.502885818481445
    6. 'value' → logprob: -12.252885818481445
    7. '_value' → logprob: -13.877885818481445
    8. '_char' → logprob: -13.877885818481445
    9. 'characters' → logprob: -14.252885818481445
    10. '_shift' → logprob: -15.002885818481445

Token 75: '_ascii' (ID: 125321)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.13528215885162354
    2. '_value' → logprob: -2.760282039642334
    3. '_ascii' → logprob: -3.510282039642334
    4. '_' → logprob: -3.760282039642334
    5. '_shift' → logprob: -5.760282039642334
    6. '_char' → logprob: -5.885282039642334
    7. ' =' → logprob: -6.635282039642334
    8. '=' → logprob: -7.010282039642334
    9. '_token' → logprob: -7.635282039642334
    10. '_index' → logprob: -8.010282516479492

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28299903869628906
    2. ' =' → logprob: -1.407999038696289
    3. '_value' → logprob: -6.532999038696289
    4. '_' → logprob: -8.282999038696289
    5. '_character' → logprob: -9.782999038696289
    6. '_=' → logprob: -10.157999038696289
    7. 's' → logprob: -11.532999038696289
    8. '```' → logprob: -11.782999038696289
    9. '_shift' → logprob: -12.657999038696289
    10. 'value' → logprob: -12.782999038696289

Token 77: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.06815119832754135
    2. 'shift' → logprob: -3.1931512355804443
    3. ' ascii' → logprob: -4.193150997161865
    4. ' shifted' → logprob: -4.818150997161865
    5. '   ' → logprob: -7.193150997161865
    6. '(' → logprob: -7.943150997161865
    7. ' ' → logprob: -9.068151473999023
    8. ' (' → logprob: -9.193151473999023
    9. 'asc' → logprob: -9.568151473999023
    10. '  ' → logprob: -9.818151473999023

Token 78: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.804671233519912e-05
    2. 'value' → logprob: -9.37508773803711
    3. 'Value' → logprob: -13.00008773803711
    4. '_VALUE' → logprob: -15.00008773803711
    5. '_character' → logprob: -15.75008773803711
    6. 'shift' → logprob: -16.25008773803711
    7. 'wrapped' → logprob: -16.25008773803711
    8. 'alue' → logprob: -17.00008773803711
    9. '_Value' → logprob: -17.12508773803711
    10. 'valu' → logprob: -17.75008773803711

Token 79: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.3557529857498594e-05
    2. '_value' → logprob: -10.75002384185791
    3. '_OF' → logprob: -13.87502384185791
    4. '```' → logprob: -15.12502384185791
    5. '_A' → logprob: -15.37502384185791
    6. 'value' → logprob: -15.75002384185791
    7. 'of' → logprob: -15.87502384185791
    8. '_for' → logprob: -16.875022888183594
    9. 'Of' → logprob: -17.000022888183594
    10. '('' → logprob: -17.625022888183594

Token 80: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.06269469857215881
    2. 'A' → logprob: -2.812694787979126
    3. ''A' → logprob: -7.562694549560547
    4. '65' → logprob: -9.812694549560547
    5. '_Z' → logprob: -9.937694549560547
    6. 'Z' → logprob: -10.437694549560547
    7. '```' → logprob: -10.812694549560547
    8. 'a' → logprob: -11.312694549560547
    9. '_' → logprob: -11.687694549560547
    10. 'character' → logprob: -12.062694549560547

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31344664096832275
    2. ' +' → logprob: -1.3134466409683228
    3. '-' → logprob: -8.938446998596191
    4. ' -' → logprob: -10.688446998596191
    5. '+
' → logprob: -10.813446998596191
    6. '+(' → logprob: -12.188446998596191
    7. ' +
' → logprob: -12.563446998596191
    8. ' ' → logprob: -14.188446998596191
    9. ' ' → logprob: -14.813446998596191
    10. '       ' → logprob: -15.688446998596191

Token 82: ' shifted' (ID: 58644)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22236306965351105
    2. 'shift' → logprob: -1.9723631143569946
    3. ' (' → logprob: -2.972362995147705
    4. ' shifted' → logprob: -4.847362995147705
    5. '((' → logprob: -6.972362995147705
    6. ' ' → logprob: -9.722363471984863
    7. '(sh' → logprob: -9.972363471984863
    8. ' shift' → logprob: -9.972363471984863
    9. '   ' → logprob: -10.222363471984863
    10. '(s' → logprob: -10.472363471984863

Token 83: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -2.2723104848410003e-05
    2. 'character' → logprob: -11.250022888183594
    3. '_char' → logprob: -11.750022888183594
    4. '_' → logprob: -14.250022888183594
    5. '_value' → logprob: -14.750022888183594
    6. 'ed' → logprob: -14.750022888183594
    7. '_CHARACTER' → logprob: -15.250022888183594
    8. 'Character' → logprob: -18.375022888183594
    9. '__' → logprob: -18.500022888183594
    10. 's' → logprob: -18.500022888183594

Token 84: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.23411758244037628
    2. '_character' → logprob: -1.6091176271438599
    3. '_to' → logprob: -5.48411750793457
    4. '_char' → logprob: -6.10911750793457
    5. '_value' → logprob: -6.73411750793457
    6. '_' → logprob: -7.23411750793457
    7. 'ascii' → logprob: -9.10911750793457
    8. '_as' → logprob: -9.23411750793457
    9. '_chars' → logprob: -9.98411750793457
    10. 'character' → logprob: -11.23411750793457

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001513312105089426
    2. '-' → logprob: -6.501513481140137
    3. ' ' → logprob: -12.001513481140137
    4. '<|end|>' → logprob: -13.126513481140137
    5. ' -(' → logprob: -13.876513481140137
    6. '%' → logprob: -14.126513481140137
    7. ' -
' → logprob: -14.876513481140137
    8. ' %' → logprob: -15.376513481140137
    9. '```' → logprob: -15.751513481140137
    10. ' ```' → logprob: -15.876513481140137

Token 86: ' ascii' (ID: 104363)
  Prédit: 'ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ascii' → logprob: -0.001296662027016282
    2. '1' → logprob: -7.126296520233154
    3. ' ascii' → logprob: -8.001296997070312
    4. '(' → logprob: -9.376296997070312
    5. ' (' → logprob: -10.626296997070312
    6. '(as' → logprob: -11.501296997070312
    7. 'Z' → logprob: -12.251296997070312
    8. '_ascii' → logprob: -12.376296997070312
    9. '   ' → logprob: -12.501296997070312
    10. '=' → logprob: -12.626296997070312

Token 87: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.320199877838604e-07
    2. 'value' → logprob: -14.875
    3. '_VALUE' → logprob: -18.25
    4. '_' → logprob: -19.0
    5. 'Value' → logprob: -19.25
    6. '_of' → logprob: -19.625
    7. '_number' → logprob: -19.625
    8. 'alue' → logprob: -20.25
    9. '_Value' → logprob: -20.625
    10. '>' → logprob: -21.25

Token 88: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. 'of' → logprob: -16.125
    3. '_or' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '	of' → logprob: -17.875
    6. '_value' → logprob: -17.875
    7. '_OF' → logprob: -18.25
    8. '_for' → logprob: -18.25
    9. ' of' → logprob: -18.625
    10. '...' → logprob: -18.75

Token 89: '_Z' (ID: 27268)
  Prédit: '_Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Z' → logprob: -0.25198766589164734
    2. 'Z' → logprob: -1.5019876956939697
    3. '	Z' → logprob: -9.87698745727539
    4. 'Ζ' → logprob: -13.00198745727539
    5. ' Z' → logprob: -13.50198745727539
    6. '>Z' → logprob: -13.87698745727539
    7. '(Z' → logprob: -14.25198745727539
    8. '_z' → logprob: -14.37698745727539
    9. '26' → logprob: -15.25198745727539
    10. 'Zulu' → logprob: -15.37698745727539

Token 90: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02276293747127056
    2. '-' → logprob: -4.147762775421143
    3. ' -' → logprob: -5.147762775421143
    4. ' ' → logprob: -7.022762775421143
    5. '```' → logprob: -13.3977632522583
    6. '2' → logprob: -15.1477632522583
    7. '<|end|>' → logprob: -16.022762298583984
    8. ' ' → logprob: -16.522762298583984
    9. '   ' → logprob: -16.897762298583984
    10. '...' → logprob: -17.397762298583984

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.000046730041504
    3. '<|end|>' → logprob: -14.625046730041504
    4. '```' → logprob: -15.125046730041504
    5. '<|end|>' → logprob: -15.875046730041504
    6. '   ' → logprob: -16.625045776367188
    7. '' → logprob: -16.750045776367188
    8. '۱' → logprob: -16.875045776367188
    9. '１' → logprob: -17.625045776367188
    10. '१' → logprob: -17.625045776367188

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -14.625012397766113
    4. '<|end|>' → logprob: -15.000012397766113
    5. '' → logprob: -17.18751335144043
    6. '<|end|>' → logprob: -17.18751335144043
    7. '۱' → logprob: -17.43751335144043
    8. '126' → logprob: -17.56251335144043
    9. '१' → logprob: -17.93751335144043
    10. '116' → logprob: -18.00001335144043

Token 93: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44372206926345825
    2. '   ' → logprob: -2.3187220096588135
    3. ')' → logprob: -2.4437220096588135
    4. 'cipher' → logprob: -2.5687220096588135
    5. 'else' → logprob: -3.1937220096588135
    6. 'character' → logprob: -4.193722248077393
    7. ' else' → logprob: -4.943722248077393
    8. ''' → logprob: -4.943722248077393
    9. '        
' → logprob: -5.318722248077393
    10. '    
' → logprob: -5.693722248077393

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1854088306427002
    2. '   ' → logprob: -2.5604088306427
    3. 'else' → logprob: -3.1854088306427
    4. ')' → logprob: -3.8104088306427
    5. ' else' → logprob: -4.810408592224121
    6. ''' → logprob: -5.310408592224121
    7. 'cipher' → logprob: -5.435408592224121
    8. 'character' → logprob: -6.310408592224121
    9. '        
' → logprob: -6.685408592224121
    10. '    ' → logprob: -7.060408592224121

Token 95: ' cipher' (ID: 56483)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' (adapté à ' cipher') → logprob: -0.0040353029035031796
    2. ' cipher' → logprob: -5.754035472869873
    3. '   ' → logprob: -8.129034996032715
    4. 'character' → logprob: -8.129034996032715
    5. '       ' → logprob: -9.004034996032715
    6. '_cipher' → logprob: -10.504034996032715
    7. ')' → logprob: -10.754034996032715
    8. '```' → logprob: -11.004034996032715
    9. '(cipher' → logprob: -11.004034996032715
    10. 'c' → logprob: -11.629034996032715

Token 96: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.07896161824464798
    2. 'e' → logprob: -2.5789616107940674
    3. 'd' → logprob: -10.078961372375488
    4. '_' → logprob: -10.828961372375488
    5. '_text' → logprob: -12.453961372375488
    6. 's' → logprob: -13.453961372375488
    7. 'text' → logprob: -13.703961372375488
    8. 'c' → logprob: -13.953961372375488
    9. '```' → logprob: -14.578961372375488
    10. '_c' → logprob: -14.828961372375488

Token 97: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.0001085497424355708
    2. '_' → logprob: -9.25010871887207
    3. '_character' → logprob: -12.25010871887207
    4. 'text' → logprob: -12.62510871887207
    5. ' _' → logprob: -13.87510871887207
    6. '_char' → logprob: -14.25010871887207
    7. '_tex' → logprob: -14.37510871887207
    8. '_te' → logprob: -14.62510871887207
    9. ''_' → logprob: -14.62510871887207
    10. '_c' → logprob: -15.25010871887207

Token 98: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03819996863603592
    2. '+=' → logprob: -3.2881999015808105
    3. '+' → logprob: -9.663200378417969
    4. ' +' → logprob: -9.913200378417969
    5. '+='' → logprob: -10.163200378417969
    6. '+="' → logprob: -13.038200378417969
    7. '=' → logprob: -13.288200378417969
    8. ' ' → logprob: -13.913200378417969
    9. '+=(' → logprob: -14.038200378417969
    10. '.append' → logprob: -14.538200378417969

Token 99: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.00020413640595506877
    2. ' chr' → logprob: -8.500204086303711
    3. '(chr' → logprob: -14.250204086303711
    4. '_chr' → logprob: -19.37520408630371
    5. 'Chr' → logprob: -20.25020408630371
    6. 'char' → logprob: -20.37520408630371
    7. '   ' → logprob: -21.50020408630371
    8. ' ' → logprob: -21.75020408630371
    9. '```' → logprob: -23.00020408630371
    10. '  ' → logprob: -23.12520408630371

Token 100: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0052362410351634026
    2. '(' → logprob: -5.2552361488342285
    3. '(wrapper' → logprob: -13.380236625671387
    4. '(
' → logprob: -15.130236625671387
    5. ' (' → logprob: -15.380236625671387
    6. '(`' → logprob: -15.880236625671387
    7. '()' → logprob: -16.88023567199707
    8. '('' → logprob: -17.25523567199707
    9. 'wrapped' → logprob: -17.38023567199707
    10. '(W' → logprob: -17.63023567199707

Token 101: 'rapped' (ID: 112944)
  Prédit: 'rapped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rapped' → logprob: -1.8074162653647363e-05
    2. 'wrapped' → logprob: -11.000018119812012
    3. 'apped' → logprob: -14.125018119812012
    4. 'r' → logprob: -14.875018119812012
    5. 'rap' → logprob: -15.375018119812012
    6. 'rapper' → logprob: -17.625017166137695
    7. 'ropped' → logprob: -17.875017166137695
    8. ' wrapped' → logprob: -19.875017166137695
    9. 'ra' → logprob: -20.000017166137695
    10. 'raph' → logprob: -20.250017166137695

Token 102: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1008713702030946e-06
    2. '_ar' → logprob: -13.875001907348633
    3. 'ed' → logprob: -15.375001907348633
    4. 'around' → logprob: -15.750001907348633
    5. ')_' → logprob: -15.875001907348633
    6. '__' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '_
' → logprob: -16.875001907348633
    9. '```' → logprob: -16.875001907348633
    10. ' _' → logprob: -17.125001907348633

Token 103: 'around' (ID: 42235)
  Prédit: 'around'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.0036023214925080538
    2. '_' → logprob: -5.628602504730225
    3. '-around' → logprob: -14.253602027893066
    4. 'ar' → logprob: -14.628602027893066
    5. 'wrapped' → logprob: -15.128602027893066
    6. '```' → logprob: -15.253602027893066
    7. 'Around' → logprob: -15.878602027893066
    8. 'ed' → logprob: -16.503602981567383
    9. 'aro' → logprob: -17.128602981567383
    10. 'and' → logprob: -17.253602981567383

Token 104: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -5.88418151892256e-05
    2. 'ascii' → logprob: -10.125059127807617
    3. '_as' → logprob: -11.125059127807617
    4. '_' → logprob: -12.500059127807617
    5. '_a' → logprob: -15.875059127807617
    6. '_ast' → logprob: -16.375059127807617
    7. '_axi' → logprob: -17.625059127807617
    8. '_ai' → logprob: -18.000059127807617
    9. '```' → logprob: -18.375059127807617
    10. '_s' → logprob: -18.625059127807617

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.531813702778891e-05
    2. ')
' → logprob: -9.50009536743164
    3. '   ' → logprob: -10.87509536743164
    4. '')' → logprob: -13.87509536743164
    5. ' )' → logprob: -15.62509536743164
    6. ')

' → logprob: -15.87509536743164
    7. 'else' → logprob: -16.37509536743164
    8. '}' → logprob: -17.37509536743164
    9. '")' → logprob: -17.75009536743164
    10. '       ' → logprob: -18.00009536743164

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1290033459663391
    2. 'else' → logprob: -2.2540032863616943
    3. ' else' → logprob: -4.254003524780273
    4. 'elif' → logprob: -7.129003524780273
    5. '```' → logprob: -7.629003524780273
    6. '	else' → logprob: -7.754003524780273
    7. ' elif' → logprob: -10.129003524780273
    8. '	elif' → logprob: -10.504003524780273
    9. '<|end|>' → logprob: -10.629003524780273
    10. '    
' → logprob: -11.254003524780273

Token 107: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16116055846214294
    2. ' else' → logprob: -1.9111605882644653
    3. '   ' → logprob: -7.036160469055176
    4. 'elif' → logprob: -10.036160469055176
    5. '	else' → logprob: -11.911160469055176
    6. ' elif' → logprob: -13.161160469055176
    7. ' ' → logprob: -13.161160469055176
    8. 'e' → logprob: -14.036160469055176
    9. '```' → logprob: -14.661160469055176
    10. '_else' → logprob: -14.786160469055176

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47934409976005554
    2. ':
' → logprob: -1.354344129562378
    3. '       ' → logprob: -2.104344129562378
    4. '   ' → logprob: -7.479343891143799
    5. ' :
' → logprob: -9.979344367980957
    6. '    ' → logprob: -10.229344367980957
    7. '        ' → logprob: -11.354344367980957
    8. '      ' → logprob: -11.354344367980957
    9. 'cipher' → logprob: -11.354344367980957
    10. ' :' → logprob: -11.479344367980957

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32233473658561707
    2. 'cipher' → logprob: -1.5723347663879395
    3. ' cipher' → logprob: -2.6973347663879395
    4. '(cipher' → logprob: -8.197334289550781
    5. '   ' → logprob: -9.322334289550781
    6. ' ciphertext' → logprob: -9.572334289550781
    7. '    ' → logprob: -10.322334289550781
    8. '     ' → logprob: -10.822334289550781
    9. '	c' → logprob: -10.822334289550781
    10. '    ' → logprob: -10.947334289550781

Token 110: ' cipher' (ID: 56483)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' (adapté à ' cipher') → logprob: -0.0031797364354133606
    2. ' cipher' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.878179550170898
    4. '(cipher' → logprob: -14.878179550170898
    5. '    ' → logprob: -15.503179550170898
    6. 'c' → logprob: -16.0031795501709
    7. '_cipher' → logprob: -16.2531795501709
    8. '       ' → logprob: -16.3781795501709
    9. ' ciphertext' → logprob: -16.5031795501709
    10. 'cip' → logprob: -17.2531795501709

Token 111: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.002543678041547537
    2. 'd' → logprob: -6.0025434494018555
    3. '_text' → logprob: -9.627543449401855
    4. 'text' → logprob: -14.377543449401855
    5. 'red' → logprob: -14.752543449401855
    6. 's' → logprob: -15.002543449401855
    7. 'ded' → logprob: -15.127543449401855
    8. 'eded' → logprob: -15.252543449401855
    9. 'sed' → logprob: -15.752543449401855
    10. 'ted' → logprob: -16.627544403076172

Token 112: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.750004768371582
    3. 'text' → logprob: -13.125004768371582
    4. ''_' → logprob: -16.5000057220459
    5. '_character' → logprob: -16.6250057220459
    6. '_txt' → logprob: -17.2500057220459
    7. 'Text' → logprob: -17.6250057220459
    8. '_tex' → logprob: -18.6250057220459
    9. '_TEXT' → logprob: -18.7500057220459
    10. '_code' → logprob: -19.0000057220459

Token 113: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08021806180477142
    2. ' +=' → logprob: -2.5802180767059326
    3. '+' → logprob: -6.8302178382873535
    4. '+='' → logprob: -8.455218315124512
    5. '+="' → logprob: -10.580218315124512
    6. ']+=' → logprob: -11.955218315124512
    7. ' +' → logprob: -13.955218315124512
    8. '+=(' → logprob: -14.205218315124512
    9. '=' → logprob: -15.205218315124512
    10. ' ' → logprob: -15.705218315124512

Token 114: ' chr' (ID: 42767)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.13246560096740723
    2. 'chr' → logprob: -2.1324656009674072
    3. ' character' → logprob: -5.257465362548828
    4. ' chr' → logprob: -8.132465362548828
    5. 'char' → logprob: -11.132465362548828
    6. '(character' → logprob: -12.882465362548828
    7. 'ch' → logprob: -13.257465362548828
    8. '(chr' → logprob: -15.007465362548828
    9. 'chrom' → logprob: -15.882465362548828
    10. ' ' → logprob: -15.882465362548828

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '(ord' → logprob: -15.125000953674316
    3. 'shift' → logprob: -15.375000953674316
    4. '(sh' → logprob: -15.500000953674316
    5. '(character' → logprob: -15.750000953674316
    6. ' (' → logprob: -15.875000953674316
    7. '(
' → logprob: -17.750001907348633
    8. ' shifted' → logprob: -18.125001907348633
    9. '(s' → logprob: -18.250001907348633
    10. 'Shift' → logprob: -18.375001907348633

Token 116: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -3.547789674485102e-05
    2. ' shifted' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. ' shift' → logprob: -18.500036239624023
    5. 'sh' → logprob: -19.000036239624023
    6. ')' → logprob: -19.500036239624023
    7. '_shift' → logprob: -19.625036239624023
    8. 'Shift' → logprob: -20.125036239624023
    9. '.shift' → logprob: -20.125036239624023
    10. '(' → logprob: -20.875036239624023

Token 117: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.0206720617134124e-05
    2. '_character' → logprob: -11.50001049041748
    3. 'character' → logprob: -16.875009536743164
    4. 'e' → logprob: -17.875009536743164
    5. 'eed' → logprob: -18.750009536743164
    6. 'd' → logprob: -19.250009536743164
    7. 'edin' → logprob: -20.125009536743164
    8. 'eded' → logprob: -20.375009536743164
    9. 'et' → logprob: -21.500009536743164
    10. 'edd' → logprob: -21.875009536743164

Token 118: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -5.836499985889532e-05
    2. 'character' → logprob: -9.7500581741333
    3. '_char' → logprob: -17.000059127807617
    4. '_' → logprob: -17.750059127807617
    5. '_CHARACTER' → logprob: -18.125059127807617
    6. 'Character' → logprob: -19.125059127807617
    7. '<Character' → logprob: -21.125059127807617
    8. 'ed' → logprob: -21.625059127807617
    9. '.character' → logprob: -22.000059127807617
    10. ' _' → logprob: -22.125059127807617

Token 119: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.00031305922311730683
    2. 'ascii' → logprob: -8.125312805175781
    3. 's' → logprob: -12.375312805175781
    4. '_as' → logprob: -12.500312805175781
    5. ')' → logprob: -12.750312805175781
    6. '_s' → logprob: -13.125312805175781
    7. '_' → logprob: -13.125312805175781
    8. 'Ascii' → logprob: -14.375312805175781
    9. '```' → logprob: -15.500312805175781
    10. ')_' → logprob: -15.625312805175781

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.125001907348633
    4. '))' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.250001907348633
    6. ')`' → logprob: -18.250001907348633
    7. ')return' → logprob: -18.375001907348633
    8. ')

' → logprob: -18.375001907348633
    9. '')' → logprob: -18.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2978185713291168
    2. '<|end|>' → logprob: -1.5478185415267944
    3. '```' → logprob: -3.547818660736084
    4. '\n' → logprob: -4.672818660736084
    5. '#' → logprob: -5.797818660736084
    6. '
' → logprob: -6.547818660736084
    7. '[' → logprob: -7.797818660736084
    8. 'newline' → logprob: -7.797818660736084
    9. ' print' → logprob: -7.922818660736084
    10. '\' → logprob: -8.297818183898926

Token 122: '(cipher' (ID: 181734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11552903801202774
    2. '('' → logprob: -2.2405290603637695
    3. '(cipher' → logprob: -6.1155290603637695
    4. '("("' → logprob: -7.7405290603637695
    5. '(c' → logprob: -10.49052906036377
    6. '()' → logprob: -11.49052906036377
    7. '('(' → logprob: -12.49052906036377
    8. '(`' → logprob: -12.74052906036377
    9. ''' → logprob: -13.36552906036377
    10. '("""' → logprob: -13.49052906036377

Token 123: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -4.1318875446449965e-05
    2. 'ered' → logprob: -10.875041007995605
    3. 'red' → logprob: -11.500041007995605
    4. 'd' → logprob: -11.500041007995605
    5. 'er' → logprob: -13.625041007995605
    6. '_text' → logprob: -14.500041007995605
    7. 'r' → logprob: -16.500041961669922
    8. 'e' → logprob: -16.625041961669922
    9. 'text' → logprob: -16.750041961669922
    10. 'erd' → logprob: -16.875041961669922

Token 124: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -1.1994775377388578e-05
    2. 'text' → logprob: -11.750012397766113
    3. '_' → logprob: -12.875012397766113
    4. '_txt' → logprob: -14.125012397766113
    5. '_t' → logprob: -14.875012397766113
    6. '_tex' → logprob: -15.750012397766113
    7. 't' → logprob: -16.125011444091797
    8. 'ext' → logprob: -16.375011444091797
    9. ''_' → logprob: -18.375011444091797
    10. 'ed' → logprob: -18.375011444091797

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -17.25
    4. '))' → logprob: -17.75
    5. ')`' → logprob: -18.5
    6. '(' → logprob: -19.0
    7. '')' → logprob: -19.25
    8. '()' → logprob: -19.375
    9. ')

' → logprob: -20.5
    10. '[' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 52.03%
Précision adaptée (1ère position): 55.28%
Précision (top 10): 84.55%
================================================================================
