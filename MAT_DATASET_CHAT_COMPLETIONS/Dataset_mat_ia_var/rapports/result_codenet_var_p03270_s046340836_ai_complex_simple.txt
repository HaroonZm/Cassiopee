================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul
from itertools import accumulate, chain, product

K, N = map(int, input().split())
MOD = 998244353

# complex factorial table via accumulate and reduce
fact = list(accumulate(chain([1], range(1, 4000)), lambda x, y: (x * y) % MOD))
# complex modular inverse table: exploiting Fermat's Little Theorem and map
factinv = list(map(lambda x: pow(x, MOD-2, MOD), fact))

# unorthodox nCr using operator.mul and reduce
def ncr(n, r):
    try:
        return (fact[n] * factinv[r] * factinv[n - r]) % MOD if n >= 0 <= r <= n else 0
    except:
        return 0

# nHr via nCr
def nhr(n, r):
    return 1 if n == 0 and r == 0 else ncr(n + r - 1, r)

# emulate main loop with enumerate, zip, custom generator, and extra lambda gymnastics
for i in range(2, 2 * K + 1):
    Ans = 0
    parity = i % 2
    tpl = lambda np: (range(np + 1), K - np * 2 - (1 if not parity else 0))
    np = i // 2 - max(i - 1 - K, 0)
    if parity == 0:  # even
        np -= 1
        for nq in range(np + 1):
            t1 = (ncr(np, nq) * pow(2, nq, MOD)) % MOD
            nr = K - np * 2 - 1
            t2a = nhr(nr + nq, N - nq) % MOD
            t2b = nhr(nr + nq, N - nq - 1) % MOD
            Ans = (Ans + t1 * ((t2a + t2b) % MOD)) % MOD
    else:  # odd
        for nq in range(np + 1):
            t1 = (ncr(np, nq) * pow(2, nq, MOD)) % MOD
            nr = K - np * 2
            t2 = nhr(nr + nq, N - nq) % MOD
            Ans = (Ans + t1 * t2) % MOD
    print(Ans % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3122055232524872
    2. 'partial' → logprob: -2.0622055530548096
    3. 'reduce' → logprob: -2.0622055530548096
    4. 'l' → logprob: -4.8122053146362305
    5. ' wraps' → logprob: -5.3122053146362305
    6. 'cache' → logprob: -8.56220531463623
    7. 'cached' → logprob: -8.56220531463623
    8. 'cmp' → logprob: -8.93720531463623
    9. ' partial' → logprob: -9.56220531463623
    10. 'wr' → logprob: -9.93720531463623

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03611946478486061
    2. '(lambda' → logprob: -3.4111194610595703
    3. '.' → logprob: -6.78611946105957
    4. ' (' → logprob: -7.78611946105957
    5. ',' → logprob: -8.03611946105957
    6. 'lambda' → logprob: -9.03611946105957
    7. '```' → logprob: -9.28611946105957
    8. 'a' → logprob: -9.53611946105957
    9. ''' → logprob: -10.03611946105957
    10. '\' → logprob: -10.16111946105957

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02054515667259693
    2. '(
' → logprob: -4.77054500579834
    3. '\' → logprob: -5.64554500579834
    4. '*' → logprob: -5.64554500579834
    5. '\(' → logprob: -6.77054500579834
    6. ',' → logprob: -6.89554500579834
    7. '\n' → logprob: -7.02054500579834
    8. '#' → logprob: -7.77054500579834
    9. '```' → logprob: -8.27054500579834
    10. '`' → logprob: -8.64554500579834

Token 10: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5062718987464905
    2. 'a' → logprob: -2.2562718391418457
    3. '\' → logprob: -2.3812718391418457
    4. 'd' → logprob: -2.6312718391418457
    5. '(' → logprob: -3.3812718391418457
    6. '#' → logprob: -4.131271839141846
    7. '(
' → logprob: -4.131271839141846
    8. 'x' → logprob: -4.506271839141846
    9. '\n' → logprob: -4.756271839141846
    10. '*' → logprob: -5.381271839141846

Token 11: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.10384281724691391
    2. 'math' → logprob: -2.4788427352905273
    3. ' itertools' → logprob: -4.228842735290527
    4. ' functools' → logprob: -8.978842735290527
    5. ' ' → logprob: -10.478842735290527
    6. ' numpy' → logprob: -10.853842735290527
    7. 'operator' → logprob: -11.728842735290527
    8. '_math' → logprob: -11.728842735290527
    9. 'it' → logprob: -12.228842735290527
    10. 'fun' → logprob: -12.353842735290527

Token 12: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3282717168331146
    2. 'import' → logprob: -1.578271746635437
    3. ' import' → logprob: -2.7032716274261475
    4. ' .' → logprob: -5.703271865844727
    5. '.import' → logprob: -5.953271865844727
    6. '.im' → logprob: -8.703271865844727
    7. '<|end|>' → logprob: -8.953271865844727
    8. '	import' → logprob: -10.328271865844727
    9. '.groupby' → logprob: -10.578271865844727
    10. ' itertools' → logprob: -10.703271865844727

Token 13: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.691910982131958
    2. 'com' → logprob: -1.941910982131958
    3. 'acc' → logprob: -2.191910982131958
    4. 'per' → logprob: -2.316910982131958
    5. 'count' → logprob: -2.691910982131958
    6. ' product' → logprob: -3.191910982131958
    7. ' accumulate' → logprob: -4.566910743713379
    8. ' permutations' → logprob: -4.941910743713379
    9. ' combinations' → logprob: -5.191910743713379
    10. 'chain' → logprob: -5.316910743713379

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3244025409221649
    2. '(
' → logprob: -1.5744025707244873
    3. 'def' → logprob: -3.5744025707244873
    4. ',' → logprob: -4.074402332305908
    5. '#' → logprob: -5.199402332305908
    6. '\' → logprob: -5.324402332305908
    7. ',
' → logprob: -6.074402332305908
    8. '(

' → logprob: -6.199402332305908
    9. '\n' → logprob: -6.574402332305908
    10. 'a' → logprob: -7.199402332305908

Token 15: ' chain' (ID: 13464)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -1.1141194105148315
    2. 'product' → logprob: -1.3641194105148315
    3. 'com' → logprob: -1.8641194105148315
    4. ' chain' → logprob: -2.739119529724121
    5. 'chain' → logprob: -3.489119529724121
    6. ' group' → logprob: -3.739119529724121
    7. 'count' → logprob: -3.864119529724121
    8. 'group' → logprob: -3.989119529724121
    9. 'per' → logprob: -4.239119529724121
    10. ' permutations' → logprob: -4.239119529724121

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1474742889404297
    2. '(
' → logprob: -2.2724742889404297
    3. 'def' → logprob: -3.7724742889404297
    4. '\' → logprob: -5.89747428894043
    5. ',' → logprob: -6.02247428894043
    6. '#' → logprob: -6.39747428894043
    7. '.' → logprob: -7.14747428894043
    8. 'd' → logprob: -7.52247428894043
    9. '(

' → logprob: -7.52247428894043
    10. '[' → logprob: -8.02247428894043

Token 17: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5330610871315002
    2. ' is' → logprob: -2.5330610275268555
    3. 'product' → logprob: -2.5330610275268555
    4. 'repeat' → logprob: -2.6580610275268555
    5. ' product' → logprob: -2.7830610275268555
    6. 'is' → logprob: -3.4080610275268555
    7. ' repeat' → logprob: -4.2830610275268555
    8. 'compress' → logprob: -4.4080610275268555
    9. 'group' → logprob: -4.6580610275268555
    10. 'cycle' → logprob: -4.9080610275268555

Token 18: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2295624166727066
    2. '(
' → logprob: -1.8545624017715454
    3. 'def' → logprob: -3.479562520980835
    4. '\' → logprob: -5.729562282562256
    5. ',' → logprob: -5.854562282562256
    6. '#' → logprob: -6.104562282562256
    7. '.' → logprob: -6.479562282562256
    8. '[' → logprob: -6.604562282562256
    9. '```' → logprob: -6.854562282562256
    10. '(

' → logprob: -7.104562282562256

Token 19: 'K' (ID: 42)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5667790174484253
    2. '(' → logprob: -1.5667790174484253
    3. 'd' → logprob: -2.191779136657715
    4. '#' → logprob: -3.566779136657715
    5. '(
' → logprob: -3.816779136657715
    6. '```' → logprob: -4.066779136657715
    7. '`' → logprob: -4.691779136657715
    8. '*' → logprob: -4.816779136657715
    9. '[' → logprob: -4.816779136657715
    10. '\' → logprob: -5.316779136657715

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5493742227554321
    2. '_' → logprob: -1.1743742227554321
    3. '=' → logprob: -2.5493741035461426
    4. ',' → logprob: -4.049374103546143
    5. ')' → logprob: -5.299374103546143
    6. '.' → logprob: -5.424374103546143
    7. 's' → logprob: -6.549374103546143
    8. 'ernel' → logprob: -7.049374103546143
    9. 'w' → logprob: -7.174374103546143
    10. 'ey' → logprob: -7.549374103546143

Token 21: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7248150706291199
    2. ' N' → logprob: -0.8498150706291199
    3. ' ' → logprob: -3.2248151302337646
    4. 'L' → logprob: -4.8498148918151855
    5. ' L' → logprob: -4.8498148918151855
    6. 'A' → logprob: -4.8498148918151855
    7. ' =' → logprob: -5.3498148918151855
    8. ' A' → logprob: -5.4748148918151855
    9. ' n' → logprob: -5.9748148918151855
    10. '=' → logprob: -6.2248148918151855

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11347701400518417
    2. '=' → logprob: -2.2384769916534424
    3. ',' → logprob: -7.3634772300720215
    4. ' ' → logprob: -11.988476753234863
    5. '<|end|>' → logprob: -12.238476753234863
    6. ')' → logprob: -13.113476753234863
    7. ' =
' → logprob: -13.238476753234863
    8. '=int' → logprob: -13.238476753234863
    9. ' ,' → logprob: -13.488476753234863
    10. '=

' → logprob: -14.238476753234863

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1983359307050705
    2. 'map' → logprob: -1.823335886001587
    3. ' ' → logprob: -4.323336124420166
    4. '10' → logprob: -6.573336124420166
    5. ' int' → logprob: -6.948336124420166
    6. '5' → logprob: -7.073336124420166
    7. 'int' → logprob: -7.323336124420166
    8. '0' → logprob: -7.448336124420166
    9. ' list' → logprob: -8.948335647583008
    10. '1' → logprob: -9.198335647583008

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011187521740794182
    2. '(' → logprob: -4.636187553405762
    3. '(str' → logprob: -7.636187553405762
    4. '(lambda' → logprob: -7.761187553405762
    5. 'int' → logprob: -8.136187553405762
    6. '(input' → logprob: -9.011187553405762
    7. '<|end|>' → logprob: -10.386187553405762
    8. '[int' → logprob: -10.636187553405762
    9. '<int' → logprob: -11.136187553405762
    10. 'input' → logprob: -11.761187553405762

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20353296399116516
    2. ',input' → logprob: -1.7035329341888428
    3. 'input' → logprob: -6.953533172607422
    4. '(input' → logprob: -7.328533172607422
    5. '(' → logprob: -8.328533172607422
    6. ',int' → logprob: -8.703533172607422
    7. ')' → logprob: -10.328533172607422
    8. '),' → logprob: -11.953533172607422
    9. ' ,' → logprob: -12.078533172607422
    10. ',float' → logprob: -12.203533172607422

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20143379271030426
    2. ' input' → logprob: -1.701433777809143
    3. '(input' → logprob: -11.576434135437012
    4. ')' → logprob: -12.201434135437012
    5. ' ' → logprob: -13.076434135437012
    6. ',input' → logprob: -13.076434135437012
    7. '=input' → logprob: -14.076434135437012
    8. ' )' → logprob: -14.951434135437012
    9. '	input' → logprob: -15.076434135437012
    10. 'str' → logprob: -16.326433181762695

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6615859270095825
    2. '()' → logprob: -1.1615859270095825
    3. '().' → logprob: -2.286585807800293
    4. '(' → logprob: -3.161585807800293
    5. ')' → logprob: -4.536585807800293
    6. '('' → logprob: -5.161585807800293
    7. '(),' → logprob: -5.786585807800293
    8. '());' → logprob: -6.161585807800293
    9. '(()' → logprob: -6.536585807800293
    10. '()))' → logprob: -7.536585807800293

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00030114251421764493
    2. 'strip' → logprob: -8.125301361083984
    3. 'rstrip' → logprob: -12.750301361083984
    4. ' split' → logprob: -14.250301361083984
    5. 'read' → logprob: -14.375301361083984
    6. ')' → logprob: -14.625301361083984
    7. '(split' → logprob: -15.125301361083984
    8. 'spl' → logprob: -15.875301361083984
    9. '```' → logprob: -18.000301361083984
    10. 'startswith' → logprob: -18.125301361083984

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023438217118382454
    2. '))' → logprob: -3.7734382152557373
    3. '),' → logprob: -9.273438453674316
    4. '())' → logprob: -10.523438453674316
    5. ')`' → logprob: -11.148438453674316
    6. '(' → logprob: -11.648438453674316
    7. '`)' → logprob: -11.773438453674316
    8. '()' → logprob: -11.898438453674316
    9. ')))' → logprob: -11.898438453674316
    10. '')' → logprob: -11.898438453674316

Token 30: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4484617710113525
    2. 'numbers' → logprob: -1.6984617710113525
    3. 'data' → logprob: -1.9484617710113525
    4. 'a' → logprob: -1.9484617710113525
    5. 'arr' → logprob: -2.9484617710113525
    6. 'values' → logprob: -2.9484617710113525
    7. ')' → logprob: -3.3234617710113525
    8. 'nums' → logprob: -3.8234617710113525
    9. 'A' → logprob: -3.9484617710113525
    10. ' numbers' → logprob: -4.323461532592773

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287468492984772
    2. '=' → logprob: -1.0537468194961548
    3. ')' → logprob: -11.053747177124023
    4. '_' → logprob: -11.428747177124023
    5. ' ' → logprob: -11.928747177124023
    6. ' =
' → logprob: -12.553747177124023
    7. ',' → logprob: -12.678747177124023
    8. ' =)' → logprob: -13.178747177124023
    9. '.' → logprob: -13.428747177124023
    10. '=

' → logprob: -14.303747177124023

Token 32: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3491143584251404
    2. ' ' → logprob: -1.2241144180297852
    3. '100' → logprob: -7.474114418029785
    4. '1' → logprob: -9.224114418029785
    5. '998' → logprob: -13.599114418029785
    6. 'int' → logprob: -14.474114418029785
    7. ' ' → logprob: -14.474114418029785
    8. '109' → logprob: -15.099114418029785
    9. '0' → logprob: -16.22411346435547
    10. '​' → logprob: -16.72411346435547

Token 33: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06225581839680672
    2. '100' → logprob: -2.812255859375
    3. '1' → logprob: -8.562255859375
    4. '998' → logprob: -9.312255859375
    5. ' ' → logprob: -12.687255859375
    6. '(' → logprob: -13.187255859375
    7. 'int' → logprob: -14.687255859375
    8. '123' → logprob: -14.937255859375
    9. 'pow' → logprob: -15.437255859375
    10. '2' → logprob: -15.812255859375

Token 34: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.1279553291387856e-05
    2. '247' → logprob: -12.500011444091797
    3. '```' → logprob: -13.250011444091797
    4. '243' → logprob: -13.875011444091797
    5. '953' → logprob: -14.500011444091797
    6. '457' → logprob: -14.625011444091797
    7. '_' → logprob: -14.875011444091797
    8. '273' → logprob: -15.000011444091797
    9. '353' → logprob: -15.125011444091797
    10. '954' → logprob: -15.375011444091797

Token 35: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '257' → logprob: -0.34402453899383545
    2. '853' → logprob: -1.8440245389938354
    3. '857' → logprob: -2.969024658203125
    4. '353' → logprob: -3.094024658203125
    5. '253' → logprob: -4.094024658203125
    6. '457' → logprob: -4.219024658203125
    7. '53' → logprob: -7.094024658203125
    8. '953' → logprob: -7.344024658203125
    9. '357' → logprob: -7.594024658203125
    10. '273' → logprob: -7.719024658203125

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08681564033031464
    2. 'data' → logprob: -4.21181583404541
    3. 'a' → logprob: -4.46181583404541
    4. 'result' → logprob: -4.58681583404541
    5. ' 
' → logprob: -4.83681583404541
    6. '
' → logprob: -4.96181583404541
    7. '<|end|>' → logprob: -5.21181583404541
    8. '' → logprob: -5.58681583404541
    9. 'def' → logprob: -5.58681583404541
    10. ')' → logprob: -5.71181583404541

Token 37: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9351081848144531
    2. 'a' → logprob: -1.1851081848144531
    3. 'dp' → logprob: -2.310108184814453
    4. 'arr' → logprob: -2.435108184814453
    5. 'data' → logprob: -3.685108184814453
    6. 'lst' → logprob: -4.310108184814453
    7. 'fact' → logprob: -4.310108184814453
    8. 'nums' → logprob: -4.810108184814453
    9. 'factor' → logprob: -5.435108184814453
    10. 'def' → logprob: -5.435108184814453

Token 38: ' complex' (ID: 8012)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.156687617301941
    2. 'fact' → logprob: -1.906687617301941
    3. 'def' → logprob: -2.0316877365112305
    4. 'arr' → logprob: -2.5316877365112305
    5. 'data' → logprob: -3.0316877365112305
    6. ' dp' → logprob: -3.2816877365112305
    7. 'factor' → logprob: -3.2816877365112305
    8. 'A' → logprob: -4.0316877365112305
    9. 'a' → logprob: -4.0316877365112305
    10. 'f' → logprob: -4.4066877365112305

Token 39: ' factorial' (ID: 111204)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' table' (ID: 3293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1021969318389893
    2. 's' → logprob: -1.1021969318389893
    3. '_' → logprob: -1.2271969318389893
    4. '_factor' → logprob: -4.22719669342041
    5. '=' → logprob: -4.97719669342041
    6. 'def' → logprob: -5.10219669342041
    7. '_fact' → logprob: -5.60219669342041
    8. ' =' → logprob: -5.97719669342041
    9. ',' → logprob: -6.22719669342041
    10. '(s' → logprob: -7.10219669342041

Token 41: ' via' (ID: 4493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6712517142295837
    2. '_' → logprob: -2.2962517738342285
    3. 'max' → logprob: -2.5462517738342285
    4. ' =' → logprob: -2.7962517738342285
    5. ',' → logprob: -3.2962517738342285
    6. '_max' → logprob: -3.5462517738342285
    7. 'MAX' → logprob: -3.6712517738342285
    8. 'fact' → logprob: -3.6712517738342285
    9. '=' → logprob: -3.7962517738342285
    10. '_factor' → logprob: -3.9212517738342285

Token 42: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4291442036628723
    2. 'chain' → logprob: -1.5541441440582275
    3. 'reduce' → logprob: -3.0541441440582275
    4. ' accumulate' → logprob: -3.5541441440582275
    5. 'product' → logprob: -4.304144382476807
    6. 'list' → logprob: -4.554144382476807
    7. ' chain' → logprob: -5.304144382476807
    8. 'lambda' → logprob: -5.304144382476807
    9. 'pow' → logprob: -5.429144382476807
    10. 'def' → logprob: -5.679144382476807

Token 43: ' and' (ID: 326)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7859442830085754
    2. 's' → logprob: -1.6609442234039307
    3. 'f' → logprob: -1.9109442234039307
    4. 'fac' → logprob: -2.5359442234039307
    5. 'factor' → logprob: -3.4109442234039307
    6. '_fact' → logprob: -3.6609442234039307
    7. '_factor' → logprob: -4.03594446182251
    8. ' =' → logprob: -4.41094446182251
    9. '(f' → logprob: -4.91094446182251
    10. '_f' → logprob: -5.16094446182251

Token 44: ' reduce' (ID: 10389)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.8024380803108215
    2. 'reduce' → logprob: -1.3024380207061768
    3. ' chain' → logprob: -2.3024380207061768
    4. 'range' → logprob: -3.1774380207061768
    5. 'product' → logprob: -3.3024380207061768
    6. ' accumulate' → logprob: -3.8024380207061768
    7. 'mul' → logprob: -3.8024380207061768
    8. 'partial' → logprob: -4.177438259124756
    9. ' reduce' → logprob: -5.177438259124756
    10. ' product' → logprob: -5.427438259124756

Token 45: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0847342237830162
    2. 'factor' → logprob: -3.8347342014312744
    3. 'f' → logprob: -3.9597342014312744
    4. 'fac' → logprob: -4.7097344398498535
    5. '_fact' → logprob: -4.8347344398498535
    6. 'facts' → logprob: -5.0847344398498535
    7. '_factor' → logprob: -5.9597344398498535
    8. 's' → logprob: -5.9597344398498535
    9. '
' → logprob: -6.0847344398498535
    10. '(f' → logprob: -6.8347344398498535

Token 46: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.056935396045446396
    2. 'factor' → logprob: -3.6819353103637695
    3. 'fac' → logprob: -4.3069353103637695
    4. 'facts' → logprob: -4.9319353103637695
    5. 'f' → logprob: -5.0569353103637695
    6. '_fact' → logprob: -7.8069353103637695
    7. ' fact' → logprob: -7.9319353103637695
    8. '
' → logprob: -8.30693531036377
    9. '(f' → logprob: -8.30693531036377
    10. '```' → logprob: -8.55693531036377

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7750232815742493
    2. 's' → logprob: -1.2750232219696045
    3. ' =' → logprob: -2.1500232219696045
    4. 'or' → logprob: -2.9000232219696045
    5. '_' → logprob: -3.2750232219696045
    6. 'o' → logprob: -4.150023460388184
    7. '_table' → logprob: -4.400023460388184
    8. 'orial' → logprob: -5.025023460388184
    9. ' ' → logprob: -5.775023460388184
    10. ',' → logprob: -6.525023460388184

Token 48: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7956899404525757
    2. '[' → logprob: -0.9206899404525757
    3. 'acc' → logprob: -2.6706900596618652
    4. ' [' → logprob: -3.4206900596618652
    5. ' accumulate' → logprob: -3.6706900596618652
    6. ' list' → logprob: -4.170690059661865
    7. 'chain' → logprob: -5.920690059661865
    8. '[list' → logprob: -6.545690059661865
    9. '(acc' → logprob: -7.045690059661865
    10. 'partial' → logprob: -7.170690059661865

Token 49: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -4.000763510703109e-05
    2. '(' → logprob: -11.125040054321289
    3. 'acc' → logprob: -11.375040054321289
    4. '(ac' → logprob: -11.875040054321289
    5. '(chain' → logprob: -12.250040054321289
    6. '(t' → logprob: -14.125040054321289
    7. '()' → logprob: -15.000040054321289
    8. '	acc' → logprob: -15.000040054321289
    9. '.acc' → logprob: -15.500040054321289
    10. '(
' → logprob: -15.750040054321289

Token 50: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0002777822664938867
    2. 'um' → logprob: -8.875277519226074
    3. 'ulate' → logprob: -9.250277519226074
    4. 'om' → logprob: -10.375277519226074
    5. 'umul' → logprob: -12.875277519226074
    6. 'ul' → logprob: -13.000277519226074
    7. 'umu' → logprob: -13.250277519226074
    8. 'umal' → logprob: -13.375277519226074
    9. 'umut' → logprob: -15.125277519226074
    10. 'm' → logprob: -15.250277519226074

Token 51: '(chain' (ID: 124348)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.013487719930708408
    2. '(chain' → logprob: -4.388487815856934
    3. '(' → logprob: -7.388487815856934
    4. '(lambda' → logprob: -8.138487815856934
    5. '([' → logprob: -10.013487815856934
    6. '(int' → logprob: -12.263487815856934
    7. 'range' → logprob: -12.263487815856934
    8. '(iter' → logprob: -12.513487815856934
    9. '(count' → logprob: -12.888487815856934
    10. '((' → logprob: -13.513487815856934

Token 52: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.24739477038383484
    2. '(range' → logprob: -1.6223948001861572
    3. '((' → logprob: -3.8723948001861572
    4. '(' → logprob: -7.872394561767578
    5. '(([' → logprob: -7.997394561767578
    6. 'from' → logprob: -9.372394561767578
    7. '([(' → logprob: -9.497394561767578
    8. '.from' → logprob: -11.122394561767578
    9. '(iter' → logprob: -11.247394561767578
    10. '(map' → logprob: -12.747394561767578

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015296317636966705
    2. '[' → logprob: -4.265296459197998
    3. 'range' → logprob: -7.015296459197998
    4. '(' → logprob: -8.64029598236084
    5. '0' → logprob: -10.01529598236084
    6. '(range' → logprob: -12.26529598236084
    7. '   ' → logprob: -13.26529598236084
    8. 'map' → logprob: -13.51529598236084
    9. '{' → logprob: -13.64029598236084
    10. ' [' → logprob: -14.14029598236084

Token 54: '],' (ID: 2155)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5877670049667358
    2. ',' → logprob: -1.2127670049667358
    3. 'range' → logprob: -2.0877671241760254
    4. '],' → logprob: -3.8377671241760254
    5. '),' → logprob: -8.087766647338867
    6. ',(' → logprob: -8.087766647338867
    7. '(' → logprob: -8.212766647338867
    8. '	range' → logprob: -9.462766647338867
    9. '},' → logprob: -9.587766647338867
    10. ' range' → logprob: -9.587766647338867

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007909284322522581
    2. '(range' → logprob: -7.625791072845459
    3. ' range' → logprob: -8.1257905960083
    4. 'map' → logprob: -12.3757905960083
    5. ' ' → logprob: -14.2507905960083
    6. '(' → logprob: -14.3757905960083
    7. '	range' → logprob: -14.3757905960083
    8. '   ' → logprob: -15.0007905960083
    9. 'chain' → logprob: -15.7507905960083
    10. '[' → logprob: -15.8757905960083

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.3954463510308415e-05
    2. '1' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.625054359436035
    4. ' ' → logprob: -15.000054359436035
    5. ')(' → logprob: -15.625054359436035
    6. '(
' → logprob: -15.750054359436035
    7. ')' → logprob: -16.12505340576172
    8. ',' → logprob: -16.12505340576172
    9. '```' → logprob: -16.25005340576172
    10. '2' → logprob: -16.25005340576172

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.388769103679806e-05
    2. '(' → logprob: -9.750093460083008
    3. ' ' → logprob: -10.500093460083008
    4. '2' → logprob: -12.000093460083008
    5. ',' → logprob: -13.625093460083008
    6. ')' → logprob: -16.000093460083008
    7. '   ' → logprob: -16.250093460083008
    8. '```' → logprob: -16.250093460083008
    9. '))' → logprob: -17.250093460083008
    10. '[' → logprob: -17.375093460083008

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004136222414672375
    2. ',K' → logprob: -5.504136085510254
    3. ' ,' → logprob: -10.004136085510254
    4. ',N' → logprob: -12.004136085510254
    5. 'K' → logprob: -12.129136085510254
    6. ',n' → logprob: -15.129136085510254
    7. ' K' → logprob: -15.504136085510254
    8. '1' → logprob: -15.504136085510254
    9. ',
' → logprob: -16.00413703918457
    10. ',k' → logprob: -16.12913703918457

Token 59: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019505366217345
    2. 'K' → logprob: -6.626950740814209
    3. ' N' → logprob: -7.501950740814209
    4. '100' → logprob: -10.37695026397705
    5. 'max' → logprob: -10.75195026397705
    6. '10' → logprob: -11.87695026397705
    7. ' ' → logprob: -12.62695026397705
    8. ' K' → logprob: -13.00195026397705
    9. 'MAX' → logprob: -13.37695026397705
    10. '101' → logprob: -13.62695026397705

Token 60: '400' (ID: 4812)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016465971246361732
    2. 'K' → logprob: -4.14146614074707
    3. ' N' → logprob: -8.01646614074707
    4. '100' → logprob: -10.51646614074707
    5. '10' → logprob: -10.51646614074707
    6. ' ' → logprob: -11.01646614074707
    7. ' K' → logprob: -11.26646614074707
    8. '101' → logprob: -11.89146614074707
    9. 'max' → logprob: -13.01646614074707
    10. '  ' → logprob: -13.26646614074707

Token 61: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14439097046852112
    2. '001' → logprob: -3.1443910598754883
    3. '01' → logprob: -3.3943910598754883
    4. '0' → logprob: -3.6443910598754883
    5. '000' → logprob: -4.144391059875488
    6. '00' → logprob: -5.144391059875488
    7. '))' → logprob: -5.894391059875488
    8. ')))' → logprob: -6.144391059875488
    9. '+' → logprob: -6.269391059875488
    10. '5' → logprob: -6.769391059875488

Token 62: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.08092744648456573
    2. '1' → logprob: -3.9559273719787598
    3. '))),' → logprob: -4.45592737197876
    4. '))' → logprob: -4.58092737197876
    5. '))))' → logprob: -4.70592737197876
    6. ')' → logprob: -4.70592737197876
    7. ')))' → logprob: -4.95592737197876
    8. ')))),' → logprob: -5.70592737197876
    9. '+' → logprob: -5.83092737197876
    10. '),' → logprob: -6.20592737197876

Token 63: ' lambda' (ID: 27871)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.08537736535072327
    2. ' mul' → logprob: -2.7103774547576904
    3. 'lambda' → logprob: -4.710377216339111
    4. ' lambda' → logprob: -5.085377216339111
    5. '(lambda' → logprob: -9.46037769317627
    6. ' ' → logprob: -11.08537769317627
    7. 'mu' → logprob: -11.21037769317627
    8. 'multiply' → logprob: -12.08537769317627
    9. '_mul' → logprob: -12.33537769317627
    10. 'multip' → logprob: -12.58537769317627

Token 64: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35967615246772766
    2. ' x' → logprob: -1.7346761226654053
    3. 'a' → logprob: -2.2346761226654053
    4. ' a' → logprob: -4.109676361083984
    5. 'acc' → logprob: -6.609676361083984
    6. ' acc' → logprob: -7.234676361083984
    7. ' ' → logprob: -9.609676361083984
    8. '	x' → logprob: -11.234676361083984
    9. 'f' → logprob: -11.609676361083984
    10. '	a' → logprob: -11.984676361083984

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019221604452468455
    2. ',x' → logprob: -8.750192642211914
    3. ' ,' → logprob: -11.000192642211914
    4. ',n' → logprob: -12.375192642211914
    5. ',y' → logprob: -13.125192642211914
    6. ',m' → logprob: -13.375192642211914
    7. ',int' → logprob: -13.750192642211914
    8. ',a' → logprob: -14.125192642211914
    9. ',k' → logprob: -14.250192642211914
    10. ',b' → logprob: -14.375192642211914

Token 66: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804516792297363
    2. ' y' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.663044929504395
    4. '	y' → logprob: -14.163044929504395
    5. 'x' → logprob: -14.288044929504395
    6. 'a' → logprob: -15.288044929504395
    7. '   ' → logprob: -15.288044929504395
    8. '  ' → logprob: -15.538044929504395
    9. ' ' → logprob: -16.03804588317871
    10. 'k' → logprob: -16.03804588317871

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023202638840302825
    2. ' :' → logprob: -8.875231742858887
    3. ':x' → logprob: -9.375231742858887
    4. ',' → logprob: -13.250231742858887
    5. ',:' → logprob: -14.125231742858887
    6. ':(' → logprob: -14.250231742858887
    7. '_:' → logprob: -14.375231742858887
    8. ':y' → logprob: -14.500231742858887
    9. ':m' → logprob: -14.625231742858887
    10. ':
' → logprob: -14.875231742858887

Token 68: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4806680679321289
    2. ' (' → logprob: -1.730668067932129
    3. 'x' → logprob: -1.980668067932129
    4. ' x' → logprob: -3.105668067932129
    5. '(' → logprob: -3.855668067932129
    6. ' ' → logprob: -7.855668067932129
    7. '(lambda' → logprob: -10.230668067932129
    8. '  ' → logprob: -10.355668067932129
    9. '   ' → logprob: -10.480668067932129
    10. '	x' → logprob: -11.355668067932129

Token 69: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08361973613500595
    2. ' x' → logprob: -2.7086198329925537
    3. '(x' → logprob: -4.333619594573975
    4. ' (' → logprob: -8.458620071411133
    5. '(' → logprob: -8.583620071411133
    6. ' ' → logprob: -10.083620071411133
    7. '	x' → logprob: -11.083620071411133
    8. '   ' → logprob: -11.958620071411133
    9. '  ' → logprob: -12.958620071411133
    10. ')x' → logprob: -13.708620071411133

Token 70: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04399944841861725
    2. ' *' → logprob: -3.168999433517456
    3. '*y' → logprob: -6.918999671936035
    4. ' ' → logprob: -12.543999671936035
    5. ' y' → logprob: -13.168999671936035
    6. 'y' → logprob: -13.293999671936035
    7. ',' → logprob: -13.918999671936035
    8. ' ' → logprob: -14.418999671936035
    9. '*
' → logprob: -14.668999671936035
    10. '*

' → logprob: -15.418999671936035

Token 71: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.179749995470047
    2. ' y' → logprob: -1.8047499656677246
    3. '	y' → logprob: -12.929750442504883
    4. ' ' → logprob: -13.554750442504883
    5. '(y' → logprob: -14.179750442504883
    6. '*y' → logprob: -15.679750442504883
    7. '   ' → logprob: -15.804750442504883
    8. '  ' → logprob: -16.367250442504883
    9. ')y' → logprob: -16.367250442504883
    10. '    ' → logprob: -16.429750442504883

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6357322931289673
    2. '%' → logprob: -0.8857322931289673
    3. ' %' → logprob: -2.8857321739196777
    4. ')%' → logprob: -6.135732173919678
    5. ' )' → logprob: -9.885732650756836
    6. '),' → logprob: -13.010732650756836
    7. '%n' → logprob: -13.510732650756836
    8. ' ' → logprob: -13.760732650756836
    9. '%d' → logprob: -13.760732650756836
    10. '%i' → logprob: -13.885732650756836

Token 73: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759466886520386
    2. ' %' → logprob: -0.8259466886520386
    3. ')' → logprob: -12.200946807861328
    4. ')%' → logprob: -14.575946807861328
    5. ' ' → logprob: -14.950946807861328
    6. '%n' → logprob: -15.325946807861328
    7. '%d' → logprob: -15.450946807861328
    8. '%D' → logprob: -16.075946807861328
    9. '%i' → logprob: -16.075946807861328
    10. '%x' → logprob: -16.200946807861328

Token 74: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.038057442754507065
    2. ' MOD' → logprob: -3.288057327270508
    3. ' ' → logprob: -11.913057327270508
    4. '_MOD' → logprob: -12.663057327270508
    5. 'MO' → logprob: -12.663057327270508
    6. '.MOD' → logprob: -13.663057327270508
    7. 'M' → logprob: -14.663057327270508
    8. '998' → logprob: -14.788057327270508
    9. ' ' → logprob: -15.163057327270508
    10. ')' → logprob: -15.538057327270508

Token 75: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025242918636649847
    2. ')' → logprob: -6.002524375915527
    3. '),' → logprob: -10.877524375915527
    4. ' ))' → logprob: -11.502524375915527
    5. ')))' → logprob: -11.752524375915527
    6. ')),' → logprob: -12.127524375915527
    7. '))
' → logprob: -12.252524375915527
    8. '));' → logprob: -15.002524375915527
    9. ' ' → logprob: -15.127524375915527
    10. ',' → logprob: -15.377524375915527

Token 76: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.33247172832489014
    2. ')' → logprob: -2.2074718475341797
    3. 'inv' → logprob: -3.0824718475341797
    4. '#' → logprob: -3.5824718475341797
    5. 'inverse' → logprob: -3.7074718475341797
    6. ',' → logprob: -4.33247184753418
    7. 'factor' → logprob: -4.70747184753418
    8. ' 
' → logprob: -5.45747184753418
    9. 'def' → logprob: -5.83247184753418
    10. 'n' → logprob: -5.83247184753418

Token 77: ' complex' (ID: 8012)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.025803539901971817
    2. 'ifact' → logprob: -3.900803565979004
    3. 'def' → logprob: -6.275803565979004
    4. 'fact' → logprob: -7.150803565979004
    5. 'fin' → logprob: -7.400803565979004
    6. ' inv' → logprob: -7.650803565979004
    7. 'inverse' → logprob: -7.900803565979004
    8. 'if' → logprob: -8.025803565979004
    9. 'in' → logprob: -8.275803565979004
    10. 'inf' → logprob: -9.525803565979004

Token 78: ' modular' (ID: 61198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.344137966632843
    2. ' inv' → logprob: -2.5941379070281982
    3. '_inv' → logprob: -2.8441379070281982
    4. 'fact' → logprob: -3.2191379070281982
    5. 'def' → logprob: -3.5941379070281982
    6. 'ifact' → logprob: -3.8441379070281982
    7. 'inverse' → logprob: -4.094138145446777
    8. 'comb' → logprob: -4.844138145446777
    9. '_fact' → logprob: -4.969138145446777
    10. ' inverse' → logprob: -5.219138145446777

Token 79: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.6208022832870483
    2. '_inverse' → logprob: -1.2458022832870483
    3. ' inverse' → logprob: -1.8708022832870483
    4. 'inv' → logprob: -4.620802402496338
    5. '_inv' → logprob: -5.120802402496338
    6. '_factor' → logprob: -6.120802402496338
    7. 'factor' → logprob: -6.620802402496338
    8. ' invers' → logprob: -7.495802402496338
    9. ' factorial' → logprob: -7.870802402496338
    10. 'in' → logprob: -9.24580192565918

Token 80: ' table' (ID: 3293)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.9852882623672485
    2. 'fact' → logprob: -1.1102882623672485
    3. ' =' → logprob: -1.3602882623672485
    4. '_inv' → logprob: -4.610288143157959
    5. ' fact' → logprob: -4.610288143157959
    6. '=' → logprob: -5.360288143157959
    7. '_' → logprob: -5.610288143157959
    8. ',' → logprob: -5.610288143157959
    9. 'inv' → logprob: -5.735288143157959
    10. 's' → logprob: -6.985288143157959

Token 81: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9275373816490173
    2. 'fact' → logprob: -1.552537441253662
    3. 'inv' → logprob: -1.552537441253662
    4. ' ,' → logprob: -2.927537441253662
    5. ' fact' → logprob: -3.302537441253662
    6. 'inverse' → logprob: -3.427537441253662
    7. ' =' → logprob: -3.677537441253662
    8. '_inv' → logprob: -4.177537441253662
    9. '_inverse' → logprob: -5.302537441253662
    10. ' inv' → logprob: -5.427537441253662

Token 82: ' exploiting' (ID: 167137)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.049344729632139206
    2. ' inv' → logprob: -3.049344778060913
    3. 'ifact' → logprob: -7.549344539642334
    4. 'fact' → logprob: -9.674345016479492
    5. 'inverse' → logprob: -10.049345016479492
    6. ' fact' → logprob: -10.424345016479492
    7. ' ' → logprob: -10.924345016479492
    8. 'in' → logprob: -11.299345016479492
    9. 'fin' → logprob: -11.674345016479492
    10. '```' → logprob: -11.799345016479492

Token 83: ' Ferm' (ID: 156422)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.22289642691612244
    2. ' fact' → logprob: -1.7228964567184448
    3. 'the' → logprob: -4.347896575927734
    4. 'pow' → logprob: -5.222896575927734
    5. ' the' → logprob: -7.097896575927734
    6. ' pow' → logprob: -8.097896575927734
    7. '[' → logprob: -8.347896575927734
    8. 'Euler' → logprob: -8.847896575927734
    9. 'range' → logprob: -8.972896575927734
    10. 'mul' → logprob: -9.097896575927734

Token 84: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.954393079970032e-05
    2. 't' → logprob: -10.500049591064453
    3. 'ат' → logprob: -11.375049591064453
    4. 'ats' → logprob: -13.000049591064453
    5. 'a' → logprob: -13.500049591064453
    6. 'ât' → logprob: -14.125049591064453
    7. 'mat' → logprob: -14.750049591064453
    8. '	at' → logprob: -14.875049591064453
    9. ' at' → logprob: -15.000049591064453
    10. 'print' → logprob: -15.125049591064453

Token 85: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.27939629554748535
    2. 'pow' → logprob: -1.5293962955474854
    3. 'fac' → logprob: -5.029396057128906
    4. '(' → logprob: -5.279396057128906
    5. 'fact' → logprob: -5.529396057128906
    6. 'def' → logprob: -6.529396057128906
    7. 'inv' → logprob: -6.529396057128906
    8. 'p' → logprob: -7.029396057128906
    9. 'pr' → logprob: -7.529396057128906
    10. '’s' → logprob: -7.529396057128906

Token 86: ' Little' (ID: 20899)
  Prédit: 'little'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'little' → logprob: -0.01048740278929472
    2. 'Little' → logprob: -4.8854875564575195
    3. ' little' → logprob: -5.8854875564575195
    4. '```' → logprob: -10.26048755645752
    5. ' Little' → logprob: -10.51048755645752
    6. ''s' → logprob: -11.26048755645752
    7. 'last' → logprob: -11.63548755645752
    8. 'factor' → logprob: -12.63548755645752
    9. 'pow' → logprob: -13.63548755645752
    10. 'ittle' → logprob: -13.88548755645752

Token 87: ' The' (ID: 623)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2605709433555603
    2. ' theorem' → logprob: -1.635571002960205
    3. 'The' → logprob: -3.385571002960205
    4. ''s' → logprob: -7.885571002960205
    5. ' The' → logprob: -9.385570526123047
    6. ')' → logprob: -10.135570526123047
    7. '_the' → logprob: -10.385570526123047
    8. '```' → logprob: -10.635570526123047
    9. '[' → logprob: -11.010570526123047
    10. 'little' → logprob: -11.260570526123047

Token 88: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.0006834837258793414
    2. 'ore' → logprob: -8.625683784484863
    3. 'ory' → logprob: -8.625683784484863
    4. 'orm' → logprob: -9.750683784484863
    5. 'orum' → logprob: -10.000683784484863
    6. '```' → logprob: -10.000683784484863
    7. 'rem' → logprob: -10.125683784484863
    8. 'o' → logprob: -10.500683784484863
    9. 'orie' → logprob: -10.750683784484863
    10. 're' → logprob: -11.000683784484863

Token 89: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5869200229644775
    2. ',
' → logprob: -1.7119200229644775
    3. 'fact' → logprob: -1.8369200229644775
    4. '[' → logprob: -3.4619200229644775
    5. ')' → logprob: -3.8369200229644775
    6. ' fact' → logprob: -4.211919784545898
    7. ' ,' → logprob: -4.336919784545898
    8. '
' → logprob: -4.961919784545898
    9. '```' → logprob: -5.586919784545898
    10. '\n' → logprob: -6.211919784545898

Token 90: ' map' (ID: 4014)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.5217159986495972
    2. 'reduce' → logprob: -1.5217159986495972
    3. ' fact' → logprob: -1.7717159986495972
    4. ' reduce' → logprob: -2.0217161178588867
    5. ' pow' → logprob: -2.3967161178588867
    6. 'fact' → logprob: -3.0217161178588867
    7. ' lambda' → logprob: -3.8967161178588867
    8. ' accumulate' → logprob: -4.021716117858887
    9. ' reverse' → logprob: -4.521716117858887
    10. '[' → logprob: -4.646716117858887

Token 91: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7354390025138855
    2. '(' → logprob: -1.3604390621185303
    3. ',' → logprob: -1.7354390621185303
    4. '(lambda' → logprob: -3.1104390621185303
    5. ' fact' → logprob: -4.110438823699951
    6. ')' → logprob: -4.860438823699951
    7. '```' → logprob: -5.360438823699951
    8. 'factor' → logprob: -6.485438823699951
    9. 'def' → logprob: -6.610438823699951
    10. '(
' → logprob: -6.735438823699951

Token 92: 'fact' (ID: 53534)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.007499317172914743
    2. ' inv' → logprob: -5.0074992179870605
    3. 'ifact' → logprob: -7.3824992179870605
    4. 'fin' → logprob: -9.757499694824219
    5. 'inverse' → logprob: -10.257499694824219
    6. 'rev' → logprob: -11.007499694824219
    7. '```' → logprob: -11.007499694824219
    8. 'fact' → logprob: -11.757499694824219
    9. '_inv' → logprob: -11.882499694824219
    10. 'in' → logprob: -12.007499694824219

Token 93: 'inv' (ID: 31086)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.04590776562690735
    2. '_inverse' → logprob: -3.170907735824585
    3. ' =' → logprob: -7.045907974243164
    4. 'inv' → logprob: -7.420907974243164
    5. '_' → logprob: -7.420907974243164
    6. '=' → logprob: -7.545907974243164
    7. 'inverse' → logprob: -9.670907974243164
    8. ',' → logprob: -9.920907974243164
    9. '_INV' → logprob: -10.170907974243164
    10. '_in' → logprob: -10.670907974243164

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076085166074335575
    2. '=' → logprob: -4.882608413696289
    3. ' ' → logprob: -14.132608413696289
    4. ',' → logprob: -14.757608413696289
    5. ' =)' → logprob: -14.757608413696289
    6. 's' → logprob: -15.507608413696289
    7. ')' → logprob: -15.882608413696289
    8. '＝' → logprob: -16.13260841369629
    9. ' ,' → logprob: -16.63260841369629
    10. '_' → logprob: -17.00760841369629

Token 95: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05334653705358505
    2. ' list' → logprob: -3.053346633911133
    3. '[' → logprob: -6.428346633911133
    4. '[list' → logprob: -6.553346633911133
    5. ' [' → logprob: -6.928346633911133
    6. '(list' → logprob: -8.303346633911133
    7. 'lambda' → logprob: -8.803346633911133
    8. '(lambda' → logprob: -9.178346633911133
    9. 'map' → logprob: -9.303346633911133
    10. ' lambda' → logprob: -10.178346633911133

Token 96: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0381859689950943
    2. '(map' → logprob: -3.2881860733032227
    3. '(' → logprob: -9.163186073303223
    4. '(ac' → logprob: -10.788186073303223
    5. 'acc' → logprob: -11.038186073303223
    6. '(chain' → logprob: -13.288186073303223
    7. '	acc' → logprob: -15.538186073303223
    8. 'map' → logprob: -15.538186073303223
    9. '(
' → logprob: -15.663186073303223
    10. '(m' → logprob: -15.788186073303223

Token 97: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0005676874425262213
    2. '(pow' → logprob: -7.87556791305542
    3. '(' → logprob: -9.375567436218262
    4. 'lambda' → logprob: -9.500567436218262
    5. ')' → logprob: -11.125567436218262
    6. 'pow' → logprob: -12.000567436218262
    7. ' (' → logprob: -12.500567436218262
    8. '(
' → logprob: -13.500567436218262
    9. '(l' → logprob: -14.750567436218262
    10. '(f' → logprob: -15.250567436218262

Token 98: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.42505156993865967
    2. '(lambda' → logprob: -1.1750515699386597
    3. ' lambda' → logprob: -3.300051689147949
    4. 'pow' → logprob: -8.17505168914795
    5. '=lambda' → logprob: -9.30005168914795
    6. ' (' → logprob: -9.55005168914795
    7. ' ' → logprob: -9.92505168914795
    8. '(' → logprob: -10.30005168914795
    9. '   ' → logprob: -11.30005168914795
    10. ':' → logprob: -11.55005168914795

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04133095592260361
    2. ' :' → logprob: -3.2913310527801514
    3. 'lambda' → logprob: -6.166330814361572
    4. '=lambda' → logprob: -7.291330814361572
    5. 'pow' → logprob: -8.54133129119873
    6. ' lambda' → logprob: -8.91633129119873
    7. '(lambda' → logprob: -9.54133129119873
    8. ',' → logprob: -10.41633129119873
    9. ':return' → logprob: -11.16633129119873
    10. ' pow' → logprob: -11.41633129119873

Token 100: ' pow' (ID: 9779)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6247170567512512
    2. 'pow' → logprob: -0.8747170567512512
    3. ' lambda' → logprob: -3.4997169971466064
    4. ' pow' → logprob: -4.1247172355651855
    5. '(lambda' → logprob: -6.7497172355651855
    6. '(pow' → logprob: -10.749716758728027
    7. ' ' → logprob: -10.999716758728027
    8. '   ' → logprob: -11.374716758728027
    9. ')' → logprob: -12.249716758728027
    10. '=lambda' → logprob: -12.499716758728027

Token 101: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005443519912660122
    2. '(' → logprob: -5.255443572998047
    3. 'x' → logprob: -8.505443572998047
    4. ')' → logprob: -12.880443572998047
    5. '(
' → logprob: -13.130443572998047
    6. '```' → logprob: -14.255443572998047
    7. ')x' → logprob: -14.755443572998047
    8. ' (' → logprob: -14.755443572998047
    9. ',x' → logprob: -15.005443572998047
    10. ',' → logprob: -15.255443572998047

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014442270912695676
    2. ' ,' → logprob: -9.125144004821777
    3. ',
' → logprob: -10.750144004821777
    4. ',M' → logprob: -12.375144004821777
    5. ')' → logprob: -12.750144004821777
    6. '(' → logprob: -12.875144004821777
    7. 'MOD' → logprob: -13.125144004821777
    8. ',-' → logprob: -14.375144004821777
    9. ',f' → logprob: -15.500144004821777
    10. '(M' → logprob: -15.500144004821777

Token 103: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0033231498673558235
    2. ' MOD' → logprob: -5.878323078155518
    3. '998' → logprob: -7.628323078155518
    4. '_MOD' → logprob: -11.378323554992676
    5. ' ' → logprob: -11.753323554992676
    6. '.MOD' → logprob: -12.128323554992676
    7. '-' → logprob: -13.253323554992676
    8. '997' → logprob: -13.503323554992676
    9. '(M' → logprob: -14.503323554992676
    10. '(Mod' → logprob: -14.753323554992676

Token 104: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008045066497288644
    2. ' -' → logprob: -7.125804424285889
    3. '–' → logprob: -17.000804901123047
    4. ' ' → logprob: -17.375804901123047
    5. '−' → logprob: -17.375804901123047
    6. '```' → logprob: -17.500804901123047
    7. ' ' → logprob: -20.000804901123047
    8. '{-' → logprob: -20.125804901123047
    9. '()-' → logprob: -20.750804901123047
    10. '_MINUS' → logprob: -21.125804901123047

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. '-' → logprob: -12.250007629394531
    3. '```' → logprob: -13.812507629394531
    4. ' -' → logprob: -15.125007629394531
    5. '

' → logprob: -16.00000762939453
    6. '' → logprob: -16.00000762939453
    7. '3' → logprob: -16.18750762939453
    8. ' ' → logprob: -16.31250762939453
    9. '۲' → logprob: -16.31250762939453
    10. ')' → logprob: -16.37500762939453

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.56102097814437e-05
    2. ' ,' → logprob: -10.250045776367188
    3. ')' → logprob: -12.375045776367188
    4. ',f' → logprob: -12.750045776367188
    5. '),' → logprob: -13.375045776367188
    6. ' ' → logprob: -14.750045776367188
    7. 'fact' → logprob: -15.375045776367188
    8. '```' → logprob: -15.500045776367188
    9. ',
' → logprob: -15.875045776367188
    10. ',m' → logprob: -16.875045776367188

Token 107: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011908221058547497
    2. ' MOD' → logprob: -6.751190662384033
    3. ')' → logprob: -10.876191139221191
    4. '998' → logprob: -14.626191139221191
    5. ' ' → logprob: -15.001191139221191
    6. '_MOD' → logprob: -15.501191139221191
    7. '.MOD' → logprob: -15.751191139221191
    8. '))' → logprob: -16.126190185546875
    9. 'MO' → logprob: -16.376190185546875
    10. '   ' → logprob: -16.626190185546875

Token 108: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07025284320116043
    2. '),' → logprob: -2.6952528953552246
    3. ')' → logprob: -8.320252418518066
    4. ' ,' → logprob: -9.945252418518066
    5. ' ),' → logprob: -11.695252418518066
    6. ',f' → logprob: -11.820252418518066
    7. 'fact' → logprob: -12.570252418518066
    8. ' ' → logprob: -13.320252418518066
    9. ',),' → logprob: -13.695252418518066
    10. ')),' → logprob: -14.820252418518066

Token 109: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.35719481110572815
    2. 're' → logprob: -1.2321947813034058
    3. ' reversed' → logprob: -5.107194900512695
    4. ' fact' → logprob: -6.107194900512695
    5. '   ' → logprob: -9.107194900512695
    6. ' ' → logprob: -9.732194900512695
    7. '  ' → logprob: -9.732194900512695
    8. '(re' → logprob: -9.857194900512695
    9. 'reverse' → logprob: -9.982194900512695
    10. 'rev' → logprob: -10.357194900512695

Token 110: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.9385402993066236e-05
    2. ' ))' → logprob: -11.250019073486328
    3. '))
' → logprob: -12.500019073486328
    4. ')' → logprob: -13.250019073486328
    5. ')))' → logprob: -14.875019073486328
    6. '));' → logprob: -15.250019073486328
    7. '()))' → logprob: -16.500019073486328
    8. ')),' → logprob: -17.250019073486328
    9. ' ' → logprob: -17.500019073486328
    10. '),' → logprob: -17.750019073486328

Token 111: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24214737117290497
    2. '[' → logprob: -2.617147445678711
    3. '<|end|>' → logprob: -2.992147445678711
    4. '*' → logprob: -3.117147445678711
    5. '#' → logprob: -3.992147445678711
    6. '_' → logprob: -5.117147445678711
    7. '
' → logprob: -5.367147445678711
    8. 'fact' → logprob: -5.867147445678711
    9. '.' → logprob: -6.242147445678711
    10. '[
' → logprob: -6.367147445678711

Token 112: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2695943117141724
    2. 'inv' → logprob: -1.3945943117141724
    3. 'for' → logprob: -1.6445943117141724
    4. 'res' → logprob: -2.269594192504883
    5. 'dp' → logprob: -2.394594192504883
    6. 'comb' → logprob: -3.394594192504883
    7. 'ans' → logprob: -4.019594192504883
    8. 'result' → logprob: -5.394594192504883
    9. 'r' → logprob: -5.769594192504883
    10. 'answer' → logprob: -5.769594192504883

Token 113: 'orth' (ID: 2909)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23146572709083557
    2. 'der' → logprob: -1.8564656972885132
    3. 'used' → logprob: -4.356465816497803
    4. 'finished' → logprob: -4.856465816497803
    5. 'f' → logprob: -4.981465816497803
    6. 'fact' → logprob: -5.356465816497803
    7. 'factor' → logprob: -5.981465816497803
    8. 'fold' → logprob: -6.231465816497803
    9. 'visited' → logprob: -6.356465816497803
    10. 'it' → logprob: -6.606465816497803

Token 114: 'odox' (ID: 52131)
  Prédit: 'ogonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.04375985637307167
    2. 'odox' → logprob: -3.418759822845459
    3. 'er' → logprob: -5.168759822845459
    4. 'ogon' → logprob: -6.168759822845459
    5. '#' → logprob: -7.668759822845459
    6. '```' → logprob: -8.168760299682617
    7. 'ox' → logprob: -8.418760299682617
    8. 'ed' → logprob: -8.793760299682617
    9. 'orm' → logprob: -9.043760299682617
    10. 'd' → logprob: -9.168760299682617

Token 115: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02522854506969452
    2. 'dp' → logprob: -4.650228500366211
    3. ')' → logprob: -6.150228500366211
    4. '#' → logprob: -6.275228500366211
    5. 'comb' → logprob: -6.650228500366211
    6. ' def' → logprob: -6.775228500366211
    7. 'factor' → logprob: -6.900228500366211
    8. 'for' → logprob: -7.025228500366211
    9. 'com' → logprob: -7.275228500366211
    10. 'n' → logprob: -7.775228500366211

Token 116: 'Cr' (ID: 14225)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' using' (ID: 2360)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4623506963253021
    2. 'def' → logprob: -1.4623507261276245
    3. ' =' → logprob: -2.462350606918335
    4. '=lambda' → logprob: -2.962350606918335
    5. ' def' → logprob: -7.837350845336914
    6. ':' → logprob: -8.212350845336914
    7. ')' → logprob: -8.837350845336914
    8. '(' → logprob: -9.087350845336914
    9. 's' → logprob: -9.212350845336914
    10. '=
' → logprob: -9.587350845336914

Token 118: ' operator' (ID: 11019)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8183455467224121
    2. 'reduce' → logprob: -1.443345546722412
    3. 'fact' → logprob: -1.693345546722412
    4. 'def' → logprob: -2.318345546722412
    5. '(lambda' → logprob: -3.443345546722412
    6. 'factor' → logprob: -5.943345546722412
    7. 'chain' → logprob: -6.818345546722412
    8. '=lambda' → logprob: -6.943345546722412
    9. 'mul' → logprob: -7.068345546722412
    10. 'product' → logprob: -7.193345546722412

Token 119: '.mul' (ID: 106202)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.5006989240646362
    2. ' =' → logprob: -1.5006989240646362
    3. '=' → logprob: -1.8756989240646362
    4. ' mul' → logprob: -4.625699043273926
    5. 'def' → logprob: -6.250699043273926
    6. '_mul' → logprob: -6.250699043273926
    7. '(m' → logprob: -7.000699043273926
    8. ':' → logprob: -7.625699043273926
    9. '.mul' → logprob: -7.750699043273926
    10. 'm' → logprob: -8.250699043273926

Token 120: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018383588641881943
    2. ')' → logprob: -4.393383502960205
    3. 'n' → logprob: -6.143383502960205
    4. '(n' → logprob: -6.518383502960205
    5. '(
' → logprob: -7.393383502960205
    6. '(' → logprob: -8.143383979797363
    7. ',' → logprob: -8.518383979797363
    8. ' def' → logprob: -8.643383979797363
    9. ':' → logprob: -8.768383979797363
    10. 'from' → logprob: -9.393383979797363

Token 121: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.10433546453714371
    2. 'acc' → logprob: -2.4793355464935303
    3. 'fact' → logprob: -5.354335308074951
    4. 'lambda' → logprob: -5.479335308074951
    5. 'list' → logprob: -6.604335308074951
    6. ' accumulate' → logprob: -6.729335308074951
    7. 'fun' → logprob: -7.354335308074951
    8. 'map' → logprob: -7.479335308074951
    9. 'chain' → logprob: -7.479335308074951
    10. 'factor' → logprob: -8.10433578491211

Token 122: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018587788566946983
    2. ')' → logprob: -4.143587589263916
    3. '(n' → logprob: -6.768587589263916
    4. 'n' → logprob: -6.893587589263916
    5. ')n' → logprob: -8.643588066101074
    6. '(
' → logprob: -9.893588066101074
    7. ' def' → logprob: -10.643588066101074
    8. '```' → logprob: -11.018588066101074
    9. ')(' → logprob: -11.393588066101074
    10. '(lambda' → logprob: -11.393588066101074

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004777329973876476
    2. 'n' → logprob: -5.379777431488037
    3. 'lambda' → logprob: -10.004776954650879
    4. ')' → logprob: -10.379776954650879
    5. 'from' → logprob: -10.879776954650879
    6. 'comb' → logprob: -11.379776954650879
    7. '(n' → logprob: -11.504776954650879
    8. 'r' → logprob: -12.004776954650879
    9. ' def' → logprob: -12.379776954650879
    10. '(lambda' → logprob: -12.504776954650879

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18499696254730225
    2. ' n' → logprob: -1.9349969625473022
    3. 'comb' → logprob: -3.934997081756592
    4. ' comb' → logprob: -5.684997081756592
    5. 'choose' → logprob: -7.184997081756592
    6. 'com' → logprob: -8.184996604919434
    7. 'C' → logprob: -9.184996604919434
    8. ' choose' → logprob: -9.434996604919434
    9. 'cmb' → logprob: -9.434996604919434
    10. ' combination' → logprob: -10.184996604919434

Token 125: 'cr' (ID: 798)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.004105827305465937
    2. 'C' → logprob: -5.504106044769287
    3. '_C' → logprob: -11.754105567932129
    4. 'cr' → logprob: -11.879105567932129
    5. '_cr' → logprob: -12.254105567932129
    6. '_choose' → logprob: -13.504105567932129
    7. 'r' → logprob: -13.754105567932129
    8. ' Cr' → logprob: -13.754105567932129
    9. 'def' → logprob: -14.129105567932129
    10. '_c' → logprob: -14.129105567932129

Token 126: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014294667169451714
    2. '(' → logprob: -4.264294624328613
    3. '(k' → logprob: -9.389294624328613
    4. ' (' → logprob: -10.764294624328613
    5. '(a' → logprob: -11.764294624328613
    6. '(N' → logprob: -11.764294624328613
    7. '(
' → logprob: -12.514294624328613
    8. '(x' → logprob: -13.514294624328613
    9. '((' → logprob: -13.639294624328613
    10. 'n' → logprob: -13.639294624328613

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018887832993641496
    2. ' ,' → logprob: -9.125188827514648
    3. ',n' → logprob: -9.750188827514648
    4. ',k' → logprob: -10.875188827514648
    5. ',r' → logprob: -13.875188827514648
    6. ',
' → logprob: -14.750188827514648
    7. ',m' → logprob: -15.750188827514648
    8. 'n' → logprob: -15.875188827514648
    9. '_,' → logprob: -16.12518882751465
    10. ',K' → logprob: -16.12518882751465

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3507528603076935
    2. 'k' → logprob: -1.225752830505371
    3. ' r' → logprob: -6.350752830505371
    4. ' k' → logprob: -7.600752830505371
    5. '   ' → logprob: -11.100752830505371
    6. ' ' → logprob: -11.350752830505371
    7. 'n' → logprob: -11.600752830505371
    8. 'm' → logprob: -12.100752830505371
    9. 'def' → logprob: -12.475752830505371
    10. '```' → logprob: -12.475752830505371

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012415809032972902
    2. '):
' → logprob: -9.375123977661133
    3. ')' → logprob: -10.500123977661133
    4. ':' → logprob: -12.250123977661133
    5. ' ):' → logprob: -12.375123977661133
    6. ',' → logprob: -13.375123977661133
    7. '):
' → logprob: -14.750123977661133
    8. '}:' → logprob: -15.000123977661133
    9. ')：' → logprob: -16.750123977661133
    10. '**' → logprob: -16.875123977661133

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017256340943276882
    2. ':' → logprob: -7.376725673675537
    3. ' if' → logprob: -8.001725196838379
    4. ' return' → logprob: -8.251725196838379
    5. '):' → logprob: -8.876725196838379
    6. '<|end|>' → logprob: -9.251725196838379
    7. ')' → logprob: -9.626725196838379
    8. '    
' → logprob: -10.001725196838379
    9. '    ' → logprob: -10.501725196838379
    10. ':return' → logprob: -10.876725196838379

Token 131: ' try' (ID: 2075)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32934367656707764
    2. '   ' → logprob: -1.5793436765670776
    3. 'return' → logprob: -2.954343795776367
    4. ' if' → logprob: -3.829343795776367
    5. ' return' → logprob: -7.579343795776367
    6. 'r' → logprob: -9.954343795776367
    7. '	if' → logprob: -10.579343795776367
    8. ' ' → logprob: -10.829343795776367
    9. 'result' → logprob: -11.454343795776367
    10. '  ' → logprob: -12.204343795776367

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029640309512615204
    2. ':
' → logprob: -6.002964019775391
    3. ':return' → logprob: -8.37796401977539
    4. '       ' → logprob: -8.62796401977539
    5. '):' → logprob: -10.25296401977539
    6. ' :' → logprob: -10.75296401977539
    7. '   ' → logprob: -12.00296401977539
    8. '[' → logprob: -12.75296401977539
    9. ')' → logprob: -13.12796401977539
    10. '    ' → logprob: -13.25296401977539

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024794621858745813
    2. ' if' → logprob: -7.002479553222656
    3. ' return' → logprob: -7.502479553222656
    4. '   ' → logprob: -7.502479553222656
    5. 'return' → logprob: -8.252479553222656
    6. 'if' → logprob: -9.502479553222656
    7. '    ' → logprob: -10.002479553222656
    8. '     ' → logprob: -10.877479553222656
    9. '      ' → logprob: -11.752479553222656
    10. '<|end|>' → logprob: -12.002479553222656

Token 134: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5225661396980286
    2. 'return' (adapté à ' return') → logprob: -1.0225660800933838
    3. 'if' → logprob: -3.272566080093384
    4. ' return' → logprob: -4.897566318511963
    5. ' if' → logprob: -6.772566318511963
    6. '       ' → logprob: -7.397566318511963
    7. '    ' → logprob: -9.522565841674805
    8. ' ' → logprob: -10.897565841674805
    9. '  ' → logprob: -11.022565841674805
    10. 'res' → logprob: -11.522565841674805

Token 135: ' (' (ID: 350)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5517455339431763
    2. ' fact' → logprob: -1.5517455339431763
    3. ' reduce' → logprob: -2.4267454147338867
    4. ' (' → logprob: -2.9267454147338867
    5. 'reduce' → logprob: -2.9267454147338867
    6. '(f' → logprob: -4.551745414733887
    7. '(re' → logprob: -5.676745414733887
    8. 'factor' → logprob: -7.176745414733887
    9. ' ' → logprob: -7.926745414733887
    10. '   ' → logprob: -7.926745414733887

Token 136: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0069623468443751335
    2. 'reduce' → logprob: -5.131962299346924
    3. ' fact' → logprob: -7.256962299346924
    4. '   ' → logprob: -9.381962776184082
    5. 'factor' → logprob: -9.506962776184082
    6. ' reduce' → logprob: -9.756962776184082
    7. '(' → logprob: -11.006962776184082
    8. '    ' → logprob: -11.381962776184082
    9. 'facts' → logprob: -11.506962776184082
    10. ' ' → logprob: -11.819462776184082

Token 137: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2603901015827432e-05
    2. 'n' → logprob: -11.625022888183594
    3. 'fact' → logprob: -11.875022888183594
    4. '[r' → logprob: -12.750022888183594
    5. '[f' → logprob: -13.250022888183594
    6. '[' → logprob: -13.750022888183594
    7. '[m' → logprob: -15.750022888183594
    8. '[N' → logprob: -15.875022888183594
    9. '][' → logprob: -16.500022888183594
    10. 'Fact' → logprob: -16.750022888183594

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000639765290543437
    2. ']*' → logprob: -7.375639915466309
    3. ']
' → logprob: -12.500639915466309
    4. ' ]' → logprob: -12.625639915466309
    5. '-' → logprob: -12.875639915466309
    6. '   ' → logprob: -13.125639915466309
    7. ' -' → logprob: -14.625639915466309
    8. ' ' → logprob: -15.875639915466309
    9. '```' → logprob: -16.125638961791992
    10. '])' → logprob: -16.250638961791992

Token 139: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.632657527923584
    2. '*' → logprob: -0.757657527923584
    3. '   ' → logprob: -10.632658004760742
    4. ' ' → logprob: -11.382658004760742
    5. ' ' → logprob: -12.257658004760742
    6. '**' → logprob: -12.382658004760742
    7. ')' → logprob: -12.632658004760742
    8. ' *
' → logprob: -13.257658004760742
    9. '	' → logprob: -13.382658004760742
    10. '*
' → logprob: -13.507658004760742

Token 140: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.013197881169617176
    2. ' fact' → logprob: -4.513197898864746
    3. '(f' → logprob: -6.263197898864746
    4. ' (' → logprob: -9.513197898864746
    5. '_fact' → logprob: -10.013197898864746
    6. 'factor' → logprob: -10.513197898864746
    7. '((' → logprob: -10.888197898864746
    8. '.fact' → logprob: -11.013197898864746
    9. '   ' → logprob: -11.513197898864746
    10. 'Fact' → logprob: -11.638197898864746

Token 141: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.304016228066757e-05
    2. '[r' → logprob: -10.125082969665527
    3. '[n' → logprob: -10.500082969665527
    4. 'fact' → logprob: -11.750082969665527
    5. '_inv' → logprob: -12.875082969665527
    6. '[' → logprob: -13.250082969665527
    7. '   ' → logprob: -13.750082969665527
    8. '```' → logprob: -14.750082969665527
    9. '[f' → logprob: -15.000082969665527
    10. '[N' → logprob: -15.250082969665527

Token 142: '[r' (ID: 33265)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.38694480061531067
    2. '[r' → logprob: -1.1369447708129883
    3. '[' → logprob: -10.261944770812988
    4. 'r' → logprob: -11.011944770812988
    5. '[m' → logprob: -12.261944770812988
    6. '[
' → logprob: -12.761944770812988
    7. 'n' → logprob: -12.886944770812988
    8. '[N' → logprob: -13.011944770812988
    9. '[K' → logprob: -13.136944770812988
    10. '[f' → logprob: -13.511944770812988

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006011271849274635
    2. '])' → logprob: -5.131011486053467
    3. ']%' → logprob: -10.381011009216309
    4. '[n' → logprob: -11.256011009216309
    5. ']*' → logprob: -11.506011009216309
    6. ' ]' → logprob: -11.756011009216309
    7. '[' → logprob: -12.256011009216309
    8. '   ' → logprob: -13.006011009216309
    9. ')' → logprob: -13.131011009216309
    10. '']' → logprob: -13.256011009216309

Token 144: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19547350704669952
    2. '*' → logprob: -2.0704734325408936
    3. ')' → logprob: -3.0704734325408936
    4. '   ' → logprob: -6.070473670959473
    5. ']' → logprob: -6.945473670959473
    6. ' ' → logprob: -7.070473670959473
    7. '[' → logprob: -8.695473670959473
    8. '<|end|>' → logprob: -8.945473670959473
    9. ')*' → logprob: -9.320473670959473
    10. '  ' → logprob: -9.820473670959473

Token 145: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.023254098370671272
    2. ' fact' → logprob: -3.773254156112671
    3. '   ' → logprob: -12.14825439453125
    4. '.fact' → logprob: -13.64825439453125
    5. '_fact' → logprob: -14.39825439453125
    6. ' ' → logprob: -15.27325439453125
    7. '
' → logprob: -15.39825439453125
    8. '(' → logprob: -15.52325439453125
    9. '  ' → logprob: -15.89825439453125
    10. 'facts' → logprob: -16.14825439453125

Token 146: 'inv' (ID: 31086)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.20435552299022675
    2. 'inv' → logprob: -1.7043554782867432
    3. '[' → logprob: -6.579355716705322
    4. '[N' → logprob: -6.954355716705322
    5. 'n' → logprob: -8.329355239868164
    6. '   ' → logprob: -8.829355239868164
    7. ' [' → logprob: -10.579355239868164
    8. 'in' → logprob: -10.579355239868164
    9. '[-' → logprob: -10.704355239868164
    10. '```' → logprob: -10.704355239868164

Token 147: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.8444881536415778e-05
    2. '[' → logprob: -11.000028610229492
    3. 'n' → logprob: -12.250028610229492
    4. '[r' → logprob: -12.875028610229492
    5. '[
' → logprob: -13.625028610229492
    6. ']' → logprob: -13.750028610229492
    7. '(n' → logprob: -14.875028610229492
    8. '][' → logprob: -14.875028610229492
    9. '[N' → logprob: -14.875028610229492
    10. ' [' → logprob: -14.875028610229492

Token 148: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.3519611656665802
    2. '-' → logprob: -1.6019611358642578
    3. ' -' → logprob: -2.351961135864258
    4. '-R' → logprob: -12.601961135864258
    5. '-ra' → logprob: -13.351961135864258
    6. '-re' → logprob: -14.351961135864258
    7. '-risk' → logprob: -14.476961135864258
    8. '-k' → logprob: -14.476961135864258
    9. '-m' → logprob: -14.601961135864258
    10. 'r' → logprob: -15.101961135864258

Token 149: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020377879263833165
    2. ' r' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. ']' → logprob: -16.62520408630371
    5. ' ' → logprob: -17.00020408630371
    6. '  ' → logprob: -18.00020408630371
    7. ')' → logprob: -18.75020408630371
    8. '	r' → logprob: -18.87520408630371
    9. '<|end|>' → logprob: -19.50020408630371
    10. '<|end|>' → logprob: -19.62520408630371

Token 150: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00018518301658332348
    2. ']' → logprob: -8.750185012817383
    3. ' ])' → logprob: -11.000185012817383
    4. ')' → logprob: -12.500185012817383
    5. '})' → logprob: -13.500185012817383
    6. ''])' → logprob: -13.750185012817383
    7. ']%' → logprob: -13.875185012817383
    8. '   ' → logprob: -14.000185012817383
    9. '])
' → logprob: -14.750185012817383
    10. '))' → logprob: -15.000185012817383

Token 151: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5332493185997009
    2. ' %' → logprob: -1.1582493782043457
    3. ')' → logprob: -2.5332493782043457
    4. '%n' → logprob: -4.908249378204346
    5. ')%' → logprob: -5.033249378204346
    6. ']' → logprob: -5.658249378204346
    7. '   ' → logprob: -6.908249378204346
    8. '[n' → logprob: -7.658249378204346
    9. ']%' → logprob: -7.908249378204346
    10. ' )' → logprob: -9.283248901367188

Token 152: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007099286303855479
    2. ' MOD' → logprob: -7.2507100105285645
    3. '_MOD' → logprob: -18.250709533691406
    4. '.MOD' → logprob: -19.500709533691406
    5. '998' → logprob: -21.125709533691406
    6. ' ' → logprob: -21.375709533691406
    7. 'MO' → logprob: -22.125709533691406
    8. 'M' → logprob: -22.375709533691406
    9. '```' → logprob: -22.875709533691406
    10. 'MODULE' → logprob: -23.125709533691406

Token 153: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06102629378437996
    2. '<|end|>' → logprob: -3.8110263347625732
    3. ')' → logprob: -4.061026096343994
    4. 'except' → logprob: -4.436026096343994
    5. ' except' → logprob: -5.561026096343994
    6. '	except' → logprob: -5.686026096343994
    7. '<|end|>' → logprob: -7.686026096343994
    8. '
' → logprob: -9.936026573181152
    9. '	return' → logprob: -10.936026573181152
    10. '  ' → logprob: -11.061026573181152

Token 154: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40094906091690063
    2. '0' → logprob: -1.5259490013122559
    3. ' r' → logprob: -2.275949001312256
    4. ' ' → logprob: -4.775949001312256
    5. 'n' → logprob: -7.150949001312256
    6. '(r' → logprob: -7.775949001312256
    7. ' n' → logprob: -8.275949478149414
    8. ' (' → logprob: -9.150949478149414
    9. '(' → logprob: -9.275949478149414
    10. '(n' → logprob: -9.775949478149414

Token 155: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.043030474334955215
    2. ' >=' → logprob: -3.1680305004119873
    3. '>' → logprob: -11.418030738830566
    4. ' ' → logprob: -11.918030738830566
    5. ']>=' → logprob: -11.918030738830566
    6. 'and' → logprob: -13.418030738830566
    7. ')>=' → logprob: -13.418030738830566
    8. '≥' → logprob: -13.668030738830566
    9. '<|end|>' → logprob: -14.418030738830566
    10. ' ' → logprob: -14.918030738830566

Token 156: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013077055104076862
    2. ' r' → logprob: -4.388077259063721
    3. '0' → logprob: -7.513077259063721
    4. ' ' → logprob: -10.763076782226562
    5. '	r' → logprob: -16.638076782226562
    6. '1' → logprob: -17.388076782226562
    7. '<|end|>' → logprob: -18.013076782226562
    8. 'n' → logprob: -18.388076782226562
    9. '  ' → logprob: -18.825576782226562
    10. '   ' → logprob: -18.825576782226562

Token 157: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004017137107439339
    2. '0' → logprob: -8.000401496887207
    3. ' r' → logprob: -9.625401496887207
    4. ' ' → logprob: -15.500401496887207
    5. '1' → logprob: -18.875402450561523
    6. '	r' → logprob: -18.875402450561523
    7. 'K' → logprob: -19.125402450561523
    8. 'n' → logprob: -19.375402450561523
    9. 'р' → logprob: -19.812902450561523
    10. '(r' → logprob: -19.875402450561523

Token 158: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01937076635658741
    2. 'and' → logprob: -4.1443705558776855
    3. ' else' → logprob: -5.7693705558776855
    4. 'else' → logprob: -8.644371032714844
    5. '    ' → logprob: -10.769371032714844
    6. ' ' → logprob: -11.894371032714844
    7. '        ' → logprob: -12.644371032714844
    8. '   ' → logprob: -14.019371032714844
    9. '  ' → logprob: -14.894371032714844
    10. '       ' → logprob: -15.269371032714844

Token 159: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016058653593063354
    2. ' r' → logprob: -4.141058444976807
    3. 'n' → logprob: -11.141058921813965
    4. 'K' → logprob: -12.641058921813965
    5. ' ' → logprob: -13.016058921813965
    6. '<|end|>' → logprob: -14.016058921813965
    7. 'N' → logprob: -14.266058921813965
    8. ' n' → logprob: -14.391058921813965
    9. '(r' → logprob: -14.891058921813965
    10. ' K' → logprob: -15.516058921813965

Token 160: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2823643088340759
    2. 'and' → logprob: -1.5323643684387207
    3. '<=' → logprob: -4.032364368438721
    4. ' <=' → logprob: -4.407364368438721
    5. ' ' → logprob: -10.407363891601562
    6. '<|end|>' → logprob: -12.282363891601562
    7. ' <' → logprob: -12.407363891601562
    8. '0' → logprob: -13.032363891601562
    9. '<' → logprob: -13.032363891601562
    10. '==' → logprob: -13.282363891601562

Token 161: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001990970689803362
    2. ' n' → logprob: -6.501990795135498
    3. 'r' → logprob: -7.626990795135498
    4. ' r' → logprob: -13.876991271972656
    5. ' ' → logprob: -15.876991271972656
    6. '	n' → logprob: -16.001991271972656
    7. '<|end|>' → logprob: -16.751991271972656
    8. '```' → logprob: -17.376991271972656
    9. ')n' → logprob: -17.626991271972656
    10. 'K' → logprob: -18.376991271972656

Token 162: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16132868826389313
    2. 'else' → logprob: -1.911328673362732
    3. ' and' → logprob: -7.9113287925720215
    4. '<|end|>' → logprob: -8.161328315734863
    5. '	else' → logprob: -8.661328315734863
    6. '   ' → logprob: -8.911328315734863
    7. ')' → logprob: -9.911328315734863
    8. 'and' → logprob: -10.161328315734863
    9. '<|end|>' → logprob: -11.286328315734863
    10. ']' → logprob: -11.661328315734863

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005244191270321608
    2. ' ' → logprob: -5.255244255065918
    3. '   ' → logprob: -11.755244255065918
    4. '  ' → logprob: -14.067744255065918
    5. '1' → logprob: -14.442744255065918
    6. ' ' → logprob: -15.005244255065918
    7. 'None' → logprob: -16.0052433013916
    8. '    ' → logprob: -16.1302433013916
    9. '	' → logprob: -16.6927433013916
    10. '       ' → logprob: -16.8802433013916

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011748670367524028
    2. ' ' → logprob: -6.7511749267578125
    3. '   ' → logprob: -13.501174926757812
    4. '1' → logprob: -14.001174926757812
    5. 'None' → logprob: -14.001174926757812
    6. 'False' → logprob: -15.313674926757812
    7. '  ' → logprob: -15.376174926757812
    8. '(' → logprob: -15.563674926757812
    9. ' None' → logprob: -16.313674926757812
    10. '-' → logprob: -16.313674926757812

Token 165: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.586904764175415
    2. '   ' → logprob: -0.961904764175415
    3. 'except' → logprob: -3.086904764175415
    4. ' except' → logprob: -4.461904525756836
    5. '<|end|>' → logprob: -6.086904525756836
    6. '	except' → logprob: -6.461904525756836
    7. ')
' → logprob: -9.211904525756836
    8. ' else' → logprob: -9.461904525756836
    9. '
' → logprob: -9.586904525756836
    10. ']' → logprob: -9.711904525756836

Token 166: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01874995045363903
    2. '   ' → logprob: -4.393749713897705
    3. '<|end|>' → logprob: -6.018749713897705
    4. 'except' → logprob: -6.268749713897705
    5. ' except' → logprob: -7.518749713897705
    6. '
' → logprob: -7.643749713897705
    7. 'else' → logprob: -9.018750190734863
    8. ')
' → logprob: -9.518750190734863
    9. ' else' → logprob: -9.643750190734863
    10. 'n' → logprob: -9.643750190734863

Token 167: ' except' (ID: 6384)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060046106576919556
    2. '<|end|>' → logprob: -2.9350461959838867
    3. ':' → logprob: -5.560046195983887
    4. ':return' → logprob: -8.310046195983887
    5. ']' → logprob: -8.685046195983887
    6. '
' → logprob: -8.935046195983887
    7. '}' → logprob: -8.935046195983887
    8. '):' → logprob: -9.435046195983887
    9. '<|end|>' → logprob: -9.560046195983887
    10. ' else' → logprob: -9.935046195983887

Token 168: ':
' (ID: 734)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.07961133867502213
    2. '(Index' → logprob: -2.579611301422119
    3. ' Index' → logprob: -7.579611301422119
    4. '(' → logprob: -9.079611778259277
    5. ':' → logprob: -10.204611778259277
    6. '[Index' → logprob: -10.954611778259277
    7. '(Type' → logprob: -11.079611778259277
    8. 'Type' → logprob: -11.204611778259277
    9. '(Exception' → logprob: -12.454611778259277
    10. 'Exception' → logprob: -12.829611778259277

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045040063560009
    2. ' return' → logprob: -3.6700401306152344
    3. '   ' → logprob: -4.420040130615234
    4. '0' → logprob: -5.545040130615234
    5. 'return' → logprob: -6.045040130615234
    6. '	return' → logprob: -9.795040130615234
    7. '    ' → logprob: -9.920040130615234
    8. '	' → logprob: -10.045040130615234
    9. ':return' → logprob: -10.670040130615234
    10. ' ' → logprob: -10.795040130615234

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08423873037099838
    2. '0' → logprob: -2.8342387676239014
    3. ' return' → logprob: -3.8342387676239014
    4. '   ' → logprob: -7.834238529205322
    5. '       ' → logprob: -12.95923900604248
    6. ' ' → logprob: -12.95923900604248
    7. '1' → logprob: -13.70923900604248
    8. '
' → logprob: -13.95923900604248
    9. '    ' → logprob: -14.20923900604248
    10. 'pass' → logprob: -14.33423900604248

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542588084936142
    2. ' ' → logprob: -3.895542621612549
    3. '   ' → logprob: -15.64554214477539
    4. ' ' → logprob: -16.27054214477539
    5. '  ' → logprob: -16.33304214477539
    6. '1' → logprob: -17.02054214477539
    7. '000' → logprob: -17.14554214477539
    8. '(' → logprob: -17.52054214477539
    9. '۰' → logprob: -17.52054214477539
    10. '00' → logprob: -17.70804214477539

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'None' → logprob: -16.500003814697266
    4. '000' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '1' → logprob: -18.750003814697266
    7. 'int' → logprob: -18.875003814697266
    8. '(' → logprob: -19.125003814697266
    9. '۰' → logprob: -19.125003814697266
    10. '00' → logprob: -19.187503814697266

Token 173: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0742494985461235
    2. '
' → logprob: -3.824249505996704
    3. '<|end|>' → logprob: -3.949249505996704
    4. '(' → logprob: -4.324249267578125
    5. ':' → logprob: -4.449249267578125
    6. '#' → logprob: -7.074249267578125
    7. '\n' → logprob: -7.199249267578125
    8. '(n' → logprob: -7.449249267578125
    9. 'newline' → logprob: -7.449249267578125
    10. '(
' → logprob: -7.824249267578125

Token 174: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6559820771217346
    2. 'result' → logprob: -1.6559820175170898
    3. 'res' → logprob: -2.53098201751709
    4. 'def' → logprob: -3.28098201751709
    5. 'n' → logprob: -3.65598201751709
    6. '#' → logprob: -3.78098201751709
    7. ')' → logprob: -3.90598201751709
    8. 'print' → logprob: -4.40598201751709
    9. 'answer' → logprob: -4.65598201751709
    10. 'r' → logprob: -4.78098201751709

Token 175: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8179089426994324
    2. 'for' → logprob: -1.1929090023040771
    3. 'result' → logprob: -2.317909002304077
    4. 'ans' → logprob: -2.567909002304077
    5. 'res' → logprob: -3.317909002304077
    6. 'total' → logprob: -4.067908763885498
    7. 'results' → logprob: -4.942908763885498
    8. 'answer' → logprob: -5.192908763885498
    9. 'def' → logprob: -5.692908763885498
    10. 'answers' → logprob: -5.692908763885498

Token 176: 'Hr' (ID: 106096)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.23160389065742493
    2. 'ext' → logprob: -2.1066038608551025
    3. 'def' → logprob: -3.2316038608551025
    4. '=' → logprob: -4.106604099273682
    5. ' =' → logprob: -4.606604099273682
    6. 'Cr' → logprob: -5.856604099273682
    7. 'ex' → logprob: -6.231604099273682
    8. '#' → logprob: -6.731604099273682
    9. 'xt' → logprob: -6.794104099273682
    10. 'r' → logprob: -6.856604099273682

Token 177: ' via' (ID: 4493)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033318297937512398
    2. '=' → logprob: -6.253331661224365
    3. ' =' → logprob: -7.253331661224365
    4. ' def' → logprob: -7.378331661224365
    5. '=lambda' → logprob: -10.628332138061523
    6. '(n' → logprob: -10.753332138061523
    7. '(' → logprob: -12.253332138061523
    8. '
' → logprob: -12.628332138061523
    9. '=
' → logprob: -12.878332138061523
    10. ':' → logprob: -13.003332138061523

Token 178: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06957010924816132
    2. ' def' → logprob: -3.5695700645446777
    3. 'lambda' → logprob: -3.6945700645446777
    4. '(lambda' → logprob: -4.819570064544678
    5. ' lambda' → logprob: -5.319570064544678
    6. 'n' → logprob: -7.444570064544678
    7. '(n' → logprob: -7.819570064544678
    8. '=lambda' → logprob: -9.194570541381836
    9. ' n' → logprob: -10.194570541381836
    10. 'd' → logprob: -11.569570541381836

Token 179: 'Cr' (ID: 14225)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.22569118440151215
    2. 'def' → logprob: -1.6006911993026733
    3. 'Cr' → logprob: -9.100690841674805
    4. 'CR' → logprob: -9.225690841674805
    5. '```' → logprob: -10.725690841674805
    6. ' def' → logprob: -10.975690841674805
    7. 'return' → logprob: -11.100690841674805
    8. 'c' → logprob: -12.600690841674805
    9. '(cr' → logprob: -13.350690841674805
    10. 'r' → logprob: -13.350690841674805

Token 180: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.500006675720215
    3. '(' → logprob: -14.250006675720215
    4. '(n' → logprob: -14.375006675720215
    5. '```' → logprob: -14.750006675720215
    6. '(
' → logprob: -15.125006675720215
    7. ':def' → logprob: -15.500006675720215
    8. '
' → logprob: -16.0000057220459
    9. '(def' → logprob: -16.2500057220459
    10. ':' → logprob: -16.7500057220459

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. 'n' → logprob: -15.75
    3. ' def' → logprob: -16.125
    4. '```' → logprob: -17.25
    5. 'ndef' → logprob: -18.125
    6. '#' → logprob: -19.625
    7. '(n' → logprob: -20.375
    8. 'd' → logprob: -20.75
    9. '**' → logprob: -21.0
    10. ':def' → logprob: -21.125

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024710912257432938
    2. 'nh' → logprob: -3.7747108936309814
    3. 'h' → logprob: -7.7747111320495605
    4. 'nr' → logprob: -8.149710655212402
    5. ' n' → logprob: -8.649710655212402
    6. ' nh' → logprob: -8.774710655212402
    7. 'comb' → logprob: -8.899710655212402
    8. 'nth' → logprob: -9.774710655212402
    9. 'with' → logprob: -11.024710655212402
    10. 'mult' → logprob: -11.024710655212402

Token 183: 'hr' (ID: 2012)
  Prédit: 'hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.028059178963303566
    2. 'cr' → logprob: -4.028059005737305
    3. 'Hr' → logprob: -4.778059005737305
    4. 'h' → logprob: -7.278059005737305
    5. 'kr' → logprob: -8.778059005737305
    6. '```' → logprob: -9.403059005737305
    7. '

' → logprob: -9.528059005737305
    8. 'pr' → logprob: -9.778059005737305
    9. 'Cr' → logprob: -10.653059005737305
    10. '#' → logprob: -10.653059005737305

Token 184: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.024604277219623e-05
    2. '(k' → logprob: -10.375040054321289
    3. '(' → logprob: -12.125040054321289
    4. '(K' → logprob: -13.250040054321289
    5. '(r' → logprob: -14.250040054321289
    6. '(N' → logprob: -14.500040054321289
    7. ' (' → logprob: -14.875040054321289
    8. 'def' → logprob: -15.750040054321289
    9. 'n' → logprob: -15.875040054321289
    10. '(a' → logprob: -17.00004005432129

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029643885791301727
    2. ',r' → logprob: -5.877964496612549
    3. ',k' → logprob: -9.87796401977539
    4. 'r' → logprob: -9.87796401977539
    5. ' ,' → logprob: -10.87796401977539
    6. ',n' → logprob: -11.00296401977539
    7. 'n' → logprob: -12.00296401977539
    8. ',K' → logprob: -12.50296401977539
    9. '(r' → logprob: -12.75296401977539
    10. ' r' → logprob: -13.00296401977539

Token 186: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16732457280158997
    2. 'k' → logprob: -1.9173245429992676
    3. 'K' → logprob: -5.667324542999268
    4. ' r' → logprob: -5.792324542999268
    5. ' k' → logprob: -7.917324542999268
    6. 'n' → logprob: -8.667325019836426
    7. ' K' → logprob: -10.542325019836426
    8. ' n' → logprob: -13.167325019836426
    9. 'm' → logprob: -14.792325019836426
    10. 'def' → logprob: -14.917325019836426

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008133203955367208
    2. '):
' → logprob: -7.1258134841918945
    3. '):
' → logprob: -12.500813484191895
    4. ')' → logprob: -12.875813484191895
    5. ' ):' → logprob: -13.500813484191895
    6. ':' → logprob: -14.250813484191895
    7. '   ' → logprob: -15.375813484191895
    8. '):

' → logprob: -16.375812530517578
    9. '}:' → logprob: -16.875812530517578
    10. ']:' → logprob: -17.625812530517578

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015692472457885742
    2. ' return' → logprob: -4.390692710876465
    3. 'return' → logprob: -5.765692710876465
    4. ':return' → logprob: -11.265692710876465
    5. ':' → logprob: -11.515692710876465
    6. '	return' → logprob: -11.765692710876465
    7. ':
' → logprob: -12.640692710876465
    8. '   ' → logprob: -13.140692710876465
    9. 'n' → logprob: -13.265692710876465
    10. ' ' → logprob: -13.390692710876465

Token 189: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24181589484214783
    2. ' return' → logprob: -1.6168159246444702
    3. '   ' → logprob: -4.24181604385376
    4. 'n' → logprob: -6.49181604385376
    5. ' n' → logprob: -8.241815567016602
    6. '	return' → logprob: -10.116815567016602
    7. 'def' → logprob: -10.116815567016602
    8. '```' → logprob: -11.366815567016602
    9. '
' → logprob: -11.991815567016602
    10. ' ' → logprob: -12.616815567016602

Token 190: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013458272442221642
    2. ' n' → logprob: -6.626345634460449
    3. '(n' → logprob: -11.37634563446045
    4. '   ' → logprob: -12.75134563446045
    5. '(' → logprob: -13.50134563446045
    6. '0' → logprob: -14.00134563446045
    7. '
' → logprob: -14.12634563446045
    8. ' (' → logprob: -14.50134563446045
    9. 'int' → logprob: -14.87634563446045
    10. 'return' → logprob: -15.25134563446045

Token 191: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007287554908543825
    2. ' n' → logprob: -7.250728607177734
    3. '(n' → logprob: -11.250728607177734
    4. '0' → logprob: -13.125728607177734
    5. '   ' → logprob: -13.875728607177734
    6. '(' → logprob: -13.875728607177734
    7. ' (' → logprob: -15.500728607177734
    8. '`' → logprob: -15.563228607177734
    9. '```' → logprob: -15.625728607177734
    10. '
' → logprob: -15.625728607177734

Token 192: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7113357186317444
    2. 'n' → logprob: -0.9613357186317444
    3. ' n' → logprob: -2.4613356590270996
    4. 'if' → logprob: -3.8363356590270996
    5. '(n' → logprob: -5.0863356590271
    6. ' *' → logprob: -5.3363356590271
    7. ')' → logprob: -5.9613356590271
    8. ',' → logprob: -6.8363356590271
    9. 'def' → logprob: -7.0863356590271
    10. '*' → logprob: -7.2113356590271

Token 193: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.028174154460430145
    2. ' r' → logprob: -4.028173923492432
    3. 'n' → logprob: -4.653173923492432
    4. ' n' → logprob: -7.778173923492432
    5. '(r' → logprob: -11.65317440032959
    6. '(n' → logprob: -11.90317440032959
    7. 'not' → logprob: -12.40317440032959
    8. '0' → logprob: -13.27817440032959
    9. ' not' → logprob: -13.52817440032959
    10. ' (' → logprob: -15.46567440032959

Token 194: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02358505316078663
    2. ' ==' → logprob: -4.273584842681885
    3. 'and' → logprob: -5.273584842681885
    4. '<' → logprob: -6.648584842681885
    5. '<=' → logprob: -7.023584842681885
    6. ' and' → logprob: -7.023584842681885
    7. '=' → logprob: -7.273584842681885
    8. '-' → logprob: -9.023585319519043
    9. '<|end|>' → logprob: -9.523585319519043
    10. 'r' → logprob: -9.648585319519043

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027480217977426946
    2. ' ' → logprob: -8.625274658203125
    3. '-' → logprob: -10.125274658203125
    4. '1' → logprob: -10.250274658203125
    5. 'r' → logprob: -11.375274658203125
    6. 'n' → logprob: -11.875274658203125
    7. '<|end|>' → logprob: -15.250274658203125
    8. 'K' → logprob: -15.500274658203125
    9. ' -' → logprob: -15.937774658203125
    10. '<' → logprob: -16.500274658203125

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006280702538788319
    2. '-' → logprob: -5.131280899047852
    3. 'r' → logprob: -8.506280899047852
    4. '1' → logprob: -9.256280899047852
    5. 'n' → logprob: -10.631280899047852
    6. 'and' → logprob: -11.943780899047852
    7. ' ' → logprob: -12.318780899047852
    8. 'K' → logprob: -12.443780899047852
    9. '2' → logprob: -12.881280899047852
    10. ' -' → logprob: -13.256280899047852

Token 197: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.254288911819458
    2. ' and' → logprob: -1.504288911819458
    3. 'else' → logprob: -6.629288673400879
    4. ' else' → logprob: -6.879288673400879
    5. '   ' → logprob: -13.254288673400879
    6. '    ' → logprob: -13.379288673400879
    7. 'elif' → logprob: -13.504288673400879
    8. ' or' → logprob: -14.004288673400879
    9. ' ' → logprob: -14.629288673400879
    10. '  ' → logprob: -15.254288673400879

Token 198: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002116238931193948
    2. ' r' → logprob: -6.3771162033081055
    3. '0' → logprob: -7.8771162033081055
    4. 'n' → logprob: -10.502116203308105
    5. '(r' → logprob: -13.002116203308105
    6. ' ' → logprob: -13.127116203308105
    7. '1' → logprob: -13.877116203308105
    8. 'not' → logprob: -15.002116203308105
    9. ' n' → logprob: -15.502116203308105
    10. '_r' → logprob: -15.814616203308105

Token 199: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05573772266507149
    2. ' ==' → logprob: -2.9307377338409424
    3. '=' → logprob: -8.055737495422363
    4. '0' → logprob: -8.305737495422363
    5. '<=' → logprob: -8.680737495422363
    6. ' ' → logprob: -9.430737495422363
    7. '<|end|>' → logprob: -11.305737495422363
    8. ' <=' → logprob: -11.555737495422363
    9. ' ' → logprob: -13.055737495422363
    10. ')==' → logprob: -13.055737495422363

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024781543761491776
    2. ' ' → logprob: -6.002478122711182
    3. 'r' → logprob: -13.12747859954834
    4. '۰' → logprob: -15.87747859954834
    5. '<|end|>' → logprob: -15.93997859954834
    6. '1' → logprob: -16.314977645874023
    7. 'n' → logprob: -17.002477645874023
    8. ' r' → logprob: -17.377477645874023
    9. '  ' → logprob: -17.502477645874023
    10. '   ' → logprob: -17.689977645874023

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001454955490771681
    2. ' ' → logprob: -8.87514591217041
    3. 'r' → logprob: -12.50014591217041
    4. '<|end|>' → logprob: -14.25014591217041
    5. '۰' → logprob: -15.68764591217041
    6. '   ' → logprob: -16.062644958496094
    7. ')' → logprob: -16.125144958496094
    8. '<|end|>' → logprob: -16.187644958496094
    9. '1' → logprob: -16.312644958496094
    10. 'n' → logprob: -16.500144958496094

Token 202: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10094230622053146
    2. 'else' → logprob: -2.350942373275757
    3. '   ' → logprob: -7.225942134857178
    4. '
' → logprob: -12.850942611694336
    5. '  ' → logprob: -13.225942611694336
    6. '	else' → logprob: -13.225942611694336
    7. ' ' → logprob: -14.600942611694336
    8. '    
' → logprob: -14.850942611694336
    9. '    ' → logprob: -15.100942611694336
    10. '0' → logprob: -15.350942611694336

Token 203: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016079887747764587
    2. ' n' → logprob: -4.141079902648926
    3. '(n' → logprob: -10.891079902648926
    4. '0' → logprob: -11.391079902648926
    5. '   ' → logprob: -12.016079902648926
    6. '
' → logprob: -13.641079902648926
    7. '(' → logprob: -13.641079902648926
    8. ' (' → logprob: -13.766079902648926
    9. ' ' → logprob: -13.891079902648926
    10. '	n' → logprob: -14.141079902648926

Token 204: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0023430653382092714
    2. 'Cr' → logprob: -6.12734317779541
    3. '(n' → logprob: -9.87734317779541
    4. 'CR' → logprob: -10.75234317779541
    5. 'choose' → logprob: -11.37734317779541
    6. '+' → logprob: -11.50234317779541
    7. 'r' → logprob: -11.62734317779541
    8. '_cr' → logprob: -11.75234317779541
    9. '```' → logprob: -12.12734317779541
    10. '+r' → logprob: -12.25234317779541

Token 205: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -11.250028610229492
    3. 'n' → logprob: -11.750028610229492
    4. '(r' → logprob: -12.625028610229492
    5. '(K' → logprob: -12.875028610229492
    6. '((' → logprob: -13.875028610229492
    7. '(N' → logprob: -14.500028610229492
    8. 'K' → logprob: -16.375028610229492
    9. '(k' → logprob: -16.375028610229492
    10. '```' → logprob: -16.375028610229492

Token 206: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.06572380661964417
    2. '+n' → logprob: -3.1907238960266113
    3. ' +' → logprob: -4.315723896026611
    4. '(n' → logprob: -5.440723896026611
    5. 'r' → logprob: -6.190723896026611
    6. 'n' → logprob: -6.440723896026611
    7. '(r' → logprob: -7.440723896026611
    8. '+' → logprob: -8.940723419189453
    9. '   ' → logprob: -9.440723419189453
    10. 'K' → logprob: -9.440723419189453

Token 207: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.375
    3. '(r' → logprob: -19.375
    4. '
' → logprob: -19.625
    5. '[r' → logprob: -20.125
    6. '	r' → logprob: -20.5
    7. 'n' → logprob: -21.75
    8. '   ' → logprob: -21.875
    9. '{' → logprob: -22.125
    10. '_r' → logprob: -22.375

Token 208: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013895198935642838
    2. ' -' → logprob: -6.626389503479004
    3. 'r' → logprob: -10.501389503479004
    4. '1' → logprob: -10.501389503479004
    5. 'minus' → logprob: -13.001389503479004
    6. ' ' → logprob: -13.376389503479004
    7. ' r' → logprob: -13.501389503479004
    8. 'n' → logprob: -13.876389503479004
    9. '```' → logprob: -14.626389503479004
    10. '−' → logprob: -15.001389503479004

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -15.875000953674316
    4. '```' → logprob: -16.5625
    5. '۱' → logprob: -16.75
    6. '１' → logprob: -17.75
    7. '<|end|>' → logprob: -17.9375
    8. '   ' → logprob: -18.0625
    9. '11' → logprob: -18.25
    10. 'r' → logprob: -18.6875

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '۱' → logprob: -15.750000953674316
    3. ' ' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. '<|end|>' → logprob: -17.5625
    6. '11' → logprob: -17.625
    7. '-' → logprob: -17.75
    8. '１' → logprob: -17.75
    9. '১' → logprob: -18.3125
    10. '१' → logprob: -18.4375

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019962044898420572
    2. ',r' → logprob: -6.251996040344238
    3. ' ,' → logprob: -10.376996040344238
    4. ',n' → logprob: -10.376996040344238
    5. ')' → logprob: -12.876996040344238
    6. '<|end|>' → logprob: -13.876996040344238
    7. 'r' → logprob: -14.501996040344238
    8. ',K' → logprob: -15.501996040344238
    9. '```' → logprob: -15.501996040344238
    10. '‌,' → logprob: -15.751996040344238

Token 212: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009118211455643177
    2. ' r' → logprob: -7.000911712646484
    3. 'n' → logprob: -15.625911712646484
    4. '
' → logprob: -15.875911712646484
    5. '   ' → logprob: -17.000911712646484
    6. '	r' → logprob: -17.250911712646484
    7. ')' → logprob: -18.500911712646484
    8. ' ' → logprob: -19.000911712646484
    9. '(r' → logprob: -19.375911712646484
    10. '    ' → logprob: -19.375911712646484

Token 213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ')
' → logprob: -12.375008583068848
    3. ' )' → logprob: -12.750008583068848
    4. '))' → logprob: -15.250008583068848
    5. ')}' → logprob: -15.375008583068848
    6. ')return' → logprob: -15.875008583068848
    7. '}' → logprob: -16.62500762939453
    8. ')}}' → logprob: -16.62500762939453
    9. ')#' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.12500762939453

Token 214: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6920065879821777
    2. 'for' → logprob: -0.8170065879821777
    3. 'def' → logprob: -3.6920065879821777
    4. 'result' → logprob: -4.567006587982178
    5. '#' → logprob: -5.567006587982178
    6. 'n' → logprob: -5.692006587982178
    7. 'while' → logprob: -5.692006587982178
    8. '[' → logprob: -6.192006587982178
    9. ')' → logprob: -6.192006587982178
    10. '*' → logprob: -7.067006587982178

Token 215: ' emulate' (ID: 139300)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5859581232070923
    2. 'dp' → logprob: -1.5859581232070923
    3. 'result' → logprob: -1.7109581232070923
    4. 'total' → logprob: -1.9609581232070923
    5. 'for' → logprob: -2.2109580039978027
    6. 'res' → logprob: -2.2109580039978027
    7. 'answer' → logprob: -4.085958003997803
    8. 'def' → logprob: -4.460958003997803
    9. 'print' → logprob: -5.585958003997803
    10. 's' → logprob: -5.960958003997803

Token 216: ' main' (ID: 2758)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3002897799015045
    2. 'product' → logprob: -2.4252898693084717
    3. 'n' → logprob: -3.4252898693084717
    4. 'chain' → logprob: -3.8002898693084717
    5. 'lambda' → logprob: -3.8002898693084717
    6. 'print' → logprob: -4.300289630889893
    7. 'pow' → logprob: -4.300289630889893
    8. 'sum' → logprob: -4.550289630889893
    9. 'input' → logprob: -4.925289630889893
    10. 'enumer' → logprob: -5.050289630889893

Token 217: ' loop' (ID: 11453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15269029140472412
    2. 'def' → logprob: -2.6526904106140137
    3. 'result' → logprob: -3.7776904106140137
    4. 'n' → logprob: -4.652690410614014
    5. ':' → logprob: -5.402690410614014
    6. ' for' → logprob: -5.527690410614014
    7. 's' → logprob: -5.652690410614014
    8. '_' → logprob: -5.652690410614014
    9. '():' → logprob: -5.777690410614014
    10. '()' → logprob: -6.027690410614014

Token 218: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011900930665433407
    2. 'result' → logprob: -5.136900901794434
    3. 'res' → logprob: -5.761900901794434
    4. 'ans' → logprob: -7.261900901794434
    5. 'answer' → logprob: -7.261900901794434
    6. 'total' → logprob: -7.511900901794434
    7. ' for' → logprob: -8.261900901794434
    8. 's' → logprob: -9.011900901794434
    9. 'results' → logprob: -9.011900901794434
    10. 'answers' → logprob: -9.511900901794434

Token 219: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7017213106155396
    2. 'product' → logprob: -1.3267213106155396
    3. 'for' → logprob: -2.20172119140625
    4. 'chain' → logprob: -2.70172119140625
    5. 'K' → logprob: -4.57672119140625
    6. 'n' → logprob: -4.70172119140625
    7. 'reduce' → logprob: -5.20172119140625
    8. '_' → logprob: -5.45172119140625
    9. ' range' → logprob: -5.57672119140625
    10. 'print' → logprob: -5.70172119140625

Token 220: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005413581384345889
    2. '(' → logprob: -8.375541687011719
    3. '(
' → logprob: -9.125541687011719
    4. ' for' → logprob: -9.250541687011719
    5. 'result' → logprob: -10.250541687011719
    6. '
' → logprob: -11.250541687011719
    7. ':' → logprob: -11.250541687011719
    8. 'range' → logprob: -11.625541687011719
    9. '(range' → logprob: -11.875541687011719
    10. '```' → logprob: -12.000541687011719

Token 221: ' zip' (ID: 16216)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6831741333007812
    2. 'for' → logprob: -1.1831741333007812
    3. 'chain' → logprob: -2.6831741333007812
    4. ' for' → logprob: -3.5581741333007812
    5. ' product' → logprob: -3.5581741333007812
    6. 'range' → logprob: -3.5581741333007812
    7. ' chain' → logprob: -4.558174133300781
    8. 'zip' → logprob: -5.683174133300781
    9. 'lambda' → logprob: -5.683174133300781
    10. 'def' → logprob: -5.808174133300781

Token 222: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007195774000138044
    2. ' for' → logprob: -5.757195949554443
    3. '(
' → logprob: -6.632195949554443
    4. '(range' → logprob: -6.632195949554443
    5. 'range' → logprob: -7.632195949554443
    6. 'result' → logprob: -7.757195949554443
    7. '(' → logprob: -8.632195472717285
    8. 'ranges' → logprob: -10.257195472717285
    9. '```' → logprob: -10.632195472717285
    10. ':' → logprob: -10.882195472717285

Token 223: ' custom' (ID: 2602)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8974941968917847
    2. 'chain' → logprob: -1.1474941968917847
    3. 'filter' → logprob: -2.022494316101074
    4. 'acc' → logprob: -3.147494316101074
    5. 'zip' → logprob: -3.647494316101074
    6. 'range' → logprob: -4.147494316101074
    7. 'com' → logprob: -4.522494316101074
    8. 'map' → logprob: -4.647494316101074
    9. ' accumulate' → logprob: -4.897494316101074
    10. 'for' → logprob: -5.272494316101074

Token 224: ' generator' (ID: 23989)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.848146915435791
    2. 'acc' → logprob: -2.473146915435791
    3. 'range' → logprob: -2.473146915435791
    4. '(acc' → logprob: -2.473146915435791
    5. 'map' → logprob: -2.598146915435791
    6. 'product' → logprob: -2.598146915435791
    7. '(range' → logprob: -2.973146915435791
    8. 'chain' → logprob: -4.098146915435791
    9. 'count' → logprob: -4.223146915435791
    10. '(
' → logprob: -4.473146915435791

Token 225: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07770955562591553
    2. '(
' → logprob: -3.327709674835205
    3. '(' → logprob: -3.952709674835205
    4. 'def' → logprob: -5.202709674835205
    5. ' for' → logprob: -5.327709674835205
    6. ':' → logprob: -6.077709674835205
    7. '```' → logprob: -6.577709674835205
    8. '(range' → logprob: -6.702709674835205
    9. '(n' → logprob: -7.202709674835205
    10. 'result' → logprob: -7.202709674835205

Token 226: ' and' (ID: 326)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.3648169040679932
    2. 'filter' → logprob: -1.6148169040679932
    3. 'range' → logprob: -2.364816904067993
    4. 'def' → logprob: -2.864816904067993
    5. 'product' → logprob: -3.114816904067993
    6. '#' → logprob: -3.239816904067993
    7. ')' → logprob: -3.239816904067993
    8. 'and' → logprob: -3.489816904067993
    9. 'is' → logprob: -3.614816904067993
    10. ' and' → logprob: -3.614816904067993

Token 227: ' extra' (ID: 5018)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.5002256035804749
    2. 'product' → logprob: -1.62522554397583
    3. 'reduce' → logprob: -2.50022554397583
    4. 'acc' → logprob: -3.12522554397583
    5. 'filter' → logprob: -3.25022554397583
    6. 'map' → logprob: -4.25022554397583
    7. 'range' → logprob: -5.62522554397583
    8. 'sum' → logprob: -5.87522554397583
    9. ' accumulate' → logprob: -6.25022554397583
    10. ' chain' → logprob: -6.25022554397583

Token 228: ' lambda' (ID: 27871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2942707538604736
    2. 'for' → logprob: -1.9192707538604736
    3. '(' → logprob: -2.7942707538604736
    4. ' for' → logprob: -2.9192707538604736
    5. 'def' → logprob: -3.1692707538604736
    6. ' code' → logprob: -3.4192707538604736
    7. '(
' → logprob: -3.5442707538604736
    8. ' variables' → logprob: -3.6692707538604736
    9. '_code' → logprob: -3.9192707538604736
    10. 'variables' → logprob: -3.9192707538604736

Token 229: ' gymnastics' (ID: 174255)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15954944491386414
    2. '(' → logprob: -3.1595494747161865
    3. '(
' → logprob: -3.2845494747161865
    4. ':' → logprob: -3.5345494747161865
    5. ' for' → logprob: -4.159549236297607
    6. 'def' → logprob: -4.909549236297607
    7. 'result' → logprob: -5.159549236297607
    8. ':
' → logprob: -6.284549236297607
    9. '```' → logprob: -6.659549236297607
    10. '(i' → logprob: -7.159549236297607

Token 230: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09948505461215973
    2. 'res' → logprob: -3.974485158920288
    3. 'result' → logprob: -3.974485158920288
    4. 'ans' → logprob: -4.224484920501709
    5. 'def' → logprob: -4.474484920501709
    6. ' for' → logprob: -4.849484920501709
    7. 'answer' → logprob: -5.349484920501709
    8. 's' → logprob: -5.474484920501709
    9. 'total' → logprob: -5.849484920501709
    10. '(
' → logprob: -6.849484920501709

Token 231: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21603025496006012
    2. 'result' → logprob: -2.7160303592681885
    3. 'res' → logprob: -2.9660303592681885
    4. 'ans' → logprob: -3.4660303592681885
    5. 'total' → logprob: -4.216030120849609
    6. 'def' → logprob: -4.591030120849609
    7. 's' → logprob: -5.091030120849609
    8. 'answer' → logprob: -5.091030120849609
    9. 'dp' → logprob: -6.466030120849609
    10. 'from' → logprob: -7.091030120849609

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09791302680969238
    2. ' i' → logprob: -2.5979130268096924
    3. 'k' → logprob: -4.472912788391113
    4. '_,' → logprob: -6.722912788391113
    5. 'idx' → logprob: -6.847912788391113
    6. '_i' → logprob: -7.222912788391113
    7. ' k' → logprob: -7.347912788391113
    8. 'x' → logprob: -7.597912788391113
    9. 'a' → logprob: -7.972912788391113
    10. '_' → logprob: -7.972912788391113

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4844585955142975
    2. ',' → logprob: -1.484458565711975
    3. 'in' → logprob: -1.859458565711975
    4. ' ,' → logprob: -6.6094584465026855
    5. ' ' → logprob: -9.234458923339844
    6. ',_' → logprob: -10.484458923339844
    7. ',in' → logprob: -11.359458923339844
    8. 'range' → logprob: -11.359458923339844
    9. ',n' → logprob: -11.609458923339844
    10. '_,' → logprob: -11.734458923339844

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012516365386545658
    2. ' range' → logprob: -4.387516498565674
    3. 'enumer' → logprob: -12.512516021728516
    4. '(range' → logprob: -13.887516021728516
    5. 'zip' → logprob: -14.137516021728516
    6. ' ' → logprob: -15.262516021728516
    7. 'chain' → logprob: -15.387516021728516
    8. '	range' → logprob: -15.762516021728516
    9. 'r' → logprob: -16.262516021728516
    10. 're' → logprob: -16.387516021728516

Token 235: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.6331421732902527
    2. '(' → logprob: -0.7581421732902527
    3. '(N' → logprob: -7.633141994476318
    4. '(k' → logprob: -11.133142471313477
    5. '1' → logprob: -11.133142471313477
    6. 'K' → logprob: -11.758142471313477
    7. '(M' → logprob: -12.508142471313477
    8. '((' → logprob: -12.758142471313477
    9. '(i' → logprob: -12.883142471313477
    10. ' (' → logprob: -13.008142471313477

Token 236: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.024624956771731377
    2. 'N' → logprob: -4.149624824523926
    3. '1' → logprob: -4.774624824523926
    4. '0' → logprob: -10.524624824523926
    5. '2' → logprob: -11.274624824523926
    6. '(' → logprob: -11.274624824523926
    7. ' K' → logprob: -11.274624824523926
    8. '(K' → logprob: -11.399624824523926
    9. '10' → logprob: -12.274624824523926
    10. 'max' → logprob: -12.399624824523926

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003953728824853897
    2. ' ,' → logprob: -6.25395393371582
    3. ',K' → logprob: -6.25395393371582
    4. 'K' → logprob: -10.00395393371582
    5. ' ' → logprob: -11.25395393371582
    6. ' K' → logprob: -11.87895393371582
    7. '1' → logprob: -11.87895393371582
    8. ',N' → logprob: -12.00395393371582
    9. '   ' → logprob: -12.37895393371582
    10. '*K' → logprob: -12.62895393371582

Token 238: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.014445070177316666
    2. 'N' → logprob: -4.6394453048706055
    3. ' K' → logprob: -5.5144453048706055
    4. '2' → logprob: -7.6394453048706055
    5. ' ' → logprob: -9.639445304870605
    6. ' N' → logprob: -10.389445304870605
    7. '   ' → logprob: -10.639445304870605
    8. '3' → logprob: -12.014445304870605
    9. '  ' → logprob: -12.264445304870605
    10. '400' → logprob: -12.514445304870605

Token 239: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.025375930592417717
    2. 'N' → logprob: -3.7753758430480957
    3. '2' → logprob: -6.400375843048096
    4. ' K' → logprob: -9.025376319885254
    5. '400' → logprob: -9.025376319885254
    6. '3' → logprob: -10.275376319885254
    7. '(K' → logprob: -10.275376319885254
    8. ' ' → logprob: -10.775376319885254
    9. '   ' → logprob: -11.150376319885254
    10. '4' → logprob: -11.650376319885254

Token 240: ' *' (ID: 425)
  Prédit: '*K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.2672525942325592
    2. ' *' → logprob: -1.5172525644302368
    3. '*' → logprob: -4.517252445220947
    4. 'K' → logprob: -6.017252445220947
    5. '*N' → logprob: -6.767252445220947
    6. ',' → logprob: -8.142252922058105
    7. ' K' → logprob: -8.892252922058105
    8. '*(' → logprob: -9.892252922058105
    9. '*k' → logprob: -9.892252922058105
    10. ' ' → logprob: -10.017252922058105

Token 241: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.002176073845475912
    2. 'N' → logprob: -6.502176284790039
    3. '(K' → logprob: -7.877176284790039
    4. ' K' → logprob: -8.502176284790039
    5. '*K' → logprob: -9.877176284790039
    6. '400' → logprob: -12.127176284790039
    7. '(N' → logprob: -12.252176284790039
    8. ' ' → logprob: -12.502176284790039
    9. ' (' → logprob: -12.627176284790039
    10. '*' → logprob: -12.752176284790039

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14295603334903717
    2. ' +' → logprob: -2.017956018447876
    3. '):' → logprob: -9.517955780029297
    4. '):
' → logprob: -9.767955780029297
    5. ',' → logprob: -10.267955780029297
    6. '-' → logprob: -10.642955780029297
    7. '
' → logprob: -10.767955780029297
    8. ' ' → logprob: -11.267955780029297
    9. '   ' → logprob: -11.517955780029297
    10. ' -' → logprob: -11.517955780029297

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00831799115985632
    2. '2' → logprob: -4.883317947387695
    3. ' ' → logprob: -7.258317947387695
    4. '3' → logprob: -13.008317947387695
    5. '   ' → logprob: -14.008317947387695
    6. '+' → logprob: -14.008317947387695
    7. ')' → logprob: -14.320817947387695
    8. 'K' → logprob: -14.695817947387695
    9. '(' → logprob: -14.945817947387695
    10. '  ' → logprob: -15.633317947387695

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012068194337189198
    2. '2' → logprob: -4.512068271636963
    3. 'N' → logprob: -7.137068271636963
    4. ' ' → logprob: -9.012067794799805
    5. '3' → logprob: -9.387067794799805
    6. '4' → logprob: -12.762067794799805
    7. 'K' → logprob: -12.887067794799805
    8. '(N' → logprob: -12.887067794799805
    9. ' N' → logprob: -13.012067794799805
    10. '10' → logprob: -13.637067794799805

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008922049775719643
    2. '):
' → logprob: -4.758922100067139
    3. ':' → logprob: -8.75892162322998
    4. ',' → logprob: -9.38392162322998
    5. ' ):' → logprob: -10.25892162322998
    6. '+' → logprob: -11.25892162322998
    7. '):
' → logprob: -11.50892162322998
    8. ')' → logprob: -12.88392162322998
    9. '}:' → logprob: -13.50892162322998
    10. '```' → logprob: -13.88392162322998

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02088051661849022
    2. ':' → logprob: -4.395880699157715
    3. '<|end|>' → logprob: -5.520880699157715
    4. '    
' → logprob: -5.895880699157715
    5. '```' → logprob: -7.145880699157715
    6. ',' → logprob: -9.270880699157715
    7. '<|end|>' → logprob: -9.520880699157715
    8. '       ' → logprob: -9.770880699157715
    9. ' for' → logprob: -9.895880699157715
    10. ' 
' → logprob: -10.145880699157715

Token 247: ' Ans' (ID: 22542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6279860734939575
    2. 's' → logprob: -2.502985954284668
    3. 'res' → logprob: -2.627985954284668
    4. 'print' → logprob: -2.877985954284668
    5. 'ans' → logprob: -3.127985954284668
    6. 'x' → logprob: -3.502985954284668
    7. 'a' → logprob: -3.877985954284668
    8. 'j' → logprob: -4.002985954284668
    9. 'for' → logprob: -4.002985954284668
    10. 'r' → logprob: -4.127985954284668

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3051896393299103
    2. '=' → logprob: -1.555189609527588
    3. ',' → logprob: -3.180189609527588
    4. ' ' → logprob: -5.680189609527588
    5. '   ' → logprob: -6.305189609527588
    6. '[' → logprob: -6.555189609527588
    7. ' +=' → logprob: -6.680189609527588
    8. '[i' → logprob: -7.055189609527588
    9. 'for' → logprob: -7.680189609527588
    10. ' ,' → logprob: -8.430190086364746

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2169668823480606
    2. '(n' → logprob: -2.4669668674468994
    3. '(' → logprob: -3.2169668674468994
    4. 'n' → logprob: -3.4669668674468994
    5. 'sum' → logprob: -3.9669668674468994
    6. '(sum' → logprob: -5.5919671058654785
    7. ' ' → logprob: -5.5919671058654785
    8. ' (' → logprob: -5.8419671058654785
    9. ' sum' → logprob: -6.2169671058654785
    10. ' n' → logprob: -6.5919671058654785

Token 250: '0' (ID: 15)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9472661018371582
    2. 'n' → logprob: -1.4472661018371582
    3. 'sum' → logprob: -1.4472661018371582
    4. '0' → logprob: -3.072266101837158
    5. '(sum' → logprob: -3.197266101837158
    6. '(' → logprob: -3.197266101837158
    7. 'reduce' → logprob: -5.447266101837158
    8. '(lambda' → logprob: -5.822266101837158
    9. 'pow' → logprob: -6.447266101837158
    10. 'fact' → logprob: -7.322266101837158

Token 251: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6397018432617188
    2. '<|end|>' → logprob: -0.7647018432617188
    3. '<|end|>' → logprob: -6.639701843261719
    4. ',' → logprob: -6.639701843261719
    5. ' ' → logprob: -6.764701843261719
    6. ' for' → logprob: -7.264701843261719
    7. ')' → logprob: -7.389701843261719
    8. '    
' → logprob: -7.764701843261719
    9. '  ' → logprob: -7.764701843261719
    10. 'for' → logprob: -8.014701843261719

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.158269464969635
    2. '<|end|>' → logprob: -2.0332694053649902
    3. 'for' → logprob: -5.78326940536499
    4. ',' → logprob: -5.78326940536499
    5. ' for' → logprob: -5.78326940536499
    6. ' ' → logprob: -5.90826940536499
    7. '    
' → logprob: -7.15826940536499
    8. '
' → logprob: -7.28326940536499
    9. ')' → logprob: -7.40826940536499
    10. '  ' → logprob: -7.78326940536499

Token 253: ' parity' (ID: 113181)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.199412003159523
    2. ' for' → logprob: -2.1994121074676514
    3. '   ' → logprob: -2.6994121074676514
    4. 'j' → logprob: -7.699411869049072
    5. 'r' → logprob: -8.82441234588623
    6. 's' → logprob: -8.82441234588623
    7. 'x' → logprob: -8.82441234588623
    8. 'n' → logprob: -8.94941234588623
    9. 'ans' → logprob: -8.94941234588623
    10. 'M' → logprob: -9.07441234588623

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31367141008377075
    2. '=' → logprob: -1.313671350479126
    3. '_' → logprob: -8.313671112060547
    4. ',' → logprob: -9.438671112060547
    5. '   ' → logprob: -10.563671112060547
    6. 's' → logprob: -10.688671112060547
    7. ' ' → logprob: -11.438671112060547
    8. 'for' → logprob: -12.188671112060547
    9. '_=' → logprob: -12.438671112060547
    10. ' _' → logprob: -13.188671112060547

Token 255: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.234262153506279
    2. ' i' → logprob: -1.7342621088027954
    3. '(i' → logprob: -3.609262228012085
    4. ' (' → logprob: -5.609261989593506
    5. '1' → logprob: -7.484261989593506
    6. '0' → logprob: -8.109262466430664
    7. '[i' → logprob: -8.734262466430664
    8. '(' → logprob: -8.734262466430664
    9. ' ' → logprob: -9.109262466430664
    10. '   ' → logprob: -9.109262466430664

Token 256: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.34862086176872253
    2. ' %' → logprob: -1.223620891571045
    3. '-' → logprob: -8.973620414733887
    4. ' ' → logprob: -11.223620414733887
    5. ' &' → logprob: -11.348620414733887
    6. '&' → logprob: -11.598620414733887
    7. ' -' → logprob: -11.973620414733887
    8. '   ' → logprob: -12.473620414733887
    9. '
' → logprob: -13.223620414733887
    10. ' ' → logprob: -14.598620414733887

Token 257: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '3' → logprob: -16.62500762939453
    4. '   ' → logprob: -16.75000762939453
    5. '  ' → logprob: -17.25000762939453
    6. '(' → logprob: -17.37500762939453
    7. '```' → logprob: -17.68750762939453
    8. '4' → logprob: -17.75000762939453
    9. 'K' → logprob: -18.93750762939453
    10. 'k' → logprob: -19.06250762939453

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '4' → logprob: -14.875004768371582
    4. '3' → logprob: -15.000004768371582
    5. '

' → logprob: -15.937504768371582
    6. '10' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.562503814697266
    8. '(' → logprob: -16.812503814697266
    9. '998' → logprob: -16.812503814697266
    10. '
' → logprob: -17.187503814697266

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28760960698127747
    2. '
' → logprob: -1.662609577178955
    3. '    
' → logprob: -3.162609577178955
    4. '<|end|>' → logprob: -5.162609577178955
    5. ',' → logprob: -6.162609577178955
    6. '    ' → logprob: -6.662609577178955
    7. '   
' → logprob: -6.662609577178955
    8. ')' → logprob: -6.912609577178955
    9. '  ' → logprob: -7.037609577178955
    10. ' ' → logprob: -7.162609577178955

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011602196609601378
    2. ' for' → logprob: -7.376160144805908
    3. 'for' → logprob: -8.251160621643066
    4. '    
' → logprob: -8.626160621643066
    5. '<|end|>' → logprob: -9.876160621643066
    6. '    ' → logprob: -11.251160621643066
    7. ',' → logprob: -12.126160621643066
    8. '  ' → logprob: -12.876160621643066
    9. ')' → logprob: -13.126160621643066
    10. '   ' → logprob: -13.251160621643066

Token 261: ' tpl' (ID: 138784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07399845123291016
    2. '   ' → logprob: -3.44899845123291
    3. 'j' → logprob: -4.32399845123291
    4. ' for' → logprob: -4.44899845123291
    5. 'r' → logprob: -6.44899845123291
    6. 'limit' → logprob: -6.44899845123291
    7. 'l' → logprob: -6.94899845123291
    8. 'cnt' → logprob: -7.07399845123291
    9. 'x' → logprob: -7.19899845123291
    10. 'L' → logprob: -7.19899845123291

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11422434449195862
    2. '=' → logprob: -2.239224433898926
    3. ',' → logprob: -6.614224433898926
    4. 's' → logprob: -10.364224433898926
    5. ' ,' → logprob: -11.489224433898926
    6. '   ' → logprob: -12.364224433898926
    7. 'for' → logprob: -12.864224433898926
    8. ' =
' → logprob: -13.239224433898926
    9. ' ' → logprob: -13.614224433898926
    10. ' for' → logprob: -13.739224433898926

Token 263: ' lambda' (ID: 27871)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.252274990081787
    2. '((' → logprob: -1.752274990081787
    3. 'zip' → logprob: -1.752274990081787
    4. 'tuple' → logprob: -2.377274990081787
    5. '(zip' → logprob: -2.752274990081787
    6. 'list' → logprob: -3.252274990081787
    7. '(range' → logprob: -3.252274990081787
    8. 'product' → logprob: -3.377274990081787
    9. '(product' → logprob: -3.627274990081787
    10. '(tuple' → logprob: -4.252274990081787

Token 264: ' np' (ID: 5374)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1698538064956665
    2. ' x' → logprob: -1.2948538064956665
    3. ' n' → logprob: -3.169853687286377
    4. 'n' → logprob: -3.169853687286377
    5. 'k' → logprob: -3.294853687286377
    6. ' j' → logprob: -3.294853687286377
    7. 'a' → logprob: -3.294853687286377
    8. ' k' → logprob: -3.419853687286377
    9. 'j' → logprob: -3.419853687286377
    10. 'i' → logprob: -3.669853687286377

Token 265: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055709872394800186
    2. ',' → logprob: -3.0557098388671875
    3. ' :' → logprob: -6.4307098388671875
    4. ',n' → logprob: -6.6807098388671875
    5. 'r' → logprob: -6.8057098388671875
    6. 'airs' → logprob: -7.5557098388671875
    7. ':(' → logprob: -7.5557098388671875
    8. 'range' → logprob: -8.180709838867188
    9. ':n' → logprob: -8.180709838867188
    10. 'n' → logprob: -8.305709838867188

Token 266: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9025432467460632
    2. '[(' → logprob: -2.527543306350708
    3. 'np' → logprob: -2.777543306350708
    4. '(' → logprob: -2.777543306350708
    5. '[' → logprob: -2.902543306350708
    6. '[n' → logprob: -3.152543306350708
    7. '((' → logprob: -3.152543306350708
    8. 'tuple' → logprob: -3.152543306350708
    9. 'sum' → logprob: -3.277543306350708
    10. '(sum' → logprob: -3.277543306350708

Token 267: 'range' (ID: 20967)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.1431386023759842
    2. '(n' → logprob: -3.0181386470794678
    3. 'n' → logprob: -3.2681386470794678
    4. '(np' → logprob: -3.5181386470794678
    5. '(' → logprob: -5.643138408660889
    6. 'sum' → logprob: -5.768138408660889
    7. '(sum' → logprob: -6.268138408660889
    8. '((' → logprob: -6.768138408660889
    9. '(i' → logprob: -6.768138408660889
    10. 'pow' → logprob: -7.268138408660889

Token 268: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.06914211809635162
    2. '(K' → logprob: -3.4441421031951904
    3. '(' → logprob: -4.3191423416137695
    4. '((' → logprob: -4.4441423416137695
    5. '(max' → logprob: -6.1941423416137695
    6. '(i' → logprob: -6.3191423416137695
    7. '(n' → logprob: -6.6941423416137695
    8. '(N' → logprob: -6.6941423416137695
    9. '(abs' → logprob: -7.3191423416137695
    10. '(len' → logprob: -7.4441423416137695

Token 269: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5163381099700928
    2. '[' → logprob: -2.1413381099700928
    3. '+' → logprob: -2.2663381099700928
    4. '),' → logprob: -3.1413381099700928
    5. '(i' → logprob: -3.3913381099700928
    6. ' +' → logprob: -3.3913381099700928
    7. '(' → logprob: -3.5163381099700928
    8. '(n' → logprob: -4.141338348388672
    9. '//' → logprob: -5.641338348388672
    10. '-' → logprob: -5.641338348388672

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03102833777666092
    2. 'par' → logprob: -4.5310282707214355
    3. '(' → logprob: -5.4060282707214355
    4. '(i' → logprob: -5.7810282707214355
    5. '2' → logprob: -5.9060282707214355
    6. '0' → logprob: -5.9060282707214355
    7. 'i' → logprob: -6.5310282707214355
    8. 'K' → logprob: -6.7810282707214355
    9. '-' → logprob: -6.9060282707214355
    10. '(par' → logprob: -7.0310282707214355

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08637770265340805
    2. '(' → logprob: -3.9613776206970215
    3. '(i' → logprob: -4.0863776206970215
    4. 'par' → logprob: -4.3363776206970215
    5. 'i' → logprob: -4.7113776206970215
    6. '2' → logprob: -4.7113776206970215
    7. '0' → logprob: -5.2113776206970215
    8. '-' → logprob: -6.0863776206970215
    9. 'K' → logprob: -6.2113776206970215
    10. '(par' → logprob: -6.5863776206970215

Token 272: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3408234119415283
    2. '),' → logprob: -2.0908234119415283
    3. '))' → logprob: -2.4658234119415283
    4. ')' → logprob: -3.3408234119415283
    5. '(np' → logprob: -4.090823173522949
    6. ',np' → logprob: -4.215823173522949
    7. '[np' → logprob: -5.715823173522949
    8. '(n' → logprob: -6.215823173522949
    9. ' if' → logprob: -6.215823173522949
    10. '[' → logprob: -7.090823173522949

Token 273: ' K' (ID: 658)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4366370141506195
    2. ' range' → logprob: -2.4366369247436523
    3. '(range' → logprob: -2.8116369247436523
    4. 'filter' → logprob: -2.8116369247436523
    5. ' (' → logprob: -4.186636924743652
    6. 'lambda' → logprob: -4.686636924743652
    7. 'chain' → logprob: -4.686636924743652
    8. 'map' → logprob: -4.811636924743652
    9. '(' → logprob: -4.811636924743652
    10. ' filter' → logprob: -4.811636924743652

Token 274: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39262115955352783
    2. ',' → logprob: -1.1426211595535278
    3. '   ' → logprob: -6.017621040344238
    4. '[' → logprob: -7.392621040344238
    5. ',)' → logprob: -7.392621040344238
    6. '))' → logprob: -7.767621040344238
    7. ')
' → logprob: -8.017621040344238
    8. ',
' → logprob: -8.267621040344238
    9. '),' → logprob: -8.517621040344238
    10. ' ,' → logprob: -9.267621040344238

Token 275: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0057446216233074665
    2. '1' → logprob: -5.755744457244873
    3. '(np' → logprob: -6.880744457244873
    4. '(' → logprob: -7.130744457244873
    5. 'i' → logprob: -8.255744934082031
    6. ' np' → logprob: -8.755744934082031
    7. 'abs' → logprob: -9.130744934082031
    8. 'range' → logprob: -10.130744934082031
    9. '(i' → logprob: -10.130744934082031
    10. '((' → logprob: -10.255744934082031

Token 276: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035497010685503483
    2. '))' → logprob: -6.253549575805664
    3. ',' → logprob: -7.628549575805664
    4. ')
' → logprob: -7.753549575805664
    5. ' )' → logprob: -8.128549575805664
    6. '   ' → logprob: -8.628549575805664
    7. '[' → logprob: -9.128549575805664
    8. ')))' → logprob: -10.378549575805664
    9. '),' → logprob: -11.253549575805664
    10. ')[' → logprob: -12.003549575805664

Token 277: ' ' (ID: 220)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8250567317008972
    2. '1' → logprob: -0.9500567317008972
    3. '2' → logprob: -2.825056791305542
    4. '(' → logprob: -3.075056791305542
    5. '(par' → logprob: -4.200056552886963
    6. '(i' → logprob: -4.575056552886963
    7. 'range' → logprob: -4.700056552886963
    8. ')' → logprob: -4.950056552886963
    9. ' (' → logprob: -5.325056552886963
    10. 'i' → logprob: -5.575056552886963

Token 278: '2' (ID: 17)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.12290029972791672
    2. '1' → logprob: -3.1229002475738525
    3. '2' → logprob: -3.3729002475738525
    4. '(' → logprob: -4.497900485992432
    5. '(par' → logprob: -4.497900485992432
    6. '(i' → logprob: -5.247900485992432
    7. 'i' → logprob: -5.622900485992432
    8. ' parity' → logprob: -6.247900485992432
    9. '(K' → logprob: -7.872900485992432
    10. '(N' → logprob: -7.997900485992432

Token 279: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005526751047000289
    2. '   ' → logprob: -8.125553131103516
    3. '))' → logprob: -9.000553131103516
    4. ')
' → logprob: -9.375553131103516
    5. ' )' → logprob: -10.375553131103516
    6. ',' → logprob: -11.625553131103516
    7. ')))' → logprob: -12.625553131103516
    8. '),' → logprob: -13.250553131103516
    9. '  ' → logprob: -14.375553131103516
    10. ' ' → logprob: -15.000553131103516

Token 280: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33466124534606934
    2. 'par' → logprob: -1.3346612453460693
    3. '(' → logprob: -4.834661483764648
    4. '(par' → logprob: -5.209661483764648
    5. ' parity' → logprob: -6.334661483764648
    6. '2' → logprob: -6.584661483764648
    7. ' ' → logprob: -7.209661483764648
    8. 'i' → logprob: -7.584661483764648
    9. 'abs' → logprob: -7.584661483764648
    10. '(i' → logprob: -7.709661483764648

Token 281: '1' (ID: 16)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6667478084564209
    2. '1' → logprob: -0.9167478084564209
    3. 'i' → logprob: -3.666747808456421
    4. '(par' → logprob: -3.791747808456421
    5. '(' → logprob: -4.291748046875
    6. '(i' → logprob: -4.416748046875
    7. '0' → logprob: -5.541748046875
    8. '2' → logprob: -6.291748046875
    9. ' parity' → logprob: -6.541748046875
    10. 'np' → logprob: -6.666748046875

Token 282: ' if' (ID: 538)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.36038467288017273
    2. ')' → logprob: -1.4853847026824951
    3. '+' → logprob: -3.735384702682495
    4. ' if' → logprob: -4.110384464263916
    5. 'if' → logprob: -4.360384464263916
    6. '-' → logprob: -5.110384464263916
    7. ' +' → logprob: -5.360384464263916
    8. ' -' → logprob: -6.110384464263916
    9. ')*' → logprob: -6.485384464263916
    10. ')))' → logprob: -6.485384464263916

Token 283: ' not' (ID: 625)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.004275107756257057
    2. ' parity' → logprob: -5.629275321960449
    3. 'not' → logprob: -8.25427532196045
    4. 'np' → logprob: -8.75427532196045
    5. ' not' → logprob: -9.62927532196045
    6. 'i' → logprob: -9.75427532196045
    7. '(par' → logprob: -10.12927532196045
    8. ' par' → logprob: -10.37927532196045
    9. '   ' → logprob: -10.87927532196045
    10. ' ' → logprob: -11.75427532196045

Token 284: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.002600983949378133
    2. ' parity' → logprob: -6.252601146697998
    3. '(par' → logprob: -7.377601146697998
    4. '(i' → logprob: -10.87760066986084
    5. 'i' → logprob: -11.62760066986084
    6. 'np' → logprob: -11.75260066986084
    7. '((' → logprob: -13.12760066986084
    8. 'tpl' → logprob: -13.37760066986084
    9. '(' → logprob: -13.50260066986084
    10. '
' → logprob: -13.75260066986084

Token 285: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026732394471764565
    2. 'else' → logprob: -3.6517324447631836
    3. ')' → logprob: -7.901732444763184
    4. '))' → logprob: -10.401732444763184
    5. ' ' → logprob: -11.651732444763184
    6. ' )' → logprob: -12.151732444763184
    7. '  ' → logprob: -12.776732444763184
    8. ')))' → logprob: -12.901732444763184
    9. '	else' → logprob: -13.026732444763184
    10. '   ' → logprob: -13.151732444763184

Token 286: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1226293221116066
    2. '1' → logprob: -2.247629404067993
    3. ' ' → logprob: -4.997629165649414
    4. 'np' → logprob: -6.747629165649414
    5. '2' → logprob: -7.372629165649414
    6. '-' → logprob: -7.872629165649414
    7. 'par' → logprob: -8.747629165649414
    8. 'i' → logprob: -8.872629165649414
    9. ' np' → logprob: -8.872629165649414
    10. '   ' → logprob: -9.247629165649414

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0933157354593277
    2. '1' → logprob: -2.468315839767456
    3. '-' → logprob: -6.218315601348877
    4. '2' → logprob: -6.968315601348877
    5. 'np' → logprob: -7.218315601348877
    6. 'i' → logprob: -8.468316078186035
    7. ' ' → logprob: -8.593316078186035
    8. 'par' → logprob: -8.718316078186035
    9. '(i' → logprob: -10.968316078186035
    10. 'K' → logprob: -11.343316078186035

Token 288: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20253869891166687
    2. '))' → logprob: -1.7025387287139893
    3. ')))' → logprob: -7.07753849029541
    4. '   ' → logprob: -8.70253849029541
    5. ')
' → logprob: -10.57753849029541
    6. ' )' → logprob: -10.70253849029541
    7. '))
' → logprob: -10.82753849029541
    8. '),' → logprob: -11.45253849029541
    9. ' ))' → logprob: -11.57753849029541
    10. ',' → logprob: -11.82753849029541

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13948896527290344
    2. '<|end|>' → logprob: -2.139488935470581
    3. ')' → logprob: -4.63948917388916
    4. ' for' → logprob: -7.13948917388916
    5. ' ' → logprob: -8.26448917388916
    6. '    ' → logprob: -8.26448917388916
    7. '
' → logprob: -8.38948917388916
    8. '    
' → logprob: -8.63948917388916
    9. '[' → logprob: -8.88948917388916
    10. ',' → logprob: -8.88948917388916

Token 290: ' np' (ID: 5374)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7509239912033081
    2. '   ' → logprob: -1.125923991203308
    3. ' for' → logprob: -1.625923991203308
    4. ')' → logprob: -5.625924110412598
    5. '    ' → logprob: -7.125924110412598
    6. ' ' → logprob: -7.875924110412598
    7. 'range' → logprob: -7.875924110412598
    8. '    
' → logprob: -8.500924110412598
    9. ',' → logprob: -8.750924110412598
    10. '  ' → logprob: -8.750924110412598

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6232505440711975
    2. '=' → logprob: -1.1232504844665527
    3. ',' → logprob: -1.9982504844665527
    4. 's' → logprob: -6.748250484466553
    5. ' ' → logprob: -7.623250484466553
    6. ' ,' → logprob: -7.873250484466553
    7. '_' → logprob: -7.873250484466553
    8. ')' → logprob: -7.998250484466553
    9. 'x' → logprob: -10.248250961303711
    10. 'for' → logprob: -10.498250961303711

Token 292: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40395066142082214
    2. 'i' → logprob: -1.2789506912231445
    3. '0' → logprob: -3.6539506912231445
    4. '(' → logprob: -4.6539506912231445
    5. ' (' → logprob: -5.4039506912231445
    6. '(K' → logprob: -5.4039506912231445
    7. ' i' → logprob: -6.0289506912231445
    8. 'K' → logprob: -6.4039506912231445
    9. '((' → logprob: -6.7789506912231445
    10. 'max' → logprob: -6.9039506912231445

Token 293: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5872034430503845
    2. ' -' → logprob: -0.9622034430503845
    3. ' //' → logprob: -3.8372035026550293
    4. '+' → logprob: -4.587203502655029
    5. '//' → logprob: -4.962203502655029
    6. '
' → logprob: -5.212203502655029
    7. ' if' → logprob: -5.587203502655029
    8. ' ' → logprob: -5.712203502655029
    9. 'if' → logprob: -6.212203502655029
    10. '%' → logprob: -6.337203502655029

Token 294: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.625025749206543
    3. '1' → logprob: -13.500025749206543
    4. '3' → logprob: -16.87502670288086
    5. '=' → logprob: -17.87502670288086
    6. '```' → logprob: -18.00002670288086
    7. '4' → logprob: -18.50002670288086
    8. '   ' → logprob: -18.87502670288086
    9. '  ' → logprob: -19.43752670288086
    10. '22' → logprob: -19.87502670288086

Token 295: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -11.125025749206543
    3. '1' → logprob: -11.500025749206543
    4. '3' → logprob: -15.937525749206543
    5. '4' → logprob: -17.000024795532227
    6. '```' → logprob: -17.312524795532227
    7. '=' → logprob: -17.375024795532227
    8. '   ' → logprob: -17.750024795532227
    9. '

' → logprob: -18.187524795532227
    10. '
' → logprob: -18.312524795532227

Token 296: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8420566916465759
    2. ' for' → logprob: -1.3420567512512207
    3. '<|end|>' → logprob: -1.3420567512512207
    4. 'for' → logprob: -3.3420567512512207
    5. ',' → logprob: -5.717056751251221
    6. '
' → logprob: -6.217056751251221
    7. ')' → logprob: -6.717056751251221
    8. '<|end|>' → logprob: -6.842056751251221
    9. '    
' → logprob: -7.467056751251221
    10. '	for' → logprob: -7.717056751251221

Token 297: ' max' (ID: 2999)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1321312040090561
    2. '(par' → logprob: -2.8821310997009277
    3. '(' → logprob: -3.0071310997009277
    4. ' (' → logprob: -4.882131099700928
    5. '(int' → logprob: -5.382131099700928
    6. 'par' → logprob: -5.757131099700928
    7. ' ' → logprob: -6.257131099700928
    8. 'int' → logprob: -8.007131576538086
    9. '(p' → logprob: -8.382131576538086
    10. ' parity' → logprob: -8.507131576538086

Token 298: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001419876585714519
    2. '((' → logprob: -7.501420021057129
    3. '(-' → logprob: -7.626420021057129
    4. '(i' → logprob: -8.626420021057129
    5. '(par' → logprob: -9.126420021057129
    6. '(t' → logprob: -10.751420021057129
    7. '0' → logprob: -11.126420021057129
    8. '(
' → logprob: -11.501420021057129
    9. '(np' → logprob: -11.626420021057129
    10. '(n' → logprob: -11.626420021057129

Token 299: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09914850443601608
    2. '0' → logprob: -3.7241485118865967
    3. '2' → logprob: -3.7241485118865967
    4. ',' → logprob: -3.8491485118865967
    5. ' ' → logprob: -4.724148273468018
    6. '1' → logprob: -4.974148273468018
    7. ' (' → logprob: -5.599148273468018
    8. '<|end|>' → logprob: -6.849148273468018
    9. ')' → logprob: -7.099148273468018
    10. '-' → logprob: -7.724148273468018

Token 300: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0646040439605713
    2. 'K' → logprob: -1.0646040439605713
    3. '1' → logprob: -1.3146040439605713
    4. '0' → logprob: -4.564603805541992
    5. '3' → logprob: -4.564603805541992
    6. '(' → logprob: -4.939603805541992
    7. '(K' → logprob: -5.064603805541992
    8. '(i' → logprob: -5.939603805541992
    9. ' ' → logprob: -6.689603805541992
    10. '4' → logprob: -6.814603805541992

Token 301: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.012043219991028309
    2. '(' → logprob: -5.387042999267578
    3. '2' → logprob: -5.637042999267578
    4. '(K' → logprob: -5.762042999267578
    5. 'N' → logprob: -7.762042999267578
    6. ' K' → logprob: -9.512042999267578
    7. ' ' → logprob: -10.137042999267578
    8. '1' → logprob: -10.262042999267578
    9. '(N' → logprob: -10.262042999267578
    10. '3' → logprob: -10.637042999267578

Token 302: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013883627019822598
    2. '0' → logprob: -4.513883590698242
    3. ' ,' → logprob: -6.888883590698242
    4. '(' → logprob: -7.513883590698242
    5. ')' → logprob: -7.638883590698242
    6. '//' → logprob: -8.888883590698242
    7. '<|end|>' → logprob: -9.263883590698242
    8. '+' → logprob: -9.388883590698242
    9. '2' → logprob: -9.513883590698242
    10. ' ' → logprob: -10.138883590698242

Token 303: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.19198215007781982
    2. '1' → logprob: -2.3169822692871094
    3. '2' → logprob: -2.9419822692871094
    4. '0' → logprob: -4.691982269287109
    5. '(' → logprob: -5.566982269287109
    6. '(K' → logprob: -5.566982269287109
    7. ' K' → logprob: -6.191982269287109
    8. ' ' → logprob: -6.566982269287109
    9. '3' → logprob: -6.816982269287109
    10. 'N' → logprob: -7.316982269287109

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042108677327632904
    2. ' ,' → logprob: -3.9171087741851807
    3. ')' → logprob: -4.667108535766602
    4. '(' → logprob: -4.667108535766602
    5. '+' → logprob: -6.792108535766602
    6. ' +' → logprob: -7.417108535766602
    7. '0' → logprob: -8.417108535766602
    8. '),' → logprob: -9.417108535766602
    9. ' ' → logprob: -9.667108535766602
    10. ' (' → logprob: -9.667108535766602

Token 305: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001786086824722588
    2. '1' → logprob: -6.626786231994629
    3. ' ' → logprob: -7.751786231994629
    4. '-' → logprob: -11.126786231994629
    5. '(' → logprob: -12.376786231994629
    6. ')' → logprob: -12.501786231994629
    7. '2' → logprob: -12.876786231994629
    8. '
' → logprob: -14.064286231994629
    9. ' -' → logprob: -14.189286231994629
    10. '   ' → logprob: -14.314286231994629

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004800464957952499
    2. '1' → logprob: -5.379800319671631
    3. '-' → logprob: -9.129800796508789
    4. ' ' → logprob: -10.129800796508789
    5. '2' → logprob: -11.254800796508789
    6. '(' → logprob: -11.504800796508789
    7. 'i' → logprob: -13.254800796508789
    8. '(-' → logprob: -13.629800796508789
    9. '
' → logprob: -14.067300796508789
    10. 'np' → logprob: -14.067300796508789

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007586748339235783
    2. '+' → logprob: -5.25758695602417
    3. ' +' → logprob: -7.00758695602417
    4. '<|end|>' → logprob: -7.50758695602417
    5. ' )' → logprob: -8.382586479187012
    6. ')
' → logprob: -8.382586479187012
    7. '<|end|>' → logprob: -8.882586479187012
    8. ')+' → logprob: -9.007586479187012
    9. ',' → logprob: -10.257586479187012
    10. '-' → logprob: -10.632586479187012

Token 308: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5200487971305847
    2. ' for' → logprob: -1.1450488567352295
    3. '   ' → logprob: -2.7700488567352295
    4. ')' → logprob: -4.89504861831665
    5. 'range' → logprob: -4.89504861831665
    6. '(range' → logprob: -5.77004861831665
    7. ' range' → logprob: -6.27004861831665
    8. '[' → logprob: -6.64504861831665
    9. '(
' → logprob: -7.52004861831665
    10. '    ' → logprob: -8.145049095153809

Token 310: ' parity' (ID: 113181)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.43670278787612915
    2. ' tpl' → logprob: -1.6867027282714844
    3. 'np' → logprob: -2.5617027282714844
    4. ' not' → logprob: -3.6867027282714844
    5. ' parity' → logprob: -3.8117027282714844
    6. 'tpl' → logprob: -4.561702728271484
    7. ' K' → logprob: -4.811702728271484
    8. ' i' → logprob: -5.061702728271484
    9. ' all' → logprob: -5.561702728271484
    10. ' ' → logprob: -5.811702728271484

Token 311: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06015341356396675
    2. '==' → logprob: -3.0601534843444824
    3. ' ==' → logprob: -4.560153484344482
    4. ':
' → logprob: -6.935153484344482
    5. ' and' → logprob: -11.310153007507324
    6. ' :' → logprob: -11.310153007507324
    7. '):' → logprob: -11.560153007507324
    8. '!=' → logprob: -12.060153007507324
    9. 'not' → logprob: -12.310153007507324
    10. 'and' → logprob: -12.435153007507324

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6689256429672241
    2. '1' → logprob: -1.2939256429672241
    3. ' ' → logprob: -1.5439256429672241
    4. '   ' → logprob: -13.543925285339355
    5. '=' → logprob: -13.606425285339355
    6. ' True' → logprob: -14.418925285339355
    7. 'True' → logprob: -14.481425285339355
    8. 'False' → logprob: -14.918925285339355
    9. '  ' → logprob: -15.043925285339355
    10. ':' → logprob: -15.043925285339355

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22585591673851013
    2. '1' → logprob: -1.6008559465408325
    3. ' ' → logprob: -7.725855827331543
    4. 'False' → logprob: -14.350855827331543
    5. 'True' → logprob: -14.850855827331543
    6. '   ' → logprob: -15.788355827331543
    7. '=' → logprob: -16.16335678100586
    8. '(' → logprob: -16.22585678100586
    9. '  ' → logprob: -16.53835678100586
    10. '2' → logprob: -16.85085678100586

Token 314: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12731106579303741
    2. ':
' → logprob: -2.1273109912872314
    3. '       ' → logprob: -8.502310752868652
    4. ' and' → logprob: -9.252310752868652
    5. '   ' → logprob: -10.002310752868652
    6. '):
' → logprob: -12.002310752868652
    7. ' :' → logprob: -12.002310752868652
    8. ':

' → logprob: -12.502310752868652
    9. ' :
' → logprob: -12.502310752868652
    10. ',' → logprob: -12.627310752868652

Token 315: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1037038266658783
    2. ' for' → logprob: -2.353703737258911
    3. 'for' → logprob: -6.60370397567749
    4. '   ' → logprob: -6.72870397567749
    5. '    ' → logprob: -8.353703498840332
    6. ',' → logprob: -8.978703498840332
    7. '     ' → logprob: -9.228703498840332
    8. '<|end|>' → logprob: -9.228703498840332
    9. '           ' → logprob: -10.103703498840332
    10. '      ' → logprob: -10.103703498840332

Token 316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5669452548027039
    2. ' for' → logprob: -1.1919453144073486
    3. 'for' → logprob: -2.3169453144073486
    4. '   ' → logprob: -3.5669453144073486
    5. 'Ans' → logprob: -7.1919450759887695
    6. '     ' → logprob: -8.56694507598877
    7. ' ' → logprob: -8.69194507598877
    8. '
' → logprob: -8.69194507598877
    9. ' Ans' → logprob: -8.81694507598877
    10. '           ' → logprob: -8.94194507598877

Token 317: ' even' (ID: 1952)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19171962141990662
    2. '   ' → logprob: -1.941719651222229
    3. 'for' → logprob: -3.9417195320129395
    4. '       ' → logprob: -5.1917195320129395
    5. ' continue' → logprob: -6.1917195320129395
    6. '    ' → logprob: -6.9417195320129395
    7. ' n' → logprob: -7.4417195320129395
    8. ' ' → logprob: -7.6917195320129395
    9. '
' → logprob: -8.316720008850098
    10. 'n' → logprob: -9.004220008850098

Token 318: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46703922748565674
    2. ':' → logprob: -1.4670392274856567
    3. '       ' → logprob: -2.592039108276367
    4. '   ' → logprob: -3.092039108276367
    5. '
' → logprob: -4.467039108276367
    6. ',' → logprob: -5.842039108276367
    7. '):
' → logprob: -6.592039108276367
    8. ' :
' → logprob: -6.717039108276367
    9. ' for' → logprob: -6.842039108276367
    10. '    
' → logprob: -7.467039108276367

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009219751693308353
    2. ' for' → logprob: -5.009219646453857
    3. '   ' → logprob: -6.384219646453857
    4. ',' → logprob: -7.759219646453857
    5. 'for' → logprob: -8.884220123291016
    6. '
' → logprob: -10.384220123291016
    7. '     ' → logprob: -10.509220123291016
    8. '<|end|>' → logprob: -10.509220123291016
    9. '    ' → logprob: -10.884220123291016
    10. '	   ' → logprob: -11.009220123291016

Token 320: ' np' (ID: 5374)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22298628091812134
    2. 'for' → logprob: -1.9729862213134766
    3. '       ' → logprob: -3.3479862213134766
    4. '   ' → logprob: -3.7229862213134766
    5. 'Ans' → logprob: -8.222986221313477
    6. '    ' → logprob: -8.347986221313477
    7. ' Ans' → logprob: -8.347986221313477
    8. ' ' → logprob: -8.597986221313477
    9. '
' → logprob: -9.472986221313477
    10. '	for' → logprob: -9.597986221313477

Token 321: ' -=' (ID: 12583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9734499454498291
    2. '=' → logprob: -1.348449945449829
    3. ' +=' → logprob: -1.848449945449829
    4. '+=' → logprob: -2.473449945449829
    5. ',' → logprob: -2.598449945449829
    6. ' -=' → logprob: -4.09844970703125
    7. ' in' → logprob: -4.97344970703125
    8. 'for' → logprob: -5.59844970703125
    9. '-=' → logprob: -5.59844970703125
    10. 'in' → logprob: -5.84844970703125

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003926615754608065
    2. ' ' → logprob: -7.875392436981201
    3. '2' → logprob: -11.75039291381836
    4. '   ' → logprob: -12.62539291381836
    5. '0' → logprob: -13.87539291381836
    6. '       ' → logprob: -16.00039291381836
    7. '
' → logprob: -16.18789291381836
    8. '3' → logprob: -17.00039291381836
    9. '           ' → logprob: -17.06289291381836
    10. '    ' → logprob: -17.31289291381836

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.387458365177736e-05
    2. ' ' → logprob: -9.625083923339844
    3. '2' → logprob: -11.375083923339844
    4. '0' → logprob: -12.500083923339844
    5. '   ' → logprob: -13.000083923339844
    6. '       ' → logprob: -16.125083923339844
    7. '
' → logprob: -16.375083923339844
    8. '           ' → logprob: -17.250083923339844
    9. '  ' → logprob: -17.500083923339844
    10. '(' → logprob: -17.687583923339844

Token 324: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12020333111286163
    2. '<|end|>' → logprob: -2.4952032566070557
    3. '
' → logprob: -3.7452032566070557
    4. ' for' → logprob: -5.870203495025635
    5. '    
' → logprob: -6.620203495025635
    6. '<|end|>' → logprob: -6.745203495025635
    7. ',' → logprob: -7.120203495025635
    8. 'for' → logprob: -8.370203018188477
    9. ')' → logprob: -8.370203018188477
    10. '  
' → logprob: -8.995203018188477

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0702722892165184
    2. '<|end|>' → logprob: -3.070272207260132
    3. ' for' → logprob: -4.195272445678711
    4. '
' → logprob: -6.445272445678711
    5. ',' → logprob: -6.695272445678711
    6. 'for' → logprob: -6.820272445678711
    7. '    
' → logprob: -6.820272445678711
    8. ')' → logprob: -8.320272445678711
    9. '<|end|>' → logprob: -8.320272445678711
    10. '  
' → logprob: -8.695272445678711

Token 326: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9487214684486389
    2. '   ' → logprob: -1.0737214088439941
    3. 'for' (adapté à ' for') → logprob: -1.3237214088439941
    4. 'Ans' → logprob: -6.323721408843994
    5. '       ' → logprob: -7.573721408843994
    6. '    
' → logprob: -7.698721408843994
    7. ' Ans' → logprob: -8.323721885681152
    8. 'if' → logprob: -8.573721885681152
    9. '
' → logprob: -8.698721885681152
    10. '    ' → logprob: -8.823721885681152

Token 327: ' nq' (ID: 183073)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7236387729644775
    2. 'n' → logprob: -1.8486387729644775
    3. 'x' → logprob: -1.8486387729644775
    4. ' j' → logprob: -2.4736387729644775
    5. ' n' → logprob: -2.8486387729644775
    6. 'np' → logprob: -2.8486387729644775
    7. ' x' → logprob: -2.8486387729644775
    8. 'a' → logprob: -3.2236387729644775
    9. ' np' → logprob: -3.4736387729644775
    10. 'r' → logprob: -3.5986387729644775

Token 328: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026681087911128998
    2. 'in' → logprob: -3.6516811847686768
    3. ' ' → logprob: -9.276680946350098
    4. ')' → logprob: -9.276680946350098
    5. ',' → logprob: -9.276680946350098
    6. 'n' → logprob: -9.526680946350098
    7. ',n' → logprob: -12.651680946350098
    8. 'range' → logprob: -12.651680946350098
    9. '    ' → logprob: -12.776680946350098
    10. '	in' → logprob: -13.151680946350098

Token 329: ' range' (ID: 3352)
  Prédit: 'tpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tpl' → logprob: -0.16117802262306213
    2. ' tpl' → logprob: -2.0361781120300293
    3. 'range' → logprob: -4.286178112030029
    4. ' range' → logprob: -5.661178112030029
    5. '*' → logprob: -7.286178112030029
    6. '_tpl' → logprob: -9.036177635192871
    7. 'tp' → logprob: -9.786177635192871
    8. ' in' → logprob: -10.161177635192871
    9. '0' → logprob: -10.161177635192871
    10. 'in' → logprob: -10.661177635192871

Token 330: '(np' (ID: 21997)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7167642116546631
    2. '(np' → logprob: -0.7167642116546631
    3. '(*' → logprob: -4.341764450073242
    4. '(n' → logprob: -5.216764450073242
    5. '(' → logprob: -5.591764450073242
    6. '(tp' → logprob: -7.591764450073242
    7. '((' → logprob: -8.466764450073242
    8. '(next' → logprob: -8.591764450073242
    9. '(K' → logprob: -9.591764450073242
    10. '(*(' → logprob: -9.966764450073242

Token 331: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3544671833515167
    2. ' +' → logprob: -1.3544671535491943
    3. '):' → logprob: -3.6044671535491943
    4. '):
' → logprob: -4.354467391967773
    5. ' ):' → logprob: -9.479467391967773
    6. '   ' → logprob: -9.479467391967773
    7. ' ):
' → logprob: -10.104467391967773
    8. ',' → logprob: -10.354467391967773
    9. '       ' → logprob: -10.979467391967773
    10. ')' → logprob: -11.229467391967773

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011910604080185294
    2. ' ' → logprob: -6.751191139221191
    3. '(' → logprob: -11.126191139221191
    4. ')' → logprob: -12.751191139221191
    5. '2' → logprob: -13.251191139221191
    6. ' (' → logprob: -14.751191139221191
    7. '0' → logprob: -15.251191139221191
    8. '```' → logprob: -15.251191139221191
    9. '):
' → logprob: -15.876191139221191
    10. '   ' → logprob: -15.876191139221191

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001114106344175525
    2. ' ' → logprob: -9.25011157989502
    3. '2' → logprob: -11.25011157989502
    4. '0' → logprob: -14.00011157989502
    5. ')' → logprob: -14.87511157989502
    6. '(' → logprob: -15.43761157989502
    7. '```' → logprob: -15.56261157989502
    8. '   ' → logprob: -15.68761157989502
    9. '3' → logprob: -16.937610626220703
    10. '
' → logprob: -17.437610626220703

Token 334: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16172809898853302
    2. '):
' → logprob: -1.9117281436920166
    3. ':' → logprob: -8.036727905273438
    4. '():' → logprob: -8.036727905273438
    5. '()):
' → logprob: -8.036727905273438
    6. '():
' → logprob: -8.411727905273438
    7. '       ' → logprob: -9.411727905273438
    8. '   ' → logprob: -10.036727905273438
    9. '<|end|>' → logprob: -10.411727905273438
    10. '):
' → logprob: -10.411727905273438

Token 335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017494168132543564
    2. '<|end|>' → logprob: -5.142494201660156
    3. '       ' → logprob: -5.392494201660156
    4. ',' → logprob: -5.642494201660156
    5. '               ' → logprob: -6.892494201660156
    6. ':' → logprob: -7.392494201660156
    7. '	       ' → logprob: -7.392494201660156
    8. '   ' → logprob: -8.267494201660156
    9. '<|end|>' → logprob: -8.517494201660156
    10. ':
' → logprob: -9.642494201660156

Token 336: ' t' (ID: 260)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06465362012386322
    2. 'Ans' → logprob: -3.5646536350250244
    3. '           ' → logprob: -4.189653396606445
    4. ' for' → logprob: -5.189653396606445
    5. ' ans' → logprob: -5.564653396606445
    6. 'ans' → logprob: -6.439653396606445
    7. ' Ans' → logprob: -6.814653396606445
    8. '   ' → logprob: -7.064653396606445
    9. '       ' → logprob: -7.064653396606445
    10. 'for' → logprob: -7.189653396606445

Token 337: '1' (ID: 16)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.12078402191400528
    2. 'q' → logprob: -2.995784044265747
    3. '       ' → logprob: -3.620784044265747
    4. 'for' → logprob: -4.495783805847168
    5. '           ' → logprob: -4.745783805847168
    6. 'p' → logprob: -6.120783805847168
    7. 'ql' → logprob: -6.370783805847168
    8. ' for' → logprob: -6.620783805847168
    9. 'cr' → logprob: -6.745783805847168
    10. 'r' → logprob: -6.745783805847168

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333674788475037
    2. ' =' → logprob: -0.7583674788475037
    3. '=n' → logprob: -7.508367538452148
    4. ',' → logprob: -9.383367538452148
    5. '=(' → logprob: -10.383367538452148
    6. ',n' → logprob: -11.133367538452148
    7. '(n' → logprob: -11.258367538452148
    8. ')' → logprob: -11.508367538452148
    9. ')=' → logprob: -11.633367538452148
    10. 'n' → logprob: -11.758367538452148

Token 339: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46302464604377747
    2. ' n' → logprob: -1.213024616241455
    3. '(n' → logprob: -3.338024616241455
    4. ' (' → logprob: -3.463024616241455
    5. '(' → logprob: -5.713024616241455
    6. 'fact' → logprob: -6.713024616241455
    7. '           ' → logprob: -7.463024616241455
    8. 'pow' → logprob: -7.713024616241455
    9. ' fact' → logprob: -8.213025093078613
    10. '((' → logprob: -9.088025093078613

Token 340: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05376122519373894
    2. 'fact' → logprob: -3.0537612438201904
    3. '(n' → logprob: -6.428761005401611
    4. 'K' → logprob: -7.053761005401611
    5. ' n' → logprob: -7.178761005401611
    6. '(' → logprob: -8.17876148223877
    7. 'np' → logprob: -8.30376148223877
    8. 'Ans' → logprob: -8.42876148223877
    9. ' fact' → logprob: -8.80376148223877
    10. 'ans' → logprob: -8.80376148223877

Token 341: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.004254338797181845
    2. ')' → logprob: -6.379254341125488
    3. 'q' → logprob: -7.254254341125488
    4. '   ' → logprob: -8.004254341125488
    5. ' cr' → logprob: -8.254254341125488
    6. ' -' → logprob: -9.004254341125488
    7. ' ' → logprob: -9.129254341125488
    8. '[' → logprob: -9.379254341125488
    9. 'i' → logprob: -9.504254341125488
    10. 'p' → logprob: -9.629254341125488

Token 342: '(np' (ID: 21997)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.061226680874824524
    2. '(n' → logprob: -3.4362266063690186
    3. '(' → logprob: -4.436226844787598
    4. '(N' → logprob: -5.061226844787598
    5. '(np' → logprob: -5.936226844787598
    6. '(i' → logprob: -6.061226844787598
    7. 'K' → logprob: -6.436226844787598
    8. '(t' → logprob: -6.561226844787598
    9. '((' → logprob: -8.436226844787598
    10. ')' → logprob: -8.811226844787598

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1775359958410263
    2. ',n' → logprob: -2.4275360107421875
    3. ' ,' → logprob: -2.8025360107421875
    4. '(n' → logprob: -4.5525360107421875
    5. ',np' → logprob: -6.6775360107421875
    6. ')' → logprob: -7.4275360107421875
    7. 'n' → logprob: -7.6775360107421875
    8. '           ' → logprob: -8.802536010742188
    9. '),' → logprob: -8.927536010742188
    10. ',
' → logprob: -9.302536010742188

Token 344: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012929741060361266
    2. ')' → logprob: -7.501293182373047
    3. ' nq' → logprob: -7.626293182373047
    4. ')n' → logprob: -8.876293182373047
    5. '(n' → logprob: -10.251293182373047
    6. '           ' → logprob: -10.626293182373047
    7. '<|end|>' → logprob: -11.376293182373047
    8. 'q' → logprob: -11.501293182373047
    9. '<|end|>' → logprob: -12.501293182373047
    10. '[n' → logprob: -12.751293182373047

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028752496000379324
    2. ')*' → logprob: -6.502875328063965
    3. '))' → logprob: -7.002875328063965
    4. ' )' → logprob: -8.127875328063965
    5. ')
' → logprob: -9.377875328063965
    6. '*)' → logprob: -11.002875328063965
    7. '),' → logprob: -11.377875328063965
    8. '*' → logprob: -11.877875328063965
    9. ')))' → logprob: -12.377875328063965
    10. '   ' → logprob: -12.377875328063965

Token 346: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07231046259403229
    2. '*' → logprob: -2.697310447692871
    3. ' *
' → logprob: -6.697310447692871
    4. ')' → logprob: -7.322310447692871
    5. '*
' → logprob: -9.072310447692871
    6. ',' → logprob: -9.947310447692871
    7. '*n' → logprob: -10.197310447692871
    8. ' *
' → logprob: -10.447310447692871
    9. ' ' → logprob: -10.697310447692871
    10. '           ' → logprob: -10.697310447692871

Token 347: ' pow' (ID: 9779)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.335614413022995
    2. 'pow' → logprob: -1.4606144428253174
    3. 'fact' → logprob: -3.0856144428253174
    4. '(n' → logprob: -5.585614204406738
    5. ' n' → logprob: -6.710614204406738
    6. ' pow' → logprob: -7.585614204406738
    7. '(pow' → logprob: -8.210614204406738
    8. ' fact' → logprob: -8.460614204406738
    9. '(' → logprob: -8.460614204406738
    10. '   ' → logprob: -8.960614204406738

Token 348: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2489992082118988
    2. '2' → logprob: -2.4989991188049316
    3. '(N' → logprob: -2.9989991188049316
    4. '(n' → logprob: -3.1239991188049316
    5. '(K' → logprob: -3.2489991188049316
    6. '(M' → logprob: -7.123999118804932
    7. '
' → logprob: -7.248999118804932
    8. '(
' → logprob: -7.623999118804932
    9. '(pow' → logprob: -7.873999118804932
    10. 'K' → logprob: -8.24899959564209

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33948245644569397
    2. 'N' → logprob: -1.5894824266433716
    3. '26' → logprob: -3.964482545852661
    4. 'K' → logprob: -4.339482307434082
    5. '(N' → logprob: -4.839482307434082
    6. '3' → logprob: -4.964482307434082
    7. '(' → logprob: -5.089482307434082
    8. 'n' → logprob: -5.214482307434082
    9. '10' → logprob: -5.339482307434082
    10. '4' → logprob: -5.464482307434082

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06777708977460861
    2. '(n' → logprob: -2.817777156829834
    3. ',n' → logprob: -5.567777156829834
    4. '(' → logprob: -7.692777156829834
    5. 'n' → logprob: -7.942777156829834
    6. ',np' → logprob: -7.942777156829834
    7. '(np' → logprob: -8.067776679992676
    8. ' ,' → logprob: -8.942776679992676
    9. ')' → logprob: -9.567776679992676
    10. 'np' → logprob: -10.192776679992676

Token 351: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050904180854558945
    2. 'K' → logprob: -3.8009042739868164
    3. 'np' → logprob: -4.550904273986816
    4. ' nq' → logprob: -5.300904273986816
    5. '(n' → logprob: -5.425904273986816
    6. 'MOD' → logprob: -5.800904273986816
    7. 'N' → logprob: -6.050904273986816
    8. '(K' → logprob: -7.675904273986816
    9. '(' → logprob: -7.675904273986816
    10. '   ' → logprob: -8.550904273986816

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002627662615850568
    2. ' ,' → logprob: -9.250263214111328
    3. ',n' → logprob: -9.250263214111328
    4. '%' → logprob: -10.750263214111328
    5. ')' → logprob: -10.875263214111328
    6. '(n' → logprob: -11.625263214111328
    7. ',
' → logprob: -12.250263214111328
    8. '))' → logprob: -12.375263214111328
    9. '*' → logprob: -13.000263214111328
    10. 'n' → logprob: -13.250263214111328

Token 353: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5928495486150496e-05
    2. ' MOD' → logprob: -11.250016212463379
    3. 'K' → logprob: -14.125016212463379
    4. 'N' → logprob: -14.375016212463379
    5. '
' → logprob: -14.375016212463379
    6. '           ' → logprob: -15.375016212463379
    7. 'MO' → logprob: -16.125015258789062
    8. '   ' → logprob: -16.250015258789062
    9. '
' → logprob: -16.250015258789062
    10. ')' → logprob: -16.625015258789062

Token 354: '))' (ID: 915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0235587358474731
    2. '))' → logprob: -1.0235587358474731
    3. ')' → logprob: -1.2735587358474731
    4. '   ' → logprob: -7.898558616638184
    5. '       ' → logprob: -8.273558616638184
    6. ' ,' → logprob: -8.398558616638184
    7. '),' → logprob: -9.398558616638184
    8. ')%' → logprob: -9.898558616638184
    9. '*' → logprob: -10.023558616638184
    10. ' *' → logprob: -10.148558616638184

Token 355: ' %' (ID: 1851)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1790481805801392
    2. ' %' → logprob: -1.1790481805801392
    3. '%' → logprob: -1.6790481805801392
    4. ')' → logprob: -1.9290481805801392
    5. ',' → logprob: -3.8040480613708496
    6. '<|end|>' → logprob: -4.42904806137085
    7. ')%' → logprob: -5.17904806137085
    8. ' *' → logprob: -5.17904806137085
    9. '<|end|>' → logprob: -6.55404806137085
    10. '%n' → logprob: -7.17904806137085

Token 356: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.610702363715973e-06
    2. ' MOD' → logprob: -11.875009536743164
    3. '998' → logprob: -13.750009536743164
    4. '
' → logprob: -14.375009536743164
    5. 'K' → logprob: -15.375009536743164
    6. '(M' → logprob: -15.625009536743164
    7. '```' → logprob: -16.375009536743164
    8. '999' → logprob: -16.375009536743164
    9. ' ' → logprob: -16.500009536743164
    10. 'MO' → logprob: -16.500009536743164

Token 357: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08099714666604996
    2. '<|end|>' → logprob: -2.7059972286224365
    3. ')' → logprob: -5.330996990203857
    4. ',' → logprob: -5.955996990203857
    5. '<|end|>' → logprob: -6.705996990203857
    6. '               ' → logprob: -7.455996990203857
    7. '       ' → logprob: -7.955996990203857
    8. '*' → logprob: -8.455997467041016
    9. '		' → logprob: -8.705997467041016
    10. ' ' → logprob: -8.705997467041016

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02022557705640793
    2. '<|end|>' → logprob: -4.395225524902344
    3. ')' → logprob: -5.895225524902344
    4. '               ' → logprob: -6.645225524902344
    5. '       ' → logprob: -6.770225524902344
    6. ',' → logprob: -7.020225524902344
    7. '*' → logprob: -8.270225524902344
    8. '   ' → logprob: -8.645225524902344
    9. '                   ' → logprob: -8.645225524902344
    10. '		' → logprob: -9.020225524902344

Token 359: ' nr' (ID: 24055)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06747392565011978
    2. ' t' → logprob: -3.567473888397217
    3. 't' → logprob: -3.692473888397217
    4. ' for' → logprob: -5.692473888397217
    5. '<|end|>' → logprob: -5.942473888397217
    6. 'n' → logprob: -6.817473888397217
    7. '   ' → logprob: -7.192473888397217
    8. 'for' → logprob: -7.442473888397217
    9. '       ' → logprob: -7.692473888397217
    10. ' n' → logprob: -7.692473888397217

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38694050908088684
    2. ' =' → logprob: -1.1369404792785645
    3. ',' → logprob: -10.261940956115723
    4. '=n' → logprob: -10.886940956115723
    5. ')' → logprob: -12.011940956115723
    6. '   ' → logprob: -13.511940956115723
    7. 'n' → logprob: -13.761940956115723
    8. ' ' → logprob: -14.011940956115723
    9. '           ' → logprob: -14.261940956115723
    10. '=np' → logprob: -14.386940956115723

Token 361: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7855430245399475
    2. 'tpl' → logprob: -1.4105429649353027
    3. 'n' → logprob: -2.1605429649353027
    4. 'N' → logprob: -2.6605429649353027
    5. ' K' → logprob: -3.6605429649353027
    6. '(n' → logprob: -3.6605429649353027
    7. ' tpl' → logprob: -3.6605429649353027
    8. '(K' → logprob: -4.535542964935303
    9. 'np' → logprob: -4.785542964935303
    10. 'i' → logprob: -5.910542964935303

Token 362: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1603299379348755
    2. '-' → logprob: -1.9103299379348755
    3. '-n' → logprob: -9.785329818725586
    4. '<|end|>' → logprob: -10.785329818725586
    5. '*' → logprob: -12.285329818725586
    6. ' ' → logprob: -12.535329818725586
    7. '   ' → logprob: -12.785329818725586
    8. '=' → logprob: -13.035329818725586
    9. '       ' → logprob: -13.160329818725586
    10. ' ' → logprob: -13.285329818725586

Token 363: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.32458481192588806
    2. 'n' → logprob: -1.8245848417282104
    3. '2' → logprob: -2.449584722518921
    4. ' np' → logprob: -4.6995849609375
    5. ' nq' → logprob: -4.9495849609375
    6. '(np' → logprob: -5.3245849609375
    7. '(' → logprob: -5.4495849609375
    8. '(n' → logprob: -6.3245849609375
    9. ' ' → logprob: -6.9495849609375
    10. ' (' → logprob: -7.5745849609375

Token 364: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030602457001805305
    2. '-' → logprob: -3.65560245513916
    3. '*' → logprob: -5.78060245513916
    4. ' *' → logprob: -7.03060245513916
    5. '<|end|>' → logprob: -8.65560245513916
    6. ')' → logprob: -10.53060245513916
    7. ' ' → logprob: -10.65560245513916
    8. '           ' → logprob: -10.78060245513916
    9. ',' → logprob: -11.15560245513916
    10. '+' → logprob: -11.28060245513916

Token 365: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004106896463781595
    2. ' ' → logprob: -5.8791069984436035
    3. '1' → logprob: -7.2541069984436035
    4. 'n' → logprob: -8.629106521606445
    5. '           ' → logprob: -8.879106521606445
    6. '(' → logprob: -9.504106521606445
    7. ' nq' → logprob: -9.754106521606445
    8. '   ' → logprob: -10.004106521606445
    9. '(n' → logprob: -10.629106521606445
    10. '*' → logprob: -10.879106521606445

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008591734222136438
    2. ' ' → logprob: -7.375859260559082
    3. '1' → logprob: -8.625859260559082
    4. '   ' → logprob: -11.125859260559082
    5. '3' → logprob: -11.500859260559082
    6. 'mul' → logprob: -12.250859260559082
    7. '           ' → logprob: -12.250859260559082
    8. 'n' → logprob: -12.375859260559082
    9. '       ' → logprob: -12.875859260559082
    10. '```' → logprob: -12.875859260559082

Token 367: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19958043098449707
    2. '-' → logprob: -1.949580430984497
    3. '<|end|>' → logprob: -4.074580192565918
    4. '           ' → logprob: -4.199580192565918
    5. '
' → logprob: -5.574580192565918
    6. '<|end|>' → logprob: -6.824580192565918
    7. '       ' → logprob: -7.949580192565918
    8. ')' → logprob: -8.324580192565918
    9. '   ' → logprob: -8.574580192565918
    10. '-n' → logprob: -8.824580192565918

Token 368: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7446925044059753
    2. '1' → logprob: -1.1196925640106201
    3. '(' → logprob: -2.24469256401062
    4. ' nq' → logprob: -2.74469256401062
    5. ' (' → logprob: -4.119692325592041
    6. '(n' → logprob: -4.744692325592041
    7. ' ' → logprob: -6.119692325592041
    8. ' n' → logprob: -6.994692325592041
    9. '2' → logprob: -8.7446928024292
    10. '           ' → logprob: -9.8696928024292

Token 369: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.972154974937439
    2. 'n' → logprob: -1.097154974937439
    3. '1' → logprob: -1.347154974937439
    4. '(n' → logprob: -4.0971550941467285
    5. ' nq' → logprob: -5.2221550941467285
    6. ' (' → logprob: -5.8471550941467285
    7. '2' → logprob: -6.4721550941467285
    8. ' ' → logprob: -7.4721550941467285
    9. ' n' → logprob: -8.47215461730957
    10. 't' → logprob: -8.59715461730957

Token 370: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4768662750720978
    2. '           ' → logprob: -1.3518662452697754
    3. '-' → logprob: -2.8518662452697754
    4. '
' → logprob: -3.6018662452697754
    5. '<|end|>' → logprob: -3.8518662452697754
    6. '-n' → logprob: -5.226866245269775
    7. ')' → logprob: -5.476866245269775
    8. '<|end|>' → logprob: -6.726866245269775
    9. '               ' → logprob: -7.726866245269775
    10. '+' → logprob: -8.226866722106934

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11883264780044556
    2. '<|end|>' → logprob: -2.243832588195801
    3. ')' → logprob: -5.368832588195801
    4. '<|end|>' → logprob: -7.993832588195801
    5. '       ' → logprob: -8.7438325881958
    6. '*' → logprob: -9.2438325881958
    7. ',' → logprob: -9.3688325881958
    8. '...' → logprob: -9.6188325881958
    9. '   ' → logprob: -9.6188325881958
    10. '```' → logprob: -9.8688325881958

Token 372: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6060788631439209
    2. 't' (adapté à ' t') → logprob: -1.231078863143921
    3. ' t' → logprob: -2.481078863143921
    4. 'ans' → logprob: -3.981078863143921
    5. ' for' → logprob: -3.981078863143921
    6. ' ans' → logprob: -4.6060791015625
    7. 'for' → logprob: -5.2310791015625
    8. '<|end|>' → logprob: -5.3560791015625
    9. 'nr' → logprob: -5.6060791015625
    10. 'n' → logprob: -5.6060791015625

Token 373: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6091631054878235
    2. 'r' → logprob: -1.3591630458831787
    3. '2' → logprob: -1.7341630458831787
    4. '=' → logprob: -4.859163284301758
    5. ' =' → logprob: -4.859163284301758
    6. '_' → logprob: -6.234163284301758
    7. '_r' → logprob: -7.234163284301758
    8. '3' → logprob: -7.484163284301758
    9. 'cr' → logprob: -7.484163284301758
    10. '           ' → logprob: -8.234163284301758

Token 374: 'a' (ID: 64)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759517550468445
    2. '=' → logprob: -0.8259517550468445
    3. '=n' → logprob: -12.20095157623291
    4. '   ' → logprob: -12.95095157623291
    5. '           ' → logprob: -13.82595157623291
    6. ' ' → logprob: -13.82595157623291
    7. ')' → logprob: -14.45095157623291
    8. '       ' → logprob: -14.82595157623291
    9. '=
' → logprob: -14.95095157623291
    10. '=(' → logprob: -15.32595157623291

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17978714406490326
    2. '=' → logprob: -1.8047871589660645
    3. '   ' → logprob: -11.304786682128906
    4. '=n' → logprob: -11.804786682128906
    5. '           ' → logprob: -12.179786682128906
    6. ' ' → logprob: -12.179786682128906
    7. 'n' → logprob: -12.804786682128906
    8. '    ' → logprob: -13.179786682128906
    9. '       ' → logprob: -13.304786682128906
    10. '=(' → logprob: -13.429786682128906

Token 376: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.758154034614563
    2. '(n' → logprob: -0.758154034614563
    3. ' (' → logprob: -3.7581539154052734
    4. ' n' → logprob: -4.133153915405273
    5. 'pow' → logprob: -4.633153915405273
    6. 'sum' → logprob: -5.883153915405273
    7. 'fact' → logprob: -6.133153915405273
    8. '(' → logprob: -6.258153915405273
    9. '(pow' → logprob: -6.258153915405273
    10. '(sum' → logprob: -7.008153915405273

Token 377: 'hr' (ID: 2012)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0011077094823122025
    2. 'hr' → logprob: -7.001107692718506
    3. 'r' → logprob: -10.251108169555664
    4. 'pr' → logprob: -10.501108169555664
    5. 'Cr' → logprob: -11.001108169555664
    6. 'c' → logprob: -11.001108169555664
    7. '```' → logprob: -11.751108169555664
    8. '(cr' → logprob: -11.876108169555664
    9. 'pow' → logprob: -12.001108169555664
    10. '[' → logprob: -12.063608169555664

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.028422724455595016
    2. '(np' → logprob: -4.278422832489014
    3. '(' → logprob: -4.903422832489014
    4. 'nr' → logprob: -5.153422832489014
    5. '(K' → logprob: -7.903422832489014
    6. 'K' → logprob: -8.528422355651855
    7. ' nr' → logprob: -9.528422355651855
    8. 'np' → logprob: -9.903422355651855
    9. '(
' → logprob: -10.528422355651855
    10. '((' → logprob: -10.528422355651855

Token 379: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008469192311167717
    2. '(n' → logprob: -5.758469104766846
    3. ',' → logprob: -6.383469104766846
    4. ',r' → logprob: -6.758469104766846
    5. '(np' → logprob: -7.383469104766846
    6. 'nr' → logprob: -7.758469104766846
    7. '(r' → logprob: -8.383469581604004
    8. 'R' → logprob: -8.383469581604004
    9. ',n' → logprob: -8.883469581604004
    10. 'n' → logprob: -8.883469581604004

Token 380: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011809398420155048
    2. ',n' → logprob: -5.011809349060059
    3. '(n' → logprob: -5.636809349060059
    4. ' ,' → logprob: -7.136809349060059
    5. ',np' → logprob: -8.011809349060059
    6. '(' → logprob: -8.761809349060059
    7. '(np' → logprob: -9.886809349060059
    8. ' -' → logprob: -10.386809349060059
    9. '           ' → logprob: -10.761809349060059
    10. '+' → logprob: -10.761809349060059

Token 381: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08616238087415695
    2. ' nq' → logprob: -3.2111623287200928
    3. 'np' → logprob: -3.3361623287200928
    4. '1' → logprob: -6.086162567138672
    5. '(n' → logprob: -6.836162567138672
    6. 'K' → logprob: -7.461162567138672
    7. '
' → logprob: -7.836162567138672
    8. ' n' → logprob: -7.961162567138672
    9. ' np' → logprob: -8.211162567138672
    10. '(' → logprob: -8.336162567138672

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031526461243629456
    2. ',n' → logprob: -6.128152847290039
    3. ' ,' → logprob: -7.378152847290039
    4. '+' → logprob: -9.128152847290039
    5. '(n' → logprob: -9.753152847290039
    6. '-' → logprob: -10.253152847290039
    7. ' -' → logprob: -10.503152847290039
    8. ' +' → logprob: -10.628152847290039
    9. '<|end|>' → logprob: -11.003152847290039
    10. '   ' → logprob: -11.253152847290039

Token 383: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11930622160434723
    2. ' nq' → logprob: -2.2443063259124756
    3. 'np' → logprob: -5.4943060874938965
    4. '           ' → logprob: -6.9943060874938965
    5. ' n' → logprob: -8.619306564331055
    6. 'nr' → logprob: -8.619306564331055
    7. 'K' → logprob: -8.744306564331055
    8. 'i' → logprob: -9.119306564331055
    9. '               ' → logprob: -9.369306564331055
    10. '2' → logprob: -9.744306564331055

Token 384: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.02327299118042
    2. ')' → logprob: -1.14827299118042
    3. '-' → logprob: -1.27327299118042
    4. '<|end|>' → logprob: -4.14827299118042
    5. '-n' → logprob: -4.27327299118042
    6. '<|end|>' → logprob: -4.77327299118042
    7. ',' → logprob: -6.02327299118042
    8. 'n' → logprob: -7.39827299118042
    9. '   ' → logprob: -7.77327299118042
    10. '...' → logprob: -8.273273468017578

Token 385: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7566490769386292
    2. '1' → logprob: -1.6316490173339844
    3. '2' → logprob: -2.2566490173339844
    4. ' nq' → logprob: -2.3816490173339844
    5. 'np' → logprob: -2.7566490173339844
    6. 'K' → logprob: -3.3816490173339844
    7. 'i' → logprob: -3.3816490173339844
    8. 'N' → logprob: -6.506649017333984
    9. 'nr' → logprob: -7.256649017333984
    10. ' ' → logprob: -7.381649017333984

Token 386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005760280764661729
    2. ')
' → logprob: -8.12557601928711
    3. '-' → logprob: -9.25057601928711
    4. ' )' → logprob: -9.50057601928711
    5. ' -' → logprob: -10.87557601928711
    6. '<|end|>' → logprob: -10.87557601928711
    7. '<|end|>' → logprob: -11.25057601928711
    8. '   ' → logprob: -11.87557601928711
    9. '))' → logprob: -11.87557601928711
    10. '+' → logprob: -12.00057601928711

Token 387: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21014095842838287
    2. '           ' → logprob: -2.2101409435272217
    3. '<|end|>' → logprob: -2.5851409435272217
    4. '<|end|>' → logprob: -6.585141181945801
    5. '       ' → logprob: -7.335141181945801
    6. '%' → logprob: -7.585141181945801
    7. ')
' → logprob: -8.2101411819458
    8. ')t' → logprob: -8.2101411819458
    9. '               ' → logprob: -8.3351411819458
    10. ')%' → logprob: -8.3351411819458

Token 388: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03365699201822281
    2. ' MOD' → logprob: -3.4086570739746094
    3. '_MOD' → logprob: -12.40865707397461
    4. ' ' → logprob: -12.53365707397461
    5. '.MOD' → logprob: -13.65865707397461
    6. ')' → logprob: -14.03365707397461
    7. '  ' → logprob: -15.15865707397461
    8. ' ' → logprob: -15.28365707397461
    9. '```' → logprob: -15.53365707397461
    10. '100' → logprob: -15.78365707397461

Token 389: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15342280268669128
    2. '<|end|>' → logprob: -2.4034228324890137
    3. ')' → logprob: -3.0284228324890137
    4. '<|end|>' → logprob: -6.403422832489014
    5. '       ' → logprob: -7.653422832489014
    6. '
' → logprob: -8.278422355651855
    7. '               ' → logprob: -8.528422355651855
    8. '   ' → logprob: -8.903422355651855
    9. ',' → logprob: -9.028422355651855
    10. '		' → logprob: -9.403422355651855

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40267762541770935
    2. '<|end|>' → logprob: -1.5276776552200317
    3. ')' → logprob: -2.277677536010742
    4. '       ' → logprob: -5.277677536010742
    5. '               ' → logprob: -6.527677536010742
    6. '   ' → logprob: -7.027677536010742
    7. ' ' → logprob: -7.152677536010742
    8. '<|end|>' → logprob: -7.277677536010742
    9. '		' → logprob: -7.902677536010742
    10. ']' → logprob: -8.277677536010742

Token 391: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5436180233955383
    2. '<|end|>' → logprob: -0.9186180233955383
    3. ')' → logprob: -4.668618202209473
    4. '       ' → logprob: -5.418618202209473
    5. '<|end|>' → logprob: -6.418618202209473
    6. ' t' → logprob: -7.043618202209473
    7. ' ' → logprob: -7.043618202209473
    8. '		' → logprob: -7.793618202209473
    9. '               ' → logprob: -7.918618202209473
    10. '          ' → logprob: -7.918618202209473

Token 392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019253721460700035
    2. ' +=' → logprob: -4.769253730773926
    3. '1' → logprob: -5.394253730773926
    4. '+=' → logprob: -5.644253730773926
    5. '=' → logprob: -7.894253730773926
    6. ' =' → logprob: -8.144253730773926
    7. 'erm' → logprob: -8.269253730773926
    8. '3' → logprob: -8.394253730773926
    9. 'w' → logprob: -8.769253730773926
    10. 'r' → logprob: -9.269253730773926

Token 393: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2356869876384735
    2. '=' → logprob: -1.610687017440796
    3. ' =' → logprob: -4.735686779022217
    4. 'b' → logprob: -6.735686779022217
    5. '<|end|>' → logprob: -9.235687255859375
    6. '+=' → logprob: -10.485687255859375
    7. 'A' → logprob: -10.860687255859375
    8. '   ' → logprob: -10.860687255859375
    9. ' ' → logprob: -11.110687255859375
    10. '```' → logprob: -11.860687255859375

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575950562953949
    2. ' =' → logprob: -0.825950562953949
    3. '   ' → logprob: -12.200950622558594
    4. '=
' → logprob: -13.325950622558594
    5. '=(' → logprob: -13.950950622558594
    6. ' ' → logprob: -14.075950622558594
    7. '           ' → logprob: -14.200950622558594
    8. ' =
' → logprob: -14.575950622558594
    9. ')' → logprob: -15.575950622558594
    10. ' =(' → logprob: -15.575950622558594

Token 395: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2798011004924774
    2. '(n' → logprob: -1.7798011302947998
    3. ' n' → logprob: -3.2798011302948
    4. ' (' → logprob: -4.654800891876221
    5. 'pow' → logprob: -4.904800891876221
    6. '0' → logprob: -5.404800891876221
    7. 't' → logprob: -5.654800891876221
    8. '(' → logprob: -5.779800891876221
    9. 'fact' → logprob: -6.904800891876221
    10. '(t' → logprob: -6.904800891876221

Token 396: 'hr' (ID: 2012)
  Prédit: 'hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.4021647572517395
    2. 'cr' → logprob: -1.1521646976470947
    3. 'p' → logprob: -6.277164936065674
    4. 'q' → logprob: -6.277164936065674
    5. 'r' → logprob: -6.777164936065674
    6. 'qr' → logprob: -7.027164936065674
    7. 'np' → logprob: -7.027164936065674
    8. '(n' → logprob: -7.152164936065674
    9. 'hq' → logprob: -7.277164936065674
    10. 'cq' → logprob: -7.402164936065674

Token 397: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0207589790225029
    2. '(' → logprob: -4.645759105682373
    3. '(np' → logprob: -4.770759105682373
    4. 'nr' → logprob: -7.145759105682373
    5. '(K' → logprob: -7.395759105682373
    6. '(t' → logprob: -8.520758628845215
    7. 'n' → logprob: -8.645758628845215
    8. 'K' → logprob: -8.770758628845215
    9. '(N' → logprob: -9.020758628845215
    10. '((' → logprob: -9.395758628845215

Token 398: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003627627622336149
    2. 'p' → logprob: -6.128627777099609
    3. 'q' → logprob: -7.378627777099609
    4. 'nr' → logprob: -8.87862777709961
    5. '-' → logprob: -9.50362777709961
    6. ',' → logprob: -9.50362777709961
    7. '(n' → logprob: -9.50362777709961
    8. '(np' → logprob: -9.62862777709961
    9. 'n' → logprob: -9.87862777709961
    10. 'np' → logprob: -10.25362777709961

Token 399: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23981817066669464
    2. ' +' → logprob: -1.9898182153701782
    3. '+n' → logprob: -2.6148180961608887
    4. ',' → logprob: -6.239818096160889
    5. '+t' → logprob: -8.364818572998047
    6. '-n' → logprob: -8.989818572998047
    7. '-' → logprob: -9.114818572998047
    8. 'n' → logprob: -9.239818572998047
    9. ',n' → logprob: -9.239818572998047
    10. '+r' → logprob: -9.489818572998047

Token 400: ' nq' (ID: 183073)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.48962974548339844
    2. 'np' → logprob: -1.7396297454833984
    3. 'n' → logprob: -1.9896297454833984
    4. ' nq' → logprob: -2.9896297454833984
    5. 'K' → logprob: -5.364629745483398
    6. '1' → logprob: -5.489629745483398
    7. 'i' → logprob: -5.989629745483398
    8. ' N' → logprob: -5.989629745483398
    9. '(n' → logprob: -6.239629745483398
    10. '0' → logprob: -6.489629745483398

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6405431032180786
    2. '+' → logprob: -1.1405431032180786
    3. ' +' → logprob: -2.765542984008789
    4. '-' → logprob: -3.265542984008789
    5. ' -' → logprob: -3.265542984008789
    6. ',n' → logprob: -5.390542984008789
    7. '+n' → logprob: -5.390542984008789
    8. '-n' → logprob: -6.140542984008789
    9. ' ,' → logprob: -6.890542984008789
    10. ')' → logprob: -7.765542984008789

Token 402: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1444919854402542
    2. ' N' → logprob: -2.0194919109344482
    3. 'n' → logprob: -7.644492149353027
    4. ' nq' → logprob: -7.894492149353027
    5. 'np' → logprob: -8.519492149353027
    6. 'K' → logprob: -8.519492149353027
    7. ' n' → logprob: -8.894492149353027
    8. 'Np' → logprob: -9.019492149353027
    9. ' np' → logprob: -9.894492149353027
    10. '(N' → logprob: -10.269492149353027

Token 403: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6620866656303406
    2. '-' → logprob: -0.9120866656303406
    3. '-n' → logprob: -3.0370867252349854
    4. '+' → logprob: -3.5370867252349854
    5. ')' → logprob: -5.787086486816406
    6. ' +' → logprob: -6.787086486816406
    7. '+n' → logprob: -8.037086486816406
    8. '   ' → logprob: -8.287086486816406
    9. 'n' → logprob: -9.037086486816406
    10. '
' → logprob: -9.412086486816406

Token 404: ' nq' (ID: 183073)
  Prédit: ' nq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nq' → logprob: -1.1150522232055664
    2. 'np' → logprob: -1.2400522232055664
    3. 'n' → logprob: -1.3650522232055664
    4. 'N' → logprob: -2.7400522232055664
    5. '1' → logprob: -3.7400522232055664
    6. '(n' → logprob: -3.8650522232055664
    7. 'r' → logprob: -6.365052223205566
    8. '(' → logprob: -6.365052223205566
    9. 'K' → logprob: -6.490052223205566
    10. '(np' → logprob: -6.740052223205566

Token 405: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007944972603581846
    2. '+' → logprob: -8.000794410705566
    3. '-' → logprob: -8.875794410705566
    4. ')
' → logprob: -9.250794410705566
    5. ' )' → logprob: -9.250794410705566
    6. ' -' → logprob: -10.250794410705566
    7. ' +' → logprob: -10.750794410705566
    8. '```' → logprob: -10.875794410705566
    9. '   ' → logprob: -11.250794410705566
    10. ')%' → logprob: -11.750794410705566

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019531534053385258
    2. ' ' → logprob: -9.375195503234863
    3. '2' → logprob: -9.500195503234863
    4. '           ' → logprob: -11.250195503234863
    5. '
' → logprob: -12.000195503234863
    6. '   ' → logprob: -12.500195503234863
    7. '0' → logprob: -12.875195503234863
    8. 'n' → logprob: -13.125195503234863
    9. ')' → logprob: -13.250195503234863
    10. 'np' → logprob: -13.500195503234863

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. '2' → logprob: -11.125030517578125
    3. ' ' → logprob: -11.625030517578125
    4. '
' → logprob: -13.000030517578125
    5. '0' → logprob: -13.500030517578125
    6. '   ' → logprob: -14.500030517578125
    7. '           ' → logprob: -14.625030517578125
    8. ')' → logprob: -15.000030517578125
    9. '```' → logprob: -15.625030517578125
    10. '(' → logprob: -15.687530517578125

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023643692838959396
    2. ')
' → logprob: -9.000236511230469
    3. ')%' → logprob: -10.125236511230469
    4. '           ' → logprob: -10.750236511230469
    5. '<|end|>' → logprob: -11.125236511230469
    6. '   ' → logprob: -11.625236511230469
    7. ' )' → logprob: -11.750236511230469
    8. '       ' → logprob: -12.125236511230469
    9. '```' → logprob: -12.250236511230469
    10. '<|end|>' → logprob: -13.625236511230469

Token 409: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5463857054710388
    2. '%' → logprob: -1.4213857650756836
    3. ' %' → logprob: -2.6713857650756836
    4. ')%' → logprob: -2.7963857650756836
    5. '<|end|>' → logprob: -3.0463857650756836
    6. '<|end|>' → logprob: -7.171385765075684
    7. '%)' → logprob: -8.046385765075684
    8. '           ' → logprob: -8.546385765075684
    9. ']%' → logprob: -9.296385765075684
    10. '```' → logprob: -9.421385765075684

Token 410: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5759592652320862
    2. ' MOD' → logprob: -0.8259592652320862
    3. '_MOD' → logprob: -10.950959205627441
    4. '```' → logprob: -14.200959205627441
    5. '.MOD' → logprob: -14.450959205627441
    6. ' ' → logprob: -14.700959205627441
    7. ' ' → logprob: -15.325959205627441
    8. ')' → logprob: -16.825960159301758
    9. 'mod' → logprob: -17.200960159301758
    10. '(M' → logprob: -17.200960159301758

Token 411: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33464375138282776
    2. '<|end|>' → logprob: -1.3346437215805054
    3. ')' → logprob: -3.959643840789795
    4. '<|end|>' → logprob: -7.834643840789795
    5. '%' → logprob: -8.209643363952637
    6. '		' → logprob: -8.334643363952637
    7. '       ' → logprob: -8.709643363952637
    8. '               ' → logprob: -9.084643363952637
    9. '
' → logprob: -9.209643363952637
    10. ',' → logprob: -9.209643363952637

Token 412: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' Ans' (ID: 22542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02095184475183487
    2. ')' → logprob: -5.020951747894287
    3. '<|end|>' → logprob: -5.020951747894287
    4. ' t' → logprob: -6.395951747894287
    5. 't' → logprob: -6.395951747894287
    6. '       ' → logprob: -6.645951747894287
    7. '               ' → logprob: -7.270951747894287
    8. '		' → logprob: -8.270952224731445
    9. '                   ' → logprob: -8.395952224731445
    10. ',' → logprob: -8.770952224731445

Token 414: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4801085889339447
    2. ' +=' → logprob: -0.9801086187362671
    3. '=' → logprob: -5.230108737945557
    4. ' =' → logprob: -7.855108737945557
    5. '   ' → logprob: -9.980108261108398
    6. ']+=' → logprob: -10.230108261108398
    7. ' ^=' → logprob: -10.230108261108398
    8. '+' → logprob: -10.480108261108398
    9. '```' → logprob: -10.605108261108398
    10. ')' → logprob: -10.855108261108398

Token 415: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05550938844680786
    2. ' (' → logprob: -2.930509328842163
    3. '(A' → logprob: -8.180509567260742
    4. '(ans' → logprob: -8.180509567260742
    5. '(t' → logprob: -10.180509567260742
    6. '           ' → logprob: -11.305509567260742
    7. '   ' → logprob: -12.055509567260742
    8. '(T' → logprob: -12.805509567260742
    9. '       ' → logprob: -13.680509567260742
    10. '(Mod' → logprob: -13.805509567260742

Token 416: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -0.0005404045223258436
    2. '(' → logprob: -7.750540256500244
    3. ' Ans' → logprob: -9.500540733337402
    4. 'Answer' → logprob: -10.875540733337402
    5. ' Ansatz' → logprob: -12.625540733337402
    6. '   ' → logprob: -12.750540733337402
    7. '(ans' → logprob: -13.250540733337402
    8. 'Answers' → logprob: -13.500540733337402
    9. '.Ans' → logprob: -13.875540733337402
    10. ' (' → logprob: -14.000540733337402

Token 417: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023601591587067
    2. '+' → logprob: -1.9102360010147095
    3. '+t' → logprob: -12.285236358642578
    4. ' +
' → logprob: -12.410236358642578
    5. ' ' → logprob: -14.535236358642578
    6. ' ' → logprob: -15.035236358642578
    7. '＋' → logprob: -15.035236358642578
    8. ' +=' → logprob: -15.160236358642578
    9. '+
' → logprob: -15.160236358642578
    10. '+A' → logprob: -15.285236358642578

Token 418: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3399018347263336
    2. ' t' → logprob: -1.9649018049240112
    3. '(t' → logprob: -1.9649018049240112
    4. ' (' → logprob: -4.964901924133301
    5. '           ' → logprob: -7.589901924133301
    6. '(' → logprob: -9.2149019241333
    7. '   ' → logprob: -9.8399019241333
    8. ')t' → logprob: -10.5899019241333
    9. '	t' → logprob: -10.5899019241333
    10. ' ' → logprob: -10.7149019241333

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05520756170153618
    2. '2' → logprob: -2.9302074909210205
    3. '[n' → logprob: -9.680207252502441
    4. '[' → logprob: -10.055207252502441
    5. ')' → logprob: -10.180207252502441
    6. '[q' → logprob: -10.430207252502441
    7. '_' → logprob: -10.555207252502441
    8. '```' → logprob: -11.055207252502441
    9. '[np' → logprob: -11.555207252502441
    10. '(n' → logprob: -11.805207252502441

Token 420: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2581333816051483
    2. ')' → logprob: -1.5081334114074707
    3. '*' → logprob: -5.758133411407471
    4. '*n' → logprob: -6.383133411407471
    5. ' )' → logprob: -7.883133411407471
    6. '<|end|>' → logprob: -8.008132934570312
    7. '*t' → logprob: -8.383132934570312
    8. ')%' → logprob: -8.883132934570312
    9. '           ' → logprob: -10.008132934570312
    10. '*q' → logprob: -10.633132934570312

Token 421: ' ((' (ID: 3536)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.01426200196146965
    2. ' (' → logprob: -4.3892621994018555
    3. '((' → logprob: -6.6392621994018555
    4. '(n' → logprob: -8.139262199401855
    5. '(' → logprob: -9.764262199401855
    6. '   ' → logprob: -10.514262199401855
    7. '(abs' → logprob: -11.514262199401855
    8. '
' → logprob: -11.889262199401855
    9. '           ' → logprob: -12.014262199401855
    10. '(
' → logprob: -12.264262199401855

Token 422: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0022047359962016344
    2. ' t' → logprob: -6.627204895019531
    3. '(t' → logprob: -7.127204895019531
    4. '   ' → logprob: -11.377204895019531
    5. '`t' → logprob: -11.627204895019531
    6. '           ' → logprob: -11.877204895019531
    7. '(' → logprob: -12.002204895019531
    8. 'n' → logprob: -12.377204895019531
    9. '(n' → logprob: -12.377204895019531
    10. '2' → logprob: -12.377204895019531

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -14.37500286102295
    3. ')' → logprob: -15.18750286102295
    4. '
' → logprob: -15.50000286102295
    5. ' ' → logprob: -15.62500286102295
    6. '_' → logprob: -15.75000286102295
    7. '   ' → logprob: -15.75000286102295
    8. '1' → logprob: -15.87500286102295
    9. 'a' → logprob: -16.125001907348633
    10. '
' → logprob: -16.187501907348633

Token 424: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20254366099834442
    2. 'a' → logprob: -1.7025436162948608
    3. '2' → logprob: -6.95254373550415
    4. ')' → logprob: -9.452543258666992
    5. '+' → logprob: -10.577543258666992
    6. '%' → logprob: -11.577543258666992
    7. '_b' → logprob: -11.577543258666992
    8. '_a' → logprob: -12.202543258666992
    9. '%b' → logprob: -12.202543258666992
    10. '1' → logprob: -12.452543258666992

Token 425: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011970194056630135
    2. '-' → logprob: -4.636970043182373
    3. ')' → logprob: -6.386970043182373
    4. ' +' → logprob: -8.636970520019531
    5. '+' → logprob: -9.261970520019531
    6. ' ' → logprob: -9.261970520019531
    7. ' )' → logprob: -9.636970520019531
    8. '<|end|>' → logprob: -10.511970520019531
    9. ')-(' → logprob: -10.511970520019531
    10. ')-' → logprob: -11.511970520019531

Token 426: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04301277548074722
    2. ' t' → logprob: -3.168012857437134
    3. '(t' → logprob: -12.543012619018555
    4. '           ' → logprob: -12.918012619018555
    5. '2' → logprob: -13.418012619018555
    6. ' ' → logprob: -13.793012619018555
    7. '`t' → logprob: -14.168012619018555
    8. '	t' → logprob: -14.418012619018555
    9. '   ' → logprob: -14.543012619018555
    10. ' ' → logprob: -14.668012619018555

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. 'b' → logprob: -12.87500286102295
    3. ' ' → logprob: -16.750001907348633
    4. ')' → logprob: -17.625001907348633
    5. '```' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.750001907348633
    7. 't' → logprob: -18.875001907348633
    8. '`' → logprob: -19.500001907348633
    9. '...' → logprob: -19.625001907348633
    10. ')b' → logprob: -19.750001907348633

Token 428: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.988221684878226e-06
    2. ')' → logprob: -12.375006675720215
    3. ')b' → logprob: -14.000006675720215
    4. ')}' → logprob: -14.500006675720215
    5. '```' → logprob: -15.250006675720215
    6. ' ' → logprob: -15.500006675720215
    7. 'a' → logprob: -15.625006675720215
    8. ' b' → logprob: -15.750006675720215
    9. 'б' → logprob: -16.25000762939453
    10. '	b' → logprob: -16.37500762939453

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007616263465024531
    2. ')%' → logprob: -7.37576150894165
    3. ' )' → logprob: -9.000761985778809
    4. '))' → logprob: -12.500761985778809
    5. '   ' → logprob: -13.125761985778809
    6. '%' → logprob: -13.250761985778809
    7. ')
' → logprob: -14.000761985778809
    8. '```' → logprob: -14.250761985778809
    9. '-' → logprob: -14.375761985778809
    10. ' -' → logprob: -15.125761985778809

Token 430: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06112352013587952
    2. ')%' → logprob: -3.6861236095428467
    3. '%' → logprob: -3.9361236095428467
    4. ' %' → logprob: -4.436123371124268
    5. ' )' → logprob: -5.936123371124268
    6. '   ' → logprob: -9.936123847961426
    7. '-' → logprob: -10.311123847961426
    8. '))' → logprob: -10.436123847961426
    9. ' -' → logprob: -10.936123847961426
    10. '```' → logprob: -10.936123847961426

Token 431: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.3868767023086548
    2. 'MOD' → logprob: -1.1368767023086548
    3. ' ' → logprob: -12.886877059936523
    4. '_MOD' → logprob: -13.511877059936523
    5. ')' → logprob: -14.136877059936523
    6. '.MOD' → logprob: -14.136877059936523
    7. '```' → logprob: -15.761877059936523
    8. '998' → logprob: -17.011877059936523
    9. ' ' → logprob: -17.011877059936523
    10. '   ' → logprob: -17.511877059936523

Token 432: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31519758701324463
    2. ')' → logprob: -1.3151975870132446
    3. ')%' → logprob: -6.815197467803955
    4. ' ))' → logprob: -7.690197467803955
    5. ' )' → logprob: -8.815197944641113
    6. '           ' → logprob: -9.690197944641113
    7. ')))' → logprob: -9.940197944641113
    8. '   ' → logprob: -10.065197944641113
    9. '       ' → logprob: -10.065197944641113
    10. '%' → logprob: -11.690197944641113

Token 433: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5098209977149963
    2. '           ' → logprob: -2.1348209381103516
    3. '<|end|>' → logprob: -2.3848209381103516
    4. ' )' → logprob: -2.5098209381103516
    5. ' ' → logprob: -3.3848209381103516
    6. '%' → logprob: -4.134820938110352
    7. ' 
' → logprob: -4.259820938110352
    8. '   ' → logprob: -4.509820938110352
    9. ' %' → logprob: -5.134820938110352
    10. '       ' → logprob: -5.259820938110352

Token 434: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002988776541315019
    2. ' MOD' → logprob: -8.125298500061035
    3. '```' → logprob: -13.500298500061035
    4. '_MOD' → logprob: -14.000298500061035
    5. '998' → logprob: -15.000298500061035
    6. '
' → logprob: -16.50029945373535
    7. '.MOD' → logprob: -16.62529945373535
    8. ' ' → logprob: -16.87529945373535
    9. '(M' → logprob: -17.37529945373535
    10. 'MO' → logprob: -17.50029945373535

Token 435: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16591885685920715
    2. '<|end|>' → logprob: -1.9159188270568848
    3. 'else' (adapté à ' else') → logprob: -5.790918827056885
    4. ' else' → logprob: -6.665918827056885
    5. '       ' → logprob: -7.665918827056885
    6. ')' → logprob: -8.290919303894043
    7. ' ' → logprob: -9.040919303894043
    8. 'elif' → logprob: -9.165919303894043
    9. '
' → logprob: -9.415919303894043
    10. '<|end|>' → logprob: -9.540919303894043

Token 438: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008691829279996455
    2. ':
' → logprob: -7.125869274139404
    3. ' :' → logprob: -10.375868797302246
    4. '   ' → logprob: -10.750868797302246
    5. '<|end|>' → logprob: -12.625868797302246
    6. '```' → logprob: -13.125868797302246
    7. '       ' → logprob: -13.375868797302246
    8. '    ' → logprob: -14.125868797302246
    9. '):' → logprob: -14.750868797302246
    10. '=' → logprob: -14.875868797302246

Token 439: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.045267947018146515
    2. '   ' → logprob: -3.4202680587768555
    3. ' np' → logprob: -5.5452680587768555
    4. '    ' → logprob: -5.5452680587768555
    5. 'for' → logprob: -6.2952680587768555
    6. ' tpl' → logprob: -7.0452680587768555
    7. '       ' → logprob: -7.9202680587768555
    8. ' ' → logprob: -9.170268058776855
    9. 'np' → logprob: -9.170268058776855
    10. ' range' → logprob: -9.295268058776855

Token 440: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20107020437717438
    2. 'np' → logprob: -2.8260703086853027
    3. ' np' → logprob: -2.8260703086853027
    4. 'for' → logprob: -3.0760703086853027
    5. '   ' → logprob: -4.076070308685303
    6. '
' → logprob: -8.701069831848145
    7. '    ' → logprob: -8.826069831848145
    8. ' ' → logprob: -9.701069831848145
    9. '       ' → logprob: -9.951069831848145
    10. ' range' → logprob: -10.951069831848145

Token 441: ' odd' (ID: 14210)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.350039005279541
    2. '   ' → logprob: -1.350039005279541
    3. 'for' → logprob: -3.725039005279541
    4. '    ' → logprob: -4.600039005279541
    5. '       ' → logprob: -6.975039005279541
    6. ' ' → logprob: -7.850039005279541
    7. '
' → logprob: -8.225038528442383
    8. '```' → logprob: -9.975038528442383
    9. '  ' → logprob: -10.100038528442383
    10. '    
' → logprob: -10.350038528442383

Token 442: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41763725876808167
    2. ' for' → logprob: -1.1676372289657593
    3. 'for' → logprob: -4.167637348175049
    4. '       ' → logprob: -5.042637348175049
    5. '```' → logprob: -5.042637348175049
    6. '
' → logprob: -7.417637348175049
    7. '	for' → logprob: -7.667637348175049
    8. '<|end|>' → logprob: -8.41763687133789
    9. ':' → logprob: -8.66763687133789
    10. ':
' → logprob: -9.16763687133789

Token 443: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3562745153903961
    2. '   ' → logprob: -1.2312744855880737
    3. 'for' → logprob: -5.231274604797363
    4. '```' → logprob: -6.106274604797363
    5. '       ' → logprob: -8.606274604797363
    6. '	for' → logprob: -10.481274604797363
    7. '    ' → logprob: -12.231274604797363
    8. ' ' → logprob: -12.731274604797363
    9. '    
' → logprob: -13.731274604797363
    10. '``' → logprob: -13.856274604797363

Token 444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17554843425750732
    2. ' for' → logprob: -1.9255484342575073
    3. 'np' → logprob: -4.300548553466797
    4. '   ' → logprob: -7.175548553466797
    5. ' np' → logprob: -7.175548553466797
    6. '       ' → logprob: -9.800548553466797
    7. 't' → logprob: -11.050548553466797
    8. 'Ans' → logprob: -12.050548553466797
    9. 'n' → logprob: -12.175548553466797
    10. '
' → logprob: -12.175548553466797

Token 445: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006101920269429684
    2. ' nq' → logprob: -5.131102085113525
    3. 'np' → logprob: -9.006101608276367
    4. 'nr' → logprob: -11.256101608276367
    5. ' n' → logprob: -11.381101608276367
    6. 'q' → logprob: -12.006101608276367
    7. 't' → logprob: -12.131101608276367
    8. '   ' → logprob: -12.756101608276367
    9. 'nt' → logprob: -13.131101608276367
    10. 'nj' → logprob: -13.631101608276367

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805583342909813
    2. 'in' → logprob: -3.288055896759033
    3. 'range' → logprob: -11.538055419921875
    4. ' ' → logprob: -13.038055419921875
    5. ' range' → logprob: -13.663055419921875
    6. 'n' → logprob: -13.663055419921875
    7. 'np' → logprob: -17.538055419921875
    8. 'In' → logprob: -17.538055419921875
    9. '0' → logprob: -17.788055419921875
    10. '  ' → logprob: -18.163055419921875

Token 447: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011112547479569912
    2. ' range' → logprob: -4.511112689971924
    3. 'np' → logprob: -10.261112213134766
    4. 'tpl' → logprob: -11.011112213134766
    5. '(range' → logprob: -11.511112213134766
    6. ' tpl' → logprob: -13.761112213134766
    7. ' np' → logprob: -14.511112213134766
    8. 'in' → logprob: -14.886112213134766
    9. 't' → logprob: -15.011112213134766
    10. '0' → logprob: -15.136112213134766

Token 448: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.0003794336807914078
    2. '(n' → logprob: -8.75037956237793
    3. '(t' → logprob: -8.87537956237793
    4. '(' → logprob: -10.00037956237793
    5. 'np' → logprob: -10.87537956237793
    6. ' np' → logprob: -12.00037956237793
    7. ' (' → logprob: -12.62537956237793
    8. '(range' → logprob: -12.75037956237793
    9. '((' → logprob: -13.62537956237793
    10. '(tp' → logprob: -13.87537956237793

Token 449: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519727349281311
    2. '+' → logprob: -1.5019726753234863
    3. '()+' → logprob: -11.126973152160645
    4. '(' → logprob: -11.251973152160645
    5. '):
' → logprob: -11.751973152160645
    6. '(n' → logprob: -12.876973152160645
    7. ',' → logprob: -14.001973152160645
    8. ')' → logprob: -14.626973152160645
    9. '):' → logprob: -14.626973152160645
    10. '1' → logprob: -14.751973152160645

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005750744021497667
    2. ' ' → logprob: -7.625575065612793
    3. '(n' → logprob: -9.875575065612793
    4. '(' → logprob: -10.500575065612793
    5. '0' → logprob: -13.125575065612793
    6. ' (' → logprob: -13.250575065612793
    7. '2' → logprob: -13.500575065612793
    8. 'n' → logprob: -13.875575065612793
    9. 'np' → logprob: -14.375575065612793
    10. '(i' → logprob: -14.750575065612793

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014323067443910986
    2. 'np' → logprob: -9.500143051147461
    3. '(n' → logprob: -10.375143051147461
    4. ' ' → logprob: -11.250143051147461
    5. '2' → logprob: -12.000143051147461
    6. '0' → logprob: -12.000143051147461
    7. '(np' → logprob: -12.125143051147461
    8. '(' → logprob: -12.625143051147461
    9. 'n' → logprob: -13.625143051147461
    10. '+' → logprob: -14.500143051147461

Token 452: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22938406467437744
    2. '):' → logprob: -1.6043840646743774
    3. '():
' → logprob: -6.729383945465088
    4. ':' → logprob: -6.854383945465088
    5. '       ' → logprob: -7.354383945465088
    6. '   ' → logprob: -7.979383945465088
    7. '):
' → logprob: -8.604384422302246
    8. '```' → logprob: -8.979384422302246
    9. '()):
' → logprob: -8.979384422302246
    10. '():' → logprob: -9.604384422302246

Token 453: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0466092824935913
    2. '<|end|>' → logprob: -1.0466092824935913
    3. '```' → logprob: -1.6716092824935913
    4. ' t' → logprob: -3.421609401702881
    5. '           ' → logprob: -3.921609401702881
    6. ' ' → logprob: -4.046609401702881
    7. '        ' → logprob: -5.046609401702881
    8. '   ' → logprob: -5.296609401702881
    9. '(n' → logprob: -5.921609401702881
    10. ' ' → logprob: -5.921609401702881

Token 454: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.6250308752059937
    2. ' t' → logprob: -0.8750308752059937
    3. '           ' → logprob: -3.125030994415283
    4. '```' → logprob: -6.000030994415283
    5. '       ' → logprob: -6.875030994415283
    6. '	t' → logprob: -8.500030517578125
    7. '   ' → logprob: -9.625030517578125
    8. '               ' → logprob: -10.375030517578125
    9. '(t' → logprob: -10.500030517578125
    10. '<|end|>' → logprob: -10.625030517578125

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. '=' → logprob: -10.000140190124512
    3. ' =' → logprob: -10.125140190124512
    4. '_' → logprob: -11.000140190124512
    5. '2' → logprob: -11.625140190124512
    6. '   ' → logprob: -12.125140190124512
    7. '```' → logprob: -12.375140190124512
    8. 'n' → logprob: -12.750140190124512
    9. ' ' → logprob: -12.750140190124512
    10. ')' → logprob: -13.375140190124512

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009791151620447636
    2. '=' → logprob: -4.634791374206543
    3. ' =(' → logprob: -11.259791374206543
    4. '=(' → logprob: -11.884791374206543
    5. '<|end|>' → logprob: -13.009791374206543
    6. ' ' → logprob: -13.134791374206543
    7. ' (' → logprob: -13.134791374206543
    8. ')' → logprob: -13.259791374206543
    9. '(' → logprob: -13.509791374206543
    10. '           ' → logprob: -13.884791374206543

Token 457: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2811792492866516
    2. ' (' → logprob: -1.4061791896820068
    3. 'n' → logprob: -11.031179428100586
    4. '(t' → logprob: -12.156179428100586
    5. '(pow' → logprob: -13.156179428100586
    6. '(' → logprob: -13.531179428100586
    7. ' n' → logprob: -14.281179428100586
    8. '```' → logprob: -14.406179428100586
    9. ' ' → logprob: -14.656179428100586
    10. '1' → logprob: -15.031179428100586

Token 458: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007229181355796754
    2. '(n' → logprob: -7.250722885131836
    3. ' n' → logprob: -11.375722885131836
    4. 'pow' → logprob: -14.125722885131836
    5. '	n' → logprob: -15.750722885131836
    6. '_n' → logprob: -16.000722885131836
    7. '
' → logprob: -16.250722885131836
    8. ' (' → logprob: -16.500722885131836
    9. '   ' → logprob: -16.625722885131836
    10. '(' → logprob: -16.750722885131836

Token 459: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -1.9361264946837764e-07
    2. '(cr' → logprob: -16.375
    3. 'cro' → logprob: -18.25
    4. 'c' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. ' cr' → logprob: -19.375
    7. '	cr' → logprob: -20.125
    8. 'crc' → logprob: -20.375
    9. 'cris' → logprob: -20.75
    10. 'CR' → logprob: -20.875

Token 460: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.003348701633512974
    2. 'np' → logprob: -5.7533488273620605
    3. '[np' → logprob: -9.378348350524902
    4. '(n' → logprob: -9.628348350524902
    5. ',np' → logprob: -11.503348350524902
    6. ' np' → logprob: -11.878348350524902
    7. '(' → logprob: -13.003348350524902
    8. '=np' → logprob: -14.503348350524902
    9. 'n' → logprob: -15.003348350524902
    10. '*np' → logprob: -15.753348350524902

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033760786755010486
    2. ',n' → logprob: -8.000337600708008
    3. ' ,' → logprob: -13.375337600708008
    4. 'n' → logprob: -14.500337600708008
    5. ',
' → logprob: -17.875337600708008
    6. ',np' → logprob: -17.875337600708008
    7. ',N' → logprob: -18.125337600708008
    8. '(n' → logprob: -18.250337600708008
    9. '           ' → logprob: -19.625337600708008
    10. ')' → logprob: -20.250337600708008

Token 462: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00193636619951576
    2. ' nq' → logprob: -6.251936435699463
    3. ')n' → logprob: -12.876935958862305
    4. '(n' → logprob: -13.501935958862305
    5. ' n' → logprob: -13.751935958862305
    6. 'q' → logprob: -14.001935958862305
    7. ')' → logprob: -14.251935958862305
    8. '[n' → logprob: -15.626935958862305
    9. '	n' → logprob: -15.751935958862305
    10. '<n' → logprob: -15.751935958862305

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')*' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.500003814697266
    4. ')
' → logprob: -15.500003814697266
    5. '   ' → logprob: -15.625003814697266
    6. '```' → logprob: -16.125003814697266
    7. '))' → logprob: -16.750003814697266
    8. ' ' → logprob: -18.375003814697266
    9. ')`' → logprob: -18.375003814697266
    10. 'n' → logprob: -18.875003814697266

Token 464: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002193087013438344
    2. '*' → logprob: -6.127192974090576
    3. ')' → logprob: -12.502193450927734
    4. ' ' → logprob: -13.502193450927734
    5. '```' → logprob: -14.127193450927734
    6. ' ' → logprob: -14.377193450927734
    7. ' *
' → logprob: -15.127193450927734
    8. 'import' → logprob: -15.127193450927734
    9. ',' → logprob: -15.502193450927734
    10. '<|end|>' → logprob: -16.127193450927734

Token 465: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00010998018842656165
    2. ' pow' → logprob: -9.125109672546387
    3. '(pow' → logprob: -14.125109672546387
    4. '
' → logprob: -17.625110626220703
    5. '   ' → logprob: -17.625110626220703
    6. '2' → logprob: -17.875110626220703
    7. 'power' → logprob: -17.875110626220703
    8. ' ' → logprob: -18.375110626220703
    9. '```' → logprob: -18.625110626220703
    10. '       ' → logprob: -18.625110626220703

Token 466: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004089796915650368
    2. '2' → logprob: -5.504089832305908
    3. '(
' → logprob: -11.87908935546875
    4. '(n' → logprob: -13.12908935546875
    5. ' (' → logprob: -14.12908935546875
    6. ')' → logprob: -14.37908935546875
    7. ' ' → logprob: -14.75408935546875
    8. '```' → logprob: -16.12908935546875
    9. '  ' → logprob: -16.37908935546875
    10. ',' → logprob: -16.37908935546875

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011689399980241433
    2. '(' → logprob: -9.250117301940918
    3. '3' → logprob: -11.625117301940918
    4. ' ' → logprob: -12.625117301940918
    5. '   ' → logprob: -13.500117301940918
    6. ')' → logprob: -13.625117301940918
    7. '
' → logprob: -13.750117301940918
    8. '(n' → logprob: -14.125117301940918
    9. '       ' → logprob: -14.750117301940918
    10. 'n' → logprob: -14.875117301940918

Token 468: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31511807441711426
    2. ',' → logprob: -1.3151180744171143
    3. '(' → logprob: -6.940117835998535
    4. ',n' → logprob: -7.565117835998535
    5. 'n' → logprob: -8.440117835998535
    6. ' ,' → logprob: -9.315117835998535
    7. ' (' → logprob: -10.565117835998535
    8. '           ' → logprob: -11.190117835998535
    9. ')' → logprob: -11.815117835998535
    10. ' ' → logprob: -13.065117835998535

Token 469: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0041675567626953125
    2. ' nq' → logprob: -5.504167556762695
    3. '(n' → logprob: -9.379167556762695
    4. ')n' → logprob: -13.879167556762695
    5. '	n' → logprob: -14.129167556762695
    6. ' n' → logprob: -14.504167556762695
    7. '   ' → logprob: -15.129167556762695
    8. 'np' → logprob: -15.129167556762695
    9. '[n' → logprob: -15.254167556762695
    10. '_n' → logprob: -15.254167556762695

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018399098189547658
    2. ',n' → logprob: -8.750184059143066
    3. ' ,' → logprob: -10.875184059143066
    4. '(n' → logprob: -12.000184059143066
    5. 'n' → logprob: -14.750184059143066
    6. ',
' → logprob: -17.50018310546875
    7. '```' → logprob: -18.25018310546875
    8. '(),' → logprob: -18.50018310546875
    9. '(' → logprob: -18.75018310546875
    10. '       ' → logprob: -18.87518310546875

Token 471: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.76628842484206e-05
    2. ' MOD' → logprob: -9.625067710876465
    3. 'n' → logprob: -13.875067710876465
    4. '           ' → logprob: -15.000067710876465
    5. '_MOD' → logprob: -16.50006675720215
    6. '       ' → logprob: -16.62506675720215
    7. ')' → logprob: -16.75006675720215
    8. '   ' → logprob: -17.62506675720215
    9. '               ' → logprob: -17.87506675720215
    10. '         ' → logprob: -18.00006675720215

Token 472: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25194448232650757
    2. ')' → logprob: -1.5019445419311523
    3. ',' → logprob: -12.126944541931152
    4. ' ))' → logprob: -12.376944541931152
    5. '   ' → logprob: -13.251944541931152
    6. ')%' → logprob: -13.876944541931152
    7. ' )' → logprob: -14.001944541931152
    8. '```' → logprob: -14.251944541931152
    9. '       ' → logprob: -14.376944541931152
    10. ')
' → logprob: -15.751944541931152

Token 473: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018726207315921783
    2. '%' → logprob: -4.768726348876953
    3. ')' → logprob: -4.893726348876953
    4. ')%' → logprob: -6.393726348876953
    5. ' %)' → logprob: -7.393726348876953
    6. '```' → logprob: -9.018726348876953
    7. '%)' → logprob: -9.643726348876953
    8. ' )' → logprob: -10.018726348876953
    9. '<|end|>' → logprob: -11.018726348876953
    10. '%n' → logprob: -12.018726348876953

Token 474: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005288311280310154
    2. ' MOD' → logprob: -5.255288124084473
    3. '_MOD' → logprob: -10.630288124084473
    4. '(M' → logprob: -10.755288124084473
    5. '(Mod' → logprob: -12.130288124084473
    6. '(' → logprob: -13.130288124084473
    7. '(n' → logprob: -14.005288124084473
    8. '.MOD' → logprob: -14.755288124084473
    9. '(mod' → logprob: -15.505288124084473
    10. ' (' → logprob: -16.63028907775879

Token 475: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01726466603577137
    2. '<|end|>' → logprob: -5.3922648429870605
    3. ' t' → logprob: -5.5172648429870605
    4. '```' → logprob: -5.8922648429870605
    5. ')' → logprob: -6.0172648429870605
    6. '       ' → logprob: -7.0172648429870605
    7. '               ' → logprob: -7.2672648429870605
    8. '          ' → logprob: -8.267264366149902
    9. '            
' → logprob: -8.392264366149902
    10. '
' → logprob: -8.642264366149902

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024894531816244125
    2. '```' → logprob: -6.7524895668029785
    3. ' t' → logprob: -7.0024895668029785
    4. '		' → logprob: -9.00248908996582
    5. 't' → logprob: -9.00248908996582
    6. ' ' → logprob: -10.00248908996582
    7. '<|end|>' → logprob: -10.00248908996582
    8. ' ' → logprob: -11.75248908996582
    9. '          ' → logprob: -11.87748908996582
    10. ' n' → logprob: -12.12748908996582

Token 477: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -3.690834273584187e-05
    2. '           ' → logprob: -10.25003719329834
    3. ' nr' → logprob: -13.50003719329834
    4. '_nr' → logprob: -16.500036239624023
    5. '.nr' → logprob: -17.375036239624023
    6. '```' → logprob: -17.500036239624023
    7. '   ' → logprob: -18.000036239624023
    8. '               ' → logprob: -18.625036239624023
    9. 'n' → logprob: -18.750036239624023
    10. 'Nr' → logprob: -19.750036239624023

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868729770183563
    2. '=' → logprob: -1.1368730068206787
    3. '           ' → logprob: -14.011873245239258
    4. '   ' → logprob: -14.761873245239258
    5. '```' → logprob: -15.136873245239258
    6. ' ' → logprob: -16.011873245239258
    7. '       ' → logprob: -16.511873245239258
    8. 'r' → logprob: -16.511873245239258
    9. 'a' → logprob: -17.261873245239258
    10. '＝' → logprob: -17.636873245239258

Token 479: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0010429323883727193
    2. ' K' → logprob: -6.87604284286499
    3. 'N' → logprob: -12.251043319702148
    4. 'n' → logprob: -13.251043319702148
    5. 'nr' → logprob: -14.251043319702148
    6. '(K' → logprob: -14.501043319702148
    7. '(n' → logprob: -15.001043319702148
    8. '           ' → logprob: -15.001043319702148
    9. ' ' → logprob: -15.126043319702148
    10. '(' → logprob: -15.126043319702148

Token 480: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018163753673434258
    2. '-' → logprob: -4.018163681030273
    3. ' ' → logprob: -12.018163681030273
    4. '-n' → logprob: -13.268163681030273
    5. 'n' → logprob: -13.768163681030273
    6. ' ' → logprob: -13.893163681030273
    7. '           ' → logprob: -14.143163681030273
    8. '   ' → logprob: -14.643163681030273
    9. '=' → logprob: -15.143163681030273
    10. '<|end|>' → logprob: -15.393163681030273

Token 481: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.008766545914113522
    2. 'n' → logprob: -5.5087666511535645
    3. ' np' → logprob: -5.6337666511535645
    4. '2' → logprob: -7.3837666511535645
    5. '(np' → logprob: -8.258766174316406
    6. ' nq' → logprob: -9.758766174316406
    7. '(n' → logprob: -9.883766174316406
    8. 'i' → logprob: -10.133766174316406
    9. '(' → logprob: -10.883766174316406
    10. '1' → logprob: -11.258766174316406

Token 482: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03367486596107483
    2. ' *' → logprob: -3.408674955368042
    3. '*n' → logprob: -11.033675193786621
    4. '2' → logprob: -11.908675193786621
    5. '<|end|>' → logprob: -12.908675193786621
    6. '**' → logprob: -13.783675193786621
    7. '```' → logprob: -14.533675193786621
    8. '*q' → logprob: -14.908675193786621
    9. ')' → logprob: -14.908675193786621
    10. 'n' → logprob: -14.908675193786621

Token 483: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.125123977661133
    3. '1' → logprob: -11.250123977661133
    4. '3' → logprob: -14.250123977661133
    5. '<|end|>' → logprob: -14.625123977661133
    6. '0' → logprob: -15.125123977661133
    7. '```' → logprob: -15.125123977661133
    8. '   ' → logprob: -15.687623977661133
    9. '<|end|>' → logprob: -16.625123977661133
    10. '           ' → logprob: -16.812623977661133

Token 484: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -13.750004768371582
    4. '<|end|>' → logprob: -15.750004768371582
    5. '   ' → logprob: -16.0000057220459
    6. '```' → logprob: -16.3750057220459
    7. '3' → logprob: -17.3750057220459
    8. '           ' → logprob: -17.6250057220459
    9. '0' → logprob: -18.3125057220459
    10. '<|end|>' → logprob: -18.4375057220459

Token 485: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23362629115581512
    2. '           ' → logprob: -1.6086262464523315
    3. ' -' → logprob: -5.108626365661621
    4. '
' → logprob: -6.608626365661621
    5. '       ' → logprob: -8.483626365661621
    6. '               ' → logprob: -8.733626365661621
    7. '            
' → logprob: -8.983626365661621
    8. '   ' → logprob: -9.233626365661621
    9. '          ' → logprob: -10.733626365661621
    10. 'n' → logprob: -11.108626365661621

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006521515315398574
    2. 't' → logprob: -7.375652313232422
    3. '```' → logprob: -10.875652313232422
    4. '       ' → logprob: -13.375652313232422
    5. ' t' → logprob: -13.625652313232422
    6. '   ' → logprob: -14.000652313232422
    7. '               ' → logprob: -14.500652313232422
    8. '		' → logprob: -14.625652313232422
    9. '<|end|>' → logprob: -14.625652313232422
    10. 'n' → logprob: -15.125652313232422

Token 487: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.2519505023956299
    2. '           ' → logprob: -1.5019505023956299
    3. '       ' → logprob: -11.25195026397705
    4. ' t' → logprob: -12.62695026397705
    5. '   ' → logprob: -12.75195026397705
    6. '               ' → logprob: -14.12695026397705
    7. '		' → logprob: -14.25195026397705
    8. '	t' → logprob: -15.50195026397705
    9. '          ' → logprob: -15.62695026397705
    10. '                   ' → logprob: -16.126951217651367

Token 488: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -13.625001907348633
    3. '#' → logprob: -16.375001907348633
    4. 'r' → logprob: -16.375001907348633
    5. '
' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.250001907348633
    7. 't' → logprob: -17.500001907348633
    8. 'a' → logprob: -17.625001907348633
    9. '```' → logprob: -17.687501907348633
    10. 'h' → logprob: -18.187501907348633

Token 489: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.11996734328568e-05
    2. ' =' → logprob: -10.625041007995605
    3. '=' → logprob: -11.250041007995605
    4. '   ' → logprob: -13.125041007995605
    5. '           ' → logprob: -13.875041007995605
    6. '       ' → logprob: -15.125041007995605
    7. 'b' → logprob: -15.250041007995605
    8. ' a' → logprob: -16.375041961669922
    9. '```' → logprob: -16.750041961669922
    10. '_a' → logprob: -16.875041961669922

Token 490: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006917957216501236
    2. ' n' → logprob: -5.006917953491211
    3. '(n' → logprob: -8.631917953491211
    4. '           ' → logprob: -11.006917953491211
    5. '   ' → logprob: -12.881917953491211
    6. ' (' → logprob: -13.006917953491211
    7. '(' → logprob: -13.506917953491211
    8. '       ' → logprob: -14.256917953491211
    9. '	n' → logprob: -15.006917953491211
    10. '
' → logprob: -16.50691795349121

Token 491: 'hr' (ID: 2012)
  Prédit: 'hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -5.097437315271236e-05
    2. '(hr' → logprob: -10.75005054473877
    3. '(n' → logprob: -11.25005054473877
    4. 'h' → logprob: -11.62505054473877
    5. '(' → logprob: -13.12505054473877
    6. '(h' → logprob: -13.50005054473877
    7. '<hr' → logprob: -14.50005054473877
    8. ' hr' → logprob: -14.87505054473877
    9. 'r' → logprob: -15.12505054473877
    10. 'hrs' → logprob: -15.37505054473877

Token 492: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2842308680992573e-05
    2. 'nr' → logprob: -10.750022888183594
    3. '(' → logprob: -13.875022888183594
    4. ' nr' → logprob: -15.875022888183594
    5. 'Nr' → logprob: -16.000022888183594
    6. '.nr' → logprob: -16.250022888183594
    7. '_nr' → logprob: -16.250022888183594
    8. 'n' → logprob: -16.625022888183594
    9. ' (' → logprob: -18.000022888183594
    10. '((' → logprob: -19.500022888183594

Token 493: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.994086627149954e-05
    2. '(n' → logprob: -10.625080108642578
    3. 'nr' → logprob: -10.750080108642578
    4. 'р' → logprob: -11.750080108642578
    5. ',r' → logprob: -13.000080108642578
    6. '(r' → logprob: -13.125080108642578
    7. ' r' → logprob: -13.125080108642578
    8. 'n' → logprob: -13.437580108642578
    9. '_r' → logprob: -13.437580108642578
    10. '
' → logprob: -13.500080108642578

Token 494: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21047690510749817
    2. '+' → logprob: -2.585476875305176
    3. '(n' → logprob: -2.710476875305176
    4. ' +' → logprob: -3.210476875305176
    5. '+n' → logprob: -5.460476875305176
    6. ',n' → logprob: -6.585476875305176
    7. '(N' → logprob: -6.835476875305176
    8. ' ,' → logprob: -7.960476875305176
    9. '+,' → logprob: -9.210476875305176
    10. '(' → logprob: -9.210476875305176

Token 495: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5822400857578032e-05
    2. ' nq' → logprob: -10.625025749206543
    3. '(n' → logprob: -13.875025749206543
    4. 'q' → logprob: -14.875025749206543
    5. '(' → logprob: -16.37502670288086
    6. 'N' → logprob: -17.50002670288086
    7. ' n' → logprob: -17.75002670288086
    8. ' ' → logprob: -18.37502670288086
    9. '
' → logprob: -18.50002670288086
    10. '   ' → logprob: -18.50002670288086

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012725738633889705
    2. ' ,' → logprob: -9.625126838684082
    3. '(N' → logprob: -10.000126838684082
    4. ',N' → logprob: -11.125126838684082
    5. '           ' → logprob: -14.875126838684082
    6. ' (' → logprob: -15.375126838684082
    7. ',n' → logprob: -15.875126838684082
    8. ',
' → logprob: -16.3751277923584
    9. '(' → logprob: -16.3751277923584
    10. '```' → logprob: -16.8751277923584

Token 497: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023245826363563538
    2. ' N' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.898245811462402
    4. '   ' → logprob: -16.52324676513672
    5. '           ' → logprob: -17.27324676513672
    6. '	N' → logprob: -17.77324676513672
    7. '```' → logprob: -18.02324676513672
    8. '       ' → logprob: -18.39824676513672
    9. '    ' → logprob: -18.39824676513672
    10. '(N' → logprob: -18.52324676513672

Token 498: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7101330161094666
    2. ' -' → logprob: -0.7101330161094666
    3. '-n' → logprob: -4.085133075714111
    4. ' ' → logprob: -12.085132598876953
    5. 'n' → logprob: -12.835132598876953
    6. '   ' → logprob: -13.210132598876953
    7. '```' → logprob: -13.460132598876953
    8. '-q' → logprob: -13.710132598876953
    9. '-н' → logprob: -13.710132598876953
    10. '-N' → logprob: -13.960132598876953

Token 499: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.6087021473795176e-05
    2. ' nq' → logprob: -10.000045776367188
    3. 'q' → logprob: -15.250045776367188
    4. '_n' → logprob: -15.625045776367188
    5. '(n' → logprob: -16.750045776367188
    6. ' n' → logprob: -16.875045776367188
    7. '	n' → logprob: -17.000045776367188
    8. ')n' → logprob: -17.875045776367188
    9. '   ' → logprob: -18.500045776367188
    10. ' nqi' → logprob: -18.500045776367188

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001487140398239717
    2. ' )' → logprob: -9.00014877319336
    3. '-' → logprob: -11.75014877319336
    4. '   ' → logprob: -12.25014877319336
    5. '           ' → logprob: -12.62514877319336
    6. '```' → logprob: -12.62514877319336
    7. ' -' → logprob: -13.12514877319336
    8. ')%' → logprob: -13.50014877319336
    9. '       ' → logprob: -13.75014877319336
    10. ')
' → logprob: -14.50014877319336

Token 501: ' %' (ID: 1851)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04975154623389244
    2. '%' → logprob: -3.1747515201568604
    3. ' %' → logprob: -6.1747517585754395
    4. ')' → logprob: -6.6747517585754395
    5. ')%' → logprob: -7.1747517585754395
    6. '       ' → logprob: -7.1747517585754395
    7. '<|end|>' → logprob: -7.2997517585754395
    8. '   ' → logprob: -7.9247517585754395
    9. '```' → logprob: -8.424751281738281
    10. '
' → logprob: -8.424751281738281

Token 502: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.56102097814437e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -15.750045776367188
    4. '.MOD' → logprob: -18.125045776367188
    5. '```' → logprob: -19.375045776367188
    6. '
' → logprob: -20.250045776367188
    7. '   ' → logprob: -21.000045776367188
    8. ' ' → logprob: -21.125045776367188
    9. '(M' → logprob: -21.125045776367188
    10. '       ' → logprob: -21.750045776367188

Token 503: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013385741040110588
    2. '   ' → logprob: -7.251338481903076
    3. 'Ans' → logprob: -8.001338958740234
    4. '       ' → logprob: -8.376338958740234
    5. 'Answer' → logprob: -10.751338958740234
    6. '```' → logprob: -10.751338958740234
    7. '<|end|>' → logprob: -12.376338958740234
    8. '               ' → logprob: -12.376338958740234
    9. '		' → logprob: -12.876338958740234
    10. ' Ans' → logprob: -13.126338958740234

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004418843891471624
    2. '   ' → logprob: -6.129418849945068
    3. 'Ans' → logprob: -7.004418849945068
    4. '```' → logprob: -7.379418849945068
    5. '       ' → logprob: -8.12941837310791
    6. '<|end|>' → logprob: -8.50441837310791
    7. 'Answer' → logprob: -9.12941837310791
    8. ' Ans' → logprob: -11.00441837310791
    9. '               ' → logprob: -11.00441837310791
    10. 'Answers' → logprob: -11.75441837310791

Token 505: ' Ans' (ID: 22542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07222285866737366
    2. 'Ans' (adapté à ' Ans') → logprob: -2.697222948074341
    3. '   ' → logprob: -6.447222709655762
    4. '       ' → logprob: -7.822222709655762
    5. 'Answer' → logprob: -8.197222709655762
    6. ' Ans' → logprob: -11.322222709655762
    7. 'Answers' → logprob: -13.447222709655762
    8. ' ' → logprob: -13.572222709655762
    9. 'An' → logprob: -13.572222709655762
    10. 'ans' → logprob: -13.822222709655762

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20199258625507355
    2. ' =' → logprob: -1.7019926309585571
    3. '+=' → logprob: -8.451992988586426
    4. '   ' → logprob: -8.451992988586426
    5. ' +=' → logprob: -8.951992988586426
    6. '           ' → logprob: -11.576992988586426
    7. '```' → logprob: -12.201992988586426
    8. '       ' → logprob: -12.326992988586426
    9. ')' → logprob: -13.576992988586426
    10. '    ' → logprob: -14.451992988586426

Token 507: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31327024102211
    2. '(' → logprob: -1.3132702112197876
    3. '(ans' → logprob: -12.313270568847656
    4. '(A' → logprob: -12.563270568847656
    5. ',' → logprob: -16.813270568847656
    6. '   ' → logprob: -16.938270568847656
    7. ' ' → logprob: -17.188270568847656
    8. '           ' → logprob: -17.438270568847656
    9. '```' → logprob: -17.563270568847656
    10. '(
' → logprob: -17.563270568847656

Token 508: 'Ans' (ID: 36478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '(ans' → logprob: -12.87500286102295
    3. ' (' → logprob: -15.12500286102295
    4. '(A' → logprob: -16.125003814697266
    5. 'Ans' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '(
' → logprob: -19.125003814697266
    8. '((' → logprob: -19.375003814697266
    9. '(Mod' → logprob: -19.625003814697266
    10. '

' → logprob: -20.750003814697266

Token 509: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5567425489425659
    2. ' (' → logprob: -1.056742548942566
    3. '+' → logprob: -2.8067426681518555
    4. '=' → logprob: -4.1817426681518555
    5. '(ans' → logprob: -6.8067426681518555
    6. '(A' → logprob: -7.1817426681518555
    7. ' +' → logprob: -7.4317426681518555
    8. ')' → logprob: -7.6817426681518555
    9. '+=' → logprob: -7.6817426681518555
    10. ' +=' → logprob: -9.681742668151855

Token 510: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023315010592341423
    2. ' t' → logprob: -3.773314952850342
    3. '(t' → logprob: -9.6483154296875
    4. '   ' → logprob: -13.1483154296875
    5. '	t' → logprob: -14.0233154296875
    6. ' (' → logprob: -14.1483154296875
    7. ' ' → logprob: -14.8983154296875
    8. '           ' → logprob: -15.2733154296875
    9. '`t' → logprob: -15.5233154296875
    10. ')t' → logprob: -15.6483154296875

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. '```' → logprob: -16.625
    4. '(i' → logprob: -17.5
    5. 'Ans' → logprob: -18.625
    6. '(t' → logprob: -18.75
    7. '**' → logprob: -19.0
    8. '(n' → logprob: -19.625
    9. '2' → logprob: -19.625
    10. '[i' → logprob: -20.0

Token 512: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026338033378124237
    2. '*' → logprob: -3.6513381004333496
    3. ')' → logprob: -10.651337623596191
    4. '           ' → logprob: -12.026337623596191
    5. '   ' → logprob: -12.901337623596191
    6. ' ' → logprob: -13.276337623596191
    7. ' ' → logprob: -13.776337623596191
    8. '          ' → logprob: -14.026337623596191
    9. '*t' → logprob: -14.151337623596191
    10. '       ' → logprob: -15.276337623596191

Token 513: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000553151941858232
    2. ' t' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.375553131103516
    4. '`t' → logprob: -17.125553131103516
    5. '           ' → logprob: -17.500553131103516
    6. '
' → logprob: -18.000553131103516
    7. '	t' → logprob: -18.250553131103516
    8. '       ' → logprob: -18.375553131103516
    9. ' ' → logprob: -18.875553131103516
    10. '(t' → logprob: -19.000553131103516

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'Ans' → logprob: -16.0
    3. '```' → logprob: -16.625
    4. 'o' → logprob: -17.25
    5. '₂' → logprob: -17.875
    6. '[' → logprob: -18.875
    7. 'os' → logprob: -19.25
    8. '۲' → logprob: -19.5
    9. 'Answer' → logprob: -19.5
    10. 'ype' → logprob: -19.625

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ')%' → logprob: -10.500028610229492
    3. ' )' → logprob: -13.875028610229492
    4. '   ' → logprob: -15.625028610229492
    5. '           ' → logprob: -16.625028610229492
    6. '       ' → logprob: -16.750028610229492
    7. '```' → logprob: -18.625028610229492
    8. '%' → logprob: -18.875028610229492
    9. '')' → logprob: -19.125028610229492
    10. '                   ' → logprob: -19.250028610229492

Token 516: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28205758333206177
    2. ' %' → logprob: -1.407057523727417
    3. ')' → logprob: -7.407057762145996
    4. ')%' → logprob: -8.407057762145996
    5. '   ' → logprob: -10.032057762145996
    6. ' %=' → logprob: -10.907057762145996
    7. '%=' → logprob: -12.032057762145996
    8. '%)' → logprob: -13.407057762145996
    9. '%
' → logprob: -13.907057762145996
    10. '
' → logprob: -14.157057762145996

Token 517: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020413640595506877
    2. ' MOD' → logprob: -8.500204086303711
    3. '_MOD' → logprob: -14.250204086303711
    4. '.MOD' → logprob: -18.37520408630371
    5. 'MO' → logprob: -19.12520408630371
    6. '```' → logprob: -19.50020408630371
    7. '
' → logprob: -20.12520408630371
    8. '0' → logprob: -20.62520408630371
    9. ' ' → logprob: -20.75020408630371
    10. '`' → logprob: -21.00020408630371

Token 518: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009776633232831955
    2. 'print' → logprob: -4.634776592254639
    3. '       ' → logprob: -11.634777069091797
    4. ' print' → logprob: -12.259777069091797
    5. '```' → logprob: -12.384777069091797
    6. '
' → logprob: -13.009777069091797
    7. '    
' → logprob: -15.009777069091797
    8. '           ' → logprob: -15.884777069091797
    9. '	print' → logprob: -16.259777069091797
    10. '#' → logprob: -16.884777069091797

Token 519: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2295588254928589
    2. '```' → logprob: -1.9795588254928589
    3. '   ' → logprob: -2.7295589447021484
    4. ' print' → logprob: -6.479558944702148
    5. '``' → logprob: -8.604558944702148
    6. '	print' → logprob: -11.479558944702148
    7. '       ' → logprob: -12.604558944702148
    8. '`' → logprob: -13.354558944702148
    9. '#print' → logprob: -13.854558944702148
    10. '
' → logprob: -13.979558944702148

Token 520: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3141038119792938
    2. 'print' (adapté à ' print') → logprob: -1.3141038417816162
    3. ' print' → logprob: -7.189103603363037
    4. '```' → logprob: -10.189104080200195
    5. '
' → logprob: -10.689104080200195
    6. '    
' → logprob: -11.564104080200195
    7. '	print' → logprob: -11.939104080200195
    8. '       ' → logprob: -12.439104080200195
    9. ')' → logprob: -12.939104080200195
    10. '<|end|>' → logprob: -13.314104080200195

Token 521: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '((' → logprob: -13.50000286102295
    3. '(ans' → logprob: -13.50000286102295
    4. 'Ans' → logprob: -17.000003814697266
    5. '(i' → logprob: -18.000003814697266
    6. '(f' → logprob: -19.375003814697266
    7. '(A' → logprob: -19.500003814697266
    8. '(
' → logprob: -19.875003814697266
    9. '(abs' → logprob: -19.875003814697266
    10. ' (' → logprob: -20.000003814697266

Token 522: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. ' Ans' → logprob: -15.625000953674316
    4. 'Answer' → logprob: -16.0
    5. 'i' → logprob: -18.0
    6. 'ans' → logprob: -18.5
    7. '(i' → logprob: -18.875
    8. 'Answers' → logprob: -19.5
    9. '.Ans' → logprob: -20.125
    10. '(ans' → logprob: -20.25

Token 523: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007170686032623053
    2. '()' → logprob: -5.257170677185059
    3. '())' → logprob: -6.632170677185059
    4. '(' → logprob: -7.882170677185059
    5. '<|end|>' → logprob: -9.757170677185059
    6. '*' → logprob: -10.257170677185059
    7. '```' → logprob: -10.382170677185059
    8. '+' → logprob: -10.757170677185059
    9. '(i' → logprob: -11.382170677185059
    10. '')' → logprob: -11.632170677185059

Token 524: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.107425062713446e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '998' → logprob: -14.000006675720215
    4. '_MOD' → logprob: -17.25000762939453
    5. '(M' → logprob: -18.00000762939453
    6. '.MOD' → logprob: -18.50000762939453
    7. '(Mod' → logprob: -19.50000762939453
    8. '(mod' → logprob: -20.50000762939453
    9. '999' → logprob: -20.75000762939453
    10. 'MO' → logprob: -21.12500762939453

Token 525: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006014356389641762
    2. '<|end|>' → logprob: -5.506014347076416
    3. '
' → logprob: -6.506014347076416
    4. '```' → logprob: -8.381014823913574
    5. '\n' → logprob: -10.131014823913574
    6. ' )' → logprob: -11.131014823913574
    7. ')
' → logprob: -11.256014823913574
    8. '`)' → logprob: -11.381014823913574
    9. '  
' → logprob: -11.381014823913574
    10. '')' → logprob: -11.381014823913574


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 523
Tokens correctement prédits (1ère position, stricte): 172
Tokens correctement prédits (1ère position, avec adaptation): 178
Tokens correctement prédits (top 10): 414
Précision stricte (1ère position): 32.89%
Précision adaptée (1ère position): 34.03%
Précision (top 10): 79.16%
================================================================================
