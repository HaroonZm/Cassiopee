================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
print(max(a, b) * 2 - (a != b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016122229397296906
    2. ' =' → logprob: -4.891122341156006
    3. '+' → logprob: -5.016122341156006
    4. ',' → logprob: -6.516122341156006
    5. '.' → logprob: -9.516121864318848
    6. ' ' → logprob: -9.641121864318848
    7. '+=' → logprob: -10.266121864318848
    8. '```' → logprob: -10.391121864318848
    9. ' +' → logprob: -10.641121864318848
    10. ')' → logprob: -10.766121864318848

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17840594053268433
    2. '1' → logprob: -2.303406000137329
    3. '0' → logprob: -2.928406000137329
    4. '10' → logprob: -4.92840576171875
    5. '5' → logprob: -6.55340576171875
    6. '42' → logprob: -8.05340576171875
    7. '3' → logprob: -8.92840576171875
    8. '[' → logprob: -9.05340576171875
    9. '2' → logprob: -9.17840576171875
    10. 'input' → logprob: -9.30340576171875

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08976709842681885
    2. '(lambda' → logprob: -2.8397669792175293
    3. '```' → logprob: -4.214766979217529
    4. '<|end|>' → logprob: -4.714766979217529
    5. ')' → logprob: -7.964766979217529
    6. '<|end|>' → logprob: -7.964766979217529
    7. '(token' → logprob: -8.089767456054688
    8. '(int' → logprob: -8.214767456054688
    9. '(str' → logprob: -8.339767456054688
    10. '[' → logprob: -8.839767456054688

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1867452710866928
    2. '(' → logprob: -2.4367451667785645
    3. '(input' → logprob: -3.3117451667785645
    4. ')(' → logprob: -4.5617451667785645
    5. '(user' → logprob: -4.5617451667785645
    6. '(token' → logprob: -4.8117451667785645
    7. '<|end|>' → logprob: -5.4367451667785645
    8. '```' → logprob: -5.9367451667785645
    9. ',' → logprob: -6.4367451667785645
    10. '(next' → logprob: -6.9367451667785645

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018938995897769928
    2. ' input' → logprob: -4.018939018249512
    3. '(input' → logprob: -7.268939018249512
    4. ')' → logprob: -9.393939018249512
    5. ',input' → logprob: -12.893939018249512
    6. '=input' → logprob: -13.268939018249512
    7. '```' → logprob: -13.643939018249512
    8. '<input' → logprob: -14.018939018249512
    9. '[input' → logprob: -14.393939018249512
    10. 'user' → logprob: -14.768939018249512

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9006648659706116
    2. '(' → logprob: -1.6506648063659668
    3. ')' → logprob: -1.6506648063659668
    4. '()' → logprob: -1.7756648063659668
    5. '('' → logprob: -4.025664806365967
    6. '(()' → logprob: -5.525664806365967
    7. '(""))' → logprob: -5.900664806365967
    8. '`()' → logprob: -5.900664806365967
    9. '```' → logprob: -6.525664806365967
    10. '()))' → logprob: -6.900664806365967

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024500858853571117
    2. 'strip' → logprob: -8.375245094299316
    3. ')' → logprob: -12.000245094299316
    4. 'rstrip' → logprob: -12.250245094299316
    5. ' split' → logprob: -12.875245094299316
    6. 'read' → logprob: -14.375245094299316
    7. '(split' → logprob: -15.625245094299316
    8. 'spl' → logprob: -15.750245094299316
    9. 'startswith' → logprob: -16.625244140625
    10. 'replace' → logprob: -17.875244140625

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052718982100486755
    2. '())' → logprob: -3.5527188777923584
    3. '))' → logprob: -3.8027188777923584
    4. '()' → logprob: -8.427719116210938
    5. '`)' → logprob: -9.802719116210938
    6. '()))' → logprob: -9.927719116210938
    7. '(' → logprob: -10.552719116210938
    8. ')`' → logprob: -10.802719116210938
    9. ')))' → logprob: -12.052719116210938
    10. ' )' → logprob: -12.302719116210938

Token 11: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011705600656569004
    2. '*' → logprob: -5.26170539855957
    3. '#' → logprob: -5.51170539855957
    4. '+
' → logprob: -7.26170539855957
    5. ',' → logprob: -8.13670539855957
    6. '[' → logprob: -8.26170539855957
    7. '=' → logprob: -8.76170539855957
    8. 'a' → logprob: -9.01170539855957
    9. '-' → logprob: -9.13670539855957
    10. '**' → logprob: -9.51170539855957

Token 12: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002481078845448792
    2. '('' → logprob: -9.375247955322266
    3. '(a' → logprob: -9.500247955322266
    4. '("("' → logprob: -9.625247955322266
    5. '((' → logprob: -11.875247955322266
    6. '()' → logprob: -12.750247955322266
    7. '(`' → logprob: -13.125247955322266
    8. '("""' → logprob: -13.250247955322266
    9. '(**' → logprob: -14.000247955322266
    10. '(
' → logprob: -14.125247955322266

Token 13: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25243136286735535
    2. '(' → logprob: -1.5024313926696777
    3. '()' → logprob: -8.00243091583252
    4. '((' → logprob: -9.62743091583252
    5. '(ab' → logprob: -10.75243091583252
    6. ')' → logprob: -11.25243091583252
    7. '(()' → logprob: -11.37743091583252
    8. '(b' → logprob: -11.62743091583252
    9. '(max' → logprob: -12.00243091583252
    10. '())' → logprob: -12.12743091583252

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006103101186454296
    2. ',b' → logprob: -5.631103038787842
    3. ' ,' → logprob: -6.006103038787842
    4. ')' → logprob: -10.756103515625
    5. ',a' → logprob: -11.631103515625
    6. 'b' → logprob: -13.506103515625
    7. ' ' → logprob: -13.756103515625
    8. '))' → logprob: -14.131103515625
    9. ',
' → logprob: -14.256103515625
    10. 'a' → logprob: -15.256103515625

Token 15: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759398937225342
    2. ' b' → logprob: -0.8259398937225342
    3. ')b' → logprob: -16.075939178466797
    4. ',b' → logprob: -16.200939178466797
    5. ' ' → logprob: -16.575939178466797
    6. ',' → logprob: -17.325939178466797
    7. ' б' → logprob: -17.450939178466797
    8. ' ' → logprob: -17.450939178466797
    9. '	b' → logprob: -17.700939178466797
    10. ')' → logprob: -18.200939178466797

Token 16: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16029764711856842
    2. ')' → logprob: -1.9102976322174072
    3. ')))' → logprob: -9.535297393798828
    4. '))
' → logprob: -15.160297393798828
    5. '),' → logprob: -15.285297393798828
    6. ' ))' → logprob: -15.785297393798828
    7. ')}' → logprob: -15.910297393798828
    8. ''))' → logprob: -16.660297393798828
    9. ' )' → logprob: -16.785297393798828
    10. ')
' → logprob: -16.785297393798828

Token 17: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026264708139933646
    2. '))' → logprob: -8.250262260437012
    3. '`)' → logprob: -14.000262260437012
    4. ' )' → logprob: -15.375262260437012
    5. ')))' → logprob: -16.125263214111328
    6. '')' → logprob: -16.500263214111328
    7. ')`' → logprob: -16.625263214111328
    8. ')
' → logprob: -17.625263214111328
    9. '```' → logprob: -18.000263214111328
    10. '()' → logprob: -18.375263214111328

Token 18: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054574064910411835
    2. ' ' → logprob: -3.0545740127563477
    3. ' max' → logprob: -6.554574012756348
    4. 'max' → logprob: -6.804574012756348
    5. '3' → logprob: -7.054574012756348
    6. ')' → logprob: -8.054574012756348
    7. '(max' → logprob: -8.054574012756348
    8. '1' → logprob: -8.054574012756348
    9. 'min' → logprob: -8.304574012756348
    10. ' min' → logprob: -8.554574012756348

Token 19: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033106771297752857
    2. ' ' → logprob: -6.253310680389404
    3. 'min' → logprob: -7.378310680389404
    4. 'max' → logprob: -8.378310203552246
    5. '3' → logprob: -9.128310203552246
    6. '(min' → logprob: -9.628310203552246
    7. 'a' → logprob: -9.753310203552246
    8. '*' → logprob: -10.128310203552246
    9. '(a' → logprob: -10.128310203552246
    10. 'b' → logprob: -10.503310203552246

Token 20: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002383441897109151
    2. '))' → logprob: -8.375238418579102
    3. '`)' → logprob: -12.125238418579102
    4. ')`' → logprob: -14.750238418579102
    5. ' )' → logprob: -14.875238418579102
    6. '*' → logprob: -15.000238418579102
    7. '')' → logprob: -15.250238418579102
    8. '```' → logprob: -15.250238418579102
    9. ')))' → logprob: -15.375238418579102
    10. '(' → logprob: -15.875238418579102

Token 21: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05361977592110634
    2. 'min' → logprob: -3.178619861602783
    3. '(min' → logprob: -5.053619861602783
    4. ' min' → logprob: -6.303619861602783
    5. 'abs' → logprob: -6.928619861602783
    6. '(a' → logprob: -7.678619861602783
    7. 'a' → logprob: -7.803619861602783
    8. ' ' → logprob: -8.803619384765625
    9. ' abs' → logprob: -9.553619384765625
    10. ' (' → logprob: -9.553619384765625

Token 22: 'a' (ID: 64)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3355110287666321
    2. ' min' → logprob: -2.0855109691619873
    3. '1' → logprob: -2.3355109691619873
    4. 'a' → logprob: -3.5855109691619873
    5. '(min' → logprob: -3.9605109691619873
    6. 'max' → logprob: -5.335511207580566
    7. 'abs' → logprob: -5.585511207580566
    8. '(a' → logprob: -6.210511207580566
    9. ' a' → logprob: -6.710511207580566
    10. ' ' → logprob: -6.710511207580566

Token 23: ' !=' (ID: 1666)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6697782278060913
    2. '+' → logprob: -1.2947782278060913
    3. '>' → logprob: -2.669778347015381
    4. ' >' → logprob: -2.794778347015381
    5. '+b' → logprob: -3.169778347015381
    6. ' ' → logprob: -4.419778347015381
    7. '%' → logprob: -5.169778347015381
    8. ',' → logprob: -5.419778347015381
    9. ')' → logprob: -5.419778347015381
    10. ' if' → logprob: -5.544778347015381

Token 24: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.054890409111976624
    2. ' b' → logprob: -2.9298903942108154
    3. ' ' → logprob: -12.679890632629395
    4. ')b' → logprob: -13.304890632629395
    5. ')' → logprob: -14.054890632629395
    6. '1' → logprob: -14.554890632629395
    7. '0' → logprob: -14.804890632629395
    8. '_b' → logprob: -14.929890632629395
    9. '	b' → logprob: -15.054890632629395
    10. '  ' → logprob: -15.679890632629395

Token 25: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38688555359840393
    2. '))' → logprob: -1.1368855237960815
    3. ')))' → logprob: -11.636885643005371
    4. ' )' → logprob: -12.886885643005371
    5. ' ))' → logprob: -13.761885643005371
    6. ')a' → logprob: -15.011885643005371
    7. '),' → logprob: -15.386885643005371
    8. ''))' → logprob: -15.636885643005371
    9. ')`' → logprob: -15.761885643005371
    10. '`)' → logprob: -15.761885643005371


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 17.39%
Précision adaptée (1ère position): 17.39%
Précision (top 10): 65.22%
================================================================================
