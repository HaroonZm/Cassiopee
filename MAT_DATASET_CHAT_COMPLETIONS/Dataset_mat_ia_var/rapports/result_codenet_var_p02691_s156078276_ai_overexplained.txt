================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict  # Importation de defaultdict, qui permet de créer un dictionnaire avec une valeur par défaut

def solve(*args: str) -> str:
    # La fonction solve prend un nombre variable d'arguments de type chaîne de caractères
    # Chaque argument passé à la fonction solve est une chaîne, soit les lignes du problème

    n = int(args[0])  # Conversion de la première ligne (taille du tableau) en entier et stockage dans n

    # La deuxième ligne (args[1]) contient la liste des entiers sous forme de chaîne de caractères, séparés par des espaces
    # La méthode split() divise cette chaîne en une liste de sous-chaînes pour chaque entier
    # La fonction map applique la conversion int à chacune de ces sous-chaînes, créant alors une séquence d'entiers
    # La fonction list convertit cette séquence en une liste d'entiers
    A = list(map(int, args[1].split()))

    ret = 0  # Initialisation d'un compteur à zéro. Ce compteur va contenir le résultat final.

    X = defaultdict(int)  # Création d'un dictionnaire spécial (defaultdict) où chaque clé inexistante a pour valeur par défaut 0

    # Début d'une boucle qui parcourt simultanément les indices et les valeurs de la liste A
    # La fonction enumerate(A) génère des paires (indice, valeur) pour chaque élément de la liste A
    for i, a in enumerate(A):
        # Pour chaque élément a à l'indice i, on calculera la clé (a + i)
        # On incrémente ensuite la valeur dans X pour cette clé de 1
        # Cela ajoute 1 à la clé (a + i) dans le dictionnaire, ou la crée avec une valeur initiale de 1 si elle n'existait pas
        X[a + i] += 1

        # On vérifie si la différence (i - a) est positive ou nulle. Cela empêche d'utiliser des indices négatifs ou hors bornes dans certaines logiques.
        if 0 <= i - a:
            # Si la condition précédente est vraie, on ajoute la valeur associée à la clé (i - a) dans X à ret
            # Si la clé (i - a) n'existe pas dans X, grâce à defaultdict, sa valeur est 0, donc on ajoute 0 sans erreur
            ret += X[i - a]

    # La fonction retourne le résultat final converti en chaîne de caractères
    return str(ret)

# Ce bloc vérifie si le script est exécuté comme programme principal, et non importé comme module
if __name__ == "__main__":
    # La fonction open(0) ouvre le flux d'entrée standard (stdin)
    # read() lit tout le contenu de l'entrée standard sous forme de chaîne de caractères
    # splitlines() divise cette chaîne en une liste où chaque ligne de texte devient un élément de la liste
    # L'opérateur * décompose cette liste pour passer chaque élément en argument séparé à la fonction solve
    # On envoie le résultat de solve à la fonction print pour l'afficher à l'écran
    print(solve(*(open(0).read().splitlines())))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.5559979677200317
    2. 'deque' → logprob: -1.3059979677200317
    3. 'default' → logprob: -2.305997848510742
    4. ' defaultdict' → logprob: -3.680997848510742
    5. 'Counter' → logprob: -4.180997848510742
    6. ' abc' → logprob: -4.805997848510742
    7. 'named' → logprob: -5.680997848510742
    8. ' deque' → logprob: -6.555997848510742
    9. ' Counter' → logprob: -7.180997848510742
    10. '```' → logprob: -7.305997848510742

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007142632734030485
    2. '(
' → logprob: -5.632142543792725
    3. '\' → logprob: -7.132142543792725
    4. '\(' → logprob: -7.382142543792725
    5. '```' → logprob: -7.882142543792725
    6. 'newline' → logprob: -8.007143020629883
    7. '\n' → logprob: -8.382143020629883
    8. '[' → logprob: -8.507143020629883
    9. '
' → logprob: -9.132143020629883
    10. 'def' → logprob: -9.257143020629883

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008352391887456179
    2. '(
' → logprob: -7.250835418701172
    3. '\' → logprob: -10.750835418701172
    4. '\(' → logprob: -10.875835418701172
    5. ' (' → logprob: -11.500835418701172
    6. 'd' → logprob: -11.750835418701172
    7. '()' → logprob: -11.875835418701172
    8. '\n' → logprob: -12.000835418701172
    9. '(

' → logprob: -12.000835418701172
    10. ',' → logprob: -12.125835418701172

Token 6: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00036263695801608264
    2. ' defaultdict' → logprob: -9.125362396240234
    3. '_' → logprob: -9.500362396240234
    4. ' 
' → logprob: -10.250362396240234
    5. 'd' → logprob: -10.375362396240234
    6. '  ' → logprob: -10.750362396240234
    7. '<|end|>' → logprob: -11.250362396240234
    8. ' a' → logprob: -11.500362396240234
    9. 'a' → logprob: -12.000362396240234
    10. ' ' → logprob: -12.125362396240234

Token 7: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1908823549747467
    2. '(' → logprob: -2.065882444381714
    3. ' ' → logprob: -3.565882444381714
    4. '<|end|>' → logprob: -5.565882205963135
    5. ' .' → logprob: -5.690882205963135
    6. 'import' → logprob: -6.065882205963135
    7. ',' → logprob: -6.190882205963135
    8. ' (' → logprob: -6.690882205963135
    9. '```' → logprob: -6.940882205963135
    10. ')' → logprob: -7.065882205963135

Token 8: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5958374738693237
    2. ' ' → logprob: -1.8458374738693237
    3. '\' → logprob: -2.7208375930786133
    4. 'd' → logprob: -3.4708375930786133
    5. '(' → logprob: -3.8458375930786133
    6. '<|end|>' → logprob: -3.8458375930786133
    7. '
' → logprob: -3.9708375930786133
    8. 'default' → logprob: -4.095837593078613
    9. ' defaultdict' → logprob: -4.220837593078613
    10. '```' → logprob: -4.470837593078613

Token 9: ' defaultdict' (ID: 107098)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015616427408531308
    2. ' collections' → logprob: -7.001561641693115
    3. ' defaultdict' → logprob: -8.001562118530273
    4. ' ' → logprob: -8.626562118530273
    5. ' la' → logprob: -10.251562118530273
    6. ' l' → logprob: -10.501562118530273
    7. 'collections' → logprob: -10.876562118530273
    8. '  ' → logprob: -11.001562118530273
    9. 'l' → logprob: -11.876562118530273
    10. '  ' → logprob: -11.876562118530273

Token 10: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0699000358581543
    2. '(' → logprob: -1.5699000358581543
    3. '

' → logprob: -2.0699000358581543
    4. ' ' → logprob: -2.1949000358581543
    5. ' 

' → logprob: -3.3199000358581543
    6. '\' → logprob: -3.4449000358581543
    7. ',' → logprob: -3.4449000358581543
    8. '' → logprob: -3.9449000358581543
    9. '\n' → logprob: -4.569900035858154
    10. '(
' → logprob: -4.569900035858154

Token 11: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015331897884607315
    2. '  ' → logprob: -7.126533031463623
    3. ' which' → logprob: -8.876533508300781
    4. '   ' → logprob: -9.251533508300781
    5. '    ' → logprob: -10.126533508300781
    6. ',' → logprob: -10.126533508300781
    7. ' qui' → logprob: -10.251533508300781
    8. ' ,' → logprob: -10.376533508300781
    9. ' 
' → logprob: -10.626533508300781
    10. '  
' → logprob: -10.626533508300781

Token 12: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.12118232250213623
    2. ' facilite' → logprob: -3.246182441711426
    3. 's' → logprob: -3.621182441711426
    4. 'per' → logprob: -3.871182441711426
    5. ' est' → logprob: -4.496182441711426
    6. 'est' → logprob: -5.871182441711426
    7. 'fac' → logprob: -5.996182441711426
    8. 'perm' → logprob: -6.496182441711426
    9. 'sert' → logprob: -6.496182441711426
    10. ' permettra' → logprob: -6.746182441711426

Token 13: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.084449291229248
    2. ' ' → logprob: -1.209449291229248
    3. ' de' → logprob: -1.334449291229248
    4. 'd' → logprob: -2.959449291229248
    5. 's' → logprob: -3.334449291229248
    6. 'de' → logprob: -5.584449291229248
    7. '  ' → logprob: -6.709449291229248
    8. '   ' → logprob: -7.084449291229248
    9. '(' → logprob: -7.084449291229248
    10. ' des' → logprob: -7.209449291229248

Token 14: ' créer' (ID: 40938)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.24931615591049194
    2. ' créer' → logprob: -1.8743162155151367
    3. 'g' → logprob: -3.9993162155151367
    4. 'f' → logprob: -4.249316215515137
    5. ' gérer' → logprob: -4.749316215515137
    6. 'fac' → logprob: -5.249316215515137
    7. 'simpl' → logprob: -5.249316215515137
    8. ' fournir' → logprob: -5.374316215515137
    9. ' faciliter' → logprob: -6.374316215515137
    10. '```' → logprob: -6.749316215515137

Token 15: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.41668593883514404
    2. 's' → logprob: -2.4166860580444336
    3. ' un' → logprob: -2.5416860580444336
    4. ' ' → logprob: -2.6666860580444336
    5. 'des' → logprob: -3.1666860580444336
    6. ' automatiquement' → logprob: -3.5416860580444336
    7. ' une' → logprob: -4.291686058044434
    8. ' defaultdict' → logprob: -5.416686058044434
    9. 'd' → logprob: -5.666686058044434
    10. 'dict' → logprob: -6.041686058044434

Token 16: ' diction' (ID: 155259)
  Prédit: ' diction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diction' → logprob: -0.5500049591064453
    2. 'd' → logprob: -2.0500049591064453
    3. ' nouveau' → logprob: -2.1750049591064453
    4. 's' → logprob: -3.3000049591064453
    5. 'dict' → logprob: -3.8000049591064453
    6. ' new' → logprob: -3.9250049591064453
    7. ' ' → logprob: -4.425004959106445
    8. ' type' → logprob: -4.550004959106445
    9. ' dict' → logprob: -4.550004959106445
    10. ' d' → logprob: -4.550004959106445

Token 17: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.5778493285179138
    2. 'ary' → logprob: -0.8278493285179138
    3. 'naires' → logprob: -6.952849388122559
    4. 'ar' → logprob: -7.702849388122559
    5. 'aire' → logprob: -7.952849388122559
    6. 'n' → logprob: -10.077849388122559
    7. 'a' → logprob: -10.827849388122559
    8. '   ' → logprob: -11.077849388122559
    9. '{' → logprob: -11.577849388122559
    10. 'arry' → logprob: -11.702849388122559

Token 18: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20895305275917053
    2. ' ' → logprob: -2.0839531421661377
    3. 's' → logprob: -3.3339531421661377
    4. '[' → logprob: -4.833952903747559
    5. ' (' → logprob: -5.208952903747559
    6. '<|end|>' → logprob: -5.458952903747559
    7. ',' → logprob: -5.583952903747559
    8. ')' → logprob: -6.708952903747559
    9. '(
' → logprob: -6.833952903747559
    10. '()' → logprob: -6.958952903747559

Token 19: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06689275801181793
    2. ' un' → logprob: -3.4418928623199463
    3. 'une' → logprob: -3.6918928623199463
    4. 'un' → logprob: -5.441892623901367
    5. ' des' → logprob: -6.441892623901367
    6. ' valeur' → logprob: -7.316892623901367
    7. ' valeurs' → logprob: -7.816892623901367
    8. 'des' → logprob: -8.316892623901367
    9. 'val' → logprob: -8.816892623901367
    10. ' ' → logprob: -9.691892623901367

Token 20: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.03728355094790459
    2. 'val' → logprob: -3.4122836589813232
    3. ' ' → logprob: -6.912283420562744
    4. ' val' → logprob: -7.412283420562744
    5. ' fonction' → logprob: -7.787283420562744
    6. 'fonction' → logprob: -8.037283897399902
    7. '   ' → logprob: -8.412283897399902
    8. ' clé' → logprob: -8.537283897399902
    9. 'dé' → logprob: -8.787283897399902
    10. ' value' → logprob: -8.787283897399902

Token 21: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6025310754776001
    2. ' par' → logprob: -0.9775310754776001
    3. '_par' → logprob: -2.6025309562683105
    4. 'initial' → logprob: -7.4775309562683105
    5. ' initial' → logprob: -7.9775309562683105
    6. 'dé' → logprob: -8.352531433105469
    7. '_initial' → logprob: -8.852531433105469
    8. 'def' → logprob: -9.102531433105469
    9. '_' → logprob: -9.352531433105469
    10. 'de' → logprob: -9.477531433105469

Token 22: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.009823263622820377
    2. ' défaut' → logprob: -4.759823322296143
    3. 'def' → logprob: -7.259823322296143
    4. 'default' → logprob: -8.009822845458984
    5. 'd' → logprob: -10.259822845458984
    6. '-' → logprob: -10.884822845458984
    7. '   ' → logprob: -10.884822845458984
    8. '```' → logprob: -11.134822845458984
    9. '#' → logprob: -11.259822845458984
    10. 'Dé' → logprob: -11.259822845458984

Token 23: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5791872143745422
    2. ' ' → logprob: -1.5791871547698975
    3. 'd' → logprob: -2.7041871547698975
    4. '' → logprob: -3.3291871547698975
    5. 'n' → logprob: -3.4541871547698975
    6. '\' → logprob: -3.9541871547698975
    7. '\n' → logprob: -3.9541871547698975
    8. '.' → logprob: -4.579187393188477
    9. '

' → logprob: -4.829187393188477
    10. 'a' → logprob: -5.079187393188477

Token 24: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9267640709877014
    2. 'a' → logprob: -1.8017640113830566
    3. ' ' → logprob: -2.0517640113830566
    4. '(' → logprob: -2.3017640113830566
    5. 'n' → logprob: -2.8017640113830566
    6. '\' → logprob: -3.3017640113830566
    7. 'newline' → logprob: -3.9267640113830566
    8. '.' → logprob: -4.426764011383057
    9. ',' → logprob: -4.426764011383057
    10. '' → logprob: -4.926764011383057

Token 25: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006021465174853802
    2. ' defaultdict' → logprob: -5.756021499633789
    3. ' my' → logprob: -7.006021499633789
    4. ' def' → logprob: -7.381021499633789
    5. ' default' → logprob: -8.006021499633789
    6. ' space' → logprob: -8.881021499633789
    7. '_' → logprob: -9.006021499633789
    8. ' create' → logprob: -9.256021499633789
    9. ' add' → logprob: -9.381021499633789
    10. ' dict' → logprob: -9.506021499633789

Token 26: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03708243370056152
    2. '_' → logprob: -3.4120824337005615
    3. ' (' → logprob: -6.037082672119141
    4. '(_' → logprob: -8.78708267211914
    5. '```' → logprob: -8.91208267211914
    6. ':' → logprob: -9.16208267211914
    7. ')' → logprob: -9.66208267211914
    8. ' ' → logprob: -9.91208267211914
    9. 'def' → logprob: -10.41208267211914
    10. '(_)' → logprob: -10.41208267211914

Token 27: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.025220179930329323
    2. '):' → logprob: -4.4002203941345215
    3. ')' → logprob: -4.9002203941345215
    4. 'argv' → logprob: -6.7752203941345215
    5. 'input' → logprob: -6.9002203941345215
    6. 'cases' → logprob: -7.1502203941345215
    7. 'lines' → logprob: -7.9002203941345215
    8. 'test' → logprob: -8.275219917297363
    9. 'n' → logprob: -8.400219917297363
    10. 'arguments' → logprob: -8.775219917297363

Token 28: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013355977134779096
    2. ')' → logprob: -6.626335620880127
    3. ',' → logprob: -12.251335144042969
    4. '):
' → logprob: -13.251335144042969
    5. ':' → logprob: -14.126335144042969
    6. '):
' → logprob: -14.876335144042969
    7. '**' → logprob: -14.876335144042969
    8. ' ):' → logprob: -15.001335144042969
    9. '*' → logprob: -15.376335144042969
    10. 'def' → logprob: -15.626335144042969

Token 29: ' str' (ID: 989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4074323773384094
    2. 'str' → logprob: -1.6574323177337646
    3. '):' → logprob: -2.6574323177337646
    4. 'int' → logprob: -3.0324323177337646
    5. ' str' → logprob: -4.657432556152344
    6. ' )' → logprob: -4.782432556152344
    7. 'object' → logprob: -5.782432556152344
    8. ' int' → logprob: -6.907432556152344
    9. ' ):' → logprob: -7.032432556152344
    10. '   ' → logprob: -7.407432556152344

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07900963723659515
    2. '):' → logprob: -2.579009532928467
    3. ')->' → logprob: -9.079010009765625
    4. ')>' → logprob: -13.454010009765625
    5. '):
' → logprob: -14.079010009765625
    6. ':' → logprob: -14.454010009765625
    7. ')**' → logprob: -15.204010009765625
    8. ')`' → logprob: -15.204010009765625
    9. '   ' → logprob: -15.329010009765625
    10. '`)' → logprob: -15.454010009765625

Token 31: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000282431225059554
    2. '):' → logprob: -8.375282287597656
    3. ' :' → logprob: -10.375282287597656
    4. '():' → logprob: -12.250282287597656
    5. ':return' → logprob: -12.375282287597656
    6. ':**' → logprob: -12.500282287597656
    7. '>:' → logprob: -13.375282287597656
    8. ':def' → logprob: -13.750282287597656
    9. ')' → logprob: -13.875282287597656
    10. ',' → logprob: -14.250282287597656

Token 32: ' str' (ID: 989)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3237883746623993
    2. ' None' → logprob: -2.1987884044647217
    3. ' int' → logprob: -2.5737884044647217
    4. 'None' → logprob: -2.9487884044647217
    5. 'dict' → logprob: -4.448788166046143
    6. ' dict' → logprob: -4.698788166046143
    7. 'list' → logprob: -5.448788166046143
    8. ' list' → logprob: -5.698788166046143
    9. ' str' → logprob: -5.698788166046143
    10. 'str' → logprob: -5.948788166046143

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.334533878136426e-05
    2. '():' → logprob: -11.250042915344238
    3. ':
' → logprob: -11.375042915344238
    4. '):' → logprob: -11.625042915344238
    5. ' :' → logprob: -12.250042915344238
    6. ':**' → logprob: -13.375042915344238
    7. ':return' → logprob: -13.375042915344238
    8. ':def' → logprob: -14.500042915344238
    9. '   ' → logprob: -14.625042915344238
    10. ',' → logprob: -15.375042915344238

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6359164714813232
    2. '   ' → logprob: -1.2609164714813232
    3. '
' → logprob: -2.5109164714813232
    4. ':
' → logprob: -3.3859164714813232
    5. '\n' → logprob: -3.6359164714813232
    6. '    
' → logprob: -4.010916709899902
    7. '  
' → logprob: -5.010916709899902
    8. '\' → logprob: -5.010916709899902
    9. '    ' → logprob: -5.260916709899902
    10. ' 
' → logprob: -5.885916709899902

Token 35: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6763264536857605
    2. 'd' → logprob: -1.5513265132904053
    3. 'result' → logprob: -2.1763265132904053
    4. ' d' → logprob: -3.1763265132904053
    5. 'counter' → logprob: -3.6763265132904053
    6. ' result' → logprob: -4.051326274871826
    7. 'data' → logprob: -4.301326274871826
    8. ' ' → logprob: -4.926326274871826
    9. '    
' → logprob: -5.051326274871826
    10. ' counter' → logprob: -5.176326274871826

Token 36: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2240009307861328
    2. ' result' → logprob: -1.5990009307861328
    3. 'result' → logprob: -2.349000930786133
    4. ' input' → logprob: -2.724000930786133
    5. ' lines' → logprob: -3.099000930786133
    6. 'd' → logprob: -3.224000930786133
    7. ' data' → logprob: -3.349000930786133
    8. ' d' → logprob: -3.474000930786133
    9. ' n' → logprob: -3.849000930786133
    10. ' ' → logprob: -4.099000930786133

Token 37: ' fonction' (ID: 17610)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.46672695875167847
    2. ' d' → logprob: -2.5917270183563232
    3. ' ' → logprob: -3.4667270183563232
    4. 'def' → logprob: -3.9667270183563232
    5. 's' → logprob: -4.091726779937744
    6. 'd' → logprob: -4.091726779937744
    7. ' collection' → logprob: -4.091726779937744
    8. ' meilleure' → logprob: -4.091726779937744
    9. ' def' → logprob: -4.341726779937744
    10. ' suite' → logprob: -4.591726779937744

Token 38: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10638893395662308
    2. '    ' → logprob: -3.106389045715332
    3. 'def' → logprob: -3.981389045715332
    4. '  ' → logprob: -4.231389045715332
    5. '   ' → logprob: -4.356389045715332
    6. ' def' → logprob: -5.856389045715332
    7. ' return' → logprob: -6.481389045715332
    8. ' est' → logprob: -7.481389045715332
    9. ' de' → logprob: -7.856389045715332
    10. ' solve' → logprob: -8.106389045715332

Token 39: ' prend' (ID: 37463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45415979623794556
    2. ':' → logprob: -1.7041597366333008
    3. '   ' → logprob: -1.8291597366333008
    4. ' :' → logprob: -4.454159736633301
    5. '(
' → logprob: -5.954159736633301
    6. '    ' → logprob: -6.329159736633301
    7. '():' → logprob: -6.329159736633301
    8. ' ' → logprob: -7.454159736633301
    9. '```' → logprob: -7.579159736633301
    10. 'def' → logprob: -7.579159736633301

Token 40: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.24637724459171295
    2. ' une' → logprob: -1.8713772296905518
    3. ' ' → logprob: -2.8713772296905518
    4. ' en' → logprob: -5.871377468109131
    5. '   ' → logprob: -6.746377468109131
    6. 'un' → logprob: -6.996377468109131
    7. ' place' → logprob: -7.621377468109131
    8. ' le' → logprob: -7.746377468109131
    9. ' a' → logprob: -7.871377468109131
    10. ' la' → logprob: -7.996377468109131

Token 41: ' nombre' (ID: 9733)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.7288697957992554
    2. 'param' → logprob: -1.8538697957992554
    3. ' argument' → logprob: -1.9788697957992554
    4. ' mot' → logprob: -2.853869915008545
    5. 'argument' → logprob: -3.103869915008545
    6. 's' → logprob: -4.103869915008545
    7. ' ' → logprob: -4.103869915008545
    8. ' string' → logprob: -4.353869915008545
    9. 'mot' → logprob: -4.478869915008545
    10. ' token' → logprob: -5.103869915008545

Token 42: ' variable' (ID: 11076)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1739058941602707
    2. ' ' → logprob: -2.298905849456787
    3. ' de' → logprob: -3.673905849456787
    4. 'd' → logprob: -4.423905849456787
    5. '  ' → logprob: -4.798905849456787
    6. '<|end|>' → logprob: -5.548905849456787
    7. 'de' → logprob: -6.298905849456787
    8. ' limité' → logprob: -6.798905849456787
    9. 's' → logprob: -7.173905849456787
    10. ' variable' → logprob: -7.423905849456787

Token 43: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1408851146697998
    2. 'd' → logprob: -2.3908851146698
    3. ' ' → logprob: -3.6408851146698
    4. ' de' → logprob: -4.640885353088379
    5. '  ' → logprob: -6.515885353088379
    6. 'de' → logprob: -6.640885353088379
    7. '<|end|>' → logprob: -7.515885353088379
    8. '<|end|>' → logprob: -8.890885353088379
    9. '   ' → logprob: -9.265885353088379
    10. '    ' → logprob: -9.265885353088379

Token 44: ''' (ID: 6)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.3981293737888336
    2. ' ' → logprob: -1.3981293439865112
    3. ''' → logprob: -3.273129463195801
    4. 'arguments' → logprob: -4.023129463195801
    5. '_' → logprob: -4.898129463195801
    6. '_args' → logprob: -5.648129463195801
    7. '_arguments' → logprob: -5.648129463195801
    8. '  ' → logprob: -6.023129463195801
    9. ''espace' → logprob: -6.273129463195801
    10. 'a' → logprob: -7.398129463195801

Token 45: 'arguments' (ID: 34317)
  Prédit: 'arguments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arguments' → logprob: -0.001762882457114756
    2. 'argument' → logprob: -7.251762866973877
    3. 'args' → logprob: -7.751762866973877
    4. '_arguments' → logprob: -8.251763343811035
    5. ' arguments' → logprob: -8.876763343811035
    6. 'arg' → logprob: -9.376763343811035
    7. 'élé' → logprob: -9.501763343811035
    8. 'Arguments' → logprob: -11.126763343811035
    9. 'param' → logprob: -12.001763343811035
    10. '```' → logprob: -12.126763343811035

Token 46: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07969522476196289
    2. '   ' → logprob: -2.954695224761963
    3. '):' → logprob: -4.329695224761963
    4. ' :' → logprob: -4.829695224761963
    5. ',' → logprob: -5.954695224761963
    6. '  ' → logprob: -9.079694747924805
    7. ':
' → logprob: -9.329694747924805
    8. ')' → logprob: -9.579694747924805
    9. '    ' → logprob: -9.579694747924805
    10. ' ' → logprob: -9.954694747924805

Token 47: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.10906929522752762
    2. 'type' → logprob: -2.359069347381592
    3. 's' → logprob: -5.859069347381592
    4. 'texte' → logprob: -6.359069347381592
    5. ' chaîne' → logprob: -6.984069347381592
    6. ' texte' → logprob: -6.984069347381592
    7. 'str' → logprob: -8.234068870544434
    8. ' string' → logprob: -8.359068870544434
    9. ' strings' → logprob: -8.484068870544434
    10. 'string' → logprob: -8.609068870544434

Token 48: ' chaîne' (ID: 89288)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.04926438629627228
    2. 'str' → logprob: -3.049264430999756
    3. ' ' → logprob: -8.299263954162598
    4. ' string' → logprob: -9.424263954162598
    5. '[str' → logprob: -9.549263954162598
    6. '(str' → logprob: -9.549263954162598
    7. 's' → logprob: -10.174263954162598
    8. ' strings' → logprob: -10.424263954162598
    9. '=str' → logprob: -10.424263954162598
    10. '```' → logprob: -10.799263954162598

Token 49: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5879843831062317
    2. '```' → logprob: -1.337984323501587
    3. ' de' → logprob: -2.462984323501587
    4. ':' → logprob: -2.962984323501587
    5. ' :' → logprob: -3.712984323501587
    6. '):' → logprob: -5.712984561920166
    7. '``' → logprob: -5.712984561920166
    8. ',' → logprob: -5.837984561920166
    9. '    ' → logprob: -6.337984561920166
    10. ':
' → logprob: -6.337984561920166

Token 50: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.477422297000885
    2. ' caractères' → logprob: -0.977422297000885
    3. ' caracteres' → logprob: -6.60242223739624
    4. ' caract' → logprob: -6.97742223739624
    5. ' caractère' → logprob: -7.22742223739624
    6. ' car' → logprob: -8.602422714233398
    7. 'texte' → logprob: -9.477422714233398
    8. 'str' → logprob: -11.102422714233398
    9. 'char' → logprob: -11.727422714233398
    10. 'c' → logprob: -11.977422714233398

Token 51: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01847919262945652
    2. '   ' → logprob: -4.143479347229004
    3. ' :' → logprob: -6.893479347229004
    4. ':
' → logprob: -7.018479347229004
    5. '):' → logprob: -8.518479347229004
    6. ',' → logprob: -8.643479347229004
    7. ')' → logprob: -10.768479347229004
    8. '
' → logprob: -10.768479347229004
    9. ' ' → logprob: -11.143479347229004
    10. '```' → logprob: -11.393479347229004

Token 52: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029907844960689545
    2. '   ' → logprob: -3.6549079418182373
    3. ' :' → logprob: -6.529907703399658
    4. ':
' → logprob: -6.654907703399658
    5. ' ' → logprob: -8.279908180236816
    6. '):' → logprob: -8.654908180236816
    7. ',' → logprob: -9.529908180236816
    8. ')' → logprob: -9.529908180236816
    9. '\n' → logprob: -9.904908180236816
    10. '
' → logprob: -10.529908180236816

Token 53: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06080140918493271
    2. '    
' → logprob: -4.1858015060424805
    3. 'n' → logprob: -4.3108015060424805
    4. '\n' → logprob: -4.8108015060424805
    5. '
' → logprob: -5.3108015060424805
    6. 'tokens' → logprob: -5.4358015060424805
    7. '    ' → logprob: -6.0608015060424805
    8. 'd' → logprob: -6.3108015060424805
    9. 'result' → logprob: -6.3108015060424805
    10. '   
' → logprob: -7.0608015060424805

Token 54: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015314984135329723
    2. 'tokens' → logprob: -5.515315055847168
    3. 'result' → logprob: -6.140315055847168
    4. '    
' → logprob: -6.390315055847168
    5. 'n' → logprob: -6.390315055847168
    6. '```' → logprob: -6.890315055847168
    7. 'd' → logprob: -7.140315055847168
    8. '    ' → logprob: -7.640315055847168
    9. ' tokens' → logprob: -7.640315055847168
    10. 'def' → logprob: -7.765315055847168

Token 55: ' argument' (ID: 10383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7215127348899841
    2. ' argument' → logprob: -1.596512794494629
    3. '   ' → logprob: -2.221512794494629
    4. 'argument' → logprob: -3.096512794494629
    5. '_' → logprob: -3.346512794494629
    6. ' token' → logprob: -3.346512794494629
    7. ' arg' → logprob: -3.596512794494629
    8. ' ligne' → logprob: -4.096512794494629
    9. ' line' → logprob: -4.971512794494629
    10. 'token' → logprob: -5.346512794494629

Token 56: ' passé' (ID: 40520)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -1.5320720672607422
    2. ' est' → logprob: -1.6570720672607422
    3. '    ' → logprob: -2.282072067260742
    4. ' correspond' → logprob: -2.407072067260742
    5. ' ' → logprob: -2.407072067260742
    6. 's' → logprob: -2.907072067260742
    7. '   ' → logprob: -2.907072067260742
    8. ' a' → logprob: -3.157072067260742
    9. ' contient' → logprob: -3.532072067260742
    10. ' ,' → logprob: -4.032072067260742

Token 57: ' à' (ID: 1221)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3658057451248169
    2. 'est' → logprob: -2.1158056259155273
    3. ' ' → logprob: -2.8658056259155273
    4. ' correspond' → logprob: -2.8658056259155273
    5. ' représente' → logprob: -2.8658056259155273
    6. '   ' → logprob: -5.615805625915527
    7. 're' → logprob: -5.740805625915527
    8. ' à' → logprob: -6.365805625915527
    9. 'cor' → logprob: -6.490805625915527
    10. ' en' → logprob: -7.240805625915527

Token 58: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41882234811782837
    2. ' la' → logprob: -1.4188222885131836
    3. 'solve' → logprob: -2.4188222885131836
    4. ' solve' → logprob: -5.293822288513184
    5. 'args' → logprob: -5.543822288513184
    6. ' ' → logprob: -7.293822288513184
    7. 'l' → logprob: -7.668822288513184
    8. '   ' → logprob: -8.418822288513184
    9. ' args' → logprob: -9.043822288513184
    10. 'fonction' → logprob: -9.293822288513184

Token 59: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.012772146612405777
    2. 'function' → logprob: -4.637772083282471
    3. 'solve' → logprob: -6.262772083282471
    4. 'fon' → logprob: -8.012772560119629
    5. ' fonction' → logprob: -8.012772560119629
    6. 'func' → logprob: -8.637772560119629
    7. 'f' → logprob: -9.262772560119629
    8. 'fun' → logprob: -9.512772560119629
    9. 'funktion' → logprob: -10.137772560119629
    10. 'def' → logprob: -10.387772560119629

Token 60: ' solve' (ID: 17722)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.26338469982147217
    2. '   ' → logprob: -2.5133848190307617
    3. ' représente' → logprob: -2.6383848190307617
    4. 'est' → logprob: -3.6383848190307617
    5. ' correspond' → logprob: -4.013384819030762
    6. ' represents' → logprob: -4.763384819030762
    7. ' sera' → logprob: -5.138384819030762
    8. ' corresponds' → logprob: -5.638384819030762
    9. ')' → logprob: -5.888384819030762
    10. ' represent' → logprob: -6.138384819030762

Token 61: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08354648947715759
    2. '    ' → logprob: -3.4585464000701904
    3. ',' → logprob: -3.9585464000701904
    4. ' ' → logprob: -4.9585466384887695
    5. ' est' → logprob: -4.9585466384887695
    6. ' ,' → logprob: -5.3335466384887695
    7. ' a' → logprob: -6.0835466384887695
    8. ')' → logprob: -6.2085466384887695
    9. '  ' → logprob: -6.8335466384887695
    10. ' )' → logprob: -6.9585466384887695

Token 62: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7749552726745605
    2. ' une' → logprob: -1.2749552726745605
    3. ' traité' → logprob: -2.0249552726745605
    4. ' ajouté' → logprob: -3.6499552726745605
    5. 'trait' → logprob: -3.7749552726745605
    6. ' utilisé' → logprob: -4.3999552726745605
    7. ' trait' → logprob: -4.5249552726745605
    8. '   ' → logprob: -4.8999552726745605
    9. ' considéré' → logprob: -5.2749552726745605
    10. ' a' → logprob: -5.5249552726745605

Token 63: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2846931517124176
    2. ' ligne' → logprob: -2.7846932411193848
    3. ' chaîne' → logprob: -2.7846932411193848
    4. '   ' → logprob: -3.1596932411193848
    5. ':' → logprob: -3.9096932411193848
    6. ' string' → logprob: -4.409693241119385
    7. ' clé' → logprob: -4.534693241119385
    8. '    ' → logprob: -5.034693241119385
    9. ' liste' → logprob: -5.159693241119385
    10. '  ' → logprob: -5.784693241119385

Token 64: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5999898314476013
    2. ' de' → logprob: -1.099989891052246
    3. 'de' → logprob: -3.099989891052246
    4. ':' → logprob: -3.849989891052246
    5. 's' → logprob: -4.724989891052246
    6. '```' → logprob: -4.724989891052246
    7. '):' → logprob: -4.849989891052246
    8. ' :' → logprob: -4.974989891052246
    9. ',' → logprob: -5.724989891052246
    10. ')' → logprob: -5.849989891052246

Token 65: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4654226005077362
    2. ' et' → logprob: -1.5904226303100586
    3. ' representing' → logprob: -2.7154226303100586
    4. ' qui' → logprob: -3.9654226303100586
    5. ' mais' → logprob: -4.090422630310059
    6. ',' → logprob: -4.965422630310059
    7. ' donc' → logprob: -4.965422630310059
    8. ' représentant' → logprob: -5.090422630310059
    9. ' which' → logprob: -5.215422630310059
    10. ' and' → logprob: -5.340422630310059

Token 66: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5295314192771912
    2. 'une' → logprob: -1.404531478881836
    3. ' un' → logprob: -2.404531478881836
    4. ' la' → logprob: -3.904531478881836
    5. 'un' → logprob: -4.029531478881836
    6. 'le' → logprob: -4.154531478881836
    7. ' le' → logprob: -4.779531478881836
    8. 'la' → logprob: -5.404531478881836
    9. 'l' → logprob: -6.029531478881836
    10. ' l' → logprob: -6.404531478881836

Token 67: ' lignes' (ID: 81687)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -1.438077688217163
    2. 'd' → logprob: -1.563077688217163
    3. ' instructions' → logprob: -2.063077688217163
    4. 'élé' → logprob: -2.688077688217163
    5. ' entr' → logprob: -3.438077688217163
    6. ' lignes' → logprob: -3.563077688217163
    7. ' chaînes' → logprob: -3.688077688217163
    8. 'entr' → logprob: -3.813077688217163
    9. ' mots' → logprob: -4.313077926635742
    10. 'instructions' → logprob: -4.563077926635742

Token 68: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004240093287080526
    2. ':' → logprob: -6.129240036010742
    3. '    ' → logprob: -8.129240036010742
    4. ' de' → logprob: -8.129240036010742
    5. ' ' → logprob: -8.379240036010742
    6. '):' → logprob: -8.629240036010742
    7. '\n' → logprob: -9.004240036010742
    8. '    
' → logprob: -9.254240036010742
    9. '```' → logprob: -9.254240036010742
    10. 'def' → logprob: -9.379240036010742

Token 69: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.1637746095657349
    2. 'pro' → logprob: -1.5387746095657349
    3. 'input' → logprob: -1.5387746095657349
    4. ' input' → logprob: -2.0387744903564453
    5. 'texte' → logprob: -2.5387744903564453
    6. 'entrée' → logprob: -4.663774490356445
    7. 'proble' → logprob: -4.788774490356445
    8. ' code' → logprob: -5.038774490356445
    9. 'jeu' → logprob: -5.163774490356445
    10. 'code' → logprob: -5.413774490356445

Token 70: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6922783255577087
    2. ':' → logprob: -1.1922783851623535
    3. '\n' → logprob: -1.8172783851623535
    4. '\' → logprob: -4.5672783851623535
    5. '    
' → logprob: -5.3172783851623535
    6. '):' → logprob: -5.6922783851623535
    7. '
' → logprob: -5.8172783851623535
    8. ' :' → logprob: -5.8172783851623535
    9. '    ' → logprob: -6.6922783851623535
    10. ':
' → logprob: -6.9422783851623535

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01745726354420185
    2. '    
' → logprob: -4.517457485198975
    3. '
' → logprob: -5.392457485198975
    4. '    ' → logprob: -7.767457485198975
    5. '\n' → logprob: -8.142457008361816
    6. '  
' → logprob: -8.517457008361816
    7. ' ' → logprob: -9.142457008361816
    8. '   
' → logprob: -9.142457008361816
    9. ' 
' → logprob: -9.267457008361816
    10. 'n' → logprob: -9.267457008361816

Token 72: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43553557991981506
    2. 'lines' → logprob: -1.9355355501174927
    3. 'data' → logprob: -3.0605356693267822
    4. 'd' → logprob: -3.3105356693267822
    5. 'counter' → logprob: -3.6855356693267822
    6. 'input' → logprob: -3.9355356693267822
    7. 'word' → logprob: -3.9355356693267822
    8. 'counts' → logprob: -4.310535430908203
    9. 'n' (adapté à ' n') → logprob: -4.810535430908203
    10. 'freq' → logprob: -5.060535430908203

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00778855849057436
    2. ',' → logprob: -5.13278865814209
    3. '=' → logprob: -6.75778865814209
    4. '_' → logprob: -8.63278865814209
    5. '   ' → logprob: -9.00778865814209
    6. ' ,' → logprob: -9.00778865814209
    7. '=int' → logprob: -9.50778865814209
    8. ' ' → logprob: -9.63278865814209
    9. '  ' → logprob: -10.00778865814209
    10. ')' → logprob: -11.13278865814209

Token 74: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07163701206445694
    2. 'int' → logprob: -2.696636915206909
    3. ' len' → logprob: -6.571637153625488
    4. 'len' → logprob: -9.071637153625488
    5. ' args' → logprob: -9.321637153625488
    6. ' ' → logprob: -9.571637153625488
    7. 'args' → logprob: -11.071637153625488
    8. '  ' → logprob: -12.696637153625488
    9. '10' → logprob: -13.571637153625488
    10. '0' → logprob: -13.696637153625488

Token 75: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.00021629150433000177
    2. '(' → logprob: -8.500216484069824
    3. 'args' → logprob: -11.500216484069824
    4. '(*' → logprob: -13.000216484069824
    5. '(n' → logprob: -16.750215530395508
    6. '(arg' → logprob: -16.750215530395508
    7. ' args' → logprob: -17.000215530395508
    8. '(argv' → logprob: -17.125215530395508
    9. '(
' → logprob: -17.375215530395508
    10. '	args' → logprob: -17.625215530395508

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. ')[' → logprob: -17.375
    4. ' [' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. '0' → logprob: -18.5
    7. '()[' → logprob: -19.0
    8. ')' → logprob: -19.25
    9. '\[' → logprob: -19.625
    10. '][' → logprob: -19.875

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '[' → logprob: -14.250007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '1' → logprob: -16.37500762939453
    6. '-' → logprob: -17.56250762939453
    7. '```' → logprob: -18.06250762939453
    8. '  ' → logprob: -18.12500762939453
    9. '    ' → logprob: -18.43750762939453
    10. '     ' → logprob: -18.68750762939453

Token 78: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -7.433829159708694e-05
    2. ' ])' → logprob: -10.37507438659668
    3. ']' → logprob: -10.50007438659668
    4. '].' → logprob: -12.00007438659668
    5. ']))' → logprob: -12.87507438659668
    6. '])
' → logprob: -13.37507438659668
    7. ')' → logprob: -13.50007438659668
    8. '[' → logprob: -13.62507438659668
    9. '][' → logprob: -13.87507438659668
    10. ''])' → logprob: -15.00007438659668

Token 79: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.437346488237381
    2. '\n' → logprob: -1.1873464584350586
    3. '<|end|>' → logprob: -3.6873464584350586
    4. ')' → logprob: -5.187346458435059
    5. '\' → logprob: -5.437346458435059
    6. 'n' → logprob: -5.687346458435059
    7. '```' → logprob: -6.312346458435059
    8. '' → logprob: -6.687346458435059
    9. '  
' → logprob: -6.687346458435059
    10. 'newline' → logprob: -6.937346458435059

Token 80: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7229816913604736
    2. '\n' → logprob: -0.9729816913604736
    3. '   ' → logprob: -2.4729816913604736
    4. 'n' → logprob: -3.8479816913604736
    5. ')' → logprob: -4.7229814529418945
    6. 'newline' → logprob: -5.5979814529418945
    7. 'for' → logprob: -5.9729814529418945
    8. '
' → logprob: -6.0979814529418945
    9. '    
' → logprob: -6.0979814529418945
    10. '```' → logprob: -6.2229814529418945

Token 81: ' Conversion' (ID: 74433)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.4221863746643066
    2. 'n' → logprob: -1.6721863746643066
    3. ' ' → logprob: -1.7971863746643066
    4. 'args' → logprob: -1.9221863746643066
    5. ''' → logprob: -2.5471863746643066
    6. ')' → logprob: -2.5471863746643066
    7. '"' → logprob: -3.2971863746643066
    8. ' args' → logprob: -4.047186374664307
    9. '  ' → logprob: -5.047186374664307
    10. '   ' → logprob: -5.672186374664307

Token 82: ' de' (ID: 334)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.4294496476650238
    2. '(' → logprob: -1.0544496774673462
    3. 'args' → logprob: -7.679449558258057
    4. ' des' → logprob: -9.554450035095215
    5. '(n' → logprob: -10.054450035095215
    6. '('' → logprob: -10.179450035095215
    7. '(
' → logprob: -10.304450035095215
    8. '()' → logprob: -10.929450035095215
    9. ' (' → logprob: -11.054450035095215
    10. '("' → logprob: -11.429450035095215

Token 83: ' la' (ID: 557)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.18454980850219727
    2. 'args' → logprob: -1.8095498085021973
    3. ' n' → logprob: -5.559549808502197
    4. 'n' → logprob: -7.684549808502197
    5. ' la' → logprob: -8.434549331665039
    6. ' l' → logprob: -9.309549331665039
    7. '(args' → logprob: -9.809549331665039
    8. ' the' → logprob: -10.184549331665039
    9. ' arguments' → logprob: -11.309549331665039
    10. '	args' → logprob: -11.434549331665039

Token 84: ' première' (ID: 23423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44807830452919006
    2. ' args' → logprob: -1.0730782747268677
    3. ' n' → logprob: -5.448078155517578
    4. 'args' → logprob: -5.698078155517578
    5. ' )' → logprob: -6.198078155517578
    6. ' space' → logprob: -6.198078155517578
    7. 'n' → logprob: -6.698078155517578
    8. 's' → logprob: -6.823078155517578
    9. ' espace' → logprob: -6.948078155517578
    10. 'es' → logprob: -7.448078155517578

Token 85: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13483880460262299
    2. '(' → logprob: -2.384838819503784
    3. ''' → logprob: -4.009838581085205
    4. ' )' → logprob: -5.259838581085205
    5. ')' → logprob: -6.134838581085205
    6. ' (' → logprob: -6.384838581085205
    7. '(space' → logprob: -6.759838581085205
    8. '"' → logprob: -7.009838581085205
    9. '  ' → logprob: -7.259838581085205
    10. 'space' → logprob: -7.509838581085205

Token 86: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.936046838760376
    2. '\n' → logprob: -0.936046838760376
    3. '<|end|>' → logprob: -2.186046838760376
    4. '
' → logprob: -3.561046838760376
    5. '   ' → logprob: -3.686046838760376
    6. ' ' → logprob: -4.936046600341797
    7. '\' → logprob: -5.186046600341797
    8. 'n' → logprob: -5.311046600341797
    9. '<|end|>' → logprob: -5.311046600341797
    10. '  
' → logprob: -6.061046600341797

Token 87: 'tail' (ID: 20472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2483762800693512
    2. 'args' → logprob: -1.7483762502670288
    3. ' )' → logprob: -3.3733763694763184
    4. ' args' → logprob: -4.623376369476318
    5. '(args' → logprob: -7.873376369476318
    6. ' n' → logprob: -7.873376369476318
    7. ' des' → logprob: -8.62337589263916
    8. 'n' → logprob: -8.99837589263916
    9. '")' → logprob: -8.99837589263916
    10. ')n' → logprob: -8.99837589263916

Token 88: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.23737414181232452
    2. 'e' → logprob: -1.737374186515808
    3. 'l' → logprob: -3.4873740673065186
    4. ')' → logprob: -6.737374305725098
    5. 'n' → logprob: -7.112374305725098
    6. '   ' → logprob: -7.737374305725098
    7. 'u' → logprob: -8.362374305725098
    8. 'ne' → logprob: -8.362374305725098
    9. 'lle' → logprob: -8.487374305725098
    10. 'a' → logprob: -8.612374305725098

Token 89: ' du' (ID: 1462)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7231398820877075
    2. ')' → logprob: -0.8481398820877075
    3. ' des' → logprob: -2.723139762878418
    4. ' de' → logprob: -4.473139762878418
    5. ' d' → logprob: -5.723139762878418
    6. ' du' → logprob: -5.848139762878418
    7. 'des' → logprob: -6.348139762878418
    8. ' n' → logprob: -7.973139762878418
    9. 'de' → logprob: -7.973139762878418
    10. ' ' → logprob: -8.098139762878418

Token 90: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.08765991032123566
    2. 'gr' → logprob: -3.8376598358154297
    3. 'input' → logprob: -4.21265983581543
    4. 'plate' → logprob: -4.46265983581543
    5. 'texte' → logprob: -4.96265983581543
    6. 'tab' → logprob: -5.08765983581543
    7. 'd' → logprob: -5.33765983581543
    8. ' tableau' → logprob: -5.58765983581543
    9. ')' → logprob: -5.83765983581543
    10. 'entrée' → logprob: -6.33765983581543

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003565381048247218
    2. ' )' → logprob: -5.878565311431885
    3. '[' → logprob: -7.378565311431885
    4. '   ' → logprob: -9.503565788269043
    5. ']' → logprob: -11.503565788269043
    6. ' ' → logprob: -11.753565788269043
    7. '[n' → logprob: -12.128565788269043
    8. '))' → logprob: -12.253565788269043
    9. 'n' → logprob: -12.503565788269043
    10. ')`' → logprob: -12.503565788269043

Token 92: ' en' (ID: 469)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2166721373796463
    2. 'n' → logprob: -2.84167218208313
    3. '\' → logprob: -3.34167218208313
    4. '
' → logprob: -3.46667218208313
    5. '  
' → logprob: -4.091671943664551
    6. '    
' → logprob: -4.466671943664551
    7. ')' → logprob: -4.591671943664551
    8. '<|end|>' → logprob: -4.591671943664551
    9. '   ' → logprob: -4.966671943664551
    10. ' 
' → logprob: -5.341671943664551

Token 93: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.575345516204834
    2. ' int' → logprob: -0.950345516204834
    3. ' entier' → logprob: -4.325345516204834
    4. ' ' → logprob: -4.325345516204834
    5. 'ent' → logprob: -4.575345516204834
    6. 'n' → logprob: -5.200345516204834
    7. ' integer' → logprob: -5.950345516204834
    8. ' n' → logprob: -6.825345516204834
    9. 'entrée' → logprob: -7.075345516204834
    10. 'integer' → logprob: -7.325345516204834

Token 94: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41189664602279663
    2. '\n' → logprob: -1.2868967056274414
    3. 'n' → logprob: -3.5368967056274414
    4. '  
' → logprob: -4.786896705627441
    5. '    
' → logprob: -5.036896705627441
    6. '\' → logprob: -5.286896705627441
    7. ' 
' → logprob: -5.536896705627441
    8. '   ' → logprob: -5.911896705627441
    9. '' → logprob: -6.786896705627441
    10. '   
' → logprob: -7.036896705627441

Token 95: ' stockage' (ID: 101149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1618194580078125
    2. ' n' → logprob: -3.2868194580078125
    3. 'n' → logprob: -3.4118194580078125
    4. ' =' → logprob: -3.9118194580078125
    5. '   ' → logprob: -4.0368194580078125
    6. '  ' → logprob: -4.6618194580078125
    7. '    ' → logprob: -5.1618194580078125
    8. '_' → logprob: -5.4118194580078125
    9. '=' → logprob: -5.5368194580078125
    10. '"' → logprob: -5.6618194580078125

Token 96: ' dans' (ID: 2671)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10036453604698181
    2. ')' → logprob: -3.7253644466400146
    3. '<|end|>' → logprob: -3.8503644466400146
    4. 'n' → logprob: -4.350364685058594
    5. '   ' → logprob: -4.600364685058594
    6. '
' → logprob: -4.850364685058594
    7. '\' → logprob: -4.850364685058594
    8. '    
' → logprob: -5.975364685058594
    9. '  
' → logprob: -6.350364685058594
    10. '<|end|>' → logprob: -6.475364685058594

Token 97: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.052544813603162766
    2. 'n' → logprob: -3.4275448322296143
    3. ' ' → logprob: -4.302544593811035
    4. ' args' → logprob: -5.677544593811035
    5. ' l' → logprob: -7.302544593811035
    6. 'args' → logprob: -7.927544593811035
    7. ' la' → logprob: -8.302544593811035
    8. 'l' → logprob: -8.802544593811035
    9. ' )' → logprob: -9.552544593811035
    10. ' a' → logprob: -9.927544593811035

Token 98: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6858753561973572
    2. '
' → logprob: -0.8108753561973572
    3. '   ' → logprob: -3.935875415802002
    4. '    
' → logprob: -4.310875415802002
    5. 'n' → logprob: -4.935875415802002
    6. '  
' → logprob: -5.685875415802002
    7. ' 
' → logprob: -5.810875415802002
    8. ')' → logprob: -6.685875415802002
    9. '\' → logprob: -7.060875415802002
    10. 'newline' → logprob: -7.310875415802002

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027360688894987106
    2. '\n' → logprob: -4.652360916137695
    3. '  
' → logprob: -5.402360916137695
    4. '    
' → logprob: -5.652360916137695
    5. '   ' → logprob: -5.652360916137695
    6. 'n' → logprob: -6.027360916137695
    7. ' 
' → logprob: -6.027360916137695
    8. '   
' → logprob: -8.277360916137695
    9. ' ' → logprob: -9.027360916137695
    10. '\' → logprob: -9.152360916137695

Token 100: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9394083023071289
    2. 'a' → logprob: -1.064408302307129
    3. '   ' → logprob: -2.064408302307129
    4. 'array' → logprob: -2.939408302307129
    5. 'd' → logprob: -3.814408302307129
    6. 'data' → logprob: -3.939408302307129
    7. ' arr' → logprob: -4.689408302307129
    8. ' array' → logprob: -5.314408302307129
    9. ' a' → logprob: -5.564408302307129
    10. ' data' → logprob: -5.814408302307129

Token 101: ' La' (ID: 3038)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.43910160660743713
    2. ' arr' → logprob: -1.6891015768051147
    3. '   ' → logprob: -3.3141016960144043
    4. 'array' → logprob: -3.4391016960144043
    5. ' array' → logprob: -3.4391016960144043
    6. ' data' → logprob: -3.6891016960144043
    7. 'a' → logprob: -3.9391016960144043
    8. 'data' → logprob: -4.314101696014404
    9. ' a' → logprob: -6.064101696014404
    10. 'd' → logprob: -6.314101696014404

Token 102: ' deuxième' (ID: 51664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0343569815158844
    2. '_' → logprob: -4.784357070922852
    3. 's' → logprob: -5.659357070922852
    4. 'a' → logprob: -5.659357070922852
    5. ' array' → logprob: -5.784357070922852
    6. ' a' → logprob: -5.909357070922852
    7. 'r' → logprob: -6.284357070922852
    8. ' data' → logprob: -6.659357070922852
    9. 'd' → logprob: -7.034357070922852
    10. ' d' → logprob: -7.284357070922852

Token 103: ' ligne' (ID: 19583)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47615933418273926
    2. '_args' → logprob: -2.3511593341827393
    3. ' =' → logprob: -2.4761593341827393
    4. ' ' → logprob: -2.9761593341827393
    5. 'args' → logprob: -3.7261593341827393
    6. '   ' → logprob: -3.7261593341827393
    7. '_lines' → logprob: -3.9761593341827393
    8. 'ligne' → logprob: -4.10115909576416
    9. 'l' → logprob: -4.85115909576416
    10. '_line' → logprob: -4.97615909576416

Token 104: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11370781809091568
    2. ',' → logprob: -3.3637077808380127
    3. '   ' → logprob: -3.7387077808380127
    4. '=' → logprob: -4.363708019256592
    5. ')' → logprob: -4.488708019256592
    6. 's' → logprob: -4.988708019256592
    7. ' is' → logprob: -5.738708019256592
    8. '[' → logprob: -5.863708019256592
    9. '<|end|>' → logprob: -5.988708019256592
    10. '.' → logprob: -6.613708019256592

Token 105: 'args' (ID: 4285)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5254195332527161
    2. ')' → logprob: -2.6504194736480713
    3. 'values' → logprob: -3.4004194736480713
    4. ' numbers' → logprob: -3.4004194736480713
    5. ' arr' → logprob: -3.5254194736480713
    6. 'numbers' → logprob: -3.6504194736480713
    7. 'array' → logprob: -3.9004194736480713
    8. 'args' → logprob: -3.9004194736480713
    9. ' values' → logprob: -4.02541971206665
    10. 'vals' → logprob: -4.15041971206665

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.198043699143454e-05
    2. '1' → logprob: -10.000091552734375
    3. 's' → logprob: -10.875091552734375
    4. ' [' → logprob: -11.375091552734375
    5. ')[' → logprob: -12.375091552734375
    6. '   ' → logprob: -12.625091552734375
    7. '```' → logprob: -13.250091552734375
    8. '][' → logprob: -13.500091552734375
    9. 'def' → logprob: -13.875091552734375
    10. '[
' → logprob: -14.000091552734375

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.9728669738397e-05
    2. '[' → logprob: -9.875100135803223
    3. ' ' → logprob: -10.500100135803223
    4. '```' → logprob: -12.000100135803223
    5. '0' → logprob: -12.625100135803223
    6. ']' → logprob: -13.000100135803223
    7. '][' → logprob: -13.437600135803223
    8. ')' → logprob: -13.437600135803223
    9. '   ' → logprob: -13.437600135803223
    10. '
' → logprob: -14.000100135803223

Token 108: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011186701245605946
    2. ']' → logprob: -5.011186599731445
    3. ')' → logprob: -5.886186599731445
    4. '].' → logprob: -6.511186599731445
    5. '])
' → logprob: -9.886186599731445
    6. ']).' → logprob: -10.386186599731445
    7. '   ' → logprob: -10.511186599731445
    8. '][' → logprob: -10.761186599731445
    9. ' ])' → logprob: -10.761186599731445
    10. ').' → logprob: -11.136186599731445

Token 109: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08229805529117584
    2. '=' → logprob: -2.7072980403900146
    3. ')' → logprob: -5.582298278808594
    4. 's' → logprob: -6.832298278808594
    5. ' est' → logprob: -7.332298278808594
    6. 'split' → logprob: -7.457298278808594
    7. 'est' → logprob: -7.457298278808594
    8. '.split' → logprob: -7.707298278808594
    9. 'data' → logprob: -8.082298278808594
    10. 'tokens' → logprob: -8.082298278808594

Token 110: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.38752681016921997
    2. ' les' → logprob: -1.2625267505645752
    3. 'les' → logprob: -4.387526988983154
    4. ' le' → logprob: -5.262526988983154
    5. ' une' → logprob: -5.387526988983154
    6. ' ' → logprob: -5.762526988983154
    7. ' l' → logprob: -6.262526988983154
    8. ' a' → logprob: -6.387526988983154
    9. 'l' → logprob: -6.637526988983154
    10. ' lst' → logprob: -6.637526988983154

Token 111: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5704187154769897
    2. ' liste' → logprob: -1.0704187154769897
    3. 's' → logprob: -2.6954188346862793
    4. 'list' → logprob: -4.695418834686279
    5. 'lst' → logprob: -5.195418834686279
    6. 'l' → logprob: -6.320418834686279
    7. 'val' → logprob: -7.195418834686279
    8. 'array' → logprob: -7.195418834686279
    9. ' ' → logprob: -7.445418834686279
    10. 'sequence' → logprob: -7.445418834686279

Token 112: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.062650442123413
    2. ' des' → logprob: -1.437650442123413
    3. ' =' → logprob: -1.562650442123413
    4. 'des' → logprob: -2.687650442123413
    5. ' de' → logprob: -3.437650442123413
    6. '_' → logprob: -3.687650442123413
    7. ' of' → logprob: -3.937650442123413
    8. '[' → logprob: -4.437650680541992
    9. 'de' → logprob: -4.687650680541992
    10. '   ' → logprob: -5.187650680541992

Token 113: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.7349498867988586
    2. ' numbers' → logprob: -1.3599498271942139
    3. 'numbers' → logprob: -2.109949827194214
    4. ' elements' → logprob: -3.484949827194214
    5. ' valeurs' → logprob: -3.484949827194214
    6. ' éléments' → logprob: -3.984949827194214
    7. 'elements' → logprob: -3.984949827194214
    8. 'élé' → logprob: -4.859950065612793
    9. ' ' → logprob: -4.859950065612793
    10. ' chiffres' → logprob: -5.484950065612793

Token 114: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.006351415999233723
    2. 'ières' → logprob: -5.131351470947266
    3. 'i' → logprob: -8.006351470947266
    4. 'ier' → logprob: -9.881351470947266
    5. 'ié' → logprob: -11.756351470947266
    6. 'ers' → logprob: -12.006351470947266
    7. 'ités' → logprob: -12.256351470947266
    8. '```' → logprob: -12.256351470947266
    9. 'ière' → logprob: -12.506351470947266
    10. '   ' → logprob: -12.631351470947266

Token 115: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24636493623256683
    2. ' =' → logprob: -1.871364951133728
    3. 's' → logprob: -3.6213648319244385
    4. 'tokens' → logprob: -4.621365070343018
    5. '.split' → logprob: -5.621365070343018
    6. 'lst' → logprob: -5.871365070343018
    7. '[' → logprob: -5.996365070343018
    8. ')' → logprob: -5.996365070343018
    9. 'numbers' → logprob: -6.121365070343018
    10. 'values' → logprob: -6.621365070343018

Token 116: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.005378541070967913
    2. 'forme' → logprob: -5.380378723144531
    3. ' la' → logprob: -8.380378723144531
    4. ' form' → logprob: -9.005378723144531
    5. 'form' → logprob: -9.255378723144531
    6. 'chaine' → logprob: -9.630378723144531
    7. 'la' → logprob: -10.005378723144531
    8. 's' → logprob: -10.755378723144531
    9. ' format' → logprob: -10.880378723144531
    10. ' formes' → logprob: -11.005378723144531

Token 117: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.028593383729457855
    2. 'd' → logprob: -4.52859354019165
    3. ' de' → logprob: -5.27859354019165
    4. ''' → logprob: -5.27859354019165
    5. ' of' → logprob: -6.40359354019165
    6. ' '' → logprob: -6.40359354019165
    7. ' ' → logprob: -6.65359354019165
    8. '<|end|>' → logprob: -7.15359354019165
    9. 'de' → logprob: -7.77859354019165
    10. 's' → logprob: -8.403593063354492

Token 118: ' chaîne' (ID: 89288)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.12172625958919525
    2. ' chaîne' → logprob: -2.6217262744903564
    3. 'chaine' → logprob: -4.246726036071777
    4. ' string' → logprob: -5.371726036071777
    5. ' chaine' → logprob: -5.371726036071777
    6. ' espaces' → logprob: -5.496726036071777
    7. ' chain' → logprob: -5.496726036071777
    8. ' strings' → logprob: -5.871726036071777
    9. ' caractères' → logprob: -6.371726036071777
    10. 'str' → logprob: -7.246726036071777

Token 119: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0662495419383049
    2. 's' → logprob: -3.3162496089935303
    3. ',' → logprob: -5.191249370574951
    4. ')' → logprob: -5.316249370574951
    5. '[' → logprob: -5.566249370574951
    6. 'tokens' → logprob: -6.191249370574951
    7. '    ' → logprob: -6.316249370574951
    8. '    
' → logprob: -6.316249370574951
    9. ' s' → logprob: -7.066249370574951
    10. ' ,' → logprob: -7.191249370574951

Token 120: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7424127459526062
    2. ' caractères' → logprob: -1.367412805557251
    3. 'chaine' → logprob: -2.367412805557251
    4. 'car' → logprob: -2.367412805557251
    5. 'texte' → logprob: -3.492412805557251
    6. ' '' → logprob: -4.492412567138672
    7. '"' → logprob: -4.492412567138672
    8. 'esp' → logprob: -5.492412567138672
    9. 'es' → logprob: -5.742412567138672
    10. ' ' → logprob: -6.117412567138672

Token 121: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029818419367074966
    2. '    
' → logprob: -5.029818534851074
    3. ',' → logprob: -5.529818534851074
    4. ')' → logprob: -5.779818534851074
    5. 's' → logprob: -5.779818534851074
    6. 'n' → logprob: -6.029818534851074
    7. '[' → logprob: -6.279818534851074
    8. '   
' → logprob: -6.529818534851074
    9. ' 
' → logprob: -6.779818534851074
    10. ' ' → logprob: -7.029818534851074

Token 122: ' sépar' (ID: 97160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5383242964744568
    2. '   ' → logprob: -2.9133243560791016
    3. 's' → logprob: -3.0383243560791016
    4. ')' → logprob: -3.1633243560791016
    5. ' tokens' → logprob: -3.4133243560791016
    6. '[' → logprob: -3.5383243560791016
    7. 'tokens' → logprob: -3.6633243560791016
    8. '_' → logprob: -3.7883243560791016
    9. '    ' → logprob: -3.9133243560791016
    10. ' "' → logprob: -4.163324356079102

Token 123: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.11697785556316376
    2. 'és' → logprob: -2.9919779300689697
    3. 'é' → logprob: -3.1169779300689697
    4. 'ées' → logprob: -4.366977691650391
    5. ' par' → logprob: -5.866977691650391
    6. 'par' → logprob: -9.86697769165039
    7. 'e' → logprob: -9.99197769165039
    8. 'er' → logprob: -10.24197769165039
    9. ')' → logprob: -10.36697769165039
    10. ' ' → logprob: -10.49197769165039

Token 124: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.049718648195266724
    2. 'par' → logprob: -3.6747186183929443
    3. ')' → logprob: -5.299718856811523
    4. ' ' → logprob: -5.549718856811523
    5. ''' → logprob: -5.799718856811523
    6. ' by' → logprob: -5.799718856811523
    7. '<|end|>' → logprob: -6.299718856811523
    8. ' )' → logprob: -6.799718856811523
    9. ' =' → logprob: -7.299718856811523
    10. ',' → logprob: -7.674718856811523

Token 125: ' des' (ID: 731)
  Prédit: ''esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.7470474243164062
    2. ''espace' → logprob: -1.8720474243164062
    3. ' espaces' → logprob: -1.9970474243164062
    4. ''' → logprob: -2.2470474243164062
    5. ' des' → logprob: -2.8720474243164062
    6. ' '' → logprob: -3.8720474243164062
    7. 'des' → logprob: -4.122047424316406
    8. ''un' → logprob: -4.122047424316406
    9. '"' → logprob: -4.997047424316406
    10. 'spaces' → logprob: -5.497047424316406

Token 126: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6003207564353943
    2. ' espaces' → logprob: -1.100320816040039
    3. ''esp' → logprob: -2.225320816040039
    4. ''espace' → logprob: -5.350320816040039
    5. 'spaces' → logprob: -5.725320816040039
    6. 'es' → logprob: -6.725320816040039
    7. '’esp' → logprob: -7.850320816040039
    8. 'space' → logprob: -8.725320816040039
    9. 'sp' → logprob: -8.850320816040039
    10. '"' → logprob: -8.975320816040039

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039808161556720734
    2. '    
' → logprob: -3.7898082733154297
    3. 'n' → logprob: -5.78980827331543
    4. '   
' → logprob: -5.91480827331543
    5. 'tokens' → logprob: -6.41480827331543
    6. 's' → logprob: -6.41480827331543
    7. ')' → logprob: -6.53980827331543
    8. ' 
' → logprob: -6.91480827331543
    9. ',' → logprob: -6.91480827331543
    10. '\n' → logprob: -7.41480827331543

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02781910076737404
    2. '    
' → logprob: -4.2778191566467285
    3. '   
' → logprob: -5.9028191566467285
    4. 's' → logprob: -6.0278191566467285
    5. ' 
' → logprob: -6.1528191566467285
    6. '[' → logprob: -7.0278191566467285
    7. 'tokens' → logprob: -7.0278191566467285
    8. 'n' → logprob: -7.4028191566467285
    9. 'a' → logprob: -7.5278191566467285
    10. ')' → logprob: -7.5278191566467285

Token 129: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6336129307746887
    2. 'lst' → logprob: -2.508612871170044
    3. 'arr' → logprob: -2.758612871170044
    4. 'tokens' → logprob: -3.133612871170044
    5. '    
' → logprob: -3.383612871170044
    6. 'numbers' → logprob: -3.508612871170044
    7. ' lst' → logprob: -3.508612871170044
    8. 'n' → logprob: -3.758612871170044
    9. 's' → logprob: -4.008613109588623
    10. 'array' → logprob: -4.258613109588623

Token 130: ' La' (ID: 3038)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.14497798681259155
    2. ' arr' → logprob: -2.6449780464172363
    3. 'numbers' → logprob: -4.019978046417236
    4. 'array' → logprob: -4.394978046417236
    5. ' numbers' → logprob: -4.519978046417236
    6. 'nums' → logprob: -5.394978046417236
    7. ' array' → logprob: -5.644978046417236
    8. 'values' → logprob: -5.644978046417236
    9. 'lst' → logprob: -5.644978046417236
    10. '   ' → logprob: -5.769978046417236

Token 131: ' méthode' (ID: 71490)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.3428924083709717
    2. ' arr' → logprob: -1.5928924083709717
    3. ' numbers' → logprob: -1.7178924083709717
    4. 'numbers' → logprob: -2.5928924083709717
    5. ' array' → logprob: -2.7178924083709717
    6. 'lst' → logprob: -2.8428924083709717
    7. ' lst' → logprob: -3.3428924083709717
    8. 'array' → logprob: -3.7178924083709717
    9. ' elements' → logprob: -4.092892646789551
    10. 'values' → logprob: -4.092892646789551

Token 132: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4900279641151428
    2. ' split' → logprob: -0.9900279641151428
    3. ' args' → logprob: -4.615027904510498
    4. 'args' → logprob: -6.240027904510498
    5. ' map' → logprob: -6.865027904510498
    6. 'strip' → logprob: -7.115027904510498
    7. '.split' → logprob: -7.615027904510498
    8. 'map' → logprob: -8.490028381347656
    9. ' numbers' → logprob: -8.615028381347656
    10. ' values' → logprob: -8.865028381347656

Token 133: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00036156410351395607
    2. '(' → logprob: -8.375361442565918
    3. '('' → logprob: -9.250361442565918
    4. 's' → logprob: -12.250361442565918
    5. '())' → logprob: -12.500361442565918
    6. '()]' → logprob: -12.750361442565918
    7. '().' → logprob: -12.875361442565918
    8. '()`' → logprob: -12.875361442565918
    9. '("' → logprob: -13.250361442565918
    10. ' ()' → logprob: -13.375361442565918

Token 134: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007253296673297882
    2. '(' → logprob: -5.382253170013428
    3. ')' → logprob: -7.257253170013428
    4. '())' → logprob: -8.007253646850586
    5. '('' → logprob: -8.507253646850586
    6. 'args' → logprob: -8.757253646850586
    7. '()[' → logprob: -8.882253646850586
    8. '().' → logprob: -9.382253646850586
    9. ' =' → logprob: -9.382253646850586
    10. 'tokens' → logprob: -9.632253646850586

Token 135: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.1442735493183136
    2. 'ide' → logprob: -2.019273519515991
    3. 'i' → logprob: -7.89427375793457
    4. '()' → logprob: -7.89427375793457
    5. 'id' → logprob: -9.01927375793457
    6. 'ert' → logprob: -9.14427375793457
    7. '#' → logprob: -9.39427375793457
    8. '1' → logprob: -9.89427375793457
    9. 'e' → logprob: -10.01927375793457
    10. '   ' → logprob: -10.01927375793457

Token 136: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.664781391620636
    2. 'args' → logprob: -0.914781391620636
    3. '(args' → logprob: -2.539781332015991
    4. ' args' → logprob: -5.28978157043457
    5. '(' → logprob: -7.78978157043457
    6. '	args' → logprob: -8.28978157043457
    7. '   ' → logprob: -9.16478157043457
    8. '$args' → logprob: -10.16478157043457
    9. ' ()' → logprob: -10.28978157043457
    10. '_args' → logprob: -10.78978157043457

Token 137: ' chaîne' (ID: 89288)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.9235570430755615
    2. 'args' → logprob: -1.0485570430755615
    3. ' chaîne' → logprob: -1.9235570430755615
    4. ' string' → logprob: -3.1735570430755615
    5. 'chaine' → logprob: -3.7985570430755615
    6. ' liste' → logprob: -4.923557281494141
    7. ' chaine' → logprob: -4.923557281494141
    8. ' arguments' → logprob: -5.548557281494141
    9. 'string' → logprob: -5.673557281494141
    10. ' chaînes' → logprob: -5.798557281494141

Token 138: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004253269638866186
    2. '('' → logprob: -6.879253387451172
    3. 'args' → logprob: -7.129253387451172
    4. ')' → logprob: -7.629253387451172
    5. '(' → logprob: -7.754253387451172
    6. '<|end|>' → logprob: -8.379253387451172
    7. '[]' → logprob: -8.504253387451172
    8. '   ' → logprob: -8.879253387451172
    9. '<|end|>' → logprob: -8.879253387451172
    10. '()[' → logprob: -9.004253387451172

Token 139: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.02899482473731041
    2. ' tokens' → logprob: -4.903995037078857
    3. 'une' → logprob: -5.028995037078857
    4. 'tokens' → logprob: -5.278995037078857
    5. ' a' → logprob: -5.653995037078857
    6. ' liste' → logprob: -6.028995037078857
    7. ' des' → logprob: -6.278995037078857
    8. 'liste' → logprob: -7.403995037078857
    9. 'a' → logprob: -8.0289945602417
    10. ' listes' → logprob: -8.6539945602417

Token 140: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.046384721994400024
    2. ' liste' → logprob: -3.296384811401367
    3. 'list' → logprob: -4.796384811401367
    4. ' list' → logprob: -10.921384811401367
    5. 'Liste' → logprob: -11.421384811401367
    6. 'lista' → logprob: -11.921384811401367
    7. 'lst' → logprob: -12.171384811401367
    8. 's' → logprob: -12.421384811401367
    9. 'lists' → logprob: -13.421384811401367
    10. ' Liste' → logprob: -14.171384811401367

Token 141: ' de' (ID: 334)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.4644552767276764
    2. 'tokens' → logprob: -2.0894553661346436
    3. '()' → logprob: -2.3394553661346436
    4. '(args' → logprob: -3.3394553661346436
    5. ')' → logprob: -3.7144553661346436
    6. 's' → logprob: -4.3394551277160645
    7. 'des' → logprob: -4.7144551277160645
    8. ' des' → logprob: -4.7144551277160645
    9. '	args' → logprob: -4.9644551277160645
    10. '   ' → logprob: -4.9644551277160645

Token 142: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.603435754776001
    2. ' tokens' → logprob: -1.728435754776001
    3. 'tokens' → logprob: -1.978435754776001
    4. 'strings' → logprob: -2.728435754776001
    5. ' strings' → logprob: -3.478435754776001
    6. 'str' → logprob: -3.478435754776001
    7. 'chain' → logprob: -6.103435516357422
    8. ' chain' → logprob: -6.103435516357422
    9. 'cha' → logprob: -6.728435516357422
    10. 'chaine' → logprob: -6.978435516357422

Token 143: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.29172083735466003
    2. '-chain' → logprob: -2.6667208671569824
    3. '_list' → logprob: -3.2917208671569824
    4. 'chain' → logprob: -3.2917208671569824
    5. '-list' → logprob: -3.5417208671569824
    6. '-cha' → logprob: -3.7917208671569824
    7. 'strings' → logprob: -4.666720867156982
    8. '-' → logprob: -4.791720867156982
    9. 'cha' → logprob: -4.916720867156982
    10. 'list' → logprob: -5.291720867156982

Token 144: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.09476391226053238
    2. 'ines' → logprob: -3.469763994216919
    3. 'î' → logprob: -3.469763994216919
    4. 'nes' → logprob: -3.719763994216919
    5. 'r' → logprob: -6.09476375579834
    6. 'ins' → logprob: -7.96976375579834
    7. '   ' → logprob: -8.34476375579834
    8. 'ï' → logprob: -8.71976375579834
    9. '```' → logprob: -9.21976375579834
    10. 'ves' → logprob: -9.21976375579834

Token 145: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.473812460899353
    2. 'arr' → logprob: -1.598812460899353
    3. ' arr' → logprob: -3.5988125801086426
    4. ' lst' → logprob: -3.5988125801086426
    5. 'lst' → logprob: -3.7238125801086426
    6. '[' → logprob: -3.8488125801086426
    7. 'tokens' → logprob: -4.473812580108643
    8. 'numbers' → logprob: -4.598812580108643
    9. ' numbers' → logprob: -4.973812580108643
    10. ')' → logprob: -4.973812580108643

Token 146: ' chaque' (ID: 21194)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.8921241164207458
    2. ' obtenir' → logprob: -2.2671241760253906
    3. ' ' → logprob: -2.3921241760253906
    4. 'args' → logprob: -2.8921241760253906
    5. ' tokens' → logprob: -3.0171241760253906
    6. ' pouvoir' → logprob: -3.1421241760253906
    7. ' convertir' → logprob: -3.7671241760253906
    8. ' créer' → logprob: -4.017124176025391
    9. ' n' → logprob: -4.017124176025391
    10. ' récupérer' → logprob: -4.517124176025391

Token 147: ' entier' (ID: 80473)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7547315955162048
    2. ' élément' → logprob: -1.2547316551208496
    3. ' token' → logprob: -2.3797316551208496
    4. 'token' → logprob: -3.5047316551208496
    5. ' element' → logprob: -3.8797316551208496
    6. ' éléments' → logprob: -4.12973165512085
    7. 'element' → logprob: -4.37973165512085
    8. ' '' → logprob: -4.62973165512085
    9. ' morceau' → logprob: -4.62973165512085
    10. ' ' → logprob: -4.75473165512085

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029602359980344772
    2. '    
' → logprob: -5.404602527618408
    3. 'tokens' → logprob: -5.404602527618408
    4. '[' → logprob: -5.529602527618408
    5. ')' → logprob: -5.654602527618408
    6. ' tokens' → logprob: -6.029602527618408
    7. 's' → logprob: -6.529602527618408
    8. ',' → logprob: -6.779602527618408
    9. 'result' → logprob: -6.904602527618408
    10. ' ' → logprob: -7.154602527618408

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01969541795551777
    2. 'tokens' → logprob: -5.269695281982422
    3. '    
' → logprob: -5.644695281982422
    4. 's' → logprob: -6.519695281982422
    5. '[' → logprob: -6.644695281982422
    6. ' tokens' → logprob: -6.769695281982422
    7. ')' → logprob: -6.894695281982422
    8. 'result' → logprob: -7.144695281982422
    9. 't' → logprob: -7.394695281982422
    10. 'n' → logprob: -7.769695281982422

Token 150: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3859325349330902
    2. 'arr' → logprob: -1.7609325647354126
    3. ' arr' → logprob: -3.510932445526123
    4. ' numbers' → logprob: -3.635932445526123
    5. ' array' → logprob: -3.885932445526123
    6. 'numbers' → logprob: -3.885932445526123
    7. 'array' → logprob: -4.885932445526123
    8. ' lst' → logprob: -5.260932445526123
    9. 'a' → logprob: -5.385932445526123
    10. 'lst' → logprob: -5.635932445526123

Token 151: ' La' (ID: 3038)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.39021018147468567
    2. ' arr' → logprob: -1.6402101516723633
    3. ' numbers' → logprob: -3.3902101516723633
    4. '   ' → logprob: -3.6402101516723633
    5. 'numbers' → logprob: -4.015210151672363
    6. 'nums' → logprob: -4.640210151672363
    7. 'lst' → logprob: -4.640210151672363
    8. ' lst' → logprob: -5.265210151672363
    9. 'array' → logprob: -5.390210151672363
    10. ' array' → logprob: -5.515210151672363

Token 152: ' fonction' (ID: 17610)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2977563142776489
    2. 'lst' → logprob: -1.797756314277649
    3. 'nums' → logprob: -3.6727561950683594
    4. 'numbers' → logprob: -3.9227561950683594
    5. ' arr' → logprob: -4.297756195068359
    6. ' lst' → logprob: -4.922756195068359
    7. 'array' → logprob: -5.047756195068359
    8. ' numbers' → logprob: -5.297756195068359
    9. 'values' → logprob: -5.297756195068359
    10. 'liste' → logprob: -6.422756195068359

Token 153: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0916045531630516
    2. 'map' → logprob: -2.841604471206665
    3. ' list' → logprob: -3.716604471206665
    4. 'list' → logprob: -5.591604709625244
    5. ' lst' → logprob: -7.091604709625244
    6. 'lst' → logprob: -8.716604232788086
    7. ' arr' → logprob: -9.966604232788086
    8. 'arr' → logprob: -10.216604232788086
    9. ' liste' → logprob: -11.716604232788086
    10. ' data' → logprob: -11.716604232788086

Token 154: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6979816555976868
    2. '(int' → logprob: -0.6979816555976868
    3. '(str' → logprob: -6.072981834411621
    4. '(lambda' → logprob: -6.072981834411621
    5. '(
' → logprob: -8.947981834411621
    6. '(list' → logprob: -10.447981834411621
    7. '<int' → logprob: -11.197981834411621
    8. '(float' → logprob: -11.322981834411621
    9. 'int' → logprob: -11.947981834411621
    10. '(

' → logprob: -12.322981834411621

Token 155: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022549202665686607
    2. 'int' → logprob: -3.8975491523742676
    3. '(' → logprob: -6.272549152374268
    4. '(lambda' → logprob: -9.897549629211426
    5. ' int' → logprob: -10.397549629211426
    6. '   ' → logprob: -11.272549629211426
    7. '(str' → logprob: -11.897549629211426
    8. '(
' → logprob: -12.022549629211426
    9. '[int' → logprob: -12.522549629211426
    10. '<int' → logprob: -13.022549629211426

Token 156: ' conversion' (ID: 22165)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024843348655849695
    2. ' int' → logprob: -6.002484321594238
    3. 'lambda' → logprob: -12.252484321594238
    4. 'str' → logprob: -12.877484321594238
    5. '(int' → logprob: -14.377484321594238
    6. 'list' → logprob: -15.377484321594238
    7. ' lambda' → logprob: -16.127485275268555
    8. '   ' → logprob: -16.627485275268555
    9. '=int' → logprob: -16.627485275268555
    10. ' str' → logprob: -17.002485275268555

Token 157: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024047071114182472
    2. '(' → logprob: -3.7740471363067627
    3. 'int' → logprob: -7.524046897888184
    4. '(lambda' → logprob: -8.899046897888184
    5. '(
' → logprob: -9.524046897888184
    6. '(str' → logprob: -10.899046897888184
    7. '[int' → logprob: -11.649046897888184
    8. '=int' → logprob: -11.774046897888184
    9. ' int' → logprob: -12.149046897888184
    10. '<int' → logprob: -12.524046897888184

Token 158: ' à' (ID: 1221)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13122951984405518
    2. '(' → logprob: -2.3812294006347656
    3. '(lambda' → logprob: -3.6312294006347656
    4. '(str' → logprob: -5.881229400634766
    5. '(map' → logprob: -8.131229400634766
    6. '(list' → logprob: -8.381229400634766
    7. 'int' → logprob: -8.506229400634766
    8. '   ' → logprob: -8.506229400634766
    9. '()' → logprob: -10.131229400634766
    10. '(
' → logprob: -10.256229400634766

Token 159: ' chacune' (ID: 127465)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.670466423034668
    2. ' each' → logprob: -1.295466423034668
    3. ' la' → logprob: -2.045466423034668
    4. 'each' → logprob: -3.295466423034668
    5. 'list' → logprob: -4.920466423034668
    6. 'args' → logprob: -4.920466423034668
    7. ' chacune' → logprob: -4.920466423034668
    8. 'la' → logprob: -5.045466423034668
    9. 'l' → logprob: -5.545466423034668
    10. ' args' → logprob: -5.670466423034668

Token 160: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.125400573015213
    2. '(int' → logprob: -2.5004005432128906
    3. '(map' → logprob: -4.875400543212891
    4. '(list' → logprob: -5.000400543212891
    5. '(lambda' → logprob: -5.250400543212891
    6. '(str' → logprob: -5.375400543212891
    7. '(convert' → logprob: -6.250400543212891
    8. '(
' → logprob: -6.375400543212891
    9. '(split' → logprob: -6.625400543212891
    10. ')' → logprob: -6.750400543212891

Token 161: ' ces' (ID: 10532)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.08281679451465607
    2. ' args' → logprob: -2.5828168392181396
    3. 'split' → logprob: -5.9578166007995605
    4. ' la' → logprob: -7.9578166007995605
    5. 'la' → logprob: -8.082817077636719
    6. 'l' → logprob: -8.582817077636719
    7. ' split' → logprob: -8.582817077636719
    8. '(args' → logprob: -9.457817077636719
    9. ')' → logprob: -10.707817077636719
    10. ' l' → logprob: -10.832817077636719

Token 162: ' sous' (ID: 14487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9577741026878357
    2. 'élé' → logprob: -1.5827741622924805
    3. ' sous' → logprob: -2.2077741622924805
    4. ' )' → logprob: -2.5827741622924805
    5. ' éléments' → logprob: -2.7077741622924805
    6. 's' → logprob: -3.0827741622924805
    7. ' elements' → logprob: -4.5827741622924805
    8. 'args' → logprob: -4.7077741622924805
    9. 'elements' → logprob: -4.7077741622924805
    10. ' arguments' → logprob: -4.9577741622924805

Token 163: '-cha' (ID: 163177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5250044465065002
    2. 'list' → logprob: -2.2750043869018555
    3. '_list' → logprob: -2.7750043869018555
    4. 'str' → logprob: -2.9000043869018555
    5. 'chaine' → logprob: -2.9000043869018555
    6. '   ' → logprob: -4.4000043869018555
    7. ' chaînes' → logprob: -4.5250043869018555
    8. '(int' → logprob: -4.6500043869018555
    9. 'int' → logprob: -4.6500043869018555
    10. '(lambda' → logprob: -4.7750043869018555

Token 164: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.15257863700389862
    2. 'r' → logprob: -2.527578592300415
    3. 'nes' → logprob: -2.902578592300415
    4. 'î' → logprob: -5.902578830718994
    5. 'ines' → logprob: -7.027578830718994
    6. 'mes' → logprob: -7.277578830718994
    7. '   ' → logprob: -7.527578830718994
    8. 'res' → logprob: -8.152578353881836
    9. 'ves' → logprob: -8.902578353881836
    10. 'ne' → logprob: -9.152578353881836

Token 165: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6747427582740784
    2. '   ' → logprob: -0.9247427582740784
    3. '(' → logprob: -3.4247426986694336
    4. ' )' → logprob: -3.6747426986694336
    5. ',' → logprob: -4.174742698669434
    6. 's' → logprob: -5.799742698669434
    7. '(
' → logprob: -6.549742698669434
    8. '(n' → logprob: -6.674742698669434
    9. 'tokens' → logprob: -6.674742698669434
    10. '(s' → logprob: -6.924742698669434

Token 166: ' cré' (ID: 12201)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.341550588607788
    2. ')' → logprob: -1.716550588607788
    3. ' list' → logprob: -1.841550588607788
    4. ' )' → logprob: -2.091550588607788
    5. ' tokens' → logprob: -2.341550588607788
    6. '    ' → logprob: -3.091550588607788
    7. 'list' → logprob: -3.591550588607788
    8. 'tokens' → logprob: -4.091550827026367
    9. ' la' → logprob: -4.591550827026367
    10. ' leading' → logprob: -4.966550827026367

Token 167: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.007689678110182285
    2. 'er' → logprob: -5.132689476013184
    3. 'e' → logprob: -8.007689476013184
    4. 'ert' → logprob: -8.382689476013184
    5. 'es' → logprob: -8.507689476013184
    6. 'nt' → logprob: -8.757689476013184
    7. 'r' → logprob: -8.882689476013184
    8. 'ent' → logprob: -9.132689476013184
    9. 'rant' → logprob: -9.132689476013184
    10. 'rt' → logprob: -9.632689476013184

Token 168: ' alors' (ID: 17971)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06948581337928772
    2. 'list' → logprob: -3.194485902786255
    3. ' ' → logprob: -5.319485664367676
    4. '(list' → logprob: -5.569485664367676
    5. '(int' → logprob: -5.944485664367676
    6. ' la' → logprob: -6.069485664367676
    7. 'int' → logprob: -6.319485664367676
    8. ' un' → logprob: -6.444485664367676
    9. ' int' → logprob: -6.819485664367676
    10. '    ' → logprob: -6.944485664367676

Token 169: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8986108303070068
    2. ' un' → logprob: -1.2736108303070068
    3. ' list' → logprob: -1.7736108303070068
    4. ' map' → logprob: -3.273610830307007
    5. ' la' → logprob: -3.398610830307007
    6. 'list' → logprob: -3.398610830307007
    7. ' int' → logprob: -4.148611068725586
    8. 'int' → logprob: -4.398611068725586
    9. 'map' → logprob: -5.773611068725586
    10. ' ' → logprob: -6.523611068725586

Token 170: ' sé' (ID: 7462)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7127682566642761
    2. 'liste' → logprob: -1.087768316268921
    3. ' liste' → logprob: -2.087768316268921
    4. ' list' → logprob: -3.087768316268921
    5. 'map' → logprob: -6.087768077850342
    6. ' map' → logprob: -8.4627685546875
    7. 'n' → logprob: -8.5877685546875
    8. 'lst' → logprob: -9.4627685546875
    9. 'l' → logprob: -9.5877685546875
    10. 's' → logprob: -10.0877685546875

Token 171: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.4649209976196289
    2. 'ance' → logprob: -2.589920997619629
    3. ' liste' → logprob: -2.839920997619629
    4. 'ence' → logprob: -2.964920997619629
    5. 'rie' → logprob: -2.964920997619629
    6. 'liste' → logprob: -3.089920997619629
    7. 'quences' → logprob: -3.714920997619629
    8. 'n' → logprob: -4.089920997619629
    9. 'rence' → logprob: -5.214920997619629
    10. 'l' → logprob: -5.214920997619629

Token 172: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9833851456642151
    2. '(int' → logprob: -1.2333850860595703
    3. '<int' → logprob: -1.9833850860595703
    4. 'int' → logprob: -2.7333850860595703
    5. ' of' → logprob: -3.2333850860595703
    6. '[int' → logprob: -3.6083850860595703
    7. ' integers' → logprob: -4.10838508605957
    8. ' de' → logprob: -4.48338508605957
    9. 'd' → logprob: -5.35838508605957
    10. 's' → logprob: -5.35838508605957

Token 173: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.713234007358551
    2. ' ent' → logprob: -1.5882339477539062
    3. 'inte' → logprob: -2.2132339477539062
    4. ' integers' → logprob: -2.7132339477539062
    5. 'int' → logprob: -2.8382339477539062
    6. 'n' → logprob: -3.9632339477539062
    7. ' nombres' → logprob: -3.9632339477539062
    8. ' int' → logprob: -4.838233947753906
    9. 'ints' → logprob: -5.088233947753906
    10. ')' → logprob: -5.588233947753906

Token 174: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001818489981815219
    2. 'ier' → logprob: -9.250182151794434
    3. 'i' → logprob: -10.375182151794434
    4. 'ers' → logprob: -10.875182151794434
    5. '   ' → logprob: -11.375182151794434
    6. '```' → logprob: -11.750182151794434
    7. 'ières' → logprob: -12.500182151794434
    8. 'gers' → logprob: -13.375182151794434
    9. 'ires' → logprob: -13.500182151794434
    10. '       ' → logprob: -13.625182151794434

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38051217794418335
    2. '(' → logprob: -1.3805122375488281
    3. ')' → logprob: -4.005512237548828
    4. '(numbers' → logprob: -4.505512237548828
    5. 'a' → logprob: -4.880512237548828
    6. 's' → logprob: -5.630512237548828
    7. '(nums' → logprob: -5.630512237548828
    8. ',' → logprob: -5.755512237548828
    9. '(arr' → logprob: -6.255512237548828
    10. 'arr' → logprob: -6.755512237548828

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1650899201631546
    2. 'arr' → logprob: -3.0400898456573486
    3. 'a' → logprob: -3.1650898456573486
    4. ' arr' → logprob: -3.7900898456573486
    5. ' a' → logprob: -4.290090084075928
    6. '    
' → logprob: -5.165090084075928
    7. ' numbers' → logprob: -5.915090084075928
    8. ' array' → logprob: -5.915090084075928
    9. ')' → logprob: -6.290090084075928
    10. 'numbers' → logprob: -6.290090084075928

Token 177: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7421966195106506
    2. ' arr' → logprob: -1.2421965599060059
    3. '   ' → logprob: -2.742196559906006
    4. ' numbers' → logprob: -2.867196559906006
    5. 'a' → logprob: -4.117196559906006
    6. 'numbers' → logprob: -4.117196559906006
    7. 'nums' → logprob: -4.617196559906006
    8. ' a' → logprob: -4.617196559906006
    9. ' array' → logprob: -4.617196559906006
    10. ' lst' → logprob: -4.617196559906006

Token 178: ' La' (ID: 3038)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6093287467956543
    2. ' arr' → logprob: -1.2343287467956543
    3. ' numbers' → logprob: -3.1093287467956543
    4. '   ' → logprob: -3.7343287467956543
    5. 'numbers' → logprob: -4.109328746795654
    6. 'lst' → logprob: -4.234328746795654
    7. 'values' → logprob: -4.484328746795654
    8. ' values' → logprob: -4.484328746795654
    9. ' lst' → logprob: -4.609328746795654
    10. 'a' → logprob: -4.859328746795654

Token 179: ' fonction' (ID: 17610)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.10329075902700424
    2. 'lst' → logprob: -2.9782907962799072
    3. ' arr' → logprob: -4.103290557861328
    4. 'nums' → logprob: -5.228290557861328
    5. 'numbers' → logprob: -5.228290557861328
    6. 'a' → logprob: -5.353290557861328
    7. ' lst' → logprob: -5.478290557861328
    8. ' numbers' → logprob: -6.103290557861328
    9. 'A' → logprob: -6.103290557861328
    10. 'array' → logprob: -6.103290557861328

Token 180: ' list' (ID: 1562)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.1999112367630005
    2. 'lst' → logprob: -1.3249112367630005
    3. ' lst' → logprob: -1.4499112367630005
    4. ' arr' → logprob: -2.574911117553711
    5. 'a' → logprob: -3.449911117553711
    6. 'list' → logprob: -3.824911117553711
    7. 'nums' → logprob: -4.699911117553711
    8. ' numbers' → logprob: -4.824911117553711
    9. ' a' → logprob: -4.824911117553711
    10. ' array' → logprob: -5.074911117553711

Token 181: ' convert' (ID: 8452)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5831636786460876
    2. '(' → logprob: -0.8331636786460876
    3. '()' → logprob: -5.583163738250732
    4. '(
' → logprob: -6.083163738250732
    5. '(convert' → logprob: -7.833163738250732
    6. '(range' → logprob: -9.083163261413574
    7. '(int' → logprob: -9.333163261413574
    8. 'map' → logprob: -9.458163261413574
    9. '(com' → logprob: -9.708163261413574
    10. ')' → logprob: -10.458163261413574

Token 182: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.1089240312576294
    2. 'ir' → logprob: -4.10892391204834
    3. 'args' → logprob: -4.10892391204834
    4. '(' → logprob: -4.23392391204834
    5. 'e' → logprob: -4.35892391204834
    6. '(args' → logprob: -4.48392391204834
    7. '_args' → logprob: -4.60892391204834
    8. 'ie' → logprob: -4.85892391204834
    9. 'i' → logprob: -5.85892391204834
    10. '()' → logprob: -5.98392391204834

Token 183: ' cette' (ID: 7696)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.12066210061311722
    2. 'map' → logprob: -2.620662212371826
    3. '(' → logprob: -3.745662212371826
    4. 'la' → logprob: -4.495662212371826
    5. 'l' → logprob: -6.745662212371826
    6. 'le' → logprob: -7.120662212371826
    7. ' la' → logprob: -7.245662212371826
    8. 'les' → logprob: -7.245662212371826
    9. ' map' → logprob: -7.870662212371826
    10. 'int' → logprob: -7.870662212371826

Token 184: ' sé' (ID: 7462)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.8360736966133118
    2. 'map' → logprob: -0.9610736966133118
    3. ' map' → logprob: -1.711073637008667
    4. ',map' → logprob: -7.211073875427246
    5. ' sequence' → logprob: -7.336073875427246
    6. 'int' → logprob: -7.336073875427246
    7. 'sequence' → logprob: -7.836073875427246
    8. ' ' → logprob: -8.336073875427246
    9. '(' → logprob: -8.586073875427246
    10. 's' → logprob: -9.586073875427246

Token 185: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00011903966515092179
    2. 'quences' → logprob: -9.87511920928955
    3. 'q' → logprob: -10.00011920928955
    4. 'qu' → logprob: -11.37511920928955
    5. 'ance' → logprob: -12.75011920928955
    6. 'rie' → logprob: -13.00011920928955
    7. 'QUENCE' → logprob: -13.12511920928955
    8. 'que' → logprob: -13.50011920928955
    9. 'ence' → logprob: -14.62511920928955
    10. 'quent' → logprob: -14.62511920928955

Token 186: ' en' (ID: 469)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06161501631140709
    2. '(' → logprob: -3.061614990234375
    3. '(int' → logprob: -5.311614990234375
    4. '[int' → logprob: -6.061614990234375
    5. 'int' → logprob: -6.186614990234375
    6. '   ' → logprob: -6.811614990234375
    7. '(
' → logprob: -7.436614990234375
    8. ' en' → logprob: -8.061614990234375
    9. '<int' → logprob: -8.311614990234375
    10. '(en' → logprob: -8.686614990234375

Token 187: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.013163643889129162
    2. ' liste' → logprob: -5.1381635665893555
    3. ' a' → logprob: -5.2631635665893555
    4. 'une' → logprob: -6.7631635665893555
    5. 'a' → logprob: -8.138163566589355
    6. ' list' → logprob: -8.763163566589355
    7. ' la' → logprob: -9.013163566589355
    8. '[]' → logprob: -9.013163566589355
    9. '[' → logprob: -9.763163566589355
    10. 'liste' → logprob: -9.763163566589355

Token 188: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.037012360990047455
    2. ' list' → logprob: -3.9120123386383057
    3. 'liste' → logprob: -4.287012577056885
    4. 'list' → logprob: -6.037012577056885
    5. 's' → logprob: -10.037012100219727
    6. ' listes' → logprob: -10.787012100219727
    7. 'n' → logprob: -11.037012100219727
    8. '_list' → logprob: -11.287012100219727
    9. ' complète' → logprob: -11.412012100219727
    10. ' complete' → logprob: -11.537012100219727

Token 189: ' d' (ID: 272)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.17091307044029236
    2. 'a' → logprob: -2.920912981033325
    3. 'numbers' → logprob: -3.170912981033325
    4. 'nums' → logprob: -4.545913219451904
    5. 'lst' → logprob: -4.545913219451904
    6. 'array' → logprob: -4.795913219451904
    7. '(arr' → logprob: -5.295913219451904
    8. '   ' → logprob: -5.295913219451904
    9. 't' → logprob: -5.795913219451904
    10. 'values' → logprob: -6.170913219451904

Token 190: ''ent' (ID: 53422)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.9150229096412659
    2. 'int' → logprob: -1.415022850036621
    3. 'ent' → logprob: -1.665022850036621
    4. 'ints' → logprob: -2.040022850036621
    5. ' integers' → logprob: -4.290022850036621
    6. ''ent' → logprob: -5.290022850036621
    7. ' ent' → logprob: -5.290022850036621
    8. 'n' → logprob: -5.415022850036621
    9. '<int' → logprob: -6.540022850036621
    10. ' int' → logprob: -6.665022850036621

Token 191: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.240481914370321e-05
    2. 'i' → logprob: -10.000052452087402
    3. 'ier' → logprob: -12.625052452087402
    4. 'ières' → logprob: -13.000052452087402
    5. 'ints' → logprob: -15.000052452087402
    6. 'I' → logprob: -15.250052452087402
    7. 'ires' → logprob: -15.500052452087402
    8. '```' → logprob: -15.625052452087402
    9. 'ers' → logprob: -15.875052452087402
    10. 'ieurs' → logprob: -16.500051498413086

Token 192: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.406726360321045
    2. ' arr' → logprob: -1.406726360321045
    3. 'arr' → logprob: -2.031726360321045
    4. ' array' → logprob: -2.406726360321045
    5. '   ' → logprob: -3.031726360321045
    6. ' numbers' → logprob: -3.156726360321045
    7. ' a' → logprob: -3.156726360321045
    8. 'array' → logprob: -4.031726360321045
    9. 'numbers' → logprob: -4.031726360321045
    10. ' nums' → logprob: -4.406726360321045

Token 193: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.47737109661102295
    2. 'a' → logprob: -1.852371096611023
    3. '   ' → logprob: -2.4773712158203125
    4. 'array' → logprob: -2.6023712158203125
    5. ' array' → logprob: -4.1023712158203125
    6. 'numbers' → logprob: -4.3523712158203125
    7. ' arr' → logprob: -4.6023712158203125
    8. ' a' → logprob: -5.6023712158203125
    9. 'data' → logprob: -6.1023712158203125
    10. 'nums' → logprob: -6.2273712158203125

Token 194: ' A' (ID: 355)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.340244859457016
    2. 'a' → logprob: -2.465244770050049
    3. 'numbers' → logprob: -2.840244770050049
    4. 'array' → logprob: -3.215244770050049
    5. ' arr' → logprob: -3.465244770050049
    6. ' array' → logprob: -4.215244770050049
    7. ' numbers' → logprob: -4.215244770050049
    8. 'lst' → logprob: -4.465244770050049
    9. ' a' → logprob: -5.215244770050049
    10. 'A' (adapté à ' A') → logprob: -5.340244770050049

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896007388830185
    2. '=' → logprob: -2.4639601707458496
    3. 's' → logprob: -11.713959693908691
    4. '_' → logprob: -12.588959693908691
    5. '   ' → logprob: -12.588959693908691
    6. '_list' → logprob: -13.463959693908691
    7. ' ' → logprob: -13.838959693908691
    8. '[' → logprob: -13.838959693908691
    9. '[]' → logprob: -14.838959693908691
    10. 'A' → logprob: -15.088959693908691

Token 196: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.061967797577381134
    2. ' list' → logprob: -2.8119678497314453
    3. 'List' → logprob: -16.436967849731445
    4. ' ' → logprob: -17.311967849731445
    5. '	list' → logprob: -17.561967849731445
    6. '=list' → logprob: -18.811967849731445
    7. '   ' → logprob: -19.186967849731445
    8. '```' → logprob: -19.436967849731445
    9. 'liste' → logprob: -19.561967849731445
    10. ' ' → logprob: -19.686967849731445

Token 197: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.062030989676713943
    2. '(' → logprob: -2.8120310306549072
    3. '(
' → logprob: -10.312030792236328
    4. '(int' → logprob: -10.687030792236328
    5. '(m' → logprob: -12.437030792236328
    6. 'map' → logprob: -13.687030792236328
    7. '(

' → logprob: -13.937030792236328
    8. '(ma' → logprob: -14.187030792236328
    9. '(mapping' → logprob: -15.937030792236328
    10. '(list' → logprob: -16.687030792236328

Token 198: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038095541298389435
    2. '(' → logprob: -3.288095474243164
    3. 'int' → logprob: -10.038095474243164
    4. '(
' → logprob: -12.913095474243164
    5. '(str' → logprob: -12.913095474243164
    6. '(lambda' → logprob: -13.163095474243164
    7. ' int' → logprob: -13.663095474243164
    8. '<int' → logprob: -13.788095474243164
    9. ' (' → logprob: -14.163095474243164
    10. '[int' → logprob: -15.538095474243164

Token 199: ',' (ID: 11)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.009892077185213566
    2. ',args' → logprob: -4.884891986846924
    3. ',' → logprob: -6.134891986846924
    4. 'args' → logprob: -9.884892463684082
    5. '(' → logprob: -10.009892463684082
    6. ' (' → logprob: -11.509892463684082
    7. ')' → logprob: -12.759892463684082
    8. '=args' → logprob: -12.884892463684082
    9. ')(' → logprob: -13.384892463684082
    10. ' ,' → logprob: -13.634892463684082

Token 200: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.04872668534517288
    2. ' args' → logprob: -3.048726797103882
    3. '(args' → logprob: -8.923727035522461
    4. '	args' → logprob: -12.798727035522461
    5. ',args' → logprob: -13.923727035522461
    6. '=args' → logprob: -14.173727035522461
    7. '   ' → logprob: -14.423727035522461
    8. '.args' → logprob: -14.673727035522461
    9. '$args' → logprob: -14.673727035522461
    10. ' ' → logprob: -16.17372703552246

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875571544806007e-05
    2. ')[' → logprob: -11.875011444091797
    3. ' [' → logprob: -13.375011444091797
    4. '(' → logprob: -13.375011444091797
    5. '][' → logprob: -14.875011444091797
    6. '   ' → logprob: -14.875011444091797
    7. '```' → logprob: -15.250011444091797
    8. '[
' → logprob: -15.625011444091797
    9. 's' → logprob: -15.750011444091797
    10. ')' → logprob: -16.000011444091797

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.87500286102295
    5. '0' → logprob: -15.50000286102295
    6. '
' → logprob: -17.000001907348633
    7. '(' → logprob: -17.125001907348633
    8. ')' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.125001907348633

Token 203: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002140982076525688
    2. '[' → logprob: -7.252140998840332
    3. '][' → logprob: -7.877140998840332
    4. ']))' → logprob: -8.002140998840332
    5. '().' → logprob: -8.252140998840332
    6. ']' → logprob: -8.252140998840332
    7. '.split' → logprob: -9.877140998840332
    8. '()].' → logprob: -9.877140998840332
    9. ').' → logprob: -10.627140998840332
    10. ' ].' → logprob: -11.252140998840332

Token 204: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4140441635390744e-05
    2. 'strip' → logprob: -11.250014305114746
    3. ' split' → logprob: -14.000014305114746
    4. '(split' → logprob: -15.625014305114746
    5. ')' → logprob: -16.62501335144043
    6. 'spl' → logprob: -18.25001335144043
    7. '.split' → logprob: -19.12501335144043
    8. 'rstrip' → logprob: -19.87501335144043
    9. '```' → logprob: -20.00001335144043
    10. 's' → logprob: -21.12501335144043

Token 205: '()))

' (ID: 125972)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40046948194503784
    2. '()))' → logprob: -1.1504695415496826
    3. '())))' → logprob: -5.0254693031311035
    4. '('' → logprob: -5.4004693031311035
    5. '())' → logprob: -6.1504693031311035
    6. '(' → logprob: -8.775469779968262
    7. '("' → logprob: -10.400469779968262
    8. '()))
' → logprob: -10.525469779968262
    9. '())))
' → logprob: -10.775469779968262
    10. '()));' → logprob: -11.150469779968262

Token 206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02712043933570385
    2. '    
' → logprob: -4.652120590209961
    3. '   ' → logprob: -4.777120590209961
    4. ' 
' → logprob: -5.652120590209961
    5. '  
' → logprob: -6.277120590209961
    6. '\n' → logprob: -6.902120590209961
    7. '   
' → logprob: -7.152120590209961
    8. '#' → logprob: -8.152120590209961
    9. 'n' → logprob: -8.402120590209961
    10. '\' → logprob: -8.652120590209961

Token 207: ' ret' (ID: 2881)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.4030284881591797
    2. 'counts' → logprob: -2.0280284881591797
    3. 'count' → logprob: -2.2780284881591797
    4. 'counter' → logprob: -3.7780284881591797
    5. 'd' → logprob: -4.02802848815918
    6. 'frequency' → logprob: -4.02802848815918
    7. '   ' → logprob: -4.02802848815918
    8. 'fre' → logprob: -5.27802848815918
    9. 'f' → logprob: -6.15302848815918
    10. ' freq' → logprob: -6.52802848815918

Token 208: ' =' (ID: 314)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.09090282022953033
    2. ' =' → logprob: -2.715902805328369
    3. 'u' → logprob: -4.715902805328369
    4. 'ur' → logprob: -4.840902805328369
    5. '=' → logprob: -6.340902805328369
    6. '_' → logprob: -7.340902805328369
    7. 'val' → logprob: -8.340903282165527
    8. 'urne' → logprob: -8.340903282165527
    9. '_val' → logprob: -8.715903282165527
    10. ' ' → logprob: -8.965903282165527

Token 209: ' ' (ID: 220)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5813311338424683
    2. 'default' → logprob: -1.2063311338424683
    3. ' []' → logprob: -2.456331253051758
    4. '[]' → logprob: -3.706331253051758
    5. '"default' → logprob: -4.206331253051758
    6. ' default' → logprob: -5.081331253051758
    7. '0' → logprob: -5.831331253051758
    8. '"' → logprob: -6.206331253051758
    9. '""' → logprob: -6.581331253051758
    10. ' ' → logprob: -6.831331253051758

Token 210: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.018887292593717575
    2. '[]' → logprob: -4.893887519836426
    3. '0' → logprob: -5.018887519836426
    4. '"default' → logprob: -6.393887519836426
    5. '""' → logprob: -6.518887519836426
    6. 'def' → logprob: -7.268887519836426
    7. '"' → logprob: -8.268887519836426
    8. '''' → logprob: -8.518887519836426
    9. ''default' → logprob: -9.643887519836426
    10. '[]
' → logprob: -9.768887519836426

Token 211: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1721155047416687
    2. ' 
' → logprob: -2.9221155643463135
    3. '   ' → logprob: -3.1721155643463135
    4. ',' → logprob: -4.672115325927734
    5. '    
' → logprob: -4.672115325927734
    6. ' defaultdict' → logprob: -4.922115325927734
    7. ' ' → logprob: -5.297115325927734
    8. '   
' → logprob: -5.797115325927734
    9. 'for' → logprob: -6.047115325927734
    10. ' ,' → logprob: -6.172115325927734

Token 212: ' #' (ID: 1069)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.7518468499183655
    2. 'count' → logprob: -1.8768467903137207
    3. 'counts' → logprob: -2.1268467903137207
    4. '
' → logprob: -2.8768467903137207
    5. 'd' → logprob: -3.1268467903137207
    6. 'counter' → logprob: -3.3768467903137207
    7. 'dict' → logprob: -3.6268467903137207
    8. 'cnt' → logprob: -4.251846790313721
    9. 'max' → logprob: -4.501846790313721
    10. 'for' → logprob: -4.751846790313721

Token 213: ' Initial' (ID: 9209)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.21315166354179382
    2. ' defaultdict' → logprob: -2.213151693344116
    3. 'ret' → logprob: -3.463151693344116
    4. ' default' → logprob: -3.838151693344116
    5. ' ret' → logprob: -4.338151454925537
    6. 'd' → logprob: -5.713151454925537
    7. 'count' → logprob: -6.338151454925537
    8. 'freq' → logprob: -6.713151454925537
    9. ' ' → logprob: -6.838151454925537
    10. 'counter' → logprob: -6.963151454925537

Token 214: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17465507984161377
    2. 'ization' → logprob: -3.299654960632324
    3. '_val' → logprob: -3.549654960632324
    4. ' =' → logprob: -3.799654960632324
    5. '_value' → logprob: -3.924654960632324
    6. '=' → logprob: -4.049654960632324
    7. 'e' → logprob: -5.299654960632324
    8. '_counter' → logprob: -5.424654960632324
    9. '_count' → logprob: -5.424654960632324
    10. 'isation' → logprob: -5.799654960632324

Token 215: ' d' (ID: 272)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -1.4291136264801025
    2. ' ' → logprob: -2.0541136264801025
    3. ' freq' → logprob: -2.5541136264801025
    4. ' max' → logprob: -2.5541136264801025
    5. 'freq' → logprob: -2.8041136264801025
    6. ' counter' → logprob: -3.1791136264801025
    7. '<|end|>' → logprob: -3.1791136264801025
    8. ' frequency' → logprob: -3.1791136264801025
    9. 'count' → logprob: -3.6791136264801025
    10. 'frequency' → logprob: -3.6791136264801025

Token 216: ''un' (ID: 9788)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13712650537490845
    2. ' a' → logprob: -3.0121264457702637
    3. '  ' → logprob: -3.6371264457702637
    4. '=' → logprob: -4.762126445770264
    5. ' =' → logprob: -4.762126445770264
    6. 'a' → logprob: -5.262126445770264
    7. '_' → logprob: -5.387126445770264
    8. ' l' → logprob: -5.512126445770264
    9. ' un' → logprob: -5.637126445770264
    10. ')' → logprob: -5.762126445770264

Token 217: ' compteur' (ID: 163344)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0006897979183122516
    2. ' defaultdict' → logprob: -7.75068998336792
    3. ' default' → logprob: -8.750689506530762
    4. 'd' → logprob: -10.000689506530762
    5. '
' → logprob: -10.875689506530762
    6. '"default' → logprob: -11.500689506530762
    7. ' ' → logprob: -12.125689506530762
    8. 'def' → logprob: -12.750689506530762
    9. 'counter' → logprob: -13.000689506530762
    10. ''default' → logprob: -13.125689506530762

Token 218: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5943507552146912
    2. '<|end|>' → logprob: -2.094350814819336
    3. ' ' → logprob: -3.344350814819336
    4. 'freq' → logprob: -3.469350814819336
    5. '   ' → logprob: -3.594350814819336
    6. ',' → logprob: -3.719350814819336
    7. ' defaultdict' → logprob: -3.719350814819336
    8. ' for' → logprob: -3.844350814819336
    9. '_' → logprob: -3.969350814819336
    10. 'for' → logprob: -3.969350814819336

Token 219: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007517361082136631
    2. ' ' → logprob: -7.250751972198486
    3. 'ret' → logprob: -11.125751495361328
    4. 'default' → logprob: -11.625751495361328
    5. '1' → logprob: -12.000751495361328
    6. 'zero' → logprob: -12.375751495361328
    7. 'z' → logprob: -12.875751495361328
    8. 'int' → logprob: -13.250751495361328
    9. ' zéro' → logprob: -14.125751495361328
    10. ' defaultdict' → logprob: -14.750751495361328

Token 220: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023248855024576187
    2. '   ' → logprob: -4.648248672485352
    3. ',' → logprob: -6.398248672485352
    4. '  
' → logprob: -6.773248672485352
    5. '    
' → logprob: -6.898248672485352
    6. 'freq' → logprob: -7.023248672485352
    7. ' 
' → logprob: -7.148248672485352
    8. 'for' → logprob: -7.398248672485352
    9. '   
' → logprob: -7.523248672485352
    10. '<|end|>' → logprob: -7.648248672485352

Token 221: ' Ce' (ID: 14228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05842265114188194
    2. '  
' → logprob: -4.183422565460205
    3. 'for' → logprob: -4.808422565460205
    4. '   ' → logprob: -5.058422565460205
    5. ' 
' → logprob: -5.058422565460205
    6. '<|end|>' → logprob: -5.183422565460205
    7. '    
' → logprob: -5.558422565460205
    8. ' for' → logprob: -5.933422565460205
    9. '   
' → logprob: -7.058422565460205
    10. 'freq' → logprob: -7.183422565460205

Token 222: ' compteur' (ID: 163344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046757347881793976
    2. '_' → logprob: -3.296757459640503
    3. '  ' → logprob: -6.421757221221924
    4. ' =' → logprob: -6.546757221221924
    5. 'space' → logprob: -6.921757221221924
    6. '=' → logprob: -7.421757221221924
    7. ' space' → logprob: -7.671757221221924
    8. ')' → logprob: -7.671757221221924
    9. '[' → logprob: -7.921757221221924
    10. ' )' → logprob: -8.046757698059082

Token 223: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7687241435050964
    2. '<|end|>' → logprob: -1.6437242031097412
    3. ' +=' → logprob: -1.6437242031097412
    4. '=' → logprob: -2.393724203109741
    5. ' ' → logprob: -3.643724203109741
    6. '+=' → logprob: -4.268723964691162
    7. ',' → logprob: -5.268723964691162
    8. ')' → logprob: -5.893723964691162
    9. '<|end|>' → logprob: -6.768723964691162
    10. '   ' → logprob: -6.768723964691162

Token 224: ' conten' (ID: 23523)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.18727871775627136
    2. 'comp' → logprob: -2.8122787475585938
    3. ' stock' → logprob: -3.8122787475585938
    4. ' servir' → logprob: -3.8122787475585938
    5. 'stock' → logprob: -4.062278747558594
    6. 'acc' → logprob: -4.687278747558594
    7. 'count' → logprob: -5.062278747558594
    8. 'represent' → logprob: -5.687278747558594
    9. 'serv' → logprob: -5.812278747558594
    10. 's' → logprob: -6.062278747558594

Token 225: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0007373234839178622
    2. 'uer' → logprob: -8.375737190246582
    3. 'r' → logprob: -9.000737190246582
    4. 't' → logprob: -9.000737190246582
    5. 'ter' → logprob: -9.125737190246582
    6. 'ir' → logprob: -9.375737190246582
    7. 'u' → logprob: -11.250737190246582
    8. 'ur' → logprob: -11.500737190246582
    9. '   ' → logprob: -11.875737190246582
    10. 'e' → logprob: -11.875737190246582

Token 226: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1622889041900635
    2. ' the' → logprob: -1.2872889041900635
    3. 'the' → logprob: -1.7872889041900635
    4. '<|end|>' → logprob: -2.0372889041900635
    5. ' la' → logprob: -2.6622889041900635
    6. ' le' → logprob: -4.537288665771484
    7. ')' → logprob: -4.787288665771484
    8. 'le' → logprob: -5.162288665771484
    9. '  ' → logprob: -5.787288665771484
    10. '   ' → logprob: -5.912288665771484

Token 227: ' résultat' (ID: 62556)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3166470229625702
    2. 'nombre' → logprob: -1.3166470527648926
    3. ' number' → logprob: -7.066647052764893
    4. 's' → logprob: -7.816647052764893
    5. ' maximum' → logprob: -8.441646575927734
    6. 'max' → logprob: -8.566646575927734
    7. ' total' → logprob: -8.566646575927734
    8. ' nombres' → logprob: -8.816646575927734
    9. 'result' → logprob: -8.941646575927734
    10. 'number' → logprob: -8.941646575927734

Token 228: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2823454439640045
    2. '
' → logprob: -2.9073455333709717
    3. ',' → logprob: -3.7823455333709717
    4. 'freq' → logprob: -4.157345294952393
    5. '    
' → logprob: -4.157345294952393
    6. ' 
' → logprob: -4.282345294952393
    7. ' defaultdict' → logprob: -4.407345294952393
    8. '  
' → logprob: -4.532345294952393
    9. ' ' → logprob: -4.657345294952393
    10. ')' → logprob: -4.782345294952393

Token 229: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949540913105011
    2. '
' → logprob: -1.7949540615081787
    3. 'freq' → logprob: -4.044954299926758
    4. '    
' → logprob: -4.294954299926758
    5. ' defaultdict' → logprob: -4.419954299926758
    6. '   
' → logprob: -4.669954299926758
    7. 'frequency' → logprob: -5.294954299926758
    8. '  
' → logprob: -5.544954299926758
    9. ' freq' → logprob: -5.794954299926758
    10. ' frequency' → logprob: -6.044954299926758

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5989795923233032
    2. '
' → logprob: -1.8489795923233032
    3. 'freq' → logprob: -2.3489794731140137
    4. 'prefix' → logprob: -3.4739794731140137
    5. 'count' → logprob: -4.098979473114014
    6. '    
' → logprob: -4.098979473114014
    7. ' 
' → logprob: -4.223979473114014
    8. 'counts' → logprob: -4.348979473114014
    9. ' freq' → logprob: -4.473979473114014
    10. 'c' → logprob: -4.598979473114014

Token 231: ' X' (ID: 2127)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.49226951599121094
    2. 'count' → logprob: -1.617269515991211
    3. 'counts' → logprob: -2.492269515991211
    4. 'd' → logprob: -3.117269515991211
    5. 'counter' → logprob: -4.117269515991211
    6. 'prefix' → logprob: -4.492269515991211
    7. 'cnt' → logprob: -4.742269515991211
    8. ' freq' → logprob: -5.617269515991211
    9. 'dp' → logprob: -5.742269515991211
    10. 'c' → logprob: -5.742269515991211

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08092953264713287
    2. '=' → logprob: -2.5809295177459717
    3. 'd' → logprob: -7.955929756164551
    4. ',' → logprob: -8.20592975616455
    5. '_' → logprob: -8.83092975616455
    6. 'A' → logprob: -8.95592975616455
    7. 'a' → logprob: -8.95592975616455
    8. 'freq' → logprob: -9.08092975616455
    9. ' defaultdict' → logprob: -9.20592975616455
    10. 'count' → logprob: -9.33092975616455

Token 233: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0007166040013544261
    2. ' defaultdict' → logprob: -7.250716686248779
    3. '0' → logprob: -12.875716209411621
    4. '(default' → logprob: -13.125716209411621
    5. '"default' → logprob: -14.250716209411621
    6. '[' → logprob: -14.500716209411621
    7. ' default' → logprob: -15.500716209411621
    8. ''default' → logprob: -16.375717163085938
    9. '.default' → logprob: -16.500717163085938
    10. '=' → logprob: -16.625717163085938

Token 234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.52919222577475e-05
    2. '(lambda' → logprob: -9.625075340270996
    3. 'int' → logprob: -11.750075340270996
    4. '(' → logprob: -14.125075340270996
    5. '[int' → logprob: -15.625075340270996
    6. '<int' → logprob: -15.625075340270996
    7. ',int' → logprob: -17.00007438659668
    8. 'lambda' → logprob: -17.87507438659668
    9. ':int' → logprob: -18.00007438659668
    10. '(in' → logprob: -18.25007438659668

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4894986785948277e-05
    2. ' )' → logprob: -11.000044822692871
    3. ')
' → logprob: -11.250044822692871
    4. '())' → logprob: -11.500044822692871
    5. ')

' → logprob: -13.125044822692871
    6. '()' → logprob: -13.750044822692871
    7. ')`' → logprob: -14.125044822692871
    8. '))' → logprob: -15.250044822692871
    9. '[' → logprob: -15.625044822692871
    10. ')
' → logprob: -16.000045776367188

Token 236: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42055168747901917
    2. '    
' → logprob: -1.7955516576766968
    3. '   ' → logprob: -2.5455517768859863
    4. ' 
' → logprob: -3.5455517768859863
    5. '  
' → logprob: -3.9205517768859863
    6. '(' → logprob: -4.295551776885986
    7. '()' → logprob: -4.420551776885986
    8. '   
' → logprob: -4.545551776885986
    9. '()
' → logprob: -5.545551776885986
    10. ' ' → logprob: -5.670551776885986

Token 237: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13010857999324799
    2. '   ' → logprob: -2.755108594894409
    3. '    
' → logprob: -3.755108594894409
    4. '  
' → logprob: -4.88010835647583
    5. '()' → logprob: -5.00510835647583
    6. '()
' → logprob: -5.75510835647583
    7. ' ' → logprob: -5.88010835647583
    8. ' 
' → logprob: -5.88010835647583
    9. '   
' → logprob: -5.88010835647583
    10. '

' → logprob: -6.50510835647583

Token 238: ' Cré' (ID: 109203)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1065970659255981
    2. 'X' → logprob: -1.6065970659255981
    3. ' defaultdict' → logprob: -2.7315969467163086
    4. 'for' → logprob: -2.9815969467163086
    5. 'default' → logprob: -3.2315969467163086
    6. ')' → logprob: -3.2315969467163086
    7. '
' → logprob: -3.7315969467163086
    8. ' {}' → logprob: -3.7315969467163086
    9. '[]' → logprob: -3.8565969467163086
    10. '()' → logprob: -3.8565969467163086

Token 239: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0054009538143873215
    2. 'er' → logprob: -5.505401134490967
    3. 'é' → logprob: -8.005400657653809
    4. 'ption' → logprob: -8.255400657653809
    5. 'tion' → logprob: -8.880400657653809
    6. 'e' → logprob: -8.880400657653809
    7. '```' → logprob: -9.630400657653809
    8. 'ition' → logprob: -9.630400657653809
    9. 'lation' → logprob: -10.255400657653809
    10. 'at' → logprob: -10.255400657653809

Token 240: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006296818144619465
    2. '(' → logprob: -5.131296634674072
    3. '(X' → logprob: -8.38129711151123
    4. 'X' → logprob: -10.38129711151123
    5. ' ()' → logprob: -10.50629711151123
    6. '()
' → logprob: -10.63129711151123
    7. '[' → logprob: -11.38129711151123
    8. ' X' → logprob: -11.88129711151123
    9. '<|end|>' → logprob: -12.00629711151123
    10. '   ' → logprob: -12.38129711151123

Token 241: ''un' (ID: 9788)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6737760901451111
    2. ' defaultdict' → logprob: -1.4237761497497559
    3. '(default' → logprob: -1.9237761497497559
    4. 'default' → logprob: -3.173776149749756
    5. '()' → logprob: -4.548776149749756
    6. '[' → logprob: -5.048776149749756
    7. 'a' → logprob: -5.173776149749756
    8. ' un' → logprob: -5.173776149749756
    9. ')' → logprob: -5.173776149749756
    10. ' (' → logprob: -5.423776149749756

Token 242: ' diction' (ID: 155259)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.2858734726905823
    2. 'default' → logprob: -1.7858734130859375
    3. 'list' → logprob: -2.7858734130859375
    4. 'int' → logprob: -4.5358734130859375
    5. 'lambda' → logprob: -5.1608734130859375
    6. 'X' → logprob: -7.0358734130859375
    7. '(int' → logprob: -8.160873413085938
    8. ')' → logprob: -8.160873413085938
    9. 'counter' → logprob: -8.285873413085938
    10. 'A' → logprob: -8.285873413085938

Token 243: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.0016638736706227064
    2. 'ary' → logprob: -6.501663684844971
    3. 'aire' → logprob: -8.876664161682129
    4. 'n' → logprob: -10.876664161682129
    5. 'naires' → logprob: -13.626664161682129
    6. '```' → logprob: -14.501664161682129
    7. 'taire' → logprob: -14.626664161682129
    8. '{' → logprob: -15.626664161682129
    9. '   ' → logprob: -15.876664161682129
    10. 'iaire' → logprob: -16.126663208007812

Token 244: ' spécial' (ID: 40397)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002219368703663349
    2. '()
' → logprob: -6.877219200134277
    3. '(' → logprob: -7.127219200134277
    4. '   ' → logprob: -8.752219200134277
    5. '(int' → logprob: -10.002219200134277
    6. ')' → logprob: -10.127219200134277
    7. '(lambda' → logprob: -10.127219200134277
    8. 'X' → logprob: -10.752219200134277
    9. '<|end|>' → logprob: -11.127219200134277
    10. ' ' → logprob: -11.502219200134277

Token 245: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001810960122384131
    2. '(' → logprob: -7.1268110275268555
    3. '()
' → logprob: -7.3768110275268555
    4. ')' → logprob: -8.876811027526855
    5. '(int' → logprob: -9.251811027526855
    6. '(lambda' → logprob: -9.751811027526855
    7. '()

' → logprob: -10.626811027526855
    8. '   ' → logprob: -11.251811027526855
    9. '[int' → logprob: -12.251811027526855
    10. '[str' → logprob: -12.376811027526855

Token 246: 'default' (ID: 4211)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39720618724823
    2. 'int' → logprob: -1.14720618724823
    3. 'lambda' → logprob: -5.5222063064575195
    4. 'default' → logprob: -5.7722063064575195
    5. 'X' → logprob: -6.3972063064575195
    6. '(int' → logprob: -7.6472063064575195
    7. 'list' → logprob: -8.14720630645752
    8. '),' → logprob: -8.77220630645752
    9. 'dict' → logprob: -9.27220630645752
    10. 'A' → logprob: -9.27220630645752

Token 247: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -13.25000286102295
    3. 'ict' → logprob: -15.62500286102295
    4. '_dict' → logprob: -16.000001907348633
    5. ' dict' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.000001907348633
    7. 'def' → logprob: -17.250001907348633
    8. '_factory' → logprob: -17.375001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'Dict' → logprob: -17.750001907348633

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014919086243025959
    2. ' )' → logprob: -9.12514877319336
    3. '(int' → logprob: -11.62514877319336
    4. '())' → logprob: -11.75014877319336
    5. ',int' → logprob: -12.12514877319336
    6. '()' → logprob: -12.75014877319336
    7. '[int' → logprob: -12.87514877319336
    8. 'int' → logprob: -13.12514877319336
    9. ')`' → logprob: -13.12514877319336
    10. ',' → logprob: -13.25014877319336

Token 249: ' où' (ID: 15113)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035266599152237177
    2. '()
' → logprob: -6.00352668762207
    3. '   ' → logprob: -7.87852668762207
    4. '(' → logprob: -8.37852668762207
    5. ')' → logprob: -8.37852668762207
    6. '(X' → logprob: -9.75352668762207
    7. 'X' → logprob: -10.12852668762207
    8. '()

' → logprob: -10.62852668762207
    9. 'def' → logprob: -10.75352668762207
    10. '(lambda' → logprob: -11.25352668762207

Token 250: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.299530267715454
    2. 'A' → logprob: -1.799530267715454
    3. ' chaque' → logprob: -1.924530267715454
    4. 'X' → logprob: -2.424530267715454
    5. ' la' → logprob: -3.174530267715454
    6. 'l' → logprob: -3.174530267715454
    7. ' les' → logprob: -3.299530267715454
    8. ')' → logprob: -3.799530267715454
    9. ' each' → logprob: -3.799530267715454
    10. 'each' → logprob: -3.799530267715454

Token 251: ' clé' (ID: 83188)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.6379685401916504
    2. 'élé' → logprob: -1.2629685401916504
    3. 'val' → logprob: -2.3879685401916504
    4. 'element' → logprob: -3.8879685401916504
    5. 'cle' → logprob: -4.26296854019165
    6. 'A' → logprob: -4.26296854019165
    7. 'key' → logprob: -4.51296854019165
    8. ' clé' → logprob: -4.88796854019165
    9. 'x' → logprob: -5.13796854019165
    10. 'nombre' → logprob: -5.38796854019165

Token 252: ' inexist' (ID: 170075)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1400777101516724
    2. ' a' → logprob: -1.1400777101516724
    3. ':' → logprob: -3.140077590942383
    4. '   ' → logprob: -3.515077590942383
    5. 'a' → logprob: -3.640077590942383
    6. ' vaut' → logprob: -3.890077590942383
    7. ' ' → logprob: -3.890077590942383
    8. '```' → logprob: -3.890077590942383
    9. '[X' → logprob: -3.890077590942383
    10. '[a' → logprob: -4.015077590942383

Token 253: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8448034524917603
    2. 'e' → logprob: -1.9698034524917603
    3. 'ent' → logprob: -1.9698034524917603
    4. 'def' → logprob: -2.4698033332824707
    5. ')' → logprob: -3.5948033332824707
    6. 't' → logprob: -3.8448033332824707
    7. '  ' → logprob: -4.094803333282471
    8. '       ' → logprob: -4.094803333282471
    9. 'a' → logprob: -4.594803333282471
    10. ' ' → logprob: -4.719803333282471

Token 254: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05495540797710419
    2. ' a' → logprob: -4.17995548248291
    3. 's' → logprob: -4.92995548248291
    4. 'avait' → logprob: -5.30495548248291
    5. ' aura' → logprob: -5.92995548248291
    6. 'in' → logprob: -5.92995548248291
    7. 'poss' → logprob: -6.30495548248291
    8. ' ' → logprob: -6.42995548248291
    9. ']' → logprob: -6.67995548248291
    10. 'pour' → logprob: -6.67995548248291

Token 255: ' pour' (ID: 1930)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5510373711585999
    2. '0' → logprob: -1.551037311553955
    3. 'une' → logprob: -1.926037311553955
    4. 'pour' → logprob: -3.926037311553955
    5. '1' → logprob: -4.676037311553955
    6. ' pour' → logprob: -5.176037311553955
    7. 'val' → logprob: -5.301037311553955
    8. 'la' → logprob: -5.551037311553955
    9. 'sa' → logprob: -5.551037311553955
    10. ' ' → logprob: -5.801037311553955

Token 256: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.991464786347933e-05
    2. ' valeur' → logprob: -10.375060081481934
    3. 'value' → logprob: -10.750060081481934
    4. '0' → logprob: -12.625060081481934
    5. 'default' → logprob: -13.375060081481934
    6. 'une' → logprob: -13.750060081481934
    7. 'la' → logprob: -14.750060081481934
    8. ' val' → logprob: -14.875060081481934
    9. 'vale' → logprob: -15.750060081481934
    10. 'int' → logprob: -16.250059127807617

Token 257: ' par' (ID: 686)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007607220206409693
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.757607460021973
    4. '  ' → logprob: -14.882607460021973
    5. ' ' → logprob: -15.757607460021973
    6. '```' → logprob: -16.507606506347656
    7. ' zéro' → logprob: -16.882606506347656
    8. ' zero' → logprob: -17.257606506347656
    9. '    ' → logprob: -17.507606506347656
    10. 'zero' → logprob: -17.882606506347656

Token 258: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.01787843555212021
    2. 'default' → logprob: -4.392878532409668
    3. ' défaut' → logprob: -5.392878532409668
    4. 'def' → logprob: -7.267878532409668
    5. '0' → logprob: -10.267878532409668
    6. 'd' → logprob: -10.892878532409668
    7. 'Dé' → logprob: -11.392878532409668
    8. '```' → logprob: -11.517878532409668
    9. '1' → logprob: -12.142878532409668
    10. ' ' → logprob: -12.642878532409668

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005312496796250343
    2. ' ' → logprob: -5.255312442779541
    3. '   ' → logprob: -10.0053129196167
    4. '1' → logprob: -10.8803129196167
    5. '(' → logprob: -12.2553129196167
    6. ',' → logprob: -12.7553129196167
    7. ' =' → logprob: -13.7553129196167
    8. '  ' → logprob: -13.8803129196167
    9. '    ' → logprob: -14.1303129196167
    10. ' (' → logprob: -14.2553129196167

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234594456851482
    2. ' ' → logprob: -5.255234718322754
    3. '1' → logprob: -15.255234718322754
    4. '```' → logprob: -16.130233764648438
    5. 'int' → logprob: -16.255233764648438
    6. '(' → logprob: -16.755233764648438
    7. ' zero' → logprob: -17.255233764648438
    8. '   ' → logprob: -17.380233764648438
    9. '  ' → logprob: -17.505233764648438
    10. ' ' → logprob: -17.942733764648438

Token 261: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6988767981529236
    2. '   ' → logprob: -0.8238767981529236
    3. '    
' → logprob: -2.9488768577575684
    4. '
' → logprob: -5.698876857757568
    5. ' )' → logprob: -6.323876857757568
    6. 'X' → logprob: -6.448876857757568
    7. ')
' → logprob: -7.448876857757568
    8. '   
' → logprob: -7.698876857757568
    9. 'for' → logprob: -7.823876857757568
    10. '#' → logprob: -8.19887638092041

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1261512190103531
    2. 'for' → logprob: -3.1261513233184814
    3. ' for' → logprob: -3.3761513233184814
    4. 'prefix' → logprob: -4.876151084899902
    5. ' prefix' → logprob: -5.251151084899902
    6. 'cum' → logprob: -5.751151084899902
    7. 'c' → logprob: -5.876151084899902
    8. '    
' → logprob: -6.126151084899902
    9. ' cumulative' → logprob: -6.751151084899902
    10. ' xor' → logprob: -6.751151084899902

Token 263: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09520449489355087
    2. 'prefix' → logprob: -3.5952045917510986
    3. 'xor' → logprob: -3.7202045917510986
    4. 'current' → logprob: -4.9702043533325195
    5. 'cur' → logprob: -5.2202043533325195
    6. 'c' → logprob: -5.2202043533325195
    7. '   ' → logprob: -5.8452043533325195
    8. 'curr' → logprob: -5.8452043533325195
    9. 's' → logprob: -6.0952043533325195
    10. ' for' → logprob: -6.4702043533325195

Token 264: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016213489696383476
    2. 'current' → logprob: -5.516213417053223
    3. 'prefix' → logprob: -5.766213417053223
    4. 'i' → logprob: -6.391213417053223
    5. ' for' → logprob: -6.766213417053223
    6. 'cur' → logprob: -7.016213417053223
    7. 'curr' → logprob: -7.016213417053223
    8. 'left' → logprob: -7.016213417053223
    9. 'c' → logprob: -7.641213417053223
    10. 'count' → logprob: -7.891213417053223

Token 265: 'but' (ID: 8293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03183084353804588
    2. 'f' → logprob: -3.5318307876586914
    3. 'but' → logprob: -6.531830787658691
    4. ' for' → logprob: -7.906830787658691
    5. '#' → logprob: -9.656830787658691
    6. '```' → logprob: -9.781830787658691
    7. 'fi' → logprob: -10.156830787658691
    8. 'fin' → logprob: -11.156830787658691
    9. '   ' → logprob: -11.406830787658691
    10. 'pour' → logprob: -12.406830787658691

Token 266: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2951017916202545
    2. 'for' → logprob: -2.0451018810272217
    3. '   ' → logprob: -2.4201018810272217
    4. ' of' → logprob: -3.9201018810272217
    5. ' de' → logprob: -4.170101642608643
    6. '	for' → logprob: -7.670101642608643
    7. '    ' → logprob: -8.0451021194458
    8. ' ' → logprob: -8.0451021194458
    9. ':' → logprob: -8.4201021194458
    10. '  ' → logprob: -9.0451021194458

Token 267: ''une' (ID: 13337)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.08401358127594
    2. 'for' → logprob: -1.33401358127594
    3. ' for' → logprob: -1.58401358127594
    4. ' la' → logprob: -2.2090134620666504
    5. 'range' → logprob: -3.0840134620666504
    6. 'e' → logprob: -3.7090134620666504
    7. '   ' → logprob: -6.08401346206665
    8. '_' → logprob: -6.20901346206665
    9. ' a' → logprob: -6.33401346206665
    10. ' e' → logprob: -6.83401346206665

Token 268: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010216859169304371
    2. ' for' → logprob: -4.63521671295166
    3. 'bou' → logprob: -8.13521671295166
    4. ' boucle' → logprob: -9.26021671295166
    5. 'range' → logprob: -9.63521671295166
    6. ' range' → logprob: -13.13521671295166
    7. ' bou' → logprob: -13.88521671295166
    8. 'loop' → logprob: -14.51021671295166
    9. ':' → logprob: -14.63521671295166
    10. ' loop' → logprob: -14.76021671295166

Token 269: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07232587784528732
    2. '   ' → logprob: -3.3223259449005127
    3. 'for' → logprob: -3.4473259449005127
    4. ' in' → logprob: -6.697325706481934
    5. ' range' → logprob: -7.947325706481934
    6. ' i' → logprob: -9.447325706481934
    7. 'in' → logprob: -9.447325706481934
    8. 'range' → logprob: -9.822325706481934
    9. ',' → logprob: -10.947325706481934
    10. '(range' → logprob: -11.572325706481934

Token 270: ' parc' (ID: 22138)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2811793386936188
    2. ' range' → logprob: -1.9061793088912964
    3. ' for' → logprob: -3.281179428100586
    4. 'i' → logprob: -3.781179428100586
    5. ' iter' → logprob: -4.156179428100586
    6. 'range' → logprob: -5.281179428100586
    7. 'for' → logprob: -5.281179428100586
    8. ' in' → logprob: -5.656179428100586
    9. ' traverse' → logprob: -6.031179428100586
    10. '_' → logprob: -7.031179428100586

Token 271: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.002601341577246785
    2. 'oure' → logprob: -6.127601146697998
    3. 'ours' → logprob: -8.002601623535156
    4. 'our' → logprob: -10.002601623535156
    5. 'ourse' → logprob: -10.627601623535156
    6. 'o' → logprob: -12.502601623535156
    7. 'orre' → logprob: -12.752601623535156
    8. 'court' → logprob: -14.002601623535156
    9. 'urse' → logprob: -14.252601623535156
    10. 't' → logprob: -14.252601623535156

Token 272: ' simult' (ID: 27260)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5088065266609192
    2. 'A' → logprob: -2.2588064670562744
    3. 'range' → logprob: -2.2588064670562744
    4. ' A' → logprob: -2.3838064670562744
    5. ' i' → logprob: -2.6338064670562744
    6. 'i' → logprob: -3.7588064670562744
    7. 'a' → logprob: -7.6338067054748535
    8. ' la' → logprob: -7.6338067054748535
    9. ' a' → logprob: -7.6338067054748535
    10. ' ' → logprob: -8.758806228637695

Token 273: 'anément' (ID: 193192)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0292174816131592
    2. 'ot' → logprob: -2.404217481613159
    3. 'ôt' → logprob: -2.904217481613159
    4. 'or' → logprob: -3.154217481613159
    5. 'ur' → logprob: -3.279217481613159
    6. 'ure' → logprob: -3.404217481613159
    7. 'urer' → logprob: -3.404217481613159
    8. 'orer' → logprob: -3.529217481613159
    9. 'ours' → logprob: -3.654217481613159
    10. '(A' → logprob: -3.779217481613159

Token 274: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.46258828043937683
    2. 'enumer' → logprob: -1.3375883102416992
    3. ' range' → logprob: -3.337588310241699
    4. 'A' → logprob: -3.462588310241699
    5. ' enumerate' → logprob: -3.837588310241699
    6. '(range' → logprob: -4.337588310241699
    7. ' A' → logprob: -5.712588310241699
    8. 'zip' → logprob: -6.587588310241699
    9. ' zip' → logprob: -7.462588310241699
    10. '(A' → logprob: -7.962588310241699

Token 275: ' indices' (ID: 30378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48546454310417175
    2. 'enumer' → logprob: -1.4854645729064941
    3. 'A' → logprob: -1.8604645729064941
    4. 'zip' → logprob: -6.735464572906494
    5. ' range' → logprob: -7.485464572906494
    6. ' enumerate' → logprob: -8.235464096069336
    7. 'i' → logprob: -8.610464096069336
    8. ' A' → logprob: -9.235464096069336
    9. 'index' → logprob: -9.610464096069336
    10. '(range' → logprob: -9.985464096069336

Token 276: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2201242744922638
    2. ' et' → logprob: -2.3451242446899414
    3. ' and' → logprob: -3.7201242446899414
    4. '(A' → logprob: -3.8451242446899414
    5. '(range' → logprob: -4.095124244689941
    6. 'et' → logprob: -4.345124244689941
    7. '   ' → logprob: -4.970124244689941
    8. 'A' → logprob: -5.095124244689941
    9. 'range' → logprob: -5.845124244689941
    10. ' ,' → logprob: -6.345124244689941

Token 277: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6774258017539978
    2. 'val' → logprob: -1.3024258613586426
    3. ' les' → logprob: -1.6774258613586426
    4. 'values' → logprob: -3.8024258613586426
    5. 'la' → logprob: -5.552425861358643
    6. ' valeurs' → logprob: -6.302425861358643
    7. ' la' → logprob: -6.552425861358643
    8. 'A' → logprob: -6.677425861358643
    9. ' val' → logprob: -7.302425861358643
    10. ' values' → logprob: -7.302425861358643

Token 278: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07759671658277512
    2. 'élé' → logprob: -3.077596664428711
    3. ' valeurs' → logprob: -3.577596664428711
    4. ' éléments' → logprob: -7.577596664428711
    5. 'values' → logprob: -9.202596664428711
    6. 'elements' → logprob: -11.202596664428711
    7. ' val' → logprob: -11.702596664428711
    8. 'é' → logprob: -13.077596664428711
    9. ' elements' → logprob: -13.577596664428711
    10. ' values' → logprob: -13.577596664428711

Token 279: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5256044864654541
    2. '   ' → logprob: -1.150604486465454
    3. 'for' → logprob: -2.650604486465454
    4. ',' → logprob: -4.900604248046875
    5. ' of' → logprob: -5.650604248046875
    6. ' in' → logprob: -5.650604248046875
    7. 'enumer' → logprob: -6.275604248046875
    8. 'A' → logprob: -6.650604248046875
    9. ' de' → logprob: -6.900604248046875
    10. ' pour' → logprob: -7.525604248046875

Token 280: ' la' (ID: 557)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.1206434965133667
    2. 'A' → logprob: -2.6206436157226562
    3. ' enumerate' → logprob: -3.2456436157226562
    4. ' A' → logprob: -6.245643615722656
    5. 'range' → logprob: -11.995643615722656
    6. ' enumer' → logprob: -13.495643615722656
    7. 'en' → logprob: -14.120643615722656
    8. 'enum' → logprob: -14.620643615722656
    9. ' enumeration' → logprob: -14.745643615722656
    10. '(A' → logprob: -15.120643615722656

Token 281: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09247121214866638
    2. ' A' → logprob: -2.467471122741699
    3. 'enumer' → logprob: -5.717471122741699
    4. 'array' → logprob: -9.8424711227417
    5. 'liste' → logprob: -9.8424711227417
    6. ' enumerate' → logprob: -10.5924711227417
    7. ' array' → logprob: -10.5924711227417
    8. ' tableau' → logprob: -10.9674711227417
    9. 'list' → logprob: -11.4674711227417
    10. 'table' → logprob: -11.4674711227417

Token 282: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6513364315032959
    2. ' for' → logprob: -1.151336431503296
    3. 'A' → logprob: -2.151336431503296
    4. ' A' → logprob: -3.651336431503296
    5. 'enumer' → logprob: -4.276336669921875
    6. ' enumerate' → logprob: -5.151336669921875
    7. '   ' → logprob: -9.026336669921875
    8. '(A' → logprob: -9.026336669921875
    9. 'range' → logprob: -9.776336669921875
    10. 'zip' → logprob: -10.026336669921875

Token 283: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7619220018386841
    2. ' for' → logprob: -1.261922001838684
    3. '   ' → logprob: -1.386922001838684
    4. '
' → logprob: -9.011921882629395
    5. '	for' → logprob: -9.761921882629395
    6. 'in' → logprob: -10.136921882629395
    7. 'enumer' → logprob: -11.761921882629395
    8. '```' → logprob: -11.761921882629395
    9. '(' → logprob: -11.886921882629395
    10. ' in' → logprob: -12.011921882629395

Token 284: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2586206793785095
    2. 'for' → logprob: -1.5086207389831543
    3. '   ' → logprob: -5.133620738983154
    4. '```' → logprob: -8.008620262145996
    5. 'enumer' → logprob: -8.258620262145996
    6. '<|end|>' → logprob: -10.258620262145996
    7. 'n' → logprob: -10.383620262145996
    8. 'in' → logprob: -10.383620262145996
    9. ' in' → logprob: -10.383620262145996
    10. '    
' → logprob: -11.383620262145996

Token 285: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3971189260482788
    2. 'for' → logprob: -1.3971189260482788
    3. '   ' → logprob: -2.5221190452575684
    4. '```' → logprob: -9.52211856842041
    5. '    
' → logprob: -10.52211856842041
    6. 'enumer' → logprob: -11.27211856842041
    7. 'n' → logprob: -11.89711856842041
    8. '	for' → logprob: -12.14711856842041
    9. 'range' → logprob: -12.27211856842041
    10. 'in' → logprob: -12.89711856842041

Token 286: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3909108638763428
    2. ' for' → logprob: -1.1409108638763428
    3. '   ' → logprob: -5.515911102294922
    4. '	for' → logprob: -11.890911102294922
    5. ' ' → logprob: -14.015911102294922
    6. '    
' → logprob: -14.765911102294922
    7. '  ' → logprob: -15.140911102294922
    8. ' i' → logprob: -15.390911102294922
    9. 'i' → logprob: -16.015911102294922
    10. '_for' → logprob: -16.015911102294922

Token 287: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14277686178684235
    2. ' for' → logprob: -2.0177769660949707
    3. 'enumer' → logprob: -9.642776489257812
    4. 'range' → logprob: -11.267776489257812
    5. 'n' → logprob: -11.642776489257812
    6. ' range' → logprob: -12.392776489257812
    7. 'i' → logprob: -13.642776489257812
    8. ' in' → logprob: -13.892776489257812
    9. 'r' → logprob: -14.142776489257812
    10. ' ' → logprob: -14.267776489257812

Token 288: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5759438276290894
    2. 'enumer' → logprob: -0.8259438276290894
    3. ' for' → logprob: -13.200943946838379
    4. 'range' → logprob: -14.075943946838379
    5. 'for' → logprob: -14.075943946838379
    6. ' range' → logprob: -14.575943946838379
    7. ' enumer' → logprob: -15.450943946838379
    8. ' ' → logprob: -15.950943946838379
    9. ' enumeration' → logprob: -16.200942993164062
    10. 'en' → logprob: -16.700942993164062

Token 289: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00326208071783185
    2. '(' → logprob: -6.128262042999268
    3. '   ' → logprob: -7.628262042999268
    4. 'A' → logprob: -9.128262519836426
    5. ' permet' → logprob: -9.628262519836426
    6. ' ' → logprob: -9.753262519836426
    7. ')' → logprob: -9.878262519836426
    8. ' continue' → logprob: -10.003262519836426
    9. 'continue' → logprob: -10.003262519836426
    10. '```' → logprob: -10.128262519836426

Token 290: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0057517304085195065
    2. ')' → logprob: -5.505751609802246
    3. '):
' → logprob: -6.505751609802246
    4. ',' → logprob: -8.880751609802246
    5. ' ):' → logprob: -11.380751609802246
    6. ')):' → logprob: -12.130751609802246
    7. '):

' → logprob: -12.380751609802246
    8. '():' → logprob: -12.505751609802246
    9. '),' → logprob: -13.255751609802246
    10. 'for' → logprob: -13.380751609802246

Token 291: ' gén' (ID: 15330)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6339377164840698
    2. ':' → logprob: -1.3839377164840698
    3. ' for' → logprob: -1.6339377164840698
    4. ')' → logprob: -5.258937835693359
    5. ':
' → logprob: -5.508937835693359
    6. ' provides' → logprob: -5.633937835693359
    7. 'in' → logprob: -5.633937835693359
    8. '):' → logprob: -6.383937835693359
    9. ' permet' → logprob: -7.133937835693359
    10. ',' → logprob: -7.133937835693359

Token 292: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0828700140118599
    2. 'er' → logprob: -2.5828700065612793
    3. 'ere' → logprob: -6.707870006561279
    4. 'èr' → logprob: -6.832870006561279
    5. '```' → logprob: -7.832870006561279
    6. 'èrent' → logprob: -8.207870483398438
    7. 'érez' → logprob: -8.332870483398438
    8. 'érer' → logprob: -8.457870483398438
    9. '   ' → logprob: -9.082870483398438
    10. 'érateur' → logprob: -9.707870483398438

Token 293: ' des' (ID: 731)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9414395689964294
    2. '(' → logprob: -1.5664396286010742
    3. '(index' → logprob: -2.441439628601074
    4. '(i' → logprob: -3.191439628601074
    5. ' une' → logprob: -3.316439628601074
    6. 'enumer' → logprob: -3.816439628601074
    7. ' pairs' → logprob: -3.816439628601074
    8. ' indices' → logprob: -3.941439628601074
    9. '(indices' → logprob: -4.066439628601074
    10. 'pairs' → logprob: -4.066439628601074

Token 294: ' p' (ID: 275)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.574627697467804
    2. ' indices' → logprob: -2.199627637863159
    3. 'index' → logprob: -2.574627637863159
    4. ' tuples' → logprob: -2.824627637863159
    5. 'indice' → logprob: -3.449627637863159
    6. ' pairs' → logprob: -3.574627637863159
    7. '(' → logprob: -3.574627637863159
    8. 'enumer' → logprob: -3.824627637863159
    9. 'pairs' → logprob: -4.199627876281738
    10. ' couples' → logprob: -4.699627876281738

Token 295: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9871048331260681
    2. 'airs' → logprob: -1.362104892730713
    3. 'aires' → logprob: -1.737104892730713
    4. 'range' → logprob: -2.487104892730713
    5. 'ro' → logprob: -3.362104892730713
    6. 'air' → logprob: -3.612104892730713
    7. 'ar' → logprob: -3.737104892730713
    8. 'erm' → logprob: -5.862104892730713
    9. 'aire' → logprob: -6.237104892730713
    10. 'robes' → logprob: -6.237104892730713

Token 296: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3839642107486725
    2. '(index' → logprob: -1.75896418094635
    3. '(' → logprob: -2.3839643001556396
    4. ' (' → logprob: -4.2589640617370605
    5. '(
' → logprob: -4.3839640617370605
    6. '(indices' → logprob: -5.1339640617370605
    7. '(ind' → logprob: -5.1339640617370605
    8. '(en' → logprob: -5.2589640617370605
    9. 'de' → logprob: -6.3839640617370605
    10. '   ' → logprob: -6.6339640617370605

Token 297: 'indice' (ID: 176697)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5417391657829285
    2. 'index' → logprob: -1.6667392253875732
    3. ' i' → logprob: -1.9167392253875732
    4. ' index' → logprob: -2.7917392253875732
    5. 'indice' → logprob: -3.9167392253875732
    6. ' indice' → logprob: -7.916738986968994
    7. 'idx' → logprob: -8.666739463806152
    8. ')' → logprob: -9.291739463806152
    9. 'indices' → logprob: -9.416739463806152
    10. 'ind' → logprob: -9.541739463806152

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001907855912577361
    2. ',A' → logprob: -10.000190734863281
    3. 's' → logprob: -10.125190734863281
    4. ' ,' → logprob: -10.250190734863281
    5. '(A' → logprob: -10.750190734863281
    6. '(' → logprob: -11.625190734863281
    7. 'A' → logprob: -12.000190734863281
    8. '   ' → logprob: -12.375190734863281
    9. ',
' → logprob: -12.375190734863281
    10. ')' → logprob: -12.625190734863281

Token 299: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1439807415008545
    2. ' valeur' → logprob: -2.0189807415008545
    3. 'value' → logprob: -7.518980979919434
    4. 'élé' → logprob: -7.893980979919434
    5. ' val' → logprob: -8.143980979919434
    6. 'element' → logprob: -10.643980979919434
    7. ' value' → logprob: -10.768980979919434
    8. ' élément' → logprob: -11.143980979919434
    9. '```' → logprob: -12.018980979919434
    10. ' ' → logprob: -12.518980979919434

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06495071202516556
    2. '):' → logprob: -3.314950704574585
    3. '),' → logprob: -4.689950942993164
    4. '   ' → logprob: -4.689950942993164
    5. '):
' → logprob: -5.689950942993164
    6. 'for' → logprob: -6.189950942993164
    7. ',' → logprob: -7.064950942993164
    8. 'enumer' → logprob: -7.439950942993164
    9. 'A' → logprob: -8.564950942993164
    10. '(en' → logprob: -9.064950942993164

Token 301: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.568436861038208
    2. 'for' → logprob: -1.693436861038208
    3. ':' → logprob: -2.193436861038208
    4. ' for' → logprob: -2.318436861038208
    5. '):' → logprob: -3.568436861038208
    6. '):
' → logprob: -6.068436622619629
    7. ':
' → logprob: -6.193436622619629
    8. ',' → logprob: -6.193436622619629
    9. '(A' → logprob: -6.568436622619629
    10. '(' → logprob: -7.568436622619629

Token 302: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1992262452840805
    2. ' i' → logprob: -1.8242262601852417
    3. 'index' → logprob: -4.324226379394531
    4. ' index' → logprob: -5.949226379394531
    5. 'indice' → logprob: -6.074226379394531
    6. 'ind' → logprob: -7.449226379394531
    7. 'range' → logprob: -8.824226379394531
    8. 'idx' → logprob: -9.324226379394531
    9. ' ind' → logprob: -9.449226379394531
    10. ' range' → logprob: -9.949226379394531

Token 303: ' élément' (ID: 99627)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07433393597602844
    2. 'i' → logprob: -2.699333906173706
    3. ' index' → logprob: -5.824334144592285
    4. 'indice' → logprob: -7.324334144592285
    5. 'index' → logprob: -7.949334144592285
    6. ' indice' → logprob: -8.324334144592285
    7. ' idx' → logprob: -9.699334144592285
    8. ' ' → logprob: -10.699334144592285
    9. '(i' → logprob: -11.824334144592285
    10. ' a' → logprob: -11.824334144592285

Token 304: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3011312484741211
    2. '(A' → logprob: -2.426131248474121
    3. ' for' → logprob: -2.551131248474121
    4. 'A' → logprob: -3.676131248474121
    5. ',' → logprob: -3.676131248474121
    6. 'for' → logprob: -3.801131248474121
    7. ' en' → logprob: -5.676131248474121
    8. ' A' → logprob: -5.801131248474121
    9. ' in' → logprob: -5.926131248474121
    10. 'in' → logprob: -6.051131248474121

Token 305: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023253746330738068
    2. ' A' → logprob: -3.7732536792755127
    3. 'enumer' → logprob: -12.273253440856934
    4. ' la' → logprob: -13.148253440856934
    5. 's' → logprob: -15.023253440856934
    6. 'a' → logprob: -15.273253440856934
    7. ' enumerate' → logprob: -15.898253440856934
    8. '	A' → logprob: -16.02325439453125
    9. 'the' → logprob: -16.02325439453125
    10. 'l' → logprob: -16.14825439453125

Token 306: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.015378374606370926
    2. ' A' → logprob: -4.390378475189209
    3. 'enumer' → logprob: -6.390378475189209
    4. 'liste' → logprob: -7.015378475189209
    5. 'list' → logprob: -9.14037799835205
    6. ' liste' → logprob: -9.64037799835205
    7. 'range' → logprob: -10.64037799835205
    8. 'a' → logprob: -11.39037799835205
    9. '```' → logprob: -11.39037799835205
    10. ' enumerate' → logprob: -11.64037799835205

Token 307: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46245276927948
    2. ' for' → logprob: -1.83745276927948
    3. 'for' → logprob: -2.3374528884887695
    4. ':' → logprob: -2.8374528884887695
    5. 'A' → logprob: -3.4624528884887695
    6. ' A' → logprob: -5.3374528884887695
    7. '):' → logprob: -5.3374528884887695
    8. '(A' → logprob: -5.3374528884887695
    9. ':
' → logprob: -5.7124528884887695
    10. '):
' → logprob: -6.2124528884887695

Token 308: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3302198052406311
    2. ':' → logprob: -1.5802197456359863
    3. ' for' → logprob: -3.0802197456359863
    4. 'for' → logprob: -4.330219745635986
    5. '):' → logprob: -4.705219745635986
    6. ':
' → logprob: -5.955219745635986
    7. '):
' → logprob: -6.455219745635986
    8. '
' → logprob: -7.330219745635986
    9. '():' → logprob: -7.455219745635986
    10. ',' → logprob: -7.955219745635986

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6443193554878235
    2. ' for' → logprob: -1.2693192958831787
    3. 'for' → logprob: -1.6443192958831787
    4. '    
' → logprob: -8.394319534301758
    5. ':' → logprob: -8.519319534301758
    6. ')' → logprob: -9.019319534301758
    7. ',' → logprob: -9.894319534301758
    8. '	for' → logprob: -9.894319534301758
    9. ' 
' → logprob: -10.644319534301758
    10. '```' → logprob: -10.894319534301758

Token 310: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.43260106444358826
    2. ' for' → logprob: -1.0576010942459106
    3. '   ' → logprob: -5.557600975036621
    4. '```' → logprob: -10.932600975036621
    5. '    
' → logprob: -11.557600975036621
    6. '	for' → logprob: -12.807600975036621
    7. '
' → logprob: -13.307600975036621
    8. ':' → logprob: -14.682600975036621
    9. ',' → logprob: -15.057600975036621
    10. ' ' → logprob: -15.182600975036621

Token 311: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.430806964635849
    2. ' i' → logprob: -1.0558069944381714
    3. 'idx' → logprob: -7.305807113647461
    4. ' idx' → logprob: -7.305807113647461
    5. 'index' → logprob: -8.555807113647461
    6. ' index' → logprob: -9.555807113647461
    7. '   ' → logprob: -9.805807113647461
    8. 'x' → logprob: -9.868307113647461
    9. '	i' → logprob: -9.993307113647461
    10. '```' → logprob: -10.118307113647461

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004085083492100239
    2. ' ,' → logprob: -8.250408172607422
    3. 'in' → logprob: -9.750408172607422
    4. ' in' → logprob: -9.875408172607422
    5. ',v' → logprob: -11.750408172607422
    6. ',value' → logprob: -12.000408172607422
    7. ',val' → logprob: -12.750408172607422
    8. ',in' → logprob: -13.000408172607422
    9. ',n' → logprob: -13.125408172607422
    10. ',A' → logprob: -13.250408172607422

Token 313: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.253543883562088
    2. 'x' → logprob: -1.6285438537597656
    3. 'v' → logprob: -3.8785438537597656
    4. 'val' → logprob: -6.003543853759766
    5. ' a' → logprob: -6.628543853759766
    6. 'ai' → logprob: -7.003543853759766
    7. 'value' → logprob: -7.128543853759766
    8. ' x' → logprob: -7.503543853759766
    9. 'num' → logprob: -8.003543853759766
    10. 'e' → logprob: -8.128543853759766

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07928731292486191
    2. 'in' → logprob: -2.57928729057312
    3. 's' → logprob: -8.8292875289917
    4. ',' → logprob: -10.2042875289917
    5. 'n' → logprob: -10.2042875289917
    6. ' ' → logprob: -10.2042875289917
    7. 'a' → logprob: -10.2042875289917
    8. ')' → logprob: -10.3292875289917
    9. '<|end|>' → logprob: -10.9542875289917
    10. 'd' → logprob: -12.0792875289917

Token 315: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3132631182670593
    2. ' enumerate' → logprob: -1.313263177871704
    3. 'en' → logprob: -14.063262939453125
    4. '```' → logprob: -15.563262939453125
    5. ' enumer' → logprob: -15.813262939453125
    6. '(en' → logprob: -16.063262939453125
    7. '.enumer' → logprob: -17.063262939453125
    8. ' enumeration' → logprob: -17.313262939453125
    9. 'Enumer' → logprob: -17.563262939453125
    10. ' ' → logprob: -17.688262939453125

Token 316: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.759734732331708e-05
    2. 'A' → logprob: -11.125017166137695
    3. '(' → logprob: -12.875017166137695
    4. ' A' → logprob: -16.250017166137695
    5. ' (' → logprob: -16.875017166137695
    6. ')' → logprob: -17.500017166137695
    7. 's' → logprob: -17.625017166137695
    8. '(
' → logprob: -18.250017166137695
    9. ',' → logprob: -18.500017166137695
    10. ',A' → logprob: -18.500017166137695

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011331788846291602
    2. ':' → logprob: -9.750113487243652
    3. '):
' → logprob: -10.250113487243652
    4. ')' → logprob: -11.250113487243652
    5. ' ):' → logprob: -12.375113487243652
    6. '():' → logprob: -13.625113487243652
    7. ',' → logprob: -14.875113487243652
    8. '}:' → logprob: -15.750113487243652
    9. '):
' → logprob: -15.875113487243652
    10. '   ' → logprob: -16.000112533569336

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003844255581498146
    2. 'X' → logprob: -6.253844261169434
    3. '   ' → logprob: -6.628844261169434
    4. ' X' → logprob: -8.128844261169434
    5. '        
' → logprob: -8.753844261169434
    6. '```' → logprob: -9.878844261169434
    7. '    
' → logprob: -10.628844261169434
    8. ':' → logprob: -11.753844261169434
    9. 'x' → logprob: -12.003844261169434
    10. '    ' → logprob: -12.128844261169434

Token 319: ' #' (ID: 1069)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9275487065315247
    2. '   ' → logprob: -0.9275487065315247
    3. 'ret' → logprob: -1.8025486469268799
    4. 'if' → logprob: -4.052548885345459
    5. ' X' → logprob: -4.677548885345459
    6. ' ret' → logprob: -5.552548885345459
    7. 'x' → logprob: -6.177548885345459
    8. 'key' → logprob: -6.177548885345459
    9. '       ' → logprob: -6.302548885345459
    10. ' if' → logprob: -6.552548885345459

Token 320: ' Pour' (ID: 13931)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.19140926003456116
    2. 'ret' → logprob: -2.4414093494415283
    3. 'if' → logprob: -3.3164093494415283
    4. '   ' → logprob: -4.816409111022949
    5. 'x' → logprob: -5.066409111022949
    6. 'key' → logprob: -5.066409111022949
    7. 'val' → logprob: -5.191409111022949
    8. 'for' → logprob: -5.566409111022949
    9. 'xor' → logprob: -5.566409111022949
    10. 'while' → logprob: -6.066409111022949

Token 321: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.6912829875946045
    2. 'x' → logprob: -2.1912829875946045
    3. ' x' → logprob: -2.3162829875946045
    4. 'a' → logprob: -2.3162829875946045
    5. 'j' → logprob: -2.4412829875946045
    6. ' i' → logprob: -2.4412829875946045
    7. 'i' → logprob: -2.6912829875946045
    8. 'X' → logprob: -3.1912829875946045
    9. ' chaque' → logprob: -3.1912829875946045
    10. ' a' → logprob: -3.4412829875946045

Token 322: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1238912343978882
    2. 'a' → logprob: -1.4988912343978882
    3. 'x' → logprob: -2.7488913536071777
    4. ' for' → logprob: -2.9988913536071777
    5. ' x' → logprob: -3.1238913536071777
    6. ' j' → logprob: -3.2488913536071777
    7. 'val' → logprob: -3.2488913536071777
    8. 'for' → logprob: -3.6238913536071777
    9. 'j' → logprob: -3.7488913536071777
    10. ' value' → logprob: -3.8738913536071777

Token 323: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7797458171844482
    2. '   ' → logprob: -1.1547458171844482
    3. ':' → logprob: -1.6547458171844482
    4. '       ' → logprob: -4.029746055603027
    5. ' ,' → logprob: -4.779746055603027
    6. ':
' → logprob: -5.904746055603027
    7. ' :' → logprob: -7.154746055603027
    8. 'a' → logprob: -7.154746055603027
    9. ' if' → logprob: -7.529746055603027
    10. ' a' → logprob: -7.654746055603027

Token 324: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10781734436750412
    2. ':
' → logprob: -2.3578174114227295
    3. ',' → logprob: -5.23281717300415
    4. '   ' → logprob: -6.48281717300415
    5. ' :' → logprob: -8.107817649841309
    6. '       ' → logprob: -8.607817649841309
    7. ' :
' → logprob: -9.607817649841309
    8. '=' → logprob: -10.482817649841309
    9. ' in' → logprob: -10.857817649841309
    10. '):
' → logprob: -10.982817649841309

Token 325: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0104564428329468
    2. 'l' → logprob: -1.0104564428329468
    3. 'index' → logprob: -1.7604564428329468
    4. 'la' → logprob: -3.3854565620422363
    5. 'position' → logprob: -4.260456562042236
    6. 'g' → logprob: -4.385456562042236
    7. 'indice' → logprob: -4.385456562042236
    8. 'part' → logprob: -5.135456562042236
    9. '0' → logprob: -5.510456562042236
    10. 'c' → logprob: -6.510456562042236

Token 326: ''ind' (ID: 82245)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43471387028694153
    2. 'i' → logprob: -1.5597138404846191
    3. 'for' → logprob: -3.059713840484619
    4. 'A' → logprob: -3.934713840484619
    5. 'a' → logprob: -4.059713840484619
    6. 'X' → logprob: -4.309713840484619
    7. 'enumer' → logprob: -4.434713840484619
    8. 'e' → logprob: -5.059713840484619
    9. ' range' → logprob: -5.309713840484619
    10. ''' → logprob: -5.434713840484619

Token 327: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.025044290348887444
    2. 'ice' → logprob: -3.7750442028045654
    3. 'e' → logprob: -6.6500444412231445
    4. 'ices' → logprob: -8.525044441223145
    5. 'x' → logprob: -9.525044441223145
    6. 'ce' → logprob: -10.150044441223145
    7. 'i' → logprob: -10.275044441223145
    8. 'ent' → logprob: -10.900044441223145
    9. 'xe' → logprob: -10.900044441223145
    10. 'exe' → logprob: -10.900044441223145

Token 328: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28234535455703735
    2. ' i' → logprob: -1.4073452949523926
    3. '0' → logprob: -7.032345294952393
    4. ' ' → logprob: -8.40734577178955
    5. '   ' → logprob: -10.28234577178955
    6. 'a' → logprob: -10.65734577178955
    7. ' a' → logprob: -11.78234577178955
    8. ',' → logprob: -11.78234577178955
    9. '  ' → logprob: -12.40734577178955
    10. '[i' → logprob: -13.28234577178955

Token 329: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019876915961503983
    2. ':
' → logprob: -4.269876956939697
    3. ',' → logprob: -5.269876956939697
    4. '   ' → logprob: -7.644876956939697
    5. ' :' → logprob: -10.769876480102539
    6. '       ' → logprob: -11.019876480102539
    7. '):' → logprob: -11.394876480102539
    8. '):
' → logprob: -12.144876480102539
    9. ' ,' → logprob: -12.394876480102539
    10. ' :
' → logprob: -12.644876480102539

Token 330: ' on' (ID: 402)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.3258562088012695
    2. '       ' → logprob: -1.7008562088012695
    3. ' ret' → logprob: -1.8258562088012695
    4. '   ' → logprob: -1.9508562088012695
    5. 'X' → logprob: -2.8258562088012695
    6. ' for' → logprob: -2.8258562088012695
    7. 'for' → logprob: -2.9508562088012695
    8. ' X' → logprob: -4.4508562088012695
    9. ' key' → logprob: -4.5758562088012695
    10. 'val' → logprob: -4.8258562088012695

Token 331: ' calcul' (ID: 7559)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.38099369406700134
    2. 'for' → logprob: -1.7559937238693237
    3. ' for' → logprob: -2.755993604660034
    4. 'X' → logprob: -3.505993604660034
    5. ' ret' → logprob: -3.630993604660034
    6. ' X' → logprob: -5.505993843078613
    7. 'if' → logprob: -5.630993843078613
    8. '#' → logprob: -5.755993843078613
    9. '   ' → logprob: -5.880993843078613
    10. ':' → logprob: -6.130993843078613

Token 332: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006934931734576821
    2. 'le' → logprob: -8.125693321228027
    3. 'ate' → logprob: -8.125693321228027
    4. 'a' → logprob: -10.375693321228027
    5. 'te' → logprob: -10.500693321228027
    6. 'ule' → logprob: -11.000693321228027
    7. '   ' → logprob: -11.625693321228027
    8. 'cule' → logprob: -12.375693321228027
    9. 'er' → logprob: -12.625693321228027
    10. '#' → logprob: -13.500693321228027

Token 333: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.659500002861023
    2. 'ret' → logprob: -2.0345001220703125
    3. 'x' → logprob: -2.5345001220703125
    4. ' l' → logprob: -2.6595001220703125
    5. 'l' → logprob: -2.9095001220703125
    6. ' ret' → logprob: -3.1595001220703125
    7. ' ' → logprob: -3.2845001220703125
    8. ' le' → logprob: -3.2845001220703125
    9. ' the' → logprob: -3.5345001220703125
    10. ' for' → logprob: -3.6595001220703125

Token 334: ' clé' (ID: 83188)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3919302225112915
    2. 'x' → logprob: -1.6419302225112915
    3. 'ret' → logprob: -2.016930103302002
    4. 'X' → logprob: -2.266930103302002
    5. 'xor' → logprob: -2.516930103302002
    6. 'key' → logprob: -3.016930103302002
    7. 'prefix' → logprob: -3.641930103302002
    8. 'r' → logprob: -3.641930103302002
    9. 'i' → logprob: -3.766930103302002
    10. 'tmp' → logprob: -4.391930103302002

Token 335: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1538197994232178
    2. ' =' → logprob: -1.1538197994232178
    3. ':' → logprob: -1.2788197994232178
    4. '    ' → logprob: -3.9038197994232178
    5. '       ' → logprob: -4.028820037841797
    6. '=' → logprob: -4.903820037841797
    7. ',' → logprob: -5.278820037841797
    8. '<|end|>' → logprob: -5.403820037841797
    9. ' ' → logprob: -5.528820037841797
    10. 's' → logprob: -5.778820037841797

Token 336: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17056283354759216
    2. 'i' → logprob: -1.9205628633499146
    3. 'X' → logprob: -5.795562744140625
    4. ' a' → logprob: -5.920562744140625
    5. 'A' → logprob: -6.170562744140625
    6. ' i' → logprob: -7.045562744140625
    7. ')' → logprob: -7.420562744140625
    8. '(i' → logprob: -8.420562744140625
    9. '(a' → logprob: -8.795562744140625
    10. ' (' → logprob: -9.045562744140625

Token 337: ' +' (ID: 659)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7446940541267395
    2. ' ^' → logprob: -1.6196939945220947
    3. '-' → logprob: -1.7446939945220947
    4. ' -' → logprob: -1.9946939945220947
    5. ',' → logprob: -5.244694232940674
    6. ')' → logprob: -5.494694232940674
    7. '+' → logprob: -6.119694232940674
    8. ' ' → logprob: -6.244694232940674
    9. ' +' → logprob: -7.244694232940674
    10. '^)' → logprob: -7.619694232940674

Token 338: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16035938262939453
    2. ' i' → logprob: -1.9103593826293945
    3. ')' → logprob: -9.910359382629395
    4. ' (' → logprob: -10.535359382629395
    5. ' ' → logprob: -10.785359382629395
    6. '(i' → logprob: -10.910359382629395
    7. ')i' → logprob: -11.410359382629395
    8. 'a' → logprob: -13.410359382629395
    9. '(' → logprob: -13.535359382629395
    10. '	i' → logprob: -13.660359382629395

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012991653056815267
    2. ' )' → logprob: -7.6262993812561035
    3. '))' → logprob: -8.501298904418945
    4. ')+' → logprob: -8.876298904418945
    5. ')
' → logprob: -9.001298904418945
    6. '):' → logprob: -9.501298904418945
    7. '+' → logprob: -9.501298904418945
    8. '   ' → logprob: -9.626298904418945
    9. ')))' → logprob: -11.376298904418945
    10. '       ' → logprob: -11.626298904418945

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08110367506742477
    2. ':' → logprob: -2.831103563308716
    3. '):' → logprob: -4.206103801727295
    4. ')' → logprob: -5.706103801727295
    5. '<|end|>' → logprob: -8.206103324890137
    6. ' :' → logprob: -9.331103324890137
    7. '):
' → logprob: -9.581103324890137
    8. ',' → logprob: -9.831103324890137
    9. '   ' → logprob: -9.956103324890137
    10. ':
' → logprob: -10.081103324890137

Token 341: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6712175607681274
    2. ' key' → logprob: -1.2962175607681274
    3. 'key' → logprob: -1.5462175607681274
    4. '   ' → logprob: -6.921217441558838
    5. 'X' → logprob: -7.921217441558838
    6. '        
' → logprob: -8.296217918395996
    7. 'x' → logprob: -9.046217918395996
    8. 'k' → logprob: -9.796217918395996
    9. '_key' → logprob: -9.796217918395996
    10. ' clé' → logprob: -10.046217918395996

Token 342: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29999643564224243
    2. ' key' → logprob: -2.0499963760375977
    3. 'key' → logprob: -2.0499963760375977
    4. '        
' → logprob: -7.674996376037598
    5. '   ' → logprob: -7.924996376037598
    6. 'X' → logprob: -8.049996376037598
    7. 'x' → logprob: -9.174996376037598
    8. 'c' → logprob: -9.924996376037598
    9. 'k' → logprob: -10.174996376037598
    10. '           ' → logprob: -10.362496376037598

Token 343: ' incr' (ID: 52395)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.8535343408584595
    2. '+=' → logprob: -1.1035343408584595
    3. ' +=' → logprob: -2.22853422164917
    4. '=' → logprob: -3.35353422164917
    5. ' ret' → logprob: -3.47853422164917
    6. '[' → logprob: -4.47853422164917
    7. ']+=' → logprob: -4.60353422164917
    8. '#' → logprob: -5.10353422164917
    9. '   ' → logprob: -5.10353422164917
    10. 'for' → logprob: -5.35353422164917

Token 344: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.391373872756958
    2. 'ément' → logprob: -1.391373872756958
    3. 'ement' → logprob: -3.141373872756958
    4. 'emente' → logprob: -4.266373634338379
    5. '   ' → logprob: -4.641373634338379
    6. 'mente' → logprob: -6.266373634338379
    7. 'e' → logprob: -6.266373634338379
    8. '       ' → logprob: -6.266373634338379
    9. 'ment' → logprob: -7.016373634338379
    10. 'ém' → logprob: -7.891373634338379

Token 345: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.003931406419724226
    2. 'ment' → logprob: -6.253931522369385
    3. 'nte' → logprob: -7.378931522369385
    4. 'mentation' → logprob: -7.878931522369385
    5. 'm' → logprob: -8.503931045532227
    6. 'mented' → logprob: -9.128931045532227
    7. 'mental' → logprob: -9.378931045532227
    8. 'ments' → logprob: -9.753931045532227
    9. 'me' → logprob: -9.878931045532227
    10. '#' → logprob: -9.878931045532227

Token 346: ' ensuite' (ID: 39713)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3206339478492737
    2. ' X' → logprob: -1.320633888244629
    3. '(X' → logprob: -5.445633888244629
    4. '(' → logprob: -7.070633888244629
    5. '[' → logprob: -7.945633888244629
    6. '	X' → logprob: -8.070633888244629
    7. ')' → logprob: -8.195633888244629
    8. '[X' → logprob: -8.320633888244629
    9. ' ' → logprob: -8.695633888244629
    10. ']' → logprob: -8.695633888244629

Token 347: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20156848430633545
    2. ' X' → logprob: -1.7015684843063354
    3. 'ret' → logprob: -9.951568603515625
    4. ')' → logprob: -10.326568603515625
    5. '(X' → logprob: -11.076568603515625
    6. ' ret' → logprob: -11.201568603515625
    7. ' ' → logprob: -11.451568603515625
    8. '   ' → logprob: -11.701568603515625
    9. '	X' → logprob: -11.951568603515625
    10. '1' → logprob: -12.951568603515625

Token 348: ' valeur' (ID: 41664)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6507773995399475
    2. 'ret' → logprob: -0.7757773995399475
    3. ' X' → logprob: -4.650777339935303
    4. ' ret' → logprob: -4.900777339935303
    5. 'count' → logprob: -8.150777816772461
    6. 'value' → logprob: -8.275777816772461
    7. '[' → logprob: -8.775777816772461
    8. 'val' → logprob: -9.025777816772461
    9. ' count' → logprob: -10.025777816772461
    10. ' value' → logprob: -10.275777816772461

Token 349: ' dans' (ID: 2671)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.067142367362976
    2. 'X' → logprob: -1.192142367362976
    3. ' X' → logprob: -1.192142367362976
    4. '[X' → logprob: -3.8171424865722656
    5. '[' → logprob: -4.317142486572266
    6. 'de' → logprob: -5.317142486572266
    7. '   ' → logprob: -5.692142486572266
    8. ' ' → logprob: -6.442142486572266
    9. 's' → logprob: -7.192142486572266
    10. ' of' → logprob: -7.317142486572266

Token 350: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03365561366081238
    2. ' X' → logprob: -3.4086556434631348
    3. ' ' → logprob: -11.783655166625977
    4. 'l' → logprob: -14.658655166625977
    5. ' la' → logprob: -15.158655166625977
    6. ' the' → logprob: -15.283655166625977
    7. '   ' → logprob: -15.283655166625977
    8. '	X' → logprob: -15.408655166625977
    9. ')' → logprob: -15.908655166625977
    10. 'the' → logprob: -16.033655166625977

Token 351: ' pour' (ID: 1930)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.48060277104377747
    2. '[X' → logprob: -0.9806027412414551
    3. '[' → logprob: -5.730602741241455
    4. '[a' → logprob: -5.980602741241455
    5. '   ' → logprob: -7.980602741241455
    6. '[A' → logprob: -8.605603218078613
    7. 'X' → logprob: -9.855603218078613
    8. '       ' → logprob: -9.980603218078613
    9. '[key' → logprob: -10.230603218078613
    10. ' [' → logprob: -10.480603218078613

Token 352: ' cette' (ID: 7696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.01750318892300129
    2. '(a' → logprob: -4.767503261566162
    3. 'a' → logprob: -4.892503261566162
    4. ' a' → logprob: -7.142503261566162
    5. ' (' → logprob: -9.017502784729004
    6. 'la' → logprob: -9.517502784729004
    7. ' la' → logprob: -9.517502784729004
    8. '[(' → logprob: -9.767502784729004
    9. ' [' → logprob: -9.892502784729004
    10. '   ' → logprob: -9.892502784729004

Token 353: ' clé' (ID: 83188)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5846610069274902
    2. 'clé' → logprob: -1.8346610069274902
    3. 'a' → logprob: -1.9596610069274902
    4. '[a' → logprob: -2.7096610069274902
    5. ' a' → logprob: -2.9596610069274902
    6. ' clé' → logprob: -4.33466100692749
    7. ' (' → logprob: -5.45966100692749
    8. '(' → logprob: -6.58466100692749
    9. 'key' → logprob: -6.70966100692749
    10. 'cl' → logprob: -6.95966100692749

Token 354: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2401801496744156
    2. '[(' → logprob: -1.6151801347732544
    3. '[X' → logprob: -5.115180015563965
    4. '(a' → logprob: -5.240180015563965
    5. '   ' → logprob: -6.615180015563965
    6. '[' → logprob: -7.115180015563965
    7. '       ' → logprob: -7.490180015563965
    8. '[A' → logprob: -8.240180015563965
    9. 'X' → logprob: -9.115180015563965
    10. ' (' → logprob: -9.490180015563965

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011070577427744865
    2. ' ' → logprob: -4.511070728302002
    3. '+' → logprob: -10.886070251464844
    4. ' +' → logprob: -12.636070251464844
    5. '```' → logprob: -15.136070251464844
    6. '   ' → logprob: -15.886070251464844
    7. 'X' → logprob: -16.511070251464844
    8. ' X' → logprob: -16.636070251464844
    9. ' plus' → logprob: -17.136070251464844
    10. ' +=' → logprob: -17.636070251464844

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010114919859915972
    2. ' ' → logprob: -7.001011371612549
    3. '+' → logprob: -9.251011848449707
    4. ' +' → logprob: -12.751011848449707
    5. '```' → logprob: -15.251011848449707
    6. '   ' → logprob: -15.876011848449707
    7. '+=' → logprob: -16.25101089477539
    8. '++' → logprob: -16.25101089477539
    9. 'plus' → logprob: -17.12601089477539
    10. 'X' → logprob: -17.25101089477539

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2860332429409027
    2. '       ' → logprob: -1.411033272743225
    3. ')' → logprob: -6.4110331535339355
    4. '    
' → logprob: -7.0360331535339355
    5. '
' → logprob: -7.7860331535339355
    6. '[' → logprob: -7.7860331535339355
    7. 'X' → logprob: -8.411033630371094
    8. ' X' → logprob: -8.536033630371094
    9. '  ' → logprob: -8.786033630371094
    10. '  
' → logprob: -8.786033630371094

Token 358: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3201427161693573
    2. '       ' → logprob: -1.3201427459716797
    3. 'X' → logprob: -5.94514274597168
    4. '[' → logprob: -6.32014274597168
    5. ')' → logprob: -7.44514274597168
    6. ' X' → logprob: -7.57014274597168
    7. '[X' → logprob: -7.69514274597168
    8. '    
' → logprob: -8.07014274597168
    9. '  ' → logprob: -9.07014274597168
    10. '        
' → logprob: -9.69514274597168

Token 359: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9828584790229797
    2. '       ' → logprob: -0.9828584790229797
    3. 'X' → logprob: -1.732858419418335
    4. ' X' → logprob: -2.607858419418335
    5. ' ' → logprob: -8.357858657836914
    6. '  ' → logprob: -8.607858657836914
    7. '           ' → logprob: -8.732858657836914
    8. ' key' → logprob: -8.857858657836914
    9. '    ' → logprob: -9.607858657836914
    10. '	X' → logprob: -9.982858657836914

Token 360: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20673051476478577
    2. 'X' → logprob: -1.9567304849624634
    3. '       ' → logprob: -3.331730604171753
    4. ' X' → logprob: -4.706730365753174
    5. ' ' → logprob: -8.581730842590332
    6. '  ' → logprob: -8.706730842590332
    7. ')' → logprob: -9.331730842590332
    8. '    ' → logprob: -9.706730842590332
    9. '           ' → logprob: -10.456730842590332
    10. ' key' → logprob: -10.831730842590332

Token 361: ' ajoute' (ID: 91611)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.08565051853656769
    2. '       ' → logprob: -3.2106504440307617
    3. '   ' → logprob: -4.085650444030762
    4. ' permettra' → logprob: -5.085650444030762
    5. ' signifie' → logprob: -5.835650444030762
    6. ' compte' → logprob: -5.835650444030762
    7. 's' → logprob: -6.960650444030762
    8. ' contribue' → logprob: -6.960650444030762
    9. 'ind' → logprob: -7.460650444030762
    10. ' ' → logprob: -7.460650444030762

Token 362: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6921507120132446
    2. '1' → logprob: -0.8171507120132446
    3. ' X' → logprob: -3.442150592803955
    4. 'X' → logprob: -3.817150592803955
    5. '   ' → logprob: -7.192150592803955
    6. ' a' → logprob: -7.317150592803955
    7. ' une' → logprob: -8.192151069641113
    8. ' un' → logprob: -8.317151069641113
    9. ' à' → logprob: -8.567151069641113
    10. ')' → logprob: -8.817151069641113

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10425586998462677
    2. ' ' → logprob: -2.8542559146881104
    3. 'X' → logprob: -3.7292559146881104
    4. ' X' → logprob: -4.104255676269531
    5. ' un' → logprob: -8.854255676269531
    6. ' à' → logprob: -9.104255676269531
    7. '   ' → logprob: -9.354255676269531
    8. ')' → logprob: -9.479255676269531
    9. 'un' → logprob: -9.604255676269531
    10. ' a' → logprob: -9.854255676269531

Token 364: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31371843814849854
    2. ' X' → logprob: -1.3137184381484985
    3. ' la' → logprob: -8.563718795776367
    4. ' ' → logprob: -8.813718795776367
    5. ' the' → logprob: -10.313718795776367
    6. ')' → logprob: -10.688718795776367
    7. 'l' → logprob: -10.813718795776367
    8. 'the' → logprob: -11.563718795776367
    9. 's' → logprob: -11.938718795776367
    10. 'la' → logprob: -12.063718795776367

Token 366: ' clé' (ID: 83188)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05560196191072464
    2. ' X' → logprob: -2.9306020736694336
    3. 'val' → logprob: -9.055602073669434
    4. ' ' → logprob: -9.180602073669434
    5. 'value' → logprob: -9.430602073669434
    6. 'clé' → logprob: -9.555602073669434
    7. ' valeur' → logprob: -10.055602073669434
    8. 'a' → logprob: -10.305602073669434
    9. ' clé' → logprob: -10.305602073669434
    10. '   ' → logprob: -10.430602073669434

Token 367: ' (' (ID: 350)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.07285778969526291
    2. '[(' → logprob: -3.6978578567504883
    3. '(a' → logprob: -3.9478578567504883
    4. 'X' → logprob: -5.072857856750488
    5. ' (' → logprob: -5.072857856750488
    6. '[X' → logprob: -5.197857856750488
    7. '[' → logprob: -5.447857856750488
    8. '[A' → logprob: -6.697857856750488
    9. '(X' → logprob: -7.322857856750488
    10. ' X' → logprob: -7.697857856750488

Token 368: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05501915514469147
    2. ' a' → logprob: -3.0550191402435303
    3. '(a' → logprob: -5.180019378662109
    4. ' (' → logprob: -7.305019378662109
    5. '   ' → logprob: -9.80501937866211
    6. '[a' → logprob: -11.05501937866211
    7. ')a' → logprob: -11.18001937866211
    8. ')' → logprob: -11.55501937866211
    9. ' ' → logprob: -12.05501937866211
    10. '    ' → logprob: -12.30501937866211

Token 369: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34940457344055176
    2. ' +' → logprob: -1.3494045734405518
    3. '+i' → logprob: -3.3494045734405518
    4. '+a' → logprob: -8.349404335021973
    5. ' ' → logprob: -9.099404335021973
    6. '[i' → logprob: -10.849404335021973
    7. '+
' → logprob: -11.724404335021973
    8. '[' → logprob: -12.724404335021973
    9. '  ' → logprob: -13.099404335021973
    10. ')' → logprob: -13.724404335021973

Token 370: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01417032815515995
    2. ' i' → logprob: -4.264170169830322
    3. ' ' → logprob: -13.26417064666748
    4. ')' → logprob: -13.26417064666748
    5. '	i' → logprob: -13.51417064666748
    6. '   ' → logprob: -14.76417064666748
    7. ')i' → logprob: -14.76417064666748
    8. '[i' → logprob: -15.01417064666748
    9. '(i' → logprob: -15.38917064666748
    10. '<|end|>' → logprob: -15.63917064666748

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05463534593582153
    2. '])' → logprob: -3.1796352863311768
    3. ']' → logprob: -4.804635524749756
    4. ')]' → logprob: -6.679635524749756
    5. ' )' → logprob: -7.179635524749756
    6. ')])' → logprob: -7.679635524749756
    7. '   ' → logprob: -7.804635524749756
    8. '       ' → logprob: -8.554635047912598
    9. ')
' → logprob: -9.429635047912598
    10. ' ])' → logprob: -9.679635047912598

Token 372: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17333552241325378
    2. '   ' → logprob: -1.9233355522155762
    3. '[' → logprob: -4.673335552215576
    4. ')' → logprob: -6.673335552215576
    5. ']' → logprob: -6.673335552215576
    6. '[X' → logprob: -7.423335552215576
    7. ',' → logprob: -9.423335075378418
    8. '    
' → logprob: -9.548335075378418
    9. '[
' → logprob: -9.548335075378418
    10. 'X' → logprob: -9.798335075378418

Token 373: ' le' (ID: 505)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10021109133958817
    2. ' X' → logprob: -2.3502111434936523
    3. ' ' → logprob: -13.475211143493652
    4. ')' → logprob: -13.600211143493652
    5. ' la' → logprob: -14.350211143493652
    6. 'l' → logprob: -14.600211143493652
    7. ' the' → logprob: -15.975211143493652
    8. '`' → logprob: -15.975211143493652
    9. '   ' → logprob: -16.350210189819336
    10. '```' → logprob: -16.475210189819336

Token 374: ' diction' (ID: 155259)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00018220659694634378
    2. 'd' → logprob: -9.125182151794434
    3. 'default' → logprob: -10.125182151794434
    4. ' X' → logprob: -10.625182151794434
    5. ')' → logprob: -12.625182151794434
    6. ' defaultdict' → logprob: -14.000182151794434
    7. 'dictionary' → logprob: -14.125182151794434
    8. 'def' → logprob: -14.250182151794434
    9. ' diction' → logprob: -14.375182151794434
    10. '#' → logprob: -14.875182151794434

Token 375: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.16300198435783386
    2. 'aire' → logprob: -1.9130020141601562
    3. 'ary' → logprob: -5.913002014160156
    4. 'n' → logprob: -10.788002014160156
    5. 'a' → logprob: -11.288002014160156
    6. 'air' → logprob: -11.663002014160156
    7. 'na' → logprob: -12.038002014160156
    8. '   ' → logprob: -12.163002014160156
    9. 'arie' → logprob: -12.538002014160156
    10. 'ar' → logprob: -13.163002014160156

Token 376: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0571695975959301
    2. '       ' → logprob: -3.3071696758270264
    3. '[X' → logprob: -4.682169437408447
    4. 'X' → logprob: -5.557169437408447
    5. '[' → logprob: -6.057169437408447
    6. ' X' → logprob: -6.682169437408447
    7. ',' → logprob: -7.557169437408447
    8. '  ' → logprob: -8.307169914245605
    9. ')' → logprob: -8.432169914245605
    10. '[
' → logprob: -8.807169914245605

Token 377: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6596389412879944
    2. 'X' → logprob: -0.9096389412879944
    3. ' X' → logprob: -3.4096388816833496
    4. '   ' → logprob: -3.5346388816833496
    5. '           ' → logprob: -5.40963888168335
    6. ')' → logprob: -5.65963888168335
    7. ' ce' → logprob: -6.53463888168335
    8. ' ' → logprob: -7.15963888168335
    9. ' et' → logprob: -7.40963888168335
    10. '        
' → logprob: -7.40963888168335

Token 378: ' la' (ID: 557)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.08468691259622574
    2. 'initial' → logprob: -3.7096869945526123
    3. ' initial' → logprob: -4.209686756134033
    4. ' initialise' → logprob: -4.459686756134033
    5. ' initialize' → logprob: -4.584686756134033
    6. 'initialize' → logprob: -5.209686756134033
    7. ' la' → logprob: -6.209686756134033
    8. ' ' → logprob: -6.334686756134033
    9. ' initializes' → logprob: -6.334686756134033
    10. 'cré' → logprob: -6.459686756134033

Token 379: ' crée' (ID: 102256)
  Prédit: ' crée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.3356513977050781
    2. 'default' → logprob: -2.085651397705078
    3. ' defaultdict' → logprob: -3.585651397705078
    4. ' default' → logprob: -3.835651397705078
    5. 'X' → logprob: -3.960651397705078
    6. ' remet' → logprob: -4.335651397705078
    7. ' valeur' → logprob: -4.335651397705078
    8. ' X' → logprob: -4.460651397705078
    9. 'value' → logprob: -4.835651397705078
    10. 'cré' → logprob: -5.585651397705078

Token 380: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531014084815979
    2. '       ' → logprob: -2.253101348876953
    3. ' if' → logprob: -3.128101348876953
    4. 'if' → logprob: -3.753101348876953
    5. ')' → logprob: -4.003101348876953
    6. '<|end|>' → logprob: -5.253101348876953
    7. 'X' → logprob: -5.503101348876953
    8. ']' → logprob: -5.628101348876953
    9. '           ' → logprob: -5.753101348876953
    10. '```' → logprob: -6.003101348876953

Token 381: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01665298454463482
    2. 'value' → logprob: -5.016653060913086
    3. 'val' → logprob: -5.141653060913086
    4. ' ' → logprob: -5.641653060913086
    5. '0' → logprob: -8.516653060913086
    6. ' value' → logprob: -9.016653060913086
    7. 'default' → logprob: -10.016653060913086
    8. '   ' → logprob: -10.516653060913086
    9. ' valeur' → logprob: -10.516653060913086
    10. '```' → logprob: -10.891653060913086

Token 382: ' valeur' (ID: 41664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35905057191848755
    2. 'val' → logprob: -2.1090505123138428
    3. 'value' → logprob: -2.3590505123138428
    4. '0' → logprob: -3.1090505123138428
    5. ' ' → logprob: -3.7340505123138428
    6. ' value' → logprob: -4.484050750732422
    7. ' valeur' → logprob: -5.984050750732422
    8. 'default' → logprob: -6.109050750732422
    9. ' val' → logprob: -7.234050750732422
    10. ' default' → logprob: -8.234050750732422

Token 383: ' initial' (ID: 4871)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5975617170333862
    2. '=' → logprob: -1.4725617170333862
    3. '   ' → logprob: -1.9725617170333862
    4. ' =' → logprob: -3.347561836242676
    5. ' ' → logprob: -4.222561836242676
    6. ' de' → logprob: -4.472561836242676
    7. ' +=' → logprob: -4.847561836242676
    8. '+=' → logprob: -5.847561836242676
    9. ' +' → logprob: -6.347561836242676
    10. '+' → logprob: -6.347561836242676

Token 384: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9401858448982239
    2. ' par' → logprob: -1.315185785293579
    3. '   ' → logprob: -2.065185785293579
    4. '0' → logprob: -2.190185785293579
    5. '1' → logprob: -3.315185785293579
    6. 'def' → logprob: -4.065186023712158
    7. ' =' → logprob: -4.190186023712158
    8. ' ' → logprob: -4.190186023712158
    9. 'e' → logprob: -5.440186023712158
    10. ' à' → logprob: -5.690186023712158

Token 385: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1498950719833374
    2. ' ' → logprob: -1.1498950719833374
    3. ' =' → logprob: -1.6498950719833374
    4. '=' → logprob: -1.8998950719833374
    5. '   ' → logprob: -4.149895191192627
    6. ' +=' → logprob: -5.399895191192627
    7. ' à' → logprob: -5.649895191192627
    8. '0' → logprob: -7.399895191192627
    9. ' de' → logprob: -8.274894714355469
    10. '+=' → logprob: -8.649894714355469

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004626172594726086
    2. ' ' → logprob: -5.379626274108887
    3. '0' → logprob: -12.504626274108887
    4. '```' → logprob: -13.254626274108887
    5. '   ' → logprob: -15.254626274108887
    6. '`' → logprob: -15.629626274108887
    7. '  ' → logprob: -17.75462532043457
    8. ' ' → logprob: -18.00462532043457
    9. '    ' → logprob: -18.12962532043457
    10. '``' → logprob: -19.12962532043457

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8590300139039755e-05
    2. ' ' → logprob: -10.250048637390137
    3. '0' → logprob: -11.250048637390137
    4. '   ' → logprob: -16.25004768371582
    5. '```' → logprob: -18.62504768371582
    6. '
' → logprob: -20.12504768371582
    7. '  ' → logprob: -20.25004768371582
    8. '

' → logprob: -20.75004768371582
    9. '    ' → logprob: -20.75004768371582
    10. '       ' → logprob: -21.50004768371582

Token 388: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12708422541618347
    2. '   ' → logprob: -2.127084255218506
    3. 'X' → logprob: -9.752083778381348
    4. ' X' → logprob: -10.377083778381348
    5. '           ' → logprob: -11.127083778381348
    6. ')' → logprob: -11.877083778381348
    7. '    
' → logprob: -11.877083778381348
    8. ',' → logprob: -12.002083778381348
    9. '        
' → logprob: -12.002083778381348
    10. '<|end|>' → logprob: -12.252083778381348

Token 389: ' elle' (ID: 11451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5979193449020386
    2. 'X' → logprob: -2.097919464111328
    3. 'auc' → logprob: -2.097919464111328
    4. '0' → logprob: -2.347919464111328
    5. '   ' → logprob: -2.347919464111328
    6. ' X' → logprob: -2.472919464111328
    7. 'abs' → logprob: -2.597919464111328
    8. ' n' → logprob: -3.097919464111328
    9. ' ' → logprob: -3.222919464111328
    10. '```' → logprob: -4.472919464111328

Token 390: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4292188882827759
    2. ' n' → logprob: -1.0542188882827759
    3. '<|end|>' → logprob: -8.929219245910645
    4. 'in' → logprob: -9.179219245910645
    5. ' doesn't' → logprob: -9.804219245910645
    6. '```' → logprob: -9.929219245910645
    7. 'n't' → logprob: -10.054219245910645
    8. ' not' → logprob: -10.554219245910645
    9. ' does' → logprob: -10.804219245910645
    10. '#' → logprob: -11.554219245910645

Token 391: ''ex' (ID: 23472)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9132760167121887
    2. 'n' → logprob: -1.538275957107544
    3. 'e' → logprob: -2.038275957107544
    4. 'a' → logprob: -2.413275957107544
    5. ' pas' → logprob: -3.413275957107544
    6. ''est' → logprob: -3.788275957107544
    7. ' not' → logprob: -4.038276195526123
    8. '   ' → logprob: -4.163276195526123
    9. ''' → logprob: -4.538276195526123
    10. 'pas' → logprob: -4.538276195526123

Token 392: 'ist' (ID: 421)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.002195933135226369
    2. 'ist' → logprob: -6.502195835113525
    3. 'é' → logprob: -8.127196311950684
    4. 'ists' → logprob: -9.002196311950684
    5. 'istent' → logprob: -9.877196311950684
    6. '   ' → logprob: -10.127196311950684
    7. 'ister' → logprob: -10.877196311950684
    8. 'ite' → logprob: -11.002196311950684
    9. '       ' → logprob: -11.127196311950684
    10. 'isted' → logprob: -11.127196311950684

Token 393: 'ait' (ID: 1271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.447939157485962
    2. 'ante' → logprob: -1.697939157485962
    3. 'e' → logprob: -1.822939157485962
    4. 'iste' → logprob: -2.197939157485962
    5. 'ent' → logprob: -2.447939157485962
    6. 'te' → logprob: -2.947939157485962
    7. 'ente' → logprob: -3.072939157485962
    8. 'ite' → logprob: -3.447939157485962
    9. 'ue' → logprob: -4.197938919067383
    10. 'a' → logprob: -4.572938919067383

Token 394: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.17641609907150269
    2. 'pas' → logprob: -1.9264161586761475
    3. '   ' → logprob: -4.551415920257568
    4. '       ' → logprob: -5.926415920257568
    5. ')' → logprob: -6.551415920257568
    6. '_pas' → logprob: -7.676415920257568
    7. ':' → logprob: -8.426416397094727
    8. '1' → logprob: -8.676416397094727
    9. '           ' → logprob: -9.176416397094727
    10. '```' → logprob: -9.301416397094727

Token 395: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35574477910995483
    2. '   ' → logprob: -1.2307448387145996
    3. ':' → logprob: -5.8557448387146
    4. ')' → logprob: -7.3557448387146
    5. '
' → logprob: -7.4807448387146
    6. '(X' → logprob: -7.4807448387146
    7. '           ' → logprob: -7.6057448387146
    8. '):' → logprob: -7.6057448387146
    9. 'X' → logprob: -7.9807448387146
    10. ' X' → logprob: -8.855744361877441

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000330220878822729
    2. '   ' → logprob: -8.875329971313477
    3. 'X' → logprob: -9.625329971313477
    4. '<|end|>' → logprob: -10.250329971313477
    5. ' X' → logprob: -10.375329971313477
    6. '        
' → logprob: -11.000329971313477
    7. '           ' → logprob: -11.375329971313477
    8. ')' → logprob: -11.625329971313477
    9. '```' → logprob: -11.875329971313477
    10. ',' → logprob: -12.250329971313477

Token 397: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.06861145049333572
    2. ' X' → logprob: -3.3186113834381104
    3. '   ' → logprob: -3.5686113834381104
    4. '       ' → logprob: -6.4436116218566895
    5. ' key' → logprob: -8.943611145019531
    6. 'key' → logprob: -9.193611145019531
    7. ' ' → logprob: -9.943611145019531
    8. '  ' → logprob: -10.818611145019531
    9. '	X' → logprob: -12.568611145019531
    10. '```' → logprob: -12.693611145019531

Token 398: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0016920845955610275
    2. '[' → logprob: -6.751692295074463
    3. '[(' → logprob: -7.626692295074463
    4. '[A' → logprob: -10.626691818237305
    5. '[
' → logprob: -12.626691818237305
    6. '(a' → logprob: -13.501691818237305
    7. ' [' → logprob: -13.751691818237305
    8. 'a' → logprob: -13.876691818237305
    9. '\[' → logprob: -14.126691818237305
    10. '```' → logprob: -14.501691818237305

Token 399: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12906494736671448
    2. ' +' → logprob: -2.2540650367736816
    3. '+i' → logprob: -4.129065036773682
    4. '+
' → logprob: -12.254064559936523
    5. '   ' → logprob: -13.629064559936523
    6. ' ' → logprob: -13.754064559936523
    7. '[i' → logprob: -13.879064559936523
    8. ']+' → logprob: -13.879064559936523
    9. '  ' → logprob: -14.504064559936523
    10. '+a' → logprob: -14.754064559936523

Token 400: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.1689596148207784e-05
    2. ' i' → logprob: -9.875051498413086
    3. '	i' → logprob: -16.500051498413086
    4. '   ' → logprob: -16.500051498413086
    5. '[i' → logprob: -18.750051498413086
    6. '<|end|>' → logprob: -18.875051498413086
    7. '_i' → logprob: -19.250051498413086
    8. ' ' → logprob: -19.375051498413086
    9. '```' → logprob: -19.375051498413086
    10. ')i' → logprob: -19.875051498413086

Token 401: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026264708139933646
    2. ']+=' → logprob: -8.250262260437012
    3. ' ]' → logprob: -14.000262260437012
    4. '"]' → logprob: -15.875262260437012
    5. ']+' → logprob: -15.875262260437012
    6. '']' → logprob: -16.500263214111328
    7. '   ' → logprob: -16.500263214111328
    8. '`]' → logprob: -17.500263214111328
    9. ')' → logprob: -17.625263214111328
    10. ')]' → logprob: -17.875263214111328

Token 402: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03807259723544121
    2. ' +=' → logprob: -3.2880725860595703
    3. ']+=' → logprob: -10.41307258605957
    4. '=' → logprob: -14.28807258605957
    5. '   ' → logprob: -14.91307258605957
    6. ']' → logprob: -17.16307258605957
    7. ')' → logprob: -17.16307258605957
    8. '```' → logprob: -17.41307258605957
    9. '+' → logprob: -17.78807258605957
    10. '[' → logprob: -18.03807258605957

Token 403: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.87500762939453
    4. '```' → logprob: -21.87500762939453
    5. '  ' → logprob: -23.00000762939453
    6. '0' → logprob: -23.50000762939453
    7. '	' → logprob: -25.00000762939453
    8. '       ' → logprob: -25.25000762939453
    9. '１' → logprob: -25.25000762939453
    10. '100' → logprob: -25.37500762939453

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -22.75
    5. '0' → logprob: -26.5
    6. '  ' → logprob: -27.125
    7. '۱' → logprob: -27.75
    8. '１' → logprob: -27.875
    9. '`' → logprob: -28.125
    10. '2' → logprob: -28.375

Token 405: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08662959188222885
    2. 'for' → logprob: -2.586629629135132
    3. 'ret' → logprob: -5.461629390716553
    4. 'return' → logprob: -6.211629390716553
    5. '
' → logprob: -7.336629390716553
    6. ' for' → logprob: -7.586629390716553
    7. '    
' → logprob: -8.461629867553711
    8. '```' → logprob: -10.836629867553711
    9. '       ' → logprob: -10.961629867553711
    10. 'print' → logprob: -11.586629867553711

Token 406: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3159407377243042
    2. 'for' → logprob: -1.3159407377243042
    3. 'ret' → logprob: -6.190940856933594
    4. ' for' → logprob: -7.940940856933594
    5. 'return' → logprob: -8.690940856933594
    6. '
' → logprob: -9.565940856933594
    7. '    
' → logprob: -10.815940856933594
    8. '       ' → logprob: -12.565940856933594
    9. '```' → logprob: -12.690940856933594
    10. '#' → logprob: -13.315940856933594

Token 407: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.44601958990097046
    2. '   ' → logprob: -1.6960196495056152
    3. 'if' → logprob: -1.8210196495056152
    4. 'for' → logprob: -4.946019649505615
    5. 'return' → logprob: -5.571019649505615
    6. ' if' → logprob: -6.196019649505615
    7. ' ret' → logprob: -8.071019172668457
    8. '       ' → logprob: -8.071019172668457
    9. ' ' → logprob: -8.321019172668457
    10. '```' → logprob: -8.571019172668457

Token 408: ' On' (ID: 2160)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.10141816735267639
    2. 'if' → logprob: -2.3514182567596436
    3. '   ' → logprob: -7.4764180183410645
    4. '       ' → logprob: -8.351418495178223
    5. 'for' → logprob: -8.601418495178223
    6. '#' → logprob: -9.101418495178223
    7. 'val' → logprob: -11.226418495178223
    8. 'return' → logprob: -11.226418495178223
    9. ' if' → logprob: -11.351418495178223
    10. 'r' → logprob: -11.851418495178223

Token 409: ' vér' (ID: 42524)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.4682885408401489
    2. '   ' → logprob: -1.968288540840149
    3. '       ' → logprob: -2.3432884216308594
    4. '=' → logprob: -2.7182884216308594
    5. 'for' → logprob: -3.8432884216308594
    6. 'if' → logprob: -4.093288421630859
    7. ' ret' → logprob: -5.218288421630859
    8. ' =' → logprob: -5.343288421630859
    9. '+=' → logprob: -5.593288421630859
    10. '[' → logprob: -5.718288421630859

Token 410: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.22198887169361115
    2. 'if' → logprob: -2.5969889163970947
    3. '=' → logprob: -3.3469889163970947
    4. '   ' → logprob: -3.4719889163970947
    5. '       ' → logprob: -3.5969889163970947
    6. 'ifiez' → logprob: -3.9719889163970947
    7. 'a' → logprob: -6.346988677978516
    8. ' =' → logprob: -6.596988677978516
    9. 'ify' → logprob: -6.721988677978516
    10. '+=' → logprob: -7.221988677978516

Token 411: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5146963596343994
    2. ' if' → logprob: -1.1396963596343994
    3. '       ' → logprob: -2.8896963596343994
    4. '   ' → logprob: -4.01469612121582
    5. ' ' → logprob: -5.63969612121582
    6. ' si' → logprob: -6.51469612121582
    7. '    ' → logprob: -7.26469612121582
    8. ' ' → logprob: -7.38969612121582
    9. 'si' → logprob: -7.88969612121582
    10. 'X' → logprob: -8.01469612121582

Token 412: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.38789764046669006
    2. ' X' → logprob: -1.1378976106643677
    3. 'a' → logprob: -7.887897491455078
    4. ' ret' → logprob: -8.637897491455078
    5. ' ' → logprob: -8.887897491455078
    6. 'ret' → logprob: -9.262897491455078
    7. ' a' → logprob: -9.762897491455078
    8. '   ' → logprob: -10.012897491455078
    9. 'A' → logprob: -10.012897491455078
    10. ' i' → logprob: -10.387897491455078

Token 413: ' différence' (ID: 79196)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0020351072307676077
    2. ' X' → logprob: -6.502035140991211
    3. 'a' → logprob: -7.877035140991211
    4. 'i' → logprob: -9.752035140991211
    5. 'A' → logprob: -10.252035140991211
    6. 'x' → logprob: -11.627035140991211
    7. 'current' → logprob: -11.752035140991211
    8. 'ret' → logprob: -12.002035140991211
    9. ' ' → logprob: -12.127035140991211
    10. 'count' → logprob: -12.252035140991211

Token 414: ' (' (ID: 350)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.6386855840682983
    2. ' entre' → logprob: -1.7636855840682983
    3. ' a' → logprob: -2.388685703277588
    4. 'a' → logprob: -2.513685703277588
    5. ' ==' → logprob: -3.263685703277588
    6. 'between' → logprob: -3.513685703277588
    7. 'X' → logprob: -4.763685703277588
    8. ' X' → logprob: -4.888685703277588
    9. ' =' → logprob: -5.138685703277588
    10. ' ' → logprob: -5.263685703277588

Token 415: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026420239359140396
    2. 'i' → logprob: -4.4014201164245605
    3. 'X' → logprob: -5.2764201164245605
    4. '(a' → logprob: -5.4014201164245605
    5. ' a' → logprob: -5.9014201164245605
    6. 'ret' → logprob: -7.6514201164245605
    7. '(i' → logprob: -8.401420593261719
    8. ' (' → logprob: -8.776420593261719
    9. ')' → logprob: -8.901420593261719
    10. '   ' → logprob: -9.151420593261719

Token 416: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5233522653579712
    2. ' -' → logprob: -0.8983522653579712
    3. '+' → logprob: -9.02335262298584
    4. ' ' → logprob: -10.02335262298584
    5. ')' → logprob: -10.64835262298584
    6. '-
' → logprob: -11.39835262298584
    7. 'a' → logprob: -12.27335262298584
    8. ' -
' → logprob: -12.83585262298584
    9. ',' → logprob: -12.89835262298584
    10. 's' → logprob: -13.02335262298584

Token 417: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. 'X' → logprob: -11.62501335144043
    3. ' a' → logprob: -12.62501335144043
    4. 'A' → logprob: -14.12501335144043
    5. '	a' → logprob: -16.87501335144043
    6. '(a' → logprob: -17.75001335144043
    7. ' ' → logprob: -17.87501335144043
    8. ')a' → logprob: -17.87501335144043
    9. '1' → logprob: -18.00001335144043
    10. ')' → logprob: -18.37501335144043

Token 418: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00911780633032322
    2. ')==' → logprob: -4.884117603302002
    3. '==' → logprob: -6.759117603302002
    4. ' ==' → logprob: -9.25911808013916
    5. ' )' → logprob: -9.25911808013916
    6. ')>=' → logprob: -10.38411808013916
    7. ']==' → logprob: -10.75911808013916
    8. ']' → logprob: -11.25911808013916
    9. '[' → logprob: -11.50911808013916
    10. ' in' → logprob: -11.50911808013916

Token 419: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10092464089393616
    2. ']' → logprob: -3.6009247303009033
    3. ')' → logprob: -3.8509247303009033
    4. ' not' → logprob: -4.225924491882324
    5. ' ==' → logprob: -4.350924491882324
    6. '==' → logprob: -4.475924491882324
    7. 'in' → logprob: -5.600924491882324
    8. ']==' → logprob: -6.350924491882324
    9. ' ' → logprob: -7.350924491882324
    10. ' )' → logprob: -7.600924491882324

Token 420: ' positive' (ID: 8841)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30419594049453735
    2. 'in' → logprob: -1.4291958808898926
    3. ' a' → logprob: -4.804195880889893
    4. '0' → logprob: -5.804195880889893
    5. ' not' → logprob: -6.054195880889893
    6. ' dans' → logprob: -6.054195880889893
    7. 'dans' → logprob: -6.679195880889893
    8. ' also' → logprob: -7.179195880889893
    9. 'not' → logprob: -7.304195880889893
    10. 'a' → logprob: -7.429195880889893

Token 421: ' ou' (ID: 2031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5550501346588135
    2. '       ' → logprob: -0.9300501346588135
    3. '<|end|>' → logprob: -3.9300501346588135
    4. 'and' → logprob: -5.305049896240234
    5. ' or' → logprob: -6.055049896240234
    6. ',' → logprob: -6.180049896240234
    7. ':' → logprob: -6.930049896240234
    8. '        ' → logprob: -7.930049896240234
    9. '<|end|>' → logprob: -7.930049896240234
    10. ' if' → logprob: -8.305049896240234

Token 422: ' n' (ID: 297)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.05659366771578789
    2. '=' → logprob: -3.056593656539917
    3. '0' → logprob: -6.181593894958496
    4. 'ég' → logprob: -6.431593894958496
    5. 'strict' → logprob: -6.556593894958496
    6. 'égal' → logprob: -7.306593894958496
    7. '>' → logprob: -7.556593894958496
    8. ' eg' → logprob: -7.931593894958496
    9. ' égal' → logprob: -8.056593894958496
    10. 'eg' → logprob: -8.431593894958496

Token 423: 'ulle' (ID: 14644)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -1.167567491531372
    2. 'eg' → logprob: -1.542567491531372
    3. 'ull' → logprob: -1.917567491531372
    4. '=' → logprob: -2.667567491531372
    5. 'on' → logprob: -2.917567491531372
    6. '0' → logprob: -3.042567491531372
    7. 'e' → logprob: -3.417567491531372
    8. 'o' → logprob: -3.417567491531372
    9. 'ot' → logprob: -3.792567491531372
    10. 'ulle' → logprob: -4.042567253112793

Token 424: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045225657522678375
    2. '<|end|>' → logprob: -5.754522800445557
    3. ' and' → logprob: -7.879522800445557
    4. ',' → logprob: -7.879522800445557
    5. ':' → logprob: -8.379522323608398
    6. ' if' → logprob: -8.504522323608398
    7. ' or' → logprob: -10.629522323608398
    8. '        
' → logprob: -10.629522323608398
    9. '<|end|>' → logprob: -10.879522323608398
    10. '   ' → logprob: -11.254522323608398

Token 425: ' Cela' (ID: 44403)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001556163071654737
    2. ' if' → logprob: -7.501556396484375
    3. '<|end|>' → logprob: -7.876556396484375
    4. 'if' → logprob: -8.126556396484375
    5. '   ' → logprob: -8.251556396484375
    6. '```' → logprob: -10.501556396484375
    7. ')' → logprob: -11.126556396484375
    8. 'If' → logprob: -12.251556396484375
    9. '        
' → logprob: -12.626556396484375
    10. '<|end|>' → logprob: -13.001556396484375

Token 426: ' emp' (ID: 4927)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4499971270561218
    2. ' >=' → logprob: -1.4499971866607666
    3. '==' → logprob: -3.6999971866607666
    4. '<=' → logprob: -3.6999971866607666
    5. '<|end|>' → logprob: -3.6999971866607666
    6. ' <=' → logprob: -4.3249969482421875
    7. ' ==' → logprob: -4.4499969482421875
    8. ':' → logprob: -4.5749969482421875
    9. '   ' → logprob: -5.9499969482421875
    10. '       ' → logprob: -6.3249969482421875

Token 427: 'êche' (ID: 63993)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6720987558364868
    2. '   ' → logprob: -1.5470987558364868
    3. '```' → logprob: -1.6720987558364868
    4. ' if' → logprob: -3.2970986366271973
    5. '       ' → logprob: -4.172098636627197
    6. '=' → logprob: -5.672098636627197
    7. ' +=' → logprob: -5.797098636627197
    8. '    ' → logprob: -6.172098636627197
    9. ')' → logprob: -6.172098636627197
    10. '[i' → logprob: -6.297098636627197

Token 428: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40809375047683716
    2. '   ' → logprob: -2.4080936908721924
    3. 'if' → logprob: -2.9080936908721924
    4. ' if' → logprob: -3.2830936908721924
    5. '```' → logprob: -3.2830936908721924
    6. '    ' → logprob: -3.7830936908721924
    7. ' the' → logprob: -4.5330939292907715
    8. '<|end|>' → logprob: -4.9080939292907715
    9. ' i' → logprob: -5.0330939292907715
    10. ' a' → logprob: -5.0330939292907715

Token 429: ''utiliser' (ID: 133355)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4056824445724487
    2. ''avoir' → logprob: -1.6556824445724487
    3. ''assurer' → logprob: -1.6556824445724487
    4. '       ' → logprob: -3.0306825637817383
    5. 'if' → logprob: -3.1556825637817383
    6. 'a' → logprob: -3.5306825637817383
    7. ''utiliser' → logprob: -3.7806825637817383
    8. '’éviter' → logprob: -3.7806825637817383
    9. 'éc' → logprob: -4.030682563781738
    10. ''aj' → logprob: -4.280682563781738

Token 430: ' des' (ID: 731)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2305971384048462
    2. 'if' → logprob: -1.3555971384048462
    3. 'a' → logprob: -2.4805970191955566
    4. ' a' → logprob: -2.8555970191955566
    5. '0' → logprob: -2.9805970191955566
    6. 'X' → logprob: -3.1055970191955566
    7. '   ' → logprob: -3.1055970191955566
    8. ' i' → logprob: -3.4805970191955566
    9. '       ' → logprob: -3.8555970191955566
    10. 'continue' → logprob: -3.9805970191955566

Token 431: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7396661639213562
    2. 'if' → logprob: -2.239666223526001
    3. ' indices' → logprob: -2.364666223526001
    4. ' valeurs' → logprob: -2.364666223526001
    5. 'values' → logprob: -3.364666223526001
    6. 'negative' → logprob: -3.364666223526001
    7. 'val' → logprob: -3.614666223526001
    8. ' if' → logprob: -3.614666223526001
    9. '-' → logprob: -3.739666223526001
    10. ' negative' → logprob: -4.489665985107422

Token 432: ' nég' (ID: 55805)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7602533102035522
    2. '>=' → logprob: -0.8852533102035522
    3. '   ' → logprob: -3.885253429412842
    4. '       ' → logprob: -4.135253429412842
    5. ' -' → logprob: -4.135253429412842
    6. ' <=' → logprob: -4.260253429412842
    7. '<=' → logprob: -4.385253429412842
    8. '-' → logprob: -4.385253429412842
    9. '<|end|>' → logprob: -4.760253429412842
    10. ',' → logprob: -5.885253429412842

Token 433: 'atifs' (ID: 66205)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.9927400946617126
    2. 'atifs' → logprob: -1.6177401542663574
    3. 'ixes' → logprob: -1.8677401542663574
    4. 'ex' → logprob: -2.7427401542663574
    5. 'if' → logprob: -2.9927401542663574
    6. '       ' → logprob: -2.9927401542663574
    7. '   ' → logprob: -3.2427401542663574
    8. 'ix' → logprob: -3.9927401542663574
    9. 'ect' → logprob: -4.492740154266357
    10. 'x' → logprob: -5.117740154266357

Token 434: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010176632553339005
    2. ' and' → logprob: -5.010176658630371
    3. '<|end|>' → logprob: -6.385176658630371
    4. ' or' → logprob: -6.885176658630371
    5. ' if' → logprob: -7.885176658630371
    6. 'and' → logprob: -8.885176658630371
    7. ',' → logprob: -9.135176658630371
    8. '<|end|>' → logprob: -10.635176658630371
    9. '        ' → logprob: -11.010176658630371
    10. '   ' → logprob: -11.010176658630371

Token 435: ' hors' (ID: 26087)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -1.1475521326065063
    2. 'in' → logprob: -2.397552013397217
    3. 'dé' → logprob: -2.397552013397217
    4. ' invalid' → logprob: -2.522552013397217
    5. 'a' → logprob: -2.772552013397217
    6. 'incorrect' → logprob: -2.897552013397217
    7. 'des' → logprob: -3.147552013397217
    8. '```' → logprob: -3.147552013397217
    9. 'ret' → logprob: -3.897552013397217
    10. ' hors' → logprob: -3.897552013397217

Token 436: ' born' (ID: 12275)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -1.0447946786880493
    2. 'pl' → logprob: -1.2947946786880493
    3. 'range' → logprob: -2.0447945594787598
    4. 'borne' → logprob: -2.0447945594787598
    5. 'de' → logprob: -3.4197945594787598
    6. 'born' → logprob: -3.9197945594787598
    7. 'des' → logprob: -4.16979455947876
    8. 'port' → logprob: -4.54479455947876
    9. 'bounds' → logprob: -4.54479455947876
    10. 'limits' → logprob: -5.29479455947876

Token 437: 'es' (ID: 268)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.8337108492851257
    2. 'd' → logprob: -1.3337109088897705
    3. 'e' → logprob: -1.4587109088897705
    4. 'age' → logprob: -3.2087109088897705
    5. 'de' → logprob: -4.583710670471191
    6. 'i' → logprob: -5.708710670471191
    7. 'def' → logprob: -5.958710670471191
    8. 'g' → logprob: -5.958710670471191
    9. 'u' → logprob: -6.958710670471191
    10. 'ds' → logprob: -6.958710670471191

Token 438: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006138649303466082
    2. '<|end|>' → logprob: -5.256138801574707
    3. ' and' → logprob: -7.756138801574707
    4. ' or' → logprob: -8.881138801574707
    5. ' if' → logprob: -8.881138801574707
    6. ',' → logprob: -9.381138801574707
    7. '<|end|>' → logprob: -10.131138801574707
    8. ')' → logprob: -10.756138801574707
    9. '        ' → logprob: -11.381138801574707
    10. ':' → logprob: -12.006138801574707

Token 439: ' certaines' (ID: 46662)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.018112722784280777
    2. ' X' → logprob: -4.893112659454346
    3. 'range' → logprob: -5.393112659454346
    4. 'A' → logprob: -5.768112659454346
    5. 'if' → logprob: -7.143112659454346
    6. ' range' → logprob: -7.768112659454346
    7. ' la' → logprob: -8.018113136291504
    8. 'le' → logprob: -8.143113136291504
    9. ' le' → logprob: -8.643113136291504
    10. 'the' → logprob: -9.018113136291504

Token 440: ' log' (ID: 2142)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.8332851529121399
    2. 'conditions' → logprob: -1.2082850933074951
    3. 'if' → logprob: -1.5832850933074951
    4. ' if' → logprob: -4.083285331726074
    5. '#' → logprob: -4.208285331726074
    6. ' contexts' → logprob: -5.083285331726074
    7. 'calcul' → logprob: -5.708285331726074
    8. 'contexts' → logprob: -5.958285331726074
    9. 'cases' → logprob: -6.208285331726074
    10. '   ' → logprob: -6.208285331726074

Token 441: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.8569539785385132
    2. 'ique' → logprob: -1.2319539785385132
    3. 'ic' → logprob: -1.9819539785385132
    4. 'ical' → logprob: -2.2319540977478027
    5. 'ics' → logprob: -3.8569540977478027
    6. 's' → logprob: -4.231954097747803
    7. 'es' → logprob: -6.481954097747803
    8. 'icals' → logprob: -8.606953620910645
    9. '   ' → logprob: -8.731953620910645
    10. 'ica' → logprob: -8.981953620910645

Token 442: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03611348941922188
    2. '<|end|>' → logprob: -3.5361135005950928
    3. ' if' → logprob: -5.411113262176514
    4. ',' → logprob: -7.661113262176514
    5. 'if' → logprob: -8.161113739013672
    6. ':' → logprob: -8.161113739013672
    7. '   ' → logprob: -8.286113739013672
    8. '<|end|>' → logprob: -9.036113739013672
    9. ')' → logprob: -9.286113739013672
    10. '        
' → logprob: -9.411113739013672

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011711753904819489
    2. '<|end|>' → logprob: -7.251171112060547
    3. 'if' → logprob: -8.876171112060547
    4. ' if' → logprob: -8.876171112060547
    5. '   ' → logprob: -9.251171112060547
    6. '```' → logprob: -9.751171112060547
    7. ')' → logprob: -11.751171112060547
    8. ',' → logprob: -12.501171112060547
    9. '
' → logprob: -12.501171112060547
    10. '<|end|>' → logprob: -13.001171112060547

Token 444: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14747336506843567
    2. 'if' (adapté à ' if') → logprob: -2.1474733352661133
    3. ' if' → logprob: -3.8974733352661133
    4. '   ' → logprob: -10.647473335266113
    5. '	if' → logprob: -11.772473335266113
    6. '<|end|>' → logprob: -12.147473335266113
    7. '```' → logprob: -13.022473335266113
    8. ' ' → logprob: -13.772473335266113
    9. '	' → logprob: -14.647473335266113
    10. '           ' → logprob: -15.272473335266113

Token 445: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26627087593078613
    2. 'i' → logprob: -1.6412708759307861
    3. ' (' → logprob: -3.766270875930786
    4. '(i' → logprob: -4.141270637512207
    5. '   ' → logprob: -7.391270637512207
    6. '(' → logprob: -8.641270637512207
    7. ' ' → logprob: -8.891270637512207
    8. '0' → logprob: -11.141270637512207
    9. '	i' → logprob: -11.391270637512207
    10. '  ' → logprob: -11.516270637512207

Token 446: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0108362827450037
    2. '(i' → logprob: -4.760836124420166
    3. ' i' → logprob: -6.135836124420166
    4. ' (' → logprob: -10.385836601257324
    5. '   ' → logprob: -11.510836601257324
    6. '0' → logprob: -12.010836601257324
    7. '(' → logprob: -12.510836601257324
    8. '	i' → logprob: -13.260836601257324
    9. ' ' → logprob: -13.510836601257324
    10. '{i' → logprob: -14.510836601257324

Token 447: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.37066060304641724
    2. ' <=' → logprob: -1.3706605434417725
    3. '>=' → logprob: -3.1206605434417725
    4. ' >=' → logprob: -4.495660781860352
    5. '   ' → logprob: -8.370660781860352
    6. '=' → logprob: -9.245660781860352
    7. '==' → logprob: -10.120660781860352
    8. '>' → logprob: -10.620660781860352
    9. ',' → logprob: -10.870660781860352
    10. ' ' → logprob: -11.120660781860352

Token 448: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003955036401748657
    2. '(i' → logprob: -5.753954887390137
    3. ' i' → logprob: -7.253954887390137
    4. ' (' → logprob: -10.253954887390137
    5. '   ' → logprob: -10.503954887390137
    6. ' ' → logprob: -12.628954887390137
    7. '(' → logprob: -13.378954887390137
    8. '	i' → logprob: -14.128954887390137
    9. '  ' → logprob: -15.003954887390137
    10. '{i' → logprob: -15.003954887390137

Token 449: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1797853708267212
    2. ' -' → logprob: -1.8047853708267212
    3. '<=' → logprob: -11.55478572845459
    4. ' ' → logprob: -11.67978572845459
    5. '-a' → logprob: -12.30478572845459
    6. ',' → logprob: -12.67978572845459
    7. ' <=' → logprob: -12.80478572845459
    8. '-i' → logprob: -13.17978572845459
    9. '   ' → logprob: -13.42978572845459
    10. '-
' → logprob: -13.67978572845459

Token 450: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.50002098083496
    4. '	a' → logprob: -20.12502098083496
    5. ' ' → logprob: -20.25002098083496
    6. 'A' → logprob: -20.75002098083496
    7. 'а' → logprob: -21.87502098083496
    8. '_a' → logprob: -22.25002098083496
    9. '  ' → logprob: -22.50002098083496
    10. '    ' → logprob: -22.87502098083496

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06364203244447708
    2. ':
' → logprob: -2.8136420249938965
    3. '       ' → logprob: -7.1886420249938965
    4. '):' → logprob: -8.438642501831055
    5. '):
' → logprob: -8.813642501831055
    6. '   ' → logprob: -8.938642501831055
    7. ' :' → logprob: -9.438642501831055
    8. ' and' → logprob: -9.563642501831055
    9. ']:' → logprob: -10.063642501831055
    10. '==' → logprob: -10.438642501831055

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00477199163287878
    2. '       ' → logprob: -5.379772186279297
    3. '```' → logprob: -9.754772186279297
    4. 'ret' → logprob: -10.629772186279297
    5. ',' → logprob: -11.129772186279297
    6. '<|end|>' → logprob: -11.504772186279297
    7. ' ret' → logprob: -11.879772186279297
    8. '               ' → logprob: -12.004772186279297
    9. '            
' → logprob: -12.629772186279297
    10. '	       ' → logprob: -12.629772186279297

Token 453: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.23763510584831238
    2. '           ' → logprob: -1.6126351356506348
    3. '       ' → logprob: -4.737635135650635
    4. ' ret' → logprob: -5.737635135650635
    5. '               ' → logprob: -10.362634658813477
    6. '            
' → logprob: -10.362634658813477
    7. '
' → logprob: -10.612634658813477
    8. 'X' → logprob: -10.612634658813477
    9. 'retval' → logprob: -11.362634658813477
    10. 'return' → logprob: -11.737634658813477

Token 454: ' Si' (ID: 7832)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0024078846909105778
    2. '           ' → logprob: -6.127408027648926
    3. ' ret' → logprob: -9.127408027648926
    4. '       ' → logprob: -9.252408027648926
    5. 'X' → logprob: -11.877408027648926
    6. '
' → logprob: -12.752408027648926
    7. '            
' → logprob: -12.877408027648926
    8. '#' → logprob: -13.502408027648926
    9. '   ' → logprob: -14.127408027648926
    10. 'return' → logprob: -14.502408027648926

Token 455: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5380363464355469
    2. ' ret' → logprob: -1.2880363464355469
    3. 'X' → logprob: -2.288036346435547
    4. '           ' → logprob: -3.913036346435547
    5. ' X' → logprob: -4.163036346435547
    6. '0' → logprob: -6.038036346435547
    7. '   ' → logprob: -8.538036346435547
    8. '               ' → logprob: -8.538036346435547
    9. '       ' → logprob: -8.913036346435547
    10. ' ' → logprob: -9.913036346435547

Token 456: ' condition' (ID: 7060)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.02297022193670273
    2. ' ret' → logprob: -3.897970199584961
    3. 'X' → logprob: -6.397970199584961
    4. '           ' → logprob: -7.647970199584961
    5. '       ' → logprob: -9.897970199584961
    6. ' X' → logprob: -10.147970199584961
    7. '   ' → logprob: -10.772970199584961
    8. '0' → logprob: -10.897970199584961
    9. 'count' → logprob: -10.897970199584961
    10. '            
' → logprob: -11.272970199584961

Token 457: ' précédente' (ID: 177319)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21180878579616547
    2. ':' → logprob: -1.8368088006973267
    3. ':
' → logprob: -4.086808681488037
    4. '       ' → logprob: -5.086808681488037
    5. ',' → logprob: -5.836808681488037
    6. '               ' → logprob: -5.836808681488037
    7. ' is' → logprob: -7.211808681488037
    8. '==' → logprob: -7.586808681488037
    9. ' and' → logprob: -7.961808681488037
    10. 'X' → logprob: -8.586809158325195

Token 458: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3905470371246338
    2. ':
' → logprob: -1.7655470371246338
    3. '           ' → logprob: -2.015547037124634
    4. '       ' → logprob: -4.515546798706055
    5. ',' → logprob: -5.765546798706055
    6. 'ret' → logprob: -6.265546798706055
    7. 'and' → logprob: -6.890546798706055
    8. ' and' → logprob: -7.015546798706055
    9. '==' → logprob: -7.890546798706055
    10. '   ' → logprob: -9.640546798706055

Token 459: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.48876407742500305
    2. 'v' → logprob: -0.9887640476226807
    3. 'true' → logprob: -4.48876428604126
    4. ' True' → logprob: -5.86376428604126
    5. 'V' → logprob: -8.863763809204102
    6. '           ' → logprob: -9.238763809204102
    7. '   ' → logprob: -9.363763809204102
    8. '0' → logprob: -10.488763809204102
    9. '       ' → logprob: -10.488763809204102
    10. 's' → logprob: -11.113763809204102

Token 460: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9238045811653137
    2. ',' → logprob: -1.173804521560669
    3. ':' → logprob: -1.423804521560669
    4. ':
' → logprob: -3.798804521560669
    5. '               ' → logprob: -4.423804759979248
    6. ' and' → logprob: -4.673804759979248
    7. '       ' → logprob: -4.923804759979248
    8. 'and' → logprob: -6.673804759979248
    9. ',
' → logprob: -8.67380428314209
    10. ' :' → logprob: -9.04880428314209

Token 461: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6477952599525452
    2. 'ret' → logprob: -0.7727952599525452
    3. ' ret' → logprob: -4.2727952003479
    4. '       ' → logprob: -7.2727952003479
    5. '
' → logprob: -8.522795677185059
    6. '               ' → logprob: -9.147795677185059
    7. '            
' → logprob: -9.647795677185059
    8. 'X' → logprob: -11.272795677185059
    9. '$ret' → logprob: -12.022795677185059
    10. 'return' → logprob: -12.272795677185059

Token 462: ' ajoute' (ID: 91611)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.019207192584872246
    2. ' ret' → logprob: -4.019207000732422
    3. '+=' → logprob: -8.019207000732422
    4. '           ' → logprob: -8.144207000732422
    5. ' +=' → logprob: -8.644207000732422
    6. '       ' → logprob: -8.769207000732422
    7. 'X' → logprob: -10.644207000732422
    8. 'continue' → logprob: -11.144207000732422
    9. 'acc' → logprob: -12.144207000732422
    10. '	ret' → logprob: -12.269207000732422

Token 463: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004397005774080753
    2. ' X' → logprob: -5.504396915435791
    3. '           ' → logprob: -8.62939739227295
    4. '1' → logprob: -9.00439739227295
    5. '               ' → logprob: -11.87939739227295
    6. '   ' → logprob: -12.75439739227295
    7. 'ret' → logprob: -13.00439739227295
    8. '(X' → logprob: -13.50439739227295
    9. '       ' → logprob: -14.00439739227295
    10. '                   ' → logprob: -14.50439739227295

Token 464: ' valeur' (ID: 41664)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0011174732353538275
    2. ' X' → logprob: -7.001117706298828
    3. 'ret' → logprob: -8.751117706298828
    4. '1' → logprob: -10.876117706298828
    5. 'value' → logprob: -12.251117706298828
    6. 'val' → logprob: -12.376117706298828
    7. 'x' → logprob: -12.876117706298828
    8. ' ret' → logprob: -12.876117706298828
    9. '   ' → logprob: -13.001117706298828
    10. '
' → logprob: -13.126117706298828

Token 465: ' associ' (ID: 5516)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1577029973268509
    2. ' X' → logprob: -2.032702922821045
    3. '           ' → logprob: -5.282702922821045
    4. '   ' → logprob: -5.782702922821045
    5. 'ret' → logprob: -5.782702922821045
    6. '       ' → logprob: -6.532702922821045
    7. ' de' → logprob: -7.782702922821045
    8. ' à' → logprob: -7.907702922821045
    9. 'de' → logprob: -7.907702922821045
    10. 'à' → logprob: -8.157703399658203

Token 466: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01728716678917408
    2. 'é' → logprob: -4.142287254333496
    3. 'à' → logprob: -8.017287254333496
    4. '   ' → logprob: -8.142287254333496
    5. ' à' → logprob: -8.892287254333496
    6. '```' → logprob: -9.142287254333496
    7. '       ' → logprob: -9.392287254333496
    8. 'X' → logprob: -10.392287254333496
    9. 'e' → logprob: -10.392287254333496
    10. '[' → logprob: -10.517287254333496

Token 467: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4209958612918854
    2. 'à' → logprob: -1.420995831489563
    3. 'a' → logprob: -2.5459959506988525
    4. ' a' → logprob: -5.295995712280273
    5. 'to' → logprob: -5.420995712280273
    6. '           ' → logprob: -5.795995712280273
    7. '```' → logprob: -5.920995712280273
    8. '(a' → logprob: -6.670995712280273
    9. 'dans' → logprob: -6.795995712280273
    10. 'X' → logprob: -6.920995712280273

Token 468: ' la' (ID: 557)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03382538631558418
    2. ' X' → logprob: -4.283825397491455
    3. 'i' → logprob: -4.533825397491455
    4. '(i' → logprob: -6.283825397491455
    5. ' i' → logprob: -6.283825397491455
    6. '[i' → logprob: -6.283825397491455
    7. 'a' → logprob: -6.408825397491455
    8. ' (' → logprob: -7.533825397491455
    9. '[a' → logprob: -7.908825397491455
    10. '(a' → logprob: -8.658824920654297

Token 469: ' clé' (ID: 83188)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0928216427564621
    2. 'i' → logprob: -3.2178215980529785
    3. ' X' → logprob: -3.7178215980529785
    4. 'a' → logprob: -4.9678215980529785
    5. ' i' → logprob: -4.9678215980529785
    6. '(i' → logprob: -5.7178215980529785
    7. ' (' → logprob: -5.8428215980529785
    8. '[a' → logprob: -6.7178215980529785
    9. '[i' → logprob: -6.9678215980529785
    10. '(a' → logprob: -6.9678215980529785

Token 470: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15301421284675598
    2. 'i' → logprob: -2.0280141830444336
    3. ' i' → logprob: -5.028014183044434
    4. '(i' → logprob: -6.028014183044434
    5. '[(' → logprob: -8.028014183044434
    6. ' (' → logprob: -8.153014183044434
    7. '   ' → logprob: -8.278014183044434
    8. '[' → logprob: -9.153014183044434
    9. '`' → logprob: -9.528014183044434
    10. ' [' → logprob: -9.653014183044434

Token 471: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00855700857937336
    2. ' i' → logprob: -5.383556842803955
    3. '(i' → logprob: -6.133556842803955
    4. 'a' → logprob: -6.883556842803955
    5. ')' → logprob: -8.633557319641113
    6. '0' → logprob: -8.633557319641113
    7. ' (' → logprob: -9.508557319641113
    8. '   ' → logprob: -9.883557319641113
    9. '[i' → logprob: -10.133557319641113
    10. 'X' → logprob: -10.258557319641113

Token 472: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3616318702697754
    2. ' -' → logprob: -1.2366318702697754
    3. '-a' → logprob: -4.361631870269775
    4. 'a' → logprob: -8.361631393432617
    5. '-
' → logprob: -10.736631393432617
    6. ')' → logprob: -11.111631393432617
    7. '-ai' → logprob: -11.486631393432617
    8. ' ' → logprob: -11.986631393432617
    9. '[' → logprob: -11.986631393432617
    10. '-i' → logprob: -12.111631393432617

Token 473: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.157039049663581e-05
    2. ' a' → logprob: -9.875051498413086
    3. '(a' → logprob: -17.625051498413086
    4. ' ' → logprob: -17.750051498413086
    5. '	a' → logprob: -17.875051498413086
    6. '   ' → logprob: -17.875051498413086
    7. '```' → logprob: -18.375051498413086
    8. ''a' → logprob: -18.750051498413086
    9. '_a' → logprob: -18.875051498413086
    10. 'а' → logprob: -19.000051498413086

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04888824373483658
    2. '])' → logprob: -3.2988882064819336
    3. ']' → logprob: -4.798888206481934
    4. ')]' → logprob: -6.923888206481934
    5. ' )' → logprob: -6.923888206481934
    6. ')])' → logprob: -8.798888206481934
    7. '       ' → logprob: -9.298888206481934
    8. '   ' → logprob: -9.423888206481934
    9. '`)' → logprob: -10.173888206481934
    10. ')
' → logprob: -10.298888206481934

Token 475: ' dans' (ID: 2671)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6710386276245117
    2. '           ' → logprob: -1.6710386276245117
    3. ' in' → logprob: -2.1710386276245117
    4. '       ' → logprob: -2.2960386276245117
    5. '][' → logprob: -3.6710386276245117
    6. '               ' → logprob: -5.046038627624512
    7. 'in' → logprob: -5.046038627624512
    8. ' to' → logprob: -5.171038627624512
    9. ' dans' → logprob: -5.171038627624512
    10. 'to' → logprob: -5.296038627624512

Token 476: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.749814019713085e-06
    2. ' X' → logprob: -12.250006675720215
    3. 'ret' → logprob: -13.250006675720215
    4. '   ' → logprob: -16.37500762939453
    5. '       ' → logprob: -17.25000762939453
    6. '```' → logprob: -18.00000762939453
    7. ' ' → logprob: -18.75000762939453
    8. '
' → logprob: -18.87500762939453
    9. '           ' → logprob: -19.12500762939453
    10. '	X' → logprob: -19.25000762939453

Token 477: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0094091892242432
    2. ' to' → logprob: -1.7594091892242432
    3. '           ' → logprob: -2.134409189224243
    4. '[i' → logprob: -2.134409189224243
    5. '       ' → logprob: -2.509409189224243
    6. '[a' → logprob: -2.884409189224243
    7. '[to' → logprob: -3.759409189224243
    8. 'to' → logprob: -3.759409189224243
    9. ']' → logprob: -4.384408950805664
    10. ')' → logprob: -5.009408950805664

Token 478: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -7.64839569455944e-05
    2. ' ret' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.625076293945312
    4. '	ret' → logprob: -15.375076293945312
    5. '       ' → logprob: -16.625076293945312
    6. '$ret' → logprob: -17.250076293945312
    7. 'retval' → logprob: -17.375076293945312
    8. '_ret' → logprob: -18.500076293945312
    9. '(ret' → logprob: -18.625076293945312
    10. '
' → logprob: -18.750076293945312

Token 479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6786504983901978
    2. '           ' → logprob: -1.3036504983901978
    3. ' +=' → logprob: -1.8036504983901978
    4. '+=' → logprob: -3.678650379180908
    5. '[' → logprob: -4.303650379180908
    6. '               ' → logprob: -4.678650379180908
    7. '
' → logprob: -5.928650379180908
    8. ')' → logprob: -6.928650379180908
    9. 'ret' → logprob: -7.428650379180908
    10. '[X' → logprob: -7.428650379180908

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004963174578733742
    2. 'ret' → logprob: -8.125495910644531
    3. ' ret' → logprob: -8.625495910644531
    4. '               ' → logprob: -11.500495910644531
    5. '       ' → logprob: -11.625495910644531
    6. '          ' → logprob: -14.000495910644531
    7. '   ' → logprob: -15.000495910644531
    8. '
' → logprob: -16.00049591064453
    9. '                   ' → logprob: -16.25049591064453
    10. '            
' → logprob: -16.50049591064453

Token 481: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.09743698686361313
    2. '       ' → logprob: -3.0974369049072266
    3. ' ret' → logprob: -3.4724369049072266
    4. '           ' → logprob: -4.097436904907227
    5. '   ' → logprob: -11.472436904907227
    6. '	ret' → logprob: -12.722436904907227
    7. '               ' → logprob: -13.097436904907227
    8. '
' → logprob: -13.972436904907227
    9. '(ret' → logprob: -14.222436904907227
    10. '$ret' → logprob: -14.847436904907227

Token 482: ' Si' (ID: 7832)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5797603726387024
    2. '       ' → logprob: -0.8297603726387024
    3. 'ret' → logprob: -5.704760551452637
    4. ' ret' → logprob: -7.829760551452637
    5. '               ' → logprob: -9.829760551452637
    6. '
' → logprob: -11.579760551452637
    7. '   ' → logprob: -11.579760551452637
    8. '```' → logprob: -11.954760551452637
    9. '          ' → logprob: -13.704760551452637
    10. '        
' → logprob: -14.079760551452637

Token 483: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4081040322780609
    2. 'X' → logprob: -2.2831039428710938
    3. ' (' → logprob: -2.5331039428710938
    4. 'i' → logprob: -2.6581039428710938
    5. ' i' → logprob: -3.7831039428710938
    6. '0' → logprob: -4.033103942871094
    7. 'ret' → logprob: -4.158103942871094
    8. '(a' → logprob: -4.783103942871094
    9. ' X' → logprob: -4.908103942871094
    10. ' ret' → logprob: -6.033103942871094

Token 484: ' clé' (ID: 83188)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.086546778678894
    2. '(a' → logprob: -1.211546778678894
    3. 'X' → logprob: -1.586546778678894
    4. 'i' → logprob: -2.8365468978881836
    5. 'a' → logprob: -3.0865468978881836
    6. ' (' → logprob: -3.3365468978881836
    7. 'ret' → logprob: -5.086546897888184
    8. '0' → logprob: -5.211546897888184
    9. '[i' → logprob: -5.961546897888184
    10. ' i' → logprob: -6.961546897888184

Token 485: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5824123024940491
    2. ' (' → logprob: -0.8324123024940491
    3. '(a' → logprob: -5.707412242889404
    4. ' not' → logprob: -6.707412242889404
    5. '[i' → logprob: -7.332412242889404
    6. '(' → logprob: -7.582412242889404
    7. 'not' → logprob: -8.582412719726562
    8. '(n' → logprob: -9.082412719726562
    9. ' a' → logprob: -9.457412719726562
    10. '   ' → logprob: -9.707412719726562

Token 486: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04699917882680893
    2. ' i' → logprob: -3.796999216079712
    3. '(i' → logprob: -3.921999216079712
    4. ' (' → logprob: -5.671998977661133
    5. '0' → logprob: -9.546998977661133
    6. '[i' → logprob: -10.171998977661133
    7. '   ' → logprob: -10.171998977661133
    8. ' ' → logprob: -11.171998977661133
    9. ')' → logprob: -11.546998977661133
    10. '{i' → logprob: -11.671998977661133

Token 487: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0052869319915771
    2. ' -' → logprob: -1.1302869319915771
    3. '-' → logprob: -1.2552869319915771
    4. '(i' → logprob: -4.880287170410156
    5. '[' → logprob: -5.130287170410156
    6. '-i' → logprob: -6.380287170410156
    7. '[a' → logprob: -6.505287170410156
    8. ' (' → logprob: -6.505287170410156
    9. '-(' → logprob: -6.755287170410156
    10. '[-' → logprob: -6.880287170410156

Token 488: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6362016201019287
    2. ' a' → logprob: -1.5112016201019287
    3. ' (' → logprob: -2.1362016201019287
    4. ' i' → logprob: -2.6362016201019287
    5. 'i' → logprob: -3.0112016201019287
    6. '(a' → logprob: -4.886201858520508
    7. '(i' → logprob: -5.886201858520508
    8. ' ' → logprob: -8.386201858520508
    9. '   ' → logprob: -9.386201858520508
    10. ' -' → logprob: -9.511201858520508

Token 489: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002795703476294875
    2. ']' → logprob: -8.500279426574707
    3. ' )' → logprob: -10.625279426574707
    4. '])' → logprob: -10.625279426574707
    5. '   ' → logprob: -12.125279426574707
    6. 'not' → logprob: -12.500279426574707
    7. ')]' → logprob: -12.500279426574707
    8. ' not' → logprob: -12.875279426574707
    9. 'n' → logprob: -13.375279426574707
    10. '')' → logprob: -13.500279426574707

Token 490: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1980890035629272
    2. ']' → logprob: -1.5730890035629272
    3. 'in' → logprob: -1.8230890035629272
    4. ' in' → logprob: -1.8230890035629272
    5. ' not' → logprob: -2.573089122772217
    6. 'not' → logprob: -2.823089122772217
    7. 'n' → logprob: -4.323089122772217
    8. ' n' → logprob: -4.823089122772217
    9. ' is' → logprob: -5.198089122772217
    10. 'is' → logprob: -7.573089122772217

Token 491: ''ex' (ID: 23472)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9829853177070618
    2. ' not' → logprob: -1.107985258102417
    3. 'not' → logprob: -1.732985258102417
    4. ')' → logprob: -3.107985258102417
    5. ' pas' → logprob: -4.232985496520996
    6. 'a' → logprob: -4.357985496520996
    7. ' in' → logprob: -4.482985496520996
    8. 'in' → logprob: -4.482985496520996
    9. 'ot' → logprob: -5.107985496520996
    10. 'pas' → logprob: -5.982985496520996

Token 492: 'iste' (ID: 4872)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03499040752649307
    2. 'iste' → logprob: -3.7849903106689453
    3. 'ist' → logprob: -4.784990310668945
    4. 'isted' → logprob: -6.784990310668945
    5. 'ists' → logprob: -7.159990310668945
    6. 'istant' → logprob: -8.034990310668945
    7. 'istent' → logprob: -8.159990310668945
    8. 'in' → logprob: -8.784990310668945
    9. ']' → logprob: -9.159990310668945
    10. 'ister' → logprob: -9.659990310668945

Token 493: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1584724336862564
    2. 'pas' → logprob: -2.1584725379943848
    3. 'not' → logprob: -3.7834725379943848
    4. ' not' → logprob: -5.283472537994385
    5. ']' → logprob: -6.033472537994385
    6. ')' → logprob: -8.533472061157227
    7. '_pas' → logprob: -8.783472061157227
    8. '   ' → logprob: -9.408472061157227
    9. '       ' → logprob: -9.658472061157227
    10. 'n't' → logprob: -9.783472061157227

Token 494: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9641813039779663
    2. ']' → logprob: -1.2141813039779663
    3. ',' → logprob: -2.339181423187256
    4. 'in' → logprob: -2.589181423187256
    5. ':' → logprob: -2.964181423187256
    6. ' dans' → logprob: -3.464181423187256
    7. 'dans' → logprob: -3.589181423187256
    8. ')' → logprob: -4.214181423187256
    9. 'else' → logprob: -5.214181423187256
    10. 'X' → logprob: -5.714181423187256

Token 495: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.011050296947360039
    2. ' X' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.8860502243042
    4. ')' → logprob: -13.8860502243042
    5. ' ' → logprob: -15.1360502243042
    6. '	X' → logprob: -15.7610502243042
    7. '       ' → logprob: -16.636051177978516
    8. '
' → logprob: -17.011051177978516
    9. '```' → logprob: -17.011051177978516
    10. '(X' → logprob: -17.136051177978516

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.703715443611145
    2. ':' → logprob: -1.328715443611145
    3. ')' → logprob: -2.2037153244018555
    4. '),' → logprob: -2.7037153244018555
    5. '           ' → logprob: -4.0787153244018555
    6. '       ' → logprob: -4.5787153244018555
    7. '],' → logprob: -4.8287153244018555
    8. ']' → logprob: -4.9537153244018555
    9. ':
' → logprob: -5.0787153244018555
    10. '):' → logprob: -5.0787153244018555

Token 497: ' grâce' (ID: 31589)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.20715253055095673
    2. 'ret' → logprob: -1.7071524858474731
    3. '0' → logprob: -5.457152366638184
    4. '           ' → logprob: -6.957152366638184
    5. ' X' → logprob: -8.957152366638184
    6. '       ' → logprob: -9.207152366638184
    7. '   ' → logprob: -9.582152366638184
    8. '               ' → logprob: -10.207152366638184
    9. '	ret' → logprob: -10.332152366638184
    10. 'X' → logprob: -10.832152366638184

Token 498: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1682891845703125
    2. 'à' → logprob: -2.0432891845703125
    3. ' au' → logprob: -4.9182891845703125
    4. 'au' → logprob: -5.0432891845703125
    5. ' to' → logprob: -5.7932891845703125
    6. '   ' → logprob: -5.7932891845703125
    7. '           ' → logprob: -6.4182891845703125
    8. 'to' → logprob: -6.9182891845703125
    9. '       ' → logprob: -7.6682891845703125
    10. ' ' → logprob: -7.6682891845703125

Token 499: ' defaultdict' (ID: 107098)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.19833944737911224
    2. 'default' → logprob: -2.0733394622802734
    3. '0' → logprob: -3.9483394622802734
    4. ' X' → logprob: -4.073339462280273
    5. ' defaultdict' → logprob: -4.323339462280273
    6. 'la' → logprob: -6.198339462280273
    7. ' la' → logprob: -7.073339462280273
    8. 'l' → logprob: -7.698339462280273
    9. ' default' → logprob: -7.948339462280273
    10. ' ' → logprob: -7.948339462280273

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009859500452876091
    2. ')' → logprob: -5.384859561920166
    3. '[' → logprob: -7.009859561920166
    4. '),' → logprob: -7.009859561920166
    5. '[i' → logprob: -7.259859561920166
    6. '           ' → logprob: -7.259859561920166
    7. ' elle' → logprob: -7.884859561920166
    8. ' it' → logprob: -7.884859561920166
    9. ' ,' → logprob: -8.384859085083008
    10. '   ' → logprob: -8.509859085083008

Token 501: ' sa' (ID: 880)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.1929851919412613
    2. ' ret' → logprob: -1.8179851770401
    3. '           ' → logprob: -4.9429850578308105
    4. '0' → logprob: -5.4429850578308105
    5. ' X' → logprob: -7.5679850578308105
    6. '       ' → logprob: -7.6929850578308105
    7. 'X' → logprob: -8.692985534667969
    8. ' on' → logprob: -9.067985534667969
    9. '   ' → logprob: -9.317985534667969
    10. '               ' → logprob: -9.317985534667969

Token 502: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11133808642625809
    2. 'value' → logprob: -2.6113381385803223
    3. ' valeur' → logprob: -3.7363381385803223
    4. ' value' → logprob: -5.486338138580322
    5. ' val' → logprob: -5.611338138580322
    6. 'default' → logprob: -9.486337661743164
    7. '[val' → logprob: -9.986337661743164
    8. '0' → logprob: -10.361337661743164
    9. '_val' → logprob: -10.361337661743164
    10. ' vale' → logprob: -10.486337661743164

Token 503: ' est' (ID: 893)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.6241416335105896
    2. ' est' → logprob: -1.1241416931152344
    3. '0' → logprob: -2.4991416931152344
    4. 'sera' → logprob: -3.6241416931152344
    5. ' par' → logprob: -5.374141693115234
    6. 'default' → logprob: -5.499141693115234
    7. ' vaut' → logprob: -5.624141693115234
    8. 's' → logprob: -5.749141693115234
    9. ' ' → logprob: -5.999141693115234
    10. '#' → logprob: -6.124141693115234

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024835076183080673
    2. ' ' → logprob: -6.002483367919922
    3. '   ' → logprob: -13.002483367919922
    4. '```' → logprob: -13.752483367919922
    5. 'autom' → logprob: -14.002483367919922
    6. ' zero' → logprob: -14.252483367919922
    7. 'zero' → logprob: -14.627483367919922
    8. ' zéro' → logprob: -14.877483367919922
    9. '    ' → logprob: -15.002483367919922
    10. '           ' → logprob: -15.377483367919922

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. 'autom' → logprob: -15.500296592712402
    4. 'zero' → logprob: -15.750296592712402
    5. '   ' → logprob: -16.25029754638672
    6. '```' → logprob: -16.87529754638672
    7. '`' → logprob: -17.75029754638672
    8. '[' → logprob: -17.75029754638672
    9. ' automatiquement' → logprob: -18.00029754638672
    10. 'z' → logprob: -18.00029754638672

Token 506: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11363674700260162
    2. '       ' → logprob: -2.2386367321014404
    3. '
' → logprob: -8.36363697052002
    4. ',' → logprob: -8.73863697052002
    5. '            
' → logprob: -9.23863697052002
    6. ')' → logprob: -9.36363697052002
    7. '        
' → logprob: -9.48863697052002
    8. '               ' → logprob: -9.73863697052002
    9. ':' → logprob: -10.61363697052002
    10. '   ' → logprob: -11.23863697052002

Token 507: ' donc' (ID: 14206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05651165172457695
    2. '       ' → logprob: -3.056511640548706
    3. '0' → logprob: -6.181511878967285
    4. 'ret' → logprob: -6.556511878967285
    5. ')' → logprob: -7.181511878967285
    6. ' ret' → logprob: -7.181511878967285
    7. '            
' → logprob: -7.181511878967285
    8. ' )' → logprob: -8.056511878967285
    9. '               ' → logprob: -8.056511878967285
    10. ' ' → logprob: -8.181511878967285

Token 508: ' on' (ID: 402)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.006442392244935036
    2. ' ret' → logprob: -5.756442546844482
    3. 'r' → logprob: -6.506442546844482
    4. 'auc' → logprob: -7.881442546844482
    5. ' rien' → logprob: -7.881442546844482
    6. '   ' → logprob: -8.381442070007324
    7. 'on' → logprob: -8.881442070007324
    8. 'cela' → logprob: -9.381442070007324
    9. 'continue' → logprob: -10.006442070007324
    10. '       ' → logprob: -10.006442070007324

Token 509: ' ajoute' (ID: 91611)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.8625227808952332
    2. 'continue' → logprob: -0.8625227808952332
    3. ' continue' → logprob: -2.487522840499878
    4. 'n' → logprob: -3.737522840499878
    5. 'ne' → logprob: -4.237522602081299
    6. ' ret' → logprob: -4.362522602081299
    7. 'contin' → logprob: -4.737522602081299
    8. ' ne' → logprob: -5.862522602081299
    9. ' n' → logprob: -5.987522602081299
    10. 'ignore' → logprob: -6.112522602081299

Token 510: ' ' (ID: 220)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3795415163040161
    2. '0' → logprob: -1.6295415163040161
    3. ' X' → logprob: -2.1295413970947266
    4. ' ' → logprob: -7.254541397094727
    5. '           ' → logprob: -8.754541397094727
    6. '               ' → logprob: -11.004541397094727
    7. '            ' → logprob: -11.879541397094727
    8. '```' → logprob: -12.004541397094727
    9. '1' → logprob: -12.754541397094727
    10. '       ' → logprob: -13.004541397094727

Token 511: '0' (ID: 15)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6328627467155457
    2. '0' → logprob: -0.7578627467155457
    3. ' X' → logprob: -9.00786304473877
    4. 'r' → logprob: -10.63286304473877
    5. '```' → logprob: -10.75786304473877
    6. 'nothing' → logprob: -10.88286304473877
    7. 'ret' → logprob: -11.13286304473877
    8. ' ' → logprob: -11.13286304473877
    9. '(X' → logprob: -12.00786304473877
    10. 'x' → logprob: -12.13286304473877

Token 512: ' sans' (ID: 9828)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02738667093217373
    2. '       ' → logprob: -3.6523866653442383
    3. ')' → logprob: -7.777386665344238
    4. '   ' → logprob: -9.027386665344238
    5. '               ' → logprob: -9.152386665344238
    6. ' +=' → logprob: -9.152386665344238
    7. ',' → logprob: -10.027386665344238
    8. ' +' → logprob: -10.027386665344238
    9. '
' → logprob: -10.402386665344238
    10. '```' → logprob: -10.527386665344238

Token 513: ' erreur' (ID: 102885)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.35263368487358093
    2. 'changer' → logprob: -1.4776337146759033
    3. 'ris' → logprob: -3.9776337146759033
    4. 'faire' → logprob: -4.852633476257324
    5. 'cr' → logprob: -4.977633476257324
    6. 'pro' → logprob: -5.477633476257324
    7. ' erreur' → logprob: -6.102633476257324
    8. 'augment' → logprob: -6.102633476257324
    9. 'error' → logprob: -6.227633476257324
    10. '#' → logprob: -6.227633476257324

Token 514: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08919364959001541
    2. '       ' → logprob: -2.46419358253479
    3. '
' → logprob: -8.589193344116211
    4. ',' → logprob: -10.589193344116211
    5. '        
' → logprob: -11.464193344116211
    6. '<|end|>' → logprob: -11.464193344116211
    7. '            
' → logprob: -11.964193344116211
    8. '   ' → logprob: -12.214193344116211
    9. '               ' → logprob: -12.464193344116211
    10. ')' → logprob: -13.714193344116211

Token 515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03804745525121689
    2. '       ' → logprob: -3.2880475521087646
    3. '   ' → logprob: -12.913047790527344
    4. '```' → logprob: -12.913047790527344
    5. '               ' → logprob: -14.663047790527344
    6. '
' → logprob: -15.288047790527344
    7. 'ret' → logprob: -15.413047790527344
    8. '		' → logprob: -16.163047790527344
    9. '          ' → logprob: -16.788047790527344
    10. '                   ' → logprob: -17.663047790527344

Token 516: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.10851181298494339
    2. '       ' → logprob: -2.6085119247436523
    3. '           ' → logprob: -3.6085119247436523
    4. ' ret' → logprob: -6.233511924743652
    5. '   ' → logprob: -8.983511924743652
    6. '               ' → logprob: -12.733511924743652
    7. '	ret' → logprob: -13.233511924743652
    8. '      ' → logprob: -14.733511924743652
    9. '     ' → logprob: -14.983511924743652
    10. '          ' → logprob: -15.108511924743652

Token 517: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.048593729734420776
    2. '+=' → logprob: -3.048593759536743
    3. '+' → logprob: -12.298593521118164
    4. ' +' → logprob: -14.673593521118164
    5. ']+=' → logprob: -14.798593521118164
    6. '+=(' → logprob: -15.173593521118164
    7. '    ' → logprob: -15.423593521118164
    8. '   ' → logprob: -16.048593521118164
    9. '=' → logprob: -16.298593521118164
    10. '+="' → logprob: -16.423593521118164

Token 518: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.988221684878226e-06
    2. ' X' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.37500762939453
    4. '	X' → logprob: -19.62500762939453
    5. ' ' → logprob: -20.00000762939453
    6. '(X' → logprob: -21.00000762939453
    7. '  ' → logprob: -21.62500762939453
    8. '       ' → logprob: -22.37500762939453
    9. '[X' → logprob: -22.62500762939453
    10. '>X' → logprob: -22.62500762939453

Token 519: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001043647644110024
    2. '[' → logprob: -6.876043796539307
    3. '[(' → logprob: -11.751043319702148
    4. '[a' → logprob: -13.501043319702148
    5. ' [' → logprob: -14.251043319702148
    6. '[
' → logprob: -14.626043319702148
    7. 'i' → logprob: -15.876043319702148
    8. '(i' → logprob: -15.876043319702148
    9. '[-' → logprob: -17.25104331970215
    10. '\[' → logprob: -17.50104331970215

Token 520: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0850658118724823
    2. ' -' → logprob: -2.5850658416748047
    3. '-a' → logprob: -5.460065841674805
    4. '[-' → logprob: -6.460065841674805
    5. '[' → logprob: -8.335065841674805
    6. 'a' → logprob: -11.085065841674805
    7. '   ' → logprob: -11.210065841674805
    8. '[a' → logprob: -11.335065841674805
    9. '-
' → logprob: -11.585065841674805
    10. '-i' → logprob: -12.085065841674805

Token 521: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014170913025736809
    2. ' a' → logprob: -4.264171123504639
    3. ' ' → logprob: -12.63917064666748
    4. '   ' → logprob: -13.76417064666748
    5. '	a' → logprob: -13.76417064666748
    6. '_a' → logprob: -14.01417064666748
    7. '    ' → logprob: -15.26417064666748
    8. ''a' → logprob: -15.38917064666748
    9. '  ' → logprob: -15.63917064666748
    10. '#a' → logprob: -16.451671600341797

Token 522: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -6.575563020305708e-05
    2. ' ]' → logprob: -10.125065803527832
    3. ']
' → logprob: -11.000065803527832
    4. '()]' → logprob: -12.500065803527832
    5. '   ' → logprob: -13.625065803527832
    6. '       ' → logprob: -14.250065803527832
    7. ')]' → logprob: -14.500065803527832
    8. ')' → logprob: -14.625065803527832
    9. ']()' → logprob: -14.875065803527832
    10. '])' → logprob: -15.125065803527832

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004314160905778408
    2. 'return' → logprob: -5.754313945770264
    3. '<|end|>' → logprob: -7.504313945770264
    4. ' return' → logprob: -8.379314422607422
    5. '    
' → logprob: -8.879314422607422
    6. ')' → logprob: -9.129314422607422
    7. '
' → logprob: -10.129314422607422
    8. '	return' → logprob: -10.504314422607422
    9. '```' → logprob: -11.379314422607422
    10. '       ' → logprob: -11.504314422607422

Token 524: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04686029627919197
    2. 'return' → logprob: -3.1718602180480957
    3. ' return' → logprob: -5.921860218048096
    4. '
' → logprob: -7.171860218048096
    5. '    
' → logprob: -8.046860694885254
    6. '	return' → logprob: -10.671860694885254
    7. ' 
' → logprob: -11.296860694885254
    8. ')' → logprob: -11.421860694885254
    9. '<|end|>' → logprob: -11.796860694885254
    10. '```' → logprob: -12.296860694885254

Token 525: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -8.65707261255011e-06
    2. ' return' → logprob: -12.250008583068848
    3. '   ' → logprob: -12.500008583068848
    4. 'ret' → logprob: -16.875009536743164
    5. '    
' → logprob: -17.500009536743164
    6. '```' → logprob: -19.250009536743164
    7. '
' → logprob: -19.500009536743164
    8. 'eturn' → logprob: -20.250009536743164
    9. '#' → logprob: -20.625009536743164
    10. '	return' → logprob: -20.625009536743164

Token 526: ' fonction' (ID: 17610)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25320449471473694
    2. ' return' → logprob: -1.5032044649124146
    3. '   ' → logprob: -6.753204345703125
    4. 'ret' → logprob: -10.253204345703125
    5. '
' → logprob: -10.378204345703125
    6. '    
' → logprob: -12.003204345703125
    7. ' ' → logprob: -12.003204345703125
    8. ':return' → logprob: -12.003204345703125
    9. '```' → logprob: -12.003204345703125
    10. '_return' → logprob: -12.128204345703125

Token 527: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4644585847854614
    2. 'return' → logprob: -1.4644585847854614
    3. '   ' → logprob: -1.9644585847854614
    4. ':return' → logprob: -10.589458465576172
    5. '	return' → logprob: -10.714458465576172
    6. '_return' → logprob: -10.964458465576172
    7. ' ' → logprob: -11.964458465576172
    8. ' retour' → logprob: -12.339458465576172
    9. ' returns' → logprob: -12.964458465576172
    10. '  ' → logprob: -12.964458465576172

Token 528: ' le' (ID: 505)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12693609297275543
    2. ' str' → logprob: -2.126936197280884
    3. '   ' → logprob: -11.751935958862305
    4. '	str' → logprob: -16.001935958862305
    5. ' ' → logprob: -17.501935958862305
    6. '(str' → logprob: -17.626935958862305
    7. ' f' → logprob: -17.876935958862305
    8. 'f' → logprob: -18.001935958862305
    9. '=str' → logprob: -18.251935958862305
    10. '"' → logprob: -18.626935958862305

Token 529: ' résultat' (ID: 62556)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.011149685829877853
    2. ' str' → logprob: -4.511149883270264
    3. 'ret' → logprob: -9.261149406433105
    4. '   ' → logprob: -13.136149406433105
    5. 'return' → logprob: -13.261149406433105
    6. '"' → logprob: -13.761149406433105
    7. 'string' → logprob: -14.636149406433105
    8. 'f' → logprob: -14.886149406433105
    9. '=str' → logprob: -15.261149406433105
    10. ' ret' → logprob: -15.511149406433105

Token 530: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016654232749715447
    2. '    
' → logprob: -7.6266655921936035
    3. ' return' → logprob: -7.7516655921936035
    4. '
' → logprob: -7.7516655921936035
    5. 'return' → logprob: -8.126665115356445
    6. '	return' → logprob: -11.626665115356445
    7. ' 
' → logprob: -12.751665115356445
    8. '```' → logprob: -12.751665115356445
    9. ':return' → logprob: -13.751665115356445
    10. '   
' → logprob: -13.751665115356445

Token 531: ' convert' (ID: 8452)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003659746435005218
    2. '
' → logprob: -8.7503662109375
    3. '    
' → logprob: -9.0003662109375
    4. 'return' → logprob: -9.8753662109375
    5. ' return' → logprob: -10.5003662109375
    6. '	return' → logprob: -12.7503662109375
    7. '```' → logprob: -13.8753662109375
    8. '   
' → logprob: -15.2503662109375
    9. '       ' → logprob: -15.6253662109375
    10. ' 
' → logprob: -15.8753662109375

Token 532: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02965860813856125
    2. 'it' → logprob: -4.029658794403076
    3. 'ie' → logprob: -4.654658794403076
    4. 'en' → logprob: -7.029658794403076
    5. '   ' → logprob: -8.154658317565918
    6. '```' → logprob: -8.529658317565918
    7. 'ret' → logprob: -8.654658317565918
    8. ' en' → logprob: -9.404658317565918
    9. 'to' → logprob: -9.654658317565918
    10. 'is' → logprob: -10.279658317565918

Token 533: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.8727402091026306
    2. 'str' → logprob: -1.1227402687072754
    3. 'en' → logprob: -1.4977402687072754
    4. ' str' → logprob: -4.872740268707275
    5. ' into' → logprob: -5.122740268707275
    6. 'to' → logprob: -5.247740268707275
    7. '(str' → logprob: -5.622740268707275
    8. 'into' → logprob: -5.997740268707275
    9. '   ' → logprob: -6.247740268707275
    10. 'return' → logprob: -6.497740268707275

Token 534: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0007188651943579316
    2. ' str' → logprob: -7.25071907043457
    3. 'string' → logprob: -12.00071907043457
    4. 'chaine' → logprob: -13.12571907043457
    5. '   ' → logprob: -14.87571907043457
    6. 'stri' → logprob: -16.12571907043457
    7. '=str' → logprob: -16.25071907043457
    8. '_str' → logprob: -16.62571907043457
    9. '	str' → logprob: -17.12571907043457
    10. '[str' → logprob: -17.75071907043457

Token 535: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11797574907541275
    2. ' return' → logprob: -2.7429757118225098
    3. 'return' → logprob: -3.1179757118225098
    4. '    
' → logprob: -7.11797571182251
    5. '_return' → logprob: -7.36797571182251
    6. '
' → logprob: -8.367976188659668
    7. '_' → logprob: -8.492976188659668
    8. '"' → logprob: -8.867976188659668
    9. '    ' → logprob: -8.992976188659668
    10. '  ' → logprob: -9.367976188659668

Token 536: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004716464783996344
    2. 'car' → logprob: -5.379716396331787
    3. ' str' → logprob: -10.254716873168945
    4. ' caractères' → logprob: -10.379716873168945
    5. 'chaine' → logprob: -11.504716873168945
    6. 'chars' → logprob: -11.754716873168945
    7. 'string' → logprob: -11.879716873168945
    8. 'stri' → logprob: -13.754716873168945
    9. 'return' → logprob: -14.004716873168945
    10. ' caracteres' → logprob: -14.004716873168945

Token 537: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09924263507127762
    2. 'return' → logprob: -2.599242687225342
    3. ' return' → logprob: -4.474242687225342
    4. '
' → logprob: -4.849242687225342
    5. '    
' → logprob: -7.599242687225342
    6. '	return' → logprob: -8.474242210388184
    7. '\n' → logprob: -9.099242210388184
    8. '\' → logprob: -10.474242210388184
    9. ' 
' → logprob: -11.224242210388184
    10. '```' → logprob: -11.224242210388184

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01381261833012104
    2. '
' → logprob: -5.01381254196167
    3. 'return' → logprob: -5.38881254196167
    4. ' return' → logprob: -6.26381254196167
    5. '    
' → logprob: -7.63881254196167
    6. '	return' → logprob: -10.263813018798828
    7. '\n' → logprob: -10.388813018798828
    8. '```' → logprob: -11.013813018798828
    9. '\' → logprob: -11.513813018798828
    10. ' 
' → logprob: -11.888813018798828

Token 539: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008687060908414423
    2. ' return' → logprob: -7.250868797302246
    3. '   ' → logprob: -8.750868797302246
    4. '	return' → logprob: -15.500868797302246
    5. '
' → logprob: -16.12586784362793
    6. '{return' → logprob: -16.62586784362793
    7. '```' → logprob: -17.75086784362793
    8. ':return' → logprob: -17.75086784362793
    9. 'str' → logprob: -19.00086784362793
    10. ')return' → logprob: -20.00086784362793

Token 540: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.02975083328783512
    2. ' str' → logprob: -3.5297508239746094
    3. '	str' → logprob: -15.02975082397461
    4. '(str' → logprob: -16.77975082397461
    5. '   ' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.27975082397461
    7. '"' → logprob: -18.90475082397461
    8. ' ' → logprob: -19.52975082397461
    9. '=str' → logprob: -19.77975082397461
    10. '```' → logprob: -20.52975082397461

Token 541: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.625004768371582
    3. 'ret' → logprob: -13.250004768371582
    4. '(return' → logprob: -17.8750057220459
    5. '(
' → logprob: -19.1250057220459
    6. '$ret' → logprob: -19.1250057220459
    7. ' (' → logprob: -19.3750057220459
    8. '(rest' → logprob: -19.7500057220459
    9. '(re' → logprob: -20.3750057220459
    10. '(rel' → logprob: -20.3750057220459

Token 542: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '())' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.625004768371582
    4. ')
' → logprob: -14.250004768371582
    5. '()' → logprob: -14.375004768371582
    6. '(' → logprob: -15.875004768371582
    7. ')`' → logprob: -16.0000057220459
    8. '[' → logprob: -16.1250057220459
    9. '))' → logprob: -17.1250057220459
    10. '')' → logprob: -17.2500057220459

Token 543: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: ' Ce' (ID: 14228)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' bloc' (ID: 51218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0278279110789299
    2. ' if' → logprob: -4.152827739715576
    3. '<|end|>' → logprob: -4.652827739715576
    4. '#' → logprob: -6.777827739715576
    5. '
' → logprob: -7.902827739715576
    6. '```' → logprob: -8.277828216552734
    7. '<|end|>' → logprob: -8.402828216552734
    8. ':' → logprob: -9.777828216552734
    9. '#if' → logprob: -9.777828216552734
    10. '{' → logprob: -10.402828216552734

Token 547: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0014251177199184895
    2. 'if' → logprob: -6.626425266265869
    3. 'ifi' → logprob: -10.626424789428711
    4. 'ifié' → logprob: -11.126424789428711
    5. 'ifies' → logprob: -11.251424789428711
    6. 'ifier' → logprob: -11.251424789428711
    7. 'ification' → logprob: -11.501424789428711
    8. 'ifiez' → logprob: -11.751424789428711
    9. 'i' → logprob: -12.001424789428711
    10. '```' → logprob: -12.876424789428711

Token 548: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12856484949588776
    2. ' if' → logprob: -2.1285648345947266
    3. '<|end|>' → logprob: -7.003564834594727
    4. 'si' → logprob: -8.128564834594727
    5. ' si' → logprob: -8.878564834594727
    6. ' ' → logprob: -9.253564834594727
    7. '```' → logprob: -10.128564834594727
    8. 's' → logprob: -10.503564834594727
    9. '  ' → logprob: -10.753564834594727
    10. '_if' → logprob: -10.878564834594727

Token 549: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31327390670776367
    2. ' __' → logprob: -1.3132739067077637
    3. '_' → logprob: -12.188274383544922
    4. ' ' → logprob: -12.313274383544922
    5. ' ' → logprob: -13.938274383544922
    6. '_name' → logprob: -14.438274383544922
    7. 'name' → logprob: -14.563274383544922
    8. '___' → logprob: -15.313274383544922
    9. 'if' → logprob: -15.563274383544922
    10. '  ' → logprob: -16.188274383544922

Token 550: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009813699871301651
    2. ' __' → logprob: -4.6348137855529785
    3. 'name' → logprob: -10.00981330871582
    4. '```' → logprob: -12.38481330871582
    5. '_name' → logprob: -13.13481330871582
    6. 'if' → logprob: -13.38481330871582
    7. ' name' → logprob: -13.75981330871582
    8. ''' → logprob: -13.88481330871582
    9. '___' → logprob: -14.25981330871582
    10. '_' → logprob: -14.50981330871582

Token 551: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3285273611545563
    2. '__' → logprob: -1.4535273313522339
    3. ' est' → logprob: -3.9535274505615234
    4. 'est' → logprob: -4.828527450561523
    5. ' if' → logprob: -4.953527450561523
    6. '_name' → logprob: -5.578527450561523
    7. ' __' → logprob: -5.703527450561523
    8. ' is' → logprob: -6.078527450561523
    9. '_' → logprob: -7.078527450561523
    10. 'name' → logprob: -7.703527450561523

Token 552: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009083642507903278
    2. ' __' → logprob: -7.625908374786377
    3. '_name' → logprob: -9.375907897949219
    4. 'name' → logprob: -9.375907897949219
    5. 'le' → logprob: -9.750907897949219
    6. ' exécut' → logprob: -9.875907897949219
    7. 'execut' → logprob: -10.375907897949219
    8. '_' → logprob: -10.500907897949219
    9. '"' → logprob: -11.375907897949219
    10. 'nom' → logprob: -11.625907897949219

Token 553: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10006387531757355
    2. 'if' → logprob: -3.1000638008117676
    3. ' en' → logprob: -3.6000638008117676
    4. ' __' → logprob: -4.350063800811768
    5. 'é' → logprob: -5.475063800811768
    6. 'e' → logprob: -5.975063800811768
    7. ' if' → logprob: -6.600063800811768
    8. ' as' → logprob: -8.100064277648926
    9. ' under' → logprob: -8.350064277648926
    10. '_name' → logprob: -8.600064277648926

Token 554: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7667421102523804
    2. ' if' → logprob: -1.5167421102523804
    3. '__' → logprob: -1.6417421102523804
    4. ' en' → logprob: -2.51674222946167
    5. ' __' → logprob: -4.26674222946167
    6. ' under' → logprob: -4.76674222946167
    7. 'dans' → logprob: -5.26674222946167
    8. ' as' → logprob: -6.51674222946167
    9. '_name' → logprob: -6.51674222946167
    10. ' sous' → logprob: -6.51674222946167

Token 555: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015243135392665863
    2. ' __' → logprob: -4.390243053436279
    3. ' le' → logprob: -6.765243053436279
    4. 'le' → logprob: -8.015243530273438
    5. '_le' → logprob: -8.265243530273438
    6. 'main' → logprob: -8.390243530273438
    7. 'principal' → logprob: -8.390243530273438
    8. ' main' → logprob: -9.265243530273438
    9. '"' → logprob: -9.765243530273438
    10. 'une' → logprob: -9.890243530273438

Token 556: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.053547006100416183
    2. '
' → logprob: -3.053546905517578
    3. ' if' → logprob: -5.428546905517578
    4. '_
' → logprob: -8.678546905517578
    5. '```' → logprob: -9.428546905517578
    6. ':
' → logprob: -9.678546905517578
    7. '

' → logprob: -9.803546905517578
    8. '_' → logprob: -10.428546905517578
    9. '_if' → logprob: -10.678546905517578
    10. '__' → logprob: -10.678546905517578

Token 557: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3136714696884155
    2. 'if' → logprob: -1.3136714696884155
    3. ' if' → logprob: -8.563671112060547
    4. '

' → logprob: -9.188671112060547
    5. '\n' → logprob: -9.438671112060547
    6. '
' → logprob: -11.438671112060547
    7. '```' → logprob: -11.563671112060547
    8. '  
' → logprob: -12.188671112060547
    9. '\
' → logprob: -12.688671112060547
    10. ':
' → logprob: -12.938671112060547

Token 558: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005960914772003889
    2. ' if' → logprob: -5.130960941314697
    3. ' not' → logprob: -10.755960464477539
    4. 'not' → logprob: -12.005960464477539
    5. '```' → logprob: -13.005960464477539
    6. ' and' → logprob: -14.255960464477539
    7. '#' → logprob: -14.505960464477539
    8. '__' → logprob: -14.505960464477539
    9. '
' → logprob: -14.755960464477539
    10. 'i' → logprob: -15.755960464477539

Token 559: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03981388732790947
    2. ' if' → logprob: -3.414813995361328
    3. '__' → logprob: -5.914813995361328
    4. '#' → logprob: -7.164813995361328
    5. ' si' → logprob: -7.164813995361328
    6. '_' → logprob: -7.664813995361328
    7. ' le' → logprob: -8.539813995361328
    8. '```' → logprob: -8.664813995361328
    9. ' __' → logprob: -8.789813995361328
    10. ' ' → logprob: -9.164813995361328

Token 560: ' import' (ID: 1588)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7322468161582947
    2. ' pas' → logprob: -0.8572468161582947
    3. ' comme' → logprob: -3.8572468757629395
    4. ' un' → logprob: -4.2322468757629395
    5. ' si' → logprob: -4.3572468757629395
    6. ' par' → logprob: -4.8572468757629395
    7. 'import' → logprob: -4.8572468757629395
    8. 'if' → logprob: -5.2322468757629395
    9. '__' → logprob: -5.4822468757629395
    10. 'en' → logprob: -5.7322468757629395

Token 561: 'é' (ID: 377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003630715887993574
    2. ' if' → logprob: -5.753630638122559
    3. '__' → logprob: -7.878630638122559
    4. 'é' → logprob: -9.628630638122559
    5. 'e' → logprob: -12.503630638122559
    6. '```' → logprob: -14.003630638122559
    7. '_if' → logprob: -14.003630638122559
    8. '#' → logprob: -14.128630638122559
    9. ':' → logprob: -14.753630638122559
    10. 'able' → logprob: -15.003630638122559

Token 562: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13268975913524628
    2. '
' → logprob: -2.1326897144317627
    3. ' if' → logprob: -5.632689952850342
    4. ':
' → logprob: -6.507689952850342
    5. '```' → logprob: -8.382689476013184
    6. '

' → logprob: -8.757689476013184
    7. ':' → logprob: -9.007689476013184
    8. '\n' → logprob: -9.757689476013184
    9. ':

' → logprob: -10.132689476013184
    10. '\' → logprob: -11.632689476013184

Token 563: ' module' (ID: 8827)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.30306529998779297
    2. ' module' → logprob: -2.303065299987793
    3. '__' → logprob: -3.053065299987793
    4. 'un' → logprob: -3.928065299987793
    5. 'module' → logprob: -3.928065299987793
    6. ' main' → logprob: -3.928065299987793
    7. ' script' → logprob: -3.928065299987793
    8. ' __' → logprob: -4.053065299987793
    9. ' une' → logprob: -4.803065299987793
    10. ' le' → logprob: -5.053065299987793

Token 564: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5761986970901489
    2. 'if' → logprob: -0.8261986970901489
    3. '

' → logprob: -9.32619857788086
    4. ' if' → logprob: -9.45119857788086
    5. '\n' → logprob: -9.57619857788086
    6. '
' → logprob: -11.82619857788086
    7. '  
' → logprob: -12.07619857788086
    8. '```' → logprob: -12.20119857788086
    9. '    
' → logprob: -13.70119857788086
    10. '\
' → logprob: -13.70119857788086

Token 565: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.816093228830141e-06
    2. ' if' → logprob: -13.00000286102295
    3. '
' → logprob: -14.50000286102295
    4. '```' → logprob: -18.375001907348633
    5. '\n' → logprob: -18.875001907348633
    6. 'i' → logprob: -19.250001907348633
    7. '\' → logprob: -20.125001907348633
    8. '\
' → logprob: -20.625001907348633
    9. '#if' → logprob: -20.875001907348633
    10. '    
' → logprob: -20.875001907348633

Token 566: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5761281251907349
    2. '__' → logprob: -0.8261281251907349
    3. ' ' → logprob: -8.951128005981445
    4. '_' → logprob: -10.576128005981445
    5. 'name' → logprob: -11.076128005981445
    6. ' ' → logprob: -12.451128005981445
    7. ' ' → logprob: -12.701128005981445
    8. '_name' → logprob: -12.701128005981445
    9. '  ' → logprob: -12.951128005981445
    10. '___' → logprob: -13.201128005981445

Token 567: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015353734605014324
    2. ' ==' → logprob: -4.640353679656982
    3. '==' → logprob: -5.390353679656982
    4. ' __' → logprob: -7.140353679656982
    5. '_' → logprob: -9.26535415649414
    6. '=="' → logprob: -9.76535415649414
    7. 'name' → logprob: -10.64035415649414
    8. '=='' → logprob: -11.01535415649414
    9. '_main' → logprob: -12.01535415649414
    10. '_name' → logprob: -12.39035415649414

Token 568: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '==' → logprob: -14.750000953674316
    3. '_' → logprob: -17.25
    4. 'name' → logprob: -17.625
    5. '__.__' → logprob: -17.625
    6. '__
' → logprob: -17.75
    7. '____' → logprob: -18.875
    8. '___' → logprob: -18.875
    9. 'main' → logprob: -19.5
    10. '__

' → logprob: -19.875

Token 569: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017242035828530788
    2. '==' → logprob: -6.3767242431640625
    3. '=="' → logprob: -11.626724243164062
    4. '_' → logprob: -11.876724243164062
    5. ' ==' → logprob: -13.126724243164062
    6. '=' → logprob: -13.501724243164062
    7. '___' → logprob: -14.376724243164062
    8. '=='' → logprob: -14.376724243164062
    9. '____' → logprob: -14.751724243164062
    10. 'main' → logprob: -15.126724243164062

Token 570: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07892834395170212
    2. ''' → logprob: -2.578928232192993
    3. ' "__' → logprob: -10.453927993774414
    4. '__' → logprob: -12.078927993774414
    5. ' '__' → logprob: -13.328927993774414
    6. ''"' → logprob: -14.203927993774414
    7. '"name' → logprob: -14.828927993774414
    8. '"user' → logprob: -15.328927993774414
    9. '"default' → logprob: -15.578927993774414
    10. '"'' → logprob: -15.953927993774414

Token 571: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -17.125
    3. '_main' → logprob: -19.125
    4. 'name' → logprob: -19.375
    5. '__' → logprob: -19.875
    6. '"' → logprob: -20.125
    7. '	main' → logprob: -20.75
    8. '主' → logprob: -22.25
    9. '(main' → logprob: -23.25
    10. 'ma' → logprob: -23.375

Token 572: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1602308303117752
    2. '__' → logprob: -1.9102308750152588
    3. '__':
' → logprob: -12.16023063659668
    4. '_' → logprob: -14.41023063659668
    5. '__:' → logprob: -14.53523063659668
    6. '__["' → logprob: -15.28523063659668
    7. '__",' → logprob: -16.53523063659668
    8. '__("' → logprob: -18.28523063659668
    9. '__*/' → logprob: -18.53523063659668
    10. '___' → logprob: -18.66023063659668

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48791050910949707
    2. ':' → logprob: -0.9879105091094971
    3. ':
' → logprob: -4.737910270690918
    4. 'import' → logprob: -6.612910270690918
    5. '():' → logprob: -7.362910270690918
    6. '[' → logprob: -7.612910270690918
    7. '	import' → logprob: -7.862910270690918
    8. '```' → logprob: -7.987910270690918
    9. '<|end|>' → logprob: -8.237910270690918
    10. '():
' → logprob: -8.237910270690918

Token 574: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5978078246116638
    2. ' import' → logprob: -0.8478078246116638
    3. '   ' → logprob: -3.8478078842163086
    4. ' input' → logprob: -8.472807884216309
    5. 'input' → logprob: -10.472807884216309
    6. '	import' → logprob: -10.847807884216309
    7. ' inputs' → logprob: -11.222807884216309
    8. 'inputs' → logprob: -12.097807884216309
    9. ' n' → logprob: -12.222807884216309
    10. 'n' → logprob: -12.347807884216309

Token 575: ' La' (ID: 3038)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.005878544878214598
    2. 'args' → logprob: -6.255878448486328
    3. 'input' → logprob: -6.380878448486328
    4. 'inputs' → logprob: -6.630878448486328
    5. ' import' → logprob: -7.255878448486328
    6. '   ' → logprob: -9.380878448486328
    7. 'data' → logprob: -10.005878448486328
    8. 'from' → logprob: -10.005878448486328
    9. 'lines' → logprob: -11.505878448486328
    10. 'print' → logprob: -12.005878448486328

Token 576: ' fonction' (ID: 17610)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08232386410236359
    2. 'print' → logprob: -2.7073237895965576
    3. 'input' → logprob: -5.707324028015137
    4. 'n' → logprob: -5.832324028015137
    5. 'from' → logprob: -5.957324028015137
    6. 'inputs' → logprob: -6.332324028015137
    7. 'args' → logprob: -8.082324028015137
    8. ' import' → logprob: -8.332324028015137
    9. 'data' → logprob: -8.457324028015137
    10. 'for' → logprob: -8.832324028015137

Token 577: ' open' (ID: 2494)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5611308217048645
    2. 'import' → logprob: -1.5611307621002197
    3. 'input' → logprob: -1.9361307621002197
    4. 'solve' → logprob: -2.6861307621002197
    5. '   ' → logprob: -5.436131000518799
    6. ' input' → logprob: -6.811131000518799
    7. ' print' → logprob: -8.43613052368164
    8. 'exec' → logprob: -8.43613052368164
    9. 'exit' → logprob: -8.81113052368164
    10. '  ' → logprob: -8.81113052368164

Token 578: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25256261229515076
    2. '("' → logprob: -1.7525626420974731
    3. '('' → logprob: -3.0025625228881836
    4. '(
' → logprob: -9.877562522888184
    5. '()' → logprob: -10.252562522888184
    6. '("../' → logprob: -10.252562522888184
    7. '("")' → logprob: -11.252562522888184
    8. '(input' → logprob: -11.502562522888184
    9. '("./' → logprob: -11.502562522888184
    10. 'input' → logprob: -11.877562522888184

Token 579: '0' (ID: 15)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06356373429298401
    2. '('' → logprob: -3.188563823699951
    3. '(' → logprob: -3.938563823699951
    4. '("../' → logprob: -8.063563346862793
    5. '()' → logprob: -8.438563346862793
    6. 'input' → logprob: -9.313563346862793
    7. '(input' → logprob: -9.688563346862793
    8. '("/' → logprob: -9.813563346862793
    9. '("__' → logprob: -10.438563346862793
    10. '("./' → logprob: -10.688563346862793

Token 580: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20323248207569122
    2. ').' → logprob: -1.7032325267791748
    3. ',' → logprob: -6.328232288360596
    4. '()' → logprob: -12.453232765197754
    5. '))' → logprob: -12.828232765197754
    6. '())' → logprob: -12.953232765197754
    7. '")' → logprob: -13.078232765197754
    8. 'import' → logprob: -13.203232765197754
    9. ' )' → logprob: -13.203232765197754
    10. ')("' → logprob: -13.203232765197754

Token 581: ' ouvre' (ID: 144763)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -1.1870423555374146
    2. 'read' → logprob: -1.6870423555374146
    3. '.readline' → logprob: -2.187042236328125
    4. 'import' → logprob: -2.187042236328125
    5. ')' → logprob: -2.312042236328125
    6. 'as' → logprob: -2.562042236328125
    7. ' as' → logprob: -3.187042236328125
    8. '.read' → logprob: -3.687042236328125
    9. '()' → logprob: -3.937042236328125
    10. ' reads' → logprob: -5.812042236328125

Token 582: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0054879761300981045
    2. '0' → logprob: -5.25548791885376
    3. '()' → logprob: -8.505488395690918
    4. '('/' → logprob: -10.255488395690918
    5. '("/' → logprob: -11.380488395690918
    6. '```' → logprob: -13.880488395690918
    7. '('' → logprob: -14.130488395690918
    8. '(sys' → logprob: -14.380488395690918
    9. 'input' → logprob: -14.755488395690918
    10. 'sys' → logprob: -14.755488395690918

Token 583: ' flux' (ID: 36547)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7134397029876709
    2. 'stdin' → logprob: -0.7134397029876709
    3. 'import' → logprob: -4.96343994140625
    4. 'file' → logprob: -5.71343994140625
    5. 'standard' → logprob: -5.83843994140625
    6. 'sys' → logprob: -6.21343994140625
    7. 'input' → logprob: -6.46343994140625
    8. 'flux' → logprob: -6.71343994140625
    9. 'fl' → logprob: -7.21343994140625
    10. '```' → logprob: -7.46343994140625

Token 584: ' d' (ID: 272)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -1.0168368816375732
    2. '()' → logprob: -1.8918368816375732
    3. 'input' → logprob: -2.3918368816375732
    4. 'in' → logprob: -2.3918368816375732
    5. '(stdin' → logprob: -2.6418368816375732
    6. ')' → logprob: -2.6418368816375732
    7. '=' → logprob: -3.6418368816375732
    8. '.stdin' → logprob: -3.7668368816375732
    9. 'standard' → logprob: -4.016837120056152
    10. '   ' → logprob: -4.016837120056152

Token 585: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.3318975865840912
    2. 'stdin' → logprob: -1.4568976163864136
    3. 'input' → logprob: -3.331897497177124
    4. 'entr' → logprob: -5.206897735595703
    5. 'sys' → logprob: -5.331897735595703
    6. 'ent' → logprob: -6.831897735595703
    7. 'standard' → logprob: -7.831897735595703
    8. ''entrée' → logprob: -8.081897735595703
    9. '```' → logprob: -8.081897735595703
    10. 'import' → logprob: -8.206897735595703

Token 586: ' standard' (ID: 7024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.316585898399353
    2. ',' → logprob: -2.0665860176086426
    3. 'import' → logprob: -2.1915860176086426
    4. 'en' → logprob: -2.4415860176086426
    5. 'in' → logprob: -2.5665860176086426
    6. '()' → logprob: -2.6915860176086426
    7. 'with' → logprob: -3.1915860176086426
    8. ')' → logprob: -3.3165860176086426
    9. 'as' → logprob: -3.4415860176086426
    10. 'read' → logprob: -3.6915860176086426

Token 587: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09533746540546417
    2. '().' → logprob: -2.845337390899658
    3. 'import' → logprob: -3.970337390899658
    4. ')' → logprob: -4.970337390899658
    5. 'read' → logprob: -6.220337390899658
    6. 'as' → logprob: -6.720337390899658
    7. 'for' → logprob: -7.720337390899658
    8. ',' → logprob: -7.845337390899658
    9. ' as' → logprob: -7.845337390899658
    10. ').' → logprob: -7.845337390899658

Token 588: 'stdin' (ID: 132953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04400811344385147
    2. ''' → logprob: -3.9190080165863037
    3. 'stdin' → logprob: -4.294008255004883
    4. '"' → logprob: -5.294008255004883
    5. '')' → logprob: -6.794008255004883
    6. ').' → logprob: -7.044008255004883
    7. '")' → logprob: -7.044008255004883
    8. '0' → logprob: -8.044008255004883
    9. 'for' → logprob: -8.294008255004883
    10. 'r' → logprob: -8.669008255004883

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026864584535360336
    2. ').' → logprob: -3.651864528656006
    3. ',' → logprob: -7.651864528656006
    4. '),' → logprob: -10.901865005493164
    5. '))' → logprob: -11.151865005493164
    6. ')
' → logprob: -11.651865005493164
    7. 'import' → logprob: -11.776865005493164
    8. ' )' → logprob: -11.901865005493164
    9. '   ' → logprob: -12.151865005493164
    10. 'for' → logprob: -12.276865005493164

Token 590: '   ' (ID: 271)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.2593882083892822
    2. 'with' → logprob: -2.1343882083892822
    3. 'as' → logprob: -2.8843882083892822
    4. '   ' → logprob: -3.3843882083892822
    5. ' with' → logprob: -5.259387969970703
    6. ')' → logprob: -5.259387969970703
    7. 'import' → logprob: -6.009387969970703
    8. 'in' → logprob: -6.384387969970703
    9. 'input' → logprob: -6.634387969970703
    10. '.readlines' → logprob: -6.634387969970703

Token 591: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3410600423812866
    2. 'for' → logprob: -2.216060161590576
    3. 'lines' → logprob: -2.716060161590576
    4. '   ' → logprob: -2.841060161590576
    5. 'with' → logprob: -3.466060161590576
    6. 'data' → logprob: -4.716060161590576
    7. 'f' → logprob: -4.841060161590576
    8. 'input' → logprob: -5.341060161590576
    9. ' lines' → logprob: -7.216060161590576
    10. ' import' → logprob: -7.716060161590576

Token 592: ' read' (ID: 1729)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.407880038022995
    2. 'lines' → logprob: -1.4078800678253174
    3. 'data' → logprob: -3.0328800678253174
    4. 'input' → logprob: -3.4078800678253174
    5. 'inputs' → logprob: -5.907879829406738
    6. 'for' → logprob: -6.157879829406738
    7. '   ' → logprob: -6.657879829406738
    8. 'with' → logprob: -6.907879829406738
    9. 'args' → logprob: -7.032879829406738
    10. 'n' → logprob: -8.157879829406738

Token 593: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.21113021671772003
    2. '()' → logprob: -1.7111302614212036
    3. 'lines' → logprob: -5.336130142211914
    4. 'line' → logprob: -5.961130142211914
    5. '(' → logprob: -6.461130142211914
    6. ' =' → logprob: -8.336130142211914
    7. '_line' → logprob: -9.211130142211914
    8. '_lines' → logprob: -9.211130142211914
    9. '())' → logprob: -9.461130142211914
    10. '()`' → logprob: -10.086130142211914

Token 594: ' lit' (ID: 11980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12702564895153046
    2. '()' → logprob: -2.127025604248047
    3. '())' → logprob: -10.002025604248047
    4. ')' → logprob: -11.127025604248047
    5. '(' → logprob: -11.252025604248047
    6. 'import' → logprob: -12.377025604248047
    7. '_input' → logprob: -12.752025604248047
    8. '()
' → logprob: -13.002025604248047
    9. '(),' → logprob: -13.252025604248047
    10. '()`' → logprob: -13.752025604248047

Token 595: ' tout' (ID: 5501)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018192434683442116
    2. '().' → logprob: -4.018192291259766
    3. '())' → logprob: -10.768192291259766
    4. '_input' → logprob: -12.393192291259766
    5. 'all' → logprob: -12.768192291259766
    6. '()>' → logprob: -12.893192291259766
    7. 'input' → logprob: -13.268192291259766
    8. ' ()' → logprob: -13.643192291259766
    9. '_text' → logprob: -14.018192291259766
    10. '(' → logprob: -14.018192291259766

Token 596: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006741896737366915
    2. '().' → logprob: -5.006742000579834
    3. '())' → logprob: -11.006741523742676
    4. '()
' → logprob: -13.506741523742676
    5. '()\' → logprob: -13.631741523742676
    6. 'input' → logprob: -13.756741523742676
    7. ' ()' → logprob: -13.881741523742676
    8. '(' → logprob: -14.006741523742676
    9. '()[' → logprob: -14.131741523742676
    10. '(),' → logprob: -14.131741523742676

Token 597: ' contenu' (ID: 57581)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conten' → logprob: -0.02506592683494091
    2. ' contenu' → logprob: -4.775065898895264
    3. 'stdin' → logprob: -4.775065898895264
    4. 'input' → logprob: -5.150065898895264
    5. 'texte' → logprob: -6.650065898895264
    6. ' input' → logprob: -8.525066375732422
    7. 'data' → logprob: -9.025066375732422
    8. 'entrée' → logprob: -9.275066375732422
    9. 'flux' → logprob: -9.400066375732422
    10. 'cont' → logprob: -9.650066375732422

Token 598: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009820547886192799
    2. '().' → logprob: -4.634820461273193
    3. '(' → logprob: -10.509820938110352
    4. '())' → logprob: -10.509820938110352
    5. '(),' → logprob: -12.884820938110352
    6. '()
' → logprob: -13.384820938110352
    7. '   ' → logprob: -14.134820938110352
    8. '(stdin' → logprob: -14.134820938110352
    9. '()[' → logprob: -14.384820938110352
    10. '()

' → logprob: -14.384820938110352

Token 599: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032279353588819504
    2. 'open' → logprob: -3.7822792530059814
    3. '(' → logprob: -5.1572794914245605
    4. 'import' → logprob: -6.9072794914245605
    5. '```' → logprob: -6.9072794914245605
    6. ')' → logprob: -8.157279014587402
    7. '()' → logprob: -8.282279014587402
    8. 'sys' → logprob: -8.532279014587402
    9. 'stdin' → logprob: -8.657279014587402
    10. '   ' → logprob: -9.532279014587402

Token 600: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.11239123344421387
    2. 'input' → logprob: -2.862391233444214
    3. 'open' → logprob: -3.987391233444214
    4. 'import' → logprob: -4.862391471862793
    5. 'sys' → logprob: -4.987391471862793
    6. ''entrée' → logprob: -5.362391471862793
    7. '(stdin' → logprob: -5.987391471862793
    8. ' stdin' → logprob: -6.362391471862793
    9. '```' → logprob: -6.487391471862793
    10. 'entrée' → logprob: -6.737391471862793

Token 601: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0305690485984087
    2. '().' → logprob: -3.530569076538086
    3. '())' → logprob: -7.530569076538086
    4. ')' → logprob: -8.905569076538086
    5. '()
' → logprob: -9.655569076538086
    6. '()).' → logprob: -10.405569076538086
    7. '(),' → logprob: -10.530569076538086
    8. ').' → logprob: -12.405569076538086
    9. '()

' → logprob: -12.655569076538086
    10. '_text' → logprob: -12.780569076538086

Token 602: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3500919044017792
    2. '().' → logprob: -1.2250919342041016
    3. '   ' → logprob: -7.225091934204102
    4. '()
' → logprob: -8.100091934204102
    5. 'import' → logprob: -8.350091934204102
    6. ')' → logprob: -9.600091934204102
    7. ',' → logprob: -9.600091934204102
    8. '())' → logprob: -9.975091934204102
    9. '(),' → logprob: -10.225091934204102
    10. ').' → logprob: -10.600091934204102

Token 603: ' forme' (ID: 27450)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2686927318572998
    2. ''' → logprob: -2.2686927318573
    3. '""' → logprob: -3.0186927318573
    4. '()' → logprob: -3.2686927318573
    5. '```' → logprob: -4.518692970275879
    6. ''''' → logprob: -5.018692970275879
    7. '=''' → logprob: -5.268692970275879
    8. 'chaine' → logprob: -5.893692970275879
    9. '('',' → logprob: -6.393692970275879
    10. '"""' → logprob: -6.518692970275879

Token 604: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7105597853660583
    2. 'de' → logprob: -1.4605598449707031
    3. '=' → logprob: -1.9605598449707031
    4. '='' → logprob: -3.210559844970703
    5. '()' → logprob: -3.460559844970703
    6. '="""' → logprob: -4.210559844970703
    7. '="' → logprob: -4.585559844970703
    8. '   ' → logprob: -4.710559844970703
    9. ' d' → logprob: -5.085559844970703
    10. '=''' → logprob: -5.210559844970703

Token 605: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2348335236310959
    2. 'string' → logprob: -1.7348334789276123
    3. 'cha' → logprob: -3.7348334789276123
    4. 'texte' → logprob: -5.109833717346191
    5. 'str' → logprob: -6.609833717346191
    6. ' chaîne' → logprob: -6.734833717346191
    7. 'une' → logprob: -8.359833717346191
    8. 'chain' → logprob: -9.109833717346191
    9. ' chaine' → logprob: -10.484833717346191
    10. 'text' → logprob: -10.859833717346191

Token 606: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.040743887424468994
    2. '().' → logprob: -3.290743827819824
    3. '())' → logprob: -6.915743827819824
    4. '   ' → logprob: -7.540743827819824
    5. '()
' → logprob: -8.415743827819824
    6. '_input' → logprob: -8.415743827819824
    7. ')' → logprob: -8.540743827819824
    8. '(),' → logprob: -8.540743827819824
    9. 'import' → logprob: -9.540743827819824
    10. '()).' → logprob: -9.790743827819824

Token 607: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.009836251847445965
    2. 'chars' → logprob: -5.009836196899414
    3. ' caractères' → logprob: -6.134836196899414
    4. 'char' → logprob: -8.009836196899414
    5. 'chaine' → logprob: -8.134836196899414
    6. 'texte' → logprob: -8.384836196899414
    7. 'str' → logprob: -10.509836196899414
    8. ' caracteres' → logprob: -11.009836196899414
    9. 'text' → logprob: -11.634836196899414
    10. 'characters' → logprob: -11.634836196899414

Token 608: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2948664128780365
    2. '().' → logprob: -1.5448664426803589
    3. '   ' → logprob: -3.5448663234710693
    4. '()
' → logprob: -5.294866561889648
    5. 'data' → logprob: -5.669866561889648
    6. 'import' → logprob: -6.294866561889648
    7. 'input' → logprob: -6.919866561889648
    8. ')' → logprob: -7.669866561889648
    9. ').' → logprob: -8.044866561889648
    10. ',' → logprob: -8.544866561889648

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12321283668279648
    2. 'data' → logprob: -2.8732128143310547
    3. '()' → logprob: -3.4982128143310547
    4. 'input' → logprob: -3.8732128143310547
    5. '().' → logprob: -5.748212814331055
    6. 'stdin' → logprob: -6.498212814331055
    7. 'content' → logprob: -7.498212814331055
    8. ')' → logprob: -7.623212814331055
    9. 'lines' → logprob: -7.748212814331055
    10. ',' → logprob: -7.873212814331055

Token 610: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.07457592338323593
    2. 'input' → logprob: -3.324575901031494
    3. '   ' → logprob: -3.449575901031494
    4. 'lines' → logprob: -6.324575901031494
    5. 'import' → logprob: -7.574575901031494
    6. 'inputs' → logprob: -7.574575901031494
    7. 's' → logprob: -7.699575901031494
    8. ' data' → logprob: -8.574576377868652
    9. 'content' → logprob: -8.699576377868652
    10. 'args' → logprob: -9.199576377868652

Token 611: ' split' (ID: 12648)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.11948755383491516
    2. 'input' → logprob: -2.4944875240325928
    3. 'lines' → logprob: -3.9944875240325928
    4. 'inputs' → logprob: -4.994487762451172
    5. 'args' → logprob: -5.869487762451172
    6. 'import' → logprob: -6.619487762451172
    7. 'print' → logprob: -7.869487762451172
    8. 'raw' → logprob: -9.244487762451172
    9. 'content' → logprob: -9.994487762451172
    10. 'text' → logprob: -10.244487762451172

Token 612: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000963627069722861
    2. 'lines' → logprob: -7.6259636878967285
    3. '('\' → logprob: -7.7509636878967285
    4. '()\' → logprob: -11.25096321105957
    5. '("\' → logprob: -11.37596321105957
    6. '('' → logprob: -11.87596321105957
    7. '()
' → logprob: -12.62596321105957
    8. '().' → logprob: -13.12596321105957
    9. '()[' → logprob: -13.37596321105957
    10. '()]' → logprob: -13.50096321105957

Token 613: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. '()]' → logprob: -12.625011444091797
    3. '(' → logprob: -13.000011444091797
    4. '())' → logprob: -13.125011444091797
    5. '(True' → logprob: -13.750011444091797
    6. ' ()' → logprob: -14.125011444091797
    7. '()[' → logprob: -14.375011444091797
    8. '(),' → logprob: -14.500011444091797
    9. '()`' → logprob: -14.750011444091797
    10. '（）' → logprob: -15.500011444091797

Token 614: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.953082341467962e-05
    2. '()[' → logprob: -11.250039100646973
    3. '()`' → logprob: -11.875039100646973
    4. ' ()' → logprob: -12.125039100646973
    5. '())' → logprob: -12.625039100646973
    6. '(' → logprob: -13.125039100646973
    7. '()
' → logprob: -13.375039100646973
    8. ')' → logprob: -13.875039100646973
    9. '()]' → logprob: -13.875039100646973
    10. '().' → logprob: -14.000039100646973

Token 615: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.01378052681684494
    2. 'ide' → logprob: -4.38878059387207
    3. '()' → logprob: -6.88878059387207
    4. 'ize' → logprob: -8.38878059387207
    5. 'ides' → logprob: -12.63878059387207
    6. '()
' → logprob: -12.76378059387207
    7. 'iser' → logprob: -12.88878059387207
    8. 'isez' → logprob: -13.13878059387207
    9. '```' → logprob: -13.38878059387207
    10. '()`' → logprob: -13.38878059387207

Token 616: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05334924906492233
    2. '()
' → logprob: -3.053349256515503
    3. 'lines' → logprob: -6.428349018096924
    4. '()[' → logprob: -6.928349018096924
    5. '('\' → logprob: -7.178349018096924
    6. '()\' → logprob: -7.303349018096924
    7. '```' → logprob: -7.803349018096924
    8. '()`' → logprob: -9.178349494934082
    9. '()

' → logprob: -9.928349494934082
    10. ' ()' → logprob: -10.303349494934082

Token 617: ' chaîne' (ID: 89288)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006625185487791896
    2. '('\' → logprob: -7.750662326812744
    3. '()
' → logprob: -8.625662803649902
    4. '()\' → logprob: -10.750662803649902
    5. ' ()' → logprob: -11.875662803649902
    6. '("\' → logprob: -12.125662803649902
    7. '()[' → logprob: -12.500662803649902
    8. '(' → logprob: -12.875662803649902
    9. '()`' → logprob: -13.125662803649902
    10. '()

' → logprob: -13.125662803649902

Token 618: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.0033853515051305e-05
    2. '()[' → logprob: -11.125060081481934
    3. '())' → logprob: -11.375060081481934
    4. '()
' → logprob: -11.500060081481934
    5. '(' → logprob: -11.875060081481934
    6. '()`' → logprob: -12.500060081481934
    7. '()]' → logprob: -12.750060081481934
    8. ' ()' → logprob: -13.000060081481934
    9. '()

' → logprob: -13.125060081481934
    10. '(True' → logprob: -13.500060081481934

Token 619: ' une' (ID: 2463)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.04204215481877327
    2. '[]' → logprob: -3.5420422554016113
    3. ' lines' → logprob: -5.042042255401611
    4. '['' → logprob: -5.792042255401611
    5. '[' → logprob: -6.792042255401611
    6. 'list' → logprob: -7.042042255401611
    7. '()' → logprob: -8.667041778564453
    8. '[
' → logprob: -9.292041778564453
    9. 'liste' → logprob: -9.417041778564453
    10. ' lignes' → logprob: -9.542041778564453

Token 620: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.41266965866088867
    2. 'lines' → logprob: -1.2876696586608887
    3. '\n' → logprob: -4.287669658660889
    4. '[]' → logprob: -4.537669658660889
    5. 'args' → logprob: -4.537669658660889
    6. '[
' → logprob: -4.662669658660889
    7. 'liste' → logprob: -5.287669658660889
    8. ' list' → logprob: -5.787669658660889
    9. 'split' → logprob: -6.162669658660889
    10. '[' → logprob: -6.412669658660889

Token 621: ' où' (ID: 15113)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034118397161364555
    2. '()
' → logprob: -8.125341415405273
    3. '(' → logprob: -10.750341415405273
    4. '()[' → logprob: -12.125341415405273
    5. '()\' → logprob: -12.375341415405273
    6. '('\' → logprob: -12.750341415405273
    7. '(True' → logprob: -13.250341415405273
    8. '   ' → logprob: -13.500341415405273
    9. '())' → logprob: -13.625341415405273
    10. '()

' → logprob: -13.625341415405273

Token 622: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09682276099920273
    2. ' each' → logprob: -3.096822738647461
    3. 'each' → logprob: -3.596822738647461
    4. 'lines' → logprob: -4.846822738647461
    5. 'l' → logprob: -6.346822738647461
    6. ' lines' → logprob: -6.471822738647461
    7. 'élé' → logprob: -6.596822738647461
    8. 'Chaque' → logprob: -6.721822738647461
    9. ' les' → logprob: -6.971822738647461
    10. 's' → logprob: -7.221822738647461

Token 623: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7684128880500793
    2. 'ligne' → logprob: -1.3934128284454346
    3. ' line' → logprob: -1.7684128284454346
    4. ' ligne' → logprob: -2.2684128284454346
    5. 'element' → logprob: -5.268413066864014
    6. '\n' → logprob: -6.018413066864014
    7. 'élé' → logprob: -6.143413066864014
    8. 'chaine' → logprob: -7.018413066864014
    9. ' element' → logprob: -7.143413066864014
    10. '```' → logprob: -7.268413066864014

Token 624: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001992490579141304
    2. '=' → logprob: -9.250199317932129
    3. '()
' → logprob: -11.125199317932129
    4. ' =' → logprob: -11.250199317932129
    5. '()]' → logprob: -11.250199317932129
    6. ' ()' → logprob: -11.625199317932129
    7. '())' → logprob: -11.625199317932129
    8. '()`' → logprob: -11.750199317932129
    9. '(),' → logprob: -12.250199317932129
    10. '()[' → logprob: -12.250199317932129

Token 625: ' texte' (ID: 53492)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.884227454662323
    2. 'chaine' → logprob: -1.2592275142669678
    3. 'texte' → logprob: -2.0092275142669678
    4. 'code' → logprob: -3.1342275142669678
    5. 'str' → logprob: -3.3842275142669678
    6. ' input' → logprob: -3.5092275142669678
    7. 's' → logprob: -4.134227275848389
    8. 'string' → logprob: -4.634227275848389
    9. 'l' → logprob: -4.884227275848389
    10. 'entrée' → logprob: -5.009227275848389

Token 626: ' devient' (ID: 63488)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004071971052326262
    2. ')' → logprob: -8.875407218933105
    3. '()
' → logprob: -9.125407218933105
    4. '())' → logprob: -9.750407218933105
    5. '()`' → logprob: -10.500407218933105
    6. ' ()' → logprob: -11.250407218933105
    7. '=' → logprob: -11.875407218933105
    8. '()

' → logprob: -12.000407218933105
    9. '()[' → logprob: -12.000407218933105
    10. 'def' → logprob: -12.125407218933105

Token 627: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9483561515808105
    2. 'une' → logprob: -1.0733561515808105
    3. ' un' → logprob: -1.8233561515808105
    4. 'un' → logprob: -2.5733561515808105
    5. ''un' → logprob: -4.0733561515808105
    6. ''une' → logprob: -4.1983561515808105
    7. 's' → logprob: -8.573356628417969
    8. ' one' → logprob: -8.948356628417969
    9. 'a' → logprob: -9.573356628417969
    10. ''' → logprob: -9.823356628417969

Token 628: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.031538426876068115
    2. 'element' → logprob: -3.531538486480713
    3. ' élément' → logprob: -6.406538486480713
    4. 'string' → logprob: -9.781538009643555
    5. 'item' → logprob: -11.156538009643555
    6. 'elem' → logprob: -11.156538009643555
    7. ' element' → logprob: -11.156538009643555
    8. 'él' → logprob: -11.406538009643555
    9. 'chaine' → logprob: -11.906538009643555
    10. 'token' → logprob: -12.281538009643555

Token 629: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006233075633645058
    2. '()
' → logprob: -5.256233215332031
    3. '   ' → logprob: -7.506233215332031
    4. '()[' → logprob: -9.756233215332031
    5. '())' → logprob: -9.756233215332031
    6. '()`' → logprob: -9.756233215332031
    7. 'input' → logprob: -9.881233215332031
    8. 'lines' → logprob: -10.256233215332031
    9. '()

' → logprob: -10.631233215332031
    10. '(' → logprob: -11.006233215332031

Token 630: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20781755447387695
    2. 'liste' → logprob: -1.957817554473877
    3. 'list' → logprob: -4.332817554473877
    4. ' la' → logprob: -4.332817554473877
    5. 'chaine' → logprob: -4.707817554473877
    6. 'code' → logprob: -5.082817554473877
    7. ' liste' → logprob: -6.457817554473877
    8. 'l' → logprob: -6.582817554473877
    9. 'c' → logprob: -6.957817554473877
    10. 's' → logprob: -8.332817077636719

Token 631: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25003403425216675
    2. 'liste' → logprob: -1.6250340938568115
    3. '```' → logprob: -4.875033855438232
    4. 'code' → logprob: -4.875033855438232
    5. '[]' → logprob: -5.750033855438232
    6. 'f' → logprob: -6.750033855438232
    7. 'input' → logprob: -7.125033855438232
    8. '#' → logprob: -7.750033855438232
    9. 'argument' → logprob: -7.875033855438232
    10. ')' → logprob: -8.00003433227539

Token 632: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7861862182617188
    2. '()' → logprob: -0.9111862182617188
    3. 'data' → logprob: -2.9111862182617188
    4. 'input' → logprob: -3.5361862182617188
    5. '()
' → logprob: -3.9111862182617188
    6. 'import' → logprob: -3.9111862182617188
    7. '()[' → logprob: -4.661186218261719
    8. 'inputs' → logprob: -5.786186218261719
    9. 'lines' → logprob: -6.036186218261719
    10. '():
' → logprob: -7.661186218261719

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09510129690170288
    2. 'input' → logprob: -3.2201013565063477
    3. 'lines' → logprob: -3.5951013565063477
    4. 'data' → logprob: -4.845101356506348
    5. 'args' → logprob: -5.220101356506348
    6. 'inputs' → logprob: -5.470101356506348
    7. 'import' → logprob: -5.720101356506348
    8. ':' → logprob: -7.095101356506348
    9. ' lines' → logprob: -7.720101356506348
    10. '```' → logprob: -7.845101356506348

Token 634: ' #' (ID: 1069)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4156597852706909
    2. 'data' → logprob: -1.665659785270691
    3. 'args' → logprob: -2.7906599044799805
    4. 'import' → logprob: -3.4156599044799805
    5. 'input' → logprob: -3.7906599044799805
    6. 'inputs' → logprob: -4.0406599044799805
    7. '   ' → logprob: -4.1656599044799805
    8. ' lines' → logprob: -7.7906599044799805
    9. 'in' → logprob: -8.41565990447998
    10. 'argv' → logprob: -9.41565990447998

Token 635: ' L' (ID: 451)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3474709093570709
    2. 'import' → logprob: -1.9724708795547485
    3. 'input' → logprob: -2.972470998764038
    4. 'args' → logprob: -3.222470998764038
    5. 'data' → logprob: -3.347470998764038
    6. 'inputs' → logprob: -3.597470998764038
    7. '   ' → logprob: -8.222471237182617
    8. 'for' → logprob: -9.097471237182617
    9. 'argv' → logprob: -9.472471237182617
    10. 'main' → logprob: -9.472471237182617

Token 636: ''op' (ID: 70747)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.9424428939819336
    2. 'lines' → logprob: -1.3174428939819336
    3. 'import' → logprob: -1.5674428939819336
    4. ' lines' → logprob: -2.5674428939819336
    5. '   ' → logprob: -4.192442893981934
    6. ' args' → logprob: -4.317442893981934
    7. 'input' → logprob: -4.692442893981934
    8. 'for' → logprob: -5.192442893981934
    9. 'data' → logprob: -5.817442893981934
    10. ' import' → logprob: -6.317442893981934

Token 637: 'érateur' (ID: 108528)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1782463788986206
    2. '=' → logprob: -1.6782463788986206
    3. 't' → logprob: -2.17824649810791
    4. 'import' → logprob: -2.30324649810791
    5. '=input' → logprob: -2.67824649810791
    6. 'ts' → logprob: -3.17824649810791
    7. 'args' → logprob: -3.30324649810791
    8. 'ut' → logprob: -3.92824649810791
    9. 's' → logprob: -4.05324649810791
    10. 'uts' → logprob: -4.17824649810791

Token 638: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026013223454356194
    2. '=' → logprob: -4.026013374328613
    3. ' =' → logprob: -5.776013374328613
    4. ' *' → logprob: -5.901013374328613
    5. '*
' → logprob: -8.026013374328613
    6. '=sys' → logprob: -8.151013374328613
    7. '*=' → logprob: -8.651013374328613
    8. 'args' → logprob: -8.901013374328613
    9. '[' → logprob: -8.901013374328613
    10. '`' → logprob: -9.276013374328613

Token 639: ' dé' (ID: 2393)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.5380793809890747
    2. 'input' → logprob: -2.288079261779785
    3. '(open' → logprob: -2.538079261779785
    4. 'open' → logprob: -3.163079261779785
    5. '(' → logprob: -3.413079261779785
    6. 'import' → logprob: -3.663079261779785
    7. '=' → logprob: -3.913079261779785
    8. '*' → logprob: -3.913079261779785
    9. '(input' → logprob: -4.038079261779785
    10. ')' → logprob: -4.538079261779785

Token 640: 'compose' (ID: 65322)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.8601353764533997
    2. 'plo' → logprob: -0.9851353764533997
    3. 'un' → logprob: -3.235135316848755
    4. 'é' → logprob: -3.485135316848755
    5. 'pl' → logprob: -3.610135316848755
    6. 'package' → logprob: -3.610135316848755
    7. 'pa' → logprob: -3.985135316848755
    8. 'p' → logprob: -4.735135555267334
    9. 'pak' → logprob: -4.860135555267334
    10. 'e' → logprob: -4.985135555267334

Token 641: ' cette' (ID: 7696)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.9734441637992859
    2. 'input' → logprob: -1.2234442234039307
    3. '(open' → logprob: -1.2234442234039307
    4. 'args' → logprob: -3.9734442234039307
    5. '(input' → logprob: -4.848443984985352
    6. '(' → logprob: -6.473443984985352
    7. '(args' → logprob: -6.723443984985352
    8. 'split' → logprob: -7.223443984985352
    9. 'read' → logprob: -7.348443984985352
    10. '(read' → logprob: -7.723443984985352

Token 642: ' liste' (ID: 31719)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7979159355163574
    2. 'split' → logprob: -1.2979159355163574
    3. 'input' → logprob: -1.4229159355163574
    4. 'read' → logprob: -4.297915935516357
    5. 'solve' → logprob: -4.547915935516357
    6. 'args' → logprob: -5.422915935516357
    7. '_input' → logprob: -6.547915935516357
    8. 'list' → logprob: -6.797915935516357
    9. 'stdin' → logprob: -6.922915935516357
    10. 'sys' → logprob: -7.047915935516357

Token 643: ' pour' (ID: 1930)
  Prédit: '(open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.7124475240707397
    2. 'import' → logprob: -1.0874475240707397
    3. 'open' → logprob: -3.3374476432800293
    4. '(' → logprob: -3.3374476432800293
    5. 'print' → logprob: -3.8374476432800293
    6. ')' → logprob: -4.212447643280029
    7. '(*' → logprob: -4.962447643280029
    8. '(input' → logprob: -5.087447643280029
    9. '(sys' → logprob: -5.212447643280029
    10. '(stdin' → logprob: -5.212447643280029

Token 644: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0542878694832325
    2. ' pass' → logprob: -3.179287910461426
    3. 'solve' → logprob: -5.679287910461426
    4. ' passer' → logprob: -6.179287910461426
    5. 'args' → logprob: -7.054287910461426
    6. ' les' → logprob: -7.554287910461426
    7. 'print' → logprob: -7.804287910461426
    8. 'le' → logprob: -7.804287910461426
    9. 'passed' → logprob: -8.054287910461426
    10. 'argv' → logprob: -8.054287910461426

Token 645: ' chaque' (ID: 21194)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.662132978439331
    2. 'open' → logprob: -1.412132978439331
    3. '   ' → logprob: -1.787132978439331
    4. 'input' → logprob: -3.412132978439331
    5. ')' → logprob: -4.66213321685791
    6. 'solve' → logprob: -5.03713321685791
    7. 'split' → logprob: -5.28713321685791
    8. '```' → logprob: -5.53713321685791
    9. 'read' → logprob: -5.91213321685791
    10. '
' → logprob: -6.28713321685791

Token 646: ' élément' (ID: 99627)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.08829023689031601
    2. ' line' → logprob: -2.838290214538574
    3. 'input' → logprob: -4.213290214538574
    4. '_' → logprob: -5.963290214538574
    5. 'open' → logprob: -6.463290214538574
    6. 'ligne' → logprob: -6.463290214538574
    7. '*' → logprob: -6.838290214538574
    8. 'elem' → logprob: -7.213290214538574
    9. 'element' → logprob: -7.588290214538574
    10. ' ligne' → logprob: -7.713290214538574

Token 647: ' en' (ID: 469)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.2611874341964722
    2. '=' → logprob: -1.3861874341964722
    3. ')' → logprob: -1.6361874341964722
    4. '=sys' → logprob: -2.3861875534057617
    5. '(sys' → logprob: -3.0111875534057617
    6. '(open' → logprob: -3.6361875534057617
    7. 'en' → logprob: -3.8861875534057617
    8. '=open' → logprob: -4.136187553405762
    9. 'to' → logprob: -4.386187553405762
    10. '(stdin' → logprob: -4.886187553405762

Token 648: ' argument' (ID: 10383)
  Prédit: 'arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arguments' → logprob: -0.6052179336547852
    2. 'argument' → logprob: -1.1052179336547852
    3. 'args' → logprob: -3.355217933654785
    4. 'param' → logprob: -3.605217933654785
    5. 'tant' → logprob: -3.730217933654785
    6. ' arguments' → logprob: -4.355217933654785
    7. ' argument' → logprob: -4.855217933654785
    8. ' tant' → logprob: -4.855217933654785
    9. 'arg' → logprob: -5.105217933654785
    10. '```' → logprob: -6.980217933654785

Token 649: ' sépar' (ID: 97160)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.07351157814264297
    2. ')' → logprob: -3.9485116004943848
    3. '   ' → logprob: -4.323511600494385
    4. 'open' → logprob: -4.573511600494385
    5. 'input' → logprob: -4.948511600494385
    6. 'print' → logprob: -5.198511600494385
    7. 'import' → logprob: -5.698511600494385
    8. 'to' → logprob: -6.198511600494385
    9. '```' → logprob: -6.698511600494385
    10. '(open' → logprob: -6.948511600494385

Token 650: 'é' (ID: 377)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4135948121547699
    2. 'ate' → logprob: -2.1635947227478027
    3. 'ène' → logprob: -3.6635947227478027
    4. 'é' → logprob: -4.038594722747803
    5. 'args' → logprob: -4.163594722747803
    6. 'pass' → logprob: -4.288594722747803
    7. '   ' → logprob: -4.913594722747803
    8. 'ation' → logprob: -5.163594722747803
    9. 'com' → logprob: -5.163594722747803
    10. 'ètre' → logprob: -5.413594722747803

Token 651: ' à' (ID: 1221)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.22620567679405212
    2. '   ' → logprob: -2.101205587387085
    3. 'print' → logprob: -2.976205587387085
    4. ')' → logprob: -4.351205825805664
    5. 'input' → logprob: -5.601205825805664
    6. 'import' → logprob: -6.101205825805664
    7. 'in' → logprob: -6.101205825805664
    8. 'invoke' → logprob: -7.226205825805664
    9. 'main' → logprob: -7.601205825805664
    10. 'solution' → logprob: -7.601205825805664

Token 652: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.25
    3. 'print' → logprob: -18.25
    4. 'resolve' → logprob: -18.375
    5. '```' → logprob: -23.0
    6. '.solve' → logprob: -23.25
    7. 'save' → logprob: -23.5
    8. '   ' → logprob: -23.625
    9. '
' → logprob: -23.75
    10. 'solution' → logprob: -23.75

Token 653: ' fonction' (ID: 17610)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -9.088346359931165e-07
    2. ' solve' → logprob: -14.250000953674316
    3. 'print' → logprob: -15.750000953674316
    4. 'resolve' → logprob: -18.375
    5. 'solver' → logprob: -21.25
    6. '```' → logprob: -21.25
    7. 'solution' → logprob: -21.5
    8. 'save' → logprob: -21.625
    9. '   ' → logprob: -22.125
    10. '.solve' → logprob: -22.25

Token 654: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0005632805987261236
    2. 'print' → logprob: -7.500563144683838
    3. ' solve' → logprob: -11.500563621520996
    4. 'resolve' → logprob: -16.75056266784668
    5. 'solution' → logprob: -17.75056266784668
    6. '   ' → logprob: -18.00056266784668
    7. '#' → logprob: -18.75056266784668
    8. '```' → logprob: -18.87556266784668
    9. '.solve' → logprob: -19.25056266784668
    10. 'result' → logprob: -19.37556266784668

Token 655: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45029962062835693
    2. 'print' → logprob: -1.450299620628357
    3. 'solve' → logprob: -3.2002997398376465
    4. 'import' → logprob: -3.5752997398376465
    5. '(' → logprob: -4.2002997398376465
    6. '(*' → logprob: -4.3252997398376465
    7. '(s' → logprob: -5.3252997398376465
    8. ')' → logprob: -5.3252997398376465
    9. '(print' → logprob: -5.4502997398376465
    10. 'input' → logprob: -5.5752997398376465

Token 656: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03853701800107956
    2. '   ' → logprob: -3.28853702545166
    3. ' print' → logprob: -7.78853702545166
    4. '```' → logprob: -10.03853702545166
    5. 'import' → logprob: -11.41353702545166
    6. 'result' → logprob: -12.16353702545166
    7. '	print' → logprob: -12.28853702545166
    8. '    
' → logprob: -12.53853702545166
    9. ':' → logprob: -12.91353702545166
    10. 'input' → logprob: -13.03853702545166

Token 657: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.250008583068848
    3. ' print' → logprob: -12.375008583068848
    4. 'prin' → logprob: -17.750009536743164
    5. 'import' → logprob: -18.625009536743164
    6. 'result' → logprob: -18.875009536743164
    7. 'pr' → logprob: -19.125009536743164
    8. '	print' → logprob: -19.125009536743164
    9. '```' → logprob: -19.875009536743164
    10. '    
' → logprob: -20.125009536743164

Token 658: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'prin' → logprob: -17.500001907348633
    5. 'result' → logprob: -18.375001907348633
    6. 'import' → logprob: -18.500001907348633
    7. 'pr' → logprob: -19.250001907348633
    8. '	print' → logprob: -19.750001907348633
    9. '#print' → logprob: -21.000001907348633
    10. '    
' → logprob: -21.250001907348633

Token 659: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02115682139992714
    2. ' print' → logprob: -3.8961567878723145
    3. ')' → logprob: -7.8961567878723145
    4. '.print' → logprob: -8.771157264709473
    5. 'pr' → logprob: -10.646157264709473
    6. '.' → logprob: -11.146157264709473
    7. '_print' → logprob: -11.271157264709473
    8. 'prin' → logprob: -11.896157264709473
    9. '   ' → logprob: -12.396157264709473
    10. '(print' → logprob: -13.021157264709473

Token 660: 'voie' (ID: 70072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001827384578064084
    2. 'pr' → logprob: -7.501827239990234
    3. ')' → logprob: -8.626827239990234
    4. 'prin' → logprob: -8.626827239990234
    5. 'prime' → logprob: -8.626827239990234
    6. 'r' → logprob: -9.126827239990234
    7. ' print' → logprob: -9.126827239990234
    8. 'im' → logprob: -9.751827239990234
    9. 'p' → logprob: -9.876827239990234
    10. 'import' → logprob: -10.001827239990234

Token 661: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029787518084049225
    2. '(print' → logprob: -3.529787540435791
    3. '(' → logprob: -10.654787063598633
    4. '   ' → logprob: -11.404787063598633
    5. ' print' → logprob: -13.279787063598633
    6. '(
' → logprob: -15.529787063598633
    7. 'prin' → logprob: -15.904787063598633
    8. '```' → logprob: -16.779787063598633
    9. '_print' → logprob: -17.029787063598633
    10. '	print' → logprob: -17.404787063598633

Token 662: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.043936602771282196
    2. '(' → logprob: -3.9189364910125732
    3. '(print' → logprob: -4.043936729431152
    4. 'result' → logprob: -5.793936729431152
    5. ' print' → logprob: -6.793936729431152
    6. ')' → logprob: -7.293936729431152
    7. '()' → logprob: -7.668936729431152
    8. 'solve' → logprob: -10.043936729431152
    9. 'output' → logprob: -10.168936729431152
    10. '(result' → logprob: -10.168936729431152

Token 663: ' de' (ID: 334)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.0824858769774437
    2. 'print' → logprob: -3.2074859142303467
    3. '(' → logprob: -3.3324859142303467
    4. '   ' → logprob: -5.832485675811768
    5. '(
' → logprob: -10.832486152648926
    6. '(s' → logprob: -10.832486152648926
    7. ' print' → logprob: -11.207486152648926
    8. ')' → logprob: -11.332486152648926
    9. '(output' → logprob: -13.207486152648926
    10. '(Print' → logprob: -13.332486152648926

Token 664: ' solve' (ID: 17722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031989887356758118
    2. 'solve' → logprob: -5.753199100494385
    3. ' print' → logprob: -10.878198623657227
    4. ' solve' → logprob: -13.628198623657227
    5. '   ' → logprob: -14.128198623657227
    6. '(print' → logprob: -14.753198623657227
    7. '```' → logprob: -16.753198623657227
    8. 'pr' → logprob: -18.628198623657227
    9. 's' → logprob: -18.628198623657227
    10. 'sol' → logprob: -18.628198623657227

Token 665: ' à' (ID: 1221)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.09516450017690659
    2. '(' → logprob: -3.0951645374298096
    3. 'print' → logprob: -3.2201645374298096
    4. '   ' → logprob: -5.8451642990112305
    5. '()' → logprob: -6.4701642990112305
    6. '(s' → logprob: -7.2201642990112305
    7. '(output' → logprob: -9.22016429901123
    8. ')' → logprob: -9.47016429901123
    9. '())' → logprob: -9.72016429901123
    10. '(
' → logprob: -10.22016429901123

Token 666: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. '(print' → logprob: -17.37502670288086
    4. '```' → logprob: -18.12502670288086
    5. '   ' → logprob: -19.25002670288086
    6. '	print' → logprob: -20.00002670288086
    7. '_print' → logprob: -21.25002670288086
    8. '#print' → logprob: -22.25002670288086
    9. 'import' → logprob: -22.62502670288086
    10. '-print' → logprob: -22.75002670288086

Token 667: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -16.875
    3. 'prin' → logprob: -19.125
    4. 'printer' → logprob: -22.125
    5. '```' → logprob: -22.5
    6. 'pr' → logprob: -23.375
    7. 'write' → logprob: -23.875
    8. '#print' → logprob: -24.0
    9. 'paste' → logprob: -24.375
    10. '#' → logprob: -24.5

Token 668: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. 'prin' → logprob: -18.75
    4. '```' → logprob: -19.5
    5. '   ' → logprob: -19.625
    6. '(print' → logprob: -20.25
    7. '#print' → logprob: -21.625
    8. '	print' → logprob: -21.875
    9. 'import' → logprob: -22.125
    10. '_print' → logprob: -22.125

Token 669: ' pour' (ID: 1930)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.07195521146059036
    2. '(' → logprob: -2.8219552040100098
    3. 'print' → logprob: -4.69695520401001
    4. '(
' → logprob: -7.32195520401001
    5. '()' → logprob: -9.196955680847168
    6. '   ' → logprob: -10.196955680847168
    7. '(

' → logprob: -12.696955680847168
    8. ' print' → logprob: -12.946955680847168
    9. ')' → logprob: -13.196955680847168
    10. '(Print' → logprob: -13.446955680847168

Token 670: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3197897970676422
    2. ' afficher' → logprob: -1.8197897672653198
    3. ' print' → logprob: -2.3197898864746094
    4. 'aff' → logprob: -4.819789886474609
    5. ' l' → logprob: -5.444789886474609
    6. ' affich' → logprob: -7.694789886474609
    7. 'l' → logprob: -8.56978988647461
    8. ' aff' → logprob: -9.19478988647461
    9. ' affiche' → logprob: -10.44478988647461
    10. ' display' → logprob: -10.44478988647461

Token 671: ''aff' (ID: 53397)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09527754038572311
    2. 'imiter' → logprob: -3.4702775478363037
    3. ''aff' → logprob: -3.8452775478363037
    4. 'ancer' → logprob: -4.095277309417725
    5. 'a' → logprob: -5.345277309417725
    6. 'e' → logprob: -5.470277309417725
    7. 'im' → logprob: -5.595277309417725
    8. ''impression' → logprob: -6.595277309417725
    9. '_aff' → logprob: -6.970277309417725
    10. 'aff' → logprob: -7.095277309417725

Token 672: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.38212987780570984
    2. 'ich' → logprob: -1.3821299076080322
    3. 'iche' → logprob: -3.0071299076080322
    4. 'ic' → logprob: -4.757129669189453
    5. 'print' → logprob: -5.507129669189453
    6. 'ichage' → logprob: -6.507129669189453
    7. 'er' → logprob: -6.882129669189453
    8. 'cher' → logprob: -7.007129669189453
    9. 'itch' → logprob: -7.632129669189453
    10. 'f' → logprob: -8.882129669189453

Token 673: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05021217092871666
    2. '(print' → logprob: -3.1752121448516846
    3. '   ' → logprob: -5.050212383270264
    4. '(' → logprob: -7.675212383270264
    5. ' print' → logprob: -9.300211906433105
    6. '(
' → logprob: -9.425211906433105
    7. 'import' → logprob: -9.800211906433105
    8. '```' → logprob: -10.050211906433105
    9. ')' → logprob: -11.425211906433105
    10. '    
' → logprob: -11.550211906433105

Token 674: ' l' (ID: 305)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.910640299320221
    2. 'l' → logprob: -1.2856402397155762
    3. 'la' → logprob: -1.2856402397155762
    4. 'sys' → logprob: -3.910640239715576
    5. 'console' → logprob: -4.660640239715576
    6. '```' → logprob: -5.660640239715576
    7. 'print' → logprob: -6.535640239715576
    8. 'é' → logprob: -6.785640239715576
    9. '_stdout' → logprob: -7.160640239715576
    10. 'standard' → logprob: -7.285640239715576

Token 675: ''écran' (ID: 147901)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5997806787490845
    2. ''écran' → logprob: -1.9747806787490845
    3. 'stdout' → logprob: -2.099780559539795
    4. 'ull' → logprob: -2.849780559539795
    5. 'a' → logprob: -3.349780559539795
    6. 'print' → logprob: -3.974780559539795
    7. 'ichage' → logprob: -4.974780559539795
    8. 'console' → logprob: -5.099780559539795
    9. '_stdout' → logprob: -5.224780559539795
    10. '’écran' → logprob: -5.224780559539795

Token 676: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006719282828271389
    2. '   ' → logprob: -5.38171911239624
    3. '(print' → logprob: -6.25671911239624
    4. ' print' → logprob: -9.256719589233398
    5. '(' → logprob: -10.006719589233398
    6. ')' → logprob: -11.631719589233398
    7. '(
' → logprob: -11.756719589233398
    8. '```' → logprob: -12.006719589233398
    9. '()' → logprob: -12.256719589233398
    10. '	print' → logprob: -12.381719589233398

Token 677: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010545044642640278
    2. '   ' → logprob: -9.250105857849121
    3. ' print' → logprob: -11.625105857849121
    4. '```' → logprob: -15.125105857849121
    5. '	print' → logprob: -16.375104904174805
    6. '(print' → logprob: -17.250104904174805
    7. 'import' → logprob: -18.125104904174805
    8. 'pr' → logprob: -20.250104904174805
    9. '.print' → logprob: -20.500104904174805
    10. 'println' → logprob: -20.625104904174805

Token 678: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -12.75000286102295
    3. ' print' → logprob: -15.25000286102295
    4. 'import' → logprob: -18.625003814697266
    5. '```' → logprob: -18.625003814697266
    6. '	print' → logprob: -20.250003814697266
    7. '    
' → logprob: -20.250003814697266
    8. 'pr' → logprob: -21.250003814697266
    9. 'prin' → logprob: -21.500003814697266
    10. '(print' → logprob: -22.250003814697266

Token 679: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0024953987449407578
    2. '(' → logprob: -6.002495288848877
    3. '(*' → logprob: -11.877495765686035
    4. 'solve' → logprob: -11.877495765686035
    5. '(solution' → logprob: -13.252495765686035
    6. '()' → logprob: -13.377495765686035
    7. '(sol' → logprob: -14.502495765686035
    8. '((' → logprob: -14.752495765686035
    9. '(
' → logprob: -15.252495765686035
    10. ' (' → logprob: -15.252495765686035

Token 680: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -2.339278580620885e-06
    2. 'solve' → logprob: -13.000001907348633
    3. 'ol' → logprob: -18.500001907348633
    4. 'olver' → logprob: -18.875001907348633
    5. 'OLVE' → logprob: -19.375001907348633
    6. 'ole' → logprob: -19.750001907348633
    7. 'ove' → logprob: -20.250001907348633
    8. 'olution' → logprob: -20.375001907348633
    9. 'erve' → logprob: -21.250001907348633
    10. 'olv' → logprob: -21.500001907348633

Token 681: '(*(' (ID: 103513)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00011319868644932285
    2. '(*(' → logprob: -9.625113487243652
    3. '(' → logprob: -10.125113487243652
    4. '(*)' → logprob: -12.125113487243652
    5. '())' → logprob: -13.875113487243652
    6. '()' → logprob: -15.250113487243652
    7. ' (*' → logprob: -15.875113487243652
    8. '*' → logprob: -16.625112533569336
    9. '((*' → logprob: -17.250112533569336
    10. '()*' → logprob: -17.375112533569336

Token 682: 'open' (ID: 3843)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5146909952163696
    2. 'open' → logprob: -1.0146909952163696
    3. 'input' → logprob: -3.26469087600708
    4. 'sys' → logprob: -6.63969087600708
    5. 'l' → logprob: -9.639691352844238
    6. 'x' → logprob: -9.764691352844238
    7. 'inp' → logprob: -10.389691352844238
    8. '_.' → logprob: -10.764691352844238
    9. 's' → logprob: -11.014691352844238
    10. 'map' → logprob: -11.139691352844238

Token 683: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00975833274424076
    2. '0' → logprob: -4.634758472442627
    3. '[' → logprob: -13.759757995605469
    4. '```' → logprob: -15.259757995605469
    5. ' (' → logprob: -15.634757995605469
    6. ')' → logprob: -15.759757995605469
    7. '()' → logprob: -15.884757995605469
    8. '())' → logprob: -16.13475799560547
    9. '"' → logprob: -16.50975799560547
    10. '   ' → logprob: -16.63475799560547

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.500001907348633
    3. ''' → logprob: -14.625001907348633
    4. '(' → logprob: -14.625001907348633
    5. '"' → logprob: -15.125001907348633
    6. ''/' → logprob: -18.375001907348633
    7. '[' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '"/' → logprob: -19.625001907348633
    10. ')' → logprob: -20.125001907348633

Token 685: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.13150160014629364
    2. ').' → logprob: -2.2565016746520996
    3. '()).' → logprob: -4.0065016746521
    4. '()' → logprob: -8.256501197814941
    5. ')' → logprob: -11.631501197814941
    6. '   ' → logprob: -12.006501197814941
    7. ')).' → logprob: -12.131501197814941
    8. '()].' → logprob: -12.256501197814941
    9. ' ).' → logprob: -12.381501197814941
    10. '())).' → logprob: -12.506501197814941

Token 686: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: 0.0
    2. '.read' → logprob: -17.5
    3. ' read' → logprob: -18.125
    4. '(read' → logprob: -21.125
    5. '().' → logprob: -21.5
    6. ').' → logprob: -22.125
    7. '	read' → logprob: -22.375
    8. ' ' → logprob: -22.875
    9. '_read' → logprob: -23.0
    10. '```' → logprob: -23.125

Token 687: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.27099974633893e-05
    2. '()' → logprob: -11.625012397766113
    3. 'lines' → logprob: -12.750012397766113
    4. '()).' → logprob: -14.625012397766113
    5. ' ().' → logprob: -16.12501335144043
    6. '_lines' → logprob: -16.50001335144043
    7. 'line' → logprob: -17.75001335144043
    8. '()))' → logprob: -17.75001335144043
    9. '(' → logprob: -17.87501335144043
    10. ').' → logprob: -18.37501335144043

Token 688: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0017086135921999812
    2. 'read' → logprob: -6.501708507537842
    3. 'decode' → logprob: -8.751708984375
    4. 'strip' → logprob: -10.001708984375
    5. ' split' → logprob: -13.126708984375
    6. '().' → logprob: -14.751708984375
    7. '()' → logprob: -16.001708984375
    8. ')' → logprob: -16.501708984375
    9. 'rstrip' → logprob: -17.001708984375
    10. '(split' → logprob: -17.501708984375

Token 689: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.9361264946837764e-07
    2. 'line' → logprob: -16.0
    3. 'li' → logprob: -20.0
    4. '()' → logprob: -20.0
    5. '()))' → logprob: -20.0
    6. '())' → logprob: -20.5
    7. 'lin' → logprob: -20.75
    8. ')' → logprob: -21.25
    9. '(lines' → logprob: -21.25
    10. '))' → logprob: -21.375

Token 690: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.00821383111178875
    2. '()' → logprob: -5.508213996887207
    3. '()))' → logprob: -5.758213996887207
    4. ')))' → logprob: -7.258213996887207
    5. '())))
' → logprob: -8.758213996887207
    6. '())' → logprob: -9.383213996887207
    7. '(),' → logprob: -11.133213996887207
    8. '()),' → logprob: -12.758213996887207
    9. '()]' → logprob: -13.508213996887207
    10. '()[' → logprob: -13.633213996887207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 688
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 370
Précision stricte (1ère position): 20.93%
Précision adaptée (1ère position): 21.66%
Précision (top 10): 53.78%
================================================================================
