================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une ligne de texte, puis divise cette ligne en une liste de sous-chaînes en utilisant l'espace (par défaut) comme séparateur.
# Par exemple, si l'utilisateur entre "12 1000", la variable input contiendra ["12", "1000"].
input = input().split()

# Ici, 'input' est une liste de chaînes de caractères, chaque élément représentant un nombre sous forme de chaîne.
# On parcourt chaque élément de cette liste en utilisant une compréhension de liste pour le convertir en entier.
# Cela crée une nouvelle liste 'listInt' contenant les mêmes valeurs, mais sous forme d'entiers.
listInt = [int(i) for i in input]

# La structure conditionnelle suivante permet de réaliser différents traitements en fonction de la valeur du premier nombre de la liste.
# On accède au premier élément de la liste 'listInt' en utilisant l'index [0].
if listInt[0] >= 13:
    # Si la valeur du premier élément est supérieure ou égale à 13,
    # on affiche simplement la valeur du second élément,
    # accessible via l'index [1].
    print(listInt[1])
elif listInt[0] > 5:
    # Si la condition précédente n'est pas respectée, mais que la valeur du premier élément est strictement supérieure à 5,
    # on effectue une division entière du second élément par 2.
    # Le résultat est converti en entier (même si la division avec '/' retourne un flottant),
    # puis affiché avec la fonction print().
    print(int(listInt[1] / 2))
else:
    # Si aucune des deux conditions précédentes n'est respectée (donc si le premier élément est inférieur ou égal à 5),
    # on affiche la valeur 0 avec print().
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5886377096176147
    2. ' ' → logprob: -1.4636377096176147
    3. '_' → logprob: -2.2136378288269043
    4. ':' → logprob: -3.2136378288269043
    5. '.' → logprob: -4.338637828826904
    6. '```' → logprob: -4.463637828826904
    7. ' de' → logprob: -4.463637828826904
    8. ''' → logprob: -5.213637828826904
    9. '[' → logprob: -5.963637828826904
    10. 'u' → logprob: -5.963637828826904

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16771981120109558
    2. ' l' → logprob: -1.917719841003418
    3. ' ' → logprob: -5.667719841003418
    4. ' user' → logprob: -6.667719841003418
    5. 'user' → logprob: -7.167719841003418
    6. ''' → logprob: -7.917719841003418
    7. 'u' → logprob: -8.167719841003418
    8. '_' → logprob: -8.417719841003418
    9. ' ' → logprob: -8.917719841003418
    10. ' utilisateur' → logprob: -9.042719841003418

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.04567401856184006
    2. 'util' → logprob: -4.170673847198486
    3. ''' → logprob: -4.795673847198486
    4. 'u' → logprob: -5.045673847198486
    5. '’utilisateur' → logprob: -5.045673847198486
    6. ' utilisateur' → logprob: -5.295673847198486
    7. 'a' → logprob: -6.295673847198486
    8. ''user' → logprob: -8.170674324035645
    9. ''util' → logprob: -8.670674324035645
    10. 'user' → logprob: -8.920674324035645

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.24527370929718018
    2. 'name' → logprob: -2.3702735900878906
    3. 'print' → logprob: -3.2452735900878906
    4. 'user' → logprob: -3.3702735900878906
    5. 'input' → logprob: -4.245273590087891
    6. 's' → logprob: -4.370273590087891
    7. 'prenom' → logprob: -5.620273590087891
    8. 'age' → logprob: -5.745273590087891
    9. 'n' → logprob: -5.870273590087891
    10. 'd' → logprob: -6.495273590087891

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028796790167689323
    2. 'entr' → logprob: -4.153796672821045
    3. ' saisir' → logprob: -5.153796672821045
    4. '```' → logprob: -6.028796672821045
    5. 'r' → logprob: -6.153796672821045
    6. 'sa' → logprob: -7.903796672821045
    7. 'don' → logprob: -8.153797149658203
    8. 'entrée' → logprob: -8.403797149658203
    9. '#' → logprob: -8.403797149658203
    10. ' entrer' → logprob: -8.653797149658203

Token 8: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6391957402229309
    2. ' ' → logprob: -2.264195680618286
    3. 'une' → logprob: -2.264195680618286
    4. ' un' → logprob: -2.514195680618286
    5. 's' → logprob: -3.139195680618286
    6. '_' → logprob: -3.389195680618286
    7. 'un' → logprob: -4.014195919036865
    8. '```' → logprob: -4.014195919036865
    9. ' la' → logprob: -4.264195919036865
    10. ''' → logprob: -4.889195919036865

Token 9: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015843961387872696
    2. ' chaîne' → logprob: -5.015843868255615
    3. ' phrase' → logprob: -5.015843868255615
    4. 'chaine' → logprob: -7.640843868255615
    5. ' ligne' → logprob: -7.765843868255615
    6. ' valeur' → logprob: -8.015844345092773
    7. ' chaine' → logprob: -8.140844345092773
    8. ' variable' → logprob: -8.390844345092773
    9. 'phrase' → logprob: -8.640844345092773
    10. ' espace' → logprob: -9.265844345092773

Token 10: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14999260008335114
    2. 's' → logprob: -3.1499927043914795
    3. 'input' → logprob: -3.5249927043914795
    4. 'user' → logprob: -3.7749927043914795
    5. 'i' → logprob: -4.1499924659729
    6. 'u' → logprob: -4.3999924659729
    7. 'ligne' → logprob: -4.7749924659729
    8. '_' → logprob: -6.2749924659729
    9. '#' → logprob: -6.6499924659729
    10. 'print' → logprob: -7.1499924659729

Token 11: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.2229756861925125
    2. 'texte' → logprob: -1.722975730895996
    3. 'commande' → logprob: -4.347975730895996
    4. 'comment' → logprob: -5.097975730895996
    5. '#' → logprob: -6.347975730895996
    6. 'text' → logprob: -8.472975730895996
    7. 'command' → logprob: -9.847975730895996
    8. ' code' → logprob: -9.847975730895996
    9. ' texte' → logprob: -9.972975730895996
    10. '```' → logprob: -9.972975730895996

Token 12: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33203136920928955
    2. 'user' → logprob: -1.7070313692092896
    3. 's' → logprob: -3.45703125
    4. 'text' → logprob: -3.45703125
    5. 'texte' → logprob: -4.33203125
    6. 'i' → logprob: -5.20703125
    7. 'print' → logprob: -5.58203125
    8. 'u' → logprob: -5.95703125
    9. '_' → logprob: -5.95703125
    10. 'x' → logprob: -6.58203125

Token 13: ' puis' (ID: 18766)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4846343994140625
    2. 's' → logprob: -1.7346343994140625
    3. ' ' → logprob: -1.9846343994140625
    4. ' input' → logprob: -3.9846343994140625
    5. '\' → logprob: -5.2346343994140625
    6. '_' → logprob: -5.3596343994140625
    7. 'print' → logprob: -5.6096343994140625
    8. 'user' → logprob: -5.6096343994140625
    9. 'text' → logprob: -5.6096343994140625
    10. 'n' → logprob: -5.8596343994140625

Token 14: ' div' (ID: 4223)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.48734334111213684
    2. 'print' → logprob: -1.6123433113098145
    3. 'l' → logprob: -2.9873433113098145
    4. ' print' → logprob: -3.2373433113098145
    5. 'input' → logprob: -3.8623433113098145
    6. ' afficher' → logprob: -3.9873433113098145
    7. 's' → logprob: -5.1123433113098145
    8. ' lire' → logprob: -5.2373433113098145
    9. 'contin' → logprob: -5.2373433113098145
    10. ' affiche' → logprob: -5.4873433113098145

Token 15: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5262950658798218
    2. 'd' → logprob: -0.9012950658798218
    3. 'e' → logprob: -7.651295185089111
    4. 'de' → logprob: -7.776295185089111
    5. 'v' → logprob: -7.901295185089111
    6. 'r' → logprob: -8.151294708251953
    7. 'z' → logprob: -8.151294708251953
    8. 'ser' → logprob: -8.276294708251953
    9. '```' → logprob: -8.401294708251953
    10. 'i' → logprob: -8.901294708251953

Token 16: ' cette' (ID: 7696)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13283507525920868
    2. ' la' → logprob: -3.2578351497650146
    3. ' le' → logprob: -4.2578349113464355
    4. ' ' → logprob: -4.2578349113464355
    5. 's' → logprob: -4.8828349113464355
    6. '_le' → logprob: -4.8828349113464355
    7. ' ' → logprob: -5.2578349113464355
    8. 'le' → logprob: -5.2578349113464355
    9. ' _' → logprob: -5.7578349113464355
    10. 'la' → logprob: -5.8828349113464355

Token 17: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36774367094039917
    2. ' chaîne' → logprob: -1.742743730545044
    3. ' ligne' → logprob: -2.617743730545044
    4. ' phrase' → logprob: -3.242743730545044
    5. ' chaine' → logprob: -4.867743492126465
    6. 'chaine' → logprob: -5.742743492126465
    7. 's' → logprob: -5.992743492126465
    8. 'phrase' → logprob: -6.742743492126465
    9. 'ligne' → logprob: -6.742743492126465
    10. ' ' → logprob: -6.867743492126465

Token 18: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0394314527511597
    2. 's' → logprob: -1.2894314527511597
    3. '.' → logprob: -2.164431571960449
    4. 'input' → logprob: -2.914431571960449
    5. '.split' → logprob: -3.164431571960449
    6. ' =' → logprob: -3.539431571960449
    7. ' ' → logprob: -3.664431571960449
    8. ''' → logprob: -4.414431571960449
    9. '#' → logprob: -4.414431571960449
    10. ',' → logprob: -4.539431571960449

Token 19: ' une' (ID: 2463)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4564771354198456
    2. ' mots' → logprob: -1.081477165222168
    3. 'tokens' → logprob: -5.581477165222168
    4. ' des' → logprob: -5.831477165222168
    5. ' espaces' → logprob: -5.831477165222168
    6. ' ' → logprob: -6.081477165222168
    7. '```' → logprob: -6.081477165222168
    8. 'des' → logprob: -6.331477165222168
    9. ' tokens' → logprob: -6.456477165222168
    10. 'un' → logprob: -6.831477165222168

Token 20: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.20776750147342682
    2. ' chaîne' → logprob: -2.3327674865722656
    3. 'liste' → logprob: -3.7077674865722656
    4. ' ' → logprob: -4.082767486572266
    5. ' phrase' → logprob: -4.457767486572266
    6. 'm' → logprob: -4.582767486572266
    7. 'chaine' → logprob: -4.832767486572266
    8. ' chaine' → logprob: -5.332767486572266
    9. 's' → logprob: -5.457767486572266
    10. 'part' → logprob: -6.332767486572266

Token 21: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0239570140838623
    2. 's' → logprob: -1.5239570140838623
    3. '[' → logprob: -1.7739570140838623
    4. '.' → logprob: -2.1489570140838623
    5. ',' → logprob: -4.023957252502441
    6. 'input' → logprob: -4.398957252502441
    7. '#' → logprob: -4.523957252502441
    8. 'e' → logprob: -4.648957252502441
    9. ' =' → logprob: -4.773957252502441
    10. ' ' → logprob: -4.898957252502441

Token 22: ' sous' (ID: 14487)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013776405714452267
    2. ' mots' → logprob: -4.3887763023376465
    3. 'mot' → logprob: -7.3887763023376465
    4. ' ' → logprob: -8.263776779174805
    5. ' chaînes' → logprob: -9.388776779174805
    6. '   ' → logprob: -9.388776779174805
    7. 'tokens' → logprob: -9.763776779174805
    8. 'cha' → logprob: -10.263776779174805
    9. '```' → logprob: -10.763776779174805
    10. 'words' → logprob: -10.888776779174805

Token 23: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.793546736240387
    2. '_m' → logprob: -1.2935466766357422
    3. '_' → logprob: -1.5435466766357422
    4. '-' → logprob: -4.043546676635742
    5. '_chain' → logprob: -4.168546676635742
    6. '-m' → logprob: -5.543546676635742
    7. '-cha' → logprob: -5.918546676635742
    8. '   ' → logprob: -5.918546676635742
    9. '-chain' → logprob: -6.168546676635742
    10. ' chain' → logprob: -6.293546676635742

Token 24: 'înes' (ID: 171517)
  Prédit: 'nes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.12880581617355347
    2. 'înes' → logprob: -2.8788058757781982
    3. '```' → logprob: -3.2538058757781982
    4. 'n' → logprob: -4.128805637359619
    5. 'î' → logprob: -6.128805637359619
    6. '``' → logprob: -6.253805637359619
    7. 'r' → logprob: -6.378805637359619
    8. '#' → logprob: -6.753805637359619
    9. 'nts' → logprob: -7.878805637359619
    10. 'ines' → logprob: -8.003806114196777

Token 25: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2246813774108887
    2. 'l' → logprob: -1.5996813774108887
    3. 'texte' → logprob: -2.4746813774108887
    4. 'i' → logprob: -2.8496813774108887
    5. 'input' → logprob: -3.2246813774108887
    6. '_' → logprob: -3.3496813774108887
    7. '\' → logprob: -3.4746813774108887
    8. 't' → logprob: -3.5996813774108887
    9. 'ligne' → logprob: -3.5996813774108887
    10. '.' → logprob: -3.7246813774108887

Token 26: ' utilisant' (ID: 92474)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.0380762815475464
    2. ' utilisant' → logprob: -1.1630762815475464
    3. ' fonction' → logprob: -1.5380762815475464
    4. 'util' → logprob: -3.288076400756836
    5. ' ' → logprob: -3.788076400756836
    6. 's' → logprob: -4.163076400756836
    7. 'fon' → logprob: -5.163076400756836
    8. '```' → logprob: -5.788076400756836
    9. '['' → logprob: -5.913076400756836
    10. ' espaces' → logprob: -6.163076400756836

Token 27: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3603011667728424
    2. 'la' → logprob: -2.7353012561798096
    3. '```' → logprob: -3.1103012561798096
    4. ''' → logprob: -3.4853012561798096
    5. 'split' → logprob: -3.7353012561798096
    6. 'le' → logprob: -3.8603012561798096
    7. ' ' → logprob: -3.8603012561798096
    8. 'input' → logprob: -3.9853012561798096
    9. ' l' → logprob: -4.1103010177612305
    10. 'es' → logprob: -4.4853010177612305

Token 28: ''espace' (ID: 118124)
  Prédit: ''espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.2731259763240814
    2. ''' → logprob: -2.0231258869171143
    3. 'e' → logprob: -2.6481258869171143
    4. 'a' → logprob: -3.8981258869171143
    5. ''esp' → logprob: -5.023126125335693
    6. 'es' → logprob: -6.398126125335693
    7. ''e' → logprob: -6.773126125335693
    8. ''entrée' → logprob: -6.898126125335693
    9. ''''' → logprob: -7.023126125335693
    10. ''ex' → logprob: -7.398126125335693

Token 29: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4469125270843506
    2. '_' → logprob: -1.9469125270843506
    3. 'texte' → logprob: -2.0719125270843506
    4. 'input' → logprob: -2.4469125270843506
    5. 'user' → logprob: -2.6969125270843506
    6. 'l' → logprob: -2.6969125270843506
    7. 'i' → logprob: -3.0719125270843506
    8. 't' → logprob: -3.0719125270843506
    9. 'ligne' → logprob: -3.6969125270843506
    10. 'n' → logprob: -3.8219125270843506

Token 30: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021043717861175537
    2. '')' → logprob: -4.64604377746582
    3. '")' → logprob: -5.14604377746582
    4. ''' → logprob: -6.14604377746582
    5. ' )' → logprob: -6.14604377746582
    6. '"' → logprob: -7.64604377746582
    7. 's' → logprob: -8.52104377746582
    8. ').' → logprob: -9.39604377746582
    9. '#' → logprob: -9.39604377746582
    10. '`)' → logprob: -9.39604377746582

Token 31: ' défaut' (ID: 79375)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9910496473312378
    2. ')' → logprob: -1.8660496473312378
    3. 'def' → logprob: -2.1160497665405273
    4. ''' → logprob: -2.6160497665405273
    5. 'e' → logprob: -2.7410497665405273
    6. ''espace' → logprob: -2.9910497665405273
    7. '```' → logprob: -3.4910497665405273
    8. ' espace' → logprob: -3.9910497665405273
    9. 'space' → logprob: -3.9910497665405273
    10. '`' → logprob: -4.366049766540527

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04275787994265556
    2. ' )' → logprob: -3.417757987976074
    3. ' comme' → logprob: -4.917757987976074
    4. ').' → logprob: -7.292757987976074
    5. 'comme' → logprob: -7.667757987976074
    6. ' ' → logprob: -9.292757987976074
    7. ' pour' → logprob: -9.542757987976074
    8. 's' → logprob: -9.667757987976074
    9. '):' → logprob: -9.792757987976074
    10. '.' → logprob: -10.167757987976074

Token 33: ' comme' (ID: 7971)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0288461446762085
    2. 's' → logprob: -1.7788461446762085
    3. 'input' → logprob: -2.528846263885498
    4. 'texte' → logprob: -2.778846263885498
    5. 'i' → logprob: -2.903846263885498
    6. 'user' → logprob: -3.028846263885498
    7. 't' → logprob: -3.028846263885498
    8. 'u' → logprob: -3.528846263885498
    9. 'text' → logprob: -3.528846263885498
    10. '#' → logprob: -3.653846263885498

Token 34: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.1291881650686264
    2. 's' → logprob: -3.254188060760498
    3. 'sé' → logprob: -3.754188060760498
    4. 'delimiter' → logprob: -4.129188060760498
    5. 'dé' → logprob: -4.879188060760498
    6. ' séparation' → logprob: -5.004188060760498
    7. 'del' → logprob: -5.129188060760498
    8. ' ' → logprob: -5.629188060760498
    9. 'sep' → logprob: -5.629188060760498
    10. ' dé' → logprob: -5.754188060760498

Token 35: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.00011319868644932285
    2. 'ateurs' → logprob: -10.000113487243652
    3. 'ate' → logprob: -10.125113487243652
    4. 'ator' → logprob: -11.375113487243652
    5. 'a' → logprob: -12.375113487243652
    6. 'ation' → logprob: -12.625113487243652
    7. 'atrice' → logprob: -13.125113487243652
    8. '```' → logprob: -13.625113487243652
    9. 'at' → logprob: -14.000113487243652
    10. 'r' → logprob: -14.375113487243652

Token 36: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9881224036216736
    2. 's' → logprob: -1.7381224632263184
    3. '#' → logprob: -1.8631224632263184
    4. 'u' → logprob: -2.9881224632263184
    5. 'i' → logprob: -3.1131224632263184
    6. 'texte' → logprob: -3.1131224632263184
    7. 't' → logprob: -3.6131224632263184
    8. 'text' → logprob: -3.7381224632263184
    9. 'user' → logprob: -3.8631224632263184
    10. 'n' → logprob: -3.8631224632263184

Token 37: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0881421566009521
    2. 'l' → logprob: -2.213142156600952
    3. ' ' → logprob: -2.588142156600952
    4. 'texte' → logprob: -2.963142156600952
    5. 'u' → logprob: -2.963142156600952
    6. 't' → logprob: -3.088142156600952
    7. '#' → logprob: -3.088142156600952
    8. 'n' → logprob: -3.213142156600952
    9. 'i' → logprob: -3.338142156600952
    10. '```' → logprob: -3.338142156600952

Token 38: ' Par' (ID: 3371)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2511646747589111
    2. 'texte' → logprob: -1.7511646747589111
    3. 's' → logprob: -2.126164674758911
    4. 'input' → logprob: -2.251164674758911
    5. 'ligne' → logprob: -2.251164674758911
    6. 'text' → logprob: -2.376164674758911
    7. 'user' → logprob: -2.751164674758911
    8. 't' → logprob: -4.626164436340332
    9. 'line' → logprob: -4.626164436340332
    10. '#' → logprob: -4.876164436340332

Token 39: ' exemple' (ID: 26320)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9722232222557068
    2. '#' → logprob: -1.5972232818603516
    3. 'don' → logprob: -1.8472232818603516
    4. 'a' → logprob: -2.2222232818603516
    5. 'd' → logprob: -3.7222232818603516
    6. 's' → logprob: -3.8472232818603516
    7. 'am' → logprob: -3.9722232818603516
    8. 'e' → logprob: -3.9722232818603516
    9. 'm' → logprob: -4.972223281860352
    10. 'ent' → logprob: -5.097223281860352

Token 40: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6604348421096802
    2. 's' → logprob: -0.9104348421096802
    3. '_' → logprob: -4.035434722900391
    4. '#' → logprob: -4.410434722900391
    5. ',' → logprob: -4.785434722900391
    6. ' ,' → logprob: -4.785434722900391
    7. ''' → logprob: -5.160434722900391
    8. ' #' → logprob: -5.410434722900391
    9. 'n' → logprob: -5.660434722900391
    10. ' :' → logprob: -6.535434722900391

Token 41: ' si' (ID: 1784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3882169723510742
    2. ' input' → logprob: -2.013216972351074
    3. ' "' → logprob: -2.388216972351074
    4. ' ligne' → logprob: -2.388216972351074
    5. ' ' → logprob: -2.513216972351074
    6. ' l' → logprob: -2.888216972351074
    7. ' s' → logprob: -3.638216972351074
    8. ' la' → logprob: -3.763216972351074
    9. 'ligne' → logprob: -3.763216972351074
    10. 'l' → logprob: -3.888216972351074

Token 42: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.046451397240161896
    2. 'l' → logprob: -4.046451568603516
    3. ' ' → logprob: -4.421451568603516
    4. ' on' → logprob: -5.546451568603516
    5. ' ' → logprob: -5.671451568603516
    6. ' la' → logprob: -5.796451568603516
    7. ' vous' → logprob: -6.546451568603516
    8. ' user' → logprob: -6.671451568603516
    9. 'user' → logprob: -7.796451568603516
    10. ' input' → logprob: -8.296451568603516

Token 43: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.20232440531253815
    2. 'igne' → logprob: -2.702324390411377
    3. ' utilisateur' → logprob: -3.702324390411377
    4. 'a' → logprob: -3.702324390411377
    5. ''' → logprob: -3.827324390411377
    6. 'input' → logprob: -4.702324390411377
    7. 'user' → logprob: -4.952324390411377
    8. ''user' → logprob: -5.327324390411377
    9. 'ine' → logprob: -5.577324390411377
    10. '’utilisateur' → logprob: -6.077324390411377

Token 44: ' entre' (ID: 3853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24346643686294556
    2. ' sais' → logprob: -2.368466377258301
    3. ' s' → logprob: -3.243466377258301
    4. ' ' → logprob: -4.118466377258301
    5. ' entre' → logprob: -4.243466377258301
    6. ' tape' → logprob: -4.618466377258301
    7. ' input' → logprob: -5.243466377258301
    8. 'input' → logprob: -5.368466377258301
    9. '_' → logprob: -5.368466377258301
    10. ' souhaite' → logprob: -5.493466377258301

Token 45: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7038571238517761
    2. ' un' → logprob: -1.703857183456421
    3. ' une' → logprob: -2.078857183456421
    4. ' "' → logprob: -2.578857183456421
    5. ''' → logprob: -2.953857183456421
    6. ' ' → logprob: -4.078856945037842
    7. 'une' → logprob: -4.953856945037842
    8. 's' → logprob: -5.078856945037842
    9. 'un' → logprob: -5.328856945037842
    10. '`' → logprob: -5.703856945037842

Token 46: '12' (ID: 899)
  Prédit: 'Bonjour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bonjour' → logprob: -0.17754176259040833
    2. 'bonjour' → logprob: -3.177541732788086
    3. 'Je' → logprob: -3.677541732788086
    4. 'je' → logprob: -3.677541732788086
    5. 'une' → logprob: -3.927541732788086
    6. 'un' → logprob: -3.927541732788086
    7. 'Python' → logprob: -4.927541732788086
    8. 'Hello' → logprob: -4.927541732788086
    9. 'le' → logprob: -5.552541732788086
    10. '"' → logprob: -5.677541732788086

Token 47: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05794578045606613
    2. '34' → logprob: -3.182945728302002
    3. ':' → logprob: -5.182945728302002
    4. ' ")' → logprob: -5.682945728302002
    5. ' ' → logprob: -6.432945728302002
    6. '345' → logprob: -6.432945728302002
    7. ' "' → logprob: -7.432945728302002
    8. '0' → logprob: -8.43294620513916
    9. 'h' → logprob: -8.43294620513916
    10. ' trois' → logprob: -8.55794620513916

Token 48: '100' (ID: 1353)
  Prédit: '34'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '34' → logprob: -0.49792250990867615
    2. '3' → logprob: -0.9979225397109985
    3. '23' → logprob: -5.747922420501709
    4. ' ' → logprob: -5.872922420501709
    5. 'a' → logprob: -6.122922420501709
    6. '+' → logprob: -6.122922420501709
    7. '1' → logprob: -6.247922420501709
    8. '345' → logprob: -6.372922420501709
    9. '35' → logprob: -6.872922420501709
    10. ':' → logprob: -7.122922420501709

Token 49: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.145007848739624
    2. ' "' → logprob: -2.020007848739624
    3. ' ")' → logprob: -2.020007848739624
    4. '"' → logprob: -2.270007848739624
    5. '0' → logprob: -2.270007848739624
    6. '3' → logprob: -3.020007848739624
    7. '34' → logprob: -4.145008087158203
    8. '")' → logprob: -4.270008087158203
    9. ' "),' → logprob: -4.645008087158203
    10. '23' → logprob: -4.770008087158203

Token 50: '",' (ID: 672)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1254957914352417
    2. ' "' → logprob: -1.5004957914352417
    3. ' ")' → logprob: -1.6254957914352417
    4. ' "),' → logprob: -3.0004959106445312
    5. '0' → logprob: -3.3754959106445312
    6. '"' → logprob: -3.3754959106445312
    7. ' ",' → logprob: -4.125495910644531
    8. '100' → logprob: -4.750495910644531
    9. '12' → logprob: -4.875495910644531
    10. ',' → logprob: -4.937995910644531

Token 51: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16050072014331818
    2. ' input' → logprob: -4.160500526428223
    3. 'la' → logprob: -4.285500526428223
    4. ' line' → logprob: -4.285500526428223
    5. ' le' → logprob: -4.410500526428223
    6. ' on' → logprob: -4.410500526428223
    7. 's' → logprob: -4.910500526428223
    8. ' text' → logprob: -5.035500526428223
    9. 'text' → logprob: -5.160500526428223
    10. ' l' → logprob: -5.285500526428223

Token 52: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4082002639770508
    2. ' ligne' → logprob: -1.6582002639770508
    3. 'ligne' → logprob: -1.7832002639770508
    4. 'liste' → logprob: -2.283200263977051
    5. 'chaine' → logprob: -3.033200263977051
    6. 'texte' → logprob: -3.158200263977051
    7. 'input' → logprob: -4.033200263977051
    8. 'ent' → logprob: -4.158200263977051
    9. ' liste' → logprob: -4.158200263977051
    10. 'result' → logprob: -4.283200263977051

Token 53: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3481597900390625
    2. ' text' → logprob: -2.3481597900390625
    3. ' input' → logprob: -2.3481597900390625
    4. ' texte' → logprob: -2.3481597900390625
    5. 'texte' → logprob: -2.4731597900390625
    6. ' ligne' → logprob: -2.5981597900390625
    7. ' line' → logprob: -3.0981597900390625
    8. 'text' → logprob: -3.0981597900390625
    9. ' s' → logprob: -3.2231597900390625
    10. 'input' → logprob: -3.8481597900390625

Token 54: ' cont' (ID: 836)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.7547602653503418
    2. '_string' → logprob: -1.5047602653503418
    3. '_' → logprob: -1.7547602653503418
    4. '_line' → logprob: -2.379760265350342
    5. '_text' → logprob: -4.754760265350342
    6. '()' → logprob: -4.754760265350342
    7. '().' → logprob: -5.254760265350342
    8. '_l' → logprob: -5.379760265350342
    9. 's' → logprob: -5.879760265350342
    10. '_strings' → logprob: -5.879760265350342

Token 55: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -1.0128892660140991
    2. 'inue' → logprob: -1.2628892660140991
    3. ' =' → logprob: -2.1378893852233887
    4. 'i' → logprob: -2.6378893852233887
    5. 'e' → logprob: -3.0128893852233887
    6. 'inu' → logprob: -3.2628893852233887
    7. 'ent' → logprob: -3.3878893852233887
    8. 'enu' → logprob: -3.6378893852233887
    9. 'enue' → logprob: -5.637889385223389
    10. '=' → logprob: -5.762889385223389

Token 56: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11639304459095001
    2. 'nu' → logprob: -2.4913930892944336
    3. 'ent' → logprob: -4.991393089294434
    4. 'endra' → logprob: -5.116393089294434
    5. 'er' → logprob: -5.491393089294434
    6. 'nera' → logprob: -6.241393089294434
    7. 'nent' → logprob: -6.491393089294434
    8. 'ned' → logprob: -6.616393089294434
    9. 'ne' → logprob: -6.991393089294434
    10. 'nt' → logprob: -7.116393089294434

Token 57: ' ["' (ID: 9129)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.4336709678173065
    2. '['' → logprob: -1.808670997619629
    3. ' ["' → logprob: -2.433670997619629
    4. '["' → logprob: -3.558670997619629
    5. '[' → logprob: -4.058670997619629
    6. ' =' → logprob: -4.433670997619629
    7. ' ' → logprob: -4.683670997619629
    8. '"' → logprob: -4.683670997619629
    9. ' [' → logprob: -5.058670997619629
    10. ' "' → logprob: -5.183670997619629

Token 58: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0007101670489646494
    2. ''' → logprob: -7.7507100105285645
    3. '"' → logprob: -8.250710487365723
    4. '1' → logprob: -11.125710487365723
    5. '123' → logprob: -13.375710487365723
    6. ' ' → logprob: -14.000710487365723
    7. '2' → logprob: -16.125709533691406
    8. '['' → logprob: -16.625709533691406
    9. '```' → logprob: -16.688209533691406
    10. ' '' → logprob: -16.750709533691406

Token 59: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2807997763156891
    2. ' ",' → logprob: -1.9057997465133667
    3. '100' → logprob: -3.2807998657226562
    4. '","' → logprob: -3.4057998657226562
    5. ' ","' → logprob: -4.405799865722656
    6. ' ' → logprob: -4.530799865722656
    7. '"' → logprob: -7.030799865722656
    8. '1' → logprob: -7.155799865722656
    9. ',' → logprob: -7.905799865722656
    10. ' ' → logprob: -9.780799865722656

Token 60: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.028578326106071472
    2. ' "' → logprob: -3.653578281402588
    3. '100' → logprob: -6.403578281402588
    4. ' ' → logprob: -8.153578758239746
    5. ''' → logprob: -8.528578758239746
    6. ' ' → logprob: -9.403578758239746
    7. '"user' → logprob: -10.903578758239746
    8. ' '' → logprob: -11.778578758239746
    9. 'space' → logprob: -12.403578758239746
    10. '1' → logprob: -12.778578758239746

Token 61: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00016396844875998795
    2. '1' → logprob: -9.250164031982422
    3. ' ' → logprob: -10.625164031982422
    4. '10' → logprob: -10.875164031982422
    5. '"]' → logprob: -11.500164031982422
    6. ' "]' → logprob: -12.250164031982422
    7. '"' → logprob: -12.375164031982422
    8. ' "' → logprob: -13.375164031982422
    9. '",' → logprob: -15.000164031982422
    10. ' ",' → logprob: -15.187664031982422

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017476243898272514
    2. ' "]' → logprob: -4.1424760818481445
    3. '"]' → logprob: -7.1424760818481445
    4. ' "' → logprob: -8.392476081848145
    5. ' ' → logprob: -8.642476081848145
    6. ' ]' → logprob: -8.892476081848145
    7. ' ' → logprob: -10.517476081848145
    8. '  ' → logprob: -10.642476081848145
    9. '00' → logprob: -10.767476081848145
    10. '"' → logprob: -11.642476081848145

Token 63: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.00041744497139006853
    2. ']' → logprob: -8.250417709350586
    3. '"' → logprob: -9.375417709350586
    4. ' "]' → logprob: -10.125417709350586
    5. '"].' → logprob: -11.250417709350586
    6. '']' → logprob: -11.750417709350586
    7. '"]

' → logprob: -12.875417709350586
    8. '",' → logprob: -13.500417709350586
    9. '"]
' → logprob: -13.625417709350586
    10. '   ' → logprob: -13.750417709350586

Token 64: '.
' (ID: 558)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5074837803840637
    2. 'i' → logprob: -1.257483720779419
    3. 'u' → logprob: -3.382483720779419
    4. 'user' → logprob: -3.632483720779419
    5. 'in' → logprob: -4.132483959197998
    6. 's' → logprob: -5.007483959197998
    7. 'inp' → logprob: -5.132483959197998
    8. 'l' → logprob: -5.132483959197998
    9. 'n' → logprob: -5.382483959197998
    10. '```' → logprob: -6.257483959197998

Token 65: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0837101861834526
    2. 'user' → logprob: -2.833710193634033
    3. 'i' → logprob: -5.083710193634033
    4. 'u' → logprob: -5.083710193634033
    5. 'inp' → logprob: -6.583710193634033
    6. 'in' → logprob: -6.708710193634033
    7. '```' → logprob: -6.708710193634033
    8. 'l' → logprob: -6.833710193634033
    9. 's' → logprob: -6.958710193634033
    10. 'n' → logprob: -7.458710193634033

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11159646511077881
    2. '=' → logprob: -3.1115965843200684
    3. '.' → logprob: -3.4865965843200684
    4. '_' → logprob: -3.9865965843200684
    5. 's' → logprob: -5.736596584320068
    6. '[' → logprob: -6.111596584320068
    7. '.split' → logprob: -6.236596584320068
    8. '()' → logprob: -6.986596584320068
    9. '(' → logprob: -7.111596584320068
    10. ' ' → logprob: -7.611596584320068

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326520442962646
    2. ' input' → logprob: -1.3132652044296265
    3. '(input' → logprob: -13.688264846801758
    4. '=input' → logprob: -13.813264846801758
    5. '	input' → logprob: -14.688264846801758
    6. '[input' → logprob: -15.438264846801758
    7. ' ' → logprob: -15.813264846801758
    8. ' ' → logprob: -16.063264846801758
    9. '<input' → logprob: -16.063264846801758
    10. '```' → logprob: -16.313264846801758

Token 68: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4986659288406372
    2. '().' → logprob: -1.1236659288406372
    3. '()' → logprob: -3.1236658096313477
    4. '('' → logprob: -4.248665809631348
    5. '("' → logprob: -5.623665809631348
    6. '.split' → logprob: -5.748665809631348
    7. '(".' → logprob: -6.623665809631348
    8. '('.')' → logprob: -7.873665809631348
    9. '.' → logprob: -8.373665809631348
    10. '("("' → logprob: -8.748665809631348

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006715967319905758
    2. 'strip' → logprob: -5.006715774536133
    3. ' split' → logprob: -14.756715774536133
    4. 'rstrip' → logprob: -15.631715774536133
    5. 'spl' → logprob: -16.506715774536133
    6. '(split' → logprob: -18.631715774536133
    7. 's' → logprob: -19.006715774536133
    8. ' strip' → logprob: -20.506715774536133
    9. 'plit' → logprob: -21.256715774536133
    10. 'rs' → logprob: -21.381715774536133

Token 70: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5379786491394043
    2. '(' → logprob: -1.0379786491394043
    3. '()' → logprob: -2.9129786491394043
    4. '("("' → logprob: -5.037978649139404
    5. '("' → logprob: -6.912978649139404
    6. ''' → logprob: -10.662979125976562
    7. '('.')' → logprob: -11.412979125976562
    8. ' (' → logprob: -11.537979125976562
    9. '(',' → logprob: -11.537979125976562
    10. '(None' → logprob: -11.912979125976562

Token 71: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6887879371643066
    2. '#' → logprob: -0.9387879371643066
    3. '.' → logprob: -3.6887879371643066
    4. 'print' → logprob: -3.8137879371643066
    5. ' ' → logprob: -4.313787937164307
    6. '```' → logprob: -4.813787937164307
    7. '<|end|>' → logprob: -4.813787937164307
    8. '
' → logprob: -5.188787937164307
    9. ')' → logprob: -5.813787937164307
    10. 'if' → logprob: -6.313787937164307

Token 72: ' Ici' (ID: 145754)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.202605962753296
    2. '#' → logprob: -1.952605962753296
    3. 'n' → logprob: -2.202605962753296
    4. 'if' → logprob: -2.452605962753296
    5. 'for' → logprob: -2.577605962753296
    6. 'number' → logprob: -2.702605962753296
    7. 'num' → logprob: -3.577605962753296
    8. 'first' → logprob: -3.827605962753296
    9. 'nombre' → logprob: -3.827605962753296
    10. 'a' → logprob: -3.952605962753296

Token 73: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26990336179733276
    2. 'print' → logprob: -2.2699034214019775
    3. '#' → logprob: -3.2699034214019775
    4. 'n' → logprob: -4.019903182983398
    5. 'nombre' → logprob: -4.394903182983398
    6. 'number' → logprob: -4.519903182983398
    7. 'if' → logprob: -4.894903182983398
    8. 'total' → logprob: -4.894903182983398
    9. ' for' → logprob: -5.019903182983398
    10. 'result' → logprob: -5.394903182983398

Token 74: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0376543998718262
    2. '#' → logprob: -1.7876543998718262
    3. 'n' → logprob: -2.162654399871826
    4. 'nombre' → logprob: -2.162654399871826
    5. 'print' → logprob: -2.662654399871826
    6. 'if' → logprob: -3.662654399871826
    7. 'total' → logprob: -3.662654399871826
    8. 'num' → logprob: -4.162654399871826
    9. 'val' → logprob: -4.162654399871826
    10. 'result' → logprob: -4.412654399871826

Token 75: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13967062532901764
    2. 'print' → logprob: -3.0146706104278564
    3. 'len' → logprob: -3.5146706104278564
    4. 'if' → logprob: -3.8896706104278564
    5. 'for' → logprob: -4.8896708488464355
    6. 'int' → logprob: -5.5146708488464355
    7. 'user' → logprob: -6.6396708488464355
    8. 'nombre' → logprob: -6.6396708488464355
    9. ' input' → logprob: -6.7646708488464355
    10. 'a' → logprob: -6.7646708488464355

Token 76: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010824140161275864
    2. '_' → logprob: -5.260824203491211
    3. '```' → logprob: -7.135824203491211
    4. ''' → logprob: -7.635824203491211
    5. '_tokens' → logprob: -7.760824203491211
    6. ')' → logprob: -7.760824203491211
    7. '_input' → logprob: -8.385824203491211
    8. '_parts' → logprob: -8.510824203491211
    9. '['' → logprob: -8.760824203491211
    10. 's' → logprob: -9.010824203491211

Token 77: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015489027136936784
    2. ' ' → logprob: -7.751548767089844
    3. 's' → logprob: -8.376548767089844
    4. '[:]' → logprob: -8.501548767089844
    5. '_' → logprob: -9.001548767089844
    6. '<|end|>' → logprob: -9.501548767089844
    7. '.' → logprob: -9.751548767089844
    8. '[]' → logprob: -9.876548767089844
    9. ')' → logprob: -10.251548767089844
    10. 'est' → logprob: -10.376548767089844

Token 78: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3611595332622528
    2. 'une' → logprob: -1.2361595630645752
    3. ' un' → logprob: -5.611159324645996
    4. 'un' → logprob: -6.111159324645996
    5. 'input' → logprob: -6.361159324645996
    6. 'la' → logprob: -6.986159324645996
    7. '['' → logprob: -6.986159324645996
    8. ' la' → logprob: -7.361159324645996
    9. ' input' → logprob: -7.486159324645996
    10. ''une' → logprob: -7.736159324645996

Token 79: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7331319451332092
    2. 'liste' → logprob: -0.8581319451332092
    3. 'list' → logprob: -2.4831318855285645
    4. 'variable' → logprob: -4.9831318855285645
    5. ' variable' → logprob: -5.7331318855285645
    6. ' list' → logprob: -7.4831318855285645
    7. 'nom' → logprob: -8.108132362365723
    8. '```' → logprob: -8.233132362365723
    9. 'l' → logprob: -8.358132362365723
    10. 's' → logprob: -8.358132362365723

Token 80: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44744592905044556
    2. '[' → logprob: -1.1974458694458008
    3. ',' → logprob: -3.322445869445801
    4. 's' → logprob: -4.822445869445801
    5. '<|end|>' → logprob: -5.322445869445801
    6. '_' → logprob: -5.572445869445801
    7. '```' → logprob: -6.947445869445801
    8. '[:]' → logprob: -7.197445869445801
    9. '[]' → logprob: -7.447445869445801
    10. ')' → logprob: -7.572445869445801

Token 81: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.4342176020145416
    2. 'str' → logprob: -1.9342175722122192
    3. 'cha' → logprob: -2.434217691421509
    4. 'strings' → logprob: -2.434217691421509
    5. 'chain' → logprob: -3.559217691421509
    6. 'string' → logprob: -6.55921745300293
    7. 'chaine' → logprob: -7.30921745300293
    8. '```' → logprob: -7.55921745300293
    9. 's' → logprob: -7.80921745300293
    10. 'chains' → logprob: -8.93421745300293

Token 82: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25995007157325745
    2. '[' → logprob: -1.634950041770935
    3. 's' → logprob: -3.7599501609802246
    4. ',' → logprob: -4.759950160980225
    5. '<|end|>' → logprob: -7.884950160980225
    6. '_' → logprob: -8.509949684143066
    7. '\[' → logprob: -8.759949684143066
    8. ']' → logprob: -8.884949684143066
    9. '```' → logprob: -8.884949684143066
    10. 'es' → logprob: -9.009949684143066

Token 83: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18020516633987427
    2. ' caractères' → logprob: -1.8052051067352295
    3. ' caractère' → logprob: -9.055205345153809
    4. 'texte' → logprob: -9.430205345153809
    5. ' caract' → logprob: -9.430205345153809
    6. '```' → logprob: -10.180205345153809
    7. ' car' → logprob: -10.555205345153809
    8. ' caracteres' → logprob: -10.805205345153809
    9. 'c' → logprob: -10.930205345153809
    10. 'liste' → logprob: -11.430205345153809

Token 84: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16157831251621246
    2. '#' → logprob: -2.911578416824341
    3. ',' → logprob: -3.161578416824341
    4. '[' → logprob: -3.161578416824341
    5. '```' → logprob: -5.911578178405762
    6. '<|end|>' → logprob: -6.161578178405762
    7. 's' → logprob: -6.661578178405762
    8. ':' → logprob: -7.286578178405762
    9. '\' → logprob: -7.661578178405762
    10. '[
' → logprob: -8.036578178405762

Token 85: ' chaque' (ID: 21194)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.0310832262039185
    2. ' vous' → logprob: -1.9060832262039185
    3. ' chaque' → logprob: -2.531083106994629
    4. 'et' → logprob: -2.531083106994629
    5. ' donc' → logprob: -2.531083106994629
    6. 'vous' → logprob: -2.781083106994629
    7. ' mais' → logprob: -3.156083106994629
    8. ' il' → logprob: -3.656083106994629
    9. ' que' → logprob: -4.031083106994629
    10. ' tu' → logprob: -4.156083106994629

Token 86: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07026918232440948
    2. ' élément' → logprob: -2.6952691078186035
    3. ' ' → logprob: -9.695269584655762
    4. ' mot' → logprob: -9.820269584655762
    5. ' éléments' → logprob: -10.195269584655762
    6. ' element' → logprob: -10.445269584655762
    7. 'element' → logprob: -10.445269584655762
    8. ' chaîne' → logprob: -10.570269584655762
    9. 'mot' → logprob: -10.695269584655762
    10. 'él' → logprob: -11.070269584655762

Token 87: ' représentant' (ID: 136122)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.588341236114502
    2. '<|end|>' → logprob: -0.963341236114502
    3. ' est' → logprob: -4.588341236114502
    4. ' représente' → logprob: -5.088341236114502
    5. ' représentant' → logprob: -5.213341236114502
    6. ' étant' → logprob: -5.338341236114502
    7. ' corresponds' → logprob: -5.463341236114502
    8. ' correspond' → logprob: -5.463341236114502
    9. '  ' → logprob: -5.463341236114502
    10. '<|end|>' → logprob: -5.713341236114502

Token 88: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09662938117980957
    2. ' une' → logprob: -2.7216293811798096
    3. 'un' → logprob: -3.9716293811798096
    4. 'une' → logprob: -5.0966291427612305
    5. ''un' → logprob: -7.5966291427612305
    6. '<|end|>' → logprob: -8.72162914276123
    7. ' le' → logprob: -8.97162914276123
    8. 's' → logprob: -8.97162914276123
    9. 'a' → logprob: -9.22162914276123
    10. 'le' → logprob: -9.72162914276123

Token 89: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.9363251328468323
    2. 'mot' → logprob: -1.0613250732421875
    3. 'nombre' → logprob: -1.4363250732421875
    4. 'm' → logprob: -4.6863250732421875
    5. ' nombre' → logprob: -5.4363250732421875
    6. 's' → logprob: -6.1863250732421875
    7. ' mot' → logprob: -6.4363250732421875
    8. 'part' → logprob: -6.6863250732421875
    9. '```' → logprob: -7.4363250732421875
    10. ' élément' → logprob: -7.4363250732421875

Token 90: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3823605477809906
    2. '.' → logprob: -1.257360577583313
    3. 'convert' → logprob: -5.007360458374023
    4. ',' → logprob: -5.257360458374023
    5. 'ent' → logprob: -5.882360458374023
    6. ' .' → logprob: -6.007360458374023
    7. ')' → logprob: -6.007360458374023
    8. 'entrée' → logprob: -6.132360458374023
    9. ' convert' → logprob: -6.757360458374023
    10. ' entier' → logprob: -6.757360458374023

Token 91: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.09432314336299896
    2. 'forme' → logprob: -2.84432315826416
    3. 'chaine' → logprob: -3.96932315826416
    4. 'form' → logprob: -4.59432315826416
    5. 'la' → logprob: -7.59432315826416
    6. ' form' → logprob: -7.84432315826416
    7. 'cha' → logprob: -7.84432315826416
    8. 'string' → logprob: -8.34432315826416
    9. 'forma' → logprob: -8.34432315826416
    10. ' la' → logprob: -8.34432315826416

Token 92: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1588841825723648
    2. ' de' → logprob: -2.658884286880493
    3. 'd' → logprob: -3.283884286880493
    4. 's' → logprob: -3.533884286880493
    5. 'de' → logprob: -4.908884048461914
    6. ' ' → logprob: -8.158884048461914
    7. 'a' → logprob: -8.533884048461914
    8. 'space' → logprob: -8.658884048461914
    9. 'string' → logprob: -8.908884048461914
    10. '<|end|>' → logprob: -8.908884048461914

Token 93: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6283243298530579
    2. 'texte' → logprob: -1.378324270248413
    3. 'chaine' → logprob: -2.003324270248413
    4. 'cha' → logprob: -2.878324270248413
    5. ' texte' → logprob: -4.253324508666992
    6. ' chaine' → logprob: -5.003324508666992
    7. 'string' → logprob: -7.128324508666992
    8. ' une' → logprob: -7.878324508666992
    9. ' string' → logprob: -7.878324508666992
    10. ' chaînes' → logprob: -8.378324508666992

Token 94: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.513857364654541
    2. 's' → logprob: -1.263857364654541
    3. '[' → logprob: -2.888857364654541
    4. '#' → logprob: -3.388857364654541
    5. ',' → logprob: -4.388857364654541
    6. '<|end|>' → logprob: -4.888857364654541
    7. '```' → logprob: -6.388857364654541
    8. ']' → logprob: -6.638857364654541
    9. '[
' → logprob: -6.638857364654541
    10. '_' → logprob: -7.638857364654541

Token 95: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12845739722251892
    2. '[' → logprob: -2.6284573078155518
    3. '.' → logprob: -3.8784573078155518
    4. 'n' → logprob: -4.628457546234131
    5. ',' → logprob: -5.628457546234131
    6. 's' → logprob: -5.878457546234131
    7. 'for' → logprob: -5.878457546234131
    8. 'i' → logprob: -6.503457546234131
    9. ' ' → logprob: -6.628457546234131
    10. '`' → logprob: -7.128457546234131

Token 96: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5890341401100159
    2. 'numbers' → logprob: -1.214034080505371
    3. 'for' → logprob: -3.339034080505371
    4. 'n' → logprob: -3.339034080505371
    5. ' numbers' → logprob: -3.839034080505371
    6. 'result' → logprob: -4.214034080505371
    7. 'print' → logprob: -4.714034080505371
    8. 'num' → logprob: -5.089034080505371
    9. 'total' → logprob: -5.714034080505371
    10. ' #' → logprob: -5.839034080505371

Token 97: ' parc' (ID: 22138)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.8122277855873108
    2. ' essa' → logprob: -1.437227725982666
    3. ' veut' → logprob: -2.437227725982666
    4. ' convert' → logprob: -2.937227725982666
    5. ' transforme' → logprob: -2.937227725982666
    6. ' peut' → logprob: -4.062227725982666
    7. ' souhaite' → logprob: -4.062227725982666
    8. 'convert' → logprob: -4.187227725982666
    9. ' essay' → logprob: -4.437227725982666
    10. 's' → logprob: -4.812227725982666

Token 98: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0024987291544675827
    2. 'ours' → logprob: -6.377498626708984
    3. 'oure' → logprob: -8.002498626708984
    4. 'court' → logprob: -8.252498626708984
    5. '_' → logprob: -9.752498626708984
    6. '
' → logprob: -10.252498626708984
    7. 'our' → logprob: -10.377498626708984
    8. 'c' → logprob: -10.877498626708984
    9. '```' → logprob: -11.502498626708984
    10. '#' → logprob: -11.752498626708984

Token 99: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11073010414838791
    2. ' chaque' → logprob: -2.4857301712036133
    3. ' ' → logprob: -4.485730171203613
    4. ' les' → logprob: -5.610730171203613
    5. ' input' → logprob: -6.485730171203613
    6. ' each' → logprob: -6.735730171203613
    7. ' cette' → logprob: -7.110730171203613
    8. 'la' → logprob: -7.610730171203613
    9. ' une' → logprob: -7.735730171203613
    10. ' for' → logprob: -7.860730171203613

Token 100: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.48101094365119934
    2. ' élément' → logprob: -0.981010913848877
    3. ' ' → logprob: -5.356010913848877
    4. ' nombre' → logprob: -7.231010913848877
    5. ' element' → logprob: -7.231010913848877
    6. ' mot' → logprob: -8.356011390686035
    7. 'element' → logprob: -8.856011390686035
    8. 'é' → logprob: -9.606011390686035
    9. ' éléments' → logprob: -9.731011390686035
    10. 'nombre' → logprob: -10.356011390686035

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13158467411994934
    2. ' for' → logprob: -3.631584644317627
    3. 'for' → logprob: -3.756584644317627
    4. ' input' → logprob: -3.756584644317627
    5. 'de' → logprob: -3.881584644317627
    6. ' ' → logprob: -4.006584644317627
    7. ' in' → logprob: -6.131584644317627
    8. ' dans' → logprob: -6.381584644317627
    9. ' pour' → logprob: -6.631584644317627
    10. 'input' → logprob: -6.881584644317627

Token 102: ' cette' (ID: 7696)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5234391689300537
    2. ' input' → logprob: -0.8984391689300537
    3. ' la' → logprob: -8.898439407348633
    4. 'l' → logprob: -9.898439407348633
    5. '`' → logprob: -10.523439407348633
    6. 'la' → logprob: -10.648439407348633
    7. ' l' → logprob: -11.273439407348633
    8. ' ' → logprob: -11.398439407348633
    9. '```' → logprob: -11.398439407348633
    10. '	input' → logprob: -11.898439407348633

Token 103: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.055338628590106964
    2. 'liste' → logprob: -3.5553386211395264
    3. ' input' → logprob: -3.9303386211395264
    4. 'input' → logprob: -5.8053388595581055
    5. ' list' → logprob: -6.6803388595581055
    6. 'list' → logprob: -6.8053388595581055
    7. ' lista' → logprob: -9.930338859558105
    8. ' ' → logprob: -10.430338859558105
    9. 'lista' → logprob: -10.805338859558105
    10. '#' → logprob: -10.930338859558105

Token 104: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013000803999602795
    2. ' for' → logprob: -4.513000965118408
    3. 'pour' → logprob: -6.513000965118408
    4. ':' → logprob: -8.01300048828125
    5. ',' → logprob: -9.38800048828125
    6. ' pour' → logprob: -10.63800048828125
    7. '.' → logprob: -12.26300048828125
    8. 's' → logprob: -12.63800048828125
    9. '```' → logprob: -12.63800048828125
    10. 'en' → logprob: -12.63800048828125

Token 105: ' utilisant' (ID: 92474)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6793146729469299
    2. ' range' → logprob: -1.6793146133422852
    3. ' utilisant' → logprob: -1.9293146133422852
    4. ' for' → logprob: -2.804314613342285
    5. 'input' → logprob: -3.429314613342285
    6. 'for' → logprob: -3.429314613342285
    7. 'range' → logprob: -3.679314613342285
    8. 'util' → logprob: -6.554314613342285
    9. ' using' → logprob: -7.304314613342285
    10. ' une' → logprob: -7.429314613342285

Token 106: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6414756178855896
    2. 'une' → logprob: -0.8914756178855896
    3. ' un' → logprob: -3.2664756774902344
    4. 'for' → logprob: -4.516475677490234
    5. ' for' → logprob: -4.891475677490234
    6. 'un' → logprob: -6.016475677490234
    7. ' a' → logprob: -6.891475677490234
    8. ' la' → logprob: -7.141475677490234
    9. ''une' → logprob: -7.141475677490234
    10. 'a' → logprob: -7.266475677490234

Token 107: ' compréhension' (ID: 142333)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15356238186359406
    2. ' for' → logprob: -2.278562307357788
    3. 'bou' → logprob: -3.653562307357788
    4. ' boucle' → logprob: -4.278562545776367
    5. ' bou' → logprob: -9.403562545776367
    6. 'pour' → logprob: -11.153562545776367
    7. 'b' → logprob: -11.653562545776367
    8. 'liste' → logprob: -11.778562545776367
    9. ' ' → logprob: -11.903562545776367
    10. '```' → logprob: -12.278562545776367

Token 108: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4366579055786133
    2. '[input' → logprob: -1.1866579055786133
    3. '[
' → logprob: -4.186657905578613
    4. '[int' → logprob: -4.811657905578613
    5. '[i' → logprob: -5.061657905578613
    6. '[num' → logprob: -5.311657905578613
    7. 'input' → logprob: -5.936657905578613
    8. '[n' → logprob: -6.061657905578613
    9. '[]' → logprob: -6.436657905578613
    10. '[number' → logprob: -6.936657905578613

Token 109: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.058086056262254715
    2. 'list' → logprob: -3.1830861568450928
    3. ' liste' → logprob: -4.433085918426514
    4. 'la' → logprob: -5.933085918426514
    5. '[' → logprob: -8.933086395263672
    6. 'l' → logprob: -9.683086395263672
    7. '```' → logprob: -10.183086395263672
    8. 'int' → logprob: -10.558086395263672
    9. 'ligne' → logprob: -10.808086395263672
    10. ' la' → logprob: -10.808086395263672

Token 110: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0428279638290405
    2. '[' → logprob: -1.6678279638290405
    3. 'numbers' → logprob: -1.6678279638290405
    4. ',' → logprob: -2.41782808303833
    5. 'nombre' → logprob: -2.66782808303833
    6. 'pour' → logprob: -3.91782808303833
    7. 'n' → logprob: -4.16782808303833
    8. '[n' → logprob: -4.41782808303833
    9. '[
' → logprob: -4.79282808303833
    10. '[int' → logprob: -5.04282808303833

Token 111: ' le' (ID: 505)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.18975010514259338
    2. ' le' → logprob: -2.8147501945495605
    3. ' les' → logprob: -3.0647501945495605
    4. 'le' → logprob: -3.4397501945495605
    5. 'convert' → logprob: -4.0647501945495605
    6. 'les' → logprob: -4.6897501945495605
    7. 'con' → logprob: -5.9397501945495605
    8. ' convert' → logprob: -6.1897501945495605
    9. 'transform' → logprob: -6.5647501945495605
    10. ' transformer' → logprob: -6.6897501945495605

Token 112: ' convertir' (ID: 79223)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.6162051558494568
    2. ' convertir' → logprob: -0.8662051558494568
    3. 'transform' → logprob: -3.6162052154541016
    4. 'con' → logprob: -4.866205215454102
    5. ' transformer' → logprob: -5.991205215454102
    6. ' convert' → logprob: -6.366205215454102
    7. 'converter' → logprob: -8.866205215454102
    8. 'int' → logprob: -9.241205215454102
    9. 'tr' → logprob: -9.866205215454102
    10. 'trans' → logprob: -10.116205215454102

Token 113: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.498972088098526
    2. 'en' → logprob: -0.9989720582962036
    3. 'int' → logprob: -3.873972177505493
    4. '[int' → logprob: -5.748971939086914
    5. ' into' → logprob: -9.123971939086914
    6. ' in' → logprob: -9.123971939086914
    7. ' int' → logprob: -9.248971939086914
    8. '[' → logprob: -9.373971939086914
    9. 'in' → logprob: -9.498971939086914
    10. '[i' → logprob: -10.123971939086914

Token 114: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3170817792415619
    2. ' int' → logprob: -1.8170818090438843
    3. 'ent' → logprob: -2.3170816898345947
    4. ' entier' → logprob: -5.442081928253174
    5. ' ent' → logprob: -5.942081928253174
    6. ' integers' → logprob: -6.317081928253174
    7. ' des' → logprob: -6.692081928253174
    8. ' nombres' → logprob: -9.067081451416016
    9. 'inte' → logprob: -9.192081451416016
    10. 'ints' → logprob: -9.442081451416016

Token 115: '.
' (ID: 558)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7233678102493286
    2. 'numbers' → logprob: -1.3483678102493286
    3. '[' → logprob: -2.473367691040039
    4. 'result' → logprob: -2.598367691040039
    5. '.' → logprob: -4.098367691040039
    6. ' input' → logprob: -4.473367691040039
    7. '[
' → logprob: -4.723367691040039
    8. ' numbers' → logprob: -4.973367691040039
    9. ',' → logprob: -5.098367691040039
    10. '[input' → logprob: -5.223367691040039

Token 116: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.04766055941581726
    2. 'result' → logprob: -4.6726603507995605
    3. 'nums' → logprob: -4.6726603507995605
    4. 'ent' → logprob: -4.7976603507995605
    5. ' numbers' → logprob: -5.0476603507995605
    6. 'values' → logprob: -5.1726603507995605
    7. 'output' → logprob: -5.6726603507995605
    8. 'input' → logprob: -7.0476603507995605
    9. 'int' → logprob: -7.1726603507995605
    10. 'ints' → logprob: -7.5476603507995605

Token 117: ' Cela' (ID: 44403)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.04670092836022377
    2. 'result' → logprob: -4.546700954437256
    3. 'nums' → logprob: -4.546700954437256
    4. 'ent' → logprob: -4.671700954437256
    5. 'values' → logprob: -5.046700954437256
    6. ' numbers' → logprob: -5.296700954437256
    7. 'n' → logprob: -7.421700954437256
    8. 'ints' → logprob: -7.421700954437256
    9. 'output' → logprob: -7.546700954437256
    10. 'inte' → logprob: -8.296700477600098

Token 118: ' crée' (ID: 102256)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.76078200340271
    2. 'input' → logprob: -1.76078200340271
    3. 'result' → logprob: -2.13578200340271
    4. ' numbers' → logprob: -2.51078200340271
    5. ' input' → logprob: -2.63578200340271
    6. 'n' → logprob: -4.260782241821289
    7. 's' → logprob: -4.760782241821289
    8. 'nums' → logprob: -4.760782241821289
    9. 'int' → logprob: -5.010782241821289
    10. ' result' → logprob: -5.260782241821289

Token 119: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.007420510519295931
    2. 'une' → logprob: -5.007420539855957
    3. '[' → logprob: -8.257420539855957
    4. ' a' → logprob: -8.632420539855957
    5. ' un' → logprob: -9.007420539855957
    6. 'a' → logprob: -10.132420539855957
    7. ' la' → logprob: -10.757420539855957
    8. 's' → logprob: -11.132420539855957
    9. '[]' → logprob: -11.132420539855957
    10. ' [' → logprob: -11.382420539855957

Token 120: ' nouvelle' (ID: 24562)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.5291508436203003
    2. ' nouvelle' → logprob: -1.0291508436203003
    3. 'liste' → logprob: -3.40415096282959
    4. 'new' → logprob: -4.40415096282959
    5. 'n' → logprob: -5.27915096282959
    6. ' new' → logprob: -6.52915096282959
    7. ' liste' → logprob: -6.90415096282959
    8. 'list' → logprob: -8.77915096282959
    9. ' nouvelles' → logprob: -9.52915096282959
    10. '```' → logprob: -9.65415096282959

Token 121: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5445230603218079
    2. 'liste' → logprob: -0.9195230603218079
    3. 'list' → logprob: -4.419523239135742
    4. '_list' → logprob: -5.919523239135742
    5. ' list' → logprob: -6.544523239135742
    6. '[' → logprob: -6.669523239135742
    7. '_l' → logprob: -7.419523239135742
    8. '_input' → logprob: -7.794523239135742
    9. '[]' → logprob: -7.919523239135742
    10. 's' → logprob: -8.169523239135742

Token 122: ' '' (ID: 461)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.511795163154602
    2. 'ent' → logprob: -2.0117950439453125
    3. 'input' → logprob: -2.6367950439453125
    4. '[' → logprob: -3.2617950439453125
    5. 'nums' → logprob: -3.3867950439453125
    6. '[int' → logprob: -3.7617950439453125
    7. 'inte' → logprob: -3.8867950439453125
    8. ' numbers' → logprob: -4.5117950439453125
    9. 'int' → logprob: -4.6367950439453125
    10. '[input' → logprob: -4.8867950439453125

Token 123: 'list' (ID: 2641)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.09692815691232681
    2. 'input' → logprob: -3.346928119659424
    3. ' numbers' → logprob: -4.096928119659424
    4. 'nums' → logprob: -4.471928119659424
    5. 'values' → logprob: -4.846928119659424
    6. 'ent' → logprob: -5.096928119659424
    7. 'int' → logprob: -5.596928119659424
    8. 'ints' → logprob: -6.346928119659424
    9. 'inputs' → logprob: -6.596928119659424
    10. 'inte' → logprob: -6.721928119659424

Token 124: 'Int' (ID: 2471)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.2256925106048584
    2. '_input' → logprob: -1.4756925106048584
    3. '_' → logprob: -1.7256925106048584
    4. '_numbers' → logprob: -2.2256925106048584
    5. '_ent' → logprob: -2.6006925106048584
    6. '_int' → logprob: -3.1006925106048584
    7. '_n' → logprob: -3.3506925106048584
    8. ' =' → logprob: -4.4756927490234375
    9. '_in' → logprob: -4.8506927490234375
    10. 'ent' → logprob: -5.7256927490234375

Token 125: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09970464557409286
    2. ' =' → logprob: -2.7247047424316406
    3. '']' → logprob: -4.099704742431641
    4. ']' → logprob: -4.974704742431641
    5. ']'' → logprob: -6.724704742431641
    6. 'e' → logprob: -6.974704742431641
    7. '=' → logprob: -6.974704742431641
    8. ' '' → logprob: -7.974704742431641
    9. ')' → logprob: -8.34970474243164
    10. 'eg' → logprob: -8.59970474243164

Token 126: ' contenant' (ID: 131049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13443048298358917
    2. '=' → logprob: -2.259430408477783
    3. 'list' → logprob: -4.509430408477783
    4. '=list' → logprob: -4.884430408477783
    5. '[' → logprob: -6.384430408477783
    6. '[list' → logprob: -7.634430408477783
    7. '=[' → logprob: -7.759430408477783
    8. ' list' → logprob: -9.384430885314941
    9. '[:]' → logprob: -10.509430885314941
    10. '_list' → logprob: -10.634430885314941

Token 127: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.521746039390564
    2. '[int' → logprob: -1.271746039390564
    3. ' des' → logprob: -3.0217461585998535
    4. ' [' → logprob: -3.3967461585998535
    5. '[len' → logprob: -4.3967461585998535
    6. ' les' → logprob: -4.8967461585998535
    7. '[input' → logprob: -5.3967461585998535
    8. '[i' → logprob: -5.6467461585998535
    9. '[num' → logprob: -5.6467461585998535
    10. 'des' → logprob: -6.1467461585998535

Token 128: ' mêmes' (ID: 71634)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.508517861366272
    2. ' ent' → logprob: -1.133517861366272
    3. ' nombres' → logprob: -2.6335177421569824
    4. 'int' → logprob: -6.508517742156982
    5. 'élé' → logprob: -7.133517742156982
    6. ' valeurs' → logprob: -7.383517742156982
    7. ' integers' → logprob: -7.508517742156982
    8. 'n' → logprob: -7.508517742156982
    9. ' éléments' → logprob: -8.38351821899414
    10. 'inte' → logprob: -8.50851821899414

Token 129: ' valeurs' (ID: 73668)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.23489780724048615
    2. ' valeurs' → logprob: -2.2348978519439697
    3. 'ent' → logprob: -3.3598978519439697
    4. ' ent' → logprob: -3.3598978519439697
    5. ' éléments' → logprob: -3.7348978519439697
    6. 'val' → logprob: -5.484897613525391
    7. 'élé' → logprob: -6.109897613525391
    8. ' integers' → logprob: -7.109897613525391
    9. 'nombre' → logprob: -8.23489761352539
    10. 'int' → logprob: -8.35989761352539

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4417064189910889
    2. ' que' → logprob: -1.5667064189910889
    3. ' en' → logprob: -1.5667064189910889
    4. 'ent' → logprob: -2.691706418991089
    5. '[int' → logprob: -2.816706418991089
    6. 'int' → logprob: -2.941706418991089
    7. '[' → logprob: -3.316706418991089
    8. 'en' → logprob: -3.941706418991089
    9. ' integers' → logprob: -4.441706657409668
    10. 'list' → logprob: -4.441706657409668

Token 131: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.03918660059571266
    2. 'mais' → logprob: -3.789186716079712
    3. ' but' → logprob: -4.414186477661133
    4. 'but' → logprob: -6.664186477661133
    5. ' convert' → logprob: -6.789186477661133
    6. ' en' → logprob: -8.164186477661133
    7. 'convert' → logprob: -8.789186477661133
    8. ' list' → logprob: -9.539186477661133
    9. ' par' → logprob: -9.664186477661133
    10. ' ' → logprob: -9.664186477661133

Token 132: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.07865719497203827
    2. ' en' → logprob: -3.0786571502685547
    3. 's' → logprob: -4.078657150268555
    4. ' convert' → logprob: -4.828657150268555
    5. ' de' → logprob: -5.703657150268555
    6. 'convert' → logprob: -8.578657150268555
    7. 'ent' → logprob: -8.578657150268555
    8. 'en' → logprob: -8.578657150268555
    9. ' des' → logprob: -8.828657150268555
    10. ' under' → logprob: -9.078657150268555

Token 133: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.48901641368865967
    2. ' forme' → logprob: -0.9890164136886597
    3. 'form' → logprob: -4.239016532897949
    4. 'la' → logprob: -8.36401653289795
    5. '-form' → logprob: -9.61401653289795
    6. 'format' → logprob: -9.73901653289795
    7. 'forma' → logprob: -10.48901653289795
    8. 'formes' → logprob: -11.73901653289795
    9. 'f' → logprob: -12.98901653289795
    10. ' form' → logprob: -12.98901653289795

Token 134: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.030149046331644058
    2. 'd' → logprob: -3.530148983001709
    3. ' de' → logprob: -8.655149459838867
    4. 'ent' → logprob: -9.030149459838867
    5. 'int' → logprob: -10.155149459838867
    6. 'de' → logprob: -10.405149459838867
    7. 'inte' → logprob: -11.405149459838867
    8. ' ent' → logprob: -12.030149459838867
    9. ' ' → logprob: -12.405149459838867
    10. ' entière' → logprob: -12.405149459838867

Token 135: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.25369662046432495
    2. ' ent' → logprob: -2.0036966800689697
    3. ''ent' → logprob: -3.0036966800689697
    4. 'inte' → logprob: -3.5036966800689697
    5. ' integers' → logprob: -5.253696441650391
    6. 'int' → logprob: -6.878696441650391
    7. ' entier' → logprob: -7.003696441650391
    8. '’ent' → logprob: -7.253696441650391
    9. ' nombres' → logprob: -8.00369644165039
    10. 'n' → logprob: -8.00369644165039

Token 136: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0008679908351041377
    2. 'ières' → logprob: -7.75086784362793
    3. 'ier' → logprob: -8.25086784362793
    4. 'i' → logprob: -9.25086784362793
    5. 'ière' → logprob: -10.00086784362793
    6. '```' → logprob: -11.50086784362793
    7. '#' → logprob: -12.12586784362793
    8. 'ieres' → logprob: -12.37586784362793
    9. 'iere' → logprob: -13.06336784362793
    10. '   ' → logprob: -13.50086784362793

Token 137: '.
' (ID: 558)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0035918753128498793
    2. '[' → logprob: -6.628592014312744
    3. ' list' → logprob: -6.628592014312744
    4. '[list' → logprob: -7.628592014312744
    5. '.' → logprob: -9.003591537475586
    6. ',' → logprob: -9.128591537475586
    7. '=list' → logprob: -9.628591537475586
    8. ':list' → logprob: -10.253591537475586
    9. '=' → logprob: -11.003591537475586
    10. ']' → logprob: -11.128591537475586

Token 138: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.676981345459353e-06
    2. ' list' → logprob: -12.250005722045898
    3. '```' → logprob: -14.250005722045898
    4. '[' → logprob: -16.2500057220459
    5. '#' → logprob: -17.3750057220459
    6. '
' → logprob: -17.6250057220459
    7. 'liste' → logprob: -17.6250057220459
    8. 'lst' → logprob: -17.8750057220459
    9. 'List' → logprob: -18.3750057220459
    10. '[list' → logprob: -18.3750057220459

Token 139: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.816093228830141e-06
    2. 'int' → logprob: -13.62500286102295
    3. 'Ints' → logprob: -13.62500286102295
    4. '_int' → logprob: -16.250001907348633
    5. '_Int' → logprob: -16.375001907348633
    6. 'In' → logprob: -17.125001907348633
    7. 'Inte' → logprob: -17.125001907348633
    8. 'I' → logprob: -17.250001907348633
    9. '	Int' → logprob: -17.375001907348633
    10. ' =' → logprob: -17.625001907348633

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869364559650421
    2. '=' → logprob: -1.1369364261627197
    3. '=[' → logprob: -10.51193618774414
    4. ' =[' → logprob: -11.13693618774414
    5. 's' → logprob: -11.63693618774414
    6. '[' → logprob: -11.76193618774414
    7. '=[]' → logprob: -13.51193618774414
    8. ')' → logprob: -14.01193618774414
    9. '=list' → logprob: -14.13693618774414
    10. '[:]' → logprob: -14.51193618774414

Token 141: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.006301788613200188
    2. ' [' → logprob: -5.2563018798828125
    3. '[' → logprob: -7.5063018798828125
    4. '[list' → logprob: -7.7563018798828125
    5. '[i' → logprob: -10.006301879882812
    6. '[input' → logprob: -10.381301879882812
    7. '[Int' → logprob: -13.006301879882812
    8. '[List' → logprob: -13.131301879882812
    9. '[len' → logprob: -13.131301879882812
    10. '[item' → logprob: -13.381301879882812

Token 142: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '```' → logprob: -18.50002098083496
    4. '	int' → logprob: -19.12502098083496
    5. '(int' → logprob: -19.62502098083496
    6. '   ' → logprob: -20.25002098083496
    7. '[int' → logprob: -20.87502098083496
    8. '<int' → logprob: -21.00002098083496
    9. '  ' → logprob: -21.50002098083496
    10. ' ' → logprob: -21.62502098083496

Token 143: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3222241699695587
    2. '(i' → logprob: -1.3222241401672363
    3. '(' → logprob: -5.697224140167236
    4. '(s' → logprob: -5.947224140167236
    5. '(item' → logprob: -6.447224140167236
    6. '(elem' → logprob: -7.197224140167236
    7. '(element' → logprob: -8.697224617004395
    8. 'x' → logprob: -9.197224617004395
    9. '(token' → logprob: -9.322224617004395
    10. '(e' → logprob: -9.697224617004395

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2762428822461516e-05
    2. ' )' → logprob: -9.875052452087402
    3. '(i' → logprob: -14.500052452087402
    4. ')]' → logprob: -15.375052452087402
    5. ')i' → logprob: -15.375052452087402
    6. 'for' → logprob: -15.750052452087402
    7. '(' → logprob: -17.37505340576172
    8. '.strip' → logprob: -17.50005340576172
    9. '))' → logprob: -17.62505340576172
    10. ' for' → logprob: -17.87505340576172

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519926428794861
    2. 'for' → logprob: -1.5019927024841309
    3. ')' → logprob: -9.751992225646973
    4. ' ' → logprob: -12.501992225646973
    5. ']' → logprob: -14.501992225646973
    6. '	for' → logprob: -14.501992225646973
    7. ' f' → logprob: -15.626992225646973
    8. ' in' → logprob: -16.00199317932129
    9. ' ' → logprob: -16.00199317932129
    10. ' )' → logprob: -16.37699317932129

Token 146: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023246875032782555
    2. 'input' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.398246765136719
    4. '(input' → logprob: -15.398246765136719
    5. '	input' → logprob: -15.523246765136719
    6. ' i' → logprob: -15.523246765136719
    7. '=input' → logprob: -16.64824676513672
    8. '_input' → logprob: -17.02324676513672
    9. ',input' → logprob: -17.39824676513672
    10. ' ' → logprob: -17.39824676513672

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3045845925807953
    2. 'in' → logprob: -1.4295846223831177
    3. 'input' → logprob: -3.929584503173828
    4. ' input' → logprob: -5.804584503173828
    5. ' ' → logprob: -8.429584503173828
    6. 'n' → logprob: -8.554584503173828
    7. ']' → logprob: -10.429584503173828
    8. '=input' → logprob: -10.804584503173828
    9. ' n' → logprob: -12.054584503173828
    10. 'import' → logprob: -12.429584503173828

Token 148: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012509997934103012
    2. ' input' → logprob: -4.387509822845459
    3. '(input' → logprob: -15.887510299682617
    4. ' ' → logprob: -16.762510299682617
    5. '	input' → logprob: -17.012510299682617
    6. '=input' → logprob: -17.387510299682617
    7. '<input' → logprob: -17.512510299682617
    8. '[input' → logprob: -17.637510299682617
    9. 'user' → logprob: -18.262510299682617
    10. 'output' → logprob: -18.387510299682617

Token 149: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032747918157838285
    2. ' ]' → logprob: -8.125327110290527
    3. '()]' → logprob: -10.500327110290527
    4. ')]' → logprob: -12.500327110290527
    5. ']
' → logprob: -17.000328063964844
    6. '`]' → logprob: -17.125328063964844
    7. ' ' → logprob: -17.375328063964844
    8. ']]' → logprob: -17.500328063964844
    9. '[' → logprob: -17.750328063964844
    10. '[]' → logprob: -18.000328063964844

Token 150: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2980438470840454
    2. 'max' → logprob: -1.4230438470840454
    3. '#' → logprob: -2.048043727874756
    4. 'sum' → logprob: -2.048043727874756
    5. 'for' → logprob: -2.673043727874756
    6. 'if' → logprob: -2.673043727874756
    7. 'total' → logprob: -2.798043727874756
    8. 'result' → logprob: -4.298043727874756
    9. 's' → logprob: -4.798043727874756
    10. 'min' → logprob: -6.048043727874756

Token 152: ' structure' (ID: 8866)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2167147397994995
    2. 'sum' → logprob: -1.7167147397994995
    3. ' somme' → logprob: -1.7167147397994995
    4. '#' → logprob: -1.9667147397994995
    5. 's' → logprob: -2.091714859008789
    6. 'max' → logprob: -3.591714859008789
    7. 'total' → logprob: -4.466714859008789
    8. ' sum' → logprob: -4.716714859008789
    9. 'for' → logprob: -5.216714859008789
    10. 'sorted' → logprob: -5.466714859008789

Token 153: ' condition' (ID: 7060)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7962920665740967
    2. ' for' → logprob: -1.4212920665740967
    3. 'for' → logprob: -1.7962920665740967
    4. 'if' → logprob: -2.0462920665740967
    5. ' des' → logprob: -6.046292304992676
    6. ' suivante' → logprob: -6.046292304992676
    7. ' try' → logprob: -6.921292304992676
    8. 's' → logprob: -7.296292304992676
    9. 'try' → logprob: -7.421292304992676
    10. ' d' → logprob: -7.421292304992676

Token 154: 'nelle' (ID: 30805)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002828650176525116
    2. ' if' → logprob: -6.002828598022461
    3. 'ure' → logprob: -8.877828598022461
    4. 'elif' → logprob: -9.627828598022461
    5. '```' → logprob: -10.002828598022461
    6. 'elle' → logprob: -10.502828598022461
    7. 'nelle' → logprob: -10.877828598022461
    8. 'al' → logprob: -11.752828598022461
    9. 'e' → logprob: -11.877828598022461
    10. 'else' → logprob: -12.002828598022461

Token 155: ' suivante' (ID: 107439)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14358408749103546
    2. ' if' → logprob: -2.0185840129852295
    3. ':' → logprob: -7.393584251403809
    4. ' suivante' → logprob: -8.268584251403809
    5. 'for' → logprob: -11.143584251403809
    6. 's' → logprob: -11.893584251403809
    7. '```' → logprob: -12.643584251403809
    8. 'ifs' → logprob: -12.643584251403809
    9. ' for' → logprob: -13.018584251403809
    10. 'est' → logprob: -13.893584251403809

Token 156: ' permet' (ID: 11798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.070328712463379
    2. 'if' → logprob: -1.070328712463379
    3. ' if' → logprob: -1.195328712463379
    4. ' :' → logprob: -4.570328712463379
    5. ' est' → logprob: -8.195328712463379
    6. 'est' → logprob: -8.445328712463379
    7. ' suivante' → logprob: -8.570328712463379
    8. 's' → logprob: -9.195328712463379
    9. ':
' → logprob: -9.445328712463379
    10. ' ' → logprob: -10.195328712463379

Token 157: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6969139575958252
    2. ' de' → logprob: -1.1969139575958252
    3. 'd' → logprob: -1.9469139575958252
    4. 'if' → logprob: -3.321913957595825
    5. ' d' → logprob: -4.196913719177246
    6. '#' → logprob: -5.821913719177246
    7. 's' → logprob: -7.446913719177246
    8. ' if' → logprob: -7.446913719177246
    9. 't' → logprob: -7.696913719177246
    10. 'def' → logprob: -7.946913719177246

Token 158: ' réaliser' (ID: 52384)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2657825946807861
    2. ' vérifier' → logprob: -1.5157825946807861
    3. 'tr' → logprob: -1.6407825946807861
    4. 'if' → logprob: -2.390782594680786
    5. ' déterminer' → logprob: -2.890782594680786
    6. 'print' → logprob: -3.140782594680786
    7. ' tr' → logprob: -3.640782594680786
    8. 'determ' → logprob: -4.140782356262207
    9. 'dé' → logprob: -4.765782356262207
    10. 'g' → logprob: -4.890782356262207

Token 159: ' différents' (ID: 36009)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23580674827098846
    2. 'une' → logprob: -2.860806703567505
    3. ' un' → logprob: -2.985806703567505
    4. ' if' → logprob: -3.735806703567505
    5. ' des' → logprob: -3.860806703567505
    6. 'if' → logprob: -4.610806941986084
    7. ' la' → logprob: -4.735806941986084
    8. ' différentes' → logprob: -4.860806941986084
    9. ' plusieurs' → logprob: -5.110806941986084
    10. 's' → logprob: -5.110806941986084

Token 160: ' traitements' (ID: 158417)
  Prédit: ' traitements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitements' → logprob: -0.12459061294794083
    2. 'trait' → logprob: -2.8745906352996826
    3. 'calcul' → logprob: -3.4995906352996826
    4. 'tests' → logprob: -4.7495903968811035
    5. ' tests' → logprob: -4.7495903968811035
    6. ' calcul' → logprob: -5.8745903968811035
    7. ' traitement' → logprob: -5.9995903968811035
    8. 'traits' → logprob: -6.4995903968811035
    9. 's' → logprob: -6.7495903968811035
    10. '#' → logprob: -6.7495903968811035

Token 161: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36795759201049805
    2. ' if' → logprob: -1.242957592010498
    3. ':' → logprob: -4.492957592010498
    4. 's' → logprob: -5.617957592010498
    5. 'for' → logprob: -6.492957592010498
    6. ',' → logprob: -7.742957592010498
    7. ' si' → logprob: -7.867957592010498
    8. ' en' → logprob: -8.117958068847656
    9. ' for' → logprob: -8.242958068847656
    10. '.' → logprob: -8.367958068847656

Token 162: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.07316895574331284
    2. ' fonction' → logprob: -2.698168992996216
    3. 'fon' → logprob: -6.073168754577637
    4. 'f' → logprob: -7.198168754577637
    5. 'function' → logprob: -9.698168754577637
    6. ' fonctions' → logprob: -10.698168754577637
    7. ' function' → logprob: -10.823168754577637
    8. 'func' → logprob: -11.323168754577637
    9. '```' → logprob: -11.698168754577637
    10. ' ' → logprob: -12.323168754577637

Token 163: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.030918432399630547
    2. 'de' → logprob: -3.9059183597564697
    3. ' des' → logprob: -5.405918598175049
    4. ' du' → logprob: -5.530918598175049
    5. 's' → logprob: -7.905918598175049
    6. 'if' → logprob: -7.905918598175049
    7. 'du' → logprob: -8.15591812133789
    8. ' of' → logprob: -8.28091812133789
    9. ' if' → logprob: -8.90591812133789
    10. 'des' → logprob: -9.28091812133789

Token 164: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3943587839603424
    2. 'la' → logprob: -1.14435875415802
    3. ' la' → logprob: -5.0193586349487305
    4. ' len' → logprob: -7.2693586349487305
    5. 'l' → logprob: -8.89435863494873
    6. 'long' → logprob: -12.14435863494873
    7. '(len' → logprob: -12.51935863494873
    8. 'the' → logprob: -13.39435863494873
    9. 'le' → logprob: -13.89435863494873
    10. 'list' → logprob: -14.01935863494873

Token 165: ' valeur' (ID: 41664)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01101682148873806
    2. ' len' → logprob: -5.011016845703125
    3. 'long' → logprob: -5.761016845703125
    4. 'sum' → logprob: -7.511016845703125
    5. 'list' → logprob: -9.011016845703125
    6. 'length' → logprob: -9.136016845703125
    7. 's' → logprob: -9.636016845703125
    8. 'val' → logprob: -9.636016845703125
    9. 'max' → logprob: -10.261016845703125
    10. 'nombre' → logprob: -10.261016845703125

Token 166: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4948748052120209
    2. 'de' → logprob: -1.3698748350143433
    3. ' des' → logprob: -2.3698747158050537
    4. 'len' → logprob: -4.244874954223633
    5. 'des' → logprob: -4.494874954223633
    6. 's' → logprob: -5.119874954223633
    7. '[len' → logprob: -6.119874954223633
    8. 'max' → logprob: -6.369874954223633
    9. '#' → logprob: -6.369874954223633
    10. 'if' → logprob: -6.494874954223633

Token 167: ' premier' (ID: 15506)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.425613671541214
    2. 'len' → logprob: -1.4256136417388916
    3. 'nombre' → logprob: -3.0506136417388916
    4. 'prem' → logprob: -3.1756136417388916
    5. 'first' → logprob: -5.550613880157471
    6. 'min' → logprob: -5.675613880157471
    7. ' list' → logprob: -6.050613880157471
    8. 'sum' → logprob: -6.550613880157471
    9. ' premier' → logprob: -6.800613880157471
    10. 'max' → logprob: -7.050613880157471

Token 168: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6205201745033264
    2. 'element' → logprob: -1.2455201148986816
    3. ' élément' → logprob: -2.1205201148986816
    4. 'if' → logprob: -3.8705201148986816
    5. 'nombre' → logprob: -4.120520114898682
    6. ' element' → logprob: -4.870520114898682
    7. ' nombre' → logprob: -5.745520114898682
    8. 'list' → logprob: -5.745520114898682
    9. 'elem' → logprob: -6.870520114898682
    10. ' if' → logprob: -7.245520114898682

Token 169: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4122825860977173
    2. ':' → logprob: -1.4122825860977173
    3. ' if' → logprob: -2.6622824668884277
    4. 'de' → logprob: -4.662282466888428
    5. 's' → logprob: -4.787282466888428
    6. '.' → logprob: -6.037282466888428
    7. ',' → logprob: -6.662282466888428
    8. ' :' → logprob: -7.412282466888428
    9. ' de' → logprob: -7.537282466888428
    10. 'si' → logprob: -7.787282466888428

Token 170: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06557399034500122
    2. ' list' → logprob: -3.0655739307403564
    3. 'la' → logprob: -4.4405741691589355
    4. ' la' → logprob: -5.3155741691589355
    5. 'liste' → logprob: -9.440573692321777
    6. ' liste' → logprob: -11.315573692321777
    7. 'input' → logprob: -11.440573692321777
    8. 'l' → logprob: -12.315573692321777
    9. '`' → logprob: -12.440573692321777
    10. 'lis' → logprob: -12.815573692321777

Token 171: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08013048768043518
    2. 'liste' → logprob: -3.2051305770874023
    3. ' list' → logprob: -3.7051305770874023
    4. 'input' → logprob: -5.330130577087402
    5. ' liste' → logprob: -5.705130577087402
    6. 's' → logprob: -7.455130577087402
    7. 'code' → logprob: -7.580130577087402
    8. '#' → logprob: -7.705130577087402
    9. ' input' → logprob: -7.830130577087402
    10. 'lis' → logprob: -7.955130577087402

Token 172: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09980045258998871
    2. ':' → logprob: -2.8498003482818604
    3. ' if' → logprob: -3.4748003482818604
    4. '.' → logprob: -5.8498005867004395
    5. '[' → logprob: -6.4748005867004395
    6. 's' → logprob: -7.2248005867004395
    7. ',' → logprob: -8.349800109863281
    8. ']' → logprob: -8.849800109863281
    9. ':first' → logprob: -9.099800109863281
    10. ' :' → logprob: -9.474800109863281

Token 173: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023203452583402395
    2. ' if' → logprob: -6.627320289611816
    3. 'first' → logprob: -7.127320289611816
    4. 'n' → logprob: -9.127320289611816
    5. 'i' → logprob: -10.002320289611816
    6. 'prem' → logprob: -11.877320289611816
    7. 'x' → logprob: -12.252320289611816
    8. '#' → logprob: -12.252320289611816
    9. '```' → logprob: -12.377320289611816
    10. 'a' → logprob: -13.127320289611816

Token 174: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002077336423099041
    2. 'first' → logprob: -6.627077102661133
    3. ' if' → logprob: -7.377077102661133
    4. 'n' → logprob: -9.252077102661133
    5. 'prem' → logprob: -11.252077102661133
    6. 'i' → logprob: -12.127077102661133
    7. 'a' → logprob: -12.627077102661133
    8. 'x' → logprob: -12.877077102661133
    9. ' first' → logprob: -13.127077102661133
    10. '```' → logprob: -14.002077102661133

Token 175: ' acc' (ID: 1259)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6946375966072083
    2. ' if' → logprob: -0.6946375966072083
    3. ' first' → logprob: -7.819637775421143
    4. '[' → logprob: -8.069637298583984
    5. 'for' → logprob: -8.319637298583984
    6. ' =' → logprob: -9.069637298583984
    7. ' for' → logprob: -9.319637298583984
    8. ' premier' → logprob: -9.444637298583984
    9. 'first' → logprob: -9.819637298583984
    10. '[first' → logprob: -10.319637298583984

Token 176: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.6723964810371399
    2. 'ede' → logprob: -1.1723964214324951
    3. 'ue' → logprob: -1.7973964214324951
    4. 'e' → logprob: -5.797396659851074
    5. 'ole' → logprob: -6.047396659851074
    6. 'om' → logprob: -6.672396659851074
    7. 'ueil' → logprob: -6.922396659851074
    8. 'orde' → logprob: -7.172396659851074
    9. 'ep' → logprob: -7.172396659851074
    10. 'ode' → logprob: -7.547396659851074

Token 177: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.527697741985321
    2. ' au' → logprob: -1.5276978015899658
    3. 'au' → logprob: -2.277697801589966
    4. '[' → logprob: -2.777697801589966
    5. 'à' → logprob: -4.152697563171387
    6. ' aux' → logprob: -5.402697563171387
    7. ' a' → logprob: -6.152697563171387
    8. ' ' → logprob: -6.152697563171387
    9. ' list' → logprob: -7.277697563171387
    10. 'a' → logprob: -7.527697563171387

Token 178: ' premier' (ID: 15506)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09746608883142471
    2. ' list' → logprob: -3.222465991973877
    3. ' premier' → logprob: -3.347465991973877
    4. 'prem' → logprob: -4.722465991973877
    5. 'first' → logprob: -5.722465991973877
    6. 'len' → logprob: -6.097465991973877
    7. 'élé' → logprob: -6.847465991973877
    8. ' first' → logprob: -7.222465991973877
    9. 'length' → logprob: -8.097466468811035
    10. 'liste' → logprob: -8.597466468811035

Token 179: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.20720495283603668
    2. ' élément' → logprob: -1.7072049379348755
    3. 'element' → logprob: -5.957204818725586
    4. '_' → logprob: -6.707204818725586
    5. ' element' → logprob: -7.582204818725586
    6. ' ' → logprob: -8.082204818725586
    7. 'é' → logprob: -8.707204818725586
    8. ' ' → logprob: -8.957204818725586
    9. ']' → logprob: -9.332204818725586
    10. ' nombre' → logprob: -9.457204818725586

Token 180: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17550551891326904
    2. ' list' → logprob: -2.5505056381225586
    3. 'de' → logprob: -2.8005056381225586
    4. 'list' → logprob: -4.050505638122559
    5. ']' → logprob: -6.800505638122559
    6. '[' → logprob: -6.925505638122559
    7. '(list' → logprob: -7.300505638122559
    8. ' (' → logprob: -7.300505638122559
    9. ',' → logprob: -8.175505638122559
    10. 's' → logprob: -9.175505638122559

Token 181: ' la' (ID: 557)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4291367828845978
    2. 'list' → logprob: -1.0541367530822754
    3. ' la' → logprob: -7.804136753082275
    4. 'la' → logprob: -10.804137229919434
    5. ' liste' → logprob: -12.554137229919434
    6. 'l' → logprob: -13.554137229919434
    7. 'liste' → logprob: -14.179137229919434
    8. ' ' → logprob: -15.304137229919434
    9. '`' → logprob: -15.304137229919434
    10. ' l' → logprob: -15.429137229919434

Token 182: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05181114375591278
    2. ' list' → logprob: -3.1768112182617188
    3. 'liste' → logprob: -4.926811218261719
    4. ' liste' → logprob: -6.676811218261719
    5. '```' → logprob: -9.676811218261719
    6. 'code' → logprob: -10.426811218261719
    7. '`' → logprob: -11.051811218261719
    8. 'a' → logprob: -11.051811218261719
    9. 'l' → logprob: -11.051811218261719
    10. 'la' → logprob: -11.176811218261719

Token 183: ' '' (ID: 461)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4627951681613922
    2. ' list' → logprob: -1.0877951383590698
    3. '[' → logprob: -4.462795257568359
    4. ':' → logprob: -4.712795257568359
    5. ',' → logprob: -5.837795257568359
    6. ' avec' → logprob: -6.462795257568359
    7. ':list' → logprob: -6.712795257568359
    8. ' de' → logprob: -6.962795257568359
    9. '(list' → logprob: -6.962795257568359
    10. ' (' → logprob: -7.337795257568359

Token 184: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004079828038811684
    2. ' list' → logprob: -5.504079818725586
    3. 'List' → logprob: -14.379079818725586
    4. 'input' → logprob: -14.504079818725586
    5. 'liste' → logprob: -16.129079818725586
    6. 'l' → logprob: -17.004079818725586
    7. '```' → logprob: -17.004079818725586
    8. 'int' → logprob: -17.379079818725586
    9. '_list' → logprob: -17.379079818725586
    10. '`' → logprob: -17.379079818725586

Token 185: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.5048530030981055e-06
    2. 'int' → logprob: -13.500001907348633
    3. 'Ints' → logprob: -17.625001907348633
    4. '[Int' → logprob: -18.125001907348633
    5. '[' → logprob: -18.875001907348633
    6. ' Int' → logprob: -19.000001907348633
    7. '```' → logprob: -19.250001907348633
    8. '_int' → logprob: -19.250001907348633
    9. '_Int' → logprob: -19.500001907348633
    10. '#' → logprob: -19.625001907348633

Token 186: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01683410257101059
    2. ']' → logprob: -4.141834259033203
    3. '[]' → logprob: -7.516834259033203
    4. '```' → logprob: -9.641834259033203
    5. ')' → logprob: -10.266834259033203
    6. '][' → logprob: -10.766834259033203
    7. '[:]' → logprob: -10.891834259033203
    8. 's' → logprob: -11.016834259033203
    9. ',' → logprob: -11.391834259033203
    10. '0' → logprob: -11.516834259033203

Token 187: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11082635074853897
    2. 'if' → logprob: -2.610826253890991
    3. ':' → logprob: -4.11082649230957
    4. ' if' → logprob: -4.48582649230957
    5. ',' → logprob: -6.86082649230957
    6. ']' → logprob: -6.86082649230957
    7. '[]' → logprob: -8.36082649230957
    8. '[:]' → logprob: -8.48582649230957
    9. '.' → logprob: -8.61082649230957
    10. ')' → logprob: -8.86082649230957

Token 188: ' utilisant' (ID: 92474)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.44441136717796326
    2. 'list' → logprob: -1.5694113969802856
    3. ' utilisant' → logprob: -2.319411277770996
    4. '[' → logprob: -3.069411277770996
    5. '```' → logprob: -6.319411277770996
    6. ' index' → logprob: -6.694411277770996
    7. 'util' → logprob: -6.944411277770996
    8. ' using' → logprob: -7.944411277770996
    9. '[]' → logprob: -8.194411277770996
    10. 'index' → logprob: -8.319411277770996

Token 189: ' l' (ID: 305)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12196855992078781
    2. 'list' → logprob: -2.3719685077667236
    3. '[' → logprob: -3.8719685077667236
    4. ' [' → logprob: -7.871968746185303
    5. ' l' → logprob: -8.496968269348145
    6. '[list' → logprob: -10.246968269348145
    7. ' la' → logprob: -10.746968269348145
    8. ' index' → logprob: -11.121968269348145
    9. ' ' → logprob: -11.246968269348145
    10. 'index' → logprob: -11.996968269348145

Token 190: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -4.990154047845863e-05
    2. '[list' → logprob: -11.375049591064453
    3. 'list' → logprob: -11.750049591064453
    4. '[]' → logprob: -11.875049591064453
    5. '```' → logprob: -11.875049591064453
    6. ' [' → logprob: -12.000049591064453
    7. '['' → logprob: -13.500049591064453
    8. '0' → logprob: -13.875049591064453
    9. '[len' → logprob: -13.875049591064453
    10. '\[' → logprob: -14.000049591064453

Token 191: 'index' (ID: 2257)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24210432171821594
    2. 'index' → logprob: -1.8671042919158936
    3. '0' → logprob: -2.9921042919158936
    4. 'list' → logprob: -5.242104530334473
    5. 'indice' → logprob: -5.617104530334473
    6. '[]' → logprob: -7.492104530334473
    7. '```' → logprob: -8.117104530334473
    8. '1' → logprob: -9.117104530334473
    9. '[index' → logprob: -9.742104530334473
    10. 'ind' → logprob: -9.992104530334473

Token 192: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08055698871612549
    2. '0' → logprob: -3.330556869506836
    3. ' [' → logprob: -3.705556869506836
    4. ' ' → logprob: -4.080556869506836
    5. ' `[' → logprob: -9.955556869506836
    6. '```' → logprob: -10.830556869506836
    7. ' zero' → logprob: -11.455556869506836
    8. '[]' → logprob: -11.455556869506836
    9. ' zéro' → logprob: -11.455556869506836
    10. ' ' → logprob: -11.580556869506836

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -16.75002098083496
    4. '1' → logprob: -18.00002098083496
    5. ']' → logprob: -18.12502098083496
    6. '   ' → logprob: -18.75002098083496
    7. '`' → logprob: -19.25002098083496
    8. '
' → logprob: -19.31252098083496
    9. '  ' → logprob: -19.87502098083496
    10. ' ' → logprob: -19.87502098083496

Token 194: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000104616025055293
    2. ' ]' → logprob: -9.500104904174805
    3. '].' → logprob: -10.750104904174805
    4. ']:' → logprob: -12.375104904174805
    5. ']
' → logprob: -13.375104904174805
    6. ']>' → logprob: -15.000104904174805
    7. ']

' → logprob: -15.125104904174805
    8. '];' → logprob: -15.250104904174805
    9. '],' → logprob: -15.500104904174805
    10. '[' → logprob: -15.625104904174805

Token 195: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003163969377055764
    2. 'first' → logprob: -8.250316619873047
    3. 'n' → logprob: -10.625316619873047
    4. ' if' → logprob: -11.125316619873047
    5. 'i' → logprob: -12.500316619873047
    6. 'prem' → logprob: -13.125316619873047
    7. 'value' → logprob: -13.250316619873047
    8. 'num' → logprob: -13.250316619873047
    9. 'for' → logprob: -13.625316619873047
    10. 'x' → logprob: -13.875316619873047

Token 196: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0005604196921922266
    2. 'list' → logprob: -7.500560283660889
    3. ' len' → logprob: -12.250560760498047
    4. ' ' → logprob: -13.125560760498047
    5. ' ' → logprob: -14.500560760498047
    6. ' lis' → logprob: -17.750560760498047
    7. 'len' → logprob: -17.875560760498047
    8. ' lst' → logprob: -18.125560760498047
    9. '	list' → logprob: -18.500560760498047
    10. 'List' → logprob: -18.625560760498047

Token 197: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '[Int' → logprob: -17.0
    4. 'Ints' → logprob: -17.5
    5. 'int' → logprob: -17.625
    6. '	Int' → logprob: -19.125
    7. ' Int' → logprob: -19.375
    8. '[int' → logprob: -20.625
    9. 'In' → logprob: -21.375
    10. '.Int' → logprob: -21.75

Token 198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.572941179503687e-05
    2. ' [' → logprob: -10.000045776367188
    3. ' ' → logprob: -15.750045776367188
    4. '```' → logprob: -16.625045776367188
    5. ' ==' → logprob: -17.250045776367188
    6. '[
' → logprob: -18.375045776367188
    7. '   ' → logprob: -18.750045776367188
    8. '0' → logprob: -19.250045776367188
    9. ' and' → logprob: -19.375045776367188
    10. ':' → logprob: -19.375045776367188

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. ']' → logprob: -14.375431060791016
    4. '   ' → logprob: -16.500431060791016
    5. '```' → logprob: -16.750431060791016
    6. '  ' → logprob: -17.375431060791016
    7. '[' → logprob: -17.375431060791016
    8. ')' → logprob: -17.875431060791016
    9. '1' → logprob: -18.375431060791016
    10. ' ]' → logprob: -19.000431060791016

Token 200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013746770098805428
    2. ' ]' → logprob: -4.388746738433838
    3. ']==' → logprob: -7.263746738433838
    4. ' ==' → logprob: -8.263747215270996
    5. ']>' → logprob: -8.638747215270996
    6. '==' → logprob: -10.388747215270996
    7. ' >' → logprob: -10.388747215270996
    8. ')' → logprob: -11.263747215270996
    9. '>' → logprob: -11.513747215270996
    10. ']>=' → logprob: -12.138747215270996

Token 201: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6045534014701843
    2. ' >' → logprob: -0.8545534014701843
    3. '==' → logprob: -4.22955322265625
    4. '>' → logprob: -4.60455322265625
    5. ' <' → logprob: -5.72955322265625
    6. ' >=' → logprob: -8.72955322265625
    7. ' <=' → logprob: -8.97955322265625
    8. '<' → logprob: -9.85455322265625
    9. ':' → logprob: -10.85455322265625
    10. ' ' → logprob: -11.47955322265625

Token 202: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7447883486747742
    2. '100' → logprob: -0.8697883486747742
    3. '0' → logprob: -3.744788408279419
    4. '12' → logprob: -3.744788408279419
    5. '1' → logprob: -4.36978816986084
    6. '18' → logprob: -4.49478816986084
    7. ' ' → logprob: -4.74478816986084
    8. '20' → logprob: -5.11978816986084
    9. '50' → logprob: -5.36978816986084
    10. '2' → logprob: -5.86978816986084

Token 203: '13' (ID: 1311)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5901308059692383
    2. '100' → logprob: -1.3401308059692383
    3. '0' → logprob: -2.4651308059692383
    4. '12' → logprob: -3.3401308059692383
    5. '1' → logprob: -3.8401308059692383
    6. '50' → logprob: -4.965130805969238
    7. '18' → logprob: -5.090130805969238
    8. '2' → logprob: -5.340130805969238
    9. '20' → logprob: -5.340130805969238
    10. '5' → logprob: -5.465130805969238

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006452414090745151
    2. ' :' → logprob: -7.750645160675049
    3. ':
' → logprob: -8.500645637512207
    4. ' and' → logprob: -11.500645637512207
    5. 'and' → logprob: -14.875645637512207
    6. ' :
' → logprob: -15.250645637512207
    7. '   ' → logprob: -16.50064468383789
    8. ' ' → logprob: -16.50064468383789
    9. ' or' → logprob: -16.87564468383789
    10. ':

' → logprob: -17.00064468383789

Token 205: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.24016420543193817
    2. '   ' → logprob: -2.240164279937744
    3. 'print' → logprob: -2.240164279937744
    4. '
' → logprob: -8.240163803100586
    5. '\n' → logprob: -9.615163803100586
    6. '	print' → logprob: -9.865163803100586
    7. ' pass' → logprob: -9.865163803100586
    8. ' ' → logprob: -10.115163803100586
    9. '    
' → logprob: -10.865163803100586
    10. ' 
' → logprob: -11.240163803100586

Token 206: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00532175088301301
    2. ' print' → logprob: -5.255321979522705
    3. '   ' → logprob: -9.755321502685547
    4. 'for' → logprob: -12.005321502685547
    5. 'pass' → logprob: -12.255321502685547
    6. 'result' → logprob: -12.380321502685547
    7. 'if' → logprob: -12.630321502685547
    8. 'list' → logprob: -12.755321502685547
    9. ' ' → logprob: -13.005321502685547
    10. '#' (adapté à ' #') → logprob: -13.755321502685547

Token 207: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028533751610666513
    2. ' print' → logprob: -5.8778533935546875
    3. 'pass' → logprob: -11.127853393554688
    4. 'if' → logprob: -12.002853393554688
    5. 'prin' → logprob: -12.127853393554688
    6. '   ' → logprob: -12.377853393554688
    7. 'for' → logprob: -12.377853393554688
    8. 'result' → logprob: -13.002853393554688
    9. 'pr' → logprob: -13.002853393554688
    10. 'list' → logprob: -13.502853393554688

Token 208: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35789862275123596
    2. ' print' → logprob: -1.3578985929489136
    3. ' list' → logprob: -3.482898712158203
    4. 'list' → logprob: -4.357898712158203
    5. '   ' → logprob: -10.107898712158203
    6. ' input' → logprob: -11.607898712158203
    7. 'input' → logprob: -11.607898712158203
    8. ' ' → logprob: -11.732898712158203
    9. 'pass' → logprob: -12.232898712158203
    10. ' age' → logprob: -12.295398712158203

Token 209: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018140938133001328
    2. ' print' → logprob: -4.76814079284668
    3. 'list' → logprob: -5.14314079284668
    4. 'liste' → logprob: -7.26814079284668
    5. ' list' → logprob: -7.89314079284668
    6. '   ' → logprob: -8.01814079284668
    7. 'val' → logprob: -8.39314079284668
    8. 'date' → logprob: -9.01814079284668
    9. ' liste' → logprob: -9.01814079284668
    10. ' ' → logprob: -9.01814079284668

Token 210: ' du' (ID: 1462)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16272757947444916
    2. '>=' → logprob: -2.0377275943756104
    3. '   ' → logprob: -4.662727355957031
    4. '>' → logprob: -6.287727355957031
    5. ' >' → logprob: -6.412727355957031
    6. 'print' → logprob: -6.537727355957031
    7. ' ==' → logprob: -6.662727355957031
    8. ' de' → logprob: -7.412727355957031
    9. ' ' → logprob: -7.662727355957031
    10. ' <=' → logprob: -7.662727355957031

Token 211: ' premier' (ID: 15506)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.007730249781161547
    2. ' list' → logprob: -5.007730484008789
    3. 'input' → logprob: -7.382730484008789
    4. 'print' → logprob: -8.507730484008789
    5. 'int' → logprob: -11.132730484008789
    6. 'liste' → logprob: -11.382730484008789
    7. 'number' → logprob: -11.382730484008789
    8. 'age' → logprob: -11.507730484008789
    9. ' ' → logprob: -11.757730484008789
    10. 'nombre' → logprob: -11.757730484008789

Token 212: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.9999489784240723
    2. 'nombre' → logprob: -1.6249489784240723
    3. ' élément' → logprob: -1.6249489784240723
    4. ' nombre' → logprob: -1.9999489784240723
    5. 'element' → logprob: -3.4999489784240723
    6. 'list' → logprob: -4.124948978424072
    7. ' list' → logprob: -4.374948978424072
    8. 'int' → logprob: -4.499948978424072
    9. 'print' → logprob: -4.749948978424072
    10. ' ' → logprob: -4.999948978424072

Token 213: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1200629323720932
    2. '>=' → logprob: -2.495062828063965
    3. ' >' → logprob: -5.120062828063965
    4. ' ' → logprob: -5.370062828063965
    5. '   ' → logprob: -5.370062828063965
    6. '>' → logprob: -5.495062828063965
    7. ' <=' → logprob: -5.870062828063965
    8. ' est' → logprob: -6.245062828063965
    9. ' ==' → logprob: -6.245062828063965
    10. ' de' → logprob: -7.245062828063965

Token 214: ' supérieure' (ID: 106336)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7665134072303772
    2. 'sup' → logprob: -1.5165133476257324
    3. ' supérieure' → logprob: -1.7665133476257324
    4. '>=' → logprob: -2.6415133476257324
    5. '   ' → logprob: -3.8915133476257324
    6. ' sup' → logprob: -4.391513347625732
    7. '12' → logprob: -4.641513347625732
    8. ' supérieur' → logprob: -5.391513347625732
    9. ' ' → logprob: -5.641513347625732
    10. 'au' → logprob: -5.641513347625732

Token 215: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.6620895266532898
    2. 'ou' → logprob: -0.7870895266532898
    3. 'à' → logprob: -4.2870893478393555
    4. '   ' → logprob: -5.5370893478393555
    5. ' à' → logprob: -5.6620893478393555
    6. '=' → logprob: -5.6620893478393555
    7. 'au' → logprob: -6.0370893478393555
    8. '  ' → logprob: -7.7870893478393555
    9. ' or' → logprob: -7.9120893478393555
    10. ' ' → logprob: -8.287089347839355

Token 216: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.08482720702886581
    2. 'égal' → logprob: -2.584827184677124
    3. ' ég' → logprob: -5.584827423095703
    4. 'eg' → logprob: -6.834827423095703
    5. '=' → logprob: -7.584827423095703
    6. 'ou' → logprob: -8.709827423095703
    7. 'é' → logprob: -9.084827423095703
    8. 'à' → logprob: -9.209827423095703
    9. 'égalité' → logprob: -9.459827423095703
    10. 'Ég' → logprob: -10.334827423095703

Token 217: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00010318557906430215
    2. 'al' → logprob: -9.375102996826172
    3. 'але' → logprob: -12.750102996826172
    4. '@' → logprob: -13.125102996826172
    5. '>' → logprob: -13.625102996826172
    6. '```' → logprob: -13.750102996826172
    7. '</' → logprob: -13.750102996826172
    8. '"' → logprob: -14.000102996826172
    9. 'a' → logprob: -14.125102996826172
    10. 'le' → logprob: -14.250102996826172

Token 218: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.32528942823410034
    2. 'à' → logprob: -1.9502894878387451
    3. '   ' → logprob: -2.075289487838745
    4. '  ' → logprob: -5.700289249420166
    5. 'a' → logprob: -6.450289249420166
    6. '    ' → logprob: -7.075289249420166
    7. 'au' → logprob: -7.325289249420166
    8. ',' → logprob: -7.325289249420166
    9. ' ou' → logprob: -7.700289249420166
    10. ' a' → logprob: -7.825289249420166

Token 219: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.12756073474884033
    2. ' ' → logprob: -2.127560615539551
    3. '18' → logprob: -8.25256061553955
    4. '10' → logprob: -9.00256061553955
    5. '12' → logprob: -9.37756061553955
    6. '14' → logprob: -9.37756061553955
    7. '15' → logprob: -10.75256061553955
    8. '20' → logprob: -11.12756061553955
    9. 'tre' → logprob: -11.75256061553955
    10. '17' → logprob: -12.12756061553955

Token 220: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.04072270914912224
    2. '18' → logprob: -3.540722608566284
    3. ' ' → logprob: -5.540722846984863
    4. '10' → logprob: -5.915722846984863
    5. '12' → logprob: -6.665722846984863
    6. '20' → logprob: -7.540722846984863
    7. '65' → logprob: -8.040722846984863
    8. '100' → logprob: -8.415722846984863
    9. '50' → logprob: -8.540722846984863
    10. '7' → logprob: -8.915722846984863

Token 221: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.186333566904068
    2. ':
' → logprob: -2.186333656311035
    3. '   ' → logprob: -3.686333656311035
    4. 'print' → logprob: -4.436333656311035
    5. ',' → logprob: -5.061333656311035
    6. ' :' → logprob: -5.061333656311035
    7. ' print' → logprob: -5.186333656311035
    8. ' :
' → logprob: -6.561333656311035
    9. ' and' → logprob: -7.436333656311035
    10. ' or' → logprob: -8.561333656311035

Token 222: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1852739304304123
    2. '   ' → logprob: -2.0602738857269287
    3. 'print' → logprob: -3.1852738857269287
    4. '    ' → logprob: -9.060274124145508
    5. ' pass' → logprob: -9.310274124145508
    6. '	print' → logprob: -10.185274124145508
    7. ' ' → logprob: -10.685274124145508
    8. '   ' → logprob: -11.185274124145508
    9. '  ' → logprob: -11.685274124145508
    10. '       ' → logprob: -11.935274124145508

Token 223: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021104535087943077
    2. ' print' → logprob: -4.021104335784912
    3. '   ' → logprob: -5.896104335784912
    4. 'pass' → logprob: -10.02110481262207
    5. 'result' → logprob: -10.14610481262207
    6. 'for' → logprob: -10.39610481262207
    7. 'prix' → logprob: -11.39610481262207
    8. ' ' → logprob: -11.39610481262207
    9. 'if' → logprob: -11.52110481262207
    10. '#' (adapté à ' #') → logprob: -11.77110481262207

Token 224: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11588168144226074
    2. ' print' → logprob: -2.2408816814422607
    3. '   ' → logprob: -6.11588191986084
    4. 'result' → logprob: -8.24088191986084
    5. 'prix' → logprob: -8.74088191986084
    6. 'for' → logprob: -9.61588191986084
    7. ' result' → logprob: -9.99088191986084
    8. ' ' → logprob: -9.99088191986084
    9. 'pass' → logprob: -9.99088191986084
    10. 'age' → logprob: -10.24088191986084

Token 225: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6953895688056946
    2. ' print' → logprob: -0.6953895688056946
    3. '   ' → logprob: -7.070389747619629
    4. ' for' → logprob: -8.070389747619629
    5. 'for' → logprob: -8.070389747619629
    6. '#' → logprob: -9.070389747619629
    7. 'continue' → logprob: -9.320389747619629
    8. ' continue' → logprob: -9.445389747619629
    9. 'pass' → logprob: -9.445389747619629
    10. ' pass' → logprob: -9.945389747619629

Token 226: ' simplement' (ID: 45065)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03589971363544464
    2. '(' → logprob: -3.5358996391296387
    3. '"' → logprob: -5.535899639129639
    4. ' "' → logprob: -6.285899639129639
    5. '('' → logprob: -8.785900115966797
    6. ' ("' → logprob: -10.660900115966797
    7. '(
' → logprob: -10.910900115966797
    8. '()' → logprob: -10.910900115966797
    9. '   ' → logprob: -11.285900115966797
    10. '(f' → logprob: -11.285900115966797

Token 227: ' la' (ID: 557)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023393971845507622
    2. 'list' → logprob: -4.2733941078186035
    3. ' "' → logprob: -5.1483941078186035
    4. ' list' → logprob: -6.6483941078186035
    5. 'print' → logprob: -7.5233941078186035
    6. ''' → logprob: -8.023393630981445
    7. '"C' → logprob: -8.148393630981445
    8. '("' → logprob: -8.773393630981445
    9. '"La' → logprob: -8.898393630981445
    10. ' la' → logprob: -9.398393630981445

Token 228: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8484418988227844
    2. 'prem' → logprob: -1.5984418392181396
    3. ' somme' → logprob: -2.2234418392181396
    4. ' valeur' → logprob: -3.0984418392181396
    5. 'val' → logprob: -3.0984418392181396
    6. 's' → logprob: -3.5984418392181396
    7. 'list' → logprob: -3.8484418392181396
    8. ' liste' → logprob: -3.8484418392181396
    9. 'liste' → logprob: -4.348442077636719
    10. ' phrase' → logprob: -4.598442077636719

Token 229: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6016026735305786
    2. ' de' → logprob: -1.7266026735305786
    3. 'de' → logprob: -1.9766026735305786
    4. 'list' → logprob: -2.226602554321289
    5. '   ' → logprob: -4.476602554321289
    6. ' print' → logprob: -5.476602554321289
    7. ' list' → logprob: -5.726602554321289
    8. ',' → logprob: -5.726602554321289
    9. ' ' → logprob: -6.476602554321289
    10. 'du' → logprob: -6.476602554321289

Token 230: ' second' (ID: 3099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18336644768714905
    2. 'prem' → logprob: -2.433366537094116
    3. ' premier' → logprob: -3.308366537094116
    4. 'first' → logprob: -3.558366537094116
    5. ' list' → logprob: -4.558366298675537
    6. ' first' → logprob: -6.558366298675537
    7. '1' → logprob: -7.183366298675537
    8. '0' → logprob: -7.558366298675537
    9. 'second' → logprob: -7.808366298675537
    10. 'liste' → logprob: -7.933366298675537

Token 231: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6127519607543945
    2. ' élément' → logprob: -1.3627519607543945
    3. 'element' → logprob: -1.8627519607543945
    4. ' element' → logprob: -4.1127519607543945
    5. 'list' → logprob: -4.3627519607543945
    6. ' list' → logprob: -4.9877519607543945
    7. ' ' → logprob: -6.1127519607543945
    8. '[' → logprob: -6.3627519607543945
    9. 'int' → logprob: -6.6127519607543945
    10. ')' → logprob: -7.3627519607543945

Token 232: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4913587272167206
    2. ',' → logprob: -1.366358757019043
    3. '   ' → logprob: -2.366358757019043
    4. ' print' → logprob: -3.491358757019043
    5. ' ,' → logprob: -5.741358757019043
    6. '[' → logprob: -6.241358757019043
    7. 'list' → logprob: -6.366358757019043
    8. ' list' → logprob: -7.741358757019043
    9. ')' → logprob: -7.991358757019043
    10. '.' → logprob: -8.366358757019043

Token 233: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7773815989494324
    2. ' print' → logprob: -1.0273816585540771
    3. '   ' → logprob: -2.527381658554077
    4. ' list' → logprob: -2.527381658554077
    5. 'list' → logprob: -3.902381658554077
    6. '    ' → logprob: -6.277381420135498
    7. ' end' → logprob: -8.152381896972656
    8. 'end' → logprob: -9.027381896972656
    9. '```' → logprob: -9.652381896972656
    10. '  ' → logprob: -10.777381896972656

Token 234: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31104424595832825
    2. ' print' → logprob: -1.4360442161560059
    3. '   ' → logprob: -3.561044216156006
    4. '    ' → logprob: -7.811044216156006
    5. ' list' → logprob: -8.061044692993164
    6. 'list' → logprob: -8.436044692993164
    7. 'else' → logprob: -10.936044692993164
    8. '```' → logprob: -11.186044692993164
    9. ' ' → logprob: -11.436044692993164
    10. '  ' → logprob: -11.436044692993164

Token 235: ' accessible' (ID: 18240)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.469612181186676
    2. ' print' → logprob: -1.3446121215820312
    3. '   ' → logprob: -2.2196121215820312
    4. '    ' → logprob: -5.594612121582031
    5. ' list' → logprob: -7.219612121582031
    6. 'list' → logprob: -7.719612121582031
    7. '  ' → logprob: -8.719612121582031
    8. ' ' → logprob: -8.969612121582031
    9. 'else' → logprob: -9.844612121582031
    10. '     ' → logprob: -10.094612121582031

Token 236: ' via' (ID: 4493)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6127536296844482
    2. ' par' → logprob: -1.3627536296844482
    3. ' via' → logprob: -1.9877536296844482
    4. ' list' → logprob: -3.2377536296844482
    5. ' ' → logprob: -4.612753868103027
    6. 'list' → logprob: -5.612753868103027
    7. ' through' → logprob: -6.112753868103027
    8. ' [' → logprob: -6.237753868103027
    9. ' à' → logprob: -6.487753868103027
    10. ' avec' → logprob: -7.112753868103027

Token 237: ' l' (ID: 305)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.009789974428713322
    2. 'list' → logprob: -4.634789943695068
    3. '[' → logprob: -10.884790420532227
    4. ' ' → logprob: -11.884790420532227
    5. ' la' → logprob: -12.509790420532227
    6. ' l' → logprob: -13.759790420532227
    7. '`' → logprob: -14.384790420532227
    8. ' [' → logprob: -14.509790420532227
    9. ' index' → logprob: -15.009790420532227
    10. ' print' → logprob: -15.009790420532227

Token 238: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03277900069952011
    2. ''' → logprob: -4.407779216766357
    3. 'index' → logprob: -4.532779216766357
    4. 'e' → logprob: -5.407779216766357
    5. '[index' → logprob: -6.407779216766357
    6. '['' → logprob: -6.782779216766357
    7. ''[' → logprob: -7.157779216766357
    8. ' index' → logprob: -7.907779216766357
    9. 'a' → logprob: -8.0327787399292
    10. ' [' → logprob: -8.5327787399292

Token 239: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.052726101130247116
    2. '[' → logprob: -3.1777260303497314
    3. ' index' → logprob: -4.9277262687683105
    4. '[index' → logprob: -6.4277262687683105
    5. 'indice' → logprob: -7.6777262687683105
    6. '`' → logprob: -9.427725791931152
    7. '0' → logprob: -10.177725791931152
    8. ' [' → logprob: -10.302725791931152
    9. '```' → logprob: -10.427725791931152
    10. ''' → logprob: -10.427725791931152

Token 240: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01607554405927658
    2. ' [' → logprob: -4.141075611114502
    3. ' ' → logprob: -10.766075134277344
    4. '1' → logprob: -12.016075134277344
    5. ' `[' → logprob: -12.516075134277344
    6. '   ' → logprob: -13.016075134277344
    7. '0' → logprob: -13.141075134277344
    8. '`' → logprob: -13.266075134277344
    9. '```' → logprob: -13.516075134277344
    10. ' ' → logprob: -13.766075134277344

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015383612480945885
    2. ' ' → logprob: -9.375153541564941
    3. ']' → logprob: -9.625153541564941
    4. '```' → logprob: -13.750153541564941
    5. '   ' → logprob: -13.875153541564941
    6. '0' → logprob: -15.375153541564941
    7. '`' → logprob: -16.000154495239258
    8. '  ' → logprob: -16.250154495239258
    9. ' ]' → logprob: -16.375154495239258
    10. '2' → logprob: -16.375154495239258

Token 242: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007700824644416571
    2. '].' → logprob: -7.250770092010498
    3. ' ]' → logprob: -10.12576961517334
    4. ']]' → logprob: -12.00076961517334
    5. ']:' → logprob: -12.75076961517334
    6. '],' → logprob: -12.87576961517334
    7. ')]' → logprob: -13.00076961517334
    8. ']
' → logprob: -13.12576961517334
    9. '   ' → logprob: -14.12576961517334
    10. ']>' → logprob: -14.62576961517334

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015410076826810837
    2. 'print' → logprob: -4.26540994644165
    3. ' print' → logprob: -6.76540994644165
    4. '```' → logprob: -9.390410423278809
    5. '   ' → logprob: -12.265410423278809
    6. '	print' → logprob: -13.515410423278809
    7. '       ' → logprob: -13.640410423278809
    8. '    
' → logprob: -14.015410423278809
    9. '``' → logprob: -15.140410423278809
    10. '  ' → logprob: -15.265410423278809

Token 244: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002482315758243203
    2. '   ' → logprob: -6.2524824142456055
    3. ' print' → logprob: -7.5024824142456055
    4. '```' → logprob: -13.252482414245605
    5. '	print' → logprob: -16.37748146057129
    6. ' ' → logprob: -17.87748146057129
    7. '  ' → logprob: -18.37748146057129
    8. '``' → logprob: -18.62748146057129
    9. '    
' → logprob: -19.00248146057129
    10. '
' → logprob: -19.25248146057129

Token 245: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.004084455315023661
    2. '(' → logprob: -5.504084587097168
    3. 'list' → logprob: -12.379084587097168
    4. ' (' → logprob: -13.504084587097168
    5. ' list' → logprob: -16.12908363342285
    6. '(
' → logprob: -16.37908363342285
    7. '(lst' → logprob: -16.50408363342285
    8. '(int' → logprob: -17.12908363342285
    9. '(lista' → logprob: -17.12908363342285
    10. '(len' → logprob: -17.62908363342285

Token 246: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. 'int' → logprob: -17.75
    4. '[Int' → logprob: -18.125
    5. 'Ints' → logprob: -18.25
    6. ' Int' → logprob: -20.375
    7. '	Int' → logprob: -20.5
    8. '[int' → logprob: -20.5
    9. 'In' → logprob: -21.0
    10. '(' → logprob: -21.5

Token 247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2127087504486553e-05
    2. ')[' → logprob: -11.000021934509277
    3. ')' → logprob: -12.750021934509277
    4. ' [' → logprob: -13.250021934509277
    5. '1' → logprob: -15.125021934509277
    6. '][' → logprob: -15.250021934509277
    7. '```' → logprob: -16.500022888183594
    8. '   ' → logprob: -17.375022888183594
    9. '[
' → logprob: -17.875022888183594
    10. ' )[' → logprob: -18.125022888183594

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '0' → logprob: -18.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. '' → logprob: -18.937501907348633
    7. ']' → logprob: -19.062501907348633
    8. '１' → logprob: -19.187501907348633
    9. ')' → logprob: -19.312501907348633
    10. '[' → logprob: -19.375001907348633

Token 249: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012730928137898445
    2. ')' → logprob: -6.751273155212402
    3. ' ])' → logprob: -9.751273155212402
    4. ']' → logprob: -10.251273155212402
    5. ' )' → logprob: -13.126273155212402
    6. '])
' → logprob: -13.251273155212402
    7. ')])' → logprob: -13.376273155212402
    8. ')]' → logprob: -13.376273155212402
    9. '))' → logprob: -13.751273155212402
    10. '[' → logprob: -14.751273155212402

Token 250: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019568251445889473
    2. 'elif' → logprob: -6.251956939697266
    3. ' else' → logprob: -10.501956939697266
    4. '```' → logprob: -14.751956939697266
    5. 'e' → logprob: -16.376956939697266
    6. 'el' → logprob: -16.751956939697266
    7. 'elser' → logprob: -17.001956939697266
    8. 'elses' → logprob: -17.251956939697266
    9. '_else' → logprob: -17.751956939697266
    10. 'elseif' → logprob: -17.876956939697266

Token 251: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12785932421684265
    2. 'list' → logprob: -2.127859354019165
    3. ' len' → logprob: -7.377859115600586
    4. 'len' → logprob: -8.502859115600586
    5. ' ' → logprob: -9.627859115600586
    6. '0' → logprob: -11.877859115600586
    7. '12' → logprob: -12.127859115600586
    8. '10' → logprob: -12.377859115600586
    9. '13' → logprob: -12.627859115600586
    10. ' ' → logprob: -12.752859115600586

Token 252: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.006727214436978102
    2. '[' → logprob: -5.00672721862793
    3. 'int' → logprob: -11.63172721862793
    4. '[Int' → logprob: -13.63172721862793
    5. 'ist' → logprob: -14.50672721862793
    6. ' Int' → logprob: -14.88172721862793
    7. 'List' → logprob: -14.88172721862793
    8. 'Ints' → logprob: -16.00672721862793
    9. '[int' → logprob: -16.13172721862793
    10. '_int' → logprob: -16.25672721862793

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.404745439183898e-05
    2. '0' → logprob: -10.75003433227539
    3. ' [' → logprob: -11.62503433227539
    4. ' ' → logprob: -13.87503433227539
    5. '==' → logprob: -14.62503433227539
    6. '```' → logprob: -14.87503433227539
    7. '1' → logprob: -15.68753433227539
    8. '   ' → logprob: -15.93753433227539
    9. 'else' → logprob: -15.93753433227539
    10. '2' → logprob: -16.00003433227539

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014205695129930973
    2. '1' → logprob: -4.2642059326171875
    3. '[' → logprob: -10.639205932617188
    4. ' ' → logprob: -11.889205932617188
    5. '
' → logprob: -12.826705932617188
    6. '2' → logprob: -13.389205932617188
    7. '   ' → logprob: -13.764205932617188
    8. '-' → logprob: -14.139205932617188
    9. ']' → logprob: -14.264205932617188
    10. '][' → logprob: -14.326705932617188

Token 255: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33963391184806824
    2. ']' → logprob: -1.4646339416503906
    3. '[' → logprob: -3.3396339416503906
    4. '<' → logprob: -4.214633941650391
    5. ' ==' → logprob: -6.214633941650391
    6. ' ]' → logprob: -6.214633941650391
    7. ' <=' → logprob: -6.839633941650391
    8. ' ' → logprob: -7.464633941650391
    9. '==' → logprob: -8.71463394165039
    10. ' [' → logprob: -8.71463394165039

Token 256: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08952561020851135
    2. '<' → logprob: -2.7145256996154785
    3. ' ==' → logprob: -5.0895256996154785
    4. ' <=' → logprob: -5.3395256996154785
    5. ' >=' → logprob: -5.5895256996154785
    6. '[' → logprob: -6.4645256996154785
    7. ' >' → logprob: -6.7145256996154785
    8. '==' → logprob: -6.9645256996154785
    9. '>' → logprob: -8.08952522277832
    10. '<=' → logprob: -8.46452522277832

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6119861602783203
    2. '=' → logprob: -1.3619861602783203
    3. '7' → logprob: -3.2369861602783203
    4. '1' → logprob: -3.2369861602783203
    5. ' ' → logprob: -3.4869861602783203
    6. '10' → logprob: -3.6119861602783203
    7. '6' → logprob: -4.11198616027832
    8. '5' → logprob: -4.48698616027832
    9. '3' → logprob: -4.48698616027832
    10. '12' → logprob: -4.73698616027832

Token 258: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3262733519077301
    2. '7' → logprob: -2.5762734413146973
    3. '6' → logprob: -2.9512734413146973
    4. '5' → logprob: -3.4512734413146973
    5. '10' → logprob: -3.5762734413146973
    6. '12' → logprob: -3.9512734413146973
    7. '3' → logprob: -4.076273441314697
    8. '1' → logprob: -4.076273441314697
    9. '2' → logprob: -4.576273441314697
    10. '8' → logprob: -4.701273441314697

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04367930069565773
    2. ':
' → logprob: -3.1686792373657227
    3. '   ' → logprob: -7.918679237365723
    4. ' and' → logprob: -8.168679237365723
    5. 'and' → logprob: -10.918679237365723
    6. ' :' → logprob: -11.793679237365723
    7. ':
' → logprob: -12.668679237365723
    8. ' :
' → logprob: -13.418679237365723
    9. '=' → logprob: -14.293679237365723
    10. ':

' → logprob: -14.668679237365723

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04812554642558098
    2. ':' → logprob: -3.5481255054473877
    3. 'print' → logprob: -4.173125743865967
    4. ' print' → logprob: -6.298125743865967
    5. ':
' → logprob: -7.048125743865967
    6. '	print' → logprob: -10.423125267028809
    7. ' :' → logprob: -10.798125267028809
    8. '  ' → logprob: -11.048125267028809
    9. ' ' → logprob: -12.048125267028809
    10. ' :
' → logprob: -12.548125267028809

Token 261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15367697179317474
    2. 'print' → logprob: -2.153676986694336
    3. ' print' → logprob: -3.653676986694336
    4. '    
' → logprob: -9.153676986694336
    5. '       ' → logprob: -9.278676986694336
    6. '    ' → logprob: -9.403676986694336
    7. '   ' → logprob: -9.778676986694336
    8. '
' → logprob: -10.903676986694336
    9. '	print' → logprob: -11.153676986694336
    10. ':' → logprob: -11.153676986694336

Token 262: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5306895971298218
    2. 'print' → logprob: -1.0306895971298218
    3. ' print' → logprob: -2.9056897163391113
    4. '    
' → logprob: -9.655689239501953
    5. 'for' → logprob: -10.030689239501953
    6. '    ' → logprob: -10.155689239501953
    7. ' for' → logprob: -10.155689239501953
    8. 'if' → logprob: -10.780689239501953
    9. ' if' → logprob: -10.905689239501953
    10. '   ' → logprob: -11.030689239501953

Token 263: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.28406497836112976
    2. ' list' → logprob: -1.5340650081634521
    3. 'print' → logprob: -3.784065008163452
    4. 'len' → logprob: -5.159064769744873
    5. ' print' → logprob: -6.534064769744873
    6. ' len' → logprob: -6.784064769744873
    7. 'input' → logprob: -8.284065246582031
    8. ' input' → logprob: -9.034065246582031
    9. '   ' → logprob: -9.784065246582031
    10. 'True' → logprob: -10.284065246582031

Token 264: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4047318994998932
    2. 'list' → logprob: -1.2797318696975708
    3. ' list' → logprob: -3.5297319889068604
    4. ' print' → logprob: -4.154731750488281
    5. 'len' → logprob: -4.779731750488281
    6. ' len' → logprob: -7.029731750488281
    7. 'input' → logprob: -8.529731750488281
    8. 'value' → logprob: -9.279731750488281
    9. ' ' → logprob: -10.154731750488281
    10. ' input' → logprob: -10.404731750488281

Token 265: ' précédente' (ID: 177319)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4845581650733948
    2. 'list' → logprob: -1.73455810546875
    3. ' est' → logprob: -1.98455810546875
    4. 'elif' → logprob: -3.60955810546875
    5. ' is' → logprob: -4.60955810546875
    6. 'est' → logprob: -4.60955810546875
    7. ':' → logprob: -5.10955810546875
    8. ' elif' → logprob: -5.48455810546875
    9. '   ' → logprob: -5.48455810546875
    10. ' n' → logprob: -6.23455810546875

Token 266: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004840915556997061
    2. '   ' → logprob: -6.004840850830078
    3. ':
' → logprob: -6.379840850830078
    4. ' est' → logprob: -8.254840850830078
    5. ' and' → logprob: -9.379840850830078
    6. ' is' → logprob: -9.379840850830078
    7. ' :' → logprob: -9.879840850830078
    8. 'est' → logprob: -10.004840850830078
    9. ',' → logprob: -10.129840850830078
    10. 'et' → logprob: -10.754840850830078

Token 267: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.05468467250466347
    2. '’est' → logprob: -4.804684638977051
    3. ' est' → logprob: -5.054684638977051
    4. '#' → logprob: -5.179684638977051
    5. 'e' → logprob: -5.179684638977051
    6. 'pas' → logprob: -5.304684638977051
    7. 'et' → logprob: -5.429684638977051
    8. 'elif' → logprob: -5.554684638977051
    9. ''était' → logprob: -5.929684638977051
    10. 'est' → logprob: -5.929684638977051

Token 268: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0008538239635527134
    2. ' pas' → logprob: -7.125854015350342
    3. '#' → logprob: -10.750853538513184
    4. 'v' → logprob: -11.125853538513184
    5. 'est' → logprob: -13.000853538513184
    6. 'pass' → logprob: -13.125853538513184
    7. 's' → logprob: -13.250853538513184
    8. 'not' → logprob: -13.625853538513184
    9. 'plus' → logprob: -13.875853538513184
    10. '_pas' → logprob: -14.000853538513184

Token 269: ' respect' (ID: 5618)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2505488693714142
    2. 'pas' → logprob: -2.375548839569092
    3. 'v' → logprob: -2.625548839569092
    4. 'rem' → logprob: -3.750548839569092
    5. ' rempl' → logprob: -4.000548839569092
    6. 'respect' → logprob: -4.625548839569092
    7. 'True' → logprob: -6.500548839569092
    8. 'true' → logprob: -6.750548839569092
    9. ' True' → logprob: -8.00054931640625
    10. '   ' → logprob: -8.50054931640625

Token 270: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0004014753212686628
    2. 'é' → logprob: -8.125401496887207
    3. 'ee' → logprob: -9.500401496887207
    4. 'e' → logprob: -11.000401496887207
    5. 'É' → logprob: -12.625401496887207
    6. 'ed' → logprob: -12.750401496887207
    7. '   ' → logprob: -13.125401496887207
    8. 'née' → logprob: -13.875401496887207
    9. 'ées' → logprob: -14.000401496887207
    10. 'urée' → logprob: -14.125401496887207

Token 271: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13527539372444153
    2. ',' → logprob: -2.260275363922119
    3. '   ' → logprob: -4.010275363922119
    4. ':
' → logprob: -6.010275363922119
    5. ' and' → logprob: -7.260275363922119
    6. ' ,' → logprob: -8.135275840759277
    7. ' :' → logprob: -8.135275840759277
    8. 'and' → logprob: -9.010275840759277
    9. 'print' → logprob: -9.885275840759277
    10. ' et' → logprob: -10.135275840759277

Token 272: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02687804587185383
    2. 'print' → logprob: -3.6518781185150146
    3. ' print' → logprob: -7.5268778800964355
    4. '    
' → logprob: -11.276878356933594
    5. '       ' → logprob: -11.526878356933594
    6. '    ' → logprob: -12.401878356933594
    7. '   ' → logprob: -12.651878356933594
    8. '	print' → logprob: -13.401878356933594
    9. '  ' → logprob: -13.651878356933594
    10. '
' → logprob: -13.651878356933594

Token 273: ' que' (ID: 661)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8828777074813843
    2. 'list' → logprob: -1.0078777074813843
    3. '   ' → logprob: -1.8828777074813843
    4. 'elif' → logprob: -2.882877826690674
    5. 'input' → logprob: -5.382877826690674
    6. 'print' → logprob: -5.882877826690674
    7. ' input' → logprob: -6.257877826690674
    8. ' elif' → logprob: -6.382877826690674
    9. ' print' → logprob: -7.382877826690674
    10. '    ' → logprob: -8.382877349853516

Token 274: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006354739889502525
    2. ' list' → logprob: -7.375635623931885
    3. 'len' → logprob: -13.000635147094727
    4. '5' → logprob: -13.250635147094727
    5. 'print' → logprob: -13.375635147094727
    6. '13' → logprob: -13.875635147094727
    7. '12' → logprob: -14.500635147094727
    8. '   ' → logprob: -14.500635147094727
    9. 'input' → logprob: -15.000635147094727
    10. ' ' → logprob: -15.250635147094727

Token 275: ' valeur' (ID: 41664)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16634511947631836
    2. 'print' → logprob: -1.9163451194763184
    3. 'len' → logprob: -6.166345119476318
    4. ' list' → logprob: -6.916345119476318
    5. 'input' → logprob: -7.291345119476318
    6. 'val' → logprob: -7.416345119476318
    7. 'value' → logprob: -7.541345119476318
    8. 'liste' → logprob: -7.916345119476318
    9. '#' → logprob: -8.416345596313477
    10. 'elif' → logprob: -8.541345596313477

Token 276: ' du' (ID: 1462)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5588120222091675
    2. 'du' → logprob: -1.6838120222091675
    3. 'de' → logprob: -2.058812141418457
    4. '[' → logprob: -2.808812141418457
    5. ' list' → logprob: -4.183812141418457
    6. '[list' → logprob: -4.308812141418457
    7. ' du' → logprob: -4.433812141418457
    8. ' de' → logprob: -4.683812141418457
    9. 'est' → logprob: -6.808812141418457
    10. '#' → logprob: -7.058812141418457

Token 277: ' premier' (ID: 15506)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004070209339261055
    2. 'first' → logprob: -5.754070281982422
    3. '0' → logprob: -7.879070281982422
    4. 'prem' → logprob: -8.629070281982422
    5. ' list' → logprob: -9.004070281982422
    6. '[' → logprob: -9.129070281982422
    7. 'second' → logprob: -10.754070281982422
    8. 'input' → logprob: -11.004070281982422
    9. 'liste' → logprob: -11.379070281982422
    10. 'print' → logprob: -11.379070281982422

Token 278: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5857090353965759
    2. '[' → logprob: -1.4607090950012207
    3. 'element' → logprob: -1.7107090950012207
    4. ' élément' → logprob: -3.5857090950012207
    5. 'elem' → logprob: -7.085709095001221
    6. ' element' → logprob: -7.710709095001221
    7. 'list' → logprob: -7.835709095001221
    8. ']' → logprob: -8.085708618164062
    9. '[element' → logprob: -8.710708618164062
    10. 'int' → logprob: -8.710708618164062

Token 279: ' est' (ID: 893)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7019199728965759
    2. ' <=' → logprob: -1.0769200325012207
    3. '>=' → logprob: -3.3269200325012207
    4. '<' → logprob: -3.5769200325012207
    5. '[' → logprob: -3.5769200325012207
    6. '>' → logprob: -3.7019200325012207
    7. ' >=' → logprob: -3.8269200325012207
    8. ' <' → logprob: -4.576920032501221
    9. '==' → logprob: -4.951920032501221
    10. ' >' → logprob: -5.701920032501221

Token 280: ' strict' (ID: 12035)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.784820020198822
    2. '<=' → logprob: -1.1598200798034668
    3. '<' → logprob: -2.034820079803467
    4. '>' → logprob: -2.909820079803467
    5. ' >' → logprob: -3.784820079803467
    6. ' <' → logprob: -3.909820079803467
    7. 'inf' → logprob: -7.034820079803467
    8. 'strict' → logprob: -7.534820079803467
    9. ' inf' → logprob: -7.784820079803467
    10. '>=' → logprob: -8.909819602966309

Token 281: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00013929695705883205
    2. 'e' → logprob: -9.625139236450195
    3. 'ly' → logprob: -10.125139236450195
    4. '>' → logprob: -10.750139236450195
    5. 'ment' → logprob: -12.000139236450195
    6. 'lement' → logprob: -13.250139236450195
    7. '<' → logprob: -13.875139236450195
    8. 'emente' → logprob: -14.125139236450195
    9. 'ely' → logprob: -14.625139236450195
    10. 'ément' → logprob: -14.875139236450195

Token 282: ' supérieure' (ID: 106336)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.43042102456092834
    2. ' <' → logprob: -1.555420994758606
    3. ' inf' → logprob: -2.6804211139678955
    4. 'inf' → logprob: -3.3054211139678955
    5. '>' → logprob: -4.055420875549316
    6. ' inférieur' → logprob: -4.930420875549316
    7. ' >' → logprob: -5.305420875549316
    8. 'infer' → logprob: -6.430420875549316
    9. ' supérieure' → logprob: -7.055420875549316
    10. ' less' → logprob: -7.805420875549316

Token 283: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3531472980976105
    2. 'à' → logprob: -1.228147268295288
    3. '   ' → logprob: -6.103147506713867
    4. '5' → logprob: -7.103147506713867
    5. '6' → logprob: -7.603147506713867
    6. 'to' → logprob: -8.228147506713867
    7. 'a' → logprob: -8.978147506713867
    8. 'au' → logprob: -8.978147506713867
    9. ' to' → logprob: -9.103147506713867
    10. '```' → logprob: -9.228147506713867

Token 284: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008106979075819254
    2. ' ' → logprob: -7.125810623168945
    3. '7' → logprob: -12.875810623168945
    4. '10' → logprob: -13.625810623168945
    5. '6' → logprob: -14.000810623168945
    6. '8' → logprob: -14.125810623168945
    7. '9' → logprob: -14.250810623168945
    8. '11' → logprob: -16.500810623168945
    9. '2' → logprob: -16.625810623168945
    10. '
' → logprob: -17.250810623168945

Token 285: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0010001786286011338
    2. '10' → logprob: -7.50100040435791
    3. '7' → logprob: -8.75100040435791
    4. ' ' → logprob: -9.12600040435791
    5. '8' → logprob: -9.62600040435791
    6. '9' → logprob: -9.75100040435791
    7. '6' → logprob: -10.00100040435791
    8. '11' → logprob: -12.37600040435791
    9. '2' → logprob: -13.25100040435791
    10. '3' → logprob: -13.62600040435791

Token 286: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21607272326946259
    2. '   ' → logprob: -2.3410727977752686
    3. ':
' → logprob: -2.3410727977752686
    4. ',' → logprob: -7.2160725593566895
    5. ' and' → logprob: -7.3410725593566895
    6. 'print' → logprob: -8.966073036193848
    7. 'and' → logprob: -8.966073036193848
    8. ' :' → logprob: -9.466073036193848
    9. ' :
' → logprob: -9.591073036193848
    10. ' print' → logprob: -10.841073036193848

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013897618278861046
    2. 'print' → logprob: -4.38889741897583
    3. ' print' → logprob: -6.63889741897583
    4. '       ' → logprob: -10.138897895812988
    5. '   ' → logprob: -10.763897895812988
    6. '	print' → logprob: -12.513897895812988
    7. '    ' → logprob: -12.763897895812988
    8. ' for' → logprob: -13.138897895812988
    9. 'for' → logprob: -13.138897895812988
    10. '  ' → logprob: -13.888897895812988

Token 288: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15710535645484924
    2. 'print' → logprob: -2.1571054458618164
    3. ' print' → logprob: -3.5321054458618164
    4. '    ' → logprob: -8.907105445861816
    5. '       ' → logprob: -8.907105445861816
    6. '   ' → logprob: -9.907105445861816
    7. '	print' → logprob: -10.407105445861816
    8. '    
' → logprob: -10.657105445861816
    9. '```' → logprob: -10.782105445861816
    10. '  ' → logprob: -11.157105445861816

Token 289: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.397878497838974
    2. '   ' → logprob: -1.1478785276412964
    3. ' print' → logprob: -4.522878646850586
    4. 'for' → logprob: -10.022878646850586
    5. '```' → logprob: -11.522878646850586
    6. 'if' → logprob: -11.772878646850586
    7. '       ' → logprob: -12.147878646850586
    8. '	print' → logprob: -12.272878646850586
    9. ' for' → logprob: -12.772878646850586
    10. ' ' → logprob: -12.897878646850586

Token 290: ' effect' (ID: 3159)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5843746066093445
    2. 'print' → logprob: -0.8343746066093445
    3. '   ' → logprob: -4.83437442779541
    4. '    ' → logprob: -9.08437442779541
    5. ' for' → logprob: -9.33437442779541
    6. ' ' → logprob: -9.95937442779541
    7. '  ' → logprob: -10.20937442779541
    8. 'for' → logprob: -10.20937442779541
    9. 'pr' → logprob: -10.70937442779541
    10. '	print' → logprob: -10.95937442779541

Token 291: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -6.392202976712724e-06
    2. 'u' → logprob: -13.125006675720215
    3. 'uera' → logprob: -13.500006675720215
    4. 'uez' → logprob: -14.125006675720215
    5. 'uie' → logprob: -14.625006675720215
    6. 'ues' → logprob: -14.750006675720215
    7. 'uer' → logprob: -15.000006675720215
    8. 'print' → logprob: -15.500006675720215
    9. 'e' → logprob: -15.750006675720215
    10. 'uate' → logprob: -15.875006675720215

Token 292: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14856700599193573
    2. ' print' → logprob: -2.398566961288452
    3. '   ' → logprob: -3.148566961288452
    4. 'list' → logprob: -6.273567199707031
    5. ' list' → logprob: -7.273567199707031
    6. ' une' → logprob: -7.398567199707031
    7. ' la' → logprob: -7.398567199707031
    8. 'la' → logprob: -9.273567199707031
    9. '(list' → logprob: -9.898567199707031
    10. ' un' → logprob: -10.023567199707031

Token 293: ' division' (ID: 21629)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01613747701048851
    2. ' print' → logprob: -4.516137599945068
    3. 'for' → logprob: -5.641137599945068
    4. 's' → logprob: -7.766137599945068
    5. ' somme' → logprob: -8.14113712310791
    6. ' for' → logprob: -8.39113712310791
    7. 'sum' → logprob: -9.39113712310791
    8. '   ' → logprob: -9.51613712310791
    9. 'prin' → logprob: -9.64113712310791
    10. 'som' → logprob: -10.14113712310791

Token 294: ' entière' (ID: 61583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.971308708190918
    2. '   ' → logprob: -1.096308708190918
    3. '=' → logprob: -2.471308708190918
    4. ' (' → logprob: -2.846308708190918
    5. '(' → logprob: -2.971308708190918
    6. 'list' → logprob: -3.971308708190918
    7. '(list' → logprob: -3.971308708190918
    8. ',' → logprob: -4.096308708190918
    9. ' list' → logprob: -4.221308708190918
    10. '()' → logprob: -5.346308708190918

Token 295: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3223733603954315
    2. 'list' → logprob: -2.697373390197754
    3. 'print' → logprob: -2.947373390197754
    4. ' list' → logprob: -3.197373390197754
    5. ' =' → logprob: -3.197373390197754
    6. ' (' → logprob: -3.822373390197754
    7. ',' → logprob: -3.947373390197754
    8. '=' → logprob: -4.822373390197754
    9. '(list' → logprob: -4.947373390197754
    10. ' print' → logprob: -5.322373390197754

Token 296: ' second' (ID: 3099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001754310796968639
    2. ' list' → logprob: -6.376754283905029
    3. 'print' → logprob: -9.876754760742188
    4. ' print' → logprob: -15.126754760742188
    5. 'int' → logprob: -15.251754760742188
    6. 'first' → logprob: -16.876754760742188
    7. '(list' → logprob: -17.001754760742188
    8. '1' → logprob: -17.126754760742188
    9. 'second' → logprob: -17.376754760742188
    10. 'input' → logprob: -17.376754760742188

Token 297: ' élément' (ID: 99627)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15716414153575897
    2. ' ' → logprob: -2.2821640968322754
    3. 'list' → logprob: -3.6571640968322754
    4. ' input' → logprob: -4.532164096832275
    5. ' element' → logprob: -6.782164096832275
    6. 'input' → logprob: -7.157164096832275
    7. ' int' → logprob: -7.282164096832275
    8. '  ' → logprob: -7.407164096832275
    9. 'int' → logprob: -7.657164096832275
    10. ' /' → logprob: -7.657164096832275

Token 298: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25551310181617737
    2. ',' → logprob: -2.1305131912231445
    3. ' par' → logprob: -3.2555131912231445
    4. ' list' → logprob: -4.2555131912231445
    5. ' //' → logprob: -4.2555131912231445
    6. 'list' → logprob: -4.3805131912231445
    7. '//' → logprob: -4.7555131912231445
    8. ' by' → logprob: -5.6305131912231445
    9. ' ' → logprob: -5.6305131912231445
    10. ')' → logprob: -5.7555131912231445

Token 299: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1555609256029129
    2. ' list' → logprob: -2.0305609703063965
    3. '2' → logprob: -4.4055609703063965
    4. ' ' → logprob: -8.280560493469238
    5. '3' → logprob: -9.280560493469238
    6. '10' → logprob: -9.905560493469238
    7. '13' → logprob: -10.155560493469238
    8. '12' → logprob: -10.405560493469238
    9. '7' → logprob: -10.780560493469238
    10. '4' → logprob: -10.905560493469238

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.611859142780304
    2. 'list' → logprob: -0.861859142780304
    3. '3' → logprob: -3.861859083175659
    4. '4' → logprob: -5.611859321594238
    5. '6' → logprob: -5.861859321594238
    6. '12' → logprob: -6.486859321594238
    7. '13' → logprob: -6.486859321594238
    8. '10' → logprob: -6.861859321594238
    9. '5' → logprob: -6.986859321594238
    10. '8' → logprob: -7.111859321594238

Token 301: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008783325552940369
    2. ',' → logprob: -5.008783340454102
    3. ')' → logprob: -7.008783340454102
    4. ')
' → logprob: -7.758783340454102
    5. 'print' → logprob: -7.883783340454102
    6. ',
' → logprob: -9.383783340454102
    7. '.' → logprob: -10.133783340454102
    8. '    
' → logprob: -10.133783340454102
    9. '
' → logprob: -10.258783340454102
    10. '),' → logprob: -10.633783340454102

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.463036435074173e-05
    2. 'print' → logprob: -11.375024795532227
    3. ' print' → logprob: -11.875024795532227
    4. '   ' → logprob: -13.000024795532227
    5. '```' → logprob: -13.125024795532227
    6. '       ' → logprob: -14.125024795532227
    7. '    
' → logprob: -14.625024795532227
    8. ',' → logprob: -15.250024795532227
    9. '
' → logprob: -15.500024795532227
    10. '	print' → logprob: -16.625024795532227

Token 303: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004895246587693691
    2. 'print' → logprob: -5.754895210266113
    3. ' print' → logprob: -6.379895210266113
    4. '    
' → logprob: -12.254895210266113
    5. '   ' → logprob: -12.254895210266113
    6. '```' → logprob: -12.379895210266113
    7. '
' → logprob: -12.754895210266113
    8. '       ' → logprob: -12.879895210266113
    9. '	print' → logprob: -14.504895210266113
    10. '    ' → logprob: -15.379895210266113

Token 304: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07437101006507874
    2. 'print' → logprob: -2.824371099472046
    3. ' print' → logprob: -4.449370861053467
    4. '
' → logprob: -8.074371337890625
    5. '    
' → logprob: -8.574371337890625
    6. '\n' → logprob: -10.074371337890625
    7. '```' → logprob: -11.074371337890625
    8. '       ' → logprob: -11.199371337890625
    9. '   ' → logprob: -11.199371337890625
    10. '	print' → logprob: -11.574371337890625

Token 305: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4320022165775299
    2. ' print' → logprob: -1.4320021867752075
    3. 'result' → logprob: -2.557002305984497
    4. ' result' → logprob: -3.432002305984497
    5. ' ' → logprob: -7.432002067565918
    6. ' second' → logprob: -7.932002067565918
    7. 'second' → logprob: -8.557002067565918
    8. ' resultat' → logprob: -8.557002067565918
    9. ' résultat' → logprob: -9.307002067565918
    10. ' list' → logprob: -9.557002067565918

Token 306: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24889187514781952
    2. '=' → logprob: -1.623891830444336
    3. 'print' → logprob: -4.498891830444336
    4. ' est' → logprob: -5.248891830444336
    5. ',' → logprob: -6.123891830444336
    6. ')' → logprob: -6.123891830444336
    7. ' print' → logprob: -7.498891830444336
    8. '=list' → logprob: -7.498891830444336
    9. ' ' → logprob: -8.498891830444336
    10. 's' → logprob: -8.498891830444336

Token 307: ' convert' (ID: 8452)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6658536195755005
    2. 'print' → logprob: -1.1658536195755005
    3. ' list' → logprob: -1.7908536195755005
    4. 'list' → logprob: -5.665853500366211
    5. ' printed' → logprob: -5.790853500366211
    6. ' ' → logprob: -8.415853500366211
    7. ' displayed' → logprob: -8.415853500366211
    8. ')' → logprob: -9.040853500366211
    9. '   ' → logprob: -9.040853500366211
    10. '    ' → logprob: -9.540853500366211

Token 308: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006012882222421467
    2. ' en' → logprob: -8.500600814819336
    3. 'int' → logprob: -9.125600814819336
    4. 'it' → logprob: -9.250600814819336
    5. ' i' → logprob: -9.875600814819336
    6. 'ie' → logprob: -10.250600814819336
    7. '=' → logprob: -10.750600814819336
    8. ' int' → logprob: -11.000600814819336
    9. '(i' → logprob: -11.000600814819336
    10. 'ir' → logprob: -12.125600814819336

Token 309: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5338388681411743
    2. 'en' → logprob: -0.9088388681411743
    3. 'int' → logprob: -5.783838748931885
    4. '(int' → logprob: -6.408838748931885
    5. '()' → logprob: -6.408838748931885
    6. 'print' → logprob: -7.033838748931885
    7. '(' → logprob: -7.158838748931885
    8. ' ' → logprob: -7.533838748931885
    9. ')' → logprob: -7.658838748931885
    10. 'list' → logprob: -7.783838748931885

Token 310: ' entier' (ID: 80473)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7107909321784973
    2. ' int' → logprob: -1.8357908725738525
    3. 'int' → logprob: -1.9607908725738525
    4. ' str' → logprob: -1.9607908725738525
    5. ' string' → logprob: -3.0857908725738525
    6. 'string' → logprob: -4.585791110992432
    7. 'chaine' → logprob: -5.335791110992432
    8. ' chaîne' → logprob: -6.210791110992432
    9. ' entier' → logprob: -6.335791110992432
    10. ' chaine' → logprob: -6.585791110992432

Token 311: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8856425285339355
    2. ',' → logprob: -1.1356425285339355
    3. 'int' → logprob: -2.2606425285339355
    4. '   ' → logprob: -2.8856425285339355
    5. '()' → logprob: -3.5106425285339355
    6. '(int' → logprob: -3.7606425285339355
    7. '(' → logprob: -4.2606425285339355
    8. ')' → logprob: -5.0106425285339355
    9. ' =' → logprob: -5.1356425285339355
    10. '=' → logprob: -5.3856425285339355

Token 312: 'm' (ID: 76)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3154371976852417
    2. ')' → logprob: -1.4404371976852417
    3. 'print' → logprob: -3.9404373168945312
    4. ' int' → logprob: -5.315437316894531
    5. ' )' → logprob: -5.565437316894531
    6. '   ' → logprob: -6.065437316894531
    7. 'list' → logprob: -6.440437316894531
    8. '```' → logprob: -8.190437316894531
    9. '  ' → logprob: -8.815437316894531
    10. '    ' → logprob: -8.940437316894531

Token 313: 'ême' (ID: 7961)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0085333585739136
    2. 'nt' → logprob: -1.3835333585739136
    3. 'print' → logprob: -1.3835333585739136
    4. 't' → logprob: -2.633533477783203
    5. '```' → logprob: -3.508533477783203
    6. '=int' → logprob: -4.133533477783203
    7. ')' → logprob: -5.883533477783203
    8. '(int' → logprob: -5.883533477783203
    9. '   ' → logprob: -6.133533477783203
    10. 'list' → logprob: -6.133533477783203

Token 314: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1421741396188736
    2. 'int' → logprob: -2.767174243927002
    3. ' )' → logprob: -3.642174243927002
    4. ' type' → logprob: -4.767174243927002
    5. 'print' → logprob: -4.892174243927002
    6. 'type' → logprob: -4.892174243927002
    7. ' int' → logprob: -5.142174243927002
    8. '#' → logprob: -5.517174243927002
    9. 'list' → logprob: -6.267174243927002
    10. ' ' → logprob: -6.642174243927002

Token 315: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.39246898889541626
    2. 'int' → logprob: -1.6424689292907715
    3. ' list' → logprob: -2.6424689292907715
    4. '//' → logprob: -4.2674689292907715
    5. ')' → logprob: -4.6424689292907715
    6. ' ' → logprob: -5.5174689292907715
    7. 'print' → logprob: -5.6424689292907715
    8. ' la' → logprob: -6.0174689292907715
    9. ' the' → logprob: -6.1424689292907715
    10. 'l' → logprob: -6.1424689292907715

Token 316: ' division' (ID: 21629)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.34921029210090637
    2. '/' → logprob: -2.099210262298584
    3. '#' → logprob: -3.099210262298584
    4. ' /' → logprob: -3.349210262298584
    5. 'print' → logprob: -3.724210262298584
    6. ' division' → logprob: -4.099210262298584
    7. ' //' → logprob: -4.349210262298584
    8. 'division' → logprob: -4.724210262298584
    9. 'list' → logprob: -5.099210262298584
    10. ' list' → logprob: -5.224210262298584

Token 317: ' avec' (ID: 3937)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.12890243530273438
    2. ' //' → logprob: -2.5039024353027344
    3. ')' → logprob: -4.253902435302734
    4. '<|end|>' → logprob: -4.753902435302734
    5. ' entière' → logprob: -5.503902435302734
    6. 'int' → logprob: -6.253902435302734
    7. ' integer' → logprob: -6.503902435302734
    8. '/' → logprob: -6.878902435302734
    9. ' />' → logprob: -7.128902435302734
    10. ' ' → logprob: -7.128902435302734

Token 318: ' '/'' (ID: 39443)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11850276589393616
    2. '/' → logprob: -2.7435028553009033
    3. ' //' → logprob: -3.6185028553009033
    4. ' /' → logprob: -4.118502616882324
    5. ')' → logprob: -6.493502616882324
    6. ' ' → logprob: -7.118502616882324
    7. '<|end|>' → logprob: -7.118502616882324
    8. ''' → logprob: -8.868502616882324
    9. '```' → logprob: -9.118502616882324
    10. '`' → logprob: -9.368502616882324

Token 319: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06890758872032166
    2. '<|end|>' → logprob: -3.6939074993133545
    3. '/' → logprob: -3.9439074993133545
    4. '//' → logprob: -4.818907737731934
    5. ' )' → logprob: -5.943907737731934
    6. 'int' → logprob: -6.068907737731934
    7. '<|end|>' → logprob: -6.943907737731934
    8. ' /' → logprob: -7.068907737731934
    9. '),' → logprob: -7.193907737731934
    10. '2' → logprob: -7.193907737731934

Token 320: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3188878297805786
    2. ')' → logprob: -1.5688878297805786
    3. '//' → logprob: -1.5688878297805786
    4. 'list' → logprob: -2.318887710571289
    5. ' //' → logprob: -2.568887710571289
    6. ' ' → logprob: -3.443887710571289
    7. ''' → logprob: -3.568887710571289
    8. ' list' → logprob: -3.693887710571289
    9. ' /' → logprob: -4.568887710571289
    10. '"' → logprob: -5.068887710571289

Token 321: ' flott' (ID: 108700)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1875055432319641
    2. 'float' → logprob: -2.4375054836273193
    3. ' /' → logprob: -3.4375054836273193
    4. 'int' → logprob: -3.6875054836273193
    5. ' float' → logprob: -4.687505722045898
    6. ')' → logprob: -5.312505722045898
    7. 'space' → logprob: -5.687505722045898
    8. '.' → logprob: -6.187505722045898
    9. ' ' → logprob: -6.437505722045898
    10. '//' → logprob: -6.687505722045898

Token 322: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.1857335567474365
    2. 'int' → logprob: -1.1857335567474365
    3. 'ant' → logprob: -1.8107335567474365
    4. 'e' → logprob: -2.0607335567474365
    5. 'i' → logprob: -3.8107335567474365
    6. '/' → logprob: -3.8107335567474365
    7. 'y' → logprob: -3.8107335567474365
    8. 'ier' → logprob: -5.310733795166016
    9. ')' → logprob: -5.435733795166016
    10. 'o' → logprob: -5.810733795166016

Token 323: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007703518494963646
    2. '),' → logprob: -6.0077033042907715
    3. ',' → logprob: -6.1327033042907715
    4. '<|end|>' → logprob: -6.6327033042907715
    5. ' )' → logprob: -6.8827033042907715
    6. ').' → logprob: -8.00770378112793
    7. '   ' → logprob: -9.75770378112793
    8. 'int' → logprob: -9.88270378112793
    9. '')' → logprob: -10.50770378112793
    10. ' ,' → logprob: -10.63270378112793

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09886745363473892
    2. 'int' → logprob: -2.973867416381836
    3. ' int' → logprob: -3.598867416381836
    4. '    ' → logprob: -4.348867416381836
    5. ' print' → logprob: -7.223867416381836
    6. ')' → logprob: -7.473867416381836
    7. 'print' → logprob: -7.848867416381836
    8. ' list' → logprob: -8.098867416381836
    9. 'list' → logprob: -9.098867416381836
    10. ',' → logprob: -9.473867416381836

Token 325: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02686481364071369
    2. 'print' → logprob: -4.276865005493164
    3. 'int' → logprob: -4.651865005493164
    4. ' print' → logprob: -6.401865005493164
    5. ' int' → logprob: -7.526865005493164
    6. '    ' → logprob: -7.526865005493164
    7. '   ' → logprob: -9.651865005493164
    8. '    
' → logprob: -10.026865005493164
    9. ')' → logprob: -10.151865005493164
    10. '  ' → logprob: -10.401865005493164

Token 326: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019155029207468033
    2. 'print' → logprob: -4.769155025482178
    3. ' print' → logprob: -5.269155025482178
    4. '    ' → logprob: -6.019155025482178
    5. 'int' → logprob: -6.144155025482178
    6. ' int' → logprob: -8.144155502319336
    7. '  ' → logprob: -9.394155502319336
    8. ' ' → logprob: -9.769155502319336
    9. ')' → logprob: -9.894155502319336
    10. '   ' → logprob: -9.894155502319336

Token 327: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8728772401809692
    2. ' print' → logprob: -0.8728772401809692
    3. 'int' → logprob: -2.4978771209716797
    4. ' int' → logprob: -3.3728771209716797
    5. ' list' → logprob: -3.7478771209716797
    6. ')' → logprob: -4.49787712097168
    7. 'list' → logprob: -4.62287712097168
    8. ' ' → logprob: -6.74787712097168
    9. '    ' → logprob: -7.62287712097168
    10. ' )' → logprob: -7.87287712097168

Token 328: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006979748606681824
    2. 'e' → logprob: -5.881979942321777
    3. 'ée' → logprob: -5.881979942321777
    4. 'print' → logprob: -6.881979942321777
    5. 'list' → logprob: -8.881979942321777
    6. 'int' → logprob: -10.006979942321777
    7. '()' → logprob: -10.006979942321777
    8. ')' → logprob: -10.881979942321777
    9. 'er' → logprob: -10.881979942321777
    10. '(int' → logprob: -11.131979942321777

Token 329: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04532046616077423
    2. ',' → logprob: -3.920320510864258
    3. 'print' → logprob: -4.420320510864258
    4. ')' → logprob: -5.795320510864258
    5. 'int' → logprob: -5.795320510864258
    6. ')
' → logprob: -6.795320510864258
    7. '.' → logprob: -6.920320510864258
    8. 'list' → logprob: -6.920320510864258
    9. '(int' → logprob: -7.795320510864258
    10. '(list' → logprob: -8.170320510864258

Token 330: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011267566122114658
    2. ' print' → logprob: -4.51126766204834
    3. 'int' → logprob: -8.88626766204834
    4. ')' → logprob: -10.26126766204834
    5. '```' → logprob: -10.63626766204834
    6. ' ' → logprob: -11.26126766204834
    7. '   ' → logprob: -12.88626766204834
    8. ' la' → logprob: -13.38626766204834
    9. ' int' → logprob: -13.38626766204834
    10. 'pr' → logprob: -14.26126766204834

Token 331: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04303709790110588
    2. ' print' → logprob: -3.168037176132202
    3. 'space' → logprob: -10.918037414550781
    4. '`' → logprob: -12.043037414550781
    5. '```' → logprob: -12.043037414550781
    6. ' space' → logprob: -13.418037414550781
    7. 'int' → logprob: -13.543037414550781
    8. '#' → logprob: -13.668037414550781
    9. ')' → logprob: -13.918037414550781
    10. 'pr' → logprob: -14.668037414550781

Token 332: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.313273549079895
    2. ' print' → logprob: -1.313273549079895
    3. '(print' → logprob: -11.438273429870605
    4. 'int' → logprob: -14.313273429870605
    5. ' int' → logprob: -15.938273429870605
    6. '`' → logprob: -16.688274383544922
    7. '```' → logprob: -16.813274383544922
    8. '(' → logprob: -17.313274383544922
    9. '	print' → logprob: -17.938274383544922
    10. '.print' → logprob: -18.188274383544922

Token 333: '().
' (ID: 58434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021711974404752254
    2. ')' → logprob: -7.252171039581299
    3. '.' → logprob: -7.877171039581299
    4. ',' → logprob: -8.127171516418457
    5. 'print' → logprob: -8.252171516418457
    6. 'int' → logprob: -9.127171516418457
    7. '(int' → logprob: -9.752171516418457
    8. '(list' → logprob: -9.752171516418457
    9. ':' → logprob: -9.877171516418457
    10. 'list' → logprob: -10.127171516418457

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014180023572407663
    2. 'print' → logprob: -9.000142097473145
    3. ' print' → logprob: -11.250142097473145
    4. '   ' → logprob: -12.375142097473145
    5. '```' → logprob: -14.500142097473145
    6. '       ' → logprob: -14.875142097473145
    7. '  ' → logprob: -16.250141143798828
    8. '   ' → logprob: -16.625141143798828
    9. '    
' → logprob: -17.125141143798828
    10. '    ' → logprob: -17.375141143798828

Token 335: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3150857388973236
    2. '   ' → logprob: -1.315085768699646
    3. ' print' → logprob: -6.3150858879089355
    4. '```' → logprob: -12.690085411071777
    5. '	print' → logprob: -12.940085411071777
    6. ' ' → logprob: -12.940085411071777
    7. '  ' → logprob: -13.065085411071777
    8. '       ' → logprob: -13.440085411071777
    9. '   ' → logprob: -14.565085411071777
    10. '    
' → logprob: -14.690085411071777

Token 336: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02898498810827732
    2. 'int' → logprob: -3.778985023498535
    3. '(list' → logprob: -5.403985023498535
    4. '(' → logprob: -7.028985023498535
    5. ' int' → logprob: -8.278985023498535
    6. 'list' → logprob: -9.528985023498535
    7. ' (' → logprob: -11.653985023498535
    8. '(str' → logprob: -13.903985023498535
    9. '	int' → logprob: -14.653985023498535
    10. '((' → logprob: -15.028985023498535

Token 337: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.000763883872423321
    2. '(' → logprob: -7.250763893127441
    3. ' (' → logprob: -10.375763893127441
    4. '((' → logprob: -11.375763893127441
    5. 'list' → logprob: -11.625763893127441
    6. ')' → logprob: -14.125763893127441
    7. '(int' → logprob: -15.250763893127441
    8. '(len' → logprob: -15.875763893127441
    9. ' list' → logprob: -16.125762939453125
    10. ',list' → logprob: -16.125762939453125

Token 338: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.6240566083070007e-06
    2. 'int' → logprob: -14.125001907348633
    3. '[' → logprob: -14.875001907348633
    4. 'Ints' → logprob: -15.000001907348633
    5. '[Int' → logprob: -17.625001907348633
    6. '[int' → logprob: -17.875001907348633
    7. 'In' → logprob: -18.250001907348633
    8. 'Input' → logprob: -18.750001907348633
    9. '_int' → logprob: -19.000001907348633
    10. ' Int' → logprob: -19.500001907348633

Token 339: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. ' [' → logprob: -14.000001907348633
    3. '1' → logprob: -15.125001907348633
    4. ')' → logprob: -15.250001907348633
    5. ')[' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '```' → logprob: -16.750001907348633
    8. '#' → logprob: -17.375001907348633
    9. '/' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.875001907348633

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020628207130357623
    2. '[' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.875205993652344
    5. '```' → logprob: -15.625205993652344
    6. '2' → logprob: -15.875205993652344
    7. '][' → logprob: -16.875205993652344
    8. '0' → logprob: -17.000205993652344
    9. '(' → logprob: -17.250205993652344
    10. '-' → logprob: -17.875205993652344

Token 341: ']' (ID: 60)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0583503432571888
    2. ' /' → logprob: -3.5583503246307373
    3. ']' → logprob: -4.433350563049316
    4. ')' → logprob: -4.433350563049316
    5. '[' → logprob: -5.433350563049316
    6. '   ' → logprob: -11.183350563049316
    7. '()' → logprob: -11.808350563049316
    8. ')/' → logprob: -11.933350563049316
    9. ']/' → logprob: -12.058350563049316
    10. '[]' → logprob: -12.058350563049316

Token 342: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10161860287189484
    2. ' /' → logprob: -2.601618528366089
    3. ')' → logprob: -3.851618528366089
    4. '))' → logprob: -7.351618766784668
    5. '[' → logprob: -7.726618766784668
    6. '   ' → logprob: -10.101618766784668
    7. ']' → logprob: -10.601618766784668
    8. ''' → logprob: -11.351618766784668
    9. ' ' → logprob: -11.351618766784668
    10. ' )' → logprob: -11.476618766784668

Token 343: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.625431060791016
    4. '  ' → logprob: -15.750431060791016
    5. '```' → logprob: -15.750431060791016
    6. '
' → logprob: -17.625431060791016
    7. ')' → logprob: -17.937931060791016
    8. '۲' → logprob: -18.062931060791016
    9. '    ' → logprob: -18.687931060791016
    10. ' ' → logprob: -18.750431060791016

Token 344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.6250581741333
    4. '  ' → logprob: -16.875059127807617
    5. '```' → logprob: -17.875059127807617
    6. '۲' → logprob: -18.437559127807617
    7. '3' → logprob: -18.625059127807617
    8. '1' → logprob: -18.812559127807617
    9. ')' → logprob: -18.937559127807617
    10. '２' → logprob: -19.125059127807617

Token 345: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005947640631347895
    2. ')' → logprob: -5.130947589874268
    3. '))
' → logprob: -11.005948066711426
    4. ')))' → logprob: -13.630948066711426
    5. ' ))' → logprob: -14.255948066711426
    6. ')
' → logprob: -15.255948066711426
    7. '()))' → logprob: -16.50594711303711
    8. ''))' → logprob: -16.63094711303711
    9. '),' → logprob: -17.38094711303711
    10. '))

' → logprob: -17.38094711303711

Token 346: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00011319868644932285
    2. 'elif' → logprob: -9.125113487243652
    3. ' else' → logprob: -12.375113487243652
    4. '```' → logprob: -17.000112533569336
    5. '_else' → logprob: -18.750112533569336
    6. 'elser' → logprob: -19.625112533569336
    7. '#else' → logprob: -19.750112533569336
    8. 'elses' → logprob: -19.875112533569336
    9. 'els' → logprob: -20.000112533569336
    10. '}else' → logprob: -20.250112533569336

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023330966010689735
    2. ':
' → logprob: -3.7733309268951416
    3. '   ' → logprob: -9.398330688476562
    4. ' :' → logprob: -13.273330688476562
    5. ' :
' → logprob: -14.523330688476562
    6. ':
' → logprob: -15.898330688476562
    7. ':

' → logprob: -16.148330688476562
    8. '{' → logprob: -17.148330688476562
    9. '=' → logprob: -17.398330688476562
    10. 'print' → logprob: -17.398330688476562

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25198522210121155
    2. 'print' → logprob: -1.5019851922988892
    3. ' print' → logprob: -9.876985549926758
    4. '	print' → logprob: -12.501985549926758
    5. '```' → logprob: -14.876985549926758
    6. '   ' → logprob: -15.126985549926758
    7. ' ' → logprob: -16.126985549926758
    8. '       ' → logprob: -16.376985549926758
    9. '  ' → logprob: -16.376985549926758
    10. '    ' → logprob: -17.876985549926758

Token 349: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. '   ' → logprob: -12.375005722045898
    3. ' print' → logprob: -13.625005722045898
    4. '	print' → logprob: -18.3750057220459
    5. '#' (adapté à ' #') → logprob: -18.5000057220459
    6. '```' → logprob: -18.5000057220459
    7. 'pass' → logprob: -18.7500057220459
    8. 'for' → logprob: -18.7500057220459
    9. '#print' → logprob: -20.1250057220459
    10. '0' → logprob: -20.1250057220459

Token 350: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7372048862162046e-05
    2. '   ' → logprob: -11.250027656555176
    3. ' print' → logprob: -11.250027656555176
    4. '#' → logprob: -15.000027656555176
    5. 'for' → logprob: -15.000027656555176
    6. 'if' → logprob: -15.125027656555176
    7. ' ' → logprob: -16.12502670288086
    8. 'pass' → logprob: -16.62502670288086
    9. '  ' → logprob: -16.87502670288086
    10. '	print' → logprob: -17.37502670288086

Token 351: ' aucune' (ID: 51173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001312617096118629
    2. '   ' → logprob: -7.376312732696533
    3. 'list' → logprob: -8.001312255859375
    4. ' print' → logprob: -8.001312255859375
    5. 'int' → logprob: -12.126312255859375
    6. '  ' → logprob: -12.626312255859375
    7. ' list' → logprob: -13.126312255859375
    8. '    ' → logprob: -13.501312255859375
    9. 'len' → logprob: -14.126312255859375
    10. ':' → logprob: -14.251312255859375

Token 352: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2612950801849365
    2. ':' → logprob: -2.2612950801849365
    3. '   ' → logprob: -2.5112950801849365
    4. ' print' → logprob: -3.6362950801849365
    5. ':
' → logprob: -4.136295318603516
    6. 'list' → logprob: -6.636295318603516
    7. ' list' → logprob: -8.886295318603516
    8. '(list' → logprob: -9.011295318603516
    9. '(print' → logprob: -9.136295318603516
    10. 'de' → logprob: -9.386295318603516

Token 353: ' deux' (ID: 10301)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.30074065923690796
    2. 'condition' → logprob: -1.4257407188415527
    3. ' conditions' → logprob: -4.675740718841553
    4. 'cond' → logprob: -4.925740718841553
    5. ' deux' → logprob: -6.925740718841553
    6. '2' → logprob: -7.425740718841553
    7. ' condition' → logprob: -8.425740242004395
    8. 'de' → logprob: -8.800740242004395
    9. 'des' → logprob: -8.925740242004395
    10. ' ' → logprob: -8.925740242004395

Token 354: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.0038754926063120365
    2. ' conditions' → logprob: -6.253875255584717
    3. 'condition' → logprob: -6.753875255584717
    4. 'cond' → logprob: -7.503875255584717
    5. ':' → logprob: -8.503875732421875
    6. '   ' → logprob: -11.253875732421875
    7. '_conditions' → logprob: -12.878875732421875
    8. 'instructions' → logprob: -13.003875732421875
    9. '#' → logprob: -13.503875732421875
    10. '.conditions' → logprob: -13.878875732421875

Token 355: ' précéd' (ID: 55435)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8302005529403687
    2. ':' → logprob: -1.2052005529403687
    3. ' n' → logprob: -1.7052005529403687
    4. '   ' → logprob: -2.830200672149658
    5. ':
' → logprob: -3.955200672149658
    6. 'est' → logprob: -6.080200672149658
    7. ' est' → logprob: -6.955200672149658
    8. 'print' → logprob: -7.080200672149658
    9. ':

' → logprob: -9.8302001953125
    10. ',' → logprob: -9.8302001953125

Token 356: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0013116634218022227
    2. 'ente' → logprob: -7.751311779022217
    3. 'ent' → logprob: -7.876311779022217
    4. 'n' → logprob: -8.251311302185059
    5. 'ents' → logprob: -8.876311302185059
    6. '   ' → logprob: -10.376311302185059
    7. 'es' → logprob: -10.376311302185059
    8. 'est' → logprob: -10.626311302185059
    9. 'ented' → logprob: -12.626311302185059
    10. ' n' → logprob: -12.751311302185059

Token 357: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054383501410484314
    2. ':
' → logprob: -3.0543835163116455
    3. '   ' → logprob: -5.179383277893066
    4. 'print' → logprob: -9.054383277893066
    5. ' print' → logprob: -11.554383277893066
    6. ' :' → logprob: -12.679383277893066
    7. ':

' → logprob: -12.679383277893066
    8. '==' → logprob: -12.804383277893066
    9. ',' → logprob: -12.804383277893066
    10. ':
' → logprob: -13.054383277893066

Token 358: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.25358468294143677
    2. ''est' → logprob: -1.503584623336792
    3. 'n' → logprob: -7.128584861755371
    4. '’est' → logprob: -7.878584861755371
    5. 'pas' → logprob: -8.503584861755371
    6. 'a' → logprob: -10.003584861755371
    7. '#' → logprob: -10.378584861755371
    8. 'ont' → logprob: -10.378584861755371
    9. ' est' → logprob: -10.378584861755371
    10. 'print' → logprob: -10.753584861755371

Token 359: ' respect' (ID: 5618)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.16480183601379395
    2. 'respect' → logprob: -1.914801836013794
    3. 'v' → logprob: -5.539801597595215
    4. 'rem' → logprob: -9.164801597595215
    5. ' respect' → logprob: -9.289801597595215
    6. 's' → logprob: -9.289801597595215
    7. 'ré' → logprob: -9.414801597595215
    8. 'True' → logprob: -9.539801597595215
    9. 'prise' → logprob: -10.164801597595215
    10. 'pass' → logprob: -10.289801597595215

Token 360: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.6755174398422241
    2. 'ée' → logprob: -1.3005174398422241
    3. 'ie' → logprob: -3.0505175590515137
    4. 'endue' → logprob: -3.4255175590515137
    5. 'ent' → logprob: -3.5505175590515137
    6. 'enue' → logprob: -3.6755175590515137
    7. 'entie' → logprob: -4.050517559051514
    8. 'ise' → logprob: -4.675517559051514
    9. 'uée' → logprob: -4.800517559051514
    10. 'ente' → logprob: -5.050517559051514

Token 361: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05696466565132141
    2. ':' → logprob: -3.056964635848999
    3. ':
' → logprob: -4.806964874267578
    4. 'print' → logprob: -9.056964874267578
    5. ',' → logprob: -10.056964874267578
    6. ' print' → logprob: -12.306964874267578
    7. '       ' → logprob: -13.181964874267578
    8. '   ' → logprob: -14.431964874267578
    9. ' :
' → logprob: -14.431964874267578
    10. '	print' → logprob: -14.681964874267578

Token 362: 'don' (ID: 22130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011141903698444366
    2. 'print' → logprob: -4.511141777038574
    3. ' print' → logprob: -9.636141777038574
    4. ')' → logprob: -11.636141777038574
    5. '
' → logprob: -11.636141777038574
    6. '#' → logprob: -12.511141777038574
    7. '    
' → logprob: -13.386141777038574
    8. '```' → logprob: -13.886141777038574
    9. '),' → logprob: -14.261141777038574
    10. '  ' → logprob: -14.386141777038574

Token 363: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6074495911598206
    2. 'c' → logprob: -1.4824495315551758
    3. 'e' → logprob: -1.4824495315551758
    4. 'é' → logprob: -8.607449531555176
    5. 'née' → logprob: -9.107449531555176
    6. 'ant' → logprob: -9.107449531555176
    7. '#' → logprob: -9.107449531555176
    8. 'nées' → logprob: -9.232449531555176
    9. 'ée' → logprob: -9.732449531555176
    10. 'r' → logprob: -10.107449531555176

Token 364: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3576681911945343
    2. 'print' → logprob: -1.607668161392212
    3. 'list' → logprob: -2.357668161392212
    4. ' list' → logprob: -6.232668399810791
    5. ':' → logprob: -6.482668399810791
    6. ':list' → logprob: -7.357668399810791
    7. '  ' → logprob: -7.857668399810791
    8. ' print' → logprob: -8.482667922973633
    9. '
' → logprob: -8.482667922973633
    10. '#' → logprob: -8.607667922973633

Token 365: ' le' (ID: 505)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00024048985505942255
    2. ' list' → logprob: -8.375240325927734
    3. 'True' → logprob: -11.875240325927734
    4. 'input' → logprob: -13.750240325927734
    5. 'not' → logprob: -14.750240325927734
    6. '5' → logprob: -14.750240325927734
    7. '   ' → logprob: -15.000240325927734
    8. ' True' → logprob: -15.375240325927734
    9. 'liste' → logprob: -16.500240325927734
    10. ' ' → logprob: -17.000240325927734

Token 366: ' premier' (ID: 15506)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007640030235052109
    2. 'first' → logprob: -8.250763893127441
    3. 'input' → logprob: -8.625763893127441
    4. ' list' → logprob: -9.000763893127441
    5. 'print' → logprob: -9.375763893127441
    6. '0' → logprob: -9.750763893127441
    7. 'prem' → logprob: -11.000763893127441
    8. 'int' → logprob: -11.750763893127441
    9. 'else' → logprob: -11.750763893127441
    10. 'len' → logprob: -11.875763893127441

Token 367: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5081998109817505
    2. 'element' → logprob: -1.3831998109817505
    3. 'list' → logprob: -2.008199691772461
    4. ' élément' → logprob: -4.633199691772461
    5. 'int' → logprob: -6.758199691772461
    6. 'elem' → logprob: -7.133199691772461
    7. 'nombre' → logprob: -7.258199691772461
    8. 'print' → logprob: -8.133199691772461
    9. '[' → logprob: -8.508199691772461
    10. 'liste' → logprob: -9.258199691772461

Token 368: ' est' (ID: 893)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13723637163639069
    2. ' <=' → logprob: -2.5122363567352295
    3. '<' → logprob: -3.3872363567352295
    4. '[' → logprob: -4.762236595153809
    5. ' est' → logprob: -6.512236595153809
    6. '>' → logprob: -7.137236595153809
    7. ')' → logprob: -7.262236595153809
    8. ' <' → logprob: -7.387236595153809
    9. 'est' → logprob: -7.762236595153809
    10. '   ' → logprob: -8.387236595153809

Token 369: ' inférieur' (ID: 191498)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5228385329246521
    2. 'inf' → logprob: -1.1478385925292969
    3. ' inférieur' → logprob: -2.522838592529297
    4. ' <=' → logprob: -5.147838592529297
    5. ' inf' → logprob: -6.647838592529297
    6. 'infer' → logprob: -7.147838592529297
    7. '5' → logprob: -7.522838592529297
    8. '<' → logprob: -7.897838592529297
    9. 'strict' → logprob: -8.772838592529297
    10. 'moins' → logprob: -8.772838592529297

Token 370: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.9268235564231873
    2. 'à' → logprob: -1.801823616027832
    3. 'ou' → logprob: -2.051823616027832
    4. ' à' → logprob: -2.176823616027832
    5. '   ' → logprob: -2.176823616027832
    6. ' or' → logprob: -3.426823616027832
    7. 'or' → logprob: -4.051823616027832
    8. '=' → logprob: -4.426823616027832
    9. '  ' → logprob: -5.051823616027832
    10. ')' → logprob: -5.676823616027832

Token 371: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.1391049474477768
    2. '=' → logprob: -2.8891048431396484
    3. 'ég' → logprob: -3.1391048431396484
    4. ' ég' → logprob: -4.014104843139648
    5. ' égal' → logprob: -4.764104843139648
    6. 'à' → logprob: -6.264104843139648
    7. 'egal' → logprob: -7.389104843139648
    8. 'eg' → logprob: -7.389104843139648
    9. 'égalité' → logprob: -7.639104843139648
    10. 'é' → logprob: -8.639104843139648

Token 372: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2603394091129303
    2. 'à' → logprob: -1.510339379310608
    3. '   ' → logprob: -5.760339260101318
    4. 'to' → logprob: -6.760339260101318
    5. '5' → logprob: -7.135339260101318
    6. '0' → logprob: -7.510339260101318
    7. '=' → logprob: -7.635339260101318
    8. ' to' → logprob: -7.635339260101318
    9. ')' → logprob: -7.885339260101318
    10. '10' → logprob: -8.635339736938477

Token 373: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001704102149233222
    2. ' ' → logprob: -6.376704216003418
    3. '10' → logprob: -15.126704216003418
    4. '  ' → logprob: -15.251704216003418
    5. '   ' → logprob: -15.314204216003418
    6. '3' → logprob: -15.689204216003418
    7. '6' → logprob: -15.751704216003418
    8. '2' → logprob: -16.0642032623291
    9. '```' → logprob: -16.0642032623291
    10. '7' → logprob: -16.3142032623291

Token 374: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. '10' → logprob: -15.750123977661133
    4. '```' → logprob: -16.312623977661133
    5. '3' → logprob: -16.437623977661133
    6. '2' → logprob: -16.562623977661133
    7. '1' → logprob: -17.000123977661133
    8. '6' → logprob: -17.125123977661133
    9. '7' → logprob: -17.250123977661133
    10. '  ' → logprob: -17.375123977661133

Token 375: '),
' (ID: 2313)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44320446252822876
    2. '):' → logprob: -1.693204402923584
    3. '):
' → logprob: -1.943204402923584
    4. '),' → logprob: -3.568204402923584
    5. ':' → logprob: -6.568204402923584
    6. ')' → logprob: -7.068204402923584
    7. ',' → logprob: -9.068204879760742
    8. ':
' → logprob: -9.318204879760742
    9. 'print' → logprob: -10.318204879760742
    10. ' ):
' → logprob: -10.443204879760742

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08915887773036957
    2. 'print' → logprob: -2.464158773422241
    3. ' print' → logprob: -8.46415901184082
    4. '       ' → logprob: -13.33915901184082
    5. '  ' → logprob: -13.33915901184082
    6. '	print' → logprob: -13.58915901184082
    7. ' ' → logprob: -13.71415901184082
    8. '```' → logprob: -14.08915901184082
    9. '    ' → logprob: -14.33915901184082
    10. '   ' → logprob: -14.46415901184082

Token 377: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5248023271560669
    2. '   ' → logprob: -0.8998023271560669
    3. ' print' → logprob: -6.399802207946777
    4. '	print' → logprob: -12.649802207946777
    5. '```' → logprob: -12.774802207946777
    6. '  ' → logprob: -12.899802207946777
    7. ' ' → logprob: -13.399802207946777
    8. '    ' → logprob: -13.649802207946777
    9. '       ' → logprob: -13.774802207946777
    10. '#' (adapté à ' #') → logprob: -13.774802207946777

Token 378: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.044127315282821655
    2. '   ' → logprob: -3.1691272258758545
    3. ' print' → logprob: -6.794127464294434
    4. '	print' → logprob: -13.294127464294434
    5. '  ' → logprob: -13.419127464294434
    6. ' ' → logprob: -13.669127464294434
    7. '#' → logprob: -14.169127464294434
    8. '    ' → logprob: -14.919127464294434
    9. 'pass' → logprob: -14.919127464294434
    10. '```' → logprob: -14.919127464294434

Token 379: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005294953938573599
    2. ' print' → logprob: -5.8802947998046875
    3. '   ' → logprob: -6.0052947998046875
    4. '  ' → logprob: -11.630294799804688
    5. ' ' → logprob: -11.880294799804688
    6. '	print' → logprob: -13.130294799804688
    7. '#' → logprob: -14.005294799804688
    8. '    ' → logprob: -14.630294799804688
    9. 'for' → logprob: -14.755294799804688
    10. 'raise' → logprob: -15.005294799804688

Token 380: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07881972193717957
    2. '0' → logprob: -2.953819751739502
    3. 'int' → logprob: -4.078819751739502
    4. '(list' → logprob: -5.953819751739502
    5. '(' → logprob: -6.203819751739502
    6. ' list' → logprob: -6.828819751739502
    7. '(int' → logprob: -7.953819751739502
    8. '1' → logprob: -8.703819274902344
    9. 'len' → logprob: -9.203819274902344
    10. 'print' → logprob: -9.453819274902344

Token 381: ' valeur' (ID: 41664)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.040767692029476166
    2. '0' → logprob: -3.5407676696777344
    3. 'int' → logprob: -5.290767669677734
    4. 'print' → logprob: -5.415767669677734
    5. 'first' → logprob: -7.165767669677734
    6. 'second' → logprob: -8.790767669677734
    7. ' list' → logprob: -8.915767669677734
    8. '1' → logprob: -9.415767669677734
    9. 'input' → logprob: -9.415767669677734
    10. 'sum' → logprob: -10.040767669677734

Token 382: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023279258981347084
    2. '[' → logprob: -4.273279190063477
    3. 'int' → logprob: -5.773279190063477
    4. ' list' → logprob: -6.273279190063477
    5. '(list' → logprob: -6.273279190063477
    6. 'print' → logprob: -7.148279190063477
    7. '(' → logprob: -8.148279190063477
    8. 'de' → logprob: -8.648279190063477
    9. 'du' → logprob: -8.773279190063477
    10. '*' → logprob: -8.773279190063477

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3350333571434021
    2. 'list' → logprob: -1.7100334167480469
    3. '(' → logprob: -2.835033416748047
    4. '(list' → logprob: -3.335033416748047
    5. 'int' → logprob: -5.710033416748047
    6. '1' → logprob: -6.460033416748047
    7. '(int' → logprob: -6.710033416748047
    8. '100' → logprob: -7.085033416748047
    9. '42' → logprob: -8.085033416748047
    10. 'len' → logprob: -8.585033416748047

Token 384: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06280140578746796
    2. ')' → logprob: -2.8128013610839844
    3. 'print' → logprob: -7.937801361083984
    4. '0' → logprob: -8.312801361083984
    5. '()' → logprob: -9.437801361083984
    6. '  ' → logprob: -9.812801361083984
    7. ')
' → logprob: -10.187801361083984
    8. '```' → logprob: -10.812801361083984
    9. ' ' → logprob: -11.812801361083984
    10. '
' → logprob: -12.062801361083984

Token 385: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.011373155459296e-05
    2. '0' → logprob: -11.125030517578125
    3. ' print' → logprob: -11.125030517578125
    4. '```' → logprob: -14.875030517578125
    5. '   ' → logprob: -16.875030517578125
    6. ')' → logprob: -17.250030517578125
    7. '(print' → logprob: -17.625030517578125
    8. ' ' → logprob: -17.875030517578125
    9. '`' → logprob: -18.625030517578125
    10. '100' → logprob: -19.125030517578125

Token 386: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4829370379447937
    2. '()' → logprob: -0.9829370379447937
    3. '())' → logprob: -4.857936859130859
    4. '0' → logprob: -7.607936859130859
    5. ')' → logprob: -7.607936859130859
    6. '   ' → logprob: -10.73293685913086
    7. '()
' → logprob: -10.73293685913086
    8. '(list' → logprob: -11.85793685913086
    9. '().' → logprob: -13.35793685913086
    10. '()`' → logprob: -13.48293685913086

Token 387: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07891292124986649
    2. '   ' → logprob: -2.5789129734039307
    3. '```' → logprob: -11.203912734985352
    4. ' print' → logprob: -11.578912734985352
    5. '	print' → logprob: -15.578912734985352
    6. '``' → logprob: -16.82891273498535
    7. '   ' → logprob: -19.20391273498535
    8. '       ' → logprob: -19.57891273498535
    9. '  ' → logprob: -19.82891273498535
    10. 'Print' → logprob: -19.95391273498535

Token 388: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019380348967388272
    2. '   ' → logprob: -6.2519378662109375
    3. ' print' → logprob: -11.626937866210938
    4. '```' → logprob: -14.501937866210938
    5. '	print' → logprob: -18.376937866210938
    6. '``' → logprob: -19.751937866210938
    7. 'pr' → logprob: -19.876937866210938
    8. 'Print' → logprob: -20.376937866210938
    9. '.print' → logprob: -21.001937866210938
    10. '  ' → logprob: -21.126937866210938

Token 389: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.416665640543215e-05
    2. '0' → logprob: -10.37503433227539
    3. ' (' → logprob: -12.87503433227539
    4. '()' → logprob: -15.37503433227539
    5. '(
' → logprob: -17.12503433227539
    6. '(int' → logprob: -18.12503433227539
    7. '('' → logprob: -18.75003433227539
    8. '((' → logprob: -18.87503433227539
    9. '(

' → logprob: -19.12503433227539
    10. '(.' → logprob: -20.00003433227539

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. ')' → logprob: -20.0
    4. '   ' → logprob: -21.25
    5. '"' → logprob: -22.875
    6. '```' → logprob: -23.25
    7. '۰' → logprob: -23.875
    8. '`' → logprob: -24.0
    9. '０' → logprob: -24.25
    10. '00' → logprob: -24.25

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -16.0
    4. '))' → logprob: -17.125
    5. ')`' → logprob: -18.625
    6. '')' → logprob: -19.125
    7. '())' → logprob: -19.625
    8. '`)' → logprob: -20.125
    9. '")' → logprob: -20.25
    10. ')}' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 27.25%
Précision adaptée (1ère position): 28.02%
Précision (top 10): 61.95%
================================================================================
