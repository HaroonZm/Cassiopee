================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from pprint import pprint, pformat
import bisect
import math

sys.setrecursionlimit(10000000)

def main():
    n, k = map(int, input().split())
    ## Initiate result list
    result_list = [None]*(k+1)
    MOD = int(1e9+7)
    m = MOD # alias

    # Some OOP mixed with global vars for chaos
    class GcdCounter:
        def __init__(self, N, K):
            self.n = N
            self.k = K
            self.ans = [0]*(K+1)

        def do_count(self, idx):
            cnt = self.k//idx
            combos = pow(cnt, self.n, m)
            step=idx*2
            while step<=self.k:
                combos -= self.ans[step]
                step += idx
            self.ans[idx] = combos % m

    gc = GcdCounter(n, k)

    # Imperative loop, just for variation
    for i in reversed(range(1, k+1)):
        gc.do_count(i)

    # List comp with enumerate and explicit index-based sum
    final = sum(i*a for i, a in enumerate(gc.ans)) % m

    print(final)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5795475244522095
    2. '.' → logprob: -0.9545475244522095
    3. 'import' → logprob: -3.95454740524292
    4. '\' → logprob: -4.82954740524292
    5. 'newline' → logprob: -4.95454740524292
    6. '
' → logprob: -5.07954740524292
    7. '<|end|>' → logprob: -5.32954740524292
    8. '```' → logprob: -5.57954740524292
    9. '' → logprob: -6.70454740524292
    10. '<|end|>' → logprob: -6.95454740524292

Token 4: ' pprint' (ID: 123034)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006913218181580305
    2. 'os' → logprob: -5.756913185119629
    3. ' math' → logprob: -6.881913185119629
    4. ' collections' → logprob: -7.256913185119629
    5. ' pathlib' → logprob: -7.756913185119629
    6. ' ' → logprob: -8.131913185119629
    7. ' typing' → logprob: -8.131913185119629
    8. ' datetime' → logprob: -9.006913185119629
    9. 'collections' → logprob: -9.131913185119629
    10. ' Py' → logprob: -9.256913185119629

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28124096989631653
    2. 'import' → logprob: -1.4062409400939941
    3. ' ' → logprob: -10.531241416931152
    4. '_import' → logprob: -10.531241416931152
    5. '	import' → logprob: -10.781241416931152
    6. ' impor' → logprob: -12.031241416931152
    7. '<|end|>' → logprob: -13.281241416931152
    8. '(import' → logprob: -14.031241416931152
    9. ' importar' → logprob: -14.031241416931152
    10. ' imports' → logprob: -14.031241416931152

Token 6: ' pprint' (ID: 123034)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004282346460968256
    2. 'pp' → logprob: -5.504282474517822
    3. ' pprint' → logprob: -8.504281997680664
    4. '.p' → logprob: -14.379281997680664
    5. 'pretty' → logprob: -15.254281997680664
    6. 'ps' → logprob: -16.004281997680664
    7. 'Pretty' → logprob: -16.504281997680664
    8. 'ppt' → logprob: -16.629281997680664
    9. 'pst' → logprob: -16.879281997680664
    10. '_p' → logprob: -17.129281997680664

Token 7: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22997386753559113
    2. '\n' → logprob: -2.104973793029785
    3. '
' → logprob: -3.479973793029785
    4. '\' → logprob: -4.104973793029785
    5. '

' → logprob: -5.104973793029785
    6. '' → logprob: -5.229973793029785
    7. '```' → logprob: -5.354973793029785
    8. '<|end|>' → logprob: -5.354973793029785
    9. '.' → logprob: -5.604973793029785
    10. '[' → logprob: -6.229973793029785

Token 8: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05830953270196915
    2. 'pp' → logprob: -3.183309555053711
    3. ' p' → logprob: -4.808309555053711
    4. 'Pretty' → logprob: -6.183309555053711
    5. '_' → logprob: -7.058309555053711
    6. 'deque' → logprob: -7.308309555053711
    7. '```' → logprob: -7.433309555053711
    8. 're' → logprob: -7.933309555053711
    9. ' pprint' → logprob: -7.933309555053711
    10. ' pp' → logprob: -8.183309555053711

Token 9: 'format' (ID: 4078)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11291845887899399
    2. 'r' → logprob: -3.2379183769226074
    3. 'format' → logprob: -3.3629183769226074
    4. 'p' → logprob: -3.4879183769226074
    5. 'pr' → logprob: -7.112918376922607
    6. 'prin' → logprob: -7.362918376922607
    7. 'db' → logprob: -8.362918853759766
    8. 're' → logprob: -9.487918853759766
    9. 'ro' → logprob: -9.862918853759766
    10. 'pretty' → logprob: -9.987918853759766

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8681188225746155
    2. '
' → logprob: -1.2431187629699707
    3. 'import' → logprob: -1.8681187629699707
    4. '

' → logprob: -3.2431187629699707
    5. '```' → logprob: -3.6181187629699707
    6. '\' → logprob: -3.6181187629699707
    7. '<|end|>' → logprob: -4.243118762969971
    8. ',' → logprob: -4.743118762969971
    9. '' → logprob: -5.993118762969971
    10. '(' → logprob: -6.118118762969971

Token 11: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11014865338802338
    2. '\n' → logprob: -3.4851486682891846
    3. '
' → logprob: -3.9851486682891846
    4. '

' → logprob: -3.9851486682891846
    5. '```' → logprob: -4.1101484298706055
    6. ',' → logprob: -4.8601484298706055
    7. '<|end|>' → logprob: -6.2351484298706055
    8. '\' → logprob: -6.2351484298706055
    9. '' → logprob: -6.4851484298706055
    10. '  

' → logprob: -7.1101484298706055

Token 12: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00027218335890211165
    2. 'os' → logprob: -9.000271797180176
    3. ' json' → logprob: -9.000271797180176
    4. ' re' → logprob: -11.000271797180176
    5. ' collections' → logprob: -12.750271797180176
    6. ' io' → logprob: -13.125271797180176
    7. ' math' → logprob: -14.250271797180176
    8. 'json' → logprob: -14.750271797180176
    9. ' requests' → logprob: -14.750271797180176
    10. ' threading' → logprob: -14.750271797180176

Token 13: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.7120533811976202e-05
    2. 'ected' → logprob: -11.875017166137695
    3. 't' → logprob: -12.000017166137695
    4. 'ection' → logprob: -13.250017166137695
    5. 'ec' → logprob: -14.125017166137695
    6. 'ects' → logprob: -14.375017166137695
    7. 'ector' → logprob: -15.250017166137695
    8. 'ectl' → logprob: -15.500017166137695
    9. 'e' → logprob: -15.625017166137695
    10. 'ecta' → logprob: -16.125017166137695

Token 14: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8017957210540771
    2. '

' → logprob: -1.4267957210540771
    3. 'import' → logprob: -2.301795721054077
    4. '' → logprob: -2.926795721054077
    5. '.' → logprob: -3.176795721054077
    6. '```' → logprob: -3.676795721054077
    7. '<|end|>' → logprob: -3.926795721054077
    8. '
' → logprob: -4.176795959472656
    9. ',' → logprob: -4.301795959472656
    10. '\n' → logprob: -4.801795959472656

Token 15: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21302838623523712
    2. ',' → logprob: -2.3380284309387207
    3. '
' → logprob: -3.7130284309387207
    4. '<|end|>' → logprob: -3.8380284309387207
    5. '

' → logprob: -4.088028430938721
    6. '```' → logprob: -4.713028430938721
    7. '.' → logprob: -5.588028430938721
    8. 'def' → logprob: -5.588028430938721
    9. '' → logprob: -6.338028430938721
    10. '\n' → logprob: -6.463028430938721

Token 16: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.3627353608608246
    2. ' heap' → logprob: -2.3627352714538574
    3. ' collections' → logprob: -2.3627352714538574
    4. ' math' → logprob: -2.4877352714538574
    5. ' threading' → logprob: -4.612735271453857
    6. 'collections' → logprob: -4.862735271453857
    7. ' itertools' → logprob: -5.487735271453857
    8. 'heap' → logprob: -5.862735271453857
    9. 'os' → logprob: -5.862735271453857
    10. ' re' → logprob: -5.862735271453857

Token 17: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8334503769874573
    2. '\n' → logprob: -1.8334503173828125
    3. '
' → logprob: -2.2084503173828125
    4. '

' → logprob: -2.3334503173828125
    5. '\' → logprob: -2.4584503173828125
    6. '' → logprob: -3.2084503173828125
    7. '```' → logprob: -3.3334503173828125
    8. ',' → logprob: -4.2084503173828125
    9. '<|end|>' → logprob: -5.2084503173828125
    10. '`' → logprob: -6.3334503173828125

Token 18: 'sys' (ID: 17324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8196233510971069
    2. 'def' → logprob: -0.9446233510971069
    3. '
' → logprob: -2.9446234703063965
    4. '```' → logprob: -3.6946234703063965
    5. '#' → logprob: -4.0696234703063965
    6. 'class' → logprob: -4.3196234703063965
    7. '

' → logprob: -4.3196234703063965
    8. 'from' → logprob: -4.4446234703063965
    9. '' → logprob: -4.8196234703063965
    10. ',' → logprob: -5.0696234703063965

Token 19: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.455048449221067e-05
    2. ' .' → logprob: -10.500054359436035
    3. '.exit' → logprob: -12.250054359436035
    4. '.`' → logprob: -12.875054359436035
    5. '.user' → logprob: -13.000054359436035
    6. '.readline' → logprob: -13.125054359436035
    7. '.setdefault' → logprob: -13.625054359436035
    8. '."""' → logprob: -13.750054359436035
    9. '.stdout' → logprob: -13.875054359436035
    10. '.import' → logprob: -13.875054359436035

Token 20: 'rec' (ID: 9285)
  Prédit: '_trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trace' → logprob: -0.6455845236778259
    2. '_limit' → logprob: -1.8955845832824707
    3. '_version' → logprob: -2.5205845832824707
    4. '_exc' → logprob: -3.0205845832824707
    5. 'rec' → logprob: -3.7705845832824707
    6. '_' → logprob: -3.7705845832824707
    7. '_int' → logprob: -4.020584583282471
    8. 'trace' → logprob: -4.020584583282471
    9. '_attr' → logprob: -4.895584583282471
    10. 'attr' → logprob: -4.895584583282471

Token 21: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00027301779482513666
    2. 'ursive' → logprob: -9.250272750854492
    3. 'urs' → logprob: -9.500272750854492
    4. 'limit' → logprob: -9.750272750854492
    5. 't' → logprob: -11.500272750854492
    6. 'ur' → logprob: -11.625272750854492
    7. 'ursor' → logprob: -12.250272750854492
    8. '_limit' → logprob: -12.625272750854492
    9. 'urse' → logprob: -12.875272750854492
    10. '__' → logprob: -13.000272750854492

Token 22: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0486326739192009
    2. '_limit' → logprob: -3.0486326217651367
    3. ' limit' → logprob: -10.673632621765137
    4. '_depth' → logprob: -11.548632621765137
    5. 'lim' → logprob: -11.798632621765137
    6. 'depth' → logprob: -13.298632621765137
    7. '_lim' → logprob: -13.298632621765137
    8. '-limit' → logprob: -14.673632621765137
    9. '_LIMIT' → logprob: -14.798632621765137
    10. 'Limit' → logprob: -15.048632621765137

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1517960956552997e-05
    2. ' (' → logprob: -12.125011444091797
    3. '(
' → logprob: -12.625011444091797
    4. '(

' → logprob: -14.250011444091797
    5. '((' → logprob: -14.625011444091797
    6. '("("' → logprob: -14.625011444091797
    7. '()' → logprob: -15.250011444091797
    8. '('' → logprob: -15.750011444091797
    9. '```' → logprob: -15.875011444091797
    10. '(()' → logprob: -15.875011444091797

Token 24: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04866514727473259
    2. '100' → logprob: -3.0486650466918945
    3. '300' → logprob: -9.923665046691895
    4. '500' → logprob: -11.298665046691895
    5. ' ' → logprob: -11.923665046691895
    6. '200' → logprob: -12.048665046691895
    7. '150' → logprob: -13.173665046691895
    8. '1' → logprob: -14.298665046691895
    9. '250' → logprob: -14.548665046691895
    10. '999' → logprob: -15.173665046691895

Token 25: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.050945982336997986
    2. '000' → logprob: -3.050945997238159
    3. '0' → logprob: -6.05094575881958
    4. ')' → logprob: -16.050945281982422
    5. '003' → logprob: -18.175945281982422
    6. '_' → logprob: -18.800945281982422
    7. '006' → logprob: -19.050945281982422
    8. '48' → logprob: -19.175945281982422
    9. '007' → logprob: -19.175945281982422
    10. ' ' → logprob: -19.300945281982422

Token 26: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.666993507067673e-05
    2. '0' → logprob: -10.250036239624023
    3. ')
' → logprob: -14.500036239624023
    4. ' )' → logprob: -14.500036239624023
    5. '1' → logprob: -15.750036239624023
    6. '))' → logprob: -16.750036239624023
    7. '```' → logprob: -17.500036239624023
    8. '6' → logprob: -17.500036239624023
    9. '4' → logprob: -17.875036239624023
    10. '000' → logprob: -18.125036239624023

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.875000953674316
    4. '))' → logprob: -16.375001907348633
    5. '0' → logprob: -17.375001907348633
    6. '),' → logprob: -19.000001907348633
    7. ')))' → logprob: -19.625001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '`)' → logprob: -19.750001907348633
    10. ')

' → logprob: -19.750001907348633

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5047831535339355
    2. 'class' → logprob: -2.2547831535339355
    3. '

' → logprob: -2.3797831535339355
    4. '\' → logprob: -2.7547831535339355
    5. '
' → logprob: -2.7547831535339355
    6. '\n' → logprob: -3.1297831535339355
    7. '```' → logprob: -5.1297831535339355
    8. 'd' → logprob: -5.3797831535339355
    9. '#' → logprob: -5.3797831535339355
    10. 'import' → logprob: -5.6297831535339355

Token 29: ' main' (ID: 2758)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.26961088180542
    2. ' main' → logprob: -1.51961088180542
    3. ' dfs' → logprob: -2.26961088180542
    4. ' solve' → logprob: -2.51961088180542
    5. ' fibonacci' → logprob: -3.01961088180542
    6. ' factor' → logprob: -3.26961088180542
    7. ' binary' → logprob: -3.64461088180542
    8. ' space' → logprob: -3.89461088180542
    9. ' bin' → logprob: -4.01961088180542
    10. ' max' → logprob: -4.26961088180542

Token 30: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015527932904660702
    2. '():' → logprob: -4.265527725219727
    3. '(:' → logprob: -6.765527725219727
    4. ':' → logprob: -9.515527725219727
    5. '(
' → logprob: -10.140527725219727
    6. '(":' → logprob: -10.890527725219727
    7. ' (' → logprob: -11.015527725219727
    8. '):' → logprob: -11.265527725219727
    9. ' ():' → logprob: -11.515527725219727
    10. '```' → logprob: -12.140527725219727

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7469983696937561
    2. '(' → logprob: -1.1219983100891113
    3. ' ' → logprob: -2.3719983100891113
    4. ':' → logprob: -2.3719983100891113
    5. '    ' → logprob: -5.496998310089111
    6. ')' → logprob: -6.746998310089111
    7. '(n' → logprob: -7.121998310089111
    8. 'n' → logprob: -7.246998310089111
    9. '    
' → logprob: -7.246998310089111
    10. '<|end|>' → logprob: -7.371998310089111

Token 32: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1707935929298401
    2. 'n' (adapté à ' n') → logprob: -2.2957935333251953
    3. '    ' → logprob: -4.295793533325195
    4. 'r' → logprob: -4.795793533325195
    5. '#' → logprob: -5.545793533325195
    6. ' n' → logprob: -5.545793533325195
    7. '(' → logprob: -5.795793533325195
    8. '   ' → logprob: -5.920793533325195
    9. 'x' → logprob: -6.045793533325195
    10. ' pass' → logprob: -6.420793533325195

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00510662654414773
    2. '=' → logprob: -5.505106449127197
    3. ' ' → logprob: -7.130106449127197
    4. ',' → logprob: -8.880106925964355
    5. ' ,' → logprob: -9.755106925964355
    6. '  ' → logprob: -11.505106925964355
    7. '=int' → logprob: -11.880106925964355
    8. ' =
' → logprob: -12.255106925964355
    9. '   ' → logprob: -13.005106925964355
    10. ')' → logprob: -13.880106925964355

Token 34: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4669826924800873
    2. ' m' → logprob: -1.7169827222824097
    3. ' ' → logprob: -2.21698260307312
    4. 'm' → logprob: -3.21698260307312
    5. 'k' → logprob: -3.46698260307312
    6. ' q' → logprob: -5.591982841491699
    7. ' t' → logprob: -6.091982841491699
    8. ' x' → logprob: -6.716982841491699
    9. ' K' → logprob: -6.966982841491699
    10. ' a' → logprob: -6.966982841491699

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022716462612152
    2. '=' → logprob: -1.9102271795272827
    3. ' ' → logprob: -13.410226821899414
    4. ',' → logprob: -14.035226821899414
    5. '=input' → logprob: -15.785226821899414
    6. '=int' → logprob: -15.910226821899414
    7. ')' → logprob: -16.160226821899414
    8. ' =
' → logprob: -16.785226821899414
    9. '  ' → logprob: -17.035226821899414
    10. '＝' → logprob: -17.535226821899414

Token 36: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0036184818018227816
    2. 'map' → logprob: -5.6286187171936035
    3. ' ' → logprob: -11.378618240356445
    4. ' list' → logprob: -12.878618240356445
    5. '	map' → logprob: -13.378618240356445
    6. ' input' → logprob: -13.753618240356445
    7. '   ' → logprob: -14.378618240356445
    8. ' [' → logprob: -14.878618240356445
    9. '  ' → logprob: -15.128618240356445
    10. ' ' → logprob: -15.628618240356445

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2582223415374756
    2. '(' → logprob: -1.5082223415374756
    3. '(input' → logprob: -5.633222579956055
    4. '(str' → logprob: -6.008222579956055
    5. '(lambda' → logprob: -8.633222579956055
    6. '(list' → logprob: -10.258222579956055
    7. '(eval' → logprob: -11.883222579956055
    8. '(
' → logprob: -12.508222579956055
    9. ' (' → logprob: -12.633222579956055
    10. '(tuple' → logprob: -13.258222579956055

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010180994868278503
    2. ',input' → logprob: -4.885180950164795
    3. '(input' → logprob: -6.510180950164795
    4. 'input' → logprob: -7.510180950164795
    5. '(' → logprob: -7.635180950164795
    6. ' ,' → logprob: -10.635181427001953
    7. '(sys' → logprob: -11.135181427001953
    8. ' input' → logprob: -12.385181427001953
    9. ')' → logprob: -12.760181427001953
    10. '```' → logprob: -12.760181427001953

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23100540041923523
    2. 'input' → logprob: -1.7310054302215576
    3. ' sys' → logprob: -3.6060054302215576
    4. 'sys' → logprob: -6.2310051918029785
    5. ' ' → logprob: -10.981005668640137
    6. ')' → logprob: -11.606005668640137
    7. ',input' → logprob: -13.606005668640137
    8. '(sys' → logprob: -14.106005668640137
    9. '(input' → logprob: -14.231005668640137
    10. ' )' → logprob: -14.231005668640137

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002506111632101238
    2. '()' → logprob: -9.000250816345215
    3. '())' → logprob: -9.000250816345215
    4. ')' → logprob: -13.375250816345215
    5. '(' → logprob: -14.125250816345215
    6. '()
' → logprob: -14.875250816345215
    7. ' ().' → logprob: -15.125250816345215
    8. '('' → logprob: -16.1252498626709
    9. '());' → logprob: -16.1252498626709
    10. '()>' → logprob: -16.1252498626709

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9981420336989686e-05
    2. 'strip' → logprob: -10.875020027160645
    3. ' split' → logprob: -14.250020027160645
    4. 'rstrip' → logprob: -15.875020027160645
    5. ')' → logprob: -16.125019073486328
    6. 'spl' → logprob: -16.500019073486328
    7. '(split' → logprob: -17.625019073486328
    8. '_split' → logprob: -19.625019073486328
    9. 'read' → logprob: -20.125019073486328
    10. '.split' → logprob: -21.000019073486328

Token 42: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036226429510861635
    2. '))' → logprob: -6.003622531890869
    3. '())' → logprob: -6.878622531890869
    4. '()' → logprob: -9.128623008728027
    5. '(' → logprob: -12.753623008728027
    6. ')`' → logprob: -13.503623008728027
    7. '()))' → logprob: -14.003623008728027
    8. '),' → logprob: -14.003623008728027
    9. ')
' → logprob: -14.003623008728027
    10. ')))' → logprob: -15.003623008728027

Token 43: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8757398724555969
    2. '
' → logprob: -0.8757398724555969
    3. ':' → logprob: -2.875739812850952
    4. '<|end|>' → logprob: -2.875739812850952
    5. '   ' → logprob: -4.125740051269531
    6. '    
' → logprob: -5.125740051269531
    7. '```' → logprob: -5.250740051269531
    8. '\n' → logprob: -5.375740051269531
    9. ':
' → logprob: -6.125740051269531
    10. '  
' → logprob: -6.125740051269531

Token 44: ' ##' (ID: 17252)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2354278564453125
    2. 'a' → logprob: -1.4854278564453125
    3. ' 
' → logprob: -2.2354278564453125
    4. ' ' → logprob: -2.2354278564453125
    5. ')' → logprob: -3.1104278564453125
    6. '
' → logprob: -3.7354278564453125
    7. ' array' → logprob: -3.9854278564453125
    8. 'array' → logprob: -3.9854278564453125
    9. ' a' → logprob: -4.1104278564453125
    10. 'd' → logprob: -4.3604278564453125

Token 45: ' Initi' (ID: 38536)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7779828310012817
    2. 'a' → logprob: -1.1529828310012817
    3. 'arr' → logprob: -2.652982711791992
    4. ' arr' → logprob: -2.902982711791992
    5. ' A' → logprob: -3.152982711791992
    6. ' data' → logprob: -4.402982711791992
    7. 'A' → logprob: -4.777982711791992
    8. ' numbers' → logprob: -5.527982711791992
    9. 'data' → logprob: -5.527982711791992
    10. ' dp' → logprob: -5.652982711791992

Token 46: 'ate' (ID: 379)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.003222749102860689
    2. 'ate' → logprob: -5.878222942352295
    3. 'ating' → logprob: -8.878222465515137
    4. 'als' → logprob: -9.378222465515137
    5. 'ally' → logprob: -9.503222465515137
    6. 'ialize' → logprob: -10.628222465515137
    7. '   ' → logprob: -11.378222465515137
    8. ' al' → logprob: -11.628222465515137
    9. 'alist' → logprob: -12.003222465515137
    10. 'aling' → logprob: -12.190722465515137

Token 47: ' result' (ID: 1534)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7417532205581665
    2. 'dp' → logprob: -1.1167532205581665
    3. 'arr' → logprob: -3.616753101348877
    4. ' a' → logprob: -4.116753101348877
    5. ' data' → logprob: -4.241753101348877
    6. 's' → logprob: -4.491753101348877
    7. 'a' → logprob: -4.741753101348877
    8. ' counts' → logprob: -4.866753101348877
    9. 'data' → logprob: -4.991753101348877
    10. ' arr' → logprob: -5.116753101348877

Token 48: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011988457292318344
    2. '=' → logprob: -4.511988639831543
    3. ',' → logprob: -8.136988639831543
    4. 's' → logprob: -8.386988639831543
    5. ' ' → logprob: -8.386988639831543
    6. ':' → logprob: -9.011988639831543
    7. '_' → logprob: -10.261988639831543
    8. ' =
' → logprob: -12.386988639831543
    9. '_list' → logprob: -12.511988639831543
    10. 'result' → logprob: -12.886988639831543

Token 49: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2300984114408493
    2. ' result' → logprob: -2.6050984859466553
    3. 'res' → logprob: -2.8550984859466553
    4. ':' → logprob: -4.230098247528076
    5. '   ' → logprob: -4.355098247528076
    6. ' res' → logprob: -4.355098247528076
    7. 'results' → logprob: -4.980098247528076
    8. '[' → logprob: -5.355098247528076
    9. ' =' → logprob: -5.605098247528076
    10. 's' → logprob: -5.855098247528076

Token 50: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7710543870925903
    2. ' result' → logprob: -1.7710543870925903
    3. 'res' → logprob: -1.8960543870925903
    4. ' res' → logprob: -2.021054267883301
    5. '   ' → logprob: -3.646054267883301
    6. 'results' → logprob: -3.771054267883301
    7. ' results' → logprob: -4.396054267883301
    8. ' =' → logprob: -4.646054267883301
    9. '_result' → logprob: -5.896054267883301
    10. 's' → logprob: -6.521054267883301

Token 51: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7030380368232727
    2. 'result' (adapté à ' result') → logprob: -1.703037977218628
    3. 'res' → logprob: -2.328037977218628
    4. ' res' → logprob: -2.328037977218628
    5. ' results' → logprob: -2.703037977218628
    6. 'results' → logprob: -3.953037977218628
    7. ' dp' → logprob: -4.203038215637207
    8. ' ans' → logprob: -4.328038215637207
    9. 'dp' → logprob: -5.703038215637207
    10. ' answer' → logprob: -6.203038215637207

Token 52: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13941016793251038
    2. '=' → logprob: -2.3894102573394775
    3. 's' → logprob: -3.2644102573394775
    4. '=[]' → logprob: -8.889410018920898
    5. '_' → logprob: -10.264410018920898
    6. ' ' → logprob: -11.264410018920898
    7. '[]' → logprob: -11.389410018920898
    8. '[:]' → logprob: -11.764410018920898
    9. '_list' → logprob: -12.389410018920898
    10. '[' → logprob: -12.389410018920898

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07002624124288559
    2. '=' → logprob: -2.695026159286499
    3. '=[]' → logprob: -9.570026397705078
    4. ' ' → logprob: -11.820026397705078
    5. '[:]' → logprob: -12.695026397705078
    6. ' =[' → logprob: -12.945026397705078
    7. 's' → logprob: -12.945026397705078
    8. '[]' → logprob: -13.445026397705078
    9. '[' → logprob: -13.820026397705078
    10. ',' → logprob: -14.820026397705078

Token 54: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.28358063101768494
    2. '[]' → logprob: -1.9085806608200073
    3. ' [' → logprob: -2.4085805416107178
    4. '[' → logprob: -4.783580780029297
    5. ' [[]' → logprob: -9.033580780029297
    6. ' ['' → logprob: -9.783580780029297
    7. ' ' → logprob: -11.033580780029297
    8. ' ["' → logprob: -11.283580780029297
    9. '[list' → logprob: -11.283580780029297
    10. '[n' → logprob: -11.408580780029297

Token 55: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02489244006574154
    2. 'False' → logprob: -4.899892330169678
    3. ']' → logprob: -5.399892330169678
    4. ' ' → logprob: -5.524892330169678
    5. '[]' → logprob: -5.524892330169678
    6. '-' → logprob: -6.399892330169678
    7. '[' → logprob: -7.774892330169678
    8. '(' → logprob: -7.899892330169678
    9. ' False' → logprob: -8.149892807006836
    10. ' []' → logprob: -8.274892807006836

Token 56: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019879721105098724
    2. ' for' → logprob: -4.1448798179626465
    3. ']*' → logprob: -6.1448798179626465
    4. ' ]' → logprob: -6.8948798179626465
    5. 'for' → logprob: -8.019879341125488
    6. ']*(' → logprob: -9.019879341125488
    7. ',' → logprob: -9.269879341125488
    8. ')' → logprob: -9.769879341125488
    9. '()]' → logprob: -10.769879341125488
    10. '()' → logprob: -11.269879341125488

Token 57: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6343283653259277
    2. 'n' → logprob: -0.7593283653259277
    3. ' n' → logprob: -6.634328365325928
    4. ' k' → logprob: -7.884328365325928
    5. ')n' → logprob: -11.634328842163086
    6. ')' → logprob: -12.134328842163086
    7. ' ' → logprob: -12.259328842163086
    8. '2' → logprob: -12.384328842163086
    9. 'nk' → logprob: -12.509328842163086
    10. '   ' → logprob: -12.884328842163086

Token 58: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1161956638097763
    2. ')' → logprob: -2.2411956787109375
    3. ' +' → logprob: -5.8661956787109375
    4. ' )' → logprob: -8.116195678710938
    5. '+)' → logprob: -9.116195678710938
    6. '*' → logprob: -9.366195678710938
    7. '+n' → logprob: -11.116195678710938
    8. '-' → logprob: -11.616195678710938
    9. '+k' → logprob: -11.991195678710938
    10. '**' → logprob: -13.366195678710938

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005430232849903405
    2. '2' → logprob: -8.000542640686035
    3. ' ' → logprob: -8.500542640686035
    4. '3' → logprob: -13.875542640686035
    5. '5' → logprob: -14.375542640686035
    6. '  ' → logprob: -14.500542640686035
    7. '   ' → logprob: -14.750542640686035
    8. '10' → logprob: -14.875542640686035
    9. '7' → logprob: -15.313042640686035
    10. '0' → logprob: -15.375542640686035

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012856863031629473
    2. ' )' → logprob: -9.000128746032715
    3. ')
' → logprob: -12.375128746032715
    4. ')

' → logprob: -15.125128746032715
    5. '   ' → logprob: -16.2501277923584
    6. ' ' → logprob: -16.3751277923584
    7. '),' → logprob: -16.3751277923584
    8. ']' → logprob: -16.5001277923584
    9. '))' → logprob: -17.1251277923584
    10. '}' → logprob: -17.2501277923584

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31642940640449524
    2. '
' → logprob: -1.6914293766021729
    3. '    
' → logprob: -3.441429376602173
    4. '<|end|>' → logprob: -3.816429376602173
    5. ' 
' → logprob: -4.441429615020752
    6. '  
' → logprob: -5.691429615020752
    7. ' ' → logprob: -5.816429615020752
    8. '\n' → logprob: -5.941429615020752
    9. ')' → logprob: -5.941429615020752
    10. '[' → logprob: -6.441429615020752

Token 62: ' MOD' (ID: 32868)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2927032709121704
    2. '   ' → logprob: -1.5427032709121704
    3. 'result' → logprob: -1.6677032709121704
    4. ' 
' → logprob: -2.667703151702881
    5. '\n' → logprob: -2.792703151702881
    6. '<|end|>' → logprob: -3.042703151702881
    7. '    
' → logprob: -3.167703151702881
    8. '  
' → logprob: -3.792703151702881
    9. ' ' → logprob: -3.917703151702881
    10. ')' → logprob: -4.792703151702881

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812039852142334
    2. '=' → logprob: -1.4062039852142334
    3. ' ' → logprob: -10.406204223632812
    4. '_' → logprob: -11.531204223632812
    5. ')' → logprob: -13.031204223632812
    6. ',' → logprob: -13.156204223632812
    7. '  ' → logprob: -13.156204223632812
    8. ' =)' → logprob: -13.281204223632812
    9. '   ' → logprob: -13.531204223632812
    10. ' =
' → logprob: -13.531204223632812

Token 64: ' int' (ID: 677)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9395895004272461
    2. ' ' → logprob: -1.189589500427246
    3. '10' → logprob: -1.189589500427246
    4. '998' → logprob: -7.689589500427246
    5. '1' → logprob: -10.439589500427246
    6. 'int' → logprob: -11.439589500427246
    7. ' (' → logprob: -11.939589500427246
    8. '999' → logprob: -12.064589500427246
    9. '(' → logprob: -12.939589500427246
    10. ' int' → logprob: -13.314589500427246

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011629798245849088
    2. '('' → logprob: -9.250116348266602
    3. ' (' → logprob: -11.250116348266602
    4. '(
' → logprob: -13.125116348266602
    5. '("' → logprob: -13.500116348266602
    6. '1' → logprob: -13.750116348266602
    7. '"' → logprob: -13.875116348266602
    8. ''' → logprob: -14.250116348266602
    9. '((' → logprob: -15.375116348266602
    10. '`' → logprob: -15.750116348266602

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008781121578067541
    2. '(' → logprob: -7.25087833404541
    3. ' ' → logprob: -8.87587833404541
    4. ')' → logprob: -11.12587833404541
    5. '"' → logprob: -12.50087833404541
    6. '100' → logprob: -13.00087833404541
    7. '10' → logprob: -13.12587833404541
    8. '   ' → logprob: -13.37587833404541
    9. ''' → logprob: -14.25087833404541
    10. '9' → logprob: -14.62587833404541

Token 67: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6453568339347839
    2. '000' → logprob: -0.7703568339347839
    3. '0' → logprob: -4.39535665512085
    4. '2' → logprob: -8.645357131958008
    5. '_' → logprob: -9.020357131958008
    6. '9' → logprob: -11.145357131958008
    7. '   ' → logprob: -12.145357131958008
    8. '1' → logprob: -12.645357131958008
    9. '00' → logprob: -12.645357131958008
    10. '```' → logprob: -12.770357131958008

Token 68: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00021736434428021312
    2. '09' → logprob: -8.75021743774414
    3. '+' → logprob: -9.75021743774414
    4. '```' → logprob: -15.00021743774414
    5. '10' → logprob: -16.62521743774414
    6. '009' → logprob: -16.87521743774414
    7. '   ' → logprob: -17.00021743774414
    8. ' ' → logprob: -17.00021743774414
    9. '``' → logprob: -18.18771743774414
    10. '0' → logprob: -18.25021743774414

Token 69: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038241007132455707
    2. '7' → logprob: -8.625382423400879
    3. ')+' → logprob: -9.000382423400879
    4. ' +' → logprob: -9.875382423400879
    5. ')' → logprob: -10.875382423400879
    6. '9' → logprob: -12.000382423400879
    7. '+)' → logprob: -14.000382423400879
    8. 'plus' → logprob: -14.875382423400879
    9. '＋' → logprob: -15.000382423400879
    10. ' )' → logprob: -15.125382423400879

Token 70: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00029828163678757846
    2. '+' → logprob: -8.125298500061035
    3. '9' → logprob: -13.875298500061035
    4. '07' → logprob: -14.250298500061035
    5. '```' → logprob: -15.000298500061035
    6. ' ' → logprob: -16.37529754638672
    7. ')+' → logprob: -16.75029754638672
    8. '007' → logprob: -17.50029754638672
    9. '   ' → logprob: -17.62529754638672
    10. ')' → logprob: -17.62529754638672

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.750005722045898
    4. ')

' → logprob: -14.875005722045898
    5. ')
' → logprob: -16.3750057220459
    6. '))' → logprob: -16.7500057220459
    7. ')`' → logprob: -17.5000057220459
    8. '),' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.3750057220459
    10. '}' → logprob: -18.7500057220459

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7712606191635132
    2. '   ' → logprob: -1.0212606191635132
    3. '    
' → logprob: -2.5212607383728027
    4. '\n' → logprob: -3.3962607383728027
    5. '<|end|>' → logprob: -3.7712607383728027
    6. '' → logprob: -4.896260738372803
    7. ')' → logprob: -5.021260738372803
    8. '\' → logprob: -5.521260738372803
    9. ' 
' → logprob: -5.521260738372803
    10. '```' → logprob: -5.646260738372803

Token 73: ' m' (ID: 284)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023386286571621895
    2. ' 
' → logprob: -4.773386478424072
    3. '\n' → logprob: -5.273386478424072
    4. '   ' → logprob: -5.898386478424072
    5. '    
' → logprob: -5.898386478424072
    6. 'n' → logprob: -7.273386478424072
    7. '  
' → logprob: -7.398386478424072
    8. '' → logprob: -8.023386001586914
    9. '
' → logprob: -8.023386001586914
    10. 'result' → logprob: -8.148386001586914

Token 74: ' =' (ID: 314)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -0.5818864703178406
    2. 'ax' → logprob: -1.4568865299224854
    3. 'od' → logprob: -2.5818865299224854
    4. 'a' → logprob: -2.9568865299224854
    5. ' =' → logprob: -3.7068865299224854
    6. '=' → logprob: -3.8318865299224854
    7. 'ap' → logprob: -4.831886291503906
    8. 'ult' → logprob: -5.081886291503906
    9. 'at' → logprob: -5.206886291503906
    10. 'in' → logprob: -6.206886291503906

Token 75: ' MOD' (ID: 32868)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3623282015323639
    2. ' ' → logprob: -1.9873281717300415
    3. ' k' → logprob: -3.237328290939331
    4. 'n' → logprob: -3.362328290939331
    5. ' int' → logprob: -3.362328290939331
    6. ' math' → logprob: -4.237328052520752
    7. 'int' → logprob: -4.487328052520752
    8. ' (' → logprob: -5.112328052520752
    9. 'k' → logprob: -5.237328052520752
    10. ' max' → logprob: -5.612328052520752

Token 76: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7768036127090454
    2. '+' → logprob: -1.5268036127090454
    3. '-' → logprob: -1.9018036127090454
    4. '
' → logprob: -3.401803493499756
    5. ')' → logprob: -3.401803493499756
    6. '%' → logprob: -4.401803493499756
    7. ' 
' → logprob: -4.651803493499756
    8. ' -' → logprob: -4.776803493499756
    9. ' +' → logprob: -5.026803493499756
    10. '' → logprob: -5.276803493499756

Token 77: ' alias' (ID: 26026)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6009634733200073
    2. '<|end|>' → logprob: -0.9759634733200073
    3. '<|end|>' → logprob: -3.475963592529297
    4. ')' → logprob: -3.850963592529297
    5. '

' → logprob: -4.850963592529297
    6. '
    
' → logprob: -6.225963592529297
    7. 'def' → logprob: -6.600963592529297
    8. ' ' → logprob: -6.725963592529297
    9. '#' → logprob: -6.850963592529297
    10. '
' → logprob: -6.850963592529297

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22966182231903076
    2. '   ' → logprob: -1.9796618223190308
    3. '<|end|>' → logprob: -3.6046619415283203
    4. '    
' → logprob: -4.10466194152832
    5. ')' → logprob: -5.47966194152832
    6. 'def' → logprob: -5.60466194152832
    7. '  
' → logprob: -6.10466194152832
    8. 'n' → logprob: -6.22966194152832
    9. ' 
' → logprob: -6.22966194152832
    10. '<|end|>' → logprob: -6.35466194152832

Token 80: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8426430225372314
    2. '   ' → logprob: -0.8426430225372314
    3. '    
' → logprob: -2.7176430225372314
    4. ' ' → logprob: -4.592642784118652
    5. 'result' → logprob: -4.592642784118652
    6. ')' → logprob: -4.717642784118652
    7. '<|end|>' → logprob: -5.092642784118652
    8. ' 
' → logprob: -5.342642784118652
    9. '  
' → logprob: -5.342642784118652
    10. '#' (adapté à ' #') → logprob: -5.342642784118652

Token 81: ' Some' (ID: 6083)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1225450038909912
    2. 'for' → logprob: -1.2475450038909912
    3. ' for' → logprob: -2.122545003890991
    4. 'def' → logprob: -2.372545003890991
    5. '#' → logprob: -3.122545003890991
    6. 'dp' → logprob: -3.122545003890991
    7. ' result' → logprob: -3.247545003890991
    8. ' def' → logprob: -4.74754524230957
    9. 'factor' → logprob: -5.24754524230957
    10. ' dp' → logprob: -5.49754524230957

Token 82: ' O' (ID: 532)
  Prédit: ' comments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comments' → logprob: -1.3038928508758545
    2. ' code' → logprob: -1.9288928508758545
    3. ' calculations' → logprob: -2.5538928508758545
    4. ' lines' → logprob: -2.6788928508758545
    5. ' logic' → logprob: -2.9288928508758545
    6. ' math' → logprob: -3.3038928508758545
    7. ' initial' → logprob: -3.4288928508758545
    8. '#' → logprob: -3.4288928508758545
    9. 'comment' → logprob: -3.5538928508758545
    10. ' comment' → logprob: -3.6788928508758545

Token 83: 'OP' (ID: 4164)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5875729918479919
    2. '(' → logprob: -1.8375730514526367
    3. '()' → logprob: -2.3375730514526367
    4. '(b' → logprob: -2.3375730514526367
    5. '(f' → logprob: -4.337573051452637
    6. 'pt' → logprob: -4.587573051452637
    7. 'b' → logprob: -4.712573051452637
    8. '(log' → logprob: -4.712573051452637
    9. '(N' → logprob: -4.962573051452637
    10. '(...)' → logprob: -5.212573051452637

Token 84: ' mixed' (ID: 16435)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -1.051460862159729
    2. 'class' → logprob: -1.301460862159729
    3. '<|end|>' → logprob: -1.551460862159729
    4. '
' → logprob: -2.6764607429504395
    5. ' ' → logprob: -3.1764607429504395
    6. '<|end|>' → logprob: -3.6764607429504395
    7. ' code' → logprob: -4.4264607429504395
    8. ' 
' → logprob: -5.0514607429504395
    9. '

' → logprob: -6.5514607429504395
    10. '    
' → logprob: -6.5514607429504395

Token 85: ' with' (ID: 483)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3584958016872406
    2. ' with' → logprob: -1.858495831489563
    3. ' approach' → logprob: -2.8584957122802734
    4. ' class' → logprob: -3.2334957122802734
    5. 'class' → logprob: -4.233495712280273
    6. ' in' → logprob: -5.108495712280273
    7. 'with' → logprob: -5.608495712280273
    8. 'code' → logprob: -5.983495712280273
    9. ' style' → logprob: -6.108495712280273
    10. '...' → logprob: -6.358495712280273

Token 86: ' global' (ID: 5466)
  Prédit: ' functional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functional' → logprob: -0.7578017711639404
    2. 'functional' → logprob: -0.8828017711639404
    3. ' procedural' → logprob: -3.1328017711639404
    4. 'FP' → logprob: -4.0078020095825195
    5. 'proced' → logprob: -4.5078020095825195
    6. ' function' → logprob: -5.0078020095825195
    7. ' functions' → logprob: -5.0078020095825195
    8. 'function' → logprob: -5.2578020095825195
    9. 'functions' → logprob: -5.6328020095825195
    10. 'a' → logprob: -6.0078020095825195

Token 87: ' vars' (ID: 36194)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.3036148250102997
    2. 'variables' → logprob: -2.553614854812622
    3. '_' → logprob: -2.803614854812622
    4. ' code' → logprob: -3.053614854812622
    5. ' ' → logprob: -3.428614854812622
    6. 'class' → logprob: -5.178614616394043
    7. ' functions' → logprob: -5.803614616394043
    8. ' class' → logprob: -5.928614616394043
    9. ' _' → logprob: -5.928614616394043
    10. ' variable' → logprob: -6.053614616394043

Token 88: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' chaos' (ID: 46639)
  Prédit: 'performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'performance' → logprob: -1.727867603302002
    2. 'memo' → logprob: -2.477867603302002
    3. ' performance' → logprob: -2.727867603302002
    4. ' convenience' → logprob: -2.852867603302002
    5. ' memo' → logprob: -3.227867603302002
    6. 'eff' → logprob: -3.352867603302002
    7. ' readability' → logprob: -3.352867603302002
    8. 'con' → logprob: -3.352867603302002
    9. ' clarity' → logprob: -3.602867603302002
    10. ' speed' → logprob: -3.852867603302002

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8975106477737427
    2. '<|end|>' → logprob: -1.3975106477737427
    3. '
' → logprob: -1.5225106477737427
    4. '    
' → logprob: -3.022510528564453
    5. ' ' → logprob: -4.397510528564453
    6. '<|end|>' → logprob: -4.647510528564453
    7. ':' → logprob: -4.897510528564453
    8. '```' → logprob: -4.897510528564453
    9. '    ' → logprob: -5.272510528564453
    10. '  ' → logprob: -5.522510528564453

Token 91: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8867697715759277
    2. '   ' → logprob: -1.3867697715759277
    3. '
' → logprob: -1.5117697715759277
    4. '    
' → logprob: -3.0117697715759277
    5. '<|end|>' → logprob: -3.5117697715759277
    6. ' class' → logprob: -4.636769771575928
    7. ' ' → logprob: -4.886769771575928
    8. '

' → logprob: -5.886769771575928
    9. '    ' → logprob: -6.011769771575928
    10. '\n' → logprob: -6.136769771575928

Token 92: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.17477549612522125
    2. ' 
' → logprob: -3.1747756004333496
    3. '
' → logprob: -3.2997756004333496
    4. ' class' → logprob: -3.2997756004333496
    5. '    
' → logprob: -3.9247756004333496
    6. '<|end|>' → logprob: -4.92477560043335
    7. ' ' → logprob: -5.17477560043335
    8. '   ' → logprob: -5.54977560043335
    9. '<|end|>' → logprob: -6.54977560043335
    10. '  
' → logprob: -6.79977560043335

Token 93: ' G' (ID: 499)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -1.9810707569122314
    2. 'Solver' → logprob: -2.6060707569122314
    3. ' Solver' → logprob: -2.6060707569122314
    4. ' Counter' → logprob: -2.8560707569122314
    5. ' Fen' → logprob: -2.8560707569122314
    6. ' Solution' → logprob: -2.9810707569122314
    7. 'Factor' → logprob: -2.9810707569122314
    8. 'Counter' → logprob: -3.1060707569122314
    9. ' Comb' → logprob: -3.3560707569122314
    10. 'Segment' → logprob: -3.4810707569122314

Token 94: 'cd' (ID: 8301)
  Prédit: 'lobal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lobal' → logprob: -0.19540634751319885
    2. 'raph' → logprob: -2.195406436920166
    3. 'enerator' → logprob: -3.320406436920166
    4. 'en' → logprob: -4.320406436920166
    5. 'l' → logprob: -6.070406436920166
    6. 'lob' → logprob: -6.320406436920166
    7. 'LOBAL' → logprob: -6.570406436920166
    8. 'ame' → logprob: -6.695406436920166
    9. 'roup' → logprob: -6.945406436920166
    10. 'r' → logprob: -7.570406436920166

Token 95: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07259641587734222
    2. 'Calculator' → logprob: -2.822596311569214
    3. '():' → logprob: -5.697596549987793
    4. 'Helper' → logprob: -5.697596549987793
    5. '):' → logprob: -7.697596549987793
    6. '_' → logprob: -7.947596549987793
    7. 'Calcul' → logprob: -8.322596549987793
    8. 'Finder' → logprob: -8.447596549987793
    9. '(object' → logprob: -8.447596549987793
    10. 'Solver' → logprob: -8.697596549987793

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002526376338209957
    2. ' :' → logprob: -8.750252723693848
    3. ':
' → logprob: -10.250252723693848
    4. '(object' → logprob: -10.250252723693848
    5. '(' → logprob: -11.000252723693848
    6. '():' → logprob: -12.500252723693848
    7. '):' → logprob: -13.625252723693848
    8. '>:' → logprob: -14.875252723693848
    9. ':**' → logprob: -14.875252723693848
    10. '   ' → logprob: -15.500252723693848

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6580667495727539
    2. '<|end|>' → logprob: -1.658066749572754
    3. '    ' → logprob: -1.908066749572754
    4. ' ' → logprob: -3.033066749572754
    5. '        
' → logprob: -3.408066749572754
    6. '        ' → logprob: -4.033066749572754
    7. ' 
' → logprob: -4.158066749572754
    8. '\n' → logprob: -5.158066749572754
    9. '   ' → logprob: -5.158066749572754
    10. '    
' → logprob: -5.408066749572754

Token 98: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6296651363372803
    2. 'def' (adapté à ' def') → logprob: -1.0046651363372803
    3. '       ' → logprob: -2.7546651363372803
    4. '   ' → logprob: -3.6296651363372803
    5. '    ' → logprob: -5.379665374755859
    6. '        ' → logprob: -5.879665374755859
    7. '           ' → logprob: -6.379665374755859
    8. ' ' → logprob: -7.379665374755859
    9. '0' → logprob: -8.12966537475586
    10. '	def' → logprob: -8.37966537475586

Token 99: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.022726815193891525
    2. '__' → logprob: -4.522727012634277
    3. 'init' → logprob: -4.897727012634277
    4. ' init' → logprob: -5.647727012634277
    5. '_init' → logprob: -7.522727012634277
    6. ' _' → logprob: -9.772727012634277
    7. ' ' → logprob: -11.147727012634277
    8. ' ' → logprob: -12.272727012634277
    9. ' def' → logprob: -13.147727012634277
    10. '_' → logprob: -14.272727012634277

Token 100: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0013398852897807956
    2. 'nit' → logprob: -6.626339912414551
    3. 'ini' → logprob: -13.12633991241455
    4. ' init' → logprob: -13.37633991241455
    5. 'int' → logprob: -13.50133991241455
    6. 'it' → logprob: -13.50133991241455
    7. 'inite' → logprob: -13.62633991241455
    8. 'new' → logprob: -14.00133991241455
    9. '   ' → logprob: -14.00133991241455
    10. 'in' → logprob: -14.12633991241455

Token 101: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10133674740791321
    2. '(self' → logprob: -2.476336717605591
    3. '(' → logprob: -4.85133695602417
    4. '__' → logprob: -5.47633695602417
    5. '__(
' → logprob: -9.226336479187012
    6. '__((' → logprob: -9.851336479187012
    7. 'self' → logprob: -10.351336479187012
    8. ')(' → logprob: -10.601336479187012
    9. ' (' → logprob: -10.726336479187012
    10. '_(' → logprob: -10.976336479187012

Token 102: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011897491058334708
    2. ' self' → logprob: -6.751189708709717
    3. ')' → logprob: -11.626190185546875
    4. ',' → logprob: -13.126190185546875
    5. '       ' → logprob: -13.376190185546875
    6. 's' → logprob: -13.751190185546875
    7. '           ' → logprob: -13.751190185546875
    8. '):
' → logprob: -13.751190185546875
    9. '(self' → logprob: -14.126190185546875
    10. '   ' → logprob: -14.501190185546875

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04613932594656944
    2. ' ,' → logprob: -3.1711392402648926
    3. 'self' → logprob: -6.171139240264893
    4. ',n' → logprob: -7.671139240264893
    5. ',self' → logprob: -7.921139240264893
    6. ',k' → logprob: -9.42113971710205
    7. '):' → logprob: -10.17113971710205
    8. '(self' → logprob: -10.79613971710205
    9. ' self' → logprob: -11.17113971710205
    10. '       ' → logprob: -11.17113971710205

Token 104: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09147672355175018
    2. 'n' → logprob: -3.2164766788482666
    3. ' self' → logprob: -4.091476917266846
    4. '           ' → logprob: -4.216476917266846
    5. 'max' → logprob: -4.716476917266846
    6. ' n' → logprob: -5.966476917266846
    7. 'k' → logprob: -7.216476917266846
    8. '       ' → logprob: -7.466476917266846
    9. ' max' → logprob: -7.466476917266846
    10. 's' → logprob: -7.716476917266846

Token 105: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01889115571975708
    2. ',' → logprob: -4.268891334533691
    3. ' ):' → logprob: -5.643891334533691
    4. '):
' → logprob: -7.643891334533691
    5. ':' → logprob: -8.643891334533691
    6. ')' → logprob: -8.643891334533691
    7. '   ' → logprob: -8.768891334533691
    8. ' ,' → logprob: -9.643891334533691
    9. '       ' → logprob: -9.768891334533691
    10. '    ' → logprob: -11.518891334533691

Token 106: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8638120293617249
    2. 'K' → logprob: -1.61381196975708
    3. ' M' → logprob: -2.11381196975708
    4. 'k' → logprob: -2.73881196975708
    5. 'M' → logprob: -3.23881196975708
    6. ' MOD' → logprob: -3.23881196975708
    7. ' k' → logprob: -3.36381196975708
    8. 'MOD' → logprob: -3.48881196975708
    9. 'm' → logprob: -4.48881196975708
    10. ' m' → logprob: -5.11381196975708

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014248794177547097
    2. ',' → logprob: -7.251424789428711
    3. '):
' → logprob: -7.876424789428711
    4. ' ):' → logprob: -8.751424789428711
    5. '   ' → logprob: -9.501424789428711
    6. ':' → logprob: -10.376424789428711
    7. '       ' → logprob: -10.501424789428711
    8. ')' → logprob: -11.501424789428711
    9. '):
' → logprob: -11.501424789428711
    10. '    ' → logprob: -12.001424789428711

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6089383959770203
    2. '<|end|>' → logprob: -1.108938455581665
    3. ',' → logprob: -2.858938455581665
    4. ':' → logprob: -3.483938455581665
    5. '<|end|>' → logprob: -4.483938217163086
    6. '):' → logprob: -4.483938217163086
    7. '):
' → logprob: -5.608938217163086
    8. ')' → logprob: -5.608938217163086
    9. '	       ' → logprob: -6.233938217163086
    10. '       ' → logprob: -6.733938217163086

Token 109: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16246536374092102
    2. 'self' (adapté à ' self') → logprob: -1.9124653339385986
    3. '           ' → logprob: -7.037465572357178
    4. '               ' → logprob: -7.162465572357178
    5. ' super' → logprob: -8.28746509552002
    6. '       ' → logprob: -8.91246509552002
    7. '	self' → logprob: -9.53746509552002
    8. ' ' → logprob: -10.28746509552002
    9. '	       ' → logprob: -10.53746509552002
    10. 'super' → logprob: -11.28746509552002

Token 110: '.n' (ID: 1835)
  Prédit: '.N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.5923295617103577
    2. '.' → logprob: -1.592329502105713
    3. ' =' → logprob: -2.217329502105713
    4. '=' → logprob: -2.717329502105713
    5. '.n' → logprob: -3.342329502105713
    6. 'N' → logprob: -4.217329502105713
    7. ' .' → logprob: -5.717329502105713
    8. '=N' → logprob: -5.842329502105713
    9. '       ' → logprob: -6.092329502105713
    10. 'n' → logprob: -6.217329502105713

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16108456254005432
    2. '=' → logprob: -1.911084532737732
    3. ',' → logprob: -7.4110846519470215
    4. ' ' → logprob: -8.661084175109863
    5. '   ' → logprob: -11.036084175109863
    6. '       ' → logprob: -11.536084175109863
    7. '    ' → logprob: -11.661084175109863
    8. '         ' → logprob: -11.661084175109863
    9. '        ' → logprob: -11.911084175109863
    10. ' ,' → logprob: -12.036084175109863

Token 112: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2519668936729431
    2. ' N' → logprob: -1.501966953277588
    3. 'n' → logprob: -10.87696647644043
    4. ' n' → logprob: -11.75196647644043
    5. '	N' → logprob: -12.37696647644043
    6. ' ' → logprob: -12.37696647644043
    7. '   ' → logprob: -14.62696647644043
    8. '[N' → logprob: -14.62696647644043
    9. '[' → logprob: -14.87696647644043
    10. ' ' → logprob: -15.12696647644043

Token 113: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05683538690209389
    2. '
' → logprob: -3.056835412979126
    3. '<|end|>' → logprob: -4.931835174560547
    4. '<|end|>' → logprob: -7.806835174560547
    5. '       ' → logprob: -8.306835174560547
    6. '            
' → logprob: -8.931835174560547
    7. ',' → logprob: -10.056835174560547
    8. '   ' → logprob: -10.556835174560547
    9. '        
' → logprob: -10.556835174560547
    10. '               ' → logprob: -11.056835174560547

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004437478259205818
    2. '
' → logprob: -6.004437446594238
    3. '<|end|>' → logprob: -6.879437446594238
    4. '       ' → logprob: -7.879437446594238
    5. '            
' → logprob: -8.629437446594238
    6. '<|end|>' → logprob: -9.254437446594238
    7. '        
' → logprob: -9.629437446594238
    8. ',' → logprob: -9.879437446594238
    9. '          ' → logprob: -10.504437446594238
    10. '         ' → logprob: -11.004437446594238

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16389892995357513
    2. ' self' → logprob: -2.4138989448547363
    3. '           ' → logprob: -2.7888989448547363
    4. 'k' → logprob: -10.038898468017578
    5. '       ' → logprob: -10.038898468017578
    6. ' ' → logprob: -10.038898468017578
    7. '   ' → logprob: -11.038898468017578
    8. '          ' → logprob: -11.038898468017578
    9. '         ' → logprob: -11.538898468017578
    10. '        ' → logprob: -11.913898468017578

Token 116: '.k' (ID: 9040)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25598618388175964
    2. '=' → logprob: -1.505986213684082
    3. ',' → logprob: -6.755986213684082
    4. ' ' → logprob: -7.255986213684082
    5. 'k' → logprob: -7.505986213684082
    6. '=k' → logprob: -7.880986213684082
    7. '   ' → logprob: -8.005986213684082
    8. '.k' → logprob: -8.505986213684082
    9. '           ' → logprob: -8.755986213684082
    10. '.' → logprob: -9.255986213684082

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741016626358032
    2. '=' → logprob: -0.9741016626358032
    3. ' ' → logprob: -10.724102020263672
    4. '   ' → logprob: -14.224102020263672
    5. '=k' → logprob: -14.349102020263672
    6. '    ' → logprob: -14.724102020263672
    7. '        ' → logprob: -15.474102020263672
    8. ')' → logprob: -15.474102020263672
    9. '       ' → logprob: -15.724102020263672
    10. '  ' → logprob: -15.724102020263672

Token 118: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.25196781754493713
    2. 'K' → logprob: -1.5019677877426147
    3. ' ' → logprob: -10.376967430114746
    4. '  ' → logprob: -12.001967430114746
    5. '   ' → logprob: -13.876967430114746
    6. '	K' → logprob: -15.126967430114746
    7. '    ' → logprob: -15.251967430114746
    8. '      ' → logprob: -18.001968383789062
    9. '     ' → logprob: -18.126968383789062
    10. '>K' → logprob: -18.376968383789062

Token 119: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013614017516374588
    2. '
' → logprob: -4.763614177703857
    3. '<|end|>' → logprob: -5.388614177703857
    4. '            
' → logprob: -8.7636137008667
    5. '<|end|>' → logprob: -9.0136137008667
    6. '       ' → logprob: -9.6386137008667
    7. '	       ' → logprob: -11.1386137008667
    8. '               ' → logprob: -11.2636137008667
    9. '```' → logprob: -12.0136137008667
    10. 'self' → logprob: -12.1386137008667

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20623092353343964
    2. '
' → logprob: -1.956230878829956
    3. '<|end|>' → logprob: -3.206230878829956
    4. '       ' → logprob: -6.081231117248535
    5. '<|end|>' → logprob: -7.081231117248535
    6. '            
' → logprob: -8.081231117248535
    7. '               ' → logprob: -8.456231117248535
    8. '        
' → logprob: -8.706231117248535
    9. '   ' → logprob: -9.081231117248535
    10. '    
' → logprob: -9.081231117248535

Token 121: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3960703909397125
    2. 'self' (adapté à ' self') → logprob: -1.1460703611373901
    3. ' self' → logprob: -4.77107048034668
    4. '       ' → logprob: -7.89607048034668
    5. '
' → logprob: -8.77107048034668
    6. '   ' → logprob: -9.52107048034668
    7. '	self' → logprob: -11.27107048034668
    8. '	       ' → logprob: -11.52107048034668
    9. ' ' → logprob: -11.77107048034668
    10. '          ' → logprob: -11.89607048034668

Token 122: '.' (ID: 13)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.6119621992111206
    2. '._' → logprob: -1.7369621992111206
    3. '.result' → logprob: -1.9869621992111206
    4. '.' → logprob: -2.11196231842041
    5. '.g' → logprob: -2.36196231842041
    6. '.c' → logprob: -2.98696231842041
    7. '.dp' → logprob: -3.36196231842041
    8. '.freq' → logprob: -3.61196231842041
    9. '.val' → logprob: -3.73696231842041
    10. ' .' → logprob: -3.86196231842041

Token 123: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2500765323638916
    2. 'dp' → logprob: -1.2500765323638916
    3. 'count' → logprob: -2.3750765323638916
    4. 'cache' → logprob: -2.3750765323638916
    5. 'g' → logprob: -3.2500765323638916
    6. 'memo' → logprob: -3.6250765323638916
    7. 'div' → logprob: -4.0000762939453125
    8. 'arr' → logprob: -4.1250762939453125
    9. 'cnt' → logprob: -4.2500762939453125
    10. 'freq' → logprob: -4.2500762939453125

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06284841150045395
    2. '=' → logprob: -2.8128483295440674
    3. ' ' → logprob: -7.5628485679626465
    4. 's' → logprob: -8.187848091125488
    5. '   ' → logprob: -10.687848091125488
    6. '_list' → logprob: -11.312848091125488
    7. '_' → logprob: -11.437848091125488
    8. ' =[' → logprob: -12.187848091125488
    9. '_counts' → logprob: -12.187848091125488
    10. '  ' → logprob: -12.312848091125488

Token 125: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004902008455246687
    2. '[' → logprob: -5.379901885986328
    3. ' ' → logprob: -8.504901885986328
    4. '1' → logprob: -10.754901885986328
    5. '[m' → logprob: -11.129901885986328
    6. ' [' → logprob: -11.254901885986328
    7. '[]' → logprob: -11.879901885986328
    8. '{}' → logprob: -11.879901885986328
    9. '{' → logprob: -12.379901885986328
    10. 'None' → logprob: -13.004901885986328

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035906085395254195
    2. 'None' → logprob: -8.625359535217285
    3. '[' → logprob: -9.250359535217285
    4. '-' → logprob: -10.250359535217285
    5. ' ' → logprob: -11.000359535217285
    6. ']' → logprob: -11.375359535217285
    7. '1' → logprob: -12.125359535217285
    8. 'False' → logprob: -12.750359535217285
    9. '[]' → logprob: -13.250359535217285
    10. '   ' → logprob: -13.500359535217285

Token 127: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6948049664497375
    2. ']*(' → logprob: -0.6948049664497375
    3. ']*' → logprob: -6.444805145263672
    4. ' for' → logprob: -10.194805145263672
    5. ']+' → logprob: -11.069805145263672
    6. 'for' → logprob: -11.694805145263672
    7. '](' → logprob: -13.194805145263672
    8. ',' → logprob: -13.819805145263672
    9. '*(' → logprob: -13.944805145263672
    10. ' ]' → logprob: -14.194805145263672

Token 128: 'K' (ID: 42)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.62308669090271
    2. 'k' → logprob: -0.99808669090271
    3. 'K' → logprob: -2.49808669090271
    4. '(self' → logprob: -4.873086929321289
    5. '(k' → logprob: -5.748086929321289
    6. '(K' → logprob: -6.248086929321289
    7. ' self' → logprob: -10.123086929321289
    8. '(' → logprob: -10.373086929321289
    9. '(N' → logprob: -11.998086929321289
    10. 'N' → logprob: -12.123086929321289

Token 129: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000261216628132388
    2. ' +' → logprob: -8.375261306762695
    3. ')' → logprob: -10.875261306762695
    4. '+
' → logprob: -11.625261306762695
    5. '+)' → logprob: -13.000261306762695
    6. '+

' → logprob: -15.750261306762695
    7. '1' → logprob: -16.500261306762695
    8. ')+' → logprob: -16.625261306762695
    9. ' plus' → logprob: -17.125261306762695
    10. ' ' → logprob: -17.125261306762695

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.125045776367188
    3. '2' → logprob: -12.500045776367188
    4. '   ' → logprob: -13.750045776367188
    5. '```' → logprob: -15.875045776367188
    6. ')' → logprob: -16.062545776367188
    7. '
' → logprob: -16.375045776367188
    8. '(' → logprob: -16.812545776367188
    9. '  ' → logprob: -16.812545776367188
    10. '

' → logprob: -16.875045776367188

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.864272967912257e-05
    2. ')
' → logprob: -9.500088691711426
    3. '       ' → logprob: -11.625088691711426
    4. ' )' → logprob: -13.125088691711426
    5. '   ' → logprob: -14.000088691711426
    6. '           ' → logprob: -14.375088691711426
    7. '<|end|>' → logprob: -14.875088691711426
    8. '),' → logprob: -15.625088691711426
    9. ')
' → logprob: -15.750088691711426
    10. '               ' → logprob: -16.62508773803711

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5529694557189941
    2. '<|end|>' → logprob: -1.0529694557189941
    3. '
' → logprob: -2.802969455718994
    4. '        
' → logprob: -5.052969455718994
    5. '<|end|>' → logprob: -6.677969455718994
    6. '    
' → logprob: -6.677969455718994
    7. '   ' → logprob: -6.927969455718994
    8. ' ' → logprob: -7.052969455718994
    9. '           ' → logprob: -7.302969455718994
    10. ')' → logprob: -7.302969455718994

Token 133: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6946871280670166
    2. '       ' → logprob: -1.5696871280670166
    3. 'def' (adapté à ' def') → logprob: -1.8196871280670166
    4. '        
' → logprob: -2.3196871280670166
    5. ' def' → logprob: -3.8196871280670166
    6. '    
' → logprob: -5.0696868896484375
    7. ' 
' → logprob: -6.8196868896484375
    8. '   ' → logprob: -6.8196868896484375
    9. '<|end|>' → logprob: -7.5696868896484375
    10. '            
' → logprob: -7.9446868896484375

Token 134: ' do' (ID: 621)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.25941339135169983
    2. ' update' → logprob: -2.634413480758667
    3. ' calc' → logprob: -3.634413480758667
    4. ' add' → logprob: -4.009413242340088
    5. ' solve' → logprob: -4.009413242340088
    6. 'count' → logprob: -4.134413242340088
    7. ' process' → logprob: -4.134413242340088
    8. ' compute' → logprob: -4.259413242340088
    9. ' dfs' → logprob: -4.259413242340088
    10. ' gcd' → logprob: -4.259413242340088

Token 135: '_count' (ID: 7536)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.30088472366333
    2. '_' → logprob: -1.92588472366333
    3. '_cal' → logprob: -2.17588472366333
    4. '_factor' → logprob: -2.55088472366333
    5. '_count' → logprob: -2.67588472366333
    6. '_it' → logprob: -2.67588472366333
    7. '_work' → logprob: -2.80088472366333
    8. '_s' → logprob: -3.05088472366333
    9. '_compute' → logprob: -3.30088472366333
    10. '_m' → logprob: -3.55088472366333

Token 136: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005491026677191257
    2. '(' → logprob: -7.62554931640625
    3. 'self' → logprob: -9.87554931640625
    4. ' (' → logprob: -12.62554931640625
    5. '(s' → logprob: -12.62554931640625
    6. '()' → logprob: -14.50054931640625
    7. '():' → logprob: -14.62554931640625
    8. 's' → logprob: -14.62554931640625
    9. '(sel' → logprob: -14.75054931640625
    10. '(se' → logprob: -15.00054931640625

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022562142461538315
    2. '):' → logprob: -4.147562026977539
    3. ' ,' → logprob: -5.147562026977539
    4. ' ):' → logprob: -7.897562026977539
    5. 'self' → logprob: -8.522562026977539
    6. ')' → logprob: -9.897562026977539
    7. '):
' → logprob: -11.397562026977539
    8. '(' → logprob: -12.272562026977539
    9. ':' → logprob: -12.397562026977539
    10. ',
' → logprob: -12.397562026977539

Token 138: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4387437403202057
    2. '):' → logprob: -1.1887437105178833
    3. ' self' → logprob: -3.813743829727173
    4. '):
' → logprob: -4.313743591308594
    5. ' ):' → logprob: -5.563743591308594
    6. 'n' → logprob: -5.688743591308594
    7. ')' → logprob: -6.188743591308594
    8. ' ' → logprob: -6.813743591308594
    9. 'x' → logprob: -7.438743591308594
    10. 'd' → logprob: -7.438743591308594

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.045181237161159515
    2. ',' → logprob: -3.2951812744140625
    3. 'self' → logprob: -5.4201812744140625
    4. '):
' → logprob: -6.0451812744140625
    5. ' ):' → logprob: -8.920181274414062
    6. '   ' → logprob: -10.545181274414062
    7. ')' → logprob: -10.545181274414062
    8. '       ' → logprob: -10.795181274414062
    9. '):
' → logprob: -10.920181274414062
    10. ':' → logprob: -11.045181274414062

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27621006965637207
    2. '       ' → logprob: -1.651210069656372
    3. '<|end|>' → logprob: -3.401210069656372
    4. '        ' → logprob: -5.026209831237793
    5. '               ' → logprob: -6.276209831237793
    6. '   ' → logprob: -6.276209831237793
    7. ' ' → logprob: -6.901209831237793
    8. ')' → logprob: -6.901209831237793
    9. '	       ' → logprob: -7.401209831237793
    10. ',' → logprob: -7.401209831237793

Token 141: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2580023407936096
    2. '       ' → logprob: -2.633002281188965
    3. 'if' → logprob: -2.633002281188965
    4. ' pass' → logprob: -3.758002281188965
    5. '        ' → logprob: -4.008002281188965
    6. ' for' → logprob: -4.133002281188965
    7. '           ' → logprob: -5.383002281188965
    8. ' ' → logprob: -5.633002281188965
    9. ' self' → logprob: -6.258002281188965
    10. '    ' → logprob: -6.258002281188965

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.202265664935112
    2. '=' → logprob: -1.7022656202316284
    3. '_' → logprob: -8.077265739440918
    4. ' ' → logprob: -8.452265739440918
    5. ')' → logprob: -8.952265739440918
    6. ',' → logprob: -9.952265739440918
    7. '_idx' → logprob: -10.452265739440918
    8. '[' → logprob: -10.827265739440918
    9. '   ' → logprob: -11.077265739440918
    10. 'x' → logprob: -11.452265739440918

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2676253020763397
    2. ' self' → logprob: -2.267625331878662
    3. '(self' → logprob: -2.517625331878662
    4. ' (' → logprob: -3.267625331878662
    5. '0' → logprob: -5.267625331878662
    6. '(' → logprob: -6.017625331878662
    7. 'math' → logprob: -6.517625331878662
    8. 'pow' → logprob: -6.892625331878662
    9. ' math' → logprob: -7.142625331878662
    10. '((' → logprob: -8.267624855041504

Token 144: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -0.2521962821483612
    2. '.n' → logprob: -1.6271963119506836
    3. '.' → logprob: -3.7521963119506836
    4. ' .' → logprob: -6.252196311950684
    5. '.m' → logprob: -8.752196311950684
    6. 'k' → logprob: -8.752196311950684
    7. '.g' → logprob: -8.877196311950684
    8. 'n' → logprob: -9.877196311950684
    9. 'import' → logprob: -10.127196311950684
    10. '.result' → logprob: -10.127196311950684

Token 145: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0561714768409729
    2. '//' → logprob: -2.931171417236328
    3. '+' → logprob: -7.056171417236328
    4. ' ' → logprob: -9.306171417236328
    5. ' +' → logprob: -9.306171417236328
    6. ' idx' → logprob: -9.931171417236328
    7. '[idx' → logprob: -10.181171417236328
    8. 'idx' → logprob: -10.431171417236328
    9. ' #' → logprob: -10.431171417236328
    10. '
' → logprob: -10.681171417236328

Token 146: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0034755785018205643
    2. ' idx' → logprob: -6.378475666046143
    3. '(idx' → logprob: -6.378475666046143
    4. '(' → logprob: -9.628475189208984
    5. ' (' → logprob: -12.378475189208984
    6. '[idx' → logprob: -12.878475189208984
    7. '	idx' → logprob: -14.253475189208984
    8. 'self' → logprob: -16.003475189208984
    9. '_idx' → logprob: -16.253475189208984
    10. '.idx' → logprob: -16.253475189208984

Token 147: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44152626395225525
    2. '           ' → logprob: -2.191526174545288
    3. '       ' → logprob: -2.691526174545288
    4. ' +' → logprob: -2.816526174545288
    5. '
' → logprob: -3.191526174545288
    6. ' -' → logprob: -3.941526174545288
    7. '<|end|>' → logprob: -4.316526412963867
    8. ' ' → logprob: -4.566526412963867
    9. '-' → logprob: -4.941526412963867
    10. ')' → logprob: -5.441526412963867

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07881157845258713
    2. '<|end|>' → logprob: -3.3288116455078125
    3. ')' → logprob: -4.2038116455078125
    4. '
' → logprob: -4.4538116455078125
    5. '       ' → logprob: -5.5788116455078125
    6. ' ' → logprob: -6.4538116455078125
    7. ' 
' → logprob: -6.8288116455078125
    8. '            
' → logprob: -6.9538116455078125
    9. ',' → logprob: -7.0788116455078125
    10. '<|end|>' → logprob: -7.2038116455078125

Token 149: ' combos' (ID: 150243)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9378113746643066
    2. ' res' → logprob: -2.1878113746643066
    3. ' for' → logprob: -2.3128113746643066
    4. 'for' → logprob: -2.6878113746643066
    5. 'self' → logprob: -2.8128113746643066
    6. ' self' → logprob: -2.8128113746643066
    7. 'res' → logprob: -2.9378113746643066
    8. ' if' → logprob: -3.3128113746643066
    9. 'if' → logprob: -3.6878113746643066
    10. ' ans' → logprob: -3.9378113746643066

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889919251203537
    2. '=' → logprob: -2.46399188041687
    3. ' ' → logprob: -11.33899211883545
    4. ')' → logprob: -11.71399211883545
    5. ',' → logprob: -11.96399211883545
    6. '_count' → logprob: -12.46399211883545
    7. '[' → logprob: -12.71399211883545
    8. '   ' → logprob: -12.71399211883545
    9. '.' → logprob: -12.83899211883545
    10. '_' → logprob: -13.08899211883545

Token 151: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.06569288671016693
    2. ' pow' → logprob: -3.065692901611328
    3. '(' → logprob: -5.565692901611328
    4. '(pow' → logprob: -5.565692901611328
    5. 'self' → logprob: -6.065692901611328
    6. 'cnt' → logprob: -6.190692901611328
    7. ' (' → logprob: -6.815692901611328
    8. 'math' → logprob: -7.065692901611328
    9. ' self' → logprob: -7.065692901611328
    10. '(cnt' → logprob: -7.440692901611328

Token 152: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.512036919593811
    2. '(' → logprob: -1.012036919593811
    3. '(self' → logprob: -3.7620368003845215
    4. '2' → logprob: -4.6370368003845215
    5. '(m' → logprob: -6.8870368003845215
    6. '(idx' → logprob: -7.2620368003845215
    7. 'cnt' → logprob: -7.3870368003845215
    8. '(
' → logprob: -7.5120368003845215
    9. '(k' → logprob: -7.6370368003845215
    10. '(n' → logprob: -7.7620368003845215

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03392460569739342
    2. ' ,' → logprob: -4.283924579620361
    3. '(cnt' → logprob: -5.033924579620361
    4. ',n' → logprob: -5.408924579620361
    5. '(' → logprob: -5.533924579620361
    6. ',k' → logprob: -6.283924579620361
    7. '(n' → logprob: -7.033924579620361
    8. '+' → logprob: -8.28392505645752
    9. '[cnt' → logprob: -8.28392505645752
    10. '2' → logprob: -8.40892505645752

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032215642277151346
    2. ' self' → logprob: -5.75322151184082
    3. 'n' → logprob: -10.25322151184082
    4. '(self' → logprob: -12.50322151184082
    5. '           ' → logprob: -13.62822151184082
    6. '   ' → logprob: -13.75322151184082
    7. '       ' → logprob: -13.87822151184082
    8. '               ' → logprob: -14.62822151184082
    9. ' ' → logprob: -15.25322151184082
    10. ' n' → logprob: -15.62822151184082

Token 155: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00013131031300872564
    2. 'n' → logprob: -9.000131607055664
    3. 'self' → logprob: -12.000131607055664
    4. '.' → logprob: -13.625131607055664
    5. '.k' → logprob: -16.250131607055664
    6. '.self' → logprob: -16.250131607055664
    7. '   ' → logprob: -17.375131607055664
    8. '(n' → logprob: -17.500131607055664
    9. '.m' → logprob: -17.625131607055664
    10. ' ' → logprob: -17.625131607055664

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006878172513097525
    2. ' ,' → logprob: -5.13187837600708
    3. ')' → logprob: -7.00687837600708
    4. ',m' → logprob: -11.256877899169922
    5. ',k' → logprob: -11.756877899169922
    6. ',end' → logprob: -12.256877899169922
    7. ',n' → logprob: -13.506877899169922
    8. ',
' → logprob: -13.506877899169922
    9. '   ' → logprob: -13.631877899169922
    10. ' )' → logprob: -13.631877899169922

Token 157: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023924285545945168
    2. 'self' → logprob: -3.7739243507385254
    3. ' m' → logprob: -7.648924350738525
    4. ' self' → logprob: -9.023923873901367
    5. '           ' → logprob: -9.523923873901367
    6. '               ' → logprob: -12.773923873901367
    7. '   ' → logprob: -13.273923873901367
    8. '                   ' → logprob: -13.273923873901367
    9. '
' → logprob: -14.523923873901367
    10. '       ' → logprob: -15.398923873901367

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.523948907968588e-05
    2. ')
' → logprob: -11.000035285949707
    3. ' )' → logprob: -11.125035285949707
    4. ')*' → logprob: -13.625035285949707
    5. ')

' → logprob: -14.625035285949707
    6. '),' → logprob: -15.125035285949707
    7. ')%' → logprob: -15.625035285949707
    8. '))' → logprob: -15.750035285949707
    9. ')return' → logprob: -15.750035285949707
    10. ' ' → logprob: -15.875035285949707

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05986107885837555
    2. '
' → logprob: -3.809861183166504
    3. ')' → logprob: -4.059861183166504
    4. '<|end|>' → logprob: -5.184861183166504
    5. '       ' → logprob: -5.684861183166504
    6. '\n' → logprob: -5.934861183166504
    7. '            
' → logprob: -5.934861183166504
    8. ',' → logprob: -6.059861183166504
    9. ' 
' → logprob: -8.184861183166504
    10. ')
' → logprob: -8.684861183166504

Token 160: ' step' (ID: 5983)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22441913187503815
    2. 'self' → logprob: -2.474419116973877
    3. 'result' → logprob: -2.724419116973877
    4. 'return' → logprob: -4.474419116973877
    5. 'for' → logprob: -4.599419116973877
    6. 'res' → logprob: -5.099419116973877
    7. '            
' → logprob: -5.474419116973877
    8. ' for' → logprob: -5.724419116973877
    9. ' self' → logprob: -5.724419116973877
    10. '       ' → logprob: -5.849419116973877

Token 161: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17892278730869293
    2. '=' → logprob: -1.9289227724075317
    3. 's' → logprob: -4.553922653198242
    4. '   ' → logprob: -5.303922653198242
    5. ' ' → logprob: -7.053922653198242
    6. '_result' → logprob: -7.678922653198242
    7. '       ' → logprob: -7.803922653198242
    8. '_size' → logprob: -8.303922653198242
    9. '  ' → logprob: -8.553922653198242
    10. '           ' → logprob: -8.803922653198242

Token 162: 'idx' (ID: 13196)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4893193244934082
    2. 'idx' → logprob: -1.4893193244934082
    3. 'cnt' → logprob: -2.739319324493408
    4. '2' → logprob: -3.239319324493408
    5. '0' → logprob: -3.864319324493408
    6. ' idx' → logprob: -4.239319324493408
    7. ' ' → logprob: -4.739319324493408
    8. ' cnt' → logprob: -5.364319324493408
    9. '           ' → logprob: -5.614319324493408
    10. 'self' → logprob: -6.489319324493408

Token 163: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7277328968048096
    2. '
' → logprob: -0.7277328968048096
    3. ' +' → logprob: -4.2277326583862305
    4. '*' → logprob: -4.8527326583862305
    5. '       ' → logprob: -6.3527326583862305
    6. '+
' → logprob: -6.6027326583862305
    7. ' 
' → logprob: -6.7277326583862305
    8. '           ' → logprob: -6.9777326583862305
    9. ',' → logprob: -7.3527326583862305
    10. '        
' → logprob: -7.4777326583862305

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15921971201896667
    2. 'cnt' → logprob: -2.034219741821289
    3. 'idx' → logprob: -5.534219741821289
    4. '1' → logprob: -6.409219741821289
    5. 'pow' → logprob: -6.659219741821289
    6. '*' → logprob: -6.659219741821289
    7. 'comb' → logprob: -6.659219741821289
    8. 'k' → logprob: -6.784219741821289
    9. 'step' → logprob: -7.034219741821289
    10. 'i' → logprob: -7.159219741821289

Token 165: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1814514696598053
    2. '           ' → logprob: -1.806451439857483
    3. '            
' → logprob: -7.306451320648193
    4. ',' → logprob: -8.556451797485352
    5. ',
' → logprob: -8.681451797485352
    6. '
' → logprob: -8.681451797485352
    7. ' 
' → logprob: -8.806451797485352
    8. '       ' → logprob: -9.181451797485352
    9. '  
' → logprob: -9.806451797485352
    10. '        
' → logprob: -10.556451797485352

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1298590451478958
    2. '
' → logprob: -2.25485897064209
    3. '<|end|>' → logprob: -4.50485897064209
    4. '<|end|>' → logprob: -6.00485897064209
    5. ',' → logprob: -7.12985897064209
    6. '            
' → logprob: -7.25485897064209
    7. ')' → logprob: -7.87985897064209
    8. '       ' → logprob: -8.12985897064209
    9. '```' → logprob: -8.25485897064209
    10. ',
' → logprob: -9.00485897064209

Token 167: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4780883193016052
    2. 'while' (adapté à ' while') → logprob: -1.22808837890625
    3. 'for' → logprob: -2.97808837890625
    4. ' while' → logprob: -3.47808837890625
    5. ' for' → logprob: -5.60308837890625
    6. 'i' → logprob: -6.85308837890625
    7. ' i' → logprob: -8.47808837890625
    8. '       ' → logprob: -9.10308837890625
    9. 'if' → logprob: -9.60308837890625
    10. 'self' → logprob: -10.35308837890625

Token 168: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0007137430948205292
    2. ' step' → logprob: -7.25071382522583
    3. '(step' → logprob: -12.500713348388672
    4. '	step' → logprob: -17.625713348388672
    5. '   ' → logprob: -19.250713348388672
    6. 'Step' → logprob: -20.125713348388672
    7. '           ' → logprob: -20.250713348388672
    8. ' ' → logprob: -20.250713348388672
    9. '.step' → logprob: -21.250713348388672
    10. '(' → logprob: -21.375713348388672

Token 169: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759692192077637
    2. ' <=' → logprob: -0.8259692192077637
    3. '<' → logprob: -11.450969696044922
    4. ' <' → logprob: -12.075969696044922
    5. '=' → logprob: -12.200969696044922
    6. '+=' → logprob: -13.450969696044922
    7. ')<=' → logprob: -13.450969696044922
    8. '<len' → logprob: -13.700969696044922
    9. ')' → logprob: -14.075969696044922
    10. ']<=' → logprob: -14.325969696044922

Token 170: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001996066712308675
    2. ' self' → logprob: -9.125199317932129
    3. 'k' → logprob: -9.375199317932129
    4. '(self' → logprob: -13.500199317932129
    5. 'sel' → logprob: -14.250199317932129
    6. 's' → logprob: -14.250199317932129
    7. '   ' → logprob: -14.500199317932129
    8. 'elf' → logprob: -14.750199317932129
    9. '	self' → logprob: -14.750199317932129
    10. 'K' → logprob: -15.000199317932129

Token 171: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -3.1424973713001236e-05
    2. 'k' → logprob: -10.375031471252441
    3. 'self' → logprob: -16.250030517578125
    4. '.' → logprob: -16.625030517578125
    5. '	k' → logprob: -17.250030517578125
    6. ',k' → logprob: -18.125030517578125
    7. ' k' → logprob: -18.375030517578125
    8. '.K' → logprob: -18.750030517578125
    9. '```' → logprob: -18.875030517578125
    10. 'K' → logprob: -19.000030517578125

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.386933296918869
    2. ':
' → logprob: -1.1369333267211914
    3. ' and' → logprob: -11.261933326721191
    4. ':

' → logprob: -11.386933326721191
    5. ',' → logprob: -11.511933326721191
    6. ' :
' → logprob: -11.886933326721191
    7. '):
' → logprob: -12.136933326721191
    8. ' :' → logprob: -12.136933326721191
    9. '           ' → logprob: -12.511933326721191
    10. ':
' → logprob: -12.636933326721191

Token 173: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007617156486958265
    2. 'self' → logprob: -5.132616996765137
    3. ' self' → logprob: -7.257616996765137
    4. '           ' → logprob: -7.507616996765137
    5. ',' → logprob: -8.257616996765137
    6. '<|end|>' → logprob: -9.632616996765137
    7. '   ' → logprob: -10.382616996765137
    8. '```' → logprob: -11.007616996765137
    9. '	           ' → logprob: -11.257616996765137
    10. '                
' → logprob: -12.007616996765137

Token 174: ' combos' (ID: 150243)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.060904376208782196
    2. 'comb' → logprob: -3.3109042644500732
    3. ' self' → logprob: -4.810904502868652
    4. ' combos' → logprob: -4.810904502868652
    5. '           ' → logprob: -5.435904502868652
    6. '               ' → logprob: -6.935904502868652
    7. 'com' → logprob: -7.435904502868652
    8. ' comb' → logprob: -8.935904502868652
    9. 'cnt' → logprob: -9.810904502868652
    10. '   ' → logprob: -10.060904502868652

Token 175: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.22573083639144897
    2. ' -=' → logprob: -1.7257308959960938
    3. '=' → logprob: -4.100730895996094
    4. ' =' → logprob: -5.100730895996094
    5. '-' → logprob: -7.225730895996094
    6. '+=' → logprob: -7.725730895996094
    7. '[' → logprob: -9.600730895996094
    8. '   ' → logprob: -10.225730895996094
    9. ' +=' → logprob: -10.350730895996094
    10. '=(' → logprob: -10.350730895996094

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001173917087726295
    2. ' self' → logprob: -6.751173973083496
    3. '           ' → logprob: -13.126173973083496
    4. '               ' → logprob: -13.501173973083496
    5. '                   ' → logprob: -16.12617301940918
    6. '(self' → logprob: -16.37617301940918
    7. '	self' → logprob: -16.87617301940918
    8. '   ' → logprob: -17.37617301940918
    9. 'pow' → logprob: -17.37617301940918
    10. 'result' → logprob: -18.37617301940918

Token 177: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.856408536899835e-05
    2. 'ans' → logprob: -10.625028610229492
    3. '.step' → logprob: -13.125028610229492
    4. ' .' → logprob: -13.500028610229492
    5. '	ans' → logprob: -14.875028610229492
    6. '(ans' → logprob: -16.250028610229492
    7. '.Ans' → logprob: -16.625028610229492
    8. 'step' → logprob: -16.875028610229492
    9. '.answer' → logprob: -17.000028610229492
    10. '.k' → logprob: -17.375028610229492

Token 178: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.054500666621607e-06
    2. ' ans' → logprob: -13.50000286102295
    3. 'g' → logprob: -14.87500286102295
    4. 'step' → logprob: -15.62500286102295
    5. '(ans' → logprob: -15.62500286102295
    6. 'do' → logprob: -16.000003814697266
    7. 'pow' → logprob: -16.250003814697266
    8. 'k' → logprob: -16.250003814697266
    9. 's' → logprob: -16.375003814697266
    10. '	ans' → logprob: -16.375003814697266

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.190178904333152e-05
    2. 'step' → logprob: -10.500031471252441
    3. '[
' → logprob: -13.000031471252441
    4. '(step' → logprob: -13.875031471252441
    5. ' step' → logprob: -14.625031471252441
    6. ' [' → logprob: -15.000031471252441
    7. '```' → logprob: -16.375032424926758
    8. 'Step' → logprob: -16.625032424926758
    9. '	step' → logprob: -16.875032424926758
    10. '[self' → logprob: -17.125032424926758

Token 180: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0015221221838146448
    2. '[' → logprob: -6.501522064208984
    3. ' step' → logprob: -11.001522064208984
    4. '(step' → logprob: -12.751522064208984
    5. '	step' → logprob: -15.751522064208984
    6. '.step' → logprob: -17.001522064208984
    7. '[
' → logprob: -17.876522064208984
    8. 'steps' → logprob: -18.376522064208984
    9. 'Step' → logprob: -18.876522064208984
    10. '[int' → logprob: -19.376522064208984

Token 181: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0042195552960038185
    2. '<|end|>' → logprob: -6.3792195320129395
    3. '[' → logprob: -6.8792195320129395
    4. '<|end|>' → logprob: -7.6292195320129395
    5. ' ]' → logprob: -8.504220008850098
    6. '[idx' → logprob: -8.879220008850098
    7. ']*' → logprob: -9.129220008850098
    8. '])' → logprob: -9.379220008850098
    9. 'step' → logprob: -9.629220008850098
    10. ']
' → logprob: -10.004220008850098

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20166534185409546
    2. ' step' → logprob: -2.3266654014587402
    3. 'step' → logprob: -3.5766654014587402
    4. '                
' → logprob: -3.9516654014587402
    5. ' 
' → logprob: -4.57666540145874
    6. '(step' → logprob: -5.07666540145874
    7. '            
' → logprob: -5.20166540145874
    8. '           ' → logprob: -5.45166540145874
    9. '
' → logprob: -6.20166540145874
    10. '  
' → logprob: -6.32666540145874

Token 183: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.8195585608482361
    2. ' step' → logprob: -0.9445585608482361
    3. '               ' → logprob: -1.9445586204528809
    4. ' combos' → logprob: -3.694558620452881
    5. '           ' → logprob: -6.819558620452881
    6. 'self' → logprob: -7.069558620452881
    7. 'comb' → logprob: -9.194558143615723
    8. '                
' → logprob: -9.319558143615723
    9. '                   ' → logprob: -9.569558143615723
    10. '+' → logprob: -9.694558143615723

Token 184: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004108323249965906
    2. ' +=' → logprob: -5.504108428955078
    3. '=' → logprob: -10.629108428955078
    4. '   ' → logprob: -13.379108428955078
    5. ']+=' → logprob: -14.129108428955078
    6. '*=' → logprob: -14.254108428955078
    7. '+="' → logprob: -14.379108428955078
    8. '[' → logprob: -14.379108428955078
    9. '```' → logprob: -14.504108428955078
    10. '+=(' → logprob: -15.004108428955078

Token 185: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.5332478142227046e-05
    2. ' idx' → logprob: -11.125015258789062
    3. 'index' → logprob: -14.750015258789062
    4. 'step' → logprob: -16.125015258789062
    5. '	idx' → logprob: -16.750015258789062
    6. '(idx' → logprob: -18.625015258789062
    7. '_idx' → logprob: -19.750015258789062
    8. 'IDX' → logprob: -20.000015258789062
    9. '1' → logprob: -20.750015258789062
    10. 'Idx' → logprob: -20.875015258789062

Token 186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003489954397082329
    2. '
' → logprob: -5.753489971160889
    3. '            
' → logprob: -9.62848949432373
    4. '               ' → logprob: -9.87848949432373
    5. 'self' → logprob: -10.25348949432373
    6. ',' → logprob: -10.50348949432373
    7. '+' → logprob: -10.62848949432373
    8. '```' → logprob: -11.12848949432373
    9. '       ' → logprob: -11.37848949432373
    10. ' self' → logprob: -11.75348949432373

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005808513145893812
    2. '
' → logprob: -5.505808353424072
    3. '               ' → logprob: -7.755808353424072
    4. '+' → logprob: -8.00580883026123
    5. '            
' → logprob: -8.50580883026123
    6. '\n' → logprob: -9.25580883026123
    7. '       ' → logprob: -9.63080883026123
    8. 'self' → logprob: -9.75580883026123
    9. ' 
' → logprob: -9.88080883026123
    10. ',' → logprob: -9.88080883026123

Token 188: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01570667326450348
    2. 'self' (adapté à ' self') → logprob: -4.890706539154053
    3. '+' → logprob: -5.140706539154053
    4. ' self' → logprob: -6.890706539154053
    5. ' +' → logprob: -7.765706539154053
    6. '+self' → logprob: -8.515707015991211
    7. '       ' → logprob: -8.765707015991211
    8. '\' → logprob: -9.265707015991211
    9. '               ' → logprob: -9.765707015991211
    10. '
' → logprob: -9.890707015991211

Token 189: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.9040898880339228e-05
    2. ' .' → logprob: -10.625028610229492
    3. '       ' → logprob: -13.125028610229492
    4. '​.' → logprob: -14.625028610229492
    5. '.answer' → logprob: -15.375028610229492
    6. '           ' → logprob: -15.375028610229492
    7. '   ' → logprob: -15.625028610229492
    8. '.py' → logprob: -15.625028610229492
    9. '.answers' → logprob: -15.625028610229492
    10. '`.' → logprob: -16.125028610229492

Token 190: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.143808109802194e-05
    2. 'do' → logprob: -10.125041007995605
    3. ' ans' → logprob: -15.375041007995605
    4. 'set' → logprob: -16.000041961669922
    5. '	ans' → logprob: -16.250041961669922
    6. 'g' → logprob: -16.375041961669922
    7. '   ' → logprob: -16.375041961669922
    8. 'add' → logprob: -16.625041961669922
    9. '__' → logprob: -16.625041961669922
    10. 'a' → logprob: -16.750041961669922

Token 191: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.001517834491096437
    2. '[' → logprob: -6.5015177726745605
    3. '[index' → logprob: -12.376518249511719
    4. '[token' → logprob: -12.876518249511719
    5. '[ind' → logprob: -13.501518249511719
    6. '```' → logprob: -13.626518249511719
    7. '[id' → logprob: -13.876518249511719
    8. ')[' → logprob: -14.001518249511719
    9. '[Index' → logprob: -14.251518249511719
    10. '[val' → logprob: -14.501518249511719

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010129223810508847
    2. ']=' → logprob: -7.376012802124023
    3. ' ]' → logprob: -7.876012802124023
    4. ']+=' → logprob: -12.501012802124023
    5. '])' → logprob: -13.751012802124023
    6. ')' → logprob: -13.751012802124023
    7. ']=(' → logprob: -15.001012802124023
    8. ']
' → logprob: -16.126012802124023
    9. '=' → logprob: -16.501012802124023
    10. ']==' → logprob: -17.251012802124023

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31347256898880005
    2. ' =' → logprob: -1.3134725093841553
    3. '+=' → logprob: -9.188472747802734
    4. ' +=' → logprob: -9.313472747802734
    5. ' %=' → logprob: -11.813472747802734
    6. '%=' → logprob: -12.188472747802734
    7. ' ' → logprob: -13.063472747802734
    8. '=int' → logprob: -13.563472747802734
    9. ')' → logprob: -15.063472747802734
    10. '.=' → logprob: -15.063472747802734

Token 194: ' combos' (ID: 150243)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0076718139462172985
    2. ' combos' → logprob: -4.88267183303833
    3. '(' → logprob: -10.382671356201172
    4. 'combo' → logprob: -10.632671356201172
    5. '(com' → logprob: -12.632671356201172
    6. ' (' → logprob: -13.007671356201172
    7. 'mod' → logprob: -13.132671356201172
    8. 'cmb' → logprob: -14.132671356201172
    9. 'Comb' → logprob: -14.632671356201172
    10. 'mods' → logprob: -15.007671356201172

Token 195: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8325353860855103
    2. '<|end|>' → logprob: -0.9575353860855103
    3. '
' → logprob: -2.2075352668762207
    4. '           ' → logprob: -2.8325352668762207
    5. '<|end|>' → logprob: -5.207535266876221
    6. '\n' → logprob: -6.707535266876221
    7. '+
' → logprob: -6.832535266876221
    8. '       ' → logprob: -7.207535266876221
    9. ' 
' → logprob: -7.582535266876221
    10. ' +' → logprob: -7.707535266876221

Token 196: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.165027217415627e-05
    2. ' m' → logprob: -10.750021934509277
    3. '(m' → logprob: -16.00002098083496
    4. '<|end|>' → logprob: -18.12502098083496
    5. '	m' → logprob: -18.75002098083496
    6. '(' → logprob: -18.87502098083496
    7. 'mod' → logprob: -19.25002098083496
    8. ' ' → logprob: -19.50002098083496
    9. '%m' → logprob: -19.87502098083496
    10. ')m' → logprob: -20.25002098083496

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' gc' (ID: 30765)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08501763641834259
    2. '<|end|>' → logprob: -3.085017681121826
    3. '   ' → logprob: -4.960017681121826
    4. '+' → logprob: -5.085017681121826
    5. '	' → logprob: -5.585017681121826
    6. 'def' → logprob: -5.960017681121826
    7. '
' → logprob: -6.085017681121826
    8. '    ' → logprob: -6.460017681121826
    9. '        
' → logprob: -6.460017681121826
    10. '           ' → logprob: -6.460017681121826

Token 200: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001564586127642542
    2. 'dc' → logprob: -9.50015640258789
    3. 'ounter' → logprob: -10.12515640258789
    4. 'Counter' → logprob: -11.12515640258789
    5. '.' → logprob: -11.62515640258789
    6. ' d' → logprob: -11.87515640258789
    7. '.d' → logprob: -12.37515640258789
    8. '.Counter' → logprob: -13.75015640258789
    9. '_d' → logprob: -14.00015640258789
    10. 'ount' → logprob: -14.25015640258789

Token 201: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0005537479883059859
    2. ' G' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.000554084777832
    4. ' ' → logprob: -15.125554084777832
    5. '  ' → logprob: -15.375554084777832
    6. '	G' → logprob: -16.875553131103516
    7. '_G' → logprob: -19.625553131103516
    8. '    ' → logprob: -19.875553131103516
    9. '.G' → logprob: -20.500553131103516
    10. 'Gc' → logprob: -21.000553131103516

Token 202: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.200166469876422e-06
    2. 'c' → logprob: -12.250004768371582
    3. 'cdn' → logprob: -15.875004768371582
    4. '```' → logprob: -16.5000057220459
    5. 'cdf' → logprob: -16.7500057220459
    6. 'Cd' → logprob: -18.0000057220459
    7. '	cd' → logprob: -18.1250057220459
    8. '_cd' → logprob: -18.2500057220459
    9. '{' → logprob: -18.3750057220459
    10. ' cd' → logprob: -18.5000057220459

Token 203: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.700132997939363e-05
    2. 'ounter' → logprob: -11.000017166137695
    3. 'Count' → logprob: -16.000017166137695
    4. 'counter' → logprob: -16.875017166137695
    5. '_counter' → logprob: -17.250017166137695
    6. 'Coun' → logprob: -17.375017166137695
    7. 'C' → logprob: -17.625017166137695
    8. ' Counter' → logprob: -19.375017166137695
    9. 'Cou' → logprob: -20.250017166137695
    10. '.Counter' → logprob: -20.375017166137695

Token 204: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004088373854756355
    2. '(k' → logprob: -5.504088401794434
    3. ' (' → logprob: -12.254088401794434
    4. 'n' → logprob: -12.754088401794434
    5. '(' → logprob: -13.379088401794434
    6. 'k' → logprob: -14.379088401794434
    7. '   ' → logprob: -17.504087448120117
    8. ' ' → logprob: -17.754087448120117
    9. ' n' → logprob: -18.004087448120117
    10. '((' → logprob: -18.004087448120117

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000577696890104562
    2. ',k' → logprob: -7.500577926635742
    3. ' ,' → logprob: -10.625577926635742
    4. ',
' → logprob: -15.750577926635742
    5. 'k' → logprob: -16.000577926635742
    6. '   ' → logprob: -16.750577926635742
    7. ' ' → logprob: -17.500577926635742
    8. ')' → logprob: -17.625577926635742
    9. ' k' → logprob: -17.875577926635742
    10. ',n' → logprob: -18.000577926635742

Token 206: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029756737872958183
    2. ' k' → logprob: -3.529756784439087
    3. '   ' → logprob: -12.279756546020508
    4. ' ' → logprob: -14.029756546020508
    5. '  ' → logprob: -15.029756546020508
    6. '	k' → logprob: -15.654756546020508
    7. ')' → logprob: -16.279756546020508
    8. '    ' → logprob: -17.154756546020508
    9. ',k' → logprob: -17.779756546020508
    10. '_k' → logprob: -18.029756546020508

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028342308942228556
    2. ')
' → logprob: -5.877834320068359
    3. ')
' → logprob: -10.75283432006836
    4. ' )' → logprob: -11.87783432006836
    5. ')

' → logprob: -14.12783432006836
    6. ' )
' → logprob: -16.12783432006836
    7. '))' → logprob: -17.00283432006836
    8. ' ' → logprob: -17.37783432006836
    9. ')`' → logprob: -17.62783432006836
    10. ');' → logprob: -18.00283432006836

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009957832284271717
    2. 'for' → logprob: -5.009957790374756
    3. ' for' → logprob: -6.009957790374756
    4. '    
' → logprob: -8.009958267211914
    5. '<|end|>' → logprob: -8.134958267211914
    6. '	for' → logprob: -9.509958267211914
    7. '
' → logprob: -10.634958267211914
    8. '  
' → logprob: -11.384958267211914
    9. ' ' → logprob: -11.884958267211914
    10. '<|end|>' → logprob: -12.009958267211914

Token 209: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25592830777168274
    2. '   ' → logprob: -2.1309282779693604
    3. ' for' → logprob: -2.2559282779693604
    4. 'gc' → logprob: -6.2559285163879395
    5. ' gc' → logprob: -8.880928039550781
    6. '
' → logprob: -9.130928039550781
    7. 'def' → logprob: -10.005928039550781
    8. '    
' → logprob: -10.630928039550781
    9. ' ' → logprob: -10.880928039550781
    10. '  ' → logprob: -11.380928039550781

Token 210: ' Imper' (ID: 42716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1548215001821518
    2. ' for' → logprob: -2.1548213958740234
    3. '   ' → logprob: -3.6548213958740234
    4. 'gc' → logprob: -6.654821395874023
    5. ' gc' → logprob: -8.279821395874023
    6. 'def' → logprob: -10.154821395874023
    7. '
' → logprob: -11.029821395874023
    8. ' ' → logprob: -11.404821395874023
    9. '    
' → logprob: -11.904821395874023
    10. '  ' → logprob: -12.154821395874023

Token 211: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.2173192799091339
    2. '   ' → logprob: -1.7173192501068115
    3. 'fect' → logprob: -4.592319488525391
    4. 'for' → logprob: -5.967319488525391
    5. 'atively' → logprob: -6.842319488525391
    6. '  ' → logprob: -7.842319488525391
    7. ' for' → logprob: -7.842319488525391
    8. 't' → logprob: -7.967319488525391
    9. '       ' → logprob: -8.34231948852539
    10. '```' → logprob: -8.59231948852539

Token 212: ' loop' (ID: 11453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5680686831474304
    2. ' for' → logprob: -0.9430686831474304
    3. '   ' → logprob: -3.193068742752075
    4. ' gc' → logprob: -6.568068504333496
    5. 'gc' → logprob: -6.818068504333496
    6. 'def' → logprob: -8.693068504333496
    7. ' ' → logprob: -9.443068504333496
    8. '
' → logprob: -10.318068504333496
    9. '    
' → logprob: -10.818068504333496
    10. '  ' → logprob: -10.943068504333496

Token 213: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.905219316482544
    2. ' for' → logprob: -0.905219316482544
    3. 'for' → logprob: -1.655219316482544
    4. '
' → logprob: -11.030219078063965
    5. ' ' → logprob: -11.530219078063965
    6. '	for' → logprob: -11.905219078063965
    7. '    
' → logprob: -12.905219078063965
    8. '<|end|>' → logprob: -13.030219078063965
    9. '```' → logprob: -13.280219078063965
    10. '  ' → logprob: -13.280219078063965

Token 214: ' just' (ID: 1327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1563882976770401
    2. '   ' → logprob: -2.281388282775879
    3. ' for' → logprob: -3.156388282775879
    4. ' ' → logprob: -10.656388282775879
    5. '  ' → logprob: -11.281388282775879
    6. '
' → logprob: -11.906388282775879
    7. '	for' → logprob: -12.781388282775879
    8. '    
' → logprob: -13.531388282775879
    9. '    ' → logprob: -13.781388282775879
    10. '```' → logprob: -14.656388282775879

Token 215: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9727336168289185
    2. 'for' → logprob: -1.0977336168289185
    3. ' for' → logprob: -1.3477336168289185
    4. 'continue' → logprob: -4.347733497619629
    5. ' continue' → logprob: -4.597733497619629
    6. ' to' → logprob: -6.847733497619629
    7. 'gc' → logprob: -6.972733497619629
    8. ' gc' → logprob: -7.097733497619629
    9. 'to' → logprob: -8.222733497619629
    10. ' ' → logprob: -8.472733497619629

Token 216: ' variation' (ID: 35930)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1734805554151535
    2. 'i' → logprob: -2.17348051071167
    3. ' idx' → logprob: -3.54848051071167
    4. '_' → logprob: -4.79848051071167
    5. 'gc' → logprob: -6.04848051071167
    6. ' i' → logprob: -6.54848051071167
    7. '_idx' → logprob: -6.92348051071167
    8. '_i' → logprob: -6.92348051071167
    9. 'd' → logprob: -7.67348051071167
    10. '_g' → logprob: -8.048480987548828

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36461782455444336
    2. ' for' → logprob: -1.6146178245544434
    3. 'for' → logprob: -2.2396178245544434
    4. '
' → logprob: -10.114618301391602
    5. '	for' → logprob: -11.614618301391602
    6. ' ' → logprob: -11.864618301391602
    7. '    
' → logprob: -12.239618301391602
    8. '<|end|>' → logprob: -12.489618301391602
    9. '```' → logprob: -12.739618301391602
    10. '  ' → logprob: -13.114618301391602

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2301345020532608
    2. ' for' → logprob: -2.1051344871520996
    3. 'for' → logprob: -2.4801344871520996
    4. '```' → logprob: -12.480134963989258
    5. ' ' → logprob: -12.605134963989258
    6. '	for' → logprob: -12.730134963989258
    7. '  ' → logprob: -14.480134963989258
    8. '    
' → logprob: -14.980134963989258
    9. '<|end|>' → logprob: -14.980134963989258
    10. 'def' → logprob: -15.605134963989258

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10391093790531158
    2. '   ' → logprob: -2.3539109230041504
    3. ' for' → logprob: -5.60391092300415
    4. ' ' → logprob: -11.978911399841309
    5. '  ' → logprob: -12.478911399841309
    6. '	for' → logprob: -13.728911399841309
    7. '
' → logprob: -13.853911399841309
    8. '    
' → logprob: -13.978911399841309
    9. '```' → logprob: -14.978911399841309
    10. 'i' → logprob: -16.103910446166992

Token 220: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7186854481697083
    2. ' i' → logprob: -0.8436854481697083
    3. 'idx' → logprob: -3.0936853885650635
    4. 'i' → logprob: -3.4686853885650635
    5. ' x' → logprob: -5.718685626983643
    6. 'x' → logprob: -6.468685626983643
    7. ' ' → logprob: -8.593685150146484
    8. '(i' → logprob: -9.093685150146484
    9. 'd' → logprob: -9.343685150146484
    10. '(idx' → logprob: -9.593685150146484

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033083006273955107
    2. 'in' → logprob: -5.753308296203613
    3. ' ' → logprob: -9.378308296203613
    4. 'range' → logprob: -10.628308296203613
    5. 'n' → logprob: -11.878308296203613
    6. '  ' → logprob: -12.253308296203613
    7. '   ' → logprob: -12.378308296203613
    8. ' range' → logprob: -13.253308296203613
    9. '```' → logprob: -14.378308296203613
    10. 's' → logprob: -14.628308296203613

Token 222: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006739169359207153
    2. ' range' → logprob: -5.006739139556885
    3. 're' → logprob: -11.006739616394043
    4. '   ' → logprob: -12.506739616394043
    5. ' reversed' → logprob: -13.131739616394043
    6. ' ' → logprob: -14.381739616394043
    7. '  ' → logprob: -14.631739616394043
    8. 'reverse' → logprob: -15.131739616394043
    9. 'rang' → logprob: -16.131738662719727
    10. 'k' → logprob: -16.756738662719727

Token 223: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00044092073221690953
    2. 'range' → logprob: -7.750441074371338
    3. '(' → logprob: -12.12544059753418
    4. ' range' → logprob: -12.50044059753418
    5. ' (' → logprob: -13.87544059753418
    6. '   ' → logprob: -17.37544059753418
    7. '	range' → logprob: -17.62544059753418
    8. '(k' → logprob: -17.75044059753418
    9. '(
' → logprob: -17.87544059753418
    10. '((' → logprob: -18.37544059753418

Token 224: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2113979209971149e-05
    2. '1' → logprob: -11.375012397766113
    3. '(k' → logprob: -14.750012397766113
    4. '   ' → logprob: -16.125011444091797
    5. ' (' → logprob: -16.625011444091797
    6. ',' → logprob: -18.500011444091797
    7. ')' → logprob: -18.500011444091797
    8. '(
' → logprob: -19.000011444091797
    9. ' ' → logprob: -19.125011444091797
    10. ')(' → logprob: -20.250011444091797

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16025865077972412
    2. '(' → logprob: -1.9102586507797241
    3. '   ' → logprob: -10.785258293151855
    4. ' ' → logprob: -11.785258293151855
    5. '(k' → logprob: -12.410258293151855
    6. 'k' → logprob: -14.285258293151855
    7. ')' → logprob: -14.535258293151855
    8. '2' → logprob: -14.660258293151855
    9. '
' → logprob: -15.285258293151855
    10. ' (' → logprob: -16.160259246826172

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030578780570067465
    2. ',k' → logprob: -8.375306129455566
    3. ' ,' → logprob: -9.625306129455566
    4. '(k' → logprob: -11.750306129455566
    5. '(' → logprob: -13.875306129455566
    6. '   ' → logprob: -15.875306129455566
    7. ',(' → logprob: -16.50030517578125
    8. ',
' → logprob: -17.50030517578125
    9. ',K' → logprob: -18.50030517578125
    10. '1' → logprob: -19.25030517578125

Token 227: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0013313100207597017
    2. ' k' → logprob: -6.626331329345703
    3. '   ' → logprob: -12.751331329345703
    4. '(k' → logprob: -13.376331329345703
    5. 'gc' → logprob: -15.001331329345703
    6. 'kc' → logprob: -15.751331329345703
    7. ' ' → logprob: -16.376331329345703
    8. '	k' → logprob: -16.376331329345703
    9. '  ' → logprob: -17.251331329345703
    10. '
' → logprob: -17.251331329345703

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021876145619899035
    2. ' +' → logprob: -6.127187728881836
    3. ',' → logprob: -13.627187728881836
    4. '   ' → logprob: -14.127187728881836
    5. ' ' → logprob: -15.377187728881836
    6. '+k' → logprob: -15.627187728881836
    7. '+
' → logprob: -16.877187728881836
    8. '  ' → logprob: -17.002187728881836
    9. '
' → logprob: -17.502187728881836
    10. ')):
' → logprob: -18.752187728881836

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '(' → logprob: -15.375066757202148
    4. '   ' → logprob: -15.750066757202148
    5. '
' → logprob: -15.875066757202148
    6. ')):
' → logprob: -16.25006675720215
    7. '```' → logprob: -16.62506675720215
    8. '))' → logprob: -16.62506675720215
    9. '2' → logprob: -17.12506675720215
    10. ')):' → logprob: -17.37506675720215

Token 230: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0030852556228637695
    2. ')):
' → logprob: -6.503085136413574
    3. '))' → logprob: -6.753085136413574
    4. '):' → logprob: -8.003085136413574
    5. ':' → logprob: -9.878085136413574
    6. ')):
' → logprob: -10.753085136413574
    7. ' ))' → logprob: -13.128085136413574
    8. ' ' → logprob: -13.253085136413574
    9. '   ' → logprob: -13.628085136413574
    10. ')' → logprob: -13.753085136413574

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00275815324857831
    2. ':' → logprob: -7.002758026123047
    3. '):
' → logprob: -7.127758026123047
    4. ':
' → logprob: -7.502758026123047
    5. ' gc' → logprob: -8.877758026123047
    6. 'gc' → logprob: -9.002758026123047
    7. '):' → logprob: -9.252758026123047
    8. '(gc' → logprob: -10.377758026123047
    9. '```' → logprob: -10.752758026123047
    10. '   ' → logprob: -10.752758026123047

Token 232: ' gc' (ID: 30765)
  Prédit: 'gc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gc' (adapté à ' gc') → logprob: -0.039447121322155
    2. ' gc' → logprob: -3.414447069168091
    3. '       ' → logprob: -5.16444730758667
    4. '   ' → logprob: -10.414446830749512
    5. '_gc' → logprob: -10.414446830749512
    6. '(gc' → logprob: -12.164446830749512
    7. '.gc' → logprob: -13.414446830749512
    8. '```' → logprob: -15.289446830749512
    9. 'GC' → logprob: -15.539446830749512
    10. '        
' → logprob: -15.539446830749512

Token 233: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -9.875059127807617
    3. ' .' → logprob: -11.875059127807617
    4. '.perform' → logprob: -15.375059127807617
    5. '#do' → logprob: -16.250059127807617
    6. '   ' → logprob: -16.625059127807617
    7. '.visit' → logprob: -16.625059127807617
    8. '.Do' → logprob: -16.875059127807617
    9. 'do' → logprob: -17.125059127807617
    10. '.run' → logprob: -17.250059127807617

Token 234: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3856492842023727e-06
    2. 'count' → logprob: -13.625000953674316
    3. '_counter' → logprob: -16.250001907348633
    4. ' _' → logprob: -17.250001907348633
    5. '_c' → logprob: -17.250001907348633
    6. '_counts' → logprob: -18.500001907348633
    7. '_' → logprob: -18.500001907348633
    8. '_COUNT' → logprob: -18.875001907348633
    9. '_co' → logprob: -19.750001907348633
    10. '_do' → logprob: -20.000001907348633

Token 235: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -15.500075340270996
    4. ' (' → logprob: -16.62507438659668
    5. '(ii' → logprob: -18.50007438659668
    6. ' ' → logprob: -19.87507438659668
    7. '(a' → logprob: -20.25007438659668
    8. '(I' → logprob: -20.37507438659668
    9. '((' → logprob: -20.62507438659668
    10. '(in' → logprob: -21.12507438659668

Token 236: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.180879816180095e-05
    2. ')
' → logprob: -9.875051498413086
    3. '))' → logprob: -15.750051498413086
    4. ' )' → logprob: -16.500051498413086
    5. ')

' → logprob: -17.250051498413086
    6. ')
' → logprob: -17.500051498413086
    7. '),' → logprob: -18.250051498413086
    8. ')return' → logprob: -18.375051498413086
    9. ')}' → logprob: -18.750051498413086
    10. ')`' → logprob: -18.750051498413086

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00714027089998126
    2. 'print' → logprob: -5.257140159606934
    3. 'p' → logprob: -6.632140159606934
    4. '
' → logprob: -8.257140159606934
    5. 'result' → logprob: -8.757140159606934
    6. 'for' → logprob: -10.132140159606934
    7. 'return' → logprob: -10.257140159606934
    8. '<|end|>' → logprob: -10.257140159606934
    9. '```' → logprob: -10.257140159606934
    10. '    
' → logprob: -11.132140159606934

Token 238: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5592501759529114
    2. 'p' → logprob: -0.9342501759529114
    3. 'print' → logprob: -3.5592501163482666
    4. 'for' → logprob: -5.184250354766846
    5. 'result' → logprob: -6.934250354766846
    6. '```' → logprob: -8.309249877929688
    7. ' for' → logprob: -9.434249877929688
    8. '    
' → logprob: -10.434249877929688
    9. 'return' → logprob: -11.184249877929688
    10. '
' → logprob: -11.684249877929688

Token 239: ' List' (ID: 2655)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6093840599060059
    2. 'result' → logprob: -1.3593840599060059
    3. '   ' → logprob: -2.609384059906006
    4. ' result' → logprob: -2.984384059906006
    5. 'print' → logprob: -2.984384059906006
    6. 'for' → logprob: -4.984384059906006
    7. ' for' → logprob: -4.984384059906006
    8. ' print' → logprob: -5.609384059906006
    9. 'return' → logprob: -5.859384059906006
    10. ' p' → logprob: -6.484384059906006

Token 240: ' comp' (ID: 1050)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6363826394081116
    2. 'result' → logprob: -1.5113825798034668
    3. '=' → logprob: -2.761382579803467
    4. '_to' → logprob: -3.511382579803467
    5. ' comprehension' → logprob: -3.511382579803467
    6. '[' → logprob: -3.886382579803467
    7. 'print' → logprob: -4.386382579803467
    8. 's' → logprob: -4.511382579803467
    9. '_of' → logprob: -4.636382579803467
    10. '_result' → logprob: -4.761382579803467

Token 241: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2960992157459259
    2. 'result' → logprob: -2.1710991859436035
    3. '=' → logprob: -2.4210991859436035
    4. '_result' → logprob: -3.5460991859436035
    5. ' result' → logprob: -5.1710991859436035
    6. 's' → logprob: -5.1710991859436035
    7. '[' → logprob: -5.6710991859436035
    8. '   ' → logprob: -5.9210991859436035
    9. '=result' → logprob: -6.4210991859436035
    10. 'ension' → logprob: -7.0460991859436035

Token 242: ' enumerate' (ID: 29671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18447905778884888
    2. 'p' → logprob: -2.059478998184204
    3. '[i' → logprob: -4.684479236602783
    4. 'res' → logprob: -4.934479236602783
    5. 'ans' → logprob: -5.059479236602783
    6. '[' → logprob: -5.184479236602783
    7. 'i' → logprob: -5.684479236602783
    8. 'print' → logprob: -5.934479236602783
    9. 'answer' → logprob: -6.934479236602783
    10. 'sum' → logprob: -7.059479236602783

Token 243: ' and' (ID: 326)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6013449430465698
    2. '   ' → logprob: -1.1013449430465698
    3. ' for' → logprob: -2.7263450622558594
    4. 'for' → logprob: -3.2263450622558594
    5. ' result' → logprob: -4.976345062255859
    6. 'results' → logprob: -5.851345062255859
    7. '(
' → logprob: -6.851345062255859
    8. '(result' → logprob: -7.476345062255859
    9. '
' → logprob: -7.726345062255859
    10. ':' → logprob: -8.10134506225586

Token 244: ' explicit' (ID: 23141)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3658909499645233
    2. 'result' → logprob: -1.9908909797668457
    3. 'p' → logprob: -2.1158909797668457
    4. 'for' → logprob: -3.6158909797668457
    5. 'join' → logprob: -4.990890979766846
    6. ' sum' → logprob: -5.990890979766846
    7. 'max' → logprob: -6.115890979766846
    8. 'sorted' → logprob: -6.115890979766846
    9. 'print' → logprob: -6.240890979766846
    10. 'zip' → logprob: -6.490890979766846

Token 245: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1723468005657196
    2. 'result' → logprob: -2.547346830368042
    3. ' for' → logprob: -3.047346830368042
    4. 'return' → logprob: -3.547346830368042
    5. 'sum' → logprob: -6.422346591949463
    6. ' result' → logprob: -7.797346591949463
    7. 'p' → logprob: -7.797346591949463
    8. ' return' → logprob: -8.422347068786621
    9. 'output' → logprob: -8.797347068786621
    10. 'def' → logprob: -9.172347068786621

Token 246: '-based' (ID: 8235)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3740805983543396
    2. ' for' → logprob: -1.8740806579589844
    3. '   ' → logprob: -2.6240806579589844
    4. 'result' → logprob: -2.6240806579589844
    5. ' =' → logprob: -5.749080657958984
    6. 'results' → logprob: -5.874080657958984
    7. ' result' → logprob: -5.999080657958984
    8. '=' → logprob: -6.499080657958984
    9. 'p' → logprob: -6.999080657958984
    10. 's' → logprob: -7.249080657958984

Token 247: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11029994487762451
    2. 'result' → logprob: -2.735300064086914
    3. ' for' → logprob: -3.485300064086914
    4. 'results' → logprob: -5.985300064086914
    5. ' result' → logprob: -6.235300064086914
    6. 's' → logprob: -6.610300064086914
    7. 'p' → logprob: -6.610300064086914
    8. 'sum' → logprob: -7.485300064086914
    9. 'total' → logprob: -8.860300064086914
    10. '   ' → logprob: -8.860300064086914

Token 248: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13032665848731995
    2. '   ' → logprob: -2.380326747894287
    3. 'total' → logprob: -4.755326747894287
    4. ' result' → logprob: -5.255326747894287
    5. 's' → logprob: -5.630326747894287
    6. '_result' → logprob: -5.755326747894287
    7. 'ans' → logprob: -6.130326747894287
    8. 'res' → logprob: -6.755326747894287
    9. 'answer' → logprob: -6.880326747894287
    10. ' for' → logprob: -7.005326747894287

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8932768702507019
    2. 'result' → logprob: -1.0182769298553467
    3. ' ans' → logprob: -3.0182769298553467
    4. ' result' → logprob: -3.0182769298553467
    5. 'total' → logprob: -3.2682769298553467
    6. 'ans' → logprob: -3.7682769298553467
    7. 'answer' → logprob: -4.143276691436768
    8. 'res' → logprob: -4.268276691436768
    9. ' total' → logprob: -4.518276691436768
    10. ' res' → logprob: -4.893276691436768

Token 250: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21049098670482635
    2. 'answer' → logprob: -2.8354909420013428
    3. 'total' → logprob: -3.2104909420013428
    4. '   ' → logprob: -3.8354909420013428
    5. ' result' → logprob: -4.210491180419922
    6. 'res' → logprob: -4.335491180419922
    7. 'print' → logprob: -4.335491180419922
    8. 'ans' → logprob: -4.460491180419922
    9. 's' → logprob: -5.460491180419922
    10. ' ans' → logprob: -5.835491180419922

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7964337468147278
    2. '_sum' → logprob: -1.171433687210083
    3. '_result' → logprob: -1.796433687210083
    4. '=' → logprob: -2.921433687210083
    5. '_answer' → logprob: -4.921433925628662
    6. '_ans' → logprob: -5.921433925628662
    7. '_count' → logprob: -6.421433925628662
    8. 'sum' → logprob: -6.421433925628662
    9. '_value' → logprob: -6.671433925628662
    10. '_' → logprob: -6.921433925628662

Token 252: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.020206891000270844
    2. ' sum' → logprob: -4.270206928253174
    3. '(sum' → logprob: -5.145206928253174
    4. '(' → logprob: -10.020206451416016
    5. '   ' → logprob: -10.145206451416016
    6. '(
' → logprob: -10.520206451416016
    7. 'pow' → logprob: -10.895206451416016
    8. '(p' → logprob: -11.145206451416016
    9. ' (' → logprob: -11.520206451416016
    10. 'p' → logprob: -11.520206451416016

Token 253: '(i' (ID: 3649)
  Prédit: '(gc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gc' → logprob: -0.0146544324234128
    2. '([' → logprob: -5.139654636383057
    3. '((' → logprob: -5.514654636383057
    4. '(x' → logprob: -6.014654636383057
    5. '(result' → logprob: -7.139654636383057
    6. '(ans' → logprob: -7.889654636383057
    7. '(i' → logprob: -8.139654159545898
    8. '(' → logprob: -8.764654159545898
    9. '(val' → logprob: -8.764654159545898
    10. '(value' → logprob: -8.764654159545898

Token 254: '*a' (ID: 78448)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00870793778449297
    2. ' for' → logprob: -5.2587080001831055
    3. '(ans' → logprob: -6.3837080001831055
    4. '[' → logprob: -7.6337080001831055
    5. ' *' → logprob: -7.7587080001831055
    6. '*' → logprob: -7.8837080001831055
    7. '.result' → logprob: -9.133708000183105
    8. ' .' → logprob: -9.758708000183105
    9. 'for' → logprob: -9.883708000183105
    10. '[i' → logprob: -10.258708000183105

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00944887287914753
    2. 'for' → logprob: -5.009449005126953
    3. 'nt' → logprob: -7.134449005126953
    4. ' in' → logprob: -7.509449005126953
    5. ',' → logprob: -8.134449005126953
    6. 'ns' → logprob: -8.509449005126953
    7. '[' → logprob: -8.634449005126953
    8. '[i' → logprob: -8.759449005126953
    9. 'n' → logprob: -9.259449005126953
    10. 'ct' → logprob: -9.634449005126953

Token 256: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4747203290462494
    2. 'i' → logprob: -0.9747203588485718
    3. ',' → logprob: -7.599720478057861
    4. 'enumer' → logprob: -9.849720001220703
    5. 'a' → logprob: -10.224720001220703
    6. ' ' → logprob: -11.099720001220703
    7. ',i' → logprob: -11.724720001220703
    8. ' a' → logprob: -11.724720001220703
    9. '  ' → logprob: -12.224720001220703
    10. '	i' → logprob: -12.474720001220703

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018833141773939133
    2. ',a' → logprob: -4.018833160400391
    3. 'a' → logprob: -8.39383316040039
    4. ',i' → logprob: -8.51883316040039
    5. ' ,' → logprob: -8.89383316040039
    6. ' in' → logprob: -9.26883316040039
    7. 'in' → logprob: -11.51883316040039
    8. 'i' → logprob: -12.39383316040039
    9. 'enumer' → logprob: -13.51883316040039
    10. ',(' → logprob: -13.64383316040039

Token 258: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024323819670826197
    2. ' a' → logprob: -6.377432346343994
    3. 'i' → logprob: -7.377432346343994
    4. ' in' → logprob: -9.377432823181152
    5. ' i' → logprob: -11.002432823181152
    6. '  ' → logprob: -13.877432823181152
    7. 'in' → logprob: -14.377432823181152
    8. ' ' → logprob: -14.627432823181152
    9. 'enumer' → logprob: -14.877432823181152
    10. '   ' → logprob: -15.252432823181152

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25194549560546875
    2. 'in' → logprob: -1.5019454956054688
    3. ' ' → logprob: -11.876945495605469
    4. 'enumer' → logprob: -12.376945495605469
    5. ')' → logprob: -12.876945495605469
    6. ',' → logprob: -14.001945495605469
    7. '  ' → logprob: -14.876945495605469
    8. '
' → logprob: -15.376945495605469
    9. ' 
' → logprob: -15.626945495605469
    10. '	in' → logprob: -15.626945495605469

Token 260: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011049470864236355
    2. ' enumerate' → logprob: -4.511049270629883
    3. 'en' → logprob: -14.636049270629883
    4. '
' → logprob: -14.636049270629883
    5. 'enum' → logprob: -14.761049270629883
    6. '```' → logprob: -16.136049270629883
    7. ' ' → logprob: -16.761049270629883
    8. '(en' → logprob: -16.761049270629883
    9. 'enqueue' → logprob: -16.886049270629883
    10. '   ' → logprob: -17.011049270629883

Token 261: '(gc' (ID: 194948)
  Prédit: '(gc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gc' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.125009536743164
    3. '(result' → logprob: -12.875009536743164
    4. 'gc' → logprob: -14.250009536743164
    5. '((' → logprob: -15.625009536743164
    6. ' (' → logprob: -16.500009536743164
    7. ')' → logprob: -17.000009536743164
    8. '(rc' → logprob: -17.125009536743164
    9. '(mc' → logprob: -17.375009536743164
    10. '(gs' → logprob: -17.625009536743164

Token 262: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001450187264708802
    2. ' .' → logprob: -8.875144958496094
    3. ').' → logprob: -13.500144958496094
    4. '​.' → logprob: -14.500144958496094
    5. '
' → logprob: -14.750144958496094
    6. '(ans' → logprob: -14.875144958496094
    7. '   ' → logprob: -15.125144958496094
    8. '`.' → logprob: -15.125144958496094
    9. '```' → logprob: -15.250144958496094
    10. 'ans' → logprob: -15.375144958496094

Token 263: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.869017852295656e-06
    2. ' ans' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.250006675720215
    4. ' ' → logprob: -15.875006675720215
    5. 'a' → logprob: -16.00000762939453
    6. '(ans' → logprob: -16.12500762939453
    7. '	ans' → logprob: -16.25000762939453
    8. '```' → logprob: -16.37500762939453
    9. '
' → logprob: -16.62500762939453
    10. '_ans' → logprob: -17.12500762939453

Token 264: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07377259433269501
    2. '[' → logprob: -2.698772668838501
    3. '))' → logprob: -5.823772430419922
    4. '1' → logprob: -7.948772430419922
    5. '(' → logprob: -9.198772430419922
    6. ',' → logprob: -9.448772430419922
    7. ' if' → logprob: -9.573772430419922
    8. ')))' → logprob: -9.823772430419922
    9. ' )' → logprob: -10.073772430419922
    10. 'if' → logprob: -10.323772430419922

Token 265: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3175383508205414
    2. '%' → logprob: -1.3175383806228638
    3. '
' → logprob: -5.942538261413574
    4. ')' → logprob: -6.817538261413574
    5. '%m' → logprob: -8.067538261413574
    6. '%n' → logprob: -10.067538261413574
    7. '   ' → logprob: -10.192538261413574
    8. ')%' → logprob: -10.317538261413574
    9. ' ' → logprob: -10.317538261413574
    10. '%i' → logprob: -11.442538261413574

Token 266: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003683924674987793
    2. 'MOD' → logprob: -5.628684043884277
    3. ' m' → logprob: -9.628684043884277
    4. '(m' → logprob: -11.878684043884277
    5. 'mod' → logprob: -12.003684043884277
    6. ' MOD' → logprob: -13.253684043884277
    7. 'M' → logprob: -13.753684043884277
    8. '   ' → logprob: -14.253684043884277
    9. '(' → logprob: -14.378684043884277
    10. 'md' → logprob: -15.003684043884277

Token 267: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012006006203591824
    2. '
' → logprob: -4.512005805969238
    3. 'print' → logprob: -7.262005805969238
    4. '    
' → logprob: -8.887005805969238
    5. '<|end|>' → logprob: -9.262005805969238
    6. ')' → logprob: -11.887005805969238
    7. 'return' → logprob: -12.262005805969238
    8. ' print' → logprob: -12.512005805969238
    9. '```' → logprob: -13.262005805969238
    10. ' return' → logprob: -13.887005805969238

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004397598095238209
    2. 'print' → logprob: -5.629397392272949
    3. '
' → logprob: -7.879397392272949
    4. '    
' → logprob: -8.75439739227295
    5. ')' → logprob: -8.87939739227295
    6. 'return' → logprob: -9.37939739227295
    7. '<|end|>' → logprob: -10.75439739227295
    8. '```' → logprob: -12.50439739227295
    9. ' print' → logprob: -12.75439739227295
    10. '  
' → logprob: -13.37939739227295

Token 269: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0025217996444553137
    2. '   ' → logprob: -6.002521991729736
    3. ' print' → logprob: -10.752521514892578
    4. 'p' → logprob: -10.752521514892578
    5. 'return' → logprob: -13.127521514892578
    6. '
' → logprob: -14.377521514892578
    7. '```' → logprob: -14.502521514892578
    8. '    
' → logprob: -16.127521514892578
    9. 'result' → logprob: -16.502521514892578
    10. '#print' → logprob: -16.752521514892578

Token 270: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.750075340270996
    3. 'final' → logprob: -11.000075340270996
    4. '()' → logprob: -16.25007438659668
    5. ' (' → logprob: -17.37507438659668
    6. '(f' → logprob: -18.00007438659668
    7. '(fin' → logprob: -18.12507438659668
    8. '(
' → logprob: -18.25007438659668
    9. ' final' → logprob: -18.62507438659668
    10. '((' → logprob: -19.50007438659668

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.500001907348633
    5. '))' → logprob: -17.125001907348633
    6. ')}' → logprob: -18.250001907348633
    7. '),' → logprob: -19.000001907348633
    8. ')#' → logprob: -19.250001907348633
    9. '`)' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.750001907348633

Token 272: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 271
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 118
Tokens correctement prédits (top 10): 204
Précision stricte (1ère position): 41.33%
Précision adaptée (1ère position): 43.54%
Précision (top 10): 75.28%
================================================================================
