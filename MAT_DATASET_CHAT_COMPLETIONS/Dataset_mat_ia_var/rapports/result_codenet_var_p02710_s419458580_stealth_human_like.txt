================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Perso, je mets une limite de récursion plus grande que d'habitude, au cas où...
sys.setrecursionlimit(10**8)
input = sys.stdin.readline

N = int(input())
C = list(map(int, input().split()))
AB = []
for _ in range(N-1):
    AB.append(tuple(map(int, input().split())))

# Initialisation du graphe (parfois j'oublie d'initialiser à N)
es = []
for _ in range(N):
    es.append([])

for a, b in AB:
    a = a-1
    b = b-1
    es[a].append(b)
    es[b].append(a)

# Liste des sommets par couleur (je suis pas sûr de l'efficacité, mais ça passe...)
cs = [[] for _ in range(N)]
for idx, color in enumerate(C):
    cs[color-1].append(idx)

tin = [-1]*N
tout = [-1]*N
k = 0

def dfs(u, parent=-1):
    global k
    tin[u] = k
    k = k + 1  # j'aurais pu utiliser +=, mais bon!
    for v in es[u]:
        if v == parent:
            continue
        dfs(v, u)
    tout[u] = k

dfs(0)

class BIT:
    # Juste pour garder le code lisible - BIT pour Binary Indexed Tree (Fenwick)
    def __init__(self, n):
        self.N = n
        self.tree = [0]*(n+1)
    def add(self, i, x): # l'indexation c'est toujours galère là-dessus...
        i = i+1
        while i <= self.N:
            self.tree[i] += x
            i += (i & -i)
    def acc(self, i): # somme préfixe [0, i)
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= (i & -i)
        return s
    def query(self, l, r): # [l, r)
        return self.acc(r) - self.acc(l)
    def __repr__(self):
        # Pour debug mais je teste rarement ça
        return str([self.query(i, i+1) for i in range(self.N)])

bit = BIT(N)
for i in range(N):
    bit.add(i, 1)

whole = N*(N+1)//2
results = []
for i in range(N):
    res = whole
    arr = cs[i][:]
    arr.sort(key=lambda x: -tin[x])  # ordonner du max au min sur tin (pourquoi pas)
    hist = []
    for node in arr:
        s = 1
        for adj in es[node]:
            if tin[adj] < tin[node]:
                continue
            val = bit.query(tin[adj], tout[adj])
            res -= val*(val+1)//2  # supprimer des morceaux
            s += val
        bit.add(tin[node], -s)
        hist.append((tin[node], s))
    leftover = bit.query(0, N)
    res -= leftover*(leftover+1)//2
    for t, cnt in hist:
        bit.add(t, cnt)
    results.append(res)

for v in results:
    print(v)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03689965978264809
    2. '\n' → logprob: -3.6618995666503906
    3. 'import' → logprob: -5.786899566650391
    4. '\' → logprob: -6.286899566650391
    5. 'newline' → logprob: -6.786899566650391
    6. '' → logprob: -7.161899566650391
    7. '```' → logprob: -7.411899566650391
    8. '<|end|>' → logprob: -7.411899566650391
    9. '[' → logprob: -7.661899566650391
    10. '
' → logprob: -7.786899566650391

Token 4: ' Pers' (ID: 23032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21992884576320648
    2. 'def' → logprob: -3.094928741455078
    3. ' This' → logprob: -3.719928741455078
    4. 'import' → logprob: -4.094928741455078
    5. ' The' → logprob: -4.219928741455078
    6. '!' → logprob: -4.469928741455078
    7. ' def' → logprob: -4.594928741455078
    8. ' argparse' → logprob: -4.594928741455078
    9. ' #' → logprob: -5.094928741455078
    10. 'This' → logprob: -5.344928741455078

Token 5: 'o' (ID: 78)
  Prédit: 'onal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onal' → logprob: -0.009333253838121891
    2. 'on' → logprob: -5.13433313369751
    3. 'pective' → logprob: -5.75933313369751
    4. 'o' → logprob: -9.009333610534668
    5. 'istence' → logprob: -10.009333610534668
    6. 'pectives' → logprob: -10.259333610534668
    7. 'onn' → logprob: -12.134333610534668
    8. 'ona' → logprob: -12.134333610534668
    9. 'onne' → logprob: -12.259333610534668
    10. 'uasive' → logprob: -12.509333610534668

Token 6: ',' (ID: 11)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -0.03807603940367699
    2. 'n' → logprob: -3.2880759239196777
    3. 'na' → logprob: -11.288076400756836
    4. '#' → logprob: -12.288076400756836
    5. ' nal' → logprob: -12.413076400756836
    6. '```' → logprob: -13.038076400756836
    7. 'nale' → logprob: -13.163076400756836
    8. 'ns' → logprob: -13.538076400756836
    9. '   ' → logprob: -13.538076400756836
    10. 'nt' → logprob: -14.038076400756836

Token 7: ' je' (ID: 1264)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009345421567559242
    2. 'nal' → logprob: -4.759345531463623
    3. ' n' → logprob: -7.884345531463623
    4. ' ' → logprob: -9.009345054626465
    5. '#' → logprob: -9.759345054626465
    6. 'r' → logprob: -10.259345054626465
    7. 'nl' → logprob: -11.009345054626465
    8. '```' → logprob: -11.134345054626465
    9. 'm' → logprob: -11.259345054626465
    10. '.' → logprob: -11.509345054626465

Token 8: ' mets' (ID: 87155)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pense' → logprob: -0.3348998427391052
    2. 'n' → logprob: -1.95989990234375
    3. '.' → logprob: -3.08489990234375
    4. ' n' → logprob: -3.58489990234375
    5. ' trouve' → logprob: -4.58489990234375
    6. 'r' → logprob: -4.70989990234375
    7. ' préfère' → logprob: -4.95989990234375
    8. 's' → logprob: -5.08489990234375
    9. 't' → logprob: -5.33489990234375
    10. '```' → logprob: -5.45989990234375

Token 9: ' une' (ID: 2463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7923364639282227
    2. '_' → logprob: -1.4173364639282227
    3. '=' → logprob: -2.5423364639282227
    4. ' ' → logprob: -2.6673364639282227
    5. '#' → logprob: -3.4173364639282227
    6. '```' → logprob: -3.5423364639282227
    7. ',' → logprob: -4.292336463928223
    8. ':' → logprob: -4.542336463928223
    9. 'import' → logprob: -4.667336463928223
    10. ''' → logprob: -4.667336463928223

Token 10: ' limite' (ID: 48939)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7344816327095032
    2. ' ' → logprob: -1.2344815731048584
    3. '_' → logprob: -2.2344815731048584
    4. 'es' → logprob: -3.2344815731048584
    5. ' #' → logprob: -3.7344815731048584
    6. 'space' → logprob: -4.1094818115234375
    7. 'esp' → logprob: -4.9844818115234375
    8. '\' → logprob: -5.3594818115234375
    9. 'ligne' → logprob: -5.4844818115234375
    10. ' espace' → logprob: -5.6094818115234375

Token 11: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5054019689559937
    2. '_' → logprob: -1.1304019689559937
    3. ' à' → logprob: -3.380402088165283
    4. ' ' → logprob: -4.005402088165283
    5. ' d' → logprob: -5.630402088165283
    6. 'de' → logprob: -6.130402088165283
    7. ' max' → logprob: -6.130402088165283
    8. ' =' → logprob: -6.380402088165283
    9. ' _' → logprob: -6.630402088165283
    10. ' sur' → logprob: -6.880402088165283

Token 12: ' réc' (ID: 36254)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0874947309494019
    2. ' lignes' → logprob: -1.5874947309494019
    3. 'l' → logprob: -1.9624947309494019
    4. ' ' → logprob: -2.4624948501586914
    5. '100' → logprob: -3.0874948501586914
    6. '10' → logprob: -3.2124948501586914
    7. ' caractères' → logprob: -3.9624948501586914
    8. '50' → logprob: -4.337494850158691
    9. '```' → logprob: -4.337494850158691
    10. 'ligne' → logprob: -4.462494850158691

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.8001232147216797
    2. 'up' → logprob: -1.5501232147216797
    3. 'u' → logprob: -1.8001232147216797
    4. 'urs' → logprob: -2.4251232147216797
    5. 'ursion' → logprob: -3.1751232147216797
    6. 'urse' → logprob: -4.80012321472168
    7. 'r' → logprob: -4.92512321472168
    8. 'p' → logprob: -5.42512321472168
    9. '#' → logprob: -5.67512321472168
    10. '```' → logprob: -5.80012321472168

Token 14: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25434786081314087
    2. ' _' → logprob: -2.004347801208496
    3. 'sys' → logprob: -3.629347801208496
    4. ' sys' → logprob: -3.754347801208496
    5. '_sys' → logprob: -4.379347801208496
    6. '_max' → logprob: -4.754347801208496
    7. ' ' → logprob: -5.629347801208496
    8. 'import' → logprob: -6.129347801208496
    9. '_s' → logprob: -6.379347801208496
    10. 'e' → logprob: -6.379347801208496

Token 15: ' grande' (ID: 10094)
  Prédit: ' élevée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -0.5793852806091309
    2. 'import' → logprob: -1.3293852806091309
    3. '```' → logprob: -3.204385280609131
    4. 'é' → logprob: -3.454385280609131
    5. ' haute' → logprob: -3.579385280609131
    6. ' sys' → logprob: -3.704385280609131
    7. 'sys' → logprob: -3.704385280609131
    8. 'ha' → logprob: -4.454385280609131
    9. '=sys' → logprob: -6.204385280609131
    10. ' élevé' → logprob: -6.454385280609131

Token 16: ' que' (ID: 661)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4995162785053253
    2. '.' → logprob: -1.124516248703003
    3. 'import' → logprob: -3.499516248703003
    4. '\' → logprob: -4.249516487121582
    5. ',' → logprob: -4.874516487121582
    6. ' sys' → logprob: -5.749516487121582
    7. '```' → logprob: -5.874516487121582
    8. ':' → logprob: -6.124516487121582
    9. '.sys' → logprob: -6.124516487121582
    10. '(sys' → logprob: -6.499516487121582

Token 17: ' d' (ID: 272)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.31704556941986084
    2. 'default' → logprob: -2.4420456886291504
    3. 'sys' → logprob: -2.6920456886291504
    4. '100' → logprob: -2.8170456886291504
    5. 'Python' → logprob: -3.8170456886291504
    6. 'python' → logprob: -4.56704568862915
    7. 'the' → logprob: -5.06704568862915
    8. 'l' → logprob: -5.44204568862915
    9. '```' → logprob: -6.19204568862915
    10. '500' → logprob: -6.31704568862915

Token 18: ''habitude' (ID: 192765)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7226371169090271
    2. ''habitude' → logprob: -1.0976371765136719
    3. 'ef' → logprob: -2.597637176513672
    4. ''' → logprob: -2.972637176513672
    5. ''hab' → logprob: -4.222637176513672
    6. 'u' → logprob: -4.972637176513672
    7. 'éf' → logprob: -5.222637176513672
    8. ''origine' → logprob: -5.347637176513672
    9. ''eff' → logprob: -5.347637176513672
    10. ''e' → logprob: -5.722637176513672

Token 19: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6687063574790955
    2. 'sys' → logprob: -1.5437064170837402
    3. ',' → logprob: -1.7937064170837402
    4. 'import' → logprob: -3.0437064170837402
    5. ' sys' → logprob: -4.16870641708374
    6. '\' → logprob: -4.29370641708374
    7. '```' → logprob: -4.66870641708374
    8. ':' → logprob: -5.54370641708374
    9. '(sys' → logprob: -6.04370641708374
    10. ' .' → logprob: -6.04370641708374

Token 20: ' au' (ID: 2791)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.35273563861846924
    2. ' ' → logprob: -1.9777356386184692
    3. 'sys' → logprob: -2.2277355194091797
    4. 'import' → logprob: -4.35273551940918
    5. ' afin' → logprob: -4.72773551940918
    6. ' import' → logprob: -5.35273551940918
    7. ' car' → logprob: -5.85273551940918
    8. ' but' → logprob: -5.97773551940918
    9. '=sys' → logprob: -6.10273551940918
    10. ' mais' → logprob: -6.10273551940918

Token 21: ' cas' (ID: 2108)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7816493511199951
    2. ' cas' → logprob: -1.0316493511199951
    3. ' sys' → logprob: -2.906649351119995
    4. 'cas' → logprob: -3.031649351119995
    5. 'import' → logprob: -3.906649351119995
    6. '```' → logprob: -3.906649351119995
    7. 'niveau' → logprob: -4.656649589538574
    8. 'maximum' → logprob: -5.156649589538574
    9. ' maximum' → logprob: -5.281649589538574
    10. 'minimum' → logprob: -5.531649589538574

Token 22: ' où' (ID: 15113)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7439872026443481
    2. ' ' → logprob: -0.8689872026443481
    3. '_' → logprob: -3.1189870834350586
    4. 'de' → logprob: -4.368987083435059
    5. '```' → logprob: -4.368987083435059
    6. 'que' → logprob: -4.493987083435059
    7. ' d' → logprob: -4.868987083435059
    8. '  ' → logprob: -5.618987083435059
    9. 'd' → logprob: -5.743987083435059
    10. ' où' → logprob: -5.993987083435059

Token 23: '...
' (ID: 4908)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4896881580352783
    2. '.' → logprob: -1.3646881580352783
    3. 'import' → logprob: -2.9896881580352783
    4. ' sys' → logprob: -3.3646881580352783
    5. '
' → logprob: -4.239687919616699
    6. '(sys' → logprob: -4.739687919616699
    7. '```' → logprob: -4.864687919616699
    8. '\' → logprob: -5.989687919616699
    9. '' → logprob: -5.989687919616699
    10. ',' → logprob: -5.989687919616699

Token 24: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03594168648123741
    2. '
' → logprob: -4.0359416007995605
    3. ' sys' → logprob: -4.6609416007995605
    4. 'import' → logprob: -5.7859416007995605
    5. '```' → logprob: -6.1609416007995605
    6. '(sys' → logprob: -6.9109416007995605
    7. '\n' → logprob: -7.7859416007995605
    8. '
' → logprob: -8.035942077636719
    9. '

' → logprob: -8.160942077636719
    10. '\' → logprob: -8.285942077636719

Token 25: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.2558814585208893
    2. '.' → logprob: -1.505881428718567
    3. '.setdefault' → logprob: -5.630881309509277
    4. ' .' → logprob: -8.630881309509277
    5. '.exit' → logprob: -9.380881309509277
    6. '.stack' → logprob: -10.880881309509277
    7. '.argv' → logprob: -10.880881309509277
    8. '.get' → logprob: -11.130881309509277
    9. '.stdin' → logprob: -11.755881309509277
    10. '.stdout' → logprob: -12.005881309509277

Token 26: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.016562478616833687
    2. '_rec' → logprob: -4.141562461853027
    3. ' recursion' → logprob: -8.391562461853027
    4. '_' → logprob: -8.891562461853027
    5. ' _' → logprob: -10.266562461853027
    6. '_limit' → logprob: -10.391562461853027
    7. '_max' → logprob: -10.641562461853027
    8. 'limit' → logprob: -11.016562461853027
    9. '_recursive' → logprob: -11.016562461853027
    10. '_stack' → logprob: -11.891562461853027

Token 27: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.9146995327901095e-05
    2. 'urs' → logprob: -11.125019073486328
    3. 'ur' → logprob: -13.125019073486328
    4. 'ursive' → logprob: -14.250019073486328
    5. '_' → logprob: -14.250019073486328
    6. 'ursor' → logprob: -15.250019073486328
    7. 'usion' → logprob: -15.500019073486328
    8. 'rs' → logprob: -16.125019073486328
    9. 'limit' → logprob: -16.375019073486328
    10. '[' → logprob: -17.000019073486328

Token 28: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.01832997426390648
    2. '_limit' → logprob: -4.018330097198486
    3. '_' → logprob: -8.893329620361328
    4. 'lim' → logprob: -10.518329620361328
    5. '_depth' → logprob: -11.768329620361328
    6. 'depth' → logprob: -12.518329620361328
    7. '-' → logprob: -13.893329620361328
    8. ' limit' → logprob: -14.143329620361328
    9. '_lim' → logprob: -14.143329620361328
    10. '_LIMIT' → logprob: -14.393329620361328

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -12.375004768371582
    3. '(

' → logprob: -15.250004768371582
    4. '(
' → logprob: -16.125003814697266
    5. '((' → logprob: -17.750003814697266
    6. '()' → logprob: -18.625003814697266
    7. ' ' → logprob: -20.250003814697266
    8. '('' → logprob: -20.625003814697266
    9. '(sys' → logprob: -20.625003814697266
    10. '(
' → logprob: -20.625003814697266

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6931877732276917
    2. '100' → logprob: -0.6931877732276917
    3. '500' → logprob: -10.693187713623047
    4. '300' → logprob: -12.068187713623047
    5. '200' → logprob: -12.193187713623047
    6. ' ' → logprob: -12.318187713623047
    7. '1' → logprob: -13.443187713623047
    8. '150' → logprob: -14.318187713623047
    9. '400' → logprob: -15.818187713623047
    10. '999' → logprob: -15.943187713623047

Token 31: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.07513438910245895
    2. '4' → logprob: -3.20013427734375
    3. '00' → logprob: -4.20013427734375
    4. '6' → logprob: -4.70013427734375
    5. '5' → logprob: -4.95013427734375
    6. '0' → logprob: -8.07513427734375
    7. '7' → logprob: -9.07513427734375
    8. '**' → logprob: -11.95013427734375
    9. '3' → logprob: -12.45013427734375
    10. '24' → logprob: -12.95013427734375

Token 32: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0002439467643853277
    2. '6' → logprob: -8.750244140625
    3. '9' → logprob: -10.000244140625
    4. '8' → logprob: -10.125244140625
    5. '**' → logprob: -18.750244140625
    6. ' ' → logprob: -20.375244140625
    7. '```' → logprob: -20.625244140625
    8. '  ' → logprob: -21.750244140625
    9. '

' → logprob: -22.500244140625
    10. '5' → logprob: -22.875244140625

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. '))' → logprob: -12.750003814697266
    3. ' )' → logprob: -13.875003814697266
    4. ')
' → logprob: -17.125003814697266
    5. ')))' → logprob: -17.500003814697266
    6. '0' → logprob: -18.125003814697266
    7. '),' → logprob: -18.375003814697266
    8. '')' → logprob: -19.125003814697266
    9. '）' → logprob: -19.250003814697266
    10. ')`' → logprob: -19.375003814697266

Token 34: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5738461017608643
    2. ')' → logprob: -1.3238461017608643
    3. '' → logprob: -3.0738461017608643
    4. '\n' → logprob: -3.3238461017608643
    5. '

' → logprob: -3.5738461017608643
    6. '```' → logprob: -3.6988461017608643
    7. '#' → logprob: -4.198845863342285
    8. '\' → logprob: -4.573845863342285
    9. '
' → logprob: -5.823845863342285
    10. ' 
' → logprob: -6.698845863342285

Token 35: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008719762787222862
    2. '.' → logprob: -5.2587199211120605
    3. '40' → logprob: -6.6337199211120605
    4. '()' → logprob: -7.1337199211120605
    5. '```' → logprob: -7.6337199211120605
    6. '("("' → logprob: -8.633719444274902
    7. '(.)' → logprob: -8.633719444274902
    8. '('.')' → logprob: -9.758719444274902
    9. '(.' → logprob: -9.883719444274902
    10. ')' → logprob: -9.883719444274902

Token 36: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03356778249144554
    2. ' sys' → logprob: -3.9085676670074463
    3. 'input' → logprob: -4.408567905426025
    4. ' raw' → logprob: -8.158567428588867
    5. ' ' → logprob: -8.533567428588867
    6. ' open' → logprob: -9.158567428588867
    7. ' lambda' → logprob: -9.658567428588867
    8. 'sys' → logprob: -9.783567428588867
    9. ' int' → logprob: -11.283567428588867
    10. '(input' → logprob: -11.408567428588867

Token 37: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001785112835932523
    2. '.stdout' → logprob: -9.000178337097168
    3. '.' → logprob: -10.375178337097168
    4. '.readline' → logprob: -11.750178337097168
    5. '.input' → logprob: -12.500178337097168
    6. '.std' → logprob: -12.750178337097168
    7. ' .' → logprob: -13.000178337097168
    8. '.setdefault' → logprob: -13.250178337097168
    9. '.argv' → logprob: -13.625178337097168
    10. 'stdin' → logprob: -14.000178337097168

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003371511586010456
    2. '.read' → logprob: -5.753371715545654
    3. 'read' → logprob: -9.253371238708496
    4. '.' → logprob: -10.003371238708496
    5. '.buffer' → logprob: -10.753371238708496
    6. 'buffer' → logprob: -11.253371238708496
    7. '.readlines' → logprob: -11.378371238708496
    8. '.Read' → logprob: -12.753371238708496
    9. '<|end|>' → logprob: -12.878371238708496
    10. '_read' → logprob: -14.878371238708496

Token 39: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47483593225479126
    2. '(' → logprob: -1.2248358726501465
    3. '
' → logprob: -3.0998358726501465
    4. '(
' → logprob: -4.4748358726501465
    5. '()

' → logprob: -4.7248358726501465
    6. '()
' → logprob: -4.9748358726501465
    7. '

' → logprob: -5.4748358726501465
    8. '\n' → logprob: -6.2248358726501465
    9. '(

' → logprob: -6.8498358726501465
    10. '\' → logprob: -7.0998358726501465

Token 40: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3519386053085327
    2. 'def' → logprob: -1.6019386053085327
    3. '\n' → logprob: -3.2269387245178223
    4. '
' → logprob: -3.7269387245178223
    5. '(n' → logprob: -4.851938724517822
    6. '\' → logprob: -4.851938724517822
    7. '

' → logprob: -5.476938724517822
    8. 'a' → logprob: -5.851938724517822
    9. 'class' → logprob: -6.226938724517822
    10. 'for' → logprob: -6.601938724517822

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49128004908561707
    2. ' ' → logprob: -1.3662800788879395
    3. '=' → logprob: -2.2412800788879395
    4. ')' → logprob: -4.2412800788879395
    5. ',' → logprob: -5.6162800788879395
    6. '.' → logprob: -5.9912800788879395
    7. '[' → logprob: -6.4912800788879395
    8. ' )' → logprob: -6.9912800788879395
    9. '  ' → logprob: -7.1162800788879395
    10. '<|end|>' → logprob: -7.4912800788879395

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011145438067615032
    2. 'int' → logprob: -4.51114559173584
    3. ' ' → logprob: -9.51114559173584
    4. ' input' → logprob: -10.76114559173584
    5. 'input' → logprob: -13.38614559173584
    6. '=int' → logprob: -14.63614559173584
    7. ' map' → logprob: -16.011144638061523
    8. '(int' → logprob: -16.386144638061523
    9. '<int' → logprob: -16.886144638061523
    10. '  ' → logprob: -17.386144638061523

Token 43: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009900340810418129
    2. '(input' → logprob: -4.6349005699157715
    3. '('' → logprob: -9.009900093078613
    4. '()' → logprob: -11.884900093078613
    5. '(`' → logprob: -12.634900093078613
    6. '(sys' → logprob: -13.134900093078613
    7. '(
' → logprob: -13.384900093078613
    8. '("("' → logprob: -13.384900093078613
    9. '(N' → logprob: -13.634900093078613
    10. ' (' → logprob: -13.759900093078613

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009339710813947022
    2. '()' → logprob: -7.00093412399292
    3. '())
' → logprob: -11.500933647155762
    4. ' ())' → logprob: -11.875933647155762
    5. ')' → logprob: -13.250933647155762
    6. '().' → logprob: -13.375933647155762
    7. '(' → logprob: -13.750933647155762
    8. '())

' → logprob: -15.000933647155762
    9. '()))' → logprob: -15.250933647155762
    10. '();)' → logprob: -15.875933647155762

Token 45: 'C' (ID: 34)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9424868226051331
    2. 'a' → logprob: -1.5674867630004883
    3. ' ' → logprob: -1.9424867630004883
    4. 'data' → logprob: -2.4424867630004883
    5. '#' → logprob: -3.6924867630004883
    6. ' 
' → logprob: -3.6924867630004883
    7. 's' → logprob: -3.8174867630004883
    8. 'def' → logprob: -4.317486763000488
    9. 'for' → logprob: -4.567486763000488
    10. '
' → logprob: -5.067486763000488

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05378833785653114
    2. 'ount' → logprob: -3.303788423538208
    3. '=' → logprob: -4.678788185119629
    4. 's' → logprob: -6.428788185119629
    5. ' ' → logprob: -7.428788185119629
    6. '[' → logprob: -7.428788185119629
    7. '_' → logprob: -7.678788185119629
    8. 'ounter' → logprob: -7.678788185119629
    9. 'ost' → logprob: -7.803788185119629
    10. '=[]' → logprob: -7.803788185119629

Token 47: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.049735426902771
    2. '[input' → logprob: -1.299735426902771
    3. 'list' → logprob: -1.424735426902771
    4. '[' → logprob: -2.9247355461120605
    5. '[int' → logprob: -3.2997355461120605
    6. ' list' → logprob: -4.2997355461120605
    7. '[]' → logprob: -4.5497355461120605
    8. ' [' → logprob: -4.6747355461120605
    9. ' input' → logprob: -4.7997355461120605
    10. '[list' → logprob: -6.0497355461120605

Token 48: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3583472669124603
    2. '(map' → logprob: -1.2333472967147827
    3. '(int' → logprob: -4.983347415924072
    4. '(input' → logprob: -5.983347415924072
    5. '(range' → logprob: -8.483346939086914
    6. '()' → logprob: -9.733346939086914
    7. '(eval' → logprob: -9.983346939086914
    8. '(list' → logprob: -10.358346939086914
    9. '(

' → logprob: -10.483346939086914
    10. '(str' → logprob: -10.733346939086914

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05067836120724678
    2. '(' → logprob: -3.050678253173828
    3. '(str' → logprob: -6.425678253173828
    4. '(lambda' → logprob: -8.300678253173828
    5. '(input' → logprob: -8.800678253173828
    6. '(eval' → logprob: -10.800678253173828
    7. '(
' → logprob: -11.550678253173828
    8. '[int' → logprob: -11.800678253173828
    9. '<int' → logprob: -11.800678253173828
    10. 'int' → logprob: -12.050678253173828

Token 50: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002905443077906966
    2. '(' → logprob: -6.127905368804932
    3. ',input' → logprob: -7.252905368804932
    4. 'input' → logprob: -12.37790584564209
    5. ',' → logprob: -13.12790584564209
    6. '(
' → logprob: -13.25290584564209
    7. ' (' → logprob: -13.75290584564209
    8. ')' → logprob: -14.25290584564209
    9. '=input' → logprob: -14.25290584564209
    10. '(

' → logprob: -14.75290584564209

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0013741609873250127
    2. ' input' → logprob: -6.626374244689941
    3. '(input' → logprob: -10.001374244689941
    4. ',input' → logprob: -13.126374244689941
    5. '=input' → logprob: -15.126374244689941
    6. '	input' → logprob: -15.376374244689941
    7. '[input' → logprob: -16.376373291015625
    8. '<input' → logprob: -16.501373291015625
    9. ' ' → logprob: -16.626373291015625
    10. ')' → logprob: -17.001373291015625

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. '()' → logprob: -11.50001049041748
    3. '(' → logprob: -16.000009536743164
    4. ' ().' → logprob: -16.250009536743164
    5. '()))' → logprob: -17.625009536743164
    6. '.' → logprob: -17.750009536743164
    7. 'split' → logprob: -17.875009536743164
    8. '()
' → logprob: -18.125009536743164
    9. '.split' → logprob: -18.250009536743164
    10. '())' → logprob: -18.375009536743164

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018573742359876633
    2. 'strip' → logprob: -4.018573760986328
    3. 'rstrip' → logprob: -7.768573760986328
    4. 'read' → logprob: -14.393573760986328
    5. ' split' → logprob: -15.268573760986328
    6. '(split' → logprob: -17.143573760986328
    7. 'rs' → logprob: -18.643573760986328
    8. ' strip' → logprob: -18.643573760986328
    9. 'spl' → logprob: -18.893573760986328
    10. ')' → logprob: -20.018573760986328

Token 54: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.48925670981407166
    2. '())' → logprob: -1.739256739616394
    3. '))' → logprob: -1.864256739616394
    4. ')' → logprob: -3.4892566204071045
    5. '()' → logprob: -4.239256858825684
    6. '(' → logprob: -4.489256858825684
    7. '()))
' → logprob: -11.114256858825684
    8. '())))' → logprob: -11.114256858825684
    9. ')))' → logprob: -11.239256858825684
    10. '()));' → logprob: -11.489256858825684

Token 55: 'AB' (ID: 2912)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3611830472946167
    2. 'C' → logprob: -2.8611831665039062
    3. 'max' → logprob: -2.9861831665039062
    4. 'M' → logprob: -3.2361831665039062
    5. 'from' → logprob: -3.3611831665039062
    6. '#' → logprob: -3.9861831665039062
    7. 'c' → logprob: -4.611183166503906
    8. 'd' → logprob: -4.611183166503906
    9. 'count' → logprob: -4.736183166503906
    10. 'A' → logprob: -4.861183166503906

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06995632499456406
    2. ' =' → logprob: -2.6949563026428223
    3. 's' → logprob: -11.94495677947998
    4. ')' → logprob: -12.44495677947998
    5. '[]' → logprob: -12.81995677947998
    6. '[' → logprob: -13.06995677947998
    7. '=[]' → logprob: -13.19495677947998
    8. '_' → logprob: -13.94495677947998
    9. ']' → logprob: -14.31995677947998
    10. ' ' → logprob: -14.44495677947998

Token 57: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033274710178375244
    2. '[int' → logprob: -3.7832746505737305
    3. '[list' → logprob: -5.1582746505737305
    4. '[input' → logprob: -6.7832746505737305
    5. '[]' → logprob: -7.0332746505737305
    6. '[List' → logprob: -7.2832746505737305
    7. '[N' → logprob: -7.9082746505737305
    8. '[i' → logprob: -8.15827465057373
    9. ' [' → logprob: -8.65827465057373
    10. '[len' → logprob: -9.03327465057373

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011188744247192517
    2. ' for' → logprob: -9.12511157989502
    3. '[' → logprob: -13.12511157989502
    4. '_' → logprob: -14.37511157989502
    5. '_for' → logprob: -15.37511157989502
    6. '<|end|>' → logprob: -17.000112533569336
    7. '	for' → logprob: -17.250112533569336
    8. '.for' → logprob: -17.500112533569336
    9. '[]' → logprob: -17.625112533569336
    10. ')' → logprob: -18.250112533569336

Token 59: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01906333863735199
    2. '_' → logprob: -4.144063472747803
    3. ' i' → logprob: -5.894063472747803
    4. ' ' → logprob: -8.269062995910645
    5. 'i' → logprob: -12.394062995910645
    6. ' ' → logprob: -12.394062995910645
    7. '_i' → logprob: -13.144062995910645
    8. ' ‌' → logprob: -13.519062995910645
    9. ' ▁' → logprob: -15.019062995910645
    10. ' ​' → logprob: -15.644062995910645

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05586433410644531
    2. 'in' → logprob: -2.9308643341064453
    3. 'range' → logprob: -7.430864334106445
    4. ' ' → logprob: -8.805864334106445
    5. ' _' → logprob: -9.055864334106445
    6. ' range' → logprob: -9.805864334106445
    7. '_' → logprob: -9.930864334106445
    8. 'i' → logprob: -12.180864334106445
    9. ' i' → logprob: -12.930864334106445
    10. '<|end|>' → logprob: -12.930864334106445

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005538671393878758
    2. ' range' → logprob: -7.500554084777832
    3. '(range' → logprob: -14.375554084777832
    4. '	range' → logprob: -15.875554084777832
    5. 'C' → logprob: -17.000553131103516
    6. '(' → logprob: -17.875553131103516
    7. 'rang' → logprob: -17.875553131103516
    8. 'N' → logprob: -18.125553131103516
    9. '[' → logprob: -18.500553131103516
    10. 'r' → logprob: -18.750553131103516

Token 62: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002492779865860939
    2. '(' → logprob: -6.002492904663086
    3. '(int' → logprob: -11.127492904663086
    4. '(n' → logprob: -13.252492904663086
    5. '(
' → logprob: -15.002492904663086
    6. '()' → logprob: -16.752492904663086
    7. '(M' → logprob: -16.752492904663086
    8. '(I' → logprob: -16.877492904663086
    9. '(A' → logprob: -17.002492904663086
    10. 'N' → logprob: -17.377492904663086

Token 63: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03617097809910774
    2. '-' → logprob: -3.9111709594726562
    3. '):
' → logprob: -4.661170959472656
    4. ')' → logprob: -5.161170959472656
    5. ' -' → logprob: -8.411170959472656
    6. '):
' → logprob: -10.286170959472656
    7. ' ):' → logprob: -10.411170959472656
    8. '2' → logprob: -11.786170959472656
    9. ':' → logprob: -13.036170959472656
    10. '+' → logprob: -13.036170959472656

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '<|end|>' → logprob: -14.750011444091797
    4. '2' → logprob: -15.250011444091797
    5. ')' → logprob: -16.250011444091797
    6. '<|end|>' → logprob: -17.125011444091797
    7. '```' → logprob: -17.750011444091797
    8. '１' → logprob: -18.250011444091797
    9. '   ' → logprob: -18.500011444091797
    10. '১' → logprob: -18.500011444091797

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003947079181671143
    2. '):
' → logprob: -5.7539472579956055
    3. ' ):' → logprob: -7.5039472579956055
    4. ')' → logprob: -8.753947257995605
    5. ':' → logprob: -9.878947257995605
    6. '):
' → logprob: -12.378947257995605
    7. ' ):
' → logprob: -12.878947257995605
    8. ' )' → logprob: -14.753947257995605
    9. ' :' → logprob: -14.878947257995605
    10. '():' → logprob: -15.128947257995605

Token 66: '   ' (ID: 271)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.327439546585083
    2. '   ' → logprob: -1.827439546585083
    3. ' AB' → logprob: -2.202439546585083
    4. 'a' → logprob: -6.327439308166504
    5. 'ab' → logprob: -6.327439308166504
    6. ' A' → logprob: -6.702439308166504
    7. 'A' → logprob: -7.202439308166504
    8. ' a' → logprob: -7.452439308166504
    9. ' ab' → logprob: -7.577439308166504
    10. ' ' → logprob: -7.827439308166504

Token 67: ' AB' (ID: 16520)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4485034644603729
    2. 'AB' (adapté à ' AB') → logprob: -1.0735034942626953
    3. 'A' → logprob: -4.573503494262695
    4. 'ab' → logprob: -4.698503494262695
    5. 'u' → logprob: -9.198503494262695
    6. 'x' → logprob: -10.823503494262695
    7. ' a' → logprob: -10.948503494262695
    8. ' AB' → logprob: -11.573503494262695
    9. 's' → logprob: -12.198503494262695
    10. '   ' → logprob: -12.698503494262695

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03477892652153969
    2. '.' → logprob: -3.4097788333892822
    3. '=' → logprob: -6.909779071807861
    4. '.=' → logprob: -9.534778594970703
    5. ' =' → logprob: -10.909778594970703
    6. ' .' → logprob: -11.034778594970703
    7. '.app' → logprob: -11.159778594970703
    8. '.ap' → logprob: -12.284778594970703
    9. '.a' → logprob: -12.534778594970703
    10. '.extend' → logprob: -13.284778594970703

Token 69: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.011315420269966125
    2. '(list' → logprob: -4.51131534576416
    3. 'tuple' → logprob: -8.51131534576416
    4. '(' → logprob: -10.13631534576416
    5. '(map' → logprob: -10.76131534576416
    6. ' tuple' → logprob: -12.51131534576416
    7. 'list' → logprob: -13.63631534576416
    8. '(t' → logprob: -14.26131534576416
    9. '(m' → logprob: -16.261316299438477
    10. '=list' → logprob: -18.261316299438477

Token 70: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -10.875020980834961
    3. '(int' → logprob: -13.625020980834961
    4. 'map' → logprob: -13.750020980834961
    5. ' map' → logprob: -16.12502098083496
    6. '	map' → logprob: -17.37502098083496
    7. '(m' → logprob: -17.37502098083496
    8. '(list' → logprob: -17.50002098083496
    9. '(input' → logprob: -17.87502098083496
    10. '(
' → logprob: -18.00002098083496

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.52919222577475e-05
    2. 'int' → logprob: -9.750075340270996
    3. '<int' → logprob: -12.500075340270996
    4. ',int' → logprob: -12.500075340270996
    5. '=int' → logprob: -12.625075340270996
    6. '[int' → logprob: -12.625075340270996
    7. ' int' → logprob: -13.250075340270996
    8. '(' → logprob: -14.125075340270996
    9. ']int' → logprob: -15.500075340270996
    10. '```' → logprob: -16.50007438659668

Token 72: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.02756226249039173
    2. ',' → logprob: -3.652562379837036
    3. ',int' → logprob: -6.777562141418457
    4. '(input' → logprob: -9.277562141418457
    5. '(),' → logprob: -11.902562141418457
    6. ' ,' → logprob: -12.027562141418457
    7. 'input' → logprob: -12.027562141418457
    8. '(' → logprob: -12.902562141418457
    9. ',(' → logprob: -13.527562141418457
    10. ',map' → logprob: -13.777562141418457

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05492708459496498
    2. ' input' → logprob: -2.929927110671997
    3. ',input' → logprob: -10.429926872253418
    4. '(input' → logprob: -11.429926872253418
    5. ',' → logprob: -13.554926872253418
    6. '=input' → logprob: -14.304926872253418
    7. '	input' → logprob: -14.554926872253418
    8. 'int' → logprob: -14.804926872253418
    9. ' ' → logprob: -14.929926872253418
    10. '<input' → logprob: -15.054926872253418

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.750004768371582
    3. ' ().' → logprob: -14.000004768371582
    4. ' .' → logprob: -14.500004768371582
    5. '.readline' → logprob: -14.875004768371582
    6. '.' → logprob: -15.000004768371582
    7. '   ' → logprob: -16.8750057220459
    8. '.split' → logprob: -17.2500057220459
    9. '()))' → logprob: -17.3750057220459
    10. ' ' → logprob: -17.6250057220459

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.084206375409849e-05
    2. 'strip' → logprob: -10.125041007995605
    3. 'rstrip' → logprob: -14.500041007995605
    4. ' split' → logprob: -15.625041007995605
    5. '.split' → logprob: -16.75004005432129
    6. '(split' → logprob: -17.37504005432129
    7. 'spl' → logprob: -17.37504005432129
    8. '().' → logprob: -17.75004005432129
    9. 'read' → logprob: -18.75004005432129
    10. 'plit' → logprob: -19.12504005432129

Token 76: '()))' (ID: 16829)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.5953039526939392
    2. '())))' → logprob: -1.095304012298584
    3. '()))' → logprob: -2.970304012298584
    4. '()' → logprob: -2.970304012298584
    5. '))' → logprob: -5.345304012298584
    6. '())' → logprob: -5.345304012298584
    7. ')' → logprob: -6.720304012298584
    8. '(' → logprob: -7.470304012298584
    9. '())))
' → logprob: -8.720303535461426
    10. ' ' → logprob: -10.970303535461426

Token 77: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931634545326233
    2. '))' → logprob: -0.6931634545326233
    3. '))
' → logprob: -11.818163871765137
    4. ')
' → logprob: -12.818163871765137
    5. ')))' → logprob: -12.943163871765137
    6. ' ))' → logprob: -13.693163871765137
    7. ' )' → logprob: -14.068163871765137
    8. '()))' → logprob: -15.068163871765137
    9. '))

' → logprob: -15.193163871765137
    10. '()' → logprob: -15.318163871765137

Token 78: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8008033633232117
    2. '#' → logprob: -1.6758034229278564
    3. ')' → logprob: -1.8008034229278564
    4. 'graph' → logprob: -1.9258034229278564
    5. 'from' → logprob: -4.300803184509277
    6. 'import' → logprob: -4.925803184509277
    7. 'edges' → logprob: -4.925803184509277
    8. '<|end|>' → logprob: -5.800803184509277
    9. 'd' → logprob: -5.925803184509277
    10. 'def' → logprob: -6.175803184509277

Token 79: ' Initial' (ID: 9209)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4825216829776764
    2. '#' → logprob: -1.357521653175354
    3. 'import' → logprob: -2.4825217723846436
    4. 'graph' → logprob: -3.9825217723846436
    5. ' from' → logprob: -4.8575215339660645
    6. 'adj' → logprob: -4.9825215339660645
    7. 'color' → logprob: -5.8575215339660645
    8. '```' → logprob: -7.1075215339660645
    9. 'def' → logprob: -7.6075215339660645
    10. 'colors' → logprob: -7.8575215339660645

Token 80: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.74861741065979
    2. 'ize' → logprob: -1.87361741065979
    3. 'izing' → logprob: -1.99861741065979
    4. 'i' → logprob: -2.37361741065979
    5. 'e' → logprob: -2.74861741065979
    6. 'ization' → logprob: -3.74861741065979
    7. '#' → logprob: -4.248617172241211
    8. 'izer' → logprob: -4.623617172241211
    9. 'ly' → logprob: -4.873617172241211
    10. 'import' → logprob: -5.498617172241211

Token 81: ' du' (ID: 1462)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.622501015663147
    2. ' graph' → logprob: -2.6225008964538574
    3. ' =' → logprob: -2.7475008964538574
    4. ':' → logprob: -2.9975008964538574
    5. 'dist' → logprob: -3.2475008964538574
    6. 'adj' → logprob: -3.3725008964538574
    7. ' :' → logprob: -3.6225008964538574
    8. 'dp' → logprob: -3.9975008964538574
    9. 'distance' → logprob: -4.247500896453857
    10. 'g' → logprob: -4.497500896453857

Token 82: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19523678719997406
    2. ' graph' → logprob: -2.0702366828918457
    3. ' grap' → logprob: -3.9452366828918457
    4. 'gr' → logprob: -4.820236682891846
    5. 'from' → logprob: -5.445236682891846
    6. 'import' → logprob: -5.695236682891846
    7. 'g' → logprob: -5.945236682891846
    8. 'sys' → logprob: -6.195236682891846
    9. 'deque' → logprob: -6.570236682891846
    10. 'gra' → logprob: -6.695236682891846

Token 83: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04324797913432121
    2. 'h' → logprob: -3.168247938156128
    3. 'phe' → logprob: -9.043248176574707
    4. 'aphe' → logprob: -9.793248176574707
    5. '#' → logprob: -10.543248176574707
    6. 'ph' → logprob: -11.793248176574707
    7. '```' → logprob: -11.918248176574707
    8. 'hi' → logprob: -12.293248176574707
    9. 'heme' → logprob: -12.543248176574707
    10. '   ' → logprob: -13.168248176574707

Token 84: ' (' (ID: 350)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06032142415642738
    2. ' graph' → logprob: -3.18532133102417
    3. 'G' → logprob: -4.56032133102417
    4. 'g' → logprob: -6.06032133102417
    5. ' =' → logprob: -6.68532133102417
    6. ' G' → logprob: -7.06032133102417
    7. '_graph' → logprob: -7.31032133102417
    8. 'adj' → logprob: -7.68532133102417
    9. '
' → logprob: -8.435321807861328
    10. '	graph' → logprob: -9.060321807861328

Token 85: 'par' (ID: 796)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5192237496376038
    2. ')' → logprob: -1.894223690032959
    3. 'adj' → logprob: -2.394223690032959
    4. ' graph' → logprob: -3.144223690032959
    5. ' adjacency' → logprob: -3.644223690032959
    6. '{' → logprob: -3.769223690032959
    7. ' defaultdict' → logprob: -4.019223690032959
    8. ' [[]' → logprob: -4.019223690032959
    9. '[' → logprob: -4.769223690032959
    10. 'g' → logprob: -5.519223690032959

Token 86: 'fois' (ID: 27733)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.9101919531822205
    2. 'collections' → logprob: -1.5351920127868652
    3. '{}' → logprob: -2.0351920127868652
    4. ' defaultdict' → logprob: -2.0351920127868652
    5. 'adj' → logprob: -3.2851920127868652
    6. 'd' → logprob: -3.7851920127868652
    7. 'dict' → logprob: -4.035192012786865
    8. ' défaut' → logprob: -4.285192012786865
    9. ' adjacency' → logprob: -4.910192012786865
    10. ' default' → logprob: -5.535192012786865

Token 87: ' j' (ID: 441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7060303092002869
    2. ' en' → logprob: -2.0810303688049316
    3. ' un' → logprob: -2.9560303688049316
    4. 'd' → logprob: -3.3310303688049316
    5. 'dict' → logprob: -3.4560303688049316
    6. 'graph' → logprob: -3.5810303688049316
    7. ' sous' → logprob: -4.206030368804932
    8. ' adjacency' → logprob: -4.206030368804932
    9. ' appelé' → logprob: -4.206030368804932
    10. ' defaultdict' → logprob: -4.331030368804932

Token 88: ''oubl' (ID: 129254)
  Prédit: ''ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ai' → logprob: -0.7167177796363831
    2. ''aime' → logprob: -1.9667177200317383
    3. ''util' → logprob: -2.2167177200317383
    4. ''' → logprob: -2.3417177200317383
    5. 'e' → logprob: -2.4667177200317383
    6. ''ins' → logprob: -3.8417177200317383
    7. ''aj' → logprob: -4.466717720031738
    8. ''oubl' → logprob: -5.466717720031738
    9. ''use' → logprob: -5.591717720031738
    10. '')' → logprob: -5.966717720031738

Token 89: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05307447537779808
    2. 'ier' → logprob: -3.303074359893799
    3. 'e' → logprob: -5.678074359893799
    4. 'ique' → logprob: -5.803074359893799
    5. 'i' → logprob: -6.178074359893799
    6. 'ient' → logprob: -6.553074359893799
    7. 'ieux' → logprob: -6.803074359893799
    8. 'ite' → logprob: -7.678074359893799
    9. 'iate' → logprob: -7.678074359893799
    10. 'iere' → logprob: -7.803074359893799

Token 90: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3038696348667145
    2. ' )' → logprob: -1.928869605064392
    3. ',' → logprob: -3.1788697242736816
    4. ' la' → logprob: -3.8038697242736816
    5. ' de' → logprob: -4.178869724273682
    6. ' le' → logprob: -4.553869724273682
    7. 'de' → logprob: -5.303869724273682
    8. ' ' → logprob: -5.553869724273682
    9. 'le' → logprob: -5.803869724273682
    10. ' d' → logprob: -6.053869724273682

Token 91: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08934247493743896
    2. 'el' → logprob: -3.4643425941467285
    3. 'es' → logprob: -4.3393425941467285
    4. ''' → logprob: -4.3393425941467285
    5. ''utiliser' → logprob: -4.5893425941467285
    6. ''aj' → logprob: -5.7143425941467285
    7. ''é' → logprob: -5.9643425941467285
    8. 'ef' → logprob: -6.8393425941467285
    9. 'eux' → logprob: -6.8393425941467285
    10. ''oubl' → logprob: -6.8393425941467285

Token 92: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.05616854876279831
    2. 'import' → logprob: -4.056168556213379
    3. 'aj' → logprob: -4.681168556213379
    4. 'init' → logprob: -4.806168556213379
    5. 'importe' → logprob: -5.556168556213379
    6. 'int' → logprob: -5.681168556213379
    7. 'outer' → logprob: -5.806168556213379
    8. 'in' → logprob: -6.556168556213379
    9. '```' → logprob: -6.556168556213379
    10. ''' → logprob: -7.556168556213379

Token 93: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0690786838531494
    2. 'iser' → logprob: -1.1940786838531494
    3. 'ser' → logprob: -1.1940786838531494
    4. 'a' → logprob: -3.3190786838531494
    5. 'al' → logprob: -4.94407844543457
    6. 's' → logprob: -6.56907844543457
    7. 'is' → logprob: -7.19407844543457
    8. ')' → logprob: -7.31907844543457
    9. 'izer' → logprob: -7.56907844543457
    10. 'i' → logprob: -7.69407844543457

Token 94: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24146799743175507
    2. ' )' → logprob: -1.7414679527282715
    3. ' ' → logprob: -4.3664679527282715
    4. 'graph' → logprob: -5.2414679527282715
    5. '_' → logprob: -5.8664679527282715
    6. 'le' → logprob: -6.2414679527282715
    7. ',' → logprob: -6.2414679527282715
    8. ' [])' → logprob: -6.2414679527282715
    9. '[])' → logprob: -6.4914679527282715
    10. '[]' → logprob: -6.6164679527282715

Token 95: ' N' (ID: 478)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007757226470857859
    2. '[])' → logprob: -5.132757186889648
    3. 'default' → logprob: -7.632757186889648
    4. ' []' → logprob: -7.882757186889648
    5. '[' → logprob: -8.382757186889648
    6. '0' → logprob: -8.507757186889648
    7. '{}' → logprob: -8.507757186889648
    8. ' [])' → logprob: -9.382757186889648
    9. ' ' → logprob: -9.507757186889648
    10. '{' → logprob: -10.382757186889648

Token 96: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19899307191371918
    2. ')' → logprob: -1.9489930868148804
    3. ' )' → logprob: -3.573992967605591
    4. ' +' → logprob: -4.69899320602417
    5. '+)' → logprob: -7.94899320602417
    6. ' ' → logprob: -8.948992729187012
    7. '-' → logprob: -9.573992729187012
    8. '=' → logprob: -10.198992729187012
    9. '```' → logprob: -10.448992729187012
    10. ' ' → logprob: -11.323992729187012

Token 97: 'es' (ID: 268)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06311336159706116
    2. ' graph' → logprob: -2.9381134510040283
    3. 'G' → logprob: -4.938113212585449
    4. 'g' → logprob: -7.438113212585449
    5. '_graph' → logprob: -9.18811321258545
    6. ' G' → logprob: -9.56311321258545
    7. '	graph' → logprob: -9.81311321258545
    8. '```' → logprob: -9.81311321258545
    9. 'Graph' → logprob: -10.31311321258545
    10. ' 
' → logprob: -10.81311321258545

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20004324615001678
    2. '=' → logprob: -1.8250432014465332
    3. 'g' → logprob: -4.325043201446533
    4. 'd' → logprob: -5.825043201446533
    5. 't' → logprob: -6.575043201446533
    6. '=[' → logprob: -6.825043201446533
    7. 's' → logprob: -7.825043201446533
    8. 'ges' → logprob: -8.450043678283691
    9. '＝' → logprob: -8.825043678283691
    10. 'ch' → logprob: -9.075043678283691

Token 99: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008615754544734955
    2. ' [[]' → logprob: -4.758615970611572
    3. '[]' → logprob: -14.508615493774414
    4. '{' → logprob: -14.508615493774414
    5. '[N' → logprob: -15.508615493774414
    6. '[[' → logprob: -16.383615493774414
    7. '[n' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.758615493774414
    9. '[:' → logprob: -18.883615493774414
    10. ' [' → logprob: -19.008615493774414

Token 100: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03559524193406105
    2. ' [[]' → logprob: -4.035595417022705
    3. 'for' → logprob: -4.160595417022705
    4. '[]' → logprob: -6.535595417022705
    5. '[N' → logprob: -9.285594940185547
    6. ' for' → logprob: -9.285594940185547
    7. '[:]' → logprob: -11.035594940185547
    8. ' =' → logprob: -12.035594940185547
    9. '[
' → logprob: -12.160594940185547
    10. '=[' → logprob: -12.410594940185547

Token 101: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6081709861755371
    2. '_' → logprob: -0.8581709861755371
    3. ' i' → logprob: -3.733170986175537
    4. 'i' → logprob: -5.233170986175537
    5. '_i' → logprob: -6.108170986175537
    6. ' ' → logprob: -8.483171463012695
    7. '__' → logprob: -11.983171463012695
    8. ' __' → logprob: -12.608171463012695
    9. '   ' → logprob: -12.858171463012695
    10. 'a' → logprob: -13.233171463012695

Token 102: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7852205038070679
    2. 'in' → logprob: -0.9102205038070679
    3. ' in' → logprob: -2.0352206230163574
    4. ' range' → logprob: -4.535220623016357
    5. ' ' → logprob: -9.6602201461792
    6. '_' → logprob: -10.0352201461792
    7. 'ange' → logprob: -10.9102201461792
    8. 'n' → logprob: -11.5352201461792
    9. 'es' → logprob: -12.0352201461792
    10. '  ' → logprob: -12.9102201461792

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011713240382960066
    2. ' range' → logprob: -9.125117301940918
    3. 'es' → logprob: -12.000117301940918
    4. 'ange' → logprob: -13.875117301940918
    5. '(range' → logprob: -14.500117301940918
    6. 'rang' → logprob: -15.750117301940918
    7. 'ran' → logprob: -16.3751163482666
    8. '	range' → logprob: -16.5001163482666
    9. 'r' → logprob: -16.7501163482666
    10. 'in' → logprob: -16.7501163482666

Token 104: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00042268994729965925
    2. '(' → logprob: -7.875422477722168
    3. 'N' → logprob: -10.625422477722168
    4. ' (' → logprob: -11.375422477722168
    5. '(n' → logprob: -13.250422477722168
    6. ' ' → logprob: -13.500422477722168
    7. '(len' → logprob: -13.750422477722168
    8. ' N' → logprob: -14.125422477722168
    9. '(
' → logprob: -14.125422477722168
    10. '((' → logprob: -15.000422477722168

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42270389199256897
    2. '):
' → logprob: -1.1727038621902466
    3. ')' → logprob: -3.797703981399536
    4. '-' → logprob: -4.547703742980957
    5. '):
' → logprob: -7.422703742980957
    6. ' ):' → logprob: -7.422703742980957
    7. ' -' → logprob: -7.797703742980957
    8. '+' → logprob: -8.172703742980957
    9. ' ):
' → logprob: -8.547703742980957
    10. ' )' → logprob: -9.672703742980957

Token 106: '   ' (ID: 271)
  Prédit: ' es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' es' → logprob: -0.09139828383922577
    2. 'es' → logprob: -2.966398239135742
    3. '   ' → logprob: -3.341398239135742
    4. ' ' → logprob: -8.466398239135742
    5. '	es' → logprob: -8.966398239135742
    6. '[]' → logprob: -9.716398239135742
    7. ' []' → logprob: -10.591398239135742
    8. ':' → logprob: -11.466398239135742
    9. 'e' → logprob: -11.716398239135742
    10. ':
' → logprob: -12.091398239135742

Token 107: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.20154987275600433
    2. ' es' → logprob: -1.7015498876571655
    3. '[]' → logprob: -9.201549530029297
    4. '	es' → logprob: -10.326549530029297
    5. '_es' → logprob: -13.701549530029297
    6. ' []' → logprob: -13.951549530029297
    7. 'e' → logprob: -14.826549530029297
    8. ' ' → logprob: -15.326549530029297
    9. '(es' → logprob: -15.451549530029297
    10. '-es' → logprob: -16.951549530029297

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.280175097752362e-05
    2. '.' → logprob: -9.625082969665527
    3. 'append' → logprob: -11.250082969665527
    4. '.app' → logprob: -12.750082969665527
    5. 'app' → logprob: -15.500082969665527
    6. 'appen' → logprob: -15.625082969665527
    7. 'Append' → logprob: -15.875082969665527
    8. '.Append' → logprob: -15.875082969665527
    9. '.setdefault' → logprob: -16.37508201599121
    10. ' .' → logprob: -16.87508201599121

Token 109: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.0001239196863025427
    2. '[]' → logprob: -9.500123977661133
    3. '(' → logprob: -10.000123977661133
    4. '()' → logprob: -13.000123977661133
    5. '([])
' → logprob: -13.625123977661133
    6. '([],' → logprob: -16.750123977661133
    7. '([' → logprob: -17.375123977661133
    8. '(set' → logprob: -18.500123977661133
    9. '([]);
' → logprob: -19.000123977661133
    10. '=[]' → logprob: -19.000123977661133

Token 110: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ')
' → logprob: -10.750028610229492
    3. '<|end|>' → logprob: -12.500028610229492
    4. ' )' → logprob: -12.875028610229492
    5. ')

' → logprob: -15.500028610229492
    6. '
' → logprob: -16.000028610229492
    7. ')return' → logprob: -16.250028610229492
    8. ' ' → logprob: -16.750028610229492
    9. ')set' → logprob: -17.000028610229492
    10. '))' → logprob: -17.250028610229492

Token 111: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012159701436758041
    2. ' for' → logprob: -4.637159824371338
    3. '<|end|>' → logprob: -6.137159824371338
    4. ')' → logprob: -9.26215934753418
    5. ' ' → logprob: -9.88715934753418
    6. '  
' → logprob: -10.38715934753418
    7. ' 
' → logprob: -11.38715934753418
    8. '<|end|>' → logprob: -11.38715934753418
    9. 'i' → logprob: -11.76215934753418
    10. '
' → logprob: -12.51215934753418

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028143905103206635
    2. ' a' → logprob: -3.653143882751465
    3. '(a' → logprob: -6.653143882751465
    4. 'u' → logprob: -8.028143882751465
    5. ' ' → logprob: -9.903143882751465
    6. 'A' → logprob: -10.278143882751465
    7. ' u' → logprob: -10.528143882751465
    8. 'i' → logprob: -10.653143882751465
    9. '(u' → logprob: -10.653143882751465
    10. ' (' → logprob: -11.403143882751465

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010506733087822795
    2. ' ,' → logprob: -7.1260504722595215
    3. ',a' → logprob: -9.62605094909668
    4. ',b' → logprob: -9.75105094909668
    5. ' in' → logprob: -10.00105094909668
    6. ',_' → logprob: -10.37605094909668
    7. ',v' → logprob: -11.25105094909668
    8. '_,' → logprob: -11.37605094909668
    9. 'a' → logprob: -12.50105094909668
    10. ',n' → logprob: -12.62605094909668

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. ' ' → logprob: -22.625261306762695
    4. '	b' → logprob: -22.750261306762695
    5. ',b' → logprob: -22.875261306762695
    6. ')b' → logprob: -23.375261306762695
    7. 'bc' → logprob: -23.750261306762695
    8. '_b' → logprob: -24.375261306762695
    9. '>b' → logprob: -24.375261306762695
    10. '<|end|>' → logprob: -25.250261306762695

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28161126375198364
    2. 'in' → logprob: -1.4066112041473389
    3. ',' → logprob: -7.781611442565918
    4. 'a' → logprob: -11.406611442565918
    5. ' ' → logprob: -11.656611442565918
    6. 's' → logprob: -12.406611442565918
    7. ' ,' → logprob: -13.156611442565918
    8. ',in' → logprob: -13.281611442565918
    9. 'In' → logprob: -13.531611442565918
    10. '  ' → logprob: -13.531611442565918

Token 116: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.00043102685594931245
    2. ' AB' → logprob: -7.750431060791016
    3. 'ab' → logprob: -15.625431060791016
    4. ' ' → logprob: -16.625431060791016
    5. '_AB' → logprob: -16.625431060791016
    6. '(' → logprob: -18.375431060791016
    7. '   ' → logprob: -18.750431060791016
    8. 'Ab' → logprob: -19.500431060791016
    9. 'AD' → logprob: -19.875431060791016
    10. 'ABB' → logprob: -20.625431060791016

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036014977376908064
    2. ':
' → logprob: -5.628601551055908
    3. ':
' → logprob: -14.12860107421875
    4. ' :' → logprob: -14.62860107421875
    5. '):' → logprob: -16.62860107421875
    6. ':

' → logprob: -16.87860107421875
    7. 'es' → logprob: -17.37860107421875
    8. ':**' → logprob: -17.62860107421875
    9. ' :
' → logprob: -18.12860107421875
    10. ':`' → logprob: -18.12860107421875

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002228406025096774
    2. ' es' → logprob: -6.377228260040283
    3. 'es' → logprob: -7.752228260040283
    4. '	es' → logprob: -10.002228736877441
    5. '    
' → logprob: -10.502228736877441
    6. '```' → logprob: -12.127228736877441
    7. ' ' → logprob: -12.252228736877441
    8. '   ' → logprob: -12.377228736877441
    9. '       ' → logprob: -12.627228736877441
    10. '  ' → logprob: -13.502228736877441

Token 119: ' a' (ID: 261)
  Prédit: ' es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' es' → logprob: -0.2847776412963867
    2. 'es' → logprob: -1.4097776412963867
    3. '   ' → logprob: -5.784777641296387
    4. 'a' (adapté à ' a') → logprob: -8.409777641296387
    5. '	es' → logprob: -9.159777641296387
    6. ' a' → logprob: -9.284777641296387
    7. ' 
' → logprob: -10.284777641296387
    8. 'e' → logprob: -10.409777641296387
    9. 's' → logprob: -10.784777641296387
    10. 'b' → logprob: -11.909777641296387

Token 120: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05573028326034546
    2. ' -=' → logprob: -3.3057303428649902
    3. '-=' → logprob: -4.30573034286499
    4. ' -' → logprob: -5.55573034286499
    5. ' ' → logprob: -9.680729866027832
    6. 'a' → logprob: -9.805729866027832
    7. 's' → logprob: -11.305729866027832
    8. '   ' → logprob: -11.680729866027832
    9. '.' → logprob: -11.680729866027832
    10. '--;' → logprob: -12.305729866027832

Token 121: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007105246186256409
    2. ' a' → logprob: -7.250710487365723
    3. '-' → logprob: -14.250710487365723
    4. '0' → logprob: -16.75071144104004
    5. '	a' → logprob: -17.87571144104004
    6. 'b' → logprob: -18.00071144104004
    7. ' ' → logprob: -19.75071144104004
    8. '#a' → logprob: -19.75071144104004
    9. '   ' → logprob: -20.37571144104004
    10. '_a' → logprob: -20.87571144104004

Token 122: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10025358200073242
    2. ' -' → logprob: -2.3502535820007324
    3. 'a' → logprob: -10.10025405883789
    4. ' ' → logprob: -13.10025405883789
    5. '[' → logprob: -13.47525405883789
    6. '1' → logprob: -14.10025405883789
    7. '0' → logprob: -14.60025405883789
    8. ' a' → logprob: -14.72525405883789
    9. '()-' → logprob: -15.47525405883789
    10. '   ' → logprob: -16.10025405883789

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -20.125003814697266
    4. '１' → logprob: -20.875003814697266
    5. '```' → logprob: -21.125003814697266
    6. '-' → logprob: -22.375003814697266
    7. 'to' → logprob: -22.500003814697266
    8. '...' → logprob: -22.625003814697266
    9. '   ' → logprob: -22.875003814697266
    10. '[' → logprob: -23.000003814697266

Token 124: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '   ' (ID: 271)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2796151638031006
    2. ' es' → logprob: -1.6546151638031006
    3. '   ' → logprob: -3.5296151638031006
    4. ' ' → logprob: -4.27961540222168
    5. ' 
' → logprob: -5.15461540222168
    6. '
' → logprob: -6.65461540222168
    7. '    
' → logprob: -7.15461540222168
    8. '	es' → logprob: -7.27961540222168
    9. '  
' → logprob: -7.65461540222168
    10. '   
' → logprob: -9.02961540222168

Token 126: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. 'es' → logprob: -18.12502098083496
    4. '   ' → logprob: -20.37502098083496
    5. ' es' → logprob: -21.37502098083496
    6. '	b' → logprob: -22.25002098083496
    7. ' ' → logprob: -22.87502098083496
    8. '_b' → logprob: -24.75002098083496
    9. '```' → logprob: -24.87502098083496
    10. ' 
' → logprob: -25.00002098083496

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21654745936393738
    2. ' -=' → logprob: -2.4665474891662598
    3. '=' → logprob: -2.5915474891662598
    4. '-' → logprob: -3.7165474891662598
    5. '-=' → logprob: -4.59154748916626
    6. ' -' → logprob: -8.091547012329102
    7. '<|end|>' → logprob: -9.466547012329102
    8. '   ' → logprob: -10.466547012329102
    9. '<|end|>' → logprob: -10.591547012329102
    10. ' ' → logprob: -12.341547012329102

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07898672670125961
    2. ' b' → logprob: -2.578986644744873
    3. 'a' → logprob: -9.578987121582031
    4. ' a' → logprob: -11.078987121582031
    5. '1' → logprob: -11.828987121582031
    6. ' ' → logprob: -12.453987121582031
    7. '-' → logprob: -14.953987121582031
    8. ')b' → logprob: -15.453987121582031
    9. '0' → logprob: -15.703987121582031
    10. '   ' → logprob: -16.20398712158203

Token 129: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008178464486263692
    2. ' -' → logprob: -7.125817775726318
    3. 'a' → logprob: -11.750818252563477
    4. '1' → logprob: -12.500818252563477
    5. ' a' → logprob: -14.750818252563477
    6. 'b' → logprob: -14.875818252563477
    7. ' ' → logprob: -14.875818252563477
    8. '[' → logprob: -15.125818252563477
    9. '0' → logprob: -15.750818252563477
    10. '   ' → logprob: -15.875818252563477

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -14.250004768371582
    4. '2' → logprob: -16.250003814697266
    5. '```' → logprob: -18.625003814697266
    6. '0' → logprob: -19.375003814697266
    7. '.' → logprob: -19.500003814697266
    8. '...' → logprob: -20.000003814697266
    9. '  ' → logprob: -20.000003814697266
    10. '<|end|>' → logprob: -20.125003814697266

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007950718514621258
    2. 'es' → logprob: -5.632950782775879
    3. ' es' → logprob: -5.632950782775879
    4. '
' → logprob: -7.382950782775879
    5. '    
' → logprob: -9.132950782775879
    6. '	es' → logprob: -11.007950782775879
    7. ' 
' → logprob: -12.257950782775879
    8. ',' → logprob: -13.007950782775879
    9. '  
' → logprob: -13.257950782775879
    10. '```' → logprob: -13.507950782775879

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09225980192422867
    2. 'es' → logprob: -2.5922598838806152
    3. ' es' → logprob: -4.342259883880615
    4. '
' → logprob: -8.967259407043457
    5. '    
' → logprob: -9.717259407043457
    6. '	es' → logprob: -10.092259407043457
    7. ' 
' → logprob: -10.967259407043457
    8. '```' → logprob: -11.467259407043457
    9. '  
' → logprob: -12.842259407043457
    10. ' ' → logprob: -12.967259407043457

Token 133: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -2.339278580620885e-06
    2. ' es' → logprob: -13.000001907348633
    3. '
' → logprob: -19.875001907348633
    4. '	es' → logprob: -20.875001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '```' → logprob: -22.875001907348633
    7. 'e' → logprob: -23.125001907348633
    8. ' 
' → logprob: -23.500001907348633
    9. 'esz' → logprob: -23.750001907348633
    10. ' ' → logprob: -24.000001907348633

Token 134: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.0
    3. '[' → logprob: -17.875
    4. '[b' → logprob: -18.25
    5. ' [' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. '[A' → logprob: -21.625
    8. '   ' → logprob: -22.5
    9. '[s' → logprob: -22.5
    10. '[e' → logprob: -22.5

Token 135: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.02347012795507908
    2. '.append' → logprob: -3.773470163345337
    3. '.' → logprob: -8.648469924926758
    4. ').' → logprob: -10.398469924926758
    5. ' .' → logprob: -11.773469924926758
    6. ' ].' → logprob: -12.148469924926758
    7. ']' → logprob: -13.523469924926758
    8. '.add' → logprob: -13.648469924926758
    9. '.app' → logprob: -13.648469924926758
    10. ''].' → logprob: -14.398469924926758

Token 136: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.5
    3. ' append' → logprob: -16.5
    4. 'appen' → logprob: -20.0
    5. 'Append' → logprob: -21.625
    6. '_append' → logprob: -21.75
    7. 'app' → logprob: -22.375
    8. '	append' → logprob: -22.5
    9. 'add' → logprob: -23.125
    10. 'push' → logprob: -24.875

Token 137: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. 'b' → logprob: -14.875000953674316
    4. '(
' → logprob: -19.0
    5. ' (' → logprob: -20.0
    6. '	b' → logprob: -20.875
    7. '((' → logprob: -21.375
    8. '(a' → logprob: -22.0
    9. ')b' → logprob: -22.125
    10. '(B' → logprob: -22.25

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004116511438041925
    2. ')
' → logprob: -5.504116535186768
    3. ' )' → logprob: -10.25411605834961
    4. '   ' → logprob: -13.62911605834961
    5. ' )
' → logprob: -13.75411605834961
    6. ')
' → logprob: -15.87911605834961
    7. '),' → logprob: -16.00411605834961
    8. '<|end|>' → logprob: -16.37911605834961
    9. ')

' → logprob: -16.50411605834961
    10. ')#' → logprob: -17.37911605834961

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05526711791753769
    2. 'es' → logprob: -2.930267095565796
    3. ' es' → logprob: -7.930267333984375
    4. '	es' → logprob: -10.805267333984375
    5. '   ' → logprob: -13.180267333984375
    6. ' ' → logprob: -14.055267333984375
    7. '       ' → logprob: -14.680267333984375
    8. '  ' → logprob: -14.805267333984375
    9. '```' → logprob: -14.805267333984375
    10. '    
' → logprob: -15.055267333984375

Token 140: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.0024883802980184555
    2. ' es' → logprob: -6.002488613128662
    3. '   ' → logprob: -11.877488136291504
    4. 'e' → logprob: -12.377488136291504
    5. '	es' → logprob: -13.752488136291504
    6. 'a' → logprob: -16.25248908996582
    7. ' 
' → logprob: -16.25248908996582
    8. ' ' → logprob: -16.37748908996582
    9. 's' → logprob: -16.75248908996582
    10. '_es' → logprob: -17.12748908996582

Token 141: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.0126840758603066e-05
    2. '[a' → logprob: -10.250040054321289
    3. 'b' → logprob: -13.000040054321289
    4. '[' → logprob: -13.125040054321289
    5. '[s' → logprob: -15.000040054321289
    6. '```' → logprob: -17.37504005432129
    7. ' [' → logprob: -17.87504005432129
    8. 's' → logprob: -18.87504005432129
    9. 'a' → logprob: -19.25004005432129
    10. '[B' → logprob: -19.37504005432129

Token 142: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5175796151161194
    2. ').' → logprob: -1.8925795555114746
    3. '].' → logprob: -2.0175795555114746
    4. '.append' → logprob: -2.1425795555114746
    5. ' .' → logprob: -6.392579555511475
    6. ')' → logprob: -7.142579555511475
    7. '   ' → logprob: -8.767580032348633
    8. '.setdefault' → logprob: -9.017580032348633
    9. ']' → logprob: -10.017580032348633
    10. '.add' → logprob: -10.142580032348633

Token 143: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. 'appen' → logprob: -16.5
    3. ' append' → logprob: -16.875
    4. '.append' → logprob: -18.5
    5. 'app' → logprob: -18.625
    6. 'add' → logprob: -18.875
    7. '	append' → logprob: -19.125
    8. '_append' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. 'insert' → logprob: -22.75

Token 144: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.000003814697266
    3. 'a' → logprob: -13.625003814697266
    4. '(
' → logprob: -15.000003814697266
    5. ' (' → logprob: -19.250003814697266
    6. '(A' → logprob: -19.500003814697266
    7. '(ai' → logprob: -19.625003814697266
    8. ')a' → logprob: -20.500003814697266
    9. '(s' → logprob: -21.000003814697266
    10. '((' → logprob: -21.125003814697266

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.125022888183594
    4. ')

' → logprob: -16.875022888183594
    5. ')return' → logprob: -17.750022888183594
    6. '),' → logprob: -17.875022888183594
    7. '))' → logprob: -18.125022888183594
    8. '#' → logprob: -18.250022888183594
    9. ')#' → logprob: -18.500022888183594
    10. '
' → logprob: -18.750022888183594

Token 146: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4251208305358887
    2. 'color' → logprob: -1.5501208305358887
    3. 'dp' → logprob: -1.6751208305358887
    4. 'depth' → logprob: -2.0501208305358887
    5. 'visited' → logprob: -2.8001208305358887
    6. 'from' → logprob: -2.9251208305358887
    7. 'colors' → logprob: -3.1751208305358887
    8. '#' → logprob: -4.300120830535889
    9. 'seen' → logprob: -4.925120830535889
    10. 'max' → logprob: -5.300120830535889

Token 147: ' Liste' (ID: 61030)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8476147055625916
    2. 'visited' → logprob: -1.3476147651672363
    3. 'color' → logprob: -2.0976147651672363
    4. 'import' → logprob: -3.0976147651672363
    5. 'stack' → logprob: -3.3476147651672363
    6. 'dp' → logprob: -3.7226147651672363
    7. '#' → logprob: -4.097614765167236
    8. 'def' → logprob: -4.347614765167236
    9. 'depth' → logprob: -4.347614765167236
    10. 'seen' → logprob: -4.472614765167236

Token 148: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2773926854133606
    2. 'd' → logprob: -2.152392625808716
    3. 'des' → logprob: -3.652392625808716
    4. '_de' → logprob: -3.902392625808716
    5. 'vis' → logprob: -4.027392864227295
    6. 'deque' → logprob: -4.402392864227295
    7. ' =' → logprob: -5.527392864227295
    8. '_c' → logprob: -5.527392864227295
    9. 'dp' → logprob: -5.652392864227295
    10. '_vis' → logprob: -5.777392864227295

Token 149: ' somm' (ID: 44830)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.7415692806243896
    2. 'cou' → logprob: -2.2415692806243896
    3. 'parents' → logprob: -2.3665692806243896
    4. 'de' → logprob: -3.2415692806243896
    5. 'vis' → logprob: -3.3665692806243896
    6. 'visited' → logprob: -3.4915692806243896
    7. 'dist' → logprob: -3.6165692806243896
    8. 'colors' → logprob: -3.6165692806243896
    9. ' parents' → logprob: -4.241569519042969
    10. ' tailles' → logprob: -4.241569519042969

Token 150: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0013153550680726767
    2. 'etes' → logprob: -7.376315116882324
    3. 'et' → logprob: -7.626315116882324
    4. 'es' → logprob: -9.251315116882324
    5. 'ètes' → logprob: -9.876315116882324
    6. 'ètres' → logprob: -11.001315116882324
    7. 'tes' → logprob: -11.751315116882324
    8. '#' → logprob: -12.251315116882324
    9. 'êts' → logprob: -12.251315116882324
    10. 'ères' → logprob: -12.501315116882324

Token 151: ' par' (ID: 686)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2403106391429901
    2. 'used' → logprob: -2.6153106689453125
    3. 'stack' → logprob: -3.6153106689453125
    4. 'colors' → logprob: -3.7403106689453125
    5. 'seen' → logprob: -3.7403106689453125
    6. 'color' → logprob: -4.6153106689453125
    7. 'dist' → logprob: -4.7403106689453125
    8. 'vis' → logprob: -4.9903106689453125
    9. 'to' → logprob: -5.2403106689453125
    10. 'v' → logprob: -5.7403106689453125

Token 152: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.8867887854576111
    2. 'de' → logprob: -1.2617888450622559
    3. 'pro' → logprob: -2.136788845062256
    4. 'distance' → logprob: -3.136788845062256
    5. 'ordre' → logprob: -3.261788845062256
    6. ' couleur' → logprob: -3.761788845062256
    7. ' profondeur' → logprob: -4.261788845062256
    8. 'leur' → logprob: -4.511788845062256
    9. 'niveau' → logprob: -4.636788845062256
    10. 'tail' → logprob: -4.636788845062256

Token 153: ' (' (ID: 350)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.48669931292533875
    2. 'vertices' → logprob: -2.486699342727661
    3. 'colors' → logprob: -2.611699342727661
    4. 'col' → logprob: -2.986699342727661
    5. 'cols' → logprob: -3.236699342727661
    6. 'by' → logprob: -3.736699342727661
    7. 's' → logprob: -4.736699104309082
    8. ' color' → logprob: -4.736699104309082
    9. ' vertices' → logprob: -4.736699104309082
    10. 'colored' → logprob: -4.861699104309082

Token 154: 'je' (ID: 1587)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.558064877986908
    2. 'colors' → logprob: -1.5580649375915527
    3. 'col' → logprob: -2.1830649375915527
    4. 'cols' → logprob: -3.1830649375915527
    5. 'default' → logprob: -3.9330649375915527
    6. 'c' → logprob: -4.558064937591553
    7. 'cc' → logprob: -4.683064937591553
    8. 'clr' → logprob: -5.308064937591553
    9. 'from' → logprob: -5.808064937591553
    10. 'cou' → logprob: -5.933064937591553

Token 155: ' suis' (ID: 15058)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5276086330413818
    2. 'continue' → logprob: -1.6526086330413818
    3. 's' → logprob: -3.277608633041382
    4. 'veux' → logprob: -3.652608633041382
    5. ' continue' → logprob: -3.902608633041382
    6. 'color' → logprob: -3.902608633041382
    7. ' pense' → logprob: -4.527608871459961
    8. 'contin' → logprob: -4.527608871459961
    9. '#' → logprob: -5.027608871459961
    10. 'code' → logprob: -5.027608871459961

Token 156: ' pas' (ID: 2173)
  Prédit: ' sûr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.9748961329460144
    2. 's' → logprob: -1.8498961925506592
    3. 'color' → logprob: -1.8498961925506592
    4. ' color' → logprob: -2.849896192550659
    5. 'dés' → logprob: -3.224896192550659
    6. 'f' → logprob: -3.474896192550659
    7. ' dés' → logprob: -3.849896192550659
    8. 'd' → logprob: -3.974896192550659
    9. ' couleur' → logprob: -4.59989595413208
    10. ' surpris' → logprob: -4.72489595413208

Token 157: ' sûr' (ID: 46415)
  Prédit: ' sûr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.6213123798370361
    2. 's' → logprob: -1.1213123798370361
    3. 'certain' → logprob: -3.371312379837036
    4. 'tout' → logprob: -3.371312379837036
    5. 'fan' → logprob: -4.121312141418457
    6. 'con' → logprob: -4.871312141418457
    7. 'sure' → logprob: -4.996312141418457
    8. 'f' → logprob: -5.121312141418457
    9. '#' → logprob: -5.121312141418457
    10. 'sur' → logprob: -5.621312141418457

Token 158: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16205213963985443
    2. ' de' → logprob: -3.2870521545410156
    3. ' )' → logprob: -3.2870521545410156
    4. ',' → logprob: -3.6620521545410156
    5. 'de' → logprob: -4.162052154541016
    6. ' que' → logprob: -4.287052154541016
    7. '_' → logprob: -5.787052154541016
    8. 's' → logprob: -6.412052154541016
    9. 'que' → logprob: -6.537052154541016
    10. '),' → logprob: -6.537052154541016

Token 159: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8714380264282227
    2. 'quoi' → logprob: -1.4964380264282227
    3. 'l' → logprob: -1.9964380264282227
    4. 'ce' → logprob: -2.3714380264282227
    5. 'le' → logprob: -3.3714380264282227
    6. 'leur' → logprob: -4.246438026428223
    7. '#' → logprob: -4.246438026428223
    8. 'avoir' → logprob: -4.496438026428223
    9. 'comment' → logprob: -4.871438026428223
    10. 'tout' → logprob: -5.121438026428223

Token 160: ''eff' (ID: 75751)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.37097975611686707
    2. 'a' → logprob: -1.4959797859191895
    3. 'input' → logprob: -3.8709797859191895
    4. ''ordre' → logprob: -4.1209797859191895
    5. 'ordre' → logprob: -5.2459797859191895
    6. ''' → logprob: -5.2459797859191895
    7. 'es' → logprob: -5.8709797859191895
    8. 'importance' → logprob: -6.1209797859191895
    9. '```' → logprob: -6.1209797859191895
    10. ')' → logprob: -6.3709797859191895

Token 161: 'icacité' (ID: 131048)
  Prédit: 'icacité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icacité' → logprob: -0.4062875807285309
    2. 'ic' → logprob: -1.9062875509262085
    3. 'c' → logprob: -2.156287670135498
    4. 'cience' → logprob: -3.281287670135498
    5. 'cient' → logprob: -4.281287670135498
    6. 'acité' → logprob: -5.156287670135498
    7. '```' → logprob: -5.781287670135498
    8. '#' → logprob: -6.156287670135498
    9. ')' → logprob: -7.156287670135498
    10. 'ac' → logprob: -7.531287670135498

Token 162: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09646594524383545
    2. ' )' → logprob: -2.846466064453125
    3. ',' → logprob: -3.596466064453125
    4. ')
' → logprob: -5.971466064453125
    5. ' ,' → logprob: -6.721466064453125
    6. '):' → logprob: -7.971466064453125
    7. ' )
' → logprob: -8.221466064453125
    8. '_)' → logprob: -8.221466064453125
    9. ')#' → logprob: -8.346466064453125
    10. ')_' → logprob: -8.846466064453125

Token 163: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.1094894409179688
    2. ')' → logprob: -1.4844894409179688
    3. '#' → logprob: -1.6094894409179688
    4. ' mais' → logprob: -1.8594894409179688
    5. 'mais' → logprob: -3.1094894409179688
    6. 'but' → logprob: -3.3594894409179688
    7. ' )' → logprob: -5.234489440917969
    8. ' #' → logprob: -6.734489440917969
    9. ' ' → logprob: -8.234489440917969
    10. 'b' → logprob: -8.609489440917969

Token 164: ' ça' (ID: 13590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0854381322860718
    2. 'color' → logprob: -1.4604381322860718
    3. '#' → logprob: -1.7104381322860718
    4. ')
' → logprob: -2.0854382514953613
    5. ')' → logprob: -3.0854382514953613
    6. 'colors' → logprob: -4.085438251495361
    7. 'ça' → logprob: -4.585438251495361
    8. 'default' → logprob: -4.835438251495361
    9. '
' → logprob: -5.210438251495361
    10. 'cou' → logprob: -5.335438251495361

Token 165: ' passe' (ID: 22210)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marche' → logprob: -1.2678149938583374
    2. ' fonctionne' → logprob: -1.6428149938583374
    3. 'fonction' → logprob: -1.7678149938583374
    4. 'mar' → logprob: -2.642815113067627
    5. ' semble' → logprob: -2.642815113067627
    6. 'semble' → logprob: -3.517815113067627
    7. ' devrait' → logprob: -3.517815113067627
    8. 'a' → logprob: -3.767815113067627
    9. 'pe' → logprob: -3.767815113067627
    10. 'fait' → logprob: -4.267815113067627

Token 166: '...)
' (ID: 66563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05052423104643822
    2. ')
' → logprob: -3.0505242347717285
    3. 'pour' → logprob: -7.3005242347717285
    4. 'for' → logprob: -8.17552375793457
    5. ' )' → logprob: -8.92552375793457
    6. '):' → logprob: -9.05052375793457
    7. ')

' → logprob: -9.17552375793457
    8. '!)' → logprob: -9.17552375793457
    9. '):
' → logprob: -9.30052375793457
    10. ' pour' → logprob: -9.42552375793457

Token 167: 'cs' (ID: 8102)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8218055963516235
    2. 'cols' → logprob: -2.196805477142334
    3. 'colors' → logprob: -2.321805477142334
    4. 'cs' → logprob: -2.321805477142334
    5. 'col' → logprob: -2.446805477142334
    6. 'from' → logprob: -2.571805477142334
    7. 'vertices' → logprob: -4.321805477142334
    8. 'cc' → logprob: -4.321805477142334
    9. 'vs' → logprob: -4.321805477142334
    10. 'v' → logprob: -4.446805477142334

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10053068399429321
    2. '=' → logprob: -2.8505306243896484
    3. '_by' → logprob: -3.6005306243896484
    4. '_par' → logprob: -5.225530624389648
    5. 'par' → logprob: -6.225530624389648
    6. 't' → logprob: -7.350530624389648
    7. 's' → logprob: -8.225530624389648
    8. 'by' → logprob: -8.350530624389648
    9. '=[]' → logprob: -8.350530624389648
    10. '_per' → logprob: -8.475530624389648

Token 169: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02637380361557007
    2. '{}' → logprob: -3.776373863220215
    3. ' [[]' → logprob: -6.526373863220215
    4. '{}
' → logprob: -6.651373863220215
    5. '{' → logprob: -8.776373863220215
    6. '[]' → logprob: -9.401373863220215
    7. '[]
' → logprob: -9.651373863220215
    8. 'dict' → logprob: -9.901373863220215
    9. '{}

' → logprob: -11.901373863220215
    10. 'collections' → logprob: -12.776373863220215

Token 170: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1285918951034546
    2. ' for' → logprob: -2.128592014312744
    3. ')' → logprob: -7.128592014312744
    4. ']' → logprob: -7.503592014312744
    5. ',' → logprob: -9.378591537475586
    6. '
' → logprob: -9.878591537475586
    7. ' ' → logprob: -10.128591537475586
    8. 'C' → logprob: -10.378591537475586
    9. 'c' → logprob: -11.128591537475586
    10. 'range' → logprob: -11.503591537475586

Token 171: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3150079548358917
    2. ' range' → logprob: -1.3150079250335693
    3. '_' → logprob: -6.440008163452148
    4. '(range' → logprob: -9.440008163452148
    5. ' in' → logprob: -9.940008163452148
    6. '_range' → logprob: -11.190008163452148
    7. 'in' → logprob: -12.565008163452148
    8. ' _' → logprob: -13.190008163452148
    9. '_c' → logprob: -15.065008163452148
    10. '	range' → logprob: -15.315008163452148

Token 172: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07368002086877823
    2. 'in' → logprob: -2.9486799240112305
    3. ' range' → logprob: -4.1986799240112305
    4. ' in' → logprob: -5.6986799240112305
    5. 'C' → logprob: -8.82367992401123
    6. '(range' → logprob: -9.19867992401123
    7. '(C' → logprob: -12.94867992401123
    8. '_' → logprob: -13.44867992401123
    9. ' ' → logprob: -13.82367992401123
    10. '
' → logprob: -14.57367992401123

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011142849922180176
    2. ' range' → logprob: -4.511142730712891
    3. 'C' → logprob: -10.01114273071289
    4. '(range' → logprob: -10.01114273071289
    5. 'set' → logprob: -13.13614273071289
    6. 'ra' → logprob: -14.38614273071289
    7. ' ' → logprob: -14.38614273071289
    8. ' C' → logprob: -14.76114273071289
    9. '(C' → logprob: -15.13614273071289
    10. 'ran' → logprob: -15.13614273071289

Token 174: '(N' (ID: 10564)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.732210636138916
    2. '(N' → logprob: -1.232210636138916
    3. '(' → logprob: -1.482210636138916
    4. '(len' → logprob: -9.232210159301758
    5. '10' → logprob: -9.607210159301758
    6. 'max' → logprob: -9.982210159301758
    7. '(MAX' → logprob: -9.982210159301758
    8. '(C' → logprob: -10.107210159301758
    9. '((' → logprob: -10.982210159301758
    10. '100' → logprob: -11.482210159301758

Token 175: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039528406341560185
    2. ')' → logprob: -8.500394821166992
    3. ']' → logprob: -8.750394821166992
    4. ')]
' → logprob: -10.875394821166992
    5. ' )' → logprob: -11.750394821166992
    6. '+' → logprob: -13.000394821166992
    7. ' ]' → logprob: -14.000394821166992
    8. ')]

' → logprob: -14.125394821166992
    9. '])' → logprob: -14.250394821166992
    10. ')])' → logprob: -15.000394821166992

Token 176: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.078839502763003e-05
    2. 'cs' → logprob: -10.250090599060059
    3. ' for' → logprob: -10.375090599060059
    4. 'c' → logprob: -11.500090599060059
    5. 'color' → logprob: -11.750090599060059
    6. ')' → logprob: -13.750090599060059
    7. 'C' → logprob: -13.875090599060059
    8. 'i' → logprob: -14.125090599060059
    9. 'colors' → logprob: -14.125090599060059
    10. 'idx' → logprob: -14.500090599060059

Token 177: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016130544245243073
    2. ' i' → logprob: -6.501613140106201
    3. 'v' → logprob: -9.126612663269043
    4. 'idx' → logprob: -13.626612663269043
    5. ' v' → logprob: -15.126612663269043
    6. 'u' → logprob: -15.376612663269043
    7. '(i' → logprob: -15.751612663269043
    8. 'x' → logprob: -16.62661361694336
    9. '_i' → logprob: -16.87661361694336
    10. '	i' → logprob: -16.87661361694336

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005435454659163952
    2. 'in' → logprob: -5.630435466766357
    3. ' in' → logprob: -6.380435466766357
    4. ' ,' → logprob: -9.1304349899292
    5. ',c' → logprob: -11.1304349899292
    6. ',C' → logprob: -11.6304349899292
    7. '_,' → logprob: -12.8804349899292
    8. ',in' → logprob: -13.3804349899292
    9. ' ' → logprob: -14.5054349899292
    10. 'C' → logprob: -14.5054349899292

Token 179: ' color' (ID: 3089)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09883785992860794
    2. 'color' → logprob: -2.4738378524780273
    3. ' c' → logprob: -4.973837852478027
    4. 'col' → logprob: -6.223837852478027
    5. ' color' → logprob: -7.348837852478027
    6. 'cc' → logprob: -8.723837852478027
    7. 'val' → logprob: -10.098837852478027
    8. 'v' → logprob: -10.348837852478027
    9. 'clr' → logprob: -10.723837852478027
    10. 'ci' → logprob: -10.973837852478027

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07954110205173492
    2. 'in' → logprob: -2.5795412063598633
    3. ',' → logprob: -8.079541206359863
    4. ' ' → logprob: -8.579541206359863
    5. 's' → logprob: -9.579541206359863
    6. '(' → logprob: -10.204541206359863
    7. ' (' → logprob: -10.829541206359863
    8. ')' → logprob: -11.704541206359863
    9. '_in' → logprob: -12.454541206359863
    10. '_' → logprob: -13.329541206359863

Token 181: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015023599844425917
    2. ' enumerate' → logprob: -6.501502513885498
    3. 'enum' → logprob: -18.126502990722656
    4. 'en' → logprob: -18.501502990722656
    5. 'C' → logprob: -19.876502990722656
    6. '(en' → logprob: -20.001502990722656
    7. 'zip' → logprob: -20.626502990722656
    8. 'range' → logprob: -21.501502990722656
    9. '```' → logprob: -21.501502990722656
    10. '.enumer' → logprob: -21.751502990722656

Token 182: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0076234228909015656
    2. 'C' → logprob: -4.882623195648193
    3. ' C' → logprob: -11.382623672485352
    4. 'enumer' → logprob: -13.257623672485352
    5. '(' → logprob: -13.882623672485352
    6. '(zip' → logprob: -14.257623672485352
    7. '((' → logprob: -14.882623672485352
    8. '	C' → logprob: -14.882623672485352
    9. '(c' → logprob: -15.007623672485352
    10. ')' → logprob: -15.382623672485352

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1427794247865677
    2. '):
' → logprob: -2.0177793502807617
    3. '):
' → logprob: -10.017779350280762
    4. '[' → logprob: -11.392779350280762
    5. ']:' → logprob: -11.517779350280762
    6. ':' → logprob: -11.517779350280762
    7. ' ):' → logprob: -11.767779350280762
    8. ')' → logprob: -11.892779350280762
    9. '):

' → logprob: -12.517779350280762
    10. '[color' → logprob: -13.142779350280762

Token 184: '   ' (ID: 271)
  Prédit: ' cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.704292893409729
    2. 'cs' → logprob: -0.829292893409729
    3. '   ' → logprob: -2.8292927742004395
    4. '	cs' → logprob: -4.8292927742004395
    5. '
' → logprob: -7.0792927742004395
    6. ' ' → logprob: -7.5792927742004395
    7. ' 
' → logprob: -8.579293251037598
    8. '   ' → logprob: -9.079293251037598
    9. ' ' → logprob: -9.579293251037598
    10. '(cs' → logprob: -9.704293251037598

Token 185: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -0.029754191637039185
    2. ' cs' → logprob: -3.529754161834717
    3. '	cs' → logprob: -12.779754638671875
    4. '   ' → logprob: -15.154754638671875
    5. '_cs' → logprob: -15.654754638671875
    6. 'c' → logprob: -15.779754638671875
    7. 'csrf' → logprob: -15.904754638671875
    8. ' ' → logprob: -16.154754638671875
    9. '(cs' → logprob: -16.404754638671875
    10. '.cs' → logprob: -16.779754638671875

Token 186: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -4.4849443838757e-06
    2. 'color' → logprob: -13.125004768371582
    3. '[' → logprob: -13.500004768371582
    4. '[c' → logprob: -14.875004768371582
    5. ' [' → logprob: -15.250004768371582
    6. '
' → logprob: -15.750004768371582
    7. '=color' → logprob: -16.000003814697266
    8. ' color' → logprob: -16.500003814697266
    9. '[
' → logprob: -16.750003814697266
    10. '   ' → logprob: -17.500003814697266

Token 187: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1608894169330597
    2. '].' → logprob: -2.2858893871307373
    3. ' -' → logprob: -3.1608893871307373
    4. ').' → logprob: -5.535889625549316
    5. ' ].' → logprob: -7.785889625549316
    6. ']' → logprob: -9.410889625549316
    7. ')].' → logprob: -10.160889625549316
    8. ')' → logprob: -10.785889625549316
    9. ']).' → logprob: -11.660889625549316
    10. ' ).' → logprob: -11.660889625549316

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.375015258789062
    4. '```' → logprob: -16.500015258789062
    5. ')' → logprob: -17.562515258789062
    6. '  ' → logprob: -18.125015258789062
    7. '...' → logprob: -18.375015258789062
    8. '2' → logprob: -18.562515258789062
    9. '<|end|>' → logprob: -18.625015258789062
    10. ']' → logprob: -18.875015258789062

Token 189: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01990017481148243
    2. ').' → logprob: -4.019900321960449
    3. '.append' → logprob: -6.394900321960449
    4. ' ].' → logprob: -10.26990032196045
    5. '.' → logprob: -10.76990032196045
    6. ']' → logprob: -11.01990032196045
    7. ')' → logprob: -12.76990032196045
    8. ']).' → logprob: -13.89490032196045
    9. ')].' → logprob: -14.01990032196045
    10. ' ).' → logprob: -14.14490032196045

Token 190: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -17.0
    3. 'appen' → logprob: -18.25
    4. '.append' → logprob: -18.75
    5. '	append' → logprob: -20.75
    6. 'add' → logprob: -21.75
    7. 'app' → logprob: -22.25
    8. 'Append' → logprob: -22.625
    9. '_append' → logprob: -22.75
    10. 'appe' → logprob: -24.5

Token 191: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00016229959146585315
    2. 'idx' → logprob: -8.750162124633789
    3. '(' → logprob: -12.625162124633789
    4. '(index' → logprob: -15.250162124633789
    5. ' idx' → logprob: -15.625162124633789
    6. ' (' → logprob: -15.625162124633789
    7. '(
' → logprob: -17.25016212463379
    8. '	idx' → logprob: -18.37516212463379
    9. '[idx' → logprob: -18.50016212463379
    10. '(i' → logprob: -19.62516212463379

Token 192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.375006675720215
    4. ')

' → logprob: -18.12500762939453
    5. ')return' → logprob: -18.75000762939453
    6. '))' → logprob: -19.25000762939453
    7. '
' → logprob: -19.25000762939453
    8. '),' → logprob: -19.37500762939453
    9. ')#' → logprob: -19.87500762939453
    10. ')`' → logprob: -20.37500762939453

Token 193: 'tin' (ID: 63664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2520949840545654
    2. 'dist' → logprob: -1.8770949840545654
    3. 'depth' → logprob: -1.8770949840545654
    4. 'visited' → logprob: -2.5020949840545654
    5. 'res' → logprob: -2.7520949840545654
    6. 'ans' → logprob: -2.8770949840545654
    7. 'used' → logprob: -3.6270949840545654
    8. 'color' → logprob: -3.6270949840545654
    9. 'from' → logprob: -3.6270949840545654
    10. '#' → logprob: -4.0020952224731445

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22281953692436218
    2. ' =' → logprob: -1.7228195667266846
    3. '[' → logprob: -4.4728193283081055
    4. ',' → logprob: -5.4728193283081055
    5. '_' → logprob: -6.8478193283081055
    6. 's' → logprob: -6.9728193283081055
    7. ')' → logprob: -7.0978193283081055
    8. 'time' → logprob: -7.2228193283081055
    9. '_time' → logprob: -7.8478193283081055
    10. ']' → logprob: -7.9728193283081055

Token 195: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38734447956085205
    2. '[-' → logprob: -1.137344479560852
    3. '0' → logprob: -7.7623443603515625
    4. '-' → logprob: -10.387344360351562
    5. '[]' → logprob: -11.137344360351562
    6. '{}' → logprob: -14.137344360351562
    7. '[N' → logprob: -14.137344360351562
    8. '[int' → logprob: -15.012344360351562
    9. ' [-' → logprob: -15.637344360351562
    10. 'None' → logprob: -15.762344360351562

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. '-' → logprob: -10.750021934509277
    3. 'float' → logprob: -17.50002098083496
    4. ' ' → logprob: -18.25002098083496
    5. 'int' → logprob: -18.25002098083496
    6. '10' → logprob: -18.50002098083496
    7. '0' → logprob: -18.62502098083496
    8. '１' → logprob: -19.00002098083496
    9. '11' → logprob: -19.37502098083496
    10. ' -' → logprob: -19.50002098083496

Token 197: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007127957884222269
    2. ']*' → logprob: -5.00712776184082
    3. ' for' → logprob: -8.50712776184082
    4. 'for' → logprob: -8.88212776184082
    5. ']*(' → logprob: -10.38212776184082
    6. ' ]' → logprob: -10.38212776184082
    7. ')' → logprob: -12.25712776184082
    8. '*' → logprob: -13.88212776184082
    9. ',' → logprob: -13.88212776184082
    10. ' *' → logprob: -14.38212776184082

Token 198: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00010640407708706334
    2. '(N' → logprob: -9.250106811523438
    3. '(' → logprob: -11.500106811523438
    4. ' N' → logprob: -16.875106811523438
    5. ' (' → logprob: -18.375106811523438
    6. '```' → logprob: -19.750106811523438
    7. '(
' → logprob: -19.875106811523438
    8. 'n' → logprob: -20.750106811523438
    9. '[N' → logprob: -21.000106811523438
    10. '   ' → logprob: -21.000106811523438

Token 199: '
' (ID: 198)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.04866980016231537
    2. 'time' → logprob: -3.6736698150634766
    3. 't' → logprob: -4.673669815063477
    4. 'timer' → logprob: -5.423669815063477
    5. 'tou' → logprob: -6.048669815063477
    6. '0' → logprob: -6.673669815063477
    7. 'out' → logprob: -6.673669815063477
    8. 'stack' → logprob: -6.798669815063477
    9. '[]' → logprob: -7.423669815063477
    10. 'tour' → logprob: -7.673669815063477

Token 200: 'tout' (ID: 191666)
  Prédit: 'tout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.014923402108252048
    2. 'time' → logprob: -4.514923572540283
    3. 'timer' → logprob: -6.514923572540283
    4. 'tou' → logprob: -6.889923572540283
    5. 't' → logprob: -8.014923095703125
    6. 'low' → logprob: -8.264923095703125
    7. 'out' → logprob: -8.264923095703125
    8. 'stack' → logprob: -8.514923095703125
    9. 'tour' → logprob: -9.389923095703125
    10. 'visited' → logprob: -9.889923095703125

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016061468049883842
    2. ' =' → logprob: -4.141061305999756
    3. '[' → logprob: -11.391061782836914
    4. '=[' → logprob: -11.516061782836914
    5. '[-' → logprob: -12.641061782836914
    6. '=[]' → logprob: -14.766061782836914
    7. ']' → logprob: -15.016061782836914
    8. '```' → logprob: -15.141061782836914
    9. ' =[' → logprob: -15.266061782836914
    10. '[:]' → logprob: -15.391061782836914

Token 202: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.6550729419104755e-05
    2. '[' → logprob: -10.250036239624023
    3. ' [-' → logprob: -14.000036239624023
    4. '[N' → logprob: -15.250036239624023
    5. '   ' → logprob: -19.875036239624023
    6. 'N' → logprob: -20.750036239624023
    7. '-' → logprob: -20.750036239624023
    8. '[t' → logprob: -21.125036239624023
    9. '[n' → logprob: -21.375036239624023
    10. '0' → logprob: -21.625036239624023

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. 'N' → logprob: -10.0000638961792
    3. '-' → logprob: -11.1250638961792
    4. 'int' → logprob: -13.5000638961792
    5. '```' → logprob: -13.8750638961792
    6. 'sys' → logprob: -15.6250638961792
    7. '2' → logprob: -15.6875638961792
    8. '(-' → logprob: -15.7500638961792
    9. '(' → logprob: -15.8125638961792
    10. '(N' → logprob: -16.000064849853516

Token 204: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.08130800724029541
    2. '*N' → logprob: -3.456307888031006
    3. ')*' → logprob: -3.581307888031006
    4. ']' → logprob: -4.081307888031006
    5. ')' → logprob: -6.581307888031006
    6. '*' → logprob: -8.581308364868164
    7. '#' → logprob: -9.831308364868164
    8. ']
' → logprob: -9.956308364868164
    9. ')
' → logprob: -10.081308364868164
    10. '```' → logprob: -10.081308364868164

Token 205: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -17.0
    3. '```' → logprob: -17.375
    4. '
' → logprob: -18.0
    5. '(N' → logprob: -19.25
    6. '(' → logprob: -20.0
    7. '	N' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. 'n' → logprob: -20.25
    10. ' ' → logprob: -20.375

Token 206: '
' (ID: 198)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.18309897184371948
    2. 'timer' → logprob: -1.8080990314483643
    3. 't' → logprob: -6.183098793029785
    4. 'temps' → logprob: -7.683098793029785
    5. 'stack' → logprob: -8.058098793029785
    6. 'depth' → logprob: -8.433098793029785
    7. 'import' → logprob: -9.933098793029785
    8. 'ti' → logprob: -10.058098793029785
    9. 'ts' → logprob: -10.183098793029785
    10. 'times' → logprob: -10.933098793029785

Token 207: 'k' (ID: 74)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.14462681114673615
    2. 'timer' → logprob: -2.0196268558502197
    3. 't' → logprob: -6.769626617431641
    4. 'temps' → logprob: -7.769626617431641
    5. 'stack' → logprob: -8.64462661743164
    6. 'depth' → logprob: -9.51962661743164
    7. 'ti' → logprob: -11.01962661743164
    8. 'ts' → logprob: -11.14462661743164
    9. 'import' → logprob: -11.14462661743164
    10. ' timer' → logprob: -11.51962661743164

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12728115916252136
    2. '=' → logprob: -2.1272811889648438
    3. '=int' → logprob: -8.127281188964844
    4. '=-' → logprob: -10.877281188964844
    5. ' ' → logprob: -12.627281188964844
    6. 'eeper' → logprob: -12.877281188964844
    7. '```' → logprob: -13.002281188964844
    8. '  ' → logprob: -13.127281188964844
    9. 'eep' → logprob: -13.127281188964844
    10. 'ey' → logprob: -13.252281188964844

Token 209: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021962907630950212
    2. ' ' → logprob: -6.127196311950684
    3. '1' → logprob: -11.502196311950684
    4. '-' → logprob: -14.252196311950684
    5. '[' → logprob: -15.502196311950684
    6. ' -' → logprob: -16.627195358276367
    7. '   ' → logprob: -17.752195358276367
    8. ' [' → logprob: -18.502195358276367
    9. '=' → logprob: -18.752195358276367
    10. '2' → logprob: -19.127195358276367

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.12500286102295
    4. '-' → logprob: -14.37500286102295
    5. '[' → logprob: -14.50000286102295
    6. '2' → logprob: -20.000003814697266
    7. '[-' → logprob: -20.250003814697266
    8. '10' → logprob: -20.500003814697266
    9. '000' → logprob: -21.000003814697266
    10. '(' → logprob: -21.000003814697266

Token 211: '

' (ID: 279)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.31747525930404663
    2. 'def' → logprob: -1.3174753189086914
    3. 'parent' → logprob: -6.317475318908691
    4. ')' → logprob: -7.817475318908691
    5. ',' → logprob: -7.942475318908691
    6. '_stack' → logprob: -8.317475318908691
    7. 'visited' → logprob: -8.317475318908691
    8. ':' → logprob: -9.192475318908691
    9. 'depth' → logprob: -9.192475318908691
    10. 'time' → logprob: -9.442475318908691

Token 212: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1273619830608368
    2. 'stack' → logprob: -2.127362012863159
    3. 'parent' → logprob: -8.502362251281738
    4. 'import' → logprob: -8.627362251281738
    5. 'from' → logprob: -10.377362251281738
    6. 'time' → logprob: -12.877362251281738
    7. '_stack' → logprob: -13.002362251281738
    8. 'visited' → logprob: -13.002362251281738
    9. '```' → logprob: -13.377362251281738
    10. 'stk' → logprob: -13.502362251281738

Token 213: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.25193437933921814
    2. 'dfs' → logprob: -1.5019344091415405
    3. 'DFS' → logprob: -13.626934051513672
    4. 'd' → logprob: -13.876934051513672
    5. 'e' → logprob: -14.126934051513672
    6. ' DFS' → logprob: -14.126934051513672
    7. 'df' → logprob: -14.876934051513672
    8. '_d' → logprob: -14.876934051513672
    9. 'D' → logprob: -15.126934051513672
    10. '
' → logprob: -15.626934051513672

Token 214: '(u' (ID: 17057)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5122745633125305
    2. '(u' → logprob: -1.0122745037078857
    3. '(node' → logprob: -3.3872745037078857
    4. '(' → logprob: -6.012274742126465
    5. '(s' → logprob: -7.012274742126465
    6. '(x' → logprob: -8.762274742126465
    7. '(
' → logprob: -10.262274742126465
    8. '(r' → logprob: -10.637274742126465
    9. '(vertex' → logprob: -10.762274742126465
    10. '(i' → logprob: -10.887274742126465

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.991464786347933e-05
    2. '):' → logprob: -9.875060081481934
    3. ',u' → logprob: -12.375060081481934
    4. ' ,' → logprob: -12.875060081481934
    5. 'u' → logprob: -14.375060081481934
    6. ',v' → logprob: -15.000060081481934
    7. ',
' → logprob: -15.500060081481934
    8. ':' → logprob: -15.875060081481934
    9. ')' → logprob: -16.750059127807617
    10. '   ' → logprob: -16.875059127807617

Token 216: ' parent' (ID: 5980)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00797165185213089
    2. ' p' → logprob: -5.00797176361084
    3. 'parent' → logprob: -7.00797176361084
    4. ' parent' → logprob: -8.63297176361084
    5. 'par' → logprob: -8.88297176361084
    6. 'v' → logprob: -11.13297176361084
    7. 'fa' → logprob: -11.88297176361084
    8. '-' → logprob: -12.75797176361084
    9. ' par' → logprob: -13.38297176361084
    10. 'pa' → logprob: -13.50797176361084

Token 217: '=-' (ID: 21714)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4292851984500885
    2. '):' → logprob: -1.0542851686477661
    3. '):
' → logprob: -7.554285049438477
    4. ')' → logprob: -10.804285049438477
    5. ',u' → logprob: -11.054285049438477
    6. 'u' → logprob: -12.179285049438477
    7. ' ,' → logprob: -12.179285049438477
    8. '=' → logprob: -12.429285049438477
    9. ' ):' → logprob: -12.804285049438477
    10. '):
' → logprob: -13.054285049438477

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -17.125001907348633
    4. '１' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.187501907348633
    6. 'None' → logprob: -18.250001907348633
    7. ')' → logprob: -18.437501907348633
    8. '2' → logprob: -18.687501907348633
    9. '
' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.312501907348633

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005093070212751627
    2. '):
' → logprob: -7.750509262084961
    3. ')' → logprob: -9.500509262084961
    4. ':' → logprob: -13.125509262084961
    5. ' ):' → logprob: -14.000509262084961
    6. ',' → logprob: -14.375509262084961
    7. '):
' → logprob: -15.500509262084961
    8. '):

' → logprob: -16.00050926208496
    9. '   ' → logprob: -17.12550926208496
    10. ')->' → logprob: -18.25050926208496

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012350594624876976
    2. ' global' → logprob: -4.887350559234619
    3. '```' → logprob: -6.012350559234619
    4. '	t' → logprob: -7.012350559234619
    5. 'global' → logprob: -8.012351036071777
    6. ' k' → logprob: -8.012351036071777
    7. '	k' → logprob: -8.512351036071777
    8. '	global' → logprob: -9.012351036071777
    9. '    
' → logprob: -9.137351036071777
    10. '   ' → logprob: -9.387351036071777

Token 221: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.03411172330379486
    2. '   ' → logprob: -3.409111738204956
    3. ' global' → logprob: -7.909111499786377
    4. '```' → logprob: -10.284111976623535
    5. 'non' → logprob: -10.909111976623535
    6. '	global' → logprob: -11.034111976623535
    7. 'tin' → logprob: -11.159111976623535
    8. ' ' → logprob: -12.534111976623535
    9. '    
' → logprob: -12.784111976623535
    10. 'gl' → logprob: -13.034111976623535

Token 222: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -15.75
    3. '	k' → logprob: -21.5
    4. '   ' → logprob: -22.0
    5. 'tin' → logprob: -22.5
    6. 'kx' → logprob: -23.125
    7. ' ' → logprob: -23.25
    8. '_k' → logprob: -23.375
    9. 'K' → logprob: -24.75
    10. 't' → logprob: -24.75

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029720881138928235
    2. ',' → logprob: -9.250297546386719
    3. ',t' → logprob: -10.000297546386719
    4. '
' → logprob: -10.375297546386719
    5. '	t' → logprob: -10.500297546386719
    6. '    
' → logprob: -10.875297546386719
    7. 'tin' → logprob: -11.000297546386719
    8. '```' → logprob: -11.250297546386719
    9. ' ' → logprob: -11.875297546386719
    10. '   ' → logprob: -12.000297546386719

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005555360112339258
    2. ' tin' → logprob: -8.750555992126465
    3. '
' → logprob: -9.375555992126465
    4. '	t' → logprob: -9.625555992126465
    5. '```' → logprob: -9.625555992126465
    6. 'tin' → logprob: -10.000555992126465
    7. '   ' → logprob: -10.250555992126465
    8. '\t' → logprob: -10.875555992126465
    9. '    
' → logprob: -10.875555992126465
    10. ',t' → logprob: -11.500555992126465

Token 225: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' (adapté à ' tin') → logprob: -0.043306201696395874
    2. '   ' → logprob: -3.1683061122894287
    3. ' tin' → logprob: -8.543306350708008
    4. '```' → logprob: -9.543306350708008
    5. ' ' → logprob: -10.918306350708008
    6. '  ' → logprob: -12.668306350708008
    7. 't' → logprob: -12.793306350708008
    8. '   ' → logprob: -13.168306350708008
    9. 'tid' → logprob: -13.293306350708008
    10. '``' → logprob: -13.418306350708008

Token 226: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.375016212463379
    3. '[k' → logprob: -13.125016212463379
    4. '[t' → logprob: -13.375016212463379
    5. '[user' → logprob: -16.250015258789062
    6. 'u' → logprob: -16.250015258789062
    7. '=u' → logprob: -16.625015258789062
    8. '```' → logprob: -16.750015258789062
    9. '(u' → logprob: -17.125015258789062
    10. '=' → logprob: -17.125015258789062

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038032762706279755
    2. '=' → logprob: -3.5380327701568604
    3. ']=' → logprob: -5.163032531738281
    4. ' =' → logprob: -6.038032531738281
    5. ' ]' → logprob: -9.038032531738281
    6. ')' → logprob: -11.163032531738281
    7. ']
' → logprob: -13.913032531738281
    8. ']+=' → logprob: -13.913032531738281
    9. ')=' → logprob: -14.663032531738281
    10. '=k' → logprob: -14.788032531738281

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693965435028076
    2. ' =' → logprob: -2.1269397735595703
    3. '=k' → logprob: -11.37693977355957
    4. '=u' → logprob: -16.75193977355957
    5. '=int' → logprob: -16.75193977355957
    6. '=
' → logprob: -18.12693977355957
    7. '=t' → logprob: -18.75193977355957
    8. '=f' → logprob: -18.75193977355957
    9. '=v' → logprob: -19.00193977355957
    10. ')' → logprob: -19.00193977355957

Token 229: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -20.375
    3. '
' → logprob: -21.875
    4. 'kx' → logprob: -23.25
    5. '0' → logprob: -23.5
    6. '<|end|>' → logprob: -23.75
    7. '	k' → logprob: -24.5
    8. '   ' → logprob: -25.25
    9. 'ks' → logprob: -25.25
    10. '=k' → logprob: -25.625

Token 230: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28695961833000183
    2. 'k' → logprob: -1.4119596481323242
    3. '   ' → logprob: -5.411959648132324
    4. '\n' → logprob: -7.661959648132324
    5. '
' → logprob: -9.161959648132324
    6. ' k' → logprob: -9.161959648132324
    7. '<|end|>' → logprob: -9.161959648132324
    8. ';k' → logprob: -9.286959648132324
    9. '	k' → logprob: -9.286959648132324
    10. '    
' → logprob: -9.411959648132324

Token 231: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4305882155895233
    2. '   ' → logprob: -1.0555882453918457
    3. ' k' → logprob: -7.180588245391846
    4. '	k' → logprob: -7.680588245391846
    5. '
' → logprob: -8.305587768554688
    6. '\n' → logprob: -8.680587768554688
    7. '    
' → logprob: -9.305587768554688
    8. '<|end|>' → logprob: -9.680587768554688
    9. '\t' → logprob: -11.055587768554688
    10. '\' → logprob: -11.180587768554688

Token 232: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -2.696889623621246e-06
    2. ' k' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.625001907348633
    4. '```' → logprob: -19.000001907348633
    5. '	k' → logprob: -19.500001907348633
    6. '
' → logprob: -19.625001907348633
    7. '    
' → logprob: -21.250001907348633
    8. '_k' → logprob: -22.250001907348633
    9. '+' → logprob: -22.500001907348633
    10. ' 
' → logprob: -22.625001907348633

Token 233: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003191501135006547
    2. ' +=' → logprob: -5.7531914710998535
    3. '=' → logprob: -11.253191947937012
    4. '+' → logprob: -14.128191947937012
    5. ']+=' → logprob: -17.003190994262695
    6. ' =' → logprob: -19.003190994262695
    7. '+='' → logprob: -19.378190994262695
    8. '+="' → logprob: -19.628190994262695
    9. '+=(' → logprob: -20.003190994262695
    10. ' ' → logprob: -20.253190994262695

Token 234: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002613358374219388
    2. ' k' → logprob: -8.250261306762695
    3. '+' → logprob: -17.375261306762695
    4. '+k' → logprob: -18.750261306762695
    5. '	k' → logprob: -20.125261306762695
    6. '(k' → logprob: -20.500261306762695
    7. ' ' → logprob: -21.750261306762695
    8. '```' → logprob: -21.875261306762695
    9. 'kx' → logprob: -22.125261306762695
    10. '0' → logprob: -22.375261306762695

Token 235: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043233807082287967
    2. ' +' → logprob: -7.75043249130249
    3. '1' → logprob: -14.125432014465332
    4. '+
' → logprob: -14.500432014465332
    5. '+k' → logprob: -14.875432014465332
    6. '+=' → logprob: -17.25043296813965
    7. '＋' → logprob: -18.50043296813965
    8. ' plus' → logprob: -18.62543296813965
    9. ' ' → logprob: -18.75043296813965
    10. '+[' → logprob: -19.25043296813965

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -21.125001907348633
    4. '
' → logprob: -21.750001907348633
    5. '   ' → logprob: -22.250001907348633
    6. '<|end|>' → logprob: -23.000001907348633
    7. '  ' → logprob: -24.250001907348633
    8. '１' → logprob: -24.375001907348633
    9. '۱' → logprob: -25.000001907348633
    10. '-' → logprob: -25.250001907348633

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -22.875
    4. '１' → logprob: -23.125
    5. '   ' → logprob: -24.0
    6. '
' → logprob: -24.25
    7. '۱' → logprob: -25.25
    8. '(' → logprob: -25.625
    9. '' → logprob: -25.625
    10. '+' → logprob: -25.625

Token 238: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32073092460632324
    2. '   ' → logprob: -1.3207309246063232
    3. ' for' → logprob: -4.945731163024902
    4. '    
' → logprob: -8.195731163024902
    5. '	for' → logprob: -10.320731163024902
    6. '
' → logprob: -11.195731163024902
    7. '   ' → logprob: -13.195731163024902
    8. '<|end|>' → logprob: -13.820731163024902
    9. '```' → logprob: -14.195731163024902
    10. '  
' → logprob: -15.445731163024902

Token 239: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014216977171599865
    2. '   ' → logprob: -4.389216899871826
    3. ' for' → logprob: -6.389216899871826
    4. '    
' → logprob: -11.139217376708984
    5. '	for' → logprob: -11.514217376708984
    6. '
' → logprob: -14.139217376708984
    7. '```' → logprob: -14.889217376708984
    8. 'if' → logprob: -15.264217376708984
    9. '<|end|>' → logprob: -15.514217376708984
    10. '  ' → logprob: -16.264217376708984

Token 240: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004897649050690234
    2. ' for' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.250490188598633
    4. '	for' → logprob: -14.875490188598633
    5. '```' → logprob: -15.625490188598633
    6. '    
' → logprob: -15.875490188598633
    7. '<|end|>' → logprob: -15.875490188598633
    8. 'if' → logprob: -16.500490188598633
    9. 'For' → logprob: -16.625490188598633
    10. 'k' → logprob: -16.750490188598633

Token 241: ''aurais' (ID: 149917)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4671991169452667
    2. '+=' → logprob: -2.3421990871429443
    3. ' continue' → logprob: -2.5921990871429443
    4. '   ' → logprob: -3.0921990871429443
    5. '=' → logprob: -3.5921990871429443
    6. ' +=' → logprob: -3.7171990871429443
    7. ''ai' → logprob: -4.342199325561523
    8. 'contin' → logprob: -4.467199325561523
    9. '++' → logprob: -4.592199325561523
    10. '    ' → logprob: -5.092199325561523

Token 242: ' pu' (ID: 2923)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.025104744359850883
    2. 'put' → logprob: -4.525104522705078
    3. 'pus' → logprob: -5.775104522705078
    4. 'fait' → logprob: -5.900104522705078
    5. 'pré' → logprob: -6.150104522705078
    6. 'pe' → logprob: -6.650104522705078
    7. 'bien' → logprob: -6.900104522705078
    8. 'p' → logprob: -7.275104522705078
    9. 'a' → logprob: -7.900104522705078
    10. 'k' → logprob: -8.025104522705078

Token 243: ' utiliser' (ID: 43227)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.5433454513549805
    2. 'k' → logprob: -1.7933454513549805
    3. 'dfs' → logprob: -2.2933454513549805
    4. 'util' → logprob: -2.7933454513549805
    5. 'mettre' → logprob: -2.9183454513549805
    6. 'é' → logprob: -4.4183454513549805
    7. 'contin' → logprob: -5.6683454513549805
    8. 'continue' → logprob: -5.7933454513549805
    9. 'just' → logprob: -5.7933454513549805
    10. 'tout' → logprob: -6.2933454513549805

Token 244: ' +=' (ID: 2757)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08272209018468857
    2. 'u' → logprob: -3.0827221870422363
    3. 'dfs' → logprob: -4.332722187042236
    4. 'range' → logprob: -4.832722187042236
    5. 'pre' → logprob: -5.957722187042236
    6. ' k' → logprob: -6.082722187042236
    7. '1' → logprob: -6.582722187042236
    8. 'tin' → logprob: -6.707722187042236
    9. '```' → logprob: -7.207722187042236
    10. 'for' → logprob: -7.207722187042236

Token 245: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3509839177131653
    2. '   ' → logprob: -1.8509838581085205
    3. ' for' → logprob: -1.9759838581085205
    4. '    
' → logprob: -8.975983619689941
    5. '<|end|>' → logprob: -9.350983619689941
    6. '	for' → logprob: -10.100983619689941
    7. ' ' → logprob: -11.350983619689941
    8. '
' → logprob: -11.350983619689941
    9. '  ' → logprob: -11.850983619689941
    10. '```' → logprob: -12.975983619689941

Token 246: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.08444952964782715
    2. 'but' → logprob: -2.959449529647827
    3. '   ' → logprob: -3.709449529647827
    4. ' mais' → logprob: -6.584449768066406
    5. '    
' → logprob: -7.084449768066406
    6. ' ' → logprob: -7.334449768066406
    7. 'k' → logprob: -7.959449768066406
    8. ' k' → logprob: -8.209449768066406
    9. '
' → logprob: -8.584449768066406
    10. '<|end|>' → logprob: -8.584449768066406

Token 247: ' bon' (ID: 4846)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5906650424003601
    2. 'k' → logprob: -0.8406650424003601
    3. '+=' → logprob: -5.465664863586426
    4. '=' → logprob: -5.840664863586426
    5. ' here' → logprob: -6.340664863586426
    6. ' ici' → logprob: -6.590664863586426
    7. ' j' → logprob: -6.965664863586426
    8. '=k' → logprob: -7.340664863586426
    9. ' =' → logprob: -7.465664863586426
    10. ' je' → logprob: -7.715664863586426

Token 248: '!
' (ID: 4175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2920196056365967
    2. 'for' → logprob: -1.4170196056365967
    3. ' for' → logprob: -4.542019844055176
    4. '    
' → logprob: -9.167019844055176
    5. '	for' → logprob: -10.542019844055176
    6. '
' → logprob: -11.542019844055176
    7. '<|end|>' → logprob: -11.667019844055176
    8. '```' → logprob: -12.667019844055176
    9. '   ' → logprob: -13.167019844055176
    10. ' ' → logprob: -14.042019844055176

Token 249: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1932053416967392
    2. '   ' → logprob: -1.8182053565979004
    3. ' for' → logprob: -4.3182053565979
    4. '    
' → logprob: -10.818204879760742
    5. '	for' → logprob: -11.068204879760742
    6. '<|end|>' → logprob: -12.443204879760742
    7. '```' → logprob: -12.818204879760742
    8. '
' → logprob: -13.818204879760742
    9. '   ' → logprob: -14.193204879760742
    10. '  ' → logprob: -14.193204879760742

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012368128227535635
    2. ' for' → logprob: -9.000123977661133
    3. '	for' → logprob: -16.125123977661133
    4. '   ' → logprob: -16.375123977661133
    5. 'if' → logprob: -17.125123977661133
    6. '    
' → logprob: -17.375123977661133
    7. '```' → logprob: -18.000123977661133
    8. 'stack' → logprob: -18.125123977661133
    9. 'print' → logprob: -19.000123977661133
    10. 'For' → logprob: -19.750123977661133

Token 251: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0043951054103672504
    2. ' v' → logprob: -5.754395008087158
    3. 'w' → logprob: -7.004395008087158
    4. 'e' → logprob: -8.379395484924316
    5. 'x' → logprob: -11.129395484924316
    6. 'vv' → logprob: -11.254395484924316
    7. ' w' → logprob: -11.504395484924316
    8. 'nv' → logprob: -11.754395484924316
    9. 'to' → logprob: -12.254395484924316
    10. 've' → logprob: -12.379395484924316

Token 252: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4287242591381073
    2. ' in' → logprob: -1.0537242889404297
    3. '	in' → logprob: -11.30372428894043
    4. ',' → logprob: -12.30372428894043
    5. ' ' → logprob: -12.30372428894043
    6. ',in' → logprob: -15.30372428894043
    7. ')' → logprob: -15.42872428894043
    8. 'v' → logprob: -15.42872428894043
    9. '```' → logprob: -15.67872428894043
    10. '   ' → logprob: -15.92872428894043

Token 253: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.007607816252857447
    2. ' es' → logprob: -4.882607936859131
    3. '	es' → logprob: -13.757607460021973
    4. '(es' → logprob: -14.757607460021973
    5. '   ' → logprob: -16.25760841369629
    6. ' ' → logprob: -16.88260841369629
    7. ')' → logprob: -18.38260841369629
    8. '_es' → logprob: -18.75760841369629
    9. '  ' → logprob: -19.25760841369629
    10. '[' → logprob: -19.38260841369629

Token 254: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -13.500001907348633
    3. '[' → logprob: -16.500001907348633
    4. ' [' → logprob: -17.875001907348633
    5. '
' → logprob: -18.375001907348633
    6. '[v' → logprob: -18.875001907348633
    7. '	u' → logprob: -18.875001907348633
    8. '<u' → logprob: -19.250001907348633
    9. '[
' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.875001907348633

Token 255: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02816998027265072
    2. ']:
' → logprob: -3.653169870376587
    3. ':' → logprob: -6.528170108795166
    4. ']' → logprob: -8.403169631958008
    5. '):' → logprob: -9.278169631958008
    6. ']:
' → logprob: -10.153169631958008
    7. '):
' → logprob: -11.278169631958008
    8. ':
' → logprob: -11.528169631958008
    9. '}:' → logprob: -11.778169631958008
    10. ']):' → logprob: -12.403169631958008

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018026078119874
    2. ' if' → logprob: -4.143025875091553
    3. 'if' → logprob: -6.643025875091553
    4. '   ' → logprob: -7.643025875091553
    5. '<|end|>' → logprob: -9.018026351928711
    6. '    ' → logprob: -10.018026351928711
    7. '```' → logprob: -11.768026351928711
    8. '           ' → logprob: -11.768026351928711
    9. '     ' → logprob: -12.143026351928711
    10. '        
' → logprob: -12.518026351928711

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39274296164512634
    2. ' if' → logprob: -1.1427429914474487
    3. '       ' → logprob: -5.142743110656738
    4. '   ' → logprob: -12.017743110656738
    5. 'v' → logprob: -12.767743110656738
    6. '	if' → logprob: -13.642743110656738
    7. '    ' → logprob: -14.142743110656738
    8. '           ' → logprob: -14.517743110656738
    9. '        ' → logprob: -14.642743110656738
    10. ' v' → logprob: -14.767743110656738

Token 258: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1426941603422165
    2. ' v' → logprob: -2.0176942348480225
    3. '   ' → logprob: -11.392694473266602
    4. '	v' → logprob: -12.767694473266602
    5. '(v' → logprob: -13.892694473266602
    6. '    ' → logprob: -13.892694473266602
    7. 'not' → logprob: -14.642694473266602
    8. ')v' → logprob: -15.142694473266602
    9. ' ' → logprob: -15.267694473266602
    10. ' ' → logprob: -15.267694473266602

Token 259: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.17995505034923553
    2. '!=' → logprob: -1.804955005645752
    3. ' ==' → logprob: -8.92995548248291
    4. '==' → logprob: -9.55495548248291
    5. ' ' → logprob: -13.67995548248291
    6. ')!=' → logprob: -13.80495548248291
    7. '()!=' → logprob: -13.80495548248291
    8. '!=-' → logprob: -13.92995548248291
    9. ']!=' → logprob: -14.05495548248291
    10. ' ' → logprob: -14.55495548248291

Token 260: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.38736414909362793
    2. ' parent' → logprob: -1.137364149093628
    3. 'u' → logprob: -7.762364387512207
    4. ' u' → logprob: -9.637364387512207
    5. ' ' → logprob: -14.012364387512207
    6. '	parent' → logprob: -14.137364387512207
    7. 'user' → logprob: -15.012364387512207
    8. '   ' → logprob: -15.512364387512207
    9. '(parent' → logprob: -16.26236343383789
    10. '[parent' → logprob: -17.51236343383789

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16845007240772247
    2. ':
' → logprob: -1.918450117111206
    3. '           ' → logprob: -5.543449878692627
    4. ' or' → logprob: -5.918449878692627
    5. ' continue' → logprob: -7.418449878692627
    6. 'continue' → logprob: -7.418449878692627
    7. '       ' → logprob: -8.293450355529785
    8. ' :' → logprob: -10.293450355529785
    9. ':return' → logprob: -10.293450355529785
    10. '	continue' → logprob: -10.918450355529785

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06820231676101685
    2. 'continue' → logprob: -2.818202257156372
    3. ' continue' → logprob: -5.193202495574951
    4. 'dfs' → logprob: -8.068202018737793
    5. '       ' → logprob: -8.318202018737793
    6. '```' → logprob: -10.568202018737793
    7. ' dfs' → logprob: -10.943202018737793
    8. ':
' → logprob: -11.443202018737793
    9. 'contin' → logprob: -11.568202018737793
    10. '               ' → logprob: -12.193202018737793

Token 263: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.002468524733558297
    2. '           ' → logprob: -6.502468585968018
    3. ' continue' → logprob: -7.002468585968018
    4. '               ' → logprob: -10.37746810913086
    5. '       ' → logprob: -10.75246810913086
    6. 'continu' → logprob: -13.62746810913086
    7. 'contin' → logprob: -14.12746810913086
    8. '	continue' → logprob: -14.12746810913086
    9. '   ' → logprob: -14.62746810913086
    10. 'pass' → logprob: -16.50246810913086

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005931758787482977
    2. 'dfs' → logprob: -6.255931854248047
    3. '   ' → logprob: -6.380931854248047
    4. ' dfs' → logprob: -6.755931854248047
    5. '
' → logprob: -7.255931854248047
    6. '        
' → logprob: -8.505931854248047
    7. '```' → logprob: -9.505931854248047
    8. '           ' → logprob: -9.880931854248047
    9. '    
' → logprob: -10.255931854248047
    10. '  
' → logprob: -12.005931854248047

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.559163510799408
    2. '   ' → logprob: -0.934163510799408
    3. 'dfs' → logprob: -3.9341635704040527
    4. ' dfs' → logprob: -4.434163570404053
    5. '    
' → logprob: -6.434163570404053
    6. '        
' → logprob: -6.809163570404053
    7. '           ' → logprob: -7.934163570404053
    8. '```' → logprob: -8.559163093566895
    9. '
' → logprob: -8.684163093566895
    10. '    ' → logprob: -9.684163093566895

Token 266: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.002480412134900689
    2. '   ' → logprob: -6.752480506896973
    3. ' dfs' → logprob: -6.752480506896973
    4. '       ' → logprob: -9.002480506896973
    5. 'if' → logprob: -11.502480506896973
    6. '```' → logprob: -12.877480506896973
    7. 'df' → logprob: -13.127480506896973
    8. ' ' → logprob: -14.252480506896973
    9. '  ' → logprob: -14.627480506896973
    10. '           ' → logprob: -14.752480506896973

Token 267: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.125005722045898
    3. '(
' → logprob: -15.250005722045898
    4. 'v' → logprob: -16.8750057220459
    5. ' (' → logprob: -17.1250057220459
    6. ')v' → logprob: -18.1250057220459
    7. '(u' → logprob: -19.0000057220459
    8. ')' → logprob: -19.1250057220459
    9. ',v' → logprob: -19.5000057220459
    10. '[v' → logprob: -19.5000057220459

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02625141851603985
    2. ',v' → logprob: -3.7762513160705566
    3. 'v' → logprob: -5.901251316070557
    4. ' ,' → logprob: -8.901251792907715
    5. '(v' → logprob: -9.776251792907715
    6. ' v' → logprob: -9.901251792907715
    7. ')' → logprob: -11.651251792907715
    8. ',
' → logprob: -12.401251792907715
    9. ')v' → logprob: -12.651251792907715
    10. '	v' → logprob: -13.651251792907715

Token 269: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.5649528298527e-05
    2. ' u' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.625075340270996
    4. '	u' → logprob: -16.125076293945312
    5. '
' → logprob: -16.625076293945312
    6. ')' → logprob: -16.875076293945312
    7. '    ' → logprob: -18.125076293945312
    8. '    
' → logprob: -18.500076293945312
    9. '[u' → logprob: -18.500076293945312
    10. 'у' → logprob: -18.750076293945312

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000206401280593127
    2. ')
' → logprob: -8.500205993652344
    3. ' )' → logprob: -13.375205993652344
    4. ')#' → logprob: -14.750205993652344
    5. ')

' → logprob: -15.375205993652344
    6. ')return' → logprob: -15.375205993652344
    7. '   ' → logprob: -15.875205993652344
    8. '<|end|>' → logprob: -16.000205993652344
    9. ')v' → logprob: -16.250205993652344
    10. '))' → logprob: -17.000205993652344

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07088904082775116
    2. 'tout' → logprob: -2.6958889961242676
    3. '```' → logprob: -7.570888996124268
    4. ' tout' → logprob: -7.945888996124268
    5. 't' → logprob: -10.445889472961426
    6. ' ' → logprob: -11.195889472961426
    7. '``' → logprob: -11.695889472961426
    8. '    
' → logprob: -12.195889472961426
    9. '	t' → logprob: -12.320889472961426
    10. '       ' → logprob: -12.570889472961426

Token 272: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' (adapté à ' tout') → logprob: -8.995397365652025e-05
    2. '   ' → logprob: -9.375089645385742
    3. ' tout' → logprob: -12.375089645385742
    4. '```' → logprob: -14.750089645385742
    5. 'todo' → logprob: -16.000089645385742
    6. '  ' → logprob: -16.125089645385742
    7. 't' → logprob: -16.625089645385742
    8. ' ' → logprob: -17.000089645385742
    9. '    
' → logprob: -17.000089645385742
    10. 'Tout' → logprob: -17.750089645385742

Token 273: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -15.875
    3. '[v' → logprob: -16.0
    4. '[' → logprob: -17.75
    5. '```' → logprob: -18.5
    6. '(u' → logprob: -19.125
    7. '[t' → logprob: -19.25
    8. '[user' → logprob: -19.875
    9. '	u' → logprob: -20.875
    10. '<u' → logprob: -21.625

Token 274: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.539801688631997e-05
    2. ']=' → logprob: -9.750065803527832
    3. ' ]' → logprob: -12.750065803527832
    4. ')' → logprob: -13.250065803527832
    5. '=' → logprob: -13.500065803527832
    6. '[u' → logprob: -14.000065803527832
    7. ' =' → logprob: -16.750064849853516
    8. '   ' → logprob: -16.875064849853516
    9. ']
' → logprob: -17.750064849853516
    10. '[' → logprob: -18.625064849853516

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859009385108948
    2. ' =' → logprob: -3.0485901832580566
    3. '=k' → logprob: -12.798589706420898
    4. '＝' → logprob: -18.1735897064209
    5. '=v' → logprob: -19.4235897064209
    6. ')' → logprob: -19.6735897064209
    7. '=end' → logprob: -19.6735897064209
    8. '=t' → logprob: -20.4235897064209
    9. '=i' → logprob: -20.5485897064209
    10. '=cut' → logprob: -20.6735897064209

Token 276: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2664456789934775e-06
    2. ' k' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.125001907348633
    4. ' ' → logprob: -20.125001907348633
    5. '	k' → logprob: -20.625001907348633
    6. '  ' → logprob: -22.375001907348633
    7. ' ' → logprob: -22.750001907348633
    8. '_k' → logprob: -23.875001907348633
    9. '[k' → logprob: -24.000001907348633
    10. 'c' → logprob: -24.125001907348633

Token 277: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.7143184542655945
    2. 'stack' → logprob: -1.3393185138702393
    3. 'for' → logprob: -1.8393185138702393
    4. 'def' → logprob: -3.7143185138702393
    5. 'root' → logprob: -4.08931827545166
    6. 'return' → logprob: -4.58931827545166
    7. '#' → logprob: -5.21431827545166
    8. 'from' → logprob: -5.46431827545166
    9. '<|end|>' → logprob: -5.71431827545166
    10. 'print' → logprob: -5.83931827545166

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.27099974633893e-05
    2. '(u' → logprob: -13.000012397766113
    3. '()' → logprob: -13.125012397766113
    4. '(
' → logprob: -13.125012397766113
    5. ' (' → logprob: -13.500012397766113
    6. '0' → logprob: -13.750012397766113
    7. '<|end|>' → logprob: -13.875012397766113
    8. '((' → logprob: -14.375012397766113
    9. '(es' → logprob: -14.500012397766113
    10. '```' → logprob: -15.250012397766113

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -17.125
    4. '<|end|>' → logprob: -18.625
    5. '۰' → logprob: -18.75
    6. '(' → logprob: -18.875
    7. '012' → logprob: -20.125
    8. '1' → logprob: -20.5
    9. '00' → logprob: -21.125
    10. '０' → logprob: -21.3125

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02995828539133072
    2. ',' → logprob: -3.5299582481384277
    3. ',)' → logprob: -8.654958724975586
    4. ' )' → logprob: -10.404958724975586
    5. ' ,' → logprob: -14.029958724975586
    6. ',:)' → logprob: -14.529958724975586
    7. '))' → logprob: -14.529958724975586
    8. '),' → logprob: -14.904958724975586
    9. ')`' → logprob: -15.529958724975586
    10. ')#' → logprob: -16.404958724975586

Token 282: 'class' (ID: 1444)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.4564820528030396
    2. 'cs' → logprob: -1.4564820528030396
    3. '#' → logprob: -2.58148193359375
    4. 'res' → logprob: -2.95648193359375
    5. 'max' → logprob: -2.95648193359375
    6. 'count' → logprob: -3.20648193359375
    7. 'colors' → logprob: -3.45648193359375
    8. 'k' → logprob: -3.58148193359375
    9. 'def' → logprob: -3.70648193359375
    10. 'for' → logprob: -3.83148193359375

Token 283: ' BIT' (ID: 52185)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.11839507520198822
    2. 'Union' → logprob: -2.9933950901031494
    3. ' Segment' → logprob: -4.24339485168457
    4. ' Counter' → logprob: -4.24339485168457
    5. ' Tree' → logprob: -5.49339485168457
    6. 'Segment' → logprob: -5.49339485168457
    7. ' Node' → logprob: -5.74339485168457
    8. 'Counter' → logprob: -5.99339485168457
    9. ' defaultdict' → logprob: -6.24339485168457
    10. ' Ordered' → logprob: -6.36839485168457

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0256052166223526
    2. '(' → logprob: -3.9006052017211914
    3. '():' → logprob: -6.025605201721191
    4. ':
' → logprob: -7.275605201721191
    5. '(Binary' → logprob: -7.775605201721191
    6. '(size' → logprob: -8.400605201721191
    7. '[' → logprob: -8.525605201721191
    8. '(Tree' → logprob: -8.650605201721191
    9. '(Bit' → logprob: -8.900605201721191
    10. '(bit' → logprob: -9.400605201721191

Token 285: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12814033031463623
    2. '   ' → logprob: -2.753140449523926
    3. ':
' → logprob: -3.503140449523926
    4. ' :' → logprob: -5.003140449523926
    5. '  
' → logprob: -5.378140449523926
    6. ' :
' → logprob: -5.628140449523926
    7. '    
' → logprob: -6.003140449523926
    8. ' 
' → logprob: -6.378140449523926
    9. '    ' → logprob: -6.628140449523926
    10. ' ' → logprob: -7.003140449523926

Token 286: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6197196841239929
    2. ' def' → logprob: -0.8697196841239929
    3. '   ' → logprob: -3.4947197437286377
    4. ' __' → logprob: -5.619719505310059
    5. ' ' → logprob: -5.994719505310059
    6. '    ' → logprob: -6.494719505310059
    7. '__' → logprob: -6.744719505310059
    8. ' [' → logprob: -7.369719505310059
    9. 'class' → logprob: -7.744719505310059
    10. ' None' → logprob: -7.744719505310059

Token 287: ' Just' (ID: 6214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28190886974334717
    2. ' def' → logprob: -1.4069088697433472
    3. '__' → logprob: -7.531908988952637
    4. '   ' → logprob: -9.031908988952637
    5. ' __' → logprob: -9.906908988952637
    6. '"""' → logprob: -11.531908988952637
    7. ' ' → logprob: -11.656908988952637
    8. 'class' → logprob: -11.656908988952637
    9. '	def' → logprob: -11.656908988952637
    10. 'python' → logprob: -13.031908988952637

Token 288: 'e' (ID: 68)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31314411759376526
    2. 'def' → logprob: -1.6881440877914429
    3. '   ' → logprob: -2.6881442070007324
    4. ' ' → logprob: -4.688144207000732
    5. ' in' → logprob: -5.688144207000732
    6. ' like' → logprob: -7.188144207000732
    7. ' pass' → logprob: -7.813144207000732
    8. '    ' → logprob: -7.938144207000732
    9. ' for' → logprob: -7.938144207000732
    10. 'e' → logprob: -7.938144207000732

Token 289: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7183683514595032
    2. ' def' → logprob: -0.8433683514595032
    3. ' une' → logprob: -3.4683682918548584
    4. '   ' → logprob: -3.5933682918548584
    5. ' ' → logprob: -4.7183685302734375
    6. ' la' → logprob: -6.2183685302734375
    7. ' le' → logprob: -6.3433685302734375
    8. ' un' → logprob: -6.5933685302734375
    9. ' None' → logprob: -6.8433685302734375
    10. 'n' → logprob: -7.2183685302734375

Token 290: ' garder' (ID: 63069)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.33154210448265076
    2. ' l' → logprob: -1.8315421342849731
    3. 'l' → logprob: -2.9565420150756836
    4. ' le' → logprob: -3.3315420150756836
    5. ' ' → logprob: -5.206542015075684
    6. 'la' → logprob: -5.331542015075684
    7. ' def' → logprob: -5.831542015075684
    8. ' les' → logprob: -5.956542015075684
    9. '__' → logprob: -6.081542015075684
    10. '   ' → logprob: -6.081542015075684

Token 291: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5846058130264282
    2. 'la' → logprob: -1.0846058130264282
    3. 'le' → logprob: -3.2096056938171387
    4. 'l' → logprob: -4.084605693817139
    5. ' une' → logprob: -4.334605693817139
    6. ' l' → logprob: -4.334605693817139
    7. 'une' → logprob: -4.834605693817139
    8. ' le' → logprob: -5.584605693817139
    9. 'self' → logprob: -6.334605693817139
    10. 'les' → logprob: -6.584605693817139

Token 292: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.9329266548156738
    2. 'template' → logprob: -2.182926654815674
    3. 'style' → logprob: -2.307926654815674
    4. 'fun' → logprob: -2.307926654815674
    5. 'size' → logprob: -2.557926654815674
    6. 'next' → logprob: -3.057926654815674
    7. 's' → logprob: -3.932926654815674
    8. 'format' → logprob: -4.057926654815674
    9. 'dé' → logprob: -4.182926654815674
    10. 'range' → logprob: -4.682926654815674

Token 293: ' lis' (ID: 20784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3302200436592102
    2. ' :' → logprob: -2.0802199840545654
    3. ' (' → logprob: -3.2052199840545654
    4. '   ' → logprob: -3.5802199840545654
    5. '_' → logprob: -4.3302202224731445
    6. ' :
' → logprob: -4.4552202224731445
    7. '
' → logprob: -4.8302202224731445
    8. ' ' → logprob: -4.8302202224731445
    9. '(' → logprob: -4.8302202224731445
    10. '  ' → logprob: -5.4552202224731445

Token 294: 'ible' (ID: 1430)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.6308348774909973
    2. 'ble' → logprob: -1.3808348178863525
    3. 'b' → logprob: -1.6308348178863525
    4. 'bre' → logprob: -5.005835056304932
    5. 't' → logprob: -5.380835056304932
    6. 'bite' → logprob: -6.380835056304932
    7. 'ne' → logprob: -6.755835056304932
    8. 'bit' → logprob: -6.755835056304932
    9. 'be' → logprob: -7.130835056304932
    10. 'tte' → logprob: -8.005834579467773

Token 295: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018179206177592278
    2. '(' → logprob: -4.768179416656494
    3. ':
' → logprob: -5.393179416656494
    4. ' :' → logprob: -6.018179416656494
    5. '(object' → logprob: -7.518179416656494
    6. '():' → logprob: -7.768179416656494
    7. '   ' → logprob: -7.893179416656494
    8. ' ' → logprob: -8.018178939819336
    9. ' (' → logprob: -8.518178939819336
    10. ' :
' → logprob: -9.143178939819336

Token 296: ' BIT' (ID: 52185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.462855577468872
    2. ' def' → logprob: -1.587855577468872
    3. 'class' → logprob: -1.712855577468872
    4. 'def' → logprob: -2.337855577468872
    5. 'None' → logprob: -2.337855577468872
    6. ' None' → logprob: -3.087855577468872
    7. '
' → logprob: -3.712855577468872
    8. 'import' → logprob: -3.837855577468872
    9. 'pass' → logprob: -4.337855339050293
    10. '__' → logprob: -4.587855339050293

Token 297: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05844265967607498
    2. ':
' → logprob: -3.5584425926208496
    3. '(' → logprob: -4.30844259262085
    4. '():' → logprob: -5.30844259262085
    5. ' :' → logprob: -5.93344259262085
    6. '):' → logprob: -5.93344259262085
    7. ',' → logprob: -7.18344259262085
    8. '   ' → logprob: -7.30844259262085
    9. ' :
' → logprob: -7.68344259262085
    10. ' (' → logprob: -7.68344259262085

Token 298: ' Binary' (ID: 32672)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.1381719708442688
    2. ' fen' → logprob: -3.263171911239624
    3. '"' → logprob: -3.388171911239624
    4. 'Binary' → logprob: -4.138172149658203
    5. 'fen' → logprob: -4.138172149658203
    6. ' Fen' → logprob: -5.263172149658203
    7. ' ' → logprob: -5.263172149658203
    8. '(Binary' → logprob: -5.388172149658203
    9. '```' → logprob: -5.888172149658203
    10. '"B' → logprob: -6.263172149658203

Token 299: ' Indexed' (ID: 158810)
  Prédit: 'Indexed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -0.06576041877269745
    2. ' Indexed' → logprob: -2.815760374069214
    3. 'Index' → logprob: -5.815760612487793
    4. ' indexed' → logprob: -7.440760612487793
    5. '   ' → logprob: -9.940760612487793
    6. 'indexed' → logprob: -10.190760612487793
    7. ' ' → logprob: -10.315760612487793
    8. '  ' → logprob: -10.440760612487793
    9. 'Indexer' → logprob: -10.815760612487793
    10. 'I' → logprob: -11.190760612487793

Token 300: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -5.383526149671525e-05
    2. ' Tree' → logprob: -10.500053405761719
    3. '	Tree' → logprob: -11.875053405761719
    4. 'ree' → logprob: -12.500053405761719
    5. '
' → logprob: -13.000053405761719
    6. 'T' → logprob: -13.000053405761719
    7. ' ' → logprob: -13.250053405761719
    8. 'Tre' → logprob: -13.500053405761719
    9. ' tree' → logprob: -13.500053405761719
    10. '_T' → logprob: -13.875053405761719

Token 301: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0657421126961708
    2. '(' → logprob: -3.815742015838623
    3. ':
' → logprob: -3.940742015838623
    4. '   ' → logprob: -5.065742015838623
    5. ' (' → logprob: -5.315742015838623
    6. '
' → logprob: -5.440742015838623
    7. '():' → logprob: -6.690742015838623
    8. '<|end|>' → logprob: -6.815742015838623
    9. ' ' → logprob: -7.315742015838623
    10. '):' → logprob: -7.565742015838623

Token 302: 'Fen' (ID: 155141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5134910345077515
    2. 'Fen' → logprob: -1.1384910345077515
    3. '):
' → logprob: -3.888491153717041
    4. ' fen' → logprob: -3.888491153717041
    5. 'fen' → logprob: -4.388491153717041
    6. ' or' → logprob: -4.638491153717041
    7. '):' → logprob: -5.013491153717041
    8. ' Fen' → logprob: -6.138491153717041
    9. ' )' → logprob: -6.263491153717041
    10. ' ' → logprob: -6.513491153717041

Token 303: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08979858458042145
    2. 'wick' → logprob: -2.46479868888855
    3. '```' → logprob: -7.714798450469971
    4. 'être' → logprob: -9.589798927307129
    5. 'wik' → logprob: -10.214798927307129
    6. 'tree' → logprob: -10.339798927307129
    7. '   ' → logprob: -10.589798927307129
    8. ']' → logprob: -10.839798927307129
    9. 't' → logprob: -10.964798927307129
    10. '
' → logprob: -11.089798927307129

Token 304: ')
' (ID: 446)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.028310444205999374
    2. ' Tree' → logprob: -3.653310537338257
    3. ')' → logprob: -6.528310298919678
    4. 'ree' → logprob: -8.403310775756836
    5. ' tree' → logprob: -8.653310775756836
    6. 'tree' → logprob: -9.653310775756836
    7. ' )' → logprob: -10.778310775756836
    8. ' ' → logprob: -10.903310775756836
    9. '	Tree' → logprob: -10.903310775756836
    10. '
' → logprob: -12.278310775756836

Token 305: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03243446722626686
    2. ':
' → logprob: -3.5324344635009766
    3. '<|end|>' → logprob: -7.407434463500977
    4. '   ' → logprob: -7.532434463500977
    5. '
' → logprob: -7.657434463500977
    6. '(' → logprob: -8.532434463500977
    7. ' :' → logprob: -8.782434463500977
    8. '(object' → logprob: -8.907434463500977
    9. '():' → logprob: -9.657434463500977
    10. '):' → logprob: -9.657434463500977

Token 306: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.750897228717804
    2. '   ' → logprob: -1.2508971691131592
    3. 'def' (adapté à ' def') → logprob: -1.5008971691131592
    4. '    
' → logprob: -4.875897407531738
    5. ':' → logprob: -5.500897407531738
    6. '
' → logprob: -6.125897407531738
    7. ' 
' → logprob: -6.750897407531738
    8. '	def' → logprob: -7.250897407531738
    9. ' ' → logprob: -7.500897407531738
    10. '    ' → logprob: -8.000897407531738

Token 307: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6042551398277283
    2. '__' → logprob: -0.8542551398277283
    3. 'init' → logprob: -3.604255199432373
    4. ' init' → logprob: -7.729255199432373
    5. '_init' → logprob: -8.229254722595215
    6. ' ' → logprob: -13.354254722595215
    7. '___' → logprob: -13.979254722595215
    8. ' ' → logprob: -14.604254722595215
    9. '```' → logprob: -15.229254722595215
    10. '  ' → logprob: -15.479254722595215

Token 308: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.625
    3. ' init' → logprob: -16.875
    4. 'ini' → logprob: -18.25
    5. '_init' → logprob: -19.5
    6. '
' → logprob: -19.5
    7. 'innit' → logprob: -19.75
    8. 'in' → logprob: -19.875
    9. 'inite' → logprob: -20.0
    10. 'inti' → logprob: -21.25

Token 309: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6942360997200012
    2. '__(' → logprob: -0.6942360997200012
    3. '(' → logprob: -6.9442362785339355
    4. '__' → logprob: -9.444235801696777
    5. ' (' → logprob: -10.944235801696777
    6. 'self' → logprob: -12.194235801696777
    7. '_(' → logprob: -12.194235801696777
    8. '(n' → logprob: -12.694235801696777
    9. '(size' → logprob: -12.819235801696777
    10. '(this' → logprob: -13.194235801696777

Token 310: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. ',' → logprob: -17.500036239624023
    5. ' ' → logprob: -18.250036239624023
    6. ',self' → logprob: -18.625036239624023
    7. '(self' → logprob: -18.750036239624023
    8. 'n' → logprob: -18.875036239624023
    9. '	self' → logprob: -19.125036239624023
    10. '       ' → logprob: -19.125036239624023

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001473079901188612
    2. ',n' → logprob: -6.8764729499816895
    3. ' ,' → logprob: -8.001473426818848
    4. 'self' → logprob: -10.126473426818848
    5. ',size' → logprob: -10.376473426818848
    6. ',num' → logprob: -11.501473426818848
    7. ',N' → logprob: -11.876473426818848
    8. '(n' → logprob: -12.251473426818848
    9. ',self' → logprob: -12.501473426818848
    10. '__,' → logprob: -12.751473426818848

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017489245161414146
    2. ' n' → logprob: -4.892489433288574
    3. 'self' → logprob: -5.017489433288574
    4. 'size' → logprob: -6.017489433288574
    5. 'N' → logprob: -7.642489433288574
    6. ' size' → logprob: -8.892489433288574
    7. '   ' → logprob: -9.517489433288574
    8. ' self' → logprob: -10.017489433288574
    9. ' ' → logprob: -10.517489433288574
    10. ' N' → logprob: -12.267489433288574

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762714743614197
    2. '):' → logprob: -0.8262714743614197
    3. '):
' → logprob: -8.076271057128906
    4. ' ):' → logprob: -11.451271057128906
    5. ' ):
' → logprob: -12.576271057128906
    6. ')' → logprob: -12.826271057128906
    7. ',' → logprob: -13.826271057128906
    8. ':' → logprob: -14.076271057128906
    9. '):

' → logprob: -14.201271057128906
    10. '+' → logprob: -14.326271057128906

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011307948443572968
    2. ' self' → logprob: -9.500113487243652
    3. 'self' → logprob: -11.375113487243652
    4. '	' → logprob: -12.000113487243652
    5. '	   ' → logprob: -12.000113487243652
    6. '	self' → logprob: -12.000113487243652
    7. '   ' → logprob: -12.500113487243652
    8. '<|end|>' → logprob: -13.000113487243652
    9. '	       ' → logprob: -13.875113487243652
    10. ',' → logprob: -15.000113487243652

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09504200518131256
    2. '       ' → logprob: -3.0950419902801514
    3. ' self' → logprob: -3.0950419902801514
    4. '	self' → logprob: -9.34504222869873
    5. '   ' → logprob: -10.47004222869873
    6. '	' → logprob: -13.22004222869873
    7. ' ' → logprob: -14.09504222869873
    8. '(self' → logprob: -14.84504222869873
    9. '	   ' → logprob: -15.97004222869873
    10. '[self' → logprob: -17.095041275024414

Token 316: '.N' (ID: 4439)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09363970905542374
    2. '.n' → logprob: -3.593639612197876
    3. ' =' → logprob: -4.218639850616455
    4. 'size' → logprob: -4.468639850616455
    5. '=n' → logprob: -4.593639850616455
    6. '_size' → logprob: -4.968639850616455
    7. '.size' → logprob: -4.968639850616455
    8. 'n' → logprob: -5.468639850616455
    9. '.' → logprob: -5.593639850616455
    10. '.data' → logprob: -7.593639850616455

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694406509399414
    2. ' =' → logprob: -2.126944065093994
    3. '=n' → logprob: -11.126943588256836
    4. '   ' → logprob: -14.251943588256836
    5. '=N' → logprob: -14.626943588256836
    6. '=int' → logprob: -15.876943588256836
    7. '＝' → logprob: -17.001943588256836
    8. ' ' → logprob: -17.001943588256836
    9. '=len' → logprob: -17.376943588256836
    10. '  ' → logprob: -18.126943588256836

Token 318: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018029935017693788
    2. ' n' → logprob: -8.6251802444458
    3. '1' → logprob: -14.8751802444458
    4. '   ' → logprob: -15.7501802444458
    5. '	n' → logprob: -16.125181198120117
    6. 'N' → logprob: -16.500181198120117
    7. '[' → logprob: -17.250181198120117
    8. '[n' → logprob: -17.625181198120117
    9. '(n' → logprob: -18.500181198120117
    10. '2' → logprob: -18.750181198120117

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033296257606707513
    2. 'self' → logprob: -9.000332832336426
    3. '   ' → logprob: -9.375332832336426
    4. '
' → logprob: -10.000332832336426
    5. '<|end|>' → logprob: -10.250332832336426
    6. '	' → logprob: -11.125332832336426
    7. '	self' → logprob: -11.875332832336426
    8. ' self' → logprob: -12.000332832336426
    9. '           ' → logprob: -12.125332832336426
    10. '	   ' → logprob: -12.875332832336426

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001777960715116933
    2. 'self' → logprob: -8.875177383422852
    3. '   ' → logprob: -10.625177383422852
    4. ' self' → logprob: -12.250177383422852
    5. '	' → logprob: -12.875177383422852
    6. '<|end|>' → logprob: -13.125177383422852
    7. '	self' → logprob: -13.375177383422852
    8. '           ' → logprob: -13.750177383422852
    9. '	   ' → logprob: -14.750177383422852
    10. '	       ' → logprob: -15.250177383422852

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.394135612528771e-05
    2. 'data' → logprob: -11.000043869018555
    3. '   ' → logprob: -11.250043869018555
    4. 'tree' → logprob: -12.125043869018555
    5. ' self' → logprob: -12.500043869018555
    6. '       ' → logprob: -12.625043869018555
    7. 'bit' → logprob: -13.625043869018555
    8. '	self' → logprob: -15.375043869018555
    9. 's' → logprob: -15.625043869018555
    10. 'se' → logprob: -16.875043869018555

Token 322: '.tree' (ID: 49211)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0654919296503067
    2. '.tree' → logprob: -2.8154919147491455
    3. '.bit' → logprob: -5.940492153167725
    4. 'data' → logprob: -7.690492153167725
    5. '.arr' → logprob: -9.565491676330566
    6. '.size' → logprob: -9.565491676330566
    7. '.b' → logprob: -9.940491676330566
    8. '.s' → logprob: -10.315491676330566
    9. '.array' → logprob: -10.690491676330566
    10. '.d' → logprob: -10.690491676330566

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859759286046028
    2. ' =' → logprob: -3.048597574234009
    3. '=[' → logprob: -11.54859733581543
    4. '[' → logprob: -15.54859733581543
    5. ' =[' → logprob: -15.67359733581543
    6. '＝' → logprob: -15.92359733581543
    7. '   ' → logprob: -17.17359733581543
    8. ' ' → logprob: -17.42359733581543
    9. '=[]' → logprob: -18.79859733581543
    10. '	' → logprob: -18.79859733581543

Token 324: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.615255839889869e-05
    2. ' [' → logprob: -9.250096321105957
    3. '[n' → logprob: -18.62509536743164
    4. '[self' → logprob: -18.62509536743164
    5. '[int' → logprob: -20.00009536743164
    6. '[N' → logprob: -20.37509536743164
    7. '   ' → logprob: -20.37509536743164
    8. '[len' → logprob: -20.62509536743164
    9. '[-' → logprob: -20.75009536743164
    10. ' ' → logprob: -21.37509536743164

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -22.125
    4. '
' → logprob: -22.5
    5. '   ' → logprob: -22.5
    6. '۰' → logprob: -22.625
    7. '(' → logprob: -23.25
    8. '00' → logprob: -23.375
    9. '０' → logprob: -23.5
    10. ']' → logprob: -23.625

Token 326: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06306780874729156
    2. ']*(' → logprob: -2.81306791305542
    3. ']*' → logprob: -6.81306791305542
    4. ']+' → logprob: -15.313067436218262
    5. ')' → logprob: -18.813068389892578
    6. ' ]' → logprob: -19.188068389892578
    7. '*(' → logprob: -19.188068389892578
    8. '*' → logprob: -19.313068389892578
    9. '](' → logprob: -19.438068389892578
    10. ' for' → logprob: -19.563068389892578

Token 327: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009588662651367486
    2. 'self' → logprob: -7.0009589195251465
    3. '(n' → logprob: -10.000958442687988
    4. 'N' → logprob: -14.125958442687988
    5. ' n' → logprob: -14.250958442687988
    6. '(self' → logprob: -14.500958442687988
    7. '	n' → logprob: -17.000959396362305
    8. '   ' → logprob: -17.750959396362305
    9. ' self' → logprob: -18.375959396362305
    10. '_n' → logprob: -18.500959396362305

Token 328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019287518225610256
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -17.251928329467773
    4. ' plus' → logprob: -18.001928329467773
    5. '＋' → logprob: -18.376928329467773
    6. '+n' → logprob: -19.251928329467773
    7. ' +
' → logprob: -20.626928329467773
    8. '+)' → logprob: -20.751928329467773
    9. ' ' → logprob: -20.876928329467773
    10. '()+' → logprob: -21.001928329467773

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026313303038477898
    2. '2' → logprob: -3.651313304901123
    3. '5' → logprob: -12.026312828063965
    4. '10' → logprob: -12.651312828063965
    5. ' ' → logprob: -13.526312828063965
    6. '
' → logprob: -13.901312828063965
    7. '4' → logprob: -14.651312828063965
    8. '3' → logprob: -14.901312828063965
    9. '7' → logprob: -16.33881378173828
    10. '(' → logprob: -16.46381378173828

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.125005722045898
    4. '<|end|>' → logprob: -15.000005722045898
    5. ')

' → logprob: -15.250005722045898
    6. ')
' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.8750057220459
    8. '),' → logprob: -18.0000057220459
    9. ')`' → logprob: -18.7500057220459
    10. '}' → logprob: -18.8750057220459

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5746763348579407
    2. '
' → logprob: -1.574676275253296
    3. 'def' → logprob: -2.449676275253296
    4. '    
' → logprob: -2.449676275253296
    5. ' def' → logprob: -3.324676275253296
    6. '<|end|>' → logprob: -4.699676513671875
    7. ' 
' → logprob: -5.574676513671875
    8. '	def' → logprob: -5.824676513671875
    9. '	
' → logprob: -6.449676513671875
    10. '        
' → logprob: -6.574676513671875

Token 332: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6079955101013184
    2. 'def' (adapté à ' def') → logprob: -0.8579955101013184
    3. ' def' → logprob: -4.107995510101318
    4. '    
' → logprob: -4.482995510101318
    5. '
' → logprob: -6.107995510101318
    6. ' 
' → logprob: -7.232995510101318
    7. '	def' → logprob: -8.232995986938477
    8. '  
' → logprob: -8.607995986938477
    9. '        
' → logprob: -8.607995986938477
    10. '	
' → logprob: -9.232995986938477

Token 333: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.0647448301315308
    2. 'update' → logprob: -1.0647448301315308
    3. ' update' → logprob: -1.8147448301315308
    4. ' add' → logprob: -1.9397448301315308
    5. '_add' → logprob: -6.43974494934082
    6. '_update' → logprob: -6.43974494934082
    7. 'sum' → logprob: -8.18974494934082
    8. 'low' → logprob: -9.18974494934082
    9. ' low' → logprob: -10.18974494934082
    10. ' _' → logprob: -10.31474494934082

Token 334: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.4656579120783135e-05
    2. '(' → logprob: -10.125044822692871
    3. '(i' → logprob: -13.250044822692871
    4. '(idx' → logprob: -13.750044822692871
    5. '(p' → logprob: -14.500044822692871
    6. '(index' → logprob: -14.625044822692871
    7. ' (' → logprob: -15.500044822692871
    8. '(s' → logprob: -16.000043869018555
    9. '(x' → logprob: -16.000043869018555
    10. '   ' → logprob: -16.500043869018555

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002563172485679388
    2. ' ,' → logprob: -6.002562999725342
    3. 'self' → logprob: -10.0025634765625
    4. ',i' → logprob: -11.1275634765625
    5. ',index' → logprob: -11.5025634765625
    6. ',self' → logprob: -12.1275634765625
    7. ',pos' → logprob: -12.3775634765625
    8. ',x' → logprob: -13.2525634765625
    9. ',p' → logprob: -13.7525634765625
    10. ',j' → logprob: -13.8775634765625

Token 336: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17671753466129303
    2. 'idx' → logprob: -2.176717519760132
    3. ' i' → logprob: -3.551717519760132
    4. 'p' → logprob: -4.676717758178711
    5. ' idx' → logprob: -5.176717758178711
    6. 'index' → logprob: -5.926717758178711
    7. ' p' → logprob: -6.926717758178711
    8. 'pos' → logprob: -7.551717758178711
    9. 'self' → logprob: -8.051717758178711
    10. ' index' → logprob: -8.676717758178711

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014811802248004824
    2. ' ,' → logprob: -8.875147819519043
    3. '   ' → logprob: -12.875147819519043
    4. ',value' → logprob: -13.125147819519043
    5. ',val' → logprob: -13.875147819519043
    6. ',i' → logprob: -14.125147819519043
    7. 'self' → logprob: -14.750147819519043
    8. ',self' → logprob: -15.500147819519043
    9. ',x' → logprob: -15.875147819519043
    10. ',int' → logprob: -15.875147819519043

Token 338: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3696341812610626
    2. 'v' → logprob: -2.2446341514587402
    3. ' ' → logprob: -2.7446341514587402
    4. 'x' → logprob: -2.8696341514587402
    5. ' x' → logprob: -3.3696341514587402
    6. ' v' → logprob: -3.4946341514587402
    7. ' val' → logprob: -4.86963415145874
    8. 'val' → logprob: -5.11963415145874
    9. 'delta' → logprob: -6.11963415145874
    10. ' delta' → logprob: -6.99463415145874

Token 339: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04869433119893074
    2. '):
' → logprob: -3.048694372177124
    3. '):
' → logprob: -9.423694610595703
    4. ' ):' → logprob: -10.923694610595703
    5. ')' → logprob: -12.048694610595703
    6. ':' → logprob: -13.923694610595703
    7. '   ' → logprob: -14.673694610595703
    8. ' ):
' → logprob: -14.673694610595703
    9. '):

' → logprob: -15.048694610595703
    10. ' ' → logprob: -16.923694610595703

Token 340: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013710676692426205
    2. '
' → logprob: -4.7637104988098145
    3. '   ' → logprob: -6.7637104988098145
    4. '        
' → logprob: -7.3887104988098145
    5. ' 
' → logprob: -7.6387104988098145
    6. '  
' → logprob: -7.7637104988098145
    7. '<|end|>' → logprob: -8.013710975646973
    8. '    ' → logprob: -8.138710975646973
    9. '```' → logprob: -8.513710975646973
    10. '[i' → logprob: -8.638710975646973

Token 341: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1345234364271164
    2. 'i' → logprob: -2.259523391723633
    3. '   ' → logprob: -4.009523391723633
    4. '       ' → logprob: -6.634523391723633
    5. ' while' → logprob: -6.634523391723633
    6. '    ' → logprob: -8.009523391723633
    7. '	i' → logprob: -9.009523391723633
    8. 'while' → logprob: -9.384523391723633
    9. ' ' → logprob: -9.634523391723633
    10. '  ' → logprob: -10.634523391723633

Token 342: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2556740343570709
    2. 'eft' → logprob: -2.380674123764038
    3. '   ' → logprob: -3.380674123764038
    4. 'a' → logprob: -3.630674123764038
    5. 'azy' → logprob: -4.255673885345459
    6. 'ambda' → logprob: -4.380673885345459
    7. ' i' → logprob: -4.505673885345459
    8. 'i' → logprob: -4.880673885345459
    9. 'ist' → logprob: -5.755673885345459
    10. 'ocal' → logprob: -6.005673885345459

Token 343: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6705857515335083
    2. 'e' → logprob: -0.7955857515335083
    3. ' i' → logprob: -4.420585632324219
    4. 'a' → logprob: -4.545585632324219
    5. 'azy' → logprob: -4.920585632324219
    6. '   ' → logprob: -6.170585632324219
    7. 'ambda' → logprob: -7.420585632324219
    8. ''' → logprob: -7.920585632324219
    9. 'ist' → logprob: -8.045585632324219
    10. '[i' → logprob: -8.295585632324219

Token 344: 'ation' (ID: 387)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4607834219932556
    2. '+=' → logprob: -1.3357834815979004
    3. '=' → logprob: -3.7107834815979004
    4. '+' → logprob: -3.7107834815979004
    5. ' =' → logprob: -4.2107834815979
    6. ' i' → logprob: -4.4607834815979
    7. '<|end|>' → logprob: -4.7107834815979
    8. '0' → logprob: -5.3357834815979
    9. ' +' → logprob: -5.5857834815979
    10. 'i' → logprob: -5.5857834815979

Token 345: ' c' (ID: 274)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5308055877685547
    2. ' +=' → logprob: -0.9058055877685547
    3. ' i' → logprob: -6.405805587768555
    4. ' =' → logprob: -6.655805587768555
    5. '=i' → logprob: -7.030805587768555
    6. '=' → logprob: -7.155805587768555
    7. '   ' → logprob: -7.280805587768555
    8. 'i' → logprob: -7.905805587768555
    9. '<|end|>' → logprob: -8.155805587768555
    10. '+' → logprob: -8.405805587768555

Token 346: ''est' (ID: 6616)
  Prédit: 'omm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omm' → logprob: -0.19256551563739777
    2. 'om' → logprob: -2.192565441131592
    3. 'omme' → logprob: -2.942565441131592
    4. '0' → logprob: -4.817565441131592
    5. '#' → logprob: -6.567565441131592
    6. 'ommer' → logprob: -8.31756591796875
    7. 'comm' → logprob: -8.81756591796875
    8. '1' → logprob: -8.94256591796875
    9. 'omp' → logprob: -9.31756591796875
    10. ''est' → logprob: -9.56756591796875

Token 347: ' toujours' (ID: 16867)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014687958173453808
    2. ' ' → logprob: -6.626468658447266
    3. 'à' → logprob: -10.501468658447266
    4. '0' → logprob: -10.751468658447266
    5. 'en' → logprob: -10.751468658447266
    6. '   ' → logprob: -11.126468658447266
    7. 'i' → logprob: -11.501468658447266
    8. 'd' → logprob: -11.501468658447266
    9. '#' → logprob: -11.876468658447266
    10. ' à' → logprob: -12.126468658447266

Token 348: ' gal' (ID: 11091)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13438785076141357
    2. 'i' → logprob: -2.134387969970703
    3. ' ' → logprob: -5.759387969970703
    4. '   ' → logprob: -6.134387969970703
    5. ' i' → logprob: -6.384387969970703
    6. 'en' → logprob: -8.884387969970703
    7. 'à' → logprob: -9.384387969970703
    8. '0' → logprob: -10.009387969970703
    9. '  ' → logprob: -10.009387969970703
    10. '       ' → logprob: -10.759387969970703

Token 349: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.9388927817344666
    2. 'érée' → logprob: -1.0638928413391113
    3. 'lée' → logprob: -1.8138928413391113
    4. 'e' → logprob: -3.4388928413391113
    5. 'l' → logprob: -3.8138928413391113
    6. 'ée' → logprob: -4.188892841339111
    7. 'è' → logprob: -4.813892841339111
    8. 'erie' → logprob: -4.813892841339111
    9. 'éré' → logprob: -5.813892841339111
    10. 'érie' → logprob: -6.438892841339111

Token 350: ' là' (ID: 8052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9567015767097473
    2. '<|end|>' → logprob: -0.9567015767097473
    3. ':' → logprob: -1.9567015171051025
    4. '       ' → logprob: -3.4567015171051025
    5. '):' → logprob: -3.7067015171051025
    6. '<|end|>' → logprob: -4.706701755523682
    7. ')' → logprob: -4.831701755523682
    8. ',' → logprob: -5.081701755523682
    9. '):
' → logprob: -5.706701755523682
    10. '
' → logprob: -5.831701755523682

Token 351: '-dessus' (ID: 74812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36387377977371216
    2. ',' → logprob: -2.3638737201690674
    3. '       ' → logprob: -2.9888737201690674
    4. ':' → logprob: -2.9888737201690674
    5. '<|end|>' → logprob: -3.3638737201690674
    6. '):
' → logprob: -3.4888737201690674
    7. '):' → logprob: -4.6138739585876465
    8. '
' → logprob: -5.2388739585876465
    9. ' i' → logprob: -5.2388739585876465
    10. ':
' → logprob: -5.7388739585876465

Token 352: '...
' (ID: 4908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.953650712966919
    2. '   ' → logprob: -1.328650712966919
    3. '       ' → logprob: -1.953650712966919
    4. '<|end|>' → logprob: -1.953650712966919
    5. ',' → logprob: -4.07865047454834
    6. '):' → logprob: -4.57865047454834
    7. '<|end|>' → logprob: -4.70365047454834
    8. '):
' → logprob: -4.82865047454834
    9. '
' → logprob: -4.82865047454834
    10. ':
' → logprob: -5.45365047454834

Token 353: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6389734745025635
    2. '<|end|>' → logprob: -1.0139734745025635
    3. '       ' → logprob: -3.3889734745025635
    4. ':' → logprob: -3.7639734745025635
    5. '):' → logprob: -4.888973236083984
    6. '    ' → logprob: -4.888973236083984
    7. '    
' → logprob: -5.138973236083984
    8. ')' → logprob: -5.388973236083984
    9. '  
' → logprob: -5.638973236083984
    10. ' ' → logprob: -5.638973236083984

Token 354: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2721993327140808
    2. ' i' → logprob: -1.5221993923187256
    3. ' while' → logprob: -4.2721991539001465
    4. 'while' → logprob: -5.6471991539001465
    5. '       ' → logprob: -6.3971991539001465
    6. '   ' → logprob: -7.0221991539001465
    7. '    ' → logprob: -11.522199630737305
    8. '        ' → logprob: -11.897199630737305
    9. ' ' → logprob: -12.397199630737305
    10. '           ' → logprob: -12.647199630737305

Token 355: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1603371500968933
    2. ' +=' → logprob: -1.910337209701538
    3. '=i' → logprob: -10.285337448120117
    4. '   ' → logprob: -10.410337448120117
    5. '=' → logprob: -10.535337448120117
    6. '+' → logprob: -12.160337448120117
    7. ' =' → logprob: -12.410337448120117
    8. ']+=' → logprob: -12.410337448120117
    9. ' ' → logprob: -12.785337448120117
    10. '  ' → logprob: -13.785337448120117

Token 356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002187852980569005
    2. ' i' → logprob: -6.127187728881836
    3. '+' → logprob: -13.127187728881836
    4. 'int' → logprob: -15.377187728881836
    5. ' ' → logprob: -15.877187728881836
    6. '   ' → logprob: -16.127187728881836
    7. '	i' → logprob: -16.502187728881836
    8. '(i' → logprob: -16.877187728881836
    9. '
' → logprob: -17.002187728881836
    10. '  ' → logprob: -17.127187728881836

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0388721227645874
    2. ' +' → logprob: -3.288872241973877
    3. '+i' → logprob: -7.538872241973877
    4. '+=' → logprob: -9.038871765136719
    5. ' +=' → logprob: -9.413871765136719
    6. '1' → logprob: -10.163871765136719
    7. 'i' → logprob: -10.913871765136719
    8. ' ' → logprob: -10.913871765136719
    9. ' i' → logprob: -11.788871765136719
    10. '+
' → logprob: -12.288871765136719

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '  ' → logprob: -20.625001907348633
    6. '<|end|>' → logprob: -20.750001907348633
    7. '۱' → logprob: -21.625001907348633
    8. '１' → logprob: -22.000001907348633
    9. '१' → logprob: -22.500001907348633
    10. '১' → logprob: -22.875001907348633

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4149625897407532
    2. '<|end|>' → logprob: -1.1649625301361084
    3. 'while' → logprob: -4.2899627685546875
    4. '
' → logprob: -4.6649627685546875
    5. '<|end|>' → logprob: -6.1649627685546875
    6. ' while' → logprob: -6.2899627685546875
    7. '        
' → logprob: -8.789962768554688
    8. '	while' → logprob: -9.164962768554688
    9. '   ' → logprob: -9.414962768554688
    10. '  
' → logprob: -10.164962768554688

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015572299249470234
    2. 'while' → logprob: -4.3905720710754395
    3. ' while' → logprob: -5.8905720710754395
    4. '   ' → logprob: -8.640572547912598
    5. '	while' → logprob: -9.890572547912598
    6. '<|end|>' → logprob: -9.890572547912598
    7. '           ' → logprob: -12.890572547912598
    8. '```' → logprob: -13.015572547912598
    9. '	' → logprob: -13.265572547912598
    10. ',' → logprob: -13.390572547912598

Token 361: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0010469816625118256
    2. ' while' → logprob: -7.251047134399414
    3. '       ' → logprob: -8.001047134399414
    4. '   ' → logprob: -14.001047134399414
    5. '	while' → logprob: -14.501047134399414
    6. '```' → logprob: -15.001047134399414
    7. 'While' → logprob: -15.626047134399414
    8. '``' → logprob: -19.251047134399414
    9. '           ' → logprob: -19.751047134399414
    10. '
' → logprob: -20.126047134399414

Token 362: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740850329399109
    2. 'i' → logprob: -0.9740850329399109
    3. '   ' → logprob: -12.349084854125977
    4. ' ' → logprob: -13.474084854125977
    5. '	i' → logprob: -13.599084854125977
    6. '(i' → logprob: -14.474084854125977
    7. '  ' → logprob: -15.474084854125977
    8. '```' → logprob: -16.724084854125977
    9. '<i' → logprob: -17.099084854125977
    10. 'self' → logprob: -17.099084854125977

Token 363: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759972929954529
    2. '<=' → logprob: -0.8259972929954529
    3. ' <' → logprob: -9.950997352600098
    4. '<' → logprob: -11.700997352600098
    5. '<len' → logprob: -14.075997352600098
    6. ' +=' → logprob: -15.325997352600098
    7. ' <<=' → logprob: -15.325997352600098
    8. '<n' → logprob: -15.700997352600098
    9. '+=' → logprob: -15.825997352600098
    10. '≤' → logprob: -16.32599639892578

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001234428636962548
    2. ' self' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.125123977661133
    4. '(self' → logprob: -19.125123977661133
    5. '	self' → logprob: -19.500123977661133
    6. '=self' → logprob: -20.000123977661133
    7. '[self' → logprob: -20.250123977661133
    8. '       ' → logprob: -20.250123977661133
    9. 'n' → logprob: -20.375123977661133
    10. ' ' → logprob: -21.250123977661133

Token 365: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.47591879963874817
    2. 'N' → logprob: -0.9759187698364258
    3. 'self' → logprob: -6.350918769836426
    4. '	N' → logprob: -10.225918769836426
    5. '<N' → logprob: -10.475918769836426
    6. ',N' → logprob: -11.975918769836426
    7. '   ' → logprob: -12.100918769836426
    8. '>N' → logprob: -12.475918769836426
    9. '_N' → logprob: -12.850918769836426
    10. ':N' → logprob: -13.225918769836426

Token 366: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11540265381336212
    2. ':' → logprob: -2.2404026985168457
    3. ' and' → logprob: -6.240402698516846
    4. ' :
' → logprob: -7.740402698516846
    5. '       ' → logprob: -9.865402221679688
    6. 'and' → logprob: -10.115402221679688
    7. ' :' → logprob: -10.865402221679688
    8. '):
' → logprob: -11.240402221679688
    9. ':
' → logprob: -11.240402221679688
    10. '   ' → logprob: -11.365402221679688

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002728985855355859
    2. '```' → logprob: -8.875272750854492
    3. ' self' → logprob: -9.375272750854492
    4. 'self' → logprob: -10.625272750854492
    5. '<|end|>' → logprob: -11.875272750854492
    6. '               ' → logprob: -13.000272750854492
    7. '	       ' → logprob: -13.000272750854492
    8. '   ' → logprob: -13.125272750854492
    9. '          ' → logprob: -13.250272750854492
    10. ',' → logprob: -13.250272750854492

Token 368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03254294767975807
    2. ' self' → logprob: -3.5325429439544678
    3. '           ' → logprob: -5.907543182373047
    4. '               ' → logprob: -10.532543182373047
    5. '   ' → logprob: -10.907543182373047
    6. '```' → logprob: -11.407543182373047
    7. '       ' → logprob: -11.657543182373047
    8. '	self' → logprob: -13.657543182373047
    9. '[self' → logprob: -13.657543182373047
    10. '``' → logprob: -14.532543182373047

Token 369: '.tree' (ID: 49211)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.056710924953222275
    2. '.tree' → logprob: -3.181710958480835
    3. 'ree' → logprob: -5.056710720062256
    4. ' tree' → logprob: -6.306710720062256
    5. '_tree' → logprob: -6.556710720062256
    6. '	tree' → logprob: -6.681710720062256
    7. '   ' → logprob: -7.431710720062256
    8. '           ' → logprob: -7.681710720062256
    9. '-tree' → logprob: -8.181711196899414
    10. ' +=' → logprob: -8.306711196899414

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -18.125
    3. '[' → logprob: -18.5
    4. '[I' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. ' [' → logprob: -19.375
    7. '           ' → logprob: -19.75
    8. ',i' → logprob: -20.5
    9. '[u' → logprob: -21.0
    10. ' i' → logprob: -21.25

Token 371: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04871204495429993
    2. '+=' → logprob: -3.0487120151519775
    3. ']+=' → logprob: -9.048711776733398
    4. '    ' → logprob: -12.548711776733398
    5. '   ' → logprob: -13.548711776733398
    6. '       ' → logprob: -14.173711776733398
    7. '        ' → logprob: -14.298711776733398
    8. '+=(' → logprob: -15.673711776733398
    9. ']' → logprob: -16.0487117767334
    10. '           ' → logprob: -16.1737117767334

Token 372: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01815052703022957
    2. ' +=' → logprob: -4.018150329589844
    3. ']+=' → logprob: -14.518150329589844
    4. '+=(' → logprob: -15.893150329589844
    5. '=' → logprob: -17.643150329589844
    6. '   ' → logprob: -17.768150329589844
    7. '	' → logprob: -19.268150329589844
    8. '+="' → logprob: -19.518150329589844
    9. '+='' → logprob: -19.768150329589844
    10. '+' → logprob: -20.143150329589844

Token 373: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '	x' → logprob: -21.126171112060547
    4. '   ' → logprob: -23.876171112060547
    5. '           ' → logprob: -24.251171112060547
    6. '       ' → logprob: -25.251171112060547
    7. ' ' → logprob: -25.626171112060547
    8. '$x' → logprob: -26.251171112060547
    9. '(x' → logprob: -26.751171112060547
    10. '               ' → logprob: -26.751171112060547

Token 374: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013057142496109009
    2. 'i' → logprob: -7.25130558013916
    3. ' i' → logprob: -7.75130558013916
    4. '       ' → logprob: -9.25130558013916
    5. ',i' → logprob: -10.50130558013916
    6. ',' → logprob: -11.12630558013916
    7. '   ' → logprob: -11.75130558013916
    8. '```' → logprob: -12.25130558013916
    9. '
' → logprob: -12.37630558013916
    10. '[i' → logprob: -13.25130558013916

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008987197652459145
    2. 'i' → logprob: -7.500898838043213
    3. '       ' → logprob: -8.500898361206055
    4. ' i' → logprob: -9.000898361206055
    5. ',i' → logprob: -12.125898361206055
    6. '   ' → logprob: -12.375898361206055
    7. '```' → logprob: -12.750898361206055
    8. ',' → logprob: -12.750898361206055
    9. '               ' → logprob: -14.375898361206055
    10. '<|end|>' → logprob: -14.625898361206055

Token 376: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0011703446507453918
    2. ' i' → logprob: -6.7511701583862305
    3. '           ' → logprob: -16.626171112060547
    4. '   ' → logprob: -17.251171112060547
    5. '	i' → logprob: -17.751171112060547
    6. '
' → logprob: -19.501171112060547
    7. '       ' → logprob: -19.876171112060547
    8. '```' → logprob: -21.251171112060547
    9. ' ' → logprob: -21.626171112060547
    10. '  ' → logprob: -21.876171112060547

Token 377: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018899111077189445
    2. ' +=' → logprob: -4.018898963928223
    3. '=' → logprob: -8.018898963928223
    4. '*=' → logprob: -8.393898963928223
    5. ' <<=' → logprob: -8.643898963928223
    6. '<<' → logprob: -12.018898963928223
    7. ' *=' → logprob: -12.268898963928223
    8. ']+=' → logprob: -13.518898963928223
    9. '<|end|>' → logprob: -13.768898963928223
    10. '```' → logprob: -14.018898963928223

Token 378: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002506578341126442
    2. ' i' → logprob: -6.002506732940674
    3. '(i' → logprob: -10.752506256103516
    4. ' (' → logprob: -12.877506256103516
    5. '   ' → logprob: -13.002506256103516
    6. '(' → logprob: -13.002506256103516
    7. ' ' → logprob: -13.502506256103516
    8. '  ' → logprob: -14.502506256103516
    9. '	i' → logprob: -14.627506256103516
    10. '1' → logprob: -17.752506256103516

Token 379: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00030412263004109263
    2. ' i' → logprob: -8.125304222106934
    3. '(i' → logprob: -13.000304222106934
    4. ' ' → logprob: -13.000304222106934
    5. '	i' → logprob: -13.250304222106934
    6. '   ' → logprob: -14.125304222106934
    7. '  ' → logprob: -15.125304222106934
    8. '(' → logprob: -15.375304222106934
    9. '-i' → logprob: -15.625304222106934
    10. ' (' → logprob: -16.125303268432617

Token 380: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.02901335433125496
    2. ' &' → logprob: -4.029013156890869
    3. '&i' → logprob: -4.529013156890869
    4. '&amp' → logprob: -12.279013633728027
    5. '&t' → logprob: -13.279013633728027
    6. ')&' → logprob: -13.654013633728027
    7. '&A' → logprob: -13.654013633728027
    8. '&r' → logprob: -13.779013633728027
    9. '&p' → logprob: -14.279013633728027
    10. 'i' → logprob: -14.904013633728027

Token 381: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.13759391009807587
    2. ' -' → logprob: -2.137593984603882
    3. '-' → logprob: -4.637593746185303
    4. '(-' → logprob: -7.012593746185303
    5. ' (-' → logprob: -11.512594223022461
    6. '-x' → logprob: -13.012594223022461
    7. '   ' → logprob: -13.262594223022461
    8. '	' → logprob: -13.262594223022461
    9. ' ' → logprob: -13.387594223022461
    10. '-I' → logprob: -13.762594223022461

Token 382: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.625008583068848
    3. '	i' → logprob: -16.875009536743164
    4. '(i' → logprob: -18.375009536743164
    5. ')i' → logprob: -18.375009536743164
    6. '-i' → logprob: -18.500009536743164
    7. '   ' → logprob: -20.375009536743164
    8. ''i' → logprob: -20.625009536743164
    9. ',i' → logprob: -20.625009536743164
    10. ' ' → logprob: -20.750009536743164

Token 383: ')
' (ID: 446)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07022151350975037
    2. ')' → logprob: -2.820221424102783
    3. ')i' → logprob: -4.820221424102783
    4. ' i' → logprob: -8.945221900939941
    5. '_i' → logprob: -12.320221900939941
    6. ''i' → logprob: -12.570221900939941
    7. '(i' → logprob: -12.695221900939941
    8. '*i' → logprob: -12.695221900939941
    9. ',i' → logprob: -13.195221900939941
    10. '[i' → logprob: -13.320221900939941

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04317159950733185
    2. ' def' → logprob: -4.043171405792236
    3. 'def' → logprob: -4.168171405792236
    4. '```' → logprob: -5.043171405792236
    5. '
' → logprob: -6.043171405792236
    6. '	def' → logprob: -8.793171882629395
    7. '    
' → logprob: -9.293171882629395
    8. ' ' → logprob: -9.793171882629395
    9. '  ' → logprob: -10.293171882629395
    10. '        
' → logprob: -11.293171882629395

Token 385: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02007790096104145
    2. ' def' → logprob: -4.020077705383301
    3. '   ' → logprob: -6.270077705383301
    4. '```' → logprob: -10.8950777053833
    5. ' ' → logprob: -11.6450777053833
    6. '	def' → logprob: -12.1450777053833
    7. '  ' → logprob: -13.7700777053833
    8. '
' → logprob: -15.6450777053833
    9. '       ' → logprob: -16.770078659057617
    10. '    
' → logprob: -16.895078659057617

Token 386: ' acc' (ID: 1259)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.031580355018377304
    2. ' sum' → logprob: -3.5315804481506348
    3. 'query' → logprob: -6.406580448150635
    4. ' query' → logprob: -9.156579971313477
    5. '_sum' → logprob: -9.906579971313477
    6. 'prefix' → logprob: -11.906579971313477
    7. 'get' → logprob: -12.531579971313477
    8. '.sum' → logprob: -13.281579971313477
    9. '__' → logprob: -13.531579971313477
    10. 'sub' → logprob: -13.781579971313477

Token 387: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5669609308242798
    2. 'umulate' → logprob: -1.0669609308242798
    3. 'um' → logprob: -2.4419608116149902
    4. 'umulator' → logprob: -7.56696081161499
    5. 'umulative' → logprob: -8.191961288452148
    6. '(' → logprob: -8.441961288452148
    7. 'umul' → logprob: -8.566961288452148
    8. 'ess' → logprob: -9.191961288452148
    9. 'umu' → logprob: -9.441961288452148
    10. 'sum' → logprob: -9.441961288452148

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021973837167024612
    2. '(self' → logprob: -4.146973609924316
    3. ',self' → logprob: -6.021973609924316
    4. 'self' → logprob: -6.271973609924316
    5. ',i' → logprob: -7.021973609924316
    6. 'u' → logprob: -8.521973609924316
    7. ' ,' → logprob: -8.646973609924316
    8. 'elf' → logprob: -9.271973609924316
    9. 's' → logprob: -9.896973609924316
    10. ' self' → logprob: -10.771973609924316

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03555002808570862
    2. 'self' → logprob: -3.535550117492676
    3. ' i' → logprob: -5.285550117492676
    4. '   ' → logprob: -7.535550117492676
    5. ' self' → logprob: -8.660550117492676
    6. '       ' → logprob: -12.410550117492676
    7. ' ' → logprob: -13.285550117492676
    8. '  ' → logprob: -13.660550117492676
    9. '    ' → logprob: -13.910550117492676
    10. 'def' → logprob: -14.035550117492676

Token 390: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12875278294086456
    2. '):' → logprob: -2.1287527084350586
    3. '       ' → logprob: -7.253752708435059
    4. '   ' → logprob: -7.503752708435059
    5. '):
' → logprob: -8.128752708435059
    6. ':' → logprob: -9.628752708435059
    7. ',' → logprob: -9.753752708435059
    8. ')' → logprob: -10.128752708435059
    9. ' ):
' → logprob: -10.503752708435059
    10. 'self' → logprob: -10.753752708435059

Token 391: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031270162435248494
    2. '0' → logprob: -8.625312805175781
    3. 'result' → logprob: -10.250312805175781
    4. 's' → logprob: -10.500312805175781
    5. '   ' → logprob: -10.875312805175781
    6. ' s' → logprob: -11.125312805175781
    7. ' result' → logprob: -11.375312805175781
    8. '      ' → logprob: -12.000312805175781
    9. 'r' → logprob: -12.375312805175781
    10. ' ' → logprob: -12.625312805175781

Token 392: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13631215691566467
    2. '   ' → logprob: -3.386312246322632
    3. 'res' → logprob: -3.761312246322632
    4. ' s' → logprob: -4.011312007904053
    5. 'i' → logprob: -4.011312007904053
    6. 'result' → logprob: -4.136312007904053
    7. 'r' → logprob: -5.386312007904053
    8. ' res' → logprob: -5.886312007904053
    9. '       ' → logprob: -6.011312007904053
    10. 'def' → logprob: -6.261312007904053

Token 393: ' pré' (ID: 9424)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0015788980526849627
    2. 'c' → logprob: -7.5015788078308105
    3. 'f' → logprob: -7.8765788078308105
    4. 'fi' → logprob: -8.876579284667969
    5. 'sum' → logprob: -9.251579284667969
    6. 'i' → logprob: -9.376579284667969
    7. '```' → logprob: -9.626579284667969
    8. '   ' → logprob: -9.876579284667969
    9. 'al' → logprob: -10.001579284667969
    10. '
' → logprob: -10.376579284667969

Token 395: 'e' (ID: 68)
  Prédit: 'ixe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ixe' → logprob: -0.16220368444919586
    2. 'x' → logprob: -2.787203788757324
    3. 'sum' → logprob: -3.162203788757324
    4. 'xe' → logprob: -4.662203788757324
    5. 'ale' → logprob: -4.662203788757324
    6. '(i' → logprob: -5.162203788757324
    7. 'i' → logprob: -5.412203788757324
    8. 'd' → logprob: -5.787203788757324
    9. 'fix' → logprob: -6.037203788757324
    10. 'de' → logprob: -6.412203788757324

Token 396: ' [' (ID: 723)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.053562041372060776
    2. '       ' → logprob: -3.0535619258880615
    3. '   ' → logprob: -5.803562164306641
    4. '(' → logprob: -7.178562164306641
    5. ' (' → logprob: -8.17856216430664
    6. 'self' → logprob: -8.30356216430664
    7. '(
' → logprob: -8.55356216430664
    8. 'def' → logprob: -9.17856216430664
    9. '        
' → logprob: -9.67856216430664
    10. '
' → logprob: -9.80356216430664

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003791292430832982
    2. 'i' → logprob: -5.753791332244873
    3. ' ' → logprob: -8.128790855407715
    4. ' i' → logprob: -9.003790855407715
    5. '1' → logprob: -9.378790855407715
    6. ':' → logprob: -10.003790855407715
    7. '   ' → logprob: -10.628790855407715
    8. ',' → logprob: -11.253790855407715
    9. ':i' → logprob: -11.503790855407715
    10. ' :' → logprob: -11.628790855407715

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12438882887363434
    2. ',i' → logprob: -2.2493889331817627
    3. ' ,' → logprob: -5.749388694763184
    4. '..' → logprob: -5.874388694763184
    5. 'i' → logprob: -6.374388694763184
    6. '...' → logprob: -6.874388694763184
    7. '   ' → logprob: -7.249388694763184
    8. ':i' → logprob: -7.249388694763184
    9. ';i' → logprob: -7.374388694763184
    10. ' i' → logprob: -8.124388694763184

Token 399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018155913800001144
    2. ' i' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.268156051635742
    4. '	i' → logprob: -14.768156051635742
    5. ',i' → logprob: -15.018156051635742
    6. ' ' → logprob: -15.143156051635742
    7. ',' → logprob: -15.268156051635742
    8. '  ' → logprob: -17.518156051635742
    9. 'index' → logprob: -17.893156051635742
    10. '
' → logprob: -18.018156051635742

Token 400: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007908020168542862
    2. ')' → logprob: -5.257907867431641
    3. ' ]' → logprob: -6.257907867431641
    4. ']:' → logprob: -8.25790786743164
    5. ']
' → logprob: -8.75790786743164
    6. '+' → logprob: -9.25790786743164
    7. ']+' → logprob: -9.88290786743164
    8. '])' → logprob: -10.00790786743164
    9. '   ' → logprob: -10.25790786743164
    10. '):' → logprob: -10.63290786743164

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064873965457081795
    2. '   ' → logprob: -5.2564873695373535
    3. ':' → logprob: -7.7564873695373535
    4. '        
' → logprob: -8.131487846374512
    5. ':
' → logprob: -9.006487846374512
    6. '
' → logprob: -9.756487846374512
    7. '<|end|>' → logprob: -10.381487846374512
    8. '  
' → logprob: -10.506487846374512
    9. '    
' → logprob: -10.631487846374512
    10. '    ' → logprob: -10.631487846374512

Token 402: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.03994470462203026
    2. 'res' → logprob: -3.289944648742676
    3. '   ' → logprob: -7.414944648742676
    4. ' s' → logprob: -7.539944648742676
    5. 'r' → logprob: -7.789944648742676
    6. ' res' → logprob: -8.539944648742676
    7. 'ret' → logprob: -9.414944648742676
    8. 'result' → logprob: -9.914944648742676
    9. '       ' → logprob: -11.164944648742676
    10. 'i' → logprob: -11.789944648742676

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145757496356964
    2. ' =' → logprob: -1.7014576196670532
    3. '+=' → logprob: -11.076457977294922
    4. ' +=' → logprob: -11.076457977294922
    5. ' ' → logprob: -11.576457977294922
    6. '   ' → logprob: -13.201457977294922
    7. '  ' → logprob: -14.326457977294922
    8. '=int' → logprob: -15.326457977294922
    9. ' ' → logprob: -15.826457977294922
    10. '=
' → logprob: -15.826457977294922

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '       ' → logprob: -20.250335693359375
    5. '۰' → logprob: -21.125335693359375
    6. '           ' → logprob: -21.875335693359375
    7. 's' → logprob: -22.250335693359375
    8. ' ' → logprob: -22.250335693359375
    9. '  ' → logprob: -22.375335693359375
    10. '=' → logprob: -22.500335693359375

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'self' → logprob: -17.125
    4. '   ' → logprob: -22.125
    5. '۰' → logprob: -22.125
    6. ' self' → logprob: -23.375
    7. '```' → logprob: -23.5
    8. '=' → logprob: -24.0
    9. 's' → logprob: -24.25
    10. '０' → logprob: -24.375

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04542093351483345
    2. '       ' → logprob: -3.2954208850860596
    3. '<|end|>' → logprob: -5.545421123504639
    4. '   ' → logprob: -6.795421123504639
    5. '  
' → logprob: -7.545421123504639
    6. '        
' → logprob: -7.795421123504639
    7. '<|end|>' → logprob: -8.17042064666748
    8. '    
' → logprob: -8.29542064666748
    9. '
' → logprob: -8.29542064666748
    10. ' 
' → logprob: -9.17042064666748

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07902462780475616
    2. '   ' → logprob: -2.95402455329895
    3. '
' → logprob: -4.704024791717529
    4. 'while' → logprob: -4.829024791717529
    5. '	while' → logprob: -5.454024791717529
    6. ' while' → logprob: -6.329024791717529
    7. 'i' → logprob: -8.579024314880371
    8. '	' → logprob: -9.079024314880371
    9. 'def' → logprob: -9.329024314880371
    10. ' ' → logprob: -10.204024314880371

Token 408: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.032468050718307495
    2. 'i' → logprob: -3.53246808052063
    3. ' while' → logprob: -6.282467842102051
    4. '   ' → logprob: -7.157467842102051
    5. '       ' → logprob: -10.03246784210205
    6. ' i' → logprob: -11.28246784210205
    7. 'idx' → logprob: -12.40746784210205
    8. '	while' → logprob: -13.28246784210205
    9. 'j' → logprob: -13.53246784210205
    10. ' ' → logprob: -14.40746784210205

Token 409: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022473573684692
    2. ' i' → logprob: -1.9102246761322021
    3. '	i' → logprob: -15.160224914550781
    4. '   ' → logprob: -15.535224914550781
    5. ' ' → logprob: -17.91022491455078
    6. '(i' → logprob: -18.53522491455078
    7. ',i' → logprob: -18.66022491455078
    8. ')i' → logprob: -19.03522491455078
    9. '    ' → logprob: -19.66022491455078
    10. '{i' → logprob: -19.66022491455078

Token 410: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00408053956925869
    2. ' >' → logprob: -5.504080772399902
    3. '&gt' → logprob: -13.379080772399902
    4. '()>' → logprob: -15.379080772399902
    5. '＞' → logprob: -16.129079818725586
    6. ')>' → logprob: -16.629079818725586
    7. '0' → logprob: -17.254079818725586
    8. '>s' → logprob: -17.504079818725586
    9. '<|end|>' → logprob: -17.754079818725586
    10. ' ' → logprob: -17.754079818725586

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '=' → logprob: -18.125911712646484
    4. '<|end|>' → logprob: -18.625911712646484
    5. '
' → logprob: -18.750911712646484
    6. 's' → logprob: -18.750911712646484
    7. '>' → logprob: -18.875911712646484
    8. '   ' → logprob: -19.250911712646484
    9. '```' → logprob: -19.250911712646484
    10. 'i' → logprob: -19.250911712646484

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'i' → logprob: -14.875019073486328
    4. '=' → logprob: -16.000019073486328
    5. '>' → logprob: -19.000019073486328
    6. ' i' → logprob: -19.500019073486328
    7. 's' → logprob: -19.500019073486328
    8. '1' → logprob: -20.000019073486328
    9. '```' → logprob: -20.125019073486328
    10. '#' → logprob: -20.375019073486328

Token 413: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.020595379173755646
    2. ':' → logprob: -4.395595550537109
    3. '           ' → logprob: -5.270595550537109
    4. '       ' → logprob: -6.270595550537109
    5. 's' → logprob: -8.14559555053711
    6. ' :
' → logprob: -8.64559555053711
    7. '   ' → logprob: -9.02059555053711
    8. '):
' → logprob: -9.02059555053711
    9. ',' → logprob: -9.52059555053711
    10. '<|end|>' → logprob: -10.14559555053711

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028357019647955894
    2. ' s' → logprob: -4.403357028961182
    3. '       ' → logprob: -5.153357028961182
    4. 's' → logprob: -5.528357028961182
    5. '   ' → logprob: -5.903357028961182
    6. ' i' → logprob: -6.528357028961182
    7. '```' → logprob: -6.778357028961182
    8. 'i' → logprob: -7.903357028961182
    9. '	       ' → logprob: -9.653356552124023
    10. ' ' → logprob: -9.653356552124023

Token 415: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -4.096126576769166e-05
    2. ' s' → logprob: -10.125041007995605
    3. '           ' → logprob: -14.125041007995605
    4. '               ' → logprob: -16.12504005432129
    5. '	s' → logprob: -18.25004005432129
    6. '   ' → logprob: -18.75004005432129
    7. '
' → logprob: -19.50004005432129
    8. '       ' → logprob: -19.62504005432129
    9. '            
' → logprob: -19.62504005432129
    10. '            ' → logprob: -19.87504005432129

Token 416: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3595658242702484
    2. ' +=' → logprob: -1.3595658540725708
    3. ' -=' → logprob: -3.7345657348632812
    4. '-=' → logprob: -3.8595657348632812
    5. '=' → logprob: -8.359565734863281
    6. ']+=' → logprob: -11.484565734863281
    7. ' ^=' → logprob: -11.734565734863281
    8. '   ' → logprob: -11.859565734863281
    9. ' =' → logprob: -12.109565734863281
    10. '```' → logprob: -12.234565734863281

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502717612311244
    2. ' self' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.626502990722656
    4. '   ' → logprob: -16.751502990722656
    5. '           ' → logprob: -17.001502990722656
    6. 'tree' → logprob: -17.126502990722656
    7. '(self' → logprob: -17.501502990722656
    8. 'bit' → logprob: -17.751502990722656
    9. '	self' → logprob: -18.751502990722656
    10. '[self' → logprob: -19.001502990722656

Token 418: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0012839256087318063
    2. 'tree' → logprob: -6.751284122467041
    3. 'ree' → logprob: -9.251283645629883
    4. '	tree' → logprob: -12.126283645629883
    5. '.user' → logprob: -12.876283645629883
    6. '-tree' → logprob: -13.001283645629883
    7. 'e' → logprob: -13.376283645629883
    8. '.' → logprob: -13.876283645629883
    9. '(tree' → logprob: -14.376283645629883
    10. '[' → logprob: -14.376283645629883

Token 419: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003825293097179383
    2. 'i' → logprob: -8.375382423400879
    3. '[' → logprob: -9.375382423400879
    4. ' i' → logprob: -10.875382423400879
    5. '(i' → logprob: -11.250382423400879
    6. ',i' → logprob: -11.375382423400879
    7. 's' → logprob: -11.500382423400879
    8. '[(' → logprob: -12.500382423400879
    9. ' ' → logprob: -13.375382423400879
    10. '[-' → logprob: -13.500382423400879

Token 420: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5131663084030151
    2. ' -' → logprob: -1.6381663084030151
    3. ']' → logprob: -2.0131664276123047
    4. '-i' → logprob: -3.2631664276123047
    5. ' -=' → logprob: -4.013166427612305
    6. ')' → logprob: -5.013166427612305
    7. ']
' → logprob: -5.388166427612305
    8. '-=' → logprob: -6.013166427612305
    9. '           ' → logprob: -7.763166427612305
    10. ')
' → logprob: -7.763166427612305

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017014833865687251
    2. '       ' → logprob: -6.626701354980469
    3. '   ' → logprob: -8.876701354980469
    4. '```' → logprob: -9.751701354980469
    5. '            
' → logprob: -10.376701354980469
    6. ',' → logprob: -10.626701354980469
    7. '               ' → logprob: -10.751701354980469
    8. 'i' → logprob: -11.001701354980469
    9. ' i' → logprob: -11.251701354980469
    10. '
' → logprob: -11.251701354980469

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.008615161292254925
    2. ' i' → logprob: -4.758615016937256
    3. '           ' → logprob: -14.883615493774414
    4. '	i' → logprob: -16.258615493774414
    5. '
' → logprob: -16.383615493774414
    6. '```' → logprob: -17.758615493774414
    7. '       ' → logprob: -18.133615493774414
    8. ',i' → logprob: -18.258615493774414
    9. '=i' → logprob: -18.508615493774414
    10. '   ' → logprob: -19.258615493774414

Token 423: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2821977436542511
    2. ' -=' → logprob: -1.5321977138519287
    3. '=' → logprob: -3.5321977138519287
    4. '-' → logprob: -7.657197952270508
    5. ' =' → logprob: -9.282197952270508
    6. '+=' → logprob: -12.282197952270508
    7. '   ' → logprob: -14.282197952270508
    8. '--' → logprob: -14.407197952270508
    9. ' +=' → logprob: -14.407197952270508
    10. ' ' → logprob: -14.782197952270508

Token 424: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01738792099058628
    2. 'i' → logprob: -4.767387866973877
    3. ' (' → logprob: -4.767387866973877
    4. ' i' → logprob: -8.892388343811035
    5. '(' → logprob: -9.267388343811035
    6. '   ' → logprob: -15.142388343811035
    7. ' ' → logprob: -16.01738739013672
    8. '	i' → logprob: -16.51738739013672
    9. '{i' → logprob: -16.89238739013672
    10. '[i' → logprob: -17.51738739013672

Token 425: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08161403238773346
    2. '(i' → logprob: -2.5816140174865723
    3. ' i' → logprob: -6.206614017486572
    4. ' (' → logprob: -7.956614017486572
    5. '(' → logprob: -7.956614017486572
    6. '	i' → logprob: -13.45661449432373
    7. ' ' → logprob: -14.45661449432373
    8. '   ' → logprob: -14.45661449432373
    9. '{i' → logprob: -14.83161449432373
    10. ')i' → logprob: -15.20661449432373

Token 426: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.007247264496982098
    2. ' &' → logprob: -5.632247447967529
    3. '&i' → logprob: -5.632247447967529
    4. '&amp' → logprob: -9.882246971130371
    5. '&t' → logprob: -12.757246971130371
    6. '&B' → logprob: -13.632246971130371
    7. '&nbsp' → logprob: -14.257246971130371
    8. '"&' → logprob: -14.382246971130371
    9. '&id' → logprob: -14.757246971130371
    10. '&I' → logprob: -14.882246971130371

Token 427: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2257932424545288
    2. ' i' → logprob: -1.6007932424545288
    3. '-i' → logprob: -7.975793361663818
    4. ' -' → logprob: -10.72579288482666
    5. '-' → logprob: -11.85079288482666
    6. '	i' → logprob: -12.72579288482666
    7. ' ' → logprob: -12.97579288482666
    8. '(i' → logprob: -13.97579288482666
    9. '   ' → logprob: -15.10079288482666
    10. '_i' → logprob: -15.10079288482666

Token 428: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2127087504486553e-05
    2. ' i' → logprob: -10.750021934509277
    3. '-i' → logprob: -14.250021934509277
    4. '-' → logprob: -17.125022888183594
    5. '(i' → logprob: -17.625022888183594
    6. ')i' → logprob: -17.625022888183594
    7. '	i' → logprob: -17.750022888183594
    8. ',i' → logprob: -18.750022888183594
    9. ' ' → logprob: -19.000022888183594
    10. '```' → logprob: -19.375022888183594

Token 429: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005955107044428587
    2. 'i' → logprob: -5.380955219268799
    3. ')i' → logprob: -6.880955219268799
    4. ')
' → logprob: -8.50595474243164
    5. ' i' → logprob: -9.75595474243164
    6. 's' → logprob: -11.63095474243164
    7. '(i' → logprob: -11.63095474243164
    8. '1' → logprob: -11.75595474243164
    9. '[i' → logprob: -12.13095474243164
    10. '   ' → logprob: -12.63095474243164

Token 430: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006356392987072468
    2. '       ' → logprob: -5.131356239318848
    3. 'return' → logprob: -8.506356239318848
    4. '	return' → logprob: -9.131356239318848
    5. ' return' → logprob: -9.256356239318848
    6. ' ' → logprob: -12.506356239318848
    7. '
' → logprob: -12.631356239318848
    8. '    ' → logprob: -12.881356239318848
    9. '   ' → logprob: -12.881356239318848
    10. '    
' → logprob: -13.381356239318848

Token 431: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5591955184936523
    2. '       ' → logprob: -1.0591955184936523
    3. 'return' (adapté à ' return') → logprob: -2.5591955184936523
    4. ' return' → logprob: -5.559195518493652
    5. '	return' → logprob: -8.309195518493652
    6. '	' → logprob: -10.309195518493652
    7. 'def' → logprob: -10.434195518493652
    8. '           ' → logprob: -10.559195518493652
    9. ' ' → logprob: -10.809195518493652
    10. '    ' → logprob: -11.809195518493652

Token 432: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007099286303855479
    2. ' s' → logprob: -7.2507100105285645
    3. '(s' → logprob: -21.375709533691406
    4. ' ' → logprob: -21.875709533691406
    5. '<s' → logprob: -22.375709533691406
    6. '	s' → logprob: -23.125709533691406
    7. '`s' → logprob: -23.625709533691406
    8. '{s' → logprob: -23.750709533691406
    9. ' ' → logprob: -24.000709533691406
    10. '"s' → logprob: -24.500709533691406

Token 433: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05525832250714302
    2. 'def' → logprob: -2.930258274078369
    3. ' def' → logprob: -8.555258750915527
    4. '```' → logprob: -9.055258750915527
    5. '	def' → logprob: -10.305258750915527
    6. '    
' → logprob: -10.805258750915527
    7. '
' → logprob: -12.180258750915527
    8. '        
' → logprob: -13.305258750915527
    9. '       ' → logprob: -13.555258750915527
    10. ' ' → logprob: -13.555258750915527

Token 434: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030765468254685402
    2. '   ' → logprob: -3.6557655334472656
    3. 'bit' → logprob: -5.530765533447266
    4. ' def' → logprob: -8.280765533447266
    5. 'b' → logprob: -9.280765533447266
    6. '#' → logprob: -9.780765533447266
    7. '	def' → logprob: -10.530765533447266
    8. ' ' → logprob: -11.655765533447266
    9. '```' → logprob: -12.030765533447266
    10. 'bits' → logprob: -12.280765533447266

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023514265194535255
    2. '   ' → logprob: -3.7735142707824707
    3. ' def' → logprob: -8.523513793945312
    4. '	def' → logprob: -10.148513793945312
    5. '#' → logprob: -12.023513793945312
    6. '```' → logprob: -12.148513793945312
    7. 'class' → logprob: -12.273513793945312
    8. ' ' → logprob: -12.648513793945312
    9. '    
' → logprob: -12.648513793945312
    10. 'bit' → logprob: -13.023513793945312

Token 436: ' query' (ID: 5703)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8187609314918518
    2. 'range' → logprob: -1.068760871887207
    3. 'query' → logprob: -1.568760871887207
    4. 'acc' → logprob: -5.818760871887207
    5. 'get' → logprob: -6.068760871887207
    6. ' query' → logprob: -7.818760871887207
    7. ' sum' → logprob: -8.193760871887207
    8. 'prod' → logprob: -8.568760871887207
    9. '__' → logprob: -8.693760871887207
    10. 'interval' → logprob: -8.818760871887207

Token 437: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010330478107789531
    2. '(' → logprob: -9.250102996826172
    3. ' (' → logprob: -12.250102996826172
    4. '(l' → logprob: -13.875102996826172
    5. '(s' → logprob: -15.250102996826172
    6. '(i' → logprob: -15.500102996826172
    7. '(a' → logprob: -15.625102996826172
    8. '(start' → logprob: -16.125102996826172
    9. '(t' → logprob: -16.625102996826172
    10. '(sel' → logprob: -16.625102996826172

Token 438: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08470705896615982
    2. ',' → logprob: -2.584707021713257
    3. ' (' → logprob: -5.959707260131836
    4. 'self' → logprob: -6.709707260131836
    5. '(' → logprob: -7.459707260131836
    6. '(i' → logprob: -7.959707260131836
    7. ')' → logprob: -7.959707260131836
    8. 'def' → logprob: -8.834707260131836
    9. ',self' → logprob: -9.084707260131836
    10. 's' → logprob: -9.834707260131836

Token 439: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.025490866973996162
    2. 'self' → logprob: -3.7754907608032227
    3. ' l' → logprob: -6.900490760803223
    4. 'a' → logprob: -7.525490760803223
    5. ' self' → logprob: -8.400490760803223
    6. 'r' → logprob: -8.650490760803223
    7. 'i' → logprob: -8.650490760803223
    8. 'left' → logprob: -9.400490760803223
    9. 'b' → logprob: -11.025490760803223
    10. '	l' → logprob: -12.025490760803223

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ' ,' → logprob: -9.625068664550781
    3. ',l' → logprob: -13.625068664550781
    4. ',u' → logprob: -14.750068664550781
    5. ',n' → logprob: -14.875068664550781
    6. ',int' → logprob: -15.250068664550781
    7. ',r' → logprob: -16.12506866455078
    8. ',b' → logprob: -17.25006866455078
    9. '‌,' → logprob: -17.50006866455078
    10. ',k' → logprob: -17.87506866455078

Token 441: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01815146580338478
    2. ' r' → logprob: -4.01815128326416
    3. '   ' → logprob: -13.39315128326416
    4. '	r' → logprob: -18.018152236938477
    5. '    ' → logprob: -19.518152236938477
    6. ',' → logprob: -20.018152236938477
    7. ',r' → logprob: -20.518152236938477
    8. ' ' → logprob: -20.643152236938477
    9. '  ' → logprob: -20.768152236938477
    10. 'rans' → logprob: -21.893152236938477

Token 442: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.494741632603109e-05
    2. ' ,' → logprob: -10.00008487701416
    3. '   ' → logprob: -10.87508487701416
    4. 'self' → logprob: -11.62508487701416
    5. '       ' → logprob: -12.00008487701416
    6. '(self' → logprob: -13.12508487701416
    7. '):' → logprob: -13.25008487701416
    8. '):
' → logprob: -14.87508487701416
    9. ',i' → logprob: -15.00008487701416
    10. ' self' → logprob: -15.25008487701416

Token 443: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9979687333106995
    2. ' return' → logprob: -1.7479686737060547
    3. '   ' → logprob: -2.3729686737060547
    4. ' l' → logprob: -2.6229686737060547
    5. '<|end|>' → logprob: -2.6229686737060547
    6. '(' → logprob: -2.7479686737060547
    7. ' ' → logprob: -2.8729686737060547
    8. ' (' → logprob: -3.4979686737060547
    9. '(l' → logprob: -3.7479686737060547
    10. 'return' → logprob: -4.497968673706055

Token 444: ' [' (ID: 723)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2688232958316803
    2. 'return' → logprob: -1.768823266029358
    3. ' self' → logprob: -3.2688233852386475
    4. 'def' → logprob: -4.268823146820068
    5. ' return' → logprob: -4.768823146820068
    6. '       ' → logprob: -5.643823146820068
    7. ' def' → logprob: -7.518823146820068
    8. 'l' → logprob: -8.143823623657227
    9. '   ' → logprob: -8.768823623657227
    10. ' l' → logprob: -9.643823623657227

Token 445: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005934486165642738
    2. ' l' → logprob: -5.130934715270996
    3. '   ' → logprob: -12.255934715270996
    4. '	l' → logprob: -14.505934715270996
    5. ',' → logprob: -14.630934715270996
    6. ')' → logprob: -16.13093376159668
    7. ',l' → logprob: -17.00593376159668
    8. '_l' → logprob: -17.63093376159668
    9. ' ' → logprob: -17.88093376159668
    10. 'self' → logprob: -18.88093376159668

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01148878876119852
    2. ',r' → logprob: -4.636488914489746
    3. ' ,' → logprob: -6.386488914489746
    4. ' r' → logprob: -10.886488914489746
    5. 'r' → logprob: -11.261488914489746
    6. '+' → logprob: -12.011488914489746
    7. '   ' → logprob: -12.886488914489746
    8. ',
' → logprob: -13.136488914489746
    9. '(r' → logprob: -13.761488914489746
    10. ' +' → logprob: -13.886488914489746

Token 447: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038044821470975876
    2. ' r' → logprob: -3.2880449295043945
    3. '   ' → logprob: -12.788044929504395
    4. '	r' → logprob: -15.413044929504395
    5. '    ' → logprob: -16.288043975830078
    6. ' ' → logprob: -16.288043975830078
    7. ' ' → logprob: -16.288043975830078
    8. ',r' → logprob: -17.038043975830078
    9. ',' → logprob: -17.163043975830078
    10. '  ' → logprob: -17.788043975830078

Token 448: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.372219055891037
    2. '):
' → logprob: -2.1222190856933594
    3. '):' → logprob: -2.2472190856933594
    4. ')' → logprob: -2.4972190856933594
    5. ' +' → logprob: -6.122219085693359
    6. '   ' → logprob: -8.62221908569336
    7. ']' → logprob: -8.74721908569336
    8. ',' → logprob: -8.87221908569336
    9. '):
' → logprob: -8.99721908569336
    10. ')
' → logprob: -9.37221908569336

Token 449: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9733806252479553
    2. ':' → logprob: -1.0983805656433105
    3. '       ' → logprob: -1.3483805656433105
    4. ':
' → logprob: -4.4733805656433105
    5. '<|end|>' → logprob: -4.9733805656433105
    6. ':return' → logprob: -6.0983805656433105
    7. ')' → logprob: -6.4733805656433105
    8. '):
' → logprob: -6.8483805656433105
    9. ' :' → logprob: -6.9733805656433105
    10. '):' → logprob: -7.3483805656433105

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004446851089596748
    2. ' return' → logprob: -6.004446983337402
    3. '       ' → logprob: -6.254446983337402
    4. '   ' → logprob: -10.254446983337402
    5. '	return' → logprob: -11.379446983337402
    6. '{return' → logprob: -15.504446983337402
    7. '	' → logprob: -16.129446029663086
    8. 'l' → logprob: -16.129446029663086
    9. '```' → logprob: -16.129446029663086
    10. 's' → logprob: -16.379446029663086

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067161982879042625
    2. ' self' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.381715774536133
    4. '       ' → logprob: -15.881715774536133
    5. '(self' → logprob: -17.256715774536133
    6. '	self' → logprob: -17.631715774536133
    7. ' ' → logprob: -18.006715774536133
    8. '    ' → logprob: -18.631715774536133
    9. '[self' → logprob: -18.881715774536133
    10. '           ' → logprob: -19.256715774536133

Token 452: '.acc' (ID: 70239)
  Prédit: '.query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.021018028259277344
    2. '.tree' → logprob: -4.271018028259277
    3. '.acc' → logprob: -5.021018028259277
    4. 'query' → logprob: -9.396018028259277
    5. 'acc' → logprob: -9.521018028259277
    6. 'tree' → logprob: -9.896018028259277
    7. ' .' → logprob: -11.271018028259277
    8. '.add' → logprob: -12.646018028259277
    9. '.ac' → logprob: -13.021018028259277
    10. '   ' → logprob: -13.396018028259277

Token 453: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.125009536743164
    3. ' (' → logprob: -12.625009536743164
    4. 'r' → logprob: -15.500009536743164
    5. '[r' → logprob: -16.375009536743164
    6. ' ' → logprob: -17.375009536743164
    7. '(right' → logprob: -17.625009536743164
    8. '(
' → logprob: -17.750009536743164
    9. '(rhs' → logprob: -17.875009536743164
    10. '((' → logprob: -18.125009536743164

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002441741817165166
    2. ')-' → logprob: -8.500244140625
    3. ' )' → logprob: -10.125244140625
    4. '-' → logprob: -15.375244140625
    5. '-)' → logprob: -15.875244140625
    6. ' -' → logprob: -16.250244140625
    7. ')
' → logprob: -16.500244140625
    8. ']' → logprob: -18.000244140625
    9. '   ' → logprob: -18.250244140625
    10. '）' → logprob: -18.375244140625

Token 455: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04862097650766373
    2. '-' → logprob: -3.0486209392547607
    3. '   ' → logprob: -11.17362117767334
    4. '       ' → logprob: -11.42362117767334
    5. ' ' → logprob: -12.42362117767334
    6. '        ' → logprob: -13.79862117767334
    7. '    ' → logprob: -14.04862117767334
    8. ' ' → logprob: -14.17362117767334
    9. '-l' → logprob: -14.92362117767334
    10. '  ' → logprob: -15.04862117767334

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007106438861228526
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -14.375710487365723
    4. '	self' → logprob: -16.75071144104004
    5. '[self' → logprob: -16.87571144104004
    6. '
' → logprob: -17.50071144104004
    7. '   ' → logprob: -17.62571144104004
    8. '<|end|>' → logprob: -17.62571144104004
    9. ' ' → logprob: -18.37571144104004
    10. '=self' → logprob: -18.75071144104004

Token 457: '.acc' (ID: 70239)
  Prédit: '.acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.acc' → logprob: -4.127333340875339e-06
    2. 'acc' → logprob: -13.000003814697266
    3. '.' → logprob: -13.375003814697266
    4. '	acc' → logprob: -15.750003814697266
    5. ' .' → logprob: -16.375003814697266
    6. '.ac' → logprob: -17.250003814697266
    7. ' acc' → logprob: -17.500003814697266
    8. '```' → logprob: -17.875003814697266
    9. ').' → logprob: -18.125003814697266
    10. '(acc' → logprob: -18.250003814697266

Token 458: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002511093392968178
    2. '(' → logprob: -6.002511024475098
    3. ' (' → logprob: -10.377511024475098
    4. '(r' → logprob: -12.627511024475098
    5. '(
' → logprob: -15.002511024475098
    6. '(i' → logprob: -15.377511024475098
    7. '(s' → logprob: -15.502511024475098
    8. '((' → logprob: -16.252511978149414
    9. '(ll' → logprob: -16.752511978149414
    10. '(L' → logprob: -17.502511978149414

Token 459: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ' )' → logprob: -12.125009536743164
    3. ')
' → logprob: -13.125009536743164
    4. '<|end|>' → logprob: -13.250009536743164
    5. ')return' → logprob: -15.625009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '),' → logprob: -16.625009536743164
    8. '<|end|>' → logprob: -16.875009536743164
    9. ')#' → logprob: -17.125009536743164
    10. '[' → logprob: -17.125009536743164

Token 460: '   ' (ID: 271)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6411864161491394
    2. 'ans' → logprob: -1.6411864757537842
    3. 'res' → logprob: -2.266186475753784
    4. 'bits' → logprob: -2.516186475753784
    5. 'answer' → logprob: -3.641186475753784
    6. 'ret' → logprob: -4.391186237335205
    7. 'bs' → logprob: -4.766186237335205
    8. 'result' → logprob: -4.891186237335205
    9. 'b' → logprob: -5.016186237335205
    10. 'dp' → logprob: -5.891186237335205

Token 461: ' def' (ID: 1056)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5667905211448669
    2. 'ans' → logprob: -1.9417905807495117
    3. 'res' → logprob: -2.5667905807495117
    4. 'bits' → logprob: -2.6917905807495117
    5. 'answer' → logprob: -3.6917905807495117
    6. 'ret' → logprob: -4.191790580749512
    7. 'b' → logprob: -4.316790580749512
    8. 'bs' → logprob: -4.316790580749512
    9. 'cnt' → logprob: -4.441790580749512
    10. '#' → logprob: -4.816790580749512

Token 462: ' __' (ID: 2516)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.2873873710632324
    2. 'get' → logprob: -1.4123873710632324
    3. 'sum' → logprob: -1.4123873710632324
    4. 'size' → logprob: -2.5373873710632324
    5. 'lower' → logprob: -2.5373873710632324
    6. '__' → logprob: -3.9123873710632324
    7. 'set' → logprob: -5.287387371063232
    8. 'reset' → logprob: -5.412387371063232
    9. 'sub' → logprob: -5.412387371063232
    10. 'all' → logprob: -5.662387371063232

Token 463: 'repr' (ID: 67002)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10443447530269623
    2. 'getitem' → logprob: -2.6044344902038574
    3. 'init' → logprob: -3.8544344902038574
    4. 'repr' → logprob: -5.979434490203857
    5. 'str' → logprob: -6.604434490203857
    6. 'lt' → logprob: -9.7294340133667
    7. 'iter' → logprob: -10.4794340133667
    8. 'bool' → logprob: -10.7294340133667
    9. 'contains' → logprob: -10.7294340133667
    10. 'l' → logprob: -12.1044340133667

Token 464: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20302650332450867
    2. '__(' → logprob: -1.703026533126831
    3. '(' → logprob: -6.953026294708252
    4. '__' → logprob: -7.453026294708252
    5. 'self' → logprob: -10.57802677154541
    6. '__(
' → logprob: -10.57802677154541
    7. 'def' → logprob: -11.82802677154541
    8. '```' → logprob: -12.20302677154541
    9. ' (' → logprob: -12.45302677154541
    10. '(s' → logprob: -13.20302677154541

Token 465: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.9424725148128346e-05
    2. ' self' → logprob: -10.125049591064453
    3. ')' → logprob: -12.250049591064453
    4. '(self' → logprob: -12.375049591064453
    5. ')(' → logprob: -16.750049591064453
    6. ' ' → logprob: -16.875049591064453
    7. '):
' → logprob: -17.125049591064453
    8. '   ' → logprob: -17.375049591064453
    9. '__(' → logprob: -17.375049591064453
    10. 'def' → logprob: -17.625049591064453

Token 466: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11465727537870407
    2. 'self' → logprob: -2.614657163619995
    3. '__' → logprob: -3.989657163619995
    4. '(self' → logprob: -4.114657402038574
    5. '__,' → logprob: -9.239657402038574
    6. ',' → logprob: -9.739657402038574
    7. '__(
' → logprob: -10.114657402038574
    8. '__('' → logprob: -10.864657402038574
    9. ' self' → logprob: -10.989657402038574
    10. '__)' → logprob: -11.239657402038574

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06440741568803787
    2. 'self' → logprob: -3.4394073486328125
    3. '   ' → logprob: -3.5644073486328125
    4. ' self' → logprob: -7.0644073486328125
    5. 'return' → logprob: -7.1894073486328125
    6. '(self' → logprob: -8.939407348632812
    7. 'def' → logprob: -9.564407348632812
    8. ' return' → logprob: -9.689407348632812
    9. '           ' → logprob: -9.939407348632812
    10. 'f' → logprob: -10.439407348632812

Token 468: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014049944002181292
    2. 'f' → logprob: -6.751404762268066
    3. '   ' → logprob: -9.251404762268066
    4. ' return' → logprob: -9.626404762268066
    5. '       ' → logprob: -9.751404762268066
    6. '"' → logprob: -11.501404762268066
    7. ' f' → logprob: -14.001404762268066
    8. '           ' → logprob: -14.126404762268066
    9. ''' → logprob: -14.126404762268066
    10. '"<' → logprob: -14.251404762268066

Token 469: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00044771170360036194
    2. '       ' → logprob: -7.750447750091553
    3. ' return' → logprob: -11.125447273254395
    4. '   ' → logprob: -13.750447273254395
    5. 's' → logprob: -14.250447273254395
    6. '           ' → logprob: -14.875447273254395
    7. '	return' → logprob: -16.12544822692871
    8. '```' → logprob: -17.75044822692871
    9. 'repr' → logprob: -18.37544822692871
    10. 'r' → logprob: -18.75044822692871

Token 470: ' debug' (ID: 15199)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7397613525390625
    2. 'self' → logprob: -1.1147613525390625
    3. ' self' → logprob: -2.6147613525390625
    4. ' i' → logprob: -3.1147613525390625
    5. 'repr' → logprob: -3.8647613525390625
    6. 'f' → logprob: -4.4897613525390625
    7. 'l' → logprob: -4.7397613525390625
    8. 'debug' → logprob: -5.1147613525390625
    9. '__' → logprob: -5.2397613525390625
    10. ' debug' → logprob: -5.3647613525390625

Token 471: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10263540595769882
    2. '   ' → logprob: -2.602635383605957
    3. '(self' → logprob: -4.352635383605957
    4. 'return' → logprob: -5.352635383605957
    5. ' return' → logprob: -5.727635383605957
    6. 'self' → logprob: -6.727635383605957
    7. '           ' → logprob: -7.352635383605957
    8. '
' → logprob: -8.352635383605957
    9. ' self' → logprob: -8.352635383605957
    10. 'def' → logprob: -8.852635383605957

Token 472: ' je' (ID: 1264)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09998103976249695
    2. 'return' → logprob: -2.9749810695648193
    3. ' return' → logprob: -3.8499810695648193
    4. '   ' → logprob: -5.22498083114624
    5. 'pas' → logprob: -5.34998083114624
    6. 'pass' → logprob: -5.97498083114624
    7. ' pas' → logprob: -6.09998083114624
    8. 'def' → logprob: -6.09998083114624
    9. '           ' → logprob: -6.59998083114624
    10. 'self' → logprob: -7.22498083114624

Token 473: ' teste' (ID: 62670)
  Prédit: 'vais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vais' → logprob: -0.6400210857391357
    2. 'n' → logprob: -2.0150210857391357
    3. 's' → logprob: -2.1400210857391357
    4. 'ne' → logprob: -2.8900210857391357
    5. 'repr' → logprob: -3.3900210857391357
    6. ' n' → logprob: -3.6400210857391357
    7. ' vais' → logprob: -4.140021324157715
    8. ' ne' → logprob: -4.390021324157715
    9. 'def' → logprob: -4.765021324157715
    10. ' peux' → logprob: -4.890021324157715

Token 474: ' rarement' (ID: 172887)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.848931610584259
    2. '       ' → logprob: -1.7239315509796143
    3. '(self' → logprob: -1.8489315509796143
    4. 'return' → logprob: -2.3489315509796143
    5. '   ' → logprob: -2.3489315509796143
    6. ' self' → logprob: -3.9739315509796143
    7. ' return' → logprob: -4.348931789398193
    8. 'def' → logprob: -4.473931789398193
    9. '           ' → logprob: -7.723931789398193
    10. ' def' → logprob: -8.098931312561035

Token 475: ' ça' (ID: 13590)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.658187210559845
    2. '   ' → logprob: -1.5331871509552002
    3. '       ' → logprob: -1.5331871509552002
    4. 'return' → logprob: -3.5331871509552
    5. 'self' → logprob: -4.533187389373779
    6. 'def' → logprob: -5.408187389373779
    7. ' (' → logprob: -5.908187389373779
    8. ' return' → logprob: -6.158187389373779
    9. ' self' → logprob: -7.533187389373779
    10. '(' → logprob: -8.783186912536621

Token 476: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25990384817123413
    2. '       ' → logprob: -2.134903907775879
    3. '   ' → logprob: -2.509903907775879
    4. 'return' → logprob: -3.634903907775879
    5. ' return' → logprob: -6.134903907775879
    6. 'self' → logprob: -8.509903907775879
    7. ':
' → logprob: -9.384903907775879
    8. '           ' → logprob: -9.634903907775879
    9. '(
' → logprob: -9.759903907775879
    10. ' (' → logprob: -9.884903907775879

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17255648970603943
    2. '       ' → logprob: -1.9225565195083618
    3. '(self' → logprob: -5.172556400299072
    4. ' return' → logprob: -5.797556400299072
    5. 'return' → logprob: -6.922556400299072
    6. '
' → logprob: -7.297556400299072
    7. 'def' → logprob: -7.797556400299072
    8. '	return' → logprob: -7.922556400299072
    9. '(
' → logprob: -8.67255687713623
    10. ':return' → logprob: -8.67255687713623

Token 478: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5646987557411194
    2. ' return' → logprob: -1.3146986961364746
    3. '       ' → logprob: -1.8146986961364746
    4. '   ' → logprob: -10.939699172973633
    5. '	return' → logprob: -12.189699172973633
    6. '           ' → logprob: -13.439699172973633
    7. '
' → logprob: -13.939699172973633
    8. ' ' → logprob: -15.189699172973633
    9. '{return' → logprob: -15.689699172973633
    10. '0' → logprob: -16.064699172973633

Token 479: ' str' (ID: 989)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.49217915534973145
    2. '"' → logprob: -1.8671791553497314
    3. ' f' → logprob: -1.8671791553497314
    4. ''' → logprob: -2.9921791553497314
    5. 'str' → logprob: -4.367178916931152
    6. ''f' → logprob: -4.867178916931152
    7. 'repr' → logprob: -5.367178916931152
    8. '"<' → logprob: -5.992178916931152
    9. ''<' → logprob: -7.242178916931152
    10. ' repr' → logprob: -7.992178916931152

Token 480: '([' (ID: 5194)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. 'self' → logprob: -16.125
    4. '((' → logprob: -18.0
    5. '([' → logprob: -18.125
    6. ' (' → logprob: -19.125
    7. '(list' → logprob: -19.5
    8. '(len' → logprob: -20.625
    9. '(tuple' → logprob: -20.625
    10. '({' → logprob: -21.25

Token 481: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030439196154475212
    2. 'x' → logprob: -3.5304391384124756
    3. 's' → logprob: -8.280439376831055
    4. 'v' → logprob: -8.655439376831055
    5. ' self' → logprob: -9.030439376831055
    6. '0' → logprob: -9.530439376831055
    7. '(self' → logprob: -10.780439376831055
    8. 'sum' → logprob: -10.905439376831055
    9. 't' → logprob: -11.405439376831055
    10. 'c' → logprob: -12.530439376831055

Token 482: '.query' (ID: 7608)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.31902560591697693
    2. 'tree' → logprob: -1.6940256357192993
    3. 'acc' → logprob: -3.3190255165100098
    4. '.query' → logprob: -3.8190255165100098
    5. '.acc' → logprob: -4.06902551651001
    6. 'x' → logprob: -4.81902551651001
    7. 'i' → logprob: -5.81902551651001
    8. '.x' → logprob: -6.69402551651001
    9. 'query' → logprob: -7.31902551651001
    10. '(x' → logprob: -8.569025993347168

Token 483: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031790214125066996
    2. '(' → logprob: -5.75317907333374
    3. '(x' → logprob: -14.003178596496582
    4. '(j' → logprob: -15.628178596496582
    5. '(k' → logprob: -15.753178596496582
    6. '(l' → logprob: -16.7531795501709
    7. '(a' → logprob: -17.0031795501709
    8. 'i' → logprob: -17.1281795501709
    9. ' (' → logprob: -17.3781795501709
    10. '(ii' → logprob: -18.0031795501709

Token 484: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00038932388997636735
    2. ',' → logprob: -8.750389099121094
    3. ',i' → logprob: -8.750389099121094
    4. '(' → logprob: -9.625389099121094
    5. 'i' → logprob: -12.750389099121094
    6. ' (' → logprob: -12.750389099121094
    7. 'for' → logprob: -16.125389099121094
    8. ' i' → logprob: -16.500389099121094
    9. ' ,' → logprob: -16.750389099121094
    10. ' for' → logprob: -16.750389099121094

Token 485: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011927806917810813
    2. ' i' → logprob: -9.37511920928955
    3. '0' → logprob: -10.37511920928955
    4. '   ' → logprob: -13.00011920928955
    5. ' ' → logprob: -14.62511920928955
    6. '(i' → logprob: -16.000120162963867
    7. '  ' → logprob: -16.000120162963867
    8. '	i' → logprob: -16.375120162963867
    9. '    ' → logprob: -17.250120162963867
    10. ')' → logprob: -17.250120162963867

Token 486: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001307263970375061
    2. ' +' → logprob: -6.751307487487793
    3. '+i' → logprob: -9.376307487487793
    4. ')' → logprob: -10.501307487487793
    5. '   ' → logprob: -12.001307487487793
    6. 'i' → logprob: -12.126307487487793
    7. ' i' → logprob: -12.251307487487793
    8. ',i' → logprob: -12.501307487487793
    9. '(i' → logprob: -13.501307487487793
    10. ' ' → logprob: -13.501307487487793

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.73314929776825e-05
    2. 'i' → logprob: -9.50008773803711
    3. ' ' → logprob: -11.62508773803711
    4. '   ' → logprob: -13.25008773803711
    5. '+' → logprob: -13.87508773803711
    6. ' i' → logprob: -14.37508773803711
    7. ')' → logprob: -16.50008773803711
    8. '  ' → logprob: -17.25008773803711
    9. '(i' → logprob: -17.87508773803711
    10. '2' → logprob: -18.25008773803711

Token 488: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008311899146065116
    2. ' )' → logprob: -7.125831127166748
    3. 'for' → logprob: -11.250831604003906
    4. ' for' → logprob: -11.875831604003906
    5. 'i' → logprob: -12.625831604003906
    6. '   ' → logprob: -13.875831604003906
    7. ')i' → logprob: -13.875831604003906
    8. ' ' → logprob: -15.000831604003906
    9. ',)' → logprob: -15.000831604003906
    10. ',i' → logprob: -15.250831604003906

Token 489: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008294934406876564
    2. 'for' → logprob: -4.883295059204102
    3. ')' → logprob: -7.633295059204102
    4. '   ' → logprob: -9.133295059204102
    5. ' i' → logprob: -11.133295059204102
    6. '       ' → logprob: -11.133295059204102
    7. ' ' → logprob: -11.133295059204102
    8. '    ' → logprob: -11.383295059204102
    9. '()' → logprob: -12.133295059204102
    10. ',' → logprob: -12.258295059204102

Token 490: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. 'range' → logprob: -20.000709533691406
    4. ' ' → logprob: -20.125709533691406
    5. '	i' → logprob: -21.250709533691406
    6. '0' → logprob: -21.250709533691406
    7. 'in' → logprob: -21.750709533691406
    8. '   ' → logprob: -21.750709533691406
    9. ' in' → logprob: -21.875709533691406
    10. '_i' → logprob: -22.500709533691406

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02634720876812935
    2. 'in' → logprob: -3.6513471603393555
    3. 'range' → logprob: -10.276347160339355
    4. 'i' → logprob: -11.901347160339355
    5. ' range' → logprob: -13.401347160339355
    6. ')' → logprob: -13.651347160339355
    7. ' ' → logprob: -13.901347160339355
    8. ' i' → logprob: -14.151347160339355
    9. 'n' → logprob: -14.276347160339355
    10. ',' → logprob: -15.151347160339355

Token 492: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005532711511477828
    2. ' range' → logprob: -7.500553131103516
    3. 'i' → logprob: -15.500553131103516
    4. ' ' → logprob: -16.500553131103516
    5. '   ' → logprob: -18.875553131103516
    6. '0' → logprob: -19.250553131103516
    7. '(range' → logprob: -19.750553131103516
    8. '  ' → logprob: -20.250553131103516
    9. 'in' → logprob: -20.500553131103516
    10. '	range' → logprob: -21.125553131103516

Token 493: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3873211741447449
    2. 'self' → logprob: -1.1373212337493896
    3. ' self' → logprob: -8.262321472167969
    4. '(' → logprob: -9.387321472167969
    5. '0' → logprob: -9.762321472167969
    6. 'len' → logprob: -11.262321472167969
    7. '   ' → logprob: -11.262321472167969
    8. '(len' → logprob: -11.512321472167969
    9. '       ' → logprob: -11.887321472167969
    10. '	self' → logprob: -13.262321472167969

Token 494: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -2.534558552724775e-05
    2. 'N' → logprob: -10.625025749206543
    3. '.' → logprob: -14.500025749206543
    4. 'self' → logprob: -16.375024795532227
    5. '(N' → logprob: -16.375024795532227
    6. '.n' → logprob: -16.625024795532227
    7. ' .' → logprob: -17.000024795532227
    8. '.tree' → logprob: -17.125024795532227
    9. ' N' → logprob: -17.750024795532227
    10. 'tree' → logprob: -17.750024795532227

Token 495: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0010864014038816094
    2. ')' → logprob: -7.376086235046387
    3. '])' → logprob: -8.001086235046387
    4. ')]' → logprob: -9.751086235046387
    5. ' )' → logprob: -10.376086235046387
    6. ')])
' → logprob: -10.626086235046387
    7. ' ])' → logprob: -12.376086235046387
    8. ']])' → logprob: -13.126086235046387
    9. '])]' → logprob: -13.501086235046387
    10. ')])

' → logprob: -13.876086235046387

Token 496: 'bit' (ID: 6516)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1949799060821533
    2. 'res' → logprob: -1.9449799060821533
    3. 'bit' → logprob: -2.0699799060821533
    4. 'dp' → logprob: -2.4449799060821533
    5. 'Q' → logprob: -2.8199799060821533
    6. 'answer' → logprob: -3.3199799060821533
    7. '#' → logprob: -3.5699799060821533
    8. 'color' → logprob: -3.6949799060821533
    9. 'cnt' → logprob: -3.8199799060821533
    10. 'freq' → logprob: -3.8199799060821533

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38807475566864014
    2. '=' → logprob: -1.2630747556686401
    3. '(' → logprob: -3.3880748748779297
    4. '(N' → logprob: -5.88807487487793
    5. '.' → logprob: -6.88807487487793
    6. 's' → logprob: -7.26307487487793
    7. '[' → logprob: -9.63807487487793
    8. ' (' → logprob: -9.63807487487793
    9. '=N' → logprob: -9.63807487487793
    10. '(n' → logprob: -9.76307487487793

Token 498: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.0009551709517836571
    2. ' BIT' → logprob: -7.000955104827881
    3. '[' → logprob: -10.125955581665039
    4. 'Bit' → logprob: -13.125955581665039
    5. '[B' → logprob: -14.000955581665039
    6. ' [' → logprob: -15.000955581665039
    7. 'BIN' → logprob: -16.12595558166504
    8. '	BIT' → logprob: -16.25095558166504
    9. 'BITS' → logprob: -16.37595558166504
    10. 'B' → logprob: -16.87595558166504

Token 499: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004153668414801359
    2. 'N' → logprob: -5.504153728485107
    3. '(' → logprob: -10.00415325164795
    4. '(k' → logprob: -10.87915325164795
    5. '(n' → logprob: -12.00415325164795
    6. 'k' → logprob: -12.75415325164795
    7. '(len' → logprob: -13.87915325164795
    8. '[N' → logprob: -15.00415325164795
    9. 'n' → logprob: -15.25415325164795
    10. '(
' → logprob: -15.37915325164795

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. ')
' → logprob: -9.375085830688477
    3. ' )' → logprob: -14.625085830688477
    4. ')
' → logprob: -15.125085830688477
    5. ')

' → logprob: -15.625085830688477
    6. '))' → logprob: -15.750085830688477
    7. ')`' → logprob: -16.375085830688477
    8. '),' → logprob: -17.750085830688477
    9. ')}' → logprob: -18.750085830688477
    10. ')#' → logprob: -18.875085830688477

Token 501: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023963509127497673
    2. 'res' → logprob: -4.773963451385498
    3. 'answer' → logprob: -5.023963451385498
    4. 'result' → logprob: -6.023963451385498
    5. 'ans' → logprob: -6.148963451385498
    6. 'answers' → logprob: -6.398963451385498
    7. '#' → logprob: -7.648963451385498
    8. 'color' → logprob: -7.898963451385498
    9. 'count' → logprob: -8.023963928222656
    10. 'counts' → logprob: -8.648963928222656

Token 502: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8698627948760986
    2. 'u' → logprob: -0.9948627948760986
    3. 'color' → logprob: -2.1198627948760986
    4. 'c' → logprob: -2.7448627948760986
    5. 'v' → logprob: -4.2448625564575195
    6. 'idx' → logprob: -5.1198625564575195
    7. 'node' → logprob: -5.8698625564575195
    8. ' color' → logprob: -6.7448625564575195
    9. ' i' → logprob: -7.1198625564575195
    10. 'vertex' → logprob: -7.3698625564575195

Token 503: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40807798504829407
    2. ' in' → logprob: -1.1580779552459717
    3. ',' → logprob: -3.9080779552459717
    4. '(C' → logprob: -7.408078193664551
    5. '(' → logprob: -9.03307819366455
    6. ')' → logprob: -9.90807819366455
    7. ' ' → logprob: -10.65807819366455
    8. '   ' → logprob: -10.90807819366455
    9. 'range' → logprob: -11.28307819366455
    10. '(N' → logprob: -11.53307819366455

Token 504: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016082972288131714
    2. ' range' → logprob: -6.501608371734619
    3. 'C' → logprob: -9.876607894897461
    4. 'cs' → logprob: -10.126607894897461
    5. 'tin' → logprob: -11.376607894897461
    6. '[' → logprob: -14.251607894897461
    7. '(range' → logprob: -14.876607894897461
    8. 'rang' → logprob: -15.126607894897461
    9. 'es' → logprob: -15.501607894897461
    10. 'CS' → logprob: -15.626607894897461

Token 505: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00019901065388694406
    2. '(' → logprob: -9.125199317932129
    3. 'N' → logprob: -9.875199317932129
    4. '(len' → logprob: -10.375199317932129
    5. '(n' → logprob: -12.375199317932129
    6. ')' → logprob: -14.750199317932129
    7. '(
' → logprob: -15.000199317932129
    8. '(k' → logprob: -15.125199317932129
    9. '(bit' → logprob: -15.250199317932129
    10. 'len' → logprob: -15.500199317932129

Token 506: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011131414212286472
    2. '):
' → logprob: -4.511131286621094
    3. ')' → logprob: -9.636131286621094
    4. '):
' → logprob: -12.011131286621094
    5. ' ):' → logprob: -13.011131286621094
    6. '   ' → logprob: -13.386131286621094
    7. ':' → logprob: -13.386131286621094
    8. '():' → logprob: -13.511131286621094
    9. ']:' → logprob: -13.511131286621094
    10. '(' → logprob: -14.011131286621094

Token 507: '   ' (ID: 271)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0038906955160200596
    2. '   ' → logprob: -5.753890514373779
    3. ' bit' → logprob: -7.253890514373779
    4. ' ' → logprob: -12.753890991210938
    5. 'bitr' → logprob: -14.878890991210938
    6. '(bit' → logprob: -14.878890991210938
    7. '  ' → logprob: -15.128890991210938
    8. '```' → logprob: -15.253890991210938
    9. '    
' → logprob: -15.503890991210938
    10. '.bit' → logprob: -15.503890991210938

Token 508: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -5.080963092041202e-06
    2. 'if' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.375004768371582
    4. ' bit' → logprob: -13.625004768371582
    5. ' ' → logprob: -17.7500057220459
    6. '  ' → logprob: -18.8750057220459
    7. '#' → logprob: -19.2500057220459
    8. 'b' → logprob: -19.7500057220459
    9. 'val' → logprob: -19.8750057220459
    10. '(bit' → logprob: -20.0000057220459

Token 509: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00014823723176959902
    2. '.' → logprob: -9.000147819519043
    3. '.bit' → logprob: -11.250147819519043
    4. ').' → logprob: -11.625147819519043
    5. '].' → logprob: -13.875147819519043
    6. ' .' → logprob: -14.375147819519043
    7. 'add' → logprob: -15.375147819519043
    8. ')add' → logprob: -16.12514877319336
    9. '.Add' → logprob: -16.25014877319336
    10. '}.' → logprob: -16.37514877319336

Token 510: '(i' (ID: 3649)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.000725656165741384
    2. '(' → logprob: -7.375725746154785
    3. '(i' → logprob: -9.250725746154785
    4. '(k' → logprob: -13.250725746154785
    5. '(T' → logprob: -14.875725746154785
    6. '(in' → logprob: -15.250725746154785
    7. '((' → logprob: -15.250725746154785
    8. '(
' → logprob: -16.37572479248047
    9. ' (' → logprob: -16.37572479248047
    10. 't' → logprob: -16.50072479248047

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002802855451591313
    2. '1' → logprob: -9.000280380249023
    3. ' ,' → logprob: -9.125280380249023
    4. ',C' → logprob: -10.750280380249023
    5. '+' → logprob: -11.375280380249023
    6. 'C' → logprob: -12.125280380249023
    7. ',
' → logprob: -13.125280380249023
    8. '   ' → logprob: -13.375280380249023
    9. ' +' → logprob: -13.500280380249023
    10. ')' → logprob: -14.000280380249023

Token 512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024135883431881666
    2. 'C' → logprob: -6.127413749694824
    3. ' ' → logprob: -8.627413749694824
    4. '0' → logprob: -10.877413749694824
    5. 'cs' → logprob: -11.752413749694824
    6. 'i' → logprob: -12.252413749694824
    7. ' C' → logprob: -13.127413749694824
    8. '   ' → logprob: -13.502413749694824
    9. '(C' → logprob: -13.502413749694824
    10. 'bit' → logprob: -13.502413749694824

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5782418251037598
    2. 'C' → logprob: -0.8282418251037598
    3. 'i' → logprob: -6.82824182510376
    4. 'tin' → logprob: -8.078241348266602
    5. '0' → logprob: -8.828241348266602
    6. '(C' → logprob: -8.953241348266602
    7. 'cs' → logprob: -8.953241348266602
    8. '(' → logprob: -9.328241348266602
    9. ' ' → logprob: -9.328241348266602
    10. 'c' → logprob: -9.703241348266602

Token 514: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ' )' → logprob: -11.375021934509277
    3. ')
' → logprob: -11.625021934509277
    4. '
' → logprob: -15.625021934509277
    5. '#' → logprob: -15.625021934509277
    6. '```' → logprob: -16.00002098083496
    7. '[' → logprob: -16.12502098083496
    8. ')

' → logprob: -16.25002098083496
    9. 'if' → logprob: -16.25002098083496
    10. ')`' → logprob: -16.37502098083496

Token 515: 'whole' (ID: 127718)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1819883584976196
    2. 'res' → logprob: -1.3069883584976196
    3. 'Q' → logprob: -1.9319883584976196
    4. 'answer' → logprob: -2.43198823928833
    5. 'for' → logprob: -3.18198823928833
    6. 'q' → logprob: -3.18198823928833
    7. 'answers' → logprob: -3.93198823928833
    8. 'result' → logprob: -4.18198823928833
    9. 'used' → logprob: -4.93198823928833
    10. 'count' → logprob: -5.05698823928833

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29451778531074524
    2. '=' → logprob: -1.9195177555084229
    3. '_count' → logprob: -3.669517755508423
    4. 'def' → logprob: -3.669517755508423
    5. '_' → logprob: -4.794517993927002
    6. 'count' → logprob: -5.794517993927002
    7. '#' → logprob: -5.794517993927002
    8. '=[]' → logprob: -5.794517993927002
    9. '_counts' → logprob: -6.044517993927002
    10. ':' → logprob: -6.169517993927002

Token 517: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002444381359964609
    2. 'bit' → logprob: -7.002444267272949
    3. '0' → logprob: -7.877444267272949
    4. '[N' → logprob: -8.00244426727295
    5. '1' → logprob: -8.25244426727295
    6. 'len' → logprob: -8.50244426727295
    7. '[' → logprob: -9.50244426727295
    8. '(N' → logprob: -9.50244426727295
    9. 'set' → logprob: -10.00244426727295
    10. ' N' → logprob: -10.25244426727295

Token 518: '*(' (ID: 14793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0800907611846924
    2. 'answer' → logprob: -1.2050907611846924
    3. 'res' → logprob: -1.9550907611846924
    4. 'for' → logprob: -3.2050907611846924
    5. 'answers' → logprob: -3.5800907611846924
    6. 'result' → logprob: -4.330090522766113
    7. 'def' → logprob: -4.580090522766113
    8. 'done' → logprob: -4.580090522766113
    9. 'ok' → logprob: -4.830090522766113
    10. 'used' → logprob: -4.955090522766113

Token 519: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.251091377227567e-05
    2. '(N' → logprob: -11.125042915344238
    3. ' N' → logprob: -11.375042915344238
    4. 'whole' → logprob: -11.750042915344238
    5. '1' → logprob: -12.500042915344238
    6. '-' → logprob: -13.000042915344238
    7. ' whole' → logprob: -14.125042915344238
    8. '(' → logprob: -14.375042915344238
    9. '2' → logprob: -15.375042915344238
    10. ' ' → logprob: -15.625042915344238

Token 520: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3146995007991791
    2. '-' → logprob: -1.3146995306015015
    3. ')' → logprob: -7.189699649810791
    4. ' +' → logprob: -8.189699172973633
    5. ' -' → logprob: -8.189699172973633
    6. '
' → logprob: -9.564699172973633
    7. '```' → logprob: -10.689699172973633
    8. '+)' → logprob: -12.314699172973633
    9. ')
' → logprob: -12.439699172973633
    10. ' )' → logprob: -12.439699172973633

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.375006675720215
    3. '
' → logprob: -14.125006675720215
    4. '   ' → logprob: -14.875006675720215
    5. '```' → logprob: -14.875006675720215
    6. '2' → logprob: -15.500006675720215
    7. ')' → logprob: -17.3750057220459
    8. '

' → logprob: -17.5625057220459
    9. '
' → logprob: -17.6250057220459
    10. '(' → logprob: -17.6250057220459

Token 522: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.03842058405280113
    2. ')' → logprob: -3.2884206771850586
    3. '//' → logprob: -7.913420677185059
    4. ' )' → logprob: -11.413420677185059
    5. ' //' → logprob: -13.788420677185059
    6. ')>>' → logprob: -14.788420677185059
    7. ')
' → logprob: -15.163420677185059
    8. ')#' → logprob: -15.538420677185059
    9. ')`' → logprob: -15.913420677185059
    10. '```' → logprob: -16.788419723510742

Token 523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '4' → logprob: -18.875
    3. '```' → logprob: -19.0
    4. '۲' → logprob: -21.25
    5. '22' → logprob: -21.875
    6. '1' → logprob: -22.0
    7. '२' → logprob: -22.125
    8. '২' → logprob: -22.25
    9. '
' → logprob: -22.5
    10. '２' → logprob: -22.875

Token 524: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9327694773674011
    2. 'res' → logprob: -1.182769536972046
    3. 'answer' → logprob: -1.807769536972046
    4. 'for' → logprob: -2.557769536972046
    5. 'ret' → logprob: -3.682769536972046
    6. 'result' → logprob: -4.307769298553467
    7. 'def' → logprob: -5.307769298553467
    8. 'answers' → logprob: -6.182769298553467
    9. 'total' → logprob: -6.557769298553467
    10. '#' → logprob: -6.682769298553467

Token 525: 'results' (ID: 16570)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9039603471755981
    2. 'res' → logprob: -1.5289603471755981
    3. 'answer' → logprob: -2.1539602279663086
    4. 'for' → logprob: -2.2789602279663086
    5. 'ret' → logprob: -3.9039602279663086
    6. 'def' → logprob: -4.028960227966309
    7. 'result' → logprob: -4.528960227966309
    8. 'answers' → logprob: -4.528960227966309
    9. 'color' → logprob: -4.903960227966309
    10. 'count' → logprob: -5.028960227966309

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815696805715561
    2. '=' → logprob: -4.018157005310059
    3. '_' → logprob: -13.393157005310059
    4. '=[]' → logprob: -13.518157005310059
    5. ',' → logprob: -13.768157005310059
    6. ' =[' → logprob: -14.143157005310059
    7. ' ' → logprob: -14.393157005310059
    8. '[' → logprob: -15.018157005310059
    9. 's' → logprob: -15.143157005310059
    10. '=[' → logprob: -15.518157005310059

Token 527: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12418332695960999
    2. '[]' → logprob: -2.249183416366577
    3. '[N' → logprob: -5.249183177947998
    4. '0' → logprob: -5.874183177947998
    5. '[]
' → logprob: -6.624183177947998
    6. ' [' → logprob: -6.624183177947998
    7. ' []' → logprob: -8.749183654785156
    8. '[C' → logprob: -8.874183654785156
    9. 'whole' → logprob: -9.749183654785156
    10. 'N' → logprob: -10.499183654785156

Token 528: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007610886357724667
    2. 'def' → logprob: -6.38261079788208
    3. 'used' → logprob: -7.00761079788208
    4. 'acc' → logprob: -7.38261079788208
    5. 'done' → logprob: -7.50761079788208
    6. '#' → logprob: -7.88261079788208
    7. 'count' → logprob: -7.88261079788208
    8. 'visited' → logprob: -8.132611274719238
    9. 'processed' → logprob: -8.382611274719238
    10. 'rem' → logprob: -8.507611274719238

Token 529: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7246783971786499
    2. 'color' → logprob: -0.7246783971786499
    3. 'i' → logprob: -4.4746785163879395
    4. 'col' → logprob: -4.7246785163879395
    5. 'x' → logprob: -6.0996785163879395
    6. ' color' → logprob: -6.5996785163879395
    7. 'u' → logprob: -6.8496785163879395
    8. 'j' → logprob: -7.3496785163879395
    9. ' c' → logprob: -7.3496785163879395
    10. 'v' → logprob: -7.5996785163879395

Token 530: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5236344337463379
    2. ' in' → logprob: -0.8986344337463379
    3. ',' → logprob: -7.648634433746338
    4. 'range' → logprob: -10.77363395690918
    5. 'color' → logprob: -12.52363395690918
    6. ',color' → logprob: -13.39863395690918
    7. '_,' → logprob: -14.02363395690918
    8. 'cs' → logprob: -14.14863395690918
    9. 'dans' → logprob: -14.27363395690918
    10. '```' → logprob: -14.64863395690918

Token 531: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005730479606427252
    2. 'cs' → logprob: -7.62557315826416
    3. ' range' → logprob: -9.37557315826416
    4. 'Range' → logprob: -17.625572204589844
    5. '(range' → logprob: -17.750572204589844
    6. ' cs' → logprob: -17.875572204589844
    7. '	range' → logprob: -18.375572204589844
    8. 'ranges' → logprob: -18.375572204589844
    9. 'c' → logprob: -18.750572204589844
    10. 're' → logprob: -19.375572204589844

Token 532: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2017865628004074
    2. '(N' → logprob: -1.7017865180969238
    3. '(' → logprob: -8.201786994934082
    4. 'len' → logprob: -10.201786994934082
    5. '1' → logprob: -10.951786994934082
    6. ' N' → logprob: -11.076786994934082
    7. '(len' → logprob: -11.201786994934082
    8. '   ' → logprob: -12.326786994934082
    9. ',N' → logprob: -12.326786994934082
    10. ')' → logprob: -13.576786994934082

Token 533: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07100452482700348
    2. '):' → logprob: -3.071004629135132
    3. '+' → logprob: -4.071004390716553
    4. ')' → logprob: -5.696004390716553
    5. ' ):
' → logprob: -7.696004390716553
    6. ':' → logprob: -8.196004867553711
    7. ' +' → logprob: -8.321004867553711
    8. ':
' → logprob: -8.321004867553711
    9. ',' → logprob: -8.446004867553711
    10. '):
' → logprob: -9.446004867553711

Token 534: '   ' (ID: 271)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.5139179229736328
    2. 'if' → logprob: -1.6389179229736328
    3. 'count' → logprob: -2.138917922973633
    4. 'cnt' → logprob: -2.263917922973633
    5. 'results' → logprob: -2.263917922973633
    6. 'c' → logprob: -2.513917922973633
    7. '   ' → logprob: -3.388917922973633
    8. 'for' → logprob: -3.638917922973633
    9. 'x' → logprob: -4.138917922973633
    10. '#' → logprob: -4.763917922973633

Token 535: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5843573808670044
    2. 'if' → logprob: -1.4593573808670044
    3. 'count' → logprob: -3.209357261657715
    4. 'color' → logprob: -3.584357261657715
    5. 'total' → logprob: -4.334357261657715
    6. 'cnt' → logprob: -4.334357261657715
    7. 'bit' → logprob: -4.584357261657715
    8. 'c' → logprob: -4.834357261657715
    9. 'results' → logprob: -4.959357261657715
    10. 'res' (adapté à ' res') → logprob: -5.084357261657715

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026846826076508
    2. '=' → logprob: -2.3502683639526367
    3. ' ' → logprob: -10.850268363952637
    4. '   ' → logprob: -11.475268363952637
    5. ' +=' → logprob: -11.850268363952637
    6. ',' → logprob: -12.225268363952637
    7. '.append' → logprob: -12.350268363952637
    8. '_' → logprob: -12.725268363952637
    9. 's' → logprob: -12.850268363952637
    10. ')' → logprob: -13.225268363952637

Token 537: ' whole' (ID: 6062)
  Prédit: 'whole'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'whole' → logprob: -0.00998567882925272
    2. '0' → logprob: -5.884985446929932
    3. 'bit' → logprob: -6.134985446929932
    4. 'N' → logprob: -6.384985446929932
    5. '1' → logprob: -6.509985446929932
    6. ' whole' → logprob: -7.259985446929932
    7. 'len' → logprob: -7.509985446929932
    8. '(' → logprob: -8.50998592376709
    9. 'results' → logprob: -9.38498592376709
    10. 'res' → logprob: -10.13498592376709

Token 538: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4858691394329071
    2. ' -' → logprob: -1.1108691692352295
    3. '<|end|>' → logprob: -3.4858691692352295
    4. '<|end|>' → logprob: -5.23586893081665
    5. '   ' → logprob: -5.36086893081665
    6. ' ' → logprob: -5.61086893081665
    7. '
' → logprob: -5.86086893081665
    8. ')' → logprob: -6.48586893081665
    9. '    
' → logprob: -6.98586893081665
    10. ',' → logprob: -7.23586893081665

Token 539: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5838428139686584
    2. 'for' → logprob: -0.9588428139686584
    3. '   ' → logprob: -4.083842754364014
    4. ' -' → logprob: -4.833842754364014
    5. '
' → logprob: -5.333842754364014
    6. ' for' → logprob: -5.708842754364014
    7. '-c' → logprob: -5.708842754364014
    8. 'res' → logprob: -5.833842754364014
    9. '#' → logprob: -5.833842754364014
    10. '-sub' → logprob: -5.958842754364014

Token 540: ' arr' (ID: 1724)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01713753305375576
    2. 'res' → logprob: -5.14213752746582
    3. 'bit' → logprob: -5.64213752746582
    4. '#' → logprob: -6.89213752746582
    5. 'prev' → logprob: -6.89213752746582
    6. 'color' → logprob: -7.01713752746582
    7. 'count' → logprob: -7.39213752746582
    8. 'cnt' → logprob: -7.39213752746582
    9. 'last' → logprob: -7.76713752746582
    10. 'sub' → logprob: -7.89213752746582

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061348333954811096
    2. '=' → logprob: -3.1863484382629395
    3. 'ay' → logprob: -4.0613484382629395
    4. '=[]' → logprob: -9.061347961425781
    5. 'angement' → logprob: -9.061347961425781
    6. 'ays' → logprob: -9.311347961425781
    7. 'anged' → logprob: -9.436347961425781
    8. 'for' → logprob: -9.561347961425781
    9. '=[]
' → logprob: -9.561347961425781
    10. 'ival' → logprob: -10.061347961425781

Token 542: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.1316199004650116
    2. '[]' → logprob: -2.506619930267334
    3. '[' → logprob: -3.506619930267334
    4. '[]
' → logprob: -5.506619930267334
    5. '[t' → logprob: -6.506619930267334
    6. 'tin' → logprob: -6.631619930267334
    7. 'sorted' → logprob: -6.756619930267334
    8. '[-' → logprob: -7.131619930267334
    9. 'bit' → logprob: -7.631619930267334
    10. '[s' → logprob: -8.006619453430176

Token 543: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4736459888808895e-05
    2. '[N' → logprob: -12.125014305114746
    3. 'i' → logprob: -12.875014305114746
    4. '[' → logprob: -13.125014305114746
    5. ' [' → logprob: -14.000014305114746
    6. '   ' → logprob: -14.500014305114746
    7. '(i' → logprob: -15.000014305114746
    8. ' =' → logprob: -15.000014305114746
    9. 's' → logprob: -15.000014305114746
    10. '[s' → logprob: -15.250014305114746

Token 544: '][' (ID: 2696)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3489437401294708
    2. ']' → logprob: -1.2239437103271484
    3. ')' → logprob: -9.473943710327148
    4. ' ]
' → logprob: -9.473943710327148
    5. '[::-' → logprob: -9.473943710327148
    6. ']

' → logprob: -9.723943710327148
    7. '[:' → logprob: -10.348943710327148
    8. ':]
' → logprob: -10.348943710327148
    9. ')
' → logprob: -10.473943710327148
    10. '   ' → logprob: -10.848943710327148

Token 545: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.15566255152225494
    2. ':]
' → logprob: -2.5306625366210938
    3. '0' → logprob: -3.7806625366210938
    4. '::-' → logprob: -3.9056625366210938
    5. ':' → logprob: -4.280662536621094
    6. ']' → logprob: -5.405662536621094
    7. '::' → logprob: -6.905662536621094
    8. ':-' → logprob: -7.155662536621094
    9. '1' → logprob: -7.655662536621094
    10. ' :]' → logprob: -8.405662536621094

Token 546: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6981141567230225
    2. 'for' → logprob: -0.6981141567230225
    3. 'stack' → logprob: -6.448114395141602
    4. 'cs' → logprob: -6.698114395141602
    5. '   ' → logprob: -6.823114395141602
    6. 'while' → logprob: -8.323114395141602
    7. 'count' → logprob: -9.073114395141602
    8. ' for' → logprob: -9.448114395141602
    9. '#' → logprob: -9.573114395141602
    10. 'if' → logprob: -9.698114395141602

Token 547: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.01061621680855751
    2. 'for' → logprob: -4.635616302490234
    3. 'if' → logprob: -7.885616302490234
    4. '   ' → logprob: -8.135616302490234
    5. '#' → logprob: -10.260616302490234
    6. 'res' → logprob: -10.510616302490234
    7. 'stack' → logprob: -10.760616302490234
    8. 'from' → logprob: -11.385616302490234
    9. 'idx' → logprob: -11.385616302490234
    10. 'q' → logprob: -12.135616302490234

Token 548: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00034535606391727924
    2. '.' → logprob: -8.000345230102539
    3. ' .' → logprob: -12.500345230102539
    4. '=' → logprob: -12.500345230102539
    5. '.s' → logprob: -13.125345230102539
    6. 'sort' → logprob: -15.375345230102539
    7. ' =' → logprob: -16.00034523010254
    8. '=.' → logprob: -17.00034523010254
    9. '.=' → logprob: -17.25034523010254
    10. '   ' → logprob: -17.75034523010254

Token 549: '(key' (ID: 8932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050581347197294235
    2. 'for' → logprob: -3.675581455230713
    3. '    
' → logprob: -5.675581455230713
    4. '[' → logprob: -5.675581455230713
    5. 'arr' → logprob: -5.800581455230713
    6. '```' → logprob: -6.050581455230713
    7. '#' → logprob: -6.425581455230713
    8. 'prev' → logprob: -6.425581455230713
    9. 'while' → logprob: -7.050581455230713
    10. ')' → logprob: -7.050581455230713

Token 550: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.2522045373916626
    2. '=' → logprob: -1.5022045373916626
    3. ' =' → logprob: -8.377204895019531
    4. 'lambda' → logprob: -10.752204895019531
    5. '(lambda' → logprob: -10.877204895019531
    6. '=
' → logprob: -13.377204895019531
    7. '=t' → logprob: -14.002204895019531
    8. '=(' → logprob: -14.377204895019531
    9. ' lambda' → logprob: -14.377204895019531
    10. '(' → logprob: -14.877204895019531

Token 551: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.008040948770940304
    2. ' lambda' → logprob: -5.008040904998779
    3. '   ' → logprob: -7.883040904998779
    4. '(lambda' → logprob: -7.883040904998779
    5. 'x' → logprob: -8.258041381835938
    6. 'tin' → logprob: -8.883041381835938
    7. '=lambda' → logprob: -9.008041381835938
    8. ' ' → logprob: -11.133041381835938
    9. 'lam' → logprob: -11.383041381835938
    10. ' x' → logprob: -12.508041381835938

Token 552: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004958406207151711
    2. ' :' → logprob: -7.625495910644531
    3. ':t' → logprob: -12.375495910644531
    4. ':
' → logprob: -12.875495910644531
    5. '   ' → logprob: -14.375495910644531
    6. ':(' → logprob: -16.37549591064453
    7. '=lambda' → logprob: -16.37549591064453
    8. ':-' → logprob: -16.62549591064453
    9. ' ' → logprob: -16.87549591064453
    10. '           ' → logprob: -17.00049591064453

Token 553: ' -' (ID: 533)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.002732716966420412
    2. 'lambda' → logprob: -6.002732753753662
    3. '   ' → logprob: -8.752732276916504
    4. ' tin' → logprob: -9.502732276916504
    5. 'tout' → logprob: -12.127732276916504
    6. ' lambda' → logprob: -12.627732276916504
    7. '(lambda' → logprob: -12.877732276916504
    8. 't' → logprob: -13.127732276916504
    9. '(t' → logprob: -13.627732276916504
    10. 'tan' → logprob: -13.752732276916504

Token 554: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.001742650754749775
    2. 'tout' → logprob: -6.501742839813232
    3. '(t' → logprob: -9.251742362976074
    4. ' tin' → logprob: -9.876742362976074
    5. '(' → logprob: -10.001742362976074
    6. 't' → logprob: -10.751742362976074
    7. '   ' → logprob: -11.001742362976074
    8. 'tan' → logprob: -14.001742362976074
    9. '	t' → logprob: -14.251742362976074
    10. 'k' → logprob: -14.501742362976074

Token 555: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.060365608893335e-05
    2. 'x' → logprob: -10.375041007995605
    3. '[' → logprob: -12.000041007995605
    4. '(x' → logprob: -14.000041007995605
    5. '[t' → logprob: -14.500041007995605
    6. ' [' → logprob: -14.625041007995605
    7. '[
' → logprob: -14.750041007995605
    8. '[arr' → logprob: -14.875041007995605
    9. ')' → logprob: -15.875041007995605
    10. '[s' → logprob: -16.12504005432129

Token 556: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046430349349975586
    2. ')
' → logprob: -3.5464303493499756
    3. '])' → logprob: -4.171430587768555
    4. '])
' → logprob: -7.671430587768555
    5. ' )' → logprob: -7.921430587768555
    6. ')

' → logprob: -8.671430587768555
    7. ' )
' → logprob: -10.421430587768555
    8. ']' → logprob: -11.046430587768555
    9. ')])' → logprob: -11.171430587768555
    10. ')
' → logprob: -11.671430587768555

Token 557: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5035381317138672
    2. '   ' → logprob: -1.6285381317138672
    3. 'prev' → logprob: -2.128538131713867
    4. 'arr' → logprob: -3.628538131713867
    5. 'while' → logprob: -4.253538131713867
    6. 'last' → logprob: -4.628538131713867
    7. 'if' → logprob: -5.628538131713867
    8. 'l' → logprob: -5.753538131713867
    9. 'cur' → logprob: -5.878538131713867
    10. 'left' → logprob: -6.128538131713867

Token 558: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45438912510871887
    2. 'while' → logprob: -1.8293890953063965
    3. 'for' → logprob: -2.0793890953063965
    4. 'prev' → logprob: -3.0793890953063965
    5. 'stack' → logprob: -5.4543890953063965
    6. 'parent' → logprob: -5.4543890953063965
    7. 'last' → logprob: -5.5793890953063965
    8. 'arr' → logprob: -5.7043890953063965
    9. 'cur' → logprob: -6.0793890953063965
    10. ' for' → logprob: -6.4543890953063965

Token 559: ' ord' (ID: 6608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4774346947669983
    2. 'while' → logprob: -2.1024346351623535
    3. 'stack' → logprob: -2.2274346351623535
    4. 'prev' → logprob: -2.6024346351623535
    5. 'last' → logprob: -3.4774346351623535
    6. 'parent' → logprob: -5.1024346351623535
    7. 'j' → logprob: -5.2274346351623535
    8. 'l' → logprob: -5.9774346351623535
    9. 'acc' → logprob: -5.9774346351623535
    10. 'arr' → logprob: -6.1024346351623535

Token 560: 'onner' (ID: 89457)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.17737026512622833
    2. 'onne' → logprob: -2.552370309829712
    3. 'onné' → logprob: -3.302370309829712
    4. 'onnance' → logprob: -4.177370071411133
    5. 'onner' → logprob: -4.677370071411133
    6. 'onnée' → logprob: -4.802370071411133
    7. 'er' → logprob: -4.927370071411133
    8. 'onn' → logprob: -5.302370071411133
    9. 'on' → logprob: -7.302370071411133
    10. 'inaire' → logprob: -7.552370071411133

Token 561: ' du' (ID: 1462)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.3726314902305603
    2. 'arr' → logprob: -1.372631549835205
    3. '   ' → logprob: -3.747631549835205
    4. '(' → logprob: -4.997631549835205
    5. '()' → logprob: -5.747631549835205
    6. ')' → logprob: -5.747631549835205
    7. 'par' → logprob: -5.872631549835205
    8. 'def' → logprob: -6.122631549835205
    9. '(
' → logprob: -6.247631549835205
    10. 'for' → logprob: -6.247631549835205

Token 562: ' max' (ID: 2999)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.025763237848877907
    2. 'haut' → logprob: -4.900763034820557
    3. 'bas' → logprob: -5.025763034820557
    4. 'tin' → logprob: -5.525763034820557
    5. ' plus' → logprob: -6.525763034820557
    6. 'tout' → logprob: -6.650763034820557
    7. 'dé' → logprob: -6.900763034820557
    8. 'grand' → logprob: -7.650763034820557
    9. 'prof' → logprob: -8.275763511657715
    10. 'high' → logprob: -8.400763511657715

Token 563: ' au' (ID: 2791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6129021048545837
    2. ',' → logprob: -1.7379021644592285
    3. 'tin' → logprob: -1.9879021644592285
    4. ')' → logprob: -2.8629021644592285
    5. '(t' → logprob: -3.3629021644592285
    6. '   ' → logprob: -3.9879021644592285
    7. 't' → logprob: -5.1129021644592285
    8. ' (' → logprob: -5.3629021644592285
    9. ' ,' → logprob: -5.7379021644592285
    10. ',t' → logprob: -5.9879021644592285

Token 564: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.000990295666269958
    2. 'tin' → logprob: -7.375990390777588
    3. 'minimum' → logprob: -8.25098991394043
    4. 'tout' → logprob: -9.75098991394043
    5. ' min' → logprob: -10.87598991394043
    6. ' minimum' → logprob: -12.62598991394043
    7. 'moins' → logprob: -12.75098991394043
    8. 'max' → logprob: -12.87598991394043
    9. '0' → logprob: -13.00098991394043
    10. 'minimal' → logprob: -13.12598991394043

Token 565: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8502130508422852
    2. ' for' → logprob: -1.4752130508422852
    3. 'for' → logprob: -1.6002130508422852
    4. ')' → logprob: -2.850213050842285
    5. 'arr' → logprob: -3.225213050842285
    6. 'prev' → logprob: -4.225213050842285
    7. ',' → logprob: -4.725213050842285
    8. ')
' → logprob: -5.100213050842285
    9. 'last' → logprob: -6.100213050842285
    10. 'while' → logprob: -6.475213050842285

Token 566: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.03418027237057686
    2. 'tout' → logprob: -4.034180164337158
    3. ' tin' → logprob: -4.284180164337158
    4. ' ' → logprob: -7.659180164337158
    5. '   ' → logprob: -8.034180641174316
    6. 'lambda' → logprob: -8.034180641174316
    7. ' tout' → logprob: -8.784180641174316
    8. ' ' → logprob: -9.034180641174316
    9. ' lambda' → logprob: -9.034180641174316
    10. '  ' → logprob: -9.534180641174316

Token 567: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5362884998321533
    2. '   ' → logprob: -1.6612884998321533
    3. ' for' → logprob: -2.4112884998321533
    4. 'prev' → logprob: -3.1612884998321533
    5. 'parent' → logprob: -3.4112884998321533
    6. 'while' → logprob: -3.6612884998321533
    7. 'arr' → logprob: -4.661288261413574
    8. ',' → logprob: -5.786288261413574
    9. ')' → logprob: -5.786288261413574
    10. 'last' → logprob: -5.911288261413574

Token 568: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014316054061055183
    2. ' )' → logprob: -4.514316082000732
    3. ')
' → logprob: -6.139316082000732
    4. '))' → logprob: -7.514316082000732
    5. ')#' → logprob: -9.139315605163574
    6. ' )
' → logprob: -9.639315605163574
    7. '   ' → logprob: -9.764315605163574
    8. ')
' → logprob: -9.889315605163574
    9. '),' → logprob: -10.264315605163574
    10. ')))' → logprob: -10.264315605163574

Token 569: 'quoi' (ID: 27876)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.7458528280258179
    2. 'tin' → logprob: -1.9958528280258179
    3. ' idx' → logprob: -2.1208529472351074
    4. ')' → logprob: -2.1208529472351074
    5. 'idx' → logprob: -2.4958529472351074
    6. 'i' → logprob: -2.8708529472351074
    7. 'tout' → logprob: -2.8708529472351074
    8. 'x' → logprob: -3.4958529472351074
    9. '#' → logprob: -3.6208529472351074
    10. 'u' → logprob: -3.9958529472351074

Token 570: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07225524634122849
    2. '?)' → logprob: -3.1972551345825195
    3. ' )' → logprob: -4.3222551345825195
    4. ' ' → logprob: -4.8222551345825195
    5. ' ?)' → logprob: -5.6972551345825195
    6. '?' → logprob: -6.0722551345825195
    7. ')?' → logprob: -7.4472551345825195
    8. ' ?' → logprob: -8.32225513458252
    9. 'tin' → logprob: -8.94725513458252
    10. 'ça' → logprob: -9.07225513458252

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1456068456172943
    2. ')
' → logprob: -2.020606756210327
    3. '   ' → logprob: -6.395606994628906
    4. ' )' → logprob: -7.270606994628906
    5. ' )
' → logprob: -8.270606994628906
    6. ')
' → logprob: -8.645606994628906
    7. ' ' → logprob: -10.770606994628906
    8. ')

' → logprob: -10.895606994628906
    9. '))' → logprob: -11.395606994628906
    10. '?)' → logprob: -11.520606994628906

Token 572: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5426703095436096
    2. 'while' → logprob: -1.2926702499389648
    3. 'parent' → logprob: -2.667670249938965
    4. 'prev' → logprob: -3.292670249938965
    5. 'last' → logprob: -4.542670249938965
    6. '   ' → logprob: -5.417670249938965
    7. 'if' → logprob: -5.417670249938965
    8. 'stack' → logprob: -6.417670249938965
    9. 'arr' → logprob: -6.667670249938965
    10. 'parents' → logprob: -6.667670249938965

Token 573: ' hist' (ID: 3124)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1949557065963745
    2. 'for' → logprob: -1.5699557065963745
    3. 'stack' → logprob: -2.069955825805664
    4. 'last' → logprob: -2.194955825805664
    5. 'prev' → logprob: -2.194955825805664
    6. 'parent' → logprob: -3.569955825805664
    7. 'cur' → logprob: -4.444955825805664
    8. 'arr' → logprob: -4.819955825805664
    9. 'current' → logprob: -5.194955825805664
    10. 'rem' → logprob: -5.569955825805664

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5260177254676819
    2. ' =' → logprob: -0.9010177254676819
    3. '=[]' → logprob: -5.901017665863037
    4. ',' → logprob: -10.026018142700195
    5. '=[]
' → logprob: -10.401018142700195
    6. '=[' → logprob: -10.651018142700195
    7. 's' → logprob: -11.651018142700195
    8. ' ' → logprob: -11.901018142700195
    9. '=[]
' → logprob: -12.526018142700195
    10. '[]' → logprob: -12.651018142700195

Token 575: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09043312817811966
    2. '[' → logprob: -3.215433120727539
    3. '[-' → logprob: -3.340433120727539
    4. '[t' → logprob: -4.590433120727539
    5. '[]
' → logprob: -7.590433120727539
    6. '[]}' → logprob: -10.715433120727539
    7. '[T' → logprob: -10.840433120727539
    8. '0' → logprob: -10.840433120727539
    9. '[len' → logprob: -10.840433120727539
    10. '{}' → logprob: -10.965433120727539

Token 576: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20540808141231537
    2. 'while' → logprob: -1.8304080963134766
    3. '   ' → logprob: -4.455408096313477
    4. ' for' → logprob: -4.455408096313477
    5. ' while' → logprob: -6.955408096313477
    6. 'prev' → logprob: -8.080408096313477
    7. 'last' → logprob: -8.205408096313477
    8. 'arr' → logprob: -9.330408096313477
    9. 'idx' → logprob: -9.455408096313477
    10. 'cur' → logprob: -9.455408096313477

Token 577: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10284752398729324
    2. 'while' → logprob: -2.3528475761413574
    3. ' for' → logprob: -6.977847576141357
    4. 'last' → logprob: -8.1028470993042
    5. 'arr' → logprob: -8.2278470993042
    6. 'prev' → logprob: -8.2278470993042
    7. 'idx' → logprob: -8.7278470993042
    8. ' while' → logprob: -8.9778470993042
    9. 'res' → logprob: -9.3528470993042
    10. 'if' → logprob: -9.4778470993042

Token 578: ' node' (ID: 4596)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8411222100257874
    2. 'v' → logprob: -1.0911221504211426
    3. 'u' → logprob: -1.5911221504211426
    4. 'node' → logprob: -4.466122150421143
    5. ' v' → logprob: -6.091122150421143
    6. 'a' → logprob: -6.341122150421143
    7. 'c' → logprob: -6.341122150421143
    8. ' u' → logprob: -6.341122150421143
    9. ' x' → logprob: -6.466122150421143
    10. 'j' → logprob: -6.591122150421143

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03381996974349022
    2. 'in' → logprob: -3.4088199138641357
    3. '   ' → logprob: -9.033820152282715
    4. ',' → logprob: -11.033820152282715
    5. ' ' → logprob: -11.908820152282715
    6. '_in' → logprob: -12.533820152282715
    7. '	in' → logprob: -12.533820152282715
    8. '):
' → logprob: -13.221320152282715
    9. ')' → logprob: -13.346320152282715
    10. '  ' → logprob: -13.346320152282715

Token 580: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.014290554448962212
    2. ' arr' → logprob: -4.3892903327941895
    3. 'cs' → logprob: -6.3892903327941895
    4. ' cs' → logprob: -9.889290809631348
    5. 'bit' → logprob: -11.764290809631348
    6. 'res' → logprob: -12.014290809631348
    7. 'range' → logprob: -12.264290809631348
    8. '   ' → logprob: -12.264290809631348
    9. '	arr' → logprob: -12.639290809631348
    10. ' ' → logprob: -13.014290809631348

Token 581: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5763529539108276
    2. ':' → logprob: -0.8263529539108276
    3. '       ' → logprob: -8.451353073120117
    4. '   ' → logprob: -9.451353073120117
    5. '):
' → logprob: -9.701353073120117
    6. ',' → logprob: -10.701353073120117
    7. ':

' → logprob: -11.326353073120117
    8. ':
' → logprob: -11.701353073120117
    9. '[' → logprob: -12.576353073120117
    10. '[:-' → logprob: -12.701353073120117

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04647894576191902
    2. 'if' → logprob: -4.046478748321533
    3. 'while' → logprob: -4.671478748321533
    4. ' if' → logprob: -4.921478748321533
    5. '   ' → logprob: -5.046478748321533
    6. ' while' → logprob: -5.421478748321533
    7. '```' → logprob: -8.421479225158691
    8. 'hist' → logprob: -9.921479225158691
    9. 's' → logprob: -10.171479225158691
    10. ',' → logprob: -11.421479225158691

Token 583: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3862568140029907
    2. 'idx' → logprob: -1.7612568140029907
    3. 'hist' → logprob: -1.8862568140029907
    4. 'l' → logprob: -2.011256694793701
    5. 'pos' → logprob: -2.636256694793701
    6. 'while' → logprob: -3.261256694793701
    7. 'for' → logprob: -3.511256694793701
    8. 'res' → logprob: -3.636256694793701
    9. 'p' → logprob: -3.886256694793701
    10. 'import' → logprob: -4.386256694793701

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3332586884498596
    2. '=' → logprob: -1.3332586288452148
    3. '.append' → logprob: -4.708258628845215
    4. 'um' → logprob: -5.458258628845215
    5. 'z' → logprob: -6.458258628845215
    6. '=len' → logprob: -6.708258628845215
    7. 'ize' → logprob: -6.958258628845215
    8. 'ub' → logprob: -7.458258628845215
    9. 't' → logprob: -7.583258628845215
    10. '   ' → logprob: -8.083258628845215

Token 585: ' ' (ID: 220)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.07319919764995575
    2. 'len' → logprob: -3.6981992721557617
    3. '0' → logprob: -4.198199272155762
    4. 'tout' → logprob: -4.198199272155762
    5. 'node' → logprob: -4.948199272155762
    6. 'hist' → logprob: -5.448199272155762
    7. 'N' → logprob: -6.698199272155762
    8. 'bin' → logprob: -7.198199272155762
    9. 'tin' → logprob: -7.198199272155762
    10. '1' → logprob: -7.573199272155762

Token 586: '1' (ID: 16)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.13634337484836578
    2. 'tout' → logprob: -2.511343479156494
    3. 'node' → logprob: -4.011343479156494
    4. 'len' → logprob: -4.386343479156494
    5. 'tin' → logprob: -4.761343479156494
    6. 'hist' → logprob: -6.011343479156494
    7. 'N' → logprob: -6.386343479156494
    8. 'bin' → logprob: -7.011343479156494
    9. '0' → logprob: -7.386343479156494
    10. 'k' → logprob: -8.761343002319336

Token 587: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04586859419941902
    2. '   ' → logprob: -3.4208686351776123
    3. '    
' → logprob: -5.545868396759033
    4. '+' → logprob: -6.170868396759033
    5. 'while' → logprob: -6.795868396759033
    6. '       ' → logprob: -7.045868396759033
    7. '<|end|>' → logprob: -7.295868396759033
    8. '
' → logprob: -7.545868396759033
    9. ' 
' → logprob: -7.670868396759033
    10. '  
' → logprob: -7.795868396759033

Token 588: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5090487003326416
    2. '
' → logprob: -1.6340487003326416
    3. '    
' → logprob: -1.8840487003326416
    4. '+' → logprob: -2.2590487003326416
    5. '<|end|>' → logprob: -2.3840487003326416
    6. ' 
' → logprob: -2.8840487003326416
    7. '       ' → logprob: -3.5090487003326416
    8. '        
' → logprob: -3.5090487003326416
    9. '  
' → logprob: -4.0090484619140625
    10. ',' → logprob: -4.3840484619140625

Token 589: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4367327392101288
    2. 'while' → logprob: -1.3117327690124512
    3. 'if' → logprob: -3.686732769012451
    4. 'parent' → logprob: -4.311732769012451
    5. 'idx' → logprob: -4.436732769012451
    6. 'bit' → logprob: -4.561732769012451
    7. 'p' → logprob: -5.186732769012451
    8. 'pos' → logprob: -5.436732769012451
    9. 'l' → logprob: -5.686732769012451
    10. 'par' → logprob: -6.061732769012451

Token 590: ' adj' (ID: 20251)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.7738357782363892
    2. 'v' → logprob: -0.8988357782363892
    3. 'w' → logprob: -3.2738356590270996
    4. 'u' → logprob: -3.7738356590270996
    5. 'x' → logprob: -4.1488356590271
    6. 'ch' → logprob: -4.3988356590271
    7. 'neighbor' → logprob: -4.5238356590271
    8. 'c' → logprob: -4.6488356590271
    9. 'adj' → logprob: -5.2738356590271
    10. 'prev' → logprob: -6.3988356590271

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14322392642498016
    2. 'in' → logprob: -2.018224000930786
    3. 'ent' → logprob: -9.143223762512207
    4. 'd' → logprob: -9.643223762512207
    5. ' ' → logprob: -9.768223762512207
    6. 'node' → logprob: -9.893223762512207
    7. 's' → logprob: -10.143223762512207
    8. '   ' → logprob: -10.268223762512207
    9. 'v' → logprob: -10.393223762512207
    10. 'e' → logprob: -10.643223762512207

Token 592: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06575171649456024
    2. 'hist' → logprob: -2.815751791000366
    3. 'cs' → logprob: -6.315751552581787
    4. ' es' → logprob: -6.690751552581787
    5. ' hist' → logprob: -7.815751552581787
    6. 'bit' → logprob: -8.815752029418945
    7. '(es' → logprob: -9.690752029418945
    8. '(hist' → logprob: -10.315752029418945
    9. 'arr' → logprob: -11.065752029418945
    10. '[' → logprob: -11.315752029418945

Token 593: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.869017852295656e-06
    2. 'node' → logprob: -12.000006675720215
    3. '[' → logprob: -14.375006675720215
    4. '(node' → logprob: -17.50000762939453
    5. ' [' → logprob: -18.00000762939453
    6. ',node' → logprob: -18.12500762939453
    7. '[arr' → logprob: -18.62500762939453
    8. '[n' → logprob: -18.62500762939453
    9. '=node' → logprob: -18.62500762939453
    10. 'adj' → logprob: -18.75000762939453

Token 594: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7145044803619385
    2. ':' → logprob: -0.9645044803619385
    3. ']:
' → logprob: -2.3395044803619385
    4. ']:' → logprob: -3.4645044803619385
    5. '           ' → logprob: -7.464504241943359
    6. '       ' → logprob: -8.08950424194336
    7. '):
' → logprob: -8.71450424194336
    8. '   ' → logprob: -9.21450424194336
    9. ':
' → logprob: -9.46450424194336
    10. '[' → logprob: -9.46450424194336

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005311666056513786
    2. ' if' → logprob: -5.505311489105225
    3. '<|end|>' → logprob: -8.255311965942383
    4. '               ' → logprob: -8.380311965942383
    5. 'if' → logprob: -8.755311965942383
    6. '       ' → logprob: -8.880311965942383
    7. '            ' → logprob: -9.005311965942383
    8. '   ' → logprob: -9.505311965942383
    9. '          ' → logprob: -9.630311965942383
    10. '	       ' → logprob: -10.380311965942383

Token 596: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007803229382261634
    2. '           ' → logprob: -7.25078010559082
    3. ' if' → logprob: -9.75078010559082
    4. '               ' → logprob: -11.50078010559082
    5. '       ' → logprob: -14.12578010559082
    6. 's' → logprob: -14.62578010559082
    7. '   ' → logprob: -15.37578010559082
    8. '            ' → logprob: -16.37578010559082
    9. '```' → logprob: -16.50078010559082
    10. '            
' → logprob: -16.62578010559082

Token 597: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.057538799941539764
    2. 'tout' → logprob: -3.1825387477874756
    3. 'hist' → logprob: -4.932538986206055
    4. 'adj' → logprob: -5.432538986206055
    5. 'len' → logprob: -7.557538986206055
    6. 'not' → logprob: -7.807538986206055
    7. ' tin' → logprob: -7.807538986206055
    8. '0' → logprob: -8.057538986206055
    9. 'bin' → logprob: -8.182538986206055
    10. 'parent' → logprob: -9.057538986206055

Token 598: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03488173335790634
    2. '[node' → logprob: -3.409881830215454
    3. '[arr' → logprob: -7.909881591796875
    4. 'adj' → logprob: -7.909881591796875
    5. '[t' → logprob: -8.409881591796875
    6. '[s' → logprob: -9.284881591796875
    7. 'node' → logprob: -10.409881591796875
    8. '(adj' → logprob: -10.659881591796875
    9. '[u' → logprob: -10.909881591796875
    10. '[tmp' → logprob: -11.159881591796875

Token 599: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0011038987431675196
    2. 'node' → logprob: -6.87610387802124
    3. 'arr' → logprob: -9.876104354858398
    4. ' adj' → logprob: -11.626104354858398
    5. 'hist' → logprob: -12.126104354858398
    6. '(adj' → logprob: -13.001104354858398
    7. '   ' → logprob: -13.751104354858398
    8. '[' → logprob: -15.251104354858398
    9. '[node' → logprob: -15.251104354858398
    10. ')' → logprob: -15.751104354858398

Token 600: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1666635423898697
    2. ']>' → logprob: -2.166663646697998
    3. '>' → logprob: -3.541663646697998
    4. ']>=' → logprob: -5.416663646697998
    5. ' >' → logprob: -6.416663646697998
    6. '[' → logprob: -6.541663646697998
    7. ']<' → logprob: -6.791663646697998
    8. ' ]' → logprob: -7.541663646697998
    9. '<' → logprob: -7.916663646697998
    10. '   ' → logprob: -9.41666316986084

Token 601: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07934940606355667
    2. ' >' → logprob: -2.7043495178222656
    3. '>=' → logprob: -5.454349517822266
    4. '<' → logprob: -5.454349517822266
    5. ' <' → logprob: -7.579349517822266
    6. ' >=' → logprob: -8.704349517822266
    7. '<=' → logprob: -9.829349517822266
    8. '[' → logprob: -10.704349517822266
    9. ' ' → logprob: -11.204349517822266
    10. '   ' → logprob: -11.829349517822266

Token 602: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.000909317925106734
    2. 'tout' → logprob: -7.250909328460693
    3. 's' → logprob: -9.125908851623535
    4. '0' → logprob: -11.000908851623535
    5. '   ' → logprob: -11.250908851623535
    6. 't' → logprob: -11.375908851623535
    7. ' tin' → logprob: -11.500908851623535
    8. '=' → logprob: -11.500908851623535
    9. 'tid' → logprob: -12.750908851623535
    10. 'tan' → logprob: -13.000908851623535

Token 603: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.34869176149368286
    2. 'node' → logprob: -1.223691701889038
    3. '[' → logprob: -9.223691940307617
    4. ' node' → logprob: -9.598691940307617
    5. '[arr' → logprob: -10.848691940307617
    6. '	node' → logprob: -11.473691940307617
    7. 'arr' → logprob: -11.598691940307617
    8. '=node' → logprob: -11.723691940307617
    9. '(node' → logprob: -12.098691940307617
    10. ',node' → logprob: -12.098691940307617

Token 604: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12320861965417862
    2. 'and' → logprob: -2.748208522796631
    3. ' and' → logprob: -2.998208522796631
    4. ']:
' → logprob: -6.998208522796631
    5. '           ' → logprob: -7.498208522796631
    6. ']:' → logprob: -8.623208999633789
    7. ' ]' → logprob: -9.123208999633789
    8. '               ' → logprob: -9.873208999633789
    9. '```' → logprob: -10.748208999633789
    10. '       ' → logprob: -10.873208999633789

Token 605: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4327259659767151
    2. '               ' → logprob: -1.0577259063720703
    3. '           ' → logprob: -5.93272590637207
    4. 'and' → logprob: -7.05772590637207
    5. '              ' → logprob: -9.30772590637207
    6. '```' → logprob: -9.68272590637207
    7. '             ' → logprob: -10.05772590637207
    8. ':
' → logprob: -10.43272590637207
    9. '                ' → logprob: -10.43272590637207
    10. '                   ' → logprob: -10.55772590637207

Token 606: ' continue' (ID: 4901)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7104024887084961
    2. 'continue' (adapté à ' continue') → logprob: -1.710402488708496
    3. 'if' → logprob: -1.960402488708496
    4. ' continue' → logprob: -2.585402488708496
    5. '               ' → logprob: -2.960402488708496
    6. ' if' → logprob: -3.585402488708496
    7. ' s' → logprob: -4.210402488708496
    8. '                   ' → logprob: -4.210402488708496
    9. '           ' → logprob: -6.835402488708496
    10. '                ' → logprob: -8.210402488708496

Token 607: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012696112506091595
    2. '               ' → logprob: -5.137696266174316
    3. ' s' → logprob: -5.512696266174316
    4. ' if' → logprob: -6.762696266174316
    5. 's' → logprob: -6.887696266174316
    6. 'if' → logprob: -9.012696266174316
    7. '```' → logprob: -9.387696266174316
    8. '                   ' → logprob: -9.887696266174316
    9. '            
' → logprob: -9.887696266174316
    10. '
' → logprob: -10.387696266174316

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06615950167179108
    2. 's' → logprob: -3.69115948677063
    3. ' s' → logprob: -4.191159725189209
    4. ' if' → logprob: -4.316159725189209
    5. 'if' → logprob: -5.066159725189209
    6. '       ' → logprob: -5.566159725189209
    7. '               ' → logprob: -8.94115924835205
    8. 'continue' → logprob: -9.31615924835205
    9. 'bit' → logprob: -9.94115924835205
    10. ' continue' → logprob: -10.19115924835205

Token 609: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0923570916056633
    2. 's' → logprob: -2.5923571586608887
    3. ' if' → logprob: -5.842357158660889
    4. 'res' → logprob: -5.967357158660889
    5. '           ' → logprob: -6.092357158660889
    6. 'count' → logprob: -6.717357158660889
    7. 'l' → logprob: -7.217357158660889
    8. 'size' → logprob: -7.467357158660889
    9. ' s' → logprob: -7.717357158660889
    10. 'cnt' → logprob: -7.717357158660889

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744572937488556
    2. '=' → logprob: -0.9744572639465332
    3. '   ' → logprob: -9.599457740783691
    4. '+=' → logprob: -9.599457740783691
    5. '=s' → logprob: -9.849457740783691
    6. 's' → logprob: -9.849457740783691
    7. ' +=' → logprob: -9.974457740783691
    8. '=query' → logprob: -10.974457740783691
    9. ' ' → logprob: -11.224457740783691
    10. '-=' → logprob: -11.474457740783691

Token 611: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0012659442145377398
    2. ' bit' → logprob: -6.751266002655029
    3. 'tout' → logprob: -10.751265525817871
    4. 'hist' → logprob: -11.001265525817871
    5. 'len' → logprob: -11.376265525817871
    6. '(bit' → logprob: -12.001265525817871
    7. 'bin' → logprob: -12.126265525817871
    8. 's' → logprob: -12.126265525817871
    9. 'res' → logprob: -12.251265525817871
    10. '1' → logprob: -12.376265525817871

Token 612: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.3902033970225602e-05
    2. '.' → logprob: -11.500014305114746
    3. ' .' → logprob: -12.625014305114746
    4. 'query' → logprob: -15.375014305114746
    5. '.Query' → logprob: -16.12501335144043
    6. '=query' → logprob: -17.75001335144043
    7. ' query' → logprob: -17.87501335144043
    8. '-query' → logprob: -18.50001335144043
    9. '.add' → logprob: -19.00001335144043
    10. ').' → logprob: -19.25001335144043

Token 613: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00016825977945700288
    2. '(' → logprob: -8.875167846679688
    3. 't' → logprob: -11.000167846679688
    4. ' (' → logprob: -12.250167846679688
    5. '(k' → logprob: -12.625167846679688
    6. 'k' → logprob: -13.375167846679688
    7. '((' → logprob: -14.625167846679688
    8. '(
' → logprob: -14.750167846679688
    9. '   ' → logprob: -15.125167846679688
    10. '	t' → logprob: -16.375167846679688

Token 614: 'in' (ID: 258)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.14635822176933289
    2. 'tin' → logprob: -2.2713582515716553
    3. 't' → logprob: -3.7713582515716553
    4. 'in' → logprob: -5.771358013153076
    5. '[t' → logprob: -6.396358013153076
    6. 'tout' → logprob: -6.521358013153076
    7. '(' → logprob: -7.146358013153076
    8. ' tin' → logprob: -7.521358013153076
    9. '(in' → logprob: -8.271358489990234
    10. ' (' → logprob: -8.396358489990234

Token 615: '[' (ID: 58)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6175166964530945
    2. '[t' → logprob: -0.9925166964530945
    3. '[node' → logprob: -2.6175167560577393
    4. '(node' → logprob: -4.36751651763916
    5. '[' → logprob: -5.74251651763916
    6. '(' → logprob: -6.99251651763916
    7. 't' → logprob: -9.36751651763916
    8. 'node' → logprob: -10.36751651763916
    9. '[in' → logprob: -10.61751651763916
    10. '[u' → logprob: -10.99251651763916

Token 616: 'adj' (ID: 57001)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3244684934616089
    2. 'adj' → logprob: -1.3244684934616089
    3. 'tout' → logprob: -4.574468612670898
    4. '[node' → logprob: -8.699468612670898
    5. 'tin' → logprob: -9.074468612670898
    6. ' node' → logprob: -9.199468612670898
    7. '(adj' → logprob: -9.574468612670898
    8. '(node' → logprob: -9.949468612670898
    9. 'todo' → logprob: -10.261968612670898
    10. 'arr' → logprob: -10.261968612670898

Token 617: '],' (ID: 2155)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.2218666523694992
    2. '[t' → logprob: -1.7218666076660156
    3. '[' → logprob: -4.596866607666016
    4. '[val' → logprob: -5.846866607666016
    5. '(node' → logprob: -5.971866607666016
    6. '(t' → logprob: -6.096866607666016
    7. ',' → logprob: -6.346866607666016
    8. '[arr' → logprob: -8.221866607666016
    9. ',t' → logprob: -8.721866607666016
    10. ',node' → logprob: -8.971866607666016

Token 618: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -9.610702363715973e-06
    2. ' tout' → logprob: -12.125009536743164
    3. '   ' → logprob: -13.125009536743164
    4. 't' → logprob: -14.500009536743164
    5. ' ' → logprob: -14.875009536743164
    6. 'tin' → logprob: -15.125009536743164
    7. '  ' → logprob: -15.625009536743164
    8. 'tou' → logprob: -15.625009536743164
    9. '```' → logprob: -16.250009536743164
    10. ' ' → logprob: -16.625009536743164

Token 619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032872750889509916
    2. '[node' → logprob: -5.753287315368652
    3. 'adj' → logprob: -9.253287315368652
    4. 'node' → logprob: -12.253287315368652
    5. '(adj' → logprob: -12.503287315368652
    6. '```' → logprob: -13.378287315368652
    7. ')' → logprob: -14.503287315368652
    8. '[arr' → logprob: -14.503287315368652
    9. '[t' → logprob: -14.878287315368652
    10. '[u' → logprob: -15.503287315368652

Token 620: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0002407282590866089
    2. 'node' → logprob: -8.750240325927734
    3. '[' → logprob: -9.625240325927734
    4. '(adj' → logprob: -11.875240325927734
    5. '[node' → logprob: -12.125240325927734
    6. ' adj' → logprob: -12.750240325927734
    7. 'aj' → logprob: -15.125240325927734
    8. 'adm' → logprob: -15.250240325927734
    9. '_adj' → logprob: -16.625240325927734
    10. ']' → logprob: -16.750240325927734

Token 621: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03132818266749382
    2. '[node' → logprob: -3.5313282012939453
    3. '])
' → logprob: -7.031328201293945
    4. ')' → logprob: -7.781328201293945
    5. '[' → logprob: -8.531328201293945
    6. ']' → logprob: -10.156328201293945
    7. '])
' → logprob: -11.156328201293945
    8. '])

' → logprob: -12.281328201293945
    9. '(node' → logprob: -12.781328201293945
    10. '))' → logprob: -12.781328201293945

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7290863990783691
    2. ')' → logprob: -0.9790863990783691
    3. 's' → logprob: -2.854086399078369
    4. ' s' → logprob: -3.479086399078369
    5. '       ' → logprob: -3.854086399078369
    6. '+' → logprob: -4.854086399078369
    7. ')
' → logprob: -5.229086399078369
    8. '```' → logprob: -5.604086399078369
    9. '<|end|>' → logprob: -5.979086399078369
    10. '
' → logprob: -5.979086399078369

Token 623: ' res' (ID: 694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13441410660743713
    2. ' s' → logprob: -2.6344141960144043
    3. 'if' → logprob: -3.7594141960144043
    4. '           ' → logprob: -4.009414196014404
    5. ' if' → logprob: -4.759414196014404
    6. ' bit' → logprob: -6.259414196014404
    7. 'bit' → logprob: -6.384414196014404
    8. 'res' (adapté à ' res') → logprob: -8.384413719177246
    9. '       ' → logprob: -9.884413719177246
    10. ' res' → logprob: -10.259413719177246

Token 624: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03043723665177822
    2. ' -=' → logprob: -3.5304372310638428
    3. '-' → logprob: -7.405437469482422
    4. '   ' → logprob: -10.280437469482422
    5. '=' → logprob: -10.655437469482422
    6. '           ' → logprob: -11.530437469482422
    7. '+=' → logprob: -11.905437469482422
    8. '       ' → logprob: -13.155437469482422
    9. '    ' → logprob: -14.155437469482422
    10. ' -' → logprob: -14.280437469482422

Token 625: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.018943211063742638
    2. ' val' → logprob: -4.6439433097839355
    3. 's' → logprob: -4.7689433097839355
    4. '(val' → logprob: -8.018942832946777
    5. ' s' → logprob: -8.893942832946777
    6. '           ' → logprob: -9.143942832946777
    7. '(s' → logprob: -10.643942832946777
    8. '   ' → logprob: -11.393942832946777
    9. '	val' → logprob: -11.768942832946777
    10. '1' → logprob: -12.018942832946777

Token 626: '*(' (ID: 14793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6517925262451172
    2. '
' → logprob: -0.9017925262451172
    3. ' 
' → logprob: -4.151792526245117
    4. '       ' → logprob: -4.276792526245117
    5. '<|end|>' → logprob: -4.401792526245117
    6. '  
' → logprob: -4.776792526245117
    7. '    
' → logprob: -5.401792526245117
    8. '               ' → logprob: -5.651792526245117
    9. '            
' → logprob: -6.151792526245117
    10. '        
' → logprob: -6.276792526245117

Token 627: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00034261439577676356
    2. 's' → logprob: -8.75034236907959
    3. '(val' → logprob: -8.75034236907959
    4. ' val' → logprob: -10.87534236907959
    5. '	val' → logprob: -13.12534236907959
    6. 'res' → logprob: -13.25034236907959
    7. '[val' → logprob: -14.50034236907959
    8. '   ' → logprob: -14.75034236907959
    9. '
' → logprob: -14.75034236907959
    10. '(s' → logprob: -15.37534236907959

Token 628: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6621896624565125
    2. ')' → logprob: -1.1621897220611572
    3. '+' → logprob: -2.4121897220611572
    4. ' -' → logprob: -2.9121897220611572
    5. ' )' → logprob: -3.9121897220611572
    6. ' +' → logprob: -5.162189483642578
    7. '<|end|>' → logprob: -7.537189483642578
    8. '```' → logprob: -7.912189483642578
    9. ' ' → logprob: -8.412189483642578
    10. '-)' → logprob: -8.537189483642578

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -14.375036239624023
    4. 'bit' → logprob: -15.625036239624023
    5. ' bit' → logprob: -15.875036239624023
    6. '   ' → logprob: -16.500036239624023
    7. '2' → logprob: -16.625036239624023
    8. '```' → logprob: -16.625036239624023
    9. ')' → logprob: -17.250036239624023
    10. '

' → logprob: -17.312536239624023

Token 630: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.3094211518764496
    2. '//' → logprob: -1.684421181678772
    3. ')' → logprob: -2.6844210624694824
    4. ' //' → logprob: -4.434421062469482
    5. ' )' → logprob: -8.80942153930664
    6. ')>>' → logprob: -9.30942153930664
    7. '```' → logprob: -9.55942153930664
    8. '   ' → logprob: -10.05942153930664
    9. '
' → logprob: -10.68442153930664
    10. '           ' → logprob: -11.18442153930664

Token 631: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.125
    4. '1' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. '
' → logprob: -18.875
    7. '

' → logprob: -19.5
    8. '22' → logprob: -19.75
    9. '۲' → logprob: -19.8125
    10. 'two' → logprob: -19.875

Token 632: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4584074914455414
    2. '       ' → logprob: -1.0834075212478638
    3. '<|end|>' → logprob: -4.083407402038574
    4. '
' → logprob: -5.083407402038574
    5. ',' → logprob: -6.583407402038574
    6. '               ' → logprob: -6.958407402038574
    7. '   ' → logprob: -7.208407402038574
    8. '        
' → logprob: -7.208407402038574
    9. ')' → logprob: -7.708407402038574
    10. '<|end|>' → logprob: -7.958407402038574

Token 633: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5007058382034302
    2. '           ' → logprob: -1.3757058382034302
    3. ')' → logprob: -3.3757057189941406
    4. '       ' → logprob: -3.7507057189941406
    5. ' 
' → logprob: -4.375705718994141
    6. '<|end|>' → logprob: -4.375705718994141
    7. ' bit' → logprob: -4.750705718994141
    8. '   ' → logprob: -5.000705718994141
    9. '               ' → logprob: -5.000705718994141
    10. 'bit' → logprob: -5.125705718994141

Token 634: ' supprimer' (ID: 119553)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5170541405677795
    2. ' s' → logprob: -1.2670540809631348
    3. ' bit' → logprob: -2.7670540809631348
    4. '<|end|>' → logprob: -3.7670540809631348
    5. ')' → logprob: -4.017054080963135
    6. 'bit' → logprob: -5.267054080963135
    7. ' ' → logprob: -5.392054080963135
    8. '           ' → logprob: -5.892054080963135
    9. '       ' → logprob: -6.892054080963135
    10. '
' → logprob: -7.017054080963135

Token 635: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: ' morceaux' (ID: 133321)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2366780042648315
    2. ' morceaux' → logprob: -2.236678123474121
    3. 'part' → logprob: -2.361678123474121
    4. 'segments' → logprob: -2.986678123474121
    5. 'ranges' → logprob: -3.361678123474121
    6. 'pairs' → logprob: -3.361678123474121
    7. 'val' → logprob: -3.361678123474121
    8. 'con' → logprob: -3.486678123474121
    9. 'com' → logprob: -3.611678123474121
    10. ')' → logprob: -3.611678123474121

Token 637: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022969059646129608
    2. '       ' → logprob: -3.8979690074920654
    3. '               ' → logprob: -6.7729692459106445
    4. ',' → logprob: -7.8979692459106445
    5. '<|end|>' → logprob: -7.8979692459106445
    6. '   ' → logprob: -8.647969245910645
    7. '
' → logprob: -9.022969245910645
    8. ')' → logprob: -9.272969245910645
    9. '                   ' → logprob: -10.897969245910645
    10. ',
' → logprob: -10.897969245910645

Token 638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06594402343034744
    2. '       ' → logprob: -2.815943956375122
    3. ' bit' → logprob: -6.440944194793701
    4. 'bit' → logprob: -7.190944194793701
    5. ' s' → logprob: -7.690944194793701
    6. ',' → logprob: -8.440943717956543
    7. '<|end|>' → logprob: -8.440943717956543
    8. 's' → logprob: -8.815943717956543
    9. '```' → logprob: -8.815943717956543
    10. '               ' → logprob: -8.815943717956543

Token 639: ' s' (ID: 265)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.31460636854171753
    2. ' bit' → logprob: -1.9396064281463623
    3. '           ' → logprob: -2.3146064281463623
    4. ' s' → logprob: -4.689606189727783
    5. '       ' → logprob: -4.814606189727783
    6. 's' (adapté à ' s') → logprob: -4.814606189727783
    7. '   ' → logprob: -7.189606189727783
    8. ')' → logprob: -8.314606666564941
    9. '               ' → logprob: -8.564606666564941
    10. '
' → logprob: -9.064606666564941

Token 640: ' +=' (ID: 2757)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.30053889751434326
    2. '-=' → logprob: -2.300539016723633
    3. ' +=' → logprob: -2.425539016723633
    4. '+=' → logprob: -2.675539016723633
    5. '-' → logprob: -7.050539016723633
    6. '=' → logprob: -7.175539016723633
    7. '   ' → logprob: -8.925539016723633
    8. ' =' → logprob: -9.300539016723633
    9. ' -' → logprob: -9.300539016723633
    10. '*=' → logprob: -10.550539016723633

Token 641: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0012167827226221561
    2. 'bit' → logprob: -6.876216888427734
    3. ' val' → logprob: -8.626216888427734
    4. '1' → logprob: -13.501216888427734
    5. '	val' → logprob: -13.626216888427734
    6. 'res' → logprob: -14.751216888427734
    7. 's' → logprob: -15.001216888427734
    8. '   ' → logprob: -15.001216888427734
    9. '(val' → logprob: -15.126216888427734
    10. ' bit' → logprob: -15.251216888427734

Token 642: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31731826066970825
    2. '       ' → logprob: -1.3173182010650635
    3. '
' → logprob: -6.817318439483643
    4. '    
' → logprob: -7.192318439483643
    5. '           ' → logprob: -7.317318439483643
    6. '        
' → logprob: -7.692318439483643
    7. ',' → logprob: -7.942318439483643
    8. ' s' → logprob: -8.567317962646484
    9. ' bit' → logprob: -9.317317962646484
    10. ')' → logprob: -9.442317962646484

Token 643: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11503444612026215
    2. '       ' → logprob: -2.240034341812134
    3. 's' → logprob: -7.240034580230713
    4. '
' → logprob: -7.865034580230713
    5. ' s' → logprob: -8.115034103393555
    6. '    
' → logprob: -8.240034103393555
    7. '           ' → logprob: -9.115034103393555
    8. '        
' → logprob: -9.240034103393555
    9. 'for' → logprob: -9.490034103393555
    10. ' for' → logprob: -9.740034103393555

Token 644: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5436265468597412
    2. 'bit' (adapté à ' bit') → logprob: -0.9186265468597412
    3. 'res' → logprob: -4.29362678527832
    4. 'for' → logprob: -5.66862678527832
    5. 'results' → logprob: -6.29362678527832
    6. ' bit' → logprob: -7.16862678527832
    7. '       ' → logprob: -8.54362678527832
    8. 's' → logprob: -8.91862678527832
    9. '```' → logprob: -10.04362678527832
    10. ' for' → logprob: -10.16862678527832

Token 645: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008122475701384246
    2. '.' → logprob: -7.12581205368042
    3. '.remove' → logprob: -12.250812530517578
    4. '.query' → logprob: -13.125812530517578
    5. '.subtract' → logprob: -15.250812530517578
    6. ' .' → logprob: -15.375812530517578
    7. '.delete' → logprob: -16.125812530517578
    8. '.update' → logprob: -16.250812530517578
    9. '..' → logprob: -16.500812530517578
    10. '   ' → logprob: -17.125812530517578

Token 646: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -10.37503433227539
    3. '(node' → logprob: -13.37503433227539
    4. '(k' → logprob: -13.75003433227539
    5. '(
' → logprob: -16.37503433227539
    6. '(T' → logprob: -16.37503433227539
    7. '((' → logprob: -17.12503433227539
    8. ' (' → logprob: -17.62503433227539
    9. '(i' → logprob: -17.75003433227539
    10. '```' → logprob: -18.12503433227539

Token 647: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.050140172243118286
    2. 'tin' → logprob: -3.300140142440796
    3. '(t' → logprob: -5.800140380859375
    4. ' tin' → logprob: -5.925140380859375
    5. 'node' → logprob: -6.175140380859375
    6. 'i' → logprob: -6.550140380859375
    7. 'int' → logprob: -7.425140380859375
    8. '(node' → logprob: -7.425140380859375
    9. ' node' → logprob: -7.800140380859375
    10. 't' → logprob: -9.050140380859375

Token 648: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.901345038088039e-05
    2. '(node' → logprob: -9.750099182128906
    3. '[' → logprob: -10.125099182128906
    4. 'node' → logprob: -14.875099182128906
    5. '[
' → logprob: -15.625099182128906
    6. ',node' → logprob: -16.625099182128906
    7. ' node' → logprob: -17.000099182128906
    8. '[user' → logprob: -17.000099182128906
    9. ' [' → logprob: -18.750099182128906
    10. '[token' → logprob: -18.875099182128906

Token 649: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020580526324920356
    2. ' ,' → logprob: -8.625205993652344
    3. '],' → logprob: -11.750205993652344
    4. '),' → logprob: -11.750205993652344
    5. ',-' → logprob: -11.875205993652344
    6. '   ' → logprob: -13.500205993652344
    7. '-' → logprob: -14.375205993652344
    8. ' ' → logprob: -15.000205993652344
    9. ')' → logprob: -15.500205993652344
    10. ',
' → logprob: -15.500205993652344

Token 650: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0033710349816828966
    2. ' -' → logprob: -6.003371238708496
    3. '-s' → logprob: -7.253371238708496
    4. '-val' → logprob: -9.878371238708496
    5. '-int' → logprob: -10.503371238708496
    6. '-f' → logprob: -10.753371238708496
    7. '-x' → logprob: -12.003371238708496
    8. '-ex' → logprob: -12.128371238708496
    9. '-u' → logprob: -12.378371238708496
    10. '-t' → logprob: -12.378371238708496

Token 651: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282730847597122
    2. 's' → logprob: -2.2378273010253906
    3. ' s' → logprob: -13.23782730102539
    4. ' ' → logprob: -13.61282730102539
    5. '   ' → logprob: -13.98782730102539
    6. '           ' → logprob: -15.11282730102539
    7. '       ' → logprob: -15.48782730102539
    8. ')' → logprob: -15.86282730102539
    9. 'res' → logprob: -15.98782730102539
    10. '(s' → logprob: -16.61282730102539

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013416734291240573
    2. ')
' → logprob: -6.626341819763184
    3. '<|end|>' → logprob: -11.501341819763184
    4. '   ' → logprob: -12.751341819763184
    5. ' )' → logprob: -14.001341819763184
    6. '```' → logprob: -14.501341819763184
    7. ')

' → logprob: -15.251341819763184
    8. ')return' → logprob: -15.501341819763184
    9. ')
' → logprob: -15.626341819763184
    10. '<|end|>' → logprob: -15.626341819763184

Token 653: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013154742773622274
    2. '```' → logprob: -7.001315593719482
    3. 'hist' → logprob: -8.876315116882324
    4. '       ' → logprob: -9.251315116882324
    5. 'results' → logprob: -9.376315116882324
    6. ')' → logprob: -10.376315116882324
    7. ' results' → logprob: -11.251315116882324
    8. 'for' → logprob: -11.876315116882324
    9. ' hist' → logprob: -12.001315116882324
    10. '[' → logprob: -12.376315116882324

Token 654: ' hist' (ID: 3124)
  Prédit: 'hist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hist' (adapté à ' hist') → logprob: -0.5281411409378052
    2. '   ' → logprob: -0.9031411409378052
    3. ' hist' → logprob: -5.528141021728516
    4. '       ' → logprob: -7.153141021728516
    5. 'arr' → logprob: -9.903141021728516
    6. 'res' → logprob: -10.278141021728516
    7. ' ' → logprob: -10.528141021728516
    8. '  ' → logprob: -10.653141021728516
    9. '```' → logprob: -10.653141021728516
    10. '    ' → logprob: -11.153141021728516

Token 655: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.790129555156454e-05
    2. '.' → logprob: -9.625067710876465
    3. ' .' → logprob: -13.750067710876465
    4. '.app' → logprob: -15.125067710876465
    5. '.push' → logprob: -15.250067710876465
    6. '.ap' → logprob: -16.12506866455078
    7. 'append' → logprob: -16.50006866455078
    8. '.pop' → logprob: -16.87506866455078
    9. '.extend' → logprob: -18.50006866455078
    10. '.add' → logprob: -18.75006866455078

Token 656: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18376311659812927
    2. '((' → logprob: -1.8087631464004517
    3. '(t' → logprob: -6.058763027191162
    4. '(node' → logprob: -7.558763027191162
    5. 's' → logprob: -8.05876350402832
    6. '(' → logprob: -8.05876350402832
    7. '(-' → logprob: -8.43376350402832
    8. '(res' → logprob: -8.93376350402832
    9. '(val' → logprob: -9.80876350402832
    10. '((-' → logprob: -9.80876350402832

Token 657: 'tin' (ID: 63664)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2630689740180969
    2. 'tin' → logprob: -1.5130689144134521
    3. 's' → logprob: -5.388069152832031
    4. '(node' → logprob: -5.888069152832031
    5. ' node' → logprob: -6.638069152832031
    6. '   ' → logprob: -7.638069152832031
    7. '(t' → logprob: -8.013069152832031
    8. '(' → logprob: -8.700569152832031
    9. 't' → logprob: -8.825569152832031
    10. '(s' → logprob: -8.888069152832031

Token 658: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.392202976712724e-06
    2. '(node' → logprob: -12.750006675720215
    3. 'node' → logprob: -13.125006675720215
    4. ',node' → logprob: -13.875006675720215
    5. '[user' → logprob: -15.625006675720215
    6. '[
' → logprob: -16.3750057220459
    7. '[' → logprob: -16.3750057220459
    8. ')' → logprob: -17.1250057220459
    9. ')[' → logprob: -17.5000057220459
    10. '=node' → logprob: -17.7500057220459

Token 659: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005258689634501934
    2. '],' → logprob: -8.50052547454834
    3. ' ,' → logprob: -8.75052547454834
    4. '),' → logprob: -9.37552547454834
    5. ',s' → logprob: -10.00052547454834
    6. ',
' → logprob: -10.87552547454834
    7. ',),' → logprob: -12.37552547454834
    8. '[' → logprob: -13.25052547454834
    9. '-' → logprob: -13.25052547454834
    10. 's' → logprob: -13.62552547454834

Token 660: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0034526491072028875
    2. ' s' → logprob: -5.753452777862549
    3. '-s' → logprob: -8.37845230102539
    4. ')' → logprob: -11.25345230102539
    5. ')s' → logprob: -12.12845230102539
    6. '-' → logprob: -12.25345230102539
    7. 't' → logprob: -12.37845230102539
    8. ' -' → logprob: -12.50345230102539
    9. '   ' → logprob: -12.75345230102539
    10. '+s' → logprob: -13.25345230102539

Token 661: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011043755803257227
    2. '))' → logprob: -7.251104354858398
    3. ')
' → logprob: -7.876104354858398
    4. ',' → logprob: -12.251104354858398
    5. ')))' → logprob: -12.626104354858398
    6. ',)' → logprob: -13.126104354858398
    7. '   ' → logprob: -14.001104354858398
    8. ' )' → logprob: -14.501104354858398
    9. '),' → logprob: -14.501104354858398
    10. '))
' → logprob: -14.501104354858398

Token 662: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4816638231277466
    2. ')' → logprob: -1.3566638231277466
    3. '```' → logprob: -3.106663703918457
    4. '   ' → logprob: -3.231663703918457
    5. ' for' → logprob: -3.481663703918457
    6. 'while' → logprob: -5.606663703918457
    7. 'if' → logprob: -5.856663703918457
    8. ')
' → logprob: -7.106663703918457
    9. ')\' → logprob: -7.981663703918457
    10. 'res' → logprob: -7.981663703918457

Token 663: ' leftover' (ID: 97990)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05182087793946266
    2. 'while' → logprob: -3.051820993423462
    3. '   ' → logprob: -5.926820755004883
    4. 'hist' → logprob: -7.676820755004883
    5. ' for' → logprob: -10.051820755004883
    6. 'res' → logprob: -10.801820755004883
    7. '    
' → logprob: -11.426820755004883
    8. '#' → logprob: -12.051820755004883
    9. '```' → logprob: -12.676820755004883
    10. 'history' → logprob: -12.926820755004883

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199246406555176
    2. '=' → logprob: -1.5019924640655518
    3. '   ' → logprob: -10.876992225646973
    4. ',' → logprob: -11.126992225646973
    5. 's' → logprob: -11.376992225646973
    6. '=s' → logprob: -12.626992225646973
    7. ' ' → logprob: -13.001992225646973
    8. '=len' → logprob: -13.001992225646973
    9. '_' → logprob: -13.251992225646973
    10. 'for' → logprob: -13.751992225646973

Token 665: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.1450289487838745
    2. 'N' → logprob: -2.395029067993164
    3. 'whole' → logprob: -3.645029067993164
    4. 'len' → logprob: -5.270029067993164
    5. '1' → logprob: -5.770029067993164
    6. ' bit' → logprob: -5.770029067993164
    7. '0' → logprob: -5.770029067993164
    8. 'res' → logprob: -7.145029067993164
    9. ' N' → logprob: -7.395029067993164
    10. 'sum' → logprob: -8.020029067993164

Token 666: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.11286075413227081
    2. '.acc' → logprob: -2.612860679626465
    3. '.N' → logprob: -4.362860679626465
    4. '.add' → logprob: -4.612860679626465
    5. 'acc' → logprob: -5.112860679626465
    6. 'query' → logprob: -5.862860679626465
    7. ' acc' → logprob: -8.487860679626465
    8. '.' → logprob: -8.612860679626465
    9. '   ' → logprob: -8.737860679626465
    10. ' =' → logprob: -8.862860679626465

Token 667: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023202638840302825
    2. '0' → logprob: -8.375231742858887
    3. '(
' → logprob: -14.125231742858887
    4. ' (' → logprob: -14.375231742858887
    5. ' ' → logprob: -16.375232696533203
    6. '(t' → logprob: -17.125232696533203
    7. '   ' → logprob: -18.250232696533203
    8. 't' → logprob: -18.500232696533203
    9. '```' → logprob: -19.000232696533203
    10. '
' → logprob: -19.375232696533203

Token 668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '(' → logprob: -13.750017166137695
    4. ')' → logprob: -14.500017166137695
    5. '   ' → logprob: -15.687517166137695
    6. '1' → logprob: -16.000017166137695
    7. '۰' → logprob: -16.375017166137695
    8. '
' → logprob: -16.875017166137695
    9. '０' → logprob: -16.875017166137695
    10. ',' → logprob: -17.125017166137695

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005684291943907738
    2. '(N' → logprob: -6.2556843757629395
    3. ',N' → logprob: -6.2556843757629395
    4. '(' → logprob: -6.6306843757629395
    5. ' ,' → logprob: -7.8806843757629395
    6. ',t' → logprob: -10.005683898925781
    7. '0' → logprob: -10.630683898925781
    8. ',left' → logprob: -10.755683898925781
    9. 'N' → logprob: -11.005683898925781
    10. '   ' → logprob: -12.255683898925781

Token 670: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.0590548703912646e-05
    2. '0' → logprob: -10.750030517578125
    3. ' N' → logprob: -12.500030517578125
    4. 'len' → logprob: -13.250030517578125
    5. 'k' → logprob: -14.000030517578125
    6. 'tin' → logprob: -14.250030517578125
    7. 'n' → logprob: -14.625030517578125
    8. '   ' → logprob: -14.625030517578125
    9. '
' → logprob: -15.125030517578125
    10. 'bit' → logprob: -15.500030517578125

Token 671: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5765562057495117
    2. ')' → logprob: -0.8265562057495117
    3. ' )
' → logprob: -8.201556205749512
    4. ',' → logprob: -8.576556205749512
    5. ' )' → logprob: -9.576556205749512
    6. ')
' → logprob: -10.201556205749512
    7. ')

' → logprob: -11.576556205749512
    8. '   ' → logprob: -11.951556205749512
    9. ')`
' → logprob: -11.951556205749512
    10. '))' → logprob: -12.201556205749512

Token 672: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646647095680237
    2. 'res' → logprob: -1.514664649963379
    3. 'for' → logprob: -4.389664649963379
    4. 'results' → logprob: -8.639664649963379
    5. ' for' → logprob: -10.764664649963379
    6. ' res' → logprob: -11.139664649963379
    7. 'if' → logprob: -11.389664649963379
    8. 'rest' → logprob: -11.639664649963379
    9. '```' → logprob: -12.639664649963379
    10. 'while' → logprob: -12.639664649963379

Token 673: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.004095377866178751
    2. '   ' → logprob: -5.504095554351807
    3. 'left' → logprob: -11.754095077514648
    4. ' res' → logprob: -12.254095077514648
    5. 'for' → logprob: -12.754095077514648
    6. 'rest' → logprob: -14.879095077514648
    7. '```' → logprob: -15.254095077514648
    8. 'if' → logprob: -15.379095077514648
    9. '  ' → logprob: -16.25409507751465
    10. 'ress' → logprob: -16.25409507751465

Token 674: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.52594393491745
    2. '-=' → logprob: -0.90094393491745
    3. '-' → logprob: -6.400943756103516
    4. '=' → logprob: -7.650943756103516
    5. '   ' → logprob: -8.150943756103516
    6. '+=' → logprob: -8.150943756103516
    7. ' +=' → logprob: -10.025943756103516
    8. '```' → logprob: -11.275943756103516
    9. ' =' → logprob: -11.400943756103516
    10. '	' → logprob: -12.025943756103516

Token 675: ' leftover' (ID: 97990)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023374760523438454
    2. ' leftover' → logprob: -3.7733747959136963
    3. ' left' → logprob: -9.148374557495117
    4. '(left' → logprob: -11.148374557495117
    5. '[left' → logprob: -13.398374557495117
    6. ' leftovers' → logprob: -13.398374557495117
    7. 'lef' → logprob: -13.773374557495117
    8. '   ' → logprob: -13.898374557495117
    9. ' lef' → logprob: -14.023374557495117
    10. '
' → logprob: -14.648374557495117

Token 676: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00044068231363780797
    2. '*' → logprob: -7.75044059753418
    3. ' *' → logprob: -11.62544059753418
    4. ' *(' → logprob: -14.50044059753418
    5. '(left' → logprob: -14.62544059753418
    6. '[left' → logprob: -17.12544059753418
    7. '(res' → logprob: -17.62544059753418
    8. '**' → logprob: -17.75044059753418
    9. '*((' → logprob: -17.75044059753418
    10. '
' → logprob: -18.25044059753418

Token 677: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.0325924449716695e-05
    2. '(left' → logprob: -12.25001049041748
    3. ' leftover' → logprob: -12.50001049041748
    4. '1' → logprob: -13.75001049041748
    5. ' left' → logprob: -14.62501049041748
    6. '[left' → logprob: -16.500009536743164
    7. '	left' → logprob: -16.750009536743164
    8. 'lef' → logprob: -17.375009536743164
    9. '```' → logprob: -17.750009536743164
    10. ':left' → logprob: -18.000009536743164

Token 678: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.0001126026691053994
    2. 'left' → logprob: -10.125112533569336
    3. '+' → logprob: -11.000112533569336
    4. 'eft' → logprob: -11.250112533569336
    5. 'of' → logprob: -11.500112533569336
    6. 'off' → logprob: -12.500112533569336
    7. 'o' → logprob: -12.625112533569336
    8. 'ft' → logprob: -12.750112533569336
    9. '-over' → logprob: -12.750112533569336
    10. ' over' → logprob: -12.875112533569336

Token 679: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007731911726295948
    2. '-' → logprob: -4.882731914520264
    3. ' +' → logprob: -9.132731437683105
    4. ' -' → logprob: -11.382731437683105
    5. '```' → logprob: -12.382731437683105
    6. ')' → logprob: -13.882731437683105
    7. '1' → logprob: -14.132731437683105
    8. '()+' → logprob: -16.132732391357422
    9. '   ' → logprob: -16.257732391357422
    10. ' ' → logprob: -16.632732391357422

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '```' → logprob: -13.87500286102295
    4. '
' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.375001907348633
    6. '``' → logprob: -17.750001907348633
    7. '+' → logprob: -18.750001907348633
    8. 'for' → logprob: -18.937501907348633
    9. '-' → logprob: -19.062501907348633
    10. '  ' → logprob: -19.500001907348633

Token 681: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.012251566164195538
    2. '//' → logprob: -4.887251377105713
    3. ')' → logprob: -5.387251377105713
    4. '   ' → logprob: -11.012251853942871
    5. '()' → logprob: -11.262251853942871
    6. ' //' → logprob: -11.512251853942871
    7. ' )' → logprob: -11.762251853942871
    8. '```' → logprob: -12.762251853942871
    9. ')#' → logprob: -13.137251853942871
    10. '}//' → logprob: -13.137251853942871

Token 682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.375007629394531
    3. '```' → logprob: -13.625007629394531
    4. '   ' → logprob: -13.750007629394531
    5. '1' → logprob: -16.00000762939453
    6. '``' → logprob: -17.06250762939453
    7. '-' → logprob: -17.12500762939453
    8. '(' → logprob: -17.25000762939453
    9. '  ' → logprob: -17.37500762939453
    10. '
' → logprob: -17.43750762939453

Token 683: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3135915994644165
    2. 'results' → logprob: -1.8135915994644165
    3. '   ' → logprob: -2.313591480255127
    4. ' for' → logprob: -5.563591480255127
    5. 'while' → logprob: -5.813591480255127
    6. ' results' → logprob: -8.063591957092285
    7. '```' → logprob: -10.688591957092285
    8. 'history' → logprob: -11.313591957092285
    9. 'bit' → logprob: -11.688591957092285
    10. ' while' → logprob: -11.688591957092285

Token 684: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38162386417388916
    2. 'results' → logprob: -1.6316238641738892
    3. '   ' → logprob: -2.1316237449645996
    4. 'while' → logprob: -6.0066237449646
    5. ' for' → logprob: -7.8816237449646
    6. '```' → logprob: -9.381624221801758
    7. ' results' → logprob: -9.881624221801758
    8. 'history' → logprob: -12.131624221801758
    9. '	results' → logprob: -12.506624221801758
    10. '	for' → logprob: -13.631624221801758

Token 685: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7482655644416809
    2. 'results' → logprob: -0.8732655644416809
    3. '   ' → logprob: -2.248265504837036
    4. 'while' → logprob: -5.748265743255615
    5. ' for' → logprob: -8.373265266418457
    6. ' results' → logprob: -9.373265266418457
    7. 'bit' → logprob: -9.748265266418457
    8. '
' → logprob: -10.248265266418457
    9. '    
' → logprob: -11.123265266418457
    10. 'history' → logprob: -11.623265266418457

Token 686: ' t' (ID: 260)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.901780366897583
    2. 'x' → logprob: -2.151780366897583
    3. 'idx' → logprob: -2.151780366897583
    4. 't' → logprob: -2.401780366897583
    5. 'tin' → logprob: -2.776780366897583
    6. '(t' → logprob: -2.901780366897583
    7. 'i' → logprob: -3.151780366897583
    8. 'v' → logprob: -3.276780366897583
    9. 'p' → logprob: -4.526780128479004
    10. '_,' → logprob: -5.026780128479004

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20651178061962128
    2. ',t' → logprob: -1.7065117359161377
    3. 't' → logprob: -5.831511974334717
    4. 'in' → logprob: -7.081511974334717
    5. '_,' → logprob: -7.456511974334717
    6. ',node' → logprob: -8.206511497497559
    7. 'idx' → logprob: -9.331511497497559
    8. ',n' → logprob: -9.706511497497559
    9. ',v' → logprob: -9.956511497497559
    10. '_t' → logprob: -10.081511497497559

Token 688: ' cnt' (ID: 27340)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07324317842721939
    2. 'x' → logprob: -2.9482431411743164
    3. 'v' → logprob: -4.323243141174316
    4. 'val' → logprob: -6.323243141174316
    5. 'c' → logprob: -6.698243141174316
    6. ' s' → logprob: -7.823243141174316
    7. 'sz' → logprob: -8.448243141174316
    8. 'd' → logprob: -8.573243141174316
    9. 'cnt' → logprob: -8.698243141174316
    10. 'w' → logprob: -8.948243141174316

Token 689: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039730319986119866
    2. 'in' → logprob: -8.500397682189941
    3. ' ,' → logprob: -9.250397682189941
    4. ' in' → logprob: -9.750397682189941
    5. ',t' → logprob: -10.375397682189941
    6. 't' → logprob: -13.125397682189941
    7. '   ' → logprob: -13.125397682189941
    8. '_,' → logprob: -13.375397682189941
    9. ',s' → logprob: -14.125397682189941
    10. ',c' → logprob: -14.500397682189941

Token 690: ' hist' (ID: 3124)
  Prédit: 'hist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hist' → logprob: -0.0011762974318116903
    2. ' hist' → logprob: -6.751176357269287
    3. 're' → logprob: -12.876175880432129
    4. '   ' → logprob: -13.376175880432129
    5. '(hist' → logprob: -13.626175880432129
    6. ' reversed' → logprob: -14.751175880432129
    7. ' ' → logprob: -15.751175880432129
    8. 'history' → logprob: -16.126176834106445
    9. 'histor' → logprob: -16.251176834106445
    10. '  ' → logprob: -17.251176834106445

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21821154654026031
    2. ':
' → logprob: -1.7182115316390991
    3. ',' → logprob: -4.718211650848389
    4. 'in' → logprob: -5.718211650848389
    5. '   ' → logprob: -5.968211650848389
    6. ' in' → logprob: -6.468211650848389
    7. '):
' → logprob: -8.59321117401123
    8. '[::-' → logprob: -10.09321117401123
    9. '       ' → logprob: -10.34321117401123
    10. '):' → logprob: -11.46821117401123

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011164306662976742
    2. '   ' → logprob: -5.01116418838501
    3. ' bit' → logprob: -5.51116418838501
    4. 'bit' → logprob: -7.88616418838501
    5. '```' → logprob: -11.511164665222168
    6. ':' → logprob: -12.636164665222168
    7. '):
' → logprob: -12.636164665222168
    8. '(bit' → logprob: -14.261164665222168
    9. ',' → logprob: -14.386164665222168
    10. ')' → logprob: -14.511164665222168

Token 693: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.007516595534980297
    2. ' bit' → logprob: -5.007516384124756
    3. '   ' → logprob: -7.132516384124756
    4. '       ' → logprob: -13.257516860961914
    5. 'bitr' → logprob: -15.382516860961914
    6. ' ' → logprob: -16.007516860961914
    7. 'bits' → logprob: -17.007516860961914
    8. '(bit' → logprob: -17.132516860961914
    9. '  ' → logprob: -17.257516860961914
    10. '           ' → logprob: -17.507516860961914

Token 694: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.179569077678025e-05
    2. '.' → logprob: -10.500041961669922
    3. '+.' → logprob: -12.000041961669922
    4. 'add' → logprob: -12.500041961669922
    5. '```' → logprob: -12.875041961669922
    6. ' .' → logprob: -13.750041961669922
    7. '>.' → logprob: -15.750041961669922
    8. '   ' → logprob: -15.875041961669922
    9. '`.' → logprob: -16.125041961669922
    10. '​.' → logprob: -16.250041961669922

Token 695: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -6.682846287731081e-05
    2. 't' → logprob: -10.250066757202148
    3. '(' → logprob: -10.375066757202148
    4. '(
' → logprob: -16.62506675720215
    5. ' (' → logprob: -17.00006675720215
    6. '	t' → logprob: -17.25006675720215
    7. ' t' → logprob: -18.00006675720215
    8. '   ' → logprob: -18.62506675720215
    9. '[t' → logprob: -19.00006675720215
    10. ',t' → logprob: -19.37506675720215

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.375018119812012
    3. ',c' → logprob: -12.125018119812012
    4. ',t' → logprob: -14.375018119812012
    5. '[cnt' → logprob: -15.250018119812012
    6. ',count' → logprob: -15.375018119812012
    7. 'cnt' → logprob: -15.750018119812012
    8. '(cnt' → logprob: -15.875018119812012
    9. ',
' → logprob: -16.500019073486328
    10. 't' → logprob: -17.250019073486328

Token 697: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.56102097814437e-05
    2. ' cnt' → logprob: -10.000045776367188
    3. 'count' → logprob: -16.000045776367188
    4. '	cnt' → logprob: -17.625045776367188
    5. '   ' → logprob: -17.875045776367188
    6. '+' → logprob: -18.000045776367188
    7. '(cnt' → logprob: -20.125045776367188
    8. '[cnt' → logprob: -20.500045776367188
    9. 'c' → logprob: -21.000045776367188
    10. 'ct' → logprob: -21.375045776367188

Token 698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062974002212285995
    2. '<|end|>' → logprob: -5.131297588348389
    3. '   ' → logprob: -9.00629711151123
    4. '<|end|>' → logprob: -9.63129711151123
    5. ')
' → logprob: -10.00629711151123
    6. '+' → logprob: -10.50629711151123
    7. ')return' → logprob: -10.50629711151123
    8. '
' → logprob: -11.13129711151123
    9. ' )' → logprob: -11.25629711151123
    10. '#' → logprob: -11.63129711151123

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003639272879809141
    2. 'results' → logprob: -5.628639221191406
    3. ' results' → logprob: -10.753639221191406
    4. '	results' → logprob: -11.503639221191406
    5. '
' → logprob: -12.378639221191406
    6. 'print' → logprob: -13.503639221191406
    7. '    
' → logprob: -14.378639221191406
    8. '```' → logprob: -14.503639221191406
    9. 'answers' → logprob: -14.628639221191406
    10. '(results' → logprob: -15.628639221191406

Token 700: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.004706968553364277
    2. '   ' → logprob: -5.504706859588623
    3. ' results' → logprob: -7.754706859588623
    4. '	results' → logprob: -8.629707336425781
    5. '```' → logprob: -11.379707336425781
    6. 'for' → logprob: -12.629707336425781
    7. '(results' → logprob: -12.879707336425781
    8. 'print' → logprob: -13.629707336425781
    9. '
' → logprob: -13.754707336425781
    10. '.results' → logprob: -14.629707336425781

Token 701: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002478985348716378
    2. '.' → logprob: -6.002479076385498
    3. '.extend' → logprob: -13.62747859954834
    4. '.app' → logprob: -14.12747859954834
    5. 'append' → logprob: -14.37747859954834
    6. '.ap' → logprob: -15.00247859954834
    7. ' .' → logprob: -15.25247859954834
    8. '.py' → logprob: -17.002479553222656
    9. '_append' → logprob: -17.252479553222656
    10. '.Append' → logprob: -17.502479553222656

Token 702: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.8670179997570813e-05
    2. 'res' → logprob: -11.500019073486328
    3. '(str' → logprob: -11.750019073486328
    4. ' (' → logprob: -15.125019073486328
    5. '(' → logprob: -15.250019073486328
    6. ' res' → logprob: -16.375019073486328
    7. 'str' → logprob: -18.750019073486328
    8. '(len' → logprob: -20.000019073486328
    9. '((' → logprob: -20.125019073486328
    10. '(results' → logprob: -20.250019073486328

Token 703: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059248968958854675
    2. '[i' → logprob: -3.184248924255371
    3. ')
' → logprob: -4.434248924255371
    4. '[' → logprob: -5.934248924255371
    5. '[
' → logprob: -7.684248924255371
    6. '   ' → logprob: -8.059248924255371
    7. '<|end|>' → logprob: -9.059248924255371
    8. '+' → logprob: -9.309248924255371
    9. '[-' → logprob: -9.559248924255371
    10. '    
' → logprob: -9.559248924255371

Token 704: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10044033080339432
    2. 'for' → logprob: -2.350440263748169
    3. '
' → logprob: -8.47544002532959
    4. ' for' → logprob: -11.47544002532959
    5. '```' → logprob: -11.60044002532959
    6. ' print' → logprob: -12.60044002532959
    7. '  
' → logprob: -14.47544002532959
    8. '
' → logprob: -14.60044002532959
    9. ' 
' → logprob: -15.47544002532959
    10. '[
' → logprob: -15.60044002532959

Token 705: ' v' (ID: 323)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5405315160751343
    2. ' res' → logprob: -1.2905315160751343
    3. 'r' → logprob: -2.040531635284424
    4. ' r' → logprob: -4.790531635284424
    5. 'i' → logprob: -5.915531635284424
    6. 'x' → logprob: -7.540531635284424
    7. ' ans' → logprob: -7.915531635284424
    8. 'ans' → logprob: -8.415531158447266
    9. ' i' → logprob: -8.665531158447266
    10. 'result' → logprob: -9.540531158447266

Token 706: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023264825344086
    2. 'in' → logprob: -1.910232663154602
    3. 'v' → logprob: -12.035232543945312
    4. ' ' → logprob: -13.910232543945312
    5. '	in' → logprob: -14.785232543945312
    6. '_in' → logprob: -15.160232543945312
    7. ' v' → logprob: -15.285232543945312
    8. 'n' → logprob: -15.910232543945312
    9. '   ' → logprob: -16.035232543945312
    10. 'i' → logprob: -16.160232543945312

Token 707: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -7.553032628493384e-05
    2. ' results' → logprob: -9.500075340270996
    3. '(results' → logprob: -15.000075340270996
    4. 'range' → logprob: -15.250075340270996
    5. '	results' → logprob: -18.500076293945312
    6. 'result' → logprob: -18.625076293945312
    7. 'print' → logprob: -18.875076293945312
    8. 'values' → logprob: -19.750076293945312
    9. '
' → logprob: -20.250076293945312
    10. '.results' → logprob: -21.750076293945312

Token 708: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021262088790535927
    2. ':
' → logprob: -3.8962621688842773
    3. 'print' → logprob: -7.271262168884277
    4. '():
' → logprob: -12.396262168884277
    5. '.print' → logprob: -12.646262168884277
    6. '):
' → logprob: -12.646262168884277
    7. '):' → logprob: -13.021262168884277
    8. ' print' → logprob: -13.271262168884277
    9. '   ' → logprob: -13.646262168884277
    10. '_print' → logprob: -13.646262168884277

Token 709: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00250217504799366
    2. ' print' → logprob: -6.252501964569092
    3. '   ' → logprob: -7.502501964569092
    4. '```' → logprob: -10.87750244140625
    5. '	print' → logprob: -12.87750244140625
    6. '
' → logprob: -16.00250244140625
    7. '``' → logprob: -16.25250244140625
    8. '.print' → logprob: -17.87750244140625
    9. '_print' → logprob: -18.75250244140625
    10. '\' → logprob: -19.00250244140625

Token 710: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '```' → logprob: -21.375
    4. '
' → logprob: -23.125
    5. 'pr' → logprob: -24.0
    6. '   ' → logprob: -24.125
    7. 'prin' → logprob: -24.5
    8. '    
' → logprob: -25.5
    9. 'printf' → logprob: -25.625
    10. '	print' → logprob: -26.625

Token 711: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'v' → logprob: -14.375001907348633
    4. '(f' → logprob: -20.375001907348633
    5. '(value' → logprob: -20.750001907348633
    6. '(
' → logprob: -21.000001907348633
    7. '((' → logprob: -21.250001907348633
    8. '()' → logprob: -21.250001907348633
    9. ' (' → logprob: -22.000001907348633
    10. '(int' → logprob: -22.000001907348633

Token 712: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '()' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '())' → logprob: -14.875001907348633
    5. ' )' → logprob: -16.375001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '))' → logprob: -17.500001907348633
    8. '),' → logprob: -17.750001907348633
    9. ')}}' → logprob: -18.000001907348633
    10. ')#' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 710
Tokens correctement prédits (1ère position, stricte): 245
Tokens correctement prédits (1ère position, avec adaptation): 283
Tokens correctement prédits (top 10): 552
Précision stricte (1ère position): 34.51%
Précision adaptée (1ère position): 39.86%
Précision (top 10): 77.75%
================================================================================
