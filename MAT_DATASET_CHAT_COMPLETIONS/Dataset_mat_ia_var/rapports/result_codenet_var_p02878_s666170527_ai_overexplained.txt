================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de trois entiers séparés par des espaces à partir de l'entrée standard (input). 
# La fonction input() lit la ligne saisie par l'utilisateur, 
# puis split() la divise en une liste de chaînes numériques, 
# map(int, ...) convertit chaque chaîne en entier
# Enfin, l'affectation multiple permet de stocker les trois valeurs dans N, A et B respectivement.
N, A, B = map(int, input().split())

# Définition du module utilisé dans les calculs pour éviter les débordements arithmétiques sur les grands entiers
M = 998244353

# Calcul de P qui représente N+1 ; utilisé dans la taille des tableaux pour la factorielle
P = N + 1

# Initialisation de la variable f à 1. Elle stockera les valeurs intermédiaires de la factorielle lors du calcul
f = 1

# Création de la liste F pour stocker les factorielles de 0 à N, initialisée avec des 1.
F = [1] * P

# Création de la liste I qui servira à stocker les inverses modulo M des factorielles,
# également initialisée avec des 1
I = [1] * P

# z sera la variable qui stockera le résultat final calculé dans la boucle principale
z = 0

# Préparation d'un objet range pour désigner les plages de boucles (pour la lisibilité ensuite)
R = range

# Première boucle : calcul des factorielles modulo M pour tous les entiers de 1 à N inclus
for n in R(1, P):  # Commence à 1 et va jusqu'à N inclus (car range s'arrête avant P)
    # f prend la valeur de la factorielle de n, mais en utilisant les valeurs précédentes
    # Multiplication de la valeur précédente par n, puis réduction modulo M
    f = f * n % M
    # On stocke la factorielle de n dans F[n]
    F[n] = f

# Calcul de l'inverse modulo M de la factorielle de N
# pow(f, M-2, M) utilise le petit théorème de Fermat pour obtenir l'inverse de f modulo M
I[N] = i = pow(f, M - 2, M)

# Deuxième boucle : calcul des inverses modulo M de toutes les factorielles (de N à 1)
for n in R(N, 1, -1):  # Commence à N, finit à 2 inclus (car range s'arrête avant le deuxième argument)
    # Mise à jour de i : multiplication par n, puis modulo M, donne l'inverse de la factorielle de n-1  
    i = i * n % M
    # Stockage du résultat dans I[n-1]
    I[n - 1] = i

# Troisième boucle principale pour le calcul de la somme finale
# min(A+1, N-B) calcule la borne supérieure de la boucle selon la logique de l'algorithme,
# mais si N-B-A == 0 (équivalent à N-B-A étant faux), alors la plage sera simplement A+1
for k in R(min(A + 1, N - B) if N - B - A else A + 1):
    # Q est une variable intermédiaire qui dépend de N, B et k, utilisée dans les calculs de combinaisons
    Q = N - B - k - 1

    # Calcul du terme qui sera ajouté à z pour chaque valeur de k
    # On démontre les opérations individuellement :
    # (B-k) : facteur linéaire dépendant de k
    # F[B+k-1] : factorielle de (B+k-1)
    # I[B] : inverse de la factorielle de B
    # I[k] : inverse de la factorielle de k
    # F[Q+A-k] : factorielle de (Q+A-k)
    # I[Q] : inverse de la factorielle de Q
    # I[A-k] : inverse de la factorielle de (A-k)
    term = (
        (B - k)                      # facteur linéaire
        * F[B + k - 1]               # factorielle de (B+k-1)
        * I[B]                       # inverse factorielle de B
        * I[k]                       # inverse factorielle de k
        * F[Q + A - k]               # factorielle de (Q+A-k)
        * I[Q]                       # inverse factorielle de Q
        * I[A - k]                   # inverse factorielle de (A-k)
    )
    # Ajout du terme au résultat z, en gardant z modulo M
    z = (z + term) % M

# Condition particulière : si B vaut 0, alors le résultat est 1 quelle que soit la valeur de z
# sinon on affiche la valeur calculée dans z
print(z if B else 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' trois' (ID: 25564)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3957350254058838
    2. ' fichier' → logprob: -1.2707350254058838
    3. ' fichiers' → logprob: -3.895735025405884
    4. ' ' → logprob: -4.645734786987305
    5. 's' → logprob: -5.020734786987305
    6. 'l' → logprob: -5.395734786987305
    7. 'la' → logprob: -7.020734786987305
    8. '_f' → logprob: -7.270734786987305
    9. 'd' → logprob: -7.395734786987305
    10. ' f' → logprob: -7.395734786987305

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11799047887325287
    2. ' espaces' → logprob: -2.617990493774414
    3. '_' → logprob: -4.867990493774414
    4. ' lignes' → logprob: -5.242990493774414
    5. ' caractères' → logprob: -5.742990493774414
    6. ' ' → logprob: -5.742990493774414
    7. 'l' → logprob: -6.242990493774414
    8. 'space' → logprob: -6.242990493774414
    9. ' ```' → logprob: -6.242990493774414
    10. ' espace' → logprob: -6.492990493774414

Token 5: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.4311569035053253
    2. 'r' → logprob: -1.681156873703003
    3. 'ières' → logprob: -2.056156873703003
    4. '```' → logprob: -4.306157112121582
    5. 'i' → logprob: -4.681157112121582
    6. 't' → logprob: -5.431157112121582
    7. 'ri' → logprob: -5.681157112121582
    8. 'êtes' → logprob: -6.431157112121582
    9. 'rès' → logprob: -7.306157112121582
    10. 'ière' → logprob: -7.431157112121582

Token 6: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014656072482466698
    2. 'n' → logprob: -4.639656066894531
    3. 'x' → logprob: -5.389656066894531
    4. '```' → logprob: -8.514656066894531
    5. 'ent' → logprob: -9.889656066894531
    6. ' a' → logprob: -10.889656066894531
    7. '`' → logprob: -12.014656066894531
    8. '#' → logprob: -12.139656066894531
    9. 'numbers' → logprob: -12.139656066894531
    10. 'v' → logprob: -12.264656066894531

Token 7: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0011999934213235974
    2. 's' → logprob: -7.501200199127197
    3. 'par' → logprob: -8.751199722290039
    4. 'é' → logprob: -8.876199722290039
    5. '```' → logprob: -9.376199722290039
    6. 'ès' → logprob: -9.501199722290039
    7. 'es' → logprob: -9.501199722290039
    8. ' par' → logprob: -10.126199722290039
    9. ',' → logprob: -11.251199722290039
    10. '#' → logprob: -11.501199722290039

Token 8: ' par' (ID: 686)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7401547431945801
    2. ',' → logprob: -1.24015474319458
    3. 's' → logprob: -2.86515474319458
    4. 'par' → logprob: -3.11515474319458
    5. '(' → logprob: -3.36515474319458
    6. ':' → logprob: -4.11515474319458
    7. 'input' → logprob: -4.24015474319458
    8. '```' → logprob: -4.36515474319458
    9. 'x' → logprob: -4.61515474319458
    10. '=' → logprob: -5.11515474319458

Token 9: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7271201610565186
    2. 'un' → logprob: -1.2271201610565186
    3. ' des' → logprob: -2.2271201610565186
    4. 'es' → logprob: -2.8521201610565186
    5. 'esp' → logprob: -3.8521201610565186
    6. 'une' → logprob: -4.977120399475098
    7. ' un' → logprob: -5.352120399475098
    8. ' espaces' → logprob: -5.352120399475098
    9. 'spaces' → logprob: -5.602120399475098
    10. '_' → logprob: -5.727120399475098

Token 10: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.05393045023083687
    2. ' espaces' → logprob: -3.4289305210113525
    3. 'es' → logprob: -4.553930282592773
    4. ''esp' → logprob: -5.053930282592773
    5. 'spaces' → logprob: -6.178930282592773
    6. '_' → logprob: -8.053930282592773
    7. '#' → logprob: -8.428930282592773
    8. ''espace' → logprob: -8.553930282592773
    9. '’esp' → logprob: -9.303930282592773
    10. 'space' → logprob: -9.928930282592773

Token 11: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6485793590545654
    2. 'n' → logprob: -1.0235793590545654
    3. 'x' → logprob: -2.5235793590545654
    4. 'e' → logprob: -4.1485795974731445
    5. 'ent' → logprob: -4.7735795974731445
    6. 'i' → logprob: -5.1485795974731445
    7. '```' → logprob: -5.6485795974731445
    8. 'v' → logprob: -6.3985795974731445
    9. 'numbers' → logprob: -7.0235795974731445
    10. '`' → logprob: -7.8985795974731445

Token 12: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1851106733083725
    2. 'la' → logprob: -2.560110569000244
    3. 's' → logprob: -3.185110569000244
    4. 'part' → logprob: -3.435110569000244
    5. 'une' → logprob: -5.560110569000244
    6. '```' → logprob: -5.560110569000244
    7. 'input' → logprob: -5.810110569000244
    8. '#' → logprob: -7.060110569000244
    9. 'entrée' → logprob: -7.060110569000244
    10. 'a' → logprob: -7.185110569000244

Token 13: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.24347569048404694
    2. 'd' → logprob: -1.9934756755828857
    3. ' de' → logprob: -3.2434756755828857
    4. ''' → logprob: -4.243475914001465
    5. 'de' → logprob: -5.118475914001465
    6. '`' → logprob: -5.118475914001465
    7. 's' → logprob: -5.493475914001465
    8. ' du' → logprob: -5.743475914001465
    9. ' ' → logprob: -6.368475914001465
    10. '_' → logprob: -6.493475914001465

Token 14: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7274936437606812
    2. 'input' → logprob: -0.8524936437606812
    3. 'l' → logprob: -2.7274937629699707
    4. 'la' → logprob: -4.852493762969971
    5. ' l' → logprob: -4.977493762969971
    6. ' la' → logprob: -5.477493762969971
    7. '=input' → logprob: -6.227493762969971
    8. 'une' → logprob: -6.727493762969971
    9. '```' → logprob: -6.852493762969971
    10. ' une' → logprob: -7.102493762969971

Token 15: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45669928193092346
    2. 'e' → logprob: -1.581699252128601
    3. ''entrée' → logprob: -2.4566993713378906
    4. 'a' → logprob: -3.7066993713378906
    5. 'input' → logprob: -3.8316993713378906
    6. ''espace' → logprob: -4.956699371337891
    7. 'es' → logprob: -5.831699371337891
    8. 'u' → logprob: -5.956699371337891
    9. 'r' → logprob: -5.956699371337891
    10. '`' → logprob: -6.206699371337891

Token 16: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49496951699256897
    2. 'n' → logprob: -1.3699694871902466
    3. 'x' → logprob: -2.494969606399536
    4. 'ent' → logprob: -3.869969606399536
    5. 'e' → logprob: -4.119969367980957
    6. 'i' → logprob: -4.994969367980957
    7. 'v' → logprob: -6.119969367980957
    8. '```' → logprob: -6.119969367980957
    9. 'numbers' → logprob: -6.494969367980957
    10. '`' → logprob: -7.119969367980957

Token 17: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5057103037834167
    2. 'a' → logprob: -1.3807103633880615
    3. 'x' → logprob: -2.3807103633880615
    4. 'e' → logprob: -3.7557103633880615
    5. 'ent' → logprob: -4.005710124969482
    6. '```' → logprob: -5.255710124969482
    7. 'i' → logprob: -5.755710124969482
    8. 'v' → logprob: -6.505710124969482
    9. 'numbers' → logprob: -8.13071060180664
    10. '`' → logprob: -8.13071060180664

Token 18: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05195239931344986
    2. ' )' → logprob: -3.301952362060547
    3. 'n' → logprob: -5.801952362060547
    4. '`)' → logprob: -6.176952362060547
    5. 'ent' → logprob: -6.301952362060547
    6. 'e' → logprob: -6.551952362060547
    7. 'i' → logprob: -6.926952362060547
    8. 't' → logprob: -7.176952362060547
    9. '#' → logprob: -7.551952362060547
    10. 'input' → logprob: -7.676952362060547

Token 19: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00553231593221426
    2. ' )' → logprob: -5.630532264709473
    3. 's' → logprob: -7.380532264709473
    4. '`)' → logprob: -7.380532264709473
    5. '):' → logprob: -8.005532264709473
    6. '')' → logprob: -9.380532264709473
    7. '#' → logprob: -9.755532264709473
    8. '")' → logprob: -10.130532264709473
    9. '```' → logprob: -10.630532264709473
    10. ')`' → logprob: -10.880532264709473

Token 20: ' 
' (ID: 793)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0767080783843994
    2. 'x' → logprob: -1.4517080783843994
    3. 'e' → logprob: -1.8267080783843994
    4. 'a' → logprob: -1.9517080783843994
    5. 'i' → logprob: -2.5767080783843994
    6. 'v' → logprob: -3.4517080783843994
    7. 'ent' → logprob: -4.82670783996582
    8. '```' → logprob: -6.20170783996582
    9. 't' → logprob: -6.95170783996582
    10. 'en' → logprob: -7.70170783996582

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.744236946105957
    2. 'a' → logprob: -0.994236946105957
    3. 'x' → logprob: -2.244236946105957
    4. 'ent' → logprob: -3.869236946105957
    5. 'i' → logprob: -4.369236946105957
    6. 'e' → logprob: -4.619236946105957
    7. '```' → logprob: -6.369236946105957
    8. 'v' → logprob: -6.744236946105957
    9. 'val' → logprob: -6.994236946105957
    10. 'nums' → logprob: -8.119236946105957

Token 22: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4627779722213745
    2. 'ent' → logprob: -1.4627779722213745
    3. 'x' → logprob: -2.837778091430664
    4. 'n' → logprob: -2.837778091430664
    5. 'nums' → logprob: -4.712778091430664
    6. 'numbers' → logprob: -5.087778091430664
    7. 'val' → logprob: -6.087778091430664
    8. 'values' → logprob: -6.587778091430664
    9. '```' → logprob: -8.212778091430664
    10. 'trip' → logprob: -8.337778091430664

Token 23: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.074875831604004
    2. 'val' → logprob: -1.824875831604004
    3. 'ent' → logprob: -1.949875831604004
    4. 'a' → logprob: -2.574875831604004
    5. 'v' → logprob: -2.949875831604004
    6. 's' → logprob: -3.074875831604004
    7. 'x' → logprob: -3.449875831604004
    8. ' ' → logprob: -3.824875831604004
    9. ' n' → logprob: -4.199875831604004
    10. 'e' → logprob: -4.449875831604004

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31451281905174255
    2. ' input' → logprob: -1.314512848854065
    3. 'int' → logprob: -7.314512729644775
    4. '=input' → logprob: -7.814512729644775
    5. ' int' → logprob: -9.939513206481934
    6. 'print' → logprob: -10.689513206481934
    7. '`' → logprob: -10.814513206481934
    8. ' `' → logprob: -10.814513206481934
    9. 'split' → logprob: -10.814513206481934
    10. 's' → logprob: -11.064513206481934

Token 25: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0304923877120018
    2. '(' → logprob: -3.5304923057556152
    3. '().' → logprob: -7.780492305755615
    4. '("' → logprob: -9.655492782592773
    5. '('' → logprob: -9.655492782592773
    6. 's' → logprob: -10.530492782592773
    7. ' ()' → logprob: -10.655492782592773
    8. '(
' → logprob: -10.780492782592773
    9. '("")' → logprob: -11.030492782592773
    10. '();' → logprob: -11.280492782592773

Token 26: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027054302394390106
    2. ' (' → logprob: -4.152054309844971
    3. '.' → logprob: -6.027054309844971
    4. ')' → logprob: -6.277054309844971
    5. '()' → logprob: -6.777054309844971
    6. ' ' → logprob: -6.777054309844971
    7. '('' → logprob: -7.027054309844971
    8. 's' → logprob: -7.152054309844971
    9. '(
' → logprob: -7.277054309844971
    10. '[' → logprob: -7.652054309844971

Token 27: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.01722412370145321
    2. ' la' → logprob: -4.892224311828613
    3. 'une' → logprob: -5.267224311828613
    4. ' l' → logprob: -6.892224311828613
    5. '()' → logprob: -6.892224311828613
    6. ' ' → logprob: -7.642224311828613
    7. ' ' → logprob: -8.142224311828613
    8. ' un' → logprob: -8.142224311828613
    9. ''une' → logprob: -8.267224311828613
    10. ' toujours' → logprob: -8.267224311828613

Token 28: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6868103742599487
    2. ' ligne' → logprob: -0.9368103742599487
    3. 'chaine' → logprob: -3.4368104934692383
    4. 'ent' → logprob: -4.436810493469238
    5. ' chaine' → logprob: -4.436810493469238
    6. 'entrée' → logprob: -4.936810493469238
    7. 'ligne' → logprob: -4.936810493469238
    8. 's' → logprob: -5.186810493469238
    9. 'l' → logprob: -5.311810493469238
    10. ' input' → logprob: -5.936810493469238

Token 29: ' sais' (ID: 30010)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.5220860242843628
    2. ' complète' → logprob: -1.5220860242843628
    3. ' ' → logprob: -2.1470861434936523
    4. ' entière' → logprob: -4.147086143493652
    5. ' =' → logprob: -4.397086143493652
    6. ' complete' → logprob: -4.522086143493652
    7. ' ent' → logprob: -4.772086143493652
    8. ' complet' → logprob: -5.647086143493652
    9. ' enti' → logprob: -5.647086143493652
    10. 'ent' → logprob: -6.147086143493652

Token 30: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.004882431123405695
    2. 'e' → logprob: -5.504882335662842
    3. 'i' → logprob: -7.754882335662842
    4. 'sie' → logprob: -9.5048828125
    5. 'ies' → logprob: -9.8798828125
    6. ' ie' → logprob: -10.3798828125
    7. '#' → logprob: -10.6298828125
    8. 'is' → logprob: -10.7548828125
    9. 's' → logprob: -11.2548828125
    10. 'ue' → logprob: -11.3798828125

Token 31: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9407694339752197
    2. 'ent' → logprob: -1.1907694339752197
    3. 'a' → logprob: -2.6907694339752197
    4. ',' → logprob: -3.3157694339752197
    5. 's' → logprob: -3.3157694339752197
    6. 'e' → logprob: -3.5657694339752197
    7. 't' → logprob: -3.8157694339752197
    8. ' ' → logprob: -3.9407694339752197
    9. 'x' → logprob: -4.315769195556641
    10. 'i' → logprob: -4.815769195556641

Token 32: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4297143518924713
    2. ' l' → logprob: -1.054714322090149
    3. '	l' → logprob: -7.554714202880859
    4. 'util' → logprob: -9.17971420288086
    5. 'def' → logprob: -9.42971420288086
    6. ' ' → logprob: -9.55471420288086
    7. ' utilisateur' → logprob: -10.17971420288086
    8. ' défaut' → logprob: -10.30471420288086
    9. 'user' → logprob: -10.92971420288086
    10. 'lap' → logprob: -11.30471420288086

Token 33: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.1661168485879898
    2. ''' → logprob: -2.666116952896118
    3. 'u' → logprob: -2.791116952896118
    4. ''u' → logprob: -4.916116714477539
    5. ''util' → logprob: -5.166116714477539
    6. '’utilisateur' → logprob: -5.791116714477539
    7. 'util' → logprob: -6.041116714477539
    8. ''us' → logprob: -6.791116714477539
    9. ''user' → logprob: -7.416116714477539
    10. 'a' → logprob: -8.291116714477539

Token 34: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0098605155944824
    2. 'ent' → logprob: -1.1348605155944824
    3. 'a' → logprob: -2.0098605155944824
    4. 't' → logprob: -2.8848605155944824
    5. 'x' → logprob: -4.134860515594482
    6. 'val' → logprob: -4.259860515594482
    7. 's' → logprob: -4.259860515594482
    8. ',' → logprob: -4.384860515594482
    9. 'trip' → logprob: -4.384860515594482
    10. 'numbers' → logprob: -4.884860515594482

Token 35: ' 
' (ID: 793)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.25754818320274353
    2. 'split' → logprob: -2.0075480937957764
    3. ' split' → logprob: -3.6325480937957764
    4. '.split' → logprob: -3.8825480937957764
    5. ' les' → logprob: -4.7575483322143555
    6. 's' → logprob: -5.0075483322143555
    7. ' et' → logprob: -5.3825483322143555
    8. 'strip' → logprob: -5.5075483322143555
    9. 'ens' → logprob: -5.7575483322143555
    10. ' strip' → logprob: -6.0075483322143555

Token 36: '#' (ID: 2)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.810463011264801
    2. 'a' → logprob: -2.3104629516601562
    3. 'split' → logprob: -2.5604629516601562
    4. 'ent' → logprob: -2.5604629516601562
    5. 'p' → logprob: -2.6854629516601562
    6. '#' → logprob: -2.9354629516601562
    7. 'numbers' → logprob: -3.5604629516601562
    8. 'les' → logprob: -3.6854629516601562
    9. 'nums' → logprob: -4.310462951660156
    10. 'x' → logprob: -4.435462951660156

Token 37: ' puis' (ID: 18766)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.6601914167404175
    2. 'val' → logprob: -2.035191535949707
    3. '#' → logprob: -2.160191535949707
    4. 'ent' → logprob: -2.410191535949707
    5. ' puis' → logprob: -2.410191535949707
    6. 'numbers' → logprob: -2.660191535949707
    7. 'nums' → logprob: -3.535191535949707
    8. ' les' → logprob: -3.660191535949707
    9. ' la' → logprob: -3.785191535949707
    10. ' #' → logprob: -4.035191535949707

Token 38: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.6341155171394348
    2. 'split' → logprob: -1.13411545753479
    3. ' on' → logprob: -3.38411545753479
    4. ' les' → logprob: -3.38411545753479
    5. ' la' → logprob: -3.75911545753479
    6. '.split' → logprob: -3.75911545753479
    7. 'les' → logprob: -5.384115695953369
    8. 'la' → logprob: -5.759115695953369
    9. 'on' → logprob: -5.884115695953369
    10. 'spl' → logprob: -6.009115695953369

Token 39: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4420529007911682
    2. '(' → logprob: -1.1920528411865234
    3. '('' → logprob: -2.9420528411865234
    4. '("' → logprob: -7.817052841186523
    5. '().' → logprob: -8.567052841186523
    6. '("("' → logprob: -8.817052841186523
    7. '(
' → logprob: -9.817052841186523
    8. '(',' → logprob: -10.692052841186523
    9. '('.')' → logprob: -11.192052841186523
    10. '("""' → logprob: -11.317052841186523

Token 40: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18294739723205566
    2. '(' → logprob: -2.5579473972320557
    3. '('' → logprob: -2.6829473972320557
    4. '().' → logprob: -4.807947158813477
    5. ' ()' → logprob: -5.932947158813477
    6. ' (' → logprob: -6.932947158813477
    7. '("' → logprob: -6.932947158813477
    8. '.' → logprob: -6.932947158813477
    9. 'split' → logprob: -7.057947158813477
    10. '("""' → logprob: -7.307947158813477

Token 41: ' div' (ID: 4223)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.982125997543335
    2. 'split' → logprob: -1.357125997543335
    3. 'sé' → logprob: -1.482125997543335
    4. 'div' → logprob: -2.982125997543335
    5. 'd' → logprob: -3.982125997543335
    6. ' décou' → logprob: -4.232126235961914
    7. 's' → logprob: -4.357126235961914
    8. ' transforme' → logprob: -4.732126235961914
    9. 'dé' → logprob: -5.357126235961914
    10. 'plit' → logprob: -5.732126235961914

Token 42: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0002764710516203195
    2. 'is' → logprob: -9.750276565551758
    3. 'i' → logprob: -10.875276565551758
    4. ' ise' → logprob: -11.125276565551758
    5. '#' → logprob: -11.250276565551758
    6. 'iser' → logprob: -11.375276565551758
    7. 'isé' → logprob: -11.375276565551758
    8. '```' → logprob: -11.375276565551758
    9. '1' → logprob: -11.500276565551758
    10. '0' → logprob: -11.500276565551758

Token 43: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17147839069366455
    2. ' en' → logprob: -2.421478271484375
    3. ' ' → logprob: -4.046478271484375
    4. '('' → logprob: -4.671478271484375
    5. ' =' → logprob: -4.921478271484375
    6. '```' → logprob: -5.671478271484375
    7. ')' → logprob: -5.796478271484375
    8. ''' → logprob: -5.796478271484375
    9. ' (' → logprob: -6.046478271484375
    10. 'en' → logprob: -6.296478271484375

Token 44: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.178817629814148
    2. ' une' → logprob: -1.428817629814148
    3. 'tokens' → logprob: -1.803817629814148
    4. '['' → logprob: -2.3038177490234375
    5. 'des' → logprob: -2.9288177490234375
    6. ' tokens' → logprob: -3.1788177490234375
    7. 'une' → logprob: -3.1788177490234375
    8. ' ['' → logprob: -4.6788177490234375
    9. ' espaces' → logprob: -4.6788177490234375
    10. '["' → logprob: -5.1788177490234375

Token 45: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.03509410843253136
    2. 'liste' → logprob: -3.4100940227508545
    3. 's' → logprob: -7.785094261169434
    4. 'list' → logprob: -7.785094261169434
    5. ' chaîne' → logprob: -7.785094261169434
    6. 'chaine' → logprob: -9.660094261169434
    7. ' list' → logprob: -10.035094261169434
    8. ' ' → logprob: -10.285094261169434
    9. 'Liste' → logprob: -11.160094261169434
    10. ' chaine' → logprob: -11.410094261169434

Token 46: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9056203365325928
    2. 'tokens' → logprob: -1.6556203365325928
    3. 's' → logprob: -1.7806203365325928
    4. '[:]' → logprob: -3.6556203365325928
    5. '[]' → logprob: -3.7806203365325928
    6. ' =' → logprob: -3.7806203365325928
    7. ',' → logprob: -4.030620574951172
    8. '()' → logprob: -4.155620574951172
    9. 'input' → logprob: -4.155620574951172
    10. '.' → logprob: -4.280620574951172

Token 47: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.06868424266576767
    2. 'str' → logprob: -4.318684101104736
    3. 'strings' → logprob: -4.318684101104736
    4. ' strings' → logprob: -4.443684101104736
    5. 'cha' → logprob: -5.068684101104736
    6. ' tokens' → logprob: -5.193684101104736
    7. 'chain' → logprob: -5.443684101104736
    8. 'tokens' → logprob: -5.568684101104736
    9. ' chain' → logprob: -5.818684101104736
    10. ' mots' → logprob: -6.693684101104736

Token 48: ' numériques' (ID: 153198)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.801760196685791
    2. 'ent' → logprob: -2.176760196685791
    3. 's' → logprob: -2.426760196685791
    4. '[' → logprob: -2.426760196685791
    5. 'n' → logprob: -2.426760196685791
    6. 'numbers' → logprob: -3.551760196685791
    7. ',' → logprob: -4.051760196685791
    8. '[
' → logprob: -4.301760196685791
    9. ' integers' → logprob: -4.551760196685791
    10. '_' → logprob: -4.801760196685791

Token 49: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9574512243270874
    2. 'a' → logprob: -1.2074512243270874
    3. 'ent' → logprob: -2.457451343536377
    4. 'numbers' → logprob: -2.957451343536377
    5. 'x' → logprob: -3.332451343536377
    6. '[' → logprob: -4.082451343536377
    7. 'nums' → logprob: -4.082451343536377
    8. 'map' → logprob: -4.082451343536377
    9. 's' → logprob: -4.457451343536377
    10. 'l' → logprob: -5.082451343536377

Token 50: ' 
' (ID: 793)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.43419188261032104
    2. 'map' → logprob: -2.934191942214966
    3. ' et' → logprob: -3.059191942214966
    4. 'et' → logprob: -3.184191942214966
    5. ' map' → logprob: -3.559191942214966
    6. 'numbers' → logprob: -3.559191942214966
    7. '#' → logprob: -3.809191942214966
    8. ' la' → logprob: -3.934191942214966
    9. ' numbers' → logprob: -4.309191703796387
    10. 'strip' → logprob: -4.559191703796387

Token 51: '#' (ID: 2)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.9343422651290894
    2. '#' → logprob: -1.0593422651290894
    3. 'p' → logprob: -2.559342384338379
    4. 'et' → logprob: -2.809342384338379
    5. ' et' → logprob: -3.434342384338379
    6. ' #' → logprob: -3.809342384338379
    7. 'map' → logprob: -4.684342384338379
    8. 'qui' → logprob: -4.934342384338379
    9. ' lesquelles' → logprob: -5.434342384338379
    10. 'les' → logprob: -5.559342384338379

Token 52: ' map' (ID: 4014)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9398006200790405
    2. ' puis' → logprob: -1.5648006200790405
    3. 'p' → logprob: -1.8148006200790405
    4. 'et' → logprob: -2.43980073928833
    5. 'map' → logprob: -3.18980073928833
    6. 'numbers' → logprob: -4.06480073928833
    7. ' et' → logprob: -4.18980073928833
    8. ' map' → logprob: -4.43980073928833
    9. 'qui' → logprob: -4.56480073928833
    10. 'ens' → logprob: -4.93980073928833

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2567311227321625
    2. '(' → logprob: -1.5067311525344849
    3. '(lambda' → logprob: -5.381731033325195
    4. '(
' → logprob: -9.631731033325195
    5. 'int' → logprob: -10.131731033325195
    6. '[int' → logprob: -10.756731033325195
    7. '(str' → logprob: -10.881731033325195
    8. '<int' → logprob: -10.881731033325195
    9. '=int' → logprob: -12.006731033325195
    10. '```' → logprob: -12.256731033325195

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16090688109397888
    2. ')' → logprob: -1.9109069108963013
    3. '),' → logprob: -8.660906791687012
    4. ',)' → logprob: -8.660906791687012
    5. ' )' → logprob: -9.285906791687012
    6. ' ,' → logprob: -9.285906791687012
    7. '```' → logprob: -10.910906791687012
    8. ',
' → logprob: -11.285906791687012
    9. ' ' → logprob: -11.410906791687012
    10. '(' → logprob: -11.410906791687012

Token 55: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3884659707546234
    2. 'input' → logprob: -1.2634660005569458
    3. ')' → logprob: -3.8884658813476562
    4. ' )' → logprob: -4.638465881347656
    5. '...)' → logprob: -5.013465881347656
    6. '...' → logprob: -7.013465881347656
    7. ' ...)' → logprob: -7.138465881347656
    8. ' la' → logprob: -8.888465881347656
    9. ' ...' → logprob: -9.013465881347656
    10. '(input' → logprob: -9.513465881347656

Token 56: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004005622584372759
    2. ' )' → logprob: -6.254005432128906
    3. '(' → logprob: -7.379005432128906
    4. 'convert' → logprob: -8.129005432128906
    5. '(int' → logprob: -9.254005432128906
    6. '()' → logprob: -9.254005432128906
    7. ' transforme' → logprob: -9.254005432128906
    8. ',' → logprob: -9.379005432128906
    9. '<|end|>' → logprob: -9.754005432128906
    10. '(convert' → logprob: -9.754005432128906

Token 57: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00047928967978805304
    2. ' it' → logprob: -7.750479221343994
    3. '   ' → logprob: -11.375479698181152
    4. '\' → logprob: -12.375479698181152
    5. 'ies' → logprob: -12.375479698181152
    6. '_it' → logprob: -12.500479698181152
    7. '```' → logprob: -12.750479698181152
    8. '	it' → logprob: -13.250479698181152
    9. 'et' → logprob: -13.375479698181152
    10. '(it' → logprob: -13.375479698181152

Token 58: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2847188115119934
    2. ' chacune' → logprob: -1.6597187519073486
    3. ' les' → logprob: -3.7847187519073486
    4. 'cha' → logprob: -4.784718990325928
    5. ' ces' → logprob: -4.909718990325928
    6. ' la' → logprob: -5.034718990325928
    7. 'les' → logprob: -5.159718990325928
    8. 'ces' → logprob: -6.159718990325928
    9. ' each' → logprob: -6.409718990325928
    10. ' ' → logprob: -7.284718990325928

Token 59: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04861427843570709
    2. ' chaîne' → logprob: -3.298614263534546
    3. 'chaine' → logprob: -5.298614501953125
    4. ' élément' → logprob: -5.423614501953125
    5. ' chaine' → logprob: -7.798614501953125
    6. 'cha' → logprob: -7.798614501953125
    7. ' ' → logprob: -8.673614501953125
    8. 'él' → logprob: -10.173614501953125
    9. 'é' → logprob: -11.298614501953125
    10. ' él' → logprob: -11.423614501953125

Token 60: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6506434679031372
    2. 'en' → logprob: -1.2756434679031372
    3. ')' → logprob: -1.6506434679031372
    4. '(en' → logprob: -6.150643348693848
    5. ' )' → logprob: -6.525643348693848
    6. '(' → logprob: -7.275643348693848
    7. '()' → logprob: -7.525643348693848
    8. '_en' → logprob: -8.150643348693848
    9. '```' → logprob: -8.150643348693848
    10. '(token' → logprob: -8.150643348693848

Token 61: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2570008039474487
    2. 'ent' → logprob: -1.5070008039474487
    3. ' int' → logprob: -1.6320008039474487
    4. ' entier' → logprob: -1.8820008039474487
    5. ' un' → logprob: -2.3820009231567383
    6. ' des' → logprob: -3.2570009231567383
    7. ' ent' → logprob: -4.632000923156738
    8. 'un' → logprob: -6.007000923156738
    9. ' integers' → logprob: -7.132000923156738
    10. ' integer' → logprob: -7.382000923156738

Token 62: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.170734703540802
    2. 'n' → logprob: -2.7957346439361572
    3. 'ent' → logprob: -2.9207346439361572
    4. ' a' → logprob: -3.6707346439361572
    5. 'x' → logprob: -5.170734882354736
    6. 'val' → logprob: -6.295734882354736
    7. ' ent' → logprob: -6.545734882354736
    8. ')' → logprob: -7.170734882354736
    9. 's' → logprob: -7.295734882354736
    10. 'nums' → logprob: -7.295734882354736

Token 63: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8805017471313477
    2. 'ent' → logprob: -1.0055017471313477
    3. 'n' → logprob: -1.6305017471313477
    4. 'x' → logprob: -4.630501747131348
    5. 'nums' → logprob: -5.380501747131348
    6. 'trip' → logprob: -5.755501747131348
    7. 'numbers' → logprob: -6.005501747131348
    8. 'tro' → logprob: -6.880501747131348
    9. 'val' → logprob: -7.380501747131348
    10. '```' → logprob: -7.880501747131348

Token 64: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.047763749957084656
    2. 'n' → logprob: -3.7977638244628906
    3. 'ent' → logprob: -4.172763824462891
    4. 'x' → logprob: -5.047763824462891
    5. ' a' → logprob: -6.422763824462891
    6. 'val' → logprob: -8.54776382446289
    7. 'values' → logprob: -9.79776382446289
    8. '```' → logprob: -9.92276382446289
    9. 'trip' → logprob: -10.04776382446289
    10. 'v' → logprob: -10.04776382446289

Token 65: ',' (ID: 11)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1256276369094849
    2. ',' → logprob: -1.3756276369094849
    3. 'a' → logprob: -1.6256276369094849
    4. ' les' → logprob: -3.1256275177001953
    5. ' la' → logprob: -3.3756275177001953
    6. 'x' → logprob: -3.5006275177001953
    7. ' x' → logprob: -3.8756275177001953
    8. 'nums' → logprob: -4.500627517700195
    9. ' un' → logprob: -4.625627517700195
    10. 'n' → logprob: -4.875627517700195

Token 66: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.439142107963562
    2. ' a' → logprob: -1.064142107963562
    3. 'ent' → logprob: -5.814142227172852
    4. 'n' → logprob: -7.064142227172852
    5. 'nums' → logprob: -7.189142227172852
    6. 'x' → logprob: -7.314142227172852
    7. 'numbers' → logprob: -7.439142227172852
    8. ' les' → logprob: -7.564142227172852
    9. 'l' → logprob: -8.064142227172852
    10. ' lst' → logprob: -8.064142227172852

Token 67: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4749809205532074
    2. 'e' → logprob: -1.0999809503555298
    3. 'es' → logprob: -3.2249808311462402
    4. 's' → logprob: -6.22498083114624
    5. 'i' → logprob: -7.09998083114624
    6. ' a' → logprob: -7.47498083114624
    7. '#' → logprob: -7.97498083114624
    8. 'ist' → logprob: -8.099981307983398
    9. 'iste' → logprob: -8.599981307983398
    10. ''ensemble' → logprob: -9.099981307983398

Token 68: 'ect' (ID: 534)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.3417487144470215
    2. 'ect' → logprob: -1.7167487144470215
    3. 'ic' → logprob: -2.7167487144470215
    4. 'i' → logprob: -3.8417487144470215
    5. '#' → logprob: -4.4667487144470215
    6. 'ich' → logprob: -5.0917487144470215
    7. 'iche' → logprob: -6.4667487144470215
    8. 'ec' → logprob: -7.0917487144470215
    9. 'ection' → logprob: -7.5917487144470215
    10. 'a' → logprob: -8.09174919128418

Token 69: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3166259825229645
    2. 'a' → logprob: -1.316625952720642
    3. 'at' → logprob: -6.191626071929932
    4. 'e' → logprob: -8.191625595092773
    5. ' a' → logprob: -8.191625595092773
    6. 'm' → logprob: -8.941625595092773
    7. 'atio' → logprob: -8.941625595092773
    8. 'ati' → logprob: -9.066625595092773
    9. ' at' → logprob: -9.066625595092773
    10. '#' → logprob: -9.691625595092773

Token 70: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01773451454937458
    2. ' a' → logprob: -4.767734527587891
    3. 'x' → logprob: -4.767734527587891
    4. 'n' → logprob: -8.51773452758789
    5. 'ent' → logprob: -9.64273452758789
    6. ' x' → logprob: -9.76773452758789
    7. ' des' → logprob: -10.14273452758789
    8. 'nombre' → logprob: -10.39273452758789
    9. '[a' → logprob: -10.39273452758789
    10. 'trip' → logprob: -10.64273452758789

Token 71: ' permet' (ID: 11798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016620157286524773
    2. ' a' → logprob: -4.64162015914917
    3. 'x' → logprob: -5.76662015914917
    4. 'n' → logprob: -6.14162015914917
    5. 'ent' → logprob: -6.89162015914917
    6. 'A' → logprob: -8.891619682312012
    7. 'nombre' → logprob: -9.141619682312012
    8. ' x' → logprob: -10.141619682312012
    9. 'i' → logprob: -10.391619682312012
    10. ' n' → logprob: -10.641619682312012

Token 72: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.694409191608429
    2. 'd' → logprob: -1.4444091320037842
    3. ' d' → logprob: -1.6944091320037842
    4. 'de' → logprob: -2.694409132003784
    5. 't' → logprob: -4.819409370422363
    6. 'a' → logprob: -6.944409370422363
    7. ' ' → logprob: -7.319409370422363
    8. '=' → logprob: -7.694409370422363
    9. 'e' → logprob: -7.944409370422363
    10. ' a' → logprob: -8.069409370422363

Token 73: ' stock' (ID: 6546)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4013325870037079
    2. 'assign' → logprob: -2.1513326168060303
    3. ' récupérer' → logprob: -2.2763326168060303
    4. 'aff' → logprob: -3.0263326168060303
    5. ' stock' → logprob: -4.276332378387451
    6. 'dé' → logprob: -4.401332378387451
    7. ' affect' → logprob: -4.401332378387451
    8. 'l' → logprob: -5.401332378387451
    9. 'stock' → logprob: -5.526332378387451
    10. 'd' → logprob: -6.401332378387451

Token 74: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.5213274309644476e-05
    2. 'e' → logprob: -11.125015258789062
    3. 'r' → logprob: -15.750015258789062
    4. 'é' → logprob: -15.875015258789062
    5. ' er' → logprob: -16.750015258789062
    6. 'ent' → logprob: -17.250015258789062
    7. 'ner' → logprob: -17.750015258789062
    8. '#' → logprob: -18.000015258789062
    9. 'a' → logprob: -18.000015258789062
    10. ' d' → logprob: -18.250015258789062

Token 75: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33904892206192017
    2. 'x' → logprob: -1.8390488624572754
    3. ' a' → logprob: -2.4640488624572754
    4. 'n' → logprob: -3.8390488624572754
    5. ' x' → logprob: -5.464048862457275
    6. ' n' → logprob: -5.714048862457275
    7. 'ent' → logprob: -5.964048862457275
    8. ' ' → logprob: -5.964048862457275
    9. 'nombre' → logprob: -6.839048862457275
    10. ' nombre' → logprob: -7.089048862457275

Token 76: ' trois' (ID: 25564)
  Prédit: ' trois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.2901843786239624
    2. 'tro' → logprob: -2.040184497833252
    3. '3' → logprob: -2.915184497833252
    4. 'val' → logprob: -3.290184497833252
    5. ' valeurs' → logprob: -4.165184497833252
    6. 'ent' → logprob: -4.665184497833252
    7. 't' → logprob: -6.665184497833252
    8. ' ' → logprob: -6.665184497833252
    9. ' ent' → logprob: -7.165184497833252
    10. ' val' → logprob: -7.665184497833252

Token 77: ' valeurs' (ID: 73668)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.734599232673645
    2. 'n' → logprob: -0.984599232673645
    3. 'a' → logprob: -2.4845991134643555
    4. 'val' → logprob: -4.1095991134643555
    5. ' ent' → logprob: -4.6095991134643555
    6. 'nombre' → logprob: -4.8595991134643555
    7. 'x' → logprob: -5.3595991134643555
    8. ' nombres' → logprob: -5.4845991134643555
    9. ' ' → logprob: -5.8595991134643555
    10. ' a' → logprob: -5.9845991134643555

Token 78: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07378311455249786
    2. 'x' → logprob: -2.8237831592559814
    3. 'n' → logprob: -4.573782920837402
    4. 'i' → logprob: -7.073782920837402
    5. '```' → logprob: -8.573782920837402
    6. ',' → logprob: -9.198782920837402
    7. 'ent' → logprob: -9.698782920837402
    8. ':' → logprob: -9.698782920837402
    9. ' a' → logprob: -9.823782920837402
    10. 'A' → logprob: -10.198782920837402

Token 79: ' N' (ID: 478)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8644748330116272
    2. 'a' → logprob: -0.9894748330116272
    3. ' trois' → logprob: -2.2394747734069824
    4. 'tro' → logprob: -3.2394747734069824
    5. ' variables' → logprob: -3.7394747734069824
    6. ' les' → logprob: -4.614474773406982
    7. 'x' → logprob: -4.739474773406982
    8. ' des' → logprob: -4.989474773406982
    9. ' x' → logprob: -5.364474773406982
    10. ' three' → logprob: -6.114474773406982

Token 80: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8743310570716858
    2. ',' → logprob: -1.624330997467041
    3. ' =' → logprob: -1.624330997467041
    4. 's' → logprob: -2.499330997467041
    5. 'N' → logprob: -2.624330997467041
    6. '=' → logprob: -3.999330997467041
    7. '[' → logprob: -6.124330997467041
    8. 'n' → logprob: -6.124330997467041
    9. ' ' → logprob: -6.249330997467041
    10. 'a' → logprob: -6.499330997467041

Token 81: ' A' (ID: 355)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2030070722103119
    2. ' M' → logprob: -2.9530069828033447
    3. 'P' → logprob: -3.4530069828033447
    4. 'a' → logprob: -3.9530069828033447
    5. 'A' → logprob: -3.9530069828033447
    6. 'K' → logprob: -4.578007221221924
    7. 'E' → logprob: -4.578007221221924
    8. 'X' → logprob: -4.828007221221924
    9. 'S' → logprob: -5.078007221221924
    10. 'O' → logprob: -5.203007221221924

Token 82: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011777279432862997
    2. ' ,' → logprob: -6.876177787780762
    3. ',B' → logprob: -9.501177787780762
    4. 'et' → logprob: -10.751177787780762
    5. ',N' → logprob: -11.751177787780762
    6. ' and' → logprob: -12.001177787780762
    7. 's' → logprob: -12.251177787780762
    8. ' et' → logprob: -12.376177787780762
    9. 'and' → logprob: -12.876177787780762
    10. ',b' → logprob: -12.876177787780762

Token 83: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5786619782447815
    2. 'B' → logprob: -0.8286619782447815
    3. ' ' → logprob: -6.953661918640137
    4. 'K' → logprob: -8.328661918640137
    5. ' K' → logprob: -8.328661918640137
    6. ' M' → logprob: -8.703661918640137
    7. 'M' → logprob: -8.703661918640137
    8. 'D' → logprob: -9.203661918640137
    9. 'T' → logprob: -9.328661918640137
    10. 'S' → logprob: -9.453661918640137

Token 84: ' respect' (ID: 5618)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0021816655062139034
    2. 'n' → logprob: -6.377181529998779
    3. ',' → logprob: -8.002182006835938
    4. '```' → logprob: -9.502182006835938
    5. ' N' → logprob: -10.877182006835938
    6. ':' → logprob: -11.877182006835938
    7. '#' → logprob: -12.252182006835938
    8. '

' → logprob: -12.252182006835938
    9. ')' → logprob: -12.502182006835938
    10. '(' → logprob: -12.752182006835938

Token 85: 'ivement' (ID: 37978)
  Prédit: 'vement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vement' → logprob: -0.05738955736160278
    2. 've' → logprob: -3.057389497756958
    3. 'v' → logprob: -5.182389736175537
    4. 'vel' → logprob: -6.057389736175537
    5. '#' → logprob: -8.932389259338379
    6. 'ved' → logprob: -8.932389259338379
    7. '```' → logprob: -9.432389259338379
    8. 'usement' → logprob: -9.682389259338379
    9. 't' → logprob: -9.682389259338379
    10. 'ves' → logprob: -9.807389259338379

Token 86: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00041756415157578886
    2. 'n' → logprob: -7.875417709350586
    3. '#' → logprob: -11.125417709350586
    4. ',' → logprob: -12.375417709350586
    5. '```' → logprob: -12.625417709350586
    6. ' N' → logprob: -12.750417709350586
    7. '
' → logprob: -13.375417709350586
    8. '[' → logprob: -13.375417709350586
    9. '

' → logprob: -14.125417709350586
    10. '' → logprob: -14.125417709350586

Token 87: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010625827126204967
    2. 'n' → logprob: -6.876062393188477
    3. '```' → logprob: -11.751062393188477
    4. '#' → logprob: -12.376062393188477
    5. ' N' → logprob: -12.751062393188477
    6. '[' → logprob: -12.876062393188477
    7. 'x' → logprob: -13.376062393188477
    8. ' ' → logprob: -13.751062393188477
    9. '(' → logprob: -13.876062393188477
    10. ' 
' → logprob: -14.001062393188477

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ' ,' → logprob: -10.500046730041504
    3. ',A' → logprob: -10.875046730041504
    4. 's' → logprob: -15.875046730041504
    5. 'A' → logprob: -16.12504768371582
    6. ',a' → logprob: -16.37504768371582
    7. 'a' → logprob: -17.12504768371582
    8. ',
' → logprob: -17.50004768371582
    9. '```' → logprob: -17.75004768371582
    10. '1' → logprob: -18.00004768371582

Token 89: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4191787540912628
    2. ' A' → logprob: -1.1691787242889404
    3. 'A' → logprob: -4.0441789627075195
    4. '  ' → logprob: -4.9191789627075195
    5. ' ' → logprob: -5.1691789627075195
    6. '<|end|>' → logprob: -7.0441789627075195
    7. ' ' → logprob: -9.29417896270752
    8. 's' → logprob: -9.54417896270752
    9. ')' → logprob: -9.91917896270752
    10. ' ,' → logprob: -10.54417896270752

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.051066520740278e-05
    2. ' ,' → logprob: -9.750060081481934
    3. '<|end|>' → logprob: -13.375060081481934
    4. ',B' → logprob: -15.250060081481934
    5. '=' → logprob: -16.12506103515625
    6. ' =' → logprob: -16.37506103515625
    7. ' ' → logprob: -16.50006103515625
    8. 's' → logprob: -17.12506103515625
    9. ')' → logprob: -17.37506103515625
    10. '```' → logprob: -17.75006103515625

Token 91: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.10347361117601395
    2. 'B' → logprob: -2.353473663330078
    3. ' ' → logprob: -5.728473663330078
    4. '  ' → logprob: -12.228473663330078
    5. ' and' → logprob: -12.978473663330078
    6. ' ' → logprob: -14.353473663330078
    7. ' =' → logprob: -14.728473663330078
    8. ',' → logprob: -14.853473663330078
    9. 's' → logprob: -15.478473663330078
    10. ' 
' → logprob: -15.603473663330078

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894187211990356
    2. '=' → logprob: -2.463941812515259
    3. ',' → logprob: -13.46394157409668
    4. '=input' → logprob: -14.33894157409668
    5. ')' → logprob: -16.46394157409668
    6. ' ' → logprob: -16.71394157409668
    7. '=int' → logprob: -17.08894157409668
    8. ' =)' → logprob: -17.08894157409668
    9. ' =
' → logprob: -17.21394157409668
    10. ' =[' → logprob: -17.46394157409668

Token 93: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38687217235565186
    2. ' map' → logprob: -1.1368721723556519
    3. 'list' → logprob: -14.636872291564941
    4. '	map' → logprob: -14.761872291564941
    5. 'm' → logprob: -16.136871337890625
    6. ' list' → logprob: -16.261871337890625
    7. ' ' → logprob: -16.761871337890625
    8. '(map' → logprob: -17.261871337890625
    9. ' ' → logprob: -17.761871337890625
    10. 'int' → logprob: -18.636871337890625

Token 94: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12719276547431946
    2. '(' → logprob: -2.127192735671997
    3. '<int' → logprob: -9.627192497253418
    4. '(input' → logprob: -9.752192497253418
    5. '<|end|>' → logprob: -10.377192497253418
    6. '(lambda' → logprob: -10.502192497253418
    7. '(str' → logprob: -10.752192497253418
    8. ' (' → logprob: -11.127192497253418
    9. '(
' → logprob: -12.002192497253418
    10. 'int' → logprob: -12.127192497253418

Token 95: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.028466518968343735
    2. 'input' → logprob: -3.6534664630889893
    3. '(' → logprob: -7.028466701507568
    4. ')' → logprob: -7.028466701507568
    5. ',input' → logprob: -8.40346622467041
    6. ' (' → logprob: -9.15346622467041
    7. ' input' → logprob: -10.15346622467041
    8. '=input' → logprob: -11.77846622467041
    9. '```' → logprob: -12.77846622467041
    10. ')(' → logprob: -12.90346622467041

Token 96: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014176673255860806
    2. ' input' → logprob: -4.264176845550537
    3. '(input' → logprob: -11.889176368713379
    4. ')' → logprob: -12.139176368713379
    5. ' ' → logprob: -15.014176368713379
    6. ',input' → logprob: -15.764176368713379
    7. '=input' → logprob: -16.389177322387695
    8. ' )' → logprob: -16.514177322387695
    9. '	input' → logprob: -16.514177322387695
    10. '   ' → logprob: -16.639177322387695

Token 97: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5367148518562317
    2. '()' → logprob: -1.161714792251587
    3. '())' → logprob: -2.286714792251587
    4. ')' → logprob: -7.661715030670166
    5. '()).' → logprob: -8.911714553833008
    6. '()))' → logprob: -10.161714553833008
    7. ' ()' → logprob: -10.661714553833008
    8. '(' → logprob: -10.911714553833008
    9. '()`' → logprob: -10.911714553833008
    10. ' ())' → logprob: -10.911714553833008

Token 98: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033939589047804475
    2. 'strip' → logprob: -8.00033950805664
    3. ' split' → logprob: -12.62533950805664
    4. 'rstrip' → logprob: -15.00033950805664
    5. ')' → logprob: -15.87533950805664
    6. 'spl' → logprob: -16.12533950805664
    7. '(split' → logprob: -17.25033950805664
    8. 's' → logprob: -18.37533950805664
    9. 'read' → logprob: -19.37533950805664
    10. 'startswith' → logprob: -20.37533950805664

Token 99: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011854642070829868
    2. '()' → logprob: -4.886854648590088
    3. '()))' → logprob: -6.011854648590088
    4. ')' → logprob: -7.136854648590088
    5. '(' → logprob: -7.386854648590088
    6. '('' → logprob: -8.13685417175293
    7. '))' → logprob: -10.38685417175293
    8. ' ())' → logprob: -10.76185417175293
    9. '())
' → logprob: -11.63685417175293
    10. '(','' → logprob: -12.38685417175293

Token 100: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' Dé' (ID: 27247)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8410206437110901
    2. 'for' → logprob: -1.3410205841064453
    3. '#' → logprob: -2.3410205841064453
    4. 'print' → logprob: -3.0910205841064453
    5. ' if' → logprob: -3.2160205841064453
    6. ' for' → logprob: -3.4660205841064453
    7. 'i' → logprob: -3.7160205841064453
    8. 'result' → logprob: -3.8410205841064453
    9. 's' → logprob: -4.341020584106445
    10. 'r' → logprob: -5.091020584106445

Token 102: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.162506103515625
    2. 'f' → logprob: -2.662506103515625
    3. 'claration' → logprob: -3.287506103515625
    4. 'fi' → logprob: -3.662506103515625
    5. '#' → logprob: -4.912506103515625
    6. 'termination' → logprob: -5.662506103515625
    7. 'but' → logprob: -6.162506103515625
    8. ' finition' → logprob: -6.287506103515625
    9. 'veloppement' → logprob: -8.162506103515625
    10. 'duction' → logprob: -8.537506103515625

Token 103: 'ition' (ID: 868)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.11056168377399445
    2. 'ition' → logprob: -2.3605616092681885
    3. 'i' → logprob: -5.485561847686768
    4. '#' → logprob: -5.860561847686768
    5. 'r' → logprob: -6.610561847686768
    6. 'e' → logprob: -7.235561847686768
    7. 'inition' → logprob: -8.23556137084961
    8. 'er' → logprob: -8.61056137084961
    9. 't' → logprob: -8.61056137084961
    10. 'tion' → logprob: -9.23556137084961

Token 104: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7435607314109802
    2. '<|end|>' → logprob: -1.243560791015625
    3. ' de' → logprob: -2.118560791015625
    4. 'def' → logprob: -2.618560791015625
    5. ' d' → logprob: -3.993560791015625
    6. ' des' → logprob: -4.743560791015625
    7. ' def' → logprob: -6.118560791015625
    8. 'd' → logprob: -6.118560791015625
    9. '<|end|>' → logprob: -6.118560791015625
    10. 'de' → logprob: -6.118560791015625

Token 105: ' module' (ID: 8827)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08852244913578033
    2. ' def' → logprob: -2.838522434234619
    3. '_' → logprob: -4.463522434234619
    4. ' ' → logprob: -5.088522434234619
    5. 'r' → logprob: -6.963522434234619
    6. 'a' → logprob: -6.963522434234619
    7. 's' → logprob: -7.213522434234619
    8. 'd' → logprob: -7.338522434234619
    9. ' nombre' → logprob: -7.713522434234619
    10. ' )' → logprob: -7.838522434234619

Token 106: ' utilisé' (ID: 53138)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3607690930366516
    2. ' ' → logprob: -2.110769033432007
    3. ' def' → logprob: -2.610769033432007
    4. ' de' → logprob: -2.860769033432007
    5. '<|end|>' → logprob: -4.735769271850586
    6. '_' → logprob: -5.110769271850586
    7. ' math' → logprob: -5.235769271850586
    8. '  ' → logprob: -5.610769271850586
    9. ' ' → logprob: -5.860769271850586
    10. ' ,' → logprob: -6.110769271850586

Token 107: ' dans' (ID: 2671)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.43357551097869873
    2. ' math' → logprob: -1.3085755109786987
    3. 'math' → logprob: -3.0585756301879883
    4. ' import' → logprob: -3.4335756301879883
    5. 'from' → logprob: -7.058575630187988
    6. '_' → logprob: -8.308575630187988
    7. 's' → logprob: -8.433575630187988
    8. ' random' → logprob: -8.933575630187988
    9. 'cmath' → logprob: -8.933575630187988
    10. ' from' → logprob: -9.683575630187988

Token 108: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7550467252731323
    2. 'la' → logprob: -1.0050467252731323
    3. 'l' → logprob: -2.880046844482422
    4. ' la' → logprob: -3.255046844482422
    5. ' le' → logprob: -3.755046844482422
    6. 'les' → logprob: -4.630046844482422
    7. 'une' → logprob: -5.880046844482422
    8. 'a' → logprob: -6.005046844482422
    9. 'python' → logprob: -6.005046844482422
    10. 'Python' → logprob: -6.005046844482422

Token 109: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.7252950668334961
    2. ' calcul' → logprob: -1.100295066833496
    3. 'pro' → logprob: -2.350295066833496
    4. 'programme' → logprob: -4.350295066833496
    5. '#' → logprob: -4.475295066833496
    6. 'ex' → logprob: -4.850295066833496
    7. 'tests' → logprob: -5.350295066833496
    8. ' tests' → logprob: -5.475295066833496
    9. ' problème' → logprob: -5.600295066833496
    10. 'e' → logprob: -5.725295066833496

Token 110: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1868995428085327
    2. 'ateur' → logprob: -1.3118995428085327
    3. 'es' → logprob: -2.0618996620178223
    4. '#' → logprob: -2.4368996620178223
    5. '_' → logprob: -3.0618996620178223
    6. 'e' → logprob: -3.3118996620178223
    7. 'aires' → logprob: -3.6868996620178223
    8. 'atrice' → logprob: -3.6868996620178223
    9. 'aire' → logprob: -4.061899662017822
    10. 'def' → logprob: -4.186899662017822

Token 111: ' pour' (ID: 1930)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.936286211013794
    2. 'mod' → logprob: -1.561286211013794
    3. 'MOD' → logprob: -1.936286211013794
    4. '%' → logprob: -2.186286211013794
    5. 'm' → logprob: -3.061286211013794
    6. '10' → logprob: -4.311285972595215
    7. '_' → logprob: -4.561285972595215
    8. 'X' → logprob: -4.686285972595215
    9. '`' → logprob: -5.186285972595215
    10. '2' → logprob: -5.311285972595215

Token 112: ' éviter' (ID: 64013)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0996878147125244
    2. '100' → logprob: -1.7246878147125244
    3. ' le' → logprob: -1.9746878147125244
    4. ' ' → logprob: -2.3496878147125244
    5. 'le' → logprob: -2.5996878147125244
    6. ' les' → logprob: -3.3496878147125244
    7. '10' → logprob: -3.4746878147125244
    8. 'la' → logprob: -4.349687576293945
    9. ' modulo' → logprob: -4.474687576293945
    10. ' l' → logprob: -4.724687576293945

Token 113: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5061172246932983
    2. ' l' → logprob: -2.006117343902588
    3. ' une' → logprob: -2.256117343902588
    4. ' la' → logprob: -2.506117343902588
    5. ' ' → logprob: -3.381117343902588
    6. ' des' → logprob: -4.256117343902588
    7. ' overflow' → logprob: -5.131117343902588
    8. ' le' → logprob: -5.381117343902588
    9. 'l' → logprob: -5.381117343902588
    10. ' toute' → logprob: -5.881117343902588

Token 114: ' déb' (ID: 37874)
  Prédit: ' erreurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' erreurs' → logprob: -0.8395403027534485
    2. ' dépasse' → logprob: -1.5895402431488037
    3. ' overflow' → logprob: -1.7145402431488037
    4. ' problèmes' → logprob: -3.0895402431488037
    5. 'overflow' → logprob: -3.2145402431488037
    6. ' conflits' → logprob: -3.3395402431488037
    7. 'd' → logprob: -4.214540481567383
    8. ' divisions' → logprob: -4.714540481567383
    9. 'div' → logprob: -5.339540481567383
    10. ' division' → logprob: -5.714540481567383

Token 115: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.10025380551815033
    2. 'uts' → logprob: -2.4752538204193115
    3. 'ords' → logprob: -4.975253582000732
    4. 'â' → logprob: -6.475253582000732
    5. 'orts' → logprob: -7.725253582000732
    6. 'âts' → logprob: -8.22525405883789
    7. '' → logprob: -8.72525405883789
    8. 'ors' → logprob: -8.97525405883789
    9. 't' → logprob: -8.97525405883789
    10. 'l' → logprob: -8.97525405883789

Token 116: 'ements' (ID: 4507)
  Prédit: 'êtement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'êtement' → logprob: -0.7760394215583801
    2. 'èrement' → logprob: -2.2760393619537354
    3. 'ît' → logprob: -2.2760393619537354
    4. 'êt' → logprob: -3.0260393619537354
    5. 'î' → logprob: -3.1510393619537354
    6. 'i' → logprob: -3.5260393619537354
    7. 'it' → logprob: -3.7760393619537354
    8. 'ément' → logprob: -3.9010393619537354
    9. 'éments' → logprob: -4.4010396003723145
    10. 'ement' → logprob: -4.7760396003723145

Token 117: ' ar' (ID: 646)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5060123801231384
    2. 'M' → logprob: -1.6310124397277832
    3. 'mod' → logprob: -2.006012439727783
    4. '_' → logprob: -4.131012439727783
    5. '10' → logprob: -5.006012439727783
    6. ' MOD' → logprob: -5.381012439727783
    7. '.' → logprob: -5.506012439727783
    8. ' =' → logprob: -5.631012439727783
    9. '2' → logprob: -5.631012439727783
    10. 'm' → logprob: -5.631012439727783

Token 118: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.024274563416838646
    2. 'r' → logprob: -3.8992745876312256
    3. 'ithmetic' → logprob: -5.8992743492126465
    4. 'é' → logprob: -8.149274826049805
    5. 'yth' → logprob: -9.149274826049805
    6. '```' → logprob: -9.274274826049805
    7. '**' → logprob: -9.899274826049805
    8. '``' → logprob: -10.024274826049805
    9. 'ythm' → logprob: -10.024274826049805
    10. 'i' → logprob: -10.149274826049805

Token 119: 'mé' (ID: 35328)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10569610446691513
    2. 'mé' → logprob: -2.355696201324463
    3. 'étiques' → logprob: -5.980696201324463
    4. 'ématiques' → logprob: -7.230696201324463
    5. 'th' → logprob: -7.355696201324463
    6. 'étique' → logprob: -7.730696201324463
    7. 'im' → logprob: -8.105695724487305
    8. 'met' → logprob: -8.230695724487305
    9. 'é' → logprob: -9.355695724487305
    10. 'ématique' → logprob: -9.855695724487305

Token 120: 'tiques' (ID: 60539)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.028118059039115906
    2. 'tiques' → logprob: -4.278118133544922
    3. 's' → logprob: -5.028118133544922
    4. 'd' → logprob: -5.653118133544922
    5. '#' → logprob: -6.903118133544922
    6. 'thique' → logprob: -7.403118133544922
    7. 'taire' → logprob: -8.028118133544922
    8. '```' → logprob: -8.153118133544922
    9. '-' → logprob: -8.278118133544922
    10. '`' → logprob: -8.403118133544922

Token 121: ' sur' (ID: 1512)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.06187378615140915
    2. 'mod' → logprob: -3.4368736743927
    3. 'M' → logprob: -4.561873912811279
    4. ' MOD' → logprob: -5.061873912811279
    5. ' =' → logprob: -6.186873912811279
    6. '10' → logprob: -6.311873912811279
    7. 'MAX' → logprob: -6.936873912811279
    8. '100' → logprob: -7.061873912811279
    9. ' (' → logprob: -7.436873912811279
    10. ' modulo' → logprob: -7.811873912811279

Token 122: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8109622597694397
    2. '100' → logprob: -1.685962200164795
    3. ' les' → logprob: -2.060962200164795
    4. 'N' → logprob: -2.810962200164795
    5. 'le' → logprob: -2.810962200164795
    6. '10' → logprob: -3.435962200164795
    7. 'la' → logprob: -4.060962200164795
    8. 'l' → logprob: -4.685962200164795
    9. ' ' → logprob: -4.935962200164795
    10. ' le' → logprob: -5.185962200164795

Token 123: ' grands' (ID: 43085)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.7982778549194336
    2. ' ent' → logprob: -1.6732778549194336
    3. ' ' → logprob: -2.1732778549194336
    4. ' espaces' → logprob: -2.7982778549194336
    5. ' large' → logprob: -3.2982778549194336
    6. '10' → logprob: -4.048277854919434
    7. 'ent' → logprob: -4.048277854919434
    8. ' ' → logprob: -4.173277854919434
    9. '_' → logprob: -4.298277854919434
    10. 'calcul' → logprob: -4.673277854919434

Token 124: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05395449325442314
    2. '_' → logprob: -3.928954601287842
    3. ' integers' → logprob: -4.553954601287842
    4. ' ent' → logprob: -4.803954601287842
    5. ' ' → logprob: -6.053954601287842
    6. 'nombre' → logprob: -6.428954601287842
    7. ' nombre' → logprob: -6.428954601287842
    8. 'mod' → logprob: -6.678954601287842
    9. 'ent' → logprob: -6.803954601287842
    10. ' numbers' → logprob: -6.803954601287842

Token 125: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.003999326843768358
    2. 'ier' → logprob: -6.00399923324585
    3. 'i' → logprob: -6.62899923324585
    4. 'ières' → logprob: -9.253999710083008
    5. 'ers' → logprob: -10.628999710083008
    6. '```' → logprob: -10.878999710083008
    7. 'er' → logprob: -11.253999710083008
    8. '#' → logprob: -11.753999710083008
    9. 'ires' → logprob: -12.128999710083008
    10. 'ière' → logprob: -12.253999710083008

Token 126: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5538060069084167
    2. 'mod' → logprob: -1.5538060665130615
    3. 'M' → logprob: -1.6788060665130615
    4. ' M' → logprob: -4.928805828094482
    5. ' MOD' → logprob: -5.053805828094482
    6. 'm' → logprob: -5.303805828094482
    7. ' mod' → logprob: -5.803805828094482
    8. ' ' → logprob: -7.053805828094482
    9. ',' → logprob: -7.553805828094482
    10. '100' → logprob: -7.678805828094482

Token 127: 'M' (ID: 44)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08188371360301971
    2. ' MOD' → logprob: -2.831883668899536
    3. 'M' → logprob: -4.581883907318115
    4. 'mod' → logprob: -5.331883907318115
    5. ' M' → logprob: -5.706883907318115
    6. ' mod' → logprob: -7.956883907318115
    7. '10' → logprob: -7.956883907318115
    8. ' ' → logprob: -8.581883430480957
    9. '100' → logprob: -8.956883430480957
    10. '
' → logprob: -9.581883430480957

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133699297904968
    2. '=' → logprob: -1.3133699893951416
    3. '_' → logprob: -9.813369750976562
    4. ' ' → logprob: -11.438369750976562
    5. ' ' → logprob: -11.438369750976562
    6. 'od' → logprob: -11.813369750976562
    7. ' =
' → logprob: -12.063369750976562
    8. ',' → logprob: -12.188369750976562
    9. 'odule' → logprob: -12.688369750976562
    10. 'OD' → logprob: -13.063369750976562

Token 129: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2950087785720825
    2. ' ' → logprob: -1.7950087785720825
    3. '100' → logprob: -2.420008659362793
    4. '1' → logprob: -7.795008659362793
    5. '998' → logprob: -12.170008659362793
    6. '(' → logprob: -12.795008659362793
    7. ' ' → logprob: -13.045008659362793
    8. ' (' → logprob: -13.420008659362793
    9. 'int' → logprob: -13.420008659362793
    10. '101' → logprob: -14.545008659362793

Token 130: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3882976174354553
    2. '100' → logprob: -1.1382975578308105
    3. '998' → logprob: -6.8882975578308105
    4. '1' → logprob: -7.8882975578308105
    5. ' ' → logprob: -11.638298034667969
    6. '123' → logprob: -11.888298034667969
    7. '(' → logprob: -12.138298034667969
    8. 'int' → logprob: -12.888298034667969
    9. '```' → logprob: -13.763298034667969
    10. '109' → logprob: -13.763298034667969

Token 131: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.128163257315464e-07
    2. '247' → logprob: -15.875
    3. '_' → logprob: -16.375
    4. '245' → logprob: -17.875
    5. '254' → logprob: -18.0
    6. '24' → logprob: -19.125
    7. '243' → logprob: -19.25
    8. '744' → logprob: -19.25
    9. ''' → logprob: -19.625
    10. '444' → logprob: -20.0

Token 132: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00038038729690015316
    2. '853' → logprob: -7.875380516052246
    3. '3' → logprob: -15.625380516052246
    4. '35' → logprob: -16.37537956237793
    5. '357' → logprob: -19.25037956237793
    6. '351' → logprob: -19.37537956237793
    7. '```' → logprob: -19.37537956237793
    8. '352' → logprob: -19.62537956237793
    9. '857' → logprob: -20.12537956237793
    10. '53' → logprob: -20.81287956237793

Token 133: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4686427712440491
    2. '<|end|>' → logprob: -1.0936427116394043
    3. '#' → logprob: -3.8436427116394043
    4. '<|end|>' → logprob: -5.093642711639404
    5. 'N' → logprob: -5.843642711639404
    6. ' 
' → logprob: -6.093642711639404
    7. '  
' → logprob: -6.593642711639404
    8. '

' → logprob: -6.718642711639404
    9. '\n' → logprob: -7.343642711639404
    10. 'n' → logprob: -7.468642711639404

Token 134: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7051078081130981
    2. '
' → logprob: -1.0801078081130981
    3. ' 
' → logprob: -3.2051076889038086
    4. '#' → logprob: -3.2051076889038086
    5. 'res' → logprob: -3.5801076889038086
    6. 'C' → logprob: -4.205107688903809
    7. 'x' → logprob: -5.205107688903809
    8. 'def' → logprob: -5.330107688903809
    9. 'for' → logprob: -5.580107688903809
    10. 'a' → logprob: -5.705107688903809

Token 135: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3811681866645813
    2. 'def' → logprob: -2.0061681270599365
    3. 'res' → logprob: -2.8811681270599365
    4. '#' → logprob: -3.0061681270599365
    5. 's' → logprob: -3.8811681270599365
    6. 'dp' → logprob: -4.131168365478516
    7. 'fact' → logprob: -4.881168365478516
    8. 'C' → logprob: -4.881168365478516
    9. 'rés' → logprob: -5.756168365478516
    10. 'factor' → logprob: -5.756168365478516

Token 136: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5952137112617493
    2. ' =' → logprob: -1.5952136516571045
    3. '(' → logprob: -1.9702136516571045
    4. ' (' → logprob: -2.8452136516571045
    5. '_' → logprob: -4.845213890075684
    6. 'result' → logprob: -4.970213890075684
    7. ',' → logprob: -5.095213890075684
    8. '=' → logprob: -5.345213890075684
    9. 's' → logprob: -5.345213890075684
    10. '(N' → logprob: -5.845213890075684

Token 137: ' P' (ID: 398)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1914539337158203
    2. 'pow' → logprob: -1.1914539337158203
    3. '(A' → logprob: -2.0664539337158203
    4. ' pow' → logprob: -2.3164539337158203
    5. '(N' → logprob: -2.8164539337158203
    6. ' la' → logprob: -3.5664539337158203
    7. '(' → logprob: -3.9414539337158203
    8. '(pow' → logprob: -4.19145393371582
    9. '((' → logprob: -4.56645393371582
    10. 'A' → logprob: -5.19145393371582

Token 138: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1151852086186409
    2. '=' → logprob: -2.240185260772705
    3. '_' → logprob: -7.240185260772705
    4. 'r' → logprob: -7.740185260772705
    5. ' ' → logprob: -8.740184783935547
    6. ',' → logprob: -9.115184783935547
    7. 'rodu' → logprob: -9.115184783935547
    8. 'ower' → logprob: -9.115184783935547
    9. 'ro' → logprob: -9.365184783935547
    10. 'ermut' → logprob: -9.990184783935547

Token 139: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04524766653776169
    2. ' =' → logprob: -3.1702475547790527
    3. ' représente' → logprob: -7.170247554779053
    4. 'est' → logprob: -8.045248031616211
    5. ' correspond' → logprob: -8.670248031616211
    6. '=(' → logprob: -8.920248031616211
    7. ' est' → logprob: -8.920248031616211
    8. ' vaut' → logprob: -9.045248031616211
    9. 'repr' → logprob: -10.170248031616211
    10. '=P' → logprob: -10.170248031616211

Token 140: ' N' (ID: 478)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8843830823898315
    2. '(N' → logprob: -1.1343830823898315
    3. '(A' → logprob: -3.009383201599121
    4. '(' → logprob: -3.134383201599121
    5. ' la' → logprob: -3.134383201599121
    6. ' le' → logprob: -3.384383201599121
    7. 'le' → logprob: -3.759383201599121
    8. 'A' → logprob: -3.884383201599121
    9. 'N' → logprob: -4.509383201599121
    10. 'pow' → logprob: -4.509383201599121

Token 141: '+' (ID: 10)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.6816394329071045
    2. '%' → logprob: -1.9316394329071045
    3. ' %' → logprob: -1.9316394329071045
    4. '**' → logprob: -2.0566394329071045
    5. '!' → logprob: -2.4316394329071045
    6. '-' → logprob: -2.5566394329071045
    7. '*' → logprob: -2.6816394329071045
    8. ' -' → logprob: -2.8066394329071045
    9. '+' → logprob: -3.1816394329071045
    10. ' **' → logprob: -3.9316394329071045

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12925226986408234
    2. 'A' → logprob: -2.5042521953582764
    3. ' ' → logprob: -3.7542521953582764
    4. ' A' → logprob: -4.2542524337768555
    5. 'B' → logprob: -7.1292524337768555
    6. '2' → logprob: -7.5042524337768555
    7. '+' → logprob: -9.629252433776855
    8. ' B' → logprob: -9.629252433776855
    9. 'N' → logprob: -9.754252433776855
    10. '4' → logprob: -10.129252433776855

Token 143: ' ;' (ID: 4605)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7005674242973328
    2. ' +' → logprob: -0.7005674242973328
    3. 'P' → logprob: -5.325567245483398
    4. ' P' → logprob: -6.700567245483398
    5. ' ' → logprob: -7.950567245483398
    6. '-' → logprob: -8.700567245483398
    7. ')' → logprob: -8.825567245483398
    8. '#' → logprob: -9.325567245483398
    9. '
' → logprob: -9.325567245483398
    10. '=' → logprob: -9.450567245483398

Token 144: ' utilisé' (ID: 53138)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07980308681726456
    2. ' P' → logprob: -2.579802989959717
    3. '+' → logprob: -7.454802989959717
    4. ' =' → logprob: -9.079803466796875
    5. ' +' → logprob: -9.329803466796875
    6. ' 
' → logprob: -9.579803466796875
    7. ' ' → logprob: -11.454803466796875
    8. '
' → logprob: -11.579803466796875
    9. ' ' → logprob: -11.704803466796875
    10. '=' → logprob: -11.829803466796875

Token 145: ' dans' (ID: 2671)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6121890544891357
    2. ' dans' → logprob: -0.9871890544891357
    3. 'dans' → logprob: -2.9871890544891357
    4. 'pour' → logprob: -3.7371890544891357
    5. ' ici' → logprob: -5.987189292907715
    6. ' comme' → logprob: -6.112189292907715
    7. ' afin' → logprob: -6.237189292907715
    8. ' ' → logprob: -6.612189292907715
    9. ' notamment' → logprob: -7.987189292907715
    10. 's' → logprob: -8.112189292907715

Token 146: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.45847660303115845
    2. ' la' → logprob: -2.2084765434265137
    3. ' l' → logprob: -2.5834765434265137
    4. 'les' → logprob: -2.5834765434265137
    5. ' le' → logprob: -3.2084765434265137
    6. 'l' → logprob: -3.2084765434265137
    7. 'la' → logprob: -4.833476543426514
    8. 'le' → logprob: -4.833476543426514
    9. ' des' → logprob: -5.458476543426514
    10. ' une' → logprob: -7.333476543426514

Token 147: ' taille' (ID: 41644)
  Prédit: ' formule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' formule' → logprob: -0.6767421960830688
    2. ' suite' → logprob: -1.5517421960830688
    3. 'suite' → logprob: -2.0517420768737793
    4. 'form' → logprob: -2.5517420768737793
    5. ' form' → logprob: -4.176742076873779
    6. ' résolution' → logprob: -4.551742076873779
    7. ' calcul' → logprob: -4.551742076873779
    8. 'calcul' → logprob: -4.801742076873779
    9. 's' → logprob: -4.926742076873779
    10. ' solution' → logprob: -5.551742076873779

Token 148: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3976675271987915
    2. ' =' → logprob: -1.6476675271987915
    3. '_' → logprob: -2.147667407989502
    4. 'P' → logprob: -2.647667407989502
    5. ' des' → logprob: -2.647667407989502
    6. ' ' → logprob: -2.772667407989502
    7. ' du' → logprob: -2.897667407989502
    8. '=' → logprob: -3.022667407989502
    9. ' P' → logprob: -3.147667407989502
    10. '[' → logprob: -4.522667407989502

Token 149: ' tableaux' (ID: 176599)
  Prédit: ' tableaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableaux' → logprob: -0.30211514234542847
    2. ' listes' → logprob: -2.3021152019500732
    3. 'range' → logprob: -3.0521152019500732
    4. ' range' → logprob: -4.302114963531494
    5. 'table' → logprob: -4.802114963531494
    6. 'list' → logprob: -4.802114963531494
    7. ' structures' → logprob: -4.927114963531494
    8. ' table' → logprob: -4.927114963531494
    9. ' tableau' → logprob: -5.177114963531494
    10. 'ranges' → logprob: -5.177114963531494

Token 150: ' pour' (ID: 1930)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.33539408445358276
    2. ' =' → logprob: -1.4603941440582275
    3. ' P' → logprob: -3.7103941440582275
    4. '=' → logprob: -3.9603941440582275
    5. '+' → logprob: -5.960393905639648
    6. ' ' → logprob: -6.085393905639648
    7. ' +' → logprob: -6.835393905639648
    8. ',' → logprob: -6.960393905639648
    9. '-' → logprob: -8.210393905639648
    10. 'p' → logprob: -8.460393905639648

Token 151: ' la' (ID: 557)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.0629839897155762
    2. 'les' → logprob: -1.6879839897155762
    3. 'l' → logprob: -2.187983989715576
    4. ' gérer' → logprob: -2.187983989715576
    5. 'stock' → logprob: -2.562983989715576
    6. ' éviter' → logprob: -3.187983989715576
    7. ' les' → logprob: -3.312983989715576
    8. 'la' → logprob: -4.437983989715576
    9. ' la' → logprob: -4.812983989715576
    10. ' le' → logprob: -4.937983989715576

Token 152: ' factor' (ID: 12332)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.1519182026386261
    2. ' dynamique' → logprob: -2.9019181728363037
    3. ' range' → logprob: -4.276918411254883
    4. ' dynamic' → logprob: -4.526918411254883
    5. 's' → logprob: -4.776918411254883
    6. 'range' → logprob: -4.901918411254883
    7. 'programm' → logprob: -5.026918411254883
    8. 'program' → logprob: -5.401918411254883
    9. ' création' → logprob: -5.526918411254883
    10. ' construction' → logprob: -5.776918411254883

Token 153: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -1.2113769054412842
    2. 'ial' → logprob: -1.3363769054412842
    3. 'ials' → logprob: -1.3363769054412842
    4. 'or' → logprob: -2.711376905441284
    5. 'iel' → logprob: -3.211376905441284
    6. 'actor' → logprob: -3.961376905441284
    7. 'eurs' → logprob: -4.211377143859863
    8. 'orial' → logprob: -4.711377143859863
    9. '```' → logprob: -4.961377143859863
    10. 'eur' → logprob: -5.586377143859863

Token 154: '
' (ID: 198)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0015814013313502073
    2. ' =' → logprob: -6.876581192016602
    3. '
' → logprob: -8.501581192016602
    4. ' P' → logprob: -8.751581192016602
    5. 'p' → logprob: -9.751581192016602
    6. '+' → logprob: -9.751581192016602
    7. '=' → logprob: -10.251581192016602
    8. ' +' → logprob: -11.501581192016602
    9. ' 
' → logprob: -11.751581192016602
    10. ',' → logprob: -12.751581192016602

Token 155: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0023657784331589937
    2. ' P' → logprob: -6.377365589141846
    3. ' 
' → logprob: -7.627365589141846
    4. '
' → logprob: -9.002366065979004
    5. 'p' → logprob: -11.252366065979004
    6. '  
' → logprob: -11.502366065979004
    7. ' (' → logprob: -12.002366065979004
    8. ' =' → logprob: -12.127366065979004
    9. '(' → logprob: -12.752366065979004
    10. ' ' → logprob: -12.877366065979004

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18283233046531677
    2. '=' → logprob: -1.8078323602676392
    3. '+' → logprob: -5.93283224105835
    4. ' +' → logprob: -8.057832717895508
    5. ' ' → logprob: -9.182832717895508
    6. ' =
' → logprob: -12.557832717895508
    7. ' +=' → logprob: -12.932832717895508
    8. ',' → logprob: -13.557832717895508
    9. '.' → logprob: -13.557832717895508
    10. '-' → logprob: -13.932832717895508

Token 157: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1269410252571106
    2. 'N' → logprob: -2.126940965652466
    3. ' ' → logprob: -11.376940727233887
    4. ' ' → logprob: -14.251940727233887
    5. ' (' → logprob: -15.001940727233887
    6. '	N' → logprob: -16.126941680908203
    7. 'n' → logprob: -16.251941680908203
    8. '(N' → logprob: -16.376941680908203
    9. ' `' → logprob: -17.001941680908203
    10. ' 
' → logprob: -17.126941680908203

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067156096920371056
    2. ' +' → logprob: -5.006715774536133
    3. '+
' → logprob: -15.881715774536133
    4. '1' → logprob: -17.631715774536133
    5. '＋' → logprob: -17.881715774536133
    6. ' ' → logprob: -18.256715774536133
    7. ' +
' → logprob: -18.381715774536133
    8. '()+' → logprob: -18.631715774536133
    9. ' plus' → logprob: -18.756715774536133
    10. ' ' → logprob: -19.881715774536133

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -18.75247573852539
    4. '  ' → logprob: -19.62747573852539
    5. '   ' → logprob: -20.00247573852539
    6. '	' → logprob: -20.25247573852539
    7. '```' → logprob: -20.50247573852539
    8. '۱' → logprob: -21.12747573852539
    9. '１' → logprob: -21.25247573852539
    10. '
' → logprob: -21.50247573852539

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -21.625
    4. '１' → logprob: -23.0
    5. '۱' → logprob: -23.25
    6. '   ' → logprob: -23.25
    7. '`' → logprob: -23.375
    8. '  ' → logprob: -23.5
    9. '
' → logprob: -23.5
    10. '<|end|>' → logprob: -23.625

Token 161: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07407373189926147
    2. 'factor' → logprob: -2.9490737915039062
    3. '#' → logprob: -4.949073791503906
    4. '
' → logprob: -5.949073791503906
    5. '

' → logprob: -6.324073791503906
    6. 'fact' → logprob: -6.449073791503906
    7. '' → logprob: -6.699073791503906
    8. ' 
' → logprob: -6.824073791503906
    9. '  
' → logprob: -7.074073791503906
    10. 'n' → logprob: -7.199073791503906

Token 162: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1414162665605545
    2. 'fact' → logprob: -2.891416311264038
    3. '
' → logprob: -3.391416311264038
    4. 'factor' → logprob: -3.641416311264038
    5. '#' → logprob: -4.516416072845459
    6. '

' → logprob: -5.766416072845459
    7. '' → logprob: -7.266416072845459
    8. 'n' → logprob: -8.141416549682617
    9. ' 
' → logprob: -8.266416549682617
    10. '```' → logprob: -8.516416549682617

Token 163: ' Initial' (ID: 9209)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.20880745351314545
    2. 'factor' → logprob: -2.2088074684143066
    3. '#' → logprob: -2.9588074684143066
    4. 'fac' → logprob: -4.333807468414307
    5. 'import' → logprob: -5.333807468414307
    6. ' fact' → logprob: -5.833807468414307
    7. 'def' → logprob: -5.958807468414307
    8. 'from' → logprob: -6.708807468414307
    9. 'f' → logprob: -6.833807468414307
    10. 'Fact' → logprob: -8.458806991577148

Token 164: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.0008720364421606064
    2. 'ization' → logprob: -7.6258721351623535
    3. 'iser' → logprob: -8.375871658325195
    4. 'is' → logprob: -8.875871658325195
    5. '#' → logprob: -12.375871658325195
    6. 'isations' → logprob: -13.375871658325195
    7. 'ising' → logprob: -13.500871658325195
    8. '```' → logprob: -13.500871658325195
    9. 's' → logprob: -13.625871658325195
    10. 'isierung' → logprob: -14.000871658325195

Token 165: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.535717248916626
    2. ' ' → logprob: -1.785717248916626
    3. ' d' → logprob: -1.785717248916626
    4. 'des' → logprob: -3.660717248916626
    5. 'd' → logprob: -4.285717010498047
    6. '_' → logprob: -4.535717010498047
    7. ' de' → logprob: -4.785717010498047
    8. ' of' → logprob: -5.160717010498047
    9. '_factor' → logprob: -5.660717010498047
    10. 'factor' → logprob: -5.785717010498047

Token 166: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.2881563901901245
    2. ' fact' → logprob: -1.6631563901901245
    3. ' fac' → logprob: -1.7881563901901245
    4. ' factorial' → logprob: -2.038156509399414
    5. ' f' → logprob: -2.288156509399414
    6. 'factor' → logprob: -2.913156509399414
    7. ' la' → logprob: -3.288156509399414
    8. ' factor' → logprob: -4.538156509399414
    9. 'fac' → logprob: -4.788156509399414
    10. ' facto' → logprob: -5.038156509399414

Token 167: ' variable' (ID: 11076)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1728280931711197
    2. 'factor' → logprob: -1.9228280782699585
    3. 'liste' → logprob: -5.297828197479248
    4. 'fac' → logprob: -5.672828197479248
    5. ' fact' → logprob: -5.797828197479248
    6. ' liste' → logprob: -7.797828197479248
    7. 'list' → logprob: -8.17282772064209
    8. 'lst' → logprob: -8.92282772064209
    9. 'f' → logprob: -9.79782772064209
    10. 'table' → logprob: -9.92282772064209

Token 168: ' f' (ID: 285)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7284522652626038
    2. ' factorial' → logprob: -1.728452205657959
    3. 'factor' → logprob: -1.728452205657959
    4. ' result' → logprob: -3.228452205657959
    5. ' fact' → logprob: -3.728452205657959
    6. 'res' → logprob: -3.978452205657959
    7. ' fac' → logprob: -4.228452205657959
    8. ' ans' → logprob: -4.353452205657959
    9. 'result' → logprob: -4.478452205657959
    10. 'fac' → logprob: -4.603452205657959

Token 169: ' à' (ID: 1221)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.07728271931409836
    2. 'ac' → logprob: -3.452282667160034
    3. 'actor' → logprob: -3.702282667160034
    4. ' =' → logprob: -4.702282905578613
    5. 'acto' → logprob: -5.702282905578613
    6. 'a' → logprob: -6.827282905578613
    7. 'acteur' → logprob: -6.952282905578613
    8. 'acs' → logprob: -7.077282905578613
    9. '=' → logprob: -7.452282905578613
    10. '_fact' → logprob: -7.827282905578613

Token 170: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2279331535100937
    2. ' [' → logprob: -1.9779331684112549
    3. '1' → logprob: -3.227933168411255
    4. ' ' → logprob: -3.977933168411255
    5. '[P' → logprob: -5.227932929992676
    6. '[N' → logprob: -6.852932929992676
    7. '[M' → logprob: -8.102932929992676
    8. '[int' → logprob: -9.352932929992676
    9. '0' → logprob: -9.477932929992676
    10. '[p' → logprob: -9.852932929992676

Token 171: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13201244175434113
    2. '1' → logprob: -2.132012367248535
    3. '[P' → logprob: -5.632012367248535
    4. '[M' → logprob: -6.882012367248535
    5. ' [' → logprob: -8.507012367248535
    6. '[N' → logprob: -8.882012367248535
    7. ' ' → logprob: -10.382012367248535
    8. '0' → logprob: -11.257012367248535
    9. '[int' → logprob: -11.257012367248535
    10. '[]' → logprob: -11.257012367248535

Token 172: '.' (ID: 13)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31927400827407837
    2. ' ' → logprob: -1.4442739486694336
    3. ' f' → logprob: -3.9442739486694336
    4. '<|end|>' → logprob: -4.319273948669434
    5. '=' → logprob: -6.694273948669434
    6. ' =' → logprob: -6.819273948669434
    7. ',' → logprob: -7.694273948669434
    8. '
' → logprob: -8.194273948669434
    9. '1' → logprob: -8.444273948669434
    10. '0' → logprob: -8.569273948669434

Token 173: ' Elle' (ID: 21300)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005979505367577076
    2. ' f' → logprob: -7.625597953796387
    3. '
' → logprob: -9.250597953796387
    4. ' ' → logprob: -11.625597953796387
    5. ' 
' → logprob: -13.625597953796387
    6. '<|end|>' → logprob: -14.250597953796387
    7. '```' → logprob: -14.750597953796387
    8. '  
' → logprob: -14.875597953796387
    9. '1' → logprob: -14.875597953796387
    10. ' =' → logprob: -15.125597953796387

Token 174: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6800820231437683
    2. ' =' → logprob: -0.8050820231437683
    3. ' ' → logprob: -3.930082082748413
    4. ',' → logprob: -4.430081844329834
    5. '<|end|>' → logprob: -5.805081844329834
    6. '_' → logprob: -6.180081844329834
    7. '.' → logprob: -6.180081844329834
    8. ' a' → logprob: -6.930081844329834
    9. ' ' → logprob: -6.930081844329834
    10. ')' → logprob: -7.555081844329834

Token 175: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3386041820049286
    2. ' =' → logprob: -2.213604211807251
    3. '=' → logprob: -2.463604211807251
    4. '_' → logprob: -2.713604211807251
    5. 'er' → logprob: -3.713604211807251
    6. 'f' → logprob: -7.963603973388672
    7. 'i' → logprob: -8.088603973388672
    8. 'u' → logprob: -8.463603973388672
    9. 'a' → logprob: -8.588603973388672
    10. 'é' → logprob: -8.963603973388672

Token 176: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12872900068759918
    2. '<|end|>' → logprob: -2.5037291049957275
    3. 'f' → logprob: -4.628728866577148
    4. ',' → logprob: -5.378728866577148
    5. ' la' → logprob: -6.128728866577148
    6. '1' → logprob: -6.128728866577148
    7. ' les' → logprob: -6.128728866577148
    8. ' f' → logprob: -6.253728866577148
    9. '  ' → logprob: -6.503728866577148
    10. '0' → logprob: -6.628728866577148

Token 177: ' valeurs' (ID: 73668)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.16282817721366882
    2. 'fact' → logprob: -2.162828207015991
    3. ' factorial' → logprob: -4.412827968597412
    4. ' fact' → logprob: -4.787827968597412
    5. ' factor' → logprob: -5.412827968597412
    6. 'f' → logprob: -6.412827968597412
    7. ' ' → logprob: -6.412827968597412
    8. '!' → logprob: -6.537827968597412
    9. '_factor' → logprob: -6.537827968597412
    10. ' facteur' → logprob: -6.912827968597412

Token 178: ' interm' (ID: 120489)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.157239556312561
    2. '_factor' → logprob: -1.657239556312561
    3. 'f' → logprob: -2.0322394371032715
    4. 'factor' → logprob: -2.2822394371032715
    5. '<|end|>' → logprob: -2.9072394371032715
    6. ' factorial' → logprob: -3.0322394371032715
    7. 'des' → logprob: -3.1572394371032715
    8. '_' → logprob: -3.7822394371032715
    9. '_f' → logprob: -4.2822394371032715
    10. ' ' → logprob: -4.9072394371032715

Token 179: 'édia' (ID: 49296)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7810426950454712
    2. '_' → logprob: -1.6560426950454712
    3. '   ' → logprob: -2.7810425758361816
    4. 'édia' → logprob: -3.4060425758361816
    5. 'édi' → logprob: -3.9060425758361816
    6. 'e' → logprob: -4.031042575836182
    7. ',' → logprob: -4.281042575836182
    8. '*' → logprob: -4.281042575836182
    9. 'ètre' → logprob: -4.406042575836182
    10. '  ' → logprob: -4.406042575836182

Token 180: 'ires' (ID: 5255)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4902380406856537
    2. 'ires' → logprob: -0.9902380704879761
    3. 'r' → logprob: -4.615238189697266
    4. 're' → logprob: -5.865238189697266
    5. 'ries' → logprob: -6.615238189697266
    6. 'l' → logprob: -7.740238189697266
    7. 'ire' → logprob: -7.740238189697266
    8. 'irement' → logprob: -8.990238189697266
    9. 'ri' → logprob: -9.240238189697266
    10. '```' → logprob: -9.240238189697266

Token 181: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6820104718208313
    2. ' des' → logprob: -2.0570104122161865
    3. 'f' → logprob: -2.5570104122161865
    4. ',' → logprob: -2.8070104122161865
    5. 'factor' → logprob: -3.1820104122161865
    6. ' de' → logprob: -3.5570104122161865
    7. '<|end|>' → logprob: -3.5570104122161865
    8. ' f' → logprob: -3.8070104122161865
    9. ' factorial' → logprob: -3.8070104122161865
    10. '_factor' → logprob: -3.9320104122161865

Token 182: ' la' (ID: 557)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.4484882056713104
    2. 'la' → logprob: -1.1984882354736328
    3. ' la' → logprob: -3.698488235473633
    4. 'fact' → logprob: -3.823488235473633
    5. 'l' → logprob: -4.823488235473633
    6. 'f' → logprob: -6.573488235473633
    7. ' factorial' → logprob: -6.698488235473633
    8. ' fact' → logprob: -8.073488235473633
    9. '!' → logprob: -8.073488235473633
    10. ' ' → logprob: -8.198488235473633

Token 183: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.08468669652938843
    2. 'fact' → logprob: -3.459686756134033
    3. ' factorial' → logprob: -3.584686756134033
    4. ' factor' → logprob: -4.459686756134033
    5. ' fact' → logprob: -5.459686756134033
    6. '_factor' → logprob: -6.084686756134033
    7. ' ' → logprob: -6.709686756134033
    8. '!' → logprob: -6.709686756134033
    9. 'f' → logprob: -7.959686756134033
    10. '_fact' → logprob: -8.584686279296875

Token 184: 'ielle' (ID: 22380)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.645609974861145
    2. 'ielle' → logprob: -0.770609974861145
    3. '!' → logprob: -5.6456098556518555
    4. '```' → logprob: -5.7706098556518555
    5. 'ial' → logprob: -5.8956098556518555
    6. 'iale' → logprob: -7.3956098556518555
    7. 'a' → logprob: -7.6456098556518555
    8. 'iel' → logprob: -7.7706098556518555
    9. 'o' → logprob: -7.8956098556518555
    10. '#' → logprob: -8.145609855651855

Token 185: ' lors' (ID: 15456)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0891343355178833
    2. ',' → logprob: -3.7141342163085938
    3. ' f' → logprob: -3.9641342163085938
    4. ' ' → logprob: -4.339134216308594
    5. '
' → logprob: -4.714134216308594
    6. '.' → logprob: -4.964134216308594
    7. '<|end|>' → logprob: -5.089134216308594
    8. 's' → logprob: -6.964134216308594
    9. ' ,' → logprob: -7.714134216308594
    10. ',f' → logprob: -7.964134216308594

Token 186: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.668147087097168
    2. ' ' → logprob: -1.293147087097168
    3. ' de' → logprob: -1.793147087097168
    4. ' d' → logprob: -4.168147087097168
    5. '_' → logprob: -4.293147087097168
    6. ' du' → logprob: -5.543147087097168
    7. '  ' → logprob: -5.918147087097168
    8. ' ' → logprob: -6.543147087097168
    9. 's' → logprob: -6.793147087097168
    10. 'des' → logprob: -6.918147087097168

Token 187: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.1310475915670395
    2. ' calcul' → logprob: -2.631047487258911
    3. 'cal' → logprob: -3.131047487258911
    4. 'bou' → logprob: -5.50604772567749
    5. 'for' → logprob: -6.38104772567749
    6. 'calc' → logprob: -7.25604772567749
    7. '#' → logprob: -8.381047248840332
    8. 'c' → logprob: -9.006047248840332
    9. 'b' → logprob: -9.381047248840332
    10. 'Calcul' → logprob: -10.631047248840332

Token 188: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02369612641632557
    2. ' f' → logprob: -3.773696184158325
    3. ',' → logprob: -8.523695945739746
    4. '<|end|>' → logprob: -8.898695945739746
    5. '
' → logprob: -10.273695945739746
    6. ' ' → logprob: -11.023695945739746
    7. '\n' → logprob: -11.273695945739746
    8. ';' → logprob: -12.023695945739746
    9. ',f' → logprob: -12.023695945739746
    10. '.' → logprob: -12.398695945739746

Token 189: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.021081069484353065
    2. ' f' → logprob: -3.89608097076416
    3. ' 
' → logprob: -8.27108097076416
    4. '
' → logprob: -8.52108097076416
    5. ' ' → logprob: -10.52108097076416
    6. '  
' → logprob: -10.77108097076416
    7. ',' → logprob: -11.77108097076416
    8. ' ' → logprob: -12.27108097076416
    9. '' → logprob: -12.64608097076416
    10. ' 

' → logprob: -12.64608097076416

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08981429040431976
    2. '=' → logprob: -2.4648141860961914
    3. ' ' → logprob: -7.214814186096191
    4. '_' → logprob: -9.464814186096191
    5. ',' → logprob: -9.839814186096191
    6. '  ' → logprob: -13.214814186096191
    7. ' ,' → logprob: -13.464814186096191
    8. 'f' → logprob: -13.589814186096191
    9. 's' → logprob: -14.214814186096191
    10. '.' → logprob: -14.464814186096191

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -17.501325607299805
    4. '  ' → logprob: -18.001325607299805
    5. ' ' → logprob: -18.626325607299805
    6. '```' → logprob: -19.876325607299805
    7. '１' → logprob: -19.938825607299805
    8. 'int' → logprob: -20.376325607299805
    9. '=' → logprob: -20.376325607299805
    10. '۱' → logprob: -20.563825607299805

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.2500057220459
    4. '   ' → logprob: -19.3750057220459
    5. '  ' → logprob: -19.3750057220459
    6. '`' → logprob: -21.0000057220459
    7. 'int' → logprob: -21.2500057220459
    8. '１' → logprob: -21.2500057220459
    9. '
' → logprob: -21.3125057220459
    10. '' → logprob: -21.6875057220459

Token 193: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028105827514082193
    2. 'for' → logprob: -6.627810478210449
    3. '
' → logprob: -7.752810478210449
    4. '<|end|>' → logprob: -7.752810478210449
    5. ' for' → logprob: -8.62781047821045
    6. '

' → logprob: -9.00281047821045
    7. 'f' → logprob: -9.25281047821045
    8. '\n' → logprob: -9.75281047821045
    9. '#' → logprob: -10.37781047821045
    10. ',' → logprob: -10.50281047821045

Token 194: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4854363799095154
    2. 'f' → logprob: -1.7354364395141602
    3. 'for' → logprob: -1.8604364395141602
    4. 'factor' → logprob: -3.86043643951416
    5. '#' → logprob: -4.61043643951416
    6. '\n' → logprob: -5.11043643951416
    7. ',' → logprob: -5.61043643951416
    8. 'i' → logprob: -6.23543643951416
    9. '' → logprob: -6.48543643951416
    10. '

' → logprob: -6.73543643951416

Token 195: ' Cré' (ID: 109203)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.3320651352405548
    2. 'fact' → logprob: -1.3320651054382324
    3. 'for' → logprob: -4.207065105438232
    4. 'f' → logprob: -6.082065105438232
    5. 'fac' → logprob: -7.457065105438232
    6. '#' → logprob: -8.33206558227539
    7. ' factorial' → logprob: -8.95706558227539
    8. 'result' → logprob: -9.20706558227539
    9. 'facts' → logprob: -9.45706558227539
    10. ' fact' → logprob: -9.45706558227539

Token 196: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.024157043546438217
    2. '#' → logprob: -3.7741570472717285
    3. 'for' → logprob: -8.02415657043457
    4. 'f' → logprob: -8.89915657043457
    5. 'a' → logprob: -9.27415657043457
    6. 'al' → logprob: -9.64915657043457
    7. 'lation' → logprob: -9.64915657043457
    8. 'paration' → logprob: -9.89915657043457
    9. 'tion' → logprob: -10.02415657043457
    10. 'd' → logprob: -11.27415657043457

Token 197: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3729880452156067
    2. ' ' → logprob: -2.122987985610962
    3. '_' → logprob: -2.747987985610962
    4. '[]' → logprob: -2.747987985610962
    5. ' des' → logprob: -3.497987985610962
    6. ' de' → logprob: -4.747988224029541
    7. ' f' → logprob: -4.747988224029541
    8. ' _' → logprob: -5.372988224029541
    9. '[' → logprob: -6.372988224029541
    10. 'f' → logprob: -6.372988224029541

Token 198: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.536212146282196
    2. ' [' → logprob: -1.0362122058868408
    3. '[P' → logprob: -3.286212205886841
    4. '[]' → logprob: -4.661211967468262
    5. '[N' → logprob: -5.911211967468262
    6. ' P' → logprob: -5.911211967468262
    7. ' ' → logprob: -6.036211967468262
    8. '[i' → logprob: -6.911211967468262
    9. ' range' → logprob: -7.036211967468262
    10. '[n' → logprob: -7.286211967468262

Token 199: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.052153147757053375
    2. 'range' → logprob: -4.05215311050415
    3. 'fact' → logprob: -4.55215311050415
    4. 'list' → logprob: -4.80215311050415
    5. 'factor' → logprob: -4.80215311050415
    6. ' liste' → logprob: -6.17715311050415
    7. 'for' → logprob: -6.42715311050415
    8. 'f' → logprob: -6.55215311050415
    9. '#' → logprob: -8.052153587341309
    10. 'lst' → logprob: -8.177153587341309

Token 200: ' F' (ID: 454)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.32956579327583313
    2. 'factor' → logprob: -1.4545657634735107
    3. 'f' → logprob: -3.2045657634735107
    4. ' fact' → logprob: -6.07956600189209
    5. ' factorial' → logprob: -6.45456600189209
    6. 'fac' → logprob: -6.82956600189209
    7. ' f' → logprob: -7.57956600189209
    8. ' factor' → logprob: -7.57956600189209
    9. ' des' → logprob: -8.82956600189209
    10. 'facts' → logprob: -9.20456600189209

Token 201: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030476314947009087
    2. '=' → logprob: -3.5304763317108154
    3. 'F' → logprob: -8.155476570129395
    4. '[' → logprob: -8.530476570129395
    5. '=[' → logprob: -9.030476570129395
    6. 'f' → logprob: -10.280476570129395
    7. ' =[' → logprob: -10.530476570129395
    8. '[P' → logprob: -11.905476570129395
    9. ' [' → logprob: -12.155476570129395
    10. '[F' → logprob: -12.155476570129395

Token 202: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.06379885226488113
    2. '[' → logprob: -3.1887989044189453
    3. 'stock' → logprob: -4.438798904418945
    4. ' les' → logprob: -6.063798904418945
    5. 'factor' → logprob: -6.063798904418945
    6. ' factorial' → logprob: -7.063798904418945
    7. ' conten' → logprob: -7.688798904418945
    8. 'range' → logprob: -7.813798904418945
    9. ' range' → logprob: -8.063798904418945
    10. 'calcul' → logprob: -8.188798904418945

Token 203: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3466442823410034
    2. 'érer' → logprob: -1.4716442823410034
    3. 'uler' → logprob: -3.346644401550293
    4. 'urer' → logprob: -3.721644401550293
    5. 'rer' → logprob: -6.846644401550293
    6. 'uer' → logprob: -7.221644401550293
    7. 'erer' → logprob: -7.721644401550293
    8. 'iner' → logprob: -7.846644401550293
    9. 'érant' → logprob: -8.471644401550293
    10. 'errer' → logprob: -8.846644401550293

Token 204: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18754597008228302
    2. 'les' → logprob: -2.1875460147857666
    3. '[' → logprob: -3.0625460147857666
    4. '[P' → logprob: -5.5625457763671875
    5. ' la' → logprob: -6.4375457763671875
    6. ' ' → logprob: -6.5625457763671875
    7. 'f' → logprob: -7.3125457763671875
    8. ' des' → logprob: -7.5625457763671875
    9. '[N' → logprob: -7.8125457763671875
    10. ' [' → logprob: -7.8125457763671875

Token 205: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.5724601745605469
    2. 'factor' → logprob: -0.9474601745605469
    3. ' factor' → logprob: -3.697460174560547
    4. 'fact' → logprob: -3.947460174560547
    5. ' factorial' → logprob: -5.947460174560547
    6. ' ' → logprob: -8.072460174560547
    7. ' facto' → logprob: -8.197460174560547
    8. ' facteurs' → logprob: -8.322460174560547
    9. '_factor' → logprob: -8.822460174560547
    10. '!' → logprob: -9.197460174560547

Token 206: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.016286902129650116
    2. 'orial' → logprob: -4.516286849975586
    3. 'or' → logprob: -5.266286849975586
    4. '(' → logprob: -11.391286849975586
    5. 'o' → logprob: -12.141286849975586
    6. 'oires' → logprob: -12.141286849975586
    7. '```' → logprob: -12.266286849975586
    8. 'orie' → logprob: -12.391286849975586
    9. 'ories' → logprob: -12.391286849975586
    10. 'oris' → logprob: -12.891286849975586

Token 207: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0005170515505596995
    2. 'els' → logprob: -8.375516891479492
    3. '```' → logprob: -9.625516891479492
    4. '#' → logprob: -9.875516891479492
    5. '``' → logprob: -10.375516891479492
    6. 'eles' → logprob: -10.750516891479492
    7. 'elle' → logprob: -11.000516891479492
    8. 'alles' → logprob: -11.000516891479492
    9. '`' → logprob: -11.125516891479492
    10. 'es' → logprob: -11.250516891479492

Token 208: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4989761412143707
    2. ' =' → logprob: -1.3739761114120483
    3. 'F' → logprob: -2.748976230621338
    4. '(' → logprob: -3.748976230621338
    5. '_' → logprob: -4.748976230621338
    6. ' F' → logprob: -4.873976230621338
    7. '=' → logprob: -4.998976230621338
    8. ' [' → logprob: -5.498976230621338
    9. ',' → logprob: -5.623976230621338
    10. '[F' → logprob: -5.623976230621338

Token 209: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20891310274600983
    2. ' range' → logprob: -2.5839130878448486
    3. '0' → logprob: -3.2089130878448486
    4. ' P' → logprob: -3.7089130878448486
    5. 'P' → logprob: -4.583913326263428
    6. 'les' → logprob: -4.583913326263428
    7. 'i' → logprob: -4.833913326263428
    8. ' ' → logprob: -5.333913326263428
    9. ' i' → logprob: -5.708913326263428
    10. ' les' → logprob: -6.083913326263428

Token 210: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6282036900520325
    2. 'i' → logprob: -1.2532036304473877
    3. '0' → logprob: -1.7532036304473877
    4. 'P' → logprob: -6.628203868865967
    5. 'les' → logprob: -6.753203868865967
    6. 'la' → logprob: -7.128203868865967
    7. ' i' → logprob: -7.503203868865967
    8. 'l' → logprob: -7.628203868865967
    9. '1' → logprob: -7.878203868865967
    10. ' range' → logprob: -8.003203392028809

Token 211: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11964228749275208
    2. ' à' → logprob: -3.3696422576904297
    3. ' ,' → logprob: -3.8696422576904297
    4. '(P' → logprob: -4.61964225769043
    5. 'range' → logprob: -4.99464225769043
    6. 'P' → logprob: -5.11964225769043
    7. 'f' → logprob: -5.24464225769043
    8. ' jusqu' → logprob: -5.49464225769043
    9. ' P' → logprob: -5.74464225769043
    10. ')' → logprob: -5.86964225769043

Token 212: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07464828342199326
    2. ' P' → logprob: -3.074648380279541
    3. 'N' → logprob: -3.699648380279541
    4. ' N' → logprob: -6.949648380279541
    5. ' ' → logprob: -10.949647903442383
    6. ' ' → logprob: -11.949647903442383
    7. 'n' → logprob: -13.074647903442383
    8. '	P' → logprob: -13.449647903442383
    9. 'i' → logprob: -13.824647903442383
    10. '`' → logprob: -13.824647903442383

Token 213: ',' (ID: 11)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.01592339389026165
    2. ' F' → logprob: -4.890923500061035
    3. ' =' → logprob: -5.890923500061035
    4. '[' → logprob: -6.015923500061035
    5. ',' → logprob: -6.140923500061035
    6. '[F' → logprob: -8.515923500061035
    7. '_F' → logprob: -8.640923500061035
    8. '
' → logprob: -9.265923500061035
    9. ' ' → logprob: -9.390923500061035
    10. 'f' → logprob: -9.640923500061035

Token 214: ' initial' (ID: 4871)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.3838820457458496
    2. ' F' → logprob: -1.5088820457458496
    3. '[' → logprob: -2.6338820457458496
    4. ' [' → logprob: -3.8838820457458496
    5. '[F' → logprob: -5.50888204574585
    6. ' ' → logprob: -7.63388204574585
    7. 'f' → logprob: -9.508882522583008
    8. '
' → logprob: -10.008882522583008
    9. '[i' → logprob: -10.008882522583008
    10. '   ' → logprob: -10.008882522583008

Token 215: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.25819674134254456
    2. 'isées' → logprob: -2.1331968307495117
    3. ' =' → logprob: -3.3831968307495117
    4. 'isé' → logprob: -3.6331968307495117
    5. 'is' → logprob: -4.133196830749512
    6. 'iser' → logprob: -4.383196830749512
    7. '=' → logprob: -4.508196830749512
    8. 'isés' → logprob: -6.633196830749512
    9. 'e' → logprob: -6.758196830749512
    10. '=[]' → logprob: -7.133196830749512

Token 216: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08643641322851181
    2. ' =' → logprob: -3.3364365100860596
    3. ' [' → logprob: -3.7114365100860596
    4. '=[' → logprob: -4.4614362716674805
    5. '[N' → logprob: -5.5864362716674805
    6. '=' → logprob: -5.9614362716674805
    7. 'f' → logprob: -6.7114362716674805
    8. '[P' → logprob: -6.7114362716674805
    9. '[F' → logprob: -7.7114362716674805
    10. ',' → logprob: -7.9614362716674805

Token 217: ' des' (ID: 731)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.13221080601215363
    2. '[' → logprob: -2.1322107315063477
    3. ' [' → logprob: -6.257210731506348
    4. '[N' → logprob: -6.507210731506348
    5. '1' → logprob: -6.507210731506348
    6. 'P' → logprob: -8.382210731506348
    7. '[F' → logprob: -9.632210731506348
    8. '[M' → logprob: -10.257210731506348
    9. '0' → logprob: -11.007210731506348
    10. '[f' → logprob: -11.382210731506348

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04874417185783386
    2. 'z' → logprob: -3.9237442016601562
    3. '[' → logprob: -4.673744201660156
    4. 'zeros' → logprob: -4.923744201660156
    5. ' z' → logprob: -5.423744201660156
    6. ' ' → logprob: -5.798744201660156
    7. '1' → logprob: -6.798744201660156
    8. ' [' → logprob: -7.298744201660156
    9. ' zeros' → logprob: -7.298744201660156
    10. '[N' → logprob: -7.548744201660156

Token 219: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025812473613768816
    2. '1' → logprob: -6.1275811195373535
    3. 'z' → logprob: -8.627581596374512
    4. 'zeros' → logprob: -8.627581596374512
    5. '[' → logprob: -11.002581596374512
    6. ' ' → logprob: -11.127581596374512
    7. '-' → logprob: -13.252581596374512
    8. ' zeros' → logprob: -13.627581596374512
    9. ' z' → logprob: -14.377581596374512
    10. '   ' → logprob: -15.002581596374512

Token 220: '.
' (ID: 558)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.01009331364184618
    2. '[' → logprob: -5.5100932121276855
    3. '
' → logprob: -5.8850932121276855
    4. ' =' → logprob: -6.7600932121276855
    5. ' F' → logprob: -6.8850932121276855
    6. ',' → logprob: -7.7600932121276855
    7. '[F' → logprob: -8.010093688964844
    8. ' [' → logprob: -10.135093688964844
    9. 'f' → logprob: -10.135093688964844
    10. '_F' → logprob: -10.385093688964844

Token 221: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.981667537620524e-06
    2. ' F' → logprob: -14.250001907348633
    3. '
' → logprob: -14.500001907348633
    4. '[' → logprob: -14.500001907348633
    5. '[F' → logprob: -15.750001907348633
    6. '#' → logprob: -18.125001907348633
    7. 'f' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '

' → logprob: -19.125001907348633
    10. '[
' → logprob: -19.750001907348633

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04869580268859863
    2. '=' → logprob: -3.0486958026885986
    3. '=[' → logprob: -9.29869556427002
    4. ' =[' → logprob: -11.67369556427002
    5. '[' → logprob: -11.92369556427002
    6. '=[]' → logprob: -14.54869556427002
    7. ' ' → logprob: -14.67369556427002
    8. 's' → logprob: -15.67369556427002
    9. ',' → logprob: -16.173696517944336
    10. 'F' → logprob: -16.173696517944336

Token 223: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0435098297894001
    2. '[P' → logprob: -3.5435097217559814
    3. ' [' → logprob: -4.2935099601745605
    4. '[N' → logprob: -12.168509483337402
    5. '[F' → logprob: -13.293509483337402
    6. '[M' → logprob: -14.293509483337402
    7. '[p' → logprob: -14.793509483337402
    8. '[f' → logprob: -16.16851043701172
    9. ' ' → logprob: -16.91851043701172
    10. 'P' → logprob: -17.29351043701172

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -18.125
    4. '
' → logprob: -19.125
    5. ']' → logprob: -19.375
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.75
    8. '

' → logprob: -21.375
    9. ' ' → logprob: -21.5
    10. '۱' → logprob: -22.25

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006084367632865906
    2. ']*(' → logprob: -7.500608444213867
    3. ']*' → logprob: -9.875608444213867
    4. ' for' → logprob: -13.250608444213867
    5. ']+' → logprob: -13.500608444213867
    6. 'for' → logprob: -14.625608444213867
    7. ' ]' → logprob: -14.750608444213867
    8. ')' → logprob: -17.750608444213867
    9. ',' → logprob: -18.375608444213867
    10. '*' → logprob: -18.875608444213867

Token 226: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.15254487097263336
    2. ']' → logprob: -2.5275449752807617
    3. '*(' → logprob: -3.5275449752807617
    4. ' *' → logprob: -4.402544975280762
    5. ' for' → logprob: -4.902544975280762
    6. ']*(' → logprob: -4.902544975280762
    7. 'for' → logprob: -6.027544975280762
    8. ']*' → logprob: -6.152544975280762
    9. ')' → logprob: -8.152544975280762
    10. ']+' → logprob: -9.027544975280762

Token 227: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.062019217759370804
    2. '(P' → logprob: -2.812019109725952
    3. '(' → logprob: -10.562019348144531
    4. ' (' → logprob: -11.312019348144531
    5. ' P' → logprob: -11.437019348144531
    6. '(N' → logprob: -14.937019348144531
    7. '[P' → logprob: -14.937019348144531
    8. '	P' → logprob: -15.062019348144531
    9. '\P' → logprob: -15.312019348144531
    10. '```' → logprob: -15.562019348144531

Token 228: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02731568180024624
    2. '
' → logprob: -4.152315616607666
    3. ' for' → logprob: -4.527315616607666
    4. '<|end|>' → logprob: -8.152316093444824
    5. '#' → logprob: -9.527316093444824
    6. '
' → logprob: -11.277316093444824
    7. '  
' → logprob: -12.152316093444824
    8. '

' → logprob: -12.152316093444824
    9. '```' → logprob: -12.277316093444824
    10. '<|end|>' → logprob: -12.527316093444824

Token 229: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016350740334019065
    2. ' for' → logprob: -6.5016350746154785
    3. 'i' → logprob: -9.62663459777832
    4. '
' → logprob: -9.75163459777832
    5. 'f' → logprob: -12.00163459777832
    6. ')' → logprob: -13.75163459777832
    7. '#' → logprob: -15.25163459777832
    8. '```' → logprob: -15.25163459777832
    9. '

' → logprob: -15.62663459777832
    10. 'n' → logprob: -16.12663459777832

Token 230: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.625000953674316
    3. ' for' → logprob: -15.625000953674316
    4. 'f' → logprob: -18.125
    5. '
' → logprob: -19.375
    6. 'fo' → logprob: -19.75
    7. 'range' → logprob: -20.25
    8. '```' → logprob: -20.25
    9. '#' → logprob: -20.5
    10. '0' → logprob: -20.875

Token 231: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -3.225939872208983e-05
    2. 'lation' → logprob: -11.375032424926758
    3. 'a' → logprob: -12.000032424926758
    4. 'tion' → logprob: -12.125032424926758
    5. 'paration' → logprob: -12.875032424926758
    6. '#' → logprob: -13.625032424926758
    7. 'at' → logprob: -13.750032424926758
    8. 'action' → logprob: -14.000032424926758
    9. 'vation' → logprob: -14.500032424926758
    10. 'al' → logprob: -14.750032424926758

Token 232: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5938941240310669
    2. 'de' → logprob: -1.343894124031067
    3. '#' → logprob: -2.7188940048217773
    4. '[' → logprob: -2.9688940048217773
    5. 'd' → logprob: -3.7188940048217773
    6. ' d' → logprob: -3.8438940048217773
    7. ']' → logprob: -5.343894004821777
    8. ')' → logprob: -5.718894004821777
    9. ' des' → logprob: -5.968894004821777
    10. '<|end|>' → logprob: -5.968894004821777

Token 233: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07936371862888336
    2. '[' → logprob: -3.4543638229370117
    3. ' range' → logprob: -3.5793638229370117
    4. '[P' → logprob: -4.329363822937012
    5. '[N' → logprob: -6.579363822937012
    6. '(range' → logprob: -6.829363822937012
    7. 'P' → logprob: -8.204363822937012
    8. ' [' → logprob: -8.704363822937012
    9. 'list' → logprob: -8.954363822937012
    10. 'F' → logprob: -9.329363822937012

Token 234: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09883537143468857
    2. 'for' → logprob: -2.7238354682922363
    3. 'liste' → logprob: -5.348835468292236
    4. '#' → logprob: -5.598835468292236
    5. ' range' → logprob: -5.598835468292236
    6. '[' → logprob: -6.223835468292236
    7. 'rang' → logprob: -6.223835468292236
    8. 'F' → logprob: -6.348835468292236
    9. 'list' → logprob: -6.473835468292236
    10. 'B' → logprob: -6.473835468292236

Token 235: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1255192905664444
    2. 'G' → logprob: -2.875519275665283
    3. 'inv' → logprob: -4.125519275665283
    4. ' I' → logprob: -4.500519275665283
    5. 'F' → logprob: -5.000519275665283
    6. 'R' → logprob: -5.250519275665283
    7. 'Inv' → logprob: -5.625519275665283
    8. ' inv' → logprob: -5.750519275665283
    9. 'fact' → logprob: -6.375519275665283
    10. 'f' → logprob: -6.500519275665283

Token 236: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017952315509319305
    2. 'F' → logprob: -5.1429524421691895
    3. '=' → logprob: -5.3929524421691895
    4. 'n' → logprob: -5.8929524421691895
    5. '[' → logprob: -6.0179524421691895
    6. ' =[' → logprob: -7.5179524421691895
    7. '=[' → logprob: -7.6429524421691895
    8. '_' → logprob: -7.7679524421691895
    9. ' [' → logprob: -8.392951965332031
    10. 'f' → logprob: -8.642951965332031

Token 237: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0056176697835326195
    2. ' =' → logprob: -5.255617618560791
    3. '=[' → logprob: -8.50561809539795
    4. '[' → logprob: -9.38061809539795
    5. 's' → logprob: -9.50561809539795
    6. 'n' → logprob: -12.25561809539795
    7. '=[]' → logprob: -12.75561809539795
    8. 'a' → logprob: -13.00561809539795
    9. 'will' → logprob: -13.38061809539795
    10. 'F' → logprob: -13.38061809539795

Token 238: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.10238666087388992
    2. 'ra' → logprob: -2.352386713027954
    3. 'irà' → logprob: -7.102386474609375
    4. 'ir' → logprob: -7.477386474609375
    5. 'a' → logprob: -7.977386474609375
    6. 'r' → logprob: -8.227386474609375
    7. '#' → logprob: -9.727386474609375
    8. 'irá' → logprob: -10.977386474609375
    9. '```' → logprob: -11.102386474609375
    10. 'era' → logprob: -11.102386474609375

Token 239: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6862148642539978
    2. 'à' → logprob: -0.8112148642539978
    3. '[' → logprob: -4.186214923858643
    4. 'a' → logprob: -4.811214923858643
    5. 'au' → logprob: -5.436214923858643
    6. 'de' → logprob: -5.686214923858643
    7. 'd' → logprob: -5.811214923858643
    8. '<|end|>' → logprob: -5.811214923858643
    9. '#' → logprob: -5.936214923858643
    10. 'P' → logprob: -6.436214923858643

Token 240: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032057031989097595
    2. 'stock' → logprob: -3.782057046890259
    3. ' stock' → logprob: -5.03205680847168
    4. '[P' → logprob: -6.40705680847168
    5. '[F' → logprob: -9.03205680847168
    6. 'calcul' → logprob: -9.15705680847168
    7. ' [' → logprob: -9.53205680847168
    8. '[I' → logprob: -9.65705680847168
    9. '[i' → logprob: -9.90705680847168
    10. '[N' → logprob: -10.15705680847168

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.308710515499115
    2. 'ocker' → logprob: -1.9337105751037598
    3. 'cker' → logprob: -2.8087105751037598
    4. 'ker' → logprob: -3.4337105751037598
    5. 'rer' → logprob: -3.8087105751037598
    6. 'ock' → logprob: -7.05871057510376
    7. '[' → logprob: -7.18371057510376
    8. 'oker' → logprob: -7.30871057510376
    9. 'r' → logprob: -7.43371057510376
    10. 'o' → logprob: -7.80871057510376

Token 242: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010296395979821682
    2. '[P' → logprob: -4.76029634475708
    3. ' [' → logprob: -6.76029634475708
    4. '[I' → logprob: -8.135296821594238
    5. '[F' → logprob: -9.635296821594238
    6. '[i' → logprob: -10.385296821594238
    7. 'F' → logprob: -10.385296821594238
    8. 'P' → logprob: -10.510296821594238
    9. '[M' → logprob: -11.260296821594238
    10. ' des' → logprob: -11.510296821594238

Token 243: ' invers' (ID: 38721)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3606037199497223
    2. 'factor' → logprob: -2.1106038093566895
    3. '1' → logprob: -2.3606038093566895
    4. 'inverse' → logprob: -2.9856038093566895
    5. '[i' → logprob: -4.4856038093566895
    6. 'i' → logprob: -4.9856038093566895
    7. 'in' → logprob: -5.1106038093566895
    8. 'F' → logprob: -5.8606038093566895
    9. 'fact' → logprob: -6.1106038093566895
    10. 'f' → logprob: -6.4856038093566895

Token 244: 'es' (ID: 268)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.1967287063598633
    2. 'ért' → logprob: -1.3217287063598633
    3. 'al' → logprob: -2.6967287063598633
    4. 'ères' → logprob: -3.0717287063598633
    5. 'ér' → logprob: -3.0717287063598633
    6. 'érés' → logprob: -3.3217287063598633
    7. 'ers' → logprob: -3.3217287063598633
    8. 'ál' → logprob: -3.4467287063598633
    9. '```' → logprob: -3.4467287063598633
    10. ']' → logprob: -3.9467287063598633

Token 245: ' modulo' (ID: 112372)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2731340527534485
    2. '[' → logprob: -2.8981339931488037
    3. 'factor' → logprob: -3.2731339931488037
    4. '<|end|>' → logprob: -3.3981339931488037
    5. 'des' → logprob: -3.5231339931488037
    6. '_factor' → logprob: -3.6481339931488037
    7. 'fact' → logprob: -4.648134231567383
    8. 'f' → logprob: -4.773134231567383
    9. ' factorial' → logprob: -5.023134231567383
    10. 'F' → logprob: -5.523134231567383

Token 246: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8015155792236328
    2. '[' → logprob: -1.4265155792236328
    3. 'P' → logprob: -1.8015155792236328
    4. ' [' → logprob: -2.801515579223633
    5. '[P' → logprob: -3.676515579223633
    6. '[M' → logprob: -4.051515579223633
    7. ' M' → logprob: -4.301515579223633
    8. ' P' → logprob: -4.676515579223633
    9. ' ' → logprob: -5.426515579223633
    10. ' de' → logprob: -5.426515579223633

Token 247: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4076871871948242
    2. ',' → logprob: -1.9076871871948242
    3. ' =' → logprob: -2.907687187194824
    4. 'I' → logprob: -2.907687187194824
    5. 'F' → logprob: -3.282687187194824
    6. '=' → logprob: -4.782687187194824
    7. '.' → logprob: -5.157687187194824
    8. '_' → logprob: -5.282687187194824
    9. '[I' → logprob: -5.782687187194824
    10. ' of' → logprob: -6.282687187194824

Token 248: ' fact' (ID: 2840)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.36524689197540283
    2. 'range' → logprob: -2.1152467727661133
    3. 'P' → logprob: -2.6152467727661133
    4. 'fact' → logprob: -2.7402467727661133
    5. 'factor' → logprob: -3.3652467727661133
    6. 'f' → logprob: -4.865246772766113
    7. 'i' → logprob: -5.990246772766113
    8. ' F' → logprob: -7.865246772766113
    9. 'val' → logprob: -8.115246772766113
    10. '[' → logprob: -8.115246772766113

Token 249: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.026195207610726357
    2. 'orial' → logprob: -4.026195049285889
    3. '[' → logprob: -5.526195049285889
    4. 'o' → logprob: -6.776195049285889
    5. 'or' → logprob: -7.276195049285889
    6. '#' → logprob: -7.401195049285889
    7. 'ORI' → logprob: -8.151195526123047
    8. '=' → logprob: -8.776195526123047
    9. ']' → logprob: -9.026195526123047
    10. '['' → logprob: -9.151195526123047

Token 250: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.00961583573371172
    2. 'ales' → logprob: -5.009615898132324
    3. 'alles' → logprob: -6.509615898132324
    4. 'lles' → logprob: -8.009615898132324
    5. 'els' → logprob: -8.134615898132324
    6. 'eles' → logprob: -8.759615898132324
    7. '#' → logprob: -8.884615898132324
    8. 'a' → logprob: -9.259615898132324
    9. '[' → logprob: -9.259615898132324
    10. 'les' → logprob: -10.259615898132324

Token 251: ',
' (ID: 412)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.8646041750907898
    2. '[' → logprob: -0.9896041750907898
    3. ' =' → logprob: -2.1146042346954346
    4. ' [' → logprob: -3.4896042346954346
    5. '=' → logprob: -4.4896039962768555
    6. 'f' → logprob: -4.6146039962768555
    7. ',' → logprob: -4.6146039962768555
    8. '*' → logprob: -5.2396039962768555
    9. ']' → logprob: -5.2396039962768555
    10. '=[' → logprob: -5.3646039962768555

Token 252: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04183011129498482
    2. '#' → logprob: -3.916830062866211
    3. ' [' → logprob: -5.041830062866211
    4. '0' → logprob: -5.791830062866211
    5. 'F' → logprob: -6.041830062866211
    6. 'I' → logprob: -6.041830062866211
    7. '1' → logprob: -6.041830062866211
    8. '[I' → logprob: -6.666830062866211
    9. ' ' → logprob: -7.166830062866211
    10. ']' → logprob: -7.791830062866211

Token 253: ' également' (ID: 15488)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8488655090332031
    2. '[' → logprob: -1.3488655090332031
    3. 'I' → logprob: -2.348865509033203
    4. 'initial' → logprob: -2.473865509033203
    5. '1' → logprob: -3.598865509033203
    6. ' initial' → logprob: -4.223865509033203
    7. ' ' → logprob: -4.598865509033203
    8. '0' → logprob: -4.723865509033203
    9. ' également' → logprob: -4.723865509033203
    10. '[I' → logprob: -4.973865509033203

Token 254: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037304875440895557
    2. 'initial' → logprob: -5.628730297088623
    3. ' [' → logprob: -9.128730773925781
    4. 'init' → logprob: -11.753730773925781
    5. ' initial' → logprob: -11.753730773925781
    6. 'initialized' → logprob: -12.878730773925781
    7. '1' → logprob: -13.628730773925781
    8. ' initialized' → logprob: -14.253730773925781
    9. 'initi' → logprob: -15.378730773925781
    10. 'Initial' → logprob: -15.628730773925781

Token 255: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.484426885843277
    2. 'isées' → logprob: -0.9844268560409546
    3. 'isé' → logprob: -5.109426975250244
    4. 'isés' → logprob: -6.234426975250244
    5. 'ized' → logprob: -6.359426975250244
    6. 'iz' → logprob: -7.984426975250244
    7. 'is' → logprob: -9.109426498413086
    8. '[' → logprob: -9.734426498413086
    9. 'ised' → logprob: -11.234426498413086
    10. 'izada' → logprob: -11.734426498413086

Token 256: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.7127745747566223
    2. '[' → logprob: -1.2127745151519775
    3. 'avec' → logprob: -1.5877745151519775
    4. ' à' → logprob: -5.837774753570557
    5. ' [' → logprob: -6.337774753570557
    6. 'à' → logprob: -6.337774753570557
    7. ' with' → logprob: -7.337774753570557
    8. 'with' → logprob: -7.337774753570557
    9. 'Avec' → logprob: -10.212774276733398
    10. '=[' → logprob: -10.212774276733398

Token 257: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005274311173707247
    2. '1' → logprob: -5.255274295806885
    3. ' [' → logprob: -10.380274772644043
    4. 'des' → logprob: -12.005274772644043
    5. ' ' → logprob: -13.755274772644043
    6. '[P' → logprob: -13.880274772644043
    7. ' des' → logprob: -14.130274772644043
    8. '[N' → logprob: -16.005273818969727
    9. '```' → logprob: -16.380273818969727
    10. 'P' → logprob: -16.755273818969727

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005259881727397442
    2. '[' → logprob: -8.000526428222656
    3. ' ' → logprob: -8.625526428222656
    4. ' [' → logprob: -11.750526428222656
    5. ' ones' → logprob: -13.125526428222656
    6. '```' → logprob: -14.625526428222656
    7. ' ' → logprob: -15.250526428222656
    8. 'ones' → logprob: -15.750526428222656
    9. '0' → logprob: -16.375526428222656
    10. '<|end|>' → logprob: -17.688026428222656

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.625018119812012
    3. ' ' → logprob: -12.375018119812012
    4. '0' → logprob: -12.375018119812012
    5. 'ones' → logprob: -15.750018119812012
    6. '...' → logprob: -16.625019073486328
    7. 'P' → logprob: -16.875019073486328
    8. 'f' → logprob: -16.875019073486328
    9. '#' → logprob: -16.937519073486328
    10. '```' → logprob: -16.937519073486328

Token 260: '
' (ID: 198)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014371157623827457
    2. '
' → logprob: -4.764371395111084
    3. '<|end|>' → logprob: -6.264371395111084
    4. '.' → logprob: -6.389371395111084
    5. ' I' → logprob: -7.139371395111084
    6. '[' → logprob: -7.639371395111084
    7. '[I' → logprob: -7.764371395111084
    8. ',' → logprob: -8.889370918273926
    9. '#' → logprob: -9.764370918273926
    10. ']' → logprob: -10.139370918273926

Token 261: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.3915141355246305e-05
    2. '
' → logprob: -10.87502384185791
    3. ' I' → logprob: -12.50002384185791
    4. '

' → logprob: -14.25002384185791
    5. '#' → logprob: -15.50002384185791
    6. '
' → logprob: -16.000024795532227
    7. ' 
' → logprob: -17.000024795532227
    8. '[I' → logprob: -17.000024795532227
    9. '  
' → logprob: -17.125024795532227
    10. '```' → logprob: -17.250024795532227

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868831992149353
    2. ' =' → logprob: -1.13688325881958
    3. '[' → logprob: -11.636882781982422
    4. '=[' → logprob: -13.761882781982422
    5. ' ' → logprob: -14.136882781982422
    6. ',' → logprob: -14.511882781982422
    7. ' =[' → logprob: -15.011882781982422
    8. ']' → logprob: -15.386882781982422
    9. '[:]' → logprob: -16.136882781982422
    10. ')' → logprob: -16.261882781982422

Token 263: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008618119172751904
    2. ' [' → logprob: -4.758618354797363
    3. '[P' → logprob: -12.633618354797363
    4. ' ' → logprob: -15.883618354797363
    5. '1' → logprob: -16.258617401123047
    6. 'P' → logprob: -17.383617401123047
    7. '[F' → logprob: -17.508617401123047
    8. '   ' → logprob: -17.758617401123047
    9. ' ' → logprob: -18.508617401123047
    10. '```' → logprob: -19.008617401123047

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. ']' → logprob: -18.125
    4. '
' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '0' → logprob: -19.875
    7. '

' → logprob: -20.0
    8. '[' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '...' → logprob: -20.6875

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026765360962599516
    2. ']*' → logprob: -8.37526798248291
    3. '*' → logprob: -10.87526798248291
    4. ' ]' → logprob: -11.00026798248291
    5. ')' → logprob: -14.25026798248291
    6. ' *' → logprob: -15.37526798248291
    7. ',' → logprob: -15.37526798248291
    8. ']*(' → logprob: -15.87526798248291
    9. ' ' → logprob: -16.875267028808594
    10. '}' → logprob: -17.250267028808594

Token 266: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4744032025337219
    2. ' *' → logprob: -0.9744032025337219
    3. ')' → logprob: -8.599403381347656
    4. ']' → logprob: -9.849403381347656
    5. '[' → logprob: -10.474403381347656
    6. '*(' → logprob: -11.349403381347656
    7. '<|end|>' → logprob: -11.474403381347656
    8. ' ' → logprob: -11.724403381347656
    9. '#' → logprob: -12.099403381347656
    10. '
' → logprob: -12.474403381347656

Token 267: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.3425219549390022e-05
    2. ' P' → logprob: -11.25001335144043
    3. '(P' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.87501335144043
    5. '	P' → logprob: -17.75001335144043
    6. '[P' → logprob: -18.12501335144043
    7. ' ' → logprob: -18.25001335144043
    8. 'N' → logprob: -19.25001335144043
    9. 'p' → logprob: -19.50001335144043
    10. '\P' → logprob: -19.62501335144043

Token 268: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23557206988334656
    2. 'for' → logprob: -1.610572099685669
    3. ' for' → logprob: -5.48557186126709
    4. '\n' → logprob: -6.23557186126709
    5. '<|end|>' → logprob: -6.48557186126709
    6. ' 
' → logprob: -7.36057186126709
    7. '#' → logprob: -7.98557186126709
    8. '
' → logprob: -8.11057186126709
    9. '

' → logprob: -8.11057186126709
    10. 'f' → logprob: -8.36057186126709

Token 269: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025449497625231743
    2. '
' → logprob: -4.400449275970459
    3. ' for' → logprob: -4.400449275970459
    4. 'f' → logprob: -8.400449752807617
    5. 'i' → logprob: -8.775449752807617
    6. '\n' → logprob: -9.275449752807617
    7. '#' → logprob: -10.400449752807617
    8. ' 
' → logprob: -10.775449752807617
    9. 'n' → logprob: -11.150449752807617
    10. '

' → logprob: -11.900449752807617

Token 270: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0802738870552275e-05
    2. 'i' → logprob: -11.87501049041748
    3. '#' → logprob: -13.12501049041748
    4. ' for' → logprob: -13.87501049041748
    5. 'f' → logprob: -14.37501049041748
    6. '```' → logprob: -15.75001049041748
    7. 'range' → logprob: -15.87501049041748
    8. '
' → logprob: -17.750011444091797
    9. 'fo' → logprob: -18.125011444091797
    10. 'def' → logprob: -18.250011444091797

Token 271: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2424219697713852
    2. 'for' → logprob: -2.242421865463257
    3. ' =' → logprob: -2.367421865463257
    4. 'i' → logprob: -4.867422103881836
    5. 'a' → logprob: -5.742422103881836
    6. '_' → logprob: -6.867422103881836
    7. ' for' → logprob: -7.617422103881836
    8. '#' → logprob: -7.617422103881836
    9. 'z' → logprob: -7.992422103881836
    10. '   ' → logprob: -8.367422103881836

Token 272: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31608498096466064
    2. ' ' → logprob: -1.4410849809646606
    3. '1' → logprob: -3.441084861755371
    4. ' i' → logprob: -7.441084861755371
    5. ' z' → logprob: -7.691084861755371
    6. 'i' → logprob: -8.066084861755371
    7. 'z' → logprob: -8.191084861755371
    8. '2' → logprob: -9.066084861755371
    9. ' =' → logprob: -9.191084861755371
    10. '=' → logprob: -9.191084861755371

Token 273: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.2767809331417084
    2. 'val' → logprob: -1.5267809629440308
    3. ' variable' → logprob: -5.15178108215332
    4. 'temp' → logprob: -6.15178108215332
    5. 'range' → logprob: -6.27678108215332
    6. 'base' → logprob: -6.27678108215332
    7. 'for' → logprob: -6.40178108215332
    8. '1' → logprob: -6.65178108215332
    9. '0' → logprob: -6.77678108215332
    10. 'factor' → logprob: -6.77678108215332

Token 274: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1578010469675064
    2. ' i' → logprob: -2.5328011512756348
    3. 'i' → logprob: -3.6578011512756348
    4. '=' → logprob: -3.7828011512756348
    5. ' ' → logprob: -4.782801151275635
    6. ',' → logprob: -5.907801151275635
    7. '_' → logprob: -6.782801151275635
    8. ' for' → logprob: -6.782801151275635
    9. 'for' → logprob: -7.282801151275635
    10. '=i' → logprob: -7.282801151275635

Token 275: ' stock' (ID: 6546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9469039440155029
    2. 'range' → logprob: -1.571903944015503
    3. ' =' → logprob: -1.696903944015503
    4. ' i' → logprob: -2.696903944015503
    5. '=' → logprob: -2.946903944015503
    6. ' range' → logprob: -3.071903944015503
    7. 'for' → logprob: -4.571904182434082
    8. '=i' → logprob: -5.196904182434082
    9. ' ' → logprob: -5.446904182434082
    10. ')' → logprob: -5.571904182434082

Token 276: 'era' (ID: 2060)
  Prédit: 'era'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'era' → logprob: -0.12100975215435028
    2. 'er' → logprob: -2.7460098266601562
    3. 'e' → logprob: -3.2460098266601562
    4. 'éra' → logprob: -5.996009826660156
    5. 'é' → logprob: -6.246009826660156
    6. 'ée' → logprob: -6.371009826660156
    7. 'èr' → logprob: -6.871009826660156
    8. '#' → logprob: -7.246009826660156
    9. 'ér' → logprob: -7.246009826660156
    10. 'a' → logprob: -7.371009826660156

Token 277: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0461680889129639
    2. '1' → logprob: -1.1711680889129639
    3. '0' → logprob: -1.2961680889129639
    4. 'f' → logprob: -3.671168088912964
    5. ' f' → logprob: -4.296168327331543
    6. '2' → logprob: -4.796168327331543
    7. 'i' → logprob: -5.171168327331543
    8. ' i' → logprob: -5.546168327331543
    9. 'z' → logprob: -6.171168327331543
    10. 'N' → logprob: -6.671168327331543

Token 278: ' résultat' (ID: 62556)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.300589680671692
    2. ' ' → logprob: -1.675589680671692
    3. 'i' → logprob: -1.925589680671692
    4. ' facteur' → logprob: -2.1755895614624023
    5. ' i' → logprob: -2.4255895614624023
    6. 'fact' → logprob: -2.6755895614624023
    7. ' factor' → logprob: -4.050589561462402
    8. 'nombre' → logprob: -4.300589561462402
    9. ' nombre' → logprob: -4.675589561462402
    10. ' résultat' → logprob: -4.800589561462402

Token 279: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045350413769483566
    2. '=' → logprob: -3.1703503131866455
    3. ' ' → logprob: -6.170350551605225
    4. 'z' → logprob: -8.920350074768066
    5. ',' → logprob: -10.170350074768066
    6. '_' → logprob: -10.295350074768066
    7. '0' → logprob: -10.670350074768066
    8. ' ' → logprob: -12.295350074768066
    9. ' 
' → logprob: -12.545350074768066
    10. ' =
' → logprob: -12.670350074768066

Token 280: ' calcul' (ID: 7559)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.054600249975919724
    2. '=' → logprob: -3.429600238800049
    3. ' =' → logprob: -3.929600238800049
    4. '0' → logprob: -6.929600238800049
    5. ' ' → logprob: -10.554600715637207
    6. '
' → logprob: -10.929600715637207
    7. ' z' → logprob: -11.054600715637207
    8. ',' → logprob: -11.179600715637207
    9. '=
' → logprob: -12.054600715637207
    10. ' 
' → logprob: -12.304600715637207

Token 281: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0023565024603158236
    2. '#' → logprob: -6.25235652923584
    3. '=' → logprob: -8.75235652923584
    4. 'e' → logprob: -9.00235652923584
    5. 'ée' → logprob: -10.00235652923584
    6. 'ateur' → logprob: -10.50235652923584
    7. 'u' → logprob: -10.87735652923584
    8. '_' → logprob: -11.25235652923584
    9. ' =' → logprob: -11.25235652923584
    10. 'a' → logprob: -11.50235652923584

Token 282: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35797375440597534
    2. '=' → logprob: -1.7329738140106201
    3. 'z' → logprob: -2.10797381401062
    4. ',' → logprob: -6.607973575592041
    5. ' ' → logprob: -7.732973575592041
    6. ' z' → logprob: -8.6079740524292
    7. ' 
' → logprob: -8.9829740524292
    8. '
' → logprob: -9.2329740524292
    9. ' ' → logprob: -9.2329740524292
    10. '=z' → logprob: -9.2329740524292

Token 283: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00792564544826746
    2. ' ' → logprob: -5.757925510406494
    3. 'range' → logprob: -6.507925510406494
    4. 'f' → logprob: -6.632925510406494
    5. '1' → logprob: -6.882925510406494
    6. 'F' → logprob: -8.757925987243652
    7. '#' → logprob: -8.882925987243652
    8. 'z' → logprob: -9.507925987243652
    9. ' range' → logprob: -9.507925987243652
    10. 'la' → logprob: -9.882925987243652

Token 284: ' boucle' (ID: 174211)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13311882317066193
    2. 'for' → logprob: -2.3831188678741455
    3. ' range' → logprob: -4.633118629455566
    4. '0' → logprob: -5.133118629455566
    5. '=' → logprob: -5.758118629455566
    6. '#' → logprob: -5.758118629455566
    7. 'code' → logprob: -6.008118629455566
    8. 'f' → logprob: -7.258118629455566
    9. ' for' → logprob: -7.508118629455566
    10. 'r' → logprob: -7.633118629455566

Token 285: ' principale' (ID: 68926)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00011546355381142348
    2. '
' → logprob: -9.125115394592285
    3. ' z' → logprob: -13.625115394592285
    4. '
' → logprob: -14.000115394592285
    5. ' 
' → logprob: -14.375115394592285
    6. '

' → logprob: -14.375115394592285
    7. '#' → logprob: -14.750115394592285
    8. '0' → logprob: -14.750115394592285
    9. '=' → logprob: -14.875115394592285
    10. ',' → logprob: -14.875115394592285

Token 286: '
' (ID: 198)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00012451570364646614
    2. ' =' → logprob: -9.87512493133545
    3. '=' → logprob: -10.12512493133545
    4. '
' → logprob: -10.75012493133545
    5. '0' → logprob: -11.62512493133545
    6. ',' → logprob: -14.00012493133545
    7. ' z' → logprob: -14.00012493133545
    8. '#' → logprob: -15.50012493133545
    9. '=z' → logprob: -16.125123977661133
    10. '

' → logprob: -16.250123977661133

Token 287: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -11.875006675720215
    3. '```' → logprob: -16.00000762939453
    4. ' z' → logprob: -18.87500762939453
    5. '#' → logprob: -19.75000762939453
    6. '	z' → logprob: -20.25000762939453
    7. ''z' → logprob: -20.50000762939453
    8. '`' → logprob: -20.87500762939453
    9. 'f' → logprob: -21.37500762939453
    10. '
' → logprob: -21.62500762939453

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132677972316742
    2. ' =' → logprob: -1.3132678270339966
    3. ' ' → logprob: -12.313267707824707
    4. ',' → logprob: -13.688267707824707
    5. ' =
' → logprob: -15.563267707824707
    6. '=

' → logprob: -16.813268661499023
    7. ' ' → logprob: -17.063268661499023
    8. '=
' → logprob: -17.188268661499023
    9. '  ' → logprob: -17.438268661499023
    10. '=}' → logprob: -17.688268661499023

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000692420348059386
    2. ' ' → logprob: -7.750692367553711
    3. '1' → logprob: -8.250692367553711
    4. '(' → logprob: -16.12569236755371
    5. 'A' → logprob: -17.00069236755371
    6. ' ' → logprob: -17.00069236755371
    7. '   ' → logprob: -17.06319236755371
    8. 'int' → logprob: -17.06319236755371
    9. 'f' → logprob: -17.25069236755371
    10. '[' → logprob: -17.37569236755371

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001035787514410913
    2. '1' → logprob: -6.876035690307617
    3. ' ' → logprob: -13.251035690307617
    4. 'N' → logprob: -15.938535690307617
    5. 'f' → logprob: -15.938535690307617
    6. '```' → logprob: -16.188535690307617
    7. '-' → logprob: -16.313535690307617
    8. '(' → logprob: -16.376035690307617
    9. 'int' → logprob: -16.376035690307617
    10. 'A' → logprob: -16.626035690307617

Token 291: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042395852506160736
    2. '
' → logprob: -3.542395830154419
    3. ' for' → logprob: -4.917396068572998
    4. '<|end|>' → logprob: -6.667396068572998
    5. '\n' → logprob: -6.792396068572998
    6. '#' → logprob: -6.917396068572998
    7. 'i' → logprob: -7.167396068572998
    8. 'f' → logprob: -7.667396068572998
    9. 'n' → logprob: -8.79239559173584
    10. '' → logprob: -9.41739559173584

Token 292: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028309114277362823
    2. 'i' → logprob: -6.127830982208252
    3. ' for' → logprob: -7.377830982208252
    4. 'f' → logprob: -11.502830505371094
    5. '
' → logprob: -12.752830505371094
    6. '_' → logprob: -12.877830505371094
    7. 'range' → logprob: -13.627830505371094
    8. ')' → logprob: -13.752830505371094
    9. '```' → logprob: -14.377830505371094
    10. '#' → logprob: -14.502830505371094

Token 293: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007139815716072917
    2. 'i' → logprob: -7.75071382522583
    3. ' for' → logprob: -8.625714302062988
    4. '_' → logprob: -9.625714302062988
    5. 'range' → logprob: -10.875714302062988
    6. 'f' → logprob: -11.125714302062988
    7. '#' → logprob: -13.125714302062988
    8. '```' → logprob: -14.500714302062988
    9. 'r' → logprob: -15.125714302062988
    10. 'fo' → logprob: -15.250714302062988

Token 294: 'paration' (ID: 27466)
  Prédit: 'paration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.06303289532661438
    2. 'c' → logprob: -3.688032865524292
    3. 'fix' → logprob: -4.813033103942871
    4. 'cision' → logprob: -5.438033103942871
    5. 'cal' → logprob: -5.563033103942871
    6. '#' → logprob: -5.563033103942871
    7. 'sent' → logprob: -5.688033103942871
    8. 'd' → logprob: -5.813033103942871
    9. 'for' → logprob: -6.063033103942871
    10. 'rem' → logprob: -6.938033103942871

Token 295: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2033737301826477
    2. ' for' → logprob: -1.703373670578003
    3. 'range' → logprob: -6.703373908996582
    4. ' ' → logprob: -8.078373908996582
    5. ' range' → logprob: -8.703373908996582
    6. '_' → logprob: -9.578373908996582
    7. '#' → logprob: -10.578373908996582
    8. ')' → logprob: -11.203373908996582
    9. ' ' → logprob: -11.203373908996582
    10. '=' → logprob: -11.328373908996582

Token 296: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02727496065199375
    2. 'range' → logprob: -4.527275085449219
    3. ''une' → logprob: -5.402275085449219
    4. 'u' → logprob: -5.777275085449219
    5. ' range' → logprob: -6.527275085449219
    6. 'a' → logprob: -6.527275085449219
    7. ''un' → logprob: -6.902275085449219
    8. ''' → logprob: -7.027275085449219
    9. 'ans' → logprob: -7.277275085449219
    10. 'i' → logprob: -7.402275085449219

Token 297: ' objet' (ID: 13839)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01503050234168768
    2. 'range' → logprob: -4.765030384063721
    3. ' for' → logprob: -5.140030384063721
    4. '_' → logprob: -8.765030860900879
    5. 'pour' → logprob: -9.515030860900879
    6. 'r' → logprob: -9.515030860900879
    7. ' range' → logprob: -9.515030860900879
    8. '
' → logprob: -9.890030860900879
    9. 'bou' → logprob: -11.015030860900879
    10. 'i' → logprob: -11.265030860900879

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36045441031455994
    2. ' range' → logprob: -1.2354544401168823
    3. ' for' → logprob: -5.110454559326172
    4. 'for' → logprob: -5.985454559326172
    5. ' ' → logprob: -7.610454559326172
    6. 're' → logprob: -8.235454559326172
    7. 'import' → logprob: -8.360454559326172
    8. ' xrange' → logprob: -8.360454559326172
    9. '_' → logprob: -8.485454559326172
    10. 'from' → logprob: -8.485454559326172

Token 299: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29493653774261475
    2. '(P' → logprob: -2.2949366569519043
    3. 'range' → logprob: -2.9199366569519043
    4. '_range' → logprob: -3.0449366569519043
    5. '(N' → logprob: -3.2949366569519043
    6. '(range' → logprob: -5.669936656951904
    7. 'r' → logprob: -6.044936656951904
    8. ' =' → logprob: -6.794936656951904
    9. 's' → logprob: -6.794936656951904
    10. '(n' → logprob: -6.919936656951904

Token 300: ' dés' (ID: 19454)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0707562118768692
    2. 'range' → logprob: -3.195756196975708
    3. ' i' → logprob: -4.445756435394287
    4. ' P' → logprob: -4.695756435394287
    5. '_' → logprob: -6.195756435394287
    6. ' ' → logprob: -6.820756435394287
    7. ' N' → logprob: -7.195756435394287
    8. 'P' → logprob: -7.445756435394287
    9. 'i' → logprob: -7.570756435394287
    10. ' p' → logprob: -8.445755958557129

Token 301: 'igner' (ID: 32459)
  Prédit: 'igner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igner' → logprob: -0.4450661838054657
    2. 'ormais' → logprob: -1.695066213607788
    3. 'ignation' → logprob: -2.320066213607788
    4. 'ignant' → logprob: -4.320065975189209
    5. 'ign' → logprob: -4.570065975189209
    6. 'ignée' → logprob: -4.695065975189209
    7. 't' → logprob: -4.820065975189209
    8. 'igne' → logprob: -5.445065975189209
    9. 'iter' → logprob: -5.445065975189209
    10. 'erv' → logprob: -5.820065975189209

Token 302: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09929703176021576
    2. '(' → logprob: -3.474297046661377
    3. ' range' → logprob: -3.724297046661377
    4. '(range' → logprob: -3.974297046661377
    5. '(N' → logprob: -4.349297046661377
    6. '(P' → logprob: -5.724297046661377
    7. 'P' → logprob: -5.974297046661377
    8. 'N' → logprob: -6.974297046661377
    9. '(i' → logprob: -8.724296569824219
    10. ' P' → logprob: -8.849296569824219

Token 303: ' plages' (ID: 153531)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2875719666481018
    2. ' range' → logprob: -1.662571907043457
    3. 'i' → logprob: -3.412571907043457
    4. ' i' → logprob: -4.287571907043457
    5. 'P' → logprob: -5.162571907043457
    6. ' P' → logprob: -6.662571907043457
    7. 'indices' → logprob: -7.412571907043457
    8. 'N' → logprob: -7.537571907043457
    9. 'for' → logprob: -7.537571907043457
    10. 're' → logprob: -7.537571907043457

Token 304: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9640432596206665
    2. '(' → logprob: -1.4640432596206665
    3. ' de' → logprob: -2.339043140411377
    4. 's' → logprob: -2.839043140411377
    5. 'de' → logprob: -2.964043140411377
    6. '(
' → logprob: -3.089043140411377
    7. 'range' → logprob: -3.589043140411377
    8. '_de' → logprob: -3.839043140411377
    9. '(N' → logprob: -4.339043140411377
    10. '(range' → logprob: -4.589043140411377

Token 305: ' bou' (ID: 17573)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8869224190711975
    2. 'range' → logprob: -1.6369223594665527
    3. ' i' → logprob: -1.8869223594665527
    4. ' range' → logprob: -2.2619223594665527
    5. 'val' → logprob: -2.7619223594665527
    6. 'N' → logprob: -3.7619223594665527
    7. ' valeurs' → logprob: -4.511922359466553
    8. ' N' → logprob: -4.886922359466553
    9. '1' → logprob: -5.011922359466553
    10. ' P' → logprob: -5.136922359466553

Token 306: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.002827223390340805
    2. 'cle' → logprob: -6.002827167510986
    3. 'cl' → logprob: -8.252827644348145
    4. 'ch' → logprob: -10.252827644348145
    5. 'g' → logprob: -10.377827644348145
    6. 'cls' → logprob: -12.127827644348145
    7. 'c' → logprob: -12.627827644348145
    8. 'clé' → logprob: -12.627827644348145
    9. 'r' → logprob: -13.127827644348145
    10. ' cle' → logprob: -13.377827644348145

Token 307: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17823047935962677
    2. 'for' → logprob: -2.0532305240631104
    3. 'r' → logprob: -4.178230285644531
    4. 'i' → logprob: -4.678230285644531
    5. 'ranges' → logprob: -5.428230285644531
    6. '(range' → logprob: -5.928230285644531
    7. ')' → logprob: -7.928230285644531
    8. ' for' → logprob: -8.178230285644531
    9. '```' → logprob: -8.178230285644531
    10. '(' → logprob: -8.303230285644531

Token 308: 'pour' (ID: 52723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4336365759372711
    2. 'i' → logprob: -1.6836365461349487
    3. ')' → logprob: -2.5586366653442383
    4. ' range' → logprob: -3.0586366653442383
    5. ' i' → logprob: -3.6836366653442383
    6. 'for' → logprob: -5.308636665344238
    7. 'N' → logprob: -5.433636665344238
    8. '1' → logprob: -6.308636665344238
    9. '
' → logprob: -6.933636665344238
    10. ' N' → logprob: -7.558636665344238

Token 309: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4756697118282318
    2. 'i' → logprob: -0.9756697416305542
    3. '_' → logprob: -6.975669860839844
    4. ' _' → logprob: -8.350669860839844
    5. ' ' → logprob: -8.725669860839844
    6. ')' → logprob: -9.725669860839844
    7. ' k' → logprob: -10.475669860839844
    8. ' ' → logprob: -10.600669860839844
    9. ' range' → logprob: -10.850669860839844
    10. '_i' → logprob: -11.100669860839844

Token 310: ' lis' (ID: 20784)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6216953992843628
    2. 'i' → logprob: -0.9966953992843628
    3. '_' → logprob: -2.7466955184936523
    4. ' _' → logprob: -4.746695518493652
    5. ' range' → logprob: -5.621695518493652
    6. ')' → logprob: -5.871695518493652
    7. 'range' → logprob: -6.121695518493652
    8. 'for' → logprob: -6.371695518493652
    9. 'calcul' → logprob: -6.621695518493652
    10. ' ' → logprob: -6.621695518493652

Token 311: 'ibilité' (ID: 44186)
  Prédit: 'ibilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilité' → logprob: -0.9832515716552734
    2. 'té' → logprob: -1.2332515716552734
    3. 'te' → logprob: -1.6082515716552734
    4. 't' → logprob: -2.8582515716552734
    5. 'tes' → logprob: -3.1082515716552734
    6. 'bil' → logprob: -4.108251571655273
    7. 'b' → logprob: -4.608251571655273
    8. '#' → logprob: -6.733251571655273
    9. '```' → logprob: -7.358251571655273
    10. 'ibil' → logprob: -7.358251571655273

Token 312: ' ensuite' (ID: 39713)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05653565004467964
    2. ' )' → logprob: -3.0565357208251953
    3. 'range' → logprob: -5.556535720825195
    4. ',' → logprob: -6.431535720825195
    5. ' ' → logprob: -7.681535720825195
    6. '(' → logprob: -7.681535720825195
    7. '(range' → logprob: -7.681535720825195
    8. 'for' → logprob: -8.556535720825195
    9. '(N' → logprob: -8.806535720825195
    10. ' range' → logprob: -8.806535720825195

Token 313: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008998489007353783
    2. 'range' → logprob: -5.508998394012451
    3. ' )' → logprob: -5.633998394012451
    4. ',' → logprob: -8.13399887084961
    5. 'for' → logprob: -8.25899887084961
    6. '(' → logprob: -9.25899887084961
    7. ')
' → logprob: -9.25899887084961
    8. '(range' → logprob: -9.50899887084961
    9. ').' → logprob: -9.75899887084961
    10. 'N' → logprob: -9.88399887084961

Token 314: 'R' (ID: 49)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04558267071843147
    2. 'for' → logprob: -3.4205827713012695
    3. 'r' → logprob: -4.7955827713012695
    4. ' range' → logprob: -6.5455827713012695
    5. 'ranges' → logprob: -7.1705827713012695
    6. 'i' → logprob: -8.04558277130127
    7. ' for' → logprob: -8.04558277130127
    8. 'rng' → logprob: -8.42058277130127
    9. '```' → logprob: -8.54558277130127
    10. '`' → logprob: -8.92058277130127

Token 315: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.004422166850417852
    2. ' =' → logprob: -5.879422187805176
    3. '=' → logprob: -6.754422187805176
    4. 'a' → logprob: -8.379422187805176
    5. '1' → logprob: -9.254422187805176
    6. 'ang' → logprob: -10.004422187805176
    7. 'ANGE' → logprob: -11.004422187805176
    8. ' ' → logprob: -11.629422187805176
    9. 'an' → logprob: -11.754422187805176
    10. ' ange' → logprob: -12.004422187805176

Token 316: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012513063848018646
    2. ' range' → logprob: -4.387513160705566
    3. 'ange' → logprob: -13.387513160705566
    4. '(range' → logprob: -14.637513160705566
    5. '	range' → logprob: -14.762513160705566
    6. ' ' → logprob: -15.262513160705566
    7. '   ' → logprob: -15.262513160705566
    8. 'rang' → logprob: -16.01251220703125
    9. 'r' → logprob: -16.51251220703125
    10. ' P' → logprob: -16.63751220703125

Token 317: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000273136975010857
    2. '(P' → logprob: -8.250272750854492
    3. '(N' → logprob: -11.375272750854492
    4. '1' → logprob: -16.375272750854492
    5. ' (' → logprob: -16.375272750854492
    6. '(
' → logprob: -16.750272750854492
    7. '(M' → logprob: -17.250272750854492
    8. '(R' → logprob: -17.625272750854492
    9. 'P' → logprob: -18.125272750854492
    10. '(f' → logprob: -18.500272750854492

Token 318: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23997282981872559
    2. '(' → logprob: -2.3649728298187256
    3. 'i' → logprob: -2.3649728298187256
    4. '1' → logprob: -4.489973068237305
    5. '0' → logprob: -5.489973068237305
    6. ' for' → logprob: -6.114973068237305
    7. '(i' → logprob: -6.364973068237305
    8. 'N' → logprob: -6.364973068237305
    9. '(N' → logprob: -6.614973068237305
    10. ')' → logprob: -6.989973068237305

Token 319: ' Première' (ID: 179764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2527425289154053
    2. 'i' → logprob: -2.0027425289154053
    3. '0' → logprob: -3.6277425289154053
    4. '_' → logprob: -4.002742767333984
    5. '1' → logprob: -4.252742767333984
    6. ' for' → logprob: -4.627742767333984
    7. 'P' → logprob: -5.252742767333984
    8. 'N' → logprob: -6.002742767333984
    9. 'R' → logprob: -6.127742767333984
    10. '(' → logprob: -6.127742767333984

Token 320: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18022267520427704
    2. ' for' → logprob: -2.180222749710083
    3. ' ' → logprob: -3.430222749710083
    4. '(' → logprob: -5.180222511291504
    5. '_' → logprob: -5.180222511291504
    6. ' i' → logprob: -5.805222511291504
    7. ')' → logprob: -6.805222511291504
    8. ' N' → logprob: -7.305222511291504
    9. 'N' → logprob: -7.930222511291504
    10. 'i' → logprob: -8.055222511291504

Token 321: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039308443665504456
    2. '(' → logprob: -3.914308547973633
    3. '(i' → logprob: -4.914308547973633
    4. ' for' → logprob: -5.164308547973633
    5. 'i' → logprob: -6.289308547973633
    6. '(N' → logprob: -6.664308547973633
    7. '(P' → logprob: -7.164308547973633
    8. 'f' → logprob: -7.414308547973633
    9. '(
' → logprob: -8.164308547973633
    10. 'P' → logprob: -8.664308547973633

Token 322: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05876542627811432
    2. 'i' → logprob: -3.433765411376953
    3. ' for' → logprob: -4.058765411376953
    4. 'P' → logprob: -5.433765411376953
    5. ' i' → logprob: -7.058765411376953
    6. 'f' → logprob: -7.433765411376953
    7. 'N' → logprob: -7.933765411376953
    8. 'R' → logprob: -8.183765411376953
    9. 'r' → logprob: -8.558765411376953
    10. ' P' → logprob: -8.808765411376953

Token 323: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6831560134887695
    2. ' for' → logprob: -0.9331560134887695
    3. ' i' → logprob: -2.6831560134887695
    4. 'i' → logprob: -3.9331560134887695
    5. ' ' → logprob: -5.1831560134887695
    6. 'r' → logprob: -6.5581560134887695
    7. ' f' → logprob: -6.6831560134887695
    8. ' P' → logprob: -7.3081560134887695
    9. ' R' → logprob: -7.3081560134887695
    10. 'f' → logprob: -7.3081560134887695

Token 324: ' fact' (ID: 2840)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22498254477977753
    2. ' i' → logprob: -2.224982500076294
    3. 'factor' → logprob: -2.849982500076294
    4. 'fact' → logprob: -4.474982738494873
    5. 'f' → logprob: -4.474982738494873
    6. ' factorial' → logprob: -5.224982738494873
    7. 'n' → logprob: -6.474982738494873
    8. ' f' → logprob: -6.599982738494873
    9. 'range' → logprob: -7.099982738494873
    10. ' factor' → logprob: -7.349982738494873

Token 325: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.453967422246933
    2. 'or' → logprob: -1.2039674520492554
    3. 'orial' → logprob: -3.328967332839966
    4. 'i' → logprob: -3.703967332839966
    5. '```' → logprob: -7.203967571258545
    6. '#' → logprob: -7.328967571258545
    7. '(' → logprob: -7.578967571258545
    8. '(i' → logprob: -8.078967094421387
    9. '*i' → logprob: -8.453967094421387
    10. 'ories' → logprob: -8.578967094421387

Token 326: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.019824208691716194
    2. 'alles' → logprob: -4.394824028015137
    3. 'ales' → logprob: -5.394824028015137
    4. 'lles' → logprob: -6.769824028015137
    5. 'es' → logprob: -7.769824028015137
    6. 'a' → logprob: -8.144824028015137
    7. 'les' → logprob: -8.519824028015137
    8. 'els' → logprob: -8.644824028015137
    9. '#' → logprob: -8.644824028015137
    10. 'eles' → logprob: -9.769824028015137

Token 327: ' modulo' (ID: 112372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008659947663545609
    2. ' for' → logprob: -5.383659839630127
    3. 'R' → logprob: -6.508659839630127
    4. ':' → logprob: -7.258659839630127
    5. '(' → logprob: -7.508659839630127
    6. 'i' → logprob: -8.133660316467285
    7. '0' → logprob: -8.508660316467285
    8. '(R' → logprob: -9.008660316467285
    9. '(P' → logprob: -9.133660316467285
    10. 'f' → logprob: -9.383660316467285

Token 328: ' M' (ID: 391)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.12489671260118484
    2. ' P' → logprob: -3.124896764755249
    3. '1' → logprob: -3.499896764755249
    4. 'N' → logprob: -3.624896764755249
    5. 'i' → logprob: -5.12489652633667
    6. '(' → logprob: -5.87489652633667
    7. '(P' → logprob: -6.12489652633667
    8. ' ' → logprob: -6.37489652633667
    9. ' N' → logprob: -6.49989652633667
    10. ' i' → logprob: -6.87489652633667

Token 329: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05723702162504196
    2. ' for' → logprob: -3.432236909866333
    3. 'i' → logprob: -4.057237148284912
    4. ':' → logprob: -5.307237148284912
    5. '(' → logprob: -7.932237148284912
    6. '0' → logprob: -8.682236671447754
    7. ' i' → logprob: -9.307236671447754
    8. ')' → logprob: -9.807236671447754
    9. 'R' → logprob: -10.182236671447754
    10. '.' → logprob: -10.182236671447754

Token 330: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20148058235645294
    2. 'i' → logprob: -1.7014806270599365
    3. ' k' → logprob: -11.326480865478516
    4. 'k' → logprob: -11.326480865478516
    5. ' ' → logprob: -11.451480865478516
    6. '	i' → logprob: -11.951480865478516
    7. 'r' → logprob: -12.326480865478516
    8. 'n' → logprob: -12.326480865478516
    9. ' ' → logprob: -12.701480865478516
    10. ' n' → logprob: -12.826480865478516

Token 331: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5233529806137085
    2. ' i' → logprob: -0.8983529806137085
    3. 'k' → logprob: -9.02335262298584
    4. ' k' → logprob: -9.64835262298584
    5. ' ' → logprob: -10.89835262298584
    6. '	i' → logprob: -12.14835262298584
    7. ' ' → logprob: -12.27335262298584
    8. '(i' → logprob: -12.52335262298584
    9. 'r' → logprob: -12.89835262298584
    10. 'x' → logprob: -13.39835262298584

Token 332: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.053990524262189865
    2. ' i' → logprob: -3.053990602493286
    3. 'k' → logprob: -5.303990364074707
    4. ' k' → logprob: -8.303990364074707
    5. 'x' → logprob: -9.553990364074707
    6. 'n' → logprob: -10.053990364074707
    7. '1' → logprob: -10.678990364074707
    8. ' ' → logprob: -11.178990364074707
    9. '	i' → logprob: -12.553990364074707
    10. ' x' → logprob: -12.678990364074707

Token 333: 'iers' (ID: 11012)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2372380495071411
    2. 'ements' → logprob: -1.4872380495071411
    3. 'iers' → logprob: -1.9872380495071411
    4. 'P' → logprob: -2.4872379302978516
    5. 'i' → logprob: -2.7372379302978516
    6. 't' → logprob: -2.9872379302978516
    7. 'er' → logprob: -3.3622379302978516
    8. 's' → logprob: -3.9872379302978516
    9. 'ières' → logprob: -4.112237930297852
    10. 'R' → logprob: -4.487237930297852

Token 334: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8953971266746521
    2. '(i' → logprob: -1.1453971862792969
    3. 'i' → logprob: -1.7703971862792969
    4. 'for' → logprob: -3.145397186279297
    5. 'in' → logprob: -3.770397186279297
    6. '(N' → logprob: -4.145397186279297
    7. ' i' → logprob: -5.395397186279297
    8. '(n' → logprob: -5.395397186279297
    9. ' in' → logprob: -5.895397186279297
    10. '(P' → logprob: -6.145397186279297

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008463177946396172
    2. ' ' → logprob: -8.000845909118652
    3. '2' → logprob: -8.625845909118652
    4. '(' → logprob: -8.625845909118652
    5. 'range' → logprob: -9.000845909118652
    6. ' range' → logprob: -10.750845909118652
    7. '   ' → logprob: -12.875845909118652
    8. ' (' → logprob: -13.500845909118652
    9. 'P' → logprob: -14.250845909118652
    10. 'R' → logprob: -14.375845909118652

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017148085171356797
    2. 'range' → logprob: -6.751714706420898
    3. '2' → logprob: -7.626714706420898
    4. 'R' → logprob: -10.751714706420898
    5. 'P' → logprob: -11.001714706420898
    6. '(' → logprob: -11.876714706420898
    7. ' ' → logprob: -12.626714706420898
    8. 'N' → logprob: -12.876714706420898
    9. ' range' → logprob: -13.376714706420898
    10. '0' → logprob: -13.876714706420898

Token 337: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009130328893661499
    2. '(' → logprob: -5.134130477905273
    3. ' ,' → logprob: -6.634130477905273
    4. 'in' → logprob: -7.384130477905273
    5. '1' → logprob: -7.634130477905273
    6. 'range' → logprob: -8.384130477905273
    7. ' in' → logprob: -9.134130477905273
    8. ' ' → logprob: -9.259130477905273
    9. '(P' → logprob: -9.259130477905273
    10. ')' → logprob: -9.634130477905273

Token 338: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6350940465927124
    2. 'N' → logprob: -0.7600940465927124
    3. ' P' → logprob: -6.385094165802002
    4. ' N' → logprob: -7.135094165802002
    5. '1' → logprob: -12.885093688964844
    6. ',' → logprob: -13.510093688964844
    7. 'n' → logprob: -13.510093688964844
    8. 'R' → logprob: -14.510093688964844
    9. ' ' → logprob: -14.510093688964844
    10. ')' → logprob: -15.010093688964844

Token 339: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003041885793209076
    2. ':' → logprob: -6.128041744232178
    3. ' for' → logprob: -7.503041744232178
    4. ':
' → logprob: -9.378042221069336
    5. '
' → logprob: -9.753042221069336
    6. '(' → logprob: -9.753042221069336
    7. 'i' → logprob: -10.503042221069336
    8. 'f' → logprob: -10.628042221069336
    9. '1' → logprob: -11.003042221069336
    10. 'r' → logprob: -11.378042221069336

Token 340: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03528250753879547
    2. '(' → logprob: -4.285282611846924
    3. ' for' → logprob: -4.410282611846924
    4. ':' → logprob: -5.660282611846924
    5. '
' → logprob: -6.910282611846924
    6. '1' → logprob: -7.160282611846924
    7. 'i' → logprob: -7.160282611846924
    8. 'R' → logprob: -7.535282611846924
    9. '(R' → logprob: -7.910282611846924
    10. ':
' → logprob: -8.285282135009766

Token 341: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006292549427598715
    2. ' for' → logprob: -5.131292343139648
    3. '
' → logprob: -8.131292343139648
    4. 'i' → logprob: -10.506292343139648
    5. '1' → logprob: -11.631292343139648
    6. ' 
' → logprob: -12.256292343139648
    7. ':' → logprob: -12.381292343139648
    8. 'R' → logprob: -12.506292343139648
    9. '(' → logprob: -12.756292343139648
    10. 'r' → logprob: -12.756292343139648

Token 342: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1431480050086975
    2. 'i' → logprob: -2.0181479454040527
    3. ' n' → logprob: -9.268148422241211
    4. ' x' → logprob: -9.393148422241211
    5. ' k' → logprob: -9.518148422241211
    6. ' ' → logprob: -9.768148422241211
    7. 'x' → logprob: -9.893148422241211
    8. 'k' → logprob: -10.268148422241211
    9. 'n' → logprob: -10.768148422241211
    10. '	i' → logprob: -11.518148422241211

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20164752006530762
    2. 'in' → logprob: -1.7016475200653076
    3. ' ' → logprob: -8.701647758483887
    4. 'n' → logprob: -9.826647758483887
    5. ',' → logprob: -12.701647758483887
    6. '	in' → logprob: -12.826647758483887
    7. '1' → logprob: -13.451647758483887
    8. ' n' → logprob: -13.576647758483887
    9. 'i' → logprob: -13.951647758483887
    10. '  ' → logprob: -14.326647758483887

Token 344: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05904897302389145
    2. ' R' → logprob: -2.934048891067505
    3. 'range' → logprob: -6.309049129486084
    4. ' range' → logprob: -6.559049129486084
    5. '1' → logprob: -7.434049129486084
    6. '(R' → logprob: -8.809048652648926
    7. ' ' → logprob: -9.059048652648926
    8. '(' → logprob: -10.309048652648926
    9. 'r' → logprob: -11.434048652648926
    10. '   ' → logprob: -12.309048652648926

Token 345: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3676733690081164e-05
    2. '1' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.12502384185791
    4. '(
' → logprob: -16.250022888183594
    5. ' ' → logprob: -19.375022888183594
    6. ',' → logprob: -19.750022888183594
    7. '[' → logprob: -20.000022888183594
    8. '   ' → logprob: -21.500022888183594
    9. '
' → logprob: -21.750022888183594
    10. '{' → logprob: -22.250022888183594

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006313055637292564
    2. '(' → logprob: -7.375631332397461
    3. ' ' → logprob: -12.500631332397461
    4. ')' → logprob: -14.625631332397461
    5. ',' → logprob: -14.875631332397461
    6. '   ' → logprob: -16.37563133239746
    7. ' (' → logprob: -17.12563133239746
    8. '
' → logprob: -17.75063133239746
    9. '	' → logprob: -18.62563133239746
    10. '```' → logprob: -18.87563133239746

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013619766104966402
    2. ',N' → logprob: -9.000136375427246
    3. ' ,' → logprob: -11.500136375427246
    4. ',n' → logprob: -13.500136375427246
    5. ',P' → logprob: -14.000136375427246
    6. ',
' → logprob: -15.750136375427246
    7. '(' → logprob: -16.12513542175293
    8. '(N' → logprob: -17.12513542175293
    9. 'N' → logprob: -17.50013542175293
    10. '1' → logprob: -18.00013542175293

Token 348: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005633997498080134
    2. ' P' → logprob: -7.500563621520996
    3. 'N' → logprob: -11.500563621520996
    4. ')' → logprob: -15.750563621520996
    5. '	P' → logprob: -16.62556266784668
    6. '   ' → logprob: -16.87556266784668
    7. ' ' → logprob: -17.62556266784668
    8. ',' → logprob: -18.12556266784668
    9. ' ' → logprob: -18.12556266784668
    10. ' N' → logprob: -18.50056266784668

Token 349: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00027456742827780545
    2. '):
' → logprob: -8.375274658203125
    3. ')' → logprob: -10.375274658203125
    4. ':' → logprob: -11.625274658203125
    5. ' ):' → logprob: -12.875274658203125
    6. '):
' → logprob: -14.000274658203125
    7. ',' → logprob: -15.500274658203125
    8. '+' → logprob: -16.125274658203125
    9. '}:' → logprob: -17.000274658203125
    10. ']:' → logprob: -17.375274658203125

Token 350: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014585819095373154
    2. 'F' → logprob: -4.889585971832275
    3. ' f' → logprob: -6.264585971832275
    4. 'f' → logprob: -6.264585971832275
    5. ' F' → logprob: -6.764585971832275
    6. '	f' → logprob: -6.764585971832275
    7. '   ' → logprob: -7.639585971832275
    8. '	F' → logprob: -8.764585494995117
    9. '    
' → logprob: -8.889585494995117
    10. '
' → logprob: -10.889585494995117

Token 351: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15706564486026764
    2. 'F' → logprob: -2.2820656299591064
    3. 'f' → logprob: -3.2820656299591064
    4. ' f' → logprob: -5.7820658683776855
    5. ' F' → logprob: -6.5320658683776855
    6. '	f' → logprob: -7.0320658683776855
    7. '   ' → logprob: -9.282065391540527
    8. '	F' → logprob: -9.407065391540527
    9. '    
' → logprob: -9.782065391540527
    10. '```' → logprob: -10.407065391540527

Token 352: ' Comm' (ID: 57464)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.45649775862693787
    2. ' f' → logprob: -1.3314977884292603
    3. 'F' → logprob: -2.5814976692199707
    4. '   ' → logprob: -3.9564976692199707
    5. ' F' → logprob: -5.081497669219971
    6. ' 
' → logprob: -7.456497669219971
    7. '	f' → logprob: -8.456498146057129
    8. '    
' → logprob: -8.456498146057129
    9. ' ' → logprob: -8.706498146057129
    10. '
' → logprob: -8.956498146057129

Token 353: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.227125883102417
    2. 'encé' → logprob: -2.352125883102417
    3. 'ence' → logprob: -2.477125883102417
    4. 'enç' → logprob: -4.977126121520996
    5. 'e' → logprob: -5.352126121520996
    6. 'en' → logprob: -5.977126121520996
    7. 'encent' → logprob: -6.102126121520996
    8. 'encer' → logprob: -6.227126121520996
    9. 'enced' → logprob: -6.602126121520996
    10. 'encement' → logprob: -6.602126121520996

Token 354: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16316980123519897
    2. ' n' → logprob: -3.4131698608398438
    3. ' :' → logprob: -3.7881698608398438
    4. ',' → logprob: -3.7881698608398438
    5. 'n' → logprob: -3.9131698608398438
    6. ')' → logprob: -4.163169860839844
    7. '=' → logprob: -4.288169860839844
    8. '(n' → logprob: -5.038169860839844
    9. '):' → logprob: -5.663169860839844
    10. ' =' → logprob: -5.913169860839844

Token 355: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0997469425201416
    2. 'N' → logprob: -3.0997469425201416
    3. ' n' → logprob: -3.2247469425201416
    4. '1' → logprob: -5.7247467041015625
    5. ')' → logprob: -5.9747467041015625
    6. 'P' → logprob: -6.2247467041015625
    7. ' N' → logprob: -6.5997467041015625
    8. ' P' → logprob: -8.224746704101562
    9. ',' → logprob: -8.474746704101562
    10. ' ' → logprob: -8.849746704101562

Token 356: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28362858295440674
    2. '1' → logprob: -1.5336285829544067
    3. 'N' → logprob: -3.533628463745117
    4. 'P' → logprob: -6.658628463745117
    5. '0' → logprob: -8.408628463745117
    6. '2' → logprob: -8.783628463745117
    7. ' n' → logprob: -8.908628463745117
    8. ' ' → logprob: -9.408628463745117
    9. '(n' → logprob: -10.533628463745117
    10. 'len' → logprob: -10.658628463745117

Token 357: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06161299720406532
    2. ':
' → logprob: -2.936613082885742
    3. '   ' → logprob: -5.811613082885742
    4. ' :' → logprob: -6.061613082885742
    5. ' :
' → logprob: -6.811613082885742
    6. ',' → logprob: -9.061613082885742
    7. 'F' → logprob: -9.686613082885742
    8. ' ' → logprob: -10.311613082885742
    9. 'f' → logprob: -11.186613082885742
    10. '):' → logprob: -11.561613082885742

Token 358: ' va' (ID: 3423)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5737143754959106
    2. 'n' → logprob: -1.6987143754959106
    3. 'P' → logprob: -1.6987143754959106
    4. ' P' → logprob: -3.698714256286621
    5. ' n' → logprob: -3.698714256286621
    6. ' N' → logprob: -4.323714256286621
    7. 's' → logprob: -5.823714256286621
    8. ',' → logprob: -6.448714256286621
    9. ')' → logprob: -6.573714256286621
    10. ' ' → logprob: -8.073714256286621

Token 359: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.09232306480407715
    2. ',' → logprob: -2.842323064804077
    3. 'n' → logprob: -4.467323303222656
    4. ' jusque' → logprob: -4.842323303222656
    5. ' ,' → logprob: -5.717323303222656
    6. 'N' → logprob: -6.217323303222656
    7. ' up' → logprob: -6.967323303222656
    8. ')' → logprob: -6.967323303222656
    9. 'jus' → logprob: -7.092323303222656
    10. ' n' → logprob: -7.217323303222656

Token 360: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.267417311668396
    2. ' (' → logprob: -2.3924174308776855
    3. '(N' → logprob: -2.5174174308776855
    4. '(P' → logprob: -3.6424174308776855
    5. '<|end|>' → logprob: -4.2674174308776855
    6. ' à' → logprob: -4.7674174308776855
    7. ')' → logprob: -5.1424174308776855
    8. ',' → logprob: -6.0174174308776855
    9. 'N' → logprob: -6.7674174308776855
    10. '(
' → logprob: -6.7674174308776855

Token 361: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001745392568409443
    2. ' N' → logprob: -6.501745223999023
    3. 'P' → logprob: -8.626745223999023
    4. 'n' → logprob: -10.501745223999023
    5. ',' → logprob: -10.626745223999023
    6. ')' → logprob: -12.751745223999023
    7. '   ' → logprob: -13.001745223999023
    8. ' P' → logprob: -13.376745223999023
    9. '(N' → logprob: -13.876745223999023
    10. '	N' → logprob: -13.876745223999023

Token 362: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23934414982795715
    2. '+' → logprob: -1.7393441200256348
    3. '):' → logprob: -3.6143441200256348
    4. ' :' → logprob: -5.614344120025635
    5. '+:' → logprob: -6.114344120025635
    6. ',' → logprob: -6.739344120025635
    7. ' +' → logprob: -6.864344120025635
    8. '():' → logprob: -7.364344120025635
    9. '(' → logprob: -7.739344120025635
    10. '(n' → logprob: -8.114344596862793

Token 363: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36476442217826843
    2. ':' → logprob: -1.2397644519805908
    3. ':
' → logprob: -4.239764213562012
    4. 'F' → logprob: -7.239764213562012
    5. ' :' → logprob: -7.864764213562012
    6. ',' → logprob: -8.364764213562012
    7. ' F' → logprob: -8.864764213562012
    8. ' :
' → logprob: -9.114764213562012
    9. '    
' → logprob: -10.489764213562012
    10. ',
' → logprob: -10.989764213562012

Token 364: 'car' (ID: 6830)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0795023441314697
    2. 'n' → logprob: -1.4545023441314697
    3. 'N' → logprob: -1.5795023441314697
    4. ')' → logprob: -1.8295023441314697
    5. '):
' → logprob: -4.204502105712891
    6. 'P' → logprob: -4.329502105712891
    7. ' n' → logprob: -4.454502105712891
    8. ' ):' → logprob: -5.079502105712891
    9. ' N' → logprob: -5.204502105712891
    10. ' )' → logprob: -5.329502105712891

Token 365: ' range' (ID: 3352)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.37528708577156067
    2. 'n' → logprob: -1.8752870559692383
    3. 'P' → logprob: -2.3752870559692383
    4. ' N' → logprob: -3.2502870559692383
    5. ' n' → logprob: -4.500287055969238
    6. ' P' → logprob: -4.750287055969238
    7. ',' → logprob: -5.375287055969238
    8. ')' → logprob: -6.000287055969238
    9. '   ' → logprob: -8.125287055969238
    10. ' ,' → logprob: -9.000287055969238

Token 366: ' s' (ID: 265)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005991012789309025
    2. ',' → logprob: -5.880990982055664
    3. '(P' → logprob: -6.630990982055664
    4. ')' → logprob: -7.005990982055664
    5. '(N' → logprob: -7.505990982055664
    6. '(n' → logprob: -8.505990982055664
    7. '1' → logprob: -9.005990982055664
    8. '(
' → logprob: -10.130990982055664
    9. ',P' → logprob: -11.505990982055664
    10. '),' → logprob: -12.505990982055664

Token 367: ''arr' (ID: 49695)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30864179134368896
    2. 'top' → logprob: -1.433641791343689
    3. '(P' → logprob: -4.1836419105529785
    4. '(N' → logprob: -5.8086419105529785
    5. '(n' → logprob: -6.1836419105529785
    6. '1' → logprob: -6.3086419105529785
    7. 'up' → logprob: -6.6836419105529785
    8. 'tops' → logprob: -7.4336419105529785
    9. '(top' → logprob: -7.5586419105529785
    10. ',' → logprob: -7.6836419105529785

Token 368: 'ête' (ID: 16808)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5613046288490295
    2. 'top' → logprob: -1.4363045692443848
    3. '(' → logprob: -2.4363045692443848
    4. 'art' → logprob: -3.0613045692443848
    5. 'ep' → logprob: -3.3113045692443848
    6. 'e' → logprob: -4.436304569244385
    7. '1' → logprob: -5.811304569244385
    8. 'up' → logprob: -6.686304569244385
    9. '   ' → logprob: -6.686304569244385
    10. '(top' → logprob: -7.186304569244385

Token 369: ' avant' (ID: 13339)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8070179224014282
    2. ')' → logprob: -1.4320179224014282
    3. 'à' → logprob: -1.6820179224014282
    4. ' à' → logprob: -3.1820178031921387
    5. ',' → logprob: -3.3070178031921387
    6. ' au' → logprob: -3.4320178031921387
    7. 'at' → logprob: -4.807017803192139
    8. '),' → logprob: -5.432017803192139
    9. 'avant' → logprob: -6.682017803192139
    10. ' at' → logprob: -7.557017803192139

Token 370: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.026115307584404945
    2. 'N' → logprob: -4.026115417480469
    3. ',' → logprob: -5.401115417480469
    4. ')' → logprob: -6.526115417480469
    5. ' P' → logprob: -6.776115417480469
    6. '),' → logprob: -7.776115417480469
    7. 'n' → logprob: -9.026115417480469
    8. ',P' → logprob: -9.526115417480469
    9. '   ' → logprob: -9.651115417480469
    10. '(P' → logprob: -9.776115417480469

Token 371: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00782711897045374
    2. ')' → logprob: -5.132827281951904
    3. '):
' → logprob: -6.382827281951904
    4. ':' → logprob: -8.757826805114746
    5. ',' → logprob: -10.632826805114746
    6. ' ):' → logprob: -11.257826805114746
    7. 'n' → logprob: -12.007826805114746
    8. '):
' → logprob: -13.132826805114746
    9. '   ' → logprob: -14.257826805114746
    10. '1' → logprob: -14.507826805114746

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037849124521017075
    2. 'F' → logprob: -3.912849187850952
    3. 'f' → logprob: -4.287848949432373
    4. ' f' → logprob: -6.037848949432373
    5. ' F' → logprob: -7.912848949432373
    6. '   ' → logprob: -8.287849426269531
    7. '	f' → logprob: -8.412849426269531
    8. '    
' → logprob: -9.037849426269531
    9. '```' → logprob: -10.912849426269531
    10. '	F' → logprob: -11.537849426269531

Token 373: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05282516032457352
    2. 'F' → logprob: -3.6778252124786377
    3. '   ' → logprob: -4.177824974060059
    4. ' f' → logprob: -4.552824974060059
    5. '	f' → logprob: -8.802824974060059
    6. ' F' → logprob: -9.427824974060059
    7. '    
' → logprob: -9.927824974060059
    8. ' ' → logprob: -12.177824974060059
    9. '    ' → logprob: -12.677824974060059
    10. '```' → logprob: -12.677824974060059

Token 374: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003819332632701844
    2. 'F' → logprob: -8.375381469726562
    3. ' f' → logprob: -9.000381469726562
    4. '   ' → logprob: -10.500381469726562
    5. '	f' → logprob: -15.750381469726562
    6. '```' → logprob: -16.000381469726562
    7. '_f' → logprob: -16.500381469726562
    8. '    
' → logprob: -17.125381469726562
    9. ' F' → logprob: -17.250381469726562
    10. '
' → logprob: -17.250381469726562

Token 375: ' prend' (ID: 37463)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.32103589177131653
    2. '*=' → logprob: -1.5710358619689941
    3. '=' → logprob: -2.821035861968994
    4. ' =' → logprob: -4.946035861968994
    5. '*' → logprob: -9.571036338806152
    6. ' ' → logprob: -10.696036338806152
    7. ' ' → logprob: -11.196036338806152
    8. '=f' → logprob: -12.821036338806152
    9. '	' → logprob: -13.071036338806152
    10. ' *' → logprob: -13.196036338806152

Token 376: ' la' (ID: 557)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5853078365325928
    2. 'f' → logprob: -1.0853078365325928
    3. '*' → logprob: -2.4603078365325928
    4. ' *' → logprob: -4.335308074951172
    5. ' *=' → logprob: -6.335308074951172
    6. ' ' → logprob: -6.460308074951172
    7. '*f' → logprob: -6.710308074951172
    8. '=' → logprob: -7.710308074951172
    9. ' (' → logprob: -7.835308074951172
    10. '   ' → logprob: -7.835308074951172

Token 377: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0418522357940674
    2. 'f' → logprob: -1.1668522357940674
    3. '*' → logprob: -1.6668522357940674
    4. ' f' → logprob: -2.7918522357940674
    5. ' n' → logprob: -3.1668522357940674
    6. ' *' → logprob: -3.9168522357940674
    7. ' (' → logprob: -4.916851997375488
    8. '(n' → logprob: -5.291851997375488
    9. '*n' → logprob: -5.416851997375488
    10. '*f' → logprob: -5.541851997375488

Token 378: ' de' (ID: 334)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2507879436016083
    2. ' f' → logprob: -2.1257879734039307
    3. ' *' → logprob: -3.0007879734039307
    4. '*' → logprob: -3.2507879734039307
    5. '*f' → logprob: -4.375787734985352
    6. ' (' → logprob: -7.000787734985352
    7. '(' → logprob: -8.500787734985352
    8. '(f' → logprob: -8.750787734985352
    9. '   ' → logprob: -10.375787734985352
    10. ' ' → logprob: -10.375787734985352

Token 379: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.020077669993042946
    2. ' f' → logprob: -4.520077705383301
    3. '(f' → logprob: -4.770077705383301
    4. ' (' → logprob: -8.0200777053833
    5. '(' → logprob: -9.0200777053833
    6. '(n' → logprob: -10.0200777053833
    7. '   ' → logprob: -12.1450777053833
    8. 'n' → logprob: -12.6450777053833
    9. ' ' → logprob: -13.0200777053833
    10. '	f' → logprob: -13.6450777053833

Token 380: ' factor' (ID: 12332)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0631542056798935
    2. ' f' → logprob: -2.9381542205810547
    3. 'n' → logprob: -5.688154220581055
    4. '(n' → logprob: -6.188154220581055
    5. '(' → logprob: -6.938154220581055
    6. ' (' → logprob: -7.188154220581055
    7. ' n' → logprob: -7.438154220581055
    8. '(f' → logprob: -7.813154220581055
    9. '*' → logprob: -10.438154220581055
    10. '*f' → logprob: -10.688154220581055

Token 381: 'ielle' (ID: 22380)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5473459362983704
    2. 'ielle' → logprob: -1.1723458766937256
    3. ' *' → logprob: -2.5473458766937256
    4. 'iel' → logprob: -5.172346115112305
    5. 'ie' → logprob: -5.672346115112305
    6. '*n' → logprob: -5.922346115112305
    7. '   ' → logprob: -6.297346115112305
    8. 'i' → logprob: -6.297346115112305
    9. ' ' → logprob: -6.422346115112305
    10. '!' → logprob: -6.422346115112305

Token 382: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.576249361038208
    2. '*' → logprob: -0.826249361038208
    3. '*f' → logprob: -8.701249122619629
    4. ' ' → logprob: -9.576249122619629
    5. ' ' → logprob: -10.701249122619629
    6. ' f' → logprob: -10.701249122619629
    7. '*n' → logprob: -10.826249122619629
    8. '	' → logprob: -13.201249122619629
    9. '   ' → logprob: -13.576249122619629
    10. ',' → logprob: -13.826249122619629

Token 383: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09011160582304001
    2. ' n' → logprob: -2.465111494064331
    3. 'f' → logprob: -7.09011173248291
    4. ' f' → logprob: -8.09011173248291
    5. ' ' → logprob: -10.84011173248291
    6. '   ' → logprob: -12.46511173248291
    7. '	n' → logprob: -12.59011173248291
    8. '
' → logprob: -13.21511173248291
    9. ' ' → logprob: -14.34011173248291
    10. '_n' → logprob: -14.59011173248291

Token 384: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6935649514198303
    2. ' *' → logprob: -0.6935649514198303
    3. '*f' → logprob: -8.318565368652344
    4. ' ' → logprob: -9.693565368652344
    5. ' ' → logprob: -9.818565368652344
    6. '*n' → logprob: -10.943565368652344
    7. ',' → logprob: -11.318565368652344
    8. ' *=' → logprob: -12.068565368652344
    9. '*=' → logprob: -12.443565368652344
    10. ' f' → logprob: -12.693565368652344

Token 385: ' mais' (ID: 2899)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7829055786132812
    2. 'f' → logprob: -1.0329055786132812
    3. '*' → logprob: -1.9079055786132812
    4. ' *' → logprob: -4.657905578613281
    5. ' *=' → logprob: -4.782905578613281
    6. '=' → logprob: -5.157905578613281
    7. '*f' → logprob: -5.407905578613281
    8. '*=' → logprob: -5.907905578613281
    9. ' n' → logprob: -6.032905578613281
    10. 'n' → logprob: -6.407905578613281

Token 386: ' en' (ID: 469)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.14067542552948
    2. ' f' → logprob: -1.51567542552948
    3. '=' → logprob: -2.1406755447387695
    4. 'f' → logprob: -2.1406755447387695
    5. ' *' → logprob: -2.6406755447387695
    6. ' =' → logprob: -3.0156755447387695
    7. '   ' → logprob: -3.8906755447387695
    8. '*f' → logprob: -3.8906755447387695
    9. ' (' → logprob: -4.1406755447387695
    10. ' *=' → logprob: -4.2656755447387695

Token 387: ' utilisant' (ID: 92474)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8652414083480835
    2. '*f' → logprob: -1.3652414083480835
    3. ' f' → logprob: -1.7402414083480835
    4. 'f' → logprob: -2.490241527557373
    5. ' *' → logprob: -3.865241527557373
    6. '(f' → logprob: -3.990241527557373
    7. ' (' → logprob: -4.865241527557373
    8. '(' → logprob: -5.365241527557373
    9. '*n' → logprob: -5.365241527557373
    10. 'n' → logprob: -6.115241527557373

Token 388: ' les' (ID: 1341)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05172160640358925
    2. ' f' → logprob: -3.0517215728759766
    3. '(' → logprob: -7.051721572875977
    4. '(f' → logprob: -7.176721572875977
    5. ' (' → logprob: -7.426721572875977
    6. 'n' → logprob: -7.926721572875977
    7. '   ' → logprob: -8.426721572875977
    8. '(n' → logprob: -8.926721572875977
    9. ' n' → logprob: -9.801721572875977
    10. '*' → logprob: -10.051721572875977

Token 389: ' valeurs' (ID: 73668)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8498358726501465
    2. 'f' → logprob: -0.9748358726501465
    3. 'n' → logprob: -2.3498358726501465
    4. ' n' → logprob: -2.4748358726501465
    5. '*' → logprob: -5.4748358726501465
    6. '%' → logprob: -5.8498358726501465
    7. ' *' → logprob: -6.3498358726501465
    8. ' ' → logprob: -6.5998358726501465
    9. 'F' → logprob: -7.2248358726501465
    10. ' modulo' → logprob: -7.2248358726501465

Token 390: ' précéd' (ID: 55435)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47448936104774475
    2. ' *' → logprob: -1.2244893312454224
    3. 'f' → logprob: -3.224489450454712
    4. '*f' → logprob: -3.974489450454712
    5. ' f' → logprob: -4.099489212036133
    6. '   ' → logprob: -5.724489212036133
    7. ' ' → logprob: -6.224489212036133
    8. ',' → logprob: -6.474489212036133
    9. ' ' → logprob: -7.349489212036133
    10. ' précédent' → logprob: -9.099489212036133

Token 391: 'entes' (ID: 5651)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9453109502792358
    2. '   ' → logprob: -1.5703109502792358
    3. '+' → logprob: -2.3203110694885254
    4. ' *' → logprob: -3.1953110694885254
    5. 'f' → logprob: -3.3203110694885254
    6. '*f' → logprob: -3.3203110694885254
    7. 'ules' → logprob: -3.6953110694885254
    8. 'es' → logprob: -3.6953110694885254
    9. ' f' → logprob: -3.8203110694885254
    10. ' ' → logprob: -4.070311069488525

Token 392: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4452257454395294
    2. ' *' → logprob: -2.070225715637207
    3. '=' → logprob: -2.320225715637207
    4. ' =' → logprob: -2.820225715637207
    5. '*=' → logprob: -3.570225715637207
    6. ' *=' → logprob: -4.070225715637207
    7. '*f' → logprob: -4.070225715637207
    8. '
' → logprob: -5.070225715637207
    9. 'f' → logprob: -6.070225715637207
    10. ' f' → logprob: -6.445225715637207

Token 393: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0552226305007935
    2. 'f' → logprob: -1.8052226305007935
    3. ' *=' → logprob: -2.305222511291504
    4. '=' → logprob: -2.430222511291504
    5. ' f' → logprob: -2.430222511291504
    6. ' =' → logprob: -2.555222511291504
    7. ' *' → logprob: -2.555222511291504
    8. '   ' → logprob: -3.930222511291504
    9. '*=' → logprob: -4.180222511291504
    10. ' 
' → logprob: -4.930222511291504

Token 394: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029809046536684036
    2. ' f' → logprob: -3.52980899810791
    3. '   ' → logprob: -9.90480899810791
    4. 'n' → logprob: -13.40480899810791
    5. '(f' → logprob: -13.65480899810791
    6. '	f' → logprob: -13.77980899810791
    7. ' ' → logprob: -13.90480899810791
    8. '(' → logprob: -13.90480899810791
    9. ' (' → logprob: -14.27980899810791
    10. '*f' → logprob: -14.52980899810791

Token 395: ' Multip' (ID: 52811)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08131997287273407
    2. ' f' → logprob: -2.83132004737854
    3. '   ' → logprob: -4.456319808959961
    4. '=' → logprob: -5.206319808959961
    5. ' =' → logprob: -7.081319808959961
    6. ' *=' → logprob: -7.831319808959961
    7. '*=' → logprob: -8.206319808959961
    8. '*' → logprob: -9.456319808959961
    9. '	f' → logprob: -9.581319808959961
    10. ' ' → logprob: -9.706319808959961

Token 396: 'lication' (ID: 2389)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1484829187393188
    2. ' =' → logprob: -1.2734829187393188
    3. ' *=' → logprob: -1.6484829187393188
    4. ' f' → logprob: -2.2734827995300293
    5. '*' → logprob: -3.6484827995300293
    6. ' ' → logprob: -3.8984827995300293
    7. 'p' → logprob: -4.023482799530029
    8. '   ' → logprob: -4.148482799530029
    9. 'ip' → logprob: -4.523482799530029
    10. '*=' → logprob: -4.898482799530029

Token 397: ' de' (ID: 334)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.7903944253921509
    2. '=' → logprob: -1.4153944253921509
    3. ' *=' → logprob: -2.4153943061828613
    4. '*' → logprob: -2.4153943061828613
    5. 'f' → logprob: -2.7903943061828613
    6. ' f' → logprob: -3.6653943061828613
    7. ' =' → logprob: -4.415394306182861
    8. '*f' → logprob: -4.540394306182861
    9. ' *' → logprob: -5.290394306182861
    10. '(f' → logprob: -5.790394306182861

Token 398: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018218427896499634
    2. ' f' → logprob: -4.018218517303467
    3. '   ' → logprob: -9.893218040466309
    4. 'n' → logprob: -11.643218040466309
    5. '	f' → logprob: -12.643218040466309
    6. ' ' → logprob: -13.393218040466309
    7. '(f' → logprob: -14.018218040466309
    8. 'F' → logprob: -14.268218040466309
    9. ' n' → logprob: -14.268218040466309
    10. '    ' → logprob: -14.643218040466309

Token 399: ' valeur' (ID: 41664)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.049059879034757614
    2. ' f' → logprob: -3.1740598678588867
    3. 'n' → logprob: -5.174059867858887
    4. ' n' → logprob: -8.049059867858887
    5. 'F' → logprob: -10.799059867858887
    6. ' ' → logprob: -11.049059867858887
    7. ' ' → logprob: -11.549059867858887
    8. '*' → logprob: -13.174059867858887
    9. '*f' → logprob: -13.299059867858887
    10. '	f' → logprob: -13.549059867858887

Token 400: ' précédente' (ID: 177319)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.23657362163066864
    2. 'f' → logprob: -1.986573576927185
    3. '*' → logprob: -3.7365736961364746
    4. '=' → logprob: -4.611573696136475
    5. ' *=' → logprob: -4.736573696136475
    6. ' *' → logprob: -4.861573696136475
    7. '*f' → logprob: -5.361573696136475
    8. ' ' → logprob: -5.361573696136475
    9. ' de' → logprob: -5.986573696136475
    10. '*=' → logprob: -6.111573696136475

Token 401: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5391859412193298
    2. 'f' → logprob: -1.4141860008239746
    3. ' f' → logprob: -2.5391860008239746
    4. ' *' → logprob: -2.7891860008239746
    5. '*f' → logprob: -3.5391860008239746
    6. ',' → logprob: -6.414186000823975
    7. '*=' → logprob: -6.789186000823975
    8. ' ' → logprob: -7.414186000823975
    9. ' *=' → logprob: -7.914186000823975
    10. '=' → logprob: -9.164185523986816

Token 402: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3488590121269226
    2. ' n' → logprob: -1.2238590717315674
    3. ' f' → logprob: -8.473858833312988
    4. 'f' → logprob: -8.848858833312988
    5. ' ' → logprob: -10.348858833312988
    6. ' ' → logprob: -10.723858833312988
    7. '	n' → logprob: -12.848858833312988
    8. '   ' → logprob: -13.223858833312988
    9. '_n' → logprob: -14.348858833312988
    10. '(n' → logprob: -14.348858833312988

Token 403: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38983359932899475
    2. ' *' → logprob: -1.1398335695266724
    3. '*f' → logprob: -6.014833450317383
    4. ' f' → logprob: -8.139833450317383
    5. ' *=' → logprob: -10.014833450317383
    6. 'f' → logprob: -10.014833450317383
    7. ' ' → logprob: -10.264833450317383
    8. '
' → logprob: -10.639833450317383
    9. ' ' → logprob: -11.139833450317383
    10. '   ' → logprob: -11.264833450317383

Token 404: ' puis' (ID: 18766)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.60957932472229
    2. ' *' → logprob: -1.60957932472229
    3. ' f' → logprob: -1.98457932472229
    4. 'f' → logprob: -2.60957932472229
    5. '*f' → logprob: -4.359579086303711
    6. ' *=' → logprob: -4.609579086303711
    7. '=' → logprob: -5.109579086303711
    8. ' n' → logprob: -5.734579086303711
    9. 'n' → logprob: -5.984579086303711
    10. ')' → logprob: -5.984579086303711

Token 405: ' réduction' (ID: 89072)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19009743630886078
    2. 'f' → logprob: -2.8150973320007324
    3. ' f' → logprob: -3.1900973320007324
    4. '%' → logprob: -3.3150973320007324
    5. ' %=' → logprob: -4.440097332000732
    6. ' %' → logprob: -4.940097332000732
    7. '%=' → logprob: -5.690097332000732
    8. ' =' → logprob: -6.065097332000732
    9. ' modulo' → logprob: -6.565097332000732
    10. ' (' → logprob: -6.815097332000732

Token 406: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.5140266418457031
    2. '%' → logprob: -1.2640266418457031
    3. ' f' → logprob: -3.014026641845703
    4. ' %' → logprob: -3.264026641845703
    5. 'mod' → logprob: -4.264026641845703
    6. 'f' → logprob: -4.764026641845703
    7. '%n' → logprob: -5.639026641845703
    8. '   ' → logprob: -6.764026641845703
    9. ' ' → logprob: -7.139026641845703
    10. ' ' → logprob: -7.389026641845703

Token 407: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.20145398378372192
    2. ' M' → logprob: -1.7014539241790771
    3. ' ' → logprob: -10.576454162597656
    4. ' ' → logprob: -11.576454162597656
    5. '(M' → logprob: -12.951454162597656
    6. '(' → logprob: -14.076454162597656
    7. '```' → logprob: -14.951454162597656
    8. '   ' → logprob: -15.076454162597656
    9. '	M' → logprob: -15.076454162597656
    10. '`' → logprob: -15.076454162597656

Token 408: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24539709091186523
    2. ' =' → logprob: -1.8703970909118652
    3. 'f' → logprob: -3.3703970909118652
    4. ' f' → logprob: -3.8703970909118652
    5. '*' → logprob: -5.495397090911865
    6. ' *=' → logprob: -6.495397090911865
    7. '*=' → logprob: -7.120397090911865
    8. '   ' → logprob: -7.745397090911865
    9. '=f' → logprob: -8.245397567749023
    10. ' ' → logprob: -8.245397567749023

Token 409: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.48256850242614746
    2. ' f' → logprob: -0.9825685024261475
    3. '   ' → logprob: -4.857568740844727
    4. ' 
' → logprob: -7.732568740844727
    5. '    
' → logprob: -9.357568740844727
    6. '
' → logprob: -9.982568740844727
    7. ' =' → logprob: -10.357568740844727
    8. '	f' → logprob: -10.732568740844727
    9. '=' → logprob: -10.982568740844727
    10. ',' → logprob: -11.357568740844727

Token 410: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.01423907931894064
    2. ' f' → logprob: -4.264239311218262
    3. '   ' → logprob: -9.514239311218262
    4. '	f' → logprob: -14.139239311218262
    5. '
' → logprob: -14.264239311218262
    6. '    
' → logprob: -15.889239311218262
    7. ' ' → logprob: -16.014238357543945
    8. ' 
' → logprob: -16.014238357543945
    9. '(f' → logprob: -17.889238357543945
    10. '_f' → logprob: -18.139238357543945

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03442678600549698
    2. '*=' → logprob: -3.784426689147949
    3. ' =' → logprob: -4.534426689147949
    4. ' *=' → logprob: -7.909426689147949
    5. '*' → logprob: -11.53442668914795
    6. '=f' → logprob: -11.90942668914795
    7. ' ' → logprob: -13.90942668914795
    8. ' ' → logprob: -15.15942668914795
    9. '=(' → logprob: -15.65942668914795
    10. '	' → logprob: -15.78442668914795

Token 412: ' f' (ID: 285)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.025218090042471886
    2. ' (' → logprob: -4.1502180099487305
    3. 'f' → logprob: -4.7752180099487305
    4. ' f' → logprob: -7.6502180099487305
    5. '(' → logprob: -8.40021800994873
    6. '   ' → logprob: -13.27521800994873
    7. '	f' → logprob: -14.02521800994873
    8. ' ' → logprob: -14.02521800994873
    9. ' ' → logprob: -15.27521800994873
    10. '(
' → logprob: -15.77521800994873

Token 413: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10023071616888046
    2. ' *' → logprob: -2.3502306938171387
    3. '*f' → logprob: -10.850231170654297
    4. '*n' → logprob: -12.850231170654297
    5. ' ' → logprob: -13.475231170654297
    6. ' ' → logprob: -14.725231170654297
    7. '**' → logprob: -16.350231170654297
    8. '*(' → logprob: -17.600231170654297
    9. '%' → logprob: -17.725231170654297
    10. '
' → logprob: -17.975231170654297

Token 414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007101670489646494
    2. ' n' → logprob: -7.2507100105285645
    3. '	n' → logprob: -16.375709533691406
    4. '   ' → logprob: -16.500709533691406
    5. '%n' → logprob: -19.750709533691406
    6. ' ' → logprob: -20.375709533691406
    7. '  ' → logprob: -20.875709533691406
    8. '(n' → logprob: -21.375709533691406
    9. '_n' → logprob: -21.500709533691406
    10. '```' → logprob: -21.750709533691406

Token 415: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06197597458958626
    2. '%' → logprob: -2.8119759559631348
    3. ')' → logprob: -12.311976432800293
    4. '%n' → logprob: -13.561976432800293
    5. ' ' → logprob: -14.436976432800293
    6. ' ' → logprob: -14.811976432800293
    7. ' %=' → logprob: -15.061976432800293
    8. '%c' → logprob: -15.436976432800293
    9. ' %
' → logprob: -15.561976432800293
    10. '%m' → logprob: -15.686976432800293

Token 416: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005233882926404476
    2. ' M' → logprob: -5.2552337646484375
    3. '998' → logprob: -16.130233764648438
    4. ' ' → logprob: -16.880233764648438
    5. '	M' → logprob: -19.505233764648438
    6. '(M' → logprob: -20.505233764648438
    7. ' ' → logprob: -21.380233764648438
    8. '```' → logprob: -21.380233764648438
    9. '  ' → logprob: -21.880233764648438
    10. ' 
' → logprob: -22.005233764648438

Token 417: '
' (ID: 198)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.3138390779495239
    2. '   ' → logprob: -1.313839077949524
    3. ' F' → logprob: -7.563838958740234
    4. ' ' → logprob: -11.188838958740234
    5. '  ' → logprob: -11.313838958740234
    6. '    
' → logprob: -11.313838958740234
    7. '
' → logprob: -11.938838958740234
    8. '	F' → logprob: -11.938838958740234
    9. ',' → logprob: -13.063838958740234
    10. '#' → logprob: -13.938838958740234

Token 418: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.2021857351064682
    2. '   ' → logprob: -1.7021857500076294
    3. ' F' → logprob: -7.20218563079834
    4. '	F' → logprob: -11.82718563079834
    5. '    
' → logprob: -11.95218563079834
    6. ' ' → logprob: -12.45218563079834
    7. '  ' → logprob: -12.57718563079834
    8. '
' → logprob: -13.07718563079834
    9. 'f' → logprob: -14.32718563079834
    10. '```' → logprob: -14.32718563079834

Token 419: ' #' (ID: 1069)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.01419159211218357
    2. '   ' → logprob: -4.264191627502441
    3. ' F' → logprob: -10.514191627502441
    4. '	F' → logprob: -14.639191627502441
    5. ' ' → logprob: -15.514191627502441
    6. '    
' → logprob: -15.889191627502441
    7. '  ' → logprob: -16.764190673828125
    8. '
' → logprob: -17.389190673828125
    9. '```' → logprob: -17.889190673828125
    10. '   ' → logprob: -18.139190673828125

Token 420: ' On' (ID: 2160)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -9.088346359931165e-07
    2. ' F' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375
    4. ' ' → logprob: -20.625
    5. '#' → logprob: -22.0
    6. '```' → logprob: -22.25
    7. '  ' → logprob: -22.375
    8. '	F' → logprob: -22.625
    9. 'f' → logprob: -23.0
    10. '       ' → logprob: -24.125

Token 421: ' stock' (ID: 6546)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.7530574849806726e-05
    2. ' F' → logprob: -9.875057220458984
    3. '   ' → logprob: -12.750057220458984
    4. '#' → logprob: -13.125057220458984
    5. 'f' → logprob: -15.500057220458984
    6. '=' → logprob: -15.625057220458984
    7. '    
' → logprob: -15.875057220458984
    8. ' ' → logprob: -16.250057220458984
    9. 's' → logprob: -16.250057220458984
    10. '_F' → logprob: -16.375057220458984

Token 422: 'e' (ID: 68)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.42437490820884705
    2. 'e' → logprob: -1.2993749380111694
    3. ' F' → logprob: -3.29937481880188
    4. '[F' → logprob: -3.79937481880188
    5. '[' → logprob: -5.174375057220459
    6. '   ' → logprob: -5.924375057220459
    7. 'f' → logprob: -6.424375057220459
    8. '[e' → logprob: -6.549375057220459
    9. 'er' → logprob: -6.924375057220459
    10. '[f' → logprob: -7.799375057220459

Token 423: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3174859881401062
    2. 'F' → logprob: -1.317486047744751
    3. ' f' → logprob: -5.567485809326172
    4. ' F' → logprob: -7.942485809326172
    5. '   ' → logprob: -10.317485809326172
    6. '_f' → logprob: -12.942485809326172
    7. ' ' → logprob: -13.692485809326172
    8. '	f' → logprob: -13.692485809326172
    9. '  ' → logprob: -14.692485809326172
    10. '    ' → logprob: -14.942485809326172

Token 424: ' factor' (ID: 12332)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003360582049936056
    2. ' f' → logprob: -8.000335693359375
    3. 'F' → logprob: -14.750335693359375
    4. '	f' → logprob: -15.500335693359375
    5. ' ' → logprob: -18.250335693359375
    6. 'fé' → logprob: -18.375335693359375
    7. '   ' → logprob: -18.875335693359375
    8. '
' → logprob: -18.875335693359375
    9. '_f' → logprob: -19.125335693359375
    10. 'ф' → logprob: -19.250335693359375

Token 425: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.5278867483139038
    2. 'elle' → logprob: -1.7778867483139038
    3. 'e' → logprob: -2.1528868675231934
    4. 'ale' → logprob: -3.2778868675231934
    5. 'nelle' → logprob: -3.5278868675231934
    6. 'al' → logprob: -4.777886867523193
    7. 'alle' → logprob: -5.277886867523193
    8. 'ile' → logprob: -5.277886867523193
    9. '[' → logprob: -5.277886867523193
    10. 'iel' → logprob: -5.277886867523193

Token 426: ' de' (ID: 334)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6028221845626831
    2. '[n' → logprob: -0.8528221845626831
    3. 'f' → logprob: -4.227822303771973
    4. 's' → logprob: -5.227822303771973
    5. '[f' → logprob: -5.977822303771973
    6. '[' → logprob: -6.977822303771973
    7. ' F' → logprob: -7.727822303771973
    8. '   ' → logprob: -7.852822303771973
    9. 'dans' → logprob: -7.977822303771973
    10. ' dans' → logprob: -7.977822303771973

Token 427: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005402250215411186
    2. ' n' → logprob: -5.255402088165283
    3. 'f' → logprob: -8.755402565002441
    4. ' f' → logprob: -12.380402565002441
    5. '	n' → logprob: -12.755402565002441
    6. 'F' → logprob: -13.380402565002441
    7. '[n' → logprob: -13.505402565002441
    8. ' ' → logprob: -14.755402565002441
    9. '   ' → logprob: -15.380402565002441
    10. '
' → logprob: -16.005401611328125

Token 428: ' dans' (ID: 2671)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.15065348148345947
    2. ' dans' → logprob: -2.77565336227417
    3. ' F' → logprob: -3.02565336227417
    4. ' in' → logprob: -4.90065336227417
    5. '[n' → logprob: -4.90065336227417
    6. '   ' → logprob: -5.65065336227417
    7. 'dans' → logprob: -5.65065336227417
    8. '[' → logprob: -5.77565336227417
    9. ',' → logprob: -7.02565336227417
    10. 'f' → logprob: -7.65065336227417

Token 429: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0007100477814674377
    2. ' F' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.250709533691406
    4. ' ' → logprob: -18.375709533691406
    5. '	F' → logprob: -19.250709533691406
    6. ' ' → logprob: -21.000709533691406
    7. 'f' → logprob: -21.250709533691406
    8. '#' → logprob: -21.250709533691406
    9. '
' → logprob: -21.250709533691406
    10. ')' → logprob: -21.875709533691406

Token 430: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.003067910438403487
    2. '[F' → logprob: -6.003067970275879
    3. 'F' → logprob: -7.503067970275879
    4. '[' → logprob: -10.878067970275879
    5. '[f' → logprob: -11.003067970275879
    6. '[N' → logprob: -12.753067970275879
    7. '[i' → logprob: -14.128067970275879
    8. ' F' → logprob: -14.253067970275879
    9. ' [' → logprob: -15.628067970275879
    10. '\[' → logprob: -15.753067970275879

Token 431: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000273136975010857
    2. ']=' → logprob: -8.500272750854492
    3. ' ]' → logprob: -9.625272750854492
    4. ']
' → logprob: -13.250272750854492
    5. 'n' → logprob: -14.250272750854492
    6. '=' → logprob: -15.500272750854492
    7. '   ' → logprob: -15.500272750854492
    8. ']

' → logprob: -15.625272750854492
    9. '[n' → logprob: -16.125272750854492
    10. '],' → logprob: -16.125272750854492

Token 432: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6981889009475708
    2. '   ' → logprob: -0.6981889009475708
    3. ' F' → logprob: -5.323188781738281
    4. '    
' → logprob: -9.948188781738281
    5. '
' → logprob: -10.323188781738281
    6. '	F' → logprob: -10.323188781738281
    7. '[' → logprob: -11.073188781738281
    8. ' ' → logprob: -12.323188781738281
    9. ' =' → logprob: -12.573188781738281
    10. '  ' → logprob: -12.698188781738281

Token 433: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.00026264708139933646
    2. ' F' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.500262260437012
    4. '	F' → logprob: -19.125263214111328
    5. ' ' → logprob: -20.000263214111328
    6. '```' → logprob: -20.125263214111328
    7. '    
' → logprob: -20.500263214111328
    8. '  ' → logprob: -21.125263214111328
    9. '
' → logprob: -21.375263214111328
    10. ' 
' → logprob: -21.750263214111328

Token 434: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. 'n' → logprob: -16.875003814697266
    4. '[f' → logprob: -17.750003814697266
    5. ' [' → logprob: -18.250003814697266
    6. '[N' → logprob: -18.375003814697266
    7. '\[' → logprob: -18.625003814697266
    8. '```' → logprob: -19.125003814697266
    9. '[
' → logprob: -20.750003814697266
    10. '(n' → logprob: -21.125003814697266

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.008129963040119e-06
    2. ']=' → logprob: -12.500003814697266
    3. ' ]' → logprob: -15.500003814697266
    4. '=' → logprob: -18.125003814697266
    5. ']

' → logprob: -20.500003814697266
    6. ']
' → logprob: -20.875003814697266
    7. ')' → logprob: -21.375003814697266
    8. ']=(' → logprob: -22.125003814697266
    9. ']
' → logprob: -22.500003814697266
    10. '],' → logprob: -22.625003814697266

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718925200402737
    2. ' =' → logprob: -5.00671911239624
    3. '=f' → logprob: -12.631718635559082
    4. '.=' → logprob: -16.2567195892334
    5. '＝' → logprob: -17.1317195892334
    6. ')=' → logprob: -17.5067195892334
    7. ']=' → logprob: -17.7567195892334
    8. '=int' → logprob: -17.7567195892334
    9. '=n' → logprob: -18.0067195892334
    10. ')' → logprob: -18.0067195892334

Token 437: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.318681188422488e-05
    2. ' f' → logprob: -11.25001335144043
    3. '	f' → logprob: -16.62501335144043
    4. '   ' → logprob: -19.00001335144043
    5. 'ф' → logprob: -19.62501335144043
    6. '```' → logprob: -19.75001335144043
    7. '_f' → logprob: -19.87501335144043
    8. ' ' → logprob: -20.12501335144043
    9. 'ƒ' → logprob: -20.75001335144043
    10. 'F' → logprob: -20.75001335144043

Token 438: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: '#' (ID: 2)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.29041674733161926
    2. '#' → logprob: -1.9154167175292969
    3. 'for' → logprob: -2.665416717529297
    4. '<|end|>' → logprob: -3.665416717529297
    5. '```' → logprob: -5.415416717529297
    6. '
' → logprob: -6.040416717529297
    7. ')' → logprob: -6.915416717529297
    8. ' for' → logprob: -8.165416717529297
    9. 'f' → logprob: -8.540416717529297
    10. 'F' → logprob: -8.540416717529297

Token 440: ' Calcul' (ID: 57243)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5936840176582336
    2. 'for' → logprob: -1.2186839580535889
    3. 'inv' → logprob: -2.968683958053589
    4. 'f' → logprob: -2.968683958053589
    5. '#' → logprob: -3.718683958053589
    6. 'i' → logprob: -4.593684196472168
    7. 'in' → logprob: -5.843684196472168
    8. 'inverse' → logprob: -5.843684196472168
    9. 'g' → logprob: -6.093684196472168
    10. 'In' → logprob: -6.718684196472168

Token 441: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7651301026344299
    2. 'I' → logprob: -1.1401300430297852
    3. '#' → logprob: -1.6401300430297852
    4. ' de' → logprob: -4.765130043029785
    5. 'd' → logprob: -5.265130043029785
    6. '=' → logprob: -6.265130043029785
    7. 'inverse' → logprob: -6.515130043029785
    8. 'def' → logprob: -7.390130043029785
    9. 'des' → logprob: -7.515130043029785
    10. 'inv' → logprob: -7.890130043029785

Token 442: ' l' (ID: 305)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -4.723352049040841e-06
    2. ' I' → logprob: -12.500004768371582
    3. 'f' → logprob: -14.875004768371582
    4. 'i' → logprob: -15.500004768371582
    5. '(I' → logprob: -15.875004768371582
    6. '#' → logprob: -16.125003814697266
    7. 'def' → logprob: -17.500003814697266
    8. 'F' → logprob: -18.625003814697266
    9. '[I' → logprob: -18.875003814697266
    10. '```' → logprob: -19.125003814697266

Token 443: ''in' (ID: 17942)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.19985251128673553
    2. ''in' → logprob: -2.324852466583252
    3. '#' → logprob: -2.949852466583252
    4. 'in' → logprob: -4.074852466583252
    5. 'a' → logprob: -4.824852466583252
    6. 'I' → logprob: -5.699852466583252
    7. ' inverse' → logprob: -7.574852466583252
    8. 'i' → logprob: -8.07485294342041
    9. '_inverse' → logprob: -8.19985294342041
    10. 'inv' → logprob: -8.32485294342041

Token 444: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.000983743229880929
    2. 'version' → logprob: -7.375983715057373
    3. '[' → logprob: -8.875984191894531
    4. 'v' → logprob: -9.625984191894531
    5. '#' → logprob: -10.500984191894531
    6. 'ver' → logprob: -10.750984191894531
    7. 'vers' → logprob: -11.000984191894531
    8. '```' → logprob: -11.375984191894531
    9. 'inverse' → logprob: -11.375984191894531
    10. 'Verse' → logprob: -11.500984191894531

Token 445: ' modulo' (ID: 112372)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5001531839370728
    2. 'F' → logprob: -1.5001531839370728
    3. 'de' → logprob: -2.875153064727783
    4. 'I' → logprob: -3.375153064727783
    5. 'fact' → logprob: -3.625153064727783
    6. 'factor' → logprob: -4.625153064727783
    7. '_factor' → logprob: -4.875153064727783
    8. 'fac' → logprob: -4.875153064727783
    9. 'inv' → logprob: -5.000153064727783
    10. '_f' → logprob: -5.250153064727783

Token 446: ' M' (ID: 391)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1574760228395462
    2. 'F' → logprob: -2.5324759483337402
    3. 'de' → logprob: -2.7824759483337402
    4. '_f' → logprob: -6.65747594833374
    5. '#' → logprob: -7.15747594833374
    6. 'a' → logprob: -7.28247594833374
    7. 'fact' → logprob: -7.40747594833374
    8. 'factor' → logprob: -8.532476425170898
    9. '(f' → logprob: -9.157476425170898
    10. ' de' → logprob: -9.157476425170898

Token 447: ' de' (ID: 334)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.2842308680992573e-05
    2. 'inv' → logprob: -11.250022888183594
    3. 'f' → logprob: -12.625022888183594
    4. 'i' → logprob: -12.750022888183594
    5. 'def' → logprob: -13.750022888183594
    6. ' I' → logprob: -14.000022888183594
    7. '#' → logprob: -14.625022888183594
    8. 'x' → logprob: -14.625022888183594
    9. 'F' → logprob: -14.750022888183594
    10. ' =' → logprob: -15.875022888183594

Token 448: ' la' (ID: 557)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.20141898095607758
    2. 'f' → logprob: -1.7014189958572388
    3. ' F' → logprob: -13.32641887664795
    4. '(F' → logprob: -13.32641887664795
    5. ' f' → logprob: -13.95141887664795
    6. '(f' → logprob: -14.32641887664795
    7. '```' → logprob: -15.32641887664795
    8. '[F' → logprob: -15.70141887664795
    9. ' ' → logprob: -16.326419830322266
    10. '	f' → logprob: -16.326419830322266

Token 449: ' factor' (ID: 12332)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.42909038066864014
    2. 'F' → logprob: -1.0540903806686401
    3. 'fact' → logprob: -8.30409049987793
    4. 'factor' → logprob: -9.17909049987793
    5. '(f' → logprob: -11.80409049987793
    6. 'M' → logprob: -12.05409049987793
    7. '(F' → logprob: -12.17909049987793
    8. '#' → logprob: -12.67909049987793
    9. 'fac' → logprob: -13.17909049987793
    10. 'fait' → logprob: -13.42909049987793

Token 450: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.02306784875690937
    2. '#' → logprob: -5.273067951202393
    3. 'la' → logprob: -5.523067951202393
    4. 'ale' → logprob: -6.273067951202393
    5. 'aire' → logprob: -6.398067951202393
    6. 'elle' → logprob: -6.648067951202393
    7. 'iel' → logprob: -6.648067951202393
    8. 'fact' → logprob: -6.773067951202393
    9. 'nelle' → logprob: -6.898067951202393
    10. 'celle' → logprob: -7.023067951202393

Token 451: ' de' (ID: 334)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.34158429503440857
    2. 'f' → logprob: -1.716584324836731
    3. 'I' → logprob: -2.2165842056274414
    4. '[I' → logprob: -7.591584205627441
    5. '[F' → logprob: -9.966584205627441
    6. '[f' → logprob: -10.466584205627441
    7. 'of' → logprob: -10.466584205627441
    8. '```' → logprob: -11.216584205627441
    9. '#' → logprob: -11.341584205627441
    10. '[' → logprob: -11.466584205627441

Token 452: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008576238178648055
    2. 'F' → logprob: -7.125857830047607
    3. 'P' → logprob: -10.50085735321045
    4. 'f' → logprob: -10.62585735321045
    5. 'n' → logprob: -14.50085735321045
    6. '(N' → logprob: -14.62585735321045
    7. ' N' → logprob: -15.37585735321045
    8. '[N' → logprob: -15.50085735321045
    9. 'M' → logprob: -17.875858306884766
    10. '#' → logprob: -17.875858306884766

Token 453: '
' (ID: 198)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.5776860184123507e-06
    2. 'i' → logprob: -13.87500286102295
    3. 'f' → logprob: -14.00000286102295
    4. ' I' → logprob: -14.62500286102295
    5. '#' → logprob: -16.250001907348633
    6. 'inv' → logprob: -16.500001907348633
    7. ' =' → logprob: -17.625001907348633
    8. 'F' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '
' → logprob: -18.250001907348633

Token 454: '#' (ID: 2)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -4.60414821645827e-06
    2. 'inv' → logprob: -12.625004768371582
    3. 'i' → logprob: -14.000004768371582
    4. 'def' → logprob: -15.125004768371582
    5. '```' → logprob: -16.000003814697266
    6. ' I' → logprob: -17.250003814697266
    7. 'f' → logprob: -17.875003814697266
    8. 'x' → logprob: -18.000003814697266
    9. '#' → logprob: -18.375003814697266
    10. '`' → logprob: -19.250003814697266

Token 455: ' pow' (ID: 9779)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -9.198043699143454e-05
    2. 'inv' → logprob: -9.500091552734375
    3. 'f' → logprob: -12.000091552734375
    4. 'i' → logprob: -12.375091552734375
    5. 'def' → logprob: -12.500091552734375
    6. 'g' → logprob: -14.375091552734375
    7. 'x' → logprob: -14.750091552734375
    8. '#' → logprob: -15.000091552734375
    9. ' I' → logprob: -15.000091552734375
    10. 'F' → logprob: -15.125091552734375

Token 456: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3716423809528351
    2. '(F' → logprob: -1.3716423511505127
    3. '(' → logprob: -2.8716423511505127
    4. '(
' → logprob: -9.996642112731934
    5. 'f' → logprob: -10.121642112731934
    6. '()' → logprob: -12.371642112731934
    7. 'F' → logprob: -12.746642112731934
    8. '(pow' → logprob: -13.371642112731934
    9. '```' → logprob: -13.746642112731934
    10. 'def' → logprob: -14.246642112731934

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025179923977702856
    2. ',f' → logprob: -6.377518177032471
    3. '(f' → logprob: -7.252518177032471
    4. '(' → logprob: -9.877517700195312
    5. ' ,' → logprob: -10.002517700195312
    6. ')' → logprob: -12.752517700195312
    7. 'f' → logprob: -12.877517700195312
    8. ',n' → logprob: -13.502517700195312
    9. ',F' → logprob: -14.002517700195312
    10. ',
' → logprob: -15.002517700195312

Token 458: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0044190785847604275
    2. '-' → logprob: -6.004418849945068
    3. ' M' → logprob: -6.254418849945068
    4. '-M' → logprob: -11.129419326782227
    5. ' -' → logprob: -12.754419326782227
    6. '	M' → logprob: -14.129419326782227
    7. ' ' → logprob: -14.504419326782227
    8. ')' → logprob: -15.379419326782227
    9. ',M' → logprob: -15.504419326782227
    10. ' ' → logprob: -16.629419326782227

Token 459: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010902655776590109
    2. ' -' → logprob: -9.12510871887207
    3. '−' → logprob: -17.75010871887207
    4. '–' → logprob: -18.00010871887207
    5. ')' → logprob: -19.12510871887207
    6. '```' → logprob: -19.37510871887207
    7. ' ' → logprob: -19.50010871887207
    8. '‑' → logprob: -20.25010871887207
    9. '#' → logprob: -20.25010871887207
    10. '()-' → logprob: -20.50010871887207

Token 460: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.664371848164592e-05
    2. '-' → logprob: -11.125016212463379
    3. ' -' → logprob: -14.750016212463379
    4. '```' → logprob: -14.750016212463379
    5. '
' → logprob: -15.000016212463379
    6. '

' → logprob: -15.187516212463379
    7. ' ' → logprob: -15.875016212463379
    8. '' → logprob: -17.312517166137695
    9. '...' → logprob: -17.375017166137695
    10. '۲' → logprob: -17.750017166137695

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04884418845176697
    2. ')' → logprob: -3.0488440990448
    3. ' ,' → logprob: -8.298844337463379
    4. ' )' → logprob: -12.548844337463379
    5. ' ' → logprob: -13.923844337463379
    6. ',M' → logprob: -14.173844337463379
    7. '}' → logprob: -14.423844337463379
    8. '```' → logprob: -14.798844337463379
    9. '(' → logprob: -15.298844337463379
    10. '),' → logprob: -15.423844337463379

Token 462: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0001249925117008388
    2. ' M' → logprob: -9.00012493133545
    3. ')' → logprob: -13.37512493133545
    4. '	M' → logprob: -18.250125885009766
    5. ' ' → logprob: -18.500125885009766
    6. '   ' → logprob: -19.125125885009766
    7. ' ' → logprob: -19.250125885009766
    8. '```' → logprob: -20.125125885009766
    9. 'f' → logprob: -20.625125885009766
    10. '998' → logprob: -21.000125885009766

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.875003814697266
    3. ',' → logprob: -13.875003814697266
    4. '),' → logprob: -15.375003814697266
    5. ')
' → logprob: -16.250003814697266
    6. '))' → logprob: -17.125003814697266
    7. '}' → logprob: -18.000003814697266
    8. ')}' → logprob: -18.250003814697266
    9. ',)' → logprob: -18.375003814697266
    10. ')#' → logprob: -18.375003814697266

Token 464: ' utilise' (ID: 70283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06049087271094322
    2. 'I' → logprob: -3.185490846633911
    3. 'f' → logprob: -4.43549108505249
    4. ',' → logprob: -6.18549108505249
    5. 'F' → logprob: -6.18549108505249
    6. '=' → logprob: -8.185490608215332
    7. '#' → logprob: -8.310490608215332
    8. 'z' → logprob: -8.560490608215332
    9. '(' → logprob: -9.435490608215332
    10. '(I' → logprob: -9.685490608215332

Token 465: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.020605655387043953
    2. 'mod' → logprob: -4.020605564117432
    3. 'module' → logprob: -7.895605564117432
    4. 'fonction' → logprob: -8.52060604095459
    5. '3' → logprob: -8.77060604095459
    6. ' modular' → logprob: -8.77060604095459
    7. 'M' → logprob: -8.77060604095459
    8. 'pu' → logprob: -9.02060604095459
    9. '(pow' → logprob: -9.27060604095459
    10. ' pow' → logprob: -9.39560604095459

Token 467: ' thé' (ID: 34740)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2395232915878296
    2. 'pow' → logprob: -1.3645232915878296
    3. ')' → logprob: -2.114523410797119
    4. ' prince' → logprob: -2.864523410797119
    5. '^' → logprob: -3.114523410797119
    6. '_pow' → logprob: -3.614523410797119
    7. 'ex' → logprob: -3.989523410797119
    8. ' exponent' → logprob: -4.364523410797119
    9. 'a' → logprob: -4.364523410797119
    10. 'pr' → logprob: -4.489523410797119

Token 468: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.007180383428931236
    2. 'ore' → logprob: -5.132180213928223
    3. 'orem' → logprob: -7.257180213928223
    4. 'ор' → logprob: -8.507180213928223
    5. 'orique' → logprob: -9.257180213928223
    6. '#' → logprob: -9.382180213928223
    7. '```' → logprob: -9.507180213928223
    8. 're' → logprob: -10.132180213928223
    9. 'orme' → logprob: -11.507180213928223
    10. 'o' → logprob: -12.007180213928223

Token 469: 'ème' (ID: 9767)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5156834721565247
    2. 'me' → logprob: -1.5156834125518799
    3. 'ème' → logprob: -1.7656834125518799
    4. 'ore' → logprob: -5.515683650970459
    5. '```' → logprob: -6.265683650970459
    6. '#' → logprob: -6.390683650970459
    7. 'orem' → logprob: -6.390683650970459
    8. 'reme' → logprob: -7.265683650970459
    9. '`' → logprob: -7.765683650970459
    10. 're' → logprob: -7.890683650970459

Token 470: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9687635898590088
    2. ' de' → logprob: -1.2187635898590088
    3. 'fer' → logprob: -1.4687635898590088
    4. 'f' → logprob: -2.718763589859009
    5. 'ferm' → logprob: -4.84376335144043
    6. '```' → logprob: -5.34376335144043
    7. ' ferm' → logprob: -5.71876335144043
    8. '   ' → logprob: -5.71876335144043
    9. ' Ferm' → logprob: -6.71876335144043
    10. 'F' → logprob: -6.84376335144043

Token 471: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.1689596148207784e-05
    2. ' Ferm' → logprob: -10.500051498413086
    3. 'ferm' → logprob: -11.750051498413086
    4. 'fer' → logprob: -12.750051498413086
    5. 'f' → logprob: -13.000051498413086
    6. '#' → logprob: -13.500051498413086
    7. 'Fer' → logprob: -13.500051498413086
    8. '_f' → logprob: -13.750051498413086
    9. '_F' → logprob: -13.875051498413086
    10. 'Euler' → logprob: -14.000051498413086

Token 472: 'at' (ID: 266)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.31754615902900696
    2. 'or' → logprob: -1.6925461292266846
    3. 'orem' → logprob: -3.5675461292266846
    4. '#' → logprob: -3.9425461292266846
    5. '```' → logprob: -4.567546367645264
    6. 'ore' → logprob: -5.317546367645264
    7. 'pr' → logprob: -5.692546367645264
    8. 'o' → logprob: -6.067546367645264
    9. 'm' → logprob: -6.317546367645264
    10. 'ro' → logprob: -6.567546367645264

Token 473: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23967550694942474
    2. ',' → logprob: -1.739675521850586
    3. 'f' → logprob: -3.364675521850586
    4. ',f' → logprob: -7.239675521850586
    5. '(f' → logprob: -7.364675521850586
    6. '),' → logprob: -7.614675521850586
    7. ' ,' → logprob: -7.989675521850586
    8. ' f' → logprob: -8.614675521850586
    9. '   ' → logprob: -8.739675521850586
    10. 'F' → logprob: -9.239675521850586

Token 474: ' obtenir' (ID: 54423)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.221339613199234
    2. ' calcul' → logprob: -1.7213395833969116
    3. 'cal' → logprob: -4.596339702606201
    4. ' obtenir' → logprob: -5.971339702606201
    5. 'ob' → logprob: -6.721339702606201
    6. 'in' → logprob: -7.096339702606201
    7. 'inverse' → logprob: -7.221339702606201
    8. 'calc' → logprob: -7.221339702606201
    9. '<|end|>' → logprob: -7.596339702606201
    10. ' effectuer' → logprob: -7.846339702606201

Token 475: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010370135307312012
    2. 'f' → logprob: -4.635370254516602
    3. ' l' → logprob: -7.635370254516602
    4. '<|end|>' → logprob: -9.760370254516602
    5. 'inverse' → logprob: -10.635370254516602
    6. 'pow' → logprob: -10.885370254516602
    7. ')' → logprob: -12.135370254516602
    8. '```' → logprob: -12.635370254516602
    9. 'une' → logprob: -13.135370254516602
    10. ' f' → logprob: -13.385370254516602

Token 476: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.17997993528842926
    2. 'inverse' → logprob: -2.0549800395965576
    3. ' inverse' → logprob: -3.5549800395965576
    4. ''' → logprob: -5.8049798011779785
    5. '_inverse' → logprob: -6.3049798011779785
    6. '')' → logprob: -6.8049798011779785
    7. 'in' → logprob: -7.8049798011779785
    8. ''ex' → logprob: -8.179980278015137
    9. 'a' → logprob: -8.179980278015137
    10. ')' → logprob: -8.554980278015137

Token 477: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -2.927930654550437e-05
    2. 'inverse' → logprob: -10.875029563903809
    3. '```' → logprob: -12.625029563903809
    4. 'v' → logprob: -12.875029563903809
    5. 'vers' → logprob: -13.250029563903809
    6. 'version' → logprob: -13.500029563903809
    7. 'VERSE' → logprob: -14.625029563903809
    8. '#' → logprob: -15.625029563903809
    9. 'ver' → logprob: -16.250028610229492
    10. 'f' → logprob: -16.250028610229492

Token 478: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3486979901790619
    2. 'f' → logprob: -1.9736980199813843
    3. '(f' → logprob: -2.0986979007720947
    4. ')' → logprob: -3.4736979007720947
    5. 'F' → logprob: -7.473698139190674
    6. '(
' → logprob: -7.723698139190674
    7. ',' → logprob: -7.723698139190674
    8. '(F' → logprob: -9.723697662353516
    9. '_f' → logprob: -10.348697662353516
    10. '#' → logprob: -10.473697662353516

Token 479: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.004696090007201e-05
    2. 'F' → logprob: -9.625069618225098
    3. ' f' → logprob: -12.625069618225098
    4. '(f' → logprob: -15.250069618225098
    5. 'factor' → logprob: -15.500069618225098
    6. '	f' → logprob: -16.375070571899414
    7. '_f' → logprob: -16.875070571899414
    8. '<|end|>' → logprob: -17.250070571899414
    9. '```' → logprob: -17.500070571899414
    10. 'fa' → logprob: -17.750070571899414

Token 480: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2778910994529724
    2. 'I' → logprob: -2.152891159057617
    3. 'f' → logprob: -2.527891159057617
    4. ',' → logprob: -3.902891159057617
    5. '=' → logprob: -4.277891159057617
    6. 'F' → logprob: -5.652891159057617
    7. 'z' → logprob: -5.902891159057617
    8. '(I' → logprob: -6.527891159057617
    9. '(' → logprob: -6.652891159057617
    10. '#' → logprob: -6.902891159057617

Token 481: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014165159314870834
    2. ' M' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.014164924621582
    4. ' ' → logprob: -14.639164924621582
    5. '(M' → logprob: -15.764164924621582
    6. '`' → logprob: -16.5141658782959
    7. '	M' → logprob: -16.6391658782959
    8. '```' → logprob: -17.6391658782959
    9. '   ' → logprob: -18.0141658782959
    10. ' ' → logprob: -18.2641658782959

Token 482: '
' (ID: 198)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.000264315924141556
    2. 'f' → logprob: -8.750264167785645
    3. 'i' → logprob: -9.500264167785645
    4. 'F' → logprob: -11.750264167785645
    5. 'inverse' → logprob: -12.375264167785645
    6. '=' → logprob: -12.500264167785645
    7. 'inv' → logprob: -12.500264167785645
    8. '```' → logprob: -12.875264167785645
    9. ' I' → logprob: -13.500264167785645
    10. 'Ii' → logprob: -13.750264167785645

Token 483: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0001261845463886857
    2. 'i' → logprob: -9.750125885009766
    3. 'inv' → logprob: -10.125125885009766
    4. 'f' → logprob: -11.250125885009766
    5. ' I' → logprob: -12.250125885009766
    6. 'r' → logprob: -13.375125885009766
    7. 'g' → logprob: -13.500125885009766
    8. 'x' → logprob: -13.500125885009766
    9. 'F' → logprob: -13.750125885009766
    10. 'Ii' → logprob: -14.000125885009766

Token 484: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.13043005764484406
    2. '=' → logprob: -2.755429983139038
    3. '[' → logprob: -3.130429983139038
    4. '[n' → logprob: -5.005430221557617
    5. '[P' → logprob: -5.130430221557617
    6. '[-' → logprob: -6.505430221557617
    7. ' =' → logprob: -7.880430221557617
    8. '=[' → logprob: -8.255430221557617
    9. 'N' → logprob: -9.880430221557617
    10. '[I' → logprob: -10.130430221557617

Token 485: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5570885807392187e-05
    2. ']=' → logprob: -11.375015258789062
    3. ')' → logprob: -12.750015258789062
    4. ' ]' → logprob: -14.500015258789062
    5. '])' → logprob: -15.000015258789062
    6. '=' → logprob: -16.250015258789062
    7. '],' → logprob: -16.500015258789062
    8. ']
' → logprob: -16.875015258789062
    9. ')]' → logprob: -17.875015258789062
    10. ']

' → logprob: -18.000015258789062

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=f' → logprob: -17.755233764648438
    4. '.=' → logprob: -18.255233764648438
    5. '＝' → logprob: -18.255233764648438
    6. '=}' → logprob: -18.755233764648438
    7. '=

' → logprob: -18.755233764648438
    8. ',' → logprob: -19.380233764648438
    9. '=int' → logprob: -19.630233764648438
    10. 'pow' → logprob: -19.880233764648438

Token 487: ' i' (ID: 575)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.339278580620885e-06
    2. ' pow' → logprob: -13.000001907348633
    3. '(pow' → logprob: -19.250001907348633
    4. '_pow' → logprob: -21.250001907348633
    5. 'Pow' → logprob: -22.500001907348633
    6. '.pow' → logprob: -22.500001907348633
    7. 'power' → logprob: -23.250001907348633
    8. 'po' → logprob: -25.000001907348633
    9. 'pot' → logprob: -25.375001907348633
    10. '   ' → logprob: -26.000001907348633

Token 488: ' =' (ID: 314)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03811493143439293
    2. 'nv' → logprob: -3.7881150245666504
    3. 'n' → logprob: -5.28811502456665
    4. 'nf' → logprob: -5.41311502456665
    5. 'nt' → logprob: -5.66311502456665
    6. 'nw' → logprob: -7.53811502456665
    7. 'np' → logprob: -8.413114547729492
    8. '1' → logprob: -8.538114547729492
    9. 'Pow' → logprob: -8.538114547729492
    10. '=' → logprob: -8.788114547729492

Token 489: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.1472419600977446e-06
    2. ' pow' → logprob: -13.750000953674316
    3. '(pow' → logprob: -18.875001907348633
    4. '_pow' → logprob: -20.625001907348633
    5. '.pow' → logprob: -21.625001907348633
    6. 'power' → logprob: -21.750001907348633
    7. 'Pow' → logprob: -22.000001907348633
    8. '   ' → logprob: -22.500001907348633
    9. 'po' → logprob: -23.750001907348633
    10. 'pot' → logprob: -24.125001907348633

Token 490: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0007762773893773556
    2. '(' → logprob: -7.250776290893555
    3. 'f' → logprob: -9.625776290893555
    4. '(
' → logprob: -15.000776290893555
    5. '(F' → logprob: -17.000776290893555
    6. ' f' → logprob: -18.750776290893555
    7. '	f' → logprob: -18.875776290893555
    8. ' (' → logprob: -19.000776290893555
    9. '(fi' → logprob: -19.750776290893555
    10. '(
' → logprob: -19.875776290893555

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011828463757410645
    2. ',M' → logprob: -6.751183032989502
    3. ' ,' → logprob: -11.376182556152344
    4. '(M' → logprob: -14.501182556152344
    5. ',
' → logprob: -15.376182556152344
    6. '(' → logprob: -15.376182556152344
    7. 'M' → logprob: -16.001182556152344
    8. ',m' → logprob: -16.751182556152344
    9. ' ' → logprob: -17.376182556152344
    10. ',N' → logprob: -17.501182556152344

Token 492: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008203497272916138
    2. '998' → logprob: -7.250820159912109
    3. ' M' → logprob: -9.12582015991211
    4. '997' → logprob: -14.37582015991211
    5. ' ' → logprob: -14.75082015991211
    6. '(M' → logprob: -14.87582015991211
    7. '	M' → logprob: -16.25082015991211
    8. '<M' → logprob: -16.37582015991211
    9. '[M' → logprob: -16.62582015991211
    10. '(' → logprob: -18.12582015991211

Token 493: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010914575977949426
    2. ' -' → logprob: -9.12510871887207
    3. '-M' → logprob: -16.37510871887207
    4. '2' → logprob: -18.00010871887207
    5. ')' → logprob: -18.12510871887207
    6. ' ' → logprob: -18.25010871887207
    7. '−' → logprob: -18.37510871887207
    8. 'M' → logprob: -18.75010871887207
    9. ''-' → logprob: -19.00010871887207
    10. '(M' → logprob: -19.00010871887207

Token 494: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -16.937501907348633
    4. '۲' → logprob: -18.000001907348633
    5. '-' → logprob: -18.437501907348633
    6. '   ' → logprob: -18.750001907348633
    7. '２' → logprob: -19.125001907348633
    8. '  ' → logprob: -19.125001907348633
    9. '২' → logprob: -19.437501907348633
    10. '
' → logprob: -19.562501907348633

Token 495: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '-' → logprob: -17.4375
    4. '۲' → logprob: -17.5
    5. '```' → logprob: -17.6875
    6. '

' → logprob: -18.125
    7. '' → logprob: -18.25
    8. '٢' → logprob: -18.375
    9. '２' → logprob: -18.5625
    10. '3' → logprob: -18.6875

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ' ,' → logprob: -11.000022888183594
    3. ',M' → logprob: -12.125022888183594
    4. ')' → logprob: -14.375022888183594
    5. ',
' → logprob: -14.750022888183594
    6. '```' → logprob: -17.500022888183594
    7. '‌,' → logprob: -18.000022888183594
    8. '`,' → logprob: -18.125022888183594
    9. '),' → logprob: -18.125022888183594
    10. 'M' → logprob: -18.375022888183594

Token 497: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005233763717114925
    2. ' M' → logprob: -5.2552337646484375
    3. ')' → logprob: -18.880233764648438
    4. ' ' → logprob: -19.880233764648438
    5. '	M' → logprob: -20.880233764648438
    6. '```' → logprob: -22.255233764648438
    7. ' ' → logprob: -22.505233764648438
    8. '998' → logprob: -22.630233764648438
    9. '   ' → logprob: -23.130233764648438
    10. '(M' → logprob: -23.880233764648438

Token 498: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ',' → logprob: -12.00001049041748
    3. ' )' → logprob: -12.62501049041748
    4. ')
' → logprob: -14.50001049041748
    5. '),' → logprob: -16.375009536743164
    6. '}' → logprob: -17.250009536743164
    7. ')#' → logprob: -17.250009536743164
    8. ')`' → logprob: -17.500009536743164
    9. ')

' → logprob: -17.875009536743164
    10. ',)' → logprob: -18.000009536743164

Token 499: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003178071230649948
    2. 'n' → logprob: -6.378178119659424
    3. ' for' → logprob: -6.753178119659424
    4. '```' → logprob: -8.628177642822266
    5. '<|end|>' → logprob: -9.378177642822266
    6. ')' → logprob: -11.753177642822266
    7. '
' → logprob: -11.753177642822266
    8. '#' → logprob: -12.128177642822266
    9. 'i' → logprob: -12.378177642822266
    10. 'N' → logprob: -12.628177642822266

Token 500: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -16.875
    3. '#' → logprob: -18.375
    4. 'n' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '
' → logprob: -20.0
    7. '	for' → logprob: -21.5
    8. 'i' → logprob: -22.25
    9. '﻿' → logprob: -22.875
    10. '   ' → logprob: -23.125

Token 501: 'ième' (ID: 41126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026126401498913765
    2. ' for' → logprob: -6.002612590789795
    3. '#' → logprob: -9.002613067626953
    4. 'ième' → logprob: -12.502613067626953
    5. '```' → logprob: -12.752613067626953
    6. 'or' → logprob: -14.002613067626953
    7. '_for' → logprob: -14.252613067626953
    8. '.for' → logprob: -14.502613067626953
    9. 's' → logprob: -14.627613067626953
    10. '
' → logprob: -14.627613067626953

Token 502: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008501286501996219
    2. ' for' → logprob: -7.250850200653076
    3. '#' → logprob: -10.250849723815918
    4. ' boucle' → logprob: -10.375849723815918
    5. 'loop' → logprob: -10.500849723815918
    6. 'range' → logprob: -11.125849723815918
    7. 's' → logprob: -11.375849723815918
    8. '```' → logprob: -12.625849723815918
    9. 'n' → logprob: -13.000849723815918
    10. ' loop' → logprob: -13.000849723815918

Token 503: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006280870293267071
    2. ' for' → logprob: -7.3756279945373535
    3. 'n' → logprob: -14.000628471374512
    4. '
' → logprob: -14.500628471374512
    5. '#' → logprob: -16.250627517700195
    6. '```' → logprob: -17.125627517700195
    7. '	for' → logprob: -17.375627517700195
    8. '<|end|>' → logprob: -18.250627517700195
    9. ')' → logprob: -18.375627517700195
    10. 'from' → logprob: -18.625627517700195

Token 504: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.375
    3. 'n' → logprob: -20.875
    4. 'from' → logprob: -23.0
    5. '
' → logprob: -23.5
    6. '#' → logprob: -23.625
    7. '```' → logprob: -23.75
    8. '﻿' → logprob: -25.875
    9. '	for' → logprob: -25.875
    10. '   ' → logprob: -27.0

Token 505: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002467966405674815
    2. ' for' → logprob: -8.37524700164795
    3. 'n' → logprob: -11.75024700164795
    4. '#' → logprob: -12.87524700164795
    5. 'de' → logprob: -13.12524700164795
    6. 'from' → logprob: -13.75024700164795
    7. 'pour' → logprob: -14.37524700164795
    8. 's' → logprob: -14.75024700164795
    9. 'd' → logprob: -15.12524700164795
    10. ')' → logprob: -15.37524700164795

Token 506: ' invers' (ID: 38721)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009256129153072834
    2. 'for' → logprob: -4.759256362915039
    3. 'i' → logprob: -7.759256362915039
    4. ' n' → logprob: -8.884256362915039
    5. ' for' → logprob: -11.134256362915039
    6. 'r' → logprob: -11.134256362915039
    7. '(n' → logprob: -11.509256362915039
    8. 'k' → logprob: -11.634256362915039
    9. '```' → logprob: -12.134256362915039
    10. 'm' → logprob: -12.634256362915039

Token 507: 'es' (ID: 268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007052087690681219
    2. 'range' → logprob: -6.507051944732666
    3. 'de' → logprob: -6.882051944732666
    4. '#' → logprob: -7.007051944732666
    5. 'x' → logprob: -7.007051944732666
    6. '
' → logprob: -7.382051944732666
    7. 'verse' → logprob: -7.382051944732666
    8. 'vers' → logprob: -7.757051944732666
    9. ' for' → logprob: -8.132052421569824
    10. 'e' → logprob: -9.757052421569824

Token 508: ' modulo' (ID: 112372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002908910100813955
    2. 'pour' → logprob: -8.375290870666504
    3. 'n' → logprob: -10.625290870666504
    4. ' for' → logprob: -10.875290870666504
    5. 'de' → logprob: -11.250290870666504
    6. ' pour' → logprob: -14.250290870666504
    7. '```' → logprob: -14.625290870666504
    8. '	for' → logprob: -14.750290870666504
    9. 'mod' → logprob: -15.000290870666504
    10. '(n' → logprob: -15.000290870666504

Token 509: ' M' (ID: 391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14273571968078613
    2. 'n' → logprob: -2.642735719680786
    3. 'range' → logprob: -2.892735719680786
    4. '(n' → logprob: -5.642735481262207
    5. 'R' → logprob: -7.142735481262207
    6. ' for' → logprob: -7.642735481262207
    7. ')' → logprob: -7.642735481262207
    8. '(range' → logprob: -8.517735481262207
    9. 'N' → logprob: -8.892735481262207
    10. 'P' → logprob: -9.267735481262207

Token 510: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -13.875000953674316
    3. 'pour' → logprob: -17.250001907348633
    4. '```' → logprob: -19.000001907348633
    5. 'n' → logprob: -19.750001907348633
    6. '
' → logprob: -20.000001907348633
    7. 'from' → logprob: -20.750001907348633
    8. '#' → logprob: -21.000001907348633
    9. '﻿' → logprob: -21.375001907348633
    10. 'de' → logprob: -21.375001907348633

Token 511: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2835965156555176
    2. 'R' → logprob: -1.4085965156555176
    3. ' range' → logprob: -6.408596515655518
    4. 'r' → logprob: -8.15859603881836
    5. 'n' → logprob: -8.28359603881836
    6. 're' → logprob: -9.78359603881836
    7. 'rang' → logprob: -10.03359603881836
    8. 'reverse' → logprob: -10.28359603881836
    9. ' reversed' → logprob: -10.28359603881836
    10. 'for' → logprob: -10.65859603881836

Token 512: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.057692062109708786
    2. 'range' → logprob: -2.932692050933838
    3. '(n' → logprob: -6.307692050933838
    4. 'R' → logprob: -8.557692527770996
    5. ' range' → logprob: -8.682692527770996
    6. ' n' → logprob: -8.932692527770996
    7. 'k' → logprob: -9.432692527770996
    8. '(range' → logprob: -9.557692527770996
    9. 'for' → logprob: -9.932692527770996
    10. 'r' → logprob: -9.932692527770996

Token 513: ' fact' (ID: 2840)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0234440416097641
    2. 'n' → logprob: -4.398444175720215
    3. 'R' → logprob: -5.273444175720215
    4. 'for' → logprob: -5.398444175720215
    5. 'r' → logprob: -7.648444175720215
    6. ' range' → logprob: -7.648444175720215
    7. 'rang' → logprob: -9.273444175720215
    8. '(range' → logprob: -10.148444175720215
    9. 'ré' → logprob: -10.773444175720215
    10. 'reverse' → logprob: -11.148444175720215

Token 514: 'ori' (ID: 6510)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.06035082787275314
    2. 'orial' → logprob: -3.4353508949279785
    3. 'or' → logprob: -4.5603508949279785
    4. 'atorial' → logprob: -5.8103508949279785
    5. 'ior' → logprob: -6.5603508949279785
    6. '(N' → logprob: -6.8103508949279785
    7. 'ctor' → logprob: -7.0603508949279785
    8. '[::-' → logprob: -7.0603508949279785
    9. 'aktor' → logprob: -7.1853508949279785
    10. 'I' → logprob: -7.1853508949279785

Token 515: 'elles' (ID: 8500)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.5592322945594788
    2. 'n' → logprob: -2.059232234954834
    3. 'els' → logprob: -2.184232234954834
    4. 'a' → logprob: -3.184232234954834
    5. 'al' → logprob: -4.059232234954834
    6. 'ables' → logprob: -4.059232234954834
    7. 'ères' → logprob: -4.184232234954834
    8. '#' → logprob: -4.434232234954834
    9. 't' → logprob: -4.559232234954834
    10. 'elles' → logprob: -4.934232234954834

Token 516: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. ' for' → logprob: -15.875000953674316
    4. 'n' → logprob: -16.375
    5. '
' → logprob: -16.875
    6. '#' → logprob: -18.875
    7. 'from' → logprob: -20.375
    8. '﻿' → logprob: -20.375
    9. '	for' → logprob: -20.5
    10. '``' → logprob: -20.875

Token 517: 'de' (ID: 613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5238886475563049
    2. 'n' → logprob: -0.8988886475563049
    3. 'i' → logprob: -8.52388858795166
    4. ')' → logprob: -9.02388858795166
    5. ' for' → logprob: -9.27388858795166
    6. '```' → logprob: -9.39888858795166
    7. 'N' → logprob: -9.89888858795166
    8. 'P' → logprob: -10.02388858795166
    9. '(n' → logprob: -10.52388858795166
    10. 'R' → logprob: -10.52388858795166

Token 518: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018159428611397743
    2. 'n' → logprob: -4.01815938949585
    3. 'k' → logprob: -12.768159866333008
    4. 'P' → logprob: -12.893159866333008
    5. 'x' → logprob: -13.768159866333008
    6. 'range' → logprob: -13.893159866333008
    7. 'i' → logprob: -14.143159866333008
    8. 'R' → logprob: -14.893159866333008
    9. '```' → logprob: -15.018159866333008
    10. 'j' → logprob: -15.268159866333008

Token 519: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015259294304996729
    2. ' -' → logprob: -6.87652587890625
    3. ',' → logprob: -7.62652587890625
    4. '
' → logprob: -13.50152587890625
    5. 'N' → logprob: -13.75152587890625
    6. ' ,' → logprob: -14.37652587890625
    7. '```' → logprob: -14.62652587890625
    8. 'P' → logprob: -14.87652587890625
    9. ')' → logprob: -15.12652587890625
    10. ' ' → logprob: -15.25152587890625

Token 520: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001976811094209552
    2. '0' → logprob: -6.50197696685791
    3. '1' → logprob: -7.75197696685791
    4. ' N' → logprob: -10.62697696685791
    5. 'n' → logprob: -11.75197696685791
    6. '```' → logprob: -12.62697696685791
    7. '-' → logprob: -13.00197696685791
    8. '
' → logprob: -13.00197696685791
    9. '(N' → logprob: -13.25197696685791
    10. 'P' → logprob: -13.75197696685791

Token 521: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10097894817590714
    2. '0' → logprob: -2.9759788513183594
    3. '1' → logprob: -3.1009788513183594
    4. ' N' → logprob: -11.35097885131836
    5. '(N' → logprob: -11.85097885131836
    6. '
' → logprob: -11.97597885131836
    7. '-' → logprob: -11.97597885131836
    8. '```' → logprob: -12.10097885131836
    9. 'P' → logprob: -12.85097885131836
    10. ' ' → logprob: -13.60097885131836

Token 522: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010192327899858356
    2. 'for' → logprob: -7.25101900100708
    3. '[::-' → logprob: -9.876019477844238
    4. ',-' → logprob: -10.001019477844238
    5. ' ,' → logprob: -10.126019477844238
    6. '):' → logprob: -10.251019477844238
    7. '0' → logprob: -10.376019477844238
    8. ':' → logprob: -10.376019477844238
    9. 'n' → logprob: -10.751019477844238
    10. '   ' → logprob: -11.001019477844238

Token 523: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.625
    3. '
' → logprob: -20.375
    4. '```' → logprob: -20.375
    5. '﻿' → logprob: -22.875
    6. '	for' → logprob: -23.25
    7. '``' → logprob: -23.5
    8. '   ' → logprob: -23.625
    9. 'from' → logprob: -23.75
    10. '#' → logprob: -24.125

Token 524: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005666146171279252
    2. 'k' → logprob: -8.125566482543945
    3. 'i' → logprob: -8.875566482543945
    4. ' n' → logprob: -9.375566482543945
    5. 'x' → logprob: -10.875566482543945
    6. 'j' → logprob: -10.875566482543945
    7. 'm' → logprob: -12.250566482543945
    8. 'p' → logprob: -14.000566482543945
    9. 'a' → logprob: -14.500566482543945
    10. 'r' → logprob: -14.875566482543945

Token 525: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4742458760738373
    2. ' in' → logprob: -0.9742459058761597
    3. 'n' → logprob: -9.09924602508545
    4. ' ' → logprob: -10.09924602508545
    5. 'N' → logprob: -12.09924602508545
    6. ' n' → logprob: -13.47424602508545
    7. ' i' → logprob: -13.84924602508545
    8. '	in' → logprob: -13.84924602508545
    9. 'i' → logprob: -14.09924602508545
    10. '   ' → logprob: -14.09924602508545

Token 526: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5980912446975708
    2. 'range' → logprob: -0.8480912446975708
    3. ' range' → logprob: -4.223091125488281
    4. 'N' → logprob: -5.098091125488281
    5. ' R' → logprob: -6.848091125488281
    6. 're' → logprob: -10.473091125488281
    7. ' reversed' → logprob: -11.098091125488281
    8. 'P' → logprob: -11.723091125488281
    9. 'rang' → logprob: -11.723091125488281
    10. 'reverse' → logprob: -11.973091125488281

Token 527: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.625009536743164
    3. '(n' → logprob: -14.375009536743164
    4. 'N' → logprob: -15.375009536743164
    5. '(P' → logprob: -17.750009536743164
    6. '(
' → logprob: -17.750009536743164
    7. ' (' → logprob: -19.500009536743164
    8. '((' → logprob: -19.875009536743164
    9. '(M' → logprob: -20.250009536743164
    10. '	N' → logprob: -21.000009536743164

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007031376590020955
    2. '-' → logprob: -7.50070333480835
    3. ' ,' → logprob: -9.000702857971191
    4. '(' → logprob: -11.125702857971191
    5. '(),' → logprob: -12.875702857971191
    6. ' -' → logprob: -12.875702857971191
    7. '1' → logprob: -13.125702857971191
    8. ',N' → logprob: -13.500702857971191
    9. '(n' → logprob: -14.000702857971191
    10. ',n' → logprob: -14.125702857971191

Token 529: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -19.375
    4. '
' → logprob: -21.25
    5. '   ' → logprob: -22.0
    6. '۰' → logprob: -22.0
    7. '  ' → logprob: -23.375
    8. '０' → logprob: -23.75
    9. '  
' → logprob: -23.875
    10. '	' → logprob: -24.125

Token 530: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '1' → logprob: -17.75
    4. '
' → logprob: -20.75
    5. '   ' → logprob: -20.875
    6. '۰' → logprob: -21.875
    7. '```' → logprob: -22.25
    8. '０' → logprob: -22.875
    9. '

' → logprob: -23.5
    10. '  ' → logprob: -23.5

Token 531: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024046145379543304
    2. ',' → logprob: -3.7740461826324463
    3. ' -' → logprob: -7.149045944213867
    4. ',-' → logprob: -11.774045944213867
    5. '-,' → logprob: -12.024045944213867
    6. ' ,' → logprob: -14.649045944213867
    7. '0' → logprob: -15.274045944213867
    8. ' ' → logprob: -15.524045944213867
    9. '   ' → logprob: -16.649045944213867
    10. ',
' → logprob: -17.024045944213867

Token 532: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '  ' → logprob: -18.125036239624023
    4. '   ' → logprob: -18.375036239624023
    5. ' ' → logprob: -18.875036239624023
    6. 'n' → logprob: -20.125036239624023
    7. '	' → logprob: -20.375036239624023
    8. '-
' → logprob: -21.750036239624023
    9. ',-' → logprob: -22.000036239624023
    10. '0' → logprob: -22.125036239624023

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3266891837120056
    2. '-' → logprob: -1.3266892433166504
    3. ' -' → logprob: -4.32668924331665
    4. ',' → logprob: -9.701688766479492
    5. ',-' → logprob: -10.326688766479492
    6. ')' → logprob: -10.951688766479492
    7. ' ' → logprob: -12.076688766479492
    8. '   ' → logprob: -12.451688766479492
    9. '  ' → logprob: -13.326688766479492
    10. '):
' → logprob: -13.951688766479492

Token 534: '):' (ID: 3127)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8499612808227539
    2. ',' → logprob: -1.349961280822754
    3. '):' → logprob: -1.349961280822754
    4. ' -' → logprob: -3.474961280822754
    5. '):
' → logprob: -4.224961280822754
    6. ',-' → logprob: -5.349961280822754
    7. '   ' → logprob: -6.599961280822754
    8. '):-' → logprob: -6.724961280822754
    9. ' ):' → logprob: -7.599961280822754
    10. ':' → logprob: -9.224961280822754

Token 535: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038956227945163846
    2. 'I' → logprob: -8.000389099121094
    3. ' I' → logprob: -10.375389099121094
    4. '	I' → logprob: -11.125389099121094
    5. '   ' → logprob: -11.875389099121094
    6. '    
' → logprob: -15.250389099121094
    7. '	   ' → logprob: -15.750389099121094
    8. ' ' → logprob: -16.000389099121094
    9. '```' → logprob: -16.000389099121094
    10. '  ' → logprob: -16.250389099121094

Token 536: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47670885920524597
    2. 'I' → logprob: -0.9767088890075684
    3. ' I' → logprob: -5.976708889007568
    4. '	I' → logprob: -9.60170841217041
    5. ' ' → logprob: -11.22670841217041
    6. '  ' → logprob: -11.97670841217041
    7. '    
' → logprob: -13.85170841217041
    8. '   ' → logprob: -14.22670841217041
    9. '    ' → logprob: -14.72670841217041
    10. '#' → logprob: -14.85170841217041

Token 537: ' Comm' (ID: 57464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05645465478301048
    2. 'n' → logprob: -3.056454658508301
    3. ' n' → logprob: -5.431454658508301
    4. 'I' → logprob: -6.931454658508301
    5. ' I' → logprob: -7.181454658508301
    6. '	n' → logprob: -7.431454658508301
    7. 'i' → logprob: -8.1814546585083
    8. '  ' → logprob: -8.1814546585083
    9. '    ' → logprob: -8.4314546585083
    10. ' ' → logprob: -9.0564546585083

Token 538: 'ence' (ID: 1082)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5826422572135925
    2. ')' → logprob: -1.2076423168182373
    3. ',' → logprob: -3.8326423168182373
    4. 'e' → logprob: -3.9576423168182373
    5. 'u' → logprob: -4.082642078399658
    6. 'inue' → logprob: -4.207642078399658
    7. '+' → logprob: -4.582642078399658
    8. '-' → logprob: -5.207642078399658
    9. 'ents' → logprob: -5.332642078399658
    10. '>' → logprob: -5.332642078399658

Token 539: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7193978428840637
    2. '(n' → logprob: -0.7193978428840637
    3. '(' → logprob: -4.594398021697998
    4. ' n' → logprob: -5.469398021697998
    5. 's' → logprob: -5.594398021697998
    6. 'in' → logprob: -6.094398021697998
    7. ',' → logprob: -6.969398021697998
    8. ' in' → logprob: -7.094398021697998
    9. ' (' → logprob: -7.344398021697998
    10. '.' → logprob: -7.469398021697998

Token 540: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11303015053272247
    2. 'n' → logprob: -2.238030195236206
    3. ' N' → logprob: -9.738030433654785
    4. ' n' → logprob: -9.863030433654785
    5. '<|end|>' → logprob: -10.238030433654785
    6. '1' → logprob: -10.863030433654785
    7. '(n' → logprob: -11.488030433654785
    8. '	n' → logprob: -11.863030433654785
    9. '_n' → logprob: -12.238030433654785
    10. '	N' → logprob: -12.363030433654785

Token 541: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004669949412345886
    2. ' -' → logprob: -5.379670143127441
    3. ',' → logprob: -10.004670143127441
    4. ':' → logprob: -13.879670143127441
    5. '   ' → logprob: -14.004670143127441
    6. '-,' → logprob: -14.129670143127441
    7. '<|end|>' → logprob: -15.004670143127441
    8. '–' → logprob: -15.379670143127441
    9. ',-' → logprob: -15.629670143127441
    10. ' ' → logprob: -16.004669189453125

Token 542: ' finit' (ID: 154258)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5953538417816162
    2. ' n' → logprob: -0.8453538417816162
    3. '0' → logprob: -4.845354080200195
    4. ' -' → logprob: -5.220354080200195
    5. '-' → logprob: -5.845354080200195
    6. ' ' → logprob: -6.470354080200195
    7. '   ' → logprob: -6.970354080200195
    8. '	n' → logprob: -7.970354080200195
    9. '-n' → logprob: -9.470354080200195
    10. '  ' → logprob: -9.845354080200195

Token 543: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4649491310119629
    2. 'n' → logprob: -1.589949131011963
    3. '=' → logprob: -2.714949131011963
    4. ' at' → logprob: -3.339949131011963
    5. '1' → logprob: -3.464949131011963
    6. '<|end|>' → logprob: -5.089949131011963
    7. '(n' → logprob: -5.464949131011963
    8. 'at' → logprob: -5.464949131011963
    9. '.' → logprob: -5.589949131011963
    10. '0' → logprob: -5.964949131011963

Token 544: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25216007232666016
    2. '1' → logprob: -1.5021600723266602
    3. ' ' → logprob: -8.37716007232666
    4. '  ' → logprob: -15.00216007232666
    5. '   ' → logprob: -15.50216007232666
    6. '```' → logprob: -15.75216007232666
    7. 'A' → logprob: -17.502159118652344
    8. '-' → logprob: -17.502159118652344
    9. '<|end|>' → logprob: -17.502159118652344
    10. '﻿' → logprob: -17.752159118652344

Token 545: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012617598287761211
    2. '1' → logprob: -4.387617588043213
    3. ' ' → logprob: -9.137618064880371
    4. '   ' → logprob: -15.512618064880371
    5. '  ' → logprob: -16.512617111206055
    6. '```' → logprob: -16.512617111206055
    7. '-' → logprob: -17.512617111206055
    8. '2' → logprob: -18.012617111206055
    9. 'N' → logprob: -18.512617111206055
    10. 'n' → logprob: -18.637617111206055

Token 546: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5018800497055054
    2. '-' → logprob: -1.5018800497055054
    3. ':' → logprob: -2.126880168914795
    4. ' -' → logprob: -3.626880168914795
    5. '   ' → logprob: -4.376880168914795
    6. ',-' → logprob: -5.501880168914795
    7. '(n' → logprob: -5.751880168914795
    8. ',n' → logprob: -6.751880168914795
    9. 'n' → logprob: -6.876880168914795
    10. '(-' → logprob: -7.126880168914795

Token 547: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009311995469033718
    2. ':' → logprob: -4.759312152862549
    3. 'n' → logprob: -7.634312152862549
    4. ' :' → logprob: -9.63431167602539
    5. ':
' → logprob: -9.75931167602539
    6. ' I' → logprob: -10.38431167602539
    7. 'I' → logprob: -11.13431167602539
    8. ',' → logprob: -11.50931167602539
    9. ' n' → logprob: -12.50931167602539
    10. '1' → logprob: -12.63431167602539

Token 548: 'car' (ID: 6830)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012842647731304169
    2. ' -' → logprob: -5.262842655181885
    3. 'n' → logprob: -5.387842655181885
    4. '-n' → logprob: -6.512842655181885
    5. '   ' → logprob: -6.637842655181885
    6. '-)' → logprob: -9.762842178344727
    7. '	n' → logprob: -10.012842178344727
    8. ' n' → logprob: -10.012842178344727
    9. '  ' → logprob: -10.762842178344727
    10. ')' → logprob: -11.512842178344727

Token 549: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.593372642993927
    2. 'n' → logprob: -0.843372642993927
    3. ' n' → logprob: -4.843372821807861
    4. ' ' → logprob: -4.968372821807861
    5. '   ' → logprob: -6.593372821807861
    6. '	n' → logprob: -7.593372821807861
    7. '    ' → logprob: -7.843372821807861
    8. ')' → logprob: -10.218372344970703
    9. '  ' → logprob: -10.343372344970703
    10. '0' → logprob: -10.718372344970703

Token 550: ' s' (ID: 265)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8024725914001465
    2. ',' → logprob: -0.8024725914001465
    3. '(n' → logprob: -2.5524725914001465
    4. '1' → logprob: -4.8024725914001465
    5. ')' → logprob: -5.0524725914001465
    6. 'n' → logprob: -5.9274725914001465
    7. '),' → logprob: -6.3024725914001465
    8. '(N' → logprob: -6.3024725914001465
    9. ' ,' → logprob: -6.5524725914001465
    10. '(
' → logprob: -7.3024725914001465

Token 551: ''arr' (ID: 49695)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23125450313091278
    2. '-' → logprob: -2.1062545776367188
    3. '(n' → logprob: -3.7312545776367188
    4. '2' → logprob: -4.481254577636719
    5. ',' → logprob: -4.481254577636719
    6. '(-' → logprob: -4.731254577636719
    7. 'n' → logprob: -4.981254577636719
    8. '1' → logprob: -5.356254577636719
    9. '+' → logprob: -5.481254577636719
    10. ' -' → logprob: -6.106254577636719

Token 552: 'ête' (ID: 16808)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3913453221321106
    2. '(' → logprob: -1.5163452625274658
    3. 'tep' → logprob: -2.516345262527466
    4. '2' → logprob: -4.391345500946045
    5. 'n' → logprob: -6.141345500946045
    6. '+' → logprob: -6.766345500946045
    7. '-' → logprob: -6.891345500946045
    8. '1' → logprob: -7.141345500946045
    9. 'art' → logprob: -7.141345500946045
    10. ' top' → logprob: -7.266345500946045

Token 553: ' avant' (ID: 13339)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06436728686094284
    2. '(' → logprob: -3.1893672943115234
    3. '(n' → logprob: -4.814367294311523
    4. ' ,' → logprob: -4.939367294311523
    5. '1' → logprob: -6.064367294311523
    6. '=' → logprob: -6.939367294311523
    7. 'n' → logprob: -7.189367294311523
    8. ',n' → logprob: -7.564367294311523
    9. ')' → logprob: -7.814367294311523
    10. ' (' → logprob: -8.064367294311523

Token 554: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '0' → logprob: -16.625003814697266
    5. '  ' → logprob: -18.500003814697266
    6. 'n' → logprob: -19.500003814697266
    7. 'I' → logprob: -20.375003814697266
    8. '```' → logprob: -20.500003814697266
    9. '１' → logprob: -20.875003814697266
    10. '۱' → logprob: -20.875003814697266

Token 555: ' deuxième' (ID: 51664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014169269241392612
    2. '0' → logprob: -4.264169216156006
    3. ' ' → logprob: -12.139169692993164
    4. '   ' → logprob: -15.014169692993164
    5. '  ' → logprob: -17.514169692993164
    6. '2' → logprob: -17.889169692993164
    7. '```' → logprob: -19.514169692993164
    8. '' → logprob: -19.889169692993164
    9. '﻿' → logprob: -19.889169692993164
    10. '    ' → logprob: -20.639169692993164

Token 556: ' argument' (ID: 10383)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09808617830276489
    2. 'n' → logprob: -2.59808611869812
    3. ')' → logprob: -4.598086357116699
    4. '0' → logprob: -5.848086357116699
    5. ',' → logprob: -6.348086357116699
    6. ' ' → logprob: -7.223086357116699
    7. '=' → logprob: -7.598086357116699
    8. 'token' → logprob: -7.598086357116699
    9. '),' → logprob: -7.598086357116699
    10. 'argument' → logprob: -7.723086357116699

Token 557: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02181720733642578
    2. '   ' → logprob: -4.896817207336426
    3. ' ,' → logprob: -5.771817207336426
    4. '-' → logprob: -5.771817207336426
    5. ',-' → logprob: -5.896817207336426
    6. ' -' → logprob: -6.271817207336426
    7. ',n' → logprob: -6.771817207336426
    8. '):' → logprob: -7.271817207336426
    9. 'n' → logprob: -7.396817207336426
    10. '(n' → logprob: -7.896817207336426

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003987692762166262
    2. 'I' → logprob: -5.628987789154053
    3. ' I' → logprob: -7.878987789154053
    4. '	I' → logprob: -12.878987312316895
    5. '   ' → logprob: -13.003987312316895
    6. 'i' → logprob: -13.878987312316895
    7. ' ' → logprob: -13.878987312316895
    8. '  ' → logprob: -14.378987312316895
    9. '```' → logprob: -14.878987312316895
    10. ',I' → logprob: -15.128987312316895

Token 559: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0009474263642914593
    2. '   ' → logprob: -7.00094747543335
    3. ' I' → logprob: -11.000946998596191
    4. 'i' → logprob: -11.250946998596191
    5. '	I' → logprob: -12.000946998596191
    6. ' ' → logprob: -16.750947952270508
    7. '```' → logprob: -17.500947952270508
    8. '  ' → logprob: -17.625947952270508
    9. '       ' → logprob: -17.750947952270508
    10. '    
' → logprob: -18.875947952270508

Token 560: ' Mise' (ID: 157932)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.0087516784551553e-05
    2. '   ' → logprob: -11.75001049041748
    3. 'i' → logprob: -13.37501049041748
    4. ' I' → logprob: -14.37501049041748
    5. '	I' → logprob: -17.750009536743164
    6. '    
' → logprob: -20.375009536743164
    7. ' ' → logprob: -20.875009536743164
    8. '#' → logprob: -21.000009536743164
    9. '  ' → logprob: -21.375009536743164
    10. '(I' → logprob: -21.875009536743164

Token 561: ' à' (ID: 1221)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0077992030419409275
    2. '=' → logprob: -5.75779914855957
    3. '   ' → logprob: -5.75779914855957
    4. ' I' → logprob: -8.13279914855957
    5. '[I' → logprob: -8.50779914855957
    6. ' =' → logprob: -8.75779914855957
    7. ' ' → logprob: -9.13279914855957
    8. ']' → logprob: -9.38279914855957
    9. 'i' → logprob: -9.38279914855957
    10. '#' → logprob: -9.38279914855957

Token 562: ' jour' (ID: 8379)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03115810826420784
    2. 'n' → logprob: -3.531158208847046
    3. 'i' → logprob: -6.781157970428467
    4. '[I' → logprob: -9.906158447265625
    5. ' I' → logprob: -10.031158447265625
    6. '1' → logprob: -10.281158447265625
    7. 'f' → logprob: -10.531158447265625
    8. '   ' → logprob: -10.531158447265625
    9. '(I' → logprob: -10.781158447265625
    10. 'N' → logprob: -11.281158447265625

Token 563: ' de' (ID: 334)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002903539687395096
    2. '   ' → logprob: -5.877903461456299
    3. ' I' → logprob: -9.502903938293457
    4. 'i' → logprob: -10.877903938293457
    5. '	I' → logprob: -12.627903938293457
    6. ' ' → logprob: -14.002903938293457
    7. '  ' → logprob: -15.002903938293457
    8. '(I' → logprob: -15.252903938293457
    9. '[I' → logprob: -16.00290298461914
    10. '       ' → logprob: -16.00290298461914

Token 564: ' i' (ID: 575)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00081796565791592
    2. 'i' → logprob: -7.125817775726318
    3. '   ' → logprob: -11.750818252563477
    4. ' I' → logprob: -12.125818252563477
    5. ' ' → logprob: -16.625818252563477
    6. '(I' → logprob: -16.625818252563477
    7. 'n' → logprob: -17.250818252563477
    8. '	I' → logprob: -17.750818252563477
    9. ' i' → logprob: -17.875818252563477
    10. '[I' → logprob: -18.625818252563477

Token 565: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003412035293877125
    2. '*=' → logprob: -6.253412246704102
    3. ' =' → logprob: -6.628412246704102
    4. '=i' → logprob: -9.378412246704102
    5. 'I' → logprob: -10.378412246704102
    6. 'i' → logprob: -11.628412246704102
    7. ' *=' → logprob: -11.753412246704102
    8. '   ' → logprob: -11.753412246704102
    9. '*i' → logprob: -11.878412246704102
    10. '*' → logprob: -12.253412246704102

Token 566: ' multiplication' (ID: 86340)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0385797955095768
    2. 'I' → logprob: -3.2885797023773193
    3. '   ' → logprob: -7.538579940795898
    4. ' i' → logprob: -12.163579940795898
    5. '    
' → logprob: -15.538579940795898
    6. '	i' → logprob: -15.663579940795898
    7. ' I' → logprob: -16.0385799407959
    8. '
' → logprob: -16.2885799407959
    9. '```' → logprob: -16.2885799407959
    10. '[i' → logprob: -16.7885799407959

Token 567: ' par' (ID: 686)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34336143732070923
    2. '=' → logprob: -1.5933613777160645
    3. '   ' → logprob: -2.9683613777160645
    4. 'I' → logprob: -4.4683613777160645
    5. '=i' → logprob: -5.4683613777160645
    6. '#' → logprob: -5.5933613777160645
    7. '*=' → logprob: -5.5933613777160645
    8. '(i' → logprob: -5.7183613777160645
    9. ' i' → logprob: -5.7183613777160645
    10. '*i' → logprob: -6.7183613777160645

Token 568: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.061054359131958e-06
    2. ' n' → logprob: -11.750007629394531
    3. '	n' → logprob: -16.50000762939453
    4. '' → logprob: -17.12500762939453
    5. '   ' → logprob: -17.25000762939453
    6. '
' → logprob: -17.75000762939453
    7. '_n' → logprob: -18.25000762939453
    8. '(n' → logprob: -18.37500762939453
    9. 'F' → logprob: -18.50000762939453
    10. '
' → logprob: -18.75000762939453

Token 569: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2160540670156479
    2. '*i' → logprob: -2.4660539627075195
    3. ' *' → logprob: -2.8410539627075195
    4. '   ' → logprob: -3.7160539627075195
    5. '=' → logprob: -4.5910539627075195
    6. 'i' → logprob: -5.0910539627075195
    7. ',' → logprob: -5.4660539627075195
    8. 'I' → logprob: -6.4660539627075195
    9. ' ' → logprob: -7.0910539627075195
    10. '*n' → logprob: -7.2160539627075195

Token 570: ' puis' (ID: 18766)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07547391951084137
    2. ' i' → logprob: -3.2004740238189697
    3. '   ' → logprob: -3.5754740238189697
    4. 'I' → logprob: -5.825473785400391
    5. '	i' → logprob: -8.45047378540039
    6. '    ' → logprob: -8.82547378540039
    7. 'n' → logprob: -8.95047378540039
    8. ' I' → logprob: -8.95047378540039
    9. ' ' → logprob: -9.70047378540039
    10. '\t' → logprob: -9.70047378540039

Token 571: ' modulo' (ID: 112372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10763131082057953
    2. '%' → logprob: -2.982631206512451
    3. ' i' → logprob: -3.482631206512451
    4. 'I' → logprob: -4.232631206512451
    5. '%i' → logprob: -6.482631206512451
    6. '%n' → logprob: -6.857631206512451
    7. 'n' → logprob: -7.232631206512451
    8. ' %' → logprob: -7.357631206512451
    9. ' %=' → logprob: -7.857631206512451
    10. ' I' → logprob: -7.857631206512451

Token 572: ' M' (ID: 391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010177690535783768
    2. '(i' → logprob: -5.8851776123046875
    3. '   ' → logprob: -5.8851776123046875
    4. '(' → logprob: -6.7601776123046875
    5. ' i' → logprob: -6.7601776123046875
    6. '(n' → logprob: -7.5101776123046875
    7. '=' → logprob: -7.6351776123046875
    8. 'I' → logprob: -7.7601776123046875
    9. 'n' → logprob: -8.010177612304688
    10. ' =' → logprob: -8.510177612304688

Token 573: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1422853022813797
    2. '   ' → logprob: -2.8922853469848633
    3. 'I' → logprob: -3.5172853469848633
    4. '=' → logprob: -4.017285346984863
    5. '*i' → logprob: -4.392285346984863
    6. ' i' → logprob: -4.517285346984863
    7. ',' → logprob: -6.267285346984863
    8. ' =' → logprob: -6.392285346984863
    9. ' ' → logprob: -7.267285346984863
    10. '	i' → logprob: -7.642285346984863

Token 574: ' donne' (ID: 30004)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33509722352027893
    2. '   ' → logprob: -1.4600971937179565
    3. ' i' → logprob: -3.085097312927246
    4. '	i' → logprob: -5.085097312927246
    5. 'I' → logprob: -8.585097312927246
    6. ' ' → logprob: -9.335097312927246
    7. '    
' → logprob: -9.585097312927246
    8. '    ' → logprob: -9.960097312927246
    9. ' 
' → logprob: -10.335097312927246
    10. '  ' → logprob: -10.460097312927246

Token 575: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.041006747633218765
    2. '(i' → logprob: -4.166006565093994
    3. 'I' → logprob: -4.416006565093994
    4. ' i' → logprob: -4.541006565093994
    5. '   ' → logprob: -6.541006565093994
    6. ' (' → logprob: -8.291007041931152
    7. '(I' → logprob: -9.416007041931152
    8. ' I' → logprob: -9.791007041931152
    9. ' ' → logprob: -10.291007041931152
    10. '(' → logprob: -10.291007041931152

Token 576: ''in' (ID: 17942)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.04357146844267845
    2. ' I' → logprob: -3.6685714721679688
    3. 'i' → logprob: -4.668571472167969
    4. '(I' → logprob: -6.043571472167969
    5. ' (' → logprob: -6.293571472167969
    6. '(' → logprob: -6.793571472167969
    7. ' i' → logprob: -7.418571472167969
    8. 'n' → logprob: -7.918571472167969
    9. ' ' → logprob: -8.168571472167969
    10. '(i' → logprob: -8.168571472167969

Token 577: 'verse' (ID: 7093)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1868870109319687
    2. 'verse' → logprob: -2.68688702583313
    3. 'vers' → logprob: -3.43688702583313
    4. 'i' → logprob: -3.93688702583313
    5. '[I' → logprob: -4.186886787414551
    6. '[i' → logprob: -4.436886787414551
    7. '(I' → logprob: -5.311886787414551
    8. '```' → logprob: -5.436886787414551
    9. '(i' → logprob: -5.936886787414551
    10. 'v' → logprob: -6.436886787414551

Token 578: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10317324846982956
    2. '   ' → logprob: -2.47817325592041
    3. 'I' → logprob: -4.72817325592041
    4. ' i' → logprob: -5.72817325592041
    5. '	i' → logprob: -6.97817325592041
    6. '=' → logprob: -8.85317325592041
    7. ' =' → logprob: -8.85317325592041
    8. '```' → logprob: -8.97817325592041
    9. '*i' → logprob: -9.10317325592041
    10. ' ' → logprob: -9.35317325592041

Token 579: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21472150087356567
    2. 'i' → logprob: -2.589721441268921
    3. '(n' → logprob: -2.839721441268921
    4. 'I' → logprob: -3.089721441268921
    5. 'F' → logprob: -4.3397216796875
    6. '(i' → logprob: -7.8397216796875
    7. '   ' → logprob: -8.8397216796875
    8. 'f' → logprob: -9.0897216796875
    9. ' (' → logprob: -9.0897216796875
    10. '(I' → logprob: -9.2147216796875

Token 580: ' factor' (ID: 12332)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1544092893600464
    2. '(n' → logprob: -2.654409408569336
    3. 'I' → logprob: -3.154409408569336
    4. 'F' → logprob: -3.654409408569336
    5. '[n' → logprob: -5.904409408569336
    6. 'i' → logprob: -7.154409408569336
    7. ' n' → logprob: -8.654409408569336
    8. 'f' → logprob: -8.904409408569336
    9. ' (' → logprob: -9.404409408569336
    10. '(I' → logprob: -9.779409408569336

Token 581: 'ielle' (ID: 22380)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005466286558657885
    2. '   ' → logprob: -6.005466461181641
    3. '(n' → logprob: -6.880466461181641
    4. ' n' → logprob: -7.505466461181641
    5. 'i' → logprob: -7.755466461181641
    6. '_n' → logprob: -8.75546646118164
    7. '_' → logprob: -8.75546646118164
    8. '[n' → logprob: -9.13046646118164
    9. '	n' → logprob: -9.38046646118164
    10. 's' → logprob: -10.13046646118164

Token 582: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45150837302207947
    2. 'I' → logprob: -1.2015084028244019
    3. '   ' → logprob: -2.8265082836151123
    4. '=' → logprob: -6.576508522033691
    5. ' i' → logprob: -7.326508522033691
    6. ' =' → logprob: -8.576508522033691
    7. '```' → logprob: -8.701508522033691
    8. '(i' → logprob: -8.951508522033691
    9. ' I' → logprob: -9.201508522033691
    10. 'n' → logprob: -9.201508522033691

Token 583: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002823777496814728
    2. '(n' → logprob: -5.877823829650879
    3. ' n' → logprob: -11.127823829650879
    4. '   ' → logprob: -13.627823829650879
    5. ' (' → logprob: -14.002823829650879
    6. '(' → logprob: -14.252823829650879
    7. '	n' → logprob: -14.377823829650879
    8. '[n' → logprob: -15.002823829650879
    9. '```' → logprob: -15.627823829650879
    10. '_n' → logprob: -16.377822875976562

Token 584: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12565827369689941
    2. 'i' → logprob: -2.2506582736968994
    3. ' =' → logprob: -5.25065803527832
    4. '   ' → logprob: -5.75065803527832
    5. 'I' → logprob: -6.75065803527832
    6. '*=' → logprob: -7.00065803527832
    7. '*i' → logprob: -7.50065803527832
    8. ' i' → logprob: -7.62565803527832
    9. '=i' → logprob: -7.87565803527832
    10. '*' → logprob: -7.87565803527832

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13519386947155
    2. '-' → logprob: -2.1351938247680664
    3. 'n' → logprob: -5.135193824768066
    4. '```' → logprob: -7.010193824768066
    5. '(n' → logprob: -7.260193824768066
    6. 'i' → logprob: -8.510193824768066
    7. '`' → logprob: -8.885193824768066
    8. '(' → logprob: -9.260193824768066
    9. ' -' → logprob: -9.510193824768066
    10. '   ' → logprob: -9.760193824768066

Token 586: '  
' (ID: 4066)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31005093455314636
    2. '   ' → logprob: -1.4350509643554688
    3. ' i' → logprob: -4.685050964355469
    4. '*i' → logprob: -4.810050964355469
    5. '*' → logprob: -5.685050964355469
    6. 'I' → logprob: -5.810050964355469
    7. ',' → logprob: -6.185050964355469
    8. '=' → logprob: -7.310050964355469
    9. '	i' → logprob: -7.560050964355469
    10. '```' → logprob: -8.185050964355469

Token 587: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009383779251947999
    2. '   ' → logprob: -7.000938415527344
    3. ' i' → logprob: -10.625938415527344
    4. 'I' → logprob: -13.625938415527344
    5. '(i' → logprob: -14.125938415527344
    6. '	i' → logprob: -14.875938415527344
    7. '    
' → logprob: -15.250938415527344
    8. '*i' → logprob: -16.375938415527344
    9. '
' → logprob: -16.875938415527344
    10. '```' → logprob: -18.375938415527344

Token 588: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -8.876193169271573e-05
    2. '   ' → logprob: -9.375088691711426
    3. ' i' → logprob: -12.875088691711426
    4. 'I' → logprob: -14.375088691711426
    5. '(i' → logprob: -14.750088691711426
    6. '	i' → logprob: -15.875088691711426
    7. '    
' → logprob: -16.000089645385742
    8. '*i' → logprob: -18.750089645385742
    9. '(' → logprob: -19.250089645385742
    10. '```' → logprob: -19.250089645385742

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001322639436693862
    2. ' =' → logprob: -9.00013256072998
    3. '*=' → logprob: -11.87513256072998
    4. '=i' → logprob: -13.25013256072998
    5. '=
' → logprob: -17.500131607055664
    6. '＝' → logprob: -17.875131607055664
    7. ' *=' → logprob: -18.500131607055664
    8. '=

' → logprob: -18.625131607055664
    9. '	' → logprob: -18.750131607055664
    10. '*' → logprob: -18.875131607055664

Token 590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007753198966383934
    2. ' i' → logprob: -5.257753372192383
    3. '(i' → logprob: -6.007753372192383
    4. ' (' → logprob: -10.007753372192383
    5. '(' → logprob: -12.507753372192383
    6. '   ' → logprob: -12.507753372192383
    7. ' ' → logprob: -13.382753372192383
    8. '	i' → logprob: -13.507753372192383
    9. 'I' → logprob: -14.007753372192383
    10. ' ' → logprob: -15.757753372192383

Token 591: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029769930988550186
    2. '*' → logprob: -3.5297698974609375
    3. '*i' → logprob: -11.029769897460938
    4. ' ' → logprob: -13.404769897460938
    5. ' ' → logprob: -13.529769897460938
    6. '*n' → logprob: -15.279769897460938
    7. '	' → logprob: -16.654769897460938
    8. '   ' → logprob: -17.404769897460938
    9. '*object' → logprob: -17.529769897460938
    10. '**' → logprob: -17.654769897460938

Token 592: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.572941179503687e-05
    2. ' n' → logprob: -10.000045776367188
    3. '	n' → logprob: -15.125045776367188
    4. '(n' → logprob: -18.000045776367188
    5. '_n' → logprob: -19.000045776367188
    6. '   ' → logprob: -20.875045776367188
    7. '[n' → logprob: -21.000045776367188
    8. '%n' → logprob: -21.000045776367188
    9. ' ' → logprob: -21.125045776367188
    10. '(' → logprob: -21.375045776367188

Token 593: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01822146773338318
    2. ' %' → logprob: -4.018221378326416
    3. '%n' → logprob: -9.768221855163574
    4. '%i' → logprob: -11.518221855163574
    5. '%B' → logprob: -13.643221855163574
    6. '%m' → logprob: -13.643221855163574
    7. '%A' → logprob: -13.893221855163574
    8. '%c' → logprob: -14.518221855163574
    9. '%b' → logprob: -15.643221855163574
    10. '%s' → logprob: -16.018220901489258

Token 594: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.896309739408025e-07
    2. ' M' → logprob: -14.125000953674316
    3. '	M' → logprob: -19.875
    4. '   ' → logprob: -22.0
    5. 'М' → logprob: -22.0
    6. ' ' → logprob: -22.0
    7. '<M' → logprob: -22.25
    8. '998' → logprob: -22.375
    9. '(M' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 595: '
' (ID: 198)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0013536872575059533
    2. '<|end|>' → logprob: -6.751353740692139
    3. ' I' → logprob: -9.75135326385498
    4. '
' → logprob: -9.87635326385498
    5. 'F' → logprob: -10.25135326385498
    6. '#' → logprob: -11.00135326385498
    7. '   ' → logprob: -11.75135326385498
    8. ' ' → logprob: -13.12635326385498
    9. '    
' → logprob: -13.12635326385498
    10. '  
' → logprob: -13.12635326385498

Token 596: '   ' (ID: 271)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014262347482144833
    2. '   ' → logprob: -4.2642621994018555
    3. ' I' → logprob: -9.389262199401855
    4. ' ' → logprob: -12.139262199401855
    5. '	I' → logprob: -13.139262199401855
    6. '  ' → logprob: -13.389262199401855
    7. '```' → logprob: -13.389262199401855
    8. '#' → logprob: -13.514262199401855
    9. 'for' → logprob: -13.764262199401855
    10. '    
' → logprob: -14.389262199401855

Token 597: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00012701898231171072
    2. '   ' → logprob: -9.000126838684082
    3. ' I' → logprob: -12.625126838684082
    4. '	I' → logprob: -15.875126838684082
    5. ' ' → logprob: -16.0001277923584
    6. '    
' → logprob: -17.7501277923584
    7. '  ' → logprob: -18.6251277923584
    8. '
' → logprob: -18.7501277923584
    9. '#' (adapté à ' #') → logprob: -19.2501277923584
    10. '  
' → logprob: -19.7501277923584

Token 598: ' Stock' (ID: 16382)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -4.36574100604048e-06
    2. '   ' → logprob: -13.000004768371582
    3. ' I' → logprob: -13.125004768371582
    4. '	I' → logprob: -17.625003814697266
    5. '#' → logprob: -18.250003814697266
    6. ' ' → logprob: -19.000003814697266
    7. '  ' → logprob: -21.375003814697266
    8. '    
' → logprob: -22.125003814697266
    9. '[I' → logprob: -22.500003814697266
    10. '"I' → logprob: -22.625003814697266

Token 599: 'age' (ID: 477)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.49385499954223633
    2. 'I' → logprob: -1.1188549995422363
    3. '[' → logprob: -3.8688549995422363
    4. '[I' → logprob: -3.9938549995422363
    5. '   ' → logprob: -4.118854999542236
    6. '[i' → logprob: -6.118854999542236
    7. ' I' → logprob: -6.118854999542236
    8. '=' → logprob: -6.993854999542236
    9. ']' → logprob: -7.118854999542236
    10. ' =' → logprob: -7.618854999542236

Token 600: ' du' (ID: 1462)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.016138063743710518
    2. ' I' → logprob: -4.141138076782227
    3. '   ' → logprob: -9.266138076782227
    4. '[I' → logprob: -13.016138076782227
    5. ' ' → logprob: -13.266138076782227
    6. ' =' → logprob: -13.391138076782227
    7. '=' → logprob: -13.516138076782227
    8. '
' → logprob: -13.641138076782227
    9. '	I' → logprob: -14.641138076782227
    10. '  ' → logprob: -15.266138076782227

Token 601: ' résultat' (ID: 62556)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0013832130935043097
    2. 'i' → logprob: -6.751383304595947
    3. ' I' → logprob: -8.626382827758789
    4. 'n' → logprob: -10.751382827758789
    5. ' ' → logprob: -12.126382827758789
    6. ' i' → logprob: -13.376382827758789
    7. '   ' → logprob: -13.501382827758789
    8. '#' → logprob: -13.626382827758789
    9. 'inverse' → logprob: -13.876382827758789
    10. '[I' → logprob: -15.126382827758789

Token 602: ' dans' (ID: 2671)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.02415413223206997
    2. ' I' → logprob: -3.7741541862487793
    3. '   ' → logprob: -7.024154186248779
    4. '	I' → logprob: -11.899153709411621
    5. ' ' → logprob: -12.524153709411621
    6. '[I' → logprob: -13.274153709411621
    7. ' in' → logprob: -13.399153709411621
    8. '
' → logprob: -14.024153709411621
    9. ' =' → logprob: -14.149153709411621
    10. '=' → logprob: -14.399153709411621

Token 603: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -4.36574100604048e-06
    2. ' I' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.250003814697266
    4. '	I' → logprob: -19.500003814697266
    5. ' ' → logprob: -20.375003814697266
    6. '#' → logprob: -20.750003814697266
    7. '[I' → logprob: -21.250003814697266
    8. '`' → logprob: -21.500003814697266
    9. '
' → logprob: -21.500003814697266
    10. '(I' → logprob: -21.750003814697266

Token 604: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0007345817284658551
    2. 'I' → logprob: -7.375734806060791
    3. 'n' → logprob: -9.500734329223633
    4. '   ' → logprob: -11.125734329223633
    5. '[' → logprob: -11.250734329223633
    6. '[I' → logprob: -13.125734329223633
    7. '[i' → logprob: -13.250734329223633
    8. '```' → logprob: -13.625734329223633
    9. ' [' → logprob: -16.000734329223633
    10. '\[' → logprob: -16.125734329223633

Token 605: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0160919688642025
    2. ' -' → logprob: -4.141091823577881
    3. ']' → logprob: -9.766092300415039
    4. '   ' → logprob: -15.516092300415039
    5. '```' → logprob: -16.64109230041504
    6. ' ' → logprob: -16.76609230041504
    7. ' ]' → logprob: -17.39109230041504
    8. ')' → logprob: -17.51609230041504
    9. 'n' → logprob: -17.64109230041504
    10. '-
' → logprob: -17.64109230041504

Token 606: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6386427879333496
    2. '1' → logprob: -0.7636427879333496
    3. 'n' → logprob: -5.76364278793335
    4. '-' → logprob: -5.88864278793335
    5. ')' → logprob: -10.013643264770508
    6. ' ' → logprob: -11.013643264770508
    7. '   ' → logprob: -11.638643264770508
    8. ' -' → logprob: -12.263643264770508
    9. ']-' → logprob: -12.263643264770508
    10. 'i' → logprob: -12.388643264770508

Token 607: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3902033970225602e-05
    2. ']=' → logprob: -12.125014305114746
    3. ' ]' → logprob: -12.375014305114746
    4. ']
' → logprob: -12.500014305114746
    5. '   ' → logprob: -15.000014305114746
    6. ']

' → logprob: -16.75001335144043
    7. ')' → logprob: -17.37501335144043
    8. ']
' → logprob: -17.75001335144043
    9. '[n' → logprob: -18.25001335144043
    10. '=' → logprob: -18.87501335144043

Token 608: '   ' (ID: 271)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.47684186697006226
    2. '   ' → logprob: -0.9768418669700623
    3. ' I' → logprob: -5.976841926574707
    4. '```' → logprob: -8.851841926574707
    5. '[I' → logprob: -10.476841926574707
    6. '	I' → logprob: -11.101841926574707
    7. '=' → logprob: -11.476841926574707
    8. ' ' → logprob: -11.601841926574707
    9. ' =' → logprob: -12.101841926574707
    10. '``' → logprob: -12.351841926574707

Token 609: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -1.6240566083070007e-06
    2. ' I' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '	I' → logprob: -19.750001907348633
    5. ' ' → logprob: -22.000001907348633
    6. '[' → logprob: -22.125001907348633
    7. '[I' → logprob: -22.250001907348633
    8. '```' → logprob: -22.375001907348633
    9. '#' → logprob: -23.500001907348633
    10. '  ' → logprob: -23.500001907348633

Token 610: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. 'n' → logprob: -14.750004768371582
    4. '[N' → logprob: -15.375004768371582
    5. ' [' → logprob: -16.375003814697266
    6. '[i' → logprob: -17.750003814697266
    7. '[
' → logprob: -17.875003814697266
    8. '```' → logprob: -17.875003814697266
    9. '[...]' → logprob: -18.375003814697266
    10. '[I' → logprob: -18.625003814697266

Token 611: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001171056181192398
    2. ' -' → logprob: -6.751171112060547
    3. ']' → logprob: -14.876171112060547
    4. '[' → logprob: -15.501171112060547
    5. '[n' → logprob: -16.251171112060547
    6. '-
' → logprob: -16.501171112060547
    7. '   ' → logprob: -17.251171112060547
    8. ' ' → logprob: -17.751171112060547
    9. '```' → logprob: -17.876171112060547
    10. '1' → logprob: -18.751171112060547

Token 612: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. ']' → logprob: -17.75
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -20.0
    6. '１' → logprob: -21.625
    7. '  ' → logprob: -22.25
    8. 'I' → logprob: -22.6875
    9. '`' → logprob: -23.125
    10. '2' → logprob: -23.25

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -17.125
    4. ']' → logprob: -17.375
    5. '```' → logprob: -18.3125
    6. '۱' → logprob: -18.6875
    7. '１' → logprob: -18.8125
    8. '2' → logprob: -19.4375
    9. '১' → logprob: -19.5625
    10. '१' → logprob: -19.625

Token 614: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.8325677703833207e-05
    2. ' ]' → logprob: -11.000028610229492
    3. ']=' → logprob: -11.375028610229492
    4. '=' → logprob: -15.625028610229492
    5. ']
' → logprob: -17.625028610229492
    6. ')' → logprob: -18.375028610229492
    7. ']

' → logprob: -19.125028610229492
    8. '']' → logprob: -19.750028610229492
    9. '],' → logprob: -20.000028610229492
    10. ' =' → logprob: -20.125028610229492

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021228343248367
    2. ' =' → logprob: -2.350212335586548
    3. ',' → logprob: -12.975212097167969
    4. ']' → logprob: -13.475212097167969
    5. ')' → logprob: -14.475212097167969
    6. ' ' → logprob: -14.600212097167969
    7. ']=' → logprob: -15.350212097167969
    8. '=

' → logprob: -15.475212097167969
    9. ')=' → logprob: -15.850212097167969
    10. ' *=' → logprob: -16.35021209716797

Token 616: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.157039049663581e-05
    2. ' i' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.750051498413086
    4. '	i' → logprob: -17.500051498413086
    5. '   ' → logprob: -19.125051498413086
    6. 'I' → logprob: -19.500051498413086
    7. '<|end|>' → logprob: -19.750051498413086
    8. '[i' → logprob: -20.375051498413086
    9. '(i' → logprob: -20.375051498413086
    10. '  ' → logprob: -20.500051498413086

Token 617: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6808105707168579
    2. 'for' → logprob: -1.180810570716858
    3. '#' → logprob: -1.680810570716858
    4. '```' → logprob: -8.430810928344727
    5. 'n' → logprob: -9.180810928344727
    6. 'C' → logprob: -9.930810928344727
    7. ')' → logprob: -10.055810928344727
    8. '<|end|>' → logprob: -10.805810928344727
    9. ' for' → logprob: -11.180810928344727
    10. 'N' → logprob: -11.180810928344727

Token 619: ' Tro' (ID: 29037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28340423107147217
    2. 'for' → logprob: -1.4084042310714722
    3. '#' → logprob: -6.158404350280762
    4. 'C' → logprob: -9.908404350280762
    5. '```' → logprob: -10.908404350280762
    6. 'if' → logprob: -11.158404350280762
    7. 'result' → logprob: -11.283404350280762
    8. ' for' → logprob: -11.408404350280762
    9. 'n' → logprob: -12.533404350280762
    10. 'A' → logprob: -12.658404350280762

Token 620: 'isième' (ID: 70717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6365679502487183
    2. 't' → logprob: -1.5115679502487183
    3. '#' → logprob: -2.761568069458008
    4. 'def' → logprob: -3.011568069458008
    5. 'isième' → logprob: -3.136568069458008
    6. 'ti' → logprob: -3.386568069458008
    7. 'ur' → logprob: -4.136568069458008
    8. 'r' → logprob: -4.886568069458008
    9. 'i' → logprob: -5.261568069458008
    10. 'de' → logprob: -6.136568069458008

Token 621: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01949119195342064
    2. ' for' → logprob: -5.144491195678711
    3. ' boucle' → logprob: -5.269491195678711
    4. 'loop' → logprob: -5.519491195678711
    5. 'bou' → logprob: -5.644491195678711
    6. ' loop' → logprob: -7.519491195678711
    7. '
' → logprob: -8.894491195678711
    8. 'range' → logprob: -10.519491195678711
    9. '#' → logprob: -10.769491195678711
    10. 'b' → logprob: -10.894491195678711

Token 622: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.080963092041202e-06
    2. ' for' → logprob: -13.000004768371582
    3. '```' → logprob: -13.125004768371582
    4. 'n' → logprob: -14.500004768371582
    5. '
' → logprob: -15.500004768371582
    6. 'range' → logprob: -18.3750057220459
    7. ')' → logprob: -19.0000057220459
    8. '	for' → logprob: -19.5000057220459
    9. '﻿' → logprob: -19.8750057220459
    10. 'in' → logprob: -20.0000057220459

Token 623: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.0
    3. '```' → logprob: -16.125
    4. '
' → logprob: -19.0
    5. 'range' → logprob: -19.25
    6. ')' → logprob: -20.125
    7. 'R' → logprob: -20.375
    8. 'n' → logprob: -20.625
    9. '	for' → logprob: -21.375
    10. '(' → logprob: -21.625

Token 624: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026016131043434143
    2. 'R' → logprob: -4.0260162353515625
    3. 'r' → logprob: -5.4010162353515625
    4. ' n' → logprob: -6.6510162353515625
    5. '_' → logprob: -7.1510162353515625
    6. 'range' → logprob: -7.9010162353515625
    7. 'i' → logprob: -8.026016235351562
    8. 'k' → logprob: -8.651016235351562
    9. 'a' → logprob: -9.276016235351562
    10. 'z' → logprob: -9.526016235351562

Token 625: ' calcul' (ID: 7559)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11663070321083069
    2. 'i' → logprob: -2.991630792617798
    3. 'k' → logprob: -3.241630792617798
    4. 'a' → logprob: -5.116630554199219
    5. 'r' → logprob: -5.366630554199219
    6. 'x' → logprob: -5.366630554199219
    7. 's' → logprob: -6.866630554199219
    8. 'R' → logprob: -7.116630554199219
    9. 'range' → logprob: -7.366630554199219
    10. 'c' → logprob: -7.491630554199219

Token 626: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2193732112646103
    2. 'n' → logprob: -1.8443732261657715
    3. 'k' → logprob: -3.9693732261657715
    4. 'i' → logprob: -4.5943732261657715
    5. ' for' → logprob: -5.3443732261657715
    6. 'r' → logprob: -6.3443732261657715
    7. 'a' → logprob: -6.4693732261657715
    8. '_' → logprob: -7.8443732261657715
    9. 'range' → logprob: -7.8443732261657715
    10. 'x' → logprob: -8.094372749328613

Token 627: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2842499911785126
    2. 'k' → logprob: -2.409250020980835
    3. 'a' → logprob: -2.659250020980835
    4. 'x' → logprob: -3.784250020980835
    5. 'r' → logprob: -4.159249782562256
    6. 'R' → logprob: -4.284249782562256
    7. 'i' → logprob: -4.534249782562256
    8. 'range' → logprob: -5.034249782562256
    9. 'b' → logprob: -5.659249782562256
    10. 'c' → logprob: -5.909249782562256

Token 628: ' somme' (ID: 64484)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7293714880943298
    2. 'range' → logprob: -0.9793714880943298
    3. 'n' → logprob: -2.3543715476989746
    4. 'r' → logprob: -4.104371547698975
    5. 'for' → logprob: -4.104371547698975
    6. 'i' → logprob: -5.854371547698975
    7. 'N' → logprob: -6.104371547698975
    8. 'z' → logprob: -6.229371547698975
    9. 'k' → logprob: -6.229371547698975
    10. 'x' → logprob: -6.604371547698975

Token 629: ' finale' (ID: 37759)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014101565815508366
    2. 'R' → logprob: -4.514101505279541
    3. 'n' → logprob: -6.639101505279541
    4. 'range' → logprob: -7.764101505279541
    5. ' for' → logprob: -8.1391019821167
    6. 'in' → logprob: -8.1391019821167
    7. 'A' → logprob: -8.1391019821167
    8. '_' → logprob: -9.2641019821167
    9. 'N' → logprob: -9.2641019821167
    10. 'r' → logprob: -10.1391019821167

Token 630: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.0722858102526516e-05
    2. ' for' → logprob: -10.375041007995605
    3. 'n' → logprob: -12.250041007995605
    4. 'R' → logprob: -12.625041007995605
    5. '_' → logprob: -14.625041007995605
    6. 'in' → logprob: -15.375041007995605
    7. 'range' → logprob: -15.375041007995605
    8. '
' → logprob: -15.750041007995605
    9. 'P' → logprob: -15.875041007995605
    10. '```' → logprob: -16.50004005432129

Token 631: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. 'n' → logprob: -14.500000953674316
    3. ' for' → logprob: -14.750000953674316
    4. 'r' → logprob: -15.375000953674316
    5. 'R' → logprob: -16.500001907348633
    6. 'k' → logprob: -17.250001907348633
    7. 'i' → logprob: -17.500001907348633
    8. 'a' → logprob: -18.500001907348633
    9. '	for' → logprob: -18.625001907348633
    10. 'f' → logprob: -19.375001907348633

Token 632: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.7755875129951164e-05
    2. 'n' → logprob: -10.25004768371582
    3. 'r' → logprob: -12.25004768371582
    4. ' for' → logprob: -12.37504768371582
    5. 'i' → logprob: -13.50004768371582
    6. 'k' → logprob: -14.00004768371582
    7. '_' → logprob: -14.87504768371582
    8. 'R' → logprob: -15.12504768371582
    9. 'a' → logprob: -15.25004768371582
    10. 'range' → logprob: -16.62504768371582

Token 633: '(A' (ID: 10706)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27110743522644043
    2. 'A' → logprob: -2.6461074352264404
    3. '_val' → logprob: -2.7711074352264404
    4. '(' → logprob: -3.3961074352264404
    5. '_a' → logprob: -4.0211076736450195
    6. '_range' → logprob: -4.2711076736450195
    7. '(A' → logprob: -4.6461076736450195
    8. '_A' → logprob: -4.7711076736450195
    9. '_r' → logprob: -6.1461076736450195
    10. '_n' → logprob: -6.3961076736450195

Token 634: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027852261438965797
    2. '(B' → logprob: -4.6528520584106445
    3. '(' → logprob: -5.0278520584106445
    4. '(A' → logprob: -5.4028520584106445
    5. ' ,' → logprob: -5.7778520584106445
    6. ',B' → logprob: -6.0278520584106445
    7. '+' → logprob: -7.7778520584106445
    8. 'B' → logprob: -8.277852058410645
    9. ',A' → logprob: -8.527852058410645
    10. '(min' → logprob: -9.277852058410645

Token 635: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36744892597198486
    2. 'B' → logprob: -1.2424489259719849
    3. ',B' → logprob: -4.367448806762695
    4. ' ,' → logprob: -5.617448806762695
    5. '1' → logprob: -6.992448806762695
    6. '(' → logprob: -7.117448806762695
    7. '(B' → logprob: -7.742448806762695
    8. ' B' → logprob: -9.117448806762695
    9. ')' → logprob: -9.617448806762695
    10. ' ' → logprob: -9.992448806762695

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008042682893574238
    2. ' ,' → logprob: -8.12580394744873
    3. ',A' → logprob: -8.50080394744873
    4. ')' → logprob: -9.37580394744873
    5. '(),' → logprob: -9.50080394744873
    6. ',B' → logprob: -9.87580394744873
    7. ',min' → logprob: -10.87580394744873
    8. '(' → logprob: -11.12580394744873
    9. '(A' → logprob: -11.25080394744873
    10. 'A' → logprob: -11.62580394744873

Token 637: ' N' (ID: 478)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.015387294813990593
    2. ' B' → logprob: -4.265387058258057
    3. 'min' → logprob: -6.765387058258057
    4. ' min' → logprob: -9.765387535095215
    5. '(B' → logprob: -12.640387535095215
    6. ')' → logprob: -12.890387535095215
    7. ' ' → logprob: -13.140387535095215
    8. 'N' → logprob: -13.765387535095215
    9. '(min' → logprob: -13.890387535095215
    10. ',' → logprob: -14.640387535095215

Token 638: '-B' (ID: 8287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5686749815940857
    2. ',' → logprob: -1.0686750411987305
    3. ' +' → logprob: -2.4436750411987305
    4. ')' → logprob: -6.1936750411987305
    5. ' ,' → logprob: -7.5686750411987305
    6. 'B' → logprob: -8.44367504119873
    7. '),' → logprob: -8.94367504119873
    8. '+B' → logprob: -9.44367504119873
    9. ')+' → logprob: -9.69367504119873
    10. ',B' → logprob: -9.81867504119873

Token 639: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14074769616127014
    2. ')' → logprob: -2.7657477855682373
    3. ' +' → logprob: -3.2657477855682373
    4. '()+' → logprob: -3.8907477855682373
    5. '()' → logprob: -4.890747547149658
    6. ')+' → logprob: -6.890747547149658
    7. '):' → logprob: -7.765747547149658
    8. '())' → logprob: -8.515748023986816
    9. ' ' → logprob: -8.640748023986816
    10. '   ' → logprob: -9.390748023986816

Token 640: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020589066669344902
    2. ' for' → logprob: -4.6455888748168945
    3. 'min' → logprob: -6.0205888748168945
    4. 'k' → logprob: -6.6455888748168945
    5. 'in' → logprob: -6.8955888748168945
    6. 'L' → logprob: -7.1455888748168945
    7. '(' → logprob: -7.3955888748168945
    8. 'K' → logprob: -7.7705888748168945
    9. 'R' → logprob: -7.7705888748168945
    10. 't' → logprob: -7.7705888748168945

Token 641: 'ule' (ID: 1601)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4942042827606201
    2. '=min' → logprob: -1.8692042827606201
    3. ' =' → logprob: -2.49420428276062
    4. 'ule' → logprob: -2.61920428276062
    5. '(' → logprob: -3.61920428276062
    6. '(min' → logprob: -3.86920428276062
    7. 'min' → logprob: -3.99420428276062
    8. ' min' → logprob: -4.869204521179199
    9. ')' → logprob: -6.744204521179199
    10. '()' → logprob: -6.869204521179199

Token 642: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3564325273036957
    2. '(min' → logprob: -1.231432557106018
    3. '(' → logprob: -5.3564324378967285
    4. '(A' → logprob: -7.6064324378967285
    5. '(R' → logprob: -7.8564324378967285
    6. '=min' → logprob: -7.9814324378967285
    7. ' min' → logprob: -8.231432914733887
    8. 'range' → logprob: -8.356432914733887
    9. '=' → logprob: -8.606432914733887
    10. ' =' → logprob: -8.606432914733887

Token 643: ' borne' (ID: 111819)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.030268507078289986
    2. ' min' → logprob: -3.530268430709839
    3. '(min' → logprob: -7.655268669128418
    4. ')' → logprob: -10.530268669128418
    5. '1' → logprob: -12.155268669128418
    6. '
' → logprob: -12.655268669128418
    7. 'max' → logprob: -13.280268669128418
    8. '(' → logprob: -13.405268669128418
    9. ' ' → logprob: -13.905268669128418
    10. '	min' → logprob: -14.030268669128418

Token 644: ' supérieure' (ID: 106336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7191385626792908
    2. '=' → logprob: -2.5941386222839355
    3. '_' → logprob: -2.7191386222839355
    4. '(' → logprob: -2.8441386222839355
    5. 'lim' → logprob: -2.9691386222839355
    6. 'for' → logprob: -3.5941386222839355
    7. 'limit' → logprob: -3.5941386222839355
    8. 'max' → logprob: -3.5941386222839355
    9. 's' → logprob: -3.7191386222839355
    10. 'd' → logprob: -3.8441386222839355

Token 645: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4093678295612335
    2. '(' → logprob: -2.659367799758911
    3. ' =' → logprob: -3.159367799758911
    4. '(
' → logprob: -3.159367799758911
    5. 'limit' → logprob: -3.784367799758911
    6. 's' → logprob: -4.03436803817749
    7. 'k' → logprob: -4.15936803817749
    8. '=' → logprob: -4.40936803817749
    9. 'L' → logprob: -4.53436803817749
    10. 'K' → logprob: -4.65936803817749

Token 646: ' la' (ID: 557)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7149590849876404
    2. 'min' → logprob: -0.9649590849876404
    3. 'range' → logprob: -3.089959144592285
    4. ' R' → logprob: -3.339959144592285
    5. ' min' → logprob: -4.214959144592285
    6. 'k' → logprob: -4.839959144592285
    7. ' range' → logprob: -4.964959144592285
    8. 'i' → logprob: -5.714959144592285
    9. 'la' → logprob: -6.339959144592285
    10. '(min' → logprob: -6.589959144592285

Token 647: ' boucle' (ID: 174211)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17028707265853882
    2. 'range' → logprob: -2.6702871322631836
    3. 'for' → logprob: -3.0452871322631836
    4. ')' → logprob: -4.795287132263184
    5. '(min' → logprob: -4.795287132263184
    6. 'R' → logprob: -5.045287132263184
    7. '+' → logprob: -5.795287132263184
    8. ' min' → logprob: -6.170287132263184
    9. 'z' → logprob: -6.295287132263184
    10. ' range' → logprob: -6.420287132263184

Token 648: ' selon' (ID: 27571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026833757292479277
    2. 'L' → logprob: -7.627683162689209
    3. 'k' → logprob: -7.627683162689209
    4. 's' → logprob: -7.877683162689209
    5. ' for' → logprob: -8.002683639526367
    6. 'q' → logprob: -9.377683639526367
    7. 'K' → logprob: -9.377683639526367
    8. 'r' → logprob: -9.377683639526367
    9. 'lim' → logprob: -9.502683639526367
    10. 't' → logprob: -9.627683639526367

Token 649: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02070806361734867
    2. ' min' → logprob: -4.020708084106445
    3. '(min' → logprob: -6.270708084106445
    4. 'R' → logprob: -7.770708084106445
    5. 'range' → logprob: -9.270708084106445
    6. ' R' → logprob: -9.645708084106445
    7. 'A' → logprob: -11.145708084106445
    8. '(R' → logprob: -11.270708084106445
    9. ' range' → logprob: -11.895708084106445
    10. ' ' → logprob: -12.020708084106445

Token 650: ' logique' (ID: 115350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006289822049438953
    2. 'range' → logprob: -5.506289958953857
    3. '1' → logprob: -7.131289958953857
    4. '(min' → logprob: -7.631289958953857
    5. ' min' → logprob: -8.0062894821167
    6. '
' → logprob: -8.8812894821167
    7. '+' → logprob: -9.0062894821167
    8. 'R' → logprob: -9.7562894821167
    9. '=min' → logprob: -9.8812894821167
    10. '```' → logprob: -10.3812894821167

Token 651: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8824634552001953
    2. '(R' → logprob: -1.3824634552001953
    3. '(min' → logprob: -1.5074634552001953
    4. 'for' → logprob: -2.5074634552001953
    5. '(A' → logprob: -5.257463455200195
    6. 'min' → logprob: -5.257463455200195
    7. ' (' → logprob: -5.632463455200195
    8. '(
' → logprob: -5.757463455200195
    9. '((' → logprob: -6.132463455200195
    10. ' for' → logprob: -6.257463455200195

Token 652: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.015134656801819801
    2. ' min' → logprob: -4.515134811401367
    3. 'R' → logprob: -5.765134811401367
    4. 'range' → logprob: -7.640134811401367
    5. '(min' → logprob: -8.390134811401367
    6. ' R' → logprob: -8.765134811401367
    7. ' range' → logprob: -10.515134811401367
    8. 'A' → logprob: -11.515134811401367
    9. 'max' → logprob: -11.640134811401367
    10. 'r' → logprob: -12.015134811401367

Token 653: ''' (ID: 6)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.9991152882575989
    2. 'e' → logprob: -1.999115228652954
    3. 'imité' → logprob: -1.999115228652954
    4. 'a' → logprob: -2.374115228652954
    5. 'range' → logprob: -2.374115228652954
    6. 'imit' → logprob: -2.624115228652954
    7. 'min' → logprob: -3.874115228652954
    8. 'en' → logprob: -4.124115467071533
    9. 'imited' → logprob: -4.499115467071533
    10. 'og' → logprob: -4.999115467071533

Token 654: 'alg' (ID: 15258)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3151405453681946
    2. 'for' → logprob: -1.9401404857635498
    3. 'min' → logprob: -2.31514048576355
    4. 'interval' → logprob: -5.065140724182129
    5. '`' → logprob: -5.565140724182129
    6. 'minimum' → logprob: -5.565140724182129
    7. 'i' → logprob: -6.440140724182129
    8. 'a' → logprob: -6.690140724182129
    9. 'indice' → logprob: -6.815140724182129
    10. ' range' → logprob: -6.940140724182129

Token 655: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -1.2509552240371704
    2. 'e' → logprob: -1.5009552240371704
    3. 'or' → logprob: -1.6259552240371704
    4. 'range' → logprob: -2.125955104827881
    5. 'o' → logprob: -2.250955104827881
    6. 'orithm' → logprob: -3.750955104827881
    7. '```' → logprob: -3.875955104827881
    8. 'orit' → logprob: -5.250955104827881
    9. '#' → logprob: -5.500955104827881
    10. '(range' → logprob: -6.375955104827881

Token 656: 'me' (ID: 1047)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8872353434562683
    2. 'ie' → logprob: -1.387235403060913
    3. 'm' → logprob: -2.012235403060913
    4. 't' → logprob: -3.262235403060913
    5. '(P' → logprob: -3.387235403060913
    6. 'y' → logprob: -4.012235164642334
    7. 'e' → logprob: -4.137235164642334
    8. 'n' → logprob: -4.387235164642334
    9. '1' → logprob: -4.387235164642334
    10. 'min' → logprob: -4.887235164642334

Token 657: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002104817656800151
    2. ' for' → logprob: -7.377104759216309
    3. '
' → logprob: -7.877104759216309
    4. 's' → logprob: -8.377104759216309
    5. 'k' → logprob: -8.502104759216309
    6. 't' → logprob: -9.252104759216309
    7. 'L' → logprob: -9.377104759216309
    8. 'r' → logprob: -9.502104759216309
    9. 'R' → logprob: -9.752104759216309
    10. 'i' → logprob: -10.252104759216309

Token 658: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3967762589454651
    2. 'min' → logprob: -1.7717761993408203
    3. 'i' → logprob: -2.8967761993408203
    4. ' for' → logprob: -3.7717761993408203
    5. 'k' → logprob: -3.8967761993408203
    6. '_' → logprob: -4.02177619934082
    7. 'R' → logprob: -4.77177619934082
    8. 'range' → logprob: -4.89677619934082
    9. 't' → logprob: -5.52177619934082
    10. ' min' → logprob: -5.64677619934082

Token 659: ' mais' (ID: 2899)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4961183965206146
    2. 'for' → logprob: -1.746118426322937
    3. 'R' → logprob: -3.1211183071136475
    4. ' min' → logprob: -3.2461183071136475
    5. 'i' → logprob: -3.3711183071136475
    6. ' for' → logprob: -3.6211183071136475
    7. ')' → logprob: -4.246118545532227
    8. 'range' → logprob: -4.371118545532227
    9. ' R' → logprob: -4.621118545532227
    10. '_' → logprob: -5.246118545532227

Token 660: ' si' (ID: 1784)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.44289258122444153
    2. ' min' → logprob: -1.5678925514221191
    3. 'range' → logprob: -3.192892551422119
    4. 'R' → logprob: -3.442892551422119
    5. 'for' → logprob: -3.942892551422119
    6. ' range' → logprob: -4.567892551422119
    7. 'i' → logprob: -4.817892551422119
    8. ' R' → logprob: -5.067892551422119
    9. '_' → logprob: -5.067892551422119
    10. ' for' → logprob: -5.317892551422119

Token 661: ' N' (ID: 478)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7776505351066589
    2. ' min' → logprob: -1.4026505947113037
    3. 'A' → logprob: -2.1526505947113037
    4. ' A' → logprob: -2.5276505947113037
    5. ' N' → logprob: -3.7776505947113037
    6. 'N' → logprob: -4.152650356292725
    7. 'B' → logprob: -4.527650356292725
    8. ' (' → logprob: -4.527650356292725
    9. ' B' → logprob: -4.652650356292725
    10. '(A' → logprob: -5.152650356292725

Token 662: '-B' (ID: 8287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0973477363586426
    2. '-B' → logprob: -1.4723477363586426
    3. 'B' → logprob: -2.0973477363586426
    4. '-' → logprob: -2.4723477363586426
    5. 'A' → logprob: -3.2223477363586426
    6. ' -' → logprob: -3.2223477363586426
    7. '=' → logprob: -3.2223477363586426
    8. ' =' → logprob: -4.222347736358643
    9. 'min' → logprob: -4.347347736358643
    10. ' +' → logprob: -4.847347736358643

Token 663: '-A' (ID: 9406)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4092709422111511
    2. ')' → logprob: -2.034271001815796
    3. '>' → logprob: -2.534271001815796
    4. '=' → logprob: -3.784271001815796
    5. '-' → logprob: -3.909271001815796
    6. ' +' → logprob: -4.784270763397217
    7. ' <' → logprob: -4.784270763397217
    8. '==' → logprob: -4.909270763397217
    9. '>=' → logprob: -4.909270763397217
    10. ' >' → logprob: -5.284270763397217

Token 664: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4237421154975891
    2. '<=' → logprob: -2.2987420558929443
    3. ' <=' → logprob: -2.9237420558929443
    4. '<' → logprob: -2.9237420558929443
    5. '>' → logprob: -3.0487420558929443
    6. '-' → logprob: -3.2987420558929443
    7. ' <' → logprob: -3.4237420558929443
    8. ')' → logprob: -5.048742294311523
    9. ' >' → logprob: -5.173742294311523
    10. ' +' → logprob: -5.923742294311523

Token 665: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1477479636669159
    2. ' ' → logprob: -2.2727479934692383
    3. ' min' → logprob: -4.522747993469238
    4. 'min' → logprob: -4.647747993469238
    5. '1' → logprob: -5.147747993469238
    6. ' A' → logprob: -6.272747993469238
    7. 'A' → logprob: -6.397747993469238
    8. '-' → logprob: -7.022747993469238
    9. ' N' → logprob: -7.522747993469238
    10. ' -' → logprob: -7.772747993469238

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018841557204723358
    2. '1' → logprob: -4.893841743469238
    3. 'A' → logprob: -5.893841743469238
    4. ' ' → logprob: -5.893841743469238
    5. 'min' → logprob: -6.143841743469238
    6. '-' → logprob: -6.393841743469238
    7. 'N' → logprob: -7.643841743469238
    8. '=' → logprob: -8.643841743469238
    9. 'B' → logprob: -8.768841743469238
    10. '2' → logprob: -9.268841743469238

Token 667: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6246243715286255
    2. '+' → logprob: -1.2496243715286255
    3. 'if' → logprob: -2.499624252319336
    4. ' +' → logprob: -3.624624252319336
    5. 'for' → logprob: -3.624624252319336
    6. '):' → logprob: -4.374624252319336
    7. ')' → logprob: -4.749624252319336
    8. ' if' → logprob: -5.374624252319336
    9. ' for' → logprob: -5.999624252319336
    10. ' ' → logprob: -5.999624252319336

Token 668: 'équ' (ID: 99214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8070183396339417
    2. ')' → logprob: -2.307018280029297
    3. ' for' → logprob: -2.432018280029297
    4. 'if' → logprob: -2.557018280029297
    5. '+' → logprob: -3.182018280029297
    6. '):' → logprob: -3.557018280029297
    7. 'R' → logprob: -3.682018280029297
    8. '
' → logprob: -4.057018280029297
    9. 'min' → logprob: -4.057018280029297
    10. 'i' → logprob: -4.182018280029297

Token 669: 'ivalent' (ID: 19253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8824383616447449
    2. ')' → logprob: -2.2574384212493896
    3. '0' → logprob: -2.3824384212493896
    4. 'al' → logprob: -3.0074384212493896
    5. 'a' → logprob: -3.0074384212493896
    6. 'A' → logprob: -3.2574384212493896
    7. '```' → logprob: -3.3824384212493896
    8. '#' → logprob: -3.7574384212493896
    9. 'ale' → logprob: -3.7574384212493896
    10. 'and' → logprob: -3.8824384212493896

Token 670: ' à' (ID: 1221)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1844358444213867
    2. ' to' → logprob: -1.6844358444213867
    3. '):' → logprob: -2.0594358444213867
    4. 'to' → logprob: -2.1844358444213867
    5. ')' → logprob: -2.8094358444213867
    6. ' à' → logprob: -2.9344358444213867
    7. ':' → logprob: -3.0594358444213867
    8. 'à' → logprob: -3.9344358444213867
    9. 'if' → logprob: -4.059435844421387
    10. ' or' → logprob: -4.184435844421387

Token 671: ' N' (ID: 478)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5495455861091614
    2. '0' → logprob: -1.0495455265045166
    3. 'A' → logprob: -3.0495455265045166
    4. ' min' → logprob: -4.674545764923096
    5. 'N' → logprob: -4.924545764923096
    6. '(min' → logprob: -6.299545764923096
    7. 'B' → logprob: -6.549545764923096
    8. ' ' → logprob: -6.549545764923096
    9. '(A' → logprob: -6.674545764923096
    10. ' A' → logprob: -7.674545764923096

Token 672: '-B' (ID: 8287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06362872570753098
    2. ' +' → logprob: -4.063628673553467
    3. 'for' → logprob: -4.313628673553467
    4. '(' → logprob: -5.063628673553467
    5. 'A' → logprob: -5.938628673553467
    6. ',' → logprob: -6.063628673553467
    7. ')' → logprob: -6.063628673553467
    8. 'range' → logprob: -6.188628673553467
    9. '1' → logprob: -6.438628673553467
    10. '(A' → logprob: -6.563628673553467

Token 673: '-A' (ID: 9406)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05125284194946289
    2. '-' → logprob: -3.926252841949463
    3. ' +' → logprob: -4.551252841949463
    4. ' -' → logprob: -4.926252841949463
    5. 'A' → logprob: -5.176252841949463
    6. '-A' → logprob: -5.676252841949463
    7. ',' → logprob: -6.926252841949463
    8. ')' → logprob: -7.051252841949463
    9. '+A' → logprob: -7.301252841949463
    10. '),' → logprob: -9.051252365112305

Token 674: ' étant' (ID: 47869)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11094937473535538
    2. ' +' → logprob: -2.7359492778778076
    3. '):' → logprob: -3.9859492778778076
    4. 'for' → logprob: -4.860949516296387
    5. '):
' → logprob: -5.985949516296387
    6. ')' → logprob: -6.110949516296387
    7. 'if' → logprob: -6.110949516296387
    8. ':' → logprob: -6.735949516296387
    9. '0' → logprob: -7.110949516296387
    10. '
' → logprob: -7.485949516296387

Token 675: ' faux' (ID: 58839)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008452449692413211
    2. ' ' → logprob: -7.750845432281494
    3. '1' → logprob: -8.500844955444336
    4. ')' → logprob: -9.250844955444336
    5. '=' → logprob: -10.000844955444336
    6. '-' → logprob: -10.750844955444336
    7. '```' → logprob: -10.750844955444336
    8. '<=' → logprob: -11.875844955444336
    9. 'min' → logprob: -12.000844955444336
    10. '>' → logprob: -13.250844955444336

Token 676: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7505160570144653
    2. ' or' → logprob: -1.2505160570144653
    3. ')' → logprob: -2.000515937805176
    4. '),' → logprob: -3.375515937805176
    5. '):
' → logprob: -3.625515937805176
    6. ':' → logprob: -3.750515937805176
    7. 'or' → logprob: -5.625515937805176
    8. '+' → logprob: -5.750515937805176
    9. ' if' → logprob: -5.750515937805176
    10. 'if' → logprob: -5.875515937805176

Token 677: ' alors' (ID: 17971)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.844389796257019
    2. 'for' → logprob: -1.344389796257019
    3. 'min' → logprob: -2.8443899154663086
    4. 'if' → logprob: -2.8443899154663086
    5. ' min' → logprob: -3.2193899154663086
    6. 'i' → logprob: -3.5943899154663086
    7. ' i' → logprob: -3.5943899154663086
    8. ' if' → logprob: -3.8443899154663086
    9. 'range' → logprob: -3.8443899154663086
    10. ' range' → logprob: -3.9693899154663086

Token 678: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16215646266937256
    2. 'R' → logprob: -3.162156581878662
    3. 'if' → logprob: -3.287156581878662
    4. 'min' → logprob: -3.912156581878662
    5. 'z' → logprob: -4.162156581878662
    6. ' for' → logprob: -5.037156581878662
    7. 'N' → logprob: -5.162156581878662
    8. 'True' → logprob: -5.662156581878662
    9. '0' → logprob: -5.912156581878662
    10. '(R' → logprob: -6.287156581878662

Token 679: ' plage' (ID: 78241)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8887279629707336
    2. 'for' → logprob: -1.0137279033660889
    3. 'max' → logprob: -2.388727903366089
    4. 'R' → logprob: -3.638727903366089
    5. 'range' → logprob: -3.888727903366089
    6. 'z' → logprob: -4.263728141784668
    7. '(min' → logprob: -4.513728141784668
    8. '0' → logprob: -4.763728141784668
    9. ' min' → logprob: -4.888728141784668
    10. '(R' → logprob: -5.138728141784668

Token 680: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4825488328933716
    2. '=' → logprob: -0.9825488328933716
    3. '(' → logprob: -4.982548713684082
    4. 'max' → logprob: -8.107548713684082
    5. 'min' → logprob: -8.357548713684082
    6. 'for' → logprob: -8.982548713684082
    7. '1' → logprob: -8.982548713684082
    8. ')' → logprob: -9.107548713684082
    9. ' ' → logprob: -9.357548713684082
    10. 's' → logprob: -9.732548713684082

Token 681: ' simplement' (ID: 45065)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8184114694595337
    2. '0' → logprob: -1.3184114694595337
    3. ' min' → logprob: -1.3184114694595337
    4. 'range' → logprob: -4.818411350250244
    5. ' range' → logprob: -5.568411350250244
    6. 'max' → logprob: -5.818411350250244
    7. ' ' → logprob: -5.818411350250244
    8. '1' → logprob: -6.068411350250244
    9. '(min' → logprob: -6.818411350250244
    10. '   ' → logprob: -7.443411350250244

Token 682: ' A' (ID: 355)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6834424734115601
    2. '0' → logprob: -0.9334424734115601
    3. 'range' → logprob: -2.8084425926208496
    4. '1' → logprob: -4.30844259262085
    5. ' min' → logprob: -4.55844259262085
    6. ' range' → logprob: -5.55844259262085
    7. 'R' → logprob: -5.68344259262085
    8. 'max' → logprob: -5.68344259262085
    9. '(min' → logprob: -6.05844259262085
    10. 'N' → logprob: -6.55844259262085

Token 683: '+' (ID: 10)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38989269733428955
    2. ' for' → logprob: -1.6398926973342896
    3. 'range' → logprob: -3.514892578125
    4. 'min' → logprob: -3.764892578125
    5. 'if' → logprob: -4.264892578125
    6. '
' → logprob: -4.764892578125
    7. '(' → logprob: -4.889892578125
    8. 'max' → logprob: -4.889892578125
    9. 'R' → logprob: -5.014892578125
    10. '(min' → logprob: -5.389892578125

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010426939697936177
    2. ' ' → logprob: -7.50104284286499
    3. '2' → logprob: -8.501042366027832
    4. '(' → logprob: -8.501042366027832
    5. '+' → logprob: -10.001042366027832
    6. '
' → logprob: -11.626042366027832
    7. '   ' → logprob: -11.751042366027832
    8. ' +' → logprob: -12.126042366027832
    9. ' (' → logprob: -12.251042366027832
    10. ')' → logprob: -13.501042366027832

Token 685: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024939194321632385
    2. 'min' → logprob: -4.024939060211182
    3. ' for' → logprob: -5.274939060211182
    4. 'k' → logprob: -7.899939060211182
    5. 'range' → logprob: -8.14993953704834
    6. 'R' → logprob: -8.89993953704834
    7. 'max' → logprob: -8.89993953704834
    8. 's' → logprob: -9.02493953704834
    9. 'l' → logprob: -9.39993953704834
    10. 't' → logprob: -9.39993953704834

Token 686: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005172681529074907
    2. 'max' → logprob: -7.1301727294921875
    3. 'k' → logprob: -7.3801727294921875
    4. 't' → logprob: -7.3801727294921875
    5. 's' → logprob: -7.3801727294921875
    6. 'l' → logprob: -7.7551727294921875
    7. 'c' → logprob: -8.005172729492188
    8. 'min' → logprob: -8.005172729492188
    9. 'x' → logprob: -8.380172729492188
    10. 'limit' → logprob: -8.755172729492188

Token 687: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7487175464630127
    2. 'i' → logprob: -1.1237175464630127
    3. ' k' → logprob: -2.4987175464630127
    4. 'k' → logprob: -2.8737175464630127
    5. ' x' → logprob: -3.8737175464630127
    6. 'x' → logprob: -3.9987175464630127
    7. 'a' → logprob: -5.623717308044434
    8. ' n' → logprob: -5.623717308044434
    9. ' s' → logprob: -5.748717308044434
    10. ' a' → logprob: -5.998717308044434

Token 688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11313501745462418
    2. 'in' → logprob: -2.2381350994110107
    3. ' ' → logprob: -8.36313533782959
    4. 'k' → logprob: -10.86313533782959
    5. '  ' → logprob: -11.23813533782959
    6. '	in' → logprob: -11.48813533782959
    7. 'n' → logprob: -11.73813533782959
    8. ' k' → logprob: -12.36313533782959
    9. ',' → logprob: -12.48813533782959
    10. '(' → logprob: -12.98813533782959

Token 689: ' R' (ID: 460)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2130991816520691
    2. 'range' → logprob: -2.463099241256714
    3. ' R' → logprob: -2.713099241256714
    4. 'R' → logprob: -3.213099241256714
    5. ' ' → logprob: -9.713099479675293
    6. '(range' → logprob: -9.838099479675293
    7. '0' → logprob: -10.838099479675293
    8. 'Range' → logprob: -10.963099479675293
    9. '(' → logprob: -11.963099479675293
    10. '	range' → logprob: -11.963099479675293

Token 690: '(min' (ID: 26035)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7652119398117065
    2. '(' → logprob: -1.0152119398117065
    3. '(min' → logprob: -1.7652119398117065
    4. '((' → logprob: -7.140212059020996
    5. '(
' → logprob: -8.640212059020996
    6. 'min' → logprob: -9.140212059020996
    7. '(max' → logprob: -9.515212059020996
    8. '0' → logprob: -9.890212059020996
    9. '(B' → logprob: -10.640212059020996
    10. 'A' → logprob: -10.890212059020996

Token 691: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0023603097070008516
    2. '(' → logprob: -6.1273603439331055
    3. '(
' → logprob: -8.752360343933105
    4. '((' → logprob: -11.877360343933105
    5. ' (' → logprob: -12.002360343933105
    6. 'A' → logprob: -12.752360343933105
    7. ',' → logprob: -15.002360343933105
    8. '(a' → logprob: -15.627360343933105
    9. '(

' → logprob: -15.752360343933105
    10. '(B' → logprob: -16.12735939025879

Token 692: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014676393941044807
    2. ' +' → logprob: -4.264676570892334
    3. ',' → logprob: -8.264676094055176
    4. '(' → logprob: -9.014676094055176
    5. '+,' → logprob: -9.764676094055176
    6. '()+' → logprob: -10.139676094055176
    7. '(+' → logprob: -12.139676094055176
    8. '+
' → logprob: -12.389676094055176
    9. ' ,' → logprob: -12.514676094055176
    10. '+k' → logprob: -12.514676094055176

Token 693: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004733433946967125
    2. ' ' → logprob: -5.754733562469482
    3. ',' → logprob: -6.629733562469482
    4. ' ,' → logprob: -9.504733085632324
    5. 'B' → logprob: -10.129733085632324
    6. '(' → logprob: -10.129733085632324
    7. 'k' → logprob: -11.129733085632324
    8. ' (' → logprob: -11.379733085632324
    9. '(B' → logprob: -11.379733085632324
    10. ' B' → logprob: -11.504733085632324

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009026610292494297
    2. 'B' → logprob: -5.134026527404785
    3. ',' → logprob: -6.509026527404785
    4. ' ' → logprob: -6.884026527404785
    5. '(' → logprob: -8.884026527404785
    6. ' B' → logprob: -9.134026527404785
    7. 'k' → logprob: -9.259026527404785
    8. '(B' → logprob: -9.634026527404785
    9. ' (' → logprob: -10.134026527404785
    10. ' ,' → logprob: -10.259026527404785

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -10.250059127807617
    3. ',
' → logprob: -11.250059127807617
    4. ',k' → logprob: -12.250059127807617
    5. ',min' → logprob: -12.875059127807617
    6. ',N' → logprob: -13.750059127807617
    7. ',

' → logprob: -14.250059127807617
    8. ',n' → logprob: -14.750059127807617
    9. ',#' → logprob: -15.375059127807617
    10. ',(' → logprob: -16.000059127807617

Token 696: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07891722023487091
    2. ' N' → logprob: -2.5789172649383545
    3. ' ' → logprob: -11.578917503356934
    4. ' (' → logprob: -11.578917503356934
    5. '(N' → logprob: -11.828917503356934
    6. ' ' → logprob: -14.828917503356934
    7. '(' → logprob: -15.453917503356934
    8. '	N' → logprob: -15.578917503356934
    9. '   ' → logprob: -15.828917503356934
    10. ',' → logprob: -16.078916549682617

Token 697: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8327328562736511
    2. '-B' → logprob: -0.9577328562736511
    3. '-' → logprob: -1.707732915878296
    4. ',' → logprob: -10.082733154296875
    5. '+' → logprob: -10.832733154296875
    6. ' ' → logprob: -10.957733154296875
    7. ' ,' → logprob: -12.207733154296875
    8. '-
' → logprob: -12.457733154296875
    9. ' minus' → logprob: -13.207733154296875
    10. '−' → logprob: -13.457733154296875

Token 698: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023178798437584192
    2. ' B' → logprob: -8.375231742858887
    3. '(B' → logprob: -14.000231742858887
    4. '	B' → logprob: -15.750231742858887
    5. ' ' → logprob: -16.250232696533203
    6. 'k' → logprob: -17.000232696533203
    7. '   ' → logprob: -17.750232696533203
    8. '(' → logprob: -18.625232696533203
    9. ' ' → logprob: -18.750232696533203
    10. 'b' → logprob: -18.875232696533203

Token 699: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0564323663711548
    2. ' +' → logprob: -1.0564323663711548
    3. '),' → logprob: -1.6814323663711548
    4. '):' → logprob: -3.0564322471618652
    5. ')' → logprob: -3.1814322471618652
    6. ')):' → logprob: -3.9314322471618652
    7. ')+' → logprob: -5.806432247161865
    8. ' if' → logprob: -6.181432247161865
    9. '   ' → logprob: -6.806432247161865
    10. 'if' → logprob: -7.181432247161865

Token 700: ' if' (ID: 538)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004857266612816602
    2. '):
' → logprob: -8.12548542022705
    3. '+' → logprob: -9.62548542022705
    4. ' ):' → logprob: -9.87548542022705
    5. ':' → logprob: -10.12548542022705
    6. ')' → logprob: -10.75048542022705
    7. '):
' → logprob: -13.12548542022705
    8. ')):' → logprob: -13.25048542022705
    9. ',' → logprob: -13.87548542022705
    10. ' +' → logprob: -13.87548542022705

Token 701: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1714400351047516
    2. ' N' → logprob: -2.4214401245117188
    3. '(N' → logprob: -3.0464401245117188
    4. ' (' → logprob: -4.171440124511719
    5. ' not' → logprob: -5.921440124511719
    6. 'not' → logprob: -7.046440124511719
    7. '(A' → logprob: -7.296440124511719
    8. '(' → logprob: -8.296440124511719
    9. 'min' → logprob: -8.421440124511719
    10. '(min' → logprob: -8.421440124511719

Token 702: ' -' (ID: 533)
  Prédit: '-B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.5648477673530579
    2. ' -' → logprob: -1.189847707748413
    3. '-' → logprob: -2.064847707748413
    4. '>=' → logprob: -9.564847946166992
    5. '-k' → logprob: -9.689847946166992
    6. '>' → logprob: -9.939847946166992
    7. '-b' → logprob: -9.939847946166992
    8. ' >=' → logprob: -10.064847946166992
    9. '-A' → logprob: -10.189847946166992
    10. '+' → logprob: -10.314847946166992

Token 703: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.4656579120783135e-05
    2. ' B' → logprob: -10.625044822692871
    3. 'A' → logprob: -11.375044822692871
    4. '(B' → logprob: -11.875044822692871
    5. 'k' → logprob: -14.125044822692871
    6. '(A' → logprob: -14.375044822692871
    7. ' ' → logprob: -15.250044822692871
    8. '	B' → logprob: -15.375044822692871
    9. '-B' → logprob: -16.625043869018555
    10. 'b' → logprob: -16.750043869018555

Token 704: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26099416613578796
    2. ' -' → logprob: -1.8859941959381104
    3. '>' → logprob: -2.8859941959381104
    4. '-A' → logprob: -4.635993957519531
    5. ' >' → logprob: -4.635993957519531
    6. ' ' → logprob: -7.260993957519531
    7. '>A' → logprob: -7.260993957519531
    8. 'A' → logprob: -7.760993957519531
    9. ' else' → logprob: -8.760993957519531
    10. '>=' → logprob: -9.010993957519531

Token 705: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003396343090571463
    2. ' A' → logprob: -8.00033950805664
    3. ' ' → logprob: -13.25033950805664
    4. '1' → logprob: -14.37533950805664
    5. '	A' → logprob: -14.75033950805664
    6. '>A' → logprob: -14.87533950805664
    7. 'k' → logprob: -15.00033950805664
    8. '
' → logprob: -15.87533950805664
    9. '0' → logprob: -16.12533950805664
    10. '   ' → logprob: -16.37533950805664

Token 706: ' else' (ID: 1203)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1706347465515137
    2. '>' → logprob: -1.4206347465515137
    3. ')' → logprob: -1.6706347465515137
    4. ' else' → logprob: -1.7956347465515137
    5. 'else' → logprob: -3.2956347465515137
    6. ' !=' → logprob: -4.670634746551514
    7. '!=' → logprob: -4.795634746551514
    8. ' ' → logprob: -5.170634746551514
    9. '==' → logprob: -5.295634746551514
    10. '+' → logprob: -5.420634746551514

Token 707: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14809641242027283
    2. ' A' → logprob: -2.0230963230133057
    3. '(A' → logprob: -5.398096561431885
    4. ' (' → logprob: -7.148096561431885
    5. '   ' → logprob: -9.898096084594727
    6. ' ' → logprob: -10.398096084594727
    7. '(' → logprob: -12.273096084594727
    8. '	A' → logprob: -12.898096084594727
    9. '1' → logprob: -13.148096084594727
    10. ' ' → logprob: -13.648096084594727

Token 708: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.632658839225769
    2. '+' → logprob: -0.757658839225769
    3. ' +
' → logprob: -10.632658958435059
    4. '+
' → logprob: -11.757658958435059
    5. ')' → logprob: -12.132658958435059
    6. ' ' → logprob: -12.382658958435059
    7. '()+' → logprob: -12.632658958435059
    8. '(' → logprob: -12.757658958435059
    9. ' plus' → logprob: -13.007658958435059
    10. ')+' → logprob: -13.132658958435059

Token 709: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '
' → logprob: -14.625008583068848
    4. '2' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.250009536743164
    6. '```' → logprob: -17.500009536743164
    7. '`' → logprob: -18.250009536743164
    8. '﻿' → logprob: -18.500009536743164
    9. '

' → logprob: -19.000009536743164
    10. '  ' → logprob: -19.000009536743164

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -15.750015258789062
    4. '2' → logprob: -16.250015258789062
    5. '   ' → logprob: -16.562515258789062
    6. '`' → logprob: -16.875015258789062
    7. '

' → logprob: -17.062515258789062
    8. '+' → logprob: -17.437515258789062
    9. '```' → logprob: -17.750015258789062
    10. ')' → logprob: -17.812515258789062

Token 711: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012439649435691535
    2. '):
' → logprob: -9.250123977661133
    3. ')' → logprob: -11.000123977661133
    4. ':' → logprob: -11.625123977661133
    5. ' ):' → logprob: -13.250123977661133
    6. '):
' → logprob: -15.375123977661133
    7. '():' → logprob: -15.500123977661133
    8. ')):' → logprob: -16.500123977661133
    9. ',' → logprob: -17.125123977661133
    10. '):

' → logprob: -17.250123977661133

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000785091076977551
    2. 'z' → logprob: -7.875784873962402
    3. '```' → logprob: -8.750784873962402
    4. ' z' → logprob: -9.625784873962402
    5. '    
' → logprob: -10.250784873962402
    6. 'f' → logprob: -10.750784873962402
    7. '#' → logprob: -10.875784873962402
    8. 'k' → logprob: -11.125784873962402
    9. 'n' → logprob: -11.625784873962402
    10. ' k' → logprob: -11.750784873962402

Token 713: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.1790778636932373
    2. 'c' → logprob: -1.6790778636932373
    3. 'C' → logprob: -1.8040778636932373
    4. 'comb' → logprob: -2.5540778636932373
    5. '   ' → logprob: -3.1790778636932373
    6. 't' → logprob: -3.1790778636932373
    7. 'tmp' → logprob: -3.4290778636932373
    8. 's' → logprob: -3.8040778636932373
    9. 'temp' → logprob: -3.9290778636932373
    10. 'f' → logprob: -4.179078102111816

Token 714: ' Q' (ID: 1486)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4831656217575073
    2. 'comb' → logprob: -1.9831656217575073
    3. 'C' → logprob: -2.733165740966797
    4. 'x' → logprob: -3.358165740966797
    5. 'val' → logprob: -3.733165740966797
    6. 'z' → logprob: -3.733165740966797
    7. '#' → logprob: -4.358165740966797
    8. 'num' → logprob: -4.358165740966797
    9. 'a' → logprob: -4.483165740966797
    10. 'tmp' → logprob: -4.983165740966797

Token 715: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42920833826065063
    2. '=' → logprob: -1.0542082786560059
    3. ' ' → logprob: -8.929208755493164
    4. 'k' → logprob: -9.179208755493164
    5. '=k' → logprob: -10.054208755493164
    6. ',' → logprob: -10.179208755493164
    7. '+=' → logprob: -11.179208755493164
    8. 'f' → logprob: -11.304208755493164
    9. '=
' → logprob: -11.304208755493164
    10. ' +=' → logprob: -11.429208755493164

Token 716: ' une' (ID: 2463)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02875995635986328
    2. '(F' → logprob: -3.7787599563598633
    3. 'k' → logprob: -6.653759956359863
    4. '(k' → logprob: -6.778759956359863
    5. '(' → logprob: -7.028759956359863
    6. ' F' → logprob: -7.528759956359863
    7. ' (' → logprob: -7.653759956359863
    8. '(N' → logprob: -8.653759956359863
    9. 'C' → logprob: -8.653759956359863
    10. '(I' → logprob: -8.903759956359863

Token 717: ' variable' (ID: 11076)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.497618705034256
    2. 'comb' → logprob: -2.3726186752319336
    3. 'k' → logprob: -2.7476186752319336
    4. '(' → logprob: -2.9976186752319336
    5. '(F' → logprob: -2.9976186752319336
    6. '(k' → logprob: -3.2476186752319336
    7. 'C' → logprob: -3.3726186752319336
    8. ' (' → logprob: -4.622618675231934
    9. '(
' → logprob: -4.997618675231934
    10. '((' → logprob: -5.122618675231934

Token 718: ' interm' (ID: 120489)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326730847358704
    2. ' =' → logprob: -0.7576730847358704
    3. '   ' → logprob: -10.882673263549805
    4. 'Q' → logprob: -11.507673263549805
    5. ' =
' → logprob: -11.632673263549805
    6. '=
' → logprob: -11.882673263549805
    7. ' ' → logprob: -12.132673263549805
    8. '<|end|>' → logprob: -12.382673263549805
    9. '=k' → logprob: -12.632673263549805
    10. 'k' → logprob: -12.882673263549805

Token 719: 'édiaire' (ID: 161555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3883918523788452
    2. '=' → logprob: -1.2633918523788452
    3. '   ' → logprob: -3.3883919715881348
    4. 'u' → logprob: -6.263391971588135
    5. '_' → logprob: -7.013391971588135
    6. ',' → logprob: -7.138391971588135
    7. ' ' → logprob: -8.013391494750977
    8. '  ' → logprob: -8.513391494750977
    9. '    ' → logprob: -8.638391494750977
    10. '[' → logprob: -9.138391494750977

Token 720: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10158801823854446
    2. '=' → logprob: -2.351588010787964
    3. '   ' → logprob: -6.976588249206543
    4. 'Q' → logprob: -8.351588249206543
    5. ' =
' → logprob: -9.601588249206543
    6. '=k' → logprob: -10.476588249206543
    7. ' ' → logprob: -10.976588249206543
    8. 'k' → logprob: -10.976588249206543
    9. ',' → logprob: -10.976588249206543
    10. ')' → logprob: -11.601588249206543

Token 721: ' dépend' (ID: 68660)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03246908634901047
    2. ' =' → logprob: -4.032469272613525
    3. '   ' → logprob: -5.282469272613525
    4. '#' → logprob: -6.407469272613525
    5. 'C' → logprob: -6.407469272613525
    6. 'Q' → logprob: -6.907469272613525
    7. 'k' → logprob: -7.032469272613525
    8. 'comb' → logprob: -7.157469272613525
    9. 'n' → logprob: -7.657469272613525
    10. 'F' → logprob: -7.782469272613525

Token 722: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.019391655921936
    2. '   ' → logprob: -1.144391655921936
    3. 'k' → logprob: -2.5193915367126465
    4. '#' → logprob: -3.1443915367126465
    5. ' k' → logprob: -3.2693915367126465
    6. '(' → logprob: -3.5193915367126465
    7. 's' → logprob: -3.6443915367126465
    8. 'on' → logprob: -4.1443915367126465
    9. ' =' → logprob: -4.3943915367126465
    10. '  ' → logprob: -4.6443915367126465

Token 723: ' N' (ID: 478)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.28407979011535645
    2. 'k' → logprob: -1.4090797901153564
    3. '(F' → logprob: -6.659079551696777
    4. 'N' → logprob: -7.659079551696777
    5. '(k' → logprob: -7.909079551696777
    6. '(' → logprob: -7.909079551696777
    7. '(
' → logprob: -8.659079551696777
    8. 'C' → logprob: -9.659079551696777
    9. 'A' → logprob: -9.784079551696777
    10. '(N' → logprob: -10.034079551696777

Token 724: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.132742166519165
    2. '   ' → logprob: -1.257742166519165
    3. '-' → logprob: -1.507742166519165
    4. ',' → logprob: -2.007742166519165
    5. '-k' → logprob: -3.757742166519165
    6. '#' → logprob: -5.757741928100586
    7. 'k' → logprob: -6.257741928100586
    8. ')' → logprob: -6.632741928100586
    9. '-B' → logprob: -6.632741928100586
    10. '+' → logprob: -6.757741928100586

Token 725: ' B' (ID: 418)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00016599490481894463
    2. ' k' → logprob: -9.750165939331055
    3. 'A' → logprob: -10.125165939331055
    4. 'P' → logprob: -11.000165939331055
    5. 'Q' → logprob: -11.125165939331055
    6. 'B' → logprob: -11.125165939331055
    7. 'N' → logprob: -11.500165939331055
    8. '
' → logprob: -13.250165939331055
    9. 'K' → logprob: -13.625165939331055
    10. 'M' → logprob: -13.625165939331055

Token 726: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7341260313987732
    2. ',' → logprob: -1.359126091003418
    3. '-' → logprob: -1.609126091003418
    4. '   ' → logprob: -3.234126091003418
    5. '-k' → logprob: -4.234126091003418
    6. ' ,' → logprob: -5.859126091003418
    7. ')' → logprob: -7.234126091003418
    8. '  ' → logprob: -7.234126091003418
    9. ',k' → logprob: -7.234126091003418
    10. '#' → logprob: -7.359126091003418

Token 727: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.796184723294573e-06
    2. ' k' → logprob: -12.750005722045898
    3. 'A' → logprob: -12.875005722045898
    4. '   ' → logprob: -16.1250057220459
    5. 'Q' → logprob: -16.7500057220459
    6. 'P' → logprob: -17.0000057220459
    7. 'C' → logprob: -17.2500057220459
    8. ' ' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. '_k' → logprob: -18.0000057220459

Token 728: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013389505445957184
    2. 'Q' → logprob: -4.513389587402344
    3. '=' → logprob: -6.638389587402344
    4. ' =' → logprob: -7.888389587402344
    5. '	Q' → logprob: -8.263389587402344
    6. ',' → logprob: -8.513389587402344
    7. ',Q' → logprob: -10.013389587402344
    8. '  ' → logprob: -10.638389587402344
    9. 'k' → logprob: -10.638389587402344
    10. ' Q' → logprob: -10.763389587402344

Token 729: ' utilisée' (ID: 106548)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.409464567899704
    2. '   ' → logprob: -1.1594645977020264
    3. ' Q' → logprob: -4.534464359283447
    4. 'n' → logprob: -5.659464359283447
    5. 'k' → logprob: -5.909464359283447
    6. 'q' → logprob: -6.159464359283447
    7. 'N' → logprob: -7.159464359283447
    8. 'C' → logprob: -7.909464359283447
    9. 'P' → logprob: -8.034464836120605
    10. ' ' → logprob: -8.534464836120605

Token 730: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014202055521309376
    2. '   ' → logprob: -4.764202117919922
    3. ' =' → logprob: -6.264202117919922
    4. '#' → logprob: -7.139202117919922
    5. '=
' → logprob: -7.139202117919922
    6. '(' → logprob: -7.764202117919922
    7. '  ' → logprob: -8.139202117919922
    8. '    ' → logprob: -8.514202117919922
    9. 'k' → logprob: -8.639202117919922
    10. '(
' → logprob: -9.014202117919922

Token 731: ' les' (ID: 1341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.1055331826210022
    2. 'Q' → logprob: -3.6055331230163574
    3. 'I' → logprob: -3.9805331230163574
    4. 'R' → logprob: -4.730533123016357
    5. 'N' → logprob: -4.855533123016357
    6. 'pow' → logprob: -4.855533123016357
    7. '(' → logprob: -4.980533123016357
    8. 'C' → logprob: -5.730533123016357
    9. 'k' → logprob: -5.980533123016357
    10. ' F' → logprob: -6.230533123016357

Token 732: ' calcul' (ID: 7559)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.1972895860671997
    2. 'F' → logprob: -1.8222895860671997
    3. 'range' → logprob: -1.8222895860671997
    4. 'C' → logprob: -2.07228946685791
    5. 'z' → logprob: -2.82228946685791
    6. '#' → logprob: -3.07228946685791
    7. 'comb' → logprob: -3.44728946685791
    8. 'k' → logprob: -3.57228946685791
    9. 'R' → logprob: -4.32228946685791
    10. 'for' → logprob: -4.32228946685791

Token 733: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6625107526779175
    2. 'ations' → logprob: -0.7875107526779175
    3. '#' → logprob: -4.537510871887207
    4. 'P' → logprob: -5.037510871887207
    5. 't' → logprob: -6.287510871887207
    6. ' =' → logprob: -6.912510871887207
    7. 'Q' → logprob: -7.037510871887207
    8. '=' → logprob: -7.037510871887207
    9. 'ation' → logprob: -7.162510871887207
    10. 'A' → logprob: -7.537510871887207

Token 734: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0831606462597847
    2. 'Q' → logprob: -2.708160638809204
    3. ' =' → logprob: -5.583160877227783
    4. '<|end|>' → logprob: -6.083160877227783
    5. '	Q' → logprob: -6.208160877227783
    6. ',' → logprob: -6.833160877227783
    7. '(Q' → logprob: -7.208160877227783
    8. 'k' → logprob: -7.333160877227783
    9. ',Q' → logprob: -7.333160877227783
    10. '=' → logprob: -7.333160877227783

Token 735: ' comb' (ID: 4134)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4059314727783203
    2. 'Q' → logprob: -1.4059314727783203
    3. 'q' → logprob: -3.7809314727783203
    4. 'z' → logprob: -4.03093147277832
    5. 'C' → logprob: -4.15593147277832
    6. 'comb' → logprob: -4.40593147277832
    7. 'P' → logprob: -5.15593147277832
    8. '(F' → logprob: -5.90593147277832
    9. 'k' → logprob: -6.28093147277832
    10. 'c' → logprob: -6.40593147277832

Token 736: 'inais' (ID: 42744)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3296297490596771
    2. 'ination' → logprob: -1.8296297788619995
    3. 'C' → logprob: -2.45462965965271
    4. 'inations' → logprob: -3.82962965965271
    5. 'k' → logprob: -5.954629898071289
    6. 'P' → logprob: -6.079629898071289
    7. 'z' → logprob: -6.204629898071289
    8. '   ' → logprob: -6.954629898071289
    9. '```' → logprob: -7.079629898071289
    10. 'ina' → logprob: -7.204629898071289

Token 737: 'ons' (ID: 1808)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.34224414825439453
    2. 'n' → logprob: -1.7172441482543945
    3. 'C' → logprob: -2.7172441482543945
    4. 'b' → logprob: -3.9672441482543945
    5. 'binations' → logprob: -4.8422441482543945
    6. 'bination' → logprob: -5.0922441482543945
    7. 'q' → logprob: -6.8422441482543945
    8. 'P' → logprob: -6.8422441482543945
    9. 'inations' → logprob: -6.8422441482543945
    10. 'z' → logprob: -7.0922441482543945

Token 738: '
' (ID: 198)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.0094521045684814
    2. '   ' → logprob: -1.1344521045684814
    3. ' =' → logprob: -1.3844521045684814
    4. '=' → logprob: -2.8844521045684814
    5. 'k' → logprob: -5.884451866149902
    6. '	Q' → logprob: -6.884451866149902
    7. '```' → logprob: -7.384451866149902
    8. ' Q' → logprob: -7.634451866149902
    9. ',Q' → logprob: -8.009451866149902
    10. ')' → logprob: -8.009451866149902

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28206145763397217
    2. 'Q' → logprob: -1.4070614576339722
    3. '```' → logprob: -7.532061576843262
    4. '	Q' → logprob: -9.032061576843262
    5. ' Q' → logprob: -9.532061576843262
    6. '(Q' → logprob: -9.782061576843262
    7. 'k' → logprob: -10.157061576843262
    8. 'P' → logprob: -11.032061576843262
    9. '[' → logprob: -11.532061576843262
    10. 'C' → logprob: -11.782061576843262

Token 740: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -8.44706009957008e-05
    2. 'N' → logprob: -10.75008487701416
    3. 'q' → logprob: -10.75008487701416
    4. 'k' → logprob: -10.87508487701416
    5. 'P' → logprob: -12.00008487701416
    6. '   ' → logprob: -12.50008487701416
    7. ' Q' → logprob: -12.50008487701416
    8. 'C' → logprob: -12.62508487701416
    9. 'n' → logprob: -12.87508487701416
    10. '#' → logprob: -14.62508487701416

Token 741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804286941885948
    2. ' =' → logprob: -3.2880427837371826
    3. ',' → logprob: -14.788043022155762
    4. '=N' → logprob: -14.913043022155762
    5. '=k' → logprob: -15.163043022155762
    6. '=
' → logprob: -15.288043022155762
    7. '＝' → logprob: -16.163042068481445
    8. ')' → logprob: -16.913042068481445
    9. '=

' → logprob: -17.038042068481445
    10. '=n' → logprob: -17.163042068481445

Token 742: ' N' (ID: 478)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.021630801260471344
    2. 'N' → logprob: -3.8966307640075684
    3. ' F' → logprob: -7.396630764007568
    4. 'P' → logprob: -8.771631240844727
    5. '(N' → logprob: -8.896631240844727
    6. ' N' → logprob: -9.771631240844727
    7. '(F' → logprob: -9.896631240844727
    8. 'C' → logprob: -10.646631240844727
    9. ' (' → logprob: -11.396631240844727
    10. 'M' → logprob: -11.396631240844727

Token 743: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02120070531964302
    2. ' -' → logprob: -4.146200656890869
    3. '-B' → logprob: -5.271200656890869
    4. ' ' → logprob: -12.521201133728027
    5. '+' → logprob: -12.896201133728027
    6. '-k' → logprob: -13.271201133728027
    7. 'B' → logprob: -13.521201133728027
    8. '-A' → logprob: -14.021201133728027
    9. '-Q' → logprob: -14.021201133728027
    10. ' ' → logprob: -14.271201133728027

Token 744: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.4418171455617994e-05
    2. '1' → logprob: -10.500044822692871
    3. 'k' → logprob: -11.375044822692871
    4. ' B' → logprob: -12.250044822692871
    5. 'A' → logprob: -15.250044822692871
    6. '(B' → logprob: -16.625043869018555
    7. '	B' → logprob: -17.000043869018555
    8. '   ' → logprob: -17.125043869018555
    9. '-B' → logprob: -17.375043869018555
    10. ' ' → logprob: -17.500043869018555

Token 745: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16408397257328033
    2. ' -' → logprob: -1.9140839576721191
    3. '-k' → logprob: -5.914083957672119
    4. '+' → logprob: -7.414083957672119
    5. '
' → logprob: -8.539084434509277
    6. ')' → logprob: -9.539084434509277
    7. '<|end|>' → logprob: -9.664084434509277
    8. ' +' → logprob: -9.914084434509277
    9. '   ' → logprob: -10.414084434509277
    10. 'k' → logprob: -10.664084434509277

Token 746: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. 'A' → logprob: -16.375
    3. ' k' → logprob: -16.75
    4. '1' → logprob: -19.25
    5. '-k' → logprob: -20.375
    6. '	k' → logprob: -20.75
    7. '
' → logprob: -22.0
    8. '_k' → logprob: -22.0
    9. ' ' → logprob: -22.25
    10. '(k' → logprob: -23.25

Token 747: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.665814995765686
    2. 'z' → logprob: -1.665814995765686
    3. 'C' → logprob: -1.790814995765686
    4. '#' → logprob: -2.9158148765563965
    5. '
' → logprob: -4.1658148765563965
    6. ')' → logprob: -4.6658148765563965
    7. '+' → logprob: -4.6658148765563965
    8. 'comb' → logprob: -4.6658148765563965
    9. 'for' → logprob: -5.0408148765563965
    10. '*' → logprob: -5.9158148765563965

Token 748: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00081796565791592
    2. 'A' → logprob: -7.125817775726318
    3. ' ' → logprob: -11.375818252563477
    4. '0' → logprob: -14.375818252563477
    5. '(A' → logprob: -14.625818252563477
    6. ' A' → logprob: -15.375818252563477
    7. '(' → logprob: -15.375818252563477
    8. '   ' → logprob: -15.375818252563477
    9. 'k' → logprob: -16.000818252563477
    10. '2' → logprob: -16.125818252563477

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. 'A' → logprob: -11.50001335144043
    3. ' ' → logprob: -12.87501335144043
    4. '0' → logprob: -15.62501335144043
    5. '   ' → logprob: -17.00001335144043
    6. '2' → logprob: -17.12501335144043
    7. '(' → logprob: -17.87501335144043
    8. '(A' → logprob: -18.25001335144043
    9. '-' → logprob: -18.87501335144043
    10. 'a' → logprob: -19.12501335144043

Token 750: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09558799117803574
    2. ')' → logprob: -3.095587968826294
    3. 'for' → logprob: -4.095588207244873
    4. '+' → logprob: -4.845588207244873
    5. 'z' → logprob: -4.970588207244873
    6. '*' → logprob: -5.345588207244873
    7. ' for' → logprob: -6.095588207244873
    8. '<|end|>' → logprob: -6.095588207244873
    9. '#' → logprob: -6.970588207244873
    10. ',' → logprob: -7.220588207244873

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06794518232345581
    2. 'z' → logprob: -3.4429452419281006
    3. 'if' → logprob: -3.9429452419281006
    4. 'C' → logprob: -5.4429450035095215
    5. '<|end|>' → logprob: -6.0679450035095215
    6. ')' → logprob: -6.1929450035095215
    7. 'for' → logprob: -6.3179450035095215
    8. ' if' → logprob: -7.6929450035095215
    9. 'c' → logprob: -7.6929450035095215
    10. '+' → logprob: -7.8179450035095215

Token 752: ' #' (ID: 1069)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.743431806564331
    2. 'z' → logprob: -1.743431806564331
    3. ')' → logprob: -2.493431806564331
    4. '   ' → logprob: -2.618431806564331
    5. 'if' → logprob: -2.743431806564331
    6. 'c' → logprob: -3.243431806564331
    7. 'for' → logprob: -3.743431806564331
    8. '#' (adapté à ' #') → logprob: -3.868431806564331
    9. 'Q' → logprob: -4.74343204498291
    10. 'k' → logprob: -5.11843204498291

Token 753: ' Calcul' (ID: 57243)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9457415342330933
    2. 'C' → logprob: -1.1957415342330933
    3. 'c' → logprob: -2.445741653442383
    4. 'x' → logprob: -2.945741653442383
    5. 'term' → logprob: -3.445741653442383
    6. 'val' → logprob: -3.695741653442383
    7. 'if' → logprob: -3.695741653442383
    8. 'z' → logprob: -3.945741653442383
    9. 'def' → logprob: -4.195741653442383
    10. 'temp' → logprob: -4.570741653442383

Token 754: ' du' (ID: 1462)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7164555191993713
    2. '=' → logprob: -1.9664554595947266
    3. '   ' → logprob: -2.3414554595947266
    4. ' =' → logprob: -2.3414554595947266
    5. 'comb' → logprob: -2.5914554595947266
    6. 'z' → logprob: -2.7164554595947266
    7. 'c' → logprob: -5.091455459594727
    8. 'P' → logprob: -5.341455459594727
    9. '(' → logprob: -6.091455459594727
    10. 'res' → logprob: -6.091455459594727

Token 755: ' terme' (ID: 42959)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.5144035220146179
    2. 'C' → logprob: -2.3894035816192627
    3. 'val' → logprob: -2.5144035816192627
    4. 'z' → logprob: -2.8894035816192627
    5. 'c' → logprob: -3.3894035816192627
    6. 'F' → logprob: -3.3894035816192627
    7. 'res' → logprob: -3.6394035816192627
    8. 'x' → logprob: -3.6394035816192627
    9. 'tmp' → logprob: -4.264403343200684
    10. 'com' → logprob: -5.264403343200684

Token 756: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0369327068328857
    2. 'C' → logprob: -1.1619327068328857
    3. 'term' → logprob: -2.1619327068328857
    4. ' =' → logprob: -2.9119327068328857
    5. 'z' → logprob: -3.0369327068328857
    6. '   ' → logprob: -3.6619327068328857
    7. 'comb' → logprob: -3.7869327068328857
    8. 't' → logprob: -3.7869327068328857
    9. 'c' → logprob: -4.536932945251465
    10. 'F' → logprob: -5.161932945251465

Token 757: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02553573250770569
    2. ' =' → logprob: -4.525535583496094
    3. '+=' → logprob: -4.525535583496094
    4. '*=' → logprob: -6.150535583496094
    5. 'z' → logprob: -7.775535583496094
    6. '=
' → logprob: -8.400535583496094
    7. '%=' → logprob: -8.650535583496094
    8. 's' → logprob: -9.025535583496094
    9. ' +=' → logprob: -9.275535583496094
    10. 'F' → logprob: -9.400535583496094

Token 758: ' ajouté' (ID: 127784)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.1111084371805191
    2. 'F' → logprob: -2.7361085414886475
    3. '(' → logprob: -3.3611085414886475
    4. '(
' → logprob: -6.111108303070068
    5. ' (' → logprob: -6.736108303070068
    6. '(Q' → logprob: -7.611108303070068
    7. '(f' → logprob: -7.861108303070068
    8. 'Q' → logprob: -7.986108303070068
    9. 'z' → logprob: -7.986108303070068
    10. 'f' → logprob: -8.361108779907227

Token 759: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5376923680305481
    2. ' =' → logprob: -1.5376923084259033
    3. '   ' → logprob: -1.6626923084259033
    4. ',' → logprob: -5.662692546844482
    5. 'term' → logprob: -6.037692546844482
    6. 'z' → logprob: -6.287692546844482
    7. ' +=' → logprob: -7.412692546844482
    8. '(' → logprob: -7.537692546844482
    9. '+=' → logprob: -7.662692546844482
    10. ')' → logprob: -7.787692546844482

Token 760: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0002997120900545269
    2. '(z' → logprob: -8.250299453735352
    3. ' z' → logprob: -10.375299453735352
    4. 'F' → logprob: -13.125299453735352
    5. '
' → logprob: -13.625299453735352
    6. '   ' → logprob: -14.000299453735352
    7. '(' → logprob: -14.125299453735352
    8. 'f' → logprob: -14.250299453735352
    9. '(
' → logprob: -14.875299453735352
    10. '(F' → logprob: -14.875299453735352

Token 761: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011397004127502
    2. 'term' → logprob: -1.6261396408081055
    3. 'z' → logprob: -1.7511396408081055
    4. 'C' → logprob: -5.0011396408081055
    5. 'comb' → logprob: -5.3761396408081055
    6. '=' → logprob: -5.3761396408081055
    7. ' =' → logprob: -5.8761396408081055
    8. '+' → logprob: -7.0011396408081055
    9. ',' → logprob: -7.7511396408081055
    10. '*' → logprob: -8.126139640808105

Token 762: ' chaque' (ID: 21194)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02543787844479084
    2. '(k' → logprob: -4.525437831878662
    3. ' k' → logprob: -5.400437831878662
    4. '(' → logprob: -6.150437831878662
    5. 'Q' → logprob: -6.150437831878662
    6. 'z' → logprob: -6.525437831878662
    7. ' (' → logprob: -6.775437831878662
    8. 'F' → logprob: -6.900437831878662
    9. '(Q' → logprob: -8.15043830871582
    10. '(n' → logprob: -8.52543830871582

Token 763: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03322017192840576
    2. ' k' → logprob: -3.5332202911376953
    3. 'for' → logprob: -6.533220291137695
    4. ')' → logprob: -8.158220291137695
    5. ' for' → logprob: -8.158220291137695
    6. 'range' → logprob: -8.408220291137695
    7. '=' → logprob: -8.658220291137695
    8. 'term' → logprob: -8.783220291137695
    9. '(' → logprob: -9.158220291137695
    10. ' ' → logprob: -9.408220291137695

Token 764: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5663168430328369
    2. '   ' → logprob: -1.066316843032837
    3. ' =' → logprob: -2.691316843032837
    4. 'z' → logprob: -4.316316604614258
    5. ' z' → logprob: -6.441316604614258
    6. '=
' → logprob: -6.816316604614258
    7. ' +=' → logprob: -6.941316604614258
    8. '+=' → logprob: -7.566316604614258
    9. 'k' → logprob: -7.816316604614258
    10. '#' → logprob: -8.191316604614258

Token 765: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.676981345459353e-06
    2. ' k' → logprob: -12.125005722045898
    3. 'z' → logprob: -16.3750057220459
    4. 'range' → logprob: -17.7500057220459
    5. '```' → logprob: -17.7500057220459
    6. '`' → logprob: -18.3750057220459
    7. '_k' → logprob: -19.1250057220459
    8. ' ' → logprob: -19.7500057220459
    9. 'Q' → logprob: -19.8750057220459
    10. 'к' → logprob: -20.0000057220459

Token 766: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7778872847557068
    2. 'term' → logprob: -0.9028872847557068
    3. 'z' → logprob: -2.1528873443603516
    4. 'C' → logprob: -4.652887344360352
    5. 'comb' → logprob: -5.902887344360352
    6. ' term' → logprob: -6.527887344360352
    7. 'token' → logprob: -6.902887344360352
    8. 'factor' → logprob: -7.652887344360352
    9. ' =' → logprob: -7.777887344360352
    10. ',' → logprob: -8.027887344360352

Token 767: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6911173462867737
    2. 'C' → logprob: -2.066117286682129
    3. 'F' → logprob: -2.316117286682129
    4. '(' → logprob: -2.316117286682129
    5. '   ' → logprob: -2.816117286682129
    6. '(F' → logprob: -3.691117286682129
    7. '(C' → logprob: -3.691117286682129
    8. '((' → logprob: -4.316117286682129
    9. 'comb' → logprob: -4.441117286682129
    10. '(z' → logprob: -4.691117286682129

Token 768: ' #' (ID: 1069)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.544653594493866
    2. 'z' → logprob: -0.919653594493866
    3. 'C' → logprob: -4.919653415679932
    4. 'comb' → logprob: -4.919653415679932
    5. '   ' → logprob: -6.419653415679932
    6. 'temp' → logprob: -7.169653415679932
    7. 't' → logprob: -7.169653415679932
    8. ' z' → logprob: -7.419653415679932
    9. ' term' → logprob: -7.669653415679932
    10. 'tmp' → logprob: -7.794653415679932

Token 769: ' On' (ID: 2160)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.20794393122196198
    2. 'z' → logprob: -1.8329439163208008
    3. 'C' → logprob: -4.332943916320801
    4. 'comb' → logprob: -4.957943916320801
    5. 'temp' → logprob: -6.332943916320801
    6. '   ' → logprob: -6.832943916320801
    7. 'tmp' → logprob: -6.832943916320801
    8. 't' → logprob: -6.957943916320801
    9. ' term' → logprob: -7.832943916320801
    10. 'c' → logprob: -7.957943916320801

Token 770: ' démont' (ID: 194677)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43546047806739807
    2. '+=' → logprob: -1.1854604482650757
    3. '*=' → logprob: -3.8104605674743652
    4. ' +=' → logprob: -4.560460567474365
    5. 'z' → logprob: -4.935460567474365
    6. ' =' → logprob: -5.060460567474365
    7. ' *=' → logprob: -7.810460567474365
    8. '   ' → logprob: -8.685460090637207
    9. '=z' → logprob: -9.060460090637207
    10. '%=' → logprob: -9.310460090637207

Token 771: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39939695596694946
    2. 're' → logprob: -1.7743968963623047
    3. 'rate' → logprob: -2.5243968963623047
    4. 'z' → logprob: -4.149396896362305
    5. 'ra' → logprob: -4.524396896362305
    6. 'tre' → logprob: -4.649396896362305
    7. 'rale' → logprob: -5.024396896362305
    8. 'stre' → logprob: -5.149396896362305
    9. 'rage' → logprob: -5.274396896362305
    10. 'e' → logprob: -5.524396896362305

Token 772: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.09998619556427
    2. ' que' → logprob: -1.59998619556427
    3. '   ' → logprob: -1.84998619556427
    4. '=' → logprob: -1.97498619556427
    5. 'z' → logprob: -2.5999860763549805
    6. ' z' → logprob: -3.0999860763549805
    7. '(' → logprob: -3.9749860763549805
    8. ' (' → logprob: -5.0999860763549805
    9. '    ' → logprob: -5.4749860763549805
    10. '(
' → logprob: -5.7249860763549805

Token 773: ' opérations' (ID: 102793)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.29668301343917847
    2. 'z' → logprob: -1.7966830730438232
    3. ' F' → logprob: -3.4216830730438232
    4. ')' → logprob: -4.796682834625244
    5. 'comb' → logprob: -4.796682834625244
    6. ' z' → logprob: -5.171682834625244
    7. '#' → logprob: -5.421682834625244
    8. '(' → logprob: -5.421682834625244
    9. 'term' → logprob: -5.671682834625244
    10. 'calcul' → logprob: -5.921682834625244

Token 774: ' individ' (ID: 3928)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46433359384536743
    2. ' =' → logprob: -1.3393335342407227
    3. '   ' → logprob: -2.7143335342407227
    4. 'z' → logprob: -3.5893335342407227
    5. '(
' → logprob: -5.214333534240723
    6. ',' → logprob: -5.964333534240723
    7. '(' → logprob: -6.714333534240723
    8. '    ' → logprob: -7.089333534240723
    9. ' z' → logprob: -7.214333534240723
    10. ' +=' → logprob: -7.214333534240723

Token 775: 'uellement' (ID: 36026)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5107409954071045
    2. 'érées' → logprob: -1.0107409954071045
    3. 'érés' → logprob: -4.635741233825684
    4. 'uelles' → logprob: -4.760741233825684
    5. 'é' → logprob: -5.885741233825684
    6. 'in' → logprob: -6.135741233825684
    7. 'éré' → logprob: -6.760741233825684
    8. 'r' → logprob: -7.260741233825684
    9. 'er' → logprob: -7.260741233825684
    10. 'ér' → logprob: -7.260741233825684

Token 776: ' :
' (ID: 10039)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8912312984466553
    2. '   ' → logprob: -0.8912312984466553
    3. '(
' → logprob: -3.5162312984466553
    4. ',' → logprob: -3.6412312984466553
    5. ' =' → logprob: -3.8912312984466553
    6. '+' → logprob: -4.016231536865234
    7. '=' → logprob: -4.016231536865234
    8. '(' → logprob: -4.391231536865234
    9. ' z' → logprob: -4.641231536865234
    10. '*' → logprob: -5.266231536865234

Token 777: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4475232660770416
    2. '   ' → logprob: -1.0725232362747192
    3. ' z' → logprob: -4.94752311706543
    4. 'C' → logprob: -5.94752311706543
    5. 'term' → logprob: -6.19752311706543
    6. 'F' → logprob: -6.82252311706543
    7. '```' → logprob: -6.82252311706543
    8. '(' → logprob: -6.94752311706543
    9. '(z' → logprob: -6.94752311706543
    10. ' (' → logprob: -7.44752311706543

Token 778: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06952373683452606
    2. ' z' → logprob: -3.319523811340332
    3. '   ' → logprob: -5.069523811340332
    4. 'F' → logprob: -5.194523811340332
    5. '(' → logprob: -5.319523811340332
    6. 'term' → logprob: -5.819523811340332
    7. ' (' → logprob: -6.069523811340332
    8. 'C' → logprob: -6.319523811340332
    9. '(F' → logprob: -6.569523811340332
    10. '(z' → logprob: -6.694523811340332

Token 779: ' (' (ID: 350)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.5848314166069031
    2. 'z' → logprob: -1.0848314762115479
    3. 'C' → logprob: -3.209831476211548
    4. 'comb' → logprob: -3.334831476211548
    5. '   ' → logprob: -5.084831237792969
    6. 'temp' → logprob: -5.209831237792969
    7. 't' → logprob: -5.709831237792969
    8. 'c' → logprob: -6.209831237792969
    9. 'tmp' → logprob: -6.209831237792969
    10. 'val' → logprob: -6.709831237792969

Token 780: 'B' (ID: 33)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.006067682523280382
    2. ' F' → logprob: -5.381067752838135
    3. '(F' → logprob: -6.881067752838135
    4. ' (' → logprob: -8.631067276000977
    5. '(' → logprob: -9.381067276000977
    6. '   ' → logprob: -10.381067276000977
    7. ')' → logprob: -10.756067276000977
    8. 'z' → logprob: -10.881067276000977
    9. ' ' → logprob: -11.506067276000977
    10. 'k' → logprob: -11.631067276000977

Token 781: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7751725912094116
    2. ' +' → logprob: -1.4001725912094116
    3. '+' → logprob: -1.5251725912094116
    4. '-' → logprob: -3.275172710418701
    5. '-k' → logprob: -3.650172710418701
    6. ')' → logprob: -5.650172710418701
    7. '   ' → logprob: -6.775172710418701
    8. '+k' → logprob: -6.775172710418701
    9. '```' → logprob: -7.275172710418701
    10. '-B' → logprob: -7.650172710418701

Token 782: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5784597396850586
    2. '+' → logprob: -1.7034597396850586
    3. ' +' → logprob: -1.9534597396850586
    4. ' -' → logprob: -2.9534597396850586
    5. '-' → logprob: -3.3284597396850586
    6. ' )' → logprob: -4.703459739685059
    7. ')*' → logprob: -5.328459739685059
    8. '),' → logprob: -5.703459739685059
    9. ')+' → logprob: -5.828459739685059
    10. ')*(' → logprob: -6.953459739685059

Token 783: ' :' (ID: 712)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0360673666000366
    2. '+' → logprob: -1.6610673666000366
    3. ')' → logprob: -2.286067485809326
    4. '*' → logprob: -2.286067485809326
    5. ' -' → logprob: -2.661067485809326
    6. '-' → logprob: -2.786067485809326
    7. ' +' → logprob: -3.161067485809326
    8. ',' → logprob: -4.411067485809326
    9. ' ' → logprob: -4.411067485809326
    10. '<|end|>' → logprob: -4.661067485809326

Token 784: ' facteur' (ID: 175214)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.1811756044626236
    2. ' (' → logprob: -2.431175708770752
    3. '*' → logprob: -3.181175708770752
    4. '(' → logprob: -3.931175708770752
    5. ')' → logprob: -5.556175708770752
    6. ' *' → logprob: -5.681175708770752
    7. '*(' → logprob: -5.931175708770752
    8. '   ' → logprob: -6.181175708770752
    9. 'z' → logprob: -6.306175708770752
    10. ')*' → logprob: -7.431175708770752

Token 785: ' lin' (ID: 14432)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16051970422267914
    2. '*' → logprob: -2.035519599914551
    3. ' -' → logprob: -4.785519599914551
    4. '-' → logprob: -5.285519599914551
    5. ')' → logprob: -6.785519599914551
    6. '<|end|>' → logprob: -7.160519599914551
    7. '+' → logprob: -7.410519599914551
    8. '*(' → logprob: -7.785519599914551
    9. ' ' → logprob: -7.910519599914551
    10. '  ' → logprob: -8.66051959991455

Token 786: 'é' (ID: 377)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5181339979171753
    2. '*(' → logprob: -1.6431339979171753
    3. ' *' → logprob: -1.7681339979171753
    4. ')' → logprob: -3.518134117126465
    5. '-' → logprob: -5.268134117126465
    6. ' -' → logprob: -6.893134117126465
    7. ')*(' → logprob: -7.143134117126465
    8. '+' → logprob: -7.143134117126465
    9. ')*' → logprob: -7.143134117126465
    10. '*)' → logprob: -7.893134117126465

Token 787: 'aire' (ID: 8189)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4801122546195984
    2. '-' → logprob: -1.7301123142242432
    3. '*' → logprob: -2.480112314224243
    4. ' *' → logprob: -2.605112314224243
    5. ')' → logprob: -3.355112314224243
    6. '+' → logprob: -5.105112075805664
    7. ' +' → logprob: -6.230112075805664
    8. '*(' → logprob: -6.980112075805664
    9. ' ' → logprob: -7.105112075805664
    10. ' )' → logprob: -7.605112075805664

Token 788: ' dépend' (ID: 68660)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.50811767578125
    2. '*' → logprob: -1.13311767578125
    3. '   ' → logprob: -3.38311767578125
    4. ')' → logprob: -3.50811767578125
    5. '*(' → logprob: -5.13311767578125
    6. ')*' → logprob: -6.75811767578125
    7. ' *
' → logprob: -7.00811767578125
    8. '```' → logprob: -7.00811767578125
    9. '*
' → logprob: -7.75811767578125
    10. ' ' → logprob: -7.75811767578125

Token 789: 'ant' (ID: 493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.395097553730011
    2. '+' → logprob: -1.8950974941253662
    3. ' de' → logprob: -3.395097494125366
    4. '_' → logprob: -3.770097494125366
    5. '=' → logprob: -3.895097494125366
    6. '(B' → logprob: -3.895097494125366
    7. '   ' → logprob: -4.020097732543945
    8. 'B' → logprob: -4.145097732543945
    9. '-' → logprob: -4.270097732543945
    10. 'de' → logprob: -4.895097732543945

Token 790: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9739505052566528
    2. '*' → logprob: -1.7239505052566528
    3. '   ' → logprob: -2.0989503860473633
    4. '(B' → logprob: -2.3489503860473633
    5. '-' → logprob: -2.7239503860473633
    6. ' *' → logprob: -3.8489503860473633
    7. '(' → logprob: -3.8489503860473633
    8. ' (' → logprob: -3.9739503860473633
    9. ' -' → logprob: -4.348950386047363
    10. '+' → logprob: -4.473950386047363

Token 791: ' k' (ID: 372)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03677269071340561
    2. '(B' → logprob: -3.6617727279663086
    3. 'k' → logprob: -5.286772727966309
    4. '(' → logprob: -6.286772727966309
    5. ' B' → logprob: -6.411772727966309
    6. ' (' → logprob: -7.411772727966309
    7. ')' → logprob: -7.411772727966309
    8. '```' → logprob: -8.536772727966309
    9. 'Q' → logprob: -8.911772727966309
    10. 'z' → logprob: -9.536772727966309

Token 792: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6029534339904785
    2. ' *' → logprob: -1.6029534339904785
    3. '   ' → logprob: -1.7279534339904785
    4. ')' → logprob: -1.8529534339904785
    5. '*' → logprob: -1.9779534339904785
    6. ' +' → logprob: -2.4779534339904785
    7. ',' → logprob: -4.9779534339904785
    8. '```' → logprob: -5.2279534339904785
    9. '-' → logprob: -5.6029534339904785
    10. ' ' → logprob: -5.6029534339904785

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03435617312788963
    2. ')' → logprob: -4.159356117248535
    3. '*' → logprob: -4.534356117248535
    4. 'z' → logprob: -6.534356117248535
    5. '+' → logprob: -6.659356117248535
    6. ' *' → logprob: -7.034356117248535
    7. 'for' → logprob: -7.159356117248535
    8. ' for' → logprob: -7.534356117248535
    9. '*(' → logprob: -7.784356117248535
    10. ' ' → logprob: -8.159356117248535

Token 794: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1645513772964478
    2. '(B' → logprob: -1.4145513772964478
    3. '(' → logprob: -1.7895513772964478
    4. ')' → logprob: -2.789551258087158
    5. 'z' → logprob: -2.914551258087158
    6. '   ' → logprob: -3.039551258087158
    7. ' (' → logprob: -3.289551258087158
    8. ' *' → logprob: -4.039551258087158
    9. 'for' → logprob: -4.039551258087158
    10. '*(' → logprob: -4.164551258087158

Token 795: ' F' (ID: 454)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.35697057843208313
    2. 'z' → logprob: -1.4819705486297607
    3. '(' → logprob: -2.9819705486297607
    4. ' (' → logprob: -4.23197078704834
    5. '(
' → logprob: -5.85697078704834
    6. '   ' → logprob: -6.23197078704834
    7. ' z' → logprob: -6.85697078704834
    8. '((' → logprob: -6.98197078704834
    9. 'B' → logprob: -7.73197078704834
    10. ')' → logprob: -9.35697078704834

Token 796: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0064949775114655495
    2. '[k' → logprob: -5.381494998931885
    3. '[N' → logprob: -7.006494998931885
    4. '[' → logprob: -7.506494998931885
    5. 'B' → logprob: -8.881494522094727
    6. '[A' → logprob: -8.881494522094727
    7. '[n' → logprob: -9.381494522094727
    8. '[F' → logprob: -11.006494522094727
    9. 'k' → logprob: -11.256494522094727
    10. '[
' → logprob: -12.381494522094727

Token 797: '+k' (ID: 110434)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.43067291378974915
    2. '-B' → logprob: -1.5556728839874268
    3. '-' → logprob: -2.8056728839874268
    4. '[B' → logprob: -3.0556728839874268
    5. ' -' → logprob: -4.555673122406006
    6. '[k' → logprob: -4.680673122406006
    7. ']' → logprob: -4.805673122406006
    8. '[' → logprob: -6.055673122406006
    9. 'k' → logprob: -8.180672645568848
    10. 'B' → logprob: -8.305672645568848

Token 798: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025351177901029587
    2. '-' → logprob: -4.525351047515869
    3. '-k' → logprob: -5.400351047515869
    4. '],' → logprob: -5.525351047515869
    5. ' -' → logprob: -6.025351047515869
    6. ']*' → logprob: -6.025351047515869
    7. ']*(' → logprob: -8.775351524353027
    8. '   ' → logprob: -8.900351524353027
    9. ' ]' → logprob: -9.275351524353027
    10. '[' → logprob: -9.400351524353027

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0062557002529501915
    2. 'k' → logprob: -5.756255626678467
    3. ']' → logprob: -6.131255626678467
    4. 'A' → logprob: -7.756255626678467
    5. 'B' → logprob: -8.631256103515625
    6. '2' → logprob: -9.756256103515625
    7. '0' → logprob: -9.756256103515625
    8. 'F' → logprob: -10.006256103515625
    9. '(B' → logprob: -10.381256103515625
    10. '#' → logprob: -10.881256103515625

Token 800: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024269097484648228
    2. '],' → logprob: -7.002427101135254
    3. '])' → logprob: -7.127427101135254
    4. ']*' → logprob: -7.377427101135254
    5. ']*(' → logprob: -10.627427101135254
    6. '-' → logprob: -10.877427101135254
    7. ' ]' → logprob: -11.127427101135254
    8. '*' → logprob: -12.377427101135254
    9. ']
' → logprob: -12.502427101135254
    10. ')' → logprob: -12.502427101135254

Token 801: ' :' (ID: 712)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4846457242965698
    2. '[' → logprob: -1.7346457242965698
    3. '[B' → logprob: -1.7346457242965698
    4. '*' → logprob: -4.609645843505859
    5. ' *' → logprob: -4.859645843505859
    6. '   ' → logprob: -5.359645843505859
    7. ']*' → logprob: -6.234645843505859
    8. '[
' → logprob: -6.609645843505859
    9. '[k' → logprob: -6.984645843505859
    10. '[F' → logprob: -7.609645843505859

Token 802: ' factor' (ID: 12332)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0076537118293344975
    2. ']' → logprob: -5.382653713226318
    3. '*' → logprob: -6.507653713226318
    4. ' F' → logprob: -7.257653713226318
    5. '(' → logprob: -8.38265323638916
    6. ']*' → logprob: -8.75765323638916
    7. '[' → logprob: -9.00765323638916
    8. 'B' → logprob: -9.13265323638916
    9. ')' → logprob: -9.25765323638916
    10. '(B' → logprob: -10.63265323638916

Token 803: 'ielle' (ID: 22380)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2824867367744446
    2. '[' → logprob: -1.5324866771697998
    3. ']*' → logprob: -4.782486915588379
    4. '[k' → logprob: -4.907486915588379
    5. '*' → logprob: -5.532486915588379
    6. ' factorial' → logprob: -6.157486915588379
    7. '[B' → logprob: -6.282486915588379
    8. 'B' → logprob: -7.282486915588379
    9. ']+' → logprob: -7.532486915588379
    10. '#' → logprob: -7.782486915588379

Token 804: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6262068748474121
    2. '[B' → logprob: -0.8762068748474121
    3. '[k' → logprob: -3.501206874847412
    4. ']' → logprob: -4.876206874847412
    5. '[
' → logprob: -5.626206874847412
    6. '[F' → logprob: -5.876206874847412
    7. '   ' → logprob: -6.251206874847412
    8. ')' → logprob: -6.626206874847412
    9. '[b' → logprob: -8.25120735168457
    10. '```' → logprob: -8.50120735168457

Token 805: ' (' (ID: 350)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004343598615378141
    2. '(B' → logprob: -5.754343509674072
    3. '[B' → logprob: -7.004343509674072
    4. ' B' → logprob: -8.50434398651123
    5. ']' → logprob: -10.75434398651123
    6. 'F' → logprob: -11.00434398651123
    7. '	B' → logprob: -12.25434398651123
    8. 'A' → logprob: -12.37934398651123
    9. '   ' → logprob: -13.12934398651123
    10. ' (' → logprob: -13.87934398651123

Token 806: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00010402000043541193
    2. ' B' → logprob: -9.500103950500488
    3. '(B' → logprob: -10.625103950500488
    4. ')' → logprob: -13.500103950500488
    5. ']' → logprob: -13.875103950500488
    6. '[B' → logprob: -14.375103950500488
    7. '	B' → logprob: -14.375103950500488
    8. '   ' → logprob: -14.750103950500488
    9. ' (' → logprob: -15.625103950500488
    10. '"B' → logprob: -15.875103950500488

Token 807: '+k' (ID: 110434)
  Prédit: '+k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.16613321006298065
    2. '+' → logprob: -1.916133165359497
    3. ' +' → logprob: -5.416133403778076
    4. '-' → logprob: -7.166133403778076
    5. '[k' → logprob: -8.791132926940918
    6. '   ' → logprob: -9.041132926940918
    7. '[' → logprob: -9.166132926940918
    8. '-k' → logprob: -9.916132926940918
    9. ']' → logprob: -9.916132926940918
    10. ')' → logprob: -10.666132926940918

Token 808: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034289248287677765
    2. ' -' → logprob: -3.4092893600463867
    3. ']' → logprob: -7.909289360046387
    4. ')' → logprob: -8.909289360046387
    5. '[' → logprob: -10.159289360046387
    6. '   ' → logprob: -10.659289360046387
    7. '+' → logprob: -10.909289360046387
    8. '```' → logprob: -11.034289360046387
    9. '_minus' → logprob: -11.784289360046387
    10. ' ' → logprob: -12.284289360046387

Token 809: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011301863007247448
    2. '-' → logprob: -4.5113019943237305
    3. ' ' → logprob: -8.88630199432373
    4. ' -' → logprob: -9.26130199432373
    5. '   ' → logprob: -12.13630199432373
    6. ')' → logprob: -12.76130199432373
    7. '```' → logprob: -12.76130199432373
    8. 'minus' → logprob: -13.01130199432373
    9. ']' → logprob: -13.13630199432373
    10. '2' → logprob: -13.38630199432373

Token 810: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003453952958807349
    2. ']*' → logprob: -6.503453731536865
    3. '])' → logprob: -6.503453731536865
    4. ')' → logprob: -8.503454208374023
    5. ' ]' → logprob: -9.378454208374023
    6. '],' → logprob: -9.753454208374023
    7. '-' → logprob: -10.253454208374023
    8. '   ' → logprob: -11.003454208374023
    9. '#' → logprob: -11.378454208374023
    10. ']*)' → logprob: -12.003454208374023

Token 811: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5326631665229797
    2. '*' → logprob: -1.032663106918335
    3. '   ' → logprob: -3.407663106918335
    4. ')' → logprob: -4.532663345336914
    5. '[' → logprob: -4.907663345336914
    6. ']' → logprob: -6.032663345336914
    7. '*(' → logprob: -6.532663345336914
    8. '*[' → logprob: -7.782663345336914
    9. '*z' → logprob: -8.282663345336914
    10. '<|end|>' → logprob: -8.407663345336914

Token 812: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1099376454949379
    2. ' *' → logprob: -2.6099376678466797
    3. ')' → logprob: -3.7349376678466797
    4. '   ' → logprob: -5.98493766784668
    5. '*(' → logprob: -6.48493766784668
    6. ')*' → logprob: -7.10993766784668
    7. '(' → logprob: -7.60993766784668
    8. '(B' → logprob: -7.73493766784668
    9. '*z' → logprob: -8.10993766784668
    10. ' (' → logprob: -8.85993766784668

Token 813: ' I' (ID: 357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9732206463813782
    2. '*' → logprob: -1.4732205867767334
    3. 'I' → logprob: -2.0982205867767334
    4. ' (' → logprob: -2.3482205867767334
    5. ')' → logprob: -2.5982205867767334
    6. ' *' → logprob: -2.9732205867767334
    7. '(I' → logprob: -4.0982208251953125
    8. '(B' → logprob: -4.4732208251953125
    9. 'F' → logprob: -5.5982208251953125
    10. '(
' → logprob: -5.9732208251953125

Token 814: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0029913706239312887
    2. '[A' → logprob: -5.877991199493408
    3. '[' → logprob: -9.377991676330566
    4. 'B' → logprob: -9.752991676330566
    5. '[
' → logprob: -11.002991676330566
    6. '[N' → logprob: -11.252991676330566
    7. '[k' → logprob: -11.877991676330566
    8. 'A' → logprob: -13.127991676330566
    9. '[C' → logprob: -13.877991676330566
    10. ']' → logprob: -14.252991676330566

Token 815: ']' (ID: 60)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.11597222834825516
    2. '+k' → logprob: -2.3659722805023193
    3. '-' → logprob: -4.61597204208374
    4. ' -' → logprob: -5.36597204208374
    5. '+' → logprob: -7.11597204208374
    6. 'k' → logprob: -9.615972518920898
    7. ' +' → logprob: -9.615972518920898
    8. '[k' → logprob: -10.490972518920898
    9. '[' → logprob: -10.865972518920898
    10. '
' → logprob: -11.240972518920898

Token 816: ' :' (ID: 712)
  Prédit: '[B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.002337708603590727
    2. '[' → logprob: -6.12733793258667
    3. ']' → logprob: -9.502337455749512
    4. '[k' → logprob: -10.502337455749512
    5. '[b' → logprob: -11.502337455749512
    6. '][' → logprob: -11.752337455749512
    7. ')' → logprob: -12.127337455749512
    8. '[
' → logprob: -12.252337455749512
    9. '   ' → logprob: -12.377337455749512
    10. ' [' → logprob: -12.502337455749512

Token 817: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03383414447307587
    2. ' I' → logprob: -3.408834218978882
    3. '*' → logprob: -9.408834457397461
    4. 'B' → logprob: -10.283834457397461
    5. '[I' → logprob: -10.783834457397461
    6. ' ' → logprob: -10.908834457397461
    7. ' ' → logprob: -12.033834457397461
    8. '[' → logprob: -12.158834457397461
    9. '(I' → logprob: -12.533834457397461
    10. ']' → logprob: -12.658834457397461

Token 818: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.07611805945634842
    2. '[B' → logprob: -2.701117992401123
    3. '[' → logprob: -5.326117992401123
    4. ']' → logprob: -6.951117992401123
    5. '[I' → logprob: -8.951118469238281
    6. '```' → logprob: -10.451118469238281
    7. '][' → logprob: -10.701118469238281
    8. '[K' → logprob: -10.826118469238281
    9. '[A' → logprob: -10.951118469238281
    10. '[N' → logprob: -10.951118469238281

Token 819: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0350196436047554
    2. '[B' → logprob: -3.535019636154175
    3. ']' → logprob: -5.910019874572754
    4. 'k' → logprob: -6.535019874572754
    5. '(B' → logprob: -7.910019874572754
    6. '[k' → logprob: -8.160019874572754
    7. ')' → logprob: -8.785019874572754
    8. ' B' → logprob: -8.785019874572754
    9. 'I' → logprob: -9.785019874572754
    10. '<|end|>' → logprob: -10.660019874572754

Token 820: ' factor' (ID: 12332)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7948908805847168
    2. 'B' → logprob: -1.0448908805847168
    3. 'k' → logprob: -2.169890880584717
    4. 'I' → logprob: -2.919890880584717
    5. ' ]' → logprob: -4.294890880584717
    6. '[k' → logprob: -5.044890880584717
    7. ' B' → logprob: -6.044890880584717
    8. '[' → logprob: -6.294890880584717
    9. ')' → logprob: -6.419890880584717
    10. '[B' → logprob: -7.669890880584717

Token 821: 'ielle' (ID: 22380)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.13800542056560516
    2. ']' → logprob: -2.513005495071411
    3. '-' → logprob: -3.513005495071411
    4. '[k' → logprob: -4.388005256652832
    5. 'I' → logprob: -6.138005256652832
    6. ']-' → logprob: -7.138005256652832
    7. '[' → logprob: -7.263005256652832
    8. '+k' → logprob: -7.513005256652832
    9. ' ]' → logprob: -8.388005256652832
    10. '[I' → logprob: -8.763005256652832

Token 822: ' de' (ID: 334)
  Prédit: '[B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.5935323238372803
    2. '[' → logprob: -1.5935323238372803
    3. ']' → logprob: -1.9685323238372803
    4. '[k' → logprob: -2.8435323238372803
    5. '<|end|>' → logprob: -3.3435323238372803
    6. '[I' → logprob: -5.093532562255859
    7. '[
' → logprob: -5.968532562255859
    8. '```' → logprob: -7.593532562255859
    9. '][' → logprob: -7.718532562255859
    10. 'B' → logprob: -8.71853256225586

Token 823: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.804671233519912e-05
    2. ' B' → logprob: -9.37508773803711
    3. '[B' → logprob: -13.37508773803711
    4. '   ' → logprob: -14.75008773803711
    5. '(B' → logprob: -14.75008773803711
    6. 'k' → logprob: -15.62508773803711
    7. '	B' → logprob: -15.62508773803711
    8. ' ' → logprob: -16.12508773803711
    9. ']' → logprob: -16.25008773803711
    10. '  ' → logprob: -17.25008773803711

Token 824: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3307092487812042
    2. '[B' → logprob: -2.080709218978882
    3. '[' → logprob: -2.705709218978882
    4. ')' → logprob: -3.580709218978882
    5. ' *' → logprob: -4.080709457397461
    6. '[k' → logprob: -4.205709457397461
    7. '*' → logprob: -4.455709457397461
    8. ']' → logprob: -5.205709457397461
    9. '[
' → logprob: -5.205709457397461
    10. '[I' → logprob: -5.955709457397461

Token 825: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6073096990585327
    2. '   ' → logprob: -1.3573096990585327
    3. ' *' → logprob: -1.9823096990585327
    4. '[' → logprob: -3.2323098182678223
    5. '[I' → logprob: -4.857309818267822
    6. ')' → logprob: -5.732309818267822
    7. 'I' → logprob: -6.232309818267822
    8. '[B' → logprob: -6.482309818267822
    9. '*(' → logprob: -6.982309818267822
    10. '(B' → logprob: -7.232309818267822

Token 826: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5817065238952637
    2. '*' → logprob: -0.9567065238952637
    3. ' *' → logprob: -3.5817065238952637
    4. '*(' → logprob: -5.081706523895264
    5. '(B' → logprob: -5.456706523895264
    6. '(' → logprob: -5.581706523895264
    7. '+' → logprob: -5.706706523895264
    8. ')' → logprob: -5.956706523895264
    9. 'z' → logprob: -5.956706523895264
    10. ' (' → logprob: -5.956706523895264

Token 827: ' I' (ID: 357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7521538138389587
    2. '(B' → logprob: -2.0021538734436035
    3. 'z' → logprob: -2.1271538734436035
    4. '   ' → logprob: -2.6271538734436035
    5. ' (' → logprob: -2.8771538734436035
    6. 'I' → logprob: -3.7521538734436035
    7. '(I' → logprob: -3.7521538734436035
    8. 'B' → logprob: -4.0021538734436035
    9. 'F' → logprob: -4.0021538734436035
    10. '+' → logprob: -4.1271538734436035

Token 828: '[k' (ID: 14298)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.10124894976615906
    2. '[B' → logprob: -2.3512489795684814
    3. '[k' → logprob: -7.351248741149902
    4. 'A' → logprob: -8.476248741149902
    5. '[N' → logprob: -9.601248741149902
    6. 'B' → logprob: -9.976248741149902
    7. '[' → logprob: -9.976248741149902
    8. '[
' → logprob: -11.476248741149902
    9. '(A' → logprob: -12.726248741149902
    10. '[a' → logprob: -12.851248741149902

Token 829: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006440493743866682
    2. ' ]' → logprob: -7.750644207000732
    3. '],' → logprob: -9.375643730163574
    4. '+' → logprob: -9.500643730163574
    5. '])' → logprob: -11.125643730163574
    6. ' +' → logprob: -11.250643730163574
    7. ']*' → logprob: -11.875643730163574
    8. '   ' → logprob: -12.250643730163574
    9. ']+' → logprob: -12.625643730163574
    10. ')' → logprob: -12.750643730163574

Token 830: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13732782006263733
    2. ' *' → logprob: -2.8873279094696045
    3. ']' → logprob: -3.6373279094696045
    4. ')' → logprob: -3.8873279094696045
    5. '*' → logprob: -4.012327671051025
    6. '[' → logprob: -5.387327671051025
    7. '#' → logprob: -7.387327671051025
    8. ',' → logprob: -8.262328147888184
    9. ']*' → logprob: -8.387328147888184
    10. ')*' → logprob: -8.512328147888184

Token 831: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.4753759801387787
    2. 'k' → logprob: -0.9753760099411011
    3. ' k' → logprob: -7.725376129150391
    4. '[k' → logprob: -7.725376129150391
    5. ' I' → logprob: -7.850376129150391
    6. '(k' → logprob: -11.60037612915039
    7. ')' → logprob: -11.97537612915039
    8. ']' → logprob: -12.72537612915039
    9. '   ' → logprob: -13.35037612915039
    10. '```' → logprob: -14.35037612915039

Token 832: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005230080569162965
    2. '[' → logprob: -8.12552261352539
    3. '[B' → logprob: -9.12552261352539
    4. ' [' → logprob: -9.62552261352539
    5. '```' → logprob: -10.50052261352539
    6. '   ' → logprob: -11.25052261352539
    7. 'k' → logprob: -13.37552261352539
    8. '  ' → logprob: -13.62552261352539
    9. ' ' → logprob: -13.62552261352539
    10. ']' → logprob: -13.87552261352539

Token 833: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00029387109680101275
    2. ' k' → logprob: -8.250293731689453
    3. '[k' → logprob: -10.375293731689453
    4. '(k' → logprob: -14.250293731689453
    5. '```' → logprob: -15.000293731689453
    6. '{k' → logprob: -16.250293731689453
    7. 'Q' → logprob: -16.750293731689453
    8. '	k' → logprob: -16.875293731689453
    9. ' ' → logprob: -17.000293731689453
    10. '   ' → logprob: -17.375293731689453

Token 834: ' factor' (ID: 12332)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.5107177862082608e-05
    2. ' k' → logprob: -10.625024795532227
    3. '[k' → logprob: -14.875024795532227
    4. '```' → logprob: -15.625024795532227
    5. '(k' → logprob: -16.375024795532227
    6. '
' → logprob: -16.875024795532227
    7. 'Q' → logprob: -17.125024795532227
    8. ')' → logprob: -17.875024795532227
    9. '{k' → logprob: -17.875024795532227
    10. ' ' → logprob: -18.000024795532227

Token 835: 'ielle' (ID: 22380)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.380318820476532
    2. 'k' → logprob: -1.3803188800811768
    3. ']' → logprob: -3.3803188800811768
    4. '[' → logprob: -4.880318641662598
    5. '{k' → logprob: -5.130318641662598
    6. ')' → logprob: -5.505318641662598
    7. ''s' → logprob: -6.130318641662598
    8. '-k' → logprob: -6.130318641662598
    9. '```' → logprob: -6.630318641662598
    10. '`' → logprob: -6.880318641662598

Token 836: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.002068660454824567
    2. '[' → logprob: -7.252068519592285
    3. '   ' → logprob: -7.627068519592285
    4. '(k' → logprob: -8.377068519592285
    5. '```' → logprob: -8.377068519592285
    6. 'k' → logprob: -8.752068519592285
    7. ']' → logprob: -9.377068519592285
    8. ')' → logprob: -9.877068519592285
    9. '[B' → logprob: -10.002068519592285
    10. ' ' → logprob: -11.127068519592285

Token 837: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001238004770129919
    2. ' k' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.000123977661133
    4. '[k' → logprob: -16.375123977661133
    5. '(k' → logprob: -16.375123977661133
    6. ' ' → logprob: -17.125123977661133
    7. '
' → logprob: -17.250123977661133
    8. '```' → logprob: -17.625123977661133
    9. '	k' → logprob: -18.000123977661133
    10. '{k' → logprob: -18.750123977661133

Token 838: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012889128178358078
    2. 'z' → logprob: -4.3878889083862305
    3. ' z' → logprob: -8.51288890838623
    4. ')' → logprob: -9.63788890838623
    5. '  ' → logprob: -10.51288890838623
    6. '	z' → logprob: -10.88788890838623
    7. ' ' → logprob: -11.13788890838623
    8. ',' → logprob: -11.51288890838623
    9. '<|end|>' → logprob: -11.76288890838623
    10. '    ' → logprob: -12.01288890838623

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0344536118209362
    2. 'z' → logprob: -3.4094536304473877
    3. '```' → logprob: -7.284453392028809
    4. ' z' → logprob: -10.159453392028809
    5. '   ' → logprob: -10.909453392028809
    6. '	z' → logprob: -11.159453392028809
    7. '``' → logprob: -11.909453392028809
    8. ')' → logprob: -11.909453392028809
    9. '*z' → logprob: -11.909453392028809
    10. '       ' → logprob: -12.159453392028809

Token 840: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237969160079956
    2. 'z' → logprob: -0.8987969160079956
    3. ' z' → logprob: -8.023797035217285
    4. ')' → logprob: -9.273797035217285
    5. ' +' → logprob: -9.898797035217285
    6. ' ' → logprob: -10.023797035217285
    7. '+' → logprob: -10.023797035217285
    8. '  ' → logprob: -10.523797035217285
    9. '       ' → logprob: -11.398797035217285
    10. '    ' → logprob: -11.398797035217285

Token 841: ' F' (ID: 454)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.04167519137263298
    2. '   ' → logprob: -3.916675090789795
    3. 'term' → logprob: -3.916675090789795
    4. ' z' → logprob: -7.541675090789795
    5. 'temp' → logprob: -9.291675567626953
    6. '```' → logprob: -9.541675567626953
    7. '(' → logprob: -9.916675567626953
    8. 'tmp' → logprob: -10.166675567626953
    9. ' ' → logprob: -10.291675567626953
    10. '(z' → logprob: -10.416675567626953

Token 842: '[' (ID: 58)
  Prédit: '[B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.5860427021980286
    2. '[' → logprob: -1.0860426425933838
    3. '[A' → logprob: -2.336042642593384
    4. '[N' → logprob: -4.711042881011963
    5. '[P' → logprob: -9.211042404174805
    6. '[
' → logprob: -10.711042404174805
    7. '[C' → logprob: -10.711042404174805
    8. 'B' → logprob: -10.836042404174805
    9. 'Q' → logprob: -11.336042404174805
    10. '[F' → logprob: -11.586042404174805

Token 843: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0057750847190618515
    2. 'A' → logprob: -5.505774974822998
    3. 'B' → logprob: -7.130774974822998
    4. 'N' → logprob: -7.505774974822998
    5. '[' → logprob: -8.630775451660156
    6. 'P' → logprob: -9.005775451660156
    7. '[A' → logprob: -11.130775451660156
    8. ' Q' → logprob: -11.380775451660156
    9. '(Q' → logprob: -12.130775451660156
    10. ']' → logprob: -12.505775451660156

Token 844: '+A' (ID: 195068)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004048006143420935
    2. '+' → logprob: -5.629047870635986
    3. '])' → logprob: -8.379048347473145
    4. '],' → logprob: -9.004048347473145
    5. ' +' → logprob: -10.879048347473145
    6. ' ]' → logprob: -11.004048347473145
    7. '#' → logprob: -11.379048347473145
    8. ']*' → logprob: -11.379048347473145
    9. '-' → logprob: -12.004048347473145
    10. '   ' → logprob: -12.129048347473145

Token 845: '-k' (ID: 10897)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30187761783599854
    2. ']' → logprob: -1.4268776178359985
    3. '+A' → logprob: -4.176877498626709
    4. ' +' → logprob: -5.676877498626709
    5. '+]' → logprob: -7.176877498626709
    6. '+k' → logprob: -8.051877975463867
    7. '+B' → logprob: -8.801877975463867
    8. ']+' → logprob: -8.926877975463867
    9. '])' → logprob: -9.676877975463867
    10. 'Q' → logprob: -10.176877975463867

Token 846: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004953675088472664
    2. '+' → logprob: -7.875495433807373
    3. '])' → logprob: -10.375494956970215
    4. ' ]' → logprob: -10.875494956970215
    5. '],' → logprob: -11.250494956970215
    6. ')' → logprob: -11.750494956970215
    7. '#' → logprob: -11.750494956970215
    8. '-' → logprob: -12.000494956970215
    9. '`]' → logprob: -12.250494956970215
    10. ']
' → logprob: -12.375494956970215

Token 847: ' :' (ID: 712)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.6624083518981934
    2. '[' → logprob: -1.7874083518981934
    3. '   ' → logprob: -1.7874083518981934
    4. '[k' → logprob: -2.5374083518981934
    5. ']' → logprob: -3.5374083518981934
    6. 'z' → logprob: -4.162408351898193
    7. '*' → logprob: -4.787408351898193
    8. ' *' → logprob: -5.537408351898193
    9. ')' → logprob: -5.662408351898193
    10. '=' → logprob: -6.287408351898193

Token 848: ' factor' (ID: 12332)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -2.856408536899835e-05
    2. ' F' → logprob: -10.750028610229492
    3. 'f' → logprob: -12.375028610229492
    4. '(F' → logprob: -13.500028610229492
    5. '[' → logprob: -14.500028610229492
    6. '[F' → logprob: -15.000028610229492
    7. '(' → logprob: -15.125028610229492
    8. ')' → logprob: -15.625028610229492
    9. '#' → logprob: -16.875028610229492
    10. '=' → logprob: -17.375028610229492

Token 849: 'ielle' (ID: 22380)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23924870789051056
    2. '[' → logprob: -1.6142487525939941
    3. '   ' → logprob: -5.364248752593994
    4. '=' → logprob: -6.364248752593994
    5. '[F' → logprob: -6.739248752593994
    6. '[
' → logprob: -6.989248752593994
    7. '#' → logprob: -7.239248752593994
    8. '(Q' → logprob: -7.489248752593994
    9. ']
' → logprob: -7.864248752593994
    10. 'naire' → logprob: -8.239248275756836

Token 850: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002971518551930785
    2. '[F' → logprob: -6.127971649169922
    3. ']' → logprob: -8.627971649169922
    4. '[
' → logprob: -8.752971649169922
    5. '[B' → logprob: -9.377971649169922
    6. '   ' → logprob: -9.627971649169922
    7. '[k' → logprob: -9.877971649169922
    8. ' [' → logprob: -10.002971649169922
    9. '(Q' → logprob: -10.377971649169922
    10. '[N' → logprob: -10.502971649169922

Token 851: ' (' (ID: 350)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.049507882446050644
    2. '(Q' → logprob: -3.0495078563690186
    3. '[' → logprob: -7.174508094787598
    4. ' Q' → logprob: -9.049508094787598
    5. '(' → logprob: -10.299508094787598
    6. '	Q' → logprob: -13.299508094787598
    7. ' (' → logprob: -14.174508094787598
    8. ']' → logprob: -15.299508094787598
    9. '   ' → logprob: -15.424508094787598
    10. '<Q' → logprob: -15.799508094787598

Token 852: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.583550642360933e-05
    2. ' Q' → logprob: -10.375036239624023
    3. '(Q' → logprob: -12.375036239624023
    4. '	Q' → logprob: -15.250036239624023
    5. '[' → logprob: -16.250036239624023
    6. '   ' → logprob: -17.125036239624023
    7. '<Q' → logprob: -18.000036239624023
    8. ' ' → logprob: -18.375036239624023
    9. ',Q' → logprob: -18.875036239624023
    10. '.Q' → logprob: -19.375036239624023

Token 853: '+A' (ID: 195068)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196948140859604
    2. '+A' → logprob: -2.936969518661499
    3. ' +' → logprob: -5.06196928024292
    4. '[' → logprob: -8.311969757080078
    5. ']' → logprob: -8.436969757080078
    6. '+k' → logprob: -8.936969757080078
    7. ']+' → logprob: -10.311969757080078
    8. 'A' → logprob: -10.686969757080078
    9. '+
' → logprob: -11.061969757080078
    10. 'Q' → logprob: -11.561969757080078

Token 854: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.03395986929535866
    2. '-' → logprob: -4.033959865570068
    3. ' -' → logprob: -4.158959865570068
    4. '+k' → logprob: -11.033960342407227
    5. '[' → logprob: -11.283960342407227
    6. '+' → logprob: -11.408960342407227
    7. '-n' → logprob: -11.408960342407227
    8. ']' → logprob: -12.783960342407227
    9. '[k' → logprob: -13.158960342407227
    10. '-t' → logprob: -13.533960342407227

Token 855: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009140860638581216
    2. '   ' → logprob: -7.750914096832275
    3. ']
' → logprob: -8.000913619995117
    4. ']
' → logprob: -10.125913619995117
    5. ' ]' → logprob: -10.750913619995117
    6. '])' → logprob: -10.875913619995117
    7. '[' → logprob: -11.000913619995117
    8. ')' → logprob: -11.125913619995117
    9. '+' → logprob: -11.875913619995117
    10. '],' → logprob: -12.125913619995117

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15094363689422607
    2. '[' → logprob: -2.4009437561035156
    3. '*' → logprob: -3.5259437561035156
    4. ' *' → logprob: -5.150943756103516
    5. '+' → logprob: -5.400943756103516
    6. ')' → logprob: -5.775943756103516
    7. '[z' → logprob: -6.525943756103516
    8. '[
' → logprob: -7.275943756103516
    9. 'F' → logprob: -7.400943756103516
    10. 'z' → logprob: -7.525943756103516

Token 857: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8159038424491882
    2. '   ' → logprob: -0.9409038424491882
    3. ' *' → logprob: -2.065903902053833
    4. 'z' → logprob: -4.440903663635254
    5. '+' → logprob: -4.565903663635254
    6. ')' → logprob: -4.940903663635254
    7. '*z' → logprob: -5.065903663635254
    8. ' ' → logprob: -6.315903663635254
    9. '```' → logprob: -7.190903663635254
    10. ' +' → logprob: -7.315903663635254

Token 858: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.001757883233949542
    2. 'z' → logprob: -6.876758098602295
    3. 'F' → logprob: -7.501758098602295
    4. ' I' → logprob: -8.751757621765137
    5. '   ' → logprob: -12.876757621765137
    6. '```' → logprob: -13.001757621765137
    7. '(I' → logprob: -13.126757621765137
    8. '#' → logprob: -13.626757621765137
    9. '+' → logprob: -14.001757621765137
    10. '[I' → logprob: -14.251757621765137

Token 859: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7954958821064793e-05
    2. 'Q' → logprob: -11.500018119812012
    3. '[
' → logprob: -12.500018119812012
    4. '(Q' → logprob: -12.625018119812012
    5. '	Q' → logprob: -15.500018119812012
    6. '<Q' → logprob: -15.750018119812012
    7. ' [' → logprob: -16.000017166137695
    8. '[N' → logprob: -16.500017166137695
    9. '[A' → logprob: -17.250017166137695
    10. '[(' → logprob: -17.250017166137695

Token 860: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.018263613805174828
    2. '[' → logprob: -4.018263816833496
    3. '(Q' → logprob: -9.143263816833496
    4. ' Q' → logprob: -12.143263816833496
    5. '	Q' → logprob: -13.893263816833496
    6. '[
' → logprob: -15.893263816833496
    7. '<Q' → logprob: -15.893263816833496
    8. '   ' → logprob: -16.51826286315918
    9. '(' → logprob: -16.64326286315918
    10. ',Q' → logprob: -17.14326286315918

Token 861: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10635634511709213
    2. '+A' → logprob: -2.356356382369995
    3. ' +' → logprob: -5.606356143951416
    4. '[A' → logprob: -6.981356143951416
    5. '+
' → logprob: -7.356356143951416
    6. '[' → logprob: -7.356356143951416
    7. '[
' → logprob: -9.856356620788574
    8. '-' → logprob: -9.981356620788574
    9. 'A' → logprob: -10.231356620788574
    10. '+a' → logprob: -10.356356620788574

Token 862: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20462901890277863
    2. ' =' → logprob: -2.4546289443969727
    3. '=' → logprob: -3.0796289443969727
    4. '*' → logprob: -3.9546289443969727
    5. ']' → logprob: -4.329628944396973
    6. ' *' → logprob: -4.454628944396973
    7. ')' → logprob: -5.579628944396973
    8. '[' → logprob: -6.329628944396973
    9. '[z' → logprob: -6.579628944396973
    10. ' *=' → logprob: -7.079628944396973

Token 863: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.006719991099089384
    2. ' I' → logprob: -5.006720066070557
    3. ' ' → logprob: -13.881719589233398
    4. '[I' → logprob: -14.131719589233398
    5. '(I' → logprob: -14.381719589233398
    6. '`' → logprob: -14.506719589233398
    7. '#' → logprob: -14.881719589233398
    8. '   ' → logprob: -14.881719589233398
    9. '```' → logprob: -15.631719589233398
    10. ')' → logprob: -15.881719589233398

Token 864: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29408788681030273
    2. '[F' → logprob: -1.4190878868103027
    3. '[B' → logprob: -4.794087886810303
    4. '```' → logprob: -5.544087886810303
    5. ' [' → logprob: -8.669088363647461
    6. '[I' → logprob: -8.919088363647461
    7. '[k' → logprob: -9.544088363647461
    8. '[
' → logprob: -10.044088363647461
    9. '[N' → logprob: -10.294088363647461
    10. '[n' → logprob: -10.544088363647461

Token 865: ' la' (ID: 557)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0015775939682498574
    2. ' I' → logprob: -6.876577377319336
    3. 'Q' → logprob: -7.626577377319336
    4. '[I' → logprob: -10.251577377319336
    5. '(Q' → logprob: -12.126577377319336
    6. '(I' → logprob: -12.126577377319336
    7. '```' → logprob: -12.376577377319336
    8. '[' → logprob: -12.376577377319336
    9. '`' → logprob: -14.501577377319336
    10. ' Q' → logprob: -14.626577377319336

Token 866: ' factor' (ID: 12332)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9322448968887329
    2. '[' → logprob: -0.9322448968887329
    3. '(Q' → logprob: -2.1822447776794434
    4. 'I' → logprob: -2.4322447776794434
    5. '[I' → logprob: -4.682244777679443
    6. 'k' → logprob: -7.057244777679443
    7. '[k' → logprob: -7.682244777679443
    8. '```' → logprob: -7.807244777679443
    9. '(' → logprob: -8.057245254516602
    10. '(I' → logprob: -8.307245254516602

Token 867: 'ielle' (ID: 22380)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017707224935293198
    2. '[n' → logprob: -4.767707347869873
    3. '[' → logprob: -5.267707347869873
    4. 'I' → logprob: -6.392707347869873
    5. '[I' → logprob: -7.392707347869873
    6. '-' → logprob: -7.642707347869873
    7. '][' → logprob: -8.017706871032715
    8. '```' → logprob: -8.767706871032715
    9. ' ]' → logprob: -9.267706871032715
    10. '],' → logprob: -9.267706871032715

Token 868: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009277798235416412
    2. '```' → logprob: -7.625927925109863
    3. '(Q' → logprob: -8.000927925109863
    4. 'Q' → logprob: -10.125927925109863
    5. '#' → logprob: -11.000927925109863
    6. ']' → logprob: -11.500927925109863
    7. '[F' → logprob: -12.000927925109863
    8. ' [' → logprob: -12.125927925109863
    9. '[q' → logprob: -12.625927925109863
    10. '   ' → logprob: -12.625927925109863

Token 869: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.44811469316482544
    2. '(Q' → logprob: -1.4481146335601807
    3. '[' → logprob: -2.0731146335601807
    4. '(' → logprob: -8.323114395141602
    5. ' Q' → logprob: -9.323114395141602
    6. '```' → logprob: -12.198114395141602
    7. '	Q' → logprob: -12.573114395141602
    8. ' (' → logprob: -12.698114395141602
    9. 'I' → logprob: -12.698114395141602
    10. ']' → logprob: -13.323114395141602

Token 870: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001774426898919046
    2. '+' → logprob: -7.001774311065674
    3. 'z' → logprob: -7.876774311065674
    4. ' +' → logprob: -8.376774787902832
    5. '  ' → logprob: -9.876774787902832
    6. ' ' → logprob: -10.126774787902832
    7. ')' → logprob: -10.376774787902832
    8. ',' → logprob: -10.751774787902832
    9. '    ' → logprob: -11.001774787902832
    10. ' z' → logprob: -11.001774787902832

Token 871: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001451067510060966
    2. 'z' → logprob: -7.001451015472412
    3. '  ' → logprob: -9.12645149230957
    4. '       ' → logprob: -9.37645149230957
    5. ')' → logprob: -9.75145149230957
    6. '```' → logprob: -9.75145149230957
    7. ' ' → logprob: -10.00145149230957
    8. '+' → logprob: -10.50145149230957
    9. '\t' → logprob: -10.50145149230957
    10. '[' → logprob: -10.75145149230957

Token 872: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6359657049179077
    2. 'z' → logprob: -0.7609657049179077
    3. ')' → logprob: -6.510965824127197
    4. ' z' → logprob: -6.760965824127197
    5. '```' → logprob: -8.260965347290039
    6. '+' → logprob: -8.635965347290039
    7. '	z' → logprob: -9.760965347290039
    8. ' +' → logprob: -10.510965347290039
    9. ' ' → logprob: -10.510965347290039
    10. '[' → logprob: -10.760965347290039

Token 873: ' I' (ID: 357)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.016330532729625702
    2. '   ' → logprob: -4.141330718994141
    3. ' z' → logprob: -8.39133071899414
    4. '```' → logprob: -10.39133071899414
    5. ' ' → logprob: -11.89133071899414
    6. '(' → logprob: -12.14133071899414
    7. '	z' → logprob: -12.14133071899414
    8. '   ' → logprob: -12.89133071899414
    9. ')' → logprob: -13.01633071899414
    10. '       ' → logprob: -13.01633071899414

Token 874: '[A' (ID: 58391)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002212942810729146
    2. '[A' → logprob: -6.127213001251221
    3. 'Q' → logprob: -11.627212524414062
    4. '[N' → logprob: -11.877212524414062
    5. '(Q' → logprob: -12.877212524414062
    6. '[P' → logprob: -13.002212524414062
    7. '[C' → logprob: -13.252212524414062
    8. '[
' → logprob: -13.377212524414062
    9. '```' → logprob: -14.002212524414062
    10. ' [' → logprob: -14.377212524414062

Token 875: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.2057705968618393
    2. ' -' → logprob: -2.330770492553711
    3. '-' → logprob: -2.455770492553711
    4. '[' → logprob: -6.580770492553711
    5. '[k' → logprob: -6.580770492553711
    6. '+k' → logprob: -9.580770492553711
    7. '+' → logprob: -9.955770492553711
    8. '-A' → logprob: -10.705770492553711
    9. ']' → logprob: -11.205770492553711
    10. '[-' → logprob: -11.580770492553711

Token 876: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002700377081055194
    2. ' ]' → logprob: -9.000269889831543
    3. '])' → logprob: -9.750269889831543
    4. ']
' → logprob: -10.500269889831543
    5. '],' → logprob: -10.625269889831543
    6. '   ' → logprob: -11.500269889831543
    7. ')' → logprob: -12.500269889831543
    8. ']*' → logprob: -12.500269889831543
    9. '```' → logprob: -12.750269889831543
    10. '-' → logprob: -13.125269889831543

Token 877: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9103070497512817
    2. ']' → logprob: -1.5353070497512817
    3. '[' → logprob: -1.6603070497512817
    4. ' *' → logprob: -2.035306930541992
    5. ')' → logprob: -3.285306930541992
    6. '*' → logprob: -4.660306930541992
    7. ' ' → logprob: -5.660306930541992
    8. '[k' → logprob: -6.410306930541992
    9. ' ]' → logprob: -6.535306930541992
    10. '[z' → logprob: -6.660306930541992

Token 878: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.016037069261074066
    2. ' I' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.891036987304688
    4. '	I' → logprob: -14.266036987304688
    5. '(I' → logprob: -14.641036987304688
    6. '   ' → logprob: -15.266036987304688
    7. '[I' → logprob: -15.391036987304688
    8. '#' → logprob: -16.266036987304688
    9. ' ' → logprob: -16.641036987304688
    10. '  ' → logprob: -16.641036987304688

Token 879: ' de' (ID: 334)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.004590330645442009
    2. '[' → logprob: -5.5045905113220215
    3. ' [' → logprob: -8.129590034484863
    4. '[I' → logprob: -8.629590034484863
    5. '[F' → logprob: -11.254590034484863
    6. '```' → logprob: -11.379590034484863
    7. '   ' → logprob: -12.129590034484863
    8. '[(' → logprob: -13.379590034484863
    9. '[B' → logprob: -14.129590034484863
    10. '[a' → logprob: -14.254590034484863

Token 880: ' la' (ID: 557)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5496045351028442
    2. '[A' → logprob: -1.2996045351028442
    3. '(A' → logprob: -2.5496044158935547
    4. 'A' → logprob: -2.6746044158935547
    5. '[I' → logprob: -7.049604415893555
    6. ' I' → logprob: -7.174604415893555
    7. ' (' → logprob: -8.049604415893555
    8. '(I' → logprob: -8.424604415893555
    9. ' A' → logprob: -8.924604415893555
    10. '[' → logprob: -9.174604415893555

Token 881: ' factor' (ID: 12332)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.023948030546307564
    2. '[A' → logprob: -3.7739479541778564
    3. 'I' → logprob: -8.273947715759277
    4. ' (' → logprob: -8.398947715759277
    5. 'A' → logprob: -8.898947715759277
    6. '(' → logprob: -9.773947715759277
    7. '(I' → logprob: -11.023947715759277
    8. '(a' → logprob: -13.023947715759277
    9. '[' → logprob: -13.273947715759277
    10. '
' → logprob: -13.398947715759277

Token 882: 'ielle' (ID: 22380)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016110852360725403
    2. '-k' → logprob: -4.766110897064209
    3. ']' → logprob: -6.016110897064209
    4. '```' → logprob: -7.016110897064209
    5. '[-' → logprob: -7.016110897064209
    6. ']-' → logprob: -7.266110897064209
    7. ' -' → logprob: -7.391110897064209
    8. '-f' → logprob: -7.516110897064209
    9. '[k' → logprob: -8.26611042022705
    10. '[' → logprob: -8.51611042022705

Token 883: ' de' (ID: 334)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0005740015767514706
    2. '[' → logprob: -7.625574111938477
    3. '   ' → logprob: -9.500574111938477
    4. ' [' → logprob: -12.000574111938477
    5. '[a' → logprob: -13.250574111938477
    6. '```' → logprob: -13.500574111938477
    7. '(A' → logprob: -14.750574111938477
    8. '[k' → logprob: -15.125574111938477
    9. ' ' → logprob: -15.500574111938477
    10. 'A' → logprob: -15.750574111938477

Token 884: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0011948712635785341
    2. ' (' → logprob: -7.251194953918457
    3. '[A' → logprob: -8.001194953918457
    4. 'A' → logprob: -8.876194953918457
    5. '(' → logprob: -12.001194953918457
    6. '```' → logprob: -13.876194953918457
    7. '   ' → logprob: -14.251194953918457
    8. '(a' → logprob: -14.376194953918457
    9. '
' → logprob: -14.376194953918457
    10. ' A' → logprob: -14.501194953918457

Token 885: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003858389565721154
    2. '(A' → logprob: -5.62885856628418
    3. ' A' → logprob: -8.37885856628418
    4. '   ' → logprob: -11.12885856628418
    5. ' (' → logprob: -11.87885856628418
    6. '[A' → logprob: -12.50385856628418
    7. '(' → logprob: -13.62885856628418
    8. ' ' → logprob: -14.37885856628418
    9. '	A' → logprob: -14.75385856628418
    10. '
' → logprob: -15.75385856628418

Token 886: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0014648657524958253
    2. '-' → logprob: -7.00146484375
    3. ' -' → logprob: -7.50146484375
    4. '-n' → logprob: -14.37646484375
    5. '-t' → logprob: -16.12646484375
    6. '-h' → logprob: -17.12646484375
    7. ' ' → logprob: -17.37646484375
    8. '	' → logprob: -17.62646484375
    9. '_k' → logprob: -18.00146484375
    10. '_minus' → logprob: -18.00146484375

Token 887: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6077241897583008
    2. ')' → logprob: -1.2327241897583008
    3. '   ' → logprob: -1.9827241897583008
    4. '])' → logprob: -3.857724189758301
    5. ')
' → logprob: -5.982724189758301
    6. ']
' → logprob: -7.232724189758301
    7. '])
' → logprob: -7.357724189758301
    8. ')]' → logprob: -8.2327241897583
    9. '```' → logprob: -8.9827241897583
    10. ' )' → logprob: -9.2327241897583

Token 888: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008510822663083673
    2. 'z' → logprob: -7.375851154327393
    3. ' z' → logprob: -8.750850677490234
    4. '```' → logprob: -9.875850677490234
    5. '	z' → logprob: -12.250850677490234
    6. ')' → logprob: -13.000850677490234
    7. '       ' → logprob: -13.250850677490234
    8. '   ' → logprob: -13.750850677490234
    9. ' +' → logprob: -14.000850677490234
    10. '``' → logprob: -14.625850677490234

Token 889: ' term' (ID: 2914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04988061264157295
    2. 'z' → logprob: -3.0498805046081543
    3. ' z' → logprob: -6.674880504608154
    4. '	z' → logprob: -10.674880981445312
    5. '
' → logprob: -13.424880981445312
    6. ' ' → logprob: -13.799880981445312
    7. '   ' → logprob: -13.799880981445312
    8. '```' → logprob: -13.799880981445312
    9. '       ' → logprob: -14.424880981445312
    10. '  ' → logprob: -14.674880981445312

Token 890: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048588622361421585
    2. '=' → logprob: -3.048588514328003
    3. ' =(' → logprob: -14.548588752746582
    4. '   ' → logprob: -15.048588752746582
    5. ' ' → logprob: -15.298588752746582
    6. ' +=' → logprob: -16.423587799072266
    7. ' =
' → logprob: -17.548587799072266
    8. '	' → logprob: -17.673587799072266
    9. ' ' → logprob: -17.923587799072266
    10. '  ' → logprob: -18.298587799072266

Token 891: ' (
' (ID: 4112)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.053027328103780746
    2. ' (' → logprob: -3.428027391433716
    3. '((' → logprob: -4.053027153015137
    4. '(' → logprob: -6.803027153015137
    5. ' ((' → logprob: -7.678027153015137
    6. '(F' → logprob: -9.178027153015137
    7. '(((' → logprob: -9.428027153015137
    8. ' ' → logprob: -11.178027153015137
    9. '(b' → logprob: -11.303027153015137
    10. '(
' → logprob: -11.428027153015137

Token 892: '       ' (ID: 309)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.02289426140487194
    2. ' (' → logprob: -4.147894382476807
    3. '   ' → logprob: -5.022894382476807
    4. '((' → logprob: -9.272893905639648
    5. ' ' → logprob: -9.897893905639648
    6. 'B' → logprob: -10.147893905639648
    7. '(' → logprob: -10.772893905639648
    8. '       ' → logprob: -11.147893905639648
    9. '     ' → logprob: -12.147893905639648
    10. '  ' → logprob: -12.272893905639648

Token 893: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00031258241506293416
    2. '((' → logprob: -9.125312805175781
    3. ' (' → logprob: -9.250312805175781
    4. '   ' → logprob: -9.500312805175781
    5. '(' (adapté à ' (') → logprob: -11.000312805175781
    6. 'B' → logprob: -11.625312805175781
    7. '(b' → logprob: -13.625312805175781
    8. ' ' → logprob: -13.625312805175781
    9. '(
' → logprob: -13.875312805175781
    10. '       ' → logprob: -14.375312805175781

Token 894: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06199323385953903
    2. '(B' → logprob: -2.81199312210083
    3. ' B' → logprob: -11.686993598937988
    4. '(' → logprob: -11.811993598937988
    5. ' (' → logprob: -12.186993598937988
    6. '   ' → logprob: -12.936993598937988
    7. '	B' → logprob: -14.436993598937988
    8. '(
' → logprob: -14.561993598937988
    9. '((' → logprob: -14.936993598937988
    10. '_B' → logprob: -15.686993598937988

Token 895: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2899095416069031
    2. '-k' → logprob: -1.5399096012115479
    3. '-' → logprob: -3.289909601211548
    4. '   ' → logprob: -12.289909362792969
    5. ' ' → logprob: -13.539909362792969
    6. '-K' → logprob: -13.664909362792969
    7. '  ' → logprob: -14.789909362792969
    8. '-token' → logprob: -14.789909362792969
    9. '<|end|>' → logprob: -15.164909362792969
    10. '-B' → logprob: -15.164909362792969

Token 896: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.1689596148207784e-05
    2. ' k' → logprob: -9.875051498413086
    3. '1' → logprob: -15.875051498413086
    4. '   ' → logprob: -17.000051498413086
    5. '	k' → logprob: -17.750051498413086
    6. ' ' → logprob: -19.375051498413086
    7. ')' → logprob: -19.500051498413086
    8. '_k' → logprob: -19.875051498413086
    9. '{k' → logprob: -20.125051498413086
    10. '(k' → logprob: -20.375051498413086

Token 897: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004471185151487589
    2. '-' → logprob: -6.379471302032471
    3. ')*' → logprob: -6.754471302032471
    4. ' -' → logprob: -7.254471302032471
    5. '   ' → logprob: -7.754471302032471
    6. ' )' → logprob: -8.004470825195312
    7. ')
' → logprob: -10.129470825195312
    8. '*' → logprob: -10.629470825195312
    9. '       ' → logprob: -10.629470825195312
    10. '```' → logprob: -11.379470825195312

Token 898: '                     ' (ID: 4451)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38857632875442505
    2. '*' → logprob: -1.1385762691497803
    3. '   ' → logprob: -6.763576507568359
    4. ')' → logprob: -8.26357650756836
    5. ' *
' → logprob: -9.01357650756836
    6. '*
' → logprob: -9.13857650756836
    7. ' ' → logprob: -10.51357650756836
    8. ' ' → logprob: -11.63857650756836
    9. '       ' → logprob: -12.26357650756836
    10. ')*' → logprob: -12.51357650756836

Token 899: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16144512593746185
    2. ' *' → logprob: -1.911445140838623
    3. '   ' → logprob: -7.536445140838623
    4. ')' → logprob: -7.911445140838623
    5. '*
' → logprob: -8.411444664001465
    6. ' *
' → logprob: -10.036444664001465
    7. ')*' → logprob: -10.536444664001465
    8. '*
' → logprob: -12.161444664001465
    9. ' ' → logprob: -12.286444664001465
    10. '       ' → logprob: -12.286444664001465

Token 900: ' facteur' (ID: 175214)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5963724851608276
    2. '*' → logprob: -0.8463724851608276
    3. ')' → logprob: -3.971372604370117
    4. ' *
' → logprob: -7.971372604370117
    5. '*
' → logprob: -8.221372604370117
    6. '*(' → logprob: -8.471372604370117
    7. ')*' → logprob: -8.596372604370117
    8. ' )' → logprob: -9.096372604370117
    9. '*)' → logprob: -9.221372604370117
    10. ' (' → logprob: -9.846372604370117

Token 901: ' lin' (ID: 14432)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12689943611621857
    2. '*' → logprob: -2.251899480819702
    3. ')' → logprob: -4.376899242401123
    4. ' )' → logprob: -7.376899242401123
    5. ' *
' → logprob: -8.251899719238281
    6. ')*' → logprob: -8.626899719238281
    7. '   ' → logprob: -9.251899719238281
    8. ' ' → logprob: -9.251899719238281
    9. '    ' → logprob: -10.376899719238281
    10. '*
' → logprob: -10.626899719238281

Token 902: 'é' (ID: 377)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -1.0468112230300903
    2. '+' → logprob: -1.4218112230300903
    3. ')' → logprob: -1.5468112230300903
    4. 'er' → logprob: -2.546811103820801
    5. '*' → logprob: -3.046811103820801
    6. '   ' → logprob: -3.921811103820801
    7. '-' → logprob: -4.671811103820801
    8. ' +' → logprob: -5.171811103820801
    9. ' *' → logprob: -5.171811103820801
    10. ' )' → logprob: -5.171811103820801

Token 903: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.20564034581184387
    2. 'r' → logprob: -3.4556403160095215
    3. 'éral' → logprob: -3.5806403160095215
    4. 'ar' → logprob: -3.8306403160095215
    5. 'er' → logprob: -3.8306403160095215
    6. 'ra' → logprob: -3.8306403160095215
    7. 'al' → logprob: -4.3306403160095215
    8. 'rale' → logprob: -4.9556403160095215
    9. 'éraire' → logprob: -5.3306403160095215
    10. 'taire' → logprob: -5.7056403160095215

Token 904: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1286909431219101
    2. ' *' → logprob: -2.2536909580230713
    3. '*
' → logprob: -4.878690719604492
    4. ')' → logprob: -5.253690719604492
    5. '   ' → logprob: -6.753690719604492
    6. ' *
' → logprob: -6.753690719604492
    7. ')*' → logprob: -8.378690719604492
    8. '*)' → logprob: -9.503690719604492
    9. '       ' → logprob: -9.628690719604492
    10. '*(' → logprob: -9.878690719604492

Token 905: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05001113563776016
    2. ' *' → logprob: -3.175011157989502
    3. '*
' → logprob: -5.050011157989502
    4. ' *
' → logprob: -8.175010681152344
    5. ')' → logprob: -8.550010681152344
    6. '*

' → logprob: -10.425010681152344
    7. '   ' → logprob: -10.550010681152344
    8. ')*' → logprob: -11.425010681152344
    9. ' ' → logprob: -11.425010681152344
    10. '*
' → logprob: -11.800010681152344

Token 906: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38857176899909973
    2. '*' (adapté à ' *') → logprob: -1.1385717391967773
    3. ' *
' → logprob: -7.638571739196777
    4. ')' → logprob: -7.763571739196777
    5. '*(' → logprob: -8.263571739196777
    6. '*
' → logprob: -8.388571739196777
    7. '   ' → logprob: -8.513571739196777
    8. ')*' → logprob: -10.638571739196777
    9. ' ' → logprob: -10.638571739196777
    10. '*)' → logprob: -11.388571739196777

Token 907: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -3.292907877039397e-06
    2. '(F' → logprob: -12.87500286102295
    3. ' F' → logprob: -14.37500286102295
    4. '(' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '	F' → logprob: -19.250003814697266
    7. '(
' → logprob: -20.250003814697266
    8. ' ' → logprob: -20.500003814697266
    9. '  ' → logprob: -20.625003814697266
    10. ' (' → logprob: -20.875003814697266

Token 908: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -1.5570885807392187e-05
    2. 'B' → logprob: -11.625015258789062
    3. '[
' → logprob: -12.750015258789062
    4. '(B' → logprob: -13.000015258789062
    5. '[' → logprob: -13.875015258789062
    6. '[b' → logprob: -15.375015258789062
    7. '   ' → logprob: -16.625015258789062
    8. '```' → logprob: -16.625015258789062
    9. '[(' → logprob: -16.750015258789062
    10. ' [' → logprob: -17.500015258789062

Token 909: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.003376622684299946
    2. '+' → logprob: -6.128376483917236
    3. ' +' → logprob: -6.753376483917236
    4. 'k' → logprob: -11.128376960754395
    5. '   ' → logprob: -12.128376960754395
    6. '-' → logprob: -13.753376960754395
    7. '[k' → logprob: -13.878376960754395
    8. '+
' → logprob: -15.128376960754395
    9. '-k' → logprob: -15.753376960754395
    10. '       ' → logprob: -15.753376960754395

Token 910: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.292907877039397e-06
    2. '+k' → logprob: -13.12500286102295
    3. '(k' → logprob: -14.50000286102295
    4. ' k' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.25000286102295
    6. '{k' → logprob: -17.000003814697266
    7. '+' → logprob: -17.500003814697266
    8. ' ' → logprob: -17.875003814697266
    9. '_k' → logprob: -18.500003814697266
    10. '[k' → logprob: -18.750003814697266

Token 911: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002191660227254033
    2. ' -' → logprob: -6.127191543579102
    3. '   ' → logprob: -13.252191543579102
    4. '[' → logprob: -13.502191543579102
    5. ']' → logprob: -13.752191543579102
    6. '<|end|>' → logprob: -14.752191543579102
    7. ' ' → logprob: -14.877191543579102
    8. '−' → logprob: -15.502191543579102
    9. '[-' → logprob: -15.752191543579102
    10. '-
' → logprob: -15.752191543579102

Token 912: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. '
' → logprob: -19.0
    6. '' → logprob: -19.125
    7. '<|end|>' → logprob: -19.75
    8. '<|end|>' → logprob: -20.0
    9. '-' → logprob: -20.125
    10. '  ' → logprob: -20.125

Token 913: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -17.75
    4. '2' → logprob: -19.625
    5. '```' → logprob: -20.125
    6. '' → logprob: -20.375
    7. '۱' → logprob: -20.5
    8. '(' → logprob: -20.5
    9. '  ' → logprob: -20.625
    10. '

' → logprob: -20.625

Token 914: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020354038861114532
    2. ']
' → logprob: -8.625203132629395
    3. ' ]' → logprob: -11.125203132629395
    4. ']
' → logprob: -12.750203132629395
    5. ']%' → logprob: -12.750203132629395
    6. '])' → logprob: -13.625203132629395
    7. ')' → logprob: -13.750203132629395
    8. '   ' → logprob: -15.000203132629395
    9. ']*' → logprob: -15.125203132629395
    10. ']

' → logprob: -15.500203132629395

Token 915: '              ' (ID: 4442)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 916: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0560468435287476
    2. ')' → logprob: -1.3060468435287476
    3. ' *' → logprob: -1.5560468435287476
    4. '<|end|>' → logprob: -1.8060468435287476
    5. '   ' → logprob: -6.306046962738037
    6. '<|end|>' → logprob: -6.431046962738037
    7. ' )' → logprob: -6.681046962738037
    8. ')*' → logprob: -7.431046962738037
    9. '*)' → logprob: -8.806046485900879
    10. ' ' → logprob: -9.306046485900879

Token 917: ' factor' (ID: 12332)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 918: 'ielle' (ID: 22380)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4857956171035767
    2. ')' → logprob: -1.6107956171035767
    3. 'ielle' → logprob: -1.6107956171035767
    4. 'iel' → logprob: -2.110795497894287
    5. '*' → logprob: -2.485795497894287
    6. 'ial' → logprob: -2.485795497894287
    7. ']' → logprob: -3.235795497894287
    8. '(' → logprob: -5.110795497894287
    9. '   ' → logprob: -5.485795497894287
    10. '[i' → logprob: -5.485795497894287

Token 919: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.8546193242073059
    2. '[B' → logprob: -1.7296192646026611
    3. ']' → logprob: -1.9796192646026611
    4. 'k' → logprob: -2.354619264602661
    5. 'B' → logprob: -2.604619264602661
    6. '<|end|>' → logprob: -3.479619264602661
    7. 'Q' → logprob: -3.729619264602661
    8. ')' → logprob: -4.47961950302124
    9. '[k' → logprob: -4.85461950302124
    10. 'F' → logprob: -5.97961950302124

Token 921: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006669189780950546
    2. 'k' → logprob: -5.256669044494629
    3. '(B' → logprob: -7.381669044494629
    4. ' B' → logprob: -8.131669044494629
    5. ')' → logprob: -8.381669044494629
    6. 'Q' → logprob: -9.506669044494629
    7. '   ' → logprob: -9.881669044494629
    8. ']' → logprob: -10.006669044494629
    9. '[B' → logprob: -10.131669044494629
    10. '<|end|>' → logprob: -10.756669044494629

Token 922: '+k' (ID: 110434)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40498167276382446
    2. '+' → logprob: -1.5299816131591797
    3. '+k' → logprob: -2.1549816131591797
    4. ')' → logprob: -8.02998161315918
    5. '   ' → logprob: -9.15498161315918
    6. '+
' → logprob: -10.52998161315918
    7. ' +
' → logprob: -10.77998161315918
    8. ')+' → logprob: -11.27998161315918
    9. '       ' → logprob: -11.40498161315918
    10. '[' → logprob: -11.52998161315918

Token 923: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20195448398590088
    2. ' -' → logprob: -1.7019544839859009
    3. ')' → logprob: -7.826954364776611
    4. '   ' → logprob: -9.95195484161377
    5. '       ' → logprob: -10.45195484161377
    6. '[' → logprob: -10.57695484161377
    7. ']' → logprob: -11.45195484161377
    8. ' ' → logprob: -11.70195484161377
    9. '<|end|>' → logprob: -12.45195484161377
    10. '```' → logprob: -12.95195484161377

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006009306525811553
    2. '-' → logprob: -7.750600814819336
    3. 'k' → logprob: -9.375600814819336
    4. ' ' → logprob: -10.125600814819336
    5. '   ' → logprob: -10.375600814819336
    6. ')' → logprob: -11.875600814819336
    7. ' -' → logprob: -13.125600814819336
    8. '```' → logprob: -13.250600814819336
    9. ' k' → logprob: -13.750600814819336
    10. '
' → logprob: -15.000600814819336

Token 925: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042256563901901245
    2. '       ' → logprob: -3.5422565937042236
    3. '   ' → logprob: -4.6672563552856445
    4. ')*' → logprob: -6.6672563552856445
    5. '*' → logprob: -7.0422563552856445
    6. '<|end|>' → logprob: -8.042256355285645
    7. ' *' → logprob: -8.167256355285645
    8. ')
' → logprob: -9.667256355285645
    9. ' )' → logprob: -9.917256355285645
    10. ']' → logprob: -10.417256355285645

Token 926: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.15489235520362854
    2. ' *' → logprob: -2.2798924446105957
    3. '   ' → logprob: -3.6548924446105957
    4. ')' → logprob: -4.904892444610596
    5. '       ' → logprob: -5.779892444610596
    6. '<|end|>' → logprob: -6.279892444610596
    7. '```' → logprob: -6.279892444610596
    8. ')*' → logprob: -8.279891967773438
    9. ' ' → logprob: -9.029891967773438
    10. '  ' → logprob: -9.279891967773438

Token 927: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.02605328895151615
    2. ' *' → logprob: -3.9010531902313232
    3. ')' → logprob: -5.401053428649902
    4. '   ' → logprob: -7.151053428649902
    5. '```' → logprob: -10.151053428649902
    6. ')*' → logprob: -10.276053428649902
    7. '<|end|>' → logprob: -10.401053428649902
    8. '       ' → logprob: -10.651053428649902
    9. '*
' → logprob: -11.151053428649902
    10. ' ' → logprob: -11.776053428649902

Token 928: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -4.4849443838757e-06
    2. '(I' → logprob: -13.000004768371582
    3. ' I' → logprob: -13.125004768371582
    4. '   ' → logprob: -16.125003814697266
    5. '	I' → logprob: -17.375003814697266
    6. '(' → logprob: -19.125003814697266
    7. ' ' → logprob: -20.000003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '[I' → logprob: -21.000003814697266
    10. '    ' → logprob: -21.125003814697266

Token 929: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.00012356207298580557
    2. 'B' → logprob: -9.000123977661133
    3. '[' → logprob: -16.875123977661133
    4. '(B' → logprob: -17.375123977661133
    5. '[b' → logprob: -17.625123977661133
    6. '	B' → logprob: -17.875123977661133
    7. '"B' → logprob: -18.750123977661133
    8. '```' → logprob: -19.375123977661133
    9. '_B' → logprob: -20.000123977661133
    10. ' B' → logprob: -20.250123977661133

Token 930: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034177995985373855
    2. '])' → logprob: -8.500341415405273
    3. ']
' → logprob: -9.250341415405273
    4. ']*' → logprob: -11.375341415405273
    5. '   ' → logprob: -11.500341415405273
    6. ' ]' → logprob: -11.625341415405273
    7. '       ' → logprob: -12.625341415405273
    8. ')' → logprob: -12.750341415405273
    9. ' ' → logprob: -13.625341415405273
    10. '],' → logprob: -14.250341415405273

Token 931: '                      ' (ID: 10682)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5316305160522461
    2. '   ' → logprob: -1.531630516052246
    3. '       ' → logprob: -2.281630516052246
    4. ' *' → logprob: -2.906630516052246
    5. '<|end|>' → logprob: -3.531630516052246
    6. ')' → logprob: -5.656630516052246
    7. '<|end|>' → logprob: -5.781630516052246
    8. '	' → logprob: -6.781630516052246
    9. '  ' → logprob: -7.656630516052246
    10. '[' → logprob: -7.781630516052246

Token 932: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5653533935546875
    2. '       ' → logprob: -1.5653533935546875
    3. '   ' → logprob: -2.0653533935546875
    4. ' *' → logprob: -3.0653533935546875
    5. ')' → logprob: -3.5653533935546875
    6. '<|end|>' → logprob: -3.9403533935546875
    7. '<|end|>' → logprob: -7.5653533935546875
    8. '  ' → logprob: -8.565353393554688
    9. ' ' → logprob: -8.815353393554688
    10. '	' → logprob: -8.940353393554688

Token 933: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.007017395459115505
    2. '*' → logprob: -5.507017612457275
    3. ' I' → logprob: -6.132017612457275
    4. '[I' → logprob: -7.257017612457275
    5. '(I' → logprob: -10.632017135620117
    6. ' *' → logprob: -11.382017135620117
    7. '   ' → logprob: -11.632017135620117
    8. 'k' → logprob: -12.632017135620117
    9. '       ' → logprob: -12.757017135620117
    10. '[k' → logprob: -13.632017135620117

Token 934: ' factor' (ID: 12332)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3046182692050934
    2. '[B' → logprob: -1.429618239402771
    3. '[' → logprob: -4.0546183586120605
    4. '*' → logprob: -5.4296183586120605
    5. ' [' → logprob: -7.6796183586120605
    6. ' *' → logprob: -7.6796183586120605
    7. '```' → logprob: -8.554617881774902
    8. '[I' → logprob: -8.929617881774902
    9. ' ' → logprob: -10.304617881774902
    10. '*[' → logprob: -10.429617881774902

Token 935: 'ielle' (ID: 22380)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3874899744987488
    2. '       ' → logprob: -1.8874900341033936
    3. '[B' → logprob: -2.7624900341033936
    4. '[I' → logprob: -2.8874900341033936
    5. '[' → logprob: -4.0124897956848145
    6. '```' → logprob: -4.3874897956848145
    7. '[(' → logprob: -5.5124897956848145
    8. ']' → logprob: -5.7624897956848145
    9. '   ' → logprob: -6.3874897956848145
    10. '[n' → logprob: -6.5124897956848145

Token 936: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22868692874908447
    2. '*' → logprob: -1.8536869287490845
    3. '<|end|>' → logprob: -3.853686809539795
    4. ' *' → logprob: -3.978686809539795
    5. '   ' → logprob: -5.228686809539795
    6. '[' → logprob: -6.853686809539795
    7. ')' → logprob: -7.728686809539795
    8. '[k' → logprob: -8.728687286376953
    9. '           ' → logprob: -8.978687286376953
    10. '```' → logprob: -9.478687286376953

Token 937: ' B' (ID: 418)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07450279593467712
    2. 'B' → logprob: -3.07450270652771
    3. '[k' → logprob: -3.82450270652771
    4. 'I' → logprob: -6.449502944946289
    5. '[B' → logprob: -6.699502944946289
    6. '   ' → logprob: -7.949502944946289
    7. 'A' → logprob: -8.074502944946289
    8. '[I' → logprob: -9.699502944946289
    9. '(B' → logprob: -9.949502944946289
    10. ')' → logprob: -10.074502944946289

Token 938: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2500762939453125
    2. '   ' → logprob: -2.2500762939453125
    3. '<|end|>' → logprob: -2.8750762939453125
    4. '*' → logprob: -3.3750762939453125
    5. ' *' → logprob: -4.2500762939453125
    6. ')' → logprob: -4.7500762939453125
    7. '```' → logprob: -7.6250762939453125
    8. '    ' → logprob: -8.125076293945312
    9. '  ' → logprob: -8.375076293945312
    10. '           ' → logprob: -8.625076293945312

Token 939: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 940: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.4355107545852661
    2. '       ' → logprob: -1.1855107545852661
    3. ' *' → logprob: -3.3105106353759766
    4. '   ' → logprob: -4.685510635375977
    5. '```' → logprob: -7.685510635375977
    6. '<|end|>' → logprob: -7.810510635375977
    7. ')' → logprob: -8.310510635375977
    8. '      ' → logprob: -8.435510635375977
    9. '	' → logprob: -9.435510635375977
    10. '    ' → logprob: -9.435510635375977

Token 941: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.558399319241289e-05
    2. ' I' → logprob: -11.250025749206543
    3. '   ' → logprob: -11.500025749206543
    4. '(I' → logprob: -13.125025749206543
    5. '       ' → logprob: -15.500025749206543
    6. '(' → logprob: -16.875024795532227
    7. '	I' → logprob: -17.000024795532227
    8. '  ' → logprob: -17.375024795532227
    9. '     ' → logprob: -18.000024795532227
    10. ' ' → logprob: -18.000024795532227

Token 942: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0007118358626030385
    2. 'k' → logprob: -7.250711917877197
    3. '[' → logprob: -13.375711441040039
    4. '(k' → logprob: -16.12571144104004
    5. '   ' → logprob: -16.25071144104004
    6. '[
' → logprob: -16.75071144104004
    7. '{k' → logprob: -16.87571144104004
    8. '	k' → logprob: -17.37571144104004
    9. '[A' → logprob: -17.75071144104004
    10. '
' → logprob: -19.12571144104004

Token 943: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014168102643452585
    2. ']
' → logprob: -9.625142097473145
    3. ' ]' → logprob: -10.125142097473145
    4. ')' → logprob: -11.250142097473145
    5. '   ' → logprob: -11.500142097473145
    6. '])' → logprob: -12.375142097473145
    7. '       ' → logprob: -12.625142097473145
    8. '']' → logprob: -13.750142097473145
    9. '      ' → logprob: -14.500142097473145
    10. ']*' → logprob: -14.500142097473145

Token 944: '                      ' (ID: 10682)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6177552938461304
    2. ' *' → logprob: -1.2427552938461304
    3. '       ' → logprob: -1.8677552938461304
    4. '   ' → logprob: -4.61775541305542
    5. '<|end|>' → logprob: -5.61775541305542
    6. '	' → logprob: -6.24275541305542
    7. '      ' → logprob: -6.99275541305542
    8. '    ' → logprob: -7.99275541305542
    9. '        ' → logprob: -8.242754936218262
    10. '  ' → logprob: -8.617754936218262

Token 945: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08652344346046448
    2. '       ' → logprob: -2.7115235328674316
    3. ' *' → logprob: -4.211523532867432
    4. '   ' → logprob: -6.711523532867432
    5. '<|end|>' → logprob: -8.836523056030273
    6. ')' → logprob: -9.086523056030273
    7. '      ' → logprob: -9.961523056030273
    8. '	' → logprob: -10.836523056030273
    9. '    ' → logprob: -11.211523056030273
    10. '  ' → logprob: -11.461523056030273

Token 946: ' inverse' (ID: 53743)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.0974746942520142
    2. '[A' → logprob: -1.2224746942520142
    3. '(B' → logprob: -2.3474745750427246
    4. '[k' → logprob: -2.8474745750427246
    5. '(k' → logprob: -2.8474745750427246
    6. '(A' → logprob: -3.3474745750427246
    7. '[B' → logprob: -3.3474745750427246
    8. 'k' → logprob: -3.3474745750427246
    9. '[I' → logprob: -3.4724745750427246
    10. '(' → logprob: -4.597474575042725

Token 947: ' factor' (ID: 12332)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.009735194966197014
    2. '[A' → logprob: -5.009735107421875
    3. '[' → logprob: -5.884735107421875
    4. '```' → logprob: -8.634735107421875
    5. '   ' → logprob: -11.384735107421875
    6. ' [' → logprob: -11.634735107421875
    7. 'A' → logprob: -12.009735107421875
    8. '`' → logprob: -12.509735107421875
    9. ' ' → logprob: -12.509735107421875
    10. '*' → logprob: -12.759735107421875

Token 948: 'ielle' (ID: 22380)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.6654685735702515
    2. '_factor' → logprob: -0.7904685735702515
    3. ')' → logprob: -4.665468692779541
    4. '_fact' → logprob: -5.040468692779541
    5. '   ' → logprob: -5.415468692779541
    6. '[' → logprob: -6.415468692779541
    7. ' factor' → logprob: -6.415468692779541
    8. ' factorial' → logprob: -6.415468692779541
    9. '<|end|>' → logprob: -6.540468692779541
    10. '_' → logprob: -7.290468692779541

Token 949: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 950: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000253591249929741
    2. '(k' → logprob: -8.375253677368164
    3. '[k' → logprob: -11.375253677368164
    4. ' k' → logprob: -11.625253677368164
    5. '   ' → logprob: -13.375253677368164
    6. '(A' → logprob: -14.625253677368164
    7. 'A' → logprob: -15.500253677368164
    8. '	k' → logprob: -16.250253677368164
    9. ' (' → logprob: -16.375253677368164
    10. '{k' → logprob: -17.000253677368164

Token 951: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6775299310684204
    2. '   ' → logprob: -1.3025299310684204
    3. '*' → logprob: -2.427529811859131
    4. '<|end|>' → logprob: -2.552529811859131
    5. ' *' → logprob: -3.177529811859131
    6. ')' → logprob: -4.802529811859131
    7. '<|end|>' → logprob: -6.427529811859131
    8. '	' → logprob: -7.302529811859131
    9. '    ' → logprob: -7.802529811859131
    10. '  ' → logprob: -7.927529811859131

Token 952: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.743223249912262
    2. '       ' → logprob: -1.4932231903076172
    3. '   ' → logprob: -1.7432231903076172
    4. ' *' → logprob: -2.493223190307617
    5. '```' → logprob: -3.868223190307617
    6. '<|end|>' → logprob: -4.243223190307617
    7. ')' → logprob: -5.493223190307617
    8. ')*' → logprob: -7.618223190307617
    9. '    ' → logprob: -7.618223190307617
    10. '`' → logprob: -7.993223190307617

Token 953: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.6480913162231445
    2. '       ' → logprob: -1.2730913162231445
    3. ' *' → logprob: -1.6480913162231445
    4. '   ' → logprob: -5.7730913162231445
    5. ')' → logprob: -7.7730913162231445
    6. '	' → logprob: -8.023091316223145
    7. '        ' → logprob: -8.773091316223145
    8. '<|end|>' → logprob: -8.773091316223145
    9. '      ' → logprob: -9.023091316223145
    10. '```' → logprob: -9.148091316223145

Token 954: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.000454506283858791
    2. '(F' → logprob: -7.875454425811768
    3. ' F' → logprob: -10.500454902648926
    4. '(' → logprob: -10.625454902648926
    5. '(
' → logprob: -11.375454902648926
    6. '   ' → logprob: -11.625454902648926
    7. ' (' → logprob: -15.000454902648926
    8. '  ' → logprob: -15.000454902648926
    9. '	F' → logprob: -15.000454902648926
    10. 'f' → logprob: -15.125454902648926

Token 955: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.249780638725497e-05
    2. 'Q' → logprob: -10.375032424926758
    3. '[
' → logprob: -14.750032424926758
    4. '(Q' → logprob: -15.000032424926758
    5. '	Q' → logprob: -16.250032424926758
    6. '   ' → logprob: -16.875032424926758
    7. '[P' → logprob: -16.875032424926758
    8. '<Q' → logprob: -17.000032424926758
    9. ' [' → logprob: -17.375032424926758
    10. '```' → logprob: -17.625032424926758

Token 956: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.000003814697266
    3. ' Q' → logprob: -14.375003814697266
    4. '(Q' → logprob: -14.625003814697266
    5. '	Q' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '(' → logprob: -20.625003814697266
    8. '<Q' → logprob: -20.750003814697266
    9. ' ' → logprob: -22.125003814697266
    10. '_Q' → logprob: -22.250003814697266

Token 957: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008785806596279144
    2. '+A' → logprob: -4.883785724639893
    3. ' +' → logprob: -6.758785724639893
    4. '+
' → logprob: -12.00878620147705
    5. 'A' → logprob: -12.63378620147705
    6. '   ' → logprob: -12.75878620147705
    7. '[' → logprob: -13.00878620147705
    8. 'Q' → logprob: -13.63378620147705
    9. '＋' → logprob: -15.00878620147705
    10. '+C' → logprob: -15.00878620147705

Token 958: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8624639324116288e-06
    2. ' A' → logprob: -13.375001907348633
    3. '(A' → logprob: -15.250001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '[A' → logprob: -18.375001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. 'k' → logprob: -19.125001907348633
    8. '	A' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '(' → logprob: -20.125001907348633

Token 959: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.11895119398832321
    2. '-' → logprob: -2.2439510822296143
    3. ' -' → logprob: -5.118951320648193
    4. 'k' → logprob: -10.118950843811035
    5. '<|end|>' → logprob: -10.618950843811035
    6. '-A' → logprob: -10.868950843811035
    7. '-Q' → logprob: -12.118950843811035
    8. '-token' → logprob: -12.368950843811035
    9. '[' → logprob: -12.743950843811035
    10. '-python' → logprob: -12.868950843811035

Token 960: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.125
    3. '-k' → logprob: -19.0
    4. '_k' → logprob: -20.5
    5. '	k' → logprob: -21.0
    6. '   ' → logprob: -21.75
    7. '{k' → logprob: -22.375
    8. '(k' → logprob: -22.5
    9. '```' → logprob: -22.875
    10. '[k' → logprob: -22.875

Token 961: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008334511076100171
    2. ']
' → logprob: -7.125833511352539
    3. ']
' → logprob: -11.500833511352539
    4. '])' → logprob: -12.000833511352539
    5. ' ]' → logprob: -12.750833511352539
    6. ']

' → logprob: -12.875833511352539
    7. '   ' → logprob: -12.875833511352539
    8. ')' → logprob: -13.375833511352539
    9. ']*' → logprob: -13.500833511352539
    10. '],' → logprob: -15.000833511352539

Token 962: '              ' (ID: 4442)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5850958824157715
    2. ' *' → logprob: -1.2100958824157715
    3. '       ' → logprob: -2.3350958824157715
    4. '   ' → logprob: -3.5850958824157715
    5. '<|end|>' → logprob: -4.0850958824157715
    6. ')' → logprob: -6.3350958824157715
    7. '	' → logprob: -7.9600958824157715
    8. '```' → logprob: -8.33509635925293
    9. '<|end|>' → logprob: -8.58509635925293
    10. '      ' → logprob: -8.71009635925293

Token 963: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12943388521671295
    2. '       ' → logprob: -2.3794338703155518
    3. ' *' → logprob: -3.8794338703155518
    4. '   ' → logprob: -5.379434108734131
    5. ')' → logprob: -6.379434108734131
    6. '<|end|>' → logprob: -6.629434108734131
    7. '      ' → logprob: -9.379433631896973
    8. ')*' → logprob: -9.504433631896973
    9. '	' → logprob: -9.629433631896973
    10. '<|end|>' → logprob: -9.879433631896973

Token 964: ' factor' (ID: 12332)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.2218267321586609
    2. 'Q' → logprob: -1.9718267917633057
    3. 'I' → logprob: -2.9718267917633057
    4. '(I' → logprob: -5.346826553344727
    5. '(' → logprob: -6.096826553344727
    6. '[' → logprob: -7.096826553344727
    7. '[I' → logprob: -7.596826553344727
    8. 'F' → logprob: -9.596826553344727
    9. ')' → logprob: -10.471826553344727
    10. '(F' → logprob: -10.471826553344727

Token 965: 'ielle' (ID: 22380)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34133249521255493
    2. '[A' → logprob: -1.4663324356079102
    3. ']' → logprob: -4.09133243560791
    4. '[I' → logprob: -4.09133243560791
    5. '[F' → logprob: -4.34133243560791
    6. '       ' → logprob: -5.21633243560791
    7. '[k' → logprob: -5.84133243560791
    8. '][' → logprob: -7.46633243560791
    9. '[
' → logprob: -7.59133243560791
    10. 'Q' → logprob: -7.71633243560791

Token 966: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. ' [' → logprob: -11.625015258789062
    3. '   ' → logprob: -13.000015258789062
    4. '(Q' → logprob: -14.000015258789062
    5. '       ' → logprob: -14.250015258789062
    6. '[
' → logprob: -14.375015258789062
    7. '```' → logprob: -14.375015258789062
    8. ' ' → logprob: -15.875015258789062
    9. '[(' → logprob: -15.875015258789062
    10. '\[' → logprob: -16.125015258789062

Token 967: ' (' (ID: 350)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0007513784803450108
    2. 'Q' → logprob: -7.250751495361328
    3. '[' → logprob: -10.500751495361328
    4. '(' → logprob: -11.250751495361328
    5. ' (' → logprob: -14.875751495361328
    6. ' Q' → logprob: -14.875751495361328
    7. '	Q' → logprob: -16.125751495361328
    8. ',Q' → logprob: -17.750751495361328
    9. '<Q' → logprob: -18.625751495361328
    10. '   ' → logprob: -18.875751495361328

Token 968: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00014418430509977043
    2. '(Q' → logprob: -9.000144004821777
    3. ' Q' → logprob: -10.875144004821777
    4. '(' → logprob: -14.750144004821777
    5. '   ' → logprob: -14.750144004821777
    6. '[' → logprob: -14.875144004821777
    7. '	Q' → logprob: -15.000144004821777
    8. ' ' → logprob: -16.125144958496094
    9. '```' → logprob: -17.125144958496094
    10. ']' → logprob: -17.125144958496094

Token 969: '+A' (ID: 195068)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03479146584868431
    2. ' +' → logprob: -3.4097914695739746
    3. '+A' → logprob: -6.784791469573975
    4. '   ' → logprob: -12.159790992736816
    5. ' ' → logprob: -13.159790992736816
    6. '+
' → logprob: -13.409790992736816
    7. '[' → logprob: -13.659790992736816
    8. 'A' → logprob: -13.909790992736816
    9. '       ' → logprob: -14.409790992736816
    10. '[A' → logprob: -14.784790992736816

Token 970: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.8693520426750183
    2. ' -' → logprob: -1.119352102279663
    3. '-' → logprob: -1.369352102279663
    4. '   ' → logprob: -12.119352340698242
    5. ' ' → logprob: -12.744352340698242
    6. '[' → logprob: -13.994352340698242
    7. '[k' → logprob: -14.494352340698242
    8. '       ' → logprob: -14.619352340698242
    9. '-t' → logprob: -14.744352340698242
    10. '-K' → logprob: -14.744352340698242

Token 971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5348647236824036
    2. '       ' → logprob: -1.0348646640777588
    3. ']' → logprob: -3.159864664077759
    4. '   ' → logprob: -4.159864902496338
    5. '*' → logprob: -8.28486442565918
    6. '<|end|>' → logprob: -8.78486442565918
    7. '```' → logprob: -9.28486442565918
    8. ')
' → logprob: -9.28486442565918
    9. ')*' → logprob: -9.53486442565918
    10. ' )' → logprob: -9.78486442565918

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6969540119171143
    2. '*' → logprob: -0.9469540119171143
    3. ' *' → logprob: -2.1969540119171143
    4. '   ' → logprob: -6.071953773498535
    5. '```' → logprob: -8.196953773498535
    6. '      ' → logprob: -9.321953773498535
    7. '<|end|>' → logprob: -9.821953773498535
    8. ')' → logprob: -10.446953773498535
    9. '        ' → logprob: -10.696953773498535
    10. '    ' → logprob: -11.321953773498535

Token 973: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.07273820042610168
    2. '       ' → logprob: -3.1977381706237793
    3. ' *' → logprob: -3.5727381706237793
    4. '   ' → logprob: -6.822738170623779
    5. '```' → logprob: -9.572738647460938
    6. ')' → logprob: -11.197738647460938
    7. '      ' → logprob: -11.322738647460938
    8. '    ' → logprob: -11.822738647460938
    9. '        ' → logprob: -11.947738647460938
    10. '<|end|>' → logprob: -12.072738647460938

Token 974: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.2127087504486553e-05
    2. ' I' → logprob: -11.000021934509277
    3. '   ' → logprob: -12.750021934509277
    4. '(I' → logprob: -13.250021934509277
    5. '	I' → logprob: -15.000021934509277
    6. '(' → logprob: -15.375021934509277
    7. '       ' → logprob: -17.250022888183594
    8. ' ' → logprob: -17.625022888183594
    9. '  ' → logprob: -17.750022888183594
    10. '    ' → logprob: -17.750022888183594

Token 975: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4736459888808895e-05
    2. 'Q' → logprob: -11.250014305114746
    3. '(Q' → logprob: -13.500014305114746
    4. '<Q' → logprob: -16.125015258789062
    5. '	Q' → logprob: -16.500015258789062
    6. '[
' → logprob: -17.375015258789062
    7. '```' → logprob: -17.625015258789062
    8. '[q' → logprob: -17.750015258789062
    9. '[(' → logprob: -17.875015258789062
    10. ' Q' → logprob: -18.125015258789062

Token 976: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0009152670972980559
    2. '[' → logprob: -7.000915050506592
    3. '(Q' → logprob: -12.50091552734375
    4. '	Q' → logprob: -16.87591552734375
    5. ' Q' → logprob: -17.50091552734375
    6. '{' → logprob: -19.12591552734375
    7. '(' → logprob: -19.75091552734375
    8. '<Q' → logprob: -20.87591552734375
    9. ',Q' → logprob: -21.00091552734375
    10. '_Q' → logprob: -21.37591552734375

Token 977: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.7053759519476444e-05
    2. '   ' → logprob: -10.625057220458984
    3. ' ]' → logprob: -10.750057220458984
    4. ']
' → logprob: -12.625057220458984
    5. ')' → logprob: -13.250057220458984
    6. ']*' → logprob: -13.250057220458984
    7. '[' → logprob: -13.750057220458984
    8. '*' → logprob: -14.125057220458984
    9. ' ' → logprob: -14.375057220458984
    10. '])' → logprob: -14.500057220458984

Token 978: '                      ' (ID: 10682)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3073587715625763
    2. '       ' → logprob: -1.932358741760254
    3. ' *' → logprob: -2.432358741760254
    4. '   ' → logprob: -3.557358741760254
    5. '      ' → logprob: -7.057358741760254
    6. '    ' → logprob: -7.682358741760254
    7. '	' → logprob: -7.807358741760254
    8. '        ' → logprob: -8.057358741760254
    9. ' ' → logprob: -8.057358741760254
    10. '  ' → logprob: -8.057358741760254

Token 979: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0471511147916317
    2. ' *' → logprob: -3.2971510887145996
    3. ')' → logprob: -5.6721510887146
    4. '       ' → logprob: -5.7971510887146
    5. '   ' → logprob: -6.1721510887146
    6. '<|end|>' → logprob: -8.047151565551758
    7. '	' → logprob: -10.172151565551758
    8. '*)' → logprob: -10.797151565551758
    9. ' ' → logprob: -10.922151565551758
    10. '<|end|>' → logprob: -10.922151565551758

Token 980: ' inverse' (ID: 53743)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3155610263347626
    2. 'I' → logprob: -1.315561056137085
    3. ' I' → logprob: -6.815560817718506
    4. ' *' → logprob: -7.690560817718506
    5. '   ' → logprob: -8.065561294555664
    6. '[I' → logprob: -8.315561294555664
    7. '(I' → logprob: -9.440561294555664
    8. '       ' → logprob: -9.690561294555664
    9. '```' → logprob: -11.190561294555664
    10. ')' → logprob: -11.940561294555664

Token 981: ' factor' (ID: 12332)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017534231767058372
    2. '*' → logprob: -4.642534255981445
    3. '```' → logprob: -5.142534255981445
    4. '[I' → logprob: -6.642534255981445
    5. '[q' → logprob: -9.017534255981445
    6. '[n' → logprob: -9.392534255981445
    7. '   ' → logprob: -9.642534255981445
    8. '*[' → logprob: -9.892534255981445
    9. '       ' → logprob: -10.017534255981445
    10. '[k' → logprob: -10.142534255981445

Token 982: 'ielle' (ID: 22380)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.165621042251587
    2. '_f' → logprob: -1.665621042251587
    3. '[' → logprob: -2.165621042251587
    4. 'factor' → logprob: -2.165621042251587
    5. '_factor' → logprob: -2.415621042251587
    6. '       ' → logprob: -2.665621042251587
    7. '```' → logprob: -3.540621042251587
    8. '   ' → logprob: -4.540620803833008
    9. '[I' → logprob: -4.540620803833008
    10. ']' → logprob: -4.915620803833008

Token 983: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7794085144996643
    2. '[' → logprob: -1.4044084548950195
    3. '```' → logprob: -1.7794084548950195
    4. ']' → logprob: -2.2794084548950195
    5. '   ' → logprob: -4.7794084548950195
    6. '       ' → logprob: -5.4044084548950195
    7. '[n' → logprob: -5.4044084548950195
    8. ')' → logprob: -5.7794084548950195
    9. ']*' → logprob: -6.6544084548950195
    10. ' *' → logprob: -7.4044084548950195

Token 984: ' Q' (ID: 1486)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7323370575904846
    2. 'Q' → logprob: -0.9823370575904846
    3. 'M' → logprob: -2.85733699798584
    4. '[' → logprob: -3.23233699798584
    5. '(Q' → logprob: -3.48233699798584
    6. '[I' → logprob: -4.98233699798584
    7. '(I' → logprob: -5.85733699798584
    8. '(' → logprob: -5.98233699798584
    9. '   ' → logprob: -7.10733699798584
    10. '```' → logprob: -7.23233699798584

Token 985: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0465628020465374
    2. '   ' → logprob: -3.546562910079956
    3. '*' → logprob: -4.421562671661377
    4. '<|end|>' → logprob: -5.921562671661377
    5. ' *' → logprob: -6.671562671661377
    6. ')' → logprob: -8.171563148498535
    7. '	' → logprob: -9.046563148498535
    8. '  ' → logprob: -9.546563148498535
    9. '      ' → logprob: -9.546563148498535
    10. '    ' → logprob: -10.171563148498535

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11846422404050827
    2. '   ' → logprob: -2.993464231491089
    3. '*' → logprob: -3.368464231491089
    4. ' *' → logprob: -3.868464231491089
    5. '    ' → logprob: -5.86846399307251
    6. '<|end|>' → logprob: -6.86846399307251
    7. '```' → logprob: -7.24346399307251
    8. '      ' → logprob: -7.36846399307251
    9. '        ' → logprob: -7.86846399307251
    10. ')' → logprob: -7.99346399307251

Token 987: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.019038306549191475
    2. ' *' → logprob: -4.019038200378418
    3. '       ' → logprob: -7.394038200378418
    4. '   ' → logprob: -8.269038200378418
    5. '```' → logprob: -12.269038200378418
    6. ')' → logprob: -12.769038200378418
    7. '<|end|>' → logprob: -12.769038200378418
    8. '    ' → logprob: -13.769038200378418
    9. ' ' → logprob: -13.769038200378418
    10. ' ' → logprob: -14.019038200378418

Token 988: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.4034345187828876e-05
    2. ' I' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.12502384185791
    4. '(I' → logprob: -14.87502384185791
    5. '       ' → logprob: -16.625024795532227
    6. '	I' → logprob: -17.000024795532227
    7. '```' → logprob: -17.125024795532227
    8. ' ' → logprob: -17.875024795532227
    9. '     ' → logprob: -18.375024795532227
    10. '    ' → logprob: -18.625024795532227

Token 989: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -6.0868278524139896e-05
    2. '[' → logprob: -9.75006103515625
    3. 'A' → logprob: -13.12506103515625
    4. '[
' → logprob: -15.12506103515625
    5. '```' → logprob: -17.12506103515625
    6. '   ' → logprob: -17.25006103515625
    7. '[a' → logprob: -17.25006103515625
    8. ' [' → logprob: -17.37506103515625
    9. '[[' → logprob: -17.50006103515625
    10. '	A' → logprob: -17.62506103515625

Token 990: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.005342974793165922
    2. '-' → logprob: -5.255342960357666
    3. ' -' → logprob: -9.130343437194824
    4. '-K' → logprob: -15.380343437194824
    5. '-A' → logprob: -15.755343437194824
    6. '[k' → logprob: -16.755342483520508
    7. '-к' → logprob: -16.755342483520508
    8. '-n' → logprob: -17.005342483520508
    9. '-b' → logprob: -17.630342483520508
    10. 'k' → logprob: -17.755342483520508

Token 991: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.339278580620885e-06
    2. ' k' → logprob: -13.000001907348633
    3. '_k' → logprob: -19.500001907348633
    4. '	k' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '[k' → logprob: -20.625001907348633
    7. '-k' → logprob: -20.875001907348633
    8. '{k' → logprob: -21.375001907348633
    9. ' к' → logprob: -21.750001907348633
    10. ' ' → logprob: -22.000001907348633

Token 992: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006734743365086615
    2. ')' → logprob: -8.250673294067383
    3. '])' → logprob: -8.250673294067383
    4. ']
' → logprob: -9.750673294067383
    5. ' ]' → logprob: -10.125673294067383
    6. '-' → logprob: -10.125673294067383
    7. ']
' → logprob: -12.500673294067383
    8. ')]' → logprob: -12.875673294067383
    9. '']' → logprob: -13.625673294067383
    10. ' -' → logprob: -14.250673294067383

Token 993: '                  ' (ID: 8854)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0235016867518425
    2. '   ' → logprob: -4.648501873016357
    3. '       ' → logprob: -4.773501873016357
    4. ' )' → logprob: -5.898501873016357
    5. ')*' → logprob: -7.148501873016357
    6. ' *' → logprob: -8.2735013961792
    7. '<|end|>' → logprob: -8.5235013961792
    8. '```' → logprob: -8.8985013961792
    9. '),' → logprob: -9.0235013961792
    10. '[' → logprob: -9.0235013961792

Token 994: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006594582460820675
    2. ')*' → logprob: -6.131594657897949
    3. '   ' → logprob: -6.256594657897949
    4. '       ' → logprob: -6.756594657897949
    5. '[' → logprob: -7.381594657897949
    6. '```' → logprob: -8.75659465789795
    7. ' )' → logprob: -8.88159465789795
    8. '[k' → logprob: -9.13159465789795
    9. '*' → logprob: -9.25659465789795
    10. ']' → logprob: -10.13159465789795

Token 995: ' inverse' (ID: 53743)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.12775589525699615
    2. '(A' → logprob: -2.127755880355835
    3. 'A' → logprob: -7.377756118774414
    4. '(' → logprob: -9.502756118774414
    5. '[' → logprob: -9.627756118774414
    6. ' (' → logprob: -10.127756118774414
    7. 'I' → logprob: -12.502756118774414
    8. '   ' → logprob: -12.502756118774414
    9. '[I' → logprob: -12.877756118774414
    10. '[
' → logprob: -13.377756118774414

Token 996: ' factor' (ID: 12332)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40775683522224426
    2. '[k' → logprob: -1.4077568054199219
    3. '[A' → logprob: -2.532756805419922
    4. '_k' → logprob: -5.282756805419922
    5. '_' → logprob: -5.532756805419922
    6. '[-' → logprob: -7.157756805419922
    7. '[_' → logprob: -7.782756805419922
    8. '-' → logprob: -9.157756805419922
    9. '-k' → logprob: -9.157756805419922
    10. '_[' → logprob: -9.782756805419922

Token 997: 'ielle' (ID: 22380)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.7134748101234436
    2. 'factor' → logprob: -1.0884747505187988
    3. ']' → logprob: -2.838474750518799
    4. '_fact' → logprob: -2.838474750518799
    5. '_' → logprob: -3.838474750518799
    6. ' factorial' → logprob: -4.463474750518799
    7. ' -' → logprob: -5.088474750518799
    8. '-' → logprob: -5.713474750518799
    9. 'fact' → logprob: -6.088474750518799
    10. '```' → logprob: -6.338474750518799

Token 998: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5798702836036682
    2. '[' → logprob: -1.5798702239990234
    3. '*' → logprob: -2.2048702239990234
    4. '[A' → logprob: -2.3298702239990234
    5. ' *' → logprob: -4.204870223999023
    6. ')' → logprob: -5.829870223999023
    7. '   ' → logprob: -5.954870223999023
    8. ' [' → logprob: -6.329870223999023
    9. '```' → logprob: -6.954870223999023
    10. ']' → logprob: -7.329870223999023

Token 999: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0022845494095236063
    2. '(' → logprob: -6.377284526824951
    3. ' (' → logprob: -7.627284526824951
    4. '[A' → logprob: -9.75228500366211
    5. 'A' → logprob: -10.87728500366211
    6. '(B' → logprob: -11.62728500366211
    7. ')' → logprob: -13.37728500366211
    8. '   ' → logprob: -13.37728500366211
    9. '(k' → logprob: -13.50228500366211
    10. ' A' → logprob: -13.75228500366211

Token 1000: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0025924232322722673
    2. '(A' → logprob: -6.00259256362915
    3. ' A' → logprob: -9.127592086791992
    4. ' (' → logprob: -12.377592086791992
    5. '(' → logprob: -12.752592086791992
    6. '[A' → logprob: -14.752592086791992
    7. '   ' → logprob: -15.252592086791992
    8. '	A' → logprob: -15.627592086791992
    9. ' ' → logprob: -16.877592086791992
    10. '(
' → logprob: -17.127592086791992

Token 1001: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.1718396693468094
    2. '-' → logprob: -2.421839714050293
    3. ' -' → logprob: -2.671839714050293
    4. ' ' → logprob: -14.171839714050293
    5. '   ' → logprob: -14.796839714050293
    6. ']' → logprob: -14.796839714050293
    7. '_k' → logprob: -15.046839714050293
    8. ')' → logprob: -15.171839714050293
    9. '-t' → logprob: -15.796839714050293
    10. '```' → logprob: -16.421838760375977

Token 1002: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007024387829005718
    2. '   ' → logprob: -5.00702428817749
    3. ')
' → logprob: -8.132024765014648
    4. '       ' → logprob: -11.882024765014648
    5. '```' → logprob: -12.882024765014648
    6. ' )' → logprob: -13.257024765014648
    7. ')
' → logprob: -14.257024765014648
    8. '))' → logprob: -14.632024765014648
    9. '),' → logprob: -15.257024765014648
    10. '#' → logprob: -15.257024765014648

Token 1003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43050575256347656
    2. ')' → logprob: -1.0555057525634766
    3. ')
' → logprob: -7.055505752563477
    4. '```' → logprob: -7.680505752563477
    5. '+' → logprob: -9.055505752563477
    6. ' )' → logprob: -9.305505752563477
    7. '    
' → logprob: -10.055505752563477
    8. ')*' → logprob: -10.180505752563477
    9. ' +' → logprob: -10.305505752563477
    10. ')\' → logprob: -10.930505752563477

Token 1004: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09190928936004639
    2. '   ' → logprob: -2.466909408569336
    3. ')
' (adapté à ' )
') → logprob: -6.591909408569336
    4. ')%' → logprob: -7.591909408569336
    5. ' )' → logprob: -7.716909408569336
    6. ')*' → logprob: -8.091909408569336
    7. '```' → logprob: -8.591909408569336
    8. '%' → logprob: -9.591909408569336
    9. ' %' → logprob: -11.216909408569336
    10. ')\' → logprob: -11.466909408569336

Token 1005: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08628945052623749
    2. 'z' → logprob: -2.711289405822754
    3. '*z' → logprob: -5.461289405822754
    4. '	z' → logprob: -5.836289405822754
    5. ' z' → logprob: -5.961289405822754
    6. '```' → logprob: -6.211289405822754
    7. '+' → logprob: -7.086289405822754
    8. ')' → logprob: -7.336289405822754
    9. '    
' → logprob: -7.461289405822754
    10. '*' → logprob: -7.461289405822754

Token 1006: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4338270127773285
    2. 'z' → logprob: -1.0588270425796509
    3. ')' → logprob: -6.058826923370361
    4. ' z' → logprob: -6.558826923370361
    5. '	z' → logprob: -7.933826923370361
    6. '    
' → logprob: -8.05882740020752
    7. '```' → logprob: -8.80882740020752
    8. 'term' → logprob: -9.05882740020752
    9. ')
' → logprob: -9.30882740020752
    10. '
' → logprob: -9.43382740020752

Token 1007: ' Aj' (ID: 28294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43721720576286316
    2. 'z' → logprob: -1.0622172355651855
    3. ' z' → logprob: -4.8122172355651855
    4. '    
' → logprob: -9.187216758728027
    5. '	z' → logprob: -9.187216758728027
    6. 'term' → logprob: -9.937216758728027
    7. '```' → logprob: -10.562216758728027
    8. '
' → logprob: -11.187216758728027
    9. ' ' → logprob: -11.312216758728027
    10. '  ' → logprob: -11.937216758728027

Token 1008: 'out' (ID: 468)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11642732471227646
    2. '   ' → logprob: -2.241427421569824
    3. ' z' → logprob: -6.866427421569824
    4. 'out' → logprob: -6.991427421569824
    5. 'outez' → logprob: -7.241427421569824
    6. 'term' → logprob: -8.116427421569824
    7. 'outer' → logprob: -8.491427421569824
    8. '	z' → logprob: -9.741427421569824
    9. 'ust' → logprob: -9.991427421569824
    10. '```' → logprob: -9.991427421569824

Token 1009: ' du' (ID: 1462)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4661054313182831
    2. '   ' → logprob: -1.2161054611206055
    3. ' z' → logprob: -2.8411054611206055
    4. '=' → logprob: -4.4661054611206055
    5. '+=' → logprob: -6.4661054611206055
    6. ' =' → logprob: -6.8411054611206055
    7. ' +=' → logprob: -6.8411054611206055
    8. 'term' → logprob: -7.5911054611206055
    9. '(z' → logprob: -7.5911054611206055
    10. '	z' → logprob: -7.8411054611206055

Token 1010: ' terme' (ID: 42959)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.009813699871301651
    2. 'z' → logprob: -5.3848137855529785
    3. ' term' → logprob: -6.0098137855529785
    4. '(term' → logprob: -6.1348137855529785
    5. 'ter' → logprob: -8.38481330871582
    6. ' (' → logprob: -9.13481330871582
    7. ' z' → logprob: -9.25981330871582
    8. '(' → logprob: -9.63481330871582
    9. '(z' → logprob: -10.50981330871582
    10. '(
' → logprob: -11.38481330871582

Token 1011: ' au' (ID: 2791)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.819534182548523
    2. ' +=' → logprob: -1.569534182548523
    3. '=' → logprob: -2.1945343017578125
    4. '   ' → logprob: -2.3195343017578125
    5. '%' → logprob: -3.1945343017578125
    6. '%=' → logprob: -3.1945343017578125
    7. ' =' → logprob: -4.3195343017578125
    8. '
' → logprob: -4.6945343017578125
    9. ' %=' → logprob: -4.6945343017578125
    10. ' z' → logprob: -4.8195343017578125

Token 1012: ' résultat' (ID: 62556)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011057252995669842
    2. ' z' → logprob: -4.511057376861572
    3. '(z' → logprob: -12.011056900024414
    4. ' (' → logprob: -12.886056900024414
    5. '(' → logprob: -15.261056900024414
    6. '	z' → logprob: -15.511056900024414
    7. '(
' → logprob: -15.761056900024414
    8. '_z' → logprob: -16.636056900024414
    9. ' ' → logprob: -16.761056900024414
    10. '   ' → logprob: -16.886056900024414

Token 1013: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02014426700770855
    2. ' z' → logprob: -4.645144462585449
    3. ' +=' → logprob: -5.270144462585449
    4. 'z' → logprob: -6.020144462585449
    5. ' =' → logprob: -6.895144462585449
    6. '
' → logprob: -7.145144462585449
    7. '=' → logprob: -8.27014446258545
    8. '```' → logprob: -8.39514446258545
    9. '+=' → logprob: -8.64514446258545
    10. '	z' → logprob: -9.27014446258545

Token 1014: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018968133255839348
    2. ' +=' → logprob: -4.643968105316162
    3. ' z' → logprob: -5.518968105316162
    4. 'z' → logprob: -6.143968105316162
    5. '+=' → logprob: -6.893968105316162
    6. '```' → logprob: -7.143968105316162
    7. '
' → logprob: -8.64396858215332
    8. ' +' → logprob: -8.64396858215332
    9. '+' → logprob: -8.64396858215332
    10. '	z' → logprob: -8.76896858215332

Token 1015: ' en' (ID: 469)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.10990357398986816
    2. 'z' → logprob: -2.359903573989868
    3. '   ' → logprob: -4.734903335571289
    4. ' 
' → logprob: -8.109903335571289
    5. '	z' → logprob: -8.859903335571289
    6. '    
' → logprob: -9.109903335571289
    7. '
' → logprob: -9.734903335571289
    8. ')' → logprob: -9.859903335571289
    9. ' +=' → logprob: -9.984903335571289
    10. ' =' → logprob: -10.359903335571289

Token 1016: ' gard' (ID: 18283)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.02518821507692337
    2. ' z' → logprob: -4.025188446044922
    3. '(z' → logprob: -5.275188446044922
    4. ')' → logprob: -6.650188446044922
    5. '   ' → logprob: -8.025188446044922
    6. ' (' → logprob: -9.400188446044922
    7. '
' → logprob: -10.025188446044922
    8. '%' → logprob: -10.275188446044922
    9. '(' → logprob: -10.525188446044922
    10. '=' → logprob: -11.275188446044922

Token 1017: 'ant' (ID: 493)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.45475807785987854
    2. 'érant' → logprob: -2.0797581672668457
    3. ' modulo' → logprob: -2.2047581672668457
    4. 'urant' → logprob: -3.3297581672668457
    5. 'mod' → logprob: -3.7047581672668457
    6. ' z' → logprob: -4.829758167266846
    7. 'ant' → logprob: -5.079758167266846
    8. 'u' → logprob: -5.204758167266846
    9. '%' → logprob: -5.329758167266846
    10. 'Modulo' → logprob: -5.329758167266846

Token 1018: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11292910575866699
    2. ' z' → logprob: -2.237929105758667
    3. '   ' → logprob: -10.112929344177246
    4. '(z' → logprob: -10.612929344177246
    5. '
' → logprob: -11.362929344177246
    6. '```' → logprob: -11.362929344177246
    7. '	z' → logprob: -11.987929344177246
    8. ')' → logprob: -12.112929344177246
    9. '=z' → logprob: -13.737929344177246
    10. ' (' → logprob: -13.862929344177246

Token 1019: ' modulo' (ID: 112372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22777366638183594
    2. ' =' → logprob: -2.102773666381836
    3. ' %=' → logprob: -3.227773666381836
    4. '%=' → logprob: -3.477773666381836
    5. '%' → logprob: -4.852773666381836
    6. '   ' → logprob: -6.727773666381836
    7. '+=' → logprob: -7.227773666381836
    8. ' +=' → logprob: -7.602773666381836
    9. '=z' → logprob: -8.602773666381836
    10. '```' → logprob: -8.852773666381836

Token 1020: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018210580572485924
    2. ' M' → logprob: -4.018210411071777
    3. '`' → logprob: -11.268210411071777
    4. ' ' → logprob: -11.268210411071777
    5. '998' → logprob: -11.268210411071777
    6. '```' → logprob: -11.893210411071777
    7. '   ' → logprob: -12.018210411071777
    8. '(M' → logprob: -12.893210411071777
    9. ' ' → logprob: -13.393210411071777
    10. ',' → logprob: -13.643210411071777

Token 1021: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5550962686538696
    2. '+=' → logprob: -1.6800962686538696
    3. 'z' → logprob: -2.43009614944458
    4. '   ' → logprob: -2.68009614944458
    5. ' +=' → logprob: -3.30509614944458
    6. ' =' → logprob: -3.68009614944458
    7. '=z' → logprob: -5.05509614944458
    8. ' z' → logprob: -5.18009614944458
    9. '```' → logprob: -5.18009614944458
    10. '	z' → logprob: -6.93009614944458

Token 1022: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028290269896388054
    2. ' z' → logprob: -4.153290271759033
    3. 'z' → logprob: -5.028290271759033
    4. '```' → logprob: -5.278290271759033
    5. '	z' → logprob: -8.528289794921875
    6. ' +=' → logprob: -8.653289794921875
    7. '``' → logprob: -10.403289794921875
    8. ' +' → logprob: -10.403289794921875
    9. '+' → logprob: -10.903289794921875
    10. ' =' → logprob: -11.153289794921875

Token 1023: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.7326279282569885
    2. ' z' → logprob: -1.2326278686523438
    3. '   ' → logprob: -1.4826278686523438
    4. '```' → logprob: -7.482627868652344
    5. '	z' → logprob: -8.732627868652344
    6. '`' → logprob: -10.857627868652344
    7. '``' → logprob: -11.232627868652344
    8. ' =' → logprob: -11.607627868652344
    9. ' ' → logprob: -12.357627868652344
    10. '=' → logprob: -12.482627868652344

Token 1024: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31520482897758484
    2. '+=' → logprob: -1.3152048587799072
    3. ' +=' → logprob: -6.565204620361328
    4. '%=' → logprob: -8.315204620361328
    5. ' =' → logprob: -8.440204620361328
    6. '```' → logprob: -9.940204620361328
    7. '   ' → logprob: -11.190204620361328
    8. ']+=' → logprob: -12.315204620361328
    9. '*=' → logprob: -14.065204620361328
    10. ' %=' → logprob: -14.190204620361328

Token 1025: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0005623269826173782
    2. ' (' → logprob: -7.5005621910095215
    3. '(' → logprob: -11.62556266784668
    4. '(Z' → logprob: -16.25056266784668
    5. '   ' → logprob: -16.50056266784668
    6. '(x' → logprob: -16.50056266784668
    7. 'z' → logprob: -16.62556266784668
    8. '[z' → logprob: -17.75056266784668
    9. '```' → logprob: -18.75056266784668
    10. '(y' → logprob: -18.87556266784668

Token 1026: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -7.465036105713807e-06
    2. ' z' → logprob: -12.125007629394531
    3. '(z' → logprob: -13.500007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '	z' → logprob: -16.12500762939453
    6. '[z' → logprob: -18.87500762939453
    7. '       ' → logprob: -19.00000762939453
    8. ''z' → logprob: -19.25000762939453
    9. '_z' → logprob: -19.87500762939453
    10. '```' → logprob: -20.50000762939453

Token 1027: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048587486147880554
    2. ' +' → logprob: -3.0485875606536865
    3. '+
' → logprob: -17.298587799072266
    4. '＋' → logprob: -17.673587799072266
    5. ' ' → logprob: -17.798587799072266
    6. ' plus' → logprob: -18.048587799072266
    7. '+k' → logprob: -18.298587799072266
    8. '+t' → logprob: -18.673587799072266
    9. '+r' → logprob: -19.048587799072266
    10. '+x' → logprob: -19.048587799072266

Token 1028: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.000431861262768507
    2. ' term' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.750432014465332
    4. '(term' → logprob: -16.250431060791016
    5. 'ter' → logprob: -19.250431060791016
    6. '-term' → logprob: -19.375431060791016
    7. ' ' → logprob: -19.375431060791016
    8. 'token' → logprob: -19.625431060791016
    9. '  ' → logprob: -20.250431060791016
    10. 'Term' → logprob: -20.375431060791016

Token 1029: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037664708215743303
    2. ' )' → logprob: -6.2537665367126465
    3. '%' → logprob: -6.6287665367126465
    4. ')%' → logprob: -8.003766059875488
    5. ' %' → logprob: -8.628766059875488
    6. ' ' → logprob: -14.378766059875488
    7. '%)' → logprob: -15.003766059875488
    8. ')
' → logprob: -16.003767013549805
    9. '   ' → logprob: -16.378767013549805
    10. '%B' → logprob: -17.128767013549805

Token 1030: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.054920539259910583
    2. '%' → logprob: -2.9299204349517822
    3. ')' → logprob: -10.929920196533203
    4. ' ' → logprob: -11.929920196533203
    5. '%B' → logprob: -12.804920196533203
    6. ' %#' → logprob: -13.429920196533203
    7. ' ' → logprob: -13.679920196533203
    8. ')%' → logprob: -13.679920196533203
    9. '%n' → logprob: -13.929920196533203
    10. ' 
' → logprob: -13.929920196533203

Token 1031: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.320199877838604e-07
    2. ' M' → logprob: -15.0
    3. '998' → logprob: -19.0
    4. '```' → logprob: -22.25
    5. '(M' → logprob: -23.625
    6. '	M' → logprob: -23.75
    7. ' ' → logprob: -24.25
    8. '`' → logprob: -24.875
    9. '\M' → logprob: -25.0
    10. 'М' → logprob: -25.0

Token 1032: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1034: ' Condition' (ID: 30255)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '#print' → logprob: -18.75
    4. ' print' → logprob: -18.875
    5. 'prin' → logprob: -19.875
    6. '
' → logprob: -20.625
    7. 'pr' → logprob: -20.75
    8. '#' → logprob: -21.75
    9. 'printf' → logprob: -22.625
    10. 'prit' → logprob: -23.0

Token 1035: ' particulière' (ID: 123511)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014027404831722379
    2. ' if' → logprob: -6.626402854919434
    3. 'z' → logprob: -10.001402854919434
    4. ' =' → logprob: -11.501402854919434
    5. ':' → logprob: -12.001402854919434
    6. '```' → logprob: -12.126402854919434
    7. '=' → logprob: -12.376402854919434
    8. '
' → logprob: -13.251402854919434
    9. ' 
' → logprob: -14.126402854919434
    10. ':
' → logprob: -14.626402854919434

Token 1036: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019042797794099897
    2. '```' → logprob: -9.125190734863281
    3. '<|end|>' → logprob: -10.125190734863281
    4. ' if' → logprob: -10.500190734863281
    5. ':' → logprob: -12.250190734863281
    6. '
' → logprob: -12.625190734863281
    7. '#' → logprob: -13.875190734863281
    8. '``' → logprob: -14.000190734863281
    9. ';if' → logprob: -14.000190734863281
    10. 'for' → logprob: -14.125190734863281

Token 1037: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016146517009474337
    2. 'print' → logprob: -9.000161170959473
    3. '```' → logprob: -10.500161170959473
    4. 'z' → logprob: -11.750161170959473
    5. '
' → logprob: -13.250161170959473
    6. ' if' → logprob: -14.875161170959473
    7. '#' → logprob: -15.000161170959473
    8. '``' → logprob: -16.75016212463379
    9. 'A' → logprob: -16.87516212463379
    10. 'If' → logprob: -17.75016212463379

Token 1038: ' B' (ID: 418)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7415996193885803
    2. 'A' → logprob: -0.9915996193885803
    3. 'B' → logprob: -1.9915995597839355
    4. 'not' → logprob: -5.3665995597839355
    5. ' A' → logprob: -5.3665995597839355
    6. ' N' → logprob: -5.8665995597839355
    7. ' B' → logprob: -6.7415995597839355
    8. 'z' → logprob: -6.7415995597839355
    9. ' not' → logprob: -7.1165995597839355
    10. 'C' → logprob: -8.116600036621094

Token 1039: ' vaut' (ID: 83004)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3016110062599182
    2. ' >' → logprob: -2.0516109466552734
    3. '==' → logprob: -2.4266109466552734
    4. ' ==' → logprob: -3.5516109466552734
    5. ' <' → logprob: -5.801610946655273
    6. '>B' → logprob: -6.051610946655273
    7. '<' → logprob: -6.301610946655273
    8. '!=' → logprob: -6.426610946655273
    9. ' !=' → logprob: -6.551610946655273
    10. '+' → logprob: -6.801610946655273

Token 1040: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16128931939601898
    2. '1' → logprob: -1.9112893342971802
    3. '==' → logprob: -7.786289215087891
    4. ' ' → logprob: -8.03628921508789
    5. 'N' → logprob: -9.53628921508789
    6. '2' → logprob: -9.78628921508789
    7. '>' → logprob: -9.91128921508789
    8. 'B' → logprob: -10.16128921508789
    9. '=' → logprob: -10.41128921508789
    10. '#' → logprob: -10.78628921508789

Token 1041: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05111364275217056
    2. '1' → logprob: -3.0511136054992676
    3. 'N' → logprob: -6.176113605499268
    4. 'B' → logprob: -8.551114082336426
    5. '2' → logprob: -9.551114082336426
    6. '>' → logprob: -10.176114082336426
    7. '100' → logprob: -10.426114082336426
    8. ' ' → logprob: -10.551114082336426
    9. 'A' → logprob: -11.176114082336426
    10. '3' → logprob: -11.426114082336426

Token 1042: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022305920720100403
    2. ':' → logprob: -4.147305965423584
    3. ':
' → logprob: -5.147305965423584
    4. '```' → logprob: -8.772305488586426
    5. ' if' → logprob: -8.897305488586426
    6. 'and' → logprob: -9.272305488586426
    7. '
' → logprob: -10.897305488586426
    8. ',' → logprob: -11.522305488586426
    9. '   ' → logprob: -12.022305488586426
    10. ' and' → logprob: -12.147305488586426

Token 1043: ' alors' (ID: 17971)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.19237197935581207
    2. 'if' → logprob: -2.0673720836639404
    3. ' z' → logprob: -3.4423720836639404
    4. '   ' → logprob: -4.442371845245361
    5. ' if' → logprob: -5.442371845245361
    6. 'print' → logprob: -8.56737232208252
    7. '```' → logprob: -9.31737232208252
    8. 'B' → logprob: -10.69237232208252
    9. ' ' → logprob: -10.69237232208252
    10. '#' → logprob: -11.19237232208252

Token 1044: ' le' (ID: 505)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.049330200999975204
    2. 'print' → logprob: -3.049330234527588
    3. ' z' → logprob: -7.799330234527588
    4. 'if' → logprob: -9.04932975769043
    5. '   ' → logprob: -9.29932975769043
    6. 'A' → logprob: -9.79932975769043
    7. ' print' → logprob: -10.42432975769043
    8. 'N' → logprob: -11.54932975769043
    9. 'for' → logprob: -11.79932975769043
    10. 'B' → logprob: -12.04932975769043

Token 1045: ' résultat' (ID: 62556)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.09515051543712616
    2. 'print' → logprob: -2.7201504707336426
    3. 'k' → logprob: -4.095150470733643
    4. 'for' → logprob: -5.595150470733643
    5. 'A' → logprob: -6.095150470733643
    6. 'if' → logprob: -7.220150470733643
    7. 'B' → logprob: -7.345150470733643
    8. '#' → logprob: -8.5951509475708
    9. ' z' → logprob: -8.7201509475708
    10. 'N' → logprob: -8.7201509475708

Token 1046: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06917928159236908
    2. '+=' → logprob: -2.8191792964935303
    3. ' =' → logprob: -5.319179058074951
    4. 'print' → logprob: -6.444179058074951
    5. ' +=' → logprob: -7.944179058074951
    6. '*=' → logprob: -8.56917953491211
    7. 'z' → logprob: -10.31917953491211
    8. '=z' → logprob: -10.31917953491211
    9. '%=' → logprob: -10.44417953491211
    10. '-=' → logprob: -10.56917953491211

Token 1047: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1585167944431305
    2. 'z' → logprob: -2.2835168838500977
    3. 'N' → logprob: -4.533516883850098
    4. 'A' → logprob: -4.533516883850098
    5. '1' → logprob: -4.908516883850098
    6. '(A' → logprob: -5.283516883850098
    7. '(' → logprob: -5.533516883850098
    8. 'F' → logprob: -6.033516883850098
    9. '(N' → logprob: -6.408516883850098
    10. '(z' → logprob: -6.408516883850098

Token 1048: '1' (ID: 16)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.446103572845459
    2. '0' → logprob: -1.446103572845459
    3. 'A' → logprob: -2.696103572845459
    4. 'N' → logprob: -4.196103572845459
    5. '1' → logprob: -4.446103572845459
    6. '(z' → logprob: -4.696103572845459
    7. '(A' → logprob: -4.821103572845459
    8. 'B' → logprob: -5.071103572845459
    9. '(' → logprob: -5.821103572845459
    10. '(B' → logprob: -6.446103572845459

Token 1049: ' quelle' (ID: 47442)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07954484969377518
    2. '
' → logprob: -2.57954478263855
    3. ' if' → logprob: -7.579545021057129
    4. '```' → logprob: -9.954545021057129
    5. '  
' → logprob: -10.329545021057129
    6. 'z' → logprob: -10.704545021057129
    7. '    
' → logprob: -11.329545021057129
    8. 'else' → logprob: -11.579545021057129
    9. '
' → logprob: -11.829545021057129
    10. '

' → logprob: -12.454545021057129

Token 1050: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.45365017652511597
    2. '```' → logprob: -1.7036502361297607
    3. 'que' → logprob: -1.9536502361297607
    4. 'else' → logprob: -4.078649997711182
    5. '``' → logprob: -4.703649997711182
    6. '#' → logprob: -5.078649997711182
    7. ':' → logprob: -6.703649997711182
    8. 'fois' → logprob: -6.703649997711182
    9. ' else' → logprob: -6.828649997711182
    10. 'qu' → logprob: -7.328649997711182

Token 1051: ' soit' (ID: 17293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44657596945762634
    2. '```' → logprob: -2.446575880050659
    3. 'fois' → logprob: -3.071575880050659
    4. 'cela' → logprob: -4.071576118469238
    5. 's' → logprob: -4.196576118469238
    6. ' soit' → logprob: -4.196576118469238
    7. 'que' → logprob: -4.321576118469238
    8. 'so' → logprob: -4.446576118469238
    9. 'ent' → logprob: -4.571576118469238
    10. '<|end|>' → logprob: -4.571576118469238

Token 1052: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03309724107384682
    2. 'N' → logprob: -4.533097267150879
    3. 'l' → logprob: -4.658097267150879
    4. 'A' → logprob: -5.158097267150879
    5. 'z' → logprob: -5.158097267150879
    6. '#' → logprob: -7.533097267150879
    7. ' la' → logprob: -8.533097267150879
    8. 'B' → logprob: -10.908097267150879
    9. 'les' → logprob: -10.908097267150879
    10. '```' → logprob: -11.158097267150879

Token 1053: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14122840762138367
    2. 'N' → logprob: -2.516228437423706
    3. 'value' → logprob: -4.016228199005127
    4. 'suite' → logprob: -4.266228199005127
    5. 'B' → logprob: -5.391228199005127
    6. 'condition' → logprob: -5.391228199005127
    7. 'ligne' → logprob: -6.141228199005127
    8. 's' → logprob: -6.516228199005127
    9. 'A' → logprob: -7.016228199005127
    10. 'n' → logprob: -7.766228199005127

Token 1054: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1839207261800766
    2. ' if' → logprob: -1.9339207410812378
    3. '<|end|>' → logprob: -3.9339206218719482
    4. '   ' → logprob: -7.058920860290527
    5. '=' → logprob: -7.183920860290527
    6. ' ' → logprob: -7.433920860290527
    7. ':' → logprob: -8.433920860290527
    8. '#' → logprob: -8.558920860290527
    9. '  ' → logprob: -9.058920860290527
    10. ',' → logprob: -9.183920860290527

Token 1055: ' z' (ID: 579)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5094375610351562
    2. 'N' → logprob: -1.3844375610351562
    3. 'z' → logprob: -2.1344375610351562
    4. 'B' → logprob: -3.5094375610351562
    5. '#' → logprob: -9.259437561035156
    6. ' A' → logprob: -9.384437561035156
    7. 'l' → logprob: -9.759437561035156
    8. 'k' → logprob: -9.884437561035156
    9. ' z' → logprob: -10.384437561035156
    10. '```' → logprob: -10.384437561035156

Token 1056: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008042682893574238
    2. '
' → logprob: -7.250804424285889
    3. 'z' → logprob: -9.37580394744873
    4. '```' → logprob: -11.75080394744873
    5. ' if' → logprob: -13.87580394744873
    6. 'print' → logprob: -15.25080394744873
    7. '  
' → logprob: -15.87580394744873
    8. '
' → logprob: -16.125804901123047
    9. '``' → logprob: -16.125804901123047
    10. '    
' → logprob: -16.875804901123047

Token 1057: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012642296496778727
    2. '
' → logprob: -9.250126838684082
    3. '```' → logprob: -10.750126838684082
    4. 'print' → logprob: -12.125126838684082
    5. 'z' → logprob: -13.125126838684082
    6. ' if' → logprob: -13.875126838684082
    7. '``' → logprob: -15.750126838684082
    8. '  
' → logprob: -16.125125885009766
    9. ' 
' → logprob: -17.250125885009766
    10. '    
' → logprob: -17.625125885009766

Token 1058: ' sinon' (ID: 52915)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00044532763422466815
    2. 'print' → logprob: -7.750445365905762
    3. '
' → logprob: -11.625445365905762
    4. '```' → logprob: -13.125445365905762
    5. 'z' → logprob: -13.750445365905762
    6. ' if' → logprob: -13.750445365905762
    7. 'result' → logprob: -14.000445365905762
    8. 'return' → logprob: -14.250445365905762
    9. '  
' → logprob: -17.625444412231445
    10. ' 
' → logprob: -18.250444412231445

Token 1059: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04892343655228615
    2. 'z' → logprob: -3.0489234924316406
    3. 'if' → logprob: -8.67392349243164
    4. ' print' → logprob: -9.04892349243164
    5. '   ' → logprob: -10.79892349243164
    6. ' z' → logprob: -10.92392349243164
    7. 'return' → logprob: -12.92392349243164
    8. '```' → logprob: -12.92392349243164
    9. 'pr' → logprob: -13.17392349243164
    10. '
' → logprob: -14.04892349243164

Token 1060: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2352385965641588e-05
    2. ' print' → logprob: -11.500012397766113
    3. 'pr' → logprob: -13.750012397766113
    4. 'z' → logprob: -14.000012397766113
    5. '#' → logprob: -16.375011444091797
    6. 'prin' → logprob: -16.500011444091797
    7. 'pass' → logprob: -17.375011444091797
    8. 'return' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.250011444091797
    10. '```' → logprob: -18.750011444091797

Token 1061: ' la' (ID: 557)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.14416611194610596
    2. '(z' → logprob: -2.6441659927368164
    3. 'print' → logprob: -2.7691659927368164
    4. ' z' → logprob: -8.269165992736816
    5. '(' → logprob: -8.769165992736816
    6. '(print' → logprob: -10.894165992736816
    7. '1' → logprob: -11.269165992736816
    8. ' print' → logprob: -11.644165992736816
    9. '(
' → logprob: -11.769165992736816
    10. '   ' → logprob: -12.269165992736816

Token 1062: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38704395294189453
    2. 'z' → logprob: -1.1370439529418945
    3. 'result' → logprob: -10.262043952941895
    4. ' z' → logprob: -10.387043952941895
    5. ' print' → logprob: -10.512043952941895
    6. 'pr' → logprob: -10.637043952941895
    7. '(z' → logprob: -11.137043952941895
    8. '
' → logprob: -11.512043952941895
    9. 'prin' → logprob: -11.637043952941895
    10. 'else' → logprob: -12.637043952941895

Token 1063: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11443987488746643
    2. 'if' → logprob: -2.2394399642944336
    3. '
' → logprob: -6.614439964294434
    4. '```' → logprob: -9.364439964294434
    5. ' if' → logprob: -9.614439964294434
    6. ' print' → logprob: -10.489439964294434
    7. '   ' → logprob: -11.114439964294434
    8. '(' → logprob: -11.364439964294434
    9. '#' → logprob: -11.489439964294434
    10. '(print' → logprob: -11.739439964294434

Token 1064: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08774463087320328
    2. 'z' → logprob: -2.71274471282959
    3. 'e' → logprob: -4.96274471282959
    4. 'é' → logprob: -5.58774471282959
    5. '   ' → logprob: -6.08774471282959
    6. 'if' → logprob: -6.46274471282959
    7. ')' → logprob: -7.08774471282959
    8. 'er' → logprob: -7.33774471282959
    9. 'ée' → logprob: -7.71274471282959
    10. '(' → logprob: -8.58774471282959

Token 1065: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42945316433906555
    2. 'if' → logprob: -1.1794531345367432
    3. '
' → logprob: -3.179453134536743
    4. '```' → logprob: -9.929452896118164
    5. '
' → logprob: -10.804452896118164
    6. '

' → logprob: -12.804452896118164
    7. '`
' → logprob: -13.304452896118164
    8. '  
' → logprob: -13.429452896118164
    9. '``' → logprob: -13.929452896118164
    10. ' if' → logprob: -14.304452896118164

Token 1066: ' z' (ID: 579)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028692428022623062
    2. 'z' → logprob: -3.6536924839019775
    3. 'la' → logprob: -7.028692245483398
    4. '```' → logprob: -7.403692245483398
    5. '(z' → logprob: -7.778692245483398
    6. 'le' → logprob: -9.153692245483398
    7. 'else' → logprob: -9.903692245483398
    8. '   ' → logprob: -10.028692245483398
    9. '(print' → logprob: -10.028692245483398
    10. 'range' → logprob: -10.153692245483398

Token 1067: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01451227255165577
    2. 'if' → logprob: -4.264512062072754
    3. '
' → logprob: -8.014512062072754
    4. '```' → logprob: -11.014512062072754
    5. '
' → logprob: -14.014512062072754
    6. '``' → logprob: -15.639512062072754
    7. '  
' → logprob: -15.889512062072754
    8. '`
' → logprob: -16.38951301574707
    9. '\' → logprob: -16.63951301574707
    10. ' print' → logprob: -16.88951301574707

Token 1068: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.52919222577475e-05
    2. 'if' → logprob: -9.500075340270996
    3. '```' → logprob: -14.750075340270996
    4. '
' → logprob: -17.75007438659668
    5. ' print' → logprob: -19.62507438659668
    6. 'pr' → logprob: -20.00007438659668
    7. '``' → logprob: -20.87507438659668
    8. 'prin' → logprob: -21.25007438659668
    9. '#print' → logprob: -21.62507438659668
    10. '`' → logprob: -22.37507438659668

Token 1069: '(z' (ID: 27674)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0380590483546257
    2. '(z' → logprob: -3.2880589962005615
    3. '((' → logprob: -11.28805923461914
    4. '("' → logprob: -13.03805923461914
    5. 'z' → logprob: -13.91305923461914
    6. '('' → logprob: -14.66305923461914
    7. '1' → logprob: -15.03805923461914
    8. '(Z' → logprob: -15.28805923461914
    9. '(""' → logprob: -15.28805923461914
    10. '()' → logprob: -15.66305923461914

Token 1070: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00924455001950264
    2. 'if' → logprob: -4.759244441986084
    3. ')' → logprob: -7.384244441986084
    4. ' or' → logprob: -11.884244918823242
    5. ' )' → logprob: -14.009244918823242
    6. '+' → logprob: -15.009244918823242
    7. '	if' → logprob: -15.509244918823242
    8. 'or' → logprob: -15.884244918823242
    9. ' ' → logprob: -16.134244918823242
    10. '@if' → logprob: -16.634244918823242

Token 1071: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.7610454708337784e-05
    2. ' B' → logprob: -10.500027656555176
    3. 'not' → logprob: -17.50002670288086
    4. '	B' → logprob: -17.87502670288086
    5. ' ' → logprob: -19.12502670288086
    6. ' not' → logprob: -19.62502670288086
    7. '   ' → logprob: -20.00002670288086
    8. '(B' → logprob: -20.75002670288086
    9. '>B' → logprob: -21.00002670288086
    10. ' ' → logprob: -22.37502670288086

Token 1072: ' else' (ID: 1203)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.24211405217647552
    2. '>' → logprob: -1.6171140670776367
    3. ' !=' → logprob: -4.367114067077637
    4. 'else' → logprob: -5.742114067077637
    5. ' else' → logprob: -7.992114067077637
    6. ' >' → logprob: -8.617114067077637
    7. ')' → logprob: -9.617114067077637
    8. '">' → logprob: -9.992114067077637
    9. ')!=' → logprob: -11.992114067077637
    10. '!==' → logprob: -11.992114067077637

Token 1073: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -21.625001907348633
    4. '
' → logprob: -23.875001907348633
    5. ' ' → logprob: -24.250001907348633
    6. ')' → logprob: -24.625001907348633
    7. '１' → logprob: -24.625001907348633
    8. '```' → logprob: -24.750001907348633
    9. '۱' → logprob: -25.125001907348633
    10. '`' → logprob: -25.125001907348633

Token 1074: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '"' → logprob: -19.875
    4. '`' → logprob: -21.5
    5. '0' → logprob: -21.625
    6. ''' → logprob: -21.875
    7. '```' → logprob: -22.5
    8. '   ' → logprob: -23.0
    9. '１' → logprob: -23.25
    10. '' → logprob: -23.75

Token 1075: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4868770196917467e-05
    2. ' )' → logprob: -10.625024795532227
    3. ')
' → logprob: -15.000024795532227
    4. '))' → logprob: -16.375024795532227
    5. '())' → logprob: -16.500024795532227
    6. '```' → logprob: -17.500024795532227
    7. ')#' → logprob: -17.875024795532227
    8. '`)' → logprob: -18.625024795532227
    9. '）' → logprob: -18.750024795532227
    10. '')' → logprob: -19.125024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1073
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 549
Précision stricte (1ère position): 19.76%
Précision adaptée (1ère position): 20.78%
Précision (top 10): 51.16%
================================================================================
