================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Voilà, je fais ça comme ça, ça devrait marcher normalement...

A = int(input())
B = input()
N = A // 2       # moitié ? oui, bon

for x in range(N):
    # Bon, voyons voir si les caractères aux bords sont pareils
    if B[A-1] == B[A-1-N]:   # Pas sûr que ce soit la meilleure façon, mais bon
        A = A - 1    # On décrémente A... un peu étrange
    # Sinon on fait rien, ok
    
if A == N:
    print("Yes")
else:
    print('No')   # un peu de mix de guillemets, c'est pas grave
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Voilà' (ID: 149427)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4149775505065918
    2. ' c' → logprob: -1.4149775505065918
    3. ' je' → logprob: -3.289977550506592
    4. ' voilà' → logprob: -3.789977550506592
    5. ' ceci' → logprob: -4.664977550506592
    6. ' voici' → logprob: -5.414977550506592
    7. ' ,' → logprob: -5.414977550506592
    8. '  ' → logprob: -5.789977550506592
    9. ',' → logprob: -6.039977550506592
    10. ' #' → logprob: -6.164977550506592

Token 4: ' fais' (ID: 24376)
  Prédit: ' suis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suis' → logprob: -0.717427134513855
    2. 's' → logprob: -1.092427134513855
    3. ' ' → logprob: -2.5924272537231445
    4. ' veux' → logprob: -3.4674272537231445
    5. ' vais' → logprob: -3.5924272537231445
    6. ' peux' → logprob: -3.9674272537231445
    7. ' continue' → logprob: -4.9674272537231445
    8. ' t' → logprob: -6.0924272537231445
    9. ' vous' → logprob: -6.2174272537231445
    10. ' pense' → logprob: -6.2174272537231445

Token 5: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008650107774883509
    2. ' =' → logprob: -8.50086498260498
    3. '_' → logprob: -8.62586498260498
    4. ' ' → logprob: -9.12586498260498
    5. ' :' → logprob: -9.25086498260498
    6. ':' → logprob: -9.50086498260498
    7. '  ' → logprob: -10.25086498260498
    8. ' un' → logprob: -10.50086498260498
    9. '```' → logprob: -10.75086498260498
    10. '.' → logprob: -11.37586498260498

Token 6: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3783781826496124
    2. '<|end|>' → logprob: -2.12837815284729
    3. '!' → logprob: -3.00337815284729
    4. '```' → logprob: -3.12837815284729
    5. '\n' → logprob: -3.75337815284729
    6. '
' → logprob: -4.253378391265869
    7. ' ' → logprob: -4.253378391265869
    8. '  
' → logprob: -4.378378391265869
    9. ',' → logprob: -4.378378391265869
    10. '\' → logprob: -5.378378391265869

Token 7: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.1456882506608963
    2. 'ç' → logprob: -2.52068829536438
    3. ' ça' → logprob: -3.02068829536438
    4. 'cela' → logprob: -6.020688056945801
    5. ' ç' → logprob: -6.270688056945801
    6. ' ' → logprob: -7.520688056945801
    7. '   ' → logprob: -7.520688056945801
    8. '```' → logprob: -8.1456880569458
    9. ' ceci' → logprob: -8.3956880569458
    10. ' ' → logprob: -8.8956880569458

Token 8: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5324844717979431
    2. '.' → logprob: -2.282484531402588
    3. '#' → logprob: -2.407484531402588
    4. '```' → logprob: -2.657484531402588
    5. '!' → logprob: -3.282484531402588
    6. ',' → logprob: -3.282484531402588
    7. ':' → logprob: -3.532484531402588
    8. '
' → logprob: -3.657484531402588
    9. '\' → logprob: -4.657484531402588
    10. '`' → logprob: -5.907484531402588

Token 9: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1071802377700806
    2. ',' → logprob: -1.3571802377700806
    3. '```' → logprob: -2.107180118560791
    4. '.' → logprob: -2.482180118560791
    5. ' ,' → logprob: -3.232180118560791
    6. ' je' → logprob: -3.607180118560791
    7. ' et' → logprob: -3.732180118560791
    8. ' ' → logprob: -3.982180118560791
    9. '<|end|>' → logprob: -4.107180118560791
    10. '\n' → logprob: -4.357180118560791

Token 10: ' devrait' (ID: 52773)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6405584812164307
    2. ' va' → logprob: -1.8905584812164307
    3. ' a' → logprob: -2.0155584812164307
    4. ' me' → logprob: -2.3905584812164307
    5. ' ' → logprob: -2.6405584812164307
    6. ' m' → logprob: -2.8905584812164307
    7. ' marche' → logprob: -3.1405584812164307
    8. ' ```' → logprob: -3.2655584812164307
    9. ' n' → logprob: -3.3905584812164307
    10. '```' → logprob: -3.5155584812164307

Token 11: ' marcher' (ID: 171848)
  Prédit: ' marcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marcher' → logprob: -0.8406968712806702
    2. ' fonctionner' → logprob: -0.9656968712806702
    3. ' ' → logprob: -2.2156968116760254
    4. '.' → logprob: -3.5906968116760254
    5. 'fonction' → logprob: -3.8406968116760254
    6. ' aller' → logprob: -5.090696811676025
    7. 'être' → logprob: -5.215696811676025
    8. ' être' → logprob: -6.090696811676025
    9. 'march' → logprob: -6.340696811676025
    10. ' marche' → logprob: -6.465696811676025

Token 12: ' normalement' (ID: 164432)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.39590513706207275
    2. '\n' → logprob: -2.270905017852783
    3. '!' → logprob: -2.895905017852783
    4. ',' → logprob: -3.145905017852783
    5. '\' → logprob: -3.145905017852783
    6. ':' → logprob: -3.645905017852783
    7. '```' → logprob: -4.020905017852783
    8. '#' → logprob: -4.395905017852783
    9. '
' → logprob: -4.645905017852783
    10. '`' → logprob: -5.145905017852783

Token 13: '...

' (ID: 2161)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10411893576383591
    2. ',' → logprob: -3.729118824005127
    3. '
' → logprob: -3.729118824005127
    4. '\n' → logprob: -4.104118824005127
    5. '```' → logprob: -4.729118824005127
    6. '!' → logprob: -4.854118824005127
    7. ':' → logprob: -5.479118824005127
    8. '  
' → logprob: -5.729118824005127
    9. '\' → logprob: -6.229118824005127
    10. '#' → logprob: -6.354118824005127

Token 14: 'A' (ID: 32)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4573111832141876
    2. '\n' → logprob: -1.7073111534118652
    3. '
' → logprob: -2.0823111534118652
    4. '.' → logprob: -3.7073111534118652
    5. '\' → logprob: -4.457311153411865
    6. '#' → logprob: -5.332311153411865
    7. '  
' → logprob: -5.457311153411865
    8. '`' → logprob: -5.457311153411865
    9. '' → logprob: -6.332311153411865
    10. ':' → logprob: -6.332311153411865

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8850442171096802
    2. 'i' → logprob: -2.1350440979003906
    3. 'm' → logprob: -2.1350440979003906
    4. 's' → logprob: -2.1350440979003906
    5. ' =' → logprob: -2.7600440979003906
    6. 'l' → logprob: -3.1350440979003906
    7. 'u' → logprob: -3.3850440979003906
    8. 'r' → logprob: -3.3850440979003906
    9. ')' → logprob: -3.5100440979003906
    10. '#' → logprob: -3.6350440979003906

Token 16: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.933835506439209
    2. ' [' → logprob: -1.183835506439209
    3. ' []' → logprob: -1.558835506439209
    4. ' np' → logprob: -4.058835506439209
    5. '10' → logprob: -4.183835506439209
    6. '[' → logprob: -4.558835506439209
    7. ' A' → logprob: -4.558835506439209
    8. '[]' → logprob: -5.058835506439209
    9. ' pd' → logprob: -5.308835506439209
    10. '1' → logprob: -5.558835506439209

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015504523180425167
    2. '(input' → logprob: -6.501550674438477
    3. '('' → logprob: -11.376550674438477
    4. ' (' → logprob: -11.626550674438477
    5. '()' → logprob: -11.751550674438477
    6. '(user' → logprob: -12.751550674438477
    7. '(
' → logprob: -12.876550674438477
    8. '(A' → logprob: -12.876550674438477
    9. '("' → logprob: -13.126550674438477
    10. '(`' → logprob: -13.251550674438477

Token 18: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0250997394323349
    2. '()' → logprob: -3.775099754333496
    3. '())' → logprob: -7.025099754333496
    4. ')' → logprob: -7.525099754333496
    5. '('' → logprob: -9.025099754333496
    6. '("("' → logprob: -9.400099754333496
    7. '(()' → logprob: -10.025099754333496
    8. '(
' → logprob: -10.150099754333496
    9. '(""))' → logprob: -10.150099754333496
    10. '("")' → logprob: -11.025099754333496

Token 19: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16549158096313477
    2. '*' → logprob: -2.0404915809631348
    3. '%' → logprob: -4.915491580963135
    4. ')' → logprob: -5.665491580963135
    5. ' ' → logprob: -5.790491580963135
    6. '+
' → logprob: -5.790491580963135
    7. ' +' → logprob: -6.540491580963135
    8. '#' → logprob: -7.040491580963135
    9. ' 
' → logprob: -7.665491580963135
    10. '**' → logprob: -7.790491580963135

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00839743297547102
    2. '=' → logprob: -5.133397579193115
    3. ' ' → logprob: -6.883397579193115
    4. ' +=' → logprob: -7.258397579193115
    5. '+' → logprob: -7.633397579193115
    6. ' +' → logprob: -9.008397102355957
    7. ')' → logprob: -10.258397102355957
    8. '[' → logprob: -10.883397102355957
    9. '.' → logprob: -11.008397102355957
    10. '_' → logprob: -11.383397102355957

Token 21: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10022705048322678
    2. 'int' → logprob: -2.350227117538452
    3. ' input' → logprob: -11.475227355957031
    4. ' ' → logprob: -12.475227355957031
    5. ' A' → logprob: -13.100227355957031
    6. '=int' → logprob: -13.475227355957031
    7. 'input' → logprob: -13.600227355957031
    8. ' ' → logprob: -14.350227355957031
    9. '[int' → logprob: -15.600227355957031
    10. '(int' → logprob: -15.600227355957031

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03820868954062462
    2. '(' → logprob: -3.2882087230682373
    3. ')' → logprob: -10.038208961486816
    4. ' ' → logprob: -10.413208961486816
    5. '())' → logprob: -10.538208961486816
    6. ' ()' → logprob: -10.788208961486816
    7. '().' → logprob: -11.663208961486816
    8. ' (' → logprob: -12.288208961486816
    9. 'Parent' → logprob: -12.538208961486816
    10. ' parentheses' → logprob: -12.788208961486816

Token 23: 'N' (ID: 45)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3632175922393799
    2. '.' → logprob: -1.3632175922393799
    3. '.strip' → logprob: -4.363217353820801
    4. '=' → logprob: -4.738217353820801
    5. '[' → logprob: -4.738217353820801
    6. ')' → logprob: -5.113217353820801
    7. '.split' → logprob: -6.113217353820801
    8. '*' → logprob: -6.488217353820801
    9. '%' → logprob: -6.613217353820801
    10. '#' → logprob: -6.613217353820801

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26586320996284485
    2. ' =' → logprob: -1.5158631801605225
    3. '=int' → logprob: -4.765863418579102
    4. '.' → logprob: -6.265863418579102
    5. 'um' → logprob: -6.890863418579102
    6. 'ext' → logprob: -7.140863418579102
    7. 'umber' → logprob: -8.015863418579102
    8. ',' → logprob: -8.265863418579102
    9. 'b' → logprob: -8.390863418579102
    10. ' ' → logprob: -8.890863418579102

Token 25: ' A' (ID: 355)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04877438023686409
    2. ' int' → logprob: -3.048774480819702
    3. '0' → logprob: -10.423774719238281
    4. 'input' → logprob: -10.423774719238281
    5. '10' → logprob: -10.548774719238281
    6. '100' → logprob: -10.673774719238281
    7. ' ' → logprob: -10.923774719238281
    8. '[int' → logprob: -11.548774719238281
    9. ' input' → logprob: -11.548774719238281
    10. 'A' → logprob: -11.923774719238281

Token 26: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1313437819480896
    2. ' +' → logprob: -3.5063438415527344
    3. '-' → logprob: -3.7563438415527344
    4. ' ' → logprob: -4.381343841552734
    5. '%' → logprob: -4.506343841552734
    6. '<|end|>' → logprob: -4.631343841552734
    7. '*' → logprob: -5.006343841552734
    8. '>' → logprob: -5.131343841552734
    9. ' *' → logprob: -5.631343841552734
    10. ' %' → logprob: -5.756343841552734

Token 27: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12685565650463104
    2. '2' → logprob: -2.3768556118011475
    3. '10' → logprob: -4.376855850219727
    4. '3' → logprob: -4.751855850219727
    5. 'int' → logprob: -6.501855850219727
    6. '1' → logprob: -7.001855850219727
    7. '4' → logprob: -7.126855850219727
    8. '5' → logprob: -7.251855850219727
    9. '100' → logprob: -7.876855850219727
    10. 'len' → logprob: -8.626855850219727

Token 28: '2' (ID: 17)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.37703511118888855
    2. '2' → logprob: -1.502035140991211
    3. '3' → logprob: -3.127035140991211
    4. 'int' → logprob: -3.627035140991211
    5. '10' → logprob: -4.377035140991211
    6. '1' → logprob: -6.127035140991211
    7. '4' → logprob: -6.377035140991211
    8. '5' → logprob: -6.502035140991211
    9. 'len' → logprob: -6.502035140991211
    10. '100' → logprob: -7.502035140991211

Token 29: '      ' (ID: 1699)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15254813432693481
    2. '*' → logprob: -2.40254807472229
    3. ' ' → logprob: -4.277548313140869
    4. '<|end|>' → logprob: -4.652548313140869
    5. ')' → logprob: -4.777548313140869
    6. '
' → logprob: -5.277548313140869
    7. '%' → logprob: -5.652548313140869
    8. ' +' → logprob: -6.402548313140869
    9. ' 
' → logprob: -6.402548313140869
    10. '.' → logprob: -6.527548313140869

Token 30: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11710373312234879
    2. '*' → logprob: -2.6171038150787354
    3. ' ' → logprob: -4.367103576660156
    4. '
' → logprob: -5.117103576660156
    5. '#' (adapté à ' #') → logprob: -5.367103576660156
    6. '<|end|>' → logprob: -5.367103576660156
    7. ' 
' → logprob: -5.742103576660156
    8. ')' → logprob: -6.992103576660156
    9. '+
' → logprob: -7.117103576660156
    10. '%' → logprob: -7.492103576660156

Token 31: ' moitié' (ID: 93216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6575449705123901
    2. ' Calcul' → logprob: -2.4075450897216797
    3. ' #' → logprob: -2.6575450897216797
    4. '2' → logprob: -3.0325450897216797
    5. ' espace' → logprob: -3.5325450897216797
    6. ' On' → logprob: -3.7825450897216797
    7. 'Calcul' → logprob: -4.40754508972168
    8. '#' → logprob: -4.59504508972168
    9. ' A' → logprob: -4.59504508972168
    10. '1' → logprob: -4.65754508972168

Token 32: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' oui' (ID: 50908)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9227266907691956
    2. ' ' → logprob: -1.5477266311645508
    3. '+' → logprob: -2.297726631164551
    4. '
' → logprob: -2.547726631164551
    5. ' 
' → logprob: -2.797726631164551
    6. '<|end|>' → logprob: -2.797726631164551
    7. '#' → logprob: -3.047726631164551
    8. '  
' → logprob: -4.672726631164551
    9. ')' → logprob: -5.047726631164551
    10. 'B' → logprob: -5.422726631164551

Token 34: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6607173681259155
    2. ' A' → logprob: -1.9107173681259155
    3. ' ' → logprob: -2.660717487335205
    4. ' B' → logprob: -2.785717487335205
    5. ' mais' → logprob: -3.035717487335205
    6. ' N' → logprob: -3.660717487335205
    7. 'B' → logprob: -3.660717487335205
    8. 'A' → logprob: -3.660717487335205
    9. ' on' → logprob: -4.285717487335205
    10. ' je' → logprob: -4.410717487335205

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5683143734931946
    2. ' 
' → logprob: -1.4433143138885498
    3. '<|end|>' → logprob: -2.69331431388855
    4. ' ' → logprob: -3.44331431388855
    5. '#' → logprob: -3.69331431388855
    6. '  
' → logprob: -4.318314552307129
    7. '*' → logprob: -4.443314552307129
    8. '+' → logprob: -4.818314552307129
    9. '```' → logprob: -4.818314552307129
    10. 'B' → logprob: -5.193314552307129

Token 37: 'for' (ID: 1938)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1749153137207031
    2. 'if' → logprob: -1.2999153137207031
    3. '+' → logprob: -2.049915313720703
    4. ' ' → logprob: -2.299915313720703
    5. '*' → logprob: -2.424915313720703
    6. ' 
' → logprob: -3.424915313720703
    7. 'print' → logprob: -4.174915313720703
    8. '
' → logprob: -4.674915313720703
    9. '<|end|>' → logprob: -4.799915313720703
    10. '#' → logprob: -5.174915313720703

Token 38: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.057452358305454254
    2. ' _' → logprob: -2.932452440261841
    3. ' ' → logprob: -6.057452201843262
    4. '_' → logprob: -9.057452201843262
    5. 'i' → logprob: -9.807452201843262
    6. ' x' → logprob: -10.807452201843262
    7. ' ' → logprob: -11.932452201843262
    8. '  ' → logprob: -12.182452201843262
    9. ' A' → logprob: -12.432452201843262
    10. ' a' → logprob: -12.682452201843262

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020885072648525238
    2. 'in' → logprob: -3.8958849906921387
    3. ' ' → logprob: -8.145885467529297
    4. '  ' → logprob: -10.645885467529297
    5. '_' → logprob: -12.395885467529297
    6. 'range' → logprob: -12.770885467529297
    7. ',' → logprob: -12.895885467529297
    8. 'import' → logprob: -13.270885467529297
    9. '	in' → logprob: -13.333385467529297
    10. ' i' → logprob: -13.520885467529297

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038317691534757614
    2. 'range' → logprob: -3.2883176803588867
    3. ' B' → logprob: -9.288317680358887
    4. ' ' → logprob: -9.913317680358887
    5. 'B' → logprob: -10.038317680358887
    6. '  ' → logprob: -11.038317680358887
    7. '	range' → logprob: -11.663317680358887
    8. 'rang' → logprob: -11.788317680358887
    9. ' A' → logprob: -12.100817680358887
    10. ' ran' → logprob: -12.163317680358887

Token 41: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4987022578716278
    2. '(N' → logprob: -1.2487022876739502
    3. '(A' → logprob: -2.24870228767395
    4. '(B' → logprob: -8.498702049255371
    5. '(x' → logprob: -10.623702049255371
    6. '(n' → logprob: -11.373702049255371
    7. '((' → logprob: -11.748702049255371
    8. '(len' → logprob: -11.873702049255371
    9. ' (' → logprob: -12.373702049255371
    10. '(
' → logprob: -12.873702049255371

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004777922760695219
    2. ' ):' → logprob: -5.754777908325195
    3. '+' → logprob: -6.629777908325195
    4. ')' → logprob: -9.004777908325195
    5. ',' → logprob: -9.379777908325195
    6. ' +' → logprob: -10.004777908325195
    7. ':' → logprob: -11.504777908325195
    8. '):
' → logprob: -12.379777908325195
    9. ' ,' → logprob: -12.879777908325195
    10. ' )' → logprob: -13.504777908325195

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04520619660615921
    2. ' print' → logprob: -3.545206308364868
    3. ' if' → logprob: -5.045206069946289
    4. 'print' → logprob: -6.170206069946289
    5. '    ' → logprob: -6.420206069946289
    6. ' ' → logprob: -6.420206069946289
    7. '	print' → logprob: -7.170206069946289
    8. '    
' → logprob: -7.670206069946289
    9. ' for' → logprob: -7.920206069946289
    10. ' B' → logprob: -8.420206069946289

Token 44: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32162460684776306
    2. ' print' → logprob: -1.8216246366500854
    3. ' if' → logprob: -3.196624517440796
    4. '   ' → logprob: -4.196624755859375
    5. 'if' → logprob: -4.321624755859375
    6. ' B' → logprob: -4.321624755859375
    7. 'B' → logprob: -4.571624755859375
    8. ' ' → logprob: -5.321624755859375
    9. 'for' → logprob: -5.571624755859375
    10. 'A' → logprob: -5.821624755859375

Token 45: ' Bon' (ID: 12658)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47150468826293945
    2. 'print' → logprob: -1.4715046882629395
    3. ' pass' → logprob: -2.3465046882629395
    4. ' ' → logprob: -3.9715046882629395
    5. ' if' → logprob: -5.0965046882629395
    6. '    ' → logprob: -5.0965046882629395
    7. 'pass' → logprob: -5.3465046882629395
    8. '   ' → logprob: -5.4715046882629395
    9. ' for' → logprob: -5.9715046882629395
    10. ' #' → logprob: -6.2215046882629395

Token 46: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5851342678070068
    2. '    ' → logprob: -1.2101342678070068
    3. 'print' → logprob: -2.710134267807007
    4. ' ' → logprob: -3.460134267807007
    5. ' print' → logprob: -3.460134267807007
    6. '  ' → logprob: -5.960134506225586
    7. 'for' → logprob: -6.210134506225586
    8. ' ' → logprob: -6.835134506225586
    9. ' for' → logprob: -7.085134506225586
    10. 's' → logprob: -7.210134506225586

Token 47: ' voy' (ID: 19901)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7605987191200256
    2. ' if' → logprob: -1.6355986595153809
    3. ' y' → logprob: -2.385598659515381
    4. ' for' → logprob: -2.510598659515381
    5. 'print' → logprob: -3.260598659515381
    6. '   ' → logprob: -3.260598659515381
    7. ' ' → logprob: -4.135598659515381
    8. '    ' → logprob: -4.260598659515381
    9. 'for' → logprob: -4.635598659515381
    10. 'if' → logprob: -4.885598659515381

Token 48: 'ons' (ID: 1808)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2586515247821808
    2. 't' → logprob: -3.1336514949798584
    3. 'g' → logprob: -3.7586514949798584
    4. 'r' → logprob: -3.7586514949798584
    5. 'u' → logprob: -4.0086517333984375
    6. 'ur' → logprob: -4.1336517333984375
    7. 'ge' → logprob: -4.2586517333984375
    8. 'l' → logprob: -4.5086517333984375
    9. 'nt' → logprob: -4.7586517333984375
    10. 'ux' → logprob: -4.8836517333984375

Token 49: ' voir' (ID: 20611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9978771805763245
    2. '   ' → logprob: -1.2478771209716797
    3. ' if' → logprob: -2.4978771209716797
    4. '  ' → logprob: -3.3728771209716797
    5. '    ' → logprob: -3.4978771209716797
    6. ' ' → logprob: -3.8728771209716797
    7. 'if' → logprob: -3.9978771209716797
    8. '```' → logprob: -4.24787712097168
    9. 'for' → logprob: -4.37287712097168
    10. ' for' → logprob: -4.62287712097168

Token 50: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4288880527019501
    2. ' ' → logprob: -1.3038880825042725
    3. '    ' → logprob: -2.8038880825042725
    4. '  ' → logprob: -6.303887844085693
    5. ' if' → logprob: -6.553887844085693
    6. 'print' → logprob: -6.678887844085693
    7. '(' → logprob: -6.678887844085693
    8. ':' → logprob: -6.803887844085693
    9. ' ' → logprob: -6.803887844085693
    10. ' :' → logprob: -7.053887844085693

Token 51: ' les' (ID: 1341)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07496055215597153
    2. 'B' → logprob: -3.449960470199585
    3. ' '' → logprob: -3.949960470199585
    4. ' ' → logprob: -4.574960708618164
    5. ' "' → logprob: -5.324960708618164
    6. ''' → logprob: -6.324960708618164
    7. ' x' → logprob: -7.199960708618164
    8. '"' → logprob: -7.199960708618164
    9. '  ' → logprob: -7.574960708618164
    10. '   ' → logprob: -8.324960708618164

Token 52: ' caractères' (ID: 183106)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0968447923660278
    2. ' caractères' → logprob: -1.5968447923660278
    3. ' B' → logprob: -1.7218447923660278
    4. ' ' → logprob: -2.7218446731567383
    5. 'x' → logprob: -3.0968446731567383
    6. ' '' → logprob: -3.2218446731567383
    7. 'B' → logprob: -3.8468446731567383
    8. ' "' → logprob: -4.346844673156738
    9. 'e' → logprob: -4.721844673156738
    10. ' éléments' → logprob: -4.846844673156738

Token 53: ' aux' (ID: 5850)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.45974960923194885
    2. ' ' → logprob: -1.3347495794296265
    3. ' sont' → logprob: -3.584749698638916
    4. ' de' → logprob: -3.959749698638916
    5. 'B' → logprob: -4.209749698638916
    6. 's' → logprob: -4.334749698638916
    7. ' x' → logprob: -4.834749698638916
    8. ' y' → logprob: -5.709749698638916
    9. ' are' → logprob: -5.834749698638916
    10. 'x' → logprob: -5.959749698638916

Token 54: ' b' (ID: 287)
  Prédit: ' mêmes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mêmes' → logprob: -0.58646559715271
    2. ' positions' → logprob: -1.71146559715271
    3. 'x' → logprob: -2.71146559715271
    4. ' x' → logprob: -2.83646559715271
    5. ' indices' → logprob: -3.33646559715271
    6. 'positions' → logprob: -3.58646559715271
    7. ' ' → logprob: -3.83646559715271
    8. ' même' → logprob: -4.086465835571289
    9. ' deux' → logprob: -4.836465835571289
    10. 'indices' → logprob: -5.086465835571289

Token 55: 'ords' (ID: 9142)
  Prédit: 'onnes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnes' → logprob: -0.7369500994682312
    2. 'ons' → logprob: -1.611950159072876
    3. 'onne' → logprob: -1.736950159072876
    4. 'on' → logprob: -3.236950159072876
    5. 'x' → logprob: -3.486950159072876
    6. 'onn' → logprob: -4.861949920654297
    7. '```' → logprob: -5.236949920654297
    8. 'egin' → logprob: -5.611949920654297
    9. 'ords' → logprob: -5.736949920654297
    10. 'orn' → logprob: -5.736949920654297

Token 56: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.5566582679748535
    2. ' de' → logprob: -1.8066582679748535
    3. 's' → logprob: -2.0566582679748535
    4. ' ' → logprob: -2.3066582679748535
    5. ' du' → logprob: -2.4316582679748535
    6. ' ==' → logprob: -2.6816582679748535
    7. 'de' → logprob: -3.0566582679748535
    8. ' are' → logprob: -3.0566582679748535
    9. ' of' → logprob: -3.6816582679748535
    10. 'x' → logprob: -3.9316582679748535

Token 57: ' pare' (ID: 9160)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.42934051156044006
    2. ' les' → logprob: -1.4293404817581177
    3. ' ég' → logprob: -2.8043406009674072
    4. ' sym' → logprob: -4.679340362548828
    5. 'les' → logprob: -5.054340362548828
    6. 'ident' → logprob: -5.054340362548828
    7. ' différents' → logprob: -5.554340362548828
    8. ' correct' → logprob: -5.679340362548828
    9. ' iguales' → logprob: -5.679340362548828
    10. ' indent' → logprob: -5.804340362548828

Token 58: 'ils' (ID: 5879)
  Prédit: 'ils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ils' → logprob: -0.0005175283877179027
    2. 'il' → logprob: -8.250517845153809
    3. 'illes' → logprob: -8.500517845153809
    4. 's' → logprob: -11.125517845153809
    5. 'i' → logprob: -11.750517845153809
    6. 'ls' → logprob: -12.125517845153809
    7. 'illés' → logprob: -12.125517845153809
    8. 'ills' → logprob: -12.250517845153809
    9. '-ils' → logprob: -12.375517845153809
    10. 'ille' → logprob: -12.625517845153809

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12094627320766449
    2. ':' → logprob: -2.620946168899536
    3. ' :' → logprob: -3.245946168899536
    4. ' if' → logprob: -7.120946407318115
    5. ' ' → logprob: -7.870946407318115
    6. '  ' → logprob: -8.120945930480957
    7. '<|end|>' → logprob: -8.495945930480957
    8. '    ' → logprob: -8.870945930480957
    9. ' :
' → logprob: -9.870945930480957
    10. 's' → logprob: -9.870945930480957

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008051358163356781
    2. ':' → logprob: -5.13305139541626
    3. ' :' → logprob: -7.00805139541626
    4. ' if' → logprob: -7.75805139541626
    5. '<|end|>' → logprob: -8.008050918579102
    6. ' ' → logprob: -8.383050918579102
    7. '  ' → logprob: -9.383050918579102
    8. '    ' → logprob: -9.883050918579102
    9. 'if' → logprob: -10.508050918579102
    10. '       ' → logprob: -11.258050918579102

Token 61: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2209833860397339
    2. ' if' → logprob: -1.8459833860397339
    3. 'if' (adapté à ' if') → logprob: -3.2209835052490234
    4. '	if' → logprob: -8.970983505249023
    5. ' ' → logprob: -9.220983505249023
    6. '    ' → logprob: -9.220983505249023
    7. '  ' → logprob: -10.595983505249023
    8. ':' → logprob: -10.595983505249023
    9. ' i' → logprob: -10.595983505249023
    10. 'i' → logprob: -10.720983505249023

Token 62: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.0006366660236380994
    2. ' ' → logprob: -7.875636577606201
    3. 'B' → logprob: -8.37563705444336
    4. ' A' → logprob: -10.75063705444336
    5. '  ' → logprob: -13.12563705444336
    6. ' ' → logprob: -13.62563705444336
    7. '   ' → logprob: -14.62563705444336
    8. ' x' → logprob: -15.37563705444336
    9. '	B' → logprob: -15.37563705444336
    10. ' (' → logprob: -15.37563705444336

Token 63: '[A' (ID: 58391)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.01632373221218586
    2. '[' → logprob: -4.141323566436768
    3. ' [' → logprob: -8.516324043273926
    4. '[N' → logprob: -9.516324043273926
    5. '[A' → logprob: -12.641324043273926
    6. '[len' → logprob: -13.141324043273926
    7. ' ' → logprob: -13.516324043273926
    8. 'x' → logprob: -13.516324043273926
    9. ' x' → logprob: -13.641324043273926
    10. '[B' → logprob: -13.891324043273926

Token 64: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2031530886888504
    2. ' -' → logprob: -1.828153133392334
    3. 'x' → logprob: -4.453153133392334
    4. ']' → logprob: -5.328153133392334
    5. '-x' → logprob: -5.578153133392334
    6. '[' → logprob: -7.078153133392334
    7. '[x' → logprob: -7.578153133392334
    8. ' x' → logprob: -7.828153133392334
    9. ' ' → logprob: -8.328152656555176
    10. '//' → logprob: -8.953152656555176

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03879116103053093
    2. 'x' → logprob: -3.6637911796569824
    3. '(' → logprob: -5.163791179656982
    4. ' ' → logprob: -5.413791179656982
    5. ' (' → logprob: -6.663791179656982
    6. ' x' → logprob: -7.413791179656982
    7. '(x' → logprob: -9.163790702819824
    8. '-' → logprob: -9.288790702819824
    9. '2' → logprob: -9.788790702819824
    10. '   ' → logprob: -10.038790702819824

Token 66: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5244408845901489
    2. '-' → logprob: -0.8994408845901489
    3. '-x' → logprob: -6.774440765380859
    4. ']' → logprob: -8.77444076538086
    5. ' ' → logprob: -11.89944076538086
    6. '-i' → logprob: -12.52444076538086
    7. '-t' → logprob: -13.14944076538086
    8. '   ' → logprob: -13.77444076538086
    9. ']==' → logprob: -14.02444076538086
    10. ' ]' → logprob: -14.14944076538086

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6902281641960144
    2. '==' → logprob: -0.8152281641960144
    3. '[' → logprob: -3.315228223800659
    4. ' !=' → logprob: -4.81522798538208
    5. '!=' → logprob: -5.19022798538208
    6. ']' → logprob: -6.56522798538208
    7. ']==' → logprob: -6.56522798538208
    8. '[x' → logprob: -6.94022798538208
    9. '=' → logprob: -7.44022798538208
    10. '-' → logprob: -7.81522798538208

Token 68: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.14417727291584015
    2. 'B' → logprob: -2.019177198410034
    3. ' ' → logprob: -6.519177436828613
    4. '0' → logprob: -12.019177436828613
    5. '	B' → logprob: -12.269177436828613
    6. '  ' → logprob: -12.894177436828613
    7. ' ' → logprob: -13.269177436828613
    8. '<|end|>' → logprob: -13.394177436828613
    9. ' A' → logprob: -13.644177436828613
    10. 'A' → logprob: -13.769177436828613

Token 69: '[A' (ID: 58391)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.03645940497517586
    2. 'x' → logprob: -4.286459445953369
    3. ' x' → logprob: -4.411459445953369
    4. '[' → logprob: -5.036459445953369
    5. ' [' → logprob: -6.411459445953369
    6. '	x' → logprob: -7.286459445953369
    7. ' ' → logprob: -7.536459445953369
    8. '  ' → logprob: -8.661458969116211
    9. '   ' → logprob: -9.661458969116211
    10. '    ' → logprob: -10.411458969116211

Token 70: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11431526392698288
    2. ' -' → logprob: -2.2393152713775635
    3. '-x' → logprob: -6.614315032958984
    4. '-(' → logprob: -9.614315032958984
    5. 'x' → logprob: -10.739315032958984
    6. ' ' → logprob: -10.864315032958984
    7. '1' → logprob: -11.489315032958984
    8. '   ' → logprob: -12.489315032958984
    9. '-N' → logprob: -12.739315032958984
    10. '2' → logprob: -12.989315032958984

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011948877945542336
    2. 'x' → logprob: -4.761949062347412
    3. '-' → logprob: -6.761949062347412
    4. ' ' → logprob: -7.511949062347412
    5. 'N' → logprob: -7.636949062347412
    6. '(' → logprob: -7.886949062347412
    7. '2' → logprob: -8.136948585510254
    8. '0' → logprob: -8.261948585510254
    9. '(x' → logprob: -9.511948585510254
    10. '-x' → logprob: -10.386948585510254

Token 72: '-N' (ID: 13833)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4742707908153534
    2. '-' → logprob: -0.9742708206176758
    3. '-x' → logprob: -9.224270820617676
    4. '-(' → logprob: -10.099270820617676
    5. ' ' → logprob: -10.599270820617676
    6. ' -(' → logprob: -11.724270820617676
    7. '"' → logprob: -12.599270820617676
    8. ''' → logprob: -13.224270820617676
    9. '-i' → logprob: -13.224270820617676
    10. ' ' → logprob: -13.599270820617676

Token 73: ']:' (ID: 12433)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43492984771728516
    2. '-' → logprob: -1.1849298477172852
    3. '-x' → logprob: -3.434929847717285
    4. ' +' → logprob: -5.184929847717285
    5. '+' → logprob: -5.684929847717285
    6. '+x' → logprob: -5.809929847717285
    7. ']' → logprob: -6.184929847717285
    8. ' ]' → logprob: -8.434929847717285
    9. ' ' → logprob: -9.059929847717285
    10. 'x' → logprob: -9.434929847717285

Token 74: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21738459169864655
    2. '<|end|>' → logprob: -2.2173845767974854
    3. ' 
' → logprob: -2.9673845767974854
    4. '    ' → logprob: -4.3423848152160645
    5. ':' → logprob: -4.5923848152160645
    6. ' :' → logprob: -6.0923848152160645
    7. '
' → logprob: -6.2173848152160645
    8. '   ' → logprob: -6.3423848152160645
    9. ')' → logprob: -6.5923848152160645
    10. '       ' → logprob: -6.7173848152160645

Token 75: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8003681302070618
    2. ':' → logprob: -0.9253681302070618
    3. ' :' → logprob: -2.675368070602417
    4. '<|end|>' → logprob: -3.925368070602417
    5. ' :
' → logprob: -4.300368309020996
    6. '    ' → logprob: -4.425368309020996
    7. ':
' → logprob: -5.050368309020996
    8. ' break' → logprob: -5.425368309020996
    9. ')' → logprob: -5.425368309020996
    10. '.' → logprob: -5.550368309020996

Token 76: ' Pas' (ID: 18323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08434204757213593
    2. ' x' → logprob: -3.8343420028686523
    3. '    ' → logprob: -4.334342002868652
    4. 'x' → logprob: -4.709342002868652
    5. '<|end|>' → logprob: -5.209342002868652
    6. ' :' → logprob: -5.584342002868652
    7. ' ]' → logprob: -5.709342002868652
    8. ')' → logprob: -5.709342002868652
    9. ' B' → logprob: -5.834342002868652
    10. ':' → logprob: -6.334342002868652

Token 77: ' sûr' (ID: 46415)
  Prédit: ' question'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' question' → logprob: -1.5453524589538574
    2. ' ' → logprob: -1.9203524589538574
    3. ' correct' → logprob: -2.4203524589538574
    4. '<|end|>' → logprob: -2.6703524589538574
    5. 'possible' → logprob: -2.6703524589538574
    6. 'correct' → logprob: -2.7953524589538574
    7. 'question' → logprob: -2.7953524589538574
    8. ' vraiment' → logprob: -3.2953524589538574
    9. ' possible' → logprob: -3.4203524589538574
    10. 'tout' → logprob: -4.170352458953857

Token 78: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5674407482147217
    2. ' :' → logprob: -2.3174407482147217
    3. '   ' → logprob: -2.5674407482147217
    4. ' and' → logprob: -2.6924407482147217
    5. '    ' → logprob: -3.1924407482147217
    6. '       ' → logprob: -3.1924407482147217
    7. ' ' → logprob: -3.5674407482147217
    8. ')' → logprob: -3.8174407482147217
    9. '<|end|>' → logprob: -3.9424407482147217
    10. '):' → logprob: -4.567440986633301

Token 79: ' ce' (ID: 2357)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39873355627059937
    2. ' B' → logprob: -1.6487336158752441
    3. ' this' → logprob: -2.898733615875244
    4. ' ' → logprob: -4.023733615875244
    5. ' c' → logprob: -4.148733615875244
    6. 'x' → logprob: -4.398733615875244
    7. ' x' → logprob: -4.773733615875244
    8. ' ce' → logprob: -5.523733615875244
    9. 'A' → logprob: -5.648733615875244
    10. 'c' → logprob: -5.898733615875244

Token 80: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.025067435577511787
    2. 's' → logprob: -4.900067329406738
    3. 'so' → logprob: -4.900067329406738
    4. ' soient' → logprob: -6.275067329406738
    5. ' so' → logprob: -6.775067329406738
    6. ' ne' → logprob: -6.900067329406738
    7. ' sois' → logprob: -7.775067329406738
    8. 'f' → logprob: -7.775067329406738
    9. 'ne' → logprob: -7.900067329406738
    10. ' ' → logprob: -7.900067329406738

Token 81: ' la' (ID: 557)
  Prédit: ' correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correct' → logprob: -0.22668379545211792
    2. 'correct' → logprob: -1.7266838550567627
    3. 'exact' → logprob: -5.101683616638184
    4. ' correcte' → logprob: -5.976683616638184
    5. ' juste' → logprob: -6.226683616638184
    6. 'bon' → logprob: -6.351683616638184
    7. ' exact' → logprob: -6.601683616638184
    8. '```' → logprob: -6.726683616638184
    9. ' ' → logprob: -6.851683616638184
    10. ' bon' → logprob: -6.851683616638184

Token 82: ' meilleure' (ID: 52387)
  Prédit: 'bonne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bonne' → logprob: -0.5869934558868408
    2. ' bonne' → logprob: -0.9619934558868408
    3. 'bon' → logprob: -3.086993455886841
    4. 'correct' → logprob: -5.086993217468262
    5. ' bon' → logprob: -5.461993217468262
    6. 'right' → logprob: -6.461993217468262
    7. 'b' → logprob: -7.086993217468262
    8. 'good' → logprob: -7.461993217468262
    9. ' ' → logprob: -7.711993217468262
    10. ' correct' → logprob: -8.586993217468262

Token 83: ' façon' (ID: 33381)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.4759068489074707
    2. ' façon' → logprob: -2.3509068489074707
    3. ' idée' → logprob: -2.4759068489074707
    4. 'option' → logprob: -2.9759068489074707
    5. 'indice' → logprob: -2.9759068489074707
    6. 'solution' → logprob: -3.1009068489074707
    7. 'appro' → logprob: -3.2259068489074707
    8. ')' → logprob: -3.2259068489074707
    9. ' option' → logprob: -3.2259068489074707
    10. 'token' → logprob: -3.4759068489074707

Token 84: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2022712230682373
    2. '<|end|>' → logprob: -2.3272712230682373
    3. '   ' → logprob: -3.0772712230682373
    4. ' :' → logprob: -3.9522712230682373
    5. ' ' → logprob: -4.702271461486816
    6. ':
' → logprob: -6.077271461486816
    7. ')' → logprob: -6.327271461486816
    8. '<|end|>' → logprob: -6.452271461486816
    9. '       ' → logprob: -6.702271461486816
    10. '):' → logprob: -6.952271461486816

Token 85: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8532838225364685
    2. '    ' → logprob: -0.8532838225364685
    3. '<|end|>' → logprob: -2.2282838821411133
    4. '   ' → logprob: -3.9782838821411133
    5. '       ' → logprob: -5.353283882141113
    6. ' ' → logprob: -5.728283882141113
    7. ' x' → logprob: -6.353283882141113
    8. ' B' → logprob: -6.478283882141113
    9. '<|end|>' → logprob: -6.603283882141113
    10. ')' → logprob: -6.978283882141113

Token 86: ' bon' (ID: 4846)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0008065700531006
    2. '    ' → logprob: -1.2508065700531006
    3. ' B' → logprob: -2.1258065700531006
    4. 'B' → logprob: -3.0008065700531006
    5. ' continue' → logprob: -3.0008065700531006
    6. ' ' → logprob: -3.3758065700531006
    7. ' x' → logprob: -4.37580680847168
    8. ':' → logprob: -4.50080680847168
    9. ' True' → logprob: -4.50080680847168
    10. ' :' → logprob: -5.25080680847168

Token 87: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15948094427585602
    2. ' :' → logprob: -2.5344810485839844
    3. '<|end|>' → logprob: -3.2844810485839844
    4. '):' → logprob: -5.034481048583984
    5. ' ' → logprob: -5.159481048583984
    6. '   ' → logprob: -5.159481048583984
    7. ')' → logprob: -5.659481048583984
    8. '       ' → logprob: -5.784481048583984
    9. ':
' → logprob: -6.534481048583984
    10. ' :
' → logprob: -6.534481048583984

Token 88: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9040343165397644
    2. '       ' → logprob: -1.4040343761444092
    3. ' :' → logprob: -2.029034376144409
    4. '    ' → logprob: -2.529034376144409
    5. '   ' → logprob: -2.654034376144409
    6. '<|end|>' → logprob: -3.279034376144409
    7. ' ' → logprob: -4.15403413772583
    8. ' :
' → logprob: -5.90403413772583
    9. '        ' → logprob: -6.27903413772583
    10. '):' → logprob: -6.77903413772583

Token 89: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2982144355773926
    2. ' print' → logprob: -1.2982144355773926
    3. ' break' → logprob: -1.7982144355773926
    4. '    ' → logprob: -2.1732144355773926
    5. 'print' → logprob: -2.5482144355773926
    6. ' pass' → logprob: -2.7982144355773926
    7. '       ' → logprob: -4.548214435577393
    8. ' continue' → logprob: -4.798214435577393
    9. 'break' → logprob: -5.423214435577393
    10. 'pass' → logprob: -5.923214435577393

Token 90: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6372805237770081
    2. '-' → logprob: -0.8872805237770081
    3. '-=' → logprob: -3.3872804641723633
    4. ' =' → logprob: -4.762280464172363
    5. ' ' → logprob: -5.137280464172363
    6. ' -' → logprob: -5.262280464172363
    7. '=' → logprob: -5.512280464172363
    8. '   ' → logprob: -6.762280464172363
    9. '  ' → logprob: -8.387280464172363
    10. ' +=' → logprob: -9.262280464172363

Token 91: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4774988889694214
    2. ' N' → logprob: -1.7274988889694214
    3. 'A' → logprob: -1.9774988889694214
    4. 'N' → logprob: -2.852499008178711
    5. ' ' → logprob: -6.102499008178711
    6. ' x' → logprob: -6.602499008178711
    7. 'x' → logprob: -6.602499008178711
    8. ' B' → logprob: -7.852499008178711
    9. 'B' → logprob: -8.602499008178711
    10. '1' → logprob: -9.602499008178711

Token 92: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4306770861148834
    2. ' -' → logprob: -1.055677056312561
    3. ' ' → logprob: -6.4306769371032715
    4. '+' → logprob: -8.80567741394043
    5. '1' → logprob: -10.43067741394043
    6. '   ' → logprob: -10.55567741394043
    7. 'x' → logprob: -10.55567741394043
    8. '-N' → logprob: -11.05567741394043
    9. '0' → logprob: -11.30567741394043
    10. ' +' → logprob: -11.43067741394043

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006581788882613182
    2. '2' → logprob: -5.506581783294678
    3. ' ' → logprob: -6.506581783294678
    4. 'N' → logprob: -7.256581783294678
    5. 'x' → logprob: -8.256582260131836
    6. ' N' → logprob: -10.756582260131836
    7. ' x' → logprob: -11.381582260131836
    8. '   ' → logprob: -12.381582260131836
    9. '3' → logprob: -14.006582260131836
    10. '10' → logprob: -14.506582260131836

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012597712688148022
    2. '2' → logprob: -4.387597560882568
    3. ' ' → logprob: -10.012598037719727
    4. 'N' → logprob: -10.637598037719727
    5. 'x' → logprob: -11.262598037719727
    6. '3' → logprob: -13.262598037719727
    7. '   ' → logprob: -13.887598037719727
    8. '4' → logprob: -14.762598037719727
    9. '10' → logprob: -14.825098037719727
    10. '(' → logprob: -15.137598037719727

Token 95: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6448430418968201
    2. '   ' → logprob: -1.8948431015014648
    3. '<|end|>' → logprob: -1.8948431015014648
    4. ' ' → logprob: -2.394843101501465
    5. ')' → logprob: -3.394843101501465
    6. ' -' → logprob: -4.394843101501465
    7. '    ' → logprob: -4.769843101501465
    8. ':' → logprob: -4.894843101501465
    9. '  ' → logprob: -5.394843101501465
    10. 'A' → logprob: -6.144843101501465

Token 96: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' décr' (ID: 123041)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.07736603170633316
    2. 'continue' → logprob: -4.452365875244141
    3. ' avance' → logprob: -5.452365875244141
    4. ' peut' → logprob: -5.702365875244141
    5. ' va' → logprob: -5.702365875244141
    6. ' reste' → logprob: -5.827365875244141
    7. 's' → logprob: -6.077365875244141
    8. ' ' → logprob: -6.202365875244141
    9. 'contin' → logprob: -6.327365875244141
    10. ' break' → logprob: -6.327365875244141

Token 99: 'é' (ID: 377)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -1.0400619506835938
    2. 'é' → logprob: -1.2900619506835938
    3. 'ément' → logprob: -1.5400619506835938
    4. 'emente' → logprob: -2.1650619506835938
    5. 'mente' → logprob: -3.5400619506835938
    6. 'ment' → logprob: -4.915061950683594
    7. 'éments' → logprob: -7.415061950683594
    8. 'ése' → logprob: -7.415061950683594
    9. 'ements' → logprob: -7.540061950683594
    10. 'emento' → logprob: -7.540061950683594

Token 100: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.10722371190786362
    2. 'ment' → logprob: -2.3572237491607666
    3. 'mentation' → logprob: -5.9822235107421875
    4. 'mented' → logprob: -6.3572235107421875
    5. 'mentar' → logprob: -7.1072235107421875
    6. 'm' → logprob: -7.7322235107421875
    7. ' mente' → logprob: -8.482223510742188
    8. 'nte' → logprob: -8.607223510742188
    9. 'mental' → logprob: -8.857223510742188
    10. '#' → logprob: -9.482223510742188

Token 101: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.33115285634994507
    2. ' ' → logprob: -1.8311529159545898
    3. ' e' → logprob: -3.83115291595459
    4. ' espace' → logprob: -3.83115291595459
    5. ' peu' → logprob: -4.08115291595459
    6. 'else' → logprob: -5.20615291595459
    7. ' else' → logprob: -5.45615291595459
    8. ')' → logprob: -5.58115291595459
    9. '+' → logprob: -5.70615291595459
    10. '```' → logprob: -5.70615291595459

Token 105: ' étrange' (ID: 172668)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22523514926433563
    2. ' ' → logprob: -2.3502352237701416
    3. '<|end|>' → logprob: -2.9752352237701416
    4. '   ' → logprob: -3.9752352237701416
    5. ' :' → logprob: -4.2252349853515625
    6. '[' → logprob: -4.7252349853515625
    7. '  ' → logprob: -6.1002349853515625
    8. ')' → logprob: -6.4752349853515625
    9. '    ' → logprob: -6.6002349853515625
    10. '       ' → logprob: -6.9752349853515625

Token 109: ' Sinon' (ID: 154924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044471483677625656
    2. 'else' → logprob: -4.169471263885498
    3. ' :' → logprob: -4.544471263885498
    4. ' else' → logprob: -4.669471263885498
    5. '   ' → logprob: -5.169471263885498
    6. '       ' → logprob: -7.294471263885498
    7. 'elif' → logprob: -7.419471263885498
    8. ' elif' → logprob: -8.169471740722656
    9. ':
' → logprob: -8.294471740722656
    10. '    ' → logprob: -8.419471740722656

Token 111: ' fait' (ID: 7473)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6511065363883972
    2. 'break' → logprob: -1.026106595993042
    3. ' continue' → logprob: -3.276106595993042
    4. '   ' → logprob: -3.526106595993042
    5. 'continue' → logprob: -4.651106357574463
    6. 's' → logprob: -4.901106357574463
    7. ' s' → logprob: -5.276106357574463
    8. 'n' → logprob: -5.526106357574463
    9. ' ' → logprob: -5.901106357574463
    10. ' n' → logprob: -6.026106357574463

Token 112: ' rien' (ID: 23082)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9989369511604309
    2. 'un' → logprob: -1.3739368915557861
    3. 'pass' → logprob: -2.748936891555786
    4. 'r' → logprob: -3.248936891555786
    5. ' un' → logprob: -3.248936891555786
    6. ' rien' → logprob: -3.248936891555786
    7. ' une' → logprob: -3.373936891555786
    8. 'une' → logprob: -3.498936891555786
    9. '   ' → logprob: -3.748936891555786
    10. 'le' → logprob: -4.373937129974365

Token 113: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8113145232200623
    2. '<|end|>' → logprob: -1.436314582824707
    3. ' ' → logprob: -1.561314582824707
    4. '[' → logprob: -3.186314582824707
    5. ' :' → logprob: -4.061314582824707
    6. '   ' → logprob: -4.436314582824707
    7. ':
' → logprob: -5.186314582824707
    8. 'x' → logprob: -5.561314582824707
    9. ')' → logprob: -5.686314582824707
    10. '
' → logprob: -5.811314582824707

Token 114: ' ok' (ID: 4763)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '
    
' (ID: 15698)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7989564538002014
    2. '<|end|>' → logprob: -1.0489563941955566
    3. '   ' → logprob: -2.0489563941955566
    4. ' ' → logprob: -3.2989563941955566
    5. ':
' → logprob: -4.923956394195557
    6. '[' → logprob: -4.923956394195557
    7. ' :' → logprob: -5.423956394195557
    8. '  ' → logprob: -6.048956394195557
    9. '<|end|>' → logprob: -6.048956394195557
    10. '
' → logprob: -6.173956394195557

Token 116: 'if' (ID: 366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.719883382320404
    2. '<|end|>' → logprob: -1.0948834419250488
    3. ':' → logprob: -2.219883441925049
    4. ' ' → logprob: -3.219883441925049
    5. ' :' → logprob: -4.844883441925049
    6. '  ' → logprob: -5.344883441925049
    7. ')' → logprob: -5.719883441925049
    8. '[' → logprob: -5.969883441925049
    9. '<|end|>' → logprob: -5.969883441925049
    10. '    ' → logprob: -6.219883441925049

Token 117: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10361161082983017
    2. ' N' → logprob: -2.978611707687378
    3. 'A' → logprob: -3.478611707687378
    4. ' B' → logprob: -4.603611469268799
    5. 'N' → logprob: -5.228611469268799
    6. ' ' → logprob: -7.853611469268799
    7. 'B' → logprob: -8.103611946105957
    8. ' len' → logprob: -8.603611946105957
    9. ' __' → logprob: -8.603611946105957
    10. ' x' → logprob: -9.103611946105957

Token 118: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9420179128646851
    2. ' ==' → logprob: -1.192017912864685
    3. ' %' → logprob: -1.942017912864685
    4. '>' → logprob: -2.9420180320739746
    5. '%' → logprob: -3.0670180320739746
    6. '==' → logprob: -3.1920180320739746
    7. ' <' → logprob: -4.692018032073975
    8. ' ' → logprob: -5.442018032073975
    9. ' <=' → logprob: -5.692018032073975
    10. ' !=' → logprob: -5.817018032073975

Token 119: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1162607669830322
    2. ' N' → logprob: -1.4912607669830322
    3. '0' → logprob: -1.6162607669830322
    4. ' ' → logprob: -1.6162607669830322
    5. '1' → logprob: -4.241260528564453
    6. 'B' → logprob: -4.491260528564453
    7. ' B' → logprob: -4.616260528564453
    8. ' len' → logprob: -4.991260528564453
    9. 'len' → logprob: -5.366260528564453
    10. '2' → logprob: -6.116260528564453

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019531534053385258
    2. ':
' → logprob: -9.125195503234863
    3. ' :' → logprob: -9.375195503234863
    4. '):' → logprob: -15.375195503234863
    5. ' and' → logprob: -15.625195503234863
    6. ':return' → logprob: -15.625195503234863
    7. ' or' → logprob: -16.250194549560547
    8. ' ==' → logprob: -16.250194549560547
    9. '+:' → logprob: -16.375194549560547
    10. '==' → logprob: -16.375194549560547

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47883930802345276
    2. ' print' → logprob: -1.3538392782211304
    3. 'print' → logprob: -2.10383939743042
    4. '	print' → logprob: -9.353838920593262
    5. '   ' → logprob: -9.853838920593262
    6. '       ' → logprob: -10.228838920593262
    7. ':' → logprob: -10.603838920593262
    8. ' ' → logprob: -10.728838920593262
    9. '  ' → logprob: -11.603838920593262
    10. '    ' → logprob: -11.853838920593262

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10169506072998047
    2. ' print' → logprob: -2.3516950607299805
    3. '   ' → logprob: -6.6016950607299805
    4. 'pass' → logprob: -10.60169506072998
    5. ' ' → logprob: -10.72669506072998
    6. '	print' → logprob: -11.10169506072998
    7. 'B' → logprob: -11.72669506072998
    8. ' pass' → logprob: -12.03919506072998
    9. ' B' → logprob: -12.22669506072998
    10. '#' → logprob: -12.28919506072998

Token 123: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.24686676263809204
    2. '(' → logprob: -1.6218667030334473
    3. '(B' → logprob: -4.371866703033447
    4. '('' → logprob: -5.496866703033447
    5. '(A' → logprob: -6.496866703033447
    6. '(N' → logprob: -6.746866703033447
    7. '(True' → logprob: -7.371866703033447
    8. '()' → logprob: -7.621866703033447
    9. '(":' → logprob: -8.621867179870605
    10. '("")' → logprob: -8.746867179870605

Token 124: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -1.3894644975662231
    2. 'Oui' → logprob: -1.6394644975662231
    3. 'OK' → logprob: -1.8894644975662231
    4. 'B' → logprob: -2.6394643783569336
    5. 'Yes' → logprob: -2.6394643783569336
    6. 'Palindrome' → logprob: -2.8894643783569336
    7. 'O' → logprob: -3.5144643783569336
    8. 'Pair' → logprob: -3.8894643783569336
    9. 'oui' → logprob: -4.014464378356934
    10. 'PAIR' → logprob: -4.264464378356934

Token 125: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14393098652362823
    2. '")
' → logprob: -2.0189309120178223
    3. '!")' → logprob: -6.893930912017822
    4. '!")
' → logprob: -9.01893138885498
    5. '")
' → logprob: -9.76893138885498
    6. ')")' → logprob: -10.76893138885498
    7. ')' → logprob: -11.14393138885498
    8. 'else' → logprob: -12.39393138885498
    9. '"' → logprob: -12.51893138885498
    10. ')")
' → logprob: -12.76893138885498

Token 126: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26006457209587097
    2. ' else' → logprob: -1.5100646018981934
    3. '<|end|>' → logprob: -5.885064601898193
    4. 'elif' → logprob: -6.135064601898193
    5. ' ' → logprob: -6.885064601898193
    6. ':' → logprob: -7.135064601898193
    7. '   ' → logprob: -7.260064601898193
    8. ' elif' → logprob: -8.635064125061035
    9. ')' → logprob: -8.760064125061035
    10. '	else' → logprob: -9.635064125061035

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013091674773022532
    2. ':
' → logprob: -6.876309394836426
    3. ' :' → logprob: -8.626309394836426
    4. '   ' → logprob: -9.376309394836426
    5. '(":' → logprob: -12.876309394836426
    6. '{' → logprob: -13.126309394836426
    7. ' :
' → logprob: -13.376309394836426
    8. '(' → logprob: -13.501309394836426
    9. '  ' → logprob: -13.876309394836426
    10. '():' → logprob: -14.251309394836426

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8330010771751404
    2. ' print' → logprob: -0.9580010771751404
    3. 'print' → logprob: -1.7080011367797852
    4. '	print' → logprob: -8.708001136779785
    5. '    ' → logprob: -9.583001136779785
    6. '"' → logprob: -9.708001136779785
    7. ' ' → logprob: -11.083001136779785
    8. '       ' → logprob: -11.333001136779785
    9. ' ' → logprob: -11.458001136779785
    10. '  ' → logprob: -11.458001136779785

Token 129: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005244191270321608
    2. ' print' → logprob: -5.255244255065918
    3. '   ' → logprob: -11.505244255065918
    4. '	print' → logprob: -15.755244255065918
    5. ' ' → logprob: -16.1302433013916
    6. 'Print' → logprob: -17.7552433013916
    7. '  ' → logprob: -17.7552433013916
    8. '.print' → logprob: -18.1302433013916
    9. '    ' → logprob: -18.5052433013916
    10. '
' → logprob: -18.8802433013916

Token 130: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759629607200623
    2. '("' → logprob: -0.8259629607200623
    3. '('' → logprob: -11.700963020324707
    4. '("")' → logprob: -12.075963020324707
    5. '()' → logprob: -12.825963020324707
    6. '("("' → logprob: -12.825963020324707
    7. '"' → logprob: -13.075963020324707
    8. '(""' → logprob: -14.450963020324707
    9. '(
' → logprob: -14.450963020324707
    10. '("""' → logprob: -15.200963020324707

Token 131: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -8.792751032160595e-05
    2. ' No' → logprob: -10.37508773803711
    3. '"No' → logprob: -10.50008773803711
    4. 'Yes' → logprob: -11.75008773803711
    5. 'NO' → logprob: -12.00008773803711
    6. 'Non' → logprob: -12.50008773803711
    7. '"' → logprob: -12.62508773803711
    8. ''' → logprob: -12.75008773803711
    9. 'N' → logprob: -13.25008773803711
    10. 'Not' → logprob: -14.75008773803711

Token 132: '')' (ID: 1542)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4745335578918457
    2. '')' → logprob: -0.9745335578918457
    3. ')' → logprob: -7.724533557891846
    4. '"' → logprob: -11.349533081054688
    5. ')")' → logprob: -13.599533081054688
    6. '')"' → logprob: -14.099533081054688
    7. ''' → logprob: -15.224533081054688
    8. '!")' → logprob: -15.474533081054688
    9. '')
' → logprob: -15.849533081054688
    10. '")
' → logprob: -16.474533081054688

Token 133: '  ' (ID: 256)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40193644165992737
    2. 'A' → logprob: -2.0269365310668945
    3. '0' → logprob: -2.1519365310668945
    4. ' x' → logprob: -3.5269365310668945
    5. ' ' → logprob: -3.5269365310668945
    6. 'B' → logprob: -5.2769365310668945
    7. ' A' → logprob: -5.5269365310668945
    8. 'N' → logprob: -5.5269365310668945
    9. ':' → logprob: -6.0269365310668945
    10. '[' → logprob: -6.1519365310668945

Token 134: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33625397086143494
    2. ':' → logprob: -1.4612540006637573
    3. ' ' → logprob: -3.5862538814544678
    4. 'A' → logprob: -4.711254119873047
    5. '[N' → logprob: -5.711254119873047
    6. '<|end|>' → logprob: -6.086254119873047
    7. '[A' → logprob: -6.336254119873047
    8. 'x' → logprob: -6.711254119873047
    9. '[x' → logprob: -6.711254119873047
    10. 'B' → logprob: -6.836254119873047

Token 135: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' peu' (ID: 9235)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15174533426761627
    2. '<|end|>' → logprob: -2.651745319366455
    3. ')' → logprob: -3.526745319366455
    4. '```' → logprob: -5.151745319366455
    5. ' )' → logprob: -5.526745319366455
    6. ' ```' → logprob: -5.776745319366455
    7. 'e' → logprob: -6.026745319366455
    8. '_' → logprob: -6.151745319366455
    9. '<|end|>' → logprob: -6.276745319366455
    10. '  ' → logprob: -6.276745319366455

Token 137: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2542186379432678
    2. ':' → logprob: -2.879218578338623
    3. '<|end|>' → logprob: -3.129218578338623
    4. ' ' → logprob: -3.504218578338623
    5. 'A' → logprob: -3.879218578338623
    6. '[]' → logprob: -4.379218578338623
    7. '[N' → logprob: -4.504218578338623
    8. ']' → logprob: -5.129218578338623
    9. '[A' → logprob: -5.254218578338623
    10. '0' → logprob: -5.254218578338623

Token 138: ' mix' (ID: 9762)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.5848153829574585
    2. 'jeu' → logprob: -1.8348153829574585
    3. 'style' → logprob: -2.709815502166748
    4. ' logique' → logprob: -2.834815502166748
    5. 'log' → logprob: -3.209815502166748
    6. 'mal' → logprob: -3.459815502166748
    7. 'hum' → logprob: -3.584815502166748
    8. 'l' → logprob: -3.584815502166748
    9. 'code' → logprob: -3.709815502166748
    10. 'p' → logprob: -3.834815502166748

Token 139: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3661874532699585
    2. ':' → logprob: -1.8661874532699585
    3. '[A' → logprob: -3.366187572479248
    4. ' ' → logprob: -3.866187572479248
    5. '[x' → logprob: -3.866187572479248
    6. 'A' → logprob: -3.991187572479248
    7. 'x' → logprob: -3.991187572479248
    8. '[N' → logprob: -4.741187572479248
    9. ']' → logprob: -5.116187572479248
    10. ')' → logprob: -5.366187572479248

Token 140: ' gu' (ID: 1704)
  Prédit: 'quotes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quotes' → logprob: -0.7374071478843689
    2. ''' → logprob: -1.3624072074890137
    3. '''' → logprob: -2.7374072074890137
    4. ' gu' → logprob: -2.9874072074890137
    5. 'styles' → logprob: -3.3624072074890137
    6. 'qu' → logprob: -3.4874072074890137
    7. 'quot' → logprob: -4.362407207489014
    8. ' styles' → logprob: -4.737407207489014
    9. ''''' → logprob: -4.737407207489014
    10. '"' → logprob: -4.862407207489014

Token 141: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.004018091131001711
    2. 'am' → logprob: -6.254018306732178
    3. 'illes' → logprob: -7.129018306732178
    4. 'il' → logprob: -8.25401782989502
    5. 'illa' → logprob: -8.50401782989502
    6. '```' → logprob: -8.50401782989502
    7. 'a' → logprob: -8.75401782989502
    8. 'uille' → logprob: -9.37901782989502
    9. 'm' → logprob: -9.50401782989502
    10. 'ill' → logprob: -9.62901782989502

Token 142: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.3168993592262268
    2. 'met' → logprob: -1.316899299621582
    3. 'm' → logprob: -6.316899299621582
    4. 'pet' → logprob: -6.941899299621582
    5. 'meta' → logprob: -8.441899299621582
    6. 'mar' → logprob: -8.441899299621582
    7. 'com' → logprob: -9.816899299621582
    8. 'mares' → logprob: -10.066899299621582
    9. 'g' → logprob: -10.316899299621582
    10. 'mages' → logprob: -10.441899299621582

Token 143: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38140544295310974
    2. '[x' → logprob: -2.3814053535461426
    3. ':' → logprob: -2.6314053535461426
    4. '[A' → logprob: -2.7564053535461426
    5. 'x' → logprob: -3.3814053535461426
    6. 'A' → logprob: -3.8814053535461426
    7. '[N' → logprob: -4.381405353546143
    8. '0' → logprob: -5.381405353546143
    9. ']' → logprob: -5.881405353546143
    10. 'N' → logprob: -5.881405353546143

Token 144: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02182479202747345
    2. '<|end|>' → logprob: -3.896824836730957
    3. '```' → logprob: -8.146824836730957
    4. '')' → logprob: -8.146824836730957
    5. ' )' → logprob: -8.396824836730957
    6. '<|end|>' → logprob: -8.771824836730957
    7. ' ' → logprob: -9.271824836730957
    8. '")' → logprob: -9.771824836730957
    9. ')
' → logprob: -9.896824836730957
    10. '#' → logprob: -10.521824836730957

Token 145: ''est' (ID: 6616)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.15630286931991577
    2. 'omm' → logprob: -2.9063029289245605
    3. ''est' → logprob: -3.5313029289245605
    4. 'omme' → logprob: -3.6563029289245605
    5. 'ar' → logprob: -5.2813029289245605
    6. '```' → logprob: -5.4063029289245605
    7. 'on' → logprob: -5.5313029289245605
    8. 'comment' → logprob: -5.5313029289245605
    9. 'orrect' → logprob: -5.9063029289245605
    10. '#' → logprob: -6.2813029289245605

Token 146: ' pas' (ID: 2173)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.8385369181632996
    2. ' normal' → logprob: -1.4635369777679443
    3. 'normal' → logprob: -1.9635369777679443
    4. ' ok' → logprob: -2.7135369777679443
    5. 'tout' → logprob: -3.7135369777679443
    6. ' OK' → logprob: -3.8385369777679443
    7. 'OK' → logprob: -3.8385369777679443
    8. 'correct' → logprob: -4.338536739349365
    9. 'f' → logprob: -4.838536739349365
    10. 'bien' → logprob: -4.963536739349365

Token 147: ' grave' (ID: 30607)
  Prédit: 'grave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grave' → logprob: -0.21245501935482025
    2. 'f' → logprob: -1.7124550342559814
    3. 'pro' → logprob: -5.962454795837402
    4. 'bien' → logprob: -6.212454795837402
    5. ' grave' → logprob: -6.337454795837402
    6. 'tr' → logprob: -7.462454795837402
    7. 'mal' → logprob: -7.587454795837402
    8. 'gr' → logprob: -7.587454795837402
    9. 'bon' → logprob: -8.337454795837402
    10. 'tout' → logprob: -8.587454795837402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 145
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 18.62%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 46.21%
================================================================================
