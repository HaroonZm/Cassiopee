================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
x = [int(i) for i in input().split()]

left = []
right = []
for val in x:
    # Bon je range les négatifs dans left mais en positif c'est plus simple
    if val < 0:
        left.append(-val)
    else:
        right.append(val)

# je crois que c'est mieux inversé pour les négatifs?
left = left[::-1]

# classique: valeur initiale immense
res = 10**18

for l in range(0, min(k+1, len(left)+1)):
    r = k-l
    # alors, si on part à droite seulement
    if l == 0:
        if len(right) >= r:
            res = min(res, right[r-1])
    # gauche seulement
    elif l == k:
        if len(left) >= k:
            res = min(res, left[k-1])
    # Sinon on essaye un peu des deux côtés
    else:
        if len(right) >= r and len(left) >= l:
            a = right[r-1]
            b = left[l-1]
            # j'ai utilisé des variables a et b au lieu de noms clairs, désolé
            if a < b:
                res = min(res, 2*a + b)
            else:
                res = min(res, 2*b + a)
            # je pense que les deux cas sont nécessaires
# J'espère que j'ai rien oublié
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009463517926633358
    2. ' =' → logprob: -4.759463310241699
    3. ',' → logprob: -7.134463310241699
    4. '=
' → logprob: -10.6344633102417
    5. ' ' → logprob: -12.1344633102417
    6. '=

' → logprob: -12.3844633102417
    7. ';' → logprob: -12.8844633102417
    8. ')' → logprob: -13.3844633102417
    9. '```' → logprob: -13.3844633102417
    10. '.' → logprob: -13.5094633102417

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5995050072669983
    2. ' map' → logprob: -0.9745050072669983
    3. 'map' → logprob: -3.2245049476623535
    4. '0' → logprob: -3.9745049476623535
    5. ' input' → logprob: -4.8495049476623535
    6. ' n' → logprob: -5.9745049476623535
    7. 'input' → logprob: -6.2245049476623535
    8. '10' → logprob: -6.3495049476623535
    9. ' int' → logprob: -8.099505424499512
    10. '1' → logprob: -8.724505424499512

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3393779695034027
    2. '<|end|>' → logprob: -1.339377999305725
    3. '<|end|>' → logprob: -4.9643778800964355
    4. '(int' → logprob: -5.7143778800964355
    5. '(user' → logprob: -5.9643778800964355
    6. '```' → logprob: -5.9643778800964355
    7. ')' → logprob: -6.2143778800964355
    8. '(lambda' → logprob: -6.4643778800964355
    9. '(range' → logprob: -7.2143778800964355
    10. 'user' → logprob: -7.4643778800964355

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03236441686749458
    2. ')' → logprob: -4.282364368438721
    3. 'input' → logprob: -4.532364368438721
    4. '(' → logprob: -5.032364368438721
    5. ' input' → logprob: -8.407364845275879
    6. ',input' → logprob: -8.657364845275879
    7. '=input' → logprob: -9.657364845275879
    8. '```' → logprob: -9.782364845275879
    9. '(int' → logprob: -9.907364845275879
    10. '<input' → logprob: -9.907364845275879

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5763772130012512
    2. ' input' → logprob: -0.8263772130012512
    3. '(input' → logprob: -7.8263773918151855
    4. ')' → logprob: -10.451376914978027
    5. ',input' → logprob: -12.201376914978027
    6. '=input' → logprob: -13.076376914978027
    7. '[input' → logprob: -14.576376914978027
    8. '<input' → logprob: -14.826376914978027
    9. '	input' → logprob: -15.326376914978027
    10. 'stdin' → logprob: -15.576376914978027

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6027558445930481
    2. '('' → logprob: -1.7277557849884033
    3. '().' → logprob: -2.3527557849884033
    4. ')' → logprob: -2.7277557849884033
    5. '()' → logprob: -2.8527557849884033
    6. '())' → logprob: -3.4777557849884033
    7. '("("' → logprob: -5.477756023406982
    8. '(
' → logprob: -5.727756023406982
    9. '```' → logprob: -5.852756023406982
    10. '(""))' → logprob: -6.227756023406982

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007220837287604809
    2. 'strip' → logprob: -7.2507219314575195
    3. 'rstrip' → logprob: -12.00072193145752
    4. ' split' → logprob: -12.62572193145752
    5. ')' → logprob: -13.62572193145752
    6. 'read' → logprob: -13.75072193145752
    7. '(split' → logprob: -15.00072193145752
    8. 'spl' → logprob: -15.87572193145752
    9. 'startswith' → logprob: -17.625722885131836
    10. 's' → logprob: -18.250722885131836

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08872120827436447
    2. '())' → logprob: -2.96372127532959
    3. '))' → logprob: -3.46372127532959
    4. '()' → logprob: -6.46372127532959
    5. '()))' → logprob: -8.58872127532959
    6. '`)' → logprob: -9.21372127532959
    7. '(' → logprob: -9.83872127532959
    8. '>)' → logprob: -11.46372127532959
    9. ')`' → logprob: -11.58872127532959
    10. ')))' → logprob: -11.71372127532959

Token 11: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.180678367614746
    2. 'if' → logprob: -1.180678367614746
    3. 'for' → logprob: -2.430678367614746
    4. 'x' → logprob: -3.305678367614746
    5. '#' → logprob: -3.555678367614746
    6. '\n' → logprob: -3.555678367614746
    7. '```' → logprob: -3.805678367614746
    8. 'd' → logprob: -3.805678367614746
    9. 's' → logprob: -4.055678367614746
    10. ' ' → logprob: -4.180678367614746

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.369386076927185
    2. ' =' → logprob: -1.744386076927185
    3. '_' → logprob: -1.744386076927185
    4. '=' → logprob: -1.869386076927185
    5. ',' → logprob: -2.2443861961364746
    6. '**' → logprob: -2.9943861961364746
    7. '+' → logprob: -3.7443861961364746
    8. ')' → logprob: -4.369386196136475
    9. '.' → logprob: -5.119386196136475
    10. 'y' → logprob: -5.119386196136475

Token 13: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.465431571006775
    2. ' []' → logprob: -1.715431571006775
    3. ' list' → logprob: -2.2154316902160645
    4. ' n' → logprob: -2.3404316902160645
    5. '[]' → logprob: -2.4654316902160645
    6. ' int' → logprob: -2.7154316902160645
    7. ' [' → logprob: -2.8404316902160645
    8. 'int' → logprob: -2.9654316902160645
    9. 'list' → logprob: -3.3404316902160645
    10. 'n' → logprob: -3.4654316902160645

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003321007825434208
    2. '0' → logprob: -5.753321170806885
    3. ' int' → logprob: -9.253320693969727
    4. ']int' → logprob: -11.253320693969727
    5. 'map' → logprob: -11.378320693969727
    6. '(int' → logprob: -11.628320693969727
    7. ']' → logprob: -12.128320693969727
    8. '1' → logprob: -12.253320693969727
    9. '*' → logprob: -13.878320693969727
    10. 'i' → logprob: -14.128320693969727

Token 15: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27160125970840454
    2. '(x' → logprob: -1.6466012001037598
    3. '(input' → logprob: -3.3966012001037598
    4. '(i' → logprob: -4.89660120010376
    5. '()]' → logprob: -6.27160120010376
    6. '()' → logprob: -7.27160120010376
    7. '(a' → logprob: -7.89660120010376
    8. ']' → logprob: -8.146601676940918
    9. '(s' → logprob: -8.396601676940918
    10. '(token' → logprob: -8.521601676940918

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011658186558634043
    2. ')]' → logprob: -6.876165866851807
    3. 'for' → logprob: -10.501165390014648
    4. '(input' → logprob: -10.626165390014648
    5. '())' → logprob: -11.001165390014648
    6. 'input' → logprob: -11.001165390014648
    7. ' )' → logprob: -11.501165390014648
    8. '(' → logprob: -11.751165390014648
    9. ']' → logprob: -11.876165390014648
    10. ')])' → logprob: -11.876165390014648

Token 17: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2657962441444397
    2. ' for' → logprob: -1.640796184539795
    3. ']' → logprob: -3.890796184539795
    4. ')' → logprob: -4.640796184539795
    5. '(input' → logprob: -5.140796184539795
    6. 'input' → logprob: -5.890796184539795
    7. '(' → logprob: -8.890796661376953
    8. ' input' → logprob: -9.015796661376953
    9. '(x' → logprob: -9.140796661376953
    10. ')]' → logprob: -9.265796661376953

Token 18: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.021829109638929367
    2. 'input' → logprob: -4.271829128265381
    3. ' ' → logprob: -5.521829128265381
    4. '<|end|>' → logprob: -7.021829128265381
    5. '(input' → logprob: -7.521829128265381
    6. ' in' → logprob: -7.521829128265381
    7. '_' → logprob: -7.646829128265381
    8. ' i' → logprob: -8.021828651428223
    9. '<|end|>' → logprob: -8.271828651428223
    10. ' range' → logprob: -8.771828651428223

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1451111137866974
    2. 'in' → logprob: -2.020111083984375
    3. 'input' → logprob: -6.770111083984375
    4. ' input' → logprob: -7.895111083984375
    5. ' ' → logprob: -8.270111083984375
    6. 'n' → logprob: -8.395111083984375
    7. '_' → logprob: -8.645111083984375
    8. '(' → logprob: -8.770111083984375
    9. '(input' → logprob: -10.770111083984375
    10. ' n' → logprob: -11.020111083984375

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25210586190223694
    2. ' input' → logprob: -1.5021058320999146
    3. 'range' → logprob: -9.127105712890625
    4. ' range' → logprob: -9.627105712890625
    5. '(input' → logprob: -14.002105712890625
    6. ' ' → logprob: -14.502105712890625
    7. '=input' → logprob: -15.752105712890625
    8. '_' → logprob: -16.377105712890625
    9. 'in' → logprob: -16.502105712890625
    10. '_input' → logprob: -16.502105712890625

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4774976968765259
    2. '()]' → logprob: -0.9774976968765259
    3. '()' → logprob: -5.727497577667236
    4. '()].' → logprob: -9.352498054504395
    5. '())' → logprob: -10.352498054504395
    6. '(' → logprob: -10.352498054504395
    7. '()][' → logprob: -12.977498054504395
    8. ']' → logprob: -13.227498054504395
    9. '()],' → logprob: -13.477498054504395
    10. ')]' → logprob: -13.852498054504395

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8550976164988242e-05
    2. 'strip' → logprob: -11.000018119812012
    3. 'rstrip' → logprob: -13.375018119812012
    4. ' split' → logprob: -15.750018119812012
    5. 'spl' → logprob: -16.000019073486328
    6. '(split' → logprob: -16.750019073486328
    7. 's' → logprob: -19.875019073486328
    8. 'sp' → logprob: -20.500019073486328
    9. 'plit' → logprob: -21.500019073486328
    10. '.split' → logprob: -21.625019073486328

Token 23: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.04096486419439316
    2. '(' → logprob: -3.7909648418426514
    3. '()' → logprob: -4.6659650802612305
    4. '())' → logprob: -4.9159650802612305
    5. '('' → logprob: -7.1659650802612305
    6. ')]' → logprob: -11.16596508026123
    7. ']' → logprob: -11.66596508026123
    8. '()][' → logprob: -12.29096508026123
    9. '()],' → logprob: -12.41596508026123
    10. '(()' → logprob: -12.79096508026123

Token 24: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.48282691836357117
    2. ']' → logprob: -0.9828269481658936
    3. ')' → logprob: -4.8578267097473145
    4. '])' → logprob: -7.4828267097473145
    5. '])]' → logprob: -8.357827186584473
    6. '`]' → logprob: -9.357827186584473
    7. ')])' → logprob: -10.732827186584473
    8. ' ]' → logprob: -11.107827186584473
    9. '']' → logprob: -11.482827186584473
    10. ')],' → logprob: -12.482827186584473

Token 25: 'left' (ID: 4530)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5018811225891113
    2. 'c' → logprob: -1.6268811225891113
    3. 's' → logprob: -2.1268811225891113
    4. 'x' → logprob: -3.8768811225891113
    5. 'count' → logprob: -4.251881122589111
    6. 'm' → logprob: -4.376881122589111
    7. 'result' → logprob: -5.251881122589111
    8. 'a' → logprob: -5.876881122589111
    9. 'dp' → logprob: -5.876881122589111
    10. 'for' → logprob: -6.001881122589111

Token 26: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01352475956082344
    2. ' =' → logprob: -5.638524532318115
    3. '_bound' → logprob: -6.263524532318115
    4. '=' → logprob: -6.388524532318115
    5. ',' → logprob: -6.888524532318115
    6. '[' → logprob: -7.138524532318115
    7. '_pointer' → logprob: -7.513524532318115
    8. '_sum' → logprob: -7.638524532318115
    9. '_idx' → logprob: -7.638524532318115
    10. '_space' → logprob: -8.138525009155273

Token 27: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31590333580970764
    2. ' ' → logprob: -1.3159033060073853
    3. '[' → logprob: -6.565903186798096
    4. ' [' → logprob: -7.440903186798096
    5. '[]' → logprob: -8.440903663635254
    6. ' []' → logprob: -8.565903663635254
    7. ' x' → logprob: -10.065903663635254
    8. 'x' → logprob: -10.065903663635254
    9. ' =' → logprob: -10.565903663635254
    10. 'max' → logprob: -11.065903663635254

Token 28: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.012622899375855923
    2. 'for' → logprob: -5.137622833251953
    3. ' right' → logprob: -6.262622833251953
    4. 'stack' → logprob: -6.262622833251953
    5. 'max' → logprob: -7.387622833251953
    6. '[]' → logprob: -8.137622833251953
    7. 'current' → logprob: -8.387622833251953
    8. 'count' → logprob: -8.762622833251953
    9. ' for' → logprob: -8.887622833251953
    10. '[' → logprob: -8.887622833251953

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012545911595225334
    2. '=' → logprob: -4.387546062469482
    3. '[]' → logprob: -11.637545585632324
    4. '=[]' → logprob: -11.887545585632324
    5. '.append' → logprob: -12.262545585632324
    6. '_' → logprob: -12.262545585632324
    7. '[:]' → logprob: -12.637545585632324
    8. 's' → logprob: -13.137545585632324
    9. '.' → logprob: -13.512545585632324
    10. 'space' → logprob: -13.512545585632324

Token 30: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01733391545712948
    2. ' []' → logprob: -4.142333984375
    3. '[' → logprob: -7.517333984375
    4. '[x' → logprob: -7.642333984375
    5. '[left' → logprob: -9.892333984375
    6. '[]
' → logprob: -10.017333984375
    7. '[]}' → logprob: -10.517333984375
    8. '0' → logprob: -10.517333984375
    9. 'x' → logprob: -10.642333984375
    10. ' [' → logprob: -10.767333984375

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0052495296113193035
    2. ' for' → logprob: -5.255249500274658
    3. 'max' → logprob: -12.755249977111816
    4. '```' → logprob: -13.005249977111816
    5. 'f' → logprob: -13.130249977111816
    6. 'current' → logprob: -13.630249977111816
    7. 's' → logprob: -14.005249977111816
    8. ' ' → logprob: -14.130249977111816
    9. 'd' → logprob: -14.130249977111816
    10. '
' → logprob: -14.505249977111816

Token 32: ' val' (ID: 1459)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0440622977912426
    2. 'i' → logprob: -4.29406213760376
    3. '_' → logprob: -4.54406213760376
    4. ' _' → logprob: -5.04406213760376
    5. ' x' → logprob: -5.16906213760376
    6. ' ' → logprob: -5.54406213760376
    7. ' v' → logprob: -7.16906213760376
    8. ' a' → logprob: -7.29406213760376
    9. 'x' → logprob: -7.91906213760376
    10. ' val' → logprob: -8.669062614440918

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007654780521988869
    2. 'in' → logprob: -5.257654666900635
    3. ' ' → logprob: -6.132654666900635
    4. 's' → logprob: -9.007655143737793
    5. '  ' → logprob: -9.757655143737793
    6. ',' → logprob: -10.882655143737793
    7. ' i' → logprob: -11.257655143737793
    8. '	in' → logprob: -11.257655143737793
    9. '   ' → logprob: -11.757655143737793
    10. 'i' → logprob: -12.382655143737793

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07889287173748016
    2. ' x' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.078892707824707
    4. '(x' → logprob: -14.578892707824707
    5. '	x' → logprob: -15.828892707824707
    6. 'range' → logprob: -15.828892707824707
    7. ' range' → logprob: -15.953892707824707
    8. ' xrange' → logprob: -17.078893661499023
    9. '   ' → logprob: -17.453893661499023
    10. '_x' → logprob: -17.578893661499023

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012166214582975954
    2. ' :' → logprob: -9.1251220703125
    3. '):' → logprob: -12.6251220703125
    4. ':
' → logprob: -12.7501220703125
    5. ':**' → logprob: -12.7501220703125
    6. '>:' → logprob: -13.8751220703125
    7. '>' → logprob: -14.0001220703125
    8. ''s' → logprob: -15.5001220703125
    9. ' if' → logprob: -15.6251220703125
    10. '   ' → logprob: -15.6251220703125

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07409664988517761
    2. ' if' → logprob: -3.3240966796875
    3. ' ' → logprob: -4.3240966796875
    4. ':' → logprob: -4.8240966796875
    5. '<|end|>' → logprob: -4.8240966796875
    6. ' 
' → logprob: -6.1990966796875
    7. '    
' → logprob: -6.4490966796875
    8. '    ' → logprob: -6.8240966796875
    9. '```' → logprob: -7.9490966796875
    10. '<|end|>' → logprob: -8.1990966796875

Token 37: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10752812772989273
    2. ' left' → logprob: -3.2325282096862793
    3. 'if' → logprob: -3.4825282096862793
    4. '   ' → logprob: -3.7325282096862793
    5. 'left' → logprob: -5.482528209686279
    6. ' ' → logprob: -6.607528209686279
    7. ' val' → logprob: -7.232528209686279
    8. ' right' → logprob: -7.357528209686279
    9. '    ' → logprob: -8.982527732849121
    10. '0' → logprob: -9.107527732849121

Token 38: ' Bon' (ID: 12658)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03825652599334717
    2. 'if' → logprob: -3.2882566452026367
    3. ' i' → logprob: -9.663256645202637
    4. '   ' → logprob: -9.913256645202637
    5. 'i' → logprob: -10.538256645202637
    6. ' If' → logprob: -10.788256645202637
    7. ' ' → logprob: -10.788256645202637
    8. 'If' → logprob: -11.288256645202637
    9. '    ' → logprob: -12.163256645202637
    10. '```' → logprob: -12.163256645202637

Token 39: ' je' (ID: 1264)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.08614018559455872
    2. 'd' → logprob: -3.5861401557922363
    3. 'if' → logprob: -3.8361401557922363
    4. '   ' → logprob: -4.836140155792236
    5. 'ds' → logprob: -4.961140155792236
    6. 'k' → logprob: -5.461140155792236
    7. 'uses' → logprob: -5.961140155792236
    8. '       ' → logprob: -6.461140155792236
    9. 'u' → logprob: -6.586140155792236
    10. 'ch' → logprob: -6.836140155792236

Token 40: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6480417847633362
    2. 'if' → logprob: -1.5230417251586914
    3. 's' → logprob: -2.6480417251586914
    4. 'g' → logprob: -3.3980417251586914
    5. 'u' → logprob: -3.6480417251586914
    6. ' if' → logprob: -3.8980417251586914
    7. 'j' → logprob: -4.023041725158691
    8. 'c' → logprob: -4.273041725158691
    9. 'ne' → logprob: -4.398041725158691
    10. '   ' → logprob: -4.398041725158691

Token 41: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6433972120285034
    2. ' if' → logprob: -1.8933972120285034
    3. 's' → logprob: -2.518397331237793
    4. 'g' → logprob: -2.518397331237793
    5. '   ' → logprob: -4.018397331237793
    6. '    ' → logprob: -4.143397331237793
    7. ' gauche' → logprob: -4.143397331237793
    8. ' à' → logprob: -4.393397331237793
    9. '  ' → logprob: -4.393397331237793
    10. ' dans' → logprob: -4.518397331237793

Token 42: ' nég' (ID: 55805)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20671521127223969
    2. 'neg' → logprob: -3.0817151069641113
    3. ' val' → logprob: -3.4567151069641113
    4. 'posit' → logprob: -4.206715106964111
    5. ' distances' → logprob: -4.456715106964111
    6. 'positions' → logprob: -4.581715106964111
    7. ' nég' → logprob: -4.706715106964111
    8. 'élé' → logprob: -5.456715106964111
    9. 'moins' → logprob: -5.456715106964111
    10. 'pos' → logprob: -5.456715106964111

Token 43: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.07268165796995163
    2. 'ative' → logprob: -3.3226816654205322
    3. 'atif' → logprob: -3.5726816654205322
    4. 'atives' → logprob: -5.447681427001953
    5. 'at' → logprob: -7.822681427001953
    6. ' at' → logprob: -8.447681427001953
    7. '```' → logprob: -8.447681427001953
    8. 'ativement' → logprob: -8.447681427001953
    9. 'ativ' → logprob: -9.447681427001953
    10. '   ' → logprob: -9.447681427001953

Token 44: ' dans' (ID: 2671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15412576496601105
    2. ' ' → logprob: -2.404125690460205
    3. 'if' → logprob: -3.779125690460205
    4. '   ' → logprob: -5.029125690460205
    5. ',' → logprob: -5.154125690460205
    6. ' ,' → logprob: -5.154125690460205
    7. ' :' → logprob: -5.529125690460205
    8. ':' → logprob: -5.529125690460205
    9. '    ' → logprob: -6.529125690460205
    10. '  ' → logprob: -7.529125690460205

Token 45: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5778532028198242
    2. 'left' → logprob: -0.8278532028198242
    3. 'right' → logprob: -6.827853202819824
    4. ' right' → logprob: -7.952853202819824
    5. ' lef' → logprob: -9.077853202819824
    6. ' la' → logprob: -9.702853202819824
    7. ' gauche' → logprob: -9.827853202819824
    8. ' ' → logprob: -9.952853202819824
    9. 'lef' → logprob: -10.202853202819824
    10. 'l' → logprob: -10.452853202819824

Token 46: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7904491424560547
    2. ' if' → logprob: -1.0404491424560547
    3. ',' → logprob: -2.2904491424560547
    4. '    ' → logprob: -3.5404491424560547
    5. ' ,' → logprob: -3.9154491424560547
    6. 'if' → logprob: -4.415449142456055
    7. ' ' → logprob: -4.915449142456055
    8. '  ' → logprob: -5.165449142456055
    9. ':' → logprob: -5.415449142456055
    10. '.append' → logprob: -5.540449142456055

Token 47: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3318454027175903
    2. 'je' → logprob: -1.5818454027175903
    3. 'pas' → logprob: -1.7068454027175903
    4. 'only' → logprob: -2.956845283508301
    5. 'égal' → logprob: -3.331845283508301
    6. 'also' → logprob: -3.581845283508301
    7. 'les' → logprob: -3.706845283508301
    8. 'contin' → logprob: -3.706845283508301
    9. 'continue' → logprob: -3.956845283508301
    10. 'sans' → logprob: -4.081845283508301

Token 48: ' positif' (ID: 89008)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.3647830486297607
    2. 'f' → logprob: -2.2397830486297607
    3. 'val' → logprob: -2.3647830486297607
    4. 'fait' → logprob: -2.8647830486297607
    5. 'g' → logprob: -3.3647830486297607
    6. 'les' → logprob: -3.4897830486297607
    7. 'ordre' → logprob: -3.6147830486297607
    8. 'reverse' → logprob: -3.6147830486297607
    9. 'left' → logprob: -3.6147830486297607
    10. ' gard' → logprob: -3.7397830486297607

Token 49: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09745839983224869
    2. ' ,' → logprob: -3.2224583625793457
    3. ':' → logprob: -4.472458362579346
    4. 's' → logprob: -5.347458362579346
    5. '.' → logprob: -5.722458362579346
    6. '  ' → logprob: -5.847458362579346
    7. ')' → logprob: -5.972458362579346
    8. '   ' → logprob: -6.097458362579346
    9. 'e' → logprob: -6.097458362579346
    10. ' and' → logprob: -6.222458362579346

Token 50: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.5897401571273804
    2. 'on' → logprob: -1.3397401571273804
    3. 'omm' → logprob: -2.71474027633667
    4. 'a' → logprob: -3.71474027633667
    5. 'om' → logprob: -3.83974027633667
    6. 'ar' → logprob: -4.33974027633667
    7. 'as' → logprob: -4.58974027633667
    8. 'ôté' → logprob: -5.33974027633667
    9. 'ons' → logprob: -5.71474027633667
    10. 'omme' → logprob: -5.83974027633667

Token 51: ' plus' (ID: 2932)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6285508275032043
    2. 'le' → logprob: -2.2535507678985596
    3. 'pas' → logprob: -2.5035507678985596
    4. 'a' → logprob: -2.6285507678985596
    5. 'plus' → logprob: -2.8785507678985596
    6. ' l' → logprob: -3.7535507678985596
    7. 'à' → logprob: -4.378551006317139
    8. 'dans' → logprob: -4.628551006317139
    9. 'moins' → logprob: -4.753551006317139
    10. 'la' → logprob: -5.003551006317139

Token 52: ' simple' (ID: 4705)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.7321175336837769
    2. 'com' → logprob: -1.6071175336837769
    3. 'pr' → logprob: -2.1071176528930664
    4. 'complex' → logprob: -2.6071176528930664
    5. ' compliqué' → logprob: -3.8571176528930664
    6. 'fac' → logprob: -4.107117652893066
    7. 'd' → logprob: -4.232117652893066
    8. 'log' → logprob: -4.357117652893066
    9. 'pro' → logprob: -4.607117652893066
    10. ' simple' → logprob: -4.607117652893066

Token 53: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8200989365577698
    2. ':' → logprob: -1.070098876953125
    3. ',' → logprob: -2.445098876953125
    4. '   ' → logprob: -2.945098876953125
    5. ' ' → logprob: -3.445098876953125
    6. ' :' → logprob: -4.195098876953125
    7. 'if' → logprob: -4.445098876953125
    8. ' ,' → logprob: -4.820098876953125
    9. '.' → logprob: -6.070098876953125
    10. '  ' → logprob: -6.195098876953125

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6233934760093689
    2. ' if' → logprob: -1.2483935356140137
    3. ':' → logprob: -2.3733935356140137
    4. ',' → logprob: -3.2483935356140137
    5. ' ' → logprob: -4.623393535614014
    6. ' ,' → logprob: -4.623393535614014
    7. ' :' → logprob: -5.373393535614014
    8. '  ' → logprob: -5.748393535614014
    9. 'if' → logprob: -5.748393535614014
    10. '[val' → logprob: -5.873393535614014

Token 55: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023959780111908913
    2. 'if' (adapté à ' if') → logprob: -4.023959636688232
    3. '   ' → logprob: -5.898959636688232
    4. ':' → logprob: -6.273959636688232
    5. 'left' → logprob: -7.648959636688232
    6. 'val' → logprob: -8.39896011352539
    7. ' left' → logprob: -8.64896011352539
    8. '    ' → logprob: -9.77396011352539
    9. ' val' → logprob: -9.89896011352539
    10. ',' → logprob: -10.14896011352539

Token 56: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00017982252757064998
    2. 'val' → logprob: -8.6251802444458
    3. '	val' → logprob: -15.7501802444458
    4. ' ' → logprob: -17.000179290771484
    5. '(val' → logprob: -17.000179290771484
    6. '[val' → logprob: -17.500179290771484
    7. '  ' → logprob: -18.125179290771484
    8. ' ' → logprob: -18.750179290771484
    9. ',val' → logprob: -18.750179290771484
    10. ' abs' → logprob: -19.375179290771484

Token 57: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4289441406726837
    2. '<' → logprob: -1.0539441108703613
    3. ' <=' → logprob: -9.30394458770752
    4. ' ' → logprob: -9.55394458770752
    5. '<=' → logprob: -10.55394458770752
    6. ')' → logprob: -10.92894458770752
    7. '0' → logprob: -11.55394458770752
    8. '[' → logprob: -12.55394458770752
    9. '<int' → logprob: -12.92894458770752
    10. '<|end|>' → logprob: -12.92894458770752

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231261849403381
    2. ' ' → logprob: -0.8981261849403381
    3. '=' → logprob: -13.148126602172852
    4. ' ' → logprob: -15.023126602172852
    5. '  ' → logprob: -15.648126602172852
    6. ')' → logprob: -15.960626602172852
    7. '۰' → logprob: -16.46062660217285
    8. '1' → logprob: -17.08562660217285
    9. '>' → logprob: -17.21062660217285
    10. ':' → logprob: -17.33562660217285

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '=' → logprob: -16.62548828125
    4. '۰' → logprob: -17.25048828125
    5. '０' → logprob: -19.00048828125
    6. ':' → logprob: -19.12548828125
    7. '  ' → logprob: -19.12548828125
    8. ')' → logprob: -19.68798828125
    9. '```' → logprob: -19.75048828125
    10. 'k' → logprob: -19.93798828125

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011983246076852083
    2. ' :' → logprob: -7.5011982917785645
    3. ':
' → logprob: -7.6261982917785645
    4. ':left' → logprob: -9.501198768615723
    5. '):' → logprob: -10.126198768615723
    6. ')' → logprob: -11.001198768615723
    7. 'left' → logprob: -12.001198768615723
    8. ',' → logprob: -12.126198768615723
    9. ' left' → logprob: -13.126198768615723
    10. '   ' → logprob: -13.126198768615723

Token 61: '       ' (ID: 309)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4708991050720215
    2. 'left' → logprob: -1.7208991050720215
    3. ':' → logprob: -1.9708991050720215
    4. '   ' → logprob: -3.2208991050720215
    5. ':left' → logprob: -4.4708991050720215
    6. '	left' → logprob: -5.5958991050720215
    7. ',left' → logprob: -7.9708991050720215
    8. ',' → logprob: -8.22089958190918
    9. '.left' → logprob: -8.34589958190918
    10. '-left' → logprob: -8.47089958190918

Token 62: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.009645946323871613
    2. 'left' (adapté à ' left') → logprob: -4.759645938873291
    3. '   ' → logprob: -7.134645938873291
    4. ' lef' → logprob: -8.88464641571045
    5. '	left' → logprob: -9.50964641571045
    6. ',left' → logprob: -12.63464641571045
    7. ':left' → logprob: -13.25964641571045
    8. '_left' → logprob: -13.38464641571045
    9. ',' → logprob: -13.38464641571045
    10. '[left' → logprob: -13.69714641571045

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005265306681394577
    2. '.' → logprob: -5.255265235900879
    3. ' .' → logprob: -11.130265235900879
    4. '.insert' → logprob: -11.880265235900879
    5. 'append' → logprob: -12.755265235900879
    6. '.push' → logprob: -12.880265235900879
    7. '.extend' → logprob: -13.255265235900879
    8. '.ap' → logprob: -13.755265235900879
    9. ').' → logprob: -14.380265235900879
    10. '.add' → logprob: -15.380265235900879

Token 64: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5826297402381897
    2. '(abs' → logprob: -0.8326297402381897
    3. '(' → logprob: -5.082629680633545
    4. '(val' → logprob: -7.957629680633545
    5. 'abs' → logprob: -9.207630157470703
    6. ' abs' → logprob: -12.832630157470703
    7. '((-' → logprob: -12.957630157470703
    8. '(
' → logprob: -13.332630157470703
    9. '-' → logprob: -14.082630157470703
    10. '(len' → logprob: -14.207630157470703

Token 65: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.1008713702030946e-06
    2. ' val' → logprob: -13.125001907348633
    3. '	val' → logprob: -17.875001907348633
    4. '1' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '```' → logprob: -21.125001907348633
    7. 'valg' → logprob: -21.125001907348633
    8. '-val' → logprob: -21.250001907348633
    9. 'valu' → logprob: -21.250001907348633
    10. '_val' → logprob: -21.375001907348633

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003163969377055764
    2. ' )' → logprob: -8.250316619873047
    3. ')
' → logprob: -10.125316619873047
    4. '   ' → logprob: -12.000316619873047
    5. 'else' → logprob: -12.500316619873047
    6. ' else' → logprob: -13.250316619873047
    7. '')' → logprob: -14.625316619873047
    8. ',' → logprob: -14.625316619873047
    9. '),' → logprob: -14.875316619873047
    10. ')`' → logprob: -15.000316619873047

Token 67: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8706011772155762
    2. '   ' → logprob: -1.2456011772155762
    3. 'else' → logprob: -1.2456011772155762
    4. '<|end|>' → logprob: -5.995601177215576
    5. '	else' → logprob: -6.870601177215576
    6. ')' → logprob: -7.370601177215576
    7. ' ' → logprob: -7.995601177215576
    8. 'elif' → logprob: -7.995601177215576
    9. ' elif' → logprob: -8.370601654052734
    10. '```' → logprob: -9.120601654052734

Token 68: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6997563242912292
    2. 'else' (adapté à ' else') → logprob: -0.6997563242912292
    3. '   ' → logprob: -5.199756145477295
    4. '	else' → logprob: -7.449756145477295
    5. 'elif' → logprob: -8.449756622314453
    6. ' elif' → logprob: -9.074756622314453
    7. ')' → logprob: -9.199756622314453
    8. '<|end|>' → logprob: -10.949756622314453
    9. '	elif' → logprob: -11.449756622314453
    10. ' ' → logprob: -11.824756622314453

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01640254072844982
    2. ':
' → logprob: -4.141402721405029
    3. '       ' → logprob: -8.516402244567871
    4. '):' → logprob: -9.891402244567871
    5. '):
' → logprob: -9.891402244567871
    6. ' :' → logprob: -10.516402244567871
    7. ':right' → logprob: -11.516402244567871
    8. '   ' → logprob: -11.641402244567871
    9. ' :
' → logprob: -12.016402244567871
    10. ')' → logprob: -12.016402244567871

Token 70: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6204493641853333
    2. '       ' → logprob: -1.1204493045806885
    3. ' right' → logprob: -1.9954493045806885
    4. '	right' → logprob: -8.87044906616211
    5. '   ' → logprob: -9.87044906616211
    6. ',right' → logprob: -12.12044906616211
    7. '[right' → logprob: -12.62044906616211
    8. '.right' → logprob: -12.87044906616211
    9. '```' → logprob: -13.24544906616211
    10. '(right' → logprob: -13.87044906616211

Token 71: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -9.662937372922897e-05
    2. ' right' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.125096321105957
    4. '       ' → logprob: -16.125097274780273
    5. '	right' → logprob: -16.125097274780273
    6. 'r' → logprob: -19.875097274780273
    7. '```' → logprob: -19.875097274780273
    8. 'left' → logprob: -20.250097274780273
    9. 'Right' → logprob: -20.500097274780273
    10. ',right' → logprob: -21.000097274780273

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011062316596508026
    2. '.' → logprob: -4.511062145233154
    3. ' .' → logprob: -11.386062622070312
    4. '.extend' → logprob: -13.136062622070312
    5. '.app' → logprob: -14.136062622070312
    6. 'append' → logprob: -15.886062622070312
    7. '.ap' → logprob: -16.136062622070312
    8. ').' → logprob: -16.261062622070312
    9. '.push' → logprob: -17.636062622070312
    10. '.Append' → logprob: -17.886062622070312

Token 73: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0009519561426714063
    2. 'val' → logprob: -7.000951766967773
    3. '(' → logprob: -10.125951766967773
    4. ' val' → logprob: -15.250951766967773
    5. '[val' → logprob: -16.250951766967773
    6. ',val' → logprob: -16.625951766967773
    7. '(v' → logprob: -17.625951766967773
    8. '(
' → logprob: -17.750951766967773
    9. '	val' → logprob: -18.125951766967773
    10. ' (' → logprob: -19.000951766967773

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -11.625011444091797
    3. ')
' → logprob: -14.250011444091797
    4. '<|end|>' → logprob: -15.375011444091797
    5. '`)' → logprob: -15.625011444091797
    6. '))' → logprob: -15.750011444091797
    7. ')return' → logprob: -15.875011444091797
    8. '#' → logprob: -15.875011444091797
    9. ')n' → logprob: -16.250011444091797
    10. '   ' → logprob: -16.750011444091797

Token 75: '#' (ID: 2)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01301033515483141
    2. 'right' → logprob: -5.013010501861572
    3. '
' → logprob: -5.138010501861572
    4. ' left' → logprob: -9.263010025024414
    5. 'sorted' → logprob: -9.388010025024414
    6. '```' → logprob: -9.388010025024414
    7. 'if' → logprob: -10.638010025024414
    8. 'x' → logprob: -11.013010025024414
    9. '[left' → logprob: -11.388010025024414
    10. 'import' → logprob: -11.513010025024414

Token 76: ' je' (ID: 1264)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0016463837819173932
    2. '#' → logprob: -7.001646518707275
    3. 'if' → logprob: -8.126646041870117
    4. ' left' → logprob: -8.626646041870117
    5. 'right' → logprob: -9.876646041870117
    6. 'import' → logprob: -10.501646041870117
    7. 'from' → logprob: -10.876646041870117
    8. 'ans' → logprob: -11.126646041870117
    9. 'sorted' → logprob: -11.126646041870117
    10. '```' → logprob: -11.126646041870117

Token 77: ' crois' (ID: 65485)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.009820428676903248
    2. ' left' → logprob: -6.134820461273193
    3. 'continue' → logprob: -6.259820461273193
    4. 's' → logprob: -6.634820461273193
    5. 'right' → logprob: -6.634820461273193
    6. '#' → logprob: -7.009820461273193
    7. 'combine' → logprob: -8.009819984436035
    8. 'vais' → logprob: -8.509819984436035
    9. '_left' → logprob: -8.634819984436035
    10. 'veux' → logprob: -8.759819984436035

Token 78: ' que' (ID: 661)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9084177613258362
    2. 'right' → logprob: -1.6584177017211914
    3. '<|end|>' → logprob: -2.0334177017211914
    4. 'sorted' → logprob: -2.7834177017211914
    5. ' left' → logprob: -3.1584177017211914
    6. ',' → logprob: -3.4084177017211914
    7. '```' → logprob: -3.4084177017211914
    8. '#' → logprob: -3.6584177017211914
    9. ' right' → logprob: -4.533417701721191
    10. '.sort' → logprob: -4.783417701721191

Token 79: ' c' (ID: 274)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2070208340883255
    2. ' left' → logprob: -1.957020878791809
    3. 'right' → logprob: -3.8320207595825195
    4. ' right' → logprob: -4.4570207595825195
    5. ' on' → logprob: -6.0820207595825195
    6. 'le' → logprob: -6.7070207595825195
    7. 'on' → logprob: -6.9570207595825195
    8. ' la' → logprob: -7.0820207595825195
    9. ' je' → logprob: -7.2070207595825195
    10. ' c' → logprob: -7.4570207595825195

Token 80: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.0095518827438354
    2. 'est' → logprob: -1.3845518827438354
    3. 'e' → logprob: -1.6345518827438354
    4. ''' → logprob: -2.634552001953125
    5. 'a' → logprob: -3.009552001953125
    6. ''s' → logprob: -3.509552001953125
    7. ''ai' → logprob: -4.509552001953125
    8. ''#' → logprob: -4.884552001953125
    9. ' '' → logprob: -6.134552001953125
    10. ''a' → logprob: -6.259552001953125

Token 81: ' mieux' (ID: 26345)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.0888258218765259
    2. 'sorted' → logprob: -1.2138258218765259
    3. 'tout' → logprob: -2.5888257026672363
    4. ' mieux' → logprob: -2.9638257026672363
    5. ' tout' → logprob: -3.5888257026672363
    6. ' correct' → logprob: -3.5888257026672363
    7. 'possible' → logprob: -4.088825702667236
    8. ' possible' → logprob: -4.213825702667236
    9. ' time' → logprob: -4.213825702667236
    10. ' bon' → logprob: -4.713825702667236

Token 82: ' invers' (ID: 38721)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4828335642814636
    2. 'de' → logprob: -1.8578336238861084
    3. 'd' → logprob: -1.9828336238861084
    4. 'right' → logprob: -2.6078336238861084
    5. 'if' → logprob: -4.357833385467529
    6. 'for' → logprob: -7.357833385467529
    7. 'sorted' → logprob: -7.607833385467529
    8. 'to' → logprob: -8.107833862304688
    9. '[left' → logprob: -8.482833862304688
    10. 'of' → logprob: -8.482833862304688

Token 83: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4279327392578125
    2. 'er' → logprob: -1.1779327392578125
    3. 'se' → logprob: -4.4279327392578125
    4. 'é' → logprob: -4.4279327392578125
    5. 'ed' → logprob: -4.6779327392578125
    6. 'ser' → logprob: -5.5529327392578125
    7. 'es' → logprob: -6.8029327392578125
    8. 's' → logprob: -7.6779327392578125
    9. 'sort' → logprob: -7.6779327392578125
    10. 'eser' → logprob: -8.552932739257812

Token 84: ' pour' (ID: 1930)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0033559435978531837
    2. 'right' → logprob: -6.128355979919434
    3. ' left' → logprob: -7.753355979919434
    4. 'if' → logprob: -7.878355979919434
    5. ')' → logprob: -8.378355979919434
    6. 'for' → logprob: -11.003355979919434
    7. '[left' → logprob: -11.003355979919434
    8. ',' → logprob: -11.378355979919434
    9. ' ' → logprob: -11.628355979919434
    10. '```' → logprob: -11.753355979919434

Token 85: ' les' (ID: 1341)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.014356588944792747
    2. ' left' → logprob: -4.76435661315918
    3. 'tr' → logprob: -5.88935661315918
    4. 'right' → logprob: -7.13935661315918
    5. 'la' → logprob: -7.76435661315918
    6. 'g' → logprob: -7.76435661315918
    7. 'les' → logprob: -8.51435661315918
    8. 'sort' → logprob: -8.88935661315918
    9. 'trait' → logprob: -9.01435661315918
    10. 'for' → logprob: -9.38935661315918

Token 86: ' nég' (ID: 55805)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.017564449459314346
    2. ' left' → logprob: -4.392564296722412
    3. 'g' → logprob: -6.517564296722412
    4. 'tr' → logprob: -6.642564296722412
    5. 'tri' → logprob: -8.14256477355957
    6. 'right' → logprob: -8.26756477355957
    7. 'val' → logprob: -8.39256477355957
    8. 'list' → logprob: -8.64256477355957
    9. 'de' → logprob: -8.76756477355957
    10. 'sorted' → logprob: -8.76756477355957

Token 87: 'atifs' (ID: 66205)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.559093713760376
    2. '.sort' → logprob: -1.559093713760376
    3. ')' → logprob: -1.809093713760376
    4. '[left' → logprob: -4.184093475341797
    5. 'sort' → logprob: -4.309093475341797
    6. '.left' → logprob: -5.059093475341797
    7. 'right' → logprob: -5.309093475341797
    8. ')
' → logprob: -5.934093475341797
    9. ' left' → logprob: -6.059093475341797
    10. '.' → logprob: -6.434093475341797

Token 88: '?
' (ID: 3901)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002445317804813385
    2. ')' → logprob: -9.375244140625
    3. '[left' → logprob: -9.500244140625
    4. ' left' → logprob: -10.500244140625
    5. 'sort' → logprob: -11.375244140625
    6. '.sort' → logprob: -11.500244140625
    7. '.left' → logprob: -11.750244140625
    8. '_left' → logprob: -12.250244140625
    9. '(left' → logprob: -12.500244140625
    10. '
' → logprob: -12.625244140625

Token 89: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0001681405701674521
    2. ' left' → logprob: -9.625167846679688
    3. '
' → logprob: -10.250167846679688
    4. ')' → logprob: -10.750167846679688
    5. '[left' → logprob: -11.000167846679688
    6. '```' → logprob: -11.875167846679688
    7. 'right' → logprob: -12.000167846679688
    8. '(left' → logprob: -13.000167846679688
    9. '<|end|>' → logprob: -13.125167846679688
    10. ',' → logprob: -13.125167846679688

Token 90: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.2852989733219147
    2. '.' → logprob: -1.6602989435195923
    3. '.reverse' → logprob: -2.910299062728882
    4. '[::-' → logprob: -5.660298824310303
    5. '=' → logprob: -9.410299301147461
    6. ' .' → logprob: -10.660299301147461
    7. ')' → logprob: -10.785299301147461
    8. ').' → logprob: -10.910299301147461
    9. ' =' → logprob: -11.410299301147461
    10. 'sort' → logprob: -11.785299301147461

Token 91: ' left' (ID: 3561)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006182014476507902
    2. ' sorted' → logprob: -5.2561821937561035
    3. 'left' → logprob: -7.0061821937561035
    4. 'list' → logprob: -10.506181716918945
    5. 'sort' → logprob: -11.756181716918945
    6. ' left' → logprob: -12.256181716918945
    7. '   ' → logprob: -14.881181716918945
    8. 's' → logprob: -15.256181716918945
    9. '(sorted' → logprob: -15.381181716918945
    10. ' ' → logprob: -15.631181716918945

Token 92: '[::-' (ID: 159890)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.05681579187512398
    2. '.' → logprob: -3.1818158626556396
    3. '[::-' → logprob: -4.3068156242370605
    4. '.reverse' → logprob: -8.681816101074219
    5. ' .' → logprob: -10.306816101074219
    6. 'sort' → logprob: -10.806816101074219
    7. '.sorted' → logprob: -11.431816101074219
    8. '.s' → logprob: -12.056816101074219
    9. 'sorted' → logprob: -13.431816101074219
    10. ' sort' → logprob: -13.556816101074219

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1297132968902588
    2. 'sort' → logprob: -2.129713296890259
    3. 'sorted' → logprob: -6.00471305847168
    4. 'wise' → logprob: -9.75471305847168
    5. 'verse' → logprob: -9.75471305847168
    6. 'ed' → logprob: -10.62971305847168
    7. 't' → logprob: -10.87971305847168
    8. 's' → logprob: -11.00471305847168
    9. 'er' → logprob: -11.50471305847168
    10. ')' → logprob: -11.50471305847168

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ']' → logprob: -11.250017166137695
    3. '<|end|>' → logprob: -13.375017166137695
    4. ' )' → logprob: -14.125017166137695
    5. ')]' → logprob: -14.625017166137695
    6. ')
' → logprob: -15.125017166137695
    7. '#' → logprob: -15.625017166137695
    8. '])' → logprob: -15.625017166137695
    9. '）' → logprob: -15.875017166137695
    10. '))' → logprob: -16.125017166137695

Token 95: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' classique' (ID: 76895)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9230186939239502
    2. 'left' → logprob: -1.5480186939239502
    3. 'result' → logprob: -2.04801869392395
    4. '#' → logprob: -2.42301869392395
    5. 'distance' → logprob: -3.42301869392395
    6. 'ans' → logprob: -3.79801869392395
    7. 'res' → logprob: -3.79801869392395
    8. 'for' → logprob: -3.79801869392395
    9. 'answer' → logprob: -4.048018455505371
    10. 'import' → logprob: -4.673018455505371

Token 97: ':' (ID: 25)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04466405138373375
    2. 'answer' → logprob: -4.044663906097412
    3. 'ans' → logprob: -4.669663906097412
    4. 'res' → logprob: -5.169663906097412
    5. 'result' → logprob: -5.544663906097412
    6. 'distance' → logprob: -6.544663906097412
    7. 'sorted' → logprob: -6.794663906097412
    8. 'right' → logprob: -7.044663906097412
    9. 'dp' → logprob: -7.169663906097412
    10. 'dist' → logprob: -7.669663906097412

Token 98: ' valeur' (ID: 41664)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06156715378165245
    2. 'ans' → logprob: -3.6865670680999756
    3. 'answer' → logprob: -4.436567306518555
    4. 'res' → logprob: -4.436567306518555
    5. 'result' → logprob: -5.561567306518555
    6. 'total' → logprob: -6.686567306518555
    7. 'distance' → logprob: -7.061567306518555
    8. 'best' → logprob: -7.186567306518555
    9. 'dist' → logprob: -7.311567306518555
    10. 'right' → logprob: -7.436567306518555

Token 99: ' initial' (ID: 4871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01978997327387333
    2. '_min' → logprob: -4.644790172576904
    3. ' =' → logprob: -5.769790172576904
    4. 'min' → logprob: -5.894790172576904
    5. '_max' → logprob: -7.144790172576904
    6. 'max' → logprob: -7.144790172576904
    7. '_s' → logprob: -7.644790172576904
    8. '_' → logprob: -8.144789695739746
    9. ' s' → logprob: -8.644789695739746
    10. '=' → logprob: -8.644789695739746

Token 100: 'e' (ID: 68)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028661610558629036
    2. ' =' → logprob: -4.653661727905273
    3. '=' → logprob: -4.778661727905273
    4. 'max' → logprob: -5.528661727905273
    5. 'min' → logprob: -6.028661727905273
    6. 'e' → logprob: -7.028661727905273
    7. 'inf' → logprob: -7.653661727905273
    8. 'ans' → logprob: -7.903661727905273
    9. 'res' → logprob: -8.278661727905273
    10. 't' → logprob: -8.528661727905273

Token 101: ' immense' (ID: 54632)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25372233986854553
    2. 'res' → logprob: -2.5037224292755127
    3. 'answer' → logprob: -3.3787224292755127
    4. 'best' → logprob: -3.5037224292755127
    5. 'min' → logprob: -3.7537224292755127
    6. ' ans' → logprob: -4.003722190856934
    7. 'dp' → logprob: -4.378722190856934
    8. 'result' → logprob: -4.753722190856934
    9. 'inf' → logprob: -5.253722190856934
    10. ' =' → logprob: -5.753722190856934

Token 102: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4975430965423584
    2. 'res' → logprob: -1.7475430965423584
    3. 'min' → logprob: -2.7475430965423584
    4. 'dp' → logprob: -2.7475430965423584
    5. 'INF' → logprob: -3.3725430965423584
    6. 'inf' → logprob: -3.9975430965423584
    7. 'best' → logprob: -4.2475433349609375
    8. 'answer' → logprob: -4.2475433349609375
    9. 'dist' → logprob: -5.4975433349609375
    10. 'result' → logprob: -6.2475433349609375

Token 103: 'res' (ID: 430)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3203091621398926
    2. 'res' → logprob: -1.4453091621398926
    3. 'best' → logprob: -4.070309162139893
    4. 'answer' → logprob: -4.695309162139893
    5. 'result' → logprob: -5.195309162139893
    6. 'min' → logprob: -5.320309162139893
    7. 'INF' → logprob: -7.445309162139893
    8. 'inf' → logprob: -8.195308685302734
    9. 'dp' → logprob: -8.695308685302734
    10. 'dist' → logprob: -8.820308685302734

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004121142439544201
    2. '=' → logprob: -5.50412130355835
    3. 'ult' → logprob: -10.379120826721191
    4. 'u' → logprob: -13.129120826721191
    5. ',' → logprob: -13.254120826721191
    6. ' ' → logprob: -13.379120826721191
    7. 'ultat' → logprob: -13.754120826721191
    8. 'ault' → logprob: -13.879120826721191
    9. '  ' → logprob: -14.504120826721191
    10. 'ul' → logprob: -14.504120826721191

Token 105: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16045372188091278
    2. 'float' → logprob: -1.9104536771774292
    3. 'int' → logprob: -8.785453796386719
    4. ' float' → logprob: -10.035453796386719
    5. ' ' → logprob: -11.410453796386719
    6. '1' → logprob: -11.535453796386719
    7. '100' → logprob: -11.660453796386719
    8. 'max' → logprob: -13.535453796386719
    9. '2' → logprob: -13.910453796386719
    10. 'pow' → logprob: -15.035453796386719

Token 106: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20178499817848206
    2. 'float' → logprob: -1.7017849683761597
    3. 'int' → logprob: -7.951785087585449
    4. '100' → logprob: -11.95178508758545
    5. '1' → logprob: -12.20178508758545
    6. 'max' → logprob: -12.57678508758545
    7. ' float' → logprob: -12.82678508758545
    8. '2' → logprob: -14.45178508758545
    9. 'pow' → logprob: -14.95178508758545
    10. '999' → logprob: -15.07678508758545

Token 107: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12704035639762878
    2. '15' → logprob: -2.627040386199951
    3. '10' → logprob: -3.127040386199951
    4. '18' → logprob: -6.252040386199951
    5. '12' → logprob: -6.877040386199951
    6. '16' → logprob: -9.252039909362793
    7. '14' → logprob: -9.877039909362793
    8. '11' → logprob: -10.877039909362793
    9. '13' → logprob: -10.877039909362793
    10. '7' → logprob: -12.252039909362793

Token 108: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.012661506421864033
    2. '18' → logprob: -5.262661457061768
    3. '9' → logprob: -5.637661457061768
    4. '10' → logprob: -5.762661457061768
    5. '12' → logprob: -7.762661457061768
    6. '16' → logprob: -9.137661933898926
    7. '11' → logprob: -9.387661933898926
    8. '20' → logprob: -10.012661933898926
    9. '14' → logprob: -10.887661933898926
    10. '13' → logprob: -11.512661933898926

Token 109: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01579444296658039
    2. '
' → logprob: -4.515794277191162
    3. ' for' → logprob: -5.390794277191162
    4. 'left' → logprob: -10.26579475402832
    5. ' 
' → logprob: -10.26579475402832
    6. '\n' → logprob: -10.76579475402832
    7. '+' → logprob: -11.01579475402832
    8. '<|end|>' → logprob: -11.01579475402832
    9. '  
' → logprob: -11.89079475402832
    10. 'right' → logprob: -12.14079475402832

Token 110: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02165740169584751
    2. 'left' → logprob: -3.8966574668884277
    3. 'if' → logprob: -8.14665699005127
    4. '#' → logprob: -8.27165699005127
    5. 'i' → logprob: -9.02165699005127
    6. 'all' → logprob: -9.02165699005127
    7. 'distance' → logprob: -9.77165699005127
    8. 'l' → logprob: -10.27165699005127
    9. 'from' → logprob: -10.52165699005127
    10. 'total' → logprob: -10.77165699005127

Token 111: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16096755862236023
    2. ' i' → logprob: -1.9109675884246826
    3. 'idx' → logprob: -9.410967826843262
    4. 'l' → logprob: -9.535967826843262
    5. 'length' → logprob: -9.785967826843262
    6. 'start' → logprob: -9.910967826843262
    7. 'k' → logprob: -10.035967826843262
    8. 'left' → logprob: -10.160967826843262
    9. '_i' → logprob: -10.285967826843262
    10. ' length' → logprob: -10.410967826843262

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025763817131519318
    2. 'in' → logprob: -4.400763988494873
    3. 'en' → logprob: -4.400763988494873
    4. 'i' → logprob: -8.525763511657715
    5. '_' → logprob: -9.025763511657715
    6. ' i' → logprob: -9.150763511657715
    7. ' ' → logprob: -9.275763511657715
    8. 'eft' → logprob: -9.525763511657715
    9. 'ef' → logprob: -9.650763511657715
    10. 'ength' → logprob: -9.775763511657715

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132721483707428
    2. ' range' → logprob: -1.3132721185684204
    3. '(range' → logprob: -12.063272476196289
    4. ' ' → logprob: -12.813272476196289
    5. ' xrange' → logprob: -13.938272476196289
    6. '	range' → logprob: -15.188272476196289
    7. 'rang' → logprob: -15.688272476196289
    8. 'r' → logprob: -15.938272476196289
    9. '   ' → logprob: -16.31327247619629
    10. '  ' → logprob: -16.31327247619629

Token 114: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.000915039679966867
    2. '(' → logprob: -7.125915050506592
    3. 'k' → logprob: -9.750914573669434
    4. '(n' → logprob: -10.000914573669434
    5. ' (' → logprob: -12.875914573669434
    6. '(len' → logprob: -13.500914573669434
    7. '(l' → logprob: -13.750914573669434
    8. '((' → logprob: -14.000914573669434
    9. '0' → logprob: -14.375914573669434
    10. '(
' → logprob: -15.500914573669434

Token 115: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001564257894642651
    2. 'len' → logprob: -6.751564025878906
    3. '0' → logprob: -8.251564025878906
    4. 'min' → logprob: -9.126564025878906
    5. '(k' → logprob: -11.126564025878906
    6. ' k' → logprob: -12.001564025878906
    7. '{k' → logprob: -13.751564025878906
    8. '(len' → logprob: -14.126564025878906
    9. 'l' → logprob: -14.501564025878906
    10. '(' → logprob: -15.251564025878906

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2894601821899414
    2. '(k' → logprob: -2.1644601821899414
    3. 'k' → logprob: -2.2894601821899414
    4. ' k' → logprob: -4.164460182189941
    5. ',k' → logprob: -4.289460182189941
    6. ' ,' → logprob: -5.289460182189941
    7. '+' → logprob: -8.039460182189941
    8. '(' → logprob: -8.914460182189941
    9. ' +' → logprob: -9.039460182189941
    10. ' ' → logprob: -9.164460182189941

Token 117: ' min' (ID: 1349)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03815842047333717
    2. 'min' → logprob: -3.413158416748047
    3. 'len' → logprob: -5.913158416748047
    4. ' min' → logprob: -6.913158416748047
    5. ' k' → logprob: -7.163158416748047
    6. ' len' → logprob: -11.413158416748047
    7. 'n' → logprob: -12.038158416748047
    8. '(min' → logprob: -12.288158416748047
    9. ' ' → logprob: -12.913158416748047
    10. '(k' → logprob: -13.038158416748047

Token 118: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00047475993051193655
    2. '(len' → logprob: -7.75047492980957
    3. '(n' → logprob: -10.25047492980957
    4. '(' → logprob: -11.87547492980957
    5. '(l' → logprob: -13.62547492980957
    6. ' (' → logprob: -15.25047492980957
    7. 'k' → logprob: -16.50047492980957
    8. '(left' → logprob: -16.50047492980957
    9. '((' → logprob: -17.00047492980957
    10. ' k' → logprob: -18.00047492980957

Token 119: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13202570378780365
    2. '+' → logprob: -2.382025718688965
    3. ' +' → logprob: -3.632025718688965
    4. ' ,' → logprob: -6.382025718688965
    5. ',n' → logprob: -6.507025718688965
    6. ',len' → logprob: -6.632025718688965
    7. '(n' → logprob: -8.757025718688965
    8. '(len' → logprob: -9.132025718688965
    9. '(' → logprob: -11.132025718688965
    10. ',left' → logprob: -11.257025718688965

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007934631779789925
    2. ' ' → logprob: -5.0079345703125
    3. ',' → logprob: -7.0079345703125
    4. 'len' → logprob: -8.6329345703125
    5. ' len' → logprob: -9.7579345703125
    6. 'n' → logprob: -10.2579345703125
    7. ' n' → logprob: -11.3829345703125
    8. 'l' → logprob: -12.2579345703125
    9. ' ,' → logprob: -12.2579345703125
    10. '   ' → logprob: -12.8829345703125

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02598755434155464
    2. ' ,' → logprob: -4.15098762512207
    3. ')' → logprob: -5.65098762512207
    4. '):' → logprob: -5.77598762512207
    5. ')):' → logprob: -6.27598762512207
    6. ',n' → logprob: -7.52598762512207
    7. ',left' → logprob: -8.15098762512207
    8. '))' → logprob: -8.90098762512207
    9. '),' → logprob: -9.02598762512207
    10. ',len' → logprob: -9.40098762512207

Token 122: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02983078546822071
    2. ' len' → logprob: -3.5298306941986084
    3. '(len' → logprob: -9.904830932617188
    4. ' ' → logprob: -11.029830932617188
    5. '   ' → logprob: -11.779830932617188
    6. 'n' → logprob: -13.404830932617188
    7. '	len' → logprob: -13.779830932617188
    8. 'min' → logprob: -14.029830932617188
    9. '[len' → logprob: -14.154830932617188
    10. ',len' → logprob: -14.529830932617188

Token 123: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00017123986617662013
    2. '(right' → logprob: -9.000171661376953
    3. '(' → logprob: -10.500171661376953
    4. 'left' → logprob: -11.000171661376953
    5. ' left' → logprob: -13.375171661376953
    6. ' (' → logprob: -14.250171661376953
    7. '(
' → logprob: -14.750171661376953
    8. '(x' → logprob: -15.250171661376953
    9. '[left' → logprob: -15.250171661376953
    10. ',left' → logprob: -15.875171661376953

Token 124: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576381504535675
    2. ')+' → logprob: -0.826381504535675
    3. '))' → logprob: -8.82638168334961
    4. ' )' → logprob: -8.95138168334961
    5. ')):' → logprob: -9.82638168334961
    6. '+' → logprob: -10.45138168334961
    7. '())' → logprob: -10.57638168334961
    8. '))+' → logprob: -10.57638168334961
    9. '()' → logprob: -11.32638168334961
    10. ' ' → logprob: -12.20138168334961

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.06328284740448
    2. '()+' → logprob: -1.56328284740448
    3. '()' → logprob: -1.81328284740448
    4. '()))' → logprob: -2.3132829666137695
    5. ')):' → logprob: -2.4382829666137695
    6. ')' → logprob: -3.5632829666137695
    7. '+' → logprob: -4.0632829666137695
    8. ')):
' → logprob: -4.5632829666137695
    9. '))' → logprob: -4.6882829666137695
    10. ' +' → logprob: -4.8132829666137695

Token 126: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.06818883866071701
    2. '):' → logprob: -2.9431889057159424
    3. ')' → logprob: -4.568188667297363
    4. '))' → logprob: -6.068188667297363
    5. ')):
' → logprob: -7.693188667297363
    6. ' ):' → logprob: -10.818188667297363
    7. ' ))' → logprob: -11.443188667297363
    8. '+' → logprob: -11.693188667297363
    9. ' ' → logprob: -11.818188667297363
    10. ')):
' → logprob: -12.068188667297363

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03862017020583153
    2. ' ' → logprob: -4.0386199951171875
    3. ':' → logprob: -4.1636199951171875
    4. ' :' → logprob: -6.7886199951171875
    5. '  ' → logprob: -7.5386199951171875
    6. ')' → logprob: -7.6636199951171875
    7. '    ' → logprob: -8.038619995117188
    8. '
' → logprob: -8.038619995117188
    9. ' if' → logprob: -8.038619995117188
    10. '    
' → logprob: -8.038619995117188

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.3467327654361725
    2. ' r' → logprob: -2.0967328548431396
    3. 'for' → logprob: -2.4717328548431396
    4. ' for' → logprob: -2.8467328548431396
    5. '   ' → logprob: -3.5967328548431396
    6. ' ' → logprob: -9.346733093261719
    7. 'if' → logprob: -9.596733093261719
    8. ' if' → logprob: -9.596733093261719
    9. '  ' → logprob: -10.971733093261719
    10. '0' → logprob: -12.596733093261719

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133307099342346
    2. '=' → logprob: -1.3133306503295898
    3. ' ' → logprob: -9.81333065032959
    4. ')' → logprob: -12.43833065032959
    5. 's' → logprob: -13.43833065032959
    6. 'space' → logprob: -13.56333065032959
    7. ' =
' → logprob: -13.56333065032959
    8. '  ' → logprob: -13.81333065032959
    9. ' in' → logprob: -14.18833065032959
    10. '   ' → logprob: -14.31333065032959

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011055603623390198
    2. ' k' → logprob: -4.5110554695129395
    3. '   ' → logprob: -11.886055946350098
    4. '	k' → logprob: -15.011055946350098
    5. ' ' → logprob: -15.386055946350098
    6. '    ' → logprob: -15.886055946350098
    7. 'min' → logprob: -16.38605499267578
    8. 'max' → logprob: -16.63605499267578
    9. '  ' → logprob: -16.63605499267578
    10. '(k' → logprob: -17.76105499267578

Token 131: '-l' (ID: 2887)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932271718978882
    2. ' -' → logprob: -0.6932271718978882
    3. '-l' → logprob: -9.69322681427002
    4. '-k' → logprob: -11.06822681427002
    5. '-r' → logprob: -13.19322681427002
    6. '-t' → logprob: -15.94322681427002
    7. ' ' → logprob: -16.068227767944336
    8. '-n' → logprob: -16.318227767944336
    9. '-g' → logprob: -17.318227767944336
    10. '-val' → logprob: -17.568227767944336

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006172178778797388
    2. '<|end|>' → logprob: -5.506172180175781
    3. ' ' → logprob: -7.256172180175781
    4. '  ' → logprob: -7.881172180175781
    5. ' if' → logprob: -8.006172180175781
    6. '<|end|>' → logprob: -8.881172180175781
    7. '
' → logprob: -9.006172180175781
    8. '  
' → logprob: -9.131172180175781
    9. '    
' → logprob: -9.256172180175781
    10. ')' → logprob: -9.631172180175781

Token 134: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7049174308776855
    2. 'if' → logprob: -1.2049174308776855
    3. '   ' → logprob: -1.5799174308776855
    4. '
' → logprob: -9.704917907714844
    5. ' ' → logprob: -10.329917907714844
    6. 'for' → logprob: -10.829917907714844
    7. '  ' → logprob: -11.454917907714844
    8. ' for' → logprob: -11.579917907714844
    9. '    
' → logprob: -12.704917907714844
    10. '    ' → logprob: -13.204917907714844

Token 135: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.314098596572876
    2. ' if' → logprob: -1.314098596572876
    3. 'for' → logprob: -7.689098358154297
    4. '   ' → logprob: -8.564098358154297
    5. ' for' → logprob: -9.564098358154297
    6. 'res' → logprob: -10.314098358154297
    7. '#' → logprob: -10.314098358154297
    8. '
' → logprob: -11.814098358154297
    9. ' res' → logprob: -11.939098358154297
    10. 'r' → logprob: -12.189098358154297

Token 136: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46683672070503235
    2. ' if' → logprob: -1.09183669090271
    3. 'if' → logprob: -3.34183669090271
    4. '
' → logprob: -6.966836929321289
    5. '    
' → logprob: -7.966836929321289
    6. ' for' → logprob: -7.966836929321289
    7. 'for' → logprob: -8.591836929321289
    8. ' ' → logprob: -10.341836929321289
    9. '  ' → logprob: -10.591836929321289
    10. '    ' → logprob: -10.591836929321289

Token 137: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.055478937923908234
    2. 'if' → logprob: -2.930479049682617
    3. ' res' → logprob: -8.680479049682617
    4. ' for' → logprob: -8.680479049682617
    5. '   ' → logprob: -9.055479049682617
    6. 'for' → logprob: -9.555479049682617
    7. 'res' → logprob: -9.930479049682617
    8. ' ' → logprob: -11.805479049682617
    9. '    ' → logprob: -12.805479049682617
    10. ' while' → logprob: -13.305479049682617

Token 138: ' on' (ID: 402)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3459329903125763
    2. 'r' → logprob: -1.345932960510254
    3. ' l' → logprob: -3.720932960510254
    4. 'l' → logprob: -4.845932960510254
    5. '   ' → logprob: -10.970932960510254
    6. ' ' → logprob: -10.970932960510254
    7. ' len' → logprob: -11.845932960510254
    8. '(r' → logprob: -11.970932960510254
    9. ' ' → logprob: -12.408432960510254
    10. ' not' → logprob: -12.783432960510254

Token 139: ' part' (ID: 997)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.49127382040023804
    2. ' r' → logprob: -0.991273820400238
    3. ' continue' → logprob: -5.366273880004883
    4. '<' → logprob: -5.491273880004883
    5. 'l' → logprob: -6.241273880004883
    6. 'continue' → logprob: -6.616273880004883
    7. '<len' → logprob: -6.866273880004883
    8. 'len' → logprob: -6.866273880004883
    9. 'n' → logprob: -6.991273880004883
    10. ' <' → logprob: -7.491273880004883

Token 140: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6430107355117798
    2. 'de' → logprob: -2.0180106163024902
    3. ' du' → logprob: -2.7680106163024902
    4. ' à' → logprob: -2.7680106163024902
    5. '   ' → logprob: -2.8930106163024902
    6. ' sur' → logprob: -3.1430106163024902
    7. 'from' → logprob: -3.3930106163024902
    8. ' dans' → logprob: -3.7680106163024902
    9. 'dans' → logprob: -4.01801061630249
    10. ' des' → logprob: -4.76801061630249

Token 141: ' droite' (ID: 61428)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6858797669410706
    2. ' gauche' → logprob: -0.9358797669410706
    3. 'left' → logprob: -2.685879707336426
    4. '0' → logprob: -4.310879707336426
    5. 'l' → logprob: -4.810879707336426
    6. 'len' → logprob: -5.060879707336426
    7. 'dro' → logprob: -5.685879707336426
    8. ' droite' → logprob: -5.935879707336426
    9. 'gau' → logprob: -8.060879707336426
    10. ' left' → logprob: -8.435879707336426

Token 142: ' seulement' (ID: 32072)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6395898461341858
    2. '   ' → logprob: -1.014589786529541
    3. ' <=' → logprob: -2.639589786529541
    4. ' <' → logprob: -4.639589786529541
    5. 'if' → logprob: -4.889589786529541
    6. ' >=' → logprob: -5.014589786529541
    7. ' >' → logprob: -5.264589786529541
    8. ' ' → logprob: -5.639589786529541
    9. ',' → logprob: -6.514589786529541
    10. '<=' → logprob: -7.014589786529541

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32502031326293945
    2. ':' → logprob: -1.5750203132629395
    3. ',' → logprob: -2.8250203132629395
    4. ' if' → logprob: -4.7000203132629395
    5. 'if' → logprob: -7.7000203132629395
    6. ' ' → logprob: -7.8250203132629395
    7. '  ' → logprob: -8.450019836425781
    8. '       ' → logprob: -8.825019836425781
    9. '<|end|>' → logprob: -8.825019836425781
    10. ' :' → logprob: -8.950019836425781

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02677324414253235
    2. ':' → logprob: -4.401773452758789
    3. ' if' → logprob: -5.151773452758789
    4. ',' → logprob: -5.151773452758789
    5. ' ' → logprob: -6.901773452758789
    6. 'if' → logprob: -8.151773452758789
    7. '  ' → logprob: -8.276773452758789
    8. ')' → logprob: -8.401773452758789
    9. '       ' → logprob: -8.401773452758789
    10. '<|end|>' → logprob: -8.776773452758789

Token 145: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6204511523246765
    2. 'if' (adapté à ' if') → logprob: -1.1204512119293213
    3. ' if' → logprob: -1.9954512119293213
    4. ' ' → logprob: -10.245450973510742
    5. 'res' → logprob: -10.370450973510742
    6. '  ' → logprob: -10.370450973510742
    7. ',' → logprob: -10.620450973510742
    8. ')' → logprob: -10.995450973510742
    9. ' res' → logprob: -11.245450973510742
    10. 'for' → logprob: -11.245450973510742

Token 146: ' l' (ID: 305)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6477553844451904
    2. ' l' → logprob: -0.7727553844451904
    3. 'r' → logprob: -4.6477556228637695
    4. 'l' → logprob: -5.5227556228637695
    5. ' len' → logprob: -6.6477556228637695
    6. ' left' → logprob: -9.39775562286377
    7. ' not' → logprob: -10.27275562286377
    8. 'len' → logprob: -10.64775562286377
    9. 'left' → logprob: -11.64775562286377
    10. ' ' → logprob: -12.14775562286377

Token 147: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2261912077665329
    2. '==' → logprob: -1.6011911630630493
    3. ' >' → logprob: -8.226191520690918
    4. '>' → logprob: -8.726191520690918
    5. ')' → logprob: -8.851191520690918
    6. ' <=' → logprob: -9.851191520690918
    7. '0' → logprob: -10.101191520690918
    8. '=' → logprob: -10.351191520690918
    9. ' ' → logprob: -10.976191520690918
    10. ' >=' → logprob: -11.101191520690918

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09941791743040085
    2. 'k' → logprob: -2.4744179248809814
    3. ' ' → logprob: -4.724417686462402
    4. ' k' → logprob: -6.474417686462402
    5. '   ' → logprob: -13.224417686462402
    6. '  ' → logprob: -13.474417686462402
    7. '    ' → logprob: -14.474417686462402
    8. 'r' → logprob: -15.099417686462402
    9. '1' → logprob: -15.474417686462402
    10. 'len' → logprob: -15.599417686462402

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026381993666291237
    2. 'k' → logprob: -6.002638339996338
    3. ' ' → logprob: -8.75263786315918
    4. ' k' → logprob: -12.37763786315918
    5. 'r' → logprob: -15.87763786315918
    6. '   ' → logprob: -16.75263786315918
    7. '  ' → logprob: -17.50263786315918
    8. 'len' → logprob: -17.75263786315918
    9. '1' → logprob: -17.87763786315918
    10. '```' → logprob: -17.87763786315918

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001302374730585143
    2. ':
' → logprob: -9.250130653381348
    3. ' or' → logprob: -10.500130653381348
    4. ' :' → logprob: -12.625130653381348
    5. ' and' → logprob: -13.750130653381348
    6. '   ' → logprob: -14.125130653381348
    7. '):' → logprob: -14.125130653381348
    8. 'or' → logprob: -15.000130653381348
    9. ',' → logprob: -15.625130653381348
    10. ':return' → logprob: -16.00012969970703

Token 151: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7936826944351196
    2. '       ' → logprob: -1.1686826944351196
    3. '   ' → logprob: -1.5436826944351196
    4. '
' → logprob: -4.04368257522583
    5. ' res' → logprob: -5.41868257522583
    6. '    
' → logprob: -7.29368257522583
    7. '        
' → logprob: -8.668683052062988
    8. ':
' → logprob: -8.668683052062988
    9. ':' → logprob: -8.793683052062988
    10. '           ' → logprob: -9.793683052062988

Token 152: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22603784501552582
    2. '
' → logprob: -1.601037859916687
    3. ' res' → logprob: -8.351037979125977
    4. 'if' (adapté à ' if') → logprob: -8.976037979125977
    5. '   ' → logprob: -9.101037979125977
    6. '       ' → logprob: -9.851037979125977
    7. '           ' → logprob: -10.851037979125977
    8. '    
' → logprob: -10.976037979125977
    9. '
' → logprob: -11.226037979125977
    10. '        
' → logprob: -11.351037979125977

Token 153: ' len' (ID: 4631)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.885063886642456
    2. ' r' → logprob: -1.385063886642456
    3. 'len' → logprob: -2.385063886642456
    4. 'right' → logprob: -2.510063886642456
    5. ' len' → logprob: -2.510063886642456
    6. ' right' → logprob: -2.510063886642456
    7. '   ' → logprob: -7.885064125061035
    8. 'res' → logprob: -8.260064125061035
    9. ' res' → logprob: -8.760064125061035
    10. 'k' → logprob: -8.885064125061035

Token 154: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.00024156268045771867
    2. 'right' → logprob: -8.37524127960205
    3. '(' → logprob: -12.62524127960205
    4. ' right' → logprob: -12.75024127960205
    5. '(left' → logprob: -12.75024127960205
    6. '[right' → logprob: -13.87524127960205
    7. '	right' → logprob: -15.00024127960205
    8. ',right' → logprob: -15.75024127960205
    9. ':right' → logprob: -16.500242233276367
    10. ')' → logprob: -16.625242233276367

Token 155: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.21897003054618835
    2. '>' → logprob: -2.3439700603485107
    3. ')' → logprob: -2.5939700603485107
    4. ' >=' → logprob: -3.8439700603485107
    5. ')>=' → logprob: -5.718969821929932
    6. ' >' → logprob: -7.093969821929932
    7. ')>' → logprob: -7.968969821929932
    8. '<' → logprob: -10.34397029876709
    9. ' )' → logprob: -10.96897029876709
    10. ']>=' → logprob: -11.09397029876709

Token 156: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02015104331076145
    2. ' >=' → logprob: -4.270151138305664
    3. '>' → logprob: -5.145151138305664
    4. '<' → logprob: -9.270151138305664
    5. ' >' → logprob: -10.520151138305664
    6. ')>=' → logprob: -11.770151138305664
    7. '<=' → logprob: -12.895151138305664
    8. '==' → logprob: -13.270151138305664
    9. '≥' → logprob: -13.395151138305664
    10. ' <' → logprob: -13.395151138305664

Token 157: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.943783253314905e-05
    2. 'k' → logprob: -10.125059127807617
    3. ' r' → logprob: -10.875059127807617
    4. '1' → logprob: -15.500059127807617
    5. '   ' → logprob: -16.125059127807617
    6. ' ' → logprob: -18.125059127807617
    7. '	r' → logprob: -18.375059127807617
    8. 'rk' → logprob: -18.750059127807617
    9. ' k' → logprob: -19.250059127807617
    10. '0' → logprob: -19.375059127807617

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22071516513824463
    2. ' and' → logprob: -1.7207151651382446
    3. ':
' → logprob: -4.220715045928955
    4. 'and' → logprob: -5.470715045928955
    5. ' :' → logprob: -9.345715522766113
    6. '           ' → logprob: -10.095715522766113
    7. '       ' → logprob: -10.345715522766113
    8. '   ' → logprob: -11.220715522766113
    9. '):' → logprob: -11.345715522766113
    10. ':return' → logprob: -11.845715522766113

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2457946240901947
    2. ':
' → logprob: -2.2457945346832275
    3. '
' → logprob: -2.9957945346832275
    4. '       ' → logprob: -3.2457945346832275
    5. 'res' → logprob: -3.9957945346832275
    6. ':' → logprob: -5.620794773101807
    7. ' res' → logprob: -7.370794773101807
    8. '   ' → logprob: -8.995794296264648
    9. '            
' → logprob: -9.245794296264648
    10. '):
' → logprob: -9.745794296264648

Token 160: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3559129536151886
    2. '
' → logprob: -1.2309129238128662
    3. ' res' → logprob: -5.105913162231445
    4. '           ' → logprob: -6.855913162231445
    5. '
' → logprob: -9.480913162231445
    6. '   ' → logprob: -9.855913162231445
    7. '       ' → logprob: -9.980913162231445
    8. '            
' → logprob: -10.230913162231445
    9. '               ' → logprob: -10.355913162231445
    10. '    
' → logprob: -10.730913162231445

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869113624095917
    2. ' =' → logprob: -1.136911392211914
    3. '=min' → logprob: -10.136911392211914
    4. '=max' → logprob: -15.136911392211914
    5. '>' → logprob: -16.011911392211914
    6. '=

' → logprob: -16.261911392211914
    7. 'min' → logprob: -16.386911392211914
    8. '   ' → logprob: -17.011911392211914
    9. '=int' → logprob: -17.136911392211914
    10. ')' → logprob: -17.136911392211914

Token 162: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815205067396164
    2. ' min' → logprob: -4.018152236938477
    3. 'right' → logprob: -13.393152236938477
    4. '	min' → logprob: -16.018152236938477
    5. '(min' → logprob: -16.268152236938477
    6. ' right' → logprob: -16.643152236938477
    7. 'abs' → logprob: -17.018152236938477
    8. '   ' → logprob: -17.143152236938477
    9. 'max' → logprob: -17.143152236938477
    10. '10' → logprob: -17.393152236938477

Token 163: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0009936298010870814
    2. '(' → logprob: -7.000993728637695
    3. '(right' → logprob: -9.625993728637695
    4. '(abs' → logprob: -12.125993728637695
    5. '(
' → logprob: -12.375993728637695
    6. 'res' → logprob: -12.500993728637695
    7. '(x' → logprob: -14.500993728637695
    8. '(r' → logprob: -14.750993728637695
    9. ' (' → logprob: -14.750993728637695
    10. '(left' → logprob: -15.125993728637695

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004933562595397234
    2. ' ,' → logprob: -6.1299333572387695
    3. ',right' → logprob: -6.1299333572387695
    4. 'right' → logprob: -7.5049333572387695
    5. '(right' → logprob: -11.25493335723877
    6. ' right' → logprob: -12.75493335723877
    7. ',res' → logprob: -13.87993335723877
    8. '[right' → logprob: -14.87993335723877
    9. ',left' → logprob: -16.129934310913086
    10. ',min' → logprob: -16.754934310913086

Token 165: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.011148984543979168
    2. ' right' → logprob: -4.511148929595947
    3. 'min' → logprob: -10.011149406433105
    4. 'abs' → logprob: -10.511149406433105
    5. 'max' → logprob: -11.386149406433105
    6. '   ' → logprob: -11.886149406433105
    7. ' min' → logprob: -12.886149406433105
    8. 'left' → logprob: -13.136149406433105
    9. ' ' → logprob: -13.636149406433105
    10. '0' → logprob: -14.386149406433105

Token 166: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'r' → logprob: -16.625
    4. ' [' → logprob: -19.125
    5. '][' → logprob: -19.375
    6. '[m' → logprob: -19.625
    7. '
' → logprob: -19.75
    8. '[i' → logprob: -19.75
    9. '[s' → logprob: -19.75
    10. '[k' → logprob: -20.0

Token 167: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009568398236297071
    2. ' -' → logprob: -7.125957012176514
    3. '[r' → logprob: -9.500956535339355
    4. '[-' → logprob: -9.750956535339355
    5. ']' → logprob: -11.875956535339355
    6. '[' → logprob: -12.125956535339355
    7. ']-' → logprob: -12.625956535339355
    8. 'r' → logprob: -13.625956535339355
    9. '1' → logprob: -14.375956535339355
    10. '−' → logprob: -14.875956535339355

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. ']' → logprob: -13.750020980834961
    4. '])' → logprob: -14.250020980834961
    5. '0' → logprob: -16.75002098083496
    6. '   ' → logprob: -17.37502098083496
    7. ')' → logprob: -17.62502098083496
    8. '```' → logprob: -18.12502098083496
    9. '  ' → logprob: -18.25002098083496
    10. 'r' → logprob: -19.00002098083496

Token 169: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.267586350440979
    2. ')' → logprob: -1.642586350440979
    3. ' ])' → logprob: -3.7675862312316895
    4. ' )' → logprob: -4.3925862312316895
    5. ']' → logprob: -5.3925862312316895
    6. ' ' → logprob: -7.6425862312316895
    7. '*' → logprob: -8.392586708068848
    8. '))' → logprob: -8.767586708068848
    9. ' ]' → logprob: -9.142586708068848
    10. ')]' → logprob: -9.642586708068848

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43073877692222595
    2. '
' → logprob: -2.305738687515259
    3. '\n' → logprob: -2.555738687515259
    4. 'else' → logprob: -2.930738687515259
    5. '    
' → logprob: -3.180738687515259
    6. ')' → logprob: -3.305738687515259
    7. 'elif' → logprob: -3.930738687515259
    8. ' else' → logprob: -4.805738925933838
    9. ' 
' → logprob: -5.555738925933838
    10. '  
' → logprob: -5.805738925933838

Token 171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4618653655052185
    2. 'elif' → logprob: -1.7118654251098633
    3. 'else' → logprob: -1.9618654251098633
    4. ' else' → logprob: -3.3368654251098633
    5. ' elif' → logprob: -4.461865425109863
    6. '  ' → logprob: -7.336865425109863
    7. ')' → logprob: -8.211865425109863
    8. '    
' → logprob: -8.336865425109863
    9. '	elif' → logprob: -8.961865425109863
    10. ' ' → logprob: -9.211865425109863

Token 172: ' gauche' (ID: 58367)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10258591175079346
    2. ' elif' → logprob: -2.727585792541504
    3. 'else' → logprob: -3.602585792541504
    4. ' else' → logprob: -5.352585792541504
    5. '#' → logprob: -10.102585792541504
    6. 'el' → logprob: -10.227585792541504
    7. '   ' → logprob: -11.102585792541504
    8. 'if' → logprob: -11.102585792541504
    9. ' #' → logprob: -11.977585792541504
    10. ' ' → logprob: -12.602585792541504

Token 173: ' seulement' (ID: 32072)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0119166374206543
    2. 'elif' → logprob: -1.0119166374206543
    3. ' else' → logprob: -1.5119166374206543
    4. ' elif' → logprob: -3.1369166374206543
    5. '   ' → logprob: -4.761916637420654
    6. ':' → logprob: -7.886916637420654
    7. '	elif' → logprob: -9.761917114257812
    8. '  ' → logprob: -11.761917114257812
    9. '	else' → logprob: -11.761917114257812
    10. 'elseif' → logprob: -12.011917114257812

Token 174: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3774745762348175
    2. ':' → logprob: -1.3774745464324951
    3. '   ' → logprob: -3.627474546432495
    4. ' elif' → logprob: -3.752474546432495
    5. 'else' → logprob: -4.502474784851074
    6. ' else' → logprob: -7.127474784851074
    7. '	elif' → logprob: -9.252474784851074
    8. ' :' → logprob: -9.627474784851074
    9. 'if' → logprob: -10.627474784851074
    10. '  ' → logprob: -11.252474784851074

Token 175: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.01037178561091423
    2. ' elif' → logprob: -4.885371685028076
    3. 'else' → logprob: -6.135371685028076
    4. '   ' → logprob: -7.885371685028076
    5. ':' → logprob: -9.135372161865234
    6. 'if' → logprob: -9.510372161865234
    7. ' else' → logprob: -10.385372161865234
    8. 'el' → logprob: -12.760372161865234
    9. '	elif' → logprob: -13.010372161865234
    10. ' if' → logprob: -13.760372161865234

Token 176: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.011719152331352234
    2. ' elif' → logprob: -4.511719226837158
    3. '   ' → logprob: -7.386719226837158
    4. 'else' → logprob: -10.13671875
    5. 'el' → logprob: -11.76171875
    6. 'if' → logprob: -13.01171875
    7. ' else' → logprob: -14.01171875
    8. '	elif' → logprob: -14.26171875
    9. 'elseif' → logprob: -15.88671875
    10. ':' → logprob: -16.13671875

Token 177: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06709777563810349
    2. 'l' → logprob: -2.8170976638793945
    3. ' r' → logprob: -5.4420976638793945
    4. 'r' → logprob: -7.1920976638793945
    5. ' k' → logprob: -11.442097663879395
    6. ' len' → logprob: -12.192097663879395
    7. 'k' → logprob: -12.317097663879395
    8. ' ' → logprob: -12.692097663879395
    9. 'elif' → logprob: -13.192097663879395
    10. '(l' → logprob: -13.567097663879395

Token 178: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048642661422491074
    2. '==' → logprob: -3.048642635345459
    3. ' <=' → logprob: -10.298643112182617
    4. ' ' → logprob: -11.798643112182617
    5. '<=' → logprob: -12.548643112182617
    6. ' <' → logprob: -12.548643112182617
    7. '=' → logprob: -13.423643112182617
    8. '<' → logprob: -13.798643112182617
    9. ' ' → logprob: -14.298643112182617
    10. ' =' → logprob: -14.798643112182617

Token 179: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8119471073150635
    2. 'len' → logprob: -0.9369471073150635
    3. '0' → logprob: -2.4369471073150635
    4. ' k' → logprob: -3.6869471073150635
    5. 'r' → logprob: -3.8119471073150635
    6. ' len' → logprob: -3.8119471073150635
    7. ' ' → logprob: -5.311946868896484
    8. 'l' → logprob: -6.561946868896484
    9. ' r' → logprob: -7.186946868896484
    10. '   ' → logprob: -8.436946868896484

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0738162249326706
    2. '==' → logprob: -2.6988162994384766
    3. ' ==' → logprob: -5.698816299438477
    4. '-' → logprob: -8.823816299438477
    5. '   ' → logprob: -9.073816299438477
    6. ':
' → logprob: -9.073816299438477
    7. '=' → logprob: -9.448816299438477
    8. ' and' → logprob: -11.198816299438477
    9. '       ' → logprob: -11.573816299438477
    10. '+' → logprob: -11.573816299438477

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13321535289287567
    2. '       ' → logprob: -2.6332154273986816
    3. 'res' → logprob: -3.0082154273986816
    4. ':' → logprob: -6.258215427398682
    5. ':
' → logprob: -7.258215427398682
    6. ' res' → logprob: -7.633215427398682
    7. 'if' → logprob: -8.508214950561523
    8. 'else' → logprob: -9.258214950561523
    9. '```' → logprob: -10.508214950561523
    10. '           ' → logprob: -11.383214950561523

Token 182: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05655232071876526
    2. 'if' (adapté à ' if') → logprob: -3.0565524101257324
    3. '   ' → logprob: -4.931552410125732
    4. '       ' → logprob: -7.931552410125732
    5. ' res' → logprob: -8.181551933288574
    6. ' if' → logprob: -10.056551933288574
    7. '
' → logprob: -11.181551933288574
    8. '           ' → logprob: -12.056551933288574
    9. '	res' → logprob: -12.556551933288574
    10. '{
' → logprob: -12.681551933288574

Token 183: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0380699522793293
    2. ' len' → logprob: -3.2880699634552
    3. 'left' → logprob: -10.913069725036621
    4. '(len' → logprob: -12.413069725036621
    5. 'l' → logprob: -12.788069725036621
    6. '   ' → logprob: -13.038069725036621
    7. ' left' → logprob: -14.038069725036621
    8. ' l' → logprob: -14.788069725036621
    9. '	len' → logprob: -16.663070678710938
    10. ' ' → logprob: -17.288070678710938

Token 184: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0008454833878204226
    2. 'left' → logprob: -7.375845432281494
    3. '(right' → logprob: -8.500845909118652
    4. '(' → logprob: -11.250845909118652
    5. '[left' → logprob: -13.750845909118652
    6. '(
' → logprob: -14.625845909118652
    7. ' left' → logprob: -14.750845909118652
    8. 'right' → logprob: -15.125845909118652
    9. ',left' → logprob: -16.375844955444336
    10. '	left' → logprob: -16.500844955444336

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8456231951713562
    2. '>=' → logprob: -0.8456231951713562
    3. ')>=' → logprob: -2.095623254776001
    4. ' >=' → logprob: -4.095623016357422
    5. ']>=' → logprob: -6.470623016357422
    6. '()' → logprob: -9.720623016357422
    7. ' )' → logprob: -9.845623016357422
    8. '   ' → logprob: -10.095623016357422
    9. '>' → logprob: -10.720623016357422
    10. ']' → logprob: -10.970623016357422

Token 186: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.007657739333808422
    2. ' >=' → logprob: -4.882657527923584
    3. ')>=' → logprob: -10.132658004760742
    4. ']>=' → logprob: -12.007658004760742
    5. '>' → logprob: -12.632658004760742
    6. '   ' → logprob: -13.632658004760742
    7. ')' → logprob: -14.132658004760742
    8. '≥' → logprob: -15.132658004760742
    9. ' ' → logprob: -16.132658004760742
    10. '[' → logprob: -16.632658004760742

Token 187: ' k' (ID: 372)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02980221062898636
    2. ' l' → logprob: -4.029802322387695
    3. 'r' → logprob: -4.654802322387695
    4. 'k' → logprob: -6.279802322387695
    5. ' r' → logprob: -8.779802322387695
    6. ' k' → logprob: -10.529802322387695
    7. '   ' → logprob: -11.779802322387695
    8. ' ' → logprob: -12.529802322387695
    9. '	l' → logprob: -14.029802322387695
    10. 'res' → logprob: -14.404802322387695

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09136467427015305
    2. ':
' → logprob: -2.466364622116089
    3. '):' → logprob: -6.841364860534668
    4. '):
' → logprob: -8.091364860534668
    5. '       ' → logprob: -8.216364860534668
    6. '           ' → logprob: -8.591364860534668
    7. '   ' → logprob: -8.716364860534668
    8. ' and' → logprob: -8.841364860534668
    9. ')' → logprob: -9.716364860534668
    10. '[' → logprob: -9.841364860534668

Token 189: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18900375068187714
    2. '           ' → logprob: -1.9390037059783936
    3. 'res' → logprob: -3.8140037059783936
    4. '   ' → logprob: -5.314003944396973
    5. ' res' → logprob: -7.064003944396973
    6. ':' → logprob: -7.814003944396973
    7. ':
' → logprob: -10.189003944396973
    8. '               ' → logprob: -10.314003944396973
    9. '	res' → logprob: -11.439003944396973
    10. ',' → logprob: -11.814003944396973

Token 190: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0002615742268972099
    2. '           ' → logprob: -8.875261306762695
    3. ' res' → logprob: -9.125261306762695
    4. '   ' → logprob: -11.500261306762695
    5. '       ' → logprob: -13.625261306762695
    6. '               ' → logprob: -13.875261306762695
    7. '	res' → logprob: -14.875261306762695
    8. ' ' → logprob: -16.875261306762695
    9. '```' → logprob: -17.000261306762695
    10. 'if' → logprob: -17.000261306762695

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004624749533832073
    2. ' =' → logprob: -5.379624843597412
    3. '   ' → logprob: -12.379624366760254
    4. '=min' → logprob: -16.00462532043457
    5. '<=' → logprob: -16.12962532043457
    6. '>=' → logprob: -16.75462532043457
    7. '+=' → logprob: -17.62962532043457
    8. '       ' → logprob: -17.75462532043457
    9. '=res' → logprob: -18.12962532043457
    10. '  ' → logprob: -18.50462532043457

Token 192: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12693189084529877
    2. ' min' → logprob: -2.12693190574646
    3. 'left' → logprob: -12.751932144165039
    4. ' left' → logprob: -14.876932144165039
    5. 'max' → logprob: -15.501932144165039
    6. '(min' → logprob: -16.12693214416504
    7. '10' → logprob: -16.62693214416504
    8. '	min' → logprob: -16.62693214416504
    9. '   ' → logprob: -17.75193214416504
    10. ' ' → logprob: -17.87693214416504

Token 193: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.580929347255733e-05
    2. 'res' → logprob: -11.250016212463379
    3. '(' → logprob: -13.500016212463379
    4. '(left' → logprob: -14.000016212463379
    5. ',res' → logprob: -15.500016212463379
    6. 'left' → logprob: -15.750016212463379
    7. '(
' → logprob: -16.500015258789062
    8. ' (' → logprob: -16.875015258789062
    9. ' res' → logprob: -17.375015258789062
    10. '```' → logprob: -17.625015258789062

Token 194: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.16435478627681732
    2. ',' → logprob: -2.1643548011779785
    3. ',res' → logprob: -3.5393548011779785
    4. 'res' → logprob: -5.5393548011779785
    5. '(left' → logprob: -5.7893548011779785
    6. '(' → logprob: -7.7893548011779785
    7. ',left' → logprob: -8.78935432434082
    8. 'left' → logprob: -9.66435432434082
    9. ' ,' → logprob: -10.41435432434082
    10. ' res' → logprob: -10.53935432434082

Token 195: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.7610454708337784e-05
    2. ' left' → logprob: -10.500027656555176
    3. 'right' → logprob: -17.12502670288086
    4. '[left' → logprob: -18.00002670288086
    5. '(left' → logprob: -18.37502670288086
    6. '	left' → logprob: -19.37502670288086
    7. '   ' → logprob: -19.87502670288086
    8. 'res' → logprob: -20.37502670288086
    9. ')' → logprob: -20.87502670288086
    10. ' ' → logprob: -21.00002670288086

Token 196: '[k' (ID: 14298)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.015924332663416862
    2. '[k' → logprob: -4.265924453735352
    3. 'l' → logprob: -6.390924453735352
    4. 'k' → logprob: -10.265924453735352
    5. '[' → logprob: -10.390924453735352
    6. '[r' → logprob: -11.890924453735352
    7. '[-' → logprob: -13.140924453735352
    8. '   ' → logprob: -13.140924453735352
    9. '[i' → logprob: -13.515924453735352
    10. ' [' → logprob: -13.890924453735352

Token 197: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020711649267468601
    2. ' -' → logprob: -8.50020694732666
    3. ']-' → logprob: -13.25020694732666
    4. '1' → logprob: -14.12520694732666
    5. ']' → logprob: -14.50020694732666
    6. '[' → logprob: -15.25020694732666
    7. '   ' → logprob: -15.87520694732666
    8. '[-' → logprob: -16.250207901000977
    9. '])' → logprob: -16.625207901000977
    10. '```' → logprob: -17.625207901000977

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.812503814697266
    4. '```' → logprob: -16.187503814697266
    5. ')' → logprob: -16.312503814697266
    6. '۱' → logprob: -16.687503814697266
    7. '１' → logprob: -17.312503814697266
    8. '0' → logprob: -17.562503814697266
    9. '
' → logprob: -17.687503814697266
    10. '2' → logprob: -17.687503814697266

Token 199: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16099141538143158
    2. ')' → logprob: -1.9109914302825928
    3. ']' → logprob: -8.410991668701172
    4. ' ])' → logprob: -8.660991668701172
    5. '])
' → logprob: -9.285991668701172
    6. ' )' → logprob: -9.410991668701172
    7. '))' → logprob: -9.535991668701172
    8. ')
' → logprob: -10.160991668701172
    9. ')])' → logprob: -10.660991668701172
    10. '   ' → logprob: -10.785991668701172

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04935766011476517
    2. 'else' → logprob: -3.0493576526641846
    3. ' else' → logprob: -7.174357891082764
    4. '	else' → logprob: -13.924357414245605
    5. '<|end|>' → logprob: -14.174357414245605
    6. 'elif' → logprob: -14.299357414245605
    7. ')' → logprob: -14.674357414245605
    8. '  ' → logprob: -14.799357414245605
    9. '    
' → logprob: -15.174357414245605
    10. ' ' → logprob: -15.799357414245605

Token 201: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3236564099788666
    2. '   ' → logprob: -1.323656439781189
    3. ' else' → logprob: -4.5736565589904785
    4. '	else' → logprob: -11.32365608215332
    5. ' ' → logprob: -12.82365608215332
    6. '    
' → logprob: -13.82365608215332
    7. '  ' → logprob: -13.94865608215332
    8. ')' → logprob: -13.94865608215332
    9. 'elif' → logprob: -14.44865608215332
    10. ',' → logprob: -14.69865608215332

Token 202: ' Sinon' (ID: 154924)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31403031945228577
    2. 'else' → logprob: -1.3140302896499634
    3. '   ' → logprob: -7.189030170440674
    4. ' ' → logprob: -11.689030647277832
    5. '	else' → logprob: -13.314030647277832
    6. '  ' → logprob: -13.939030647277832
    7. ' elif' → logprob: -14.064030647277832
    8. 'elif' → logprob: -14.564030647277832
    9. '    ' → logprob: -14.939030647277832
    10. ' ' → logprob: -15.314030647277832

Token 203: ' on' (ID: 402)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.898611843585968
    2. ':' → logprob: -1.1486117839813232
    3. '       ' → logprob: -1.5236117839813232
    4. '   ' → logprob: -2.8986117839813232
    5. ' :
' → logprob: -6.773612022399902
    6. ' :' → logprob: -7.773612022399902
    7. 'else' → logprob: -7.898612022399902
    8. ',' → logprob: -8.273612022399902
    9. '    ' → logprob: -9.398612022399902
    10. ' else' → logprob: -9.398612022399902

Token 204: ' essay' (ID: 9635)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16574300825595856
    2. '   ' → logprob: -2.665743112564087
    3. '       ' → logprob: -2.915743112564087
    4. ':
' → logprob: -3.790743112564087
    5. 'else' → logprob: -5.790742874145508
    6. ' :' → logprob: -6.165742874145508
    7. ' else' → logprob: -7.540742874145508
    8. ' :
' → logprob: -8.915742874145508
    9. '    ' → logprob: -9.165742874145508
    10. '  ' → logprob: -9.415742874145508

Token 205: 'e' (ID: 68)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5875246524810791
    2. 'e' → logprob: -1.712524652481079
    3. 'ze' → logprob: -2.462524652481079
    4. 'le' → logprob: -2.837524652481079
    5. 'se' → logprob: -3.212524652481079
    6. 'ons' → logprob: -3.462524652481079
    7. 'nte' → logprob: -4.4625244140625
    8. 'n' → logprob: -5.2125244140625
    9. 've' → logprob: -5.4625244140625
    10. '   ' → logprob: -5.7125244140625

Token 206: ' un' (ID: 537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09897705167531967
    2. '   ' → logprob: -2.7239770889282227
    3. '       ' → logprob: -3.9739770889282227
    4. ':
' → logprob: -5.348977088928223
    5. ',' → logprob: -5.973977088928223
    6. ' :' → logprob: -6.723977088928223
    7. '(' → logprob: -8.348977088928223
    8. 'left' → logprob: -9.098977088928223
    9. ' (' → logprob: -9.223977088928223
    10. ' for' → logprob: -9.223977088928223

Token 207: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2944422960281372
    2. ' trajet' → logprob: -1.5444422960281372
    3. ' aller' → logprob: -2.2944421768188477
    4. ' all' → logprob: -2.7944421768188477
    5. 'else' → logprob: -3.1694421768188477
    6. '   ' → logprob: -3.1694421768188477
    7. ' peu' → logprob: -3.5444421768188477
    8. ' déplacement' → logprob: -3.9194421768188477
    9. ' both' → logprob: -4.044442176818848
    10. ' else' → logprob: -4.169442176818848

Token 208: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3912397027015686
    2. '   ' → logprob: -1.2662396430969238
    3. '       ' → logprob: -3.641239643096924
    4. ':
' → logprob: -4.766239643096924
    5. ' :' → logprob: -5.391239643096924
    6. ' de' → logprob: -7.891239643096924
    7. '  ' → logprob: -7.891239643096924
    8. ' ' → logprob: -8.141240119934082
    9. ' des' → logprob: -8.141240119934082
    10. 'left' → logprob: -8.641240119934082

Token 209: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.1986122727394104
    2. 'de' → logprob: -3.3236122131347656
    3. 'g' → logprob: -3.6986122131347656
    4. ' two' → logprob: -3.8236122131347656
    5. 'left' → logprob: -3.8236122131347656
    6. ' left' → logprob: -4.073612213134766
    7. ' both' → logprob: -4.198612213134766
    8. ' ' → logprob: -4.323612213134766
    9. 'both' → logprob: -4.323612213134766
    10. ' gauche' → logprob: -5.198612213134766

Token 210: ' côtés' (ID: 103239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3234952986240387
    2. '   ' → logprob: -1.4484952688217163
    3. ':
' → logprob: -3.448495388031006
    4. 'else' → logprob: -5.448495388031006
    5. ' else' → logprob: -6.323495388031006
    6. ' :' → logprob: -6.948495388031006
    7. ',' → logprob: -7.198495388031006
    8. ' :
' → logprob: -7.573495388031006
    9. '       ' → logprob: -7.698495388031006
    10. ' ' → logprob: -8.073494911193848

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.440182626247406
    2. ':' → logprob: -1.1901826858520508
    3. ':
' → logprob: -3.440182685852051
    4. 'else' → logprob: -4.690182685852051
    5. ' else' → logprob: -5.190182685852051
    6. ',' → logprob: -6.315182685852051
    7. '       ' → logprob: -6.690182685852051
    8. ' :' → logprob: -7.315182685852051
    9. ' :
' → logprob: -7.690182685852051
    10. ' ' → logprob: -8.31518268585205

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023776658345013857
    2. '       ' → logprob: -7.002377510070801
    3. ' else' → logprob: -7.252377510070801
    4. 'else' → logprob: -7.877377510070801
    5. ':' → logprob: -8.7523775100708
    6. '    
' → logprob: -9.8773775100708
    7. ',' → logprob: -10.0023775100708
    8. ':
' → logprob: -10.7523775100708
    9. ' elif' → logprob: -11.1273775100708
    10. '   ' → logprob: -11.6273775100708

Token 213: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4294804036617279
    2. 'else' (adapté à ' else') → logprob: -1.1794804334640503
    3. ' else' → logprob: -3.1794803142547607
    4. ':' → logprob: -10.42948055267334
    5. ' ' → logprob: -10.80448055267334
    6. '	else' → logprob: -11.30448055267334
    7. ':
' → logprob: -11.55448055267334
    8. '  ' → logprob: -11.55448055267334
    9. 'elif' → logprob: -11.55448055267334
    10. '       ' → logprob: -12.05448055267334

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10121975094079971
    2. ':
' → logprob: -2.351219654083252
    3. '   ' → logprob: -7.101219654083252
    4. '       ' → logprob: -9.22622013092041
    5. ' :' → logprob: -9.85122013092041
    6. ' :
' → logprob: -10.47622013092041
    7. ',' → logprob: -13.22622013092041
    8. ':

' → logprob: -13.35122013092041
    9. '{' → logprob: -13.85122013092041
    10. '):
' → logprob: -13.97622013092041

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034793540835380554
    2. '   ' → logprob: -3.4097936153411865
    3. ' res' → logprob: -7.534793376922607
    4. 'res' → logprob: -8.659793853759766
    5. ' if' → logprob: -9.159793853759766
    6. ' left' → logprob: -9.784793853759766
    7. 'left' → logprob: -10.034793853759766
    8. 'dist' → logprob: -10.284793853759766
    9. 'if' → logprob: -10.534793853759766
    10. 'distance' → logprob: -10.909793853759766

Token 216: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.033269401639699936
    2. 'dist' → logprob: -4.53326940536499
    3. 'distance' → logprob: -4.90826940536499
    4. 'if' (adapté à ' if') → logprob: -5.65826940536499
    5. '   ' → logprob: -5.78326940536499
    6. 'temp' → logprob: -5.78326940536499
    7. 'd' → logprob: -6.53326940536499
    8. 'for' → logprob: -7.40826940536499
    9. '#' → logprob: -7.53326940536499
    10. 'pos' → logprob: -7.65826940536499

Token 217: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6819019317626953
    2. ' len' → logprob: -1.0569019317626953
    3. 'l' → logprob: -2.5569019317626953
    4. ' l' → logprob: -2.6819019317626953
    5. '   ' → logprob: -8.056901931762695
    6. 'left' → logprob: -9.181901931762695
    7. '(len' → logprob: -9.306901931762695
    8. 'r' → logprob: -9.431901931762695
    9. ' r' → logprob: -9.806901931762695
    10. ' left' → logprob: -10.056901931762695

Token 218: '(right' (ID: 52104)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0003752615302801132
    2. '(right' → logprob: -8.375374794006348
    3. 'left' → logprob: -8.875374794006348
    4. '[left' → logprob: -12.625374794006348
    5. '(' → logprob: -14.250374794006348
    6. ' left' → logprob: -14.875374794006348
    7. 'right' → logprob: -15.500374794006348
    8. '左' → logprob: -16.000375747680664
    9. ',left' → logprob: -16.375375747680664
    10. '	left' → logprob: -16.750375747680664

Token 219: ')' (ID: 8)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8201706409454346
    2. ')' → logprob: -1.3201706409454346
    3. '>=' → logprob: -1.3201706409454346
    4. ')>=' → logprob: -3.6951706409454346
    5. ']>=' → logprob: -7.6951704025268555
    6. ' )' → logprob: -9.195170402526855
    7. ']' → logprob: -10.570170402526855
    8. '   ' → logprob: -11.070170402526855
    9. '>' → logprob: -11.445170402526855
    10. ' ' → logprob: -12.695170402526855

Token 220: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08898188918828964
    2. ' >=' → logprob: -2.463981866836548
    3. ')>=' → logprob: -10.588981628417969
    4. ']>=' → logprob: -11.338981628417969
    5. '   ' → logprob: -13.338981628417969
    6. ' ' → logprob: -13.588981628417969
    7. '>' → logprob: -14.213981628417969
    8. ')' → logprob: -14.213981628417969
    9. '≥' → logprob: -14.463981628417969
    10. 'r' → logprob: -15.838981628417969

Token 221: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0067156096920371056
    2. ' r' → logprob: -5.006715774536133
    3. '(r' → logprob: -16.506715774536133
    4. '   ' → logprob: -16.506715774536133
    5. ' ' → logprob: -17.006715774536133
    6. '1' → logprob: -17.131715774536133
    7. '	r' → logprob: -17.881715774536133
    8. '[r' → logprob: -18.256715774536133
    9. '_r' → logprob: -18.381715774536133
    10. 'right' → logprob: -18.506715774536133

Token 222: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05679631233215332
    2. 'and' → logprob: -3.0567963123321533
    3. '       ' → logprob: -5.306796073913574
    4. '           ' → logprob: -6.306796073913574
    5. ':' → logprob: -7.306796073913574
    6. ':
' → logprob: -7.931796073913574
    7. '-' → logprob: -8.306796073913574
    8. '   ' → logprob: -10.181796073913574
    9. '+' → logprob: -11.181796073913574
    10. '        ' → logprob: -11.681796073913574

Token 223: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5760622620582581
    2. ' len' → logprob: -0.8260622620582581
    3. '   ' → logprob: -10.076062202453613
    4. '           ' → logprob: -10.326062202453613
    5. '       ' → logprob: -10.701062202453613
    6. '(len' → logprob: -11.951062202453613
    7. '	len' → logprob: -12.451062202453613
    8. 'left' → logprob: -13.076062202453613
    9. '          ' → logprob: -13.201062202453613
    10. '    ' → logprob: -13.576062202453613

Token 224: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.002836015075445175
    2. 'left' → logprob: -6.127836227416992
    3. '(right' → logprob: -7.752836227416992
    4. ' left' → logprob: -8.877836227416992
    5. '(' → logprob: -10.252836227416992
    6. ' (' → logprob: -10.877836227416992
    7. '[left' → logprob: -10.877836227416992
    8. 'right' → logprob: -12.502836227416992
    9. '	left' → logprob: -13.502836227416992
    10. ',left' → logprob: -13.752836227416992

Token 225: ')' (ID: 8)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3694450557231903
    2. '>=' → logprob: -1.3694450855255127
    3. ')' → logprob: -3.1194450855255127
    4. ')>=' → logprob: -4.619444847106934
    5. ']>=' → logprob: -7.619444847106934
    6. ']' → logprob: -10.494444847106934
    7. '>' → logprob: -10.619444847106934
    8. ' )' → logprob: -10.994444847106934
    9. ' ' → logprob: -11.244444847106934
    10. '[' → logprob: -12.369444847106934

Token 226: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.386911541223526
    2. ' >=' → logprob: -1.1369115114212036
    3. '>' → logprob: -10.886911392211914
    4. ')>=' → logprob: -11.386911392211914
    5. ']>=' → logprob: -12.261911392211914
    6. ' ' → logprob: -13.136911392211914
    7. '   ' → logprob: -13.511911392211914
    8. ' >' → logprob: -14.011911392211914
    9. '≥' → logprob: -14.511911392211914
    10. ')' → logprob: -14.511911392211914

Token 227: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006083084270358086
    2. ' l' → logprob: -5.256083011627197
    3. '1' → logprob: -7.131083011627197
    4. '   ' → logprob: -10.506083488464355
    5. ' ' → logprob: -12.006083488464355
    6. '(' → logprob: -12.881083488464355
    7. 'r' → logprob: -12.881083488464355
    8. '(l' → logprob: -13.131083488464355
    9. 'left' → logprob: -13.506083488464355
    10. '	l' → logprob: -13.506083488464355

Token 228: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.475109726190567
    2. ':' → logprob: -0.9751096963882446
    3. '       ' → logprob: -7.350109577178955
    4. '):
' → logprob: -9.100110054016113
    5. ' and' → logprob: -9.225110054016113
    6. ':
' → logprob: -9.350110054016113
    7. '           ' → logprob: -10.725110054016113
    8. ' :
' → logprob: -10.850110054016113
    9. '   ' → logprob: -11.225110054016113
    10. ':

' → logprob: -11.225110054016113

Token 229: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14719538390636444
    2. '           ' → logprob: -2.147195339202881
    3. 'res' → logprob: -4.022195339202881
    4. ' res' → logprob: -7.147195339202881
    5. '
' → logprob: -7.397195339202881
    6. '   ' → logprob: -7.897195339202881
    7. '        
' → logprob: -9.147195816040039
    8. '```' → logprob: -9.147195816040039
    9. ',' → logprob: -9.272195816040039
    10. '            
' → logprob: -10.897195816040039

Token 230: ' a' (ID: 261)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005787651054561138
    2. 'distance' → logprob: -6.0057878494262695
    3. 'dist' → logprob: -6.5057878494262695
    4. 'temp' → logprob: -7.0057878494262695
    5. 'cost' → logprob: -8.63078784942627
    6. '           ' → logprob: -8.63078784942627
    7. 'tmp' → logprob: -8.88078784942627
    8. ' res' → logprob: -9.00578784942627
    9. 'cand' → logprob: -9.75578784942627
    10. 'val' → logprob: -10.13078784942627

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10114984959363937
    2. '=' → logprob: -2.476149797439575
    3. 'ns' → logprob: -5.351150035858154
    4. 'b' → logprob: -5.351150035858154
    5. 'bs' → logprob: -6.851150035858154
    6. '           ' → logprob: -7.351150035858154
    7. '       ' → logprob: -7.851150035858154
    8. 'll' → logprob: -8.851149559020996
    9. '=res' → logprob: -9.101149559020996
    10. '   ' → logprob: -9.851149559020996

Token 232: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03540804609656334
    2. 'min' → logprob: -4.535408020019531
    3. 'max' → logprob: -4.660408020019531
    4. '2' → logprob: -4.785408020019531
    5. ' left' → logprob: -5.160408020019531
    6. '   ' → logprob: -8.910408020019531
    7. ' min' → logprob: -9.160408020019531
    8. ' ' → logprob: -9.285408020019531
    9. ' max' → logprob: -9.410408020019531
    10. 'right' → logprob: -9.535408020019531

Token 233: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0005682834889739752
    2. '[l' → logprob: -7.625568389892578
    3. '[' → logprob: -9.875568389892578
    4. '[a' → logprob: -10.875568389892578
    5. 'r' → logprob: -13.250568389892578
    6. '[i' → logprob: -13.500568389892578
    7. '(r' → logprob: -14.000568389892578
    8. '[right' → logprob: -14.000568389892578
    9. ' [' → logprob: -14.250568389892578
    10. '   ' → logprob: -14.250568389892578

Token 234: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.100059156073257e-05
    2. ' -' → logprob: -10.000070571899414
    3. '[' → logprob: -11.125070571899414
    4. '[-' → logprob: -12.000070571899414
    5. ']' → logprob: -13.625070571899414
    6. ']-' → logprob: -13.750070571899414
    7. '[r' → logprob: -14.125070571899414
    8. 'a' → logprob: -14.625070571899414
    9. '1' → logprob: -15.250070571899414
    10. '[a' → logprob: -15.375070571899414

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '2' → logprob: -15.00000286102295
    4. '   ' → logprob: -15.81250286102295
    5. '```' → logprob: -15.81250286102295
    6. 'r' → logprob: -16.062501907348633
    7. '
' → logprob: -17.000001907348633
    8. '

' → logprob: -17.062501907348633
    9. '１' → logprob: -17.062501907348633
    10. '11' → logprob: -17.250001907348633

Token 236: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6705183386802673
    2. '*' → logprob: -0.9205183386802673
    3. ']
' → logprob: -2.670518398284912
    4. ']*' → logprob: -4.295518398284912
    5. ' *' → logprob: -6.170518398284912
    6. ')' → logprob: -6.420518398284912
    7. '
' → logprob: -6.920518398284912
    8. ']+' → logprob: -7.295518398284912
    9. ' +' → logprob: -8.045517921447754
    10. ')
' → logprob: -8.045517921447754

Token 237: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6468067765235901
    2. '+' → logprob: -1.0218067169189453
    3. 'b' → logprob: -2.6468067169189453
    4. '
' → logprob: -4.396806716918945
    5. '           ' → logprob: -4.521806716918945
    6. ' b' → logprob: -4.896806716918945
    7. '+b' → logprob: -5.146806716918945
    8. '   ' → logprob: -5.896806716918945
    9. '+
' → logprob: -6.021806716918945
    10. '       ' → logprob: -6.896806716918945

Token 238: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0013035722076892853
    2. ' b' → logprob: -6.751303672790527
    3. 'left' → logprob: -10.126303672790527
    4. '2' → logprob: -10.376303672790527
    5. 'a' → logprob: -10.501303672790527
    6. '           ' → logprob: -11.626303672790527
    7. 'res' → logprob: -11.751303672790527
    8. '   ' → logprob: -12.626303672790527
    9. 'c' → logprob: -12.751303672790527
    10. 'v' → logprob: -13.001303672790527

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21284502744674683
    2. '=' → logprob: -1.7128450870513916
    3. ' +' → logprob: -4.7128448486328125
    4. '+' → logprob: -6.0878448486328125
    5. '           ' → logprob: -9.712844848632812
    6. ',' → logprob: -10.837844848632812
    7. '   ' → logprob: -12.087844848632812
    8. 'left' → logprob: -12.087844848632812
    9. ' +=' → logprob: -12.212844848632812
    10. '[left' → logprob: -12.337844848632812

Token 240: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12308350950479507
    2. '2' → logprob: -2.3730835914611816
    3. ' left' → logprob: -3.8730835914611816
    4. ' ' → logprob: -6.498083591461182
    5. '   ' → logprob: -8.373083114624023
    6. '(left' → logprob: -11.123083114624023
    7. '[left' → logprob: -11.373083114624023
    8. '  ' → logprob: -11.373083114624023
    9. '	left' → logprob: -11.498083114624023
    10. '    ' → logprob: -11.748083114624023

Token 241: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -9.13388703338569e-06
    2. 'l' → logprob: -12.500009536743164
    3. '[' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '(l' → logprob: -14.250009536743164
    6. '	l' → logprob: -14.625009536743164
    7. ' [' → logprob: -15.000009536743164
    8. '[
' → logprob: -15.375009536743164
    9. '       ' → logprob: -15.500009536743164
    10. '
' → logprob: -15.750009536743164

Token 242: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.602024900028482e-05
    2. ' -' → logprob: -10.000085830688477
    3. '1' → logprob: -10.750085830688477
    4. ']' → logprob: -11.625085830688477
    5. ']-' → logprob: -12.125085830688477
    6. '[' → logprob: -12.500085830688477
    7. '[-' → logprob: -14.625085830688477
    8. '2' → logprob: -16.000085830688477
    9. '   ' → logprob: -16.250085830688477
    10. '])' → logprob: -16.500085830688477

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.437501907348633
    4. '2' → logprob: -17.500001907348633
    5. '```' → logprob: -17.937501907348633
    6. '１' → logprob: -18.062501907348633
    7. '11' → logprob: -18.250001907348633
    8. '۱' → logprob: -18.312501907348633
    9. ']' → logprob: -18.875001907348633
    10. '
' → logprob: -19.375001907348633

Token 244: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11604919284582138
    2. ']
' → logprob: -2.241049289703369
    3. ']*' → logprob: -6.366049289703369
    4. ')' → logprob: -7.616049289703369
    5. '*' → logprob: -7.741049289703369
    6. ']+' → logprob: -8.491048812866211
    7. ' ]' → logprob: -8.616048812866211
    8. ')]' → logprob: -10.116048812866211
    9. ')
' → logprob: -10.241048812866211
    10. '
' → logprob: -10.866048812866211

Token 245: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004468219820410013
    2. ' 
' → logprob: -7.1294684410095215
    3. '   ' → logprob: -7.2544684410095215
    4. '           ' → logprob: -7.2544684410095215
    5. '
' → logprob: -7.3794684410095215
    6. '    
' → logprob: -7.7544684410095215
    7. '  
' → logprob: -8.004467964172363
    8. '       ' → logprob: -8.129467964172363
    9. 'res' → logprob: -8.754467964172363
    10. '\n' → logprob: -8.754467964172363

Token 246: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0002137882256647572
    2. '           ' → logprob: -9.125213623046875
    3. ' res' → logprob: -9.250213623046875
    4. '       ' → logprob: -13.000213623046875
    5. '
' → logprob: -13.375213623046875
    6. '            
' → logprob: -13.500213623046875
    7. '   ' → logprob: -14.000213623046875
    8. 'distance' → logprob: -14.000213623046875
    9. 'c' → logprob: -14.375213623046875
    10. 'temp' → logprob: -14.750213623046875

Token 247: ' j' (ID: 441)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.000758884591050446
    2. ' res' → logprob: -8.12575912475586
    3. 'temp' → logprob: -8.25075912475586
    4. 'distance' → logprob: -9.75075912475586
    5. '#' → logprob: -10.12575912475586
    6. '           ' → logprob: -10.62575912475586
    7. 'val' → logprob: -11.12575912475586
    8. 'tmp' → logprob: -11.25075912475586
    9. 'c' → logprob: -11.37575912475586
    10. 'cost' → logprob: -11.62575912475586

Token 248: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09850077331066132
    2. '#' → logprob: -3.9735007286071777
    3. ' =' → logprob: -3.9735007286071777
    4. 'combine' → logprob: -3.9735007286071777
    5. 'continue' → logprob: -4.723500728607178
    6. '=' → logprob: -4.848500728607178
    7. '   ' → logprob: -6.223500728607178
    8. 'min' → logprob: -6.723500728607178
    9. 'm' → logprob: -7.098500728607178
    10. ''ai' → logprob: -7.098500728607178

Token 249: ' utilisé' (ID: 53138)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18123309314250946
    2. ' res' → logprob: -1.8062330484390259
    3. '   ' → logprob: -7.431232929229736
    4. '
' → logprob: -7.806232929229736
    5. '           ' → logprob: -8.806233406066895
    6. ' ' → logprob: -9.181233406066895
    7. '#' → logprob: -9.431233406066895
    8. ' #' → logprob: -10.806233406066895
    9. 'r' → logprob: -10.931233406066895
    10. 'a' → logprob: -11.056233406066895

Token 250: ' des' (ID: 731)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.367258220911026
    2. 'res' → logprob: -1.4922581911087036
    3. ' min' → logprob: -3.117258310317993
    4. 'min' → logprob: -3.492258310317993
    5. ' a' → logprob: -5.992258071899414
    6. 'a' → logprob: -6.117258071899414
    7. 'max' → logprob: -7.242258071899414
    8. '           ' → logprob: -7.367258071899414
    9. ' max' → logprob: -7.367258071899414
    10. 'abs' → logprob: -7.867258071899414

Token 251: ' variables' (ID: 13955)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.40608859062194824
    2. ' espaces' → logprob: -2.5310885906219482
    3. ' deux' → logprob: -2.6560885906219482
    4. 'esp' → logprob: -2.6560885906219482
    5. 'es' → logprob: -4.406088829040527
    6. 'a' → logprob: -4.531088829040527
    7. '#' → logprob: -4.656088829040527
    8. '2' → logprob: -4.781088829040527
    9. 'paces' → logprob: -4.781088829040527
    10. 'pace' → logprob: -4.906088829040527

Token 252: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1316453218460083
    2. ' =' → logprob: -1.7566453218460083
    3. ',' → logprob: -2.2566452026367188
    4. '            
' → logprob: -2.5066452026367188
    5. '=' → logprob: -2.6316452026367188
    6. 'tmp' → logprob: -3.2566452026367188
    7. 'temp' → logprob: -3.6316452026367188
    8. 'res' → logprob: -4.006645202636719
    9. 'c' → logprob: -4.006645202636719
    10. ' a' → logprob: -4.131645202636719

Token 253: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11295764893293381
    2. ',b' → logprob: -3.737957715988159
    3. ' ,' → logprob: -3.862957715988159
    4. ' et' → logprob: -4.61295747756958
    5. ',
' → logprob: -4.61295747756958
    6. '+' → logprob: -4.86295747756958
    7. '   ' → logprob: -5.36295747756958
    8. ' =' → logprob: -5.48795747756958
    9. ' +' → logprob: -5.73795747756958
    10. '=' → logprob: -5.86295747756958

Token 254: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002817597473040223
    2. ' b' → logprob: -5.877817630767822
    3. 'res' → logprob: -12.752817153930664
    4. '#' → logprob: -13.127817153930664
    5. 'c' → logprob: -13.127817153930664
    6. '           ' → logprob: -13.252817153930664
    7. ' ' → logprob: -13.502817153930664
    8. ' #' → logprob: -14.377817153930664
    9. '   ' → logprob: -14.752817153930664
    10. ' res' → logprob: -14.877817153930664

Token 255: ' au' (ID: 2791)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2003382444381714
    2. ',' → logprob: -1.4503382444381714
    3. '
' → logprob: -1.8253382444381714
    4. '   ' → logprob: -2.075338363647461
    5. '            
' → logprob: -3.325338363647461
    6. '    
' → logprob: -3.450338363647461
    7. '  
' → logprob: -3.575338363647461
    8. ',
' → logprob: -3.950338363647461
    9. '<|end|>' → logprob: -4.575338363647461
    10. ' for' → logprob: -5.075338363647461

Token 256: ' lieu' (ID: 23979)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -1.0573093891143799
    2. 'else' → logprob: -1.3073093891143799
    3. '#' → logprob: -2.80730938911438
    4. 'max' → logprob: -3.05730938911438
    5. 'comment' → logprob: -3.43230938911438
    6. 'case' → logprob: -3.68230938911438
    7. 'min' → logprob: -3.68230938911438
    8. 'minimum' → logprob: -4.182309150695801
    9. '-' → logprob: -4.307309150695801
    10. 'final' → logprob: -4.432309150695801

Token 257: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10162463784217834
    2. '           ' → logprob: -3.2266247272491455
    3. ' de' → logprob: -3.4766247272491455
    4. '#' → logprob: -3.9766247272491455
    5. 'des' → logprob: -5.851624488830566
    6. 'du' → logprob: -6.351624488830566
    7. 'd' → logprob: -6.726624488830566
    8. '=' → logprob: -7.351624488830566
    9. 'del' → logprob: -8.476624488830566
    10. ' du' → logprob: -8.976624488830566

Token 258: ' noms' (ID: 97041)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4828999638557434
    2. 'c' → logprob: -2.1078999042510986
    3. 'left' → logprob: -2.6078999042510986
    4. 'tmp' → logprob: -2.9828999042510986
    5. 'min' → logprob: -3.6078999042510986
    6. 'ab' → logprob: -4.232900142669678
    7. 'val' → logprob: -4.232900142669678
    8. 'temp' → logprob: -4.357900142669678
    9. '#' → logprob: -4.732900142669678
    10. '0' → logprob: -4.857900142669678

Token 259: ' cl' (ID: 567)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7019884586334229
    2. ' _' → logprob: -1.3269884586334229
    3. '=' → logprob: -3.076988458633423
    4. ' =' → logprob: -3.201988458633423
    5. ' de' → logprob: -3.451988458633423
    6. ' plus' → logprob: -4.326988220214844
    7. 'res' → logprob: -4.701988220214844
    8. 'cl' → logprob: -4.701988220214844
    9. '   ' → logprob: -4.826988220214844
    10. 'de' → logprob: -4.826988220214844

Token 260: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.05960337445139885
    2. 'air' → logprob: -2.934603452682495
    3. '#' → logprob: -5.934603214263916
    4. '```' → logprob: -7.309603214263916
    5. 'aires' → logprob: -7.809603214263916
    6. 'eurs' → logprob: -8.559603691101074
    7. 'ar' → logprob: -8.684603691101074
    8. 'ars' → logprob: -9.434603691101074
    9. 'ears' → logprob: -9.559603691101074
    10. 'es' → logprob: -9.809603691101074

Token 261: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022978708148002625
    2. ',' → logprob: -6.752297878265381
    3. '
' → logprob: -7.627297878265381
    4. 'res' → logprob: -8.877297401428223
    5. '   ' → logprob: -9.127297401428223
    6. ' for' → logprob: -9.377297401428223
    7. ' res' → logprob: -9.627297401428223
    8. ',
' → logprob: -9.752297401428223
    9. '            
' → logprob: -9.752297401428223
    10. '       ' → logprob: -10.377297401428223

Token 262: ' dés' (ID: 19454)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7388920187950134
    2. 'res' → logprob: -1.2388920783996582
    3. ' res' → logprob: -2.488892078399658
    4. '   ' → logprob: -2.613892078399658
    5. '       ' → logprob: -4.238892078399658
    6. 'for' → logprob: -4.363892078399658
    7. 'temp' → logprob: -4.613892078399658
    8. ' for' → logprob: -4.738892078399658
    9. '#' → logprob: -4.738892078399658
    10. 't' → logprob: -4.988892078399658

Token 263: 'olé' (ID: 96652)
  Prédit: 'olé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olé' → logprob: -0.11085537075996399
    2. 'ormais' → logprob: -3.1108553409576416
    3. 'ol' → logprob: -3.6108553409576416
    4. 'c' → logprob: -4.110855579376221
    5. 'ambigu' → logprob: -4.985855579376221
    6. '#' → logprob: -5.485855579376221
    7. '   ' → logprob: -6.610855579376221
    8. 'accord' → logprob: -6.985855579376221
    9. 'ignation' → logprob: -7.235855579376221
    10. 'esp' → logprob: -7.860855579376221

Token 264: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05957451090216637
    2. '
' → logprob: -2.934574604034424
    3. '            
' → logprob: -7.059574604034424
    4. '       ' → logprob: -7.184574604034424
    5. ',' → logprob: -7.309574604034424
    6. ',
' → logprob: -7.684574604034424
    7. '  
' → logprob: -7.934574604034424
    8. '   ' → logprob: -7.934574604034424
    9. ' res' → logprob: -8.184574127197266
    10. '
' → logprob: -8.559574127197266

Token 265: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2821372449398041
    2. '           ' → logprob: -2.032137155532837
    3. '   ' → logprob: -2.657137155532837
    4. '  
' → logprob: -3.907137155532837
    5. '    
' → logprob: -4.532137393951416
    6. ' 
' → logprob: -5.657137393951416
    7. '            
' → logprob: -5.782137393951416
    8. ' res' → logprob: -6.657137393951416
    9. '       ' → logprob: -6.782137393951416
    10. '
' → logprob: -7.032137393951416

Token 266: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.022059211507439613
    2. ' res' → logprob: -4.272059440612793
    3. '           ' → logprob: -5.647059440612793
    4. '
' → logprob: -6.522059440612793
    5. 'distance' → logprob: -6.897059440612793
    6. 'temp' → logprob: -7.147059440612793
    7. '       ' → logprob: -8.522059440612793
    8. 'dist' → logprob: -8.647059440612793
    9. 'tmp' → logprob: -8.897059440612793
    10. 'c' → logprob: -9.022059440612793

Token 267: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1456749588251114
    2. 'a' → logprob: -2.02067494392395
    3. ' b' → logprob: -6.145675182342529
    4. 'b' → logprob: -8.020674705505371
    5. ' ' → logprob: -8.770674705505371
    6. '(a' → logprob: -8.770674705505371
    7. '   ' → logprob: -10.145674705505371
    8. '2' → logprob: -10.270674705505371
    9. ' left' → logprob: -10.520674705505371
    10. ' (' → logprob: -10.895674705505371

Token 268: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6410883665084839
    2. ' <' → logprob: -0.8910883665084839
    3. '<' → logprob: -3.5160884857177734
    4. '>' → logprob: -3.8910884857177734
    5. ' <=' → logprob: -4.891088485717773
    6. ' >=' → logprob: -5.641088485717773
    7. ' +' → logprob: -7.141088485717773
    8. ' ' → logprob: -7.766088485717773
    9. '<=' → logprob: -8.391088485717773
    10. '+' → logprob: -8.391088485717773

Token 269: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005269565153867006
    2. ' b' → logprob: -5.380269527435303
    3. '2' → logprob: -7.380269527435303
    4. '=' → logprob: -11.380270004272461
    5. ' ' → logprob: -11.880270004272461
    6. '=b' → logprob: -12.380270004272461
    7. 'a' → logprob: -13.630270004272461
    8. '(' → logprob: -14.630270004272461
    9. '3' → logprob: -15.380270004272461
    10. '   ' → logprob: -15.630270004272461

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04349784553050995
    2. ':
' → logprob: -3.1684978008270264
    3. ' :' → logprob: -8.293498039245605
    4. '):' → logprob: -8.793498039245605
    5. '):
' → logprob: -9.918498039245605
    6. ' :
' → logprob: -10.293498039245605
    7. ')' → logprob: -12.043498039245605
    8. ':
' → logprob: -13.043498039245605
    9. '       ' → logprob: -13.418498039245605
    10. '   ' → logprob: -13.918498039245605

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7319062948226929
    2. '
' → logprob: -1.3569062948226929
    3. 'res' → logprob: -1.4819062948226929
    4. '           ' → logprob: -3.4819064140319824
    5. ' res' → logprob: -6.356906414031982
    6. '       ' → logprob: -6.731906414031982
    7. '
' → logprob: -9.106905937194824
    8. '   ' → logprob: -9.106905937194824
    9. ':
' → logprob: -9.106905937194824
    10. '                
' → logprob: -9.356905937194824

Token 272: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00878049060702324
    2. ' res' → logprob: -5.008780479431152
    3. '
' → logprob: -6.508780479431152
    4. '               ' → logprob: -8.008780479431152
    5. '                   ' → logprob: -8.758780479431152
    6. '2' → logprob: -9.883780479431152
    7. '           ' → logprob: -11.758780479431152
    8. 'ress' → logprob: -12.133780479431152
    9. '
' → logprob: -12.258780479431152
    10. '   ' → logprob: -12.883780479431152

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031790214125066996
    2. '=' → logprob: -5.75317907333374
    3. ' +=' → logprob: -14.003178596496582
    4. '=min' → logprob: -15.253178596496582
    5. ',' → logprob: -16.2531795501709
    6. ' ' → logprob: -16.6281795501709
    7. ')' → logprob: -16.7531795501709
    8. '   ' → logprob: -17.0031795501709
    9. '+=' → logprob: -17.1281795501709
    10. 'min' → logprob: -17.6281795501709

Token 274: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1797596663236618
    2. 'min' → logprob: -1.8047596216201782
    3. 'a' → logprob: -12.554759979248047
    4. '(min' → logprob: -12.679759979248047
    5. ' a' → logprob: -12.804759979248047
    6. ' ' → logprob: -13.929759979248047
    7. '	min' → logprob: -14.054759979248047
    8. ' ' → logprob: -14.429759979248047
    9. '10' → logprob: -14.429759979248047
    10. ' max' → logprob: -14.679759979248047

Token 275: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.000488811288960278
    2. '(' → logprob: -7.625488758087158
    3. ' (' → logprob: -15.125489234924316
    4. '(a' → logprob: -15.875489234924316
    5. 'res' → logprob: -16.12548828125
    6. ',res' → logprob: -16.12548828125
    7. '(
' → logprob: -16.62548828125
    8. '(abs' → logprob: -17.87548828125
    9. '(min' → logprob: -17.87548828125
    10. '(s' → logprob: -19.25048828125

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005344442906789482
    2. ',res' → logprob: -7.875534534454346
    3. ' ,' → logprob: -9.500534057617188
    4. ',b' → logprob: -10.250534057617188
    5. ',a' → logprob: -10.500534057617188
    6. 'res' → logprob: -12.000534057617188
    7. '(res' → logprob: -12.000534057617188
    8. 'a' → logprob: -13.125534057617188
    9. 'b' → logprob: -14.000534057617188
    10. '(' → logprob: -15.250534057617188

Token 277: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07933618873357773
    2. 'b' → logprob: -2.829336166381836
    3. 'a' → logprob: -4.329336166381836
    4. ' ' → logprob: -6.079336166381836
    5. ' b' → logprob: -6.704336166381836
    6. '   ' → logprob: -8.579336166381836
    7. ' a' → logprob: -8.704336166381836
    8. 'min' → logprob: -9.079336166381836
    9. ' min' → logprob: -11.829336166381836
    10. '1' → logprob: -11.954336166381836

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40485474467277527
    2. 'a' → logprob: -1.5298547744750977
    3. 'b' → logprob: -2.1548547744750977
    4. 'min' → logprob: -8.029854774475098
    5. '(a' → logprob: -10.779854774475098
    6. '   ' → logprob: -11.154854774475098
    7. '1' → logprob: -11.279854774475098
    8. ' ' → logprob: -11.529854774475098
    9. ' a' → logprob: -11.529854774475098
    10. ' b' → logprob: -11.654854774475098

Token 279: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.42559030652046204
    2. '*' → logprob: -1.5505902767181396
    3. ' *' → logprob: -2.0505902767181396
    4. '*b' → logprob: -5.550590515136719
    5. 'a' → logprob: -6.300590515136719
    6. ' a' → logprob: -10.675590515136719
    7. '*c' → logprob: -11.050590515136719
    8. '*object' → logprob: -11.300590515136719
    9. ' ' → logprob: -11.425590515136719
    10. '*out' → logprob: -11.925590515136719

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29068493843078613
    2. ' +' → logprob: -1.4156849384307861
    3. '+b' → logprob: -4.665684700012207
    4. ')' → logprob: -10.790684700012207
    5. ')+' → logprob: -11.415684700012207
    6. ' plus' → logprob: -11.790684700012207
    7. ' ' → logprob: -12.040684700012207
    8. ' ' → logprob: -12.165684700012207
    9. 'b' → logprob: -12.540684700012207
    10. '+)' → logprob: -12.915684700012207

Token 281: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192928314208984
    2. ' b' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.251930236816406
    4. '1' → logprob: -17.001930236816406
    5. '2' → logprob: -17.376930236816406
    6. ')b' → logprob: -17.626930236816406
    7. '	b' → logprob: -18.751930236816406
    8. '   ' → logprob: -19.126930236816406
    9. ' ' → logprob: -19.876930236816406
    10. '3' → logprob: -20.501930236816406

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05300505831837654
    2. ' )' → logprob: -3.0530049800872803
    3. ')
' → logprob: -5.553005218505859
    4. ' )
' → logprob: -7.553005218505859
    5. ')

' → logprob: -12.42800521850586
    6. ' )

' → logprob: -14.17800521850586
    7. ')
' → logprob: -14.17800521850586
    8. ',' → logprob: -14.92800521850586
    9. '),' → logprob: -15.30300521850586
    10. ' )
' → logprob: -15.30300521850586

Token 283: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6544721722602844
    2. 'else' → logprob: -0.7794721722602844
    3. '           ' → logprob: -3.9044721126556396
    4. '               ' → logprob: -6.654472351074219
    5. 'elif' → logprob: -9.279472351074219
    6. ' elif' → logprob: -10.029472351074219
    7. '<|end|>' → logprob: -10.779472351074219
    8. ')' → logprob: -11.279472351074219
    9. '	else' → logprob: -12.154472351074219
    10. ' )' → logprob: -12.404472351074219

Token 284: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6943264007568359
    2. 'else' (adapté à ' else') → logprob: -0.6943264007568359
    3. 'elif' → logprob: -7.194326400756836
    4. ' elif' → logprob: -8.194326400756836
    5. '           ' → logprob: -8.819326400756836
    6. ')' → logprob: -13.944326400756836
    7. '               ' → logprob: -14.194326400756836
    8. '	else' → logprob: -14.569326400756836
    9. '            
' → logprob: -14.819326400756836
    10. 'elseif' → logprob: -15.444326400756836

Token 285: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39086365699768066
    2. '{' → logprob: -1.8908636569976807
    3. ':' → logprob: -2.5158636569976807
    4. ':
' → logprob: -3.0158636569976807
    5. '{
' → logprob: -3.5158636569976807
    6. ' {' → logprob: -5.265863418579102
    7. '2' → logprob: -6.265863418579102
    8. ' res' → logprob: -6.640863418579102
    9. ' ' → logprob: -6.765863418579102
    10. ' {
' → logprob: -6.765863418579102

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09223024547100067
    2. '2' → logprob: -2.8422303199768066
    3. ' res' → logprob: -4.092230319976807
    4. 'res' → logprob: -4.467230319976807
    5. ' ' → logprob: -6.592230319976807
    6. '           ' → logprob: -9.217229843139648
    7. '   ' → logprob: -10.342229843139648
    8. '1' → logprob: -10.467229843139648
    9. '              ' → logprob: -10.592229843139648
    10. ' ' → logprob: -11.217229843139648

Token 287: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.08393437415361404
    2. ' res' → logprob: -2.5839343070983887
    3. '               ' → logprob: -5.333934307098389
    4. '2' → logprob: -8.833934783935547
    5. '           ' → logprob: -10.333934783935547
    6. '                   ' → logprob: -10.958934783935547
    7. ' ' → logprob: -12.458934783935547
    8. '       ' → logprob: -13.083934783935547
    9. '   ' → logprob: -13.458934783935547
    10. '	res' → logprob: -13.708934783935547

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. '+=' → logprob: -15.261872291564941
    4. ' +=' → logprob: -15.761872291564941
    5. ' ' → logprob: -15.886872291564941
    6. '   ' → logprob: -16.261871337890625
    7. '=min' → logprob: -16.386871337890625
    8. ',' → logprob: -17.011871337890625
    9. ')' → logprob: -17.761871337890625
    10. ':' → logprob: -18.511871337890625

Token 289: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47409743070602417
    2. ' min' → logprob: -0.9740974307060242
    3. '2' → logprob: -10.97409725189209
    4. ' res' → logprob: -13.09909725189209
    5. 'res' → logprob: -14.72409725189209
    6. ' ' → logprob: -14.84909725189209
    7. '(min' → logprob: -15.09909725189209
    8. '   ' → logprob: -16.724098205566406
    9. '	min' → logprob: -16.724098205566406
    10. ' ' → logprob: -17.099098205566406

Token 290: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.002476724097505212
    2. '(' → logprob: -6.002476692199707
    3. ',res' → logprob: -14.377476692199707
    4. 'res' → logprob: -14.752476692199707
    5. '(
' → logprob: -17.377477645874023
    6. ' (' → logprob: -18.252477645874023
    7. ',' → logprob: -18.627477645874023
    8. '2' → logprob: -19.252477645874023
    9. '((' → logprob: -19.502477645874023
    10. '=res' → logprob: -19.502477645874023

Token 291: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5806419849395752
    2. ',' → logprob: -0.8306419849395752
    3. '(res' → logprob: -5.455641746520996
    4. ',res' → logprob: -7.830641746520996
    5. 'res' → logprob: -10.955641746520996
    6. ' ,' → logprob: -13.330641746520996
    7. ',(' → logprob: -13.830641746520996
    8. '2' → logprob: -15.330641746520996
    9. ')' → logprob: -15.330641746520996
    10. ' ' → logprob: -15.830641746520996

Token 292: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027483975514769554
    2. ' ' → logprob: -3.7774839401245117
    3. 'a' → logprob: -5.527483940124512
    4. ' a' → logprob: -8.652483940124512
    5. '   ' → logprob: -9.777483940124512
    6. '           ' → logprob: -11.527483940124512
    7. '       ' → logprob: -12.527483940124512
    8. '  ' → logprob: -12.652483940124512
    9. '               ' → logprob: -13.152483940124512
    10. '    ' → logprob: -14.402483940124512

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10059191286563873
    2. 'a' → logprob: -2.3505918979644775
    3. ' ' → logprob: -7.975592136383057
    4. ' a' → logprob: -10.350591659545898
    5. '   ' → logprob: -11.850591659545898
    6. '  ' → logprob: -13.850591659545898
    7. '    ' → logprob: -15.100591659545898
    8. '1' → logprob: -15.225591659545898
    9. '	a' → logprob: -15.725591659545898
    10. '(' → logprob: -16.2255916595459

Token 294: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.005454313009977341
    2. 'b' → logprob: -5.2554545402526855
    3. '*' → logprob: -8.880454063415527
    4. ' *' → logprob: -9.505454063415527
    5. '*a' → logprob: -12.005454063415527
    6. ' b' → logprob: -15.005454063415527
    7. '*(' → logprob: -15.380454063415527
    8. 'a' → logprob: -16.880455017089844
    9. '%b' → logprob: -16.880455017089844
    10. '(b' → logprob: -17.255455017089844

Token 295: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326720118522644
    2. '+' → logprob: -1.3132672309875488
    3. '+)' → logprob: -12.81326675415039
    4. ')' → logprob: -13.56326675415039
    5. '+a' → logprob: -14.56326675415039
    6. ')+' → logprob: -15.56326675415039
    7. ' ' → logprob: -15.68826675415039
    8. '+b' → logprob: -15.68826675415039
    9. ' +
' → logprob: -16.31326675415039
    10. '+c' → logprob: -16.43826675415039

Token 296: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -21.62520408630371
    4. '   ' → logprob: -21.87520408630371
    5. ' ' → logprob: -21.87520408630371
    6. '(a' → logprob: -23.25020408630371
    7. '```' → logprob: -23.25020408630371
    8. '  ' → logprob: -24.12520408630371
    9. ')a' → logprob: -24.12520408630371
    10. '>a' → logprob: -24.37520408630371

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015002528380136937
    2. ')
' → logprob: -8.875149726867676
    3. '<|end|>' → logprob: -12.250149726867676
    4. ' )' → logprob: -12.625149726867676
    5. ')}' → logprob: -14.875149726867676
    6. '}' → logprob: -14.875149726867676
    7. '           ' → logprob: -15.125149726867676
    8. '')' → logprob: -15.500149726867676
    9. '),' → logprob: -16.125150680541992
    10. '})' → logprob: -16.250150680541992

Token 298: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. ' print' → logprob: -10.875021934509277
    3. ')' → logprob: -13.875021934509277
    4. '<|end|>' → logprob: -14.250021934509277
    5. '(print' → logprob: -14.250021934509277
    6. '```' → logprob: -14.875021934509277
    7. '
' → logprob: -15.375021934509277
    8. '.print' → logprob: -16.250022888183594
    9. '#print' → logprob: -17.125022888183594
    10. '-print' → logprob: -17.500022888183594

Token 299: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' pense' (ID: 29077)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6117756366729736
    2. ' ' → logprob: -1.8617756366729736
    3. '<|end|>' → logprob: -1.8617756366729736
    4. 'continue' → logprob: -2.8617756366729736
    5. 's' → logprob: -3.8617756366729736
    6. ')' → logprob: -4.6117753982543945
    7. ' return' → logprob: -4.6117753982543945
    8. '<|end|>' → logprob: -5.2367753982543945
    9. ' break' → logprob: -5.3617753982543945
    10. '=' → logprob: -5.6117753982543945

Token 302: ' que' (ID: 661)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24024634063243866
    2. ')' → logprob: -2.615246295928955
    3. 'print' → logprob: -2.865246295928955
    4. ' return' → logprob: -3.990246295928955
    5. 'continue' → logprob: -4.115246295928955
    6. '
' → logprob: -4.865246295928955
    7. '<|end|>' → logprob: -4.865246295928955
    8. ' ' → logprob: -5.740246295928955
    9. 'res' → logprob: -5.740246295928955
    10. ',' → logprob: -5.740246295928955

Token 303: ' les' (ID: 1341)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3794274926185608
    2. 'res' → logprob: -2.379427433013916
    3. 'print' → logprob: -2.629427433013916
    4. ' continue' → logprob: -2.879427433013916
    5. ' res' → logprob: -3.879427433013916
    6. '#' → logprob: -4.004427433013916
    7. ')' → logprob: -4.004427433013916
    8. 'pass' → logprob: -4.129427433013916
    9. ' ' → logprob: -4.879427433013916
    10. '           ' → logprob: -6.629427433013916

Token 304: ' deux' (ID: 10301)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.0100882053375244
    2. 'for' → logprob: -2.2600882053375244
    3. '...' → logprob: -2.5100882053375244
    4. 'continue' → logprob: -2.5100882053375244
    5. ')' → logprob: -2.6350882053375244
    6. 'de' → logprob: -3.0100882053375244
    7. ' ' → logprob: -3.1350882053375244
    8. ' for' → logprob: -3.3850882053375244
    9. 'left' → logprob: -3.5100882053375244
    10. ' lines' → logprob: -3.6350882053375244

Token 305: ' cas' (ID: 2108)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.3977772891521454
    2. '<|end|>' → logprob: -2.2727773189544678
    3. ' branches' → logprob: -2.3977773189544678
    4. ' côtés' → logprob: -3.3977773189544678
    5. '#' → logprob: -3.8977773189544678
    6. 'if' → logprob: -4.022777080535889
    7. ' sides' → logprob: -4.272777080535889
    8. 'poss' → logprob: -4.647777080535889
    9. 's' → logprob: -4.772777080535889
    10. 'res' → logprob: -5.647777080535889

Token 306: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0443485975265503
    2. '#' → logprob: -1.1693485975265503
    3. ' sont' → logprob: -1.6693485975265503
    4. ' #' → logprob: -3.29434871673584
    5. ' are' → logprob: -3.41934871673584
    6. 'ont' → logprob: -4.41934871673584
    7. '           ' → logprob: -4.66934871673584
    8. ' doivent' → logprob: -4.79434871673584
    9. ' devraient' → logprob: -5.41934871673584
    10. 'n' → logprob: -5.41934871673584

Token 307: ' nécessaires' (ID: 74402)
  Prédit: 'handled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handled' → logprob: -0.7681454420089722
    2. 'covered' → logprob: -1.0181454420089722
    3. 'correct' → logprob: -4.018145561218262
    4. 'f' → logprob: -4.018145561218262
    5. ' handled' → logprob: -4.143145561218262
    6. 'g' → logprob: -4.393145561218262
    7. ' nécessaires' → logprob: -4.393145561218262
    8. ' couvert' → logprob: -4.518145561218262
    9. 'necessary' → logprob: -4.643145561218262
    10. 'expl' → logprob: -4.893145561218262

Token 308: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.370294846012257e-05
    2. ' print' → logprob: -10.125043869018555
    3. '
' → logprob: -13.875043869018555
    4. '<|end|>' → logprob: -13.875043869018555
    5. '```' → logprob: -14.375043869018555
    6. 'return' → logprob: -15.625043869018555
    7. 'else' → logprob: -16.125043869018555
    8. 'for' → logprob: -16.125043869018555
    9. '(print' → logprob: -16.125043869018555
    10. ')' → logprob: -16.250043869018555

Token 309: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' J' (ID: 643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.531315314830863e-06
    2. ' print' → logprob: -12.625003814697266
    3. '```' → logprob: -16.875003814697266
    4. ')' → logprob: -17.000003814697266
    5. '
' → logprob: -17.375003814697266
    6. '<|end|>' → logprob: -17.500003814697266
    7. '#print' → logprob: -17.625003814697266
    8. '(print' → logprob: -18.250003814697266
    9. 'for' → logprob: -19.250003814697266
    10. 'pr' → logprob: -19.625003814697266

Token 311: ''espère' (ID: 116557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.575563020305708e-05
    2. 'r' → logprob: -10.250065803527832
    3. ' print' → logprob: -10.750065803527832
    4. 'pr' → logprob: -12.750065803527832
    5. 'p' → logprob: -13.000065803527832
    6. 'prin' → logprob: -13.375065803527832
    7. 'pri' → logprob: -13.625065803527832
    8. 'prit' → logprob: -14.625065803527832
    9. '#print' → logprob: -15.375065803527832
    10. '#' → logprob: -16.375064849853516

Token 312: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.546478935983032e-05
    2. ' print' → logprob: -10.875025749206543
    3. '
' → logprob: -12.000025749206543
    4. '(print' → logprob: -15.250025749206543
    5. '```' → logprob: -16.375024795532227
    6. '#print' → logprob: -17.375024795532227
    7. '
' → logprob: -18.250024795532227
    8. '  
' → logprob: -18.500024795532227
    9. '(' → logprob: -18.500024795532227
    10. '.print' → logprob: -18.875024795532227

Token 313: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.3120038501219824e-05
    2. ' print' → logprob: -9.875053405761719
    3. '
' → logprob: -13.875053405761719
    4. 'res' → logprob: -14.875053405761719
    5. '#print' → logprob: -15.625053405761719
    6. '(print' → logprob: -16.87505340576172
    7. '#' → logprob: -17.50005340576172
    8. '```' → logprob: -17.75005340576172
    9. 'Print' → logprob: -17.87505340576172
    10. 'pr' → logprob: -17.87505340576172

Token 314: ''ai' (ID: 12480)
  Prédit: ''ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ai' → logprob: -0.6856497526168823
    2. 'e' → logprob: -0.8106497526168823
    3. ''' → logprob: -3.935649871826172
    4. 'ai' → logprob: -4.185649871826172
    5. ''arrive' → logprob: -5.685649871826172
    6. ''avais' → logprob: -6.185649871826172
    7. ''aurais' → logprob: -6.435649871826172
    8. ''espère' → logprob: -6.810649871826172
    9. '’ai' → logprob: -7.060649871826172
    10. 'us' → logprob: -7.435649871826172

Token 315: ' rien' (ID: 23082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4329630732536316
    2. ' trouvé' → logprob: -1.8079631328582764
    3. ' print' → logprob: -2.3079631328582764
    4. ' fini' → logprob: -3.0579631328582764
    5. 'pu' → logprob: -5.182962894439697
    6. ' compris' → logprob: -5.182962894439697
    7. 'f' → logprob: -5.307962894439697
    8. 'bien' → logprob: -5.682962894439697
    9. ' bien' → logprob: -5.932962894439697
    10. ' finis' → logprob: -6.182962894439697

Token 316: ' oublié' (ID: 151945)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024754200130701065
    2. '
' → logprob: -6.252475261688232
    3. ' print' → logprob: -8.00247573852539
    4. 'else' → logprob: -8.62747573852539
    5. '(print' → logprob: -11.00247573852539
    6. '
' → logprob: -12.50247573852539
    7. '#' → logprob: -13.00247573852539
    8. '

' → logprob: -13.00247573852539
    9. 'import' → logprob: -13.75247573852539
    10. 'return' → logprob: -13.75247573852539

Token 317: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.688212614681106e-05
    2. ' print' → logprob: -11.000017166137695
    3. '
' → logprob: -16.000017166137695
    4. '.print' → logprob: -18.125017166137695
    5. '(print' → logprob: -19.125017166137695
    6. '-print' → logprob: -19.375017166137695
    7. ')' → logprob: -19.625017166137695
    8. '#print' → logprob: -19.875017166137695
    9. ')
' → logprob: -19.875017166137695
    10. '<|end|>' → logprob: -21.000017166137695

Token 318: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4736459888808895e-05
    2. '
' → logprob: -11.250014305114746
    3. ' print' → logprob: -13.625014305114746
    4. '```' → logprob: -14.625014305114746
    5. '(print' → logprob: -17.875015258789062
    6. '``' → logprob: -18.000015258789062
    7. '.print' → logprob: -19.000015258789062
    8. '
' → logprob: -19.250015258789062
    9. '  
' → logprob: -19.250015258789062
    10. '\' → logprob: -19.375015258789062

Token 319: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.02324967086315155
    2. '(' → logprob: -3.773249626159668
    3. 'res' → logprob: -13.273249626159668
    4. ' (' → logprob: -13.898249626159668
    5. '('' → logprob: -14.023249626159668
    6. '()' → logprob: -15.273249626159668
    7. '("' → logprob: -15.773249626159668
    8. '(
' → logprob: -15.898249626159668
    9. '(f' → logprob: -16.523250579833984
    10. ' res' → logprob: -16.898250579833984

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')`' → logprob: -17.000001907348633
    4. '))' → logprob: -18.000001907348633
    5. '())' → logprob: -19.000001907348633
    6. ')
' → logprob: -19.000001907348633
    7. ')}' → logprob: -19.625001907348633
    8. '')' → logprob: -20.000001907348633
    9. '),' → logprob: -20.500001907348633
    10. '`)' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 318
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 29.56%
Précision adaptée (1ère position): 32.08%
Précision (top 10): 71.38%
================================================================================
