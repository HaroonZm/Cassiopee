================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import heappop, heappush
from collections import Counter

class Node:
    
    def __init__(self, weight):
        self.weight = weight
    
    def set_parent(self,parent):
        self.parent = parent
        
    def get_length(self):
        try:
            tmp = 1 + self.parent.get_length()
        except AttributeError:
            tmp = 0
        return tmp
        
    def get_weight(self):
        return self.weight

    def __lt__(self, other):
        return self.weight < other.weight
    

S = input()
d = Counter(S)
tree_dic = {}
h = []
num = 0
for i in d:
    tree_dic[i] = Node(d[i])
    heappush(h,tree_dic[i])
while(len(h) > 1):
    tmp0 = heappop(h)
    tmp1 = heappop(h)
    tree_dic[num] = Node(tmp0.get_weight() + tmp1.get_weight())
    tmp0.set_parent(tree_dic[num])
    tmp1.set_parent(tree_dic[num])
    heappush(h,tree_dic[num])
    num+=1

ans = 0
for i in S:
    ans += tree_dic[i].get_length()
if len(S) == 1:
    print(1)
elif len(d) == 1:
    print(len(S))
else:
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06490714102983475
    2. 'import' → logprob: -2.8149070739746094
    3. ' import' → logprob: -5.939907073974609
    4. '.import' → logprob: -8.68990707397461
    5. '(' → logprob: -10.68990707397461
    6. '.he' → logprob: -11.06490707397461
    7. 'i' → logprob: -11.43990707397461
    8. ' .' → logprob: -11.56490707397461
    9. '.im' → logprob: -11.81490707397461
    10. ' ' → logprob: -11.81490707397461

Token 4: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28024300932884216
    2. ' he' → logprob: -1.5302430391311646
    3. 'heap' → logprob: -3.655242919921875
    4. 'nl' → logprob: -6.655242919921875
    5. ' n' → logprob: -7.780242919921875
    6. ' heap' → logprob: -9.155242919921875
    7. 'n' → logprob: -9.405242919921875
    8. 'merge' → logprob: -9.655242919921875
    9. '`' → logprob: -10.280242919921875
    10. '```' → logprob: -10.280242919921875

Token 5: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03823668137192726
    2. 'ap' → logprob: -3.288236618041992
    3. 'a' → logprob: -8.663236618041992
    4. 'apl' → logprob: -11.538236618041992
    5. 'aps' → logprob: -12.538236618041992
    6. 'q' → logprob: -12.663236618041992
    7. 'aq' → logprob: -13.538236618041992
    8. 'n' → logprob: -13.663236618041992
    9. 'appen' → logprob: -14.038236618041992
    10. 'ап' → logprob: -14.413236618041992

Token 6: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.025902414694428444
    2. 'op' → logprob: -4.150902271270752
    3. 'us' → logprob: -4.900902271270752
    4. 'u' → logprob: -6.275902271270752
    5. 'o' → logprob: -7.650902271270752
    6. 'opleft' → logprob: -12.27590274810791
    7. '```' → logprob: -12.40090274810791
    8. 'uf' → logprob: -13.40090274810791
    9. 'os' → logprob: -13.65090274810791
    10. 'opl' → logprob: -13.90090274810791

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18058955669403076
    2. '(' → logprob: -2.1805896759033203
    3. 'import' → logprob: -3.1805896759033203
    4. '```' → logprob: -5.68058967590332
    5. '(heap' → logprob: -6.43058967590332
    6. '<|end|>' → logprob: -6.80558967590332
    7. 'he' → logprob: -7.18058967590332
    8. '[' → logprob: -7.30558967590332
    9. ',
' → logprob: -7.55558967590332
    10. '\(' → logprob: -7.68058967590332

Token 8: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.057020287960767746
    2. ' he' → logprob: -3.0570201873779297
    3. 'heap' → logprob: -4.80702018737793
    4. ' heap' → logprob: -8.43202018737793
    5. ' heaps' → logprob: -13.68202018737793
    6. 'hep' → logprob: -13.68202018737793
    7. '```' → logprob: -13.80702018737793
    8. '.he' → logprob: -13.93202018737793
    9. '_he' → logprob: -14.30702018737793
    10. 'hev' → logprob: -14.30702018737793

Token 9: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023268306627869606
    2. 'ap' → logprob: -3.773268222808838
    3. 'a' → logprob: -10.773268699645996
    4. 'ап' → logprob: -14.148268699645996
    5. 'appen' → logprob: -14.898268699645996
    6. 'apl' → logprob: -15.273268699645996
    7. 'apput' → logprob: -16.39826774597168
    8. 'append' → logprob: -16.52326774597168
    9. 'APP' → logprob: -16.89826774597168
    10. 'apply' → logprob: -17.27326774597168

Token 10: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.703443770878948e-06
    2. 'us' → logprob: -11.875007629394531
    3. 'u' → logprob: -14.500007629394531
    4. 'ushed' → logprob: -16.87500762939453
    5. 'push' → logprob: -17.12500762939453
    6. 'USH' → logprob: -17.50000762939453
    7. 'ushing' → logprob: -19.00000762939453
    8. '```' → logprob: -20.12500762939453
    9. 'uh' → logprob: -20.37500762939453
    10. 'ushi' → logprob: -20.50000762939453

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019722258730325848
    2. '\(' → logprob: -9.250197410583496
    3. '(
' → logprob: -9.875197410583496
    4. 'd' → logprob: -11.250197410583496
    5. 'def' → logprob: -11.500197410583496
    6. '\' → logprob: -12.125197410583496
    7. '[' → logprob: -12.625197410583496
    8. '#' → logprob: -13.250197410583496
    9. ' (' → logprob: -13.250197410583496
    10. 'a' → logprob: -13.375197410583496

Token 12: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016754455282352865
    2. '\(' → logprob: -9.750167846679688
    3. '(
' → logprob: -10.375167846679688
    4. ' (' → logprob: -10.375167846679688
    5. ',' → logprob: -10.750167846679688
    6. '\' → logprob: -12.000167846679688
    7. '[' → logprob: -12.125167846679688
    8. '.' → logprob: -13.250167846679688
    9. 'def' → logprob: -13.500167846679688
    10. '#' → logprob: -13.625167846679688

Token 13: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.024421392008662224
    2. 'collections' → logprob: -4.274421215057373
    3. ' math' → logprob: -5.024421215057373
    4. ' itertools' → logprob: -5.899421215057373
    5. ' queue' → logprob: -7.649421215057373
    6. ' sys' → logprob: -8.649421691894531
    7. ' heap' → logprob: -9.024421691894531
    8. 'math' → logprob: -9.899421691894531
    9. ' ' → logprob: -11.149421691894531
    10. ' os' → logprob: -11.899421691894531

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24052828550338745
    2. ' import' → logprob: -1.6155283451080322
    3. '.' → logprob: -4.240528106689453
    4. '.Counter' → logprob: -8.240528106689453
    5. ' ' → logprob: -9.115528106689453
    6. '	import' → logprob: -9.240528106689453
    7. '```' → logprob: -9.615528106689453
    8. '.import' → logprob: -10.615528106689453
    9. '_' → logprob: -11.365528106689453
    10. '_import' → logprob: -11.740528106689453

Token 15: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5131710171699524
    2. 'deque' → logprob: -1.0131709575653076
    3. ' defaultdict' → logprob: -3.2631709575653076
    4. 'de' → logprob: -9.888171195983887
    5. 'default' → logprob: -11.263171195983887
    6. ' de' → logprob: -12.263171195983887
    7. '```' → logprob: -13.388171195983887
    8. ' abc' → logprob: -14.513171195983887
    9. 'import' → logprob: -14.638171195983887
    10. ' import' → logprob: -15.138171195983887

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0167981386184692
    2. '(' → logprob: -1.3917981386184692
    3. '\n' → logprob: -2.0167980194091797
    4. '(
' → logprob: -2.2667980194091797
    5. 'def' → logprob: -3.5167980194091797
    6. '

' → logprob: -3.7667980194091797
    7. '\' → logprob: -3.7667980194091797
    8. '' → logprob: -3.8917980194091797
    9. '
' → logprob: -4.76679801940918
    10. 'n' → logprob: -5.39179801940918

Token 17: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28937703371047974
    2. 'def' → logprob: -2.039376974105835
    3. 'd' → logprob: -2.914376974105835
    4. '`' → logprob: -3.664376974105835
    5. 'n' → logprob: -4.789377212524414
    6. '```' → logprob: -5.289377212524414
    7. 'a' → logprob: -5.539377212524414
    8. 'heap' → logprob: -5.664377212524414
    9. '\' → logprob: -5.914377212524414
    10. 'data' → logprob: -6.039377212524414

Token 18: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025541423819959164
    2. ' Priority' → logprob: -6.377553939819336
    3. ' Heap' → logprob: -7.877553939819336
    4. ' My' → logprob: -8.752553939819336
    5. ' A' → logprob: -9.877553939819336
    6. ' ' → logprob: -9.877553939819336
    7. ' Trie' → logprob: -10.252553939819336
    8. ' Min' → logprob: -10.377553939819336
    9. ' Node' → logprob: -10.627553939819336
    10. '  ' → logprob: -11.127553939819336

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006054413039237261
    2. '(' → logprob: -5.131054401397705
    3. ' :' → logprob: -9.881054878234863
    4. '<|end|>' → logprob: -9.881054878234863
    5. '(object' → logprob: -12.131054878234863
    6. '():' → logprob: -12.506054878234863
    7. ':
' → logprob: -12.881054878234863
    8. ':**' → logprob: -13.006054878234863
    9. '(:' → logprob: -13.506054878234863
    10. '.' → logprob: -13.756054878234863

Token 20: '    
' (ID: 1944)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7131008505821228
    2. '   ' → logprob: -1.0881009101867676
    3. '(' → logprob: -2.2131009101867676
    4. '    ' → logprob: -3.5881009101867676
    5. ' (' → logprob: -4.338100910186768
    6. '<|end|>' → logprob: -4.963100910186768
    7. ':' → logprob: -5.338100910186768
    8. '(object' → logprob: -5.838100910186768
    9. '  ' → logprob: -5.963100910186768
    10. ' :' → logprob: -6.338100910186768

Token 21: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17961116135120392
    2. 'def' → logprob: -2.3046112060546875
    3. '   ' → logprob: -2.8046112060546875
    4. '    ' → logprob: -6.1796112060546875
    5. ' ' → logprob: -6.9296112060546875
    6. ':' → logprob: -7.8046112060546875
    7. ' __' → logprob: -8.054611206054688
    8. ' :' → logprob: -10.179611206054688
    9. '  ' → logprob: -10.429611206054688
    10. ' de' → logprob: -10.429611206054688

Token 22: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004995363298803568
    2. ' def' → logprob: -5.504995346069336
    3. '__' → logprob: -7.004995346069336
    4. ' __' → logprob: -11.879995346069336
    5. 'de' → logprob: -13.504995346069336
    6. '   ' → logprob: -14.629995346069336
    7. 'd' → logprob: -15.504995346069336
    8. 'class' → logprob: -16.379995346069336
    9. ' de' → logprob: -16.879995346069336
    10. ' ' → logprob: -17.129995346069336

Token 23: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05624045059084892
    2. ' ' → logprob: -2.9312405586242676
    3. ' _' → logprob: -7.806240558624268
    4. ' init' → logprob: -8.30624008178711
    5. '__' → logprob: -8.68124008178711
    6. ' ‌' → logprob: -8.68124008178711
    7. '_' → logprob: -8.93124008178711
    8. '_init' → logprob: -9.68124008178711
    9. ' ' → logprob: -9.68124008178711
    10. '  ' → logprob: -10.05624008178711

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -13.75000286102295
    3. 'ini' → logprob: -14.00000286102295
    4. ' init' → logprob: -14.37500286102295
    5. 'in' → logprob: -15.25000286102295
    6. 'int' → logprob: -18.250001907348633
    7. 'inti' → logprob: -20.000001907348633
    8. '_init' → logprob: -20.500001907348633
    9. '	init' → logprob: -20.875001907348633
    10. 'inite' → logprob: -21.000001907348633

Token 25: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025008367374539375
    2. ' (' → logprob: -4.400008201599121
    3. '<|end|>' → logprob: -4.900008201599121
    4. '(self' → logprob: -6.150008201599121
    5. '__(' → logprob: -6.775008201599121
    6. '_' → logprob: -6.775008201599121
    7. '<|end|>' → logprob: -8.650008201599121
    8. ' ' → logprob: -9.150008201599121
    9. '_(' → logprob: -9.900008201599121
    10. 'self' → logprob: -10.400008201599121

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -11.750008583068848
    3. ')' → logprob: -15.125008583068848
    4. 'value' → logprob: -17.00000762939453
    5. ' ' → logprob: -17.75000762939453
    6. 'data' → logprob: -18.00000762939453
    7. '(self' → logprob: -18.37500762939453
    8. '	self' → logprob: -18.37500762939453
    9. '   ' → logprob: -18.75000762939453
    10. '
' → logprob: -19.62500762939453

Token 27: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.09085427224636078
    2. ',' → logprob: -2.8408541679382324
    3. ' ' → logprob: -3.7158541679382324
    4. ' )' → logprob: -5.715854167938232
    5. 'self' → logprob: -8.09085464477539
    6. '  ' → logprob: -8.59085464477539
    7. ' self' → logprob: -8.71585464477539
    8. ')' → logprob: -9.09085464477539
    9. ',self' → logprob: -10.59085464477539
    10. 'space' → logprob: -12.21585464477539

Token 28: ' weight' (ID: 6049)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frequency' → logprob: -1.0571039915084839
    2. 'freq' → logprob: -1.5571039915084839
    3. ' frequency' → logprob: -1.8071039915084839
    4. 'char' → logprob: -1.9321039915084839
    5. ' freq' → logprob: -3.1821041107177734
    6. 'value' → logprob: -3.5571041107177734
    7. 'symbol' → logprob: -3.6821041107177734
    8. ' char' → logprob: -4.307104110717773
    9. 'self' → logprob: -4.307104110717773
    10. ' value' → logprob: -5.682104110717773

Token 29: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022396855056285858
    2. '):' → logprob: -3.8973968029022217
    3. ' ,' → logprob: -7.022397041320801
    4. '<|end|>' → logprob: -7.647397041320801
    5. ')' → logprob: -7.897397041320801
    6. ' ):' → logprob: -9.8973970413208
    7. '<|end|>' → logprob: -11.5223970413208
    8. '):
' → logprob: -11.5223970413208
    9. ' ' → logprob: -11.7723970413208
    10. '=' → logprob: -11.8973970413208

Token 30: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15699349343776703
    2. '        ' → logprob: -2.7819933891296387
    3. '       ' → logprob: -3.1569933891296387
    4. '    ' → logprob: -4.031993389129639
    5. 'self' → logprob: -4.656993389129639
    6. 'w' → logprob: -5.656993389129639
    7. '_' → logprob: -6.031993389129639
    8. '<|end|>' → logprob: -6.406993389129639
    9. '   ' → logprob: -6.781993389129639
    10. '     ' → logprob: -6.906993389129639

Token 31: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16568614542484283
    2. ' self' → logprob: -1.9156861305236816
    3. '       ' → logprob: -5.290686130523682
    4. '        ' → logprob: -9.29068660736084
    5. 'weight' → logprob: -9.29068660736084
    6. '   ' → logprob: -9.66568660736084
    7. ' ' → logprob: -10.16568660736084
    8. '    ' → logprob: -10.16568660736084
    9. ' ' → logprob: -11.16568660736084
    10. ' weight' → logprob: -11.29068660736084

Token 32: '.weight' (ID: 49415)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004700326360762119
    2. '.weight' → logprob: -5.879700183868408
    3. 'weight' → logprob: -7.504700183868408
    4. '<|end|>' → logprob: -7.629700183868408
    5. ' .' → logprob: -8.379700660705566
    6. ',' → logprob: -8.379700660705566
    7. '_weight' → logprob: -9.254700660705566
    8. ' ' → logprob: -9.754700660705566
    9. '_' → logprob: -9.879700660705566
    10. '=' → logprob: -10.254700660705566

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16162912547588348
    2. '=' → logprob: -1.9116290807724
    3. ' ' → logprob: -6.7866291999816895
    4. '<|end|>' → logprob: -8.286628723144531
    5. ' =
' → logprob: -12.286628723144531
    6. ',' → logprob: -12.661628723144531
    7. ' =)' → logprob: -12.786628723144531
    8. '<|end|>' → logprob: -12.786628723144531
    9. '_' → logprob: -13.161628723144531
    10. '  ' → logprob: -14.036628723144531

Token 34: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.0031781906727701426
    2. 'weight' → logprob: -5.753178119659424
    3. '(weight' → logprob: -15.003178596496582
    4. ' ' → logprob: -16.378177642822266
    5. ' weig' → logprob: -17.128177642822266
    6. 'weig' → logprob: -17.503177642822266
    7. ' gewicht' → logprob: -17.628177642822266
    8. '.weight' → logprob: -18.878177642822266
    9. '_weight' → logprob: -19.253177642822266
    10. 'Weight' → logprob: -20.003177642822266

Token 35: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' def' (ID: 1056)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6364831328392029
    2. 'children' → logprob: -2.0114831924438477
    3. 'def' (adapté à ' def') → logprob: -2.3864831924438477
    4. '<|end|>' → logprob: -2.5114831924438477
    5. 'data' → logprob: -3.1364831924438477
    6. 'value' → logprob: -3.3864831924438477
    7. ',' → logprob: -3.5114831924438477
    8. ' left' → logprob: -3.7614831924438477
    9. '   ' → logprob: -4.761483192443848
    10. ' children' → logprob: -5.761483192443848

Token 38: ' set' (ID: 920)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2562938332557678
    2. '__' → logprob: -2.131293773651123
    3. '<|end|>' → logprob: -3.006293773651123
    4. ' ' → logprob: -3.756293773651123
    5. '_' → logprob: -4.256293773651123
    6. ' _' → logprob: -4.631293773651123
    7. '  ' → logprob: -5.881293773651123
    8. ')' → logprob: -7.131293773651123
    9. '_lt' → logprob: -7.256293773651123
    10. '___' → logprob: -7.506293773651123

Token 39: '_parent' (ID: 39570)
  Prédit: '_children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.4342241585254669
    2. '_' → logprob: -1.6842241287231445
    3. '_left' → logprob: -2.1842241287231445
    4. '_data' → logprob: -4.0592241287231445
    5. 's' → logprob: -4.6842241287231445
    6. ' _' → logprob: -5.0592241287231445
    7. '_child' → logprob: -5.4342241287231445
    8. '_code' → logprob: -6.1842241287231445
    9. '_le' → logprob: -6.3092241287231445
    10. '_leaf' → logprob: -6.5592241287231445

Token 40: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23498989641666412
    2. '(self' → logprob: -1.609989881515503
    3. ' (' → logprob: -4.734990119934082
    4. ',' → logprob: -8.734990119934082
    5. ' ' → logprob: -9.234990119934082
    6. '(parent' → logprob: -9.359990119934082
    7. '<|end|>' → logprob: -9.484990119934082
    8. 'self' → logprob: -9.609990119934082
    9. '(space' → logprob: -9.984990119934082
    10. '(
' → logprob: -9.984990119934082

Token 41: ',parent' (ID: 191621)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003023345780093223
    2. ' ,' → logprob: -8.2503023147583
    3. ')' → logprob: -10.5003023147583
    4. '):' → logprob: -12.2503023147583
    5. ',node' → logprob: -12.2503023147583
    6. ',parent' → logprob: -13.3753023147583
    7. ',)' → logprob: -14.5003023147583
    8. ' )' → logprob: -14.8753023147583
    9. ',
' → logprob: -15.3753023147583
    10. 'self' → logprob: -15.6253023147583

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23931720852851868
    2. ',' → logprob: -1.8643171787261963
    3. ')' → logprob: -2.8643171787261963
    4. ' ):' → logprob: -7.989317417144775
    5. ' ,' → logprob: -8.739316940307617
    6. ' )' → logprob: -9.114316940307617
    7. '):
' → logprob: -9.239316940307617
    8. '   ' → logprob: -10.864316940307617
    9. ',parent' → logprob: -10.989316940307617
    10. ',
' → logprob: -11.114316940307617

Token 43: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8048780560493469
    2. '(parent' → logprob: -0.8048780560493469
    3. '(self' → logprob: -2.554877996444702
    4. ' (' → logprob: -5.054878234863281
    5. ')' → logprob: -5.179878234863281
    6. '(
' → logprob: -5.929878234863281
    7. '   ' → logprob: -6.054878234863281
    8. 'self' → logprob: -6.054878234863281
    9. 'parent' → logprob: -6.304878234863281
    10. '       ' → logprob: -6.554878234863281

Token 44: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21499480307102203
    2. ' parent' → logprob: -2.2149949073791504
    3. 'self' (adapté à ' self') → logprob: -2.5899949073791504
    4. 'parent' → logprob: -4.71499490737915
    5. '_parent' → logprob: -9.464994430541992
    6. ')' → logprob: -9.714994430541992
    7. '(parent' → logprob: -9.839994430541992
    8. '       ' → logprob: -9.964994430541992
    9. '.parent' → logprob: -10.589994430541992
    10. '<|end|>' → logprob: -11.339994430541992

Token 45: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12695550918579102
    2. '.parent' → logprob: -2.126955509185791
    3. ' .' → logprob: -11.376955032348633
    4. '.Parent' → logprob: -12.501955032348633
    5. 'parent' → logprob: -13.126955032348633
    6. '._' → logprob: -13.126955032348633
    7. '.weight' → logprob: -13.501955032348633
    8. '.set' → logprob: -13.876955032348633
    9. '.user' → logprob: -14.626955032348633
    10. '.next' → logprob: -14.751955032348633

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044363260269165
    2. '=' → logprob: -3.2880444526672363
    3. ' ' → logprob: -12.913043975830078
    4. ' =
' → logprob: -15.163043975830078
    5. '_' → logprob: -16.413043975830078
    6. '.' → logprob: -17.038043975830078
    7. '    ' → logprob: -17.413043975830078
    8. ' =)' → logprob: -18.288043975830078
    9. '_=' → logprob: -18.413043975830078
    10. ' ==' → logprob: -18.538043975830078

Token 47: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.023248272016644478
    2. 'parent' → logprob: -3.7732481956481934
    3. '(parent' → logprob: -13.273248672485352
    4. ' ' → logprob: -14.648248672485352
    5. '	parent' → logprob: -15.523248672485352
    6. 'space' → logprob: -16.14824867248535
    7. '.parent' → logprob: -16.77324867248535
    8. ' ' → logprob: -16.89824867248535
    9. '_parent' → logprob: -16.89824867248535
    10. ',parent' → logprob: -17.02324867248535

Token 48: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6658428311347961
    2. '<|end|>' → logprob: -0.7908428311347961
    3. '    
' → logprob: -4.1658430099487305
    4. '\n' → logprob: -5.5408430099487305
    5. '   ' → logprob: -5.5408430099487305
    6. '<|end|>' → logprob: -5.9158430099487305
    7. ' 
' → logprob: -6.6658430099487305
    8. '\' → logprob: -6.7908430099487305
    9. 'def' → logprob: -6.9158430099487305
    10. '  
' → logprob: -7.0408430099487305

Token 50: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7762832641601562
    2. '<|end|>' → logprob: -0.7762832641601562
    3. '    
' → logprob: -3.6512832641601562
    4. '   ' → logprob: -4.151283264160156
    5. '<|end|>' → logprob: -4.776283264160156
    6. '\' → logprob: -5.026283264160156
    7. 'def' (adapté à ' def') → logprob: -5.151283264160156
    8. '\n' → logprob: -5.401283264160156
    9. '  
' → logprob: -5.901283264160156
    10. '    ' → logprob: -6.151283264160156

Token 51: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7799645066261292
    2. 'is' → logprob: -1.5299644470214844
    3. 'get' → logprob: -2.0299644470214844
    4. ' __' → logprob: -2.2799644470214844
    5. ' is' → logprob: -3.5299644470214844
    6. ' get' → logprob: -4.029964447021484
    7. 'def' → logprob: -4.154964447021484
    8. '_children' → logprob: -5.654964447021484
    9. 'children' → logprob: -5.779964447021484
    10. ' def' → logprob: -6.029964447021484

Token 52: '_length' (ID: 11514)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.393543004989624
    2. '_weight' → logprob: -1.393543004989624
    3. '_code' → logprob: -3.143543004989624
    4. '_' → logprob: -3.893543004989624
    5. '_children' → logprob: -5.518543243408203
    6. '_child' → logprob: -6.518543243408203
    7. '_weights' → logprob: -7.143543243408203
    8. '_leaf' → logprob: -7.143543243408203
    9. '_par' → logprob: -7.268543243408203
    10. '_encoding' → logprob: -7.518543243408203

Token 53: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3895767629146576
    2. '(' → logprob: -1.13957679271698
    3. '()' → logprob: -6.0145769119262695
    4. 'self' → logprob: -8.76457691192627
    5. '(
' → logprob: -10.01457691192627
    6. ' (' → logprob: -11.13957691192627
    7. 's' → logprob: -11.76457691192627
    8. '(s' → logprob: -12.13957691192627
    9. '<|end|>' → logprob: -12.13957691192627
    10. '():' → logprob: -12.63957691192627

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027705004438757896
    2. '():' → logprob: -4.277705192565918
    3. ')' → logprob: -4.527705192565918
    4. '()' → logprob: -6.277705192565918
    5. ',' → logprob: -8.152705192565918
    6. 'self' → logprob: -8.402705192565918
    7. '(' → logprob: -9.152705192565918
    8. '):
' → logprob: -9.777705192565918
    9. ' ):' → logprob: -9.902705192565918
    10. ' ' → logprob: -11.777705192565918

Token 55: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8960633873939514
    2. ' ' → logprob: -1.3960633277893066
    3. ' return' → logprob: -1.7710633277893066
    4. '   ' → logprob: -2.3960633277893066
    5. 'return' → logprob: -3.0210633277893066
    6. ' self' → logprob: -4.771063327789307
    7. '1' → logprob: -4.771063327789307
    8. '    ' → logprob: -5.271063327789307
    9. '       ' → logprob: -5.271063327789307
    10. 'self' → logprob: -6.021063327789307

Token 56: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.792632520198822
    2. '0' → logprob: -1.4176325798034668
    3. ' return' → logprob: -1.9176325798034668
    4. '1' → logprob: -2.667632579803467
    5. ' if' → logprob: -3.042632579803467
    6. '   ' → logprob: -4.167632579803467
    7. 'if' → logprob: -4.417632579803467
    8. ' ' → logprob: -5.167632579803467
    9. '       ' → logprob: -6.292632579803467
    10. '2' → logprob: -6.667632579803467

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012367760064080358
    2. ':
' → logprob: -7.626236915588379
    3. ' :' → logprob: -7.626236915588379
    4. ':return' → logprob: -8.376236915588379
    5. '<|end|>' → logprob: -11.626236915588379
    6. '   ' → logprob: -12.001236915588379
    7. ' ' → logprob: -12.501236915588379
    8. '       ' → logprob: -12.751236915588379
    9. '    ' → logprob: -13.501236915588379
    10. ' :
' → logprob: -13.876236915588379

Token 58: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09966892749071121
    2. '       ' → logprob: -3.0996689796447754
    3. 'return' → logprob: -3.5996689796447754
    4. '   ' → logprob: -4.224668979644775
    5. ':return' → logprob: -5.724668979644775
    6. '
' → logprob: -6.599668979644775
    7. '           ' → logprob: -6.599668979644775
    8. '    ' → logprob: -7.349668979644775
    9. ' ' → logprob: -8.099668502807617
    10. '{return' → logprob: -8.349668502807617

Token 59: ' tmp' (ID: 8919)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18445494771003723
    2. 'return' → logprob: -1.8094549179077148
    3. 'len' → logprob: -6.059454917907715
    4. ' len' → logprob: -6.934454917907715
    5. '
' → logprob: -7.309454917907715
    6. '           ' → logprob: -8.434454917907715
    7. '       ' → logprob: -8.434454917907715
    8. ':return' → logprob: -8.684454917907715
    9. '{return' → logprob: -9.809454917907715
    10. '   ' → logprob: -11.059454917907715

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3401382267475128
    2. '=len' → logprob: -2.5901381969451904
    3. '.' → logprob: -2.8401381969451904
    4. '=' → logprob: -3.3401381969451904
    5. 'len' → logprob: -3.8401381969451904
    6. '_len' → logprob: -4.0901384353637695
    7. '_length' → logprob: -4.4651384353637695
    8. ':' → logprob: -4.5901384353637695
    9. '
' → logprob: -4.8401384353637695
    10. 'self' → logprob: -4.9651384353637695

Token 61: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.630251407623291
    2. ' self' → logprob: -1.505251407623291
    3. 'len' → logprob: -1.755251407623291
    4. ' len' → logprob: -2.630251407623291
    5. '   ' → logprob: -7.505251407623291
    6. ' ' → logprob: -10.255250930786133
    7. '       ' → logprob: -10.255250930786133
    8. '(len' → logprob: -11.630250930786133
    9. '    ' → logprob: -12.005250930786133
    10. '
' → logprob: -12.255250930786133

Token 62: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1322985291481018
    2. 'len' → logprob: -2.132298469543457
    3. ' self' → logprob: -5.382298469543457
    4. ' len' → logprob: -7.257298469543457
    5. '   ' → logprob: -10.257298469543457
    6. '       ' → logprob: -12.382298469543457
    7. '
' → logprob: -12.882298469543457
    8. 'length' → logprob: -13.132298469543457
    9. '    ' → logprob: -13.632298469543457
    10. '(len' → logprob: -13.632298469543457

Token 63: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.48023560643196106
    2. '+' → logprob: -1.1052355766296387
    3. '+self' → logprob: -3.3552355766296387
    4. '
' → logprob: -5.480235576629639
    5. ' if' → logprob: -5.855235576629639
    6. ' /' → logprob: -6.230235576629639
    7. '0' → logprob: -6.355235576629639
    8. 'self' → logprob: -6.605235576629639
    9. ' ' → logprob: -7.480235576629639
    10. '/' → logprob: -7.855235576629639

Token 64: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132808804512024
    2. 'self' → logprob: -1.3132808208465576
    3. ' len' → logprob: -11.438281059265137
    4. 'len' → logprob: -12.438281059265137
    5. '           ' → logprob: -12.563281059265137
    6. '       ' → logprob: -14.938281059265137
    7. '	self' → logprob: -15.563281059265137
    8. '        ' → logprob: -16.56328010559082
    9. '            ' → logprob: -16.56328010559082
    10. '(self' → logprob: -16.56328010559082

Token 65: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00033879990223795176
    2. '.' → logprob: -8.125338554382324
    3. 'parent' → logprob: -10.125338554382324
    4. 'Parent' → logprob: -14.125338554382324
    5. '.Parent' → logprob: -14.625338554382324
    6. '_parent' → logprob: -15.000338554382324
    7. ' .' → logprob: -15.500338554382324
    8. '.root' → logprob: -16.12533950805664
    9. '	parent' → logprob: -16.25033950805664
    10. '.parents' → logprob: -16.37533950805664

Token 66: '.get' (ID: 775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6935364603996277
    2. '.get' → logprob: -0.6935364603996277
    3. '.length' → logprob: -8.693536758422852
    4. '.
' → logprob: -9.443536758422852
    5. '.parent' → logprob: -9.693536758422852
    6. 'get' → logprob: -9.943536758422852
    7. '
' → logprob: -12.568536758422852
    8. 'length' → logprob: -12.943536758422852
    9. '<|end|>' → logprob: -12.943536758422852
    10. ' ' → logprob: -13.068536758422852

Token 67: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.5941604690160602e-05
    2. '_l' → logprob: -10.625025749206543
    3. '_le' → logprob: -14.125025749206543
    4. '_' → logprob: -14.750025749206543
    5. 'length' → logprob: -15.500025749206543
    6. '_lengths' → logprob: -16.12502670288086
    7. '_len' → logprob: -16.12502670288086
    8. 'ength' → logprob: -18.00002670288086
    9. '_leg' → logprob: -18.50002670288086
    10. '_Length' → logprob: -18.50002670288086

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014207110740244389
    2. '()
' → logprob: -4.264206886291504
    3. '(' → logprob: -10.764206886291504
    4. ')' → logprob: -11.139206886291504
    5. '()
' → logprob: -13.014206886291504
    6. '()

' → logprob: -13.139206886291504
    7. '(
' → logprob: -13.139206886291504
    8. 'except' → logprob: -14.764206886291504
    9. '())' → logprob: -14.889206886291504
    10. '()\' → logprob: -15.014206886291504

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16600589454174042
    2. '()
' → logprob: -2.916005849838257
    3. '()' → logprob: -3.041005849838257
    4. ')' → logprob: -3.166005849838257
    5. 'except' → logprob: -5.666006088256836
    6. ')
' → logprob: -6.291006088256836
    7. '
' → logprob: -6.541006088256836
    8. '           ' → logprob: -7.666006088256836
    9. ' except' → logprob: -7.791006088256836
    10. 'return' → logprob: -8.166006088256836

Token 70: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27735546231269836
    2. ' except' → logprob: -1.777355432510376
    3. 'except' (adapté à ' except') → logprob: -2.777355432510376
    4. ' return' → logprob: -6.027355670928955
    5. '           ' → logprob: -6.277355670928955
    6. '
' → logprob: -6.402355670928955
    7. '   ' → logprob: -6.527355670928955
    8. '	except' → logprob: -6.902355670928955
    9. ' ' → logprob: -7.152355670928955
    10. ')' → logprob: -7.152355670928955

Token 71: ' Attribute' (ID: 31404)
  Prédit: 'Attribute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Attribute' → logprob: -0.04959307238459587
    2. ' Attribute' → logprob: -3.049592971801758
    3. '(Attribute' → logprob: -6.924592971801758
    4. 'A' → logprob: -11.299592971801758
    5. '.Attribute' → logprob: -11.924592971801758
    6. 'ATTRIBUTE' → logprob: -13.924592971801758
    7. '_attribute' → logprob: -14.299592971801758
    8. 'attribute' → logprob: -14.799592971801758
    9. 'At' → logprob: -15.174592971801758
    10. 'Name' → logprob: -15.424592971801758

Token 72: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.5776860184123507e-06
    2. 'error' → logprob: -13.50000286102295
    3. 'rror' → logprob: -13.75000286102295
    4. 'Erro' → logprob: -17.250001907348633
    5. 'Er' → logprob: -17.500001907348633
    6. ' Error' → logprob: -17.875001907348633
    7. 'E' → logprob: -19.250001907348633
    8. '_error' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.750001907348633
    10. 'ERROR' → logprob: -20.125001907348633

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022034443099983037
    2. ':
' → logprob: -8.62522029876709
    3. ':return' → logprob: -10.62522029876709
    4. ' :' → logprob: -12.00022029876709
    5. '():' → logprob: -12.12522029876709
    6. '):' → logprob: -12.62522029876709
    7. ':**' → logprob: -15.50022029876709
    8. ':

' → logprob: -15.62522029876709
    9. '           ' → logprob: -16.125221252441406
    10. '       ' → logprob: -16.250221252441406

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027165217325091362
    2. 'return' → logprob: -3.777165174484253
    3. ' return' → logprob: -5.652165412902832
    4. '0' → logprob: -8.402165412902832
    5. '       ' → logprob: -9.777165412902832
    6. '1' → logprob: -10.027165412902832
    7. '   ' → logprob: -11.152165412902832
    8. ' ' → logprob: -11.152165412902832
    9. ':return' → logprob: -11.527165412902832
    10. '            ' → logprob: -12.277165412902832

Token 75: ' tmp' (ID: 8919)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020848317071795464
    2. ' ' → logprob: -6.252084732055664
    3. 'return' → logprob: -9.252084732055664
    4. '1' → logprob: -10.002084732055664
    5. ' return' → logprob: -11.127084732055664
    6. ' 
' → logprob: -16.377084732055664
    7. '   ' → logprob: -17.377084732055664
    8. '           ' → logprob: -17.502084732055664
    9. '
' → logprob: -18.002084732055664
    10. '2' → logprob: -18.002084732055664

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693104147911072
    2. ' =' → logprob: -2.1269309520721436
    3. ' ' → logprob: -13.251931190490723
    4. '<|end|>' → logprob: -14.126931190490723
    5. ' =
' → logprob: -15.876931190490723
    6. '=
' → logprob: -16.126930236816406
    7. '=}' → logprob: -17.001930236816406
    8. '=True' → logprob: -17.376930236816406
    9. ')' → logprob: -17.751930236816406
    10. ' =)' → logprob: -17.876930236816406

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008032554760575294
    2. ' ' → logprob: -5.008032321929932
    3. '1' → logprob: -6.633032321929932
    4. '   ' → logprob: -16.883031845092773
    5. '۰' → logprob: -17.820531845092773
    6. '2' → logprob: -18.570531845092773
    7. '    ' → logprob: -18.633031845092773
    8. '  ' → logprob: -18.883031845092773
    9. ' ' → logprob: -19.070531845092773
    10. '+' → logprob: -19.508031845092773

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007685328018851578
    2. '1' → logprob: -7.250768661499023
    3. ' ' → logprob: -9.750768661499023
    4. '۰' → logprob: -16.938268661499023
    5. '   ' → logprob: -17.688268661499023
    6. '-' → logprob: -17.688268661499023
    7. '2' → logprob: -18.063268661499023
    8. '  ' → logprob: -18.500768661499023
    9. '00' → logprob: -18.750768661499023
    10. '01' → logprob: -18.875768661499023

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005238975863903761
    2. '
' → logprob: -5.630239009857178
    3. 'return' → logprob: -7.505239009857178
    4. ' return' → logprob: -7.880239009857178
    5. '<|end|>' → logprob: -8.38023853302002
    6. ':return' → logprob: -9.13023853302002
    7. '	return' → logprob: -9.63023853302002
    8. '   ' → logprob: -10.13023853302002
    9. '
' → logprob: -10.25523853302002
    10. '	' → logprob: -10.25523853302002

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016023407224565744
    2. ' return' → logprob: -7.1266021728515625
    3. 'return' → logprob: -8.001602172851562
    4. '
' → logprob: -9.126602172851562
    5. ':return' → logprob: -9.501602172851562
    6. '<|end|>' → logprob: -9.626602172851562
    7. '   ' → logprob: -10.001602172851562
    8. '           ' → logprob: -10.251602172851562
    9. ')' → logprob: -10.251602172851562
    10. '	return' → logprob: -10.501602172851562

Token 81: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28161099553108215
    2. ' return' → logprob: -1.7816109657287598
    3. 'return' (adapté à ' return') → logprob: -2.6566109657287598
    4. '   ' → logprob: -5.65661096572876
    5. ':return' → logprob: -6.28161096572876
    6. '	return' → logprob: -6.90661096572876
    7. ' ' → logprob: -9.031611442565918
    8. 'eturn' → logprob: -9.656611442565918
    9. ')return' → logprob: -9.656611442565918
    10. '    ' → logprob: -9.656611442565918

Token 82: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.06199323385953903
    2. 'tmp' → logprob: -2.81199312210083
    3. '	tmp' → logprob: -11.811993598937988
    4. '/tmp' → logprob: -11.936993598937988
    5. '(tmp' → logprob: -12.186993598937988
    6. '1' → logprob: -13.436993598937988
    7. '[tmp' → logprob: -13.436993598937988
    8. '$tmp' → logprob: -13.561993598937988
    9. ' ' → logprob: -13.936993598937988
    10. ' ' → logprob: -14.061993598937988

Token 83: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34164249897003174
    2. '<|end|>' → logprob: -2.091642379760742
    3. '   ' → logprob: -2.841642379760742
    4. '    
' → logprob: -2.841642379760742
    5. ' 
' → logprob: -3.591642379760742
    6. '\n' → logprob: -5.216642379760742
    7. 'def' → logprob: -5.841642379760742
    8. ' ' → logprob: -6.091642379760742
    9. '  
' → logprob: -6.091642379760742
    10. '\' → logprob: -6.841642379760742

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.074771523475647
    2. '<|end|>' → logprob: -1.699771523475647
    3. ' ' → logprob: -1.949771523475647
    4. ' 
' → logprob: -2.6997714042663574
    5. '
' → logprob: -2.6997714042663574
    6. 'def' (adapté à ' def') → logprob: -2.9497714042663574
    7. '    
' → logprob: -3.3247714042663574
    8. '    ' → logprob: -3.9497714042663574
    9. '\n' → logprob: -4.074771404266357
    10. 'n' → logprob: -4.074771404266357

Token 86: ' get' (ID: 717)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18494334816932678
    2. '__' → logprob: -1.9349433183670044
    3. ' get' → logprob: -4.184943199157715
    4. ' def' → logprob: -5.684943199157715
    5. ' is' → logprob: -6.559943199157715
    6. 'get' → logprob: -6.809943199157715
    7. ' ' → logprob: -7.184943199157715
    8. ' set' → logprob: -7.559943199157715
    9. ' compare' → logprob: -8.059943199157715
    10. 'def' → logprob: -8.184943199157715

Token 87: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.1508684754371643
    2. '_code' → logprob: -2.2758684158325195
    3. '_depth' → logprob: -5.0258684158325195
    4. '_length' → logprob: -5.0258684158325195
    5. '_' → logprob: -5.4008684158325195
    6. '_weights' → logprob: -5.6508684158325195
    7. '_parent' → logprob: -6.0258684158325195
    8. '_codes' → logprob: -6.4008684158325195
    9. '_children' → logprob: -6.6508684158325195
    10. '_bits' → logprob: -6.6508684158325195

Token 88: '(self' (ID: 2402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014512626454234123
    2. '.' → logprob: -5.389512538909912
    3. ' )' → logprob: -5.514512538909912
    4. '<|end|>' → logprob: -5.639512538909912
    5. ' ' → logprob: -8.01451301574707
    6. '<|end|>' → logprob: -8.13951301574707
    7. '.weight' → logprob: -8.51451301574707
    8. ')return' → logprob: -8.76451301574707
    9. ').' → logprob: -8.76451301574707
    10. '())' → logprob: -9.01451301574707

Token 90: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8138898015022278
    2. 'self' → logprob: -0.9388898015022278
    3. ' return' → logprob: -2.438889741897583
    4. '       ' → logprob: -3.313889741897583
    5. 'return' → logprob: -3.438889741897583
    6. '   ' → logprob: -4.813889980316162
    7. '<|end|>' → logprob: -6.688889980316162
    8. '    ' → logprob: -8.438889503479004
    9. ' ' → logprob: -8.438889503479004
    10. '	self' → logprob: -9.938889503479004

Token 91: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4379808306694031
    2. ' self' → logprob: -1.1879808902740479
    3. 'return' (adapté à ' return') → logprob: -3.312980890274048
    4. ' return' → logprob: -4.312980651855469
    5. '       ' → logprob: -11.187980651855469
    6. ' ' → logprob: -12.937980651855469
    7. '   ' → logprob: -13.312980651855469
    8. ' ' → logprob: -13.812980651855469
    9. '<|end|>' → logprob: -13.937980651855469
    10. '(self' → logprob: -14.062980651855469

Token 92: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326448917388916
    2. 'self' → logprob: -1.3132644891738892
    3. ' ' → logprob: -13.313264846801758
    4. '	self' → logprob: -14.688264846801758
    5. '(self' → logprob: -15.063264846801758
    6. ' ' → logprob: -15.188264846801758
    7. '   ' → logprob: -16.563264846801758
    8. '_self' → logprob: -16.938264846801758
    9. '$self' → logprob: -18.063264846801758
    10. 's' → logprob: -18.063264846801758

Token 93: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.04884703457355499
    2. '.' → logprob: -3.048846960067749
    3. ' .' → logprob: -8.673847198486328
    4. '.we' → logprob: -9.923847198486328
    5. '.weights' → logprob: -10.798847198486328
    6. '.w' → logprob: -11.298847198486328
    7. '.
' → logprob: -13.173847198486328
    8. 'weight' → logprob: -13.798847198486328
    9. '.Weight' → logprob: -14.298847198486328
    10. '.weapon' → logprob: -15.048847198486328

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3266575336456299
    2. '<|end|>' → logprob: -1.3266575336456299
    3. ' 
' → logprob: -5.201657295227051
    4. '

' → logprob: -6.451657295227051
    5. '<|end|>' → logprob: -6.576657295227051
    6. '\n' → logprob: -6.701657295227051
    7. '    
' → logprob: -6.826657295227051
    8. ' ' → logprob: -7.326657295227051
    9. '  
' → logprob: -7.826657295227051
    10. '\' → logprob: -7.951657295227051

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22353945672512054
    2. ' get' → logprob: -2.598539352416992
    3. ' ' → logprob: -2.848539352416992
    4. '__' → logprob: -3.848539352416992
    5. ' _' → logprob: -4.598539352416992
    6. ' is' → logprob: -4.973539352416992
    7. '_' → logprob: -5.098539352416992
    8. ' def' → logprob: -5.723539352416992
    9. '_compare' → logprob: -5.723539352416992
    10. '_get' → logprob: -6.098539352416992

Token 98: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.0011853496544063091
    2. 'eq' → logprob: -6.751185417175293
    3. 'le' → logprob: -11.751185417175293
    4. 'gt' → logprob: -12.876185417175293
    5. 'cmp' → logprob: -13.501185417175293
    6. 'hash' → logprob: -13.876185417175293
    7. ' lt' → logprob: -13.876185417175293
    8. 'repr' → logprob: -14.126185417175293
    9. 'init' → logprob: -15.251185417175293
    10. 'l' → logprob: -15.626185417175293

Token 99: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.030050603672862053
    2. '__' → logprob: -3.53005051612854
    3. '__('' → logprob: -8.655050277709961
    4. '__((' → logprob: -9.780050277709961
    5. '(' → logprob: -10.280050277709961
    6. '__(
' → logprob: -10.905050277709961
    7. '__("' → logprob: -11.530050277709961
    8. '_' → logprob: -13.030050277709961
    9. '___' → logprob: -13.280050277709961
    10. '__(*' → logprob: -13.530050277709961

Token 100: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011752263642847538
    2. 'other' → logprob: -4.511752128601074
    3. ' self' → logprob: -7.511752128601074
    4. ' other' → logprob: -8.761752128601074
    5. ' ' → logprob: -15.011752128601074
    6. 'Other' → logprob: -15.761752128601074
    7. '(self' → logprob: -16.01175308227539
    8. 'o' → logprob: -16.01175308227539
    9. '   ' → logprob: -16.26175308227539
    10. '	self' → logprob: -16.88675308227539

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006199076771736145
    2. ' ,' → logprob: -5.131198883056641
    3. '__,' → logprob: -9.00619888305664
    4. 'other' → logprob: -10.38119888305664
    5. ',self' → logprob: -10.38119888305664
    6. ',node' → logprob: -10.38119888305664
    7. '<|end|>' → logprob: -11.63119888305664
    8. ',__' → logprob: -11.75619888305664
    9. ',obj' → logprob: -12.25619888305664
    10. '_,' → logprob: -12.50619888305664

Token 102: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3132699131965637
    2. ' other' → logprob: -1.313269853591919
    3. 'o' → logprob: -12.56326961517334
    4. ' o' → logprob: -13.06326961517334
    5. ' ' → logprob: -14.31326961517334
    6. 'oth' → logprob: -14.68826961517334
    7. 'Other' → logprob: -14.93826961517334
    8. '(other' → logprob: -15.06326961517334
    9. ' oth' → logprob: -15.06326961517334
    10. 'othe' → logprob: -15.31326961517334

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010623442940413952
    2. ')' → logprob: -7.001062393188477
    3. ' ):' → logprob: -9.126062393188477
    4. '):
' → logprob: -10.376062393188477
    5. ':' → logprob: -12.126062393188477
    6. ',' → logprob: -12.751062393188477
    7. ' )' → logprob: -13.751062393188477
    8. '>:' → logprob: -15.501062393188477
    9. '):
' → logprob: -15.751062393188477
    10. '   ' → logprob: -15.751062393188477

Token 104: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2538805902004242
    2. 'self' → logprob: -1.5038806200027466
    3. '       ' → logprob: -6.253880500793457
    4. '   ' → logprob: -11.003880500793457
    5. '	self' → logprob: -12.378880500793457
    6. '    ' → logprob: -13.503880500793457
    7. '(self' → logprob: -13.878880500793457
    8. ' True' → logprob: -14.003880500793457
    9. ' ' → logprob: -14.753880500793457
    10. '<|end|>' → logprob: -14.753880500793457

Token 105: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0034431421663612127
    2. ' self' → logprob: -5.753443241119385
    3. 'return' (adapté à ' return') → logprob: -8.253442764282227
    4. '       ' → logprob: -12.753442764282227
    5. ' return' → logprob: -13.253442764282227
    6. '   ' → logprob: -15.628442764282227
    7. '	self' → logprob: -16.753442764282227
    8. '(self' → logprob: -17.003442764282227
    9. 'Self' → logprob: -17.628442764282227
    10. '    ' → logprob: -18.628442764282227

Token 106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687190413475037
    2. ' self' → logprob: -1.1368719339370728
    3. '(self' → logprob: -15.136872291564941
    4. ' ' → logprob: -15.636872291564941
    5. '	self' → logprob: -15.761872291564941
    6. '_self' → logprob: -16.261871337890625
    7. '   ' → logprob: -16.261871337890625
    8. 'Self' → logprob: -16.761871337890625
    9. 's' → logprob: -17.886871337890625
    10. ' ' → logprob: -18.136871337890625

Token 107: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -9.007317567011341e-05
    2. 'weight' → logprob: -9.625089645385742
    3. '.' → logprob: -11.375089645385742
    4. '.get' → logprob: -11.375089645385742
    5. '.we' → logprob: -14.625089645385742
    6. '.weights' → logprob: -15.500089645385742
    7. '.Weight' → logprob: -16.750089645385742
    8. '.w' → logprob: -16.875089645385742
    9. '.priority' → logprob: -17.000089645385742
    10. '.size' → logprob: -17.125089645385742

Token 108: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1269315630197525
    2. '<' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.126931190490723
    4. ' <=' → logprob: -14.751931190490723
    5. ' >' → logprob: -15.501931190490723
    6. '<|end|>' → logprob: -15.626931190490723
    7. ' <",' → logprob: -16.37693214416504
    8. '   ' → logprob: -16.37693214416504
    9. '[' → logprob: -16.75193214416504
    10. '<size' → logprob: -16.75193214416504

Token 109: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.0019289902411401272
    2. 'other' → logprob: -6.251928806304932
    3. '(other' → logprob: -15.00192928314209
    4. ' ' → logprob: -16.626928329467773
    5. '.other' → logprob: -17.001928329467773
    6. ' oth' → logprob: -17.876928329467773
    7. ' o' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.501928329467773
    9. '_other' → logprob: -18.501928329467773
    10. 'o' → logprob: -19.751928329467773

Token 110: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.009125604294240475
    2. '.' → logprob: -5.134125709533691
    3. 'weight' → logprob: -5.759125709533691
    4. ' .' → logprob: -10.759125709533691
    5. ' weight' → logprob: -11.634125709533691
    6. '.get' → logprob: -12.634125709533691
    7. '.weights' → logprob: -13.634125709533691
    8. '.we' → logprob: -13.759125709533691
    9. '.
' → logprob: -14.759125709533691
    10. '.Weight' → logprob: -15.134125709533691

Token 111: '
    

' (ID: 189732)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: 'S' (ID: 50)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0013491649879142642
    2. 'def' → logprob: -7.001348972320557
    3. ' class' → logprob: -9.001349449157715
    4. '
' → logprob: -9.376349449157715
    5. ')' → logprob: -9.876349449157715
    6. ' ' → logprob: -10.126349449157715
    7. '   ' → logprob: -10.501349449157715
    8. '  
' → logprob: -10.876349449157715
    9. 'c' → logprob: -11.126349449157715
    10. ',' → logprob: -11.501349449157715

Token 113: ' =' (ID: 314)
  Prédit: 'tring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tring' → logprob: -0.3249415457248688
    2. 't' → logprob: -2.199941635131836
    3. 'ymbol' → logprob: -2.199941635131836
    4. 'def' → logprob: -3.324941635131836
    5. 'ource' → logprob: -5.949941635131836
    6. 'entence' → logprob: -6.199941635131836
    7. 'T' → logprob: -6.324941635131836
    8. '
' → logprob: -6.574941635131836
    9. '   ' → logprob: -6.574941635131836
    10. 'e' → logprob: -6.949941635131836

Token 114: ' input' (ID: 3422)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5372335910797119
    2. ' Counter' → logprob: -1.537233591079712
    3. '"' → logprob: -1.912233591079712
    4. ' "' → logprob: -3.662233591079712
    5. ''' → logprob: -4.662233352661133
    6. 'input' → logprob: -4.912233352661133
    7. ' input' → logprob: -5.537233352661133
    8. ' '' → logprob: -6.537233352661133
    9. '"C' → logprob: -7.037233352661133
    10. '[' → logprob: -7.537233352661133

Token 115: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17991900444030762
    2. '()' → logprob: -1.8049190044403076
    3. '("")' → logprob: -10.054919242858887
    4. '('' → logprob: -10.429919242858887
    5. '("("' → logprob: -10.554919242858887
    6. '()>' → logprob: -11.554919242858887
    7. '(
' → logprob: -11.554919242858887
    8. '```' → logprob: -11.804919242858887
    9. '().' → logprob: -12.054919242858887
    10. '(`' → logprob: -12.179919242858887

Token 116: 'd' (ID: 67)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.7326201796531677
    2. 'freq' → logprob: -0.7326201796531677
    3. 'cnt' → logprob: -4.4826202392578125
    4. 'count' → logprob: -4.7326202392578125
    5. 'frequency' → logprob: -5.1076202392578125
    6. 'char' → logprob: -5.2326202392578125
    7. 'counts' → logprob: -5.6076202392578125
    8. 'c' → logprob: -6.1076202392578125
    9. 'fre' → logprob: -7.3576202392578125
    10. 'chars' → logprob: -8.732620239257812

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41990581154823303
    2. ' =' → logprob: -1.5449057817459106
    3. 'ata' → logprob: -2.4199059009552
    4. '_counter' → logprob: -4.544905662536621
    5. 'c' → logprob: -4.669905662536621
    6. 'ic' → logprob: -5.169905662536621
    7. 'counter' → logprob: -5.294905662536621
    8. ' ' → logprob: -6.419905662536621
    9. 'Counter' → logprob: -6.669905662536621
    10. 'C' → logprob: -6.794905662536621

Token 118: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.006715728435665369
    2. ' Counter' → logprob: -5.006715774536133
    3. '.Counter' → logprob: -15.756715774536133
    4. 'dict' → logprob: -17.256715774536133
    5. '_counter' → logprob: -17.631715774536133
    6. ' ' → logprob: -17.881715774536133
    7. ' dict' → logprob: -17.881715774536133
    8. '   ' → logprob: -18.006715774536133
    9. 'C' → logprob: -18.131715774536133
    10. 'Coun' → logprob: -18.256715774536133

Token 119: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.2520159184932709
    2. '(' → logprob: -1.5020159482955933
    3. '(s' → logprob: -9.377016067504883
    4. '(
' → logprob: -13.627016067504883
    5. '()' → logprob: -15.127016067504883
    6. '('' → logprob: -16.252016067504883
    7. '((' → logprob: -16.502016067504883
    8. '(C' → logprob: -16.877016067504883
    9. 's' → logprob: -17.002016067504883
    10. '(len' → logprob: -17.002016067504883

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ' )' → logprob: -12.125017166137695
    3. '(S' → logprob: -12.375017166137695
    4. ')
' → logprob: -12.750017166137695
    5. '(' → logprob: -13.250017166137695
    6. '()' → logprob: -13.625017166137695
    7. '())' → logprob: -14.500017166137695
    8. '))' → logprob: -15.000017166137695
    9. ' ' → logprob: -15.125017166137695
    10. ')

' → logprob: -15.500017166137695

Token 121: 'tree' (ID: 19816)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08809355646371841
    2. 'nodes' → logprob: -3.0880935192108154
    3. 'pq' → logprob: -3.8380935192108154
    4. 'h' → logprob: -5.2130937576293945
    5. 'q' → logprob: -5.3380937576293945
    6. 'queue' → logprob: -5.5880937576293945
    7. ' heap' → logprob: -6.5880937576293945
    8. 'hq' → logprob: -6.8380937576293945
    9. '```' → logprob: -8.213093757629395
    10. 'Q' → logprob: -8.713093757629395

Token 122: '_dic' (ID: 95466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10058781504631042
    2. '=' → logprob: -2.350587844848633
    3. '=[]' → logprob: -8.225587844848633
    4. '_nodes' → logprob: -9.475587844848633
    5. 's' → logprob: -11.475587844848633
    6. ' ' → logprob: -12.350587844848633
    7. 'nodes' → logprob: -12.350587844848633
    8. 'heap' → logprob: -12.475587844848633
    9. '=[]
' → logprob: -12.975587844848633
    10. 'q' → logprob: -13.100587844848633

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815397381782532
    2. '=' → logprob: -1.4065396785736084
    3. '={}' → logprob: -8.406539916992188
    4. ',' → logprob: -9.531539916992188
    5. ')' → logprob: -10.906539916992188
    6. '[' → logprob: -11.156539916992188
    7. '=[]' → logprob: -11.281539916992188
    8. '{' → logprob: -11.531539916992188
    9. '={' → logprob: -11.531539916992188
    10. '(' → logprob: -13.031539916992188

Token 124: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.02986225299537182
    2. '{' → logprob: -3.52986216545105
    3. ' {}' → logprob: -9.779862403869629
    4. 'dict' → logprob: -10.154862403869629
    5. ' {' → logprob: -11.654862403869629
    6. '{
' → logprob: -13.404862403869629
    7. '{i' → logprob: -13.529862403869629
    8. '{s' → logprob: -13.779862403869629
    9. '{id' → logprob: -13.904862403869629
    10. '[]' → logprob: -14.404862403869629

Token 125: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03056257776916027
    2. 'heap' → logprob: -3.53056263923645
    3. 'pq' → logprob: -7.655562400817871
    4. ' for' → logprob: -8.280562400817871
    5. 'queue' → logprob: -10.280562400817871
    6. 'nodes' → logprob: -11.030562400817871
    7. ' heap' → logprob: -11.655562400817871
    8. 'while' → logprob: -12.030562400817871
    9. 'hq' → logprob: -12.405562400817871
    10. 'q' → logprob: -12.905562400817871

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2972889840602875
    2. '=' → logprob: -1.6722890138626099
    3. 'e' → logprob: -2.7972888946533203
    4. '=[]' → logprob: -4.92228889465332
    5. 'p' → logprob: -7.79728889465332
    6. '=[]
' → logprob: -8.67228889465332
    7. '   ' → logprob: -9.29728889465332
    8. 'heap' → logprob: -9.42228889465332
    9. '=[' → logprob: -9.42228889465332
    10. ' ' → logprob: -10.17228889465332

Token 127: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006716913543641567
    2. ' []' → logprob: -5.006716728210449
    3. '[' → logprob: -14.00671672821045
    4. '[]
' → logprob: -14.50671672821045
    5. '[]}' → logprob: -15.75671672821045
    6. '[],' → logprob: -17.006717681884766
    7. '[]

' → logprob: -17.381717681884766
    8. '[]>' → logprob: -17.881717681884766
    9. '[])' → logprob: -18.756717681884766
    10. ' [' → logprob: -19.131717681884766

Token 128: 'num' (ID: 4571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5716304410016164e-05
    2. ' for' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -15.250035285949707
    4. '```' → logprob: -19.250036239624023
    5. 'For' → logprob: -19.375036239624023
    6. '#' → logprob: -19.375036239624023
    7. '[' → logprob: -19.375036239624023
    8. '	for' → logprob: -20.125036239624023
    9. '
' → logprob: -20.500036239624023
    10. ')' → logprob: -20.750036239624023

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19750267267227173
    2. '_nodes' → logprob: -2.572502613067627
    3. '=' → logprob: -2.822502613067627
    4. 's' → logprob: -4.322502613067627
    5. '_tokens' → logprob: -4.322502613067627
    6. '_chars' → logprob: -5.197502613067627
    7. '_letters' → logprob: -5.822502613067627
    8. '_items' → logprob: -6.072502613067627
    9. '_entries' → logprob: -7.447502613067627
    10. '_of' → logprob: -7.572502613067627

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03847449645400047
    2. 'len' → logprob: -3.5384745597839355
    3. ' ' → logprob: -4.9134745597839355
    4. ' len' → logprob: -7.1634745597839355
    5. '1' → logprob: -7.5384745597839355
    6. '(len' → logprob: -12.038474082946777
    7. '[len' → logprob: -12.288474082946777
    8. '[' → logprob: -12.288474082946777
    9. '2' → logprob: -12.538474082946777
    10. 'sum' → logprob: -13.038474082946777

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22926683723926544
    2. 'len' → logprob: -1.604266881942749
    3. '1' → logprob: -5.60426664352417
    4. '[' → logprob: -9.604267120361328
    5. '-' → logprob: -10.604267120361328
    6. '[len' → logprob: -11.104267120361328
    7. 'sum' → logprob: -11.479267120361328
    8. ' len' → logprob: -11.479267120361328
    9. ' ' → logprob: -11.604267120361328
    10. '2' → logprob: -11.979267120361328

Token 132: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005335385911166668
    2. ' for' → logprob: -5.255335330963135
    3. '<|end|>' → logprob: -9.380335807800293
    4. ')' → logprob: -11.630335807800293
    5. '
' → logprob: -13.255335807800293
    6. ' ' → logprob: -13.880335807800293
    7. '#' → logprob: -14.005335807800293
    8. ':' → logprob: -14.130335807800293
    9. '[' → logprob: -14.255335807800293
    10. 'd' → logprob: -14.505335807800293

Token 133: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015872348740231246
    2. ' for' → logprob: -8.750158309936523
    3. '#' → logprob: -16.250158309936523
    4. '<|end|>' → logprob: -16.625158309936523
    5. '[' → logprob: -17.750158309936523
    6. 'For' → logprob: -18.000158309936523
    7. '
' → logprob: -18.250158309936523
    8. ')' → logprob: -18.625158309936523
    9. 'while' → logprob: -19.500158309936523
    10. 'from' → logprob: -19.625158309936523

Token 134: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1543397903442383
    2. ' key' → logprob: -1.2793397903442383
    3. ' k' → logprob: -1.6543397903442383
    4. ' ch' → logprob: -2.2793397903442383
    5. ' char' → logprob: -2.7793397903442383
    6. 'char' → logprob: -4.154339790344238
    7. 'key' → logprob: -4.779339790344238
    8. 'k' → logprob: -4.904339790344238
    9. 'ch' → logprob: -5.029339790344238
    10. 'c' → logprob: -5.404339790344238

Token 135: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06565895676612854
    2. ',d' → logprob: -3.0656590461730957
    3. ' ,' → logprob: -4.315659046173096
    4. ' in' → logprob: -6.565659046173096
    5. 'in' → logprob: -6.565659046173096
    6. ',(' → logprob: -8.690658569335938
    7. ',s' → logprob: -9.065658569335938
    8. ',S' → logprob: -9.065658569335938
    9. 'd' → logprob: -9.440658569335938
    10. ',n' → logprob: -10.565658569335938

Token 136: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20239071547985077
    2. ' d' → logprob: -1.7023906707763672
    3. 'range' → logprob: -7.452390670776367
    4. ' range' → logprob: -7.952390670776367
    5. ' ' → logprob: -10.952390670776367
    6. 'sorted' → logprob: -12.327390670776367
    7. '(d' → logprob: -12.577390670776367
    8. ' sorted' → logprob: -12.577390670776367
    9. '   ' → logprob: -12.577390670776367
    10. ')d' → logprob: -12.827390670776367

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3954116404056549
    2. '.items' → logprob: -1.5204116106033325
    3. '_items' → logprob: -3.145411729812622
    4. 'items' → logprob: -3.270411729812622
    5. '.keys' → logprob: -4.270411491394043
    6. '.elements' → logprob: -5.895411491394043
    7. '.values' → logprob: -6.020411491394043
    8. '.' → logprob: -6.145411491394043
    9. '_elements' → logprob: -6.645411491394043
    10. 'elements' → logprob: -7.270411491394043

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.747418224811554
    2. ' he' → logprob: -0.872418224811554
    3. ' node' → logprob: -2.247418165206909
    4. ' n' → logprob: -7.247418403625488
    5. ' heap' → logprob: -7.247418403625488
    6. 'node' → logprob: -8.497418403625488
    7. ' tree' → logprob: -8.622418403625488
    8. ' if' → logprob: -8.747418403625488
    9. 'he' → logprob: -8.747418403625488
    10. '    
' → logprob: -8.872418403625488

Token 139: ' tree' (ID: 8165)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.18296436965465546
    2. '   ' → logprob: -2.432964324951172
    3. ' he' → logprob: -3.307964324951172
    4. 'node' → logprob: -3.932964324951172
    5. ' num' → logprob: -4.682964324951172
    6. ' n' → logprob: -5.182964324951172
    7. ' heap' → logprob: -5.557964324951172
    8. ' tree' → logprob: -6.432964324951172
    9. 'n' → logprob: -7.182964324951172
    10. ' h' → logprob: -7.807964324951172

Token 140: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -0.00016516048344783485
    2. '_' → logprob: -8.750164985656738
    3. '_d' → logprob: -12.875164985656738
    4. '_di' → logprob: -13.500164985656738
    5. ' _' → logprob: -14.625164985656738
    6. 'dic' → logprob: -14.750164985656738
    7. '[_' → logprob: -15.000164985656738
    8. '_dict' → logprob: -15.250164985656738
    9. '_=' → logprob: -15.875164985656738
    10. '__' → logprob: -16.000165939331055

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003159201005473733
    2. '[' → logprob: -8.12531566619873
    3. ' [' → logprob: -11.75031566619873
    4. '[S' → logprob: -12.00031566619873
    5. '   ' → logprob: -13.87531566619873
    6. '
' → logprob: -14.00031566619873
    7. '[d' → logprob: -14.62531566619873
    8. '[str' → logprob: -14.87531566619873
    9. '[
' → logprob: -15.12531566619873
    10. '[token' → logprob: -15.12531566619873

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005647073267027736
    2. ' ]' → logprob: -7.8755645751953125
    3. ']=' → logprob: -8.625564575195312
    4. '=' → logprob: -13.000564575195312
    5. ',' → logprob: -13.875564575195312
    6. ')' → logprob: -14.000564575195312
    7. ' =' → logprob: -14.375564575195312
    8. ']=(' → logprob: -15.875564575195312
    9. '[' → logprob: -16.250564575195312
    10. '   ' → logprob: -16.750564575195312

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868817985057831
    2. ' =' → logprob: -1.1368818283081055
    3. ' ' → logprob: -13.011881828308105
    4. '=

' → logprob: -13.136881828308105
    5. '=num' → logprob: -13.261881828308105
    6. ',' → logprob: -14.011881828308105
    7. '=[' → logprob: -14.261881828308105
    8. ']' → logprob: -14.761881828308105
    9. '=
' → logprob: -14.886881828308105
    10. '=[]' → logprob: -15.011881828308105

Token 144: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.009759632870554924
    2. ' Node' → logprob: -4.634759426116943
    3. '   ' → logprob: -13.634759902954102
    4. '	Node' → logprob: -14.009759902954102
    5. '(Node' → logprob: -14.259759902954102
    6. '_Node' → logprob: -15.634759902954102
    7. '[' → logprob: -16.0097599029541
    8. ' ' → logprob: -16.1347599029541
    9. 'No' → logprob: -16.1347599029541
    10. 'None' → logprob: -16.2597599029541

Token 145: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.015363940969109535
    2. '(' → logprob: -4.265364170074463
    3. '((' → logprob: -6.890364170074463
    4. '(C' → logprob: -9.640363693237305
    5. ' (' → logprob: -10.015363693237305
    6. '(counter' → logprob: -11.015363693237305
    7. 'd' → logprob: -11.015363693237305
    8. '(num' → logprob: -11.640363693237305
    9. '(
' → logprob: -12.390363693237305
    10. '(weight' → logprob: -12.890363693237305

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.375000953674316
    3. ')' → logprob: -15.375000953674316
    4. 'i' → logprob: -15.750000953674316
    5. ' [' → logprob: -16.250001907348633
    6. '[d' → logprob: -17.250001907348633
    7. '[
' → logprob: -17.250001907348633
    8. '
' → logprob: -18.000001907348633
    9. '[S' → logprob: -18.125001907348633
    10. 'd' → logprob: -18.375001907348633

Token 147: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02234264649450779
    2. '])
' → logprob: -3.8973426818847656
    3. '[i' → logprob: -6.897342681884766
    4. ')' → logprob: -7.522342681884766
    5. ']' → logprob: -9.397342681884766
    6. ' ])' → logprob: -9.772342681884766
    7. '])
' → logprob: -10.147342681884766
    8. ')
' → logprob: -10.647342681884766
    9. '])

' → logprob: -12.022342681884766
    10. '   ' → logprob: -12.272342681884766

Token 148: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.464903324842453
    2. '   ' → logprob: -1.0899033546447754
    3. ' he' → logprob: -3.3399033546447754
    4. 'for' → logprob: -10.714902877807617
    5. ' for' → logprob: -10.964902877807617
    6. 'heap' → logprob: -11.089902877807617
    7. '    
' → logprob: -11.964902877807617
    8. '  ' → logprob: -12.089902877807617
    9. 'num' → logprob: -12.214902877807617
    10. '0' → logprob: -12.339902877807617

Token 149: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0006931356037966907
    2. 'num' → logprob: -7.625693321228027
    3. ' he' → logprob: -8.875693321228027
    4. '   ' → logprob: -10.000693321228027
    5. 'h' → logprob: -12.375693321228027
    6. '    
' → logprob: -12.375693321228027
    7. 'node' → logprob: -12.875693321228027
    8. 'if' → logprob: -13.250693321228027
    9. '  ' → logprob: -13.750693321228027
    10. ' ' → logprob: -13.875693321228027

Token 150: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.787507714354433e-05
    2. 'ap' → logprob: -10.00004768371582
    3. ' app' → logprob: -13.87504768371582
    4. 'pp' → logprob: -14.25004768371582
    5. 'he' → logprob: -15.75004768371582
    6. 'append' → logprob: -15.87504768371582
    7. '```' → logprob: -15.87504768371582
    8. 'a' → logprob: -16.12504768371582
    9. 'appen' → logprob: -16.62504768371582
    10. 'ап' → logprob: -17.37504768371582

Token 151: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.107425062713446e-06
    2. 'push' → logprob: -12.125006675720215
    3. 'u' → logprob: -14.375006675720215
    4. 'op' → logprob: -14.750006675720215
    5. 'us' → logprob: -15.125006675720215
    6. 'sh' → logprob: -15.625006675720215
    7. 'p' → logprob: -16.62500762939453
    8. '   ' → logprob: -17.12500762939453
    9. 'ut' → logprob: -17.12500762939453
    10. 'he' → logprob: -17.25000762939453

Token 152: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ',h' → logprob: -17.375003814697266
    4. ' (' → logprob: -17.375003814697266
    5. '(s' → logprob: -19.000003814697266
    6. '```' → logprob: -19.375003814697266
    7. '(heap' → logprob: -19.500003814697266
    8. '(
' → logprob: -20.125003814697266
    9. '[h' → logprob: -20.500003814697266
    10. ',' → logprob: -20.875003814697266

Token 153: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.003910149913281202
    2. '(' → logprob: -6.003910064697266
    3. '((' → logprob: -7.128910064697266
    4. ')' → logprob: -8.753910064697266
    5. ',' → logprob: -8.753910064697266
    6. '(tree' → logprob: -9.128910064697266
    7. ',h' → logprob: -9.378910064697266
    8. ' (' → logprob: -9.503910064697266
    9. ',(' → logprob: -11.003910064697266
    10. '(heap' → logprob: -11.128910064697266

Token 154: 'tree' (ID: 19816)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.6489790081977844
    2. 'tree' → logprob: -0.7739790081977844
    3. ' (' → logprob: -5.023979187011719
    4. '(d' → logprob: -5.148979187011719
    5. ' tree' → logprob: -6.023979187011719
    6. '(t' → logprob: -8.023979187011719
    7. '(' → logprob: -8.148979187011719
    8. '(node' → logprob: -8.648979187011719
    9. 'd' → logprob: -8.898979187011719
    10. 'node' → logprob: -9.023979187011719

Token 155: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -0.00017231269157491624
    2. 'dic' → logprob: -9.75017261505127
    3. 'Dic' → logprob: -10.37517261505127
    4. '(dic' → logprob: -10.50017261505127
    5. 'push' → logprob: -11.00017261505127
    6. 'ush' → logprob: -11.37517261505127
    7. '[' → logprob: -12.50017261505127
    8. 'h' → logprob: -12.50017261505127
    9. '_dict' → logprob: -13.12517261505127
    10. 'ic' → logprob: -13.25017261505127

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7491250875755213e-05
    2. '[' → logprob: -10.625027656555176
    3. '[
' → logprob: -14.125027656555176
    4. '[d' → logprob: -14.500027656555176
    5. 'i' → logprob: -14.625027656555176
    6. ' [' → logprob: -14.750027656555176
    7. '[S' → logprob: -15.875027656555176
    8. ')' → logprob: -16.25002670288086
    9. ')[' → logprob: -16.37502670288086
    10. ',i' → logprob: -17.00002670288086

Token 157: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022570860164705664
    2. '))' → logprob: -8.625226020812988
    3. ' )' → logprob: -10.875226020812988
    4. '])' → logprob: -11.125226020812988
    5. ')
' → logprob: -12.000226020812988
    6. '})' → logprob: -13.375226020812988
    7. ',)' → logprob: -14.000226020812988
    8. '>)' → logprob: -14.125226020812988
    9. ')i' → logprob: -14.250226020812988
    10. '),' → logprob: -14.875226020812988

Token 158: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0011555780656635761
    2. ' while' → logprob: -7.626155376434326
    3. 'for' → logprob: -7.876155376434326
    4. ')' → logprob: -9.126155853271484
    5. '
' → logprob: -9.126155853271484
    6. '+' → logprob: -11.376155853271484
    7. '    
' → logprob: -11.501155853271484
    8. 'wh' → logprob: -11.626155853271484
    9. 'if' → logprob: -11.751155853271484
    10. '  
' → logprob: -12.251155853271484

Token 159: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47409045696258545
    2. ' len' → logprob: -0.9740904569625854
    3. '(len' → logprob: -11.224090576171875
    4. ' ' → logprob: -17.474090576171875
    5. '	len' → logprob: -17.974090576171875
    6. '[len' → logprob: -19.224090576171875
    7. ',len' → logprob: -19.224090576171875
    8. '   ' → logprob: -19.349090576171875
    9. '=len' → logprob: -20.224090576171875
    10. '<len' → logprob: -20.724090576171875

Token 160: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.981667537620524e-06
    2. 'h' → logprob: -13.625001907348633
    3. '(' → logprob: -14.500001907348633
    4. ')' → logprob: -16.500001907348633
    5. ' (' → logprob: -16.625001907348633
    6. ' h' → logprob: -18.125001907348633
    7. '(s' → logprob: -18.375001907348633
    8. '<h' → logprob: -19.625001907348633
    9. '	h' → logprob: -19.750001907348633
    10. ')(' → logprob: -19.750001907348633

Token 161: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7826710343360901
    2. ' >' → logprob: -1.2826709747314453
    3. ')' → logprob: -1.4076709747314453
    4. ')>' → logprob: -3.9076709747314453
    5. '()>' → logprob: -7.907670974731445
    6. ' )' → logprob: -8.157670974731445
    7. '()' → logprob: -10.282670974731445
    8. ' ' → logprob: -11.907670974731445
    9. '">' → logprob: -12.657670974731445
    10. '<|end|>' → logprob: -12.907670974731445

Token 162: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25243932008743286
    2. ' >' → logprob: -1.502439260482788
    3. ')' → logprob: -7.752439498901367
    4. ')>' → logprob: -9.627439498901367
    5. '()>' → logprob: -11.752439498901367
    6. ' )' → logprob: -13.377439498901367
    7. ' >
' → logprob: -13.752439498901367
    8. ' ' → logprob: -14.002439498901367
    9. ' ' → logprob: -14.752439498901367
    10. '">' → logprob: -14.752439498901367

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036023214925080538
    2. ' ' → logprob: -5.628602504730225
    3. '
' → logprob: -14.316102027893066
    4. '   ' → logprob: -15.066102027893066
    5. ')' → logprob: -15.316102027893066
    6. '  ' → logprob: -15.878602027893066
    7. '>' → logprob: -16.066102981567383
    8. ' ' → logprob: -16.191102981567383
    9. '

' → logprob: -16.316102981567383
    10. '۱' → logprob: -16.566102981567383

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.625036239624023
    5. '2' → logprob: -16.750036239624023
    6. '
' → logprob: -17.500036239624023
    7. '۱' → logprob: -18.812536239624023
    8. '0' → logprob: -18.875036239624023
    9. '  ' → logprob: -18.937536239624023
    10. '```' → logprob: -19.000036239624023

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006544962525367737
    2. '):
' → logprob: -5.256545066833496
    3. ')' → logprob: -7.506545066833496
    4. ':' → logprob: -7.631545066833496
    5. ' ):' → logprob: -8.256545066833496
    6. '):
' → logprob: -11.631545066833496
    7. ' ):
' → logprob: -13.131545066833496
    8. ',' → logprob: -13.756545066833496
    9. ' )' → logprob: -14.131545066833496
    10. ' :' → logprob: -14.381545066833496

Token 166: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9966909885406494
    2. 'n' → logprob: -1.7466909885406494
    3. ' n' → logprob: -1.8716909885406494
    4. 'a' → logprob: -2.3716909885406494
    5. ' x' → logprob: -2.7466909885406494
    6. '   ' → logprob: -3.6216909885406494
    7. 'x' → logprob: -3.6216909885406494
    8. ' left' → logprob: -3.7466909885406494
    9. 'left' → logprob: -3.8716909885406494
    10. ' l' → logprob: -3.9966909885406494

Token 167: ' tmp' (ID: 8919)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4293570518493652
    2. ' a' → logprob: -1.9293570518493652
    3. 'x' → logprob: -2.1793570518493652
    4. ' n' → logprob: -2.3043570518493652
    5. 'n' → logprob: -2.4293570518493652
    6. ' x' → logprob: -2.5543570518493652
    7. 'left' → logprob: -2.6793570518493652
    8. ' left' → logprob: -2.9293570518493652
    9. ' l' → logprob: -3.6793570518493652
    10. 'node' → logprob: -3.6793570518493652

Token 168: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1478748470544815
    2. ' =' → logprob: -2.7728748321533203
    3. '_' → logprob: -2.8978748321533203
    4. '=' → logprob: -4.02287483215332
    5. 'a' → logprob: -6.89787483215332
    6. '_node' → logprob: -7.64787483215332
    7. '_left' → logprob: -9.14787483215332
    8. '_a' → logprob: -9.52287483215332
    9. '_=' → logprob: -10.02287483215332
    10. ' ' → logprob: -10.27287483215332

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126982182264328
    2. '=' → logprob: -2.1269822120666504
    3. ',' → logprob: -10.251981735229492
    4. ' ' → logprob: -11.501981735229492
    5. ' =
' → logprob: -12.751981735229492
    6. '0' → logprob: -13.251981735229492
    7. 'a' → logprob: -13.501981735229492
    8. '1' → logprob: -14.376981735229492
    9. '_' → logprob: -14.626981735229492
    10. '=
' → logprob: -15.001981735229492

Token 170: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005929154809564352
    2. ' he' → logprob: -5.130928993225098
    3. 'heap' → logprob: -14.505928993225098
    4. 'h' → logprob: -17.005929946899414
    5. '.he' → logprob: -17.630929946899414
    6. ' ' → logprob: -17.755929946899414
    7. '   ' → logprob: -17.880929946899414
    8. '_he' → logprob: -18.255929946899414
    9. 'He' → logprob: -18.505929946899414
    10. 'heme' → logprob: -18.755929946899414

Token 171: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.011884094215929508
    2. 'pop' → logprob: -5.2618842124938965
    3. 'pp' → logprob: -5.3868842124938965
    4. 'op' → logprob: -6.3868842124938965
    5. 'ap' → logprob: -8.511883735656738
    6. 'p' → logprob: -9.761883735656738
    7. 'h' → logprob: -10.011883735656738
    8. 'mp' → logprob: -11.011883735656738
    9. 'he' → logprob: -11.261883735656738
    10. '```' → logprob: -11.761883735656738

Token 172: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.4849443838757e-06
    2. 'ush' → logprob: -13.125004768371582
    3. 'o' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.500004768371582
    5. 'pop' → logprob: -15.500004768371582
    6. 'оп' → logprob: -15.625004768371582
    7. '[' → logprob: -16.250003814697266
    8. '0' → logprob: -16.375003814697266
    9. ' op' → logprob: -16.750003814697266
    10. 'p' → logprob: -17.000003814697266

Token 173: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. 'h' → logprob: -15.000006675720215
    4. ',h' → logprob: -16.7500057220459
    5. '(
' → logprob: -18.2500057220459
    6. '<|end|>' → logprob: -18.6250057220459
    7. '(heap' → logprob: -19.0000057220459
    8. ' h' → logprob: -19.2500057220459
    9. '(s' → logprob: -19.6250057220459
    10. '/h' → logprob: -19.6250057220459

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1004842147231102
    2. ')' → logprob: -2.3504841327667236
    3. ')
' → logprob: -8.725483894348145
    4. ' )
' → logprob: -9.225483894348145
    5. ')

' → logprob: -11.350483894348145
    6. ' )' → logprob: -12.975483894348145
    7. '())
' → logprob: -13.350483894348145
    8. '()
' → logprob: -15.475483894348145
    9. 'tmp' → logprob: -15.475483894348145
    10. '   ' → logprob: -15.725483894348145

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06404207646846771
    2. '
' → logprob: -2.939042091369629
    3. 'tmp' → logprob: -4.939042091369629
    4. ' tmp' → logprob: -6.939042091369629
    5. '
' → logprob: -8.189042091369629
    6. '    
' → logprob: -8.189042091369629
    7. ' 
' → logprob: -9.064042091369629
    8. '   
' → logprob: -9.564042091369629
    9. ' ' → logprob: -9.814042091369629
    10. '  
' → logprob: -9.814042091369629

Token 176: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.20142777264118195
    2. ' tmp' → logprob: -1.7014278173446655
    3. 'temp' → logprob: -12.451427459716797
    4. '	tmp' → logprob: -12.451427459716797
    5. '_tmp' → logprob: -13.576427459716797
    6. '
' → logprob: -13.826427459716797
    7. '   ' → logprob: -13.826427459716797
    8. ' 
' → logprob: -13.951427459716797
    9. '(tmp' → logprob: -14.326427459716797
    10. ' temp' → logprob: -14.826427459716797

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '=' → logprob: -14.750000953674316
    3. '_' → logprob: -15.875000953674316
    4. ' =' → logprob: -16.75
    5. ' ' → logprob: -16.75
    6. '  ' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '0' → logprob: -19.75
    9. '```' → logprob: -20.375
    10. 'a' → logprob: -21.0

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889188081026077
    2. '=' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.07889175415039
    4. ')' → logprob: -17.70389175415039
    5. ' =
' → logprob: -17.95389175415039
    6. ' ' → logprob: -18.82889175415039
    7. ',' → logprob: -19.07889175415039
    8. '(' → logprob: -19.07889175415039
    9. '  ' → logprob: -19.07889175415039
    10. '   ' → logprob: -19.20389175415039

Token 179: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5759599804878235
    2. ' he' → logprob: -0.8259599804878235
    3. 'heap' → logprob: -11.325960159301758
    4. ' ' → logprob: -12.200960159301758
    5. '   ' → logprob: -13.575960159301758
    6. ' heap' → logprob: -14.450960159301758
    7. ' ' → logprob: -14.825960159301758
    8. '  ' → logprob: -14.950960159301758
    9. 'h' → logprob: -15.763460159301758
    10. '.he' → logprob: -16.013460159301758

Token 180: 'app' (ID: 903)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.23355107009410858
    2. 'app' → logprob: -2.108551025390625
    3. 'op' → logprob: -2.483551025390625
    4. 'p' → logprob: -6.233551025390625
    5. 'ap' → logprob: -7.358551025390625
    6. 'pp' → logprob: -7.983551025390625
    7. '[' → logprob: -8.858551025390625
    8. '0' → logprob: -8.983551025390625
    9. '   ' → logprob: -10.108551025390625
    10. 'he' → logprob: -10.483551025390625

Token 181: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.16078020632266998
    2. 'ush' → logprob: -1.9107801914215088
    3. 'pop' → logprob: -7.660780429840088
    4. 'p' → logprob: -9.91077995300293
    5. 'push' → logprob: -11.53577995300293
    6. 'sh' → logprob: -11.66077995300293
    7. '   ' → logprob: -12.03577995300293
    8. '[' → logprob: -12.16077995300293
    9. '```' → logprob: -13.78577995300293
    10. '  ' → logprob: -14.28577995300293

Token 182: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'h' → logprob: -16.875
    4. ',h' → logprob: -17.875
    5. '[h' → logprob: -18.125
    6. '<|end|>' → logprob: -18.25
    7. ' h' → logprob: -19.125
    8. ' (' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. '(
' → logprob: -19.875

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015991552209015936
    2. ')
' → logprob: -8.750160217285156
    3. ' )' → logprob: -13.875160217285156
    4. ')
' → logprob: -15.125160217285156
    5. '))' → logprob: -16.250160217285156
    6. '   ' → logprob: -16.750160217285156
    7. ')`' → logprob: -17.125160217285156
    8. ')

' → logprob: -17.750160217285156
    9. ')#' → logprob: -18.000160217285156
    10. ')a' → logprob: -18.250160217285156

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005113297956995666
    2. '
' → logprob: -7.875511169433594
    3. '    
' → logprob: -9.125511169433594
    4. ' new' → logprob: -12.500511169433594
    5. 'new' → logprob: -12.625511169433594
    6. '   
' → logprob: -12.875511169433594
    7. 'tmp' → logprob: -13.250511169433594
    8. '  ' → logprob: -13.375511169433594
    9. ')' → logprob: -13.500511169433594
    10. '    ' → logprob: -13.875511169433594

Token 185: ' tree' (ID: 8165)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8452137112617493
    2. 'new' → logprob: -0.9702137112617493
    3. 'tmp' → logprob: -2.5952136516571045
    4. ' node' → logprob: -3.0952136516571045
    5. 'parent' → logprob: -3.8452136516571045
    6. 'node' → logprob: -3.9702136516571045
    7. ' tmp' → logprob: -4.220213890075684
    8. ' parent' → logprob: -4.970213890075684
    9. ' merged' → logprob: -6.095213890075684
    10. 'merged' → logprob: -6.095213890075684

Token 186: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -0.03260847553610802
    2. '_node' → logprob: -3.9076085090637207
    3. ' =' → logprob: -5.532608509063721
    4. '_' → logprob: -5.532608509063721
    5. '0' → logprob: -6.157608509063721
    6. '=' → logprob: -6.782608509063721
    7. 'Dic' → logprob: -8.407608032226562
    8. 'dic' → logprob: -9.157608032226562
    9. '   ' → logprob: -9.407608032226562
    10. 'node' → logprob: -9.657608032226562

Token 187: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.9167330265045166
    2. '[' → logprob: -1.0417330265045166
    3. '[tmp' → logprob: -2.0417330265045166
    4. '[i' → logprob: -3.5417330265045166
    5. 'tmp' → logprob: -4.1667327880859375
    6. '['_' → logprob: -4.4167327880859375
    7. '['' → logprob: -4.7917327880859375
    8. '[f' → logprob: -5.0417327880859375
    9. '[temp' → logprob: -5.0417327880859375
    10. '[node' → logprob: -5.4167327880859375

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019159071380272508
    2. ']=' → logprob: -6.50191593170166
    3. ' ]' → logprob: -8.00191593170166
    4. '=' → logprob: -9.75191593170166
    5. ')' → logprob: -11.25191593170166
    6. ' =' → logprob: -12.12691593170166
    7. ' ' → logprob: -14.12691593170166
    8. '])' → logprob: -14.75191593170166
    9. ')]' → logprob: -15.50191593170166
    10. '   ' → logprob: -16.001914978027344

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.535224914550781
    4. ')' → logprob: -16.78522491455078
    5. '=create' → logprob: -17.53522491455078
    6. '=
' → logprob: -17.66022491455078
    7. ']' → logprob: -17.78522491455078
    8. '＝' → logprob: -17.91022491455078
    9. '=

' → logprob: -18.41022491455078
    10. ']=' → logprob: -18.91022491455078

Token 190: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.16023914515972137
    2. ' Node' → logprob: -1.9102391004562378
    3. '   ' → logprob: -11.660239219665527
    4. ' ' → logprob: -12.535239219665527
    5. '	Node' → logprob: -13.535239219665527
    6. '  ' → logprob: -15.160239219665527
    7. '.Node' → logprob: -15.285239219665527
    8. '_Node' → logprob: -15.285239219665527
    9. '(Node' → logprob: -15.535239219665527
    10. '_node' → logprob: -16.03523826599121

Token 191: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0001519325451226905
    2. '(' → logprob: -9.375151634216309
    3. 'tmp' → logprob: -9.625151634216309
    4. '((' → logprob: -14.875151634216309
    5. '(t' → logprob: -15.500151634216309
    6. ' tmp' → logprob: -16.125152587890625
    7. '(tm' → logprob: -16.250152587890625
    8. '	tmp' → logprob: -16.500152587890625
    9. '[tmp' → logprob: -17.125152587890625
    10. '(temp' → logprob: -17.625152587890625

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. 'weight' → logprob: -12.75000286102295
    3. '.weight' → logprob: -16.250003814697266
    4. 'get' → logprob: -17.000003814697266
    5. '.get' → logprob: -18.250003814697266
    6. ' weight' → logprob: -19.250003814697266
    7. '(weight' → logprob: -19.500003814697266
    8. ' ' → logprob: -19.750003814697266
    9. '_weight' → logprob: -20.000003814697266
    10. '.' → logprob: -20.250003814697266

Token 193: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.4744705855846405
    2. '.weight' → logprob: -0.9744706153869629
    3. '.' → logprob: -7.974470615386963
    4. 'weight' → logprob: -10.349470138549805
    5. ' .' → logprob: -11.599470138549805
    6. 'get' → logprob: -12.099470138549805
    7. '.weights' → logprob: -14.349470138549805
    8. '.frequency' → logprob: -14.724470138549805
    9. '   ' → logprob: -15.099470138549805
    10. ' weight' → logprob: -15.974470138549805

Token 194: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -3.4121114822482923e-06
    2. '_length' → logprob: -12.750003814697266
    3. 'weight' → logprob: -15.250003814697266
    4. '_we' → logprob: -15.875003814697266
    5. '_' → logprob: -17.375003814697266
    6. 'Weight' → logprob: -17.500003814697266
    7. '_w' → logprob: -18.125003814697266
    8. ' weight' → logprob: -18.500003814697266
    9. '_weights' → logprob: -20.000003814697266
    10. '_WEIGHT' → logprob: -20.000003814697266

Token 195: '()' (ID: 416)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.806810200214386
    2. ' +' → logprob: -0.806810200214386
    3. '()+' → logprob: -2.806810140609741
    4. '()' → logprob: -3.056810140609741
    5. ')+' → logprob: -12.93181037902832
    6. ')' → logprob: -13.68181037902832
    7. ' ()' → logprob: -13.80681037902832
    8. ' ' → logprob: -14.93181037902832
    9. ' ' → logprob: -14.93181037902832
    10. ' plus' → logprob: -15.18181037902832

Token 196: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407814860343933
    2. ' +' → logprob: -0.9740781784057617
    3. '[tmp' → logprob: -14.349078178405762
    4. ' ' → logprob: -15.849078178405762
    5. ' plus' → logprob: -15.849078178405762
    6. ' +
' → logprob: -16.724077224731445
    7. '+
' → logprob: -16.724077224731445
    8. ')+' → logprob: -16.974077224731445
    9. '()+' → logprob: -17.099077224731445
    10. '+t' → logprob: -17.099077224731445

Token 197: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.4740804135799408
    2. ' tmp' → logprob: -0.9740804433822632
    3. '(tmp' → logprob: -13.099080085754395
    4. '	tmp' → logprob: -14.349080085754395
    5. '/tmp' → logprob: -14.599080085754395
    6. ' ' → logprob: -16.09908103942871
    7. '_tmp' → logprob: -16.22408103942871
    8. '.tmp' → logprob: -16.84908103942871
    9. '$tmp' → logprob: -16.84908103942871
    10. ' ' → logprob: -16.97408103942871

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '.get' → logprob: -17.5
    4. '<|end|>' → logprob: -18.125
    5. '.' → logprob: -18.25
    6. '   ' → logprob: -18.5
    7. '```' → logprob: -19.3125
    8. 'get' → logprob: -19.3125
    9. '  ' → logprob: -19.5625
    10. '
' → logprob: -19.6875

Token 199: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -11.87501049041748
    3. '().' → logprob: -13.37501049041748
    4. ' .' → logprob: -14.12501049041748
    5. 'get' → logprob: -14.12501049041748
    6. ').' → logprob: -17.000009536743164
    7. '(get' → logprob: -18.500009536743164
    8. '_get' → logprob: -18.500009536743164
    9. '.
' → logprob: -18.875009536743164
    10. ' get' → logprob: -18.875009536743164

Token 200: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.001632451661862433
    2. 'weight' → logprob: -6.501632213592529
    3. 'Weight' → logprob: -9.001632690429688
    4. 'weig' → logprob: -12.876632690429688
    5. 'We' → logprob: -14.126632690429688
    6. '_w' → logprob: -14.501632690429688
    7. 'w' → logprob: -14.501632690429688
    8. 'we' → logprob: -14.501632690429688
    9. '_we' → logprob: -14.751632690429688
    10. '_WEIGHT' → logprob: -15.126632690429688

Token 201: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029797818511724472
    2. ')
' → logprob: -3.5297977924346924
    3. ')
' → logprob: -10.279797554016113
    4. '   ' → logprob: -11.654797554016113
    5. ' )' → logprob: -13.279797554016113
    6. ')

' → logprob: -13.654797554016113
    7. ' )
' → logprob: -14.904797554016113
    8. '))' → logprob: -14.904797554016113
    9. ' ' → logprob: -15.529797554016113
    10. '),' → logprob: -16.15479850769043

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0762948989868164
    2. ' he' → logprob: -3.5762948989868164
    3. ')' → logprob: -3.8262948989868164
    4. ' ' → logprob: -4.701294898986816
    5. 'he' → logprob: -5.201294898986816
    6. '    ' → logprob: -5.576294898986816
    7. ' )' → logprob: -6.076294898986816
    8. '<|end|>' → logprob: -6.701294898986816
    9. '  ' → logprob: -7.951294898986816
    10. '    
' → logprob: -8.076294898986816

Token 203: ' tmp' (ID: 8919)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.024833841249346733
    2. 'num' → logprob: -4.024833679199219
    3. 'tmp' (adapté à ' tmp') → logprob: -5.274833679199219
    4. ' tree' → logprob: -7.149833679199219
    5. 'he' → logprob: -7.524833679199219
    6. '   ' → logprob: -9.274833679199219
    7. 'tre' → logprob: -10.274833679199219
    8. ' ' → logprob: -10.774833679199219
    9. ')' → logprob: -11.399833679199219
    10. ' num' → logprob: -11.649833679199219

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8921695047756657e-05
    2. 'tree' → logprob: -11.125028610229492
    3. '.' → logprob: -12.500028610229492
    4. 'num' → logprob: -12.875028610229492
    5. '
' → logprob: -13.625028610229492
    6. 'tmp' → logprob: -13.750028610229492
    7. ' ' → logprob: -14.000028610229492
    8. '(tree' → logprob: -14.125028610229492
    9. 'set' → logprob: -14.750028610229492
    10. '.tree' → logprob: -14.750028610229492

Token 205: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00018399098189547658
    2. '.' → logprob: -9.250184059143066
    3. '.setdefault' → logprob: -9.500184059143066
    4. ' .' → logprob: -11.750184059143066
    5. '.s' → logprob: -12.875184059143066
    6. '.parent' → logprob: -14.000184059143066
    7. ').' → logprob: -15.125184059143066
    8. 'set' → logprob: -15.750184059143066
    9. '   ' → logprob: -16.00018310546875
    10. '..' → logprob: -16.12518310546875

Token 206: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -4.961759259458631e-06
    2. 'parent' → logprob: -12.250004768371582
    3. '_' → logprob: -16.5000057220459
    4. 'Parent' → logprob: -18.0000057220459
    5. ' parent' → logprob: -18.1250057220459
    6. '_par' → logprob: -18.1250057220459
    7. '(parent' → logprob: -19.8750057220459
    8. '_p' → logprob: -19.8750057220459
    9. '_PARENT' → logprob: -19.8750057220459
    10. ' _' → logprob: -21.2500057220459

Token 207: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.000009536743164
    3. 'tree' → logprob: -12.625009536743164
    4. '(Tree' → logprob: -16.375009536743164
    5. '(t' → logprob: -16.500009536743164
    6. '(
' → logprob: -17.125009536743164
    7. '((' → logprob: -17.250009536743164
    8. '	tree' → logprob: -17.500009536743164
    9. ' (' → logprob: -18.000009536743164
    10. '(tr' → logprob: -18.625009536743164

Token 208: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -1.1637164789135568e-05
    2. 'dic' → logprob: -11.625011444091797
    3. 'Dic' → logprob: -13.875011444091797
    4. '_' → logprob: -14.500011444091797
    5. '_cod' → logprob: -15.500011444091797
    6. '_dict' → logprob: -16.000011444091797
    7. '(dic' → logprob: -16.125011444091797
    8. '_di' → logprob: -16.125011444091797
    9. '_num' → logprob: -16.500011444091797

Token 209: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -1.0280383548888494e-06
    2. 'num' → logprob: -14.375000953674316
    3. '[' → logprob: -15.000000953674316
    4. '[
' → logprob: -18.250001907348633
    5. ',num' → logprob: -18.750001907348633
    6. ')[' → logprob: -18.875001907348633
    7. '[number' → logprob: -18.875001907348633
    8. ')' → logprob: -19.250001907348633
    9. '<num' → logprob: -19.250001907348633
    10. ' [' → logprob: -19.500001907348633

Token 210: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20145094394683838
    2. ')
' → logprob: -1.7014509439468384
    3. ')
' → logprob: -10.326451301574707
    4. ')

' → logprob: -12.701451301574707
    5. ' )
' → logprob: -14.826451301574707
    6. '   ' → logprob: -14.951451301574707
    7. ' ' → logprob: -15.076451301574707
    8. ' )' → logprob: -15.326451301574707
    9. '),' → logprob: -15.576451301574707
    10. ')`
' → logprob: -15.951451301574707

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7922874689102173
    2. ' 
' → logprob: -1.2922874689102173
    3. '    
' → logprob: -2.6672873497009277
    4. 'tmp' → logprob: -2.9172873497009277
    5. '   
' → logprob: -3.1672873497009277
    6. '
' → logprob: -3.6672873497009277
    7. ' tmp' → logprob: -3.9172873497009277
    8. '  
' → logprob: -4.042287349700928
    9. '<|end|>' → logprob: -4.042287349700928
    10. '     
' → logprob: -4.917287349700928

Token 212: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.007709312252700329
    2. ' tmp' → logprob: -4.882709503173828
    3. ' 
' → logprob: -10.132709503173828
    4. '(tmp' → logprob: -11.132709503173828
    5. '   ' → logprob: -11.632709503173828
    6. '[tmp' → logprob: -11.757709503173828
    7. '/tmp' → logprob: -12.007709503173828
    8. '	tmp' → logprob: -12.257709503173828
    9. ' ' → logprob: -12.257709503173828
    10. '.tmp' → logprob: -12.882709503173828

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -18.625
    3. '0' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '
' → logprob: -19.125
    6. ' ' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. '[' → logprob: -20.375
    9. '.' → logprob: -20.5
    10. '১' → logprob: -20.625

Token 214: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.000643691688310355
    2. '.' → logprob: -7.375643730163574
    3. '.setdefault' → logprob: -11.125643730163574
    4. ').' → logprob: -13.875643730163574
    5. ' .' → logprob: -13.875643730163574
    6. ')set' → logprob: -16.375642776489258
    7. 'set' → logprob: -16.375642776489258
    8. '.get' → logprob: -17.500642776489258
    9. '.
' → logprob: -17.625642776489258
    10. '.s' → logprob: -17.875642776489258

Token 215: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -7.505351095460355e-05
    2. 'parent' → logprob: -9.500075340270996
    3. 'Parent' → logprob: -16.62507438659668
    4. '_PARENT' → logprob: -17.00007438659668
    5. 'set' → logprob: -18.12507438659668
    6. '_' → logprob: -18.50007438659668
    7. '.parent' → logprob: -18.62507438659668
    8. '[parent' → logprob: -18.87507438659668
    9. '_child' → logprob: -19.25007438659668
    10. ' parent' → logprob: -19.37507438659668

Token 216: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.125003814697266
    3. '(tmp' → logprob: -14.375003814697266
    4. ' (' → logprob: -14.750003814697266
    5. 'tree' → logprob: -15.500003814697266
    6. '(t' → logprob: -16.375003814697266
    7. '(tr' → logprob: -17.875003814697266
    8. '(Tree' → logprob: -18.500003814697266
    9. '(
' → logprob: -18.625003814697266
    10. '	tree' → logprob: -19.000003814697266

Token 217: '_dic' (ID: 95466)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.03822119161486626
    2. '_dic' → logprob: -3.2882211208343506
    3. 'Dic' → logprob: -9.28822135925293
    4. 'dic' → logprob: -10.41322135925293
    5. '[' → logprob: -11.03822135925293
    6. 'num' → logprob: -11.41322135925293
    7. ',num' → logprob: -12.28822135925293
    8. '<num' → logprob: -12.28822135925293
    9. ' Dic' → logprob: -12.66322135925293
    10. '_num' → logprob: -13.16322135925293

Token 218: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -8.65707261255011e-06
    2. 'num' → logprob: -11.750008583068848
    3. ')' → logprob: -16.000009536743164
    4. ',num' → logprob: -16.000009536743164
    5. '<num' → logprob: -16.000009536743164
    6. '[' → logprob: -16.250009536743164
    7. '	num' → logprob: -16.750009536743164
    8. '[
' → logprob: -17.125009536743164
    9. '(num' → logprob: -17.500009536743164
    10. '=num' → logprob: -18.000009536743164

Token 219: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028071331325918436
    2. ')
' → logprob: -5.877807140350342
    3. '   ' → logprob: -14.002806663513184
    4. ' )' → logprob: -14.252806663513184
    5. ')
' → logprob: -15.377806663513184
    6. ')

' → logprob: -15.877806663513184
    7. '))' → logprob: -16.2528076171875
    8. ')`' → logprob: -16.7528076171875
    9. '})' → logprob: -16.8778076171875
    10. '),' → logprob: -17.3778076171875

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6465728878974915
    2. 'he' → logprob: -0.7715728878974915
    3. ' he' → logprob: -4.771573066711426
    4. ')' → logprob: -5.271573066711426
    5. '    ' → logprob: -9.271573066711426
    6. '  ' → logprob: -10.146573066711426
    7. '_he' → logprob: -10.646573066711426
    8. '```' → logprob: -10.646573066711426
    9. ' )' → logprob: -11.271573066711426
    10. ' ' → logprob: -11.396573066711426

Token 221: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.00025764419115148485
    2. ' he' → logprob: -8.37525749206543
    3. '   ' → logprob: -11.25025749206543
    4. 'num' → logprob: -11.25025749206543
    5. '```' → logprob: -15.12525749206543
    6. '  ' → logprob: -15.75025749206543
    7. 'h' → logprob: -15.75025749206543
    8. 'heap' → logprob: -16.12525749206543
    9. ' ' → logprob: -16.37525749206543
    10. 'hev' → logprob: -16.50025749206543

Token 222: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.60414821645827e-06
    2. 'ap' → logprob: -12.375004768371582
    3. ' app' → logprob: -15.875004768371582
    4. 'pp' → logprob: -16.250003814697266
    5. 'aps' → logprob: -17.375003814697266
    6. 'he' → logprob: -18.625003814697266
    7. 'a' → logprob: -18.875003814697266
    8. 'ап' → logprob: -19.125003814697266
    9. 'push' → logprob: -19.250003814697266
    10. 'appen' → logprob: -19.500003814697266

Token 223: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.128163257315464e-07
    2. 'sh' → logprob: -16.75
    3. 'push' → logprob: -16.875
    4. 'u' → logprob: -17.375
    5. '   ' → logprob: -17.875
    6. 'op' → logprob: -18.0
    7. '```' → logprob: -18.25
    8. '

' → logprob: -19.125
    9. 'us' → logprob: -19.5
    10. '
' → logprob: -19.625

Token 224: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.125
    3. 'h' → logprob: -18.5
    4. '(
' → logprob: -19.375
    5. ' (' → logprob: -20.5
    6. ',h' → logprob: -20.5
    7. '```' → logprob: -20.875
    8. '	h' → logprob: -21.75
    9. '[h' → logprob: -21.875
    10. ' h' → logprob: -22.125

Token 225: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.006936540361493826
    2. ',' → logprob: -5.881936550140381
    3. '(h' → logprob: -6.006936550140381
    4. '(' → logprob: -6.506936550140381
    5. '(heap' → logprob: -9.381936073303223
    6. ',h' → logprob: -9.881936073303223
    7. ')' → logprob: -10.756936073303223
    8. '(t' → logprob: -12.006936073303223
    9. '(
' → logprob: -13.131936073303223
    10. ',(' → logprob: -13.756936073303223

Token 226: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -3.79811754100956e-05
    2. ' tree' → logprob: -10.250038146972656
    3. '(tree' → logprob: -12.875038146972656
    4. '	tree' → logprob: -17.125038146972656
    5. ' ' → logprob: -20.000038146972656
    6. '   ' → logprob: -20.500038146972656
    7. '.tree' → logprob: -20.625038146972656
    8. 'Tree' → logprob: -20.750038146972656
    9. 'tre' → logprob: -21.250038146972656
    10. '/tree' → logprob: -21.375038146972656

Token 227: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -0.009087449871003628
    2. 'ush' → logprob: -5.259087562561035
    3. 'push' → logprob: -6.634087562561035
    4. 'op' → logprob: -7.134087562561035
    5. 'Dic' → logprob: -7.384087562561035
    6. 'dic' → logprob: -7.634087562561035
    7. 'pop' → logprob: -8.384087562561035
    8. 'ic' → logprob: -10.134087562561035
    9. '[' → logprob: -10.259087562561035
    10. 'q' → logprob: -10.259087562561035

Token 228: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -3.292907877039397e-06
    2. 'num' → logprob: -12.75000286102295
    3. '[' → logprob: -15.37500286102295
    4. '<num' → logprob: -17.125003814697266
    5. ',num' → logprob: -17.750003814697266
    6. ' num' → logprob: -18.250003814697266
    7. ')[' → logprob: -18.500003814697266
    8. '[
' → logprob: -18.750003814697266
    9. '(num' → logprob: -18.875003814697266
    10. '	num' → logprob: -19.125003814697266

Token 229: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17317482829093933
    2. ')' → logprob: -2.4231748580932617
    3. '])
' → logprob: -3.0481748580932617
    4. ')
' → logprob: -3.7981748580932617
    5. '[num' → logprob: -8.798174858093262
    6. ']' → logprob: -9.423174858093262
    7. ' ' → logprob: -10.173174858093262
    8. 'num' → logprob: -10.173174858093262
    9. ',num' → logprob: -10.298174858093262
    10. '))' → logprob: -10.423174858093262

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003993296413682401
    2. 'num' → logprob: -9.000399589538574
    3. '    ' → logprob: -9.375399589538574
    4. ' num' → logprob: -9.375399589538574
    5. ')' → logprob: -10.250399589538574
    6. '	num' → logprob: -10.625399589538574
    7. '[num' → logprob: -11.500399589538574
    8. ' ' → logprob: -12.000399589538574
    9. '    
' → logprob: -12.250399589538574
    10. '  ' → logprob: -12.250399589538574

Token 231: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -1.9027791495318525e-05
    2. ' num' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.375019073486328
    4. '
' → logprob: -14.375019073486328
    5. '    
' → logprob: -17.125019073486328
    6. '  ' → logprob: -17.250019073486328
    7. '	num' → logprob: -17.250019073486328
    8. ' ' → logprob: -17.375019073486328
    9. '[num' → logprob: -18.750019073486328
    10. ' 
' → logprob: -19.000019073486328

Token 232: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08249960839748383
    2. ' +=' → logprob: -2.5824995040893555
    3. '+' → logprob: -5.7074995040893555
    4. '=' → logprob: -8.582499504089355
    5. '<|end|>' → logprob: -9.832499504089355
    6. ']+=' → logprob: -11.332499504089355
    7. '++' → logprob: -11.457499504089355
    8. '+='' → logprob: -11.832499504089355
    9. '+="' → logprob: -12.582499504089355
    10. '+++' → logprob: -12.832499504089355

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -18.375001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '```' → logprob: -21.000001907348633
    6. '+' → logprob: -21.062501907348633
    7. '
' → logprob: -21.625001907348633
    8. '１' → logprob: -21.812501907348633
    9. '<|end|>' → logprob: -21.812501907348633
    10. '.' → logprob: -22.375001907348633

Token 234: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.556103527545929
    2. 'print' → logprob: -1.5561034679412842
    3. '#' → logprob: -2.306103467941284
    4. '<|end|>' → logprob: -3.181103467941284
    5. '[' → logprob: -4.681103706359863
    6. '0' → logprob: -4.681103706359863
    7. 'total' → logprob: -5.056103706359863
    8. 'root' → logprob: -5.056103706359863
    9. 'result' → logprob: -5.181103706359863
    10. 'S' → logprob: -5.806103706359863

Token 235: 'ans' (ID: 616)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.1952755451202393
    2. 'result' → logprob: -1.6952755451202393
    3. 'total' → logprob: -2.0702755451202393
    4. 'codes' → logprob: -2.3202755451202393
    5. 'code' → logprob: -2.9452755451202393
    6. 'for' → logprob: -2.9452755451202393
    7. 'res' → logprob: -3.4452755451202393
    8. 'max' → logprob: -3.9452755451202393
    9. 'answer' → logprob: -3.9452755451202393
    10. ')' → logprob: -4.07027530670166

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133741319179535
    2. ' =' → logprob: -1.3133741617202759
    3. '_' → logprob: -9.438374519348145
    4. ',' → logprob: -11.688374519348145
    5. ')' → logprob: -12.313374519348145
    6. '_=' → logprob: -12.313374519348145
    7. ' ' → logprob: -13.063374519348145
    8. 's' → logprob: -13.438374519348145
    9. ':' → logprob: -13.438374519348145
    10. '.' → logprob: -13.563374519348145

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008784390985965729
    2. 'sum' → logprob: -4.758784294128418
    3. ' ' → logprob: -9.508784294128418
    4. 'max' → logprob: -10.008784294128418
    5. ' sum' → logprob: -10.383784294128418
    6. '[]' → logprob: -11.508784294128418
    7. 'len' → logprob: -12.633784294128418
    8. '[' → logprob: -13.633784294128418
    9. '1' → logprob: -14.321284294128418
    10. '(sum' → logprob: -14.696284294128418

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02373897098004818
    2. 'sum' → logprob: -3.7737388610839844
    3. 'max' → logprob: -8.148738861083984
    4. '[]' → logprob: -8.898738861083984
    5. 'len' → logprob: -11.148738861083984
    6. '[' → logprob: -11.273738861083984
    7. '[]
' → logprob: -12.148738861083984
    8. 'str' → logprob: -12.523738861083984
    9. '""' → logprob: -12.773738861083984
    10. '[max' → logprob: -12.773738861083984

Token 239: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023286080977413803
    2. ' for' → logprob: -8.500232696533203
    3. '
' → logprob: -10.500232696533203
    4. '<|end|>' → logprob: -14.125232696533203
    5. 'print' → logprob: -15.250232696533203
    6. 'while' → logprob: -16.000232696533203
    7. '```' → logprob: -16.000232696533203
    8. 'if' → logprob: -16.000232696533203
    9. ')' → logprob: -16.250232696533203
    10. '0' → logprob: -16.625232696533203

Token 240: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.625
    3. 'if' → logprob: -19.25
    4. '
' → logprob: -20.75
    5. 'while' → logprob: -21.25
    6. 'print' → logprob: -21.5
    7. '   ' → logprob: -21.75
    8. '```' → logprob: -22.875
    9. 'fo' → logprob: -23.25
    10. 'length' → logprob: -23.375

Token 241: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020441332831978798
    2. 'c' → logprob: -4.52044153213501
    3. 'k' → logprob: -5.27044153213501
    4. ' i' → logprob: -6.27044153213501
    5. 'key' → logprob: -6.89544153213501
    6. 'ch' → logprob: -7.77044153213501
    7. 'x' → logprob: -8.395441055297852
    8. 'node' → logprob: -8.520441055297852
    9. 'v' → logprob: -9.020441055297852
    10. 'char' → logprob: -9.270441055297852

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10024494677782059
    2. 'in' → logprob: -2.3502449989318848
    3. ',' → logprob: -10.725244522094727
    4. ' ' → logprob: -12.225244522094727
    5. 's' → logprob: -13.225244522094727
    6. ' ,' → logprob: -13.350244522094727
    7. ' i' → logprob: -13.600244522094727
    8. '  ' → logprob: -14.350244522094727
    9. 'i' → logprob: -14.475244522094727
    10. 'd' → logprob: -14.725244522094727

Token 243: ' S' (ID: 336)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12527446448802948
    2. 'S' → logprob: -2.875274419784546
    3. 'tree' → logprob: -3.000274419784546
    4. ' d' → logprob: -4.750274658203125
    5. ' tree' → logprob: -6.375274658203125
    6. ' S' → logprob: -7.625274658203125
    7. 'range' → logprob: -8.250274658203125
    8. '[S' → logprob: -8.750274658203125
    9. '[d' → logprob: -8.750274658203125
    10. '[' → logprob: -9.875274658203125

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01636888086795807
    2. ':
' → logprob: -4.141368865966797
    3. '.' → logprob: -8.516368865966797
    4. '):' → logprob: -9.516368865966797
    5. ' :' → logprob: -11.391368865966797
    6. '):
' → logprob: -11.641368865966797
    7. ')' → logprob: -11.766368865966797
    8. ',' → logprob: -12.141368865966797
    9. ']' → logprob: -12.391368865966797
    10. ']:' → logprob: -12.516368865966797

Token 245: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4167691171169281
    2. '   ' → logprob: -1.1667691469192505
    3. ' ans' → logprob: -3.541769027709961
    4. '	ans' → logprob: -8.041769027709961
    5. '    
' → logprob: -9.041769027709961
    6. '(ans' → logprob: -10.916769027709961
    7. ' ' → logprob: -11.541769027709961
    8. '_ans' → logprob: -12.041769027709961
    9. '  ' → logprob: -12.416769027709961
    10. 'answer' → logprob: -12.666769027709961

Token 246: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00011093381908722222
    2. 'length' → logprob: -9.875110626220703
    3. '   ' → logprob: -10.625110626220703
    4. 'node' → logprob: -11.125110626220703
    5. ' ans' → logprob: -11.625110626220703
    6. 'tmp' → logprob: -12.375110626220703
    7. 'l' → logprob: -13.125110626220703
    8. 'code' → logprob: -13.750110626220703
    9. 'len' → logprob: -14.125110626220703
    10. 'weight' → logprob: -14.125110626220703

Token 247: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008664678782224655
    2. ' +=' → logprob: -4.758664608001709
    3. '+' → logprob: -10.008665084838867
    4. ']+=' → logprob: -13.508665084838867
    5. '+='' → logprob: -13.758665084838867
    6. '+=(' → logprob: -13.883665084838867
    7. '+="' → logprob: -13.883665084838867
    8. '=' → logprob: -14.133665084838867
    9. '   ' → logprob: -17.383665084838867
    10. ')+' → logprob: -17.383665084838867

Token 248: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0006282062386162579
    2. ' tree' → logprob: -7.3756279945373535
    3. '1' → logprob: -14.250628471374512
    4. ' ' → logprob: -15.000628471374512
    5. '(tree' → logprob: -15.250628471374512
    6. '	tree' → logprob: -15.250628471374512
    7. '   ' → logprob: -15.750628471374512
    8. 'tre' → logprob: -16.750627517700195
    9. '  ' → logprob: -18.000627517700195
    10. 'len' → logprob: -18.125627517700195

Token 249: '_dic' (ID: 95466)
  Prédit: '_dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dic' → logprob: -6.869017852295656e-06
    2. 'dic' → logprob: -12.750006675720215
    3. 'Dic' → logprob: -13.000006675720215
    4. '_dict' → logprob: -14.125006675720215
    5. 'tree' → logprob: -15.375006675720215
    6. 'ary' → logprob: -16.12500762939453
    7. '_' → logprob: -16.25000762939453
    8. '_cod' → logprob: -16.62500762939453
    9. '_di' → logprob: -16.87500762939453
    10. 'i' → logprob: -17.00000762939453

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.625003814697266
    3. 'i' → logprob: -14.875003814697266
    4. '[
' → logprob: -17.875003814697266
    5. '[int' → logprob: -18.125003814697266
    6. '[I' → logprob: -18.125003814697266
    7. '
' → logprob: -18.500003814697266
    8. ' [' → logprob: -18.625003814697266
    9. '[user' → logprob: -19.375003814697266
    10. '[str' → logprob: -19.500003814697266

Token 251: '].' (ID: 1651)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.37936946749687195
    2. '].' → logprob: -1.6293694972991943
    3. ').' → logprob: -2.1293694972991943
    4. '.' → logprob: -7.754369258880615
    5. '}.' → logprob: -8.879369735717773
    6. ' .' → logprob: -9.629369735717773
    7. '().' → logprob: -10.004369735717773
    8. '   ' → logprob: -11.004369735717773
    9. ' ].' → logprob: -11.379369735717773
    10. ' ).' → logprob: -11.504369735717773

Token 252: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.981667537620524e-06
    2. ' get' → logprob: -13.500001907348633
    3. '.get' → logprob: -14.625001907348633
    4. '  ' → logprob: -18.500001907348633
    5. ' ' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '_get' → logprob: -19.250001907348633
    8. '(get' → logprob: -19.625001907348633
    9. '`' → logprob: -19.750001907348633
    10. '```' → logprob: -19.875001907348633

Token 253: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.4868770196917467e-05
    2. 'length' → logprob: -10.625024795532227
    3. '_l' → logprob: -14.750024795532227
    4. 'ength' → logprob: -17.125024795532227
    5. ' length' → logprob: -17.750024795532227
    6. '_weight' → logprob: -17.875024795532227
    7. '_le' → logprob: -18.000024795532227
    8. 'Length' → logprob: -18.375024795532227
    9. '_code' → logprob: -19.500024795532227
    10. '_len' → logprob: -19.625024795532227

Token 254: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007493284996598959
    2. '
' → logprob: -5.007493495941162
    3. ' print' → logprob: -7.257493495941162
    4. ')' → logprob: -10.382493019104004
    5. '(print' → logprob: -10.882493019104004
    6. ')
' → logprob: -11.632493019104004
    7. ' 
' → logprob: -12.382493019104004
    8. '()
' → logprob: -13.132493019104004
    9. '.print' → logprob: -13.632493019104004
    10. '+' → logprob: -13.757493019104004

Token 255: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.153795766294934e-06
    2. ' print' → logprob: -12.250005722045898
    3. '
' → logprob: -13.750005722045898
    4. ')' → logprob: -16.0000057220459
    5. '```' → logprob: -16.2500057220459
    6. '<|end|>' → logprob: -17.3750057220459
    7. '#print' → logprob: -17.7500057220459
    8. '.print' → logprob: -18.1250057220459
    9. '(print' → logprob: -18.2500057220459
    10. 'pr' → logprob: -18.7500057220459

Token 256: ' len' (ID: 4631)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.024223605170845985
    2. 'ans' → logprob: -4.274223804473877
    3. ' __' → logprob: -4.899223804473877
    4. ' len' → logprob: -6.399223804473877
    5. '__' → logprob: -7.899223804473877
    6. ' ' → logprob: -8.399223327636719
    7. '(ans' → logprob: -9.024223327636719
    8. 'len' → logprob: -9.274223327636719
    9. ' not' → logprob: -10.274223327636719
    10. ' ' → logprob: -10.524223327636719

Token 257: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0020851893350481987
    2. '(d' → logprob: -6.502085208892822
    3. '(' → logprob: -7.627085208892822
    4. '(s' → logprob: -9.502084732055664
    5. '(set' → logprob: -11.752084732055664
    6. '(tree' → logprob: -12.002084732055664
    7. 'd' → logprob: -12.877084732055664
    8. 'S' → logprob: -13.502084732055664
    9. '(
' → logprob: -14.002084732055664
    10. '(h' → logprob: -14.502084732055664

Token 258: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9808871150016785
    2. ' ==' → logprob: -1.1058871746063232
    3. '>' → logprob: -1.7308871746063232
    4. '==' → logprob: -2.2308871746063232
    5. ')' → logprob: -4.855886936187744
    6. ' <=' → logprob: -6.730886936187744
    7. '<=' → logprob: -8.730887413024902
    8. ' ' → logprob: -9.480887413024902
    9. ')>' → logprob: -9.605887413024902
    10. '1' → logprob: -9.730887413024902

Token 259: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6361901760101318
    2. '==' → logprob: -1.3861901760101318
    3. ' >' → logprob: -1.7611901760101318
    4. ' ==' → logprob: -3.136190176010132
    5. '<=' → logprob: -5.886190414428711
    6. ' <=' → logprob: -6.636190414428711
    7. '!=' → logprob: -7.386190414428711
    8. ' ' → logprob: -8.636190414428711
    9. '=' → logprob: -9.136190414428711
    10. ' !=' → logprob: -9.261190414428711

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011276054196059704
    2. '0' → logprob: -4.5112762451171875
    3. ' ' → logprob: -8.386276245117188
    4. 'len' → logprob: -17.448776245117188
    5. '   ' → logprob: -17.448776245117188
    6. '۱' → logprob: -17.636276245117188
    7. '<|end|>' → logprob: -18.073776245117188
    8. '    ' → logprob: -18.073776245117188
    9. '01' → logprob: -18.198776245117188
    10. '=' → logprob: -18.323776245117188

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003229171270504594
    2. '0' → logprob: -5.753229141235352
    3. ' ' → logprob: -9.878229141235352
    4. '   ' → logprob: -17.50322914123535
    5. '
' → logprob: -17.69072914123535
    6. '１' → logprob: -17.94072914123535
    7. '=' → logprob: -18.06572914123535
    8. '' → logprob: -18.31572914123535
    9. '```' → logprob: -18.44072914123535
    10. '01' → logprob: -18.44072914123535

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004101554397493601
    2. ':
' → logprob: -5.504101753234863
    3. ' :' → logprob: -11.129101753234863
    4. ':return' → logprob: -11.879101753234863
    5. '*' → logprob: -15.004101753234863
    6. '   ' → logprob: -15.379101753234863
    7. ' :
' → logprob: -15.379101753234863
    8. ' ' → logprob: -15.629101753234863
    9. ')' → logprob: -16.129100799560547
    10. ' or' → logprob: -16.504100799560547

Token 263: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.21200060844421387
    2. 'print' → logprob: -1.7120006084442139
    3. '   ' → logprob: -5.462000846862793
    4. ' ans' → logprob: -5.837000846862793
    5. '
' → logprob: -6.087000846862793
    6. ' print' → logprob: -7.337000846862793
    7. '0' → logprob: -8.712000846862793
    8. '1' → logprob: -9.712000846862793
    9. '    
' → logprob: -9.837000846862793
    10. '(ans' → logprob: -10.337000846862793

Token 264: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38690099120140076
    2. 'ans' → logprob: -1.1369010210037231
    3. '   ' → logprob: -11.511900901794434
    4. ' ans' → logprob: -11.886900901794434
    5. 'answer' → logprob: -12.511900901794434
    6. ' print' → logprob: -12.761900901794434
    7. '0' → logprob: -12.761900901794434
    8. '	ans' → logprob: -14.136900901794434
    9. '(ans' → logprob: -14.136900901794434
    10. '
' → logprob: -14.386900901794434

Token 265: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025146132335066795
    2. '0' → logprob: -4.025146007537842
    3. '(' → logprob: -5.025146007537842
    4. 'ans' → logprob: -8.400146484375
    5. '(ans' → logprob: -9.650146484375
    6. 'len' → logprob: -10.400146484375
    7. '(len' → logprob: -10.650146484375
    8. '(
' → logprob: -11.025146484375
    9. ' ' → logprob: -11.275146484375
    10. '8' → logprob: -11.275146484375

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023454640060663223
    2. 'len' → logprob: -4.398454666137695
    3. '0' → logprob: -4.773454666137695
    4. 'ans' → logprob: -6.023454666137695
    5. ' ' → logprob: -12.898454666137695
    6. 'tree' → logprob: -13.023454666137695
    7. '
' → logprob: -13.148454666137695
    8. 'd' → logprob: -13.398454666137695
    9. '(len' → logprob: -14.023454666137695
    10. ' len' → logprob: -14.898454666137695

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00862320140004158
    2. ')
' → logprob: -4.758623123168945
    3. ' )' → logprob: -12.258623123168945
    4. 'else' → logprob: -12.883623123168945
    5. ')

' → logprob: -14.008623123168945
    6. ' )
' → logprob: -15.758623123168945
    7. ' else' → logprob: -15.883623123168945
    8. ')
' → logprob: -16.008623123168945
    9. '   ' → logprob: -16.258623123168945
    10. '),' → logprob: -17.383623123168945

Token 268: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.6240566083070007e-06
    2. ' else' → logprob: -13.750001907348633
    3. 'elif' → logprob: -14.625001907348633
    4. '_else' → logprob: -18.250001907348633
    5. ')' → logprob: -18.625001907348633
    6. '}else' → logprob: -18.750001907348633
    7. 'elser' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.250001907348633
    9. '#else' → logprob: -19.375001907348633
    10. '```' → logprob: -19.750001907348633

Token 269: ' len' (ID: 4631)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7245246767997742
    2. ' len' → logprob: -1.599524736404419
    3. 'len' → logprob: -1.599524736404419
    4. 'ans' → logprob: -2.224524736404419
    5. '(ans' → logprob: -6.59952449798584
    6. ' all' → logprob: -6.84952449798584
    7. '(len' → logprob: -8.59952449798584
    8. 'all' → logprob: -8.84952449798584
    9. ' ' → logprob: -9.09952449798584
    10. ' tree' → logprob: -9.47452449798584

Token 270: '(d' (ID: 2572)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0014004756230860949
    2. '(' → logprob: -6.626400470733643
    3. ' (' → logprob: -10.1264009475708
    4. '(s' → logprob: -10.3764009475708
    5. '(len' → logprob: -14.3764009475708
    6. '(
' → logprob: -14.3764009475708
    7. 'S' → logprob: -14.3764009475708
    8. '(ans' → logprob: -14.3764009475708
    9. '()' → logprob: -14.8764009475708
    10. '(h' → logprob: -15.6264009475708

Token 271: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1823701411485672
    2. '==' → logprob: -1.8073701858520508
    3. ')' → logprob: -6.557370185852051
    4. ' >' → logprob: -7.182370185852051
    5. '>' → logprob: -8.68237018585205
    6. ')==' → logprob: -9.30737018585205
    7. ' ' → logprob: -9.55737018585205
    8. ' <' → logprob: -10.80737018585205
    9. '=' → logprob: -10.80737018585205
    10. '1' → logprob: -11.30737018585205

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35386061668395996
    2. '==' → logprob: -1.22886061668396
    3. ' >' → logprob: -5.728860855102539
    4. '>' → logprob: -6.353860855102539
    5. ' <' → logprob: -8.978860855102539
    6. '<' → logprob: -9.228860855102539
    7. ' ' → logprob: -9.728860855102539
    8. ' <=' → logprob: -9.978860855102539
    9. '<=' → logprob: -10.728860855102539
    10. '=' → logprob: -11.103860855102539

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018504813313484192
    2. ' ' → logprob: -4.393504619598389
    3. '0' → logprob: -5.768504619598389
    4. 'len' → logprob: -5.893504619598389
    5. ' len' → logprob: -10.143505096435547
    6. '2' → logprob: -10.643505096435547
    7. '
' → logprob: -11.143505096435547
    8. '26' → logprob: -12.018505096435547
    9. '   ' → logprob: -12.518505096435547
    10. '(len' → logprob: -13.456005096435547

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00085678935283795
    2. 'len' → logprob: -7.500856876373291
    3. '0' → logprob: -8.500856399536133
    4. ' ' → logprob: -9.375856399536133
    5. '2' → logprob: -11.375856399536133
    6. '
' → logprob: -14.125856399536133
    7. ' len' → logprob: -14.125856399536133
    8. '26' → logprob: -14.250856399536133
    9. '   ' → logprob: -14.625856399536133
    10. '(len' → logprob: -14.750856399536133

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03806444630026817
    2. ':
' → logprob: -3.288064479827881
    3. '   ' → logprob: -10.913064002990723
    4. ' :' → logprob: -13.913064002990723
    5. '==' → logprob: -14.038064002990723
    6. 'print' → logprob: -14.163064002990723
    7. ':
' → logprob: -14.163064002990723
    8. ')' → logprob: -15.413064002990723
    9. '):
' → logprob: -15.413064002990723
    10. ':

' → logprob: -15.413064002990723

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0583488866686821
    2. 'print' → logprob: -2.9333488941192627
    3. ' print' → logprob: -5.683348655700684
    4. '1' → logprob: -10.308348655700684
    5. ' ' → logprob: -11.433348655700684
    6. '0' → logprob: -11.933348655700684
    7. '```' → logprob: -13.683348655700684
    8. '	print' → logprob: -13.808348655700684
    9. '
' → logprob: -13.933348655700684
    10. ':' → logprob: -14.308348655700684

Token 277: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015581895131617785
    2. ' print' → logprob: -6.751558303833008
    3. '   ' → logprob: -7.876558303833008
    4. '1' → logprob: -12.376558303833008
    5. '0' → logprob: -12.626558303833008
    6. ' ' → logprob: -15.501558303833008
    7. '  ' → logprob: -15.501558303833008
    8. '	print' → logprob: -15.626558303833008
    9. '```' → logprob: -16.376558303833008
    10. '2' → logprob: -16.751558303833008

Token 278: '(len' (ID: 14990)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7342635989189148
    2. 'len' → logprob: -1.2342636585235596
    3. '0' → logprob: -2.4842636585235596
    4. '(len' → logprob: -2.6092636585235596
    5. 'ans' → logprob: -3.3592636585235596
    6. '(' → logprob: -3.9842636585235596
    7. '(ans' → logprob: -3.9842636585235596
    8. '2' → logprob: -9.98426342010498
    9. ' len' → logprob: -11.23426342010498
    10. ' ' → logprob: -11.98426342010498

Token 279: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0001414426224073395
    2. 'S' → logprob: -9.250141143798828
    3. ')' → logprob: -10.750141143798828
    4. '(' → logprob: -11.625141143798828
    5. '(s' → logprob: -12.000141143798828
    6. '(d' → logprob: -12.125141143798828
    7. 'd' → logprob: -13.250141143798828
    8. 's' → logprob: -14.625141143798828
    9. '(ans' → logprob: -14.750141143798828
    10. '[S' → logprob: -15.750141143798828

Token 280: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013049989938735962
    2. ')
' → logprob: -6.751305103302002
    3. '))' → logprob: -9.376304626464844
    4. ' )' → logprob: -10.001304626464844
    5. '())' → logprob: -14.251304626464844
    6. 'else' → logprob: -14.376304626464844
    7. '   ' → logprob: -14.376304626464844
    8. '*' → logprob: -14.751304626464844
    9. '-' → logprob: -14.876304626464844
    10. '))
' → logprob: -15.126304626464844

Token 281: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.522638169466518e-05
    2. 'elif' → logprob: -10.750024795532227
    3. ' else' → logprob: -12.500024795532227
    4. '#else' → logprob: -18.250024795532227
    5. '}else' → logprob: -18.750024795532227
    6. '_else' → logprob: -19.000024795532227
    7. 'elser' → logprob: -19.375024795532227
    8. '	else' → logprob: -19.625024795532227
    9. 'print' → logprob: -20.000024795532227
    10. '```' → logprob: -20.000024795532227

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49864432215690613
    2. ':
' → logprob: -1.2486443519592285
    3. '   ' → logprob: -2.2486443519592285
    4. 'print' → logprob: -8.74864387512207
    5. '       ' → logprob: -11.24864387512207
    6. ' print' → logprob: -11.37364387512207
    7. '(' → logprob: -11.99864387512207
    8. '():
' → logprob: -12.24864387512207
    9. '    
' → logprob: -12.74864387512207
    10. '(print' → logprob: -12.87364387512207

Token 283: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869173526763916
    2. '   ' → logprob: -1.1369173526763916
    3. ' print' → logprob: -10.011917114257812
    4. '```' → logprob: -14.261917114257812
    5. '	print' → logprob: -14.761917114257812
    6. '       ' → logprob: -15.136917114257812
    7. ' ' → logprob: -16.886917114257812
    8. '.print' → logprob: -17.761917114257812
    9. '``' → logprob: -18.136917114257812
    10. '    
' → logprob: -18.261917114257812

Token 284: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.060365608893335e-05
    2. '   ' → logprob: -10.500041007995605
    3. ' print' → logprob: -11.250041007995605
    4. '```' → logprob: -18.25004005432129
    5. '	print' → logprob: -18.87504005432129
    6. ' ' → logprob: -19.12504005432129
    7. 'pr' → logprob: -19.25004005432129
    8. '  ' → logprob: -20.37504005432129
    9. '.print' → logprob: -21.62504005432129
    10. 'printf' → logprob: -21.75004005432129

Token 285: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005530327325686812
    2. 'ans' → logprob: -7.500553131103516
    3. '(
' → logprob: -18.625553131103516
    4. ' ans' → logprob: -18.875553131103516
    5. '	ans' → logprob: -18.875553131103516
    6. '(' → logprob: -19.250553131103516
    7. '(abs' → logprob: -20.625553131103516
    8. '(len' → logprob: -21.000553131103516
    9. '(answer' → logprob: -21.500553131103516
    10. '(an' → logprob: -21.500553131103516

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -17.125
    5. ')`' → logprob: -18.625
    6. ')#' → logprob: -18.75
    7. '())' → logprob: -19.0
    8. '+' → logprob: -20.0
    9. ')}' → logprob: -20.5
    10. '   ' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 284
Tokens correctement prédits (1ère position, stricte): 118
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 41.55%
Précision adaptée (1ère position): 45.42%
Précision (top 10): 84.15%
================================================================================
