================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
from collections import Counter

class HuffmanTreeNode:
    def __init__(self, char, freq):
        self.char = char
        self.freq = freq
        self.left = None
        self.right = None
    
    def __lt__(self, other):
        return self.freq < other.freq

def huffman_code_helper(root, code='', codes={}):
    if not root:
        return codes
    
    if not root.left and not root.right:
        codes[root.char] = code if code else '0'
        return codes
    
    huffman_code_helper(root.left, code + '0', codes)
    huffman_code_helper(root.right, code + '1', codes)
    return codes

def huffman_code(text):
    counter = Counter(text)
    heap = []
    for char, freq in counter.items():
        heap.append(HuffmanTreeNode(char, freq))
    heapq.heapify(heap)

    while len(heap) > 1:
        left, right = heapq.heappop(heap), heapq.heappop(heap)
        node = HuffmanTreeNode('', left.freq + right.freq)
        node.left, node.right = left, right
        heapq.heappush(heap, node)
    root = heap[0]

    return huffman_code_helper(root)

def solution():
    text = input()
    codes = huffman_code(text)
    encoded = []
    for char in text:
        encoded.append(codes[char])
    print(len(''.join(encoded)))

solution()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -11.250060081481934
    3. '.\' → logprob: -11.250060081481934
    4. '.
' → logprob: -11.875060081481934
    5. '.​' → logprob: -11.875060081481934
    6. '."""' → logprob: -12.500060081481934
    7. '```' → logprob: -12.750060081481934
    8. '\' → logprob: -12.875060081481934
    9. ' .' → logprob: -13.250060081481934
    10. '.

' → logprob: -13.500060081481934

Token 4: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020509003661572933
    2. '\' → logprob: -9.500205039978027
    3. '.

' → logprob: -10.875205039978027
    4. '(' → logprob: -11.000205039978027
    5. '.
' → logprob: -11.000205039978027
    6. '```' → logprob: -11.250205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. '

' → logprob: -11.750205039978027
    9. '.\' → logprob: -11.750205039978027
    10. '.

' → logprob: -12.000205039978027

Token 5: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.013438556343317032
    2. ' math' → logprob: -5.013438701629639
    3. 'collections' → logprob: -5.638438701629639
    4. ' ' → logprob: -7.013438701629639
    5. ' itertools' → logprob: -7.138438701629639
    6. ' heap' → logprob: -7.388438701629639
    7. ' queue' → logprob: -8.38843822479248
    8. ' sys' → logprob: -8.63843822479248
    9. ' threading' → logprob: -9.26343822479248
    10. '_' → logprob: -9.76343822479248

Token 6: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0903855487704277
    2. ' import' → logprob: -2.4653854370117188
    3. '.' → logprob: -6.715385437011719
    4. '```' → logprob: -9.715385437011719
    5. '.Counter' → logprob: -9.715385437011719
    6. ' ' → logprob: -10.215385437011719
    7. '<|end|>' → logprob: -10.840385437011719
    8. ' defaultdict' → logprob: -11.090385437011719
    9. '.import' → logprob: -12.090385437011719
    10. '	import' → logprob: -12.215385437011719

Token 7: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.22612884640693665
    2. 'deque' → logprob: -1.8511288166046143
    3. ' defaultdict' → logprob: -3.1011288166046143
    4. ' abc' → logprob: -9.101128578186035
    5. ' named' → logprob: -9.601128578186035
    6. 'abc' → logprob: -9.851128578186035
    7. 'named' → logprob: -9.976128578186035
    8. 'de' → logprob: -11.351128578186035
    9. '```' → logprob: -11.851128578186035
    10. 'import' → logprob: -11.851128578186035

Token 8: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9666740894317627
    2. '(' → logprob: -1.0916740894317627
    3. '\n' → logprob: -1.5916740894317627
    4. '(
' → logprob: -3.0916740894317627
    5. '\' → logprob: -4.216673851013184
    6. '
' → logprob: -5.466673851013184
    7. '' → logprob: -5.966673851013184
    8. '

' → logprob: -6.091673851013184
    9. '```' → logprob: -6.091673851013184
    10. 'import' → logprob: -6.716673851013184

Token 9: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8679195642471313
    2. '(' → logprob: -1.3679195642471313
    3. 'data' → logprob: -2.367919445037842
    4. 'd' → logprob: -2.742919445037842
    5. '`' → logprob: -3.492919445037842
    6. 'heap' → logprob: -3.492919445037842
    7. 'a' → logprob: -4.117919445037842
    8. '#' → logprob: -4.492919445037842
    9. '\' → logprob: -4.617919445037842
    10. 'word' → logprob: -4.742919445037842

Token 10: ' Huff' (ID: 83019)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.550978422164917
    2. ' Priority' → logprob: -1.050978422164917
    3. ' Max' → logprob: -3.675978422164917
    4. ' Min' → logprob: -3.675978422164917
    5. ' Heap' → logprob: -5.425978660583496
    6. ' Top' → logprob: -5.425978660583496
    7. ' Frequency' → logprob: -6.050978660583496
    8. ' Counter' → logprob: -6.425978660583496
    9. ' Token' → logprob: -6.550978660583496
    10. 'Priority' → logprob: -6.550978660583496

Token 11: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.0064683291129767895
    2. 'Man' → logprob: -5.256468296051025
    3. ' man' → logprob: -7.631468296051025
    4. '```' → logprob: -8.006468772888184
    5. 'm' → logprob: -9.256468772888184
    6. 'Code' → logprob: -9.381468772888184
    7. '   ' → logprob: -9.506468772888184
    8. '       ' → logprob: -10.881468772888184
    9. 'Ma' → logprob: -11.381468772888184
    10. '     ' → logprob: -11.631468772888184

Token 12: 'Tree' (ID: 8062)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.7144081592559814
    2. 'Tree' → logprob: -1.3394081592559814
    3. 'Coding' → logprob: -1.7144081592559814
    4. 'Coder' → logprob: -2.9644081592559814
    5. ':' → logprob: -4.589407920837402
    6. 'Code' → logprob: -5.964407920837402
    7. 'Encoder' → logprob: -6.589407920837402
    8. 'Encoding' → logprob: -6.714407920837402
    9. 'Codec' → logprob: -7.089407920837402
    10. 'Trie' → logprob: -8.964407920837402

Token 13: 'Node' (ID: 2701)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012353454949334264
    2. '(' → logprob: -6.751235485076904
    3. '<|end|>' → logprob: -10.751235008239746
    4. '():' → logprob: -11.126235008239746
    5. ' :' → logprob: -12.251235008239746
    6. ':
' → logprob: -12.376235008239746
    7. '):' → logprob: -12.626235008239746
    8. ':**' → logprob: -12.751235008239746
    9. '```' → logprob: -13.501235008239746
    10. '(object' → logprob: -13.626235008239746

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006099192891269922
    2. '(' → logprob: -5.131099224090576
    3. '():' → logprob: -9.631098747253418
    4. '<|end|>' → logprob: -9.881098747253418
    5. ' :' → logprob: -10.756098747253418
    6. '(object' → logprob: -11.631098747253418
    7. '):' → logprob: -12.131098747253418
    8. '(:' → logprob: -12.256098747253418
    9. '```' → logprob: -13.131098747253418
    10. ':**' → logprob: -13.256098747253418

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44090211391448975
    2. '(' → logprob: -1.1909021139144897
    3. '   ' → logprob: -3.1909022331237793
    4. '<|end|>' → logprob: -4.940902233123779
    5. '(object' → logprob: -6.565902233123779
    6. '```' → logprob: -7.315902233123779
    7. ' ' → logprob: -7.565902233123779
    8. ' :' → logprob: -8.190901756286621
    9. '  ' → logprob: -8.315901756286621
    10. ':
' → logprob: -8.565901756286621

Token 16: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10030683875083923
    2. 'def' (adapté à ' def') → logprob: -2.350306749343872
    3. ' __' → logprob: -9.475306510925293
    4. '__' → logprob: -11.225306510925293
    5. '   ' → logprob: -11.975306510925293
    6. ' pass' → logprob: -13.475306510925293
    7. 'class' → logprob: -13.850306510925293
    8. ' ' → logprob: -14.225306510925293
    9. '    ' → logprob: -14.975306510925293
    10. 'pass' → logprob: -15.600306510925293

Token 17: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003473825636319816
    2. 'init' → logprob: -8.875347137451172
    3. ' init' → logprob: -9.125347137451172
    4. ' ' → logprob: -10.250347137451172
    5. ' _' → logprob: -10.375347137451172
    6. '__' → logprob: -10.750347137451172
    7. '_init' → logprob: -11.875347137451172
    8. ' ' → logprob: -13.000347137451172
    9. ' ___' → logprob: -14.250347137451172
    10. '_' → logprob: -14.875347137451172

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'nit' → logprob: -13.875000953674316
    3. 'ini' → logprob: -16.750001907348633
    4. 'it' → logprob: -17.250001907348633
    5. ' init' → logprob: -18.125001907348633
    6. '```' → logprob: -18.250001907348633
    7. '(init' → logprob: -18.500001907348633
    8. 'int' → logprob: -18.500001907348633
    9. '_init' → logprob: -18.875001907348633
    10. 'lt' → logprob: -19.375001907348633

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06818215548992157
    2. '(' → logprob: -3.8181822299957275
    3. '(self' → logprob: -3.9431822299957275
    4. ' (' → logprob: -4.068181991577148
    5. '__' → logprob: -5.943181991577148
    6. '<|end|>' → logprob: -5.943181991577148
    7. '__(
' → logprob: -7.318181991577148
    8. 'self' → logprob: -8.068181991577148
    9. '_(' → logprob: -8.443181991577148
    10. '__((' → logprob: -8.693181991577148

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002334568416699767
    2. ' self' → logprob: -8.37523365020752
    3. ')' → logprob: -13.12523365020752
    4. '(self' → logprob: -14.50023365020752
    5. ' ' → logprob: -15.62523365020752
    6. '	self' → logprob: -16.875232696533203
    7. ',self' → logprob: -17.000232696533203
    8. '<|end|>' → logprob: -17.500232696533203
    9. ' )' → logprob: -17.750232696533203
    10. '   ' → logprob: -17.750232696533203

Token 21: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.3686782121658325
    2. ',' → logprob: -1.3686782121658325
    3. ' )' → logprob: -3.243678092956543
    4. ' ' → logprob: -4.618678092956543
    5. ')' → logprob: -6.118678092956543
    6. 'self' → logprob: -7.368678092956543
    7. '<|end|>' → logprob: -7.618678092956543
    8. '  ' → logprob: -7.743678092956543
    9. ' self' → logprob: -8.118678092956543
    10. '_' → logprob: -8.243678092956543

Token 22: ' char' (ID: 1826)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frequency' → logprob: -0.6566845178604126
    2. ' frequency' → logprob: -1.7816845178604126
    3. 'freq' → logprob: -2.406684398651123
    4. 'char' → logprob: -2.781684398651123
    5. 'self' → logprob: -3.281684398651123
    6. 'value' → logprob: -3.406684398651123
    7. 'symbol' → logprob: -3.656684398651123
    8. 'weight' → logprob: -3.656684398651123
    9. ' freq' → logprob: -4.156684398651123
    10. ' char' → logprob: -4.781684398651123

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00807193387299776
    2. '=None' → logprob: -5.1330718994140625
    3. '):' → logprob: -7.0080718994140625
    4. '=' → logprob: -7.2580718994140625
    5. ' ,' → logprob: -7.6330718994140625
    6. ':' → logprob: -11.133071899414062
    7. ')' → logprob: -11.383071899414062
    8. '='',' → logprob: -12.758071899414062
    9. ' ' → logprob: -13.008071899414062
    10. '<|end|>' → logprob: -13.008071899414062

Token 24: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.2632948160171509
    2. 'freq' → logprob: -2.0132946968078613
    3. ' frequency' → logprob: -2.5132946968078613
    4. ' weight' → logprob: -4.763294696807861
    5. 'frequency' → logprob: -5.263294696807861
    6. 'weight' → logprob: -5.763294696807861
    7. 'fre' → logprob: -10.76329517364502
    8. '_freq' → logprob: -11.26329517364502
    9. '(freq' → logprob: -11.76329517364502
    10. ' ' → logprob: -12.01329517364502

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014870046870782971
    2. ')' → logprob: -6.626486778259277
    3. ',' → logprob: -9.126486778259277
    4. '):
' → logprob: -10.626486778259277
    5. ':' → logprob: -11.251486778259277
    6. ' ):' → logprob: -12.001486778259277
    7. '   ' → logprob: -12.376486778259277
    8. '=' → logprob: -13.751486778259277
    9. ' ' → logprob: -14.251486778259277
    10. '       ' → logprob: -14.626486778259277

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006066851783543825
    2. '<|end|>' → logprob: -5.756066799163818
    3. '        ' → logprob: -7.131066799163818
    4. ')' → logprob: -7.506066799163818
    5. ' ' → logprob: -7.756066799163818
    6. '    ' → logprob: -7.881066799163818
    7. '   ' → logprob: -8.256067276000977
    8. '      ' → logprob: -9.006067276000977
    9. 'self' → logprob: -9.756067276000977
    10. ',' → logprob: -9.881067276000977

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7866860032081604
    2. 'self' (adapté à ' self') → logprob: -1.0366859436035156
    3. ' self' → logprob: -1.6616859436035156
    4. ' ' → logprob: -9.536685943603516
    5. '   ' → logprob: -10.036685943603516
    6. ' ' → logprob: -10.286685943603516
    7. '	self' → logprob: -10.536685943603516
    8. 'char' → logprob: -12.411685943603516
    9. '           ' → logprob: -12.661685943603516
    10. '	' → logprob: -13.161685943603516

Token 28: '.char' (ID: 18508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010093499440699816
    2. ' .' → logprob: -7.501009464263916
    3. '.char' → logprob: -7.751009464263916
    4. '<|end|>' → logprob: -11.876008987426758
    5. '.character' → logprob: -12.751008987426758
    6. '.Char' → logprob: -13.126008987426758
    7. '.c' → logprob: -13.251008987426758
    8. ' ' → logprob: -13.376008987426758
    9. '.characters' → logprob: -13.626008987426758
    10. '.value' → logprob: -14.251008987426758

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20595407485961914
    2. '=' → logprob: -1.7059540748596191
    3. ',' → logprob: -6.455954074859619
    4. '<|end|>' → logprob: -6.580954074859619
    5. ' ' → logprob: -6.705954074859619
    6. ' ,' → logprob: -8.205953598022461
    7. '_' → logprob: -10.455953598022461
    8. ')' → logprob: -11.580953598022461
    9. ' is' → logprob: -11.830953598022461
    10. '<|end|>' → logprob: -12.080953598022461

Token 30: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.006730645429342985
    2. 'char' → logprob: -5.006730556488037
    3. ' ' → logprob: -11.756731033325195
    4. '(char' → logprob: -12.256731033325195
    5. '<char' → logprob: -13.756731033325195
    6. ',char' → logprob: -14.006731033325195
    7. '	char' → logprob: -14.381731033325195
    8. '.char' → logprob: -16.131731033325195
    9. '_char' → logprob: -16.256731033325195
    10. ' ' → logprob: -17.506731033325195

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5993467569351196
    2. '<|end|>' → logprob: -0.8493467569351196
    3. ',' → logprob: -4.97434663772583
    4. '
' → logprob: -5.09934663772583
    5. ' ' → logprob: -5.47434663772583
    6. '<|end|>' → logprob: -5.97434663772583
    7. '        
' → logprob: -6.72434663772583
    8. '        ' → logprob: -7.22434663772583
    9. ')' → logprob: -8.224347114562988
    10. ' 
' → logprob: -8.724347114562988

Token 33: ' self' (ID: 1051)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.38707101345062256
    2. 'freq' → logprob: -1.1370710134506226
    3. ' ' → logprob: -9.387070655822754
    4. '_freq' → logprob: -10.012070655822754
    5. '(freq' → logprob: -10.387070655822754
    6. 'fre' → logprob: -11.387070655822754
    7. '.freq' → logprob: -11.887070655822754
    8. ' ,' → logprob: -12.137070655822754
    9. '        ' → logprob: -12.387070655822754
    10. ',' → logprob: -12.762070655822754

Token 34: '.freq' (ID: 184991)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24709108471870422
    2. '.freq' → logprob: -1.8720910549163818
    3. '_freq' → logprob: -3.372091054916382
    4. 'freq' → logprob: -4.122091293334961
    5. '.frequency' → logprob: -4.997091293334961
    6. ' .' → logprob: -5.997091293334961
    7. ' ' → logprob: -6.497091293334961
    8. ' freq' → logprob: -6.497091293334961
    9. ',' → logprob: -7.122091293334961
    10. '_' → logprob: -8.372091293334961

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24083350598812103
    2. '<|end|>' → logprob: -2.1158335208892822
    3. '=' → logprob: -2.9908335208892822
    4. ' ' → logprob: -3.2408335208892822
    5. '<|end|>' → logprob: -5.865833282470703
    6. '        ' → logprob: -7.865833282470703
    7. ',' → logprob: -8.365833282470703
    8. ')' → logprob: -9.115833282470703
    9. ' +=' → logprob: -9.115833282470703
    10. '    ' → logprob: -9.115833282470703

Token 36: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.0007129086880013347
    2. 'freq' → logprob: -7.250712871551514
    3. ' ' → logprob: -12.875713348388672
    4. '(freq' → logprob: -15.000713348388672
    5. '_freq' → logprob: -16.750713348388672
    6. ' ' → logprob: -16.875713348388672
    7. ' fre' → logprob: -17.875713348388672
    8. '.freq' → logprob: -18.000713348388672
    9. ' f' → logprob: -18.125713348388672
    10. ' fq' → logprob: -18.750713348388672

Token 37: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026121117174625397
    2. '<|end|>' → logprob: -3.776121139526367
    3. '
' → logprob: -5.901121139526367
    4. '<|end|>' → logprob: -9.651121139526367
    5. '   ' → logprob: -11.526121139526367
    6. ' ' → logprob: -11.526121139526367
    7. '        
' → logprob: -11.526121139526367
    8. ',' → logprob: -11.651121139526367
    9. '      ' → logprob: -12.151121139526367
    10. ' 
' → logprob: -12.526121139526367

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003739387495443225
    2. '<|end|>' → logprob: -5.628739356994629
    3. '
' → logprob: -9.378739356994629
    4. '      ' → logprob: -11.753739356994629
    5. '<|end|>' → logprob: -11.753739356994629
    6. ' ' → logprob: -11.878739356994629
    7. '        
' → logprob: -12.128739356994629
    8. ',' → logprob: -12.253739356994629
    9. 'self' → logprob: -12.253739356994629
    10. '   ' → logprob: -12.378739356994629

Token 39: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001840229262597859
    2. 'self' (adapté à ' self') → logprob: -6.376840114593506
    3. ' self' → logprob: -9.001840591430664
    4. '<|end|>' → logprob: -11.501840591430664
    5. '      ' → logprob: -14.001840591430664
    6. '	self' → logprob: -14.001840591430664
    7. '   ' → logprob: -14.126840591430664
    8. ',' → logprob: -14.626840591430664
    9. '	' → logprob: -14.751840591430664
    10. ' ' → logprob: -14.876840591430664

Token 40: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.706296443939209
    2. '.left' → logprob: -0.831296443939209
    3. '.children' → logprob: -3.456296443939209
    4. ' .' → logprob: -4.456296443939209
    5. 'left' → logprob: -4.831296443939209
    6. '_left' → logprob: -4.831296443939209
    7. '_children' → logprob: -5.081296443939209
    8. 'children' → logprob: -5.831296443939209
    9. ' left' → logprob: -6.956296443939209
    10. 'Left' → logprob: -7.956296443939209

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234713554382324
    2. '=' → logprob: -0.8984713554382324
    3. '=None' → logprob: -8.27347183227539
    4. ',' → logprob: -10.02347183227539
    5. '<|end|>' → logprob: -10.14847183227539
    6. ' ' → logprob: -12.77347183227539
    7. '<|end|>' → logprob: -12.77347183227539
    8. ' ,' → logprob: -13.52347183227539
    9. ' =
' → logprob: -14.52347183227539
    10. ')' → logprob: -15.02347183227539

Token 42: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.04858794063329697
    2. 'None' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.423587799072266
    4. '_None' → logprob: -15.673587799072266
    5. ' none' → logprob: -16.423587799072266
    6. '=None' → logprob: -16.923587799072266
    7. '(None' → logprob: -16.923587799072266
    8. 'none' → logprob: -18.423587799072266
    9. ',None' → logprob: -18.548587799072266
    10. ' ' → logprob: -18.798587799072266

Token 43: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01827472448348999
    2. '<|end|>' → logprob: -4.893274784088135
    3. '
' → logprob: -5.143274784088135
    4. 'self' → logprob: -6.143274784088135
    5. '   ' → logprob: -7.018274784088135
    6. '        
' → logprob: -7.643274784088135
    7. '    
' → logprob: -8.143274307250977
    8. ' 
' → logprob: -8.643274307250977
    9. 'newline' → logprob: -8.643274307250977
    10. '```' → logprob: -8.768274307250977

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2560743987560272
    2. '<|end|>' → logprob: -1.7560744285583496
    3. '
' → logprob: -3.8810744285583496
    4. '   ' → logprob: -4.75607442855835
    5. '    
' → logprob: -5.00607442855835
    6. ' 
' → logprob: -5.63107442855835
    7. 'self' → logprob: -5.63107442855835
    8. '        
' → logprob: -5.75607442855835
    9. ' ' → logprob: -6.00607442855835
    10. '```' → logprob: -6.75607442855835

Token 45: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3068174123764038
    2. '       ' → logprob: -1.5568174123764038
    3. ' self' → logprob: -2.9318175315856934
    4. '   ' → logprob: -9.556817054748535
    5. ' ' → logprob: -10.681817054748535
    6. '	self' → logprob: -12.056817054748535
    7. ' ' → logprob: -13.431817054748535
    8. '```' → logprob: -13.806817054748535
    9. ',self' → logprob: -13.806817054748535
    10. '           ' → logprob: -14.056817054748535

Token 46: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06303658336400986
    2. '.right' → logprob: -2.8130366802215576
    3. '.left' → logprob: -7.0630364418029785
    4. ' .' → logprob: -8.563036918640137
    5. 'right' → logprob: -11.813036918640137
    6. '.next' → logprob: -12.313036918640137
    7. '<|end|>' → logprob: -12.563036918640137
    8. '.space' → logprob: -14.188036918640137
    9. '<|end|>' → logprob: -14.188036918640137
    10. '.Right' → logprob: -14.938036918640137

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331583857536316
    2. '=' → logprob: -1.3133158683776855
    3. '=None' → logprob: -10.063315391540527
    4. '<|end|>' → logprob: -11.688315391540527
    5. ' ' → logprob: -13.813315391540527
    6. '<|end|>' → logprob: -14.188315391540527
    7. ')' → logprob: -15.063315391540527
    8. 'None' → logprob: -15.188315391540527
    9. ',' → logprob: -15.813315391540527
    10. ' =
' → logprob: -16.063316345214844

Token 48: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07889452576637268
    2. ' None' → logprob: -2.57889461517334
    3. '(None' → logprob: -13.07889461517334
    4. '_None' → logprob: -13.45389461517334
    5. ',None' → logprob: -14.45389461517334
    6. '=None' → logprob: -14.70389461517334
    7. '.None' → logprob: -16.578893661499023
    8. ' ' → logprob: -16.578893661499023
    9. 'No' → logprob: -17.578893661499023
    10. '   ' → logprob: -17.578893661499023

Token 49: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4855358600616455
    2. '
' → logprob: -1.1105358600616455
    3. '    
' → logprob: -3.7355358600616455
    4. '<|end|>' → logprob: -3.9855358600616455
    5. ' 
' → logprob: -5.360535621643066
    6. ' ' → logprob: -6.110535621643066
    7. '  
' → logprob: -6.235535621643066
    8. '       ' → logprob: -7.360535621643066
    9. 'def' → logprob: -7.360535621643066
    10. '\n' → logprob: -7.485535621643066

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6159669160842896
    2. 'def' → logprob: -0.8659669160842896
    3. ' def' → logprob: -3.240966796875
    4. '    
' → logprob: -10.365966796875
    5. '
' → logprob: -10.615966796875
    6. '	def' → logprob: -10.990966796875
    7. '       ' → logprob: -11.365966796875
    8. '    ' → logprob: -12.615966796875
    9. ' ' → logprob: -12.615966796875
    10. '        
' → logprob: -12.740966796875

Token 51: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.292095299111679e-05
    2. ' def' → logprob: -9.875082969665527
    3. '   ' → logprob: -10.375082969665527
    4. 'import' → logprob: -16.12508201599121
    5. '	def' → logprob: -16.37508201599121
    6. '```' → logprob: -17.00008201599121
    7. '__' → logprob: -17.12508201599121
    8. ' ' → logprob: -17.75008201599121
    9. '       ' → logprob: -18.62508201599121
    10. 'd' → logprob: -18.87508201599121

Token 52: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20231087505817413
    2. '__' → logprob: -1.7023109197616577
    3. ' ' → logprob: -7.702311038970947
    4. '.__' → logprob: -8.077310562133789
    5. ' ' → logprob: -10.952310562133789
    6. '___' → logprob: -10.952310562133789
    7. ' _' → logprob: -11.202310562133789
    8. ' <' → logprob: -11.202310562133789
    9. '  ' → logprob: -11.327310562133789
    10. '<|end|>' → logprob: -11.327310562133789

Token 53: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: 0.0
    2. 'le' → logprob: -20.375
    3. 'eq' → logprob: -20.5
    4. ' lt' → logprob: -20.625
    5. 'gt' → logprob: -20.875
    6. 'l' → logprob: -21.375
    7. 'init' → logprob: -21.75
    8. 'ltk' → logprob: -22.0
    9. 'lf' → logprob: -22.25
    10. 'cmp' → logprob: -22.375

Token 54: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12720337510108948
    2. '__' → logprob: -2.1272034645080566
    3. '__('' → logprob: -8.752202987670898
    4. '__((' → logprob: -9.252202987670898
    5. '__(
' → logprob: -11.627202987670898
    6. '__("' → logprob: -12.127202987670898
    7. '(' → logprob: -12.877202987670898
    8. '__(*' → logprob: -13.002202987670898
    9. '___' → logprob: -13.627202987670898
    10. '_' → logprob: -15.127202987670898

Token 55: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.5014188799541444e-05
    2. ' self' → logprob: -10.250044822692871
    3. 'other' → logprob: -11.625044822692871
    4. 's' → logprob: -15.625044822692871
    5. '<|end|>' → logprob: -16.125045776367188
    6. '0' → logprob: -16.625045776367188
    7. '(self' → logprob: -16.625045776367188
    8. ',' → logprob: -16.875045776367188
    9. ' ' → logprob: -17.125045776367188
    10. '_self' → logprob: -17.625045776367188

Token 56: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7366668581962585
    2. ',' → logprob: -1.3616669178009033
    3. '__,' → logprob: -1.3616669178009033
    4. ' ,' → logprob: -5.736666679382324
    5. '__)' → logprob: -6.486666679382324
    6. ')' → logprob: -6.611666679382324
    7. '<|end|>' → logprob: -7.236666679382324
    8. '_' → logprob: -7.361666679382324
    9. '_,' → logprob: -7.861666679382324
    10. '__(' → logprob: -8.486666679382324

Token 57: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.474082887172699
    2. ' other' → logprob: -0.974082887172699
    3. 'Other' → logprob: -13.724082946777344
    4. 'o' → logprob: -13.974082946777344
    5. ' o' → logprob: -13.974082946777344
    6. ' ' → logprob: -14.224082946777344
    7. 'self' → logprob: -14.599082946777344
    8. '_other' → logprob: -14.599082946777344
    9. 'oth' → logprob: -14.724082946777344
    10. ' oth' → logprob: -14.974082946777344

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029985010623931885
    2. ')' → logprob: -6.002998352050781
    3. ' ):' → logprob: -7.627998352050781
    4. ':' → logprob: -11.127998352050781
    5. ',' → logprob: -11.752998352050781
    6. '):
' → logprob: -12.127998352050781
    7. ' )' → logprob: -12.877998352050781
    8. '>:' → logprob: -13.752998352050781
    9. '>):' → logprob: -14.502998352050781
    10. '<|end|>' → logprob: -14.502998352050781

Token 59: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4345451295375824
    2. '       ' → logprob: -1.6845451593399048
    3. 'return' → logprob: -1.9345451593399048
    4. ' self' → logprob: -3.9345450401306152
    5. 'self' → logprob: -5.934545040130615
    6. '   ' → logprob: -9.184545516967773
    7. ':return' → logprob: -10.309545516967773
    8. '<|end|>' → logprob: -10.809545516967773
    9. ' ' → logprob: -11.559545516967773
    10. '    ' → logprob: -11.684545516967773

Token 60: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011828131973743439
    2. 'self' → logprob: -4.5118279457092285
    3. ' return' → logprob: -7.2618279457092285
    4. '       ' → logprob: -9.511828422546387
    5. ' self' → logprob: -12.636828422546387
    6. '   ' → logprob: -14.386828422546387
    7. '           ' → logprob: -16.26182746887207
    8. '	return' → logprob: -16.26182746887207
    9. '{return' → logprob: -16.63682746887207
    10. ':return' → logprob: -16.63682746887207

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.575939953327179
    2. 'self' → logprob: -0.825939953327179
    3. '	self' → logprob: -15.200940132141113
    4. '(self' → logprob: -16.075939178466797
    5. '_self' → logprob: -16.200939178466797
    6. 'Self' → logprob: -16.575939178466797
    7. ' ' → logprob: -18.325939178466797
    8. 's' → logprob: -18.450939178466797
    9. '   ' → logprob: -18.450939178466797
    10. '       ' → logprob: -18.700939178466797

Token 62: '.freq' (ID: 184991)
  Prédit: '.freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.freq' → logprob: -0.0004428243264555931
    2. '.' → logprob: -8.000442504882812
    3. '.fre' → logprob: -10.000442504882812
    4. '.f' → logprob: -10.000442504882812
    5. ' .' → logprob: -11.500442504882812
    6. '.frequency' → logprob: -13.000442504882812
    7. '.fd' → logprob: -14.125442504882812
    8. '.fa' → logprob: -14.250442504882812
    9. '.fe' → logprob: -14.750442504882812
    10. '.token' → logprob: -14.875442504882812

Token 63: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006748178042471409
    2. '<' → logprob: -5.006748199462891
    3. ' ' → logprob: -10.38174819946289
    4. ' >' → logprob: -14.63174819946289
    5. '  ' → logprob: -15.38174819946289
    6. ' <=' → logprob: -15.50674819946289
    7. ' <
' → logprob: -15.50674819946289
    8. '   ' → logprob: -15.63174819946289
    9. '<|end|>' → logprob: -15.75674819946289
    10. ' <",' → logprob: -16.13174819946289

Token 64: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.023247340694069862
    2. 'other' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.898247718811035
    4. '(other' → logprob: -14.523247718811035
    5. ' oth' → logprob: -15.773247718811035
    6. '.other' → logprob: -16.02324676513672
    7. 'othe' → logprob: -17.02324676513672
    8. '_other' → logprob: -17.14824676513672
    9. ' o' → logprob: -17.64824676513672
    10. 'Other' → logprob: -17.64824676513672

Token 65: '.freq' (ID: 184991)
  Prédit: '.freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.freq' → logprob: -0.040267426520586014
    2. '.' → logprob: -3.2902674674987793
    3. 'freq' → logprob: -6.415267467498779
    4. '.fre' → logprob: -8.540266990661621
    5. ' .' → logprob: -8.790266990661621
    6. '.f' → logprob: -8.790266990661621
    7. '​.' → logprob: -10.540266990661621
    8. ''.' → logprob: -11.290266990661621
    9. '`.' → logprob: -11.415266990661621
    10. '.
' → logprob: -11.915266990661621

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41826149821281433
    2. '

' → logprob: -1.1682615280151367
    3. 'def' → logprob: -3.5432615280151367
    4. '<|end|>' → logprob: -7.293261528015137
    5. '


' → logprob: -7.793261528015137
    6. '
' → logprob: -8.543261528015137
    7. '```' → logprob: -8.543261528015137
    8. '\n' → logprob: -9.418261528015137
    9. 'class' → logprob: -9.418261528015137
    10. '<|end|>' → logprob: -9.668261528015137

Token 67: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034767629113048315
    2. '
' → logprob: -6.128476619720459
    3. 'class' → logprob: -7.003476619720459
    4. '

' → logprob: -8.253477096557617
    5. '```' → logprob: -9.128477096557617
    6. ' def' → logprob: -12.503477096557617
    7. '#' → logprob: -13.128477096557617
    8. '    
' → logprob: -13.253477096557617
    9. '``' → logprob: -14.378477096557617
    10. ')' → logprob: -14.378477096557617

Token 68: ' h' (ID: 312)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.5789129137992859
    2. ' h' → logprob: -0.8289129137992859
    3. ' create' → logprob: -6.578912734985352
    4. ' encode' → logprob: -6.828912734985352
    5. ' ' → logprob: -8.453912734985352
    6. ' compress' → logprob: -9.703912734985352
    7. ' generate' → logprob: -9.828912734985352
    8. ' get' → logprob: -10.078912734985352
    9. ' Huff' → logprob: -10.203912734985352
    10. ' calculate' → logprob: -10.703912734985352

Token 69: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -0.00012630375567823648
    2. 'uff' → logprob: -9.000125885009766
    3. 'u' → logprob: -13.875125885009766
    4. 'e' → logprob: -14.500125885009766
    5. '

' → logprob: -15.000125885009766
    6. 'uffle' → logprob: -15.375125885009766
    7. 'uf' → logprob: -15.500125885009766
    8. '```' → logprob: -16.000125885009766
    9. 'uft' → logprob: -16.250125885009766
    10. 'def' → logprob: -16.375125885009766

Token 70: '_code' (ID: 8330)
  Prédit: '_encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_encode' → logprob: -0.18944761157035828
    2. '_encoding' → logprob: -1.8144476413726807
    3. '_tree' → logprob: -5.439447402954102
    4. '_encoder' → logprob: -6.189447402954102
    5. '_' → logprob: -6.439447402954102
    6. '_code' → logprob: -7.064447402954102
    7. '_c' → logprob: -8.564447402954102
    8. '_decode' → logprob: -8.814447402954102
    9. '_com' → logprob: -9.064447402954102
    10. '_frequency' → logprob: -9.939447402954102

Token 71: '_helper' (ID: 26744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7910870909690857
    2. '(s' → logprob: -1.7910871505737305
    3. '_tree' → logprob: -1.9160871505737305
    4. 'c' → logprob: -3.2910871505737305
    5. '(tree' → logprob: -3.5410871505737305
    6. '(' → logprob: -3.6660871505737305
    7. '_map' → logprob: -3.7910871505737305
    8. 'tree' → logprob: -4.0410871505737305
    9. '_generator' → logprob: -4.4160871505737305
    10. ')' → logprob: -4.5410871505737305

Token 72: '(root' (ID: 17410)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.534650981426239
    2. '(' → logprob: -1.1596510410308838
    3. '(root' → logprob: -2.659651041030884
    4. '(tree' → logprob: -3.534651041030884
    5. '(parent' → logprob: -7.534650802612305
    6. '(nodes' → logprob: -8.534650802612305
    7. '(n' → logprob: -9.034650802612305
    8. '(Tree' → logprob: -9.034650802612305
    9. '(Node' → logprob: -9.784650802612305
    10. ' (' → logprob: -9.909650802612305

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007330321241170168
    2. '):' → logprob: -7.250732898712158
    3. ' ,' → logprob: -11.250733375549316
    4. ':' → logprob: -11.875733375549316
    5. ')' → logprob: -13.750733375549316
    6. ',node' → logprob: -14.000733375549316
    7. '‌,' → logprob: -14.750733375549316
    8. ',
' → logprob: -16.125732421875
    9. '   ' → logprob: -16.125732421875
    10. '):
' → logprob: -16.250732421875

Token 74: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.3987385928630829
    2. 'prefix' → logprob: -1.3987386226654053
    3. ' code' → logprob: -2.7737386226654053
    4. ' prefix' → logprob: -4.398738384246826
    5. 'current' → logprob: -6.023738384246826
    6. 'codes' → logprob: -6.273738384246826
    7. ' current' → logprob: -6.273738384246826
    8. 'path' → logprob: -7.773738384246826
    9. ' codes' → logprob: -8.148738861083984
    10. ' path' → logprob: -8.898738861083984

Token 75: '='',' (ID: 103747)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5304173231124878
    2. ',' → logprob: -0.9054173231124878
    3. ':' → logprob: -6.155417442321777
    4. '_prefix' → logprob: -6.405417442321777
    5. '_map' → logprob: -6.405417442321777
    6. 's' → logprob: -7.405417442321777
    7. ')' → logprob: -7.655417442321777
    8. '   ' → logprob: -9.030417442321777
    9. '_path' → logprob: -9.405417442321777
    10. '):
' → logprob: -9.530417442321777

Token 76: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' → logprob: -0.09779369086027145
    2. 'code' → logprob: -2.5977935791015625
    3. ' codes' → logprob: -4.0977935791015625
    4. ' code' → logprob: -7.0977935791015625
    5. 'mapping' → logprob: -7.0977935791015625
    6. 'd' → logprob: -9.097793579101562
    7. 'table' → logprob: -9.847793579101562
    8. 'h' → logprob: -10.097793579101562
    9. 'dictionary' → logprob: -10.222793579101562
    10. 'result' → logprob: -10.222793579101562

Token 77: '={}' (ID: 168862)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005340866628102958
    2. ')' → logprob: -8.375534057617188
    3. ':' → logprob: -8.625534057617188
    4. '):
' → logprob: -9.125534057617188
    5. ',' → logprob: -12.500534057617188
    6. '=' → logprob: -12.875534057617188
    7. '   ' → logprob: -13.625534057617188
    8. ' ):' → logprob: -13.875534057617188
    9. '=None' → logprob: -13.875534057617188
    10. '<|end|>' → logprob: -14.125534057617188

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012046386254951358
    2. ')' → logprob: -6.751204490661621
    3. ':' → logprob: -10.501204490661621
    4. ',' → logprob: -12.751204490661621
    5. '):
' → logprob: -12.876204490661621
    6. ' ):' → logprob: -13.876204490661621
    7. '   ' → logprob: -15.001204490661621
    8. ' ' → logprob: -16.376205444335938
    9. ''):' → logprob: -17.126205444335938
    10. '**' → logprob: -17.501205444335938

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07219146937131882
    2. ':' → logprob: -2.6971914768218994
    3. ')' → logprob: -7.19719123840332
    4. ' ' → logprob: -7.44719123840332
    5. '):' → logprob: -7.82219123840332
    6. ' :' → logprob: -8.57219123840332
    7. ',' → logprob: -9.19719123840332
    8. ' if' → logprob: -10.19719123840332
    9. '    
' → logprob: -10.32219123840332
    10. '  ' → logprob: -10.44719123840332

Token 80: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004319029860198498
    2. ' if' → logprob: -5.629319190979004
    3. 'if' (adapté à ' if') → logprob: -7.379319190979004
    4. '    ' → logprob: -9.754319190979004
    5. ' ' → logprob: -11.129319190979004
    6. ':' → logprob: -12.004319190979004
    7. '  ' → logprob: -12.379319190979004
    8. '    
' → logprob: -12.629319190979004
    9. '       ' → logprob: -12.879319190979004
    10. '   ' → logprob: -13.754319190979004

Token 81: ' not' (ID: 625)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5310059785842896
    2. ' root' → logprob: -0.9060059785842896
    3. ' not' → logprob: -5.031005859375
    4. 'not' → logprob: -6.656005859375
    5. ' ' → logprob: -11.031005859375
    6. '(root' → logprob: -12.156005859375
    7. '	root' → logprob: -12.281005859375
    8. ' ' → logprob: -12.281005859375
    9. '   ' → logprob: -14.281005859375
    10. '```' → logprob: -14.781005859375

Token 82: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3868761360645294
    2. ' root' → logprob: -1.136876106262207
    3. '(root' → logprob: -12.761876106262207
    4. '_root' → logprob: -14.136876106262207
    5. '	root' → logprob: -14.261876106262207
    6. 'Root' → logprob: -15.011876106262207
    7. '.root' → logprob: -15.511876106262207
    8. '[root' → logprob: -16.136877059936523
    9. ' ' → logprob: -16.386877059936523
    10. '   ' → logprob: -16.511877059936523

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003160133957862854
    2. '):' → logprob: -6.003159999847412
    3. ':
' → logprob: -8.12816047668457
    4. ':return' → logprob: -8.62816047668457
    5. '.left' → logprob: -10.00316047668457
    6. ' :' → logprob: -10.25316047668457
    7. ' or' → logprob: -10.50316047668457
    8. ')' → logprob: -10.62816047668457
    9. '):
' → logprob: -10.75316047668457
    10. '.' → logprob: -11.12816047668457

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029578065499663353
    2. '   ' → logprob: -3.9045779705047607
    3. ':' → logprob: -4.90457820892334
    4. ':return' → logprob: -6.77957820892334
    5. ' return' → logprob: -8.65457820892334
    6. 'return' → logprob: -9.52957820892334
    7. '<|end|>' → logprob: -9.65457820892334
    8. '    ' → logprob: -10.40457820892334
    9. ':
' → logprob: -11.15457820892334
    10. ',' → logprob: -11.27957820892334

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6061967015266418
    2. 'return' (adapté à ' return') → logprob: -0.8561967015266418
    3. '   ' → logprob: -3.606196641921997
    4. '       ' → logprob: -6.106196880340576
    5. ':return' → logprob: -8.106196403503418
    6. ' ' → logprob: -10.231196403503418
    7. '    ' → logprob: -10.731196403503418
    8. 'eturn' → logprob: -10.856196403503418
    9. '	return' → logprob: -11.356196403503418
    10. '
' → logprob: -11.856196403503418

Token 86: ' codes' (ID: 17913)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12255951017141342
    2. ' 
' → logprob: -3.1225595474243164
    3. ' None' → logprob: -3.6225595474243164
    4. '   ' → logprob: -4.247559547424316
    5. '    
' → logprob: -4.497559547424316
    6. 'None' → logprob: -4.747559547424316
    7. '  
' → logprob: -5.122559547424316
    8. ' ' → logprob: -5.872559547424316
    9. '<|end|>' → logprob: -7.747559547424316
    10. '\n' → logprob: -8.122559547424316

Token 87: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14289692044258118
    2. '<|end|>' → logprob: -2.267896890640259
    3. '    
' → logprob: -3.767896890640259
    4. '
' → logprob: -5.517897129058838
    5. '<|end|>' → logprob: -6.267897129058838
    6. '  
' → logprob: -8.51789665222168
    7. ' ' → logprob: -9.76789665222168
    8. ' 
' → logprob: -9.89289665222168
    9. '  ' → logprob: -10.01789665222168
    10. '    ' → logprob: -10.01789665222168

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011366429971531034
    2. 'if' → logprob: -6.876136779785156
    3. ' if' → logprob: -9.376136779785156
    4. '    
' → logprob: -11.126136779785156
    5. '  ' → logprob: -13.376136779785156
    6. ' ' → logprob: -13.751136779785156
    7. '<|end|>' → logprob: -14.501136779785156
    8. '    ' → logprob: -14.876136779785156
    9. '
' → logprob: -15.376136779785156
    10. '  
' → logprob: -15.876136779785156

Token 89: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016593512846156955
    2. '   ' → logprob: -6.751659393310547
    3. ' if' → logprob: -7.626659393310547
    4. 'If' → logprob: -14.501659393310547
    5. '    
' → logprob: -15.126659393310547
    6. '  ' → logprob: -15.251659393310547
    7. '#' → logprob: -15.751659393310547
    8. '	if' → logprob: -16.001659393310547
    9. '<|end|>' → logprob: -16.001659393310547
    10. 'code' → logprob: -16.126659393310547

Token 90: ' not' (ID: 625)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.34855324029922485
    2. ' root' → logprob: -1.22355318069458
    3. ' not' → logprob: -9.723553657531738
    4. 'not' → logprob: -10.598553657531738
    5. ' ' → logprob: -11.848553657531738
    6. '(root' → logprob: -11.848553657531738
    7. '   ' → logprob: -12.223553657531738
    8. '	root' → logprob: -12.973553657531738
    9. '[root' → logprob: -13.723553657531738
    10. '=root' → logprob: -15.348553657531738

Token 91: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.22543831169605255
    2. 'root' → logprob: -1.6004383563995361
    3. '(root' → logprob: -10.850438117980957
    4. ' ' → logprob: -12.850438117980957
    5. '	root' → logprob: -13.350438117980957
    6. '_root' → logprob: -14.475438117980957
    7. '[root' → logprob: -14.725438117980957
    8. '=root' → logprob: -15.100438117980957
    9. '.root' → logprob: -15.225438117980957
    10. '   ' → logprob: -15.350438117980957

Token 92: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00023739055905025452
    2. '.' → logprob: -8.375237464904785
    3. '.char' → logprob: -12.875237464904785
    4. ' .' → logprob: -13.375237464904785
    5. '.right' → logprob: -13.750237464904785
    6. '.le' → logprob: -14.625237464904785
    7. '.Left' → logprob: -15.375237464904785
    8. 'left' → logprob: -15.625237464904785
    9. '.children' → logprob: -15.875237464904785
    10. '.parent' → logprob: -16.00023651123047

Token 93: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06994910538196564
    2. 'and' → logprob: -2.694949150085449
    3. ' ' → logprob: -12.06994915008545
    4. '   ' → logprob: -12.31994915008545
    5. '<|end|>' → logprob: -13.81994915008545
    6. ' a' → logprob: -15.44494915008545
    7. '    ' → logprob: -15.44494915008545
    8. ')' → logprob: -15.56994915008545
    9. '	and' → logprob: -16.194948196411133
    10. '  ' → logprob: -16.194948196411133

Token 94: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00408397801220417
    2. 'not' → logprob: -5.50408411026001
    3. ' root' → logprob: -12.379083633422852
    4. ' ' → logprob: -14.129083633422852
    5. 'root' → logprob: -15.004083633422852
    6. '	not' → logprob: -15.754083633422852
    7. '
' → logprob: -17.37908363342285
    8. ' ' → logprob: -17.37908363342285
    9. '   ' → logprob: -17.62908363342285
    10. 'Not' → logprob: -17.87908363342285

Token 95: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.023281123489141464
    2. 'root' → logprob: -3.7732810974121094
    3. ' ' → logprob: -10.77328109741211
    4. '(root' → logprob: -11.64828109741211
    5. '	root' → logprob: -12.77328109741211
    6. ' ' → logprob: -13.89828109741211
    7. '=root' → logprob: -14.02328109741211
    8. '[root' → logprob: -14.39828109741211
    9. '_root' → logprob: -15.27328109741211
    10. '.root' → logprob: -15.52328109741211

Token 96: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0008434568881057203
    2. '.' → logprob: -7.125843524932861
    3. ' .' → logprob: -10.375843048095703
    4. 'right' → logprob: -12.625843048095703
    5. '.left' → logprob: -12.875843048095703
    6. '.root' → logprob: -14.750843048095703
    7. '.child' → logprob: -14.875843048095703
    8. '.r' → logprob: -15.375843048095703
    9. ').' → logprob: -15.500843048095703
    10. '.children' → logprob: -15.625843048095703

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032845442183315754
    2. ':
' → logprob: -5.753284454345703
    3. ' :' → logprob: -9.503284454345703
    4. '       ' → logprob: -11.503284454345703
    5. '   ' → logprob: -11.753284454345703
    6. '):' → logprob: -11.878284454345703
    7. ':return' → logprob: -12.753284454345703
    8. ' :
' → logprob: -13.003284454345703
    9. '):
' → logprob: -14.253284454345703
    10. ':
' → logprob: -15.003284454345703

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00909513235092163
    2. '   ' → logprob: -5.134095191955566
    3. ':' → logprob: -5.884095191955566
    4. ' code' → logprob: -9.509095191955566
    5. ' codes' → logprob: -9.759095191955566
    6. '<|end|>' → logprob: -9.759095191955566
    7. ',' → logprob: -10.259095191955566
    8. '[' → logprob: -10.509095191955566
    9. ':
' → logprob: -10.634095191955566
    10. '
' → logprob: -11.009095191955566

Token 99: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' (adapté à ' codes') → logprob: -0.10293129831552505
    2. ' codes' → logprob: -2.352931261062622
    3. '   ' → logprob: -6.727931499481201
    4. '       ' → logprob: -6.727931499481201
    5. '.codes' → logprob: -8.602931022644043
    6. '
' → logprob: -9.352931022644043
    7. '           ' → logprob: -10.602931022644043
    8. '_codes' → logprob: -11.852931022644043
    9. 'code' → logprob: -11.977931022644043
    10. ' ' → logprob: -12.102931022644043

Token 100: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. '```' → logprob: -17.12500762939453
    4. 'root' → logprob: -17.87500762939453
    5. '[node' → logprob: -18.75000762939453
    6. '   ' → logprob: -18.87500762939453
    7. '[cur' → logprob: -19.00000762939453
    8. '[row' → logprob: -19.25000762939453
    9. ' ' → logprob: -19.37500762939453
    10. '.setdefault' → logprob: -19.50000762939453

Token 101: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.000830355507787317
    2. '.' → logprob: -7.125830173492432
    3. 'char' → logprob: -11.87583065032959
    4. '.character' → logprob: -12.00083065032959
    5. ' .' → logprob: -12.37583065032959
    6. ').' → logprob: -13.00083065032959
    7. '.code' → logprob: -13.37583065032959
    8. '.Char' → logprob: -13.37583065032959
    9. '<char' → logprob: -14.12583065032959
    10. '	char' → logprob: -15.25083065032959

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003825293097179383
    2. ' ]' → logprob: -8.125382423400879
    3. ']=' → logprob: -9.375382423400879
    4. '=' → logprob: -14.250382423400879
    5. ' =' → logprob: -14.500382423400879
    6. '']' → logprob: -15.250382423400879
    7. ')' → logprob: -16.250383377075195
    8. ']='' → logprob: -16.500383377075195
    9. '`]' → logprob: -17.250383377075195
    10. ']+=' → logprob: -17.375383377075195

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.576414108276367
    4. ']' → logprob: -16.451414108276367
    5. ']=' → logprob: -16.576414108276367
    6. ')' → logprob: -16.701414108276367
    7. ' =
' → logprob: -16.701414108276367
    8. '＝' → logprob: -16.826414108276367
    9. ' ='' → logprob: -17.201414108276367
    10. ')=' → logprob: -17.326414108276367

Token 104: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.31326213479042053
    2. ' code' → logprob: -1.3132621049880981
    3. '	code' → logprob: -15.813261985778809
    4. '(code' → logprob: -16.438262939453125
    5. ' ' → logprob: -16.563262939453125
    6. '   ' → logprob: -17.063262939453125
    7. '_code' → logprob: -17.938262939453125
    8. 'codes' → logprob: -18.938262939453125
    9. '
' → logprob: -19.688262939453125
    10. '    ' → logprob: -20.063262939453125

Token 105: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5236178636550903
    2. '   ' → logprob: -0.8986178636550903
    3. '    
' → logprob: -7.898617744445801
    4. '
' → logprob: -10.6486177444458
    5. '        
' → logprob: -10.6486177444458
    6. 'return' → logprob: -10.7736177444458
    7. '<|end|>' → logprob: -11.1486177444458
    8. '    ' → logprob: -11.2736177444458
    9. ' return' → logprob: -11.6486177444458
    10. '     ' → logprob: -12.8986177444458

Token 106: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.008681586012244225
    2. ' code' → logprob: -4.758681774139404
    3. 'else' → logprob: -10.133681297302246
    4. ' else' → logprob: -10.883681297302246
    5. 'len' → logprob: -12.258681297302246
    6. '(code' → logprob: -13.133681297302246
    7. '   ' → logprob: -14.383681297302246
    8. '
' → logprob: -14.508681297302246
    9. ' len' → logprob: -15.008681297302246
    10. '```' → logprob: -16.258682250976562

Token 107: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.007205605506896973
    2. '!=' → logprob: -5.007205486297607
    3. ' else' → logprob: -7.757205486297607
    4. '!' → logprob: -10.257205963134766
    5. ' !=' → logprob: -11.382205963134766
    6. '!='' → logprob: -11.882205963134766
    7. '!==' → logprob: -12.257205963134766
    8. '>' → logprob: -13.257205963134766
    9. '!="' → logprob: -14.382205963134766
    10. 'is' → logprob: -14.632205963134766

Token 108: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02722867578268051
    2. '"' → logprob: -3.652228593826294
    3. ' '' → logprob: -7.152228832244873
    4. ' "' → logprob: -10.027228355407715
    5. ''a' → logprob: -10.527228355407715
    6. ''o' → logprob: -10.652228355407715
    7. ''A' → logprob: -11.402228355407715
    8. ''u' → logprob: -12.027228355407715
    9. ''b' → logprob: -12.402228355407715
    10. ''on' → logprob: -13.402228355407715

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.625
    3. ' ' → logprob: -20.125
    4. '۰' → logprob: -21.375
    5. '01' → logprob: -22.875
    6. ''' → logprob: -22.875
    7. '０' → logprob: -23.5
    8. '٠' → logprob: -23.625
    9. '000' → logprob: -24.625
    10. '०' → logprob: -25.125

Token 110: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00862131267786026
    2. ''
' → logprob: -4.7586212158203125
    3. ''
' → logprob: -13.383621215820312
    4. '   ' → logprob: -13.383621215820312
    5. '')' → logprob: -13.383621215820312
    6. '"' → logprob: -14.133621215820312
    7. ''

' → logprob: -14.383621215820312
    8. '       ' → logprob: -15.883621215820312
    9. ''"
' → logprob: -16.383621215820312
    10. 'return' → logprob: -16.633621215820312

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0704609602689743
    2. '       ' → logprob: -2.6954610347747803
    3. '    
' → logprob: -8.19546127319336
    4. '
' → logprob: -8.94546127319336
    5. 'return' → logprob: -9.69546127319336
    6. ' return' → logprob: -10.57046127319336
    7. ' ' → logprob: -11.82046127319336
    8. '        
' → logprob: -12.07046127319336
    9. '  ' → logprob: -12.32046127319336
    10. '    ' → logprob: -12.57046127319336

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4050983786582947
    2. '   ' → logprob: -1.1550984382629395
    3. ' return' → logprob: -4.4050984382629395
    4. '       ' → logprob: -5.1550984382629395
    5. '
' → logprob: -9.780097961425781
    6. ' ' → logprob: -11.905097961425781
    7. '	return' → logprob: -12.155097961425781
    8. '    
' → logprob: -12.155097961425781
    9. '  ' → logprob: -13.405097961425781
    10. '    ' → logprob: -14.280097961425781

Token 113: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' → logprob: -0.0036026788875460625
    2. ' codes' → logprob: -5.628602504730225
    3. '.codes' → logprob: -13.503602981567383
    4. 'code' → logprob: -14.128602981567383
    5. '_codes' → logprob: -15.253602981567383
    6. 'cod' → logprob: -17.253602981567383
    7. 'Codes' → logprob: -17.253602981567383
    8. 'c' → logprob: -17.628602981567383
    9. ' ' → logprob: -18.003602981567383
    10. 'coded' → logprob: -18.628602981567383

Token 114: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05612335726618767
    2. '    
' → logprob: -2.9311232566833496
    3. '
' → logprob: -6.80612325668335
    4. 'if' → logprob: -9.931123733520508
    5. '  
' → logprob: -10.431123733520508
    6. '        
' → logprob: -10.931123733520508
    7. '   
' → logprob: -11.431123733520508
    8. ' if' → logprob: -11.806123733520508
    9. ' 
' → logprob: -12.306123733520508
    10. '<|end|>' → logprob: -12.556123733520508

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032285355031490326
    2. 'if' → logprob: -3.657285451889038
    3. 'h' → logprob: -5.657285213470459
    4. 'codes' → logprob: -6.657285213470459
    5. ' if' → logprob: -7.032285213470459
    6. '    
' → logprob: -9.532285690307617
    7. ' h' → logprob: -9.532285690307617
    8. 'def' → logprob: -10.032285690307617
    9. '
' → logprob: -10.157285690307617
    10. 'code' → logprob: -10.532285690307617

Token 116: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.000779965310357511
    2. ' h' → logprob: -7.50078010559082
    3. '   ' → logprob: -9.37578010559082
    4. 'if' → logprob: -9.75078010559082
    5. 'codes' → logprob: -9.87578010559082
    6. '
' → logprob: -10.75078010559082
    7. 'code' → logprob: -12.25078010559082
    8. ' if' → logprob: -13.12578010559082
    9. ' codes' → logprob: -13.62578010559082
    10. ' ' → logprob: -13.87578010559082

Token 117: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -0.0005612540990114212
    2. 'uff' → logprob: -7.625561237335205
    3. '   ' → logprob: -9.875561714172363
    4. 'u' → logprob: -11.625561714172363
    5. 'uf' → logprob: -12.375561714172363
    6. '
' → logprob: -13.875561714172363
    7. 'f' → logprob: -14.125561714172363
    8. '    ' → logprob: -14.250561714172363
    9. '```' → logprob: -14.375561714172363
    10. ' uff' → logprob: -14.500561714172363

Token 118: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -1.3782830137643032e-05
    2. '_tree' → logprob: -11.25001335144043
    3. '_codes' → logprob: -15.12501335144043
    4. '_' → logprob: -15.75001335144043
    5. 'Code' → logprob: -17.25001335144043
    6. '_node' → logprob: -17.50001335144043
    7. '_codegen' → logprob: -17.50001335144043
    8. '_cod' → logprob: -17.50001335144043
    9. '_co' → logprob: -17.62501335144043
    10. 'code' → logprob: -17.75001335144043

Token 119: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -1.8624639324116288e-06
    2. '_helpers' → logprob: -13.250001907348633
    3. '_help' → logprob: -16.375001907348633
    4. '_handler' → logprob: -20.250001907348633
    5. '_' → logprob: -21.000001907348633
    6. '_Helper' → logprob: -21.250001907348633
    7. '_code' → logprob: -21.500001907348633
    8. ' _' → logprob: -21.500001907348633
    9. '```' → logprob: -22.250001907348633
    10. '_he' → logprob: -22.500001907348633

Token 120: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. ' (' → logprob: -16.500001907348633
    4. 'root' → logprob: -17.250001907348633
    5. '(
' → logprob: -17.625001907348633
    6. '[root' → logprob: -18.000001907348633
    7. '=root' → logprob: -18.875001907348633
    8. '(ROOT' → logprob: -19.000001907348633
    9. '(node' → logprob: -19.250001907348633
    10. ' root' → logprob: -19.375001907348633

Token 121: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00039492646465077996
    2. '.' → logprob: -8.000394821166992
    3. '.right' → logprob: -10.500394821166992
    4. ',' → logprob: -11.125394821166992
    5. ').' → logprob: -11.875394821166992
    6. '.root' → logprob: -12.375394821166992
    7. ' .' → logprob: -13.250394821166992
    8. ')' → logprob: -13.875394821166992
    9. 'left' → logprob: -14.375394821166992
    10. ' ' → logprob: -14.625394821166992

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015158153837546706
    2. ' ,' → logprob: -6.501515865325928
    3. '   ' → logprob: -11.75151538848877
    4. '(code' → logprob: -13.37651538848877
    5. ' ' → logprob: -13.50151538848877
    6. '  ' → logprob: -13.50151538848877
    7. ',c' → logprob: -14.50151538848877
    8. '    ' → logprob: -15.62651538848877
    9. ',
' → logprob: -16.376516342163086
    10. '(' → logprob: -16.501516342163086

Token 123: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.38694217801094055
    2. ' code' → logprob: -1.1369421482086182
    3. ' ' → logprob: -10.136941909790039
    4. '   ' → logprob: -11.136941909790039
    5. ' f' → logprob: -12.386941909790039
    6. '(code' → logprob: -12.636941909790039
    7. '    ' → logprob: -12.886941909790039
    8. '	code' → logprob: -13.511941909790039
    9. 'f' → logprob: -13.636941909790039
    10. '  ' → logprob: -13.761941909790039

Token 124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2523663341999054
    2. '+' → logprob: -1.502366304397583
    3. '+'' → logprob: -7.752366542816162
    4. ' +'' → logprob: -12.627366065979004
    5. '   ' → logprob: -13.627366065979004
    6. ' ' → logprob: -13.752366065979004
    7. '=' → logprob: -14.377366065979004
    8. '+"' → logprob: -15.002366065979004
    9. ')' → logprob: -15.252366065979004
    10. '+')' → logprob: -15.627366065979004

Token 125: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10024494677782059
    2. '"' → logprob: -2.3502449989318848
    3. ' '' → logprob: -10.350244522094727
    4. '0' → logprob: -12.600244522094727
    5. ' "' → logprob: -13.475244522094727
    6. '   ' → logprob: -14.225244522094727
    7. ')' → logprob: -15.350244522094727
    8. '
' → logprob: -15.600244522094727
    9. ' ' → logprob: -16.725244522094727
    10. '('' → logprob: -16.850244522094727

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '۰' → logprob: -22.375
    4. '1' → logprob: -22.5
    5. '')' → logprob: -23.375
    6. '00' → logprob: -24.125
    7. '   ' → logprob: -24.25
    8. '０' → logprob: -25.25
    9. '٠' → logprob: -25.5
    10. '01' → logprob: -25.625

Token 127: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0002541872672736645
    2. '')' → logprob: -9.12525463104248
    3. ',' → logprob: -9.62525463104248
    4. ''' → logprob: -9.75025463104248
    5. ')' → logprob: -11.12525463104248
    6. '   ' → logprob: -12.62525463104248
    7. '')
' → logprob: -13.37525463104248
    8. '',
' → logprob: -14.25025463104248
    9. ')',' → logprob: -15.00025463104248
    10. ' ',' → logprob: -15.50025463104248

Token 128: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' → logprob: -0.2519441843032837
    2. ' codes' → logprob: -1.5019441843032837
    3. 'c' → logprob: -11.626944541931152
    4. ' ' → logprob: -13.376944541931152
    5. '.codes' → logprob: -13.376944541931152
    6. 'code' → logprob: -13.626944541931152
    7. '_codes' → logprob: -14.001944541931152
    8. ')' → logprob: -15.501944541931152
    9. 'cod' → logprob: -15.876944541931152
    10. '
' → logprob: -16.001943588256836

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740978181362152
    2. ')
' → logprob: -0.9740978479385376
    3. ')

' → logprob: -11.849098205566406
    4. '   ' → logprob: -11.974098205566406
    5. ')
' → logprob: -12.349098205566406
    6. ' )
' → logprob: -13.224098205566406
    7. ' )' → logprob: -14.349098205566406
    8. ' ' → logprob: -14.599098205566406
    9. '),' → logprob: -17.099098205566406
    10. ')return' → logprob: -17.724098205566406

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034473033156245947
    2. 'h' → logprob: -6.253447532653809
    3. ' h' → logprob: -6.503447532653809
    4. '
' → logprob: -11.128447532653809
    5. '    
' → logprob: -12.503447532653809
    6. '	h' → logprob: -14.128447532653809
    7. ' 
' → logprob: -16.503446578979492
    8. '```' → logprob: -17.378446578979492
    9. '   ' → logprob: -17.878446578979492
    10. '       ' → logprob: -18.378446578979492

Token 131: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0026711381506174803
    2. '   ' → logprob: -6.502671241760254
    3. ' h' → logprob: -6.752671241760254
    4. '	h' → logprob: -15.752671241760254
    5. ' ' → logprob: -16.377670288085938
    6. '  ' → logprob: -16.502670288085938
    7. '
' → logprob: -17.502670288085938
    8. '    ' → logprob: -17.752670288085938
    9. 'heap' → logprob: -18.252670288085938
    10. '    
' → logprob: -18.377670288085938

Token 132: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -2.15310683415737e-05
    2. 'uff' → logprob: -11.125021934509277
    3. 'uf' → logprob: -13.000021934509277
    4. 'u' → logprob: -14.250021934509277
    5. '```' → logprob: -14.500021934509277
    6. '   ' → logprob: -14.500021934509277
    7. 'ff' → logprob: -14.625021934509277
    8. 'f' → logprob: -14.750021934509277
    9. '#' → logprob: -15.250021934509277
    10. '
' → logprob: -15.750021934509277

Token 133: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -2.45848218582978e-06
    2. 'code' → logprob: -14.00000286102295
    3. '_tree' → logprob: -14.25000286102295
    4. '_helper' → logprob: -15.87500286102295
    5. ' _' → logprob: -16.000001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'Code' → logprob: -16.500001907348633
    8. '_CODE' → logprob: -16.625001907348633
    9. '
' → logprob: -16.750001907348633
    10. '```' → logprob: -16.750001907348633

Token 134: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -5.512236498361744e-07
    2. '_helpers' → logprob: -14.875000953674316
    3. '_help' → logprob: -16.375
    4. 'helper' → logprob: -17.375
    5. '_code' → logprob: -17.625
    6. '__' → logprob: -18.625
    7. '_Helper' → logprob: -18.625
    8. '```' → logprob: -19.375
    9. '-helper' → logprob: -19.375
    10. 'Helper' → logprob: -19.5

Token 135: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. 'root' → logprob: -14.125005722045898
    4. '[root' → logprob: -16.3750057220459
    5. ' (' → logprob: -17.3750057220459
    6. '=root' → logprob: -18.1250057220459
    7. ' root' → logprob: -18.8750057220459
    8. '(
' → logprob: -19.3750057220459
    9. '(ROOT' → logprob: -19.6250057220459
    10. '	root' → logprob: -20.2500057220459

Token 136: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.440506407059729e-05
    2. 'right' → logprob: -10.75003433227539
    3. '.' → logprob: -11.50003433227539
    4. '.root' → logprob: -13.75003433227539
    5. ' .' → logprob: -14.00003433227539
    6. ' ' → logprob: -15.25003433227539
    7. '   ' → logprob: -15.37503433227539
    8. '[right' → logprob: -16.25003433227539
    9. ',' → logprob: -16.87503433227539
    10. '```' → logprob: -17.00003433227539

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007404190837405622
    2. '(root' → logprob: -7.2507405281066895
    3. ' ,' → logprob: -10.500740051269531
    4. ')' → logprob: -13.625740051269531
    5. 'root' → logprob: -13.625740051269531
    6. '[root' → logprob: -15.125740051269531
    7. '),' → logprob: -16.37574005126953
    8. '(' → logprob: -16.62574005126953
    9. ',
' → logprob: -17.25074005126953
    10. ' root' → logprob: -17.50074005126953

Token 138: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.20143009722232819
    2. 'code' → logprob: -1.701430082321167
    3. ''' → logprob: -11.451430320739746
    4. ' ' → logprob: -13.076430320739746
    5. '(code' → logprob: -13.076430320739746
    6. '	code' → logprob: -14.576430320739746
    7. ' '' → logprob: -14.701430320739746
    8. '_code' → logprob: -15.076430320739746
    9. 'Code' → logprob: -15.826430320739746
    10. '"' → logprob: -15.826430320739746

Token 139: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029751762747764587
    2. '+' → logprob: -3.529751777648926
    3. ')' → logprob: -14.654751777648926
    4. ' ' → logprob: -14.779751777648926
    5. '+'' → logprob: -15.404751777648926
    6. ''' → logprob: -17.02975082397461
    7. '=' → logprob: -17.40475082397461
    8. '   ' → logprob: -17.90475082397461
    9. ' +
' → logprob: -17.90475082397461
    10. ' +'' → logprob: -17.90475082397461

Token 140: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004143811296671629
    2. ' '' → logprob: -5.504143714904785
    3. '"' → logprob: -9.879143714904785
    4. '1' → logprob: -12.004143714904785
    5. ' ' → logprob: -12.254143714904785
    6. '   ' → logprob: -14.129143714904785
    7. '`' → logprob: -14.629143714904785
    8. '  ' → logprob: -14.629143714904785
    9. ')' → logprob: -14.879143714904785
    10. '('' → logprob: -15.254143714904785

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019318510312587023
    2. ''' → logprob: -6.251931667327881
    3. ' ' → logprob: -13.501932144165039
    4. '"' → logprob: -14.001932144165039
    5. '')' → logprob: -14.126932144165039
    6. '''' → logprob: -17.12693214416504
    7. '`' → logprob: -17.50193214416504
    8. '   ' → logprob: -17.50193214416504
    9. ')' → logprob: -18.25193214416504
    10. 'def' → logprob: -18.50193214416504

Token 142: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3135085701942444
    2. ',' → logprob: -1.3135085105895996
    3. ')' → logprob: -8.938508987426758
    4. ' ,' → logprob: -9.688508987426758
    5. ')',' → logprob: -10.438508987426758
    6. ' ',' → logprob: -11.563508987426758
    7. '",' → logprob: -12.063508987426758
    8. ''' → logprob: -12.688508987426758
    9. '   ' → logprob: -13.063508987426758
    10. '`,' → logprob: -13.563508987426758

Token 143: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' → logprob: -0.1799083650112152
    2. ' codes' → logprob: -1.8049083948135376
    3. 'code' → logprob: -9.554908752441406
    4. ' ' → logprob: -10.054908752441406
    5. ')' → logprob: -10.554908752441406
    6. ' code' → logprob: -12.054908752441406
    7. 'c' → logprob: -12.304908752441406
    8. '.codes' → logprob: -12.304908752441406
    9. '_codes' → logprob: -13.054908752441406
    10. '   ' → logprob: -13.554908752441406

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05540991574525833
    2. ')
' → logprob: -3.0554099082946777
    3. '   ' → logprob: -5.055409908294678
    4. 'return' → logprob: -8.055410385131836
    5. ')return' → logprob: -9.305410385131836
    6. ' )' → logprob: -11.805410385131836
    7. ')
' → logprob: -12.805410385131836
    8. ')

' → logprob: -13.555410385131836
    9. ' )
' → logprob: -13.555410385131836
    10. ' return' → logprob: -13.680410385131836

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000918008794542402
    2. 'return' → logprob: -7.000917911529541
    3. ' return' → logprob: -12.1259183883667
    4. '	return' → logprob: -14.7509183883667
    5. '    
' → logprob: -14.7509183883667
    6. '       ' → logprob: -16.125917434692383
    7. '   ' → logprob: -16.625917434692383
    8. '  ' → logprob: -17.375917434692383
    9. ' ' → logprob: -17.500917434692383
    10. ':return' → logprob: -17.500917434692383

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02357609011232853
    2. '   ' → logprob: -3.773576021194458
    3. ' return' → logprob: -8.023575782775879
    4. ' ' → logprob: -13.148575782775879
    5. '	return' → logprob: -14.398575782775879
    6. '  ' → logprob: -15.398575782775879
    7. '    
' → logprob: -16.898576736450195
    8. '
' → logprob: -17.148576736450195
    9. '       ' → logprob: -17.523576736450195
    10. ':return' → logprob: -17.773576736450195

Token 147: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' → logprob: -0.0002613358374219388
    2. ' codes' → logprob: -8.250261306762695
    3. 'code' → logprob: -17.375261306762695
    4. '.codes' → logprob: -17.875261306762695
    5. '_codes' → logprob: -18.375261306762695
    6. 'Codes' → logprob: -20.000261306762695
    7. 'cod' → logprob: -21.125261306762695
    8. 'c' → logprob: -21.500261306762695
    9. 'coded' → logprob: -23.000261306762695
    10. 'coding' → logprob: -23.375261306762695

Token 148: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0047406721860170364
    2. '
' → logprob: -5.7547407150268555
    3. '<|end|>' → logprob: -6.5047407150268555
    4. '

' → logprob: -10.504740715026855
    5. '  
' → logprob: -11.254740715026855
    6. '```' → logprob: -11.629740715026855
    7. ')' → logprob: -12.379740715026855
    8. '<|end|>' → logprob: -12.504740715026855
    9. '#' → logprob: -13.004740715026855
    10. '    
' → logprob: -13.629740715026855

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.225939872208983e-05
    2. '
' → logprob: -10.375032424926758
    3. '

' → logprob: -15.125032424926758
    4. '```' → logprob: -15.625032424926758
    5. ' def' → logprob: -15.875032424926758
    6. '  
' → logprob: -16.125032424926758
    7. 'import' → logprob: -16.125032424926758
    8. '    
' → logprob: -16.125032424926758
    9. 'from' → logprob: -16.625032424926758
    10. 'ndef' → logprob: -17.375032424926758

Token 150: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1890912801027298
    2. 'h' → logprob: -1.8140913248062134
    3. ' build' → logprob: -5.064091205596924
    4. 'build' → logprob: -6.314091205596924
    5. ' encode' → logprob: -7.939091205596924
    6. ' create' → logprob: -8.439091682434082
    7. ' generate' → logprob: -8.939091682434082
    8. 'generate' → logprob: -9.314091682434082
    9. 'encode' → logprob: -9.439091682434082
    10. ' get' → logprob: -9.439091682434082

Token 151: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -1.1637164789135568e-05
    2. 'uff' → logprob: -11.375011444091797
    3. 'uffle' → logprob: -17.375011444091797
    4. 'e' → logprob: -17.875011444091797
    5. 'uf' → logprob: -18.125011444091797
    6. 'a' → logprob: -18.500011444091797
    7. '
' → logprob: -18.625011444091797
    8. 'u' → logprob: -18.625011444091797
    9. ' uff' → logprob: -19.000011444091797
    10. '#' → logprob: -19.375011444091797

Token 152: '_code' (ID: 8330)
  Prédit: '_encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_encode' → logprob: -0.22406771779060364
    2. '_encoding' → logprob: -1.7240676879882812
    3. '_encoder' → logprob: -4.599067687988281
    4. '_code' → logprob: -5.099067687988281
    5. '_tree' → logprob: -5.474067687988281
    6. '_c' → logprob: -6.974067687988281
    7. '_com' → logprob: -7.724067687988281
    8. '_codes' → logprob: -8.474067687988281
    9. '_decode' → logprob: -8.724067687988281
    10. '_frequency' → logprob: -9.474067687988281

Token 153: '(text' (ID: 13414)
  Prédit: '(freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -0.444209486246109
    2. '_tree' → logprob: -2.319209575653076
    3. '(tree' → logprob: -2.694209575653076
    4. '(s' → logprob: -2.694209575653076
    5. '(text' → logprob: -3.694209575653076
    6. '(f' → logprob: -3.694209575653076
    7. 'tree' → logprob: -3.819209575653076
    8. '(input' → logprob: -4.569209575653076
    9. '_frequency' → logprob: -4.694209575653076
    10. '_encode' → logprob: -4.694209575653076

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005027544684708118
    2. '):
' → logprob: -7.625502586364746
    3. ')' → logprob: -11.875502586364746
    4. ' ):' → logprob: -12.500502586364746
    5. ':' → logprob: -12.750502586364746
    6. '):
' → logprob: -14.000502586364746
    7. '   ' → logprob: -16.500503540039062
    8. '}:' → logprob: -16.750503540039062
    9. ''):' → logprob: -17.375503540039062
    10. ']:' → logprob: -17.750503540039062

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024429336190223694
    2. ' if' → logprob: -8.750244140625
    3. ' frequencies' → logprob: -10.000244140625
    4. ' frequency' → logprob: -11.000244140625
    5. ' freq' → logprob: -12.000244140625
    6. 'freq' → logprob: -12.125244140625
    7. 'if' → logprob: -12.250244140625
    8. '    
' → logprob: -12.500244140625
    9. 'frequency' → logprob: -13.875244140625
    10. '    ' → logprob: -14.250244140625

Token 156: ' counter' (ID: 9446)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6139593124389648
    2. ' if' → logprob: -0.8639593124389648
    3. 'freq' → logprob: -4.113959312438965
    4. '   ' → logprob: -4.488959312438965
    5. ' freq' → logprob: -5.113959312438965
    6. 'frequency' → logprob: -6.113959312438965
    7. ' frequency' → logprob: -7.113959312438965
    8. 'counter' (adapté à ' counter') → logprob: -8.113959312438965
    9. 'fre' → logprob: -8.863959312438965
    10. ' counter' → logprob: -8.988959312438965

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002364382147789
    2. '=' → logprob: -2.350236415863037
    3. '(' → logprob: -10.975236892700195
    4. ' ' → logprob: -11.975236892700195
    5. '   ' → logprob: -12.725236892700195
    6. ')' → logprob: -13.725236892700195
    7. 's' → logprob: -13.975236892700195
    8. '  ' → logprob: -14.600236892700195
    9. '(text' → logprob: -15.475236892700195
    10. ',' → logprob: -15.600236892700195

Token 158: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.07889165729284286
    2. ' Counter' → logprob: -2.5788917541503906
    3. '.Counter' → logprob: -13.82889175415039
    4. '   ' → logprob: -14.95389175415039
    5. ' ' → logprob: -15.95389175415039
    6. 'C' → logprob: -16.32889175415039
    7. '_counter' → logprob: -16.32889175415039
    8. 'Count' → logprob: -16.82889175415039
    9. 'Counters' → logprob: -16.95389175415039
    10. ' counter' → logprob: -17.20389175415039

Token 159: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. 'text' → logprob: -14.50000286102295
    4. ' (' → logprob: -17.375003814697266
    5. '{text' → logprob: -17.500003814697266
    6. ' text' → logprob: -18.750003814697266
    7. '=text' → logprob: -19.500003814697266
    8. ',text' → logprob: -19.875003814697266
    9. '[text' → logprob: -20.625003814697266
    10. '(tex' → logprob: -21.250003814697266

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.673547563375905e-05
    2. ')
' → logprob: -9.750086784362793
    3. ' )' → logprob: -10.500086784362793
    4. '   ' → logprob: -14.875086784362793
    5. ')

' → logprob: -15.375086784362793
    6. ')
' → logprob: -16.000085830688477
    7. '))' → logprob: -16.750085830688477
    8. ').' → logprob: -17.375085830688477
    9. ' )
' → logprob: -17.750085830688477
    10. ' ' → logprob: -18.000085830688477

Token 161: '   ' (ID: 271)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5990660786628723
    2. '   ' → logprob: -0.8490660786628723
    3. 'heap' → logprob: -3.8490660190582275
    4. ' if' → logprob: -6.849066257476807
    5. '    
' → logprob: -8.974065780639648
    6. ' pq' → logprob: -9.474065780639648
    7. 'pq' → logprob: -9.724065780639648
    8. ' priority' → logprob: -10.224065780639648
    9. '
' → logprob: -10.224065780639648
    10. '.heap' → logprob: -10.349065780639648

Token 162: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.10087452828884125
    2. ' heap' → logprob: -2.350874423980713
    3. 'priority' → logprob: -8.100874900817871
    4. 'pq' → logprob: -8.475874900817871
    5. '   ' → logprob: -9.100874900817871
    6. 'queue' → logprob: -10.850874900817871
    7. ' priority' → logprob: -11.975874900817871
    8. 'if' → logprob: -12.100874900817871
    9. ' if' → logprob: -12.600874900817871
    10. 'hq' → logprob: -13.225874900817871

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.577200710773468
    2. '=' → logprob: -0.827200710773468
    3. 'q' → logprob: -6.702200889587402
    4. '=[]' → logprob: -10.952200889587402
    5. ' ' → logprob: -11.702200889587402
    6. '.' → logprob: -12.827200889587402
    7. ',' → logprob: -13.952200889587402
    8. ' =[' → logprob: -14.327200889587402
    9. ')' → logprob: -14.452200889587402
    10. '_' → logprob: -15.077200889587402

Token 164: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16158409416675568
    2. '[' → logprob: -1.9115841388702393
    3. ' []' → logprob: -7.53658390045166
    4. ' [' → logprob: -7.78658390045166
    5. '[]
' → logprob: -8.28658390045166
    6. '[
' → logprob: -10.78658390045166
    7. '[list' → logprob: -10.78658390045166
    8. '[node' → logprob: -10.91158390045166
    9. '[(' → logprob: -11.16158390045166
    10. '[List' → logprob: -11.41158390045166

Token 165: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.650902271270752
    2. '   ' → logprob: -1.400902271270752
    3. 'for' → logprob: -1.525902271270752
    4. '    
' → logprob: -4.775902271270752
    5. '<|end|>' → logprob: -5.275902271270752
    6. '
' → logprob: -7.650902271270752
    7. '	for' → logprob: -8.275901794433594
    8. ' 
' → logprob: -9.150901794433594
    9. ' ' → logprob: -9.650901794433594
    10. '<|end|>' → logprob: -9.900901794433594

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06208622083067894
    2. ' for' → logprob: -2.8120861053466797
    3. '   ' → logprob: -9.06208610534668
    4. '    
' → logprob: -13.81208610534668
    5. ' ' → logprob: -14.31208610534668
    6. '	for' → logprob: -14.68708610534668
    7. '  ' → logprob: -15.06208610534668
    8. '
' → logprob: -16.31208610534668
    9. '  
' → logprob: -16.68708610534668
    10. ' 
' → logprob: -16.81208610534668

Token 167: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.0011888028820976615
    2. ' char' → logprob: -6.7511887550354
    3. '(char' → logprob: -11.376189231872559
    4. 'ch' → logprob: -11.876189231872559
    5. '   ' → logprob: -16.626188278198242
    6. 'key' → logprob: -16.751188278198242
    7. ' ch' → logprob: -17.751188278198242
    8. ',char' → logprob: -18.001188278198242
    9. '	char' → logprob: -18.126188278198242
    10. 'item' → logprob: -18.126188278198242

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013846253568772227
    2. ' in' → logprob: -9.500138282775879
    3. ' ,' → logprob: -10.375138282775879
    4. ',f' → logprob: -11.125138282775879
    5. 'in' → logprob: -11.625138282775879
    6. ',char' → logprob: -12.625138282775879
    7. ',count' → logprob: -13.625138282775879
    8. '‌,' → logprob: -13.750138282775879
    9. ',in' → logprob: -14.625138282775879
    10. ',s' → logprob: -15.375138282775879

Token 169: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.16023053228855133
    2. ' freq' → logprob: -1.9102305173873901
    3. '(freq' → logprob: -13.16023063659668
    4. ' frequency' → logprob: -13.28523063659668
    5. 'frequency' → logprob: -13.91023063659668
    6. '_freq' → logprob: -14.03523063659668
    7. 'fre' → logprob: -14.91023063659668
    8. 'count' → logprob: -15.53523063659668
    9. '.freq' → logprob: -15.66023063659668
    10. ' ' → logprob: -16.66023063659668

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005932236090302467
    2. 'in' → logprob: -5.130932331085205
    3. ',' → logprob: -13.255931854248047
    4. ' ' → logprob: -13.505931854248047
    5. '	in' → logprob: -16.005931854248047
    6. '  ' → logprob: -16.255931854248047
    7. 'import' → logprob: -16.630931854248047
    8. '<|end|>' → logprob: -16.630931854248047
    9. ' ,' → logprob: -17.130931854248047
    10. ' i' → logprob: -17.255931854248047

Token 171: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.048588622361421585
    2. ' counter' → logprob: -3.048588514328003
    3. '	counter' → logprob: -14.798588752746582
    4. 'Counter' → logprob: -14.923588752746582
    5. '(counter' → logprob: -15.173588752746582
    6. '[counter' → logprob: -16.298587799072266
    7. '_counter' → logprob: -17.173587799072266
    8. 'ounter' → logprob: -17.423587799072266
    9. '   ' → logprob: -17.423587799072266
    10. '.counter' → logprob: -17.548587799072266

Token 172: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.03542393073439598
    2. 'items' → logprob: -4.160423755645752
    3. ':' → logprob: -4.410423755645752
    4. '.' → logprob: -5.660423755645752
    5. '_items' → logprob: -6.785423755645752
    6. '.iteritems' → logprob: -6.910423755645752
    7. ' in' → logprob: -7.285423755645752
    8. ' items' → logprob: -8.16042423248291
    9. 'in' → logprob: -9.41042423248291
    10. '   ' → logprob: -9.78542423248291

Token 173: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.150362166110426e-05
    2. ' ():' → logprob: -9.625091552734375
    3. '()' → logprob: -10.625091552734375
    4. '():
' → logprob: -13.875091552734375
    5. '()>' → logprob: -17.000091552734375
    6. '(' → logprob: -17.250091552734375
    7. '():
' → logprob: -17.250091552734375
    8. ':' → logprob: -17.625091552734375
    9. ' ()' → logprob: -17.625091552734375
    10. '()">' → logprob: -18.375091552734375

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40861082077026367
    2. ' heap' → logprob: -1.1586108207702637
    3. '   ' → logprob: -3.9086108207702637
    4. 'heap' → logprob: -7.408610820770264
    5. '(heap' → logprob: -7.408610820770264
    6. '<|end|>' → logprob: -10.033611297607422
    7. '    ' → logprob: -10.283611297607422
    8. '.heap' → logprob: -10.408611297607422
    9. ' he' → logprob: -10.658611297607422
    10. '        
' → logprob: -11.283611297607422

Token 175: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.09005343914031982
    2. 'heap' (adapté à ' heap') → logprob: -2.4650535583496094
    3. '   ' → logprob: -6.840053558349609
    4. ' node' → logprob: -11.34005355834961
    5. '(heap' → logprob: -11.59005355834961
    6. '.heap' → logprob: -12.21505355834961
    7. '       ' → logprob: -12.34005355834961
    8. 'node' → logprob: -12.96505355834961
    9. ' he' → logprob: -13.09005355834961
    10. '    ' → logprob: -13.59005355834961

Token 176: '.append' (ID: 3709)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023434728384017944
    2. '.append' → logprob: -3.773434638977051
    3. '.push' → logprob: -9.39843463897705
    4. '.he' → logprob: -9.89843463897705
    5. '.' → logprob: -10.14843463897705
    6. ' .' → logprob: -11.77343463897705
    7. '.q' → logprob: -12.02343463897705
    8. '.put' → logprob: -14.27343463897705
    9. '.app' → logprob: -14.89843463897705
    10. 'append' → logprob: -15.02343463897705

Token 177: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.125006675720215
    3. 'H' → logprob: -13.500006675720215
    4. ' H' → logprob: -17.87500762939453
    5. '(h' → logprob: -18.25000762939453
    6. ' Huff' → logprob: -18.75000762939453
    7. '(
' → logprob: -18.75000762939453
    8. ' (' → logprob: -19.25000762939453
    9. '	H' → logprob: -19.37500762939453
    10. '((' → logprob: -19.62500762939453

Token 178: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -3.5716304410016164e-05
    2. 'uff' → logprob: -10.250035285949707
    3. '```' → logprob: -16.375036239624023
    4. 'uf' → logprob: -16.875036239624023
    5. 'ff' → logprob: -17.500036239624023
    6. '``' → logprob: -17.875036239624023
    7. 'aff' → logprob: -17.875036239624023
    8. 'uffle' → logprob: -18.000036239624023
    9. '[' → logprob: -18.000036239624023
    10. 'uffer' → logprob: -18.125036239624023

Token 179: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -17.875
    3. 'Tre' → logprob: -17.875
    4. 'tree' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. '_tree' → logprob: -18.5
    7. '-' → logprob: -19.0
    8. '	Tree' → logprob: -19.125
    9. 'Trie' → logprob: -19.5
    10. '<Tree' → logprob: -19.625

Token 180: 'Node' (ID: 2701)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.5759459733963013
    2. 'Node' → logprob: -0.8259459733963013
    3. 'Tre' → logprob: -12.700945854187012
    4. 'node' → logprob: -13.700945854187012
    5. 'ree' → logprob: -14.075945854187012
    6. 'tree' → logprob: -14.575945854187012
    7. ' Tree' → logprob: -15.325945854187012
    8. 'ode' → logprob: -15.450945854187012
    9. '<Tree' → logprob: -15.950945854187012
    10. '```' → logprob: -16.200946807861328

Token 181: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -10.750024795532227
    3. 'char' → logprob: -13.250024795532227
    4. ')' → logprob: -14.500024795532227
    5. ' (' → logprob: -14.625024795532227
    6. ',char' → logprob: -14.875024795532227
    7. ')(' → logprob: -15.250024795532227
    8. '(chars' → logprob: -15.250024795532227
    9. '(
' → logprob: -16.000024795532227
    10. '<char' → logprob: -17.625024795532227

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',f' → logprob: -12.500017166137695
    4. ',char' → logprob: -15.500017166137695
    5. ',
' → logprob: -15.750017166137695
    6. '‌,' → logprob: -17.250017166137695
    7. '(freq' → logprob: -17.375017166137695
    8. ',float' → logprob: -18.375017166137695
    9. 'freq' → logprob: -18.750017166137695
    10. ',int' → logprob: -18.875017166137695

Token 183: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.4740993082523346
    2. ' freq' → logprob: -0.9740992784500122
    3. '(freq' → logprob: -10.974099159240723
    4. '   ' → logprob: -13.474099159240723
    5. 'fre' → logprob: -13.974099159240723
    6. '.freq' → logprob: -14.224099159240723
    7. '_freq' → logprob: -14.474099159240723
    8. ' ' → logprob: -14.849099159240723
    9. '    ' → logprob: -14.974099159240723
    10. 'Freq' → logprob: -14.974099159240723

Token 184: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002576370956376195
    2. ')' → logprob: -6.1275763511657715
    3. '))
' → logprob: -7.8775763511657715
    4. ' ))' → logprob: -11.62757682800293
    5. '))

' → logprob: -13.87757682800293
    6. ')))' → logprob: -14.62757682800293
    7. '   ' → logprob: -14.87757682800293
    8. ')
' → logprob: -15.00257682800293
    9. '),' → logprob: -15.12757682800293
    10. '));' → logprob: -15.37757682800293

Token 185: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.049646735191345215
    2. '
' → logprob: -3.1746468544006348
    3. ' heap' → logprob: -5.674646854400635
    4. '(heap' → logprob: -6.424646854400635
    5. '.heap' → logprob: -6.924646854400635
    6. '   ' → logprob: -8.049646377563477
    7. '```' → logprob: -9.674646377563477
    8. '    
' → logprob: -9.924646377563477
    9. '_heap' → logprob: -10.174646377563477
    10. '  
' → logprob: -10.674646377563477

Token 186: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.009800597093999386
    2. ' heap' → logprob: -4.634800434112549
    3. '
' → logprob: -10.509800910949707
    4. '.heap' → logprob: -11.884800910949707
    5. '   ' → logprob: -12.259800910949707
    6. '(heap' → logprob: -12.384800910949707
    7. 'import' → logprob: -13.884800910949707
    8. '_heap' → logprob: -15.134800910949707
    9. '```' → logprob: -15.759800910949707
    10. 'Heap' → logprob: -16.88479995727539

Token 187: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007591230678372085
    2. '.heap' → logprob: -7.750759124755859
    3. 'ify' → logprob: -8.50075912475586
    4. 'heap' → logprob: -9.62575912475586
    5. '.sort' → logprob: -11.00075912475586
    6. '(heap' → logprob: -11.62575912475586
    7. 'Q' → logprob: -11.75075912475586
    8. '.' → logprob: -11.75075912475586
    9. '=' → logprob: -13.25075912475586
    10. 'qs' → logprob: -13.62575912475586

Token 188: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.002585170092061162
    2. '.he' → logprob: -6.002584934234619
    3. '.' → logprob: -9.127585411071777
    4. ' .' → logprob: -15.377585411071777
    5. '(heap' → logprob: -16.12758445739746
    6. 'ify' → logprob: -16.12758445739746
    7. '.qu' → logprob: -16.25258445739746
    8. 'heap' → logprob: -16.62758445739746
    9. '.q' → logprob: -16.75258445739746
    10. '}.' → logprob: -17.12758445739746

Token 189: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -4.36574100604048e-06
    2. 'lify' → logprob: -12.750004768371582
    3. 'if' → logprob: -14.250004768371582
    4. '```' → logprob: -14.750004768371582
    5. 'q' → logprob: -15.375004768371582
    6. 'fy' → logprob: -16.375003814697266
    7. 'push' → logprob: -16.875003814697266
    8. 'p' → logprob: -18.625003814697266
    9. 'ip' → logprob: -18.750003814697266
    10. 'ize' → logprob: -19.000003814697266

Token 190: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.750004768371582
    4. '(h' → logprob: -18.625003814697266
    5. '(
' → logprob: -19.000003814697266
    6. 'heap' → logprob: -19.250003814697266
    7. '(queue' → logprob: -19.500003814697266
    8. ' heap' → logprob: -20.500003814697266
    9. '(hist' → logprob: -21.000003814697266
    10. '(hand' → logprob: -21.125003814697266

Token 191: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -12.250007629394531
    3. ' )' → logprob: -12.750007629394531
    4. '))' → logprob: -16.50000762939453
    5. '   ' → logprob: -16.75000762939453
    6. ')`' → logprob: -18.37500762939453
    7. ')

' → logprob: -18.50000762939453
    8. ')}' → logprob: -18.62500762939453
    9. '),' → logprob: -19.37500762939453
    10. ')
' → logprob: -19.50000762939453

Token 192: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.019598741084337234
    2. ' while' → logprob: -4.144598960876465
    3. '   ' → logprob: -6.019598960876465
    4. '    
' → logprob: -7.019598960876465
    5. '
' → logprob: -9.394598960876465
    6. '	while' → logprob: -9.644598960876465
    7. '<|end|>' → logprob: -9.894598960876465
    8. 'While' → logprob: -11.269598960876465
    9. '  
' → logprob: -11.644598960876465
    10. ' 
' → logprob: -12.269598960876465

Token 193: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -2.2007883671903983e-05
    2. ' while' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '    
' → logprob: -16.375022888183594
    5. 'While' → logprob: -16.625022888183594
    6. 'if' → logprob: -17.250022888183594
    7. '	while' → logprob: -17.375022888183594
    8. '
' → logprob: -18.625022888183594
    9. '```' → logprob: -19.750022888183594
    10. '  
' → logprob: -20.500022888183594

Token 194: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38688766956329346
    2. ' len' → logprob: -1.1368876695632935
    3. '(len' → logprob: -11.011887550354004
    4. ' ' → logprob: -17.13688850402832
    5. '	len' → logprob: -17.88688850402832
    6. ',len' → logprob: -18.01188850402832
    7. 'heap' → logprob: -18.38688850402832
    8. '=len' → logprob: -18.76188850402832
    9. '[len' → logprob: -19.13688850402832
    10. '   ' → logprob: -19.63688850402832

Token 195: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. 'heap' → logprob: -13.750018119812012
    4. '(
' → logprob: -17.250017166137695
    5. ' heap' → logprob: -17.625017166137695
    6. '(queue' → logprob: -18.375017166137695
    7. ' (' → logprob: -19.375017166137695
    8. '.heap' → logprob: -19.875017166137695
    9. '_heap' → logprob: -20.125017166137695
    10. '()' → logprob: -20.125017166137695

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10864388942718506
    2. '>' → logprob: -2.6086440086364746
    3. ')>' → logprob: -4.108644008636475
    4. ' >' → logprob: -4.358644008636475
    5. ' )' → logprob: -9.483643531799316
    6. '()>' → logprob: -12.483643531799316
    7. ' ' → logprob: -12.483643531799316
    8. '">' → logprob: -13.358643531799316
    9. ']>' → logprob: -14.483643531799316
    10. '   ' → logprob: -14.608643531799316

Token 197: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020546795800328255
    2. ' >' → logprob: -3.8955469131469727
    3. '()>' → logprob: -13.020546913146973
    4. ')>' → logprob: -13.520546913146973
    5. ')' → logprob: -14.020546913146973
    6. '1' → logprob: -15.770546913146973
    7. '&gt' → logprob: -16.145545959472656
    8. ' ' → logprob: -16.270545959472656
    9. '">' → logprob: -16.770545959472656
    10. '>
' → logprob: -17.270545959472656

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004319804720580578
    2. ' ' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.625432014465332
    4. '
' → logprob: -16.875431060791016
    5. '```' → logprob: -17.000431060791016
    6. '  ' → logprob: -17.125431060791016
    7. '۱' → logprob: -18.500431060791016
    8. '    ' → logprob: -18.875431060791016
    9. '' → logprob: -19.687931060791016
    10. '１' → logprob: -20.187931060791016

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '```' → logprob: -17.375003814697266
    5. '
' → logprob: -18.250003814697266
    6. '۱' → logprob: -19.125003814697266
    7. '  ' → logprob: -19.937503814697266
    8. '' → logprob: -20.125003814697266
    9. '[' → logprob: -20.187503814697266
    10. '१' → logprob: -20.375003814697266

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015073629328981042
    2. ':
' → logprob: -6.50150728225708
    3. '):' → logprob: -13.501507759094238
    4. ' :' → logprob: -13.501507759094238
    5. '):
' → logprob: -14.001507759094238
    6. ',' → logprob: -14.751507759094238
    7. ':

' → logprob: -14.876507759094238
    8. ')' → logprob: -15.126507759094238
    9. ' and' → logprob: -15.376507759094238
    10. ':
' → logprob: -16.001506805419922

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3406035304069519
    2. ' node' → logprob: -1.3406035900115967
    3. ' left' → logprob: -4.340603351593018
    4. 'node' → logprob: -4.465603351593018
    5. 'left' → logprob: -6.590603351593018
    6. ' root' → logprob: -7.715603351593018
    7. '   ' → logprob: -8.590603828430176
    8. ' right' → logprob: -9.090603828430176
    9. 'root' → logprob: -9.715603828430176
    10. '    ' → logprob: -9.715603828430176

Token 202: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.39477604627609253
    2. ' left' → logprob: -1.6447761058807373
    3. 'node' → logprob: -2.2697761058807373
    4. ' node' → logprob: -3.5197761058807373
    5. '   ' → logprob: -8.894776344299316
    6. '```' → logprob: -10.894776344299316
    7. ' lef' → logprob: -12.769776344299316
    8. 'n' → logprob: -13.394776344299316
    9. '       ' → logprob: -13.394776344299316
    10. '	left' → logprob: -13.644776344299316

Token 203: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17988604307174683
    2. '=' → logprob: -1.8048861026763916
    3. '_node' → logprob: -9.054885864257812
    4. ' ' → logprob: -11.054885864257812
    5. '=node' → logprob: -13.054885864257812
    6. 'node' → logprob: -13.429885864257812
    7. ',' → logprob: -14.054885864257812
    8. '(heap' → logprob: -14.179885864257812
    9. 'pop' → logprob: -14.304885864257812
    10. '1' → logprob: -14.429885864257812

Token 204: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1800101101398468
    2. ' right' → logprob: -1.8050100803375244
    3. 'heap' → logprob: -8.555009841918945
    4. ' heap' → logprob: -10.430009841918945
    5. '_right' → logprob: -11.930009841918945
    6. ' ' → logprob: -12.055009841918945
    7. ' =' → logprob: -12.180009841918945
    8. '
' → logprob: -12.305009841918945
    9. '=' → logprob: -12.430009841918945
    10. '    ' → logprob: -12.555009841918945

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ' =
' → logprob: -15.950939178466797
    4. ' ' → logprob: -16.825939178466797
    5. '=
' → logprob: -17.325939178466797
    6. '(heap' → logprob: -17.325939178466797
    7. 'heap' → logprob: -17.825939178466797
    8. ')' → logprob: -19.075939178466797
    9. '＝' → logprob: -19.450939178466797
    10. ',' → logprob: -19.450939178466797

Token 206: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.020547492429614067
    2. ' heap' → logprob: -3.895547389984131
    3. '(heap' → logprob: -12.895547866821289
    4. 'he' → logprob: -13.145547866821289
    5. '.heap' → logprob: -14.020547866821289
    6. '
' → logprob: -16.52054786682129
    7. ' ' → logprob: -16.52054786682129
    8. '```' → logprob: -17.14554786682129
    9. '_heap' → logprob: -17.14554786682129
    10. ' he' → logprob: -17.39554786682129

Token 207: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5941604690160602e-05
    2. '.pop' → logprob: -11.250025749206543
    3. '.heap' → logprob: -12.125025749206543
    4. '.' → logprob: -12.500025749206543
    5. '.q' → logprob: -13.875025749206543
    6. 'pop' → logprob: -14.500025749206543
    7. 'heap' → logprob: -14.500025749206543
    8. '.he' → logprob: -14.750025749206543
    9. '(heap' → logprob: -15.125025749206543
    10. 'op' → logprob: -15.375025749206543

Token 208: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00013417120499070734
    2. '.heap' → logprob: -9.125134468078613
    3. '.' → logprob: -10.750134468078613
    4. 'he' → logprob: -12.875134468078613
    5. ' he' → logprob: -15.375134468078613
    6. '.q' → logprob: -16.000133514404297
    7. '.h' → logprob: -16.000133514404297
    8. ' .' → logprob: -16.250133514404297
    9. '.nl' → logprob: -16.375133514404297
    10. '```' → logprob: -16.500133514404297

Token 209: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.816093228830141e-06
    2. 'pp' → logprob: -12.87500286102295
    3. 'ap' → logprob: -15.62500286102295
    4. 'pop' → logprob: -17.750001907348633
    5. 'appen' → logprob: -19.000001907348633
    6. '[' → logprob: -19.500001907348633
    7. 'a' → logprob: -19.750001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' app' → logprob: -20.875001907348633
    10. '(app' → logprob: -21.000001907348633

Token 210: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.12601356208324432
    2. 'ush' → logprob: -2.6260135173797607
    3. 'app' → logprob: -3.2510135173797607
    4. 'p' → logprob: -6.25101375579834
    5. 'pp' → logprob: -6.25101375579834
    6. 'le' → logprob: -6.62601375579834
    7. 'ap' → logprob: -6.75101375579834
    8. 'pop' → logprob: -7.87601375579834
    9. 'al' → logprob: -8.50101375579834
    10. 'l' → logprob: -9.37601375579834

Token 211: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.5332478142227046e-05
    2. 'heap' → logprob: -11.125015258789062
    3. '(' → logprob: -15.500015258789062
    4. '(queue' → logprob: -16.500015258789062
    5. ' heap' → logprob: -16.500015258789062
    6. '.heap' → logprob: -18.375015258789062
    7. '```' → logprob: -19.125015258789062
    8. '(
' → logprob: -19.250015258789062
    9. '()' → logprob: -19.375015258789062
    10. ' (' → logprob: -19.625015258789062

Token 212: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05712849274277687
    2. ')' → logprob: -2.932128429412842
    3. ')
' → logprob: -6.182128429412842
    4. ',' → logprob: -8.80712890625
    5. '),
' → logprob: -11.43212890625
    6. ' ),' → logprob: -11.68212890625
    7. ')
' → logprob: -12.68212890625
    8. ' ' → logprob: -13.80712890625
    9. '),(' → logprob: -13.80712890625
    10. ')),' → logprob: -14.30712890625

Token 213: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.11285744607448578
    2. 'heap' → logprob: -2.2378573417663574
    3. '(heap' → logprob: -10.487857818603516
    4. ' ' → logprob: -12.737857818603516
    5. '.heap' → logprob: -12.987857818603516
    6. '   ' → logprob: -14.112857818603516
    7. ' 
' → logprob: -15.237857818603516
    8. '    ' → logprob: -15.612857818603516
    9. '_heap' → logprob: -15.862857818603516
    10. 'he' → logprob: -15.987857818603516

Token 214: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.05499910004437e-05
    2. '.he' → logprob: -9.375090599060059
    3. '.heap' → logprob: -12.375090599060059
    4. '.q' → logprob: -14.250090599060059
    5. '[' → logprob: -14.375090599060059
    6. 'he' → logprob: -15.875090599060059
    7. '```' → logprob: -17.250089645385742
    8. ' he' → logprob: -17.375089645385742
    9. 'heap' → logprob: -17.625089645385742
    10. '(heap' → logprob: -17.875089645385742

Token 215: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -7.195421494543552e-05
    2. 'he' → logprob: -10.25007152557373
    3. '.heap' → logprob: -10.25007152557373
    4. '.' → logprob: -15.00007152557373
    5. '_he' → logprob: -15.25007152557373
    6. 'heap' → logprob: -15.37507152557373
    7. 'q' → logprob: -15.87507152557373
    8. ' .' → logprob: -16.500072479248047
    9. ' he' → logprob: -17.250072479248047
    10. '..' → logprob: -17.375072479248047

Token 216: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002335451077669859
    2. 'ap' → logprob: -7.252335548400879
    3. 'op' → logprob: -7.502335548400879
    4. 'pp' → logprob: -7.752335548400879
    5. 'p' → logprob: -8.002335548400879
    6. 'pop' → logprob: -8.752335548400879
    7. 'e' → logprob: -9.752335548400879
    8. 'q' → logprob: -9.877335548400879
    9. 'appe' → logprob: -11.502335548400879
    10. '[' → logprob: -11.627335548400879

Token 217: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07018495351076126
    2. 'ush' → logprob: -2.6951849460601807
    3. 'app' → logprob: -8.945184707641602
    4. 'he' → logprob: -9.945184707641602
    5. 'pop' → logprob: -10.820184707641602
    6. 'p' → logprob: -10.945184707641602
    7. 'ap' → logprob: -12.320184707641602
    8. 'o' → logprob: -12.820184707641602
    9. '```' → logprob: -13.070184707641602
    10. 'ch' → logprob: -13.195184707641602

Token 218: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -7.896309739408025e-07
    2. 'heap' → logprob: -14.250000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' (' → logprob: -19.375
    5. '(queue' → logprob: -19.5
    6. ' heap' → logprob: -19.625
    7. '(
' → logprob: -19.875
    8. '(h' → logprob: -20.625
    9. '.heap' → logprob: -20.875
    10. '(mesh' → logprob: -21.625

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048607468605041504
    2. ')
' → logprob: -3.048607349395752
    3. ')
' → logprob: -11.04860782623291
    4. '))' → logprob: -13.54860782623291
    5. ')

' → logprob: -13.92360782623291
    6. ' )' → logprob: -14.29860782623291
    7. ');' → logprob: -14.29860782623291
    8. '),' → logprob: -15.92360782623291
    9. ' )
' → logprob: -15.92360782623291
    10. ')`' → logprob: -16.423606872558594

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006551713217049837
    2. '
' → logprob: -5.256551742553711
    3. '        
' → logprob: -8.381551742553711
    4. ' new' → logprob: -8.756551742553711
    5. 'new' → logprob: -8.756551742553711
    6. 'merged' → logprob: -8.756551742553711
    7. 'root' → logprob: -8.881551742553711
    8. 'node' → logprob: -9.131551742553711
    9. '   ' → logprob: -9.256551742553711
    10. ' merged' → logprob: -9.631551742553711

Token 221: ' node' (ID: 4596)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.7088868021965027
    2. ' merged' → logprob: -0.8338868021965027
    3. 'parent' → logprob: -4.333886623382568
    4. 'combined' → logprob: -4.333886623382568
    5. 'node' (adapté à ' node') → logprob: -4.458886623382568
    6. ' node' → logprob: -4.458886623382568
    7. 'new' → logprob: -4.583886623382568
    8. ' new' → logprob: -5.208886623382568
    9. ' combined' → logprob: -5.833886623382568
    10. ' parent' → logprob: -5.958886623382568

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.126930236816406
    4. ' =
' → logprob: -16.251930236816406
    5. '＝' → logprob: -17.001930236816406
    6. 's' → logprob: -17.126930236816406
    7. '   ' → logprob: -17.501930236816406
    8. '=
' → logprob: -17.626930236816406
    9. ' =
' → logprob: -18.251930236816406
    10. '.' → logprob: -18.251930236816406

Token 223: ' Huff' (ID: 83019)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.47408178448677063
    2. ' Huff' → logprob: -0.9740817546844482
    3. ' ' → logprob: -13.474081993103027
    4. ' Hug' → logprob: -13.849081993103027
    5. '	H' → logprob: -14.099081993103027
    6. '   ' → logprob: -14.349081993103027
    7. ' H' → logprob: -14.349081993103027
    8. '  ' → logprob: -16.84908103942871
    9. '_H' → logprob: -16.84908103942871
    10. ' Hadoop' → logprob: -17.09908103942871

Token 224: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -2.558399319241289e-05
    2. 'Man' → logprob: -10.750025749206543
    3. ' man' → logprob: -12.875025749206543
    4. '   ' → logprob: -14.875025749206543
    5. 'uman' → logprob: -15.375025749206543
    6. '-man' → logprob: -15.375025749206543
    7. 'Tree' → logprob: -15.500025749206543
    8. '```' → logprob: -15.500025749206543
    9. 'an' → logprob: -16.000024795532227
    10. '       ' → logprob: -17.000024795532227

Token 225: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: 0.0
    2. 'Tre' → logprob: -19.75
    3. 'tree' → logprob: -20.5
    4. '	Tree' → logprob: -20.625
    5. ' Tree' → logprob: -21.375
    6. '```' → logprob: -21.75
    7. '_tree' → logprob: -22.0
    8. 'Trie' → logprob: -22.5
    9. '<Tree' → logprob: -22.625
    10. 'T' → logprob: -23.0

Token 226: 'Node' (ID: 2701)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0004909569397568703
    2. 'Node' → logprob: -7.625491142272949
    3. 'tree' → logprob: -13.62549114227295
    4. 'Tre' → logprob: -14.37549114227295
    5. ' Tree' → logprob: -14.62549114227295
    6. 'ree' → logprob: -14.87549114227295
    7. '	Tree' → logprob: -16.500490188598633
    8. 'e' → logprob: -16.875490188598633
    9. '<Tree' → logprob: -17.125490188598633
    10. 'node' → logprob: -17.250490188598633

Token 227: '('',' (ID: 53836)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.06501539051532745
    2. 'None' → logprob: -2.8150153160095215
    3. '(' → logprob: -6.4400153160095215
    4. '('',' → logprob: -6.5650153160095215
    5. '(
' → logprob: -10.31501579284668
    6. ' None' → logprob: -12.81501579284668
    7. '```' → logprob: -14.69001579284668
    8. '('' → logprob: -14.81501579284668
    9. '("",' → logprob: -15.06501579284668
    10. '
' → logprob: -15.69001579284668

Token 228: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.5491004129871726e-05
    2. ' left' → logprob: -10.000045776367188
    3. '	left' → logprob: -19.000045776367188
    4. '   ' → logprob: -19.500045776367188
    5. 'lef' → logprob: -19.875045776367188
    6. '(left' → logprob: -20.250045776367188
    7. '[left' → logprob: -20.625045776367188
    8. 'right' → logprob: -20.625045776367188
    9. ' lef' → logprob: -21.875045776367188
    10. '       ' → logprob: -21.875045776367188

Token 229: '.freq' (ID: 184991)
  Prédit: '.freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.freq' → logprob: -9.253090865968261e-06
    2. 'freq' → logprob: -12.000009536743164
    3. '.' → logprob: -13.375009536743164
    4. '.frequency' → logprob: -13.750009536743164
    5. ' .' → logprob: -15.375009536743164
    6. '.fre' → logprob: -16.125009536743164
    7. '.char' → logprob: -17.875009536743164
    8. '_freq' → logprob: -18.375009536743164
    9. '(freq' → logprob: -18.875009536743164
    10. '_FREQ' → logprob: -19.125009536743164

Token 230: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868711292743683
    2. ' +' → logprob: -1.136871099472046
    3. '+
' → logprob: -16.886871337890625
    4. ' +
' → logprob: -18.761871337890625
    5. '＋' → logprob: -19.261871337890625
    6. '   ' → logprob: -20.136871337890625
    7. '+r' → logprob: -20.261871337890625
    8. ' ' → logprob: -20.386871337890625
    9. '+self' → logprob: -20.386871337890625
    10. '+

' → logprob: -21.761871337890625

Token 231: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12692883610725403
    2. ' right' → logprob: -2.1269288063049316
    3. '	right' → logprob: -14.87692928314209
    4. '(right' → logprob: -16.126928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '[right' → logprob: -17.001928329467773
    7. '   ' → logprob: -17.001928329467773
    8. '
' → logprob: -17.001928329467773
    9. '.right' → logprob: -17.501928329467773
    10. 'Right' → logprob: -18.126928329467773

Token 232: '.freq' (ID: 184991)
  Prédit: '.freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.freq' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.125019073486328
    3. 'freq' → logprob: -12.500019073486328
    4. ' .' → logprob: -15.125019073486328
    5. '.fre' → logprob: -17.250019073486328
    6. '(freq' → logprob: -18.000019073486328
    7. '.f' → logprob: -18.125019073486328
    8. '_freq' → logprob: -18.625019073486328
    9. '.frequency' → logprob: -19.250019073486328
    10. ').' → logprob: -19.750019073486328

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16065149009227753
    2. ')
' → logprob: -1.910651445388794
    3. '       ' → logprob: -8.035651206970215
    4. ')
' → logprob: -9.660651206970215
    5. '   ' → logprob: -10.410651206970215
    6. ' )' → logprob: -12.285651206970215
    7. ' )
' → logprob: -12.535651206970215
    8. ')

' → logprob: -14.410651206970215
    9. ',' → logprob: -15.160651206970215
    10. ' ' → logprob: -15.535651206970215

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028697995468974113
    2. 'node' → logprob: -3.778697967529297
    3. ' node' → logprob: -6.278697967529297
    4. '   ' → logprob: -6.778697967529297
    5. '        
' → logprob: -7.403697967529297
    6. '
' → logprob: -7.778697967529297
    7. '[node' → logprob: -8.028697967529297
    8. ',node' → logprob: -8.153697967529297
    9. '<|end|>' → logprob: -8.278697967529297
    10. ')' → logprob: -9.028697967529297

Token 235: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.029811246320605278
    2. ' node' → logprob: -3.529811143875122
    3. '       ' → logprob: -9.904810905456543
    4. '   ' → logprob: -11.654810905456543
    5. '	node' → logprob: -13.904810905456543
    6. ',node' → logprob: -14.404810905456543
    7. '[node' → logprob: -15.404810905456543
    8. '.node' → logprob: -16.02981185913086
    9. '(node' → logprob: -16.52981185913086
    10. ' ' → logprob: -16.77981185913086

Token 236: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.750000953674316
    3. ' .' → logprob: -15.500000953674316
    4. '.right' → logprob: -16.375
    5. 'left' → logprob: -16.875
    6. '.Left' → logprob: -18.125
    7. '.parent' → logprob: -19.75
    8. '.next' → logprob: -20.5
    9. '	left' → logprob: -20.625
    10. '.LEFT' → logprob: -20.875

Token 237: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022484004497528
    2. ' =' → logprob: -1.9102247953414917
    3. ',' → logprob: -14.785224914550781
    4. ' ' → logprob: -16.41022491455078
    5. '=node' → logprob: -16.78522491455078
    6. 'left' → logprob: -17.66022491455078
    7. '=
' → logprob: -17.66022491455078
    8. '=root' → logprob: -17.78522491455078
    9. ' =
' → logprob: -17.78522491455078
    10. ',left' → logprob: -18.03522491455078

Token 238: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.29535815119743347
    2. 'node' → logprob: -1.5453581809997559
    3. ' right' → logprob: -3.545358180999756
    4. 'right' → logprob: -4.295358180999756
    5. 'left' → logprob: -12.545357704162598
    6. ' left' → logprob: -12.670357704162598
    7. '=node' → logprob: -13.045357704162598
    8. '	node' → logprob: -15.920357704162598
    9. '=' → logprob: -16.295358657836914
    10. ' ' → logprob: -16.545358657836914

Token 239: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.01662660576403141
    2. '.' → logprob: -4.266626834869385
    3. '.left' → logprob: -6.016626834869385
    4. '=' → logprob: -11.266626358032227
    5. ' .' → logprob: -12.766626358032227
    6. 'right' → logprob: -13.016626358032227
    7. '.=' → logprob: -13.141626358032227
    8. ' =' → logprob: -13.891626358032227
    9. '.Right' → logprob: -14.891626358032227
    10. '<|end|>' → logprob: -15.141626358032227

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '=node' → logprob: -16.686967849731445
    4. '=
' → logprob: -18.186967849731445
    5. ',' → logprob: -18.561967849731445
    6. '=root' → logprob: -18.936967849731445
    7. '<|end|>' → logprob: -19.186967849731445
    8. '=user' → logprob: -19.311967849731445
    9. '=}' → logprob: -19.436967849731445
    10. '=line' → logprob: -19.436967849731445

Token 241: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12692958116531372
    2. ' left' → logprob: -2.126929521560669
    3. '(left' → logprob: -14.00192928314209
    4. '	left' → logprob: -14.87692928314209
    5. '[left' → logprob: -16.126930236816406
    6. ' lef' → logprob: -16.626930236816406
    7. '_left' → logprob: -17.126930236816406
    8. '.left' → logprob: -17.751930236816406
    9. '   ' → logprob: -17.751930236816406
    10. ' ' → logprob: -18.001930236816406

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037359268753789365
    2. ' ,' → logprob: -8.000373840332031
    3. ',right' → logprob: -10.500373840332031
    4. ',
' → logprob: -11.875373840332031
    5. ',node' → logprob: -12.625373840332031
    6. ',left' → logprob: -15.500373840332031
    7. ' right' → logprob: -16.50037384033203
    8. 'right' → logprob: -16.87537384033203
    9. 'left' → logprob: -19.12537384033203
    10. '
' → logprob: -19.62537384033203

Token 243: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31326231360435486
    2. 'right' → logprob: -1.3132623434066772
    3. '	right' → logprob: -15.313261985778809
    4. '(right' → logprob: -16.438262939453125
    5. '[right' → logprob: -16.563262939453125
    6. 'Right' → logprob: -16.813262939453125
    7. '.right' → logprob: -16.938262939453125
    8. '
' → logprob: -17.313262939453125
    9. ',right' → logprob: -17.688262939453125
    10. ' ' → logprob: -17.938262939453125

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053152237087488174
    2. ' heap' → logprob: -5.88031530380249
    3. 'heap' → logprob: -6.00531530380249
    4. '   ' → logprob: -10.630314826965332
    5. '(heap' → logprob: -11.755314826965332
    6. '.heap' → logprob: -11.880314826965332
    7. '
' → logprob: -14.130314826965332
    8. ' ' → logprob: -14.755314826965332
    9. '           ' → logprob: -14.880314826965332
    10. '      ' → logprob: -15.005314826965332

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05538058653473854
    2. ' heap' → logprob: -3.1803805828094482
    3. 'heap' → logprob: -4.555380821228027
    4. '   ' → logprob: -6.430380821228027
    5. '(heap' → logprob: -9.305380821228027
    6. '.heap' → logprob: -9.930380821228027
    7. '
' → logprob: -11.055380821228027
    8. ' ' → logprob: -11.305380821228027
    9. '        
' → logprob: -13.055380821228027
    10. '      ' → logprob: -13.180380821228027

Token 246: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00043233807082287967
    2. ' heap' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.500432014465332
    4. '.heap' → logprob: -16.87543296813965
    5. 'he' → logprob: -17.00043296813965
    6. '       ' → logprob: -17.12543296813965
    7. ' ' → logprob: -18.37543296813965
    8. '(heap' → logprob: -18.50043296813965
    9. '  ' → logprob: -18.87543296813965
    10. '_heap' → logprob: -19.62543296813965

Token 247: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.4272752852994017e-05
    2. '.he' → logprob: -10.75002384185791
    3. '.heap' → logprob: -13.75002384185791
    4. '.push' → logprob: -14.25002384185791
    5. '.' → logprob: -14.37502384185791
    6. 'push' → logprob: -16.125024795532227
    7. '.append' → logprob: -16.250024795532227
    8. 'app' → logprob: -16.500024795532227
    9. '.q' → logprob: -16.750024795532227
    10. '```' → logprob: -16.875024795532227

Token 248: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.005235887598246336
    2. '.heap' → logprob: -5.25523567199707
    3. '.' → logprob: -13.50523567199707
    4. 'he' → logprob: -14.50523567199707
    5. 'heap' → logprob: -15.75523567199707
    6. ' he' → logprob: -17.63023567199707
    7. '```' → logprob: -18.25523567199707
    8. '_he' → logprob: -18.25523567199707
    9. ' .' → logprob: -18.38023567199707
    10. '(heap' → logprob: -18.50523567199707

Token 249: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.1472419600977446e-06
    2. 'pp' → logprob: -14.000000953674316
    3. 'ap' → logprob: -15.125000953674316
    4. 'appen' → logprob: -18.000001907348633
    5. 'append' → logprob: -18.750001907348633
    6. 'appe' → logprob: -18.875001907348633
    7. ' app' → logprob: -19.250001907348633
    8. 'a' → logprob: -20.500001907348633
    9. 'push' → logprob: -21.375001907348633
    10. 'p' → logprob: -21.625001907348633

Token 250: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0013696423266083002
    2. 'sh' → logprob: -6.626369476318359
    3. 'push' → logprob: -10.75136947631836
    4. 'uf' → logprob: -11.75136947631836
    5. 'op' → logprob: -11.87636947631836
    6. 'app' → logprob: -13.50136947631836
    7. 'u' → logprob: -13.75136947631836
    8. '```' → logprob: -13.75136947631836
    9. 'ap' → logprob: -14.37636947631836
    10. 'us' → logprob: -14.87636947631836

Token 251: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.842555426876061e-06
    2. 'heap' → logprob: -12.250004768371582
    3. '(' → logprob: -16.8750057220459
    4. ' heap' → logprob: -17.6250057220459
    5. '.heap' → logprob: -19.0000057220459
    6. '```' → logprob: -19.2500057220459
    7. '(queue' → logprob: -19.6250057220459
    8. '(
' → logprob: -19.7500057220459
    9. '(node' → logprob: -19.8750057220459
    10. '(h' → logprob: -20.3750057220459

Token 252: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.00010843054042197764
    2. 'heap' → logprob: -9.75010871887207
    3. '(node' → logprob: -10.37510871887207
    4. ')' → logprob: -11.00010871887207
    5. '(' → logprob: -14.00010871887207
    6. ' heap' → logprob: -14.62510871887207
    7. ',' → logprob: -15.12510871887207
    8. '.heap' → logprob: -15.50010871887207
    9. '(
' → logprob: -16.25010871887207
    10. '(queue' → logprob: -16.37510871887207

Token 253: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07889165729284286
    2. ' node' → logprob: -2.5788917541503906
    3. '(node' → logprob: -13.20389175415039
    4. '	node' → logprob: -16.95389175415039
    5. '[node' → logprob: -17.95389175415039
    6. 'Node' → logprob: -18.07889175415039
    7. ' ' → logprob: -18.32889175415039
    8. ')' → logprob: -18.32889175415039
    9. ',node' → logprob: -18.82889175415039
    10. '_node' → logprob: -19.20389175415039

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.875004768371582
    4. ')return' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ')

' → logprob: -17.625003814697266
    7. ')`' → logprob: -18.250003814697266
    8. '))' → logprob: -19.125003814697266
    9. ')}' → logprob: -19.250003814697266
    10. ')#' → logprob: -20.375003814697266

Token 255: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37689873576164246
    2. 'return' → logprob: -2.126898765563965
    3. '   ' → logprob: -2.251898765563965
    4. '    
' → logprob: -3.251898765563965
    5. ' return' → logprob: -3.376898765563965
    6. 'root' → logprob: -4.501898765563965
    7. ' root' → logprob: -6.251898765563965
    8. ' 
' → logprob: -6.501898765563965
    9. '  
' → logprob: -6.751898765563965
    10. '

' → logprob: -8.126898765563965

Token 256: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.6176862716674805
    2. '
' → logprob: -1.1176862716674805
    3. ' root' → logprob: -2.1176862716674805
    4. 'return' → logprob: -5.1176862716674805
    5. '    
' → logprob: -5.7426862716674805
    6. '   ' → logprob: -6.3676862716674805
    7. ' 
' → logprob: -7.4926862716674805
    8. 'if' → logprob: -7.7426862716674805
    9. ' return' → logprob: -7.7426862716674805
    10. '

' → logprob: -8.36768627166748

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -14.975207328796387
    4. ' =
' → logprob: -15.475207328796387
    5. ' ' → logprob: -17.60020637512207
    6. '=

' → logprob: -17.85020637512207
    7. '=
' → logprob: -18.22520637512207
    8. '＝' → logprob: -18.22520637512207
    9. ' =
' → logprob: -19.22520637512207
    10. '(heap' → logprob: -19.35020637512207

Token 258: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2014244645833969
    2. ' heap' → logprob: -1.701424479484558
    3. '(heap' → logprob: -12.326424598693848
    4. ' None' → logprob: -13.076424598693848
    5. '.heap' → logprob: -13.201424598693848
    6. ' ' → logprob: -14.326424598693848
    7. 'he' → logprob: -14.326424598693848
    8. 'None' → logprob: -14.451424598693848
    9. '   ' → logprob: -15.076424598693848
    10. 'h' → logprob: -15.326424598693848

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004309076175559312
    2. 'q' → logprob: -7.750431060791016
    3. '```' → logprob: -15.875431060791016
    4. '0' → logprob: -16.750431060791016
    5. '.pop' → logprob: -17.250431060791016
    6. '
' → logprob: -18.000431060791016
    7. '.he' → logprob: -18.250431060791016
    8. 'he' → logprob: -18.875431060791016
    9. '.heap' → logprob: -19.000431060791016
    10. '.' → logprob: -19.375431060791016

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -18.75
    4. '   ' → logprob: -19.125
    5. '۰' → logprob: -19.5625
    6. '```' → logprob: -20.0
    7. '00' → logprob: -20.0625
    8. '000' → logprob: -20.125
    9. '٠' → logprob: -20.5625
    10. '-' → logprob: -20.625

Token 261: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001017551330733113
    2. ' )' → logprob: -9.250102043151855
    3. '<|end|>' → logprob: -13.125102043151855
    4. ')
' → logprob: -13.375102043151855
    5. ' ' → logprob: -14.125102043151855
    6. ']' → logprob: -14.375102043151855
    7. '}' → logprob: -14.875102043151855
    8. '   ' → logprob: -16.25010108947754
    9. ')return' → logprob: -16.62510108947754
    10. ' if' → logprob: -17.00010108947754

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1275903284549713
    2. 'return' → logprob: -2.1275904178619385
    3. ' return' → logprob: -7.377590179443359
    4. 'codes' → logprob: -10.37759017944336
    5. '```' → logprob: -13.25259017944336
    6. 'code' → logprob: -13.37759017944336
    7. '
' → logprob: -13.87759017944336
    8. '    
' → logprob: -14.50259017944336
    9. '	return' → logprob: -14.50259017944336
    10. ' codes' → logprob: -15.50259017944336

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009968327358365059
    2. 'codes' → logprob: -4.759968280792236
    3. ' return' → logprob: -6.634968280792236
    4. '   ' → logprob: -10.259968757629395
    5. ' codes' → logprob: -13.009968757629395
    6. '
' → logprob: -14.009968757629395
    7. 'code' → logprob: -14.759968757629395
    8. '```' → logprob: -15.009968757629395
    9. '    
' → logprob: -15.884968757629395
    10. ' ' → logprob: -15.884968757629395

Token 264: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00861456897109747
    2. ' h' → logprob: -4.758614540100098
    3. '	h' → logprob: -18.633615493774414
    4. '[h' → logprob: -19.008615493774414
    5. '(h' → logprob: -19.633615493774414
    6. '{' → logprob: -20.008615493774414
    7. '{}' → logprob: -20.633615493774414
    8. '   ' → logprob: -20.633615493774414
    9. '
' → logprob: -20.883615493774414
    10. ' ' → logprob: -21.008615493774414

Token 265: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -1.735893965815194e-05
    2. 'uff' → logprob: -11.125017166137695
    3. 'uf' → logprob: -13.625017166137695
    4. 'u' → logprob: -14.875017166137695
    5. 'f' → logprob: -15.750017166137695
    6. '[' → logprob: -15.750017166137695
    7. '_' → logprob: -15.875017166137695
    8. '{' → logprob: -15.875017166137695
    9. '```' → logprob: -15.875017166137695
    10. 'uman' → logprob: -16.250017166137695

Token 266: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: 0.0
    2. 'code' → logprob: -17.5
    3. '_tree' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. 'Code' → logprob: -20.375
    6. '`' → logprob: -20.875
    7. '_co' → logprob: -20.875
    8. '_codegen' → logprob: -21.0
    9. '\' → logprob: -21.0
    10. '_helper' → logprob: -21.125

Token 267: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -5.512236498361744e-07
    2. '_help' → logprob: -15.125000953674316
    3. '_helpers' → logprob: -15.750000953674316
    4. '_code' → logprob: -17.875
    5. 'helper' → logprob: -19.25
    6. ' helper' → logprob: -20.0
    7. '(helper' → logprob: -20.375
    8. '_root' → logprob: -20.375
    9. '_Helper' → logprob: -20.5
    10. '_handler' → logprob: -20.75

Token 268: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.375006675720215
    3. 'root' → logprob: -13.000006675720215
    4. ' (' → logprob: -17.0000057220459
    5. ' root' → logprob: -17.2500057220459
    6. '(
' → logprob: -17.3750057220459
    7. '[root' → logprob: -17.3750057220459
    8. '<|end|>' → logprob: -17.6250057220459
    9. '(ROOT' → logprob: -18.7500057220459
    10. '(r' → logprob: -19.0000057220459

Token 269: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. ' )' → logprob: -10.500028610229492
    3. ',' → logprob: -15.250028610229492
    4. ')
' → logprob: -15.375028610229492
    5. '())' → logprob: -16.125028610229492
    6. ' ' → logprob: -17.125028610229492
    7. ')#' → logprob: -17.250028610229492
    8. ')

' → logprob: -17.750028610229492
    9. '()' → logprob: -18.125028610229492
    10. '))' → logprob: -18.125028610229492

Token 270: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11029835045337677
    2. 'encoded' → logprob: -2.6102983951568604
    3. '<|end|>' → logprob: -4.235298156738281
    4. '#' → logprob: -4.735298156738281
    5. 'decoded' → logprob: -6.110298156738281
    6. 'text' → logprob: -6.235298156738281
    7. 'print' → logprob: -7.610298156738281
    8. '_encoded' → logprob: -7.610298156738281
    9. '<|end|>' → logprob: -7.985298156738281
    10. '
' → logprob: -7.985298156738281

Token 271: ' solution' (ID: 7578)
  Prédit: 'encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encode' → logprob: -0.41658610105514526
    2. ' encode' → logprob: -1.91658616065979
    3. 'h' → logprob: -2.29158616065979
    4. 'compress' → logprob: -3.16658616065979
    5. ' h' → logprob: -3.41658616065979
    6. 'decode' → logprob: -4.791585922241211
    7. ' compress' → logprob: -4.916585922241211
    8. 'def' → logprob: -7.666585922241211
    9. 'main' → logprob: -8.041585922241211
    10. '_encode' → logprob: -8.166585922241211

Token 272: '():
' (ID: 8595)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.001359997782856226
    2. '(' → logprob: -6.751359939575195
    3. '(s' → logprob: -9.751359939575195
    4. ' (' → logprob: -10.751359939575195
    5. '(input' → logprob: -10.751359939575195
    6. '(code' → logprob: -10.876359939575195
    7. '(txt' → logprob: -11.376359939575195
    8. '(string' → logprob: -11.751359939575195
    9. '():' → logprob: -11.876359939575195
    10. '_text' → logprob: -11.876359939575195

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06545664370059967
    2. ' text' → logprob: -2.8154566287994385
    3. 'text' → logprob: -5.690456867218018
    4. 'import' → logprob: -9.94045639038086
    5. ' import' → logprob: -10.31545639038086
    6. ' input' → logprob: -11.69045639038086
    7. '   ' → logprob: -12.06545639038086
    8. '```' → logprob: -12.31545639038086
    9. '	text' → logprob: -13.31545639038086
    10. 'input' → logprob: -13.56545639038086

Token 274: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.191351979970932
    2. '   ' → logprob: -2.191351890563965
    3. ' text' → logprob: -2.941351890563965
    4. 'import' → logprob: -4.691351890563965
    5. ' import' → logprob: -8.191351890563965
    6. 'input' → logprob: -9.941351890563965
    7. 's' → logprob: -10.066351890563965
    8. '```' → logprob: -10.566351890563965
    9. ' input' → logprob: -11.441351890563965
    10. 'data' → logprob: -12.691351890563965

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02330079860985279
    2. '=' → logprob: -3.773300886154175
    3. '   ' → logprob: -10.898301124572754
    4. ')' → logprob: -11.898301124572754
    5. '.' → logprob: -12.523301124572754
    6. '    ' → logprob: -12.523301124572754
    7. ',' → logprob: -13.023301124572754
    8. ' .=' → logprob: -13.023301124572754
    9. ' ' → logprob: -13.148301124572754
    10. '=input' → logprob: -13.148301124572754

Token 276: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4316014051437378
    2. 'input' → logprob: -1.4316014051437378
    3. ' "' → logprob: -2.8066015243530273
    4. '"' → logprob: -3.0566015243530273
    5. ''' → logprob: -6.056601524353027
    6. ' '' → logprob: -7.056601524353027
    7. '   ' → logprob: -8.056601524353027
    8. ' ' → logprob: -8.556601524353027
    9. '""' → logprob: -9.431601524353027
    10. '=input' → logprob: -9.431601524353027

Token 277: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008657260332256556
    2. '(' → logprob: -7.375865936279297
    3. '("' → logprob: -9.000865936279297
    4. '('' → logprob: -9.625865936279297
    5. '().' → logprob: -10.125865936279297
    6. '()>' → logprob: -12.875865936279297
    7. '()
' → logprob: -13.125865936279297
    8. '("")' → logprob: -13.500865936279297
    9. '()`' → logprob: -14.000865936279297
    10. '())' → logprob: -14.000865936279297

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07111133635044098
    2. 'codes' → logprob: -2.6961114406585693
    3. 'code' → logprob: -7.44611120223999
    4. ' codes' → logprob: -7.82111120223999
    5. '.codes' → logprob: -9.196111679077148
    6. '_codes' → logprob: -10.696111679077148
    7. '    
' → logprob: -10.696111679077148
    8. '
' → logprob: -11.446111679077148
    9. 'encoded' → logprob: -11.571111679077148
    10. '```' → logprob: -11.821111679077148

Token 279: ' codes' (ID: 17913)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'codes' (adapté à ' codes') → logprob: -0.0005510062328539789
    2. ' codes' → logprob: -7.750551223754883
    3. '   ' → logprob: -9.750551223754883
    4. 'code' → logprob: -10.375551223754883
    5. 'result' → logprob: -11.500551223754883
    6. 'encoded' → logprob: -11.875551223754883
    7. '.codes' → logprob: -12.250551223754883
    8. 'coding' → logprob: -12.875551223754883
    9. '_codes' → logprob: -13.500551223754883
    10. 'coded' → logprob: -13.750551223754883

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416398212313652
    2. '=' → logprob: -4.264163970947266
    3. ',' → logprob: -15.389163970947266
    4. ' ' → logprob: -15.639163970947266
    5. '  ' → logprob: -17.014163970947266
    6. '   ' → logprob: -17.514163970947266
    7. '.' → logprob: -17.764163970947266
    8. ')' → logprob: -18.014163970947266
    9. '＝' → logprob: -18.889163970947266
    10. '.=' → logprob: -19.014163970947266

Token 281: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06196802109479904
    2. ' h' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.061967849731445
    4. '	h' → logprob: -16.936967849731445
    5. ' ' → logprob: -17.061967849731445
    6. '```' → logprob: -18.561967849731445
    7. '  ' → logprob: -18.936967849731445
    8. 'H' → logprob: -19.061967849731445
    9. '=h' → logprob: -19.436967849731445
    10. '(h' → logprob: -19.561967849731445

Token 282: 'uffman' (ID: 172248)
  Prédit: 'uffman'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uffman' → logprob: -5.676981345459353e-06
    2. 'codes' → logprob: -12.875005722045898
    3. 'uff' → logprob: -13.500005722045898
    4. 'uf' → logprob: -14.375005722045898
    5. '[' → logprob: -15.000005722045898
    6. '```' → logprob: -15.500005722045898
    7. '   ' → logprob: -16.2500057220459
    8. 'uffer' → logprob: -16.2500057220459
    9. 'f' → logprob: -16.2500057220459
    10. 'u' → logprob: -16.6250057220459

Token 283: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -3.128163257315464e-07
    2. '_codes' → logprob: -16.25
    3. '_' → logprob: -16.5
    4. 'code' → logprob: -18.25
    5. '_cod' → logprob: -19.25
    6. '_co' → logprob: -19.625
    7. '_CODE' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '​' → logprob: -20.625
    10. '_c' → logprob: -20.875

Token 284: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(code' → logprob: -15.750008583068848
    4. ' (' → logprob: -17.00000762939453
    5. 'text' → logprob: -17.87500762939453
    6. '{text' → logprob: -18.00000762939453
    7. ',text' → logprob: -18.75000762939453
    8. '(input' → logprob: -19.50000762939453
    9. '(txt' → logprob: -20.12500762939453
    10. ' text' → logprob: -20.12500762939453

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6102056503295898
    2. ')
' → logprob: -0.9852056503295898
    3. '   ' → logprob: -2.48520565032959
    4. '
' → logprob: -10.36020565032959
    5. '<|end|>' → logprob: -10.86020565032959
    6. ')
' → logprob: -11.61020565032959
    7. ' ' → logprob: -11.73520565032959
    8. ' )
' → logprob: -12.11020565032959
    9. '    
' → logprob: -12.11020565032959
    10. ' )' → logprob: -13.11020565032959

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044401636114344
    2. 'encoded' → logprob: -8.000444412231445
    3. 'print' → logprob: -9.875444412231445
    4. 'decoded' → logprob: -10.250444412231445
    5. '    
' → logprob: -12.375444412231445
    6. 'result' → logprob: -12.625444412231445
    7. ' encoded' → logprob: -12.750444412231445
    8. 'for' → logprob: -12.875444412231445
    9. '    ' → logprob: -13.375444412231445
    10. 'code' → logprob: -13.750444412231445

Token 287: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' (adapté à ' encoded') → logprob: -0.019762849435210228
    2. 'for' → logprob: -4.019762992858887
    3. 'print' → logprob: -6.644762992858887
    4. 'compressed' → logprob: -9.519762992858887
    5. 'codes' → logprob: -9.644762992858887
    6. 'result' → logprob: -9.644762992858887
    7. 'decoded' → logprob: -10.019762992858887
    8. ' encoded' → logprob: -10.269762992858887
    9. ' for' → logprob: -12.269762992858887
    10. 'output' → logprob: -12.394762992858887

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.306876003742218
    2. '_text' → logprob: -1.5568759441375732
    3. '=' → logprob: -2.9318759441375732
    4. 'text' → logprob: -9.931876182556152
    5. '_string' → logprob: -9.931876182556152
    6. '_output' → logprob: -10.681876182556152
    7. '=text' → logprob: -10.931876182556152
    8. '_data' → logprob: -11.681876182556152
    9. 'Text' → logprob: -11.931876182556152
    10. '_message' → logprob: -12.681876182556152

Token 289: ' []
' (ID: 8911)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.01735617406666279
    2. '''.' → logprob: -4.2673563957214355
    3. '""' → logprob: -5.7673563957214355
    4. '''
' → logprob: -10.017355918884277
    5. '"' → logprob: -11.267355918884277
    6. ' ''' → logprob: -13.642355918884277
    7. ''',' → logprob: -14.767355918884277
    8. ''' → logprob: -15.017355918884277
    9. ' ''.' → logprob: -15.392355918884277
    10. '[]' → logprob: -17.517356872558594

Token 290: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47530123591423035
    2. ' for' → logprob: -1.2253012657165527
    3. '   ' → logprob: -2.4753012657165527
    4. ' ' → logprob: -7.975301265716553
    5. '  ' → logprob: -9.350300788879395
    6. '    ' → logprob: -10.850300788879395
    7. '	for' → logprob: -11.225300788879395
    8. '    
' → logprob: -11.350300788879395
    9. '<|end|>' → logprob: -11.725300788879395
    10. '[' → logprob: -12.475300788879395

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003202312160283327
    2. ' for' → logprob: -5.753202438354492
    3. '   ' → logprob: -10.628202438354492
    4. '	for' → logprob: -15.378202438354492
    5. '  ' → logprob: -16.628202438354492
    6. '<|end|>' → logprob: -17.628202438354492
    7. ' ' → logprob: -17.753202438354492
    8. '```' → logprob: -18.128202438354492
    9. '    
' → logprob: -18.753202438354492
    10. '    ' → logprob: -19.753202438354492

Token 292: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.04470269754528999
    2. ' char' → logprob: -3.2947027683258057
    3. 'ch' → logprob: -5.294702529907227
    4. 'c' → logprob: -6.544702529907227
    5. ' ch' → logprob: -8.919702529907227
    6. ' c' → logprob: -9.919702529907227
    7. '   ' → logprob: -15.544702529907227
    8. ' ' → logprob: -16.169702529907227
    9. '	char' → logprob: -17.294702529907227
    10. 'character' → logprob: -17.669702529907227

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011896300129592419
    2. 'in' → logprob: -6.751189708709717
    3. ' ' → logprob: -10.876189231872559
    4. '   ' → logprob: -15.751189231872559
    5. '	in' → logprob: -15.876189231872559
    6. '    ' → logprob: -16.376190185546875
    7. '  ' → logprob: -16.376190185546875
    8. '<|end|>' → logprob: -17.376190185546875
    9. 's' → logprob: -17.501190185546875
    10. ',' → logprob: -17.751190185546875

Token 294: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0485873706638813
    2. ' text' → logprob: -3.0485873222351074
    3. ' ' → logprob: -19.173587799072266
    4. '	text' → logprob: -19.673587799072266
    5. 'code' → logprob: -19.798587799072266
    6. '   ' → logprob: -19.798587799072266
    7. '{text' → logprob: -20.298587799072266
    8. '_text' → logprob: -20.548587799072266
    9. '(text' → logprob: -21.548587799072266
    10. '.text' → logprob: -21.673587799072266

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19202610850334167
    2. ':
' → logprob: -2.442026138305664
    3. '       ' → logprob: -3.442026138305664
    4. 'encoded' → logprob: -3.567026138305664
    5. '   ' → logprob: -4.442026138305664
    6. ' encoded' → logprob: -4.817026138305664
    7. '(encoded' → logprob: -5.442026138305664
    8. ',' → logprob: -6.692026138305664
    9. '_encoded' → logprob: -6.942026138305664
    10. '):
' → logprob: -7.942026138305664

Token 296: '       ' (ID: 309)
  Prédit: ' encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encoded' → logprob: -0.22118732333183289
    2. '       ' → logprob: -1.9711873531341553
    3. 'encoded' → logprob: -2.8461873531341553
    4. '(encoded' → logprob: -7.471187114715576
    5. '   ' → logprob: -8.096187591552734
    6. '    ' → logprob: -9.721187591552734
    7. ' ' → logprob: -10.096187591552734
    8. '_encoded' → logprob: -10.721187591552734
    9. ' 
' → logprob: -10.846187591552734
    10. '        
' → logprob: -11.096187591552734

Token 297: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' (adapté à ' encoded') → logprob: -0.3869178295135498
    2. ' encoded' → logprob: -1.1369178295135498
    3. '   ' → logprob: -10.761918067932129
    4. '(encoded' → logprob: -11.011918067932129
    5. '       ' → logprob: -11.761918067932129
    6. ' coded' → logprob: -14.136918067932129
    7. '_encoded' → logprob: -15.386918067932129
    8. '    ' → logprob: -15.761918067932129
    9. 'coded' → logprob: -16.386917114257812
    10. '
' → logprob: -16.636917114257812

Token 298: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003364158037584275
    2. '.' → logprob: -8.000336647033691
    3. '.app' → logprob: -15.125336647033691
    4. ' .' → logprob: -15.500336647033691
    5. '.ap' → logprob: -15.625336647033691
    6. 'append' → logprob: -15.625336647033691
    7. '.extend' → logprob: -15.875336647033691
    8. '.Append' → logprob: -17.500335693359375
    9. '.push' → logprob: -18.250335693359375
    10. ' append' → logprob: -19.625335693359375

Token 299: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007174347410909832
    2. 'codes' → logprob: -7.250717639923096
    3. ' codes' → logprob: -12.125717163085938
    4. '(' → logprob: -13.250717163085938
    5. 'c' → logprob: -15.000717163085938
    6. '[c' → logprob: -17.250717163085938
    7. '.codes' → logprob: -17.500717163085938
    8. ' (' → logprob: -17.875717163085938
    9. '(code' → logprob: -18.375717163085938
    10. '(
' → logprob: -19.000717163085938

Token 300: 'odes' (ID: 3821)
  Prédit: 'odes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -6.158350151963532e-05
    2. '[c' → logprob: -10.500061988830566
    3. '[' → logprob: -10.750061988830566
    4. 'codes' → logprob: -12.125061988830566
    5. 'ode' → logprob: -13.375061988830566
    6. 'har' → logprob: -13.750061988830566
    7. '```' → logprob: -14.000061988830566
    8. 'o' → logprob: -14.250061988830566
    9. '_codes' → logprob: -14.375061988830566
    10. 'ODES' → logprob: -14.375061988830566

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'char' → logprob: -16.375
    3. '(char' → logprob: -19.625
    4. '[
' → logprob: -20.25
    5. ' [' → logprob: -20.375
    6. '<char' → logprob: -20.5
    7. '```' → logprob: -20.5
    8. ',char' → logprob: -21.5
    9. '   ' → logprob: -21.875
    10. ')' → logprob: -22.0

Token 302: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -5.512236498361744e-07
    2. ' char' → logprob: -14.500000953674316
    3. '(char' → logprob: -19.625
    4. '<char' → logprob: -21.0
    5. '   ' → logprob: -21.75
    6. '.char' → logprob: -21.875
    7. '_char' → logprob: -22.625
    8. '	char' → logprob: -23.125
    9. ',char' → logprob: -23.125
    10. ' ' → logprob: -24.125

Token 303: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00032247265335172415
    2. ']' → logprob: -8.125322341918945
    3. ')' → logprob: -11.125322341918945
    4. ' ])' → logprob: -12.125322341918945
    5. '])
' → logprob: -12.375322341918945
    6. ''])' → logprob: -13.625322341918945
    7. ')]' → logprob: -15.500322341918945
    8. ')])' → logprob: -15.875322341918945
    9. ']))' → logprob: -16.000322341918945
    10. ']+' → logprob: -16.250322341918945

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2202586829662323
    2. '
' → logprob: -1.7202587127685547
    3. '    
' → logprob: -4.970258712768555
    4. 'print' → logprob: -5.095258712768555
    5. 'encoded' → logprob: -5.220258712768555
    6. ' encoded' → logprob: -9.720258712768555
    7. ' print' → logprob: -10.095258712768555
    8. '```' → logprob: -10.220258712768555
    9. '  
' → logprob: -10.845258712768555
    10. '
' → logprob: -11.595258712768555

Token 305: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3362390697002411
    2. 'encoded' → logprob: -1.8362390995025635
    3. '   ' → logprob: -2.3362390995025635
    4. ' print' → logprob: -3.5862390995025635
    5. ' encoded' → logprob: -6.586238861083984
    6. '```' → logprob: -8.711238861083984
    7. '
' → logprob: -8.961238861083984
    8. '_encoded' → logprob: -10.461238861083984
    9. '    
' → logprob: -11.211238861083984
    10. 'return' → logprob: -11.711238861083984

Token 306: '(len' (ID: 14990)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.003188405418768525
    2. '("' → logprob: -5.753188610076904
    3. '(' → logprob: -11.628188133239746
    4. '(('' → logprob: -13.628188133239746
    5. '(encoded' → logprob: -15.753188133239746
    6. '''.' → logprob: -16.003189086914062
    7. '('').' → logprob: -16.003189086914062
    8. '(("' → logprob: -16.878189086914062
    9. '(len' → logprob: -18.128189086914062
    10. 'encoded' → logprob: -18.253189086914062

Token 307: '('' (ID: 706)
  Prédit: '(encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -0.4756321609020233
    2. '('' → logprob: -0.9756321907043457
    3. '("' → logprob: -6.600632190704346
    4. '(' → logprob: -8.725631713867188
    5. 'encoded' → logprob: -10.475631713867188
    6. '(('' → logprob: -14.100631713867188
    7. '()' → logprob: -14.725631713867188
    8. '(set' → logprob: -14.725631713867188
    9. '(enc' → logprob: -15.225631713867188
    10. '(`' → logprob: -15.475631713867188

Token 308: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.015813687816262245
    2. ''.' → logprob: -4.515813827514648
    3. 'encoded' → logprob: -5.640813827514648
    4. ''' → logprob: -7.640813827514648
    5. '('' → logprob: -7.640813827514648
    6. ' ''.' → logprob: -8.765813827514648
    7. '(encoded' → logprob: -9.640813827514648
    8. '''' → logprob: -11.140813827514648
    9. '"' → logprob: -12.265813827514648
    10. '".' → logprob: -14.015813827514648

Token 309: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0002756366156972945
    2. '''.' → logprob: -8.250275611877441
    3. ''.' → logprob: -12.000275611877441
    4. '.join' → logprob: -12.125275611877441
    5. '.' → logprob: -13.250275611877441
    6. ' join' → logprob: -14.125275611877441
    7. ' ''.' → logprob: -16.000276565551758
    8. 'jo' → logprob: -16.625276565551758
    9. '(join' → logprob: -16.750276565551758
    10. '   ' → logprob: -16.875276565551758

Token 310: '(encoded' (ID: 157395)
  Prédit: '(encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -3.547789674485102e-05
    2. 'encoded' → logprob: -10.250035285949707
    3. ' encoded' → logprob: -17.375036239624023
    4. '(' → logprob: -17.625036239624023
    5. ' (' → logprob: -20.125036239624023
    6. ')' → logprob: -20.125036239624023
    7. '('' → logprob: -20.250036239624023
    8. '(decoded' → logprob: -21.250036239624023
    9. '(
' → logprob: -21.750036239624023
    10. '(en' → logprob: -21.875036239624023

Token 311: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008143932209350169
    2. ')' → logprob: -7.500814437866211
    3. '),' → logprob: -9.000814437866211
    4. '))
' → logprob: -9.250814437866211
    5. ')))' → logprob: -10.500814437866211
    6. ''))' → logprob: -11.875814437866211
    7. '()))' → logprob: -12.375814437866211
    8. ' ))' → logprob: -13.000814437866211
    9. '))

' → logprob: -15.250814437866211
    10. '   ' → logprob: -15.625814437866211

Token 312: 'solution' (ID: 84819)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5774160623550415
    2. '<|end|>' → logprob: -1.2024160623550415
    3. '   ' → logprob: -2.702415943145752
    4. '\n' → logprob: -3.577415943145752
    5. 'print' → logprob: -4.077415943145752
    6. ')' → logprob: -4.452415943145752
    7. '```' → logprob: -5.327415943145752
    8. 'if' → logprob: -5.577415943145752
    9. '    
' → logprob: -6.702415943145752
    10. '<|end|>' → logprob: -6.952415943145752

Token 313: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -10.625035285949707
    3. '()
' → logprob: -12.500035285949707
    4. '()`' → logprob: -12.875035285949707
    5. '().' → logprob: -14.125035285949707
    6. '();' → logprob: -14.250035285949707
    7. '()

' → logprob: -14.250035285949707
    8. ' ()' → logprob: -14.375035285949707
    9. '()<' → logprob: -15.125035285949707
    10. '()">' → logprob: -15.250035285949707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 311
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 287
Précision stricte (1ère position): 50.16%
Précision adaptée (1ère position): 57.88%
Précision (top 10): 92.28%
================================================================================
