================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import *
class Node():
    def __init__(self, key, char=None):
        self.key = key
        self.char = char
        self.pare = None

st = input()
_st = list(set(st))

a = []
for i in _st:
    a  += [(st.count(i),i)] 
heapify(a)

node = {}
for i in range(len(a)):
    cnt, char = a[i]
    node[char] = Node(cnt, char)

while len(a) > 1:
    p1, p2 = heappop(a)
    q1, q2 = heappop(a)
    x = Node(p1+q1, p2+q2) 
    node[p2+q2] = x
    if len(a) == 0:
        root = x
        break
    node[p2].pare = x
    node[q2].pare = x
    heappush(a, (p1+q1,p2+q2))

def dfs(node, cnt=1):
    if node.pare == None:
        return cnt
    a = dfs(node.pare, cnt+1)
    return a

Sum = 0
for i in _st:
    no = node[i]
    depth = dfs(no)
    Sum += depth*no.key
    
print(Sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06490714102983475
    2. 'import' → logprob: -2.8149070739746094
    3. ' import' → logprob: -5.939907073974609
    4. '.import' → logprob: -8.68990707397461
    5. '(' → logprob: -10.68990707397461
    6. '.he' → logprob: -11.06490707397461
    7. 'i' → logprob: -11.43990707397461
    8. ' .' → logprob: -11.56490707397461
    9. '.im' → logprob: -11.81490707397461
    10. '.n' → logprob: -11.81490707397461

Token 4: ' *
' (ID: 2099)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28018274903297424
    2. ' he' → logprob: -1.5301827192306519
    3. 'heap' → logprob: -3.6551828384399414
    4. 'nl' → logprob: -6.655182838439941
    5. ' n' → logprob: -7.905182838439941
    6. ' heap' → logprob: -9.155182838439941
    7. 'n' → logprob: -9.530182838439941
    8. 'merge' → logprob: -9.655182838439941
    9. '`' → logprob: -10.280182838439941
    10. '```' → logprob: -10.280182838439941

Token 5: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3402754068374634
    2. 'he' → logprob: -2.465275287628174
    3. 'n' → logprob: -2.715275287628174
    4. 'h' → logprob: -2.715275287628174
    5. '(' → logprob: -3.090275287628174
    6. 'a' → logprob: -5.465275287628174
    7. ' ' → logprob: -5.965275287628174
    8. ',' → logprob: -6.215275287628174
    9. 'q' → logprob: -6.340275287628174
    10. 'w' → logprob: -6.715275287628174

Token 6: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027482921723276377
    2. ' My' → logprob: -6.502748489379883
    3. ' Priority' → logprob: -7.127748489379883
    4. ' Heap' → logprob: -8.002748489379883
    5. ' ' → logprob: -11.002748489379883
    6. ' A' → logprob: -11.377748489379883
    7. ' Min' → logprob: -11.502748489379883
    8. ' Node' → logprob: -11.627748489379883
    9. ' S' → logprob: -11.627748489379883
    10. ' Max' → logprob: -11.627748489379883

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2293304204940796
    2. ':' → logprob: -1.6043304204940796
    3. '(:' → logprob: -6.354330539703369
    4. '():' → logprob: -7.229330539703369
    5. '```' → logprob: -7.729330539703369
    6. ' :' → logprob: -8.729330062866211
    7. '<|end|>' → logprob: -8.854330062866211
    8. '[' → logprob: -8.979330062866211
    9. '{' → logprob: -9.604330062866211
    10. ' (' → logprob: -9.604330062866211

Token 8: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04426611214876175
    2. ':' → logprob: -3.1692662239074707
    3. '(
' → logprob: -8.169265747070312
    4. ' (' → logprob: -8.419265747070312
    5. '   ' → logprob: -8.669265747070312
    6. '(object' → logprob: -9.294265747070312
    7. '(:' → logprob: -9.919265747070312
    8. '[' → logprob: -10.044265747070312
    9. '```' → logprob: -10.044265747070312
    10. '():' → logprob: -10.044265747070312

Token 9: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03230958804488182
    2. 'def' (adapté à ' def') → logprob: -3.6573095321655273
    3. '   ' → logprob: -5.532309532165527
    4. ' __' → logprob: -6.907309532165527
    5. '    ' → logprob: -7.157309532165527
    6. ' ' → logprob: -9.157309532165527
    7. ' pass' → logprob: -10.407309532165527
    8. '__' → logprob: -10.407309532165527
    9. ' de' → logprob: -10.657309532165527
    10. 'class' → logprob: -11.532309532165527

Token 10: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.39721861481666565
    2. ' ' → logprob: -1.1472185850143433
    3. '__' → logprob: -5.647218704223633
    4. ' _' → logprob: -6.147218704223633
    5. ' ' → logprob: -6.522218704223633
    6. '  ' → logprob: -6.647218704223633
    7. ' init' → logprob: -7.022218704223633
    8. '_' → logprob: -7.647218704223633
    9. '_init' → logprob: -9.022218704223633
    10. 'init' → logprob: -9.522218704223633

Token 11: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. ' init' → logprob: -13.250001907348633
    3. 'ini' → logprob: -15.625001907348633
    4. 'i' → logprob: -16.125001907348633
    5. '_init' → logprob: -16.500001907348633
    6. 'in' → logprob: -17.375001907348633
    7. 'int' → logprob: -19.125001907348633
    8. '	init' → logprob: -19.250001907348633
    9. 'inite' → logprob: -19.375001907348633
    10. 'innit' → logprob: -20.125001907348633

Token 12: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5774745345115662
    2. '(' → logprob: -1.202474594116211
    3. '__' → logprob: -2.577474594116211
    4. '(self' → logprob: -3.452474594116211
    5. '_' → logprob: -3.952474594116211
    6. '__(
' → logprob: -5.702474594116211
    7. ' (' → logprob: -5.952474594116211
    8. '_(' → logprob: -6.452474594116211
    9. 'self' → logprob: -6.827474594116211
    10. '_self' → logprob: -7.577474594116211

Token 13: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003384422743692994
    2. ' self' → logprob: -8.000338554382324
    3. ')' → logprob: -13.375338554382324
    4. '(self' → logprob: -14.250338554382324
    5. '	self' → logprob: -15.500338554382324
    6. ' ' → logprob: -15.750338554382324
    7. ',self' → logprob: -15.875338554382324
    8. '0' → logprob: -16.500337600708008
    9. 'data' → logprob: -16.625337600708008
    10. '       ' → logprob: -17.125337600708008

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8462231159210205
    2. ' ,' → logprob: -1.0962231159210205
    3. 'self' → logprob: -2.2212231159210205
    4. ' ' → logprob: -2.8462231159210205
    5. ' self' → logprob: -3.0962231159210205
    6. ' )' → logprob: -4.221222877502441
    7. ')' → logprob: -4.971222877502441
    8. '(self' → logprob: -7.096222877502441
    9. '  ' → logprob: -7.221222877502441
    10. ',self' → logprob: -7.471222877502441

Token 15: ' key' (ID: 2140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306748628616333
    2. 'value' → logprob: -1.556748628616333
    3. 'data' → logprob: -2.056748628616333
    4. ' self' → logprob: -2.181748628616333
    5. 'val' → logprob: -2.681748628616333
    6. ' value' → logprob: -2.681748628616333
    7. ' val' → logprob: -2.681748628616333
    8. ' data' → logprob: -3.181748628616333
    9. 'key' → logprob: -4.056748390197754
    10. ' key' → logprob: -4.431748390197754

Token 16: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2395021617412567
    2. ',' → logprob: -1.614502191543579
    3. ')' → logprob: -4.489501953125
    4. '   ' → logprob: -6.864501953125
    5. '=' → logprob: -7.239501953125
    6. '):
' → logprob: -7.739501953125
    7. ' ,' → logprob: -8.489501953125
    8. '<|end|>' → logprob: -9.614501953125
    9. ',key' → logprob: -9.864501953125
    10. ' ):' → logprob: -10.114501953125

Token 17: ' char' (ID: 1826)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6339465379714966
    2. ' value' → logprob: -1.2589465379714966
    3. ' parent' → logprob: -2.258946418762207
    4. ' data' → logprob: -3.508946418762207
    5. ' priority' → logprob: -3.758946418762207
    6. ' weight' → logprob: -4.258946418762207
    7. ' left' → logprob: -5.508946418762207
    8. 'value' → logprob: -6.133946418762207
    9. 'val' → logprob: -6.258946418762207
    10. ' ' → logprob: -6.383946418762207

Token 18: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022875219583511353
    2. ')' → logprob: -6.2522873878479
    3. ',' → logprob: -8.627287864685059
    4. ' ):' → logprob: -9.502287864685059
    5. ':' → logprob: -10.502287864685059
    6. '=' → logprob: -10.627287864685059
    7. '):
' → logprob: -10.752287864685059
    8. '=None' → logprob: -11.002287864685059
    9. '   ' → logprob: -11.877287864685059
    10. ' ' → logprob: -12.877287864685059

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022335208486765623
    2. ')' → logprob: -6.752233505249023
    3. ',' → logprob: -6.877233505249023
    4. ':' → logprob: -11.252233505249023
    5. '):
' → logprob: -11.252233505249023
    6. ' ):' → logprob: -12.502233505249023
    7. '),' → logprob: -14.377233505249023
    8. '   ' → logprob: -15.377233505249023
    9. ',parent' → logprob: -15.752233505249023
    10. ',p' → logprob: -16.002233505249023

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01035337708890438
    2. ')' → logprob: -5.6353535652160645
    3. ':' → logprob: -6.0103535652160645
    4. '):' → logprob: -6.5103535652160645
    5. 'self' → logprob: -7.1353535652160645
    6. '   ' → logprob: -7.2603535652160645
    7. '<|end|>' → logprob: -7.3853535652160645
    8. ',' → logprob: -8.635353088378906
    9. ' self' → logprob: -9.260353088378906
    10. ' :' → logprob: -9.635353088378906

Token 21: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.28810250759124756
    2. ' self' → logprob: -1.4131025075912476
    3. '       ' → logprob: -5.038102626800537
    4. '   ' → logprob: -8.288102149963379
    5. ' ' → logprob: -9.038102149963379
    6. ' ' → logprob: -10.288102149963379
    7. '	self' → logprob: -12.038102149963379
    8. '_self' → logprob: -12.413102149963379
    9. '    ' → logprob: -12.663102149963379
    10. 's' → logprob: -12.913102149963379

Token 22: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014702115207910538
    2. '.key' → logprob: -4.639702320098877
    3. ' .' → logprob: -5.389702320098877
    4. ' ' → logprob: -8.639701843261719
    5. '<|end|>' → logprob: -10.264701843261719
    6. ',' → logprob: -10.389701843261719
    7. '.Key' → logprob: -10.389701843261719
    8. ')' → logprob: -11.014701843261719
    9. '_key' → logprob: -11.389701843261719
    10. '   ' → logprob: -11.889701843261719

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09005953371524811
    2. ' =' → logprob: -2.465059518814087
    3. '<|end|>' → logprob: -7.340059757232666
    4. ',' → logprob: -7.965059757232666
    5. ' ' → logprob: -9.715059280395508
    6. ')' → logprob: -10.590059280395508
    7. ' ,' → logprob: -12.215059280395508
    8. ' =
' → logprob: -12.215059280395508
    9. ' =)' → logprob: -12.340059280395508
    10. '<|end|>' → logprob: -12.465059280395508

Token 24: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.014163863845169544
    2. 'key' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.389163970947266
    4. '	key' → logprob: -16.264163970947266
    5. '_key' → logprob: -17.014163970947266
    6. '$key' → logprob: -17.139163970947266
    7. ' ' → logprob: -17.514163970947266
    8. '(key' → logprob: -17.639163970947266
    9. 'Key' → logprob: -18.639163970947266
    10. '.key' → logprob: -18.764163970947266

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4501129686832428
    2. '<|end|>' → logprob: -1.0751129388809204
    3. ',' → logprob: -4.575112819671631
    4. '        ' → logprob: -5.575112819671631
    5. '
' → logprob: -6.325112819671631
    6. ' ' → logprob: -6.700112819671631
    7. '        
' → logprob: -6.700112819671631
    8. '<|end|>' → logprob: -6.825112819671631
    9. '   ' → logprob: -8.325113296508789
    10. '    ' → logprob: -8.450113296508789

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' self' (ID: 1051)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.18081651628017426
    2. ' char' → logprob: -1.8058165311813354
    3. ',' → logprob: -8.055816650390625
    4. '       ' → logprob: -8.430816650390625
    5. ' ' → logprob: -8.805816650390625
    6. ',char' → logprob: -9.305816650390625
    7. 'c' → logprob: -9.680816650390625
    8. ''' → logprob: -9.805816650390625
    9. ' None' → logprob: -10.055816650390625
    10. '        ' → logprob: -10.430816650390625

Token 28: '.char' (ID: 18508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001584850688232109
    2. ' .' → logprob: -9.750158309936523
    3. '.char' → logprob: -10.250158309936523
    4. '.key' → logprob: -10.625158309936523
    5. '<|end|>' → logprob: -10.875158309936523
    6. '.value' → logprob: -12.000158309936523
    7. '.left' → logprob: -13.250158309936523
    8. '.character' → logprob: -13.750158309936523
    9. '.characters' → logprob: -13.875158309936523
    10. '.
' → logprob: -13.875158309936523

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128428503870964
    2. ' =' → logprob: -2.2378427982330322
    3. '<|end|>' → logprob: -11.487842559814453
    4. ' ' → logprob: -12.862842559814453
    5. ')' → logprob: -13.237842559814453
    6. '=None' → logprob: -13.362842559814453
    7. ' is' → logprob: -13.612842559814453
    8. ' ==' → logprob: -14.612842559814453
    9. ',' → logprob: -14.737842559814453
    10. '=}' → logprob: -14.862842559814453

Token 30: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.04859213903546333
    2. 'char' → logprob: -3.0485920906066895
    3. '(char' → logprob: -13.173592567443848
    4. ' ' → logprob: -13.673592567443848
    5. '<char' → logprob: -14.548592567443848
    6. ' None' → logprob: -15.048592567443848
    7. '	char' → logprob: -15.298592567443848
    8. ',char' → logprob: -15.423592567443848
    9. ' ' → logprob: -15.548592567443848
    10. 'None' → logprob: -15.798592567443848

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8052935600280762
    2. '<|end|>' → logprob: -0.8052935600280762
    3. '       ' → logprob: -3.180293560028076
    4. '   ' → logprob: -3.305293560028076
    5. ' ' → logprob: -4.930293560028076
    6. '    
' → logprob: -5.055293560028076
    7. ' 
' → logprob: -5.055293560028076
    8. '  
' → logprob: -5.930293560028076
    9. '\n' → logprob: -6.680293560028076
    10. '        
' → logprob: -7.055293560028076

Token 33: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17215192317962646
    2. '   ' → logprob: -2.297152042388916
    3. 'def' → logprob: -3.172152042388916
    4. '
' → logprob: -4.672152042388916
    5. ' def' → logprob: -6.172152042388916
    6. ' ' → logprob: -6.922152042388916
    7. '<|end|>' → logprob: -7.047152042388916
    8. '    
' → logprob: -7.547152042388916
    9. '    ' → logprob: -7.922152042388916
    10. '        
' → logprob: -8.047151565551758

Token 34: '.p' (ID: 1201)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.1765265166759491
    2. '.' → logprob: -2.0515265464782715
    3. ' .' → logprob: -4.5515265464782715
    4. 'left' → logprob: -4.9265265464782715
    5. '_left' → logprob: -5.0515265464782715
    6. '.children' → logprob: -5.8015265464782715
    7. '.right' → logprob: -7.0515265464782715
    8. ' left' → logprob: -7.0515265464782715
    9. 's' → logprob: -7.0515265464782715
    10. '   ' → logprob: -7.1765265464782715

Token 35: 'are' (ID: 644)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.04709744080901146
    2. 'riority' → logprob: -3.4220974445343018
    3. 'ointer' → logprob: -5.672097206115723
    4. 'oint' → logprob: -5.672097206115723
    5. 'left' → logprob: -6.422097206115723
    6. 'rev' → logprob: -6.422097206115723
    7. 'rior' → logprob: -6.797097206115723
    8. 're' → logprob: -7.047097206115723
    9. 'os' → logprob: -8.047097206115723
    10. 'r' → logprob: -8.797097206115723

Token 36: ' =' (ID: 314)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -6.704273118884885e-07
    2. 'nts' → logprob: -14.625000953674316
    3. '_nt' → logprob: -16.5
    4. 'ntl' → logprob: -17.25
    5. 'n' → logprob: -17.625
    6. ' nt' → logprob: -18.125
    7. 'ntil' → logprob: -18.125
    8. 'ent' → logprob: -18.125
    9. '.nt' → logprob: -18.25
    10. 'nti' → logprob: -18.625

Token 37: ' None' (ID: 4662)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.5048530030981055e-06
    2. 'nts' → logprob: -14.125001907348633
    3. 'n' → logprob: -14.375001907348633
    4. 'ntl' → logprob: -16.375001907348633
    5. ' nt' → logprob: -17.250001907348633
    6. 'ntil' → logprob: -18.000001907348633
    7. 'nti' → logprob: -18.125001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '```' → logprob: -19.750001907348633
    10. 'ntag' → logprob: -19.875001907348633

Token 38: '

' (ID: 279)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.11284605413675308
    2. 'n' → logprob: -2.2378461360931396
    3. 't' → logprob: -11.362846374511719
    4. 'nts' → logprob: -11.987846374511719
    5. 'ntl' → logprob: -13.362846374511719
    6. '```' → logprob: -13.612846374511719
    7. 'p' → logprob: -14.362846374511719
    8. 'n't' → logprob: -14.862846374511719
    9. '       ' → logprob: -15.237846374511719
    10. '   ' → logprob: -15.737846374511719

Token 39: 'st' (ID: 302)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5760312080383301
    2. 'nt' → logprob: -0.8260312080383301
    3. 'nts' → logprob: -10.326030731201172
    4. 't' → logprob: -10.701030731201172
    5. 'p' → logprob: -11.201030731201172
    6. '```' → logprob: -11.826030731201172
    7. 'r' → logprob: -12.576030731201172
    8. 'ntl' → logprob: -12.701030731201172
    9. '       ' → logprob: -13.201030731201172
    10. 'n't' → logprob: -13.576030731201172

Token 40: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9246331453323364
    2. 'lf' → logprob: -1.1746331453323364
    3. 'l' → logprob: -1.9246331453323364
    4. 't' → logprob: -2.549633026123047
    5. 'f' → logprob: -3.674633026123047
    6. 'v' → logprob: -4.049633026123047
    7. 'q' → logprob: -5.424633026123047
    8. 'c' → logprob: -5.549633026123047
    9. 's' → logprob: -5.549633026123047
    10. '```' → logprob: -5.674633026123047

Token 41: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.013094118796288967
    2. ' []' → logprob: -4.638093948364258
    3. '[' → logprob: -5.763093948364258
    4. '[]}' → logprob: -9.138093948364258
    5. 'st' → logprob: -10.263093948364258
    6. 'heap' → logprob: -10.888093948364258
    7. 't' → logprob: -12.013093948364258
    8. ' [' → logprob: -12.388093948364258
    9. '[]
' → logprob: -12.888093948364258
    10. '[]>' → logprob: -12.888093948364258

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24754655361175537
    2. '(' → logprob: -1.6225465536117554
    3. 'n' → logprob: -4.122546672821045
    4. 't' → logprob: -6.372546672821045
    5. 'nt' → logprob: -6.372546672821045
    6. 'r' → logprob: -6.747546672821045
    7. '('' → logprob: -7.747546672821045
    8. '(`' → logprob: -9.372546195983887
    9. '())' → logprob: -9.372546195983887
    10. '("' → logprob: -9.622546195983887

Token 43: '_st' (ID: 2518)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.1764030009508133
    2. 'r' → logprob: -2.801403045654297
    3. 'nts' → logprob: -3.551403045654297
    4. 'n' → logprob: -3.676403045654297
    5. 'm' → logprob: -4.051403045654297
    6. 'q' → logprob: -5.176403045654297
    7. 's' → logprob: -5.176403045654297
    8. 't' → logprob: -5.926403045654297
    9. 'd' → logprob: -6.176403045654297
    10. 'rent' → logprob: -6.301403045654297

Token 44: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7428689002990723
    2. '=' → logprob: -1.4928689002990723
    3. '_' → logprob: -2.6178689002990723
    4. 'ack' → logprob: -2.8678689002990723
    5. ' =' → logprob: -2.8678689002990723
    6. 'am' → logprob: -3.7428689002990723
    7. 'r' → logprob: -3.9928689002990723
    8. 'a' → logprob: -4.367868900299072
    9. '```' → logprob: -4.867868900299072
    10. 'ck' → logprob: -5.492868900299072

Token 45: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15700958669185638
    2. 'st' → logprob: -2.6570096015930176
    3. 'list' → logprob: -2.9070096015930176
    4. ' []' → logprob: -4.907009601593018
    5. 'sorted' → logprob: -5.407009601593018
    6. '[' → logprob: -5.782009601593018
    7. '{}' → logprob: -6.407009601593018
    8. '""' → logprob: -6.532009601593018
    9. ' list' → logprob: -7.907009601593018
    10. '''' → logprob: -8.03200912475586

Token 46: '(set' (ID: 25904)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.035593170672655106
    2. '(' → logprob: -3.410593271255493
    3. '(_' → logprob: -6.785593032836914
    4. '(range' → logprob: -8.535593032836914
    5. '_st' → logprob: -8.660593032836914
    6. '(s' → logprob: -9.160593032836914
    7. '(map' → logprob: -9.535593032836914
    8. '()' → logprob: -9.785593032836914
    9. '(_)' → logprob: -10.285593032836914
    10. '(`' → logprob: -10.535593032836914

Token 47: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00035536551149562
    2. '(' → logprob: -8.00035572052002
    3. '(_' → logprob: -12.25035572052002
    4. ')' → logprob: -12.37535572052002
    5. '(s' → logprob: -12.37535572052002
    6. 'st' → logprob: -12.62535572052002
    7. '_st' → logprob: -14.12535572052002
    8. '(
' → logprob: -14.87535572052002
    9. '	st' → logprob: -15.00035572052002
    10. '(St' → logprob: -15.00035572052002

Token 48: '))

' (ID: 9746)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.08087115734815598
    2. '))' → logprob: -2.705871105194092
    3. ')' → logprob: -4.955871105194092
    4. '(' → logprob: -6.455871105194092
    5. '()))' → logprob: -6.705871105194092
    6. '())' → logprob: -7.205871105194092
    7. '(s' → logprob: -9.70587158203125
    8. 'st' → logprob: -9.70587158203125
    9. '(_' → logprob: -9.83087158203125
    10. '_st' → logprob: -9.83087158203125

Token 49: 'a' (ID: 64)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9183277487754822
    2. 'm' → logprob: -1.668327808380127
    3. '_' → logprob: -1.793327808380127
    4. '()' → logprob: -2.293327808380127
    5. '(' → logprob: -3.418327808380127
    6. ')' → logprob: -3.918327808380127
    7. 's' → logprob: -4.293327808380127
    8. 'n' → logprob: -4.293327808380127
    9. 'ar' → logprob: -4.918327808380127
    10. ' ' → logprob: -5.418327808380127

Token 50: ' =' (ID: 314)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -1.3736313581466675
    2. 'rr' → logprob: -1.4986313581466675
    3. '_counts' → logprob: -1.7486313581466675
    4. 'freq' → logprob: -2.248631477355957
    5. '_freq' → logprob: -2.498631477355957
    6. 'l' → logprob: -3.623631477355957
    7. 'ns' → logprob: -3.748631477355957
    8. 'counts' → logprob: -3.998631477355957
    9. 'll' → logprob: -4.873631477355957
    10. 'lg' → logprob: -4.873631477355957

Token 51: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4874182343482971
    2. '[]' → logprob: -0.9874182343482971
    3. '{' → logprob: -4.612418174743652
    4. '[' → logprob: -6.487418174743652
    5. 'dict' → logprob: -6.862418174743652
    6. 'Counter' → logprob: -7.987418174743652
    7. '[len' → logprob: -9.612418174743652
    8. '[]}' → logprob: -9.612418174743652
    9. 'len' → logprob: -10.112418174743652
    10. 'default' → logprob: -10.237418174743652

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05971139669418335
    2. '[' → logprob: -4.309711456298828
    3. '=' → logprob: -4.559711456298828
    4. ' for' → logprob: -5.059711456298828
    5. '_' → logprob: -5.184711456298828
    6. ')' → logprob: -5.809711456298828
    7. 'c' → logprob: -6.309711456298828
    8. 'heap' → logprob: -6.434711456298828
    9. 'count' → logprob: -6.559711456298828
    10. 'm' → logprob: -6.559711456298828

Token 53: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4248553216457367
    2. '_' → logprob: -2.0498552322387695
    3. 'c' → logprob: -2.2998552322387695
    4. ' _' → logprob: -2.7998552322387695
    5. ' ch' → logprob: -4.1748552322387695
    6. ' i' → logprob: -4.4248552322387695
    7. 'ch' → logprob: -4.5498552322387695
    8. ' char' → logprob: -4.7998552322387695
    9. 'char' → logprob: -5.5498552322387695
    10. 'i' → logprob: -5.7998552322387695

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19260887801647186
    2. 'in' → logprob: -1.8176088333129883
    3. ',' → logprob: -4.942608833312988
    4. ' ' → logprob: -5.442608833312988
    5. '_' → logprob: -7.942608833312988
    6. '  ' → logprob: -8.317608833312988
    7. ' ,' → logprob: -8.317608833312988
    8. '<|end|>' → logprob: -8.692608833312988
    9. '_in' → logprob: -9.692608833312988
    10. '(' → logprob: -10.067608833312988

Token 55: ' _' (ID: 1175)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.05644034221768379
    2. 'range' → logprob: -2.9314403533935547
    3. 'st' → logprob: -6.681440353393555
    4. ' range' → logprob: -8.306440353393555
    5. 'set' → logprob: -10.181440353393555
    6. '```' → logprob: -12.681440353393555
    7. '_s' → logprob: -12.931440353393555
    8. ' _' → logprob: -13.431440353393555
    9. '(range' → logprob: -13.556440353393555
    10. 'enumer' → logprob: -13.931440353393555

Token 56: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0005535095697268844
    2. '_st' → logprob: -7.500553607940674
    3. 's' → logprob: -15.625553131103516
    4. '	st' → logprob: -16.125553131103516
    5. 'str' → logprob: -16.500553131103516
    6. 'sta' → logprob: -17.125553131103516
    7. 'stw' → logprob: -18.000553131103516
    8. 'ст' → logprob: -18.000553131103516
    9. '_s' → logprob: -18.125553131103516
    10. 'stæ' → logprob: -18.125553131103516

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003942112671211362
    2. '):' → logprob: -8.250393867492676
    3. ':
' → logprob: -9.250393867492676
    4. ' :' → logprob: -10.750393867492676
    5. '():' → logprob: -12.625393867492676
    6. '   ' → logprob: -12.875393867492676
    7. ',' → logprob: -13.500393867492676
    8. '):
' → logprob: -13.750393867492676
    9. ')' → logprob: -14.000393867492676
    10. 'a' → logprob: -14.500393867492676

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13349702954292297
    2. ' a' → logprob: -2.3834969997406006
    3. 'a' → logprob: -3.7584969997406006
    4. ' heap' → logprob: -6.00849723815918
    5. ' key' → logprob: -6.13349723815918
    6. ' i' → logprob: -6.25849723815918
    7. 'heap' → logprob: -7.88349723815918
    8. ' count' → logprob: -7.88349723815918
    9. ' keys' → logprob: -8.25849723815918
    10. 'i' → logprob: -8.75849723815918

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0050082942470908165
    2. '   ' → logprob: -6.255008220672607
    3. 'heap' → logprob: -6.505008220672607
    4. ' a' → logprob: -7.380008220672607
    5. 'count' → logprob: -8.005008697509766
    6. 'key' → logprob: -8.255008697509766
    7. 'he' → logprob: -9.130008697509766
    8. 'i' → logprob: -10.005008697509766
    9. 'n' → logprob: -10.630008697509766
    10. 'node' → logprob: -10.755008697509766

Token 60: ' ' (ID: 220)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.040202271193265915
    2. '.' → logprob: -3.6652023792266846
    3. 'pp' → logprob: -4.4152021408081055
    4. '.p' → logprob: -7.1652021408081055
    5. 'append' → logprob: -8.415202140808105
    6. ' .' → logprob: -8.790202140808105
    7. '.count' → logprob: -8.915202140808105
    8. 'p' → logprob: -9.165202140808105
    9. ' =' → logprob: -9.915202140808105
    10. '.extend' → logprob: -10.165202140808105

Token 61: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06414113938808441
    2. '.' → logprob: -2.814141035079956
    3. 'pp' → logprob: -6.939141273498535
    4. '.p' → logprob: -8.064141273498535
    5. 'append' → logprob: -8.314141273498535
    6. '.ap' → logprob: -8.439141273498535
    7. '+=' → logprob: -9.189141273498535
    8. '.app' → logprob: -9.314141273498535
    9. ' .' → logprob: -9.939141273498535
    10. '.=' → logprob: -9.939141273498535

Token 62: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39496663212776184
    2. '[i' → logprob: -1.6449666023254395
    3. '[(' → logprob: -2.1449666023254395
    4. '[get' → logprob: -4.7699666023254395
    5. '[str' → logprob: -5.2699666023254395
    6. '[node' → logprob: -7.8949666023254395
    7. '[int' → logprob: -7.8949666023254395
    8. '(st' → logprob: -8.144967079162598
    9. '[count' → logprob: -8.644967079162598
    10. '[key' → logprob: -8.644967079162598

Token 63: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.042652677744627
    2. 'i' → logprob: -4.042652606964111
    3. '(st' → logprob: -4.042652606964111
    4. '(i' → logprob: -5.417652606964111
    5. 'Node' → logprob: -7.167652606964111
    6. '(Node' → logprob: -7.417652606964111
    7. '(' → logprob: -8.29265308380127
    8. '1' → logprob: -8.91765308380127
    9. '[i' → logprob: -9.79265308380127
    10. '-st' → logprob: -10.04265308380127

Token 64: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -6.289473822107539e-05
    2. '.' → logprob: -9.875062942504883
    3. '.index' → logprob: -11.750062942504883
    4. ' .' → logprob: -13.625062942504883
    5. '.i' → logprob: -14.375062942504883
    6. 'count' → logprob: -14.500062942504883
    7. '.r' → logprob: -14.750062942504883
    8. '.c' → logprob: -15.250062942504883
    9. ').' → logprob: -15.250062942504883
    10. '.split' → logprob: -16.625062942504883

Token 65: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0040807779878377914
    2. '(' → logprob: -5.504080772399902
    3. ')' → logprob: -14.379080772399902
    4. '(
' → logprob: -14.504080772399902
    5. ' (' → logprob: -14.879080772399902
    6. ',' → logprob: -15.629080772399902
    7. '(ii' → logprob: -15.629080772399902
    8. '<|end|>' → logprob: -15.879080772399902
    9. '((' → logprob: -16.12908172607422
    10. ',i' → logprob: -16.62908172607422

Token 66: '),' (ID: 936)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018830563873052597
    2. ',' → logprob: -4.3938307762146
    3. ',i' → logprob: -5.2688307762146
    4. '),' → logprob: -7.3938307762146
    5. '(' → logprob: -7.6438307762146
    6. ')' → logprob: -11.018830299377441
    7. ' ,' → logprob: -11.143830299377441
    8. 'i' → logprob: -11.643830299377441
    9. ')i' → logprob: -12.393830299377441
    10. ',),' → logprob: -12.518830299377441

Token 67: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4441729187965393
    2. ' i' → logprob: -1.6941728591918945
    3. 'Node' → logprob: -2.0691728591918945
    4. ' Node' → logprob: -3.0691728591918945
    5. '[i' → logprob: -8.069172859191895
    6. '_Node' → logprob: -8.194172859191895
    7. '(Node' → logprob: -8.319172859191895
    8. '<Node' → logprob: -8.569172859191895
    9. ' ' → logprob: -8.694172859191895
    10. '[' → logprob: -9.069172859191895

Token 68: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006958735757507384
    2. ')' → logprob: -7.375695705413818
    3. ' )' → logprob: -10.125696182250977
    4. ']' → logprob: -11.750696182250977
    5. '),' → logprob: -11.750696182250977
    6. '))' → logprob: -12.625696182250977
    7. ')],' → logprob: -12.875696182250977
    8. ')])' → logprob: -13.250696182250977
    9. ')]
' → logprob: -13.375696182250977
    10. ',' → logprob: -13.625696182250977

Token 69: ' 
' (ID: 793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.28615474700927734
    2. 'he' → logprob: -2.1611547470092773
    3. '<|end|>' → logprob: -3.1611547470092773
    4. ')' → logprob: -3.5361547470092773
    5. '
' → logprob: -4.161154747009277
    6. '[' → logprob: -4.286154747009277
    7. 'a' → logprob: -4.911154747009277
    8. '(heap' → logprob: -5.661154747009277
    9. ',' → logprob: -5.786154747009277
    10. '.heap' → logprob: -6.036154747009277

Token 71: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.23799850046634674
    2. 'q' → logprob: -1.6129984855651855
    3. 'push' → logprob: -5.2379984855651855
    4. 'p' → logprob: -5.2379984855651855
    5. ')' → logprob: -7.3629984855651855
    6. '_push' → logprob: -8.112998962402344
    7. '```' → logprob: -8.487998962402344
    8. '.' → logprob: -9.362998962402344
    9. '=' → logprob: -9.612998962402344
    10. ' ' → logprob: -9.987998962402344

Token 72: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003179259831085801
    2. '(' → logprob: -5.75317907333374
    3. 'a' → logprob: -14.378179550170898
    4. '(
' → logprob: -14.753179550170898
    5. '(ai' → logprob: -15.878179550170898
    6. ' (' → logprob: -16.0031795501709
    7. ')' → logprob: -16.6281795501709
    8. '(A' → logprob: -17.5031795501709
    9. '(s' → logprob: -17.6281795501709
    10. '(an' → logprob: -18.0031795501709

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '))' → logprob: -16.000001907348633
    5. ')#' → logprob: -17.125001907348633
    6. ')a' → logprob: -17.125001907348633
    7. ');' → logprob: -18.000001907348633
    8. '),' → logprob: -18.375001907348633
    9. ')`' → logprob: -18.875001907348633
    10. ')}' → logprob: -19.375001907348633

Token 74: 'node' (ID: 7005)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013980493880808353
    2. ' =' → logprob: -4.638980388641357
    3. '=' → logprob: -5.513980388641357
    4. '_' → logprob: -9.513980865478516
    5. ' s' → logprob: -9.888980865478516
    6. 'q' → logprob: -11.513980865478516
    7. '=[]' → logprob: -11.888980865478516
    8. '()' → logprob: -12.013980865478516
    9. ' ' → logprob: -12.013980865478516
    10. 'pop' → logprob: -12.138980865478516

Token 76: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6556771397590637
    2. 'Node' → logprob: -0.9056771397590637
    3. ' Node' → logprob: -3.905677080154419
    4. 'a' → logprob: -4.030677318572998
    5. ' []' → logprob: -4.030677318572998
    6. 'heap' → logprob: -4.780677318572998
    7. 'he' → logprob: -5.280677318572998
    8. '[' → logprob: -6.280677318572998
    9. ' a' → logprob: -6.405677318572998
    10. 'None' → logprob: -6.780677318572998

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9048988223075867
    2. 'while' → logprob: -1.4048988819122314
    3. '<|end|>' → logprob: -1.6548988819122314
    4. ' ' → logprob: -3.2798988819122314
    5. 'current' → logprob: -4.154898643493652
    6. '[' → logprob: -4.279898643493652
    7. 'n' → logprob: -4.279898643493652
    8. ')' → logprob: -4.529898643493652
    9. 'node' → logprob: -4.529898643493652
    10. 'i' → logprob: -4.654898643493652

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7435387372970581
    2. 'key' → logprob: -1.868538737297058
    3. ' key' → logprob: -1.993538737297058
    4. ' i' → logprob: -2.6185388565063477
    5. 'freq' → logprob: -2.8685388565063477
    6. 'k' → logprob: -4.243538856506348
    7. ' freq' → logprob: -4.368538856506348
    8. 'f' → logprob: -4.493538856506348
    9. ' frequency' → logprob: -4.618538856506348
    10. 'count' → logprob: -4.868538856506348

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12692369520664215
    2. 'in' → logprob: -2.5019237995147705
    3. ',' → logprob: -3.5019237995147705
    4. ' ,' → logprob: -5.876923561096191
    5. ',a' → logprob: -6.376923561096191
    6. ',n' → logprob: -7.501923561096191
    7. ',_' → logprob: -8.001923561096191
    8. 'a' → logprob: -8.126923561096191
    9. 'n' → logprob: -8.126923561096191
    10. ' ' → logprob: -8.501923561096191

Token 80: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09530419856309891
    2. 'range' → logprob: -2.470304250717163
    3. ' range' → logprob: -5.720304012298584
    4. ' a' → logprob: -5.970304012298584
    5. '_a' → logprob: -8.470304489135742
    6. 'st' → logprob: -8.970304489135742
    7. '_' → logprob: -9.595304489135742
    8. '_st' → logprob: -10.595304489135742
    9. '_range' → logprob: -10.845304489135742
    10. ' ' → logprob: -11.095304489135742

Token 81: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.3358446166384965e-05
    2. '(' → logprob: -9.875053405761719
    3. 'len' → logprob: -13.750053405761719
    4. '(le' → logprob: -15.750053405761719
    5. '(l' → logprob: -16.00005340576172
    6. '((' → logprob: -16.62505340576172
    7. ' len' → logprob: -16.62505340576172
    8. '(a' → logprob: -16.75005340576172
    9. '(
' → logprob: -17.00005340576172
    10. ' (' → logprob: -17.00005340576172

Token 82: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0012342800619080663
    2. '(_' → logprob: -6.75123405456543
    3. '(st' → logprob: -9.87623405456543
    4. 'a' → logprob: -11.87623405456543
    5. '(' → logprob: -12.37623405456543
    6. '_st' → logprob: -15.12623405456543
    7. '_a' → logprob: -15.25123405456543
    8. ' a' → logprob: -15.50123405456543
    9. ' (' → logprob: -16.00123405456543
    10. '(i' → logprob: -16.12623405456543

Token 83: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02494395337998867
    2. '):' → logprob: -4.274943828582764
    3. ')):
' → logprob: -5.149943828582764
    4. '))' → logprob: -5.524943828582764
    5. ')' → logprob: -7.149943828582764
    6. ' ' → logprob: -9.774944305419922
    7. ')):
' → logprob: -10.524944305419922
    8. '):
' → logprob: -11.024944305419922
    9. ' ))' → logprob: -11.649944305419922
    10. ':' → logprob: -11.899944305419922

Token 84: '   ' (ID: 271)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5810750722885132
    2. '   ' → logprob: -1.5810750722885132
    3. ' key' → logprob: -2.3310751914978027
    4. 'node' → logprob: -2.5810751914978027
    5. '<|end|>' → logprob: -4.331075191497803
    6. 'key' → logprob: -4.581075191497803
    7. ' heap' → logprob: -4.831075191497803
    8. ' n' → logprob: -5.331075191497803
    9. ' k' → logprob: -5.706075191497803
    10. ' ' → logprob: -5.706075191497803

Token 85: ' cnt' (ID: 27340)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8186469078063965
    2. 'node' → logprob: -1.0686469078063965
    3. ' key' → logprob: -2.4436469078063965
    4. 'key' → logprob: -3.5686469078063965
    5. 'n' → logprob: -3.9436469078063965
    6. '   ' → logprob: -4.1936469078063965
    7. ' n' → logprob: -4.6936469078063965
    8. ' k' → logprob: -4.9436469078063965
    9. 'v' → logprob: -5.1936469078063965
    10. 'k' → logprob: -5.3186469078063965

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07344578206539154
    2. ' =' → logprob: -3.6984457969665527
    3. ' ,' → logprob: -4.073445796966553
    4. ',key' → logprob: -4.198445796966553
    5. '=' → logprob: -5.323445796966553
    6. ',node' → logprob: -5.823445796966553
    7. ',n' → logprob: -6.823445796966553
    8. ',count' → logprob: -6.823445796966553
    9. ',i' → logprob: -6.948445796966553
    10. ',num' → logprob: -7.198445796966553

Token 87: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.6118341684341431
    2. 'ch' → logprob: -1.236834168434143
    3. 'c' → logprob: -2.1118340492248535
    4. ' c' → logprob: -4.7368340492248535
    5. 'val' → logprob: -4.7368340492248535
    6. 'key' → logprob: -4.8618340492248535
    7. 'a' → logprob: -5.3618340492248535
    8. 'i' → logprob: -5.4868340492248535
    9. ' char' → logprob: -5.8618340492248535
    10. 'node' → logprob: -6.1118340492248535

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486019104719162
    2. '=' → logprob: -3.0486018657684326
    3. ',' → logprob: -12.048602104187012
    4. ' ' → logprob: -12.173602104187012
    5. ')' → logprob: -13.673602104187012
    6. '<|end|>' → logprob: -14.923602104187012
    7. '  ' → logprob: -15.048602104187012
    8. ')=' → logprob: -15.548602104187012
    9. '   ' → logprob: -15.548602104187012
    10. 'a' → logprob: -15.548602104187012

Token 89: ' a' (ID: 261)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.22210705280303955
    2. ' he' → logprob: -1.8471070528030396
    3. 'a' → logprob: -3.22210693359375
    4. ' a' → logprob: -6.59710693359375
    5. 'heap' → logprob: -9.34710693359375
    6. '   ' → logprob: -9.72210693359375
    7. 'h' → logprob: -10.72210693359375
    8. '.he' → logprob: -10.72210693359375
    9. 'pop' → logprob: -11.22210693359375
    10. ' ' → logprob: -11.84710693359375

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009908842854201794
    2. '[' → logprob: -5.259908676147461
    3. ' =' → logprob: -7.009908676147461
    4. '[a' → logprob: -7.384908676147461
    5. ']' → logprob: -7.884908676147461
    6. '][' → logprob: -8.134908676147461
    7. '   ' → logprob: -8.134908676147461
    8. '=' → logprob: -8.384908676147461
    9. 's' → logprob: -8.384908676147461
    10. 'pop' → logprob: -8.884908676147461

Token 91: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009031807072460651
    2. ')]' → logprob: -5.134031772613525
    3. ']' → logprob: -6.634031772613525
    4. '])' → logprob: -6.884031772613525
    5. ')
' → logprob: -7.384031772613525
    6. ')])' → logprob: -9.759032249450684
    7. ' )' → logprob: -10.259032249450684
    8. ')
' → logprob: -11.634032249450684
    9. '[' → logprob: -12.009032249450684
    10. ')

' → logprob: -12.509032249450684

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057308848947286606
    2. '<|end|>' → logprob: -3.3073089122772217
    3. '   ' → logprob: -4.307308673858643
    4. '    
' → logprob: -6.932308673858643
    5. ')' → logprob: -7.182308673858643
    6. '
' → logprob: -7.432308673858643
    7. '<|end|>' → logprob: -7.682308673858643
    8. '\n' → logprob: -7.682308673858643
    9. '  
' → logprob: -7.807308673858643
    10. 'node' → logprob: -8.1823091506958

Token 93: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.28511667251586914
    2. 'node' (adapté à ' node') → logprob: -2.035116672515869
    3. '   ' → logprob: -2.160116672515869
    4. '
' → logprob: -6.660116672515869
    5. ' ' → logprob: -8.910116195678711
    6. ' 
' → logprob: -9.285116195678711
    7. '	node' → logprob: -9.410116195678711
    8. '    
' → logprob: -9.535116195678711
    9. 'n' → logprob: -9.785116195678711
    10. '_node' → logprob: -10.035116195678711

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004317841492593288
    2. '[i' → logprob: -5.629317760467529
    3. '[node' → logprob: -8.004318237304688
    4. '[c' → logprob: -8.879318237304688
    5. '=' → logprob: -9.379318237304688
    6. '[a' → logprob: -10.254318237304688
    7. '[ch' → logprob: -10.879318237304688
    8. ' =' → logprob: -11.129318237304688
    9. '[cnt' → logprob: -11.629318237304688
    10. '[class' → logprob: -11.879318237304688

Token 95: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -7.433829159708694e-05
    2. ' char' → logprob: -9.75007438659668
    3. 'i' → logprob: -12.50007438659668
    4. '<char' → logprob: -12.75007438659668
    5. '_char' → logprob: -13.00007438659668
    6. ' ' → logprob: -13.50007438659668
    7. ']' → logprob: -13.62507438659668
    8. '.char' → logprob: -14.00007438659668
    9. '   ' → logprob: -14.12507438659668
    10. '(char' → logprob: -14.25007438659668

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002457238151691854
    2. ']=' → logprob: -8.500246047973633
    3. ' ]' → logprob: -10.250246047973633
    4. ')' → logprob: -13.000246047973633
    5. '=' → logprob: -13.000246047973633
    6. ' =' → logprob: -13.375246047973633
    7. ')]' → logprob: -15.125246047973633
    8. '`]' → logprob: -15.750246047973633
    9. '].' → logprob: -16.500246047973633
    10. '   ' → logprob: -16.750246047973633

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17975158989429474
    2. ' =' → logprob: -1.8047516345977783
    3. ' ' → logprob: -12.6797513961792
    4. '=node' → logprob: -13.8047513961792
    5. '=

' → logprob: -14.5547513961792
    6. ')' → logprob: -14.5547513961792
    7. ']' → logprob: -14.6797513961792
    8. ' =
' → logprob: -15.5547513961792
    9. '=
' → logprob: -15.6797513961792
    10. ')=' → logprob: -15.8047513961792

Token 98: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.2818296551704407
    2. ' Node' → logprob: -1.406829595565796
    3. '   ' → logprob: -7.781829833984375
    4. '	Node' → logprob: -9.406829833984375
    5. ' ' → logprob: -10.281829833984375
    6. '<Node' → logprob: -10.656829833984375
    7. '(Node' → logprob: -10.906829833984375
    8. '.Node' → logprob: -11.031829833984375
    9. '[' → logprob: -11.031829833984375
    10. '_Node' → logprob: -11.156829833984375

Token 99: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.664170503616333
    2. '(' → logprob: -0.789170503616333
    3. '(char' → logprob: -4.039170265197754
    4. '((' → logprob: -4.914170265197754
    5. ' (' → logprob: -5.789170265197754
    6. '(c' → logprob: -6.789170265197754
    7. '(
' → logprob: -7.789170265197754
    8. '(a' → logprob: -7.914170265197754
    9. '(count' → logprob: -8.164170265197754
    10. '(i' → logprob: -8.539170265197754

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006503628101199865
    2. ',char' → logprob: -5.131503582000732
    3. ' ,' → logprob: -7.756503582000732
    4. ',i' → logprob: -9.25650405883789
    5. ')' → logprob: -10.13150405883789
    6. '   ' → logprob: -12.50650405883789
    7. ',key' → logprob: -13.13150405883789
    8. ' ' → logprob: -14.00650405883789
    9. ',c' → logprob: -14.50650405883789
    10. ',node' → logprob: -14.50650405883789

Token 101: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.47434625029563904
    2. 'char' → logprob: -0.9743462800979614
    3. ''' → logprob: -9.974346160888672
    4. ')' → logprob: -9.974346160888672
    5. ',char' → logprob: -10.349346160888672
    6. '(char' → logprob: -10.474346160888672
    7. ' ' → logprob: -10.724346160888672
    8. '<char' → logprob: -10.849346160888672
    9. '	char' → logprob: -11.099346160888672
    10. ' i' → logprob: -11.224346160888672

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.125007629394531
    3. ' )' → logprob: -13.125007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '))' → logprob: -17.12500762939453
    6. '),' → logprob: -17.25000762939453
    7. ')

' → logprob: -17.50000762939453
    8. ' ' → logprob: -17.50000762939453
    9. ')i' → logprob: -17.75000762939453
    10. '<|end|>' → logprob: -17.75000762939453

Token 103: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9944494366645813
    2. '_' → logprob: -1.2444493770599365
    3. ')' → logprob: -2.3694493770599365
    4. 's' → logprob: -3.2444493770599365
    5. 'r' → logprob: -3.4944493770599365
    6. 'n' → logprob: -3.8694493770599365
    7. '   ' → logprob: -4.119449615478516
    8. '  ' → logprob: -4.244449615478516
    9. 'def' → logprob: -4.369449615478516
    10. '  
' → logprob: -4.369449615478516

Token 104: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2521110475063324
    2. ' len' → logprob: -1.5021110773086548
    3. '(len' → logprob: -8.627111434936523
    4. ' a' → logprob: -13.877111434936523
    5. ' ' → logprob: -14.127111434936523
    6. 'a' → logprob: -14.377111434936523
    7. '	len' → logprob: -15.627111434936523
    8. 'l' → logprob: -16.877111434936523
    9. '   ' → logprob: -17.252111434936523
    10. ',len' → logprob: -17.377111434936523

Token 105: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.375000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' a' → logprob: -18.625
    5. '(
' → logprob: -19.25
    6. '()' → logprob: -19.75
    7. '(A' → logprob: -19.75
    8. ' (' → logprob: -20.125
    9. '(s' → logprob: -20.125
    10. '>a' → logprob: -20.5

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7257962226867676
    2. '>' → logprob: -0.8507962226867676
    3. ')>' → logprob: -2.6007962226867676
    4. ' >' → logprob: -4.225796222686768
    5. ' )' → logprob: -9.10079574584961
    6. ')>=' → logprob: -11.10079574584961
    7. ' ' → logprob: -11.60079574584961
    8. '()>' → logprob: -11.85079574584961
    9. '">' → logprob: -12.85079574584961
    10. ']>' → logprob: -13.22579574584961

Token 107: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06996311247348785
    2. ' >' → logprob: -2.694963216781616
    3. '()>' → logprob: -10.944963455200195
    4. ')>' → logprob: -12.944963455200195
    5. ')' → logprob: -13.319963455200195
    6. '1' → logprob: -13.694963455200195
    7. ' ' → logprob: -13.944963455200195
    8. '```' → logprob: -14.444963455200195
    9. '<|end|>' → logprob: -14.694963455200195
    10. '>=' → logprob: -15.194963455200195

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012678056373260915
    2. ' ' → logprob: -9.000126838684082
    3. '>' → logprob: -13.250126838684082
    4. '2' → logprob: -13.875126838684082
    5. '   ' → logprob: -15.750126838684082
    6. '=' → logprob: -15.750126838684082
    7. '```' → logprob: -16.000125885009766
    8. '
' → logprob: -16.625125885009766
    9. '  ' → logprob: -17.562625885009766
    10. '۱' → logprob: -18.250125885009766

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.25003719329834
    3. '>' → logprob: -14.12503719329834
    4. '   ' → logprob: -14.75003719329834
    5. '2' → logprob: -14.87503719329834
    6. '
' → logprob: -15.62503719329834
    7. '```' → logprob: -15.75003719329834
    8. '  ' → logprob: -16.875038146972656
    9. '=' → logprob: -17.500038146972656
    10. ')' → logprob: -18.062538146972656

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005675682332366705
    2. ':
' → logprob: -7.750567436218262
    3. ' :' → logprob: -9.250567436218262
    4. '):' → logprob: -10.250567436218262
    5. ',' → logprob: -13.250567436218262
    6. '   ' → logprob: -14.250567436218262
    7. '():' → logprob: -14.250567436218262
    8. '):
' → logprob: -14.375567436218262
    9. ' :
' → logprob: -15.250567436218262
    10. ':

' → logprob: -15.375567436218262

Token 111: '   ' (ID: 271)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.8347070813179016
    2. 'cnt' → logprob: -1.0847070217132568
    3. '   ' → logprob: -2.834707021713257
    4. ' key' → logprob: -3.459707021713257
    5. ' c' → logprob: -3.459707021713257
    6. 'c' → logprob: -3.959707021713257
    7. ',' → logprob: -4.459707260131836
    8. ' k' → logprob: -4.459707260131836
    9. ' l' → logprob: -4.834707260131836
    10. ' x' → logprob: -4.959707260131836

Token 112: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.491634726524353
    2. ' x' → logprob: -1.491634726524353
    3. ' l' → logprob: -1.991634726524353
    4. 'cnt' → logprob: -1.991634726524353
    5. ' cnt' → logprob: -2.2416348457336426
    6. 'l' → logprob: -2.8666348457336426
    7. 'c' → logprob: -3.6166348457336426
    8. ' left' → logprob: -3.8666348457336426
    9. ' c' → logprob: -3.8666348457336426
    10. 'left' → logprob: -4.366634845733643

Token 113: '1' (ID: 16)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5804444551467896
    2. '1' → logprob: -0.9554444551467896
    3. 'o' → logprob: -3.9554443359375
    4. 'opleft' → logprob: -4.5804443359375
    5. 'a' → logprob: -4.8304443359375
    6. 'p' → logprob: -4.9554443359375
    7. ' =' → logprob: -5.3304443359375
    8. '=' → logprob: -6.4554443359375
    9. 'ar' → logprob: -6.7054443359375
    10. 'r' → logprob: -7.5804443359375

Token 114: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.544171929359436
    2. ' =' → logprob: -0.919171929359436
    3. ',' → logprob: -4.9191718101501465
    4. 'op' → logprob: -5.0441718101501465
    5. 'p' → logprob: -5.5441718101501465
    6. ',p' → logprob: -6.6691718101501465
    7. '=p' → logprob: -7.2941718101501465
    8. 'cnt' → logprob: -8.419172286987305
    9. ',key' → logprob: -8.419172286987305
    10. 'pop' → logprob: -9.044172286987305

Token 115: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06265540421009064
    2. ' p' → logprob: -2.812655448913574
    3. 'q' → logprob: -8.062655448913574
    4. ' =' → logprob: -9.562655448913574
    5. ' ' → logprob: -9.687655448913574
    6. 'c' → logprob: -9.812655448913574
    7. 'w' → logprob: -10.062655448913574
    8. '=' → logprob: -10.312655448913574
    9. ' q' → logprob: -10.562655448913574
    10. ' key' → logprob: -10.937655448913574

Token 116: '2' (ID: 17)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.05246732011437416
    2. 'opleft' → logprob: -3.5524673461914062
    3. '1' → logprob: -4.677467346191406
    4. 'p' → logprob: -5.052467346191406
    5. 'opping' → logprob: -6.302467346191406
    6. ' =' → logprob: -6.677467346191406
    7. '<|end|>' → logprob: -6.802467346191406
    8. '=' → logprob: -7.052467346191406
    9. 'opped' → logprob: -8.052467346191406
    10. '2' → logprob: -8.052467346191406

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142501592636108
    2. ' =' → logprob: -1.7014250755310059
    3. ' ' → logprob: -12.201424598693848
    4. ')=' → logprob: -13.576424598693848
    5. ')' → logprob: -14.201424598693848
    6. '=p' → logprob: -14.326424598693848
    7. '   ' → logprob: -14.326424598693848
    8. 'heap' → logprob: -14.451424598693848
    9. ']=' → logprob: -14.826424598693848
    10. 'p' → logprob: -14.826424598693848

Token 118: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2533766031265259
    2. ' he' → logprob: -1.5033766031265259
    3. 'heap' → logprob: -6.878376483917236
    4. '.he' → logprob: -8.628376960754395
    5. 'a' → logprob: -9.878376960754395
    6. 'n' → logprob: -9.878376960754395
    7. ' ' → logprob: -10.753376960754395
    8. ' n' → logprob: -10.753376960754395
    9. ' heap' → logprob: -11.003376960754395
    10. '(heap' → logprob: -11.378376960754395

Token 119: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5048530030981055e-06
    2. 'pp' → logprob: -14.125001907348633
    3. 'ap' → logprob: -14.375001907348633
    4. 'a' → logprob: -17.375001907348633
    5. '```' → logprob: -17.750001907348633
    6. '_app' → logprob: -18.500001907348633
    7. '[' → logprob: -18.625001907348633
    8. 'p' → logprob: -19.125001907348633
    9. 'appen' → logprob: -19.125001907348633
    10. 'pop' → logprob: -19.125001907348633

Token 120: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.318681188422488e-05
    2. 'o' → logprob: -11.87501335144043
    3. '[' → logprob: -13.62501335144043
    4. '

' → logprob: -13.87501335144043
    5. '	op' → logprob: -14.25001335144043
    6. '```' → logprob: -14.62501335144043
    7. 'opf' → logprob: -14.75001335144043
    8. 'оп' → logprob: -14.87501335144043
    9. '_op' → logprob: -15.00001335144043
    10. '   ' → logprob: -15.00001335144043

Token 121: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -14.00000286102295
    3. '()' → logprob: -14.25000286102295
    4. '<|end|>' → logprob: -14.62500286102295
    5. '(
' → logprob: -14.75000286102295
    6. 'a' → logprob: -15.25000286102295
    7. ' (' → logprob: -16.125003814697266
    8. '```' → logprob: -16.375003814697266
    9. '(s' → logprob: -16.625003814697266
    10. 's' → logprob: -17.500003814697266

Token 122: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2880449593067169
    2. ')' → logprob: -1.5380449295043945
    3. ')
' → logprob: -3.5380449295043945
    4. ',' → logprob: -5.4130449295043945
    5. '()' → logprob: -7.7880449295043945
    6. '(),' → logprob: -8.163044929504395
    7. ')
' → logprob: -8.538044929504395
    8. '),(' → logprob: -8.663044929504395
    9. ' ),' → logprob: -8.788044929504395
    10. '(' → logprob: -8.913044929504395

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11414671689271927
    2. '   ' → logprob: -2.4891467094421387
    3. ',' → logprob: -4.864146709442139
    4. '
' → logprob: -5.489146709442139
    5. '    
' → logprob: -5.614146709442139
    6. 'node' → logprob: -5.864146709442139
    7. '  
' → logprob: -7.114146709442139
    8. ',
' → logprob: -7.364146709442139
    9. ',node' → logprob: -7.489146709442139
    10. 'heap' → logprob: -7.864146709442139

Token 124: ' q' (ID: 2335)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.28171542286872864
    2. ' node' → logprob: -1.9067153930664062
    3. 'new' → logprob: -2.9067153930664062
    4. ' n' → logprob: -4.531715393066406
    5. 'node' → logprob: -4.531715393066406
    6. ' parent' → logprob: -5.156715393066406
    7. ' he' → logprob: -5.156715393066406
    8. 'parent' → logprob: -6.031715393066406
    9. ' merged' → logprob: -6.781715393066406
    10. 'n' → logprob: -7.156715393066406

Token 125: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2192993015050888
    2. ',' → logprob: -3.34429931640625
    3. 'u' → logprob: -3.46929931640625
    4. '1' → logprob: -3.71929931640625
    5. 'p' → logprob: -3.96929931640625
    6. '=' → logprob: -3.96929931640625
    7. '_key' → logprob: -3.96929931640625
    8. 'key' → logprob: -4.96929931640625
    9. 'ue' → logprob: -5.21929931640625
    10. '_cnt' → logprob: -5.46929931640625

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007918820483610034
    2. ',q' → logprob: -7.500792026519775
    3. '=' → logprob: -9.375791549682617
    4. ' ,' → logprob: -9.500791549682617
    5. ' =' → logprob: -10.125791549682617
    6. ',p' → logprob: -10.875791549682617
    7. 'p' → logprob: -12.125791549682617
    8. ',key' → logprob: -12.375791549682617
    9. 'q' → logprob: -12.500791549682617
    10. ' ' → logprob: -13.875791549682617

Token 127: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.32504183053970337
    2. 'q' → logprob: -2.0750417709350586
    3. ' p' → logprob: -2.5750417709350586
    4. ' he' → logprob: -2.8250417709350586
    5. 'p' → logprob: -4.450041770935059
    6. 'he' → logprob: -5.575041770935059
    7. '   ' → logprob: -7.700041770935059
    8. ' ' → logprob: -8.200041770935059
    9. '    ' → logprob: -9.575041770935059
    10. '  ' → logprob: -9.700041770935059

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001998227322474122
    2. ',' → logprob: -6.501998424530029
    3. '=' → logprob: -8.626997947692871
    4. ' =' → logprob: -8.626997947692871
    5. ' ' → logprob: -9.376997947692871
    6. 'u' → logprob: -10.626997947692871
    7. 'p' → logprob: -11.376997947692871
    8. 'w' → logprob: -11.876997947692871
    9. '   ' → logprob: -13.126997947692871
    10. ' ,' → logprob: -13.251997947692871

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759742856025696
    2. '=' → logprob: -0.8259742856025696
    3. ' ' → logprob: -10.450974464416504
    4. '   ' → logprob: -12.825974464416504
    5. '  ' → logprob: -14.075974464416504
    6. ',' → logprob: -14.075974464416504
    7. ')' → logprob: -14.575974464416504
    8. ' ' → logprob: -15.200974464416504
    9. 'he' → logprob: -15.700974464416504
    10. 'p' → logprob: -15.825974464416504

Token 130: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.1442280411720276
    2. ' he' → logprob: -2.019227981567383
    3. '   ' → logprob: -7.269227981567383
    4. 'p' → logprob: -8.269227981567383
    5. 'heap' → logprob: -8.519227981567383
    6. ' p' → logprob: -8.894227981567383
    7. ' ' → logprob: -9.769227981567383
    8. 'Node' → logprob: -9.769227981567383
    9. '  ' → logprob: -10.394227981567383
    10. '(' → logprob: -11.019227981567383

Token 131: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.339278580620885e-06
    2. 'ap' → logprob: -13.000001907348633
    3. 'a' → logprob: -18.000001907348633
    4. 'pp' → logprob: -18.250001907348633
    5. '_app' → logprob: -19.000001907348633
    6. 'appe' → logprob: -19.750001907348633
    7. '(app' → logprob: -19.875001907348633
    8. '[' → logprob: -20.500001907348633
    9. 'appen' → logprob: -20.500001907348633
    10. 'appt' → logprob: -20.875001907348633

Token 132: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00015085970517247915
    2. 'p' → logprob: -9.125150680541992
    3. 'pop' → logprob: -10.500150680541992
    4. 'ush' → logprob: -12.250150680541992
    5. 'pp' → logprob: -12.375150680541992
    6. 'opleft' → logprob: -14.000150680541992
    7. 'o' → logprob: -14.375150680541992
    8. 'оп' → logprob: -14.625150680541992
    9. 'app' → logprob: -14.750150680541992
    10. 'opp' → logprob: -15.000150680541992

Token 133: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.816093228830141e-06
    2. 'a' → logprob: -13.37500286102295
    3. '(' → logprob: -13.75000286102295
    4. ' (' → logprob: -16.875001907348633
    5. '(q' → logprob: -17.500001907348633
    6. '(s' → logprob: -18.375001907348633
    7. ' a' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. '(p' → logprob: -19.125001907348633
    10. 's' → logprob: -19.125001907348633

Token 134: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05522030219435692
    2. ')' → logprob: -2.930220365524292
    3. '   ' → logprob: -8.305220603942871
    4. ')
' → logprob: -9.555220603942871
    5. ')

' → logprob: -11.180220603942871
    6. ')p' → logprob: -12.680220603942871
    7. ' )
' → logprob: -13.680220603942871
    8. ')a' → logprob: -14.680220603942871
    9. ')`
' → logprob: -15.680220603942871
    10. '
' → logprob: -16.305219650268555

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02400505356490612
    2. '<|end|>' → logprob: -5.024004936218262
    3. 'node' → logprob: -5.399004936218262
    4. '
' → logprob: -5.649004936218262
    5. ')' → logprob: -5.774004936218262
    6. ' node' → logprob: -6.524004936218262
    7. 'new' → logprob: -7.024004936218262
    8. ',' → logprob: -7.649004936218262
    9. '    
' → logprob: -7.899004936218262
    10. 'n' → logprob: -7.899004936218262

Token 136: ' x' (ID: 1215)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.308672696352005
    2. 'new' → logprob: -1.5586726665496826
    3. ' merged' → logprob: -4.933672904968262
    4. ' node' → logprob: -4.933672904968262
    5. ' n' → logprob: -5.433672904968262
    6. ' he' → logprob: -5.558672904968262
    7. '   ' → logprob: -5.558672904968262
    8. 'n' → logprob: -5.558672904968262
    9. ' parent' → logprob: -5.683672904968262
    10. ' r' → logprob: -6.183672904968262

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04380630701780319
    2. '=' → logprob: -3.168806314468384
    3. '_key' → logprob: -8.043806076049805
    4. '_node' → logprob: -8.168806076049805
    5. 'key' → logprob: -9.543806076049805
    6. 'Node' → logprob: -9.793806076049805
    7. 'new' → logprob: -11.418806076049805
    8. 'node' → logprob: -11.543806076049805
    9. 'y' → logprob: -11.918806076049805
    10. ' ' → logprob: -12.043806076049805

Token 138: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.12693776190280914
    2. ' Node' → logprob: -2.1269378662109375
    3. '(Node' → logprob: -12.876937866210938
    4. ' ' → logprob: -13.001937866210938
    5. '   ' → logprob: -13.626937866210938
    6. '	Node' → logprob: -13.751937866210938
    7. '<Node' → logprob: -14.751937866210938
    8. '  ' → logprob: -14.876937866210938
    9. '.Node' → logprob: -14.876937866210938
    10. '_Node' → logprob: -15.251937866210938

Token 139: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005099030095152557
    2. '(' → logprob: -7.625509738922119
    3. 'p' → logprob: -11.000510215759277
    4. '(
' → logprob: -13.125510215759277
    5. '((' → logprob: -13.500510215759277
    6. '(x' → logprob: -13.875510215759277
    7. '(q' → logprob: -14.250510215759277
    8. '(s' → logprob: -17.75050926208496
    9. ' p' → logprob: -17.87550926208496
    10. '(
' → logprob: -18.00050926208496

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006376196397468448
    2. '+' → logprob: -8.500638008117676
    3. '+p' → logprob: -8.750638008117676
    4. ' +' → logprob: -8.875638008117676
    5. 'key' → logprob: -9.750638008117676
    6. 'p' → logprob: -10.625638008117676
    7. 'q' → logprob: -11.500638008117676
    8. '
' → logprob: -11.500638008117676
    9. ' ' → logprob: -12.250638008117676
    10. '[' → logprob: -12.500638008117676

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0063157700933516026
    2. ' +' → logprob: -5.3813157081604
    3. '+p' → logprob: -6.3813157081604
    4. '+
' → logprob: -14.006316184997559
    5. '
' → logprob: -16.631315231323242
    6. '

' → logprob: -17.006315231323242
    7. '+

' → logprob: -17.131315231323242
    8. 'p' → logprob: -17.131315231323242
    9. 'q' → logprob: -17.131315231323242
    10. ' ' → logprob: -17.631315231323242

Token 142: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004954866599291563
    2. ' q' → logprob: -7.625495433807373
    3. ' ' → logprob: -12.625495910644531
    4. 'p' → logprob: -13.500495910644531
    5. '   ' → logprob: -14.000495910644531
    6. 'x' → logprob: -14.125495910644531
    7. '	q' → logprob: -15.000495910644531
    8. '    ' → logprob: -15.375495910644531
    9. '_q' → logprob: -15.625495910644531
    10. '  ' → logprob: -15.750495910644531

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002806656062602997
    2. '2' → logprob: -5.877806663513184
    3. ' ' → logprob: -14.502806663513184
    4. ',' → logprob: -14.752806663513184
    5. '```' → logprob: -15.127806663513184
    6. '   ' → logprob: -15.377806663513184
    7. 'x' → logprob: -16.377805709838867
    8. '[' → logprob: -16.502805709838867
    9. ' p' → logprob: -16.877805709838867
    10. ',q' → logprob: -17.127805709838867

Token 144: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014693068340420723
    2. ',' → logprob: -4.389693260192871
    3. ' )' → logprob: -6.389693260192871
    4. ')
' → logprob: -8.139693260192871
    5. ',)' → logprob: -9.639693260192871
    6. '   ' → logprob: -9.764693260192871
    7. ' ,' → logprob: -11.014693260192871
    8. '    ' → logprob: -11.139693260192871
    9. ',q' → logprob: -11.889693260192871
    10. ',x' → logprob: -11.889693260192871

Token 145: ' p' (ID: 275)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.007353297434747219
    2. ')' → logprob: -5.63235330581665
    3. ' None' → logprob: -5.88235330581665
    4. ''' → logprob: -8.132352828979492
    5. ')
' → logprob: -8.632352828979492
    6. 'Node' → logprob: -8.632352828979492
    7. '(None' → logprob: -9.007352828979492
    8. '"' → logprob: -9.507352828979492
    9. '   ' → logprob: -10.257352828979492
    10. ''q' → logprob: -10.632352828979492

Token 146: '2' (ID: 17)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011541464366018772
    2. '2' → logprob: -5.136541366577148
    3. ' None' → logprob: -6.511541366577148
    4. 'q' → logprob: -6.636541366577148
    5. '_None' → logprob: -6.886541366577148
    6. '=None' → logprob: -7.136541366577148
    7. '(None' → logprob: -7.886541366577148
    8. ')' → logprob: -9.261541366577148
    9. '_none' → logprob: -9.261541366577148
    10. 'p' → logprob: -9.511541366577148

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002246011747047305
    2. ' +' → logprob: -6.127245903015137
    3. 'q' → logprob: -10.377245903015137
    4. ')' → logprob: -10.627245903015137
    5. '+p' → logprob: -13.502245903015137
    6. '&q' → logprob: -13.752245903015137
    7. '?q' → logprob: -14.627245903015137
    8. '+j' → logprob: -15.377245903015137
    9. '*q' → logprob: -15.377245903015137
    10. '+)' → logprob: -15.627245903015137

Token 148: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002737330214586109
    2. ' q' → logprob: -8.375273704528809
    3. ' ' → logprob: -11.125273704528809
    4. '   ' → logprob: -11.625273704528809
    5. '+' → logprob: -12.125273704528809
    6. '
' → logprob: -13.000273704528809
    7. ''q' → logprob: -13.125273704528809
    8. '  ' → logprob: -13.375273704528809
    9. '_q' → logprob: -13.375273704528809
    10. '	q' → logprob: -13.500273704528809

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.396757089532912e-05
    2. ' ' → logprob: -10.2500638961792
    3. 'q' → logprob: -11.0000638961792
    4. ' q' → logprob: -12.5000638961792
    5. '<|end|>' → logprob: -13.1250638961792
    6. '   ' → logprob: -13.5000638961792
    7. '  ' → logprob: -13.8750638961792
    8. '...' → logprob: -13.8750638961792
    9. '
' → logprob: -14.3750638961792
    10. ')' → logprob: -14.8750638961792

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03395894169807434
    2. ')
' → logprob: -3.408958911895752
    3. '   ' → logprob: -8.15895938873291
    4. ')
' → logprob: -10.90895938873291
    5. ' )' → logprob: -12.53395938873291
    6. ')x' → logprob: -13.15895938873291
    7. ' )
' → logprob: -14.40895938873291
    8. ')

' → logprob: -14.40895938873291
    9. '  ' → logprob: -14.53395938873291
    10. ' ' → logprob: -14.90895938873291

Token 151: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01876293681561947
    2. 'he' → logprob: -4.268763065338135
    3. ' he' → logprob: -6.018763065338135
    4. 'x' → logprob: -6.893763065338135
    5. 'heap' → logprob: -7.143763065338135
    6. ' x' → logprob: -9.393762588500977
    7. 'p' → logprob: -9.393762588500977
    8. 'node' → logprob: -10.268762588500977
    9. '    ' → logprob: -10.893762588500977
    10. '  ' → logprob: -10.893762588500977

Token 152: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.012327512726187706
    2. ' he' → logprob: -4.637327671051025
    3. 'heap' → logprob: -6.262327671051025
    4. '   ' → logprob: -8.012327194213867
    5. 'y' → logprob: -9.012327194213867
    6. 'x' → logprob: -9.137327194213867
    7. 'hea' → logprob: -10.887327194213867
    8. 'push' → logprob: -11.012327194213867
    9. 'p' → logprob: -11.512327194213867
    10. 'heme' → logprob: -11.637327194213867

Token 153: ' node' (ID: 4596)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005595745053142309
    2. 'node' (adapté à ' node') → logprob: -6.130595684051514
    3. 'x' → logprob: -6.255595684051514
    4. ' he' → logprob: -7.005595684051514
    5. 'p' → logprob: -8.130596160888672
    6. 'heap' → logprob: -8.755596160888672
    7. 'y' → logprob: -9.380596160888672
    8. ' node' → logprob: -11.380596160888672
    9. 'parent' → logprob: -11.880596160888672
    10. '   ' → logprob: -12.505596160888672

Token 154: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.1966794729232788
    2. '[x' → logprob: -1.9466794729232788
    3. '[' → logprob: -3.9466795921325684
    4. '[node' → logprob: -4.571679592132568
    5. 'x' → logprob: -5.696679592132568
    6. '[q' → logprob: -7.071679592132568
    7. '[a' → logprob: -7.821679592132568
    8. 'p' → logprob: -8.07167911529541
    9. '.setdefault' → logprob: -8.57167911529541
    10. '[(' → logprob: -9.57167911529541

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.73183855926618e-05
    2. '1' → logprob: -10.125077247619629
    3. 'x' → logprob: -10.625077247619629
    4. 'y' → logprob: -12.250077247619629
    5. 's' → logprob: -13.375077247619629
    6. 'ar' → logprob: -14.000077247619629
    7. 'node' → logprob: -14.125077247619629
    8. 'p' → logprob: -14.375077247619629
    9. 'ython' → logprob: -14.750077247619629
    10. 'a' → logprob: -14.750077247619629

Token 156: '+' (ID: 10)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.11624639481306076
    2. '.p' → logprob: -2.241246461868286
    3. ']' → logprob: -6.741246223449707
    4. '.parent' → logprob: -6.866246223449707
    5. '.char' → logprob: -7.991246223449707
    6. ').' → logprob: -8.116246223449707
    7. ' ].' → logprob: -8.241246223449707
    8. ' ' → logprob: -9.616246223449707
    9. '.par' → logprob: -10.116246223449707
    10. '.' → logprob: -10.616246223449707

Token 157: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9862216504407115e-05
    2. ' q' → logprob: -10.875020027160645
    3. ' ' → logprob: -15.375020027160645
    4. ''q' → logprob: -15.500020027160645
    5. '	q' → logprob: -16.125019073486328
    6. '   ' → logprob: -16.750019073486328
    7. '
' → logprob: -16.875019073486328
    8. '[q' → logprob: -17.250019073486328
    9. '<|end|>' → logprob: -17.500019073486328
    10. '  ' → logprob: -17.500019073486328

Token 158: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010759611177491024
    2. 'q' → logprob: -10.000107765197754
    3. 'x' → logprob: -10.750107765197754
    4. '+' → logprob: -11.000107765197754
    5. ' ' → logprob: -11.250107765197754
    6. '   ' → logprob: -12.625107765197754
    7. ',' → logprob: -13.625107765197754
    8. ' q' → logprob: -13.625107765197754
    9. ' +' → logprob: -13.750107765197754
    10. '  ' → logprob: -14.000107765197754

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06221684440970421
    2. '].' → logprob: -3.1872167587280273
    3. ']=' → logprob: -4.062216758728027
    4. '.parent' → logprob: -6.937216758728027
    5. '.p' → logprob: -7.312216758728027
    6. ' ]' → logprob: -10.062216758728027
    7. '1' → logprob: -10.562216758728027
    8. '.' → logprob: -10.687216758728027
    9. '[' → logprob: -11.187216758728027
    10. ' ].' → logprob: -11.437216758728027

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043417952954769135
    2. ' =' → logprob: -3.1684179306030273
    3. '.p' → logprob: -8.793417930603027
    4. '.' → logprob: -9.168417930603027
    5. '=p' → logprob: -9.918417930603027
    6. '=
' → logprob: -10.543417930603027
    7. '.parent' → logprob: -10.793417930603027
    8. ',' → logprob: -11.293417930603027
    9. '=node' → logprob: -11.668417930603027
    10. 'p' → logprob: -11.668417930603027

Token 161: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011048882268369198
    2. ' x' → logprob: -4.511048793792725
    3. 'Node' → logprob: -14.136049270629883
    4. ' ' → logprob: -16.261049270629883
    5. '	x' → logprob: -16.261049270629883
    6. '   ' → logprob: -16.636049270629883
    7. '(x' → logprob: -17.011049270629883
    8. 'node' → logprob: -18.511049270629883
    9. '  ' → logprob: -18.761049270629883
    10. ' Node' → logprob: -19.386049270629883

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439296454191208
    2. 'he' → logprob: -2.1439297199249268
    3. ' he' → logprob: -4.143929481506348
    4. 'heap' → logprob: -7.143929481506348
    5. 'push' → logprob: -9.893929481506348
    6. ',' → logprob: -10.643929481506348
    7. '  ' → logprob: -10.643929481506348
    8. ' heap' → logprob: -10.768929481506348
    9. '    
' → logprob: -11.268929481506348
    10. '_he' → logprob: -11.518929481506348

Token 163: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.39190661907196045
    2. '   ' → logprob: -1.3919066190719604
    3. ' he' → logprob: -2.64190673828125
    4. 'heap' → logprob: -5.51690673828125
    5. 'push' → logprob: -8.64190673828125
    6. ' heap' → logprob: -9.76690673828125
    7. ',' → logprob: -10.89190673828125
    8. 'h' → logprob: -11.26690673828125
    9. '  ' → logprob: -11.39190673828125
    10. '_he' → logprob: -11.64190673828125

Token 164: ' if' (ID: 538)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04199209436774254
    2. ' he' → logprob: -3.2919921875
    3. '   ' → logprob: -5.9169921875
    4. 'heap' → logprob: -6.7919921875
    5. 'push' → logprob: -9.7919921875
    6. ' heap' → logprob: -11.6669921875
    7. 'x' → logprob: -11.7919921875
    8. 'p' → logprob: -11.9169921875
    9. ' ' → logprob: -12.1669921875
    10. 'y' → logprob: -12.4169921875

Token 165: ' len' (ID: 4631)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8022482991218567
    2. 'node' → logprob: -0.8022482991218567
    3. ' p' → logprob: -2.802248239517212
    4. 'p' → logprob: -3.927248239517212
    5. ' isinstance' → logprob: -4.302248477935791
    6. ' q' → logprob: -5.802248477935791
    7. ' not' → logprob: -6.552248477935791
    8. 'type' → logprob: -7.052248477935791
    9. ' ' → logprob: -7.177248477935791
    10. 'q' → logprob: -7.177248477935791

Token 166: '(a' (ID: 6271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0019556330516934395
    2. '(x' → logprob: -6.501955509185791
    3. '(node' → logprob: -8.87695598602295
    4. '(q' → logprob: -9.25195598602295
    5. 'p' → logprob: -9.37695598602295
    6. '(' → logprob: -9.87695598602295
    7. '(a' → logprob: -10.00195598602295
    8. 'x' → logprob: -10.50195598602295
    9. 'node' → logprob: -13.75195598602295
    10. '(s' → logprob: -13.75195598602295

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5991065502166748
    2. ')>' → logprob: -0.8491065502166748
    3. '>' → logprob: -3.974106550216675
    4. ')==' → logprob: -6.224106788635254
    5. ' >' → logprob: -6.599106788635254
    6. ' )' → logprob: -8.849106788635254
    7. ')>
' → logprob: -9.224106788635254
    8. '):' → logprob: -9.599106788635254
    9. ')<' → logprob: -9.724106788635254
    10. ')!=' → logprob: -9.974106788635254

Token 168: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0429479256272316
    2. ' >' → logprob: -3.292948007583618
    3. '()>' → logprob: -5.792947769165039
    4. ')>' → logprob: -7.417947769165039
    5. ':' → logprob: -7.667947769165039
    6. '==' → logprob: -7.792947769165039
    7. '<' → logprob: -10.292947769165039
    8. '!=' → logprob: -10.292947769165039
    9. ']>' → logprob: -10.292947769165039
    10. ' ==' → logprob: -10.292947769165039

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013073880225419998
    2. ' ' → logprob: -4.388073921203613
    3. '1' → logprob: -7.638073921203613
    4. '>' → logprob: -10.638073921203613
    5. '   ' → logprob: -10.763073921203613
    6. '2' → logprob: -11.138073921203613
    7. '  ' → logprob: -11.513073921203613
    8. '=' → logprob: -13.013073921203613
    9. '

' → logprob: -13.450573921203613
    10. '
' → logprob: -13.825573921203613

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029253996908664703
    2. ' ' → logprob: -6.002925395965576
    3. '1' → logprob: -7.752925395965576
    4. '   ' → logprob: -12.127925872802734
    5. '>' → logprob: -12.127925872802734
    6. '  ' → logprob: -12.627925872802734
    7. '2' → logprob: -12.877925872802734
    8. 'not' → logprob: -14.815425872802734
    9. '
' → logprob: -14.940425872802734
    10. '

' → logprob: -15.127925872802734

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02747284062206745
    2. ':
' → logprob: -4.027472972869873
    3. '   ' → logprob: -5.402472972869873
    4. '       ' → logprob: -5.527472972869873
    5. ' or' → logprob: -7.652472972869873
    6. '<|end|>' → logprob: -9.277472496032715
    7. ' and' → logprob: -9.777472496032715
    8. ',' → logprob: -10.277472496032715
    9. ':return' → logprob: -11.027472496032715
    10. ' :' → logprob: -11.027472496032715

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005036644637584686
    2. '   ' → logprob: -5.7550368309021
    3. ' he' → logprob: -7.1300368309021
    4. ' heap' → logprob: -8.505036354064941
    5. '    ' → logprob: -8.880036354064941
    6. '     ' → logprob: -9.130036354064941
    7. 'he' → logprob: -9.505036354064941
    8. '      ' → logprob: -9.505036354064941
    9. '        
' → logprob: -9.880036354064941
    10. ',' → logprob: -10.255036354064941

Token 173: ' root' (ID: 6577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4898085594177246
    2. ' break' → logprob: -1.2398085594177246
    3. 'break' → logprob: -2.6148085594177246
    4. '       ' → logprob: -4.864808559417725
    5. 'x' → logprob: -4.989808559417725
    6. 'root' (adapté à ' root') → logprob: -6.114808559417725
    7. ' x' → logprob: -6.114808559417725
    8. ' root' → logprob: -6.239808559417725
    9. 'node' → logprob: -6.989808559417725
    10. ' node' → logprob: -7.364808559417725

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326988935470581
    2. '=' → logprob: -0.7576988935470581
    3. ' ' → logprob: -10.132699012756348
    4. '.' → logprob: -10.382699012756348
    5. 'x' → logprob: -12.007699012756348
    6. '.=' → logprob: -12.632699012756348
    7. ' x' → logprob: -12.882699012756348
    8. '   ' → logprob: -13.007699012756348
    9. '=node' → logprob: -13.007699012756348
    10. '=root' → logprob: -13.632699012756348

Token 175: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020425561524461955
    2. ' x' → logprob: -8.500204086303711
    3. ' ' → logprob: -14.875204086303711
    4. '(x' → logprob: -16.00020408630371
    5. '   ' → logprob: -16.00020408630371
    6. 'node' → logprob: -16.87520408630371
    7. 'Node' → logprob: -17.12520408630371
    8. '  ' → logprob: -17.25020408630371
    9. 'p' → logprob: -17.62520408630371
    10. ''x' → logprob: -17.62520408630371

Token 176: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025649568997323513
    2. ' else' → logprob: -6.752564907073975
    3. '    
' → logprob: -7.502564907073975
    4. 'he' → logprob: -8.252565383911133
    5. ' he' → logprob: -8.377565383911133
    6. 'else' → logprob: -8.627565383911133
    7. ' 
' → logprob: -10.877565383911133
    8. '
' → logprob: -11.002565383911133
    9. '  ' → logprob: -11.002565383911133
    10. '  
' → logprob: -11.127565383911133

Token 177: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009997950866818428
    2. 'he' → logprob: -5.384997844696045
    3. ' he' → logprob: -5.509997844696045
    4. ' else' → logprob: -7.384997844696045
    5. '    
' → logprob: -8.134998321533203
    6. 'else' → logprob: -8.509998321533203
    7. 'heap' → logprob: -10.509998321533203
    8. '    ' → logprob: -10.634998321533203
    9. '  ' → logprob: -10.759998321533203
    10. '       ' → logprob: -11.384998321533203

Token 178: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26223024725914
    2. 'break' (adapté à ' break') → logprob: -1.6372302770614624
    3. '   ' → logprob: -3.637230157852173
    4. ' break' → logprob: -4.762230396270752
    5. 'continue' → logprob: -8.012229919433594
    6. '	break' → logprob: -8.137229919433594
    7. 'he' → logprob: -8.887229919433594
    8. 'heap' → logprob: -9.512229919433594
    9. '      ' → logprob: -10.012229919433594
    10. 'node' → logprob: -10.262229919433594

Token 179: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009459386579692364
    2. ' he' → logprob: -5.384459495544434
    3. 'he' → logprob: -5.509459495544434
    4. 'x' → logprob: -9.134459495544434
    5. 'heap' → logprob: -9.134459495544434
    6. 'else' → logprob: -9.384459495544434
    7. '    
' → logprob: -9.634459495544434
    8. ' else' → logprob: -9.634459495544434
    9. ' x' → logprob: -9.759459495544434
    10. ' heap' → logprob: -10.759459495544434

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1912967413663864
    2. ' he' → logprob: -2.1912968158721924
    3. 'he' → logprob: -2.8162968158721924
    4. 'heap' → logprob: -7.816296577453613
    5. 'push' → logprob: -7.816296577453613
    6. 'x' → logprob: -8.191296577453613
    7. 'y' → logprob: -8.316296577453613
    8. ' y' → logprob: -8.441296577453613
    9. ' x' → logprob: -8.941296577453613
    10. ' heap' → logprob: -9.191296577453613

Token 181: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3384116291999817
    2. ' he' → logprob: -1.463411569595337
    3. 'he' → logprob: -2.963411569595337
    4. 'heap' → logprob: -7.088411808013916
    5. ' heap' → logprob: -7.338411808013916
    6. ' y' → logprob: -7.838411808013916
    7. 'push' → logprob: -7.963411808013916
    8. '  ' → logprob: -8.463411331176758
    9. 'y' → logprob: -8.838411331176758
    10. ' new' → logprob: -8.963411331176758

Token 182: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5932873487472534
    2. '[x' → logprob: -0.8432873487472534
    3. '[root' → logprob: -4.343287467956543
    4. 'x' → logprob: -6.718287467956543
    5. 'p' → logprob: -7.093287467956543
    6. '[q' → logprob: -7.593287467956543
    7. '[' → logprob: -7.593287467956543
    8. 'root' → logprob: -7.968287467956543
    9. '[node' → logprob: -9.218287467956543
    10. '['' → logprob: -9.343287467956543

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021415075287222862
    2. 'x' → logprob: -4.0214152336120605
    3. 'p' → logprob: -6.6464152336120605
    4. '[p' → logprob: -6.6464152336120605
    5. '[x' → logprob: -9.271414756774902
    6. 'q' → logprob: -9.771414756774902
    7. '[root' → logprob: -9.771414756774902
    8. '1' → logprob: -9.896414756774902
    9. '(p' → logprob: -10.146414756774902
    10. '[' → logprob: -10.146414756774902

Token 184: '].' (ID: 1651)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08733213692903519
    2. '+p' → logprob: -2.587332248687744
    3. '.p' → logprob: -6.337332248687744
    4. '][' → logprob: -6.587332248687744
    5. '.q' → logprob: -7.212332248687744
    6. '].' → logprob: -7.337332248687744
    7. '[p' → logprob: -7.337332248687744
    8. ']+' → logprob: -7.462332248687744
    9. ']' → logprob: -7.462332248687744
    10. '.key' → logprob: -7.587332248687744

Token 185: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.008434316143393517
    2. 'key' → logprob: -5.633434295654297
    3. 'parent' → logprob: -5.758434295654297
    4. '__' → logprob: -8.133434295654297
    5. 'paren' → logprob: -8.383434295654297
    6. 'pa' → logprob: -9.008434295654297
    7. 'pere' → logprob: -9.133434295654297
    8. 'paste' → logprob: -9.258434295654297
    9. 'add' → logprob: -9.383434295654297
    10. 'node' → logprob: -9.508434295654297

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08666720241308212
    2. ' =' → logprob: -2.58666729927063
    3. '.' → logprob: -5.836667060852051
    4. '=None' → logprob: -6.836667060852051
    5. '[' → logprob: -7.711667060852051
    6. '=node' → logprob: -7.711667060852051
    7. 'r' → logprob: -7.836667060852051
    8. '.=' → logprob: -8.21166706085205
    9. ')' → logprob: -8.46166706085205
    10. 'd' → logprob: -8.83666706085205

Token 187: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.268254896393046e-05
    2. 'p' → logprob: -10.250082969665527
    3. ' x' → logprob: -10.250082969665527
    4. 'root' → logprob: -12.125082969665527
    5. 'node' → logprob: -12.250082969665527
    6. 'q' → logprob: -14.500082969665527
    7. '[' → logprob: -15.250082969665527
    8. '<|end|>' → logprob: -15.500082969665527
    9. ' p' → logprob: -15.625082969665527
    10. ' ' → logprob: -15.875082969665527

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13628771901130676
    2. 'n' → logprob: -3.5112876892089844
    3. 'node' → logprob: -3.5112876892089844
    4. ' ' → logprob: -3.7612876892089844
    5. '<|end|>' → logprob: -4.011287689208984
    6. 'x' → logprob: -5.011287689208984
    7. 'p' → logprob: -5.511287689208984
    8. ' node' → logprob: -5.761287689208984
    9. ' 
' → logprob: -6.261287689208984
    10. '[node' → logprob: -6.511287689208984

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05774372071027756
    2. 'node' → logprob: -3.182743787765503
    3. ')' → logprob: -5.557743549346924
    4. 'he' → logprob: -5.682743549346924
    5. '[node' → logprob: -6.432743549346924
    6. 'p' → logprob: -6.682743549346924
    7. ' node' → logprob: -6.807743549346924
    8. '<|end|>' → logprob: -7.057743549346924
    9. 'x' → logprob: -7.682743549346924
    10. '[' → logprob: -8.432744026184082

Token 190: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.24816963076591492
    2. '   ' → logprob: -1.8731696605682373
    3. ' node' → logprob: -2.7481696605682373
    4. 'p' → logprob: -6.748169422149658
    5. 'x' → logprob: -8.123169898986816
    6. ' p' → logprob: -8.248169898986816
    7. '[node' → logprob: -9.748169898986816
    8. 'Node' → logprob: -9.873169898986816
    9. 'q' → logprob: -9.873169898986816
    10. '	node' → logprob: -10.373169898986816

Token 191: '[q' (ID: 99278)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.029967425391077995
    2. '[q' → logprob: -3.5299673080444336
    3. 'p' → logprob: -8.779967308044434
    4. '[' → logprob: -10.279967308044434
    5. 'q' → logprob: -11.654967308044434
    6. '[x' → logprob: -13.154967308044434
    7. '[(' → logprob: -13.529967308044434
    8. '   ' → logprob: -13.654967308044434
    9. '[c' → logprob: -13.842467308044434
    10. '[key' → logprob: -13.842467308044434

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012094692647224292
    2. '1' → logprob: -10.375121116638184
    3. '+' → logprob: -11.000121116638184
    4. '```' → logprob: -11.000121116638184
    5. '_' → logprob: -11.625121116638184
    6. '[' → logprob: -11.687621116638184
    7. '].' → logprob: -11.812621116638184
    8. ']' → logprob: -11.937621116638184
    9. 'q' → logprob: -13.062621116638184
    10. ' ' → logprob: -13.312621116638184

Token 193: '].' (ID: 1651)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0022218646481633186
    2. '].' → logprob: -6.502222061157227
    3. '.' → logprob: -7.627222061157227
    4. ').' → logprob: -8.752222061157227
    5. '}.' → logprob: -10.627222061157227
    6. ' .' → logprob: -10.752222061157227
    7. '.par' → logprob: -11.252222061157227
    8. 'pare' → logprob: -12.377222061157227
    9. ']' → logprob: -13.127222061157227
    10. '>.' → logprob: -13.127222061157227

Token 194: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -3.292907877039397e-06
    2. 'par' → logprob: -13.25000286102295
    3. 'p' → logprob: -14.25000286102295
    4. 'are' → logprob: -15.87500286102295
    5. ' pare' → logprob: -15.87500286102295
    6. 'bare' → logprob: -16.000003814697266
    7. ' ' → logprob: -16.250003814697266
    8. 'pere' → logprob: -16.750003814697266
    9. 'paste' → logprob: -16.875003814697266
    10. 'pa' → logprob: -17.125003814697266

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859020933508873
    2. ' =' → logprob: -3.0485901832580566
    3. '.' → logprob: -14.298590660095215
    4. '.=' → logprob: -14.423590660095215
    5. '=node' → logprob: -14.423590660095215
    6. '=x' → logprob: -14.798590660095215
    7. ' ' → logprob: -15.423590660095215
    8. ')' → logprob: -16.0485897064209
    9. '=
' → logprob: -16.0485897064209
    10. '=

' → logprob: -16.5485897064209

Token 196: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25193214416503906
    2. 'x' → logprob: -1.501932144165039
    3. '<|end|>' → logprob: -12.876932144165039
    4. '	x' → logprob: -15.626932144165039
    5. ' ' → logprob: -16.25193214416504
    6. ' ' → logprob: -16.62693214416504
    7. 's' → logprob: -17.12693214416504
    8. ')x' → logprob: -17.25193214416504
    9. '[' → logprob: -18.00193214416504
    10. '[x' → logprob: -18.25193214416504

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014696711674332619
    2. 'he' → logprob: -5.2646965980529785
    3. ')' → logprob: -5.5146965980529785
    4. '    
' → logprob: -6.6396965980529785
    5. '<|end|>' → logprob: -6.6396965980529785
    6. '    ' → logprob: -6.8896965980529785
    7. ' he' → logprob: -7.6396965980529785
    8. ' 
' → logprob: -8.389697074890137
    9. ' ' → logprob: -8.889697074890137
    10. '     
' → logprob: -9.139697074890137

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12643437087535858
    2. 'he' → logprob: -2.501434326171875
    3. ')' → logprob: -4.126434326171875
    4. ' he' → logprob: -5.001434326171875
    5. 'heap' → logprob: -5.126434326171875
    6. '    ' → logprob: -6.251434326171875
    7. ',' → logprob: -6.626434326171875
    8. '_he' → logprob: -7.126434326171875
    9. '[' → logprob: -7.376434326171875
    10. ' heap' → logprob: -8.001434326171875

Token 199: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.017998918890953064
    2. '   ' → logprob: -4.267998695373535
    3. 'heap' → logprob: -6.017998695373535
    4. ' he' → logprob: -6.642998695373535
    5. 'push' → logprob: -10.267998695373535
    6. '  ' → logprob: -11.642998695373535
    7. '    ' → logprob: -12.517998695373535
    8. ' ' → logprob: -12.517998695373535
    9. '_he' → logprob: -12.517998695373535
    10. '.he' → logprob: -12.517998695373535

Token 200: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.5776860184123507e-06
    2. 'ap' → logprob: -13.00000286102295
    3. 'pp' → logprob: -15.87500286102295
    4. 'a' → logprob: -17.000001907348633
    5. 'appen' → logprob: -18.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. 'push' → logprob: -19.250001907348633
    8. 'append' → logprob: -19.375001907348633
    9. '_app' → logprob: -20.375001907348633
    10. ' app' → logprob: -21.125001907348633

Token 201: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.512236498361744e-07
    2. 'op' → logprob: -15.750000953674316
    3. '   ' → logprob: -16.25
    4. 'sh' → logprob: -16.5
    5. 'push' → logprob: -17.125
    6. '```' → logprob: -17.25
    7. '...' → logprob: -18.0
    8. '[' → logprob: -18.25
    9. 'y' → logprob: -18.5
    10. 'us' → logprob: -18.625

Token 202: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'a' → logprob: -17.25
    4. '(
' → logprob: -17.375
    5. '```' → logprob: -18.5
    6. ' (' → logprob: -19.25
    7. '((' → logprob: -19.5
    8. '#a' → logprob: -20.25
    9. ',a' → logprob: -21.75
    10. ' a' → logprob: -21.75

Token 203: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.23408342897891998
    2. ',' → logprob: -2.859083414077759
    3. ',(' → logprob: -2.859083414077759
    4. '(' → logprob: -3.359083414077759
    5. '(a' → logprob: -3.359083414077759
    6. '(x' → logprob: -4.109083652496338
    7. '([' → logprob: -5.234083652496338
    8. ',x' → logprob: -6.859083652496338
    9. '[(' → logprob: -7.609083652496338
    10. '([(' → logprob: -7.609083652496338

Token 204: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16323702037334442
    2. '(p' → logprob: -1.9132369756698608
    3. '((' → logprob: -5.91323709487915
    4. '(' → logprob: -8.288236618041992
    5. ' (' → logprob: -10.038236618041992
    6. 'x' → logprob: -12.413236618041992
    7. '(c' → logprob: -14.038236618041992
    8. '(P' → logprob: -14.038236618041992
    9. ')' → logprob: -14.288236618041992
    10. '(n' → logprob: -14.538236618041992

Token 205: 'p' (ID: 79)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28183817863464355
    2. 'p' → logprob: -1.4068381786346436
    3. ' x' → logprob: -7.906838417053223
    4. ' p' → logprob: -8.156838417053223
    5. '(p' → logprob: -10.656838417053223
    6. '(x' → logprob: -12.281838417053223
    7. '   ' → logprob: -13.906838417053223
    8. ' ' → logprob: -14.156838417053223
    9. ')x' → logprob: -14.406838417053223
    10. ')' → logprob: -14.656838417053223

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. 'x' → logprob: -11.000024795532227
    3. 'p' → logprob: -12.125024795532227
    4. ' ' → logprob: -13.625024795532227
    5. '+' → logprob: -15.000024795532227
    6. ' x' → logprob: -15.125024795532227
    7. ' p' → logprob: -15.500024795532227
    8. '```' → logprob: -15.875024795532227
    9. '+x' → logprob: -15.875024795532227
    10. '+p' → logprob: -16.250024795532227

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000743995129596442
    2. '+p' → logprob: -7.500743865966797
    3. ' +' → logprob: -8.625743865966797
    4. 'q' → logprob: -11.500743865966797
    5. '+
' → logprob: -15.375743865966797
    6. 'p' → logprob: -15.625743865966797
    7. '＋' → logprob: -16.000743865966797
    8. '[q' → logprob: -16.125743865966797
    9. ',q' → logprob: -16.375743865966797
    10. '+t' → logprob: -16.500743865966797

Token 208: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.41866585687967e-06
    2. ' q' → logprob: -11.875008583068848
    3. ' ' → logprob: -13.875008583068848
    4. '<|end|>' → logprob: -15.375008583068848
    5. '   ' → logprob: -16.25000762939453
    6. '  ' → logprob: -16.50000762939453
    7. '	q' → logprob: -17.12500762939453
    8. 'p' → logprob: -17.25000762939453
    9. ''q' → logprob: -17.87500762939453
    10. '?q' → logprob: -17.87500762939453

Token 209: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007453064317815006
    2. ' q' → logprob: -7.8757452964782715
    3. '1' → logprob: -8.00074577331543
    4. '2' → logprob: -11.87574577331543
    5. '   ' → logprob: -12.12574577331543
    6. '```' → logprob: -12.37574577331543
    7. ' ' → logprob: -12.50074577331543
    8. '	q' → logprob: -12.75074577331543
    9. ''q' → logprob: -14.37574577331543
    10. '
' → logprob: -14.50074577331543

Token 210: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020534314680844545
    2. ',x' → logprob: -6.252053260803223
    3. ' ,' → logprob: -9.002053260803223
    4. ',
' → logprob: -14.502053260803223
    5. 'x' → logprob: -14.752053260803223
    6. ' x' → logprob: -15.252053260803223
    7. ',p' → logprob: -15.377053260803223
    8. ',q' → logprob: -17.12705421447754
    9. '   ' → logprob: -17.25205421447754
    10. ',y' → logprob: -17.62705421447754

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '۲' → logprob: -16.0
    4. '₂' → logprob: -16.25
    5. 'x' → logprob: -17.0
    6. '２' → logprob: -17.625
    7. '``' → logprob: -17.9375
    8. '`' → logprob: -18.125
    9. '1' → logprob: -18.125
    10. '_' → logprob: -18.375

Token 212: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1041145626222715e-05
    2. ' +' → logprob: -11.750011444091797
    3. 'q' → logprob: -13.000011444091797
    4. '[q' → logprob: -15.000011444091797
    5. '+
' → logprob: -15.125011444091797
    6. '   ' → logprob: -16.125011444091797
    7. ',q' → logprob: -17.125011444091797
    8. '＋' → logprob: -17.375011444091797
    9. '+p' → logprob: -17.375011444091797
    10. '+x' → logprob: -17.750011444091797

Token 213: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.44706009957008e-05
    2. ' q' → logprob: -9.87508487701416
    3. '+' → logprob: -10.37508487701416
    4. ''q' → logprob: -14.75008487701416
    5. '	q' → logprob: -15.12508487701416
    6. ' ' → logprob: -15.62508487701416
    7. '[q' → logprob: -15.75008487701416
    8. '   ' → logprob: -15.87508487701416
    9. '_q' → logprob: -16.375083923339844
    10. ' +' → logprob: -16.375083923339844

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014198172837495804
    2. 'q' → logprob: -4.264198303222656
    3. '+' → logprob: -10.639198303222656
    4. ' q' → logprob: -12.764198303222656
    5. ' ' → logprob: -13.139198303222656
    6. '   ' → logprob: -14.264198303222656
    7. ' +' → logprob: -14.514198303222656
    8. '_q' → logprob: -14.764198303222656
    9. '₂' → logprob: -14.764198303222656
    10. '۲' → logprob: -14.889198303222656

Token 215: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47409868240356445
    2. ')' → logprob: -0.9740986824035645
    3. ' )' → logprob: -12.099098205566406
    4. '))
' → logprob: -12.099098205566406
    5. ' ))' → logprob: -12.224098205566406
    6. ')
' → logprob: -12.599098205566406
    7. ')))' → logprob: -13.474098205566406
    8. '   ' → logprob: -14.724098205566406
    9. ')}' → logprob: -15.224098205566406
    10. ')]' → logprob: -16.849098205566406

Token 216: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3955336809158325
    2. ' ' → logprob: -2.145533561706543
    3. '_' → logprob: -2.395533561706543
    4. '   ' → logprob: -3.520533561706543
    5. 'r' → logprob: -4.270533561706543
    6. 'e' → logprob: -4.645533561706543
    7. 'p' → logprob: -4.770533561706543
    8. ')' → logprob: -5.020533561706543
    9. 'x' → logprob: -5.145533561706543
    10. '       ' → logprob: -5.645533561706543

Token 217: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.1535396575927734
    2. ' encode' → logprob: -1.2785396575927734
    3. ' preorder' → logprob: -1.9035396575927734
    4. ' get' → logprob: -2.7785396575927734
    5. 'dfs' → logprob: -2.7785396575927734
    6. ' inorder' → logprob: -3.4035396575927734
    7. 'encode' → logprob: -3.7785396575927734
    8. ' build' → logprob: -3.9035396575927734
    9. ' h' → logprob: -4.028539657592773
    10. ' decode' → logprob: -5.403539657592773

Token 218: '(node' (ID: 13356)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.16109603643417358
    2. '(node' → logprob: -1.9110960960388184
    3. '(' → logprob: -7.161096096038818
    4. '(self' → logprob: -9.91109561920166
    5. '(x' → logprob: -10.91109561920166
    6. '(tree' → logprob: -11.78609561920166
    7. ' (' → logprob: -12.03609561920166
    8. '(n' → logprob: -12.91109561920166
    9. '(Node' → logprob: -13.41109561920166
    10. 'def' → logprob: -13.53609561920166

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011998465284705162
    2. ',n' → logprob: -5.136998653411865
    3. ',node' → logprob: -5.511998653411865
    4. '):' → logprob: -6.261998653411865
    5. '   ' → logprob: -10.636998176574707
    6. ' ,' → logprob: -10.761998176574707
    7. '):
' → logprob: -10.886998176574707
    8. '(node' → logprob: -11.886998176574707
    9. ')' → logprob: -12.136998176574707
    10. ':' → logprob: -12.386998176574707

Token 220: ' cnt' (ID: 27340)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.20211590826511383
    2. 'path' → logprob: -2.952116012573242
    3. ' code' → logprob: -3.327116012573242
    4. 's' → logprob: -4.202116012573242
    5. 'depth' → logprob: -4.202116012573242
    6. 'prefix' → logprob: -4.327116012573242
    7. 'codes' → logprob: -4.327116012573242
    8. 'res' → logprob: -4.452116012573242
    9. ' path' → logprob: -4.827116012573242
    10. ' s' → logprob: -5.952116012573242

Token 221: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1641560047864914
    2. '):' → logprob: -1.9141559600830078
    3. '):
' → logprob: -6.039155960083008
    4. ',node' → logprob: -6.789155960083008
    5. '   ' → logprob: -8.664155960083008
    6. ' ,' → logprob: -9.414155960083008
    7. ':' → logprob: -9.664155960083008
    8. ',n' → logprob: -10.289155960083008
    9. ')' → logprob: -10.914155960083008
    10. '(node' → logprob: -11.789155960083008

Token 222: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03764800727367401
    2. '"' → logprob: -3.9126479625701904
    3. ''' → logprob: -4.1626482009887695
    4. ' ' → logprob: -7.4126482009887695
    5. ''',' → logprob: -8.16264820098877
    6. '"",' → logprob: -8.53764820098877
    7. '''' → logprob: -9.41264820098877
    8. '1' → logprob: -9.78764820098877
    9. '""' → logprob: -10.16264820098877
    10. ' '')' → logprob: -10.53764820098877

Token 223: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001999534899368882
    2. '):
' → logprob: -6.626999378204346
    3. ')' → logprob: -7.501999378204346
    4. ',' → logprob: -9.251999855041504
    5. ':' → logprob: -11.001999855041504
    6. ' ):' → logprob: -13.001999855041504
    7. ',node' → logprob: -13.251999855041504
    8. '):

' → logprob: -13.501999855041504
    9. '   ' → logprob: -13.626999855041504
    10. '):
' → logprob: -13.876999855041504

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008459258824586868
    2. ' if' → logprob: -5.008459091186523
    3. '<|end|>' → logprob: -6.508459091186523
    4. '	if' → logprob: -8.883459091186523
    5. 'if' → logprob: -10.758459091186523
    6. '    ' → logprob: -11.008459091186523
    7. ' ' → logprob: -11.383459091186523
    8. '       ' → logprob: -11.633459091186523
    9. ' code' → logprob: -11.883459091186523
    10. '  ' → logprob: -11.883459091186523

Token 225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5424101948738098
    2. ' if' → logprob: -1.042410135269165
    3. '   ' → logprob: -2.792410135269165
    4. 'code' → logprob: -5.917410373687744
    5. ' code' → logprob: -7.542410373687744
    6. '	if' → logprob: -7.792410373687744
    7. 'res' → logprob: -7.792410373687744
    8. 'codes' → logprob: -8.542409896850586
    9. ' res' → logprob: -8.667409896850586
    10. 'result' → logprob: -9.667409896850586

Token 226: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.14336690306663513
    2. ' node' → logprob: -2.018366813659668
    3. 'not' → logprob: -7.768366813659668
    4. ' not' → logprob: -8.393366813659668
    5. '(node' → logprob: -10.893366813659668
    6. ' ' → logprob: -11.393366813659668
    7. ' hasattr' → logprob: -12.768366813659668
    8. '   ' → logprob: -12.893366813659668
    9. 'len' → logprob: -12.893366813659668
    10. '	node' → logprob: -13.518366813659668

Token 227: '.p' (ID: 1201)
  Prédit: '.char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.058257121592760086
    2. '.key' → logprob: -3.4332571029663086
    3. 'char' → logprob: -4.183257102966309
    4. ' is' → logprob: -4.808257102966309
    5. '.' → logprob: -8.683257102966309
    6. ' char' → logprob: -8.808257102966309
    7. '.is' → logprob: -8.808257102966309
    8. '==' → logprob: -9.058257102966309
    9. ':' → logprob: -9.183257102966309
    10. 'is' → logprob: -9.558257102966309

Token 228: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.004652030300348997
    2. 'ar' → logprob: -5.37965202331543
    3. 'char' → logprob: -11.37965202331543
    4. 'ara' → logprob: -12.62965202331543
    5. 'aré' → logprob: -13.00465202331543
    6. 'def' → logprob: -13.12965202331543
    7. 'arse' → logprob: -13.12965202331543
    8. 'a' → logprob: -13.12965202331543
    9. 'aro' → logprob: -13.37965202331543
    10. 'pare' → logprob: -13.37965202331543

Token 229: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07012604922056198
    2. 'is' → logprob: -2.6951260566711426
    3. '==' → logprob: -8.695125579833984
    4. ' ==' → logprob: -11.070125579833984
    5. ':' → logprob: -13.195125579833984
    6. ')' → logprob: -13.445125579833984
    7. 'None' → logprob: -14.570125579833984
    8. '	is' → logprob: -14.695125579833984
    9. ' None' → logprob: -14.820125579833984
    10. ' ' → logprob: -14.945125579833984

Token 230: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.317247167928144e-05
    2. ' None' → logprob: -9.375093460083008
    3. 'root' → logprob: -11.875093460083008
    4. 'node' → logprob: -14.125093460083008
    5. 'none' → logprob: -15.625093460083008
    6. '=None' → logprob: -16.250093460083008
    7. '   ' → logprob: -16.375093460083008
    8. 'True' → logprob: -16.625093460083008
    9. '0' → logprob: -16.750093460083008
    10. '(None' → logprob: -17.000093460083008

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010811636224389076
    2. ':
' → logprob: -5.135811805725098
    3. ' and' → logprob: -6.135811805725098
    4. ':return' → logprob: -6.635811805725098
    5. ' or' → logprob: -7.135811805725098
    6. '       ' → logprob: -7.760811805725098
    7. '   ' → logprob: -9.510811805725098
    8. '):' → logprob: -10.385811805725098
    9. ',' → logprob: -10.635811805725098
    10. 'and' → logprob: -11.010811805725098

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028248557820916176
    2. 'return' → logprob: -4.2782487869262695
    3. ' return' → logprob: -4.4032487869262695
    4. '   ' → logprob: -6.4032487869262695
    5. '<|end|>' → logprob: -10.52824878692627
    6. ':return' → logprob: -10.65324878692627
    7. '	return' → logprob: -12.15324878692627
    8. '	   ' → logprob: -12.77824878692627
    9. ' code' → logprob: -12.90324878692627
    10. ' if' → logprob: -13.02824878692627

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6351044178009033
    2. ' return' → logprob: -1.5101044178009033
    3. '       ' → logprob: -1.8851044178009033
    4. '   ' → logprob: -2.8851044178009033
    5. 'print' → logprob: -3.5101044178009033
    6. ' print' → logprob: -5.760104179382324
    7. 'if' → logprob: -6.510104179382324
    8. ' if' → logprob: -6.635104179382324
    9. 'code' → logprob: -6.635104179382324
    10. ' for' → logprob: -6.635104179382324

Token 234: ' cnt' (ID: 27340)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.45960599184036255
    2. ''' → logprob: -1.3346059322357178
    3. '""' → logprob: -3.3346059322357178
    4. '"' → logprob: -3.5846059322357178
    5. '''
' → logprob: -4.459606170654297
    6. 'cnt' → logprob: -4.584606170654297
    7. '0' → logprob: -5.209606170654297
    8. ' ''' → logprob: -5.709606170654297
    9. '   ' → logprob: -6.209606170654297
    10. '[' → logprob: -6.459606170654297

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006895462516695261
    2. '<|end|>' → logprob: -5.131895542144775
    3. '    
' → logprob: -7.881895542144775
    4. '
' → logprob: -8.256895065307617
    5. '    ' → logprob: -10.006895065307617
    6. ')' → logprob: -10.256895065307617
    7. '<|end|>' → logprob: -10.256895065307617
    8. '       ' → logprob: -10.506895065307617
    9. ' else' → logprob: -10.756895065307617
    10. '  ' → logprob: -10.881895065307617

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029923528200015426
    2. '<|end|>' → logprob: -9.000299453735352
    3. '    ' → logprob: -9.750299453735352
    4. ' if' → logprob: -10.000299453735352
    5. 'if' → logprob: -10.250299453735352
    6. '    
' → logprob: -11.250299453735352
    7. ' ' → logprob: -12.000299453735352
    8. '  ' → logprob: -12.250299453735352
    9. '	if' → logprob: -13.125299453735352
    10. '       ' → logprob: -13.125299453735352

Token 237: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6376961469650269
    2. '   ' → logprob: -0.7626961469650269
    3. ' return' → logprob: -5.387696266174316
    4. 'else' → logprob: -7.887696266174316
    5. 'def' → logprob: -9.887696266174316
    6. '	return' → logprob: -10.762696266174316
    7. 'code' → logprob: -11.012696266174316
    8. 'if' → logprob: -11.637696266174316
    9. ' else' → logprob: -11.887696266174316
    10. ' ' → logprob: -12.137696266174316

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11020726710557938
    2. '=' → logprob: -2.3602073192596436
    3. 'ns' → logprob: -5.6102070808410645
    4. '=node' → logprob: -5.7352070808410645
    5. 'return' → logprob: -6.9852070808410645
    6. 'node' → logprob: -7.4852070808410645
    7. '   ' → logprob: -7.8602070808410645
    8. ' ' → logprob: -7.8602070808410645
    9. ',' → logprob: -8.735207557678223
    10. '  ' → logprob: -9.360207557678223

Token 239: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.09271734207868576
    2. ' dfs' → logprob: -2.717717409133911
    3. 'node' → logprob: -3.967717409133911
    4. ' node' → logprob: -6.217717170715332
    5. '0' → logprob: -7.467717170715332
    6. '   ' → logprob: -7.842717170715332
    7. '1' → logprob: -8.967717170715332
    8. 'def' → logprob: -9.342717170715332
    9. ' ' → logprob: -9.467717170715332
    10. 'df' → logprob: -10.280217170715332

Token 240: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. '[node' → logprob: -15.875000953674316
    4. 'node' → logprob: -16.25
    5. ' (' → logprob: -17.0
    6. ',node' → logprob: -17.875
    7. '(Node' → logprob: -18.0
    8. ' node' → logprob: -18.75
    9. '=node' → logprob: -18.875
    10. '(
' → logprob: -19.0

Token 241: '.p' (ID: 1201)
  Prédit: '.node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.5773743987083435
    2. '(node' → logprob: -1.0773744583129883
    3. '.p' → logprob: -2.3273744583129883
    4. ',node' → logprob: -8.952374458312988
    5. 'node' → logprob: -9.077374458312988
    6. '.parent' → logprob: -9.202374458312988
    7. ')' → logprob: -9.327374458312988
    8. ' .' → logprob: -10.077374458312988
    9. '.' → logprob: -10.202374458312988
    10. '=node' → logprob: -10.702374458312988

Token 242: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.009651967324316502
    2. 'pare' → logprob: -5.134652137756348
    3. 'ar' → logprob: -6.009652137756348
    4. '.p' → logprob: -7.134652137756348
    5. '.' → logprob: -8.134652137756348
    6. 'node' → logprob: -9.509652137756348
    7. 'arre' → logprob: -11.134652137756348
    8. 'a' → logprob: -11.134652137756348
    9. ')' → logprob: -11.884652137756348
    10. '.are' → logprob: -11.884652137756348

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009972022380679846
    2. ' ,' → logprob: -7.375997066497803
    3. ',c' → logprob: -8.000997543334961
    4. ')' → logprob: -11.125997543334961
    5. '   ' → logprob: -11.875997543334961
    6. '  ' → logprob: -12.000997543334961
    7. ' ' → logprob: -13.125997543334961
    8. ',count' → logprob: -13.125997543334961
    9. ',node' → logprob: -13.375997543334961
    10. '(cnt' → logprob: -14.500997543334961

Token 244: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.026414666324853897
    2. ' cnt' → logprob: -3.651414632797241
    3. '   ' → logprob: -9.52641487121582
    4. '  ' → logprob: -11.02641487121582
    5. ' ' → logprob: -11.27641487121582
    6. '	cnt' → logprob: -12.40141487121582
    7. '    ' → logprob: -12.77641487121582
    8. 'count' → logprob: -13.65141487121582
    9. '      ' → logprob: -13.77641487121582
    10. '     ' → logprob: -14.15141487121582

Token 245: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0064543550834059715
    2. ' +' → logprob: -5.2564544677734375
    3. '*' → logprob: -6.7564544677734375
    4. ')' → logprob: -9.881454467773438
    5. '+)' → logprob: -13.006454467773438
    6. ' *' → logprob: -13.131454467773438
    7. '   ' → logprob: -14.631454467773438
    8. ')+' → logprob: -15.506454467773438
    9. ' ' → logprob: -15.756454467773438
    10. '+=' → logprob: -16.256454467773438

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023572170175611973
    2. ' ' → logprob: -9.000235557556152
    3. ')' → logprob: -9.125235557556152
    4. '   ' → logprob: -14.125235557556152
    5. 'cnt' → logprob: -14.250235557556152
    6. ')
' → logprob: -14.625235557556152
    7. ' )' → logprob: -14.875235557556152
    8. '
' → logprob: -15.375235557556152
    9. '```' → logprob: -15.375235557556152
    10. '  ' → logprob: -15.375235557556152

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0380566380918026
    2. ')
' → logprob: -3.2880566120147705
    3. '   ' → logprob: -11.788056373596191
    4. ')return' → logprob: -12.413056373596191
    5. ' )' → logprob: -13.288056373596191
    6. ')
' → logprob: -14.163056373596191
    7. ' )
' → logprob: -14.288056373596191
    8. ')

' → logprob: -15.163056373596191
    9. ')a' → logprob: -16.038057327270508
    10. ' ' → logprob: -17.038057327270508

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.995397365652025e-05
    2. 'return' → logprob: -9.500089645385742
    3. '	return' → logprob: -11.750089645385742
    4. ' return' → logprob: -12.000089645385742
    5. '<|end|>' → logprob: -15.250089645385742
    6. ':return' → logprob: -15.375089645385742
    7. ')' → logprob: -16.125089645385742
    8. '```' → logprob: -16.125089645385742
    9. '       ' → logprob: -16.250089645385742
    10. '
' → logprob: -16.750089645385742

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07534269988536835
    2. '   ' → logprob: -2.8253426551818848
    3. ' return' → logprob: -4.325342655181885
    4. '	return' → logprob: -10.325343132019043
    5. 'if' → logprob: -10.950343132019043
    6. ' ' → logprob: -12.950343132019043
    7. '  ' → logprob: -13.825343132019043
    8. 'b' → logprob: -13.950343132019043
    9. ' if' → logprob: -14.325343132019043
    10. '    
' → logprob: -14.825343132019043

Token 250: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005234356038272381
    2. ' a' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.880234718322754
    4. '   ' → logprob: -15.880234718322754
    5. '  ' → logprob: -17.255233764648438
    6. '    ' → logprob: -17.630233764648438
    7. '	a' → logprob: -17.755233764648438
    8. 'max' → logprob: -17.880233764648438
    9. ' ' → logprob: -18.255233764648438
    10. ' max' → logprob: -18.630233764648438

Token 251: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022011976689100266
    2. 'for' → logprob: -5.397011756896973
    3. 'res' → logprob: -5.772011756896973
    4. 'result' → logprob: -5.772011756896973
    5. 'code' → logprob: -5.897011756896973
    6. 'st' → logprob: -6.897011756896973
    7. 'cnt' → logprob: -7.147011756896973
    8. 'ans' → logprob: -7.272011756896973
    9. 'pr' → logprob: -7.522011756896973
    10. 'n' → logprob: -7.772011756896973

Token 252: 'Sum' (ID: 17434)
  Prédit: 'codes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'codes' → logprob: -1.3484958410263062
    2. 'res' → logprob: -1.4734958410263062
    3. 'ans' → logprob: -1.8484958410263062
    4. 'for' → logprob: -1.9734958410263062
    5. 'code' → logprob: -2.3484959602355957
    6. 'result' → logprob: -3.5984959602355957
    7. 'answer' → logprob: -3.9734959602355957
    8. 'print' → logprob: -4.223495960235596
    9. 'cnt' → logprob: -4.473495960235596
    10. 'freq' → logprob: -5.348495960235596

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3641796112060547
    2. ' =' → logprob: -1.2391796112060547
    3. '_' → logprob: -4.739179611206055
    4. '(' → logprob: -5.114179611206055
    5. '_=' → logprob: -7.864179611206055
    6. 's' → logprob: -9.239179611206055
    7. ',' → logprob: -9.364179611206055
    8. '_code' → logprob: -9.864179611206055
    9. 'code' → logprob: -10.364179611206055
    10. ' +=' → logprob: -10.989179611206055

Token 254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005666146171279252
    2. 'sum' → logprob: -7.625566482543945
    3. ' ' → logprob: -9.500566482543945
    4. ' sum' → logprob: -13.125566482543945
    5. 'Sum' → logprob: -15.250566482543945
    6. '   ' → logprob: -15.375566482543945
    7. '[' → logprob: -15.500566482543945
    8. '```' → logprob: -16.000566482543945
    9. '000' → logprob: -16.188066482543945
    10. '=' → logprob: -16.250566482543945

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014776040916331112
    2. 'sum' → logprob: -8.875147819519043
    3. ' ' → logprob: -12.000147819519043
    4. '[' → logprob: -14.625147819519043
    5. 'len' → logprob: -15.500147819519043
    6. '```' → logprob: -16.187646865844727
    7. '   ' → logprob: -16.312646865844727
    8. ' sum' → logprob: -16.437646865844727
    9. '[]' → logprob: -16.437646865844727
    10. '=' → logprob: -16.437646865844727

Token 256: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001176416757516563
    2. '<|end|>' → logprob: -7.001176357269287
    3. ' for' → logprob: -8.251176834106445
    4. '
' → logprob: -13.751176834106445
    5. '<|end|>' → logprob: -13.751176834106445
    6. '```' → logprob: -15.126176834106445
    7. ')' → logprob: -15.126176834106445
    8. 'code' → logprob: -15.876176834106445
    9. ',' → logprob: -16.001176834106445
    10. ':' → logprob: -16.251176834106445

Token 257: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.180258191714529e-06
    2. ' for' → logprob: -11.875008583068848
    3. '<|end|>' → logprob: -14.000008583068848
    4. ')' → logprob: -15.875008583068848
    5. '```' → logprob: -16.25000762939453
    6. '
' → logprob: -18.62500762939453
    7. '[' → logprob: -19.12500762939453
    8. '_for' → logprob: -19.25000762939453
    9. 'For' → logprob: -19.37500762939453
    10. 'code' → logprob: -19.50000762939453

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10674416273832321
    2. 'c' → logprob: -2.7317440509796143
    3. ' i' → logprob: -4.106744289398193
    4. 'char' → logprob: -4.481744289398193
    5. 'ch' → logprob: -5.606744289398193
    6. 'k' → logprob: -6.481744289398193
    7. ' c' → logprob: -6.481744289398193
    8. 'key' → logprob: -7.356744289398193
    9. ' char' → logprob: -7.606744289398193
    10. ' key' → logprob: -8.856743812561035

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04144556447863579
    2. 'in' → logprob: -3.29144549369812
    3. ',' → logprob: -5.791445732116699
    4. ' ,' → logprob: -8.4164457321167
    5. ' ' → logprob: -9.4164457321167
    6. ',in' → logprob: -12.0414457321167
    7. '	in' → logprob: -12.6664457321167
    8. '_' → logprob: -12.7914457321167
    9. '  ' → logprob: -12.7914457321167
    10. ',char' → logprob: -13.1039457321167

Token 260: ' _' (ID: 1175)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.3023119866847992
    2. '_st' → logprob: -1.5523120164871216
    3. 'range' → logprob: -3.802311897277832
    4. ' st' → logprob: -5.052311897277832
    5. 'set' → logprob: -5.052311897277832
    6. 'node' → logprob: -5.177311897277832
    7. ' range' → logprob: -5.552311897277832
    8. 'list' → logprob: -6.177311897277832
    9. ' _' → logprob: -7.177311897277832
    10. ' node' → logprob: -7.427311897277832

Token 261: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.700132997939363e-05
    2. '_st' → logprob: -11.000017166137695
    3. 's' → logprob: -16.625017166137695
    4. 'i' → logprob: -17.250017166137695
    5. ' st' → logprob: -17.500017166137695
    6. 'a' → logprob: -17.750017166137695
    7. '	st' → logprob: -17.750017166137695
    8. '   ' → logprob: -17.875017166137695
    9. 'node' → logprob: -18.500017166137695
    10. ' ' → logprob: -18.625017166137695

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012642434798181057
    2. ':
' → logprob: -4.3876423835754395
    3. ',' → logprob: -9.887642860412598
    4. '   ' → logprob: -10.387642860412598
    5. '=' → logprob: -11.012642860412598
    6. ' :' → logprob: -11.887642860412598
    7. '+' → logprob: -12.262642860412598
    8. '):
' → logprob: -12.387642860412598
    9. ' +=' → logprob: -12.637642860412598
    10. ' =' → logprob: -12.637642860412598

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021282510831952095
    2. ' Sum' → logprob: -4.02128267288208
    3. 'Sum' → logprob: -6.64628267288208
    4. '<|end|>' → logprob: -7.39628267288208
    5. '
' → logprob: -8.146282196044922
    6. ' code' → logprob: -8.771282196044922
    7. ' length' → logprob: -9.021282196044922
    8. '    
' → logprob: -9.271282196044922
    9. '```' → logprob: -9.271282196044922
    10. ' sum' → logprob: -9.396282196044922

Token 264: ' no' (ID: 860)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.0008827611454762518
    2. ' Sum' → logprob: -8.125883102416992
    3. 'length' → logprob: -8.625883102416992
    4. 'sum' → logprob: -8.875883102416992
    5. '_sum' → logprob: -9.375883102416992
    6. 'code' → logprob: -10.000883102416992
    7. 'cnt' → logprob: -10.125883102416992
    8. '   ' → logprob: -10.125883102416992
    9. 'count' → logprob: -11.375883102416992
    10. 'depth' → logprob: -11.500883102416992

Token 265: ' =' (ID: 314)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.013617893680930138
    2. '=' → logprob: -4.513617992401123
    3. ' =' → logprob: -6.138617992401123
    4. 'des' → logprob: -8.513617515563965
    5. 'd' → logprob: -10.013617515563965
    6. 'e' → logprob: -10.013617515563965
    7. '   ' → logprob: -10.138617515563965
    8. '```' → logprob: -12.013617515563965
    9. 'def' → logprob: -12.138617515563965
    10. '[' → logprob: -12.263617515563965

Token 266: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.10046502202749252
    2. ' node' → logprob: -2.3504650592803955
    3. 'dfs' → logprob: -8.850464820861816
    4. ' dfs' → logprob: -9.600464820861816
    5. ' ' → logprob: -10.350464820861816
    6. '   ' → logprob: -11.475464820861816
    7. '  ' → logprob: -13.350464820861816
    8. '(node' → logprob: -13.600464820861816
    9. '	node' → logprob: -14.225464820861816
    10. '[node' → logprob: -14.725464820861816

Token 267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'i' → logprob: -15.625000953674316
    4. '[node' → logprob: -15.625000953674316
    5. ' [' → logprob: -17.000001907348633
    6. '[I' → logprob: -17.625001907348633
    7. '\[' → logprob: -18.375001907348633
    8. '```' → logprob: -19.250001907348633
    9. '[str' → logprob: -19.625001907348633
    10. '[a' → logprob: -19.625001907348633

Token 268: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3790992498397827
    2. ')
' → logprob: -1.6290992498397827
    3. ']' → logprob: -2.3790993690490723
    4. ')' → logprob: -3.7540993690490723
    5. '])
' → logprob: -6.629099369049072
    6. ']
' → logprob: -7.254099369049072
    7. '   ' → logprob: -7.504099369049072
    8. '])' → logprob: -7.879099369049072
    9. ')
' → logprob: -8.754098892211914
    10. ' )
' → logprob: -9.879098892211914

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8064314126968384
    2. 'Sum' → logprob: -0.8064314126968384
    3. 'length' → logprob: -2.931431293487549
    4. 'code' → logprob: -3.681431293487549
    5. ' Sum' → logprob: -4.556431293487549
    6. 'depth' → logprob: -5.556431293487549
    7. 'sum' → logprob: -5.931431293487549
    8. 'cnt' → logprob: -6.181431293487549
    9. 'len' → logprob: -6.431431293487549
    10. ' length' → logprob: -6.681431293487549

Token 270: ' depth' (ID: 13636)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.006023838184773922
    2. 'length' → logprob: -6.13102388381958
    3. 'depth' (adapté à ' depth') → logprob: -6.13102388381958
    4. 'code' → logprob: -7.75602388381958
    5. 'l' → logprob: -8.256023406982422
    6. 'sum' → logprob: -8.631023406982422
    7. 'cnt' → logprob: -8.881023406982422
    8. 'd' → logprob: -9.006023406982422
    9. 'val' → logprob: -9.131023406982422
    10. ' Sum' → logprob: -9.256023406982422

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869906961917877
    2. ' =' → logprob: -1.1369906663894653
    3. ' +=' → logprob: -9.511990547180176
    4. '+=' → logprob: -10.136990547180176
    5. ')' → logprob: -12.761990547180176
    6. ' ' → logprob: -14.386990547180176
    7. ',' → logprob: -14.886990547180176
    8. '+' → logprob: -14.886990547180176
    9. '=}' → logprob: -15.261990547180176
    10. ')=' → logprob: -15.386990547180176

Token 272: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1002197191119194
    2. ' dfs' → logprob: -2.3502197265625
    3. 'df' → logprob: -11.3502197265625
    4. 'd' → logprob: -14.9752197265625
    5. '   ' → logprob: -15.2252197265625
    6. 'DFS' → logprob: -15.7252197265625
    7. ' ' → logprob: -15.7252197265625
    8. '
' → logprob: -16.4752197265625
    9. ' DFS' → logprob: -16.4752197265625
    10. 'dfa' → logprob: -16.8502197265625

Token 273: '(no' (ID: 67114)
  Prédit: '(no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(no' → logprob: -6.659005157416686e-05
    2. '(node' → logprob: -9.750066757202148
    3. '(' → logprob: -11.750066757202148
    4. '(No' → logprob: -15.750066757202148
    5. ',no' → logprob: -16.00006675720215
    6. 'no' → logprob: -17.25006675720215
    7. '=no' → logprob: -17.25006675720215
    8. '(i' → logprob: -17.87506675720215
    9. '(n' → logprob: -18.12506675720215
    10. '(
' → logprob: -18.25006675720215

Token 274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1989360898733139
    2. ')
' → logprob: -1.823936104774475
    3. ',' → logprob: -4.1989359855651855
    4. '   ' → logprob: -5.5739359855651855
    5. ')
' → logprob: -9.698936462402344
    6. '(no' → logprob: -9.948936462402344
    7. ',no' → logprob: -10.698936462402344
    8. ')

' → logprob: -10.948936462402344
    9. ' )' → logprob: -11.698936462402344
    10. '  ' → logprob: -11.823936462402344

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07128985226154327
    2. 'Sum' → logprob: -2.6962897777557373
    3. '
' → logprob: -7.196290016174316
    4. ' Sum' → logprob: -8.071290016174316
    5. '```' → logprob: -8.696290016174316
    6. '  ' → logprob: -10.821290016174316
    7. '``' → logprob: -11.071290016174316
    8. ' ' → logprob: -11.446290016174316
    9. 'Summ' → logprob: -11.446290016174316
    10. '<|end|>' → logprob: -11.696290016174316

Token 276: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' (adapté à ' Sum') → logprob: -3.2855416066013277e-05
    2. ' Sum' → logprob: -10.500032424926758
    3. '   ' → logprob: -13.000032424926758
    4. '_sum' → logprob: -13.250032424926758
    5. 'Summ' → logprob: -14.625032424926758
    6. '
' → logprob: -15.250032424926758
    7. '```' → logprob: -15.875032424926758
    8. 'sum' → logprob: -16.625032424926758
    9. 'SUM' → logprob: -17.250032424926758
    10. '``' → logprob: -17.500032424926758

Token 277: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12718741595745087
    2. ' +=' → logprob: -2.127187490463257
    3. '=' → logprob: -8.877187728881836
    4. '+' → logprob: -9.127187728881836
    5. ']+=' → logprob: -12.502187728881836
    6. '+=(' → logprob: -12.877187728881836
    7. ' +' → logprob: -14.002187728881836
    8. '```' → logprob: -14.002187728881836
    9. ' =' → logprob: -14.377187728881836
    10. '+="' → logprob: -14.502187728881836

Token 278: ' depth' (ID: 13636)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.011973853223025799
    2. ' no' → logprob: -4.886973857879639
    3. 'st' → logprob: -6.386973857879639
    4. 'depth' → logprob: -6.636973857879639
    5. 'node' → logprob: -7.011973857879639
    6. 'len' → logprob: -8.01197338104248
    7. ' st' → logprob: -10.01197338104248
    8. ' depth' → logprob: -10.76197338104248
    9. '(no' → logprob: -10.88697338104248
    10. '   ' → logprob: -11.01197338104248

Token 279: '*' (ID: 9)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027922868728637695
    2. ' print' → logprob: -3.6529228687286377
    3. '
' → logprob: -7.652922630310059
    4. '<|end|>' → logprob: -7.902922630310059
    5. ')' → logprob: -8.277922630310059
    6. '+' → logprob: -8.777922630310059
    7. '*' → logprob: -8.902922630310059
    8. ',' → logprob: -10.027922630310059
    9. '.print' → logprob: -10.527922630310059
    10. '_print' → logprob: -10.652922630310059

Token 280: 'no' (ID: 1750)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.000249061529757455
    2. ' st' → logprob: -8.875248908996582
    3. 'no' → logprob: -9.750248908996582
    4. 'node' → logprob: -10.750248908996582
    5. '(st' → logprob: -10.750248908996582
    6. '```' → logprob: -12.625248908996582
    7. '   ' → logprob: -13.625248908996582
    8. '_st' → logprob: -14.875248908996582
    9. '	st' → logprob: -14.875248908996582
    10. '
' → logprob: -15.000248908996582

Token 281: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -4.9424725148128346e-05
    2. 'key' → logprob: -10.250049591064453
    3. '.' → logprob: -11.750049591064453
    4. '.count' → logprob: -13.125049591064453
    5. ' .' → logprob: -13.500049591064453
    6. '```' → logprob: -13.750049591064453
    7. ' key' → logprob: -14.750049591064453
    8. '.
' → logprob: -15.375049591064453
    9. '   ' → logprob: -15.500049591064453
    10. '`.' → logprob: -15.625049591064453

Token 282: '
    
' (ID: 15698)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012066077440977097
    2. '<|end|>' → logprob: -5.137065887451172
    3. ')' → logprob: -5.637065887451172
    4. '
' → logprob: -6.137065887451172
    5. ' print' → logprob: -8.137065887451172
    6. '#' → logprob: -10.637065887451172
    7. '```' → logprob: -10.762065887451172
    8. '#print' → logprob: -10.887065887451172
    9. ')
' → logprob: -11.512065887451172
    10. '(print' → logprob: -12.387065887451172

Token 283: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -13.875001907348633
    3. '```' → logprob: -14.500001907348633
    4. '#print' → logprob: -15.250001907348633
    5. '#' → logprob: -15.875001907348633
    6. 'pr' → logprob: -16.125001907348633
    7. 'Print' → logprob: -16.875001907348633
    8. 'if' → logprob: -17.000001907348633
    9. '
' → logprob: -17.500001907348633
    10. ')' → logprob: -17.750001907348633

Token 284: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00154533376917243
    2. '(' → logprob: -6.626545429229736
    3. '(len' → logprob: -9.251544952392578
    4. '(sum' → logprob: -9.251544952392578
    5. '()' → logprob: -11.251544952392578
    6. '('' → logprob: -11.751544952392578
    7. '((' → logprob: -13.376544952392578
    8. '("' → logprob: -13.626544952392578
    9. '(f' → logprob: -13.876544952392578
    10. 'Sum' → logprob: -13.876544952392578

Token 285: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -4.320199877838604e-07
    2. ' um' → logprob: -15.875
    3. 'u' → logprob: -16.0
    4. ')' → logprob: -16.625
    5. 'ум' → logprob: -17.0
    6. 'Sum' → logprob: -17.375
    7. 'sum' → logprob: -18.0
    8. '```' → logprob: -18.5
    9. 'un' → logprob: -18.625
    10. 'ump' → logprob: -19.5

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ' )' → logprob: -11.25001335144043
    3. '+' → logprob: -16.00001335144043
    4. ')#' → logprob: -16.00001335144043
    5. ')
' → logprob: -16.37501335144043
    6. ')`' → logprob: -16.75001335144043
    7. '#' → logprob: -16.87501335144043
    8. '))' → logprob: -17.50001335144043
    9. '+)' → logprob: -17.75001335144043
    10. '())' → logprob: -18.12501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 284
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 41.20%
Précision adaptée (1ère position): 44.01%
Précision (top 10): 79.93%
================================================================================
