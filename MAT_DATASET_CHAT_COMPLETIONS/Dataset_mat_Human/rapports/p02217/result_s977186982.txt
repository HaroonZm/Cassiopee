================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def LS():return [list(x) for x in sys.stdin.readline().split()]
def S():
    res = list(sys.stdin.readline())
    if res[-1] == "\n":
        return res[:-1]
    return res
def IR(n):
    return [I() for i in range(n)]
def LIR(n):
    return [LI() for i in range(n)]
def SR(n):
    return [S() for i in range(n)]
def LSR(n):
    return [LS() for i in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def solve():
    n = I()
    f = [0]*n
    v = [[] for i in range(n)]
    for i in range(n-1):
        a,b = LI()
        a -= 1
        b -= 1
        v[a].append(b)
        v[b].append(a)
        f[a] += 1
        f[b] += 1
    a = LI()
    b = LI()
    c = [b[i]-a[i] for i in range(n)]
    d = [0]*n
    d[0] = 1
    q = deque([0])
    while q:
        x = q.popleft()
        nd = d[x] + 1
        for y in v[x]:
            if not d[y]:
                d[y] = nd
                q.append(y)
    V = list(range(n))
    V.sort(key = lambda x:-d[x])
    s = [1]*n
    for x in V:
        for y in v[x]:
            if d[y] < d[x]:
                s[y] += s[x]
    V = list(range(n))
    V.sort(key = lambda x:s[x])
    ans = 0
    for x in V:
        m = 0
        for y in v[x]:
            if s[y] < s[x]:
                if m < c[y]:
                    m = c[y]
        ans += m
        c[x] += m*f[x]
        for y in v[x]:
            if s[y] < s[x]:
                if c[y] < m:
                    res = m-c[y]
                    ans += res*s[y]
                    c[x] -= res
            else:
                c[y] -= m
    print(ans)
    return

#Solve
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0009450533543713391
    2. '/env' → logprob: -7.625945091247559
    3. '/bin' → logprob: -8.125945091247559
    4. '/python' → logprob: -8.875945091247559
    5. '/bash' → logprob: -11.875945091247559
    6. '/usr' → logprob: -12.125945091247559
    7. '/b' → logprob: -13.000945091247559
    8. '#!/' → logprob: -13.500945091247559
    9. '/dev' → logprob: -13.875945091247559
    10. '```' → logprob: -14.250945091247559

Token 4: ' python' (ID: 22752)
  Prédit: ' python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' python' → logprob: -0.339009165763855
    2. 'python' → logprob: -1.339009165763855
    3. '/python' → logprob: -3.8390092849731445
    4. ' ' → logprob: -6.0890092849731445
    5. '/' → logprob: -7.3390092849731445
    6. '```' → logprob: -8.589009284973145
    7. 'b' → logprob: -8.714009284973145
    8. ' bash' → logprob: -9.089009284973145
    9. 'p' → logprob: -9.214009284973145
    10. ' Python' → logprob: -9.339009284973145

Token 5: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7999610304832458
    2. '+' → logprob: -1.2999610900878906
    3. '-' → logprob: -2.1749610900878906
    4. '>' → logprob: -2.9249610900878906
    5. '\' → logprob: -3.5499610900878906
    6. '```' → logprob: -3.6749610900878906
    7. '#!/' → logprob: -3.9249610900878906
    8. '!' → logprob: -4.924961090087891
    9. '﻿' → logprob: -5.174961090087891
    10. '_' → logprob: -5.424961090087891

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2528667449951172
    2. '```' → logprob: -2.627866744995117
    3. '\' → logprob: -3.127866744995117
    4. '\n' → logprob: -3.377866744995117
    5. '#!/' → logprob: -3.627866744995117
    6. '<|end|>' → logprob: -4.502866744995117
    7. '>' → logprob: -4.627866744995117
    8. '#!' → logprob: -5.377866744995117
    9. '-' → logprob: -5.377866744995117
    10. 'import' → logprob: -6.002866744995117

Token 7: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4706272780895233
    2. '#!/' → logprob: -1.9706273078918457
    3. '```' → logprob: -2.4706273078918457
    4. '>' → logprob: -3.2206273078918457
    5. '-' → logprob: -3.7206273078918457
    6. '\' → logprob: -3.9706273078918457
    7. '!' → logprob: -3.9706273078918457
    8. '#!' → logprob: -4.095627307891846
    9. '/' → logprob: -4.845627307891846
    10. '/bin' → logprob: -5.470627307891846

Token 8: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1735077053308487
    2. ' os' → logprob: -1.9235076904296875
    3. ' import' → logprob: -5.1735076904296875
    4. ' sys' → logprob: -6.0485076904296875
    5. ' python' → logprob: -6.0485076904296875
    6. ' collections' → logprob: -7.2985076904296875
    7. ' math' → logprob: -7.4235076904296875
    8. ' space' → logprob: -7.9235076904296875
    9. ' functools' → logprob: -8.548507690429688
    10. ' subprocess' → logprob: -9.173507690429688

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.32128041982650757
    2. 'import' → logprob: -1.3212804794311523
    3. '.' → logprob: -4.946280479431152
    4. '.Counter' → logprob: -8.071280479431152
    5. '```' → logprob: -8.571280479431152
    6. '.import' → logprob: -8.946280479431152
    7. '_import' → logprob: -9.821280479431152
    8. '_' → logprob: -9.821280479431152
    9. '<|end|>' → logprob: -10.446280479431152
    10. ' defaultdict' → logprob: -10.696280479431152

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.017140576615929604
    2. ' deque' → logprob: -4.3921403884887695
    3. ' Counter' → logprob: -5.8921403884887695
    4. 'deque' → logprob: -7.6421403884887695
    5. ' abc' → logprob: -8.26714038848877
    6. ' collections' → logprob: -8.26714038848877
    7. 'default' → logprob: -8.39214038848877
    8. ' ' → logprob: -8.51714038848877
    9. ' counter' → logprob: -8.64214038848877
    10. ' default' → logprob: -8.89214038848877

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34070733189582825
    2. '
' → logprob: -2.715707302093506
    3. '' → logprob: -2.715707302093506
    4. ' 
' → logprob: -3.340707302093506
    5. ' 

' → logprob: -3.465707302093506
    6. '

' → logprob: -3.590707302093506
    7. '```' → logprob: -4.215707302093506
    8. '<|end|>' → logprob: -4.215707302093506
    9. '\' → logprob: -4.965707302093506
    10. '  
' → logprob: -5.840707302093506

Token 12: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7488632202148438
    2. ' Counter' → logprob: -1.3738632202148438
    3. 'deque' → logprob: -1.4988632202148438
    4. 'Counter' → logprob: -3.4988632202148438
    5. ' Ordered' → logprob: -4.123863220214844
    6. 'Ordered' → logprob: -6.123863220214844
    7. 'named' → logprob: -6.998863220214844
    8. ' named' → logprob: -6.998863220214844
    9. ' abc' → logprob: -9.873863220214844
    10. ' counter' → logprob: -10.873863220214844

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14387968182563782
    2. '

' → logprob: -2.1438796520233154
    3. '
' → logprob: -4.8938798904418945
    4. '' → logprob: -6.2688798904418945
    5. ' 

' → logprob: -6.5188798904418945
    6. '```' → logprob: -6.7688798904418945
    7. '


' → logprob: -7.1438798904418945
    8. '\n' → logprob: -7.1438798904418945
    9. '<|end|>' → logprob: -7.1438798904418945
    10. 'import' → logprob: -7.6438798904418945

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3571772873401642
    2. '
' → logprob: -1.6071772575378418
    3. ' 

' → logprob: -3.232177257537842
    4. '```' → logprob: -3.232177257537842
    5. '<|end|>' → logprob: -4.607177257537842
    6. 'import' → logprob: -5.482177257537842
    7. '
' → logprob: -6.607177257537842
    8. '\n' → logprob: -7.107177257537842
    9. '  

' → logprob: -7.232177257537842
    10. '

' → logprob: -7.482177257537842

Token 15: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09864561259746552
    2. ' typing' → logprob: -3.5986456871032715
    3. ' ' → logprob: -3.7236456871032715
    4. ' sys' → logprob: -3.8486456871032715
    5. ' collections' → logprob: -5.3486456871032715
    6. ' heap' → logprob: -5.3486456871032715
    7. ' math' → logprob: -5.4736456871032715
    8. ' os' → logprob: -5.8486456871032715
    9. ' functools' → logprob: -6.9736456871032715
    10. ' datetime' → logprob: -7.0986456871032715

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -16.75
    3. 'import' → logprob: -16.875
    4. ' queue' → logprob: -18.375
    5. 's' → logprob: -18.75
    6. ' q' → logprob: -18.75
    7. 'dict' → logprob: -19.0
    8. '.' → logprob: -19.125
    9. ' ' → logprob: -19.375
    10. 'a' → logprob: -19.5

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0017641937592998147
    2. 'import' → logprob: -6.376764297485352
    3. ' ' → logprob: -9.751764297485352
    4. '	import' → logprob: -13.501764297485352
    5. '_import' → logprob: -14.251764297485352
    6. '<|end|>' → logprob: -14.376764297485352
    7. ' imports' → logprob: -14.501764297485352
    8. ' importar' → logprob: -16.00176429748535
    9. ' Import' → logprob: -16.50176429748535
    10. ' impor' → logprob: -16.50176429748535

Token 18: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.013486186042428017
    2. 'he' → logprob: -4.513486385345459
    3. ' heap' → logprob: -6.388486385345459
    4. ' ' → logprob: -8.0134859085083
    5. 'heap' → logprob: -8.5134859085083
    6. ' n' → logprob: -9.0134859085083
    7. 'n' → logprob: -11.0134859085083
    8. '.he' → logprob: -11.1384859085083
    9. ' merge' → logprob: -11.2634859085083
    10. '```' → logprob: -11.2634859085083

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008627813309431076
    2. 'ap' → logprob: -4.758627891540527
    3. 'a' → logprob: -11.258627891540527
    4. 'aq' → logprob: -15.633627891540527
    5. 'ап' → logprob: -16.13362693786621
    6. 'apl' → logprob: -17.63362693786621
    7. 'aps' → logprob: -17.88362693786621
    8. 'appen' → logprob: -17.88362693786621
    9. '```' → logprob: -18.38362693786621
    10. '[' → logprob: -18.75862693786621

Token 20: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0013260759878903627
    2. 'op' → logprob: -6.626326084136963
    3. 'ut' → logprob: -17.001325607299805
    4. 'us' → logprob: -17.126325607299805
    5. '```' → logprob: -17.376325607299805
    6. 'u' → logprob: -17.751325607299805
    7. 'push' → logprob: -18.001325607299805
    8. 'p' → logprob: -19.376325607299805
    9. 'USH' → logprob: -19.376325607299805
    10. 'osh' → logprob: -19.501325607299805

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.053609155118465424
    2. '<|end|>' → logprob: -3.4286091327667236
    3. ',' → logprob: -4.178609371185303
    4. ' ,' → logprob: -6.553609371185303
    5. 'he' → logprob: -7.053609371185303
    6. ' he' → logprob: -7.178609371185303
    7. '  ' → logprob: -8.428608894348145
    8. ' 
' → logprob: -8.428608894348145
    9. 'import' → logprob: -8.678608894348145
    10. '  
' → logprob: -8.678608894348145

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.38692405819892883
    2. ' he' → logprob: -1.1369240283966064
    3. 'heap' → logprob: -10.761923789978027
    4. ' ' → logprob: -11.636923789978027
    5. '.he' → logprob: -12.011923789978027
    6. ' heap' → logprob: -12.761923789978027
    7. '_he' → logprob: -13.386923789978027
    8. 'hev' → logprob: -13.449423789978027
    9. '```' → logprob: -13.574423789978027
    10. 'h' → logprob: -13.636923789978027

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0017038638470694423
    2. 'ap' → logprob: -6.37670373916626
    3. 'a' → logprob: -14.251704216003418
    4. ' app' → logprob: -15.126704216003418
    5. 'ап' → logprob: -15.751704216003418
    6. '	app' → logprob: -16.2517032623291
    7. '_app' → logprob: -16.2517032623291
    8. 'appt' → logprob: -16.2517032623291
    9. 'appen' → logprob: -16.5017032623291
    10. '(app' → logprob: -17.0017032623291

Token 24: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06199188902974129
    2. 'ush' → logprob: -2.8119919300079346
    3. 'o' → logprob: -10.936991691589355
    4. 'opp' → logprob: -12.436991691589355
    5. 'p' → logprob: -14.561991691589355
    6. 'opleft' → logprob: -14.686991691589355
    7. '   ' → logprob: -15.311991691589355
    8. '```' → logprob: -15.686991691589355
    9. 'us' → logprob: -15.936991691589355
    10. '

' → logprob: -15.936991691589355

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4394325911998749
    2. '

' → logprob: -1.0644326210021973
    3. '
' → logprob: -5.939432621002197
    4. '' → logprob: -6.439432621002197
    5. '```' → logprob: -6.439432621002197
    6. ' 

' → logprob: -6.689432621002197
    7. '\n' → logprob: -6.814432621002197
    8. '<|end|>' → logprob: -7.814432621002197
    9. 'def' → logprob: -7.939432621002197
    10. '


' → logprob: -8.064432144165039

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5382720232009888
    2. '

' → logprob: -0.9132720232009888
    3. '' → logprob: -5.163271903991699
    4. 'import' → logprob: -6.038271903991699
    5. 'def' → logprob: -6.413271903991699
    6. ' 

' → logprob: -7.038271903991699
    7. '


' → logprob: -7.163271903991699
    8. '```' → logprob: -7.163271903991699
    9. 'd' → logprob: -7.413271903991699
    10. '
' → logprob: -7.663271903991699

Token 27: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1752612292766571
    2. ' typing' → logprob: -2.0502612590789795
    3. ' math' → logprob: -3.8002612590789795
    4. ' sys' → logprob: -5.0502610206604
    5. ' queue' → logprob: -7.1752610206604
    6. 'typing' → logprob: -7.4252610206604
    7. ' functools' → logprob: -7.4252610206604
    8. ' collections' → logprob: -7.5502610206604
    9. ' datetime' → logprob: -8.550261497497559
    10. 'math' → logprob: -8.675261497497559

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07439612597227097
    2. 'import' → logprob: -2.6993961334228516
    3. '.' → logprob: -5.699396133422852
    4. ' .' → logprob: -7.449396133422852
    5. '.import' → logprob: -8.449396133422852
    6. '	import' → logprob: -9.199396133422852
    7. ' itertools' → logprob: -9.949396133422852
    8. ' ' → logprob: -10.574396133422852
    9. '.im' → logprob: -10.824396133422852
    10. 'ertools' → logprob: -10.949396133422852

Token 29: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.667100191116333
    2. ' count' → logprob: -1.667100191116333
    3. ' combinations' → logprob: -2.417100191116333
    4. ' group' → logprob: -2.542100191116333
    5. 'count' → logprob: -2.917100191116333
    6. ' accumulate' → logprob: -3.417100191116333
    7. 'com' → logprob: -4.542099952697754
    8. ' chain' → logprob: -4.542099952697754
    9. ' cycle' → logprob: -5.292099952697754
    10. ' product' → logprob: -5.292099952697754

Token 30: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6248627305030823
    2. '

' → logprob: -0.8748627305030823
    3. 'import' → logprob: -4.6248626708984375
    4. ' 

' → logprob: -4.9998626708984375
    5. '\n' → logprob: -5.2498626708984375
    6. '' → logprob: -5.4998626708984375
    7. '<|end|>' → logprob: -5.4998626708984375
    8. 'def' → logprob: -5.6248626708984375
    9. 'n' → logprob: -5.7498626708984375
    10. '```' → logprob: -5.8748626708984375

Token 31: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8386747241020203
    2. 'com' → logprob: -0.9636747241020203
    3. ' product' → logprob: -1.963674783706665
    4. ' combinations' → logprob: -3.213674783706665
    5. 'chain' → logprob: -6.213674545288086
    6. 'group' → logprob: -6.838674545288086
    7. 'count' → logprob: -7.213674545288086
    8. ' group' → logprob: -7.588674545288086
    9. ' chain' → logprob: -7.838674545288086
    10. 'cycle' → logprob: -8.088674545288086

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25075846910476685
    2. '

' → logprob: -2.000758409500122
    3. 'import' → logprob: -3.250758409500122
    4. '#' → logprob: -4.500758647918701
    5. '' → logprob: -4.875758647918701
    6. ' 

' → logprob: -5.250758647918701
    7. ' 
' → logprob: -5.375758647918701
    8. '<|end|>' → logprob: -5.500758647918701
    9. '```' → logprob: -6.125758647918701
    10. 'd' → logprob: -6.250758647918701

Token 33: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7957350611686707
    2. '

' → logprob: -1.0457351207733154
    3. 'import' → logprob: -1.7957351207733154
    4. '<|end|>' → logprob: -4.420734882354736
    5. '\n' → logprob: -5.545734882354736
    6. '#' → logprob: -6.045734882354736
    7. '' → logprob: -6.170734882354736
    8. ' 

' → logprob: -6.295734882354736
    9. ',' → logprob: -7.045734882354736
    10. '


' → logprob: -7.170734882354736

Token 34: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7303824424743652
    2. ' math' → logprob: -0.8553824424743652
    3. ' ' → logprob: -3.3553824424743652
    4. ' os' → logprob: -3.6053824424743652
    5. ' itertools' → logprob: -3.6053824424743652
    6. ' collections' → logprob: -6.230382442474365
    7. ' functools' → logprob: -7.105382442474365
    8. ' ' → logprob: -7.980382442474365
    9. ' space' → logprob: -8.355382919311523
    10. ' json' → logprob: -9.105382919311523

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06201384216547012
    2. '

' → logprob: -2.937013864517212
    3. '' → logprob: -5.937013626098633
    4. '\n' → logprob: -7.062013626098633
    5. '
' → logprob: -7.062013626098633
    6. '#' → logprob: -7.687013626098633
    7. '<|end|>' → logprob: -7.687013626098633
    8. ' 
' → logprob: -8.062013626098633
    9. 'import' → logprob: -8.062013626098633
    10. 'def' → logprob: -8.687013626098633

Token 37: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0020192861557006836
    2. ' math' → logprob: -6.75201940536499
    3. ' o' → logprob: -7.37701940536499
    4. ' collections' → logprob: -9.877018928527832
    5. ' itertools' → logprob: -9.877018928527832
    6. ' ' → logprob: -10.127018928527832
    7. 'o' → logprob: -10.377018928527832
    8. 'os' → logprob: -11.377018928527832
    9. '	os' → logprob: -11.877018928527832
    10. ' io' → logprob: -12.002018928527832

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2762014865875244
    2. '

' → logprob: -1.6512014865875244
    3. '' → logprob: -4.026201248168945
    4. '<|end|>' → logprob: -4.276201248168945
    5. '\n' → logprob: -5.401201248168945
    6. '#' → logprob: -5.526201248168945
    7. '
' → logprob: -6.026201248168945
    8. 'n' → logprob: -6.151201248168945
    9. '```' → logprob: -7.276201248168945
    10. '\' → logprob: -7.276201248168945

Token 39: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5352134704589844
    2. '
' → logprob: -0.9102134704589844
    3. '<|end|>' → logprob: -5.285213470458984
    4. '
' → logprob: -6.785213470458984
    5. '\n' → logprob: -6.910213470458984
    6. 'import' → logprob: -6.910213470458984
    7. '' → logprob: -7.160213470458984
    8. ' 

' → logprob: -7.410213470458984
    9. '```' → logprob: -7.660213470458984
    10. 'def' → logprob: -7.660213470458984

Token 40: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.024964414536952972
    2. ' bis' → logprob: -4.774964332580566
    3. ' itertools' → logprob: -5.649964332580566
    4. ' collections' → logprob: -5.899964332580566
    5. ' functools' → logprob: -6.024964332580566
    6. ' random' → logprob: -6.024964332580566
    7. ' operator' → logprob: -6.274964332580566
    8. 'os' → logprob: -6.524964332580566
    9. ' heap' → logprob: -7.024964332580566
    10. ' o' → logprob: -8.399964332580566

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.2994620242971e-06
    2. 'e' → logprob: -11.875008583068848
    3. 'ec' → logprob: -14.500008583068848
    4. 't' → logprob: -15.000008583068848
    5. 'ected' → logprob: -15.750008583068848
    6. 'ectl' → logprob: -16.62500762939453
    7. 'ector' → logprob: -16.62500762939453
    8. 'ection' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. 'ects' → logprob: -17.62500762939453

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3986160159111023
    2. '
' → logprob: -1.148616075515747
    3. '' → logprob: -5.398615837097168
    4. '#' → logprob: -6.148615837097168
    5. '
' → logprob: -6.773615837097168
    6. '\n' → logprob: -6.898615837097168
    7. '


' → logprob: -7.148615837097168
    8. '<|end|>' → logprob: -7.398615837097168
    9. ' 

' → logprob: -7.523615837097168
    10. '```' → logprob: -9.023615837097168

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2076091468334198
    2. '

' → logprob: -1.8326091766357422
    3. '' → logprob: -5.082609176635742
    4. '\n' → logprob: -5.082609176635742
    5. '<|end|>' → logprob: -5.582609176635742
    6. '
' → logprob: -6.082609176635742
    7. '#' → logprob: -6.207609176635742
    8. ' 

' → logprob: -6.332609176635742
    9. 'import' → logprob: -6.832609176635742
    10. ' 
' → logprob: -7.207609176635742

Token 44: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00104150187689811
    2. '_' → logprob: -7.001041412353516
    3. ' space' → logprob: -10.001041412353516
    4. ' ​' → logprob: -10.876041412353516
    5. ' ‌' → logprob: -11.126041412353516
    6. ' ' → logprob: -11.501041412353516
    7. ' main' → logprob: -12.001041412353516
    8. '_space' → logprob: -12.001041412353516
    9. ' _' → logprob: -12.376041412353516
    10. ' a' → logprob: -13.001041412353516

Token 45: '():' (ID: 9442)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.43849074840545654
    2. 'st' → logprob: -1.5634907484054565
    3. 'N' → logprob: -2.188490867614746
    4. '():' → logprob: -3.938490867614746
    5. 'St' → logprob: -5.563490867614746
    6. 'T' → logprob: -6.313490867614746
    7. 'S' → logprob: -6.438490867614746
    8. 'n' → logprob: -6.563490867614746
    9. 'NT' → logprob: -6.688490867614746
    10. '()' → logprob: -7.313490867614746

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3890988230705261
    2. ' ' → logprob: -1.514098882675171
    3. ' []' → logprob: -2.514098882675171
    4. ' list' → logprob: -4.639098644256592
    5. ' map' → logprob: -5.389098644256592
    6. ' input' → logprob: -6.139098644256592
    7. 'return' → logprob: -6.639098644256592
    8. ' int' → logprob: -7.264098644256592
    9. '[]' → logprob: -7.264098644256592
    10. ' n' → logprob: -7.389098644256592

Token 47: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25468751788139343
    2. ' list' → logprob: -1.5046875476837158
    3. 'map' → logprob: -6.129687309265137
    4. ' map' → logprob: -7.879687309265137
    5. 'ist' → logprob: -9.504687309265137
    6. 'int' → logprob: -10.379687309265137
    7. '[' → logprob: -10.754687309265137
    8. '[list' → logprob: -11.254687309265137
    9. 'lis' → logprob: -11.379687309265137
    10. 'li' → logprob: -11.379687309265137

Token 48: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000517886015586555
    2. 'i' → logprob: -7.625517845153809
    3. 'in' → logprob: -10.625517845153809
    4. ' int' → logprob: -12.625517845153809
    5. '0' → logprob: -13.875517845153809
    6. ']int' → logprob: -14.500517845153809
    7. '*' → logprob: -15.000517845153809
    8. '(int' → logprob: -15.750517845153809
    9. 'I' → logprob: -16.625518798828125
    10. ' ' → logprob: -16.875518798828125

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10231079161167145
    2. '(' → logprob: -2.3523108959198
    3. '(i' → logprob: -6.352310657501221
    4. '(s' → logprob: -8.727311134338379
    5. '(input' → logprob: -9.102311134338379
    6. '()]' → logprob: -10.602311134338379
    7. ']' → logprob: -11.227311134338379
    8. '(
' → logprob: -11.477311134338379
    9. '(a' → logprob: -11.852311134338379
    10. '(sys' → logprob: -12.227311134338379

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007616263465024531
    2. 'for' → logprob: -7.37576150894165
    3. ' for' → logprob: -10.250761985778809
    4. '(' → logprob: -10.250761985778809
    5. '(x' → logprob: -10.625761985778809
    6. ' )' → logprob: -11.125761985778809
    7. ')]' → logprob: -11.500761985778809
    8. '())' → logprob: -12.875761985778809
    9. ']' → logprob: -13.125761985778809
    10. '()' → logprob: -13.250761985778809

Token 51: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10818609595298767
    2. ' for' → logprob: -3.3581860065460205
    3. 'for' → logprob: -3.3581860065460205
    4. '(x' → logprob: -3.4831860065460205
    5. '(s' → logprob: -7.8581862449646
    6. ']' → logprob: -7.9831862449646
    7. '(i' → logprob: -8.108185768127441
    8. '(sys' → logprob: -8.233185768127441
    9. '(line' → logprob: -8.858185768127441
    10. '()]' → logprob: -8.983185768127441

Token 52: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.025785893201828003
    2. 'input' → logprob: -3.9007859230041504
    3. ' sys' → logprob: -5.40078592300415
    4. ' x' → logprob: -8.025785446166992
    5. ' ' → logprob: -8.400785446166992
    6. ' raw' → logprob: -10.400785446166992
    7. 'sys' → logprob: -10.650785446166992
    8. ' in' → logprob: -10.775785446166992
    9. '<|end|>' → logprob: -11.275785446166992
    10. 'x' → logprob: -11.525785446166992

Token 53: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9000592827796936
    2. ' in' → logprob: -1.0250592231750488
    3. '(' → logprob: -2.650059223175049
    4. '(input' → logprob: -2.775059223175049
    5. ' input' → logprob: -3.275059223175049
    6. '=input' → logprob: -3.275059223175049
    7. '=sys' → logprob: -4.775059223175049
    8. '.' → logprob: -5.400059223175049
    9. 'in' → logprob: -5.650059223175049
    10. ' .' → logprob: -6.150059223175049

Token 54: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7877081632614136
    2. 'sys' → logprob: -1.2877081632614136
    3. ' sys' → logprob: -1.5377081632614136
    4. ' input' → logprob: -2.912708282470703
    5. '=sys' → logprob: -12.912708282470703
    6. '(sys' → logprob: -13.037708282470703
    7. 'in' → logprob: -13.662708282470703
    8. 's' → logprob: -13.662708282470703
    9. ' ' → logprob: -13.787708282470703
    10. '	sys' → logprob: -14.287708282470703

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006809803890064359
    2. '.' → logprob: -7.500680923461914
    3. '.st' → logprob: -9.250680923461914
    4. '.argv' → logprob: -11.000680923461914
    5. '.std' → logprob: -11.750680923461914
    6. '.stdout' → logprob: -12.125680923461914
    7. '.s' → logprob: -14.125680923461914
    8. '.readline' → logprob: -14.500680923461914
    9. '.input' → logprob: -15.500680923461914
    10. 'stdin' → logprob: -15.625680923461914

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009510025265626609
    2. '.' → logprob: -7.125950813293457
    3. '.read' → logprob: -8.875950813293457
    4. '.readlines' → logprob: -12.750950813293457
    5. '.re' → logprob: -13.000950813293457
    6. '.r' → logprob: -14.750950813293457
    7. '.stdin' → logprob: -15.000950813293457
    8. '].' → logprob: -15.250950813293457
    9. ' .' → logprob: -15.250950813293457
    10. '().' → logprob: -15.750950813293457

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3238719403743744
    2. '()]' → logprob: -1.3238719701766968
    3. '()' → logprob: -4.573872089385986
    4. '()].' → logprob: -8.448871612548828
    5. '()][' → logprob: -12.073871612548828
    6. '())' → logprob: -12.573871612548828
    7. '()[' → logprob: -12.698871612548828
    8. ' ()' → logprob: -13.323871612548828
    9. ']()' → logprob: -13.573871612548828
    10. '()-' → logprob: -13.573871612548828

Token 58: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.012207402847707272
    2. 'rstrip' → logprob: -4.512207508087158
    3. 'split' → logprob: -6.762207508087158
    4. 'read' → logprob: -13.63720703125
    5. ' strip' → logprob: -14.13720703125
    6. 'decode' → logprob: -15.01220703125
    7. '(strip' → logprob: -19.13720703125
    8. 'rs' → logprob: -19.51220703125
    9. ' split' → logprob: -19.76220703125
    10. 'rst' → logprob: -20.01220703125

Token 59: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -8.292095299111679e-05
    2. '()' → logprob: -9.875082969665527
    3. '(' → logprob: -10.500082969665527
    4. ']' → logprob: -12.875082969665527
    5. '()]
' → logprob: -14.250082969665527
    6. ']()' → logprob: -15.500082969665527
    7. '('' → logprob: -15.750082969665527
    8. '())' → logprob: -15.875082969665527
    9. '()][' → logprob: -16.37508201599121
    10. '()].' → logprob: -17.25008201599121

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09190439432859421
    2. '
' → logprob: -2.466904401779175
    3. '#' → logprob: -7.341904163360596
    4. 'd' → logprob: -7.716904163360596
    5. '' → logprob: -7.841904163360596
    6. '\' → logprob: -8.091904640197754
    7. '

' → logprob: -8.091904640197754
    8. '\n' → logprob: -8.341904640197754
    9. ' 
' → logprob: -8.966904640197754
    10. '
' → logprob: -9.341904640197754

Token 61: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.11542326211929321
    2. 'II' → logprob: -2.6154232025146484
    3. ' I' → logprob: -3.8654232025146484
    4. ' II' → logprob: -4.990423202514648
    5. 'S' → logprob: -6.365423202514648
    6. 'int' → logprob: -6.490423202514648
    7. 'LS' → logprob: -7.490423202514648
    8. 'input' → logprob: -7.490423202514648
    9. 'IS' → logprob: -7.615423202514648
    10. 'IN' → logprob: -7.740423202514648

Token 62: '():' (ID: 9442)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.765872061252594
    2. 'n' → logprob: -1.0158720016479492
    3. '():' → logprob: -2.515872001647949
    4. '()' → logprob: -2.765872001647949
    5. 'N' → logprob: -3.765872001647949
    6. 'nit' → logprob: -5.265872001647949
    7. 'NT' → logprob: -8.39087200164795
    8. 'np' → logprob: -8.39087200164795
    9. '(' → logprob: -9.89087200164795
    10. ' nt' → logprob: -10.26587200164795

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.722342848777771
    2. ' int' → logprob: -0.722342848777771
    3. 'int' → logprob: -3.5973429679870605
    4. 'return' → logprob: -6.8473429679870605
    5. ' ' → logprob: -8.097342491149902
    6. '=int' → logprob: -12.222342491149902
    7. ' ' → logprob: -12.972342491149902
    8. ' retur' → logprob: -13.722342491149902
    9. ' 
' → logprob: -14.847342491149902
    10. ' i' → logprob: -15.347342491149902

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519386410713196
    2. ' int' → logprob: -1.5019385814666748
    3. 'nt' → logprob: -12.126938819885254
    4. ' ' → logprob: -13.751938819885254
    5. ' nt' → logprob: -13.751938819885254
    6. 'in' → logprob: -13.751938819885254
    7. ' in' → logprob: -15.126938819885254
    8. '  ' → logprob: -15.376938819885254
    9. '(int' → logprob: -15.876938819885254
    10. ' i' → logprob: -16.251937866210938

Token 65: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10084682703018188
    2. '(sys' → logprob: -2.350846767425537
    3. '(input' → logprob: -7.475846767425537
    4. '(int' → logprob: -10.475847244262695
    5. '(
' → logprob: -11.725847244262695
    6. '(system' → logprob: -12.100847244262695
    7. '(s' → logprob: -12.100847244262695
    8. '(x' → logprob: -12.100847244262695
    9. ' (' → logprob: -12.350847244262695
    10. '(System' → logprob: -12.600847244262695

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.038352664560079575
    2. '.' → logprob: -3.2883527278900146
    3. '.readline' → logprob: -8.413352966308594
    4. 'stdin' → logprob: -9.913352966308594
    5. '.stdout' → logprob: -11.163352966308594
    6. '.argv' → logprob: -11.538352966308594
    7. '.std' → logprob: -11.788352966308594
    8. '.read' → logprob: -12.788352966308594
    9. '(stdin' → logprob: -13.788352966308594
    10. '.)' → logprob: -13.788352966308594

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.010888759046792984
    2. '().' → logprob: -4.760888576507568
    3. '.stdin' → logprob: -7.260888576507568
    4. '()' → logprob: -7.260888576507568
    5. '.' → logprob: -8.385889053344727
    6. '(stdin' → logprob: -8.635889053344727
    7. 'read' → logprob: -8.885889053344727
    8. ')' → logprob: -9.135889053344727
    9. '())' → logprob: -9.260889053344727
    10. 'stdin' → logprob: -9.385889053344727

Token 68: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.49058711528778076
    2. '().' → logprob: -0.9905871152877808
    3. '()' → logprob: -4.11558723449707
    4. '()]' → logprob: -10.99058723449707
    5. ')' → logprob: -11.24058723449707
    6. ' ())' → logprob: -11.74058723449707
    7. '.readline' → logprob: -12.11558723449707
    8. '();)' → logprob: -12.11558723449707
    9. '()[' → logprob: -13.24058723449707
    10. '()))' → logprob: -13.36558723449707

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4935646653175354
    2. 'd' → logprob: -1.1185646057128906
    3. '
' → logprob: -3.6185646057128906
    4. '\' → logprob: -3.6185646057128906
    5. '\n' → logprob: -5.493564605712891
    6. 'n' → logprob: -6.743564605712891
    7. '#' → logprob: -6.868564605712891
    8. '' → logprob: -6.868564605712891
    9. ' 
' → logprob: -7.743564605712891
    10. 'de' → logprob: -7.868564605712891

Token 70: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009060868062078953
    2. 'LS' → logprob: -4.884060859680176
    3. 'L' → logprob: -7.009060859680176
    4. ' S' → logprob: -8.134060859680176
    5. 's' → logprob: -9.259060859680176
    6. 'LI' → logprob: -10.259060859680176
    7. 'SS' → logprob: -10.384060859680176
    8. 'SL' → logprob: -10.384060859680176
    9. 'SI' → logprob: -10.634060859680176
    10. ' LS' → logprob: -11.509060859680176

Token 71: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18023084104061127
    2. '()' → logprob: -1.8052308559417725
    3. '().' → logprob: -8.430231094360352
    4. ' ()' → logprob: -8.555231094360352
    5. ' ():' → logprob: -10.555231094360352
    6. '()]' → logprob: -11.430231094360352
    7. '()>' → logprob: -11.680231094360352
    8. '()[' → logprob: -11.680231094360352
    9. '[]' → logprob: -12.430231094360352
    10. '():
' → logprob: -13.055231094360352

Token 72: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1142214760184288
    2. 'return' → logprob: -2.2392215728759766
    3. ' sys' → logprob: -7.239221572875977
    4. ' ' → logprob: -8.614221572875977
    5. 'def' → logprob: -9.239221572875977
    6. '()' → logprob: -9.364221572875977
    7. 'sys' → logprob: -9.489221572875977
    8. ' def' → logprob: -10.364221572875977
    9. ')' → logprob: -10.364221572875977
    10. ' lambda' → logprob: -10.489221572875977

Token 73: ' [' (ID: 723)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1998271495103836
    2. ' [' → logprob: -2.449827194213867
    3. '[' → logprob: -2.949827194213867
    4. 'sys' → logprob: -3.324827194213867
    5. ' list' → logprob: -5.324827194213867
    6. 'list' → logprob: -7.449827194213867
    7. '[s' → logprob: -7.824827194213867
    8. '[list' → logprob: -8.449827194213867
    9. '(sys' → logprob: -8.949827194213867
    10. '=sys' → logprob: -9.324827194213867

Token 74: 'list' (ID: 2641)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.65101717156358e-05
    2. 's' → logprob: -9.500096321105957
    3. 'sys' → logprob: -10.875096321105957
    4. ' x' → logprob: -12.875096321105957
    5. 'str' → logprob: -15.875096321105957
    6. 'input' → logprob: -17.500097274780273
    7. '(x' → logprob: -18.250097274780273
    8. 'l' → logprob: -18.625097274780273
    9. 'w' → logprob: -18.625097274780273
    10. ' sys' → logprob: -19.250097274780273

Token 75: '(x' (ID: 4061)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.34219956398010254
    2. '(x' → logprob: -1.3421995639801025
    3. '(map' → logprob: -4.342199325561523
    4. '(' → logprob: -4.467199325561523
    5. '(str' → logprob: -6.092199325561523
    6. '(input' → logprob: -7.092199325561523
    7. '(s' → logprob: -7.217199325561523
    8. 'sys' → logprob: -9.592199325561523
    9. '(system' → logprob: -9.842199325561523
    10. '(line' → logprob: -10.717199325561523

Token 76: ')' (ID: 8)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00022368213103618473
    2. '(' → logprob: -9.625224113464355
    3. '()' → logprob: -9.750224113464355
    4. '=sys' → logprob: -10.375224113464355
    5. '(s' → logprob: -10.625224113464355
    6. 'sys' → logprob: -11.500224113464355
    7. '(input' → logprob: -11.625224113464355
    8. '())' → logprob: -11.750224113464355
    9. '(system' → logprob: -12.250224113464355
    10. '()]' → logprob: -12.875224113464355

Token 77: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00014203863975126296
    2. '(' → logprob: -9.625142097473145
    3. 'sys' → logprob: -10.000142097473145
    4. '(s' → logprob: -11.000142097473145
    5. '=sys' → logprob: -11.625142097473145
    6. '()' → logprob: -13.750142097473145
    7. '(system' → logprob: -14.000142097473145
    8. ' (' → logprob: -14.375142097473145
    9. '(input' → logprob: -14.500142097473145
    10. '(str' → logprob: -15.125142097473145

Token 78: ' x' (ID: 1215)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03338678553700447
    2. ' sys' → logprob: -3.783386707305908
    3. '(' → logprob: -5.033386707305908
    4. ' (' → logprob: -5.783386707305908
    5. 'sys' → logprob: -8.283387184143066
    6. '(s' → logprob: -8.658387184143066
    7. '=sys' → logprob: -10.408387184143066
    8. '(x' → logprob: -11.158387184143066
    9. '	sys' → logprob: -11.658387184143066
    10. '(system' → logprob: -11.783387184143066

Token 79: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9391330480575562
    2. ' ()' → logprob: -1.1891330480575562
    3. '(sys' → logprob: -1.6891330480575562
    4. '(' → logprob: -2.9391331672668457
    5. ' sys' → logprob: -3.6891331672668457
    6. ' (' → logprob: -3.9391331672668457
    7. ' in' → logprob: -3.9391331672668457
    8. '=sys' → logprob: -6.439133167266846
    9. 'in' → logprob: -8.439132690429688
    10. 'sys' → logprob: -8.439132690429688

Token 80: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3133023977279663
    2. ' sys' → logprob: -1.3133023977279663
    3. '(sys' → logprob: -10.438302040100098
    4. '	sys' → logprob: -12.813302040100098
    5. 'input' → logprob: -13.063302040100098
    6. '=sys' → logprob: -13.188302040100098
    7. 'str' → logprob: -13.313302040100098
    8. ' ' → logprob: -13.813302040100098
    9. ' input' → logprob: -14.188302040100098
    10. 'map' → logprob: -14.438302040100098

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.030413653701543808
    2. '.' → logprob: -4.030413627624512
    3. '.readline' → logprob: -5.030413627624512
    4. '().' → logprob: -5.530413627624512
    5. 'stdin' → logprob: -7.405413627624512
    6. '(stdin' → logprob: -7.405413627624512
    7. '.stdout' → logprob: -8.905413627624512
    8. '()' → logprob: -9.030413627624512
    9. ' .' → logprob: -9.405413627624512
    10. '.std' → logprob: -10.780413627624512

Token 82: '.readline' (ID: 74673)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.36600443720817566
    2. '().' → logprob: -1.616004467010498
    3. '()' → logprob: -2.866004467010498
    4. '.readline' → logprob: -2.991004467010498
    5. '())' → logprob: -8.99100399017334
    6. '.' → logprob: -9.11600399017334
    7. '()][' → logprob: -9.24100399017334
    8. ' ()' → logprob: -9.61600399017334
    9. '()]
' → logprob: -9.74100399017334
    10. '()].' → logprob: -10.24100399017334

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012141639599576592
    2. '()' → logprob: -6.751214027404785
    3. '()]' → logprob: -10.126214027404785
    4. '()].' → logprob: -13.251214027404785
    5. ' ().' → logprob: -14.001214027404785
    6. '())' → logprob: -14.126214027404785
    7. '().'' → logprob: -15.501214027404785
    8. '()[' → logprob: -15.751214027404785
    9. '()][' → logprob: -16.5012149810791
    10. '().__' → logprob: -16.6262149810791

Token 84: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06601086258888245
    2. 'rstrip' → logprob: -3.3160109519958496
    3. 'split' → logprob: -4.06601095199585
    4. 'read' → logprob: -4.56601095199585
    5. 'decode' → logprob: -10.441010475158691
    6. ' strip' → logprob: -12.191010475158691
    7. 'str' → logprob: -13.066010475158691
    8. ' split' → logprob: -16.566011428833008
    9. 'rs' → logprob: -16.816011428833008
    10. '-strip' → logprob: -17.191011428833008

Token 85: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00012047011114191264
    2. '()' → logprob: -9.250120162963867
    3. ']' → logprob: -11.250120162963867
    4. '(' → logprob: -11.625120162963867
    5. ']()' → logprob: -13.250120162963867
    6. '()]
' → logprob: -15.250120162963867
    7. ')]' → logprob: -16.000120162963867
    8. '()][' → logprob: -16.000120162963867
    9. '())' → logprob: -16.625120162963867
    10. ' ()' → logprob: -16.875120162963867

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00823511928319931
    2. '()' → logprob: -5.383234977722168
    3. 'd' → logprob: -7.008234977722168
    4. '\' → logprob: -7.133234977722168
    5. '()
' → logprob: -7.758234977722168
    6. '
' → logprob: -8.133234977722168
    7. '#' → logprob: -8.258234977722168
    8. '(' → logprob: -8.758234977722168
    9. '```' → logprob: -8.883234977722168
    10. ')' → logprob: -9.133234977722168

Token 87: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.015753960236907005
    2. ' S' → logprob: -4.390753746032715
    3. 'L' → logprob: -6.265753746032715
    4. 'LS' → logprob: -6.765753746032715
    5. 'I' → logprob: -9.515753746032715
    6. ' L' → logprob: -9.765753746032715
    7. ' LS' → logprob: -11.390753746032715
    8. 's' → logprob: -11.640753746032715
    9. 'LI' → logprob: -11.765753746032715
    10. ' ' → logprob: -12.140753746032715

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022078317124396563
    2. '()' → logprob: -6.1272077560424805
    3. ' ():' → logprob: -11.25220775604248
    4. '().' → logprob: -12.37720775604248
    5. '():
' → logprob: -12.87720775604248
    6. '()>' → logprob: -13.62720775604248
    7. ' ()' → logprob: -14.50220775604248
    8. '(' → logprob: -14.62720775604248
    9. '():

' → logprob: -15.87720775604248
    10. '();' → logprob: -16.002208709716797

Token 89: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5947778820991516
    2. 'return' → logprob: -1.3447778224945068
    3. '():' → logprob: -2.219777822494507
    4. ':return' → logprob: -3.094777822494507
    5. ':' → logprob: -4.344778060913086
    6. '()' → logprob: -4.969778060913086
    7. ' ' → logprob: -6.094778060913086
    8. '=' → logprob: -6.219778060913086
    9. ' :' → logprob: -6.219778060913086
    10. '   ' → logprob: -6.469778060913086

Token 90: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028423070907592773
    2. 'sys' → logprob: -3.7784230709075928
    3. ' return' → logprob: -5.403423309326172
    4. ' sys' → logprob: -7.403423309326172
    5. 'ret' → logprob: -10.653423309326172
    6. '   ' → logprob: -11.278423309326172
    7. 'eturn' → logprob: -12.278423309326172
    8. '=sys' → logprob: -12.778423309326172
    9. '(sys' → logprob: -13.028423309326172
    10. 'r' → logprob: -13.153423309326172

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09409336000680923
    2. '=' → logprob: -2.4690933227539062
    3. ' ' → logprob: -5.344093322753906
    4. 'u' → logprob: -9.344093322753906
    5. '  ' → logprob: -9.469093322753906
    6. 'ult' → logprob: -10.219093322753906
    7. '.' → logprob: -10.844093322753906
    8. ' =
' → logprob: -10.844093322753906
    9. ',' → logprob: -10.969093322753906
    10. 'space' → logprob: -11.594093322753906

Token 92: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6934083700180054
    2. '[]' → logprob: -1.5684083700180054
    3. '""' → logprob: -1.9434083700180054
    4. ' sys' → logprob: -2.318408489227295
    5. '''' → logprob: -3.693408489227295
    6. 'input' → logprob: -4.318408489227295
    7. ' []' → logprob: -5.693408489227295
    8. '"' → logprob: -6.068408489227295
    9. ' ' → logprob: -6.318408489227295
    10. ' input' → logprob: -6.943408489227295

Token 93: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.12642420828342438
    2. '(' → logprob: -2.2514243125915527
    3. '()' → logprob: -4.876424312591553
    4. '(input' → logprob: -5.251424312591553
    5. '(s' → logprob: -8.376423835754395
    6. '(map' → logprob: -9.376423835754395
    7. '(str' → logprob: -9.626423835754395
    8. '(system' → logprob: -10.001423835754395
    9. '(stdin' → logprob: -10.251423835754395
    10. '(strip' → logprob: -10.501423835754395

Token 94: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00044175516813993454
    2. '.' → logprob: -7.875441551208496
    3. '.stdout' → logprob: -9.875441551208496
    4. '.readline' → logprob: -12.750441551208496
    5. '.argv' → logprob: -13.250441551208496
    6. '(stdin' → logprob: -13.375441551208496
    7. 'stdin' → logprob: -13.500441551208496
    8. '.std' → logprob: -13.750441551208496
    9. '.st' → logprob: -14.375441551208496
    10. '<|end|>' → logprob: -14.875441551208496

Token 95: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006232033483684063
    2. '().' → logprob: -7.5006232261657715
    3. 'read' → logprob: -10.500622749328613
    4. '.' → logprob: -11.000622749328613
    5. '.read' → logprob: -11.750622749328613
    6. '.stdin' → logprob: -12.625622749328613
    7. ' readline' → logprob: -12.625622749328613
    8. '()' → logprob: -12.875622749328613
    9. '.readlines' → logprob: -13.000622749328613
    10. 'stdin' → logprob: -13.250622749328613

Token 96: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011074943467974663
    2. '())' → logprob: -4.761075019836426
    3. '()' → logprob: -6.011075019836426
    4. '()[' → logprob: -13.886075019836426
    5. '()]' → logprob: -14.511075019836426
    6. '();)' → logprob: -14.511075019836426
    7. ' ())' → logprob: -14.636075019836426
    8. '()).' → logprob: -14.636075019836426
    9. 'rstrip' → logprob: -14.886075019836426
    10. '()-' → logprob: -15.136075019836426

Token 97: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5377907752990723
    2. '().' → logprob: -0.9127907752990723
    3. '()\' → logprob: -5.537790775299072
    4. '(' → logprob: -5.662790775299072
    5. '   ' → logprob: -6.662790775299072
    6. ')' → logprob: -6.662790775299072
    7. '.' → logprob: -6.662790775299072
    8. 'rstrip' → logprob: -7.162790775299072
    9. '()[' → logprob: -7.287790775299072
    10. '.rstrip' → logprob: -7.537790775299072

Token 98: ' if' (ID: 538)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.8029491901397705
    2. 'rstrip' → logprob: -1.8029491901397705
    3. '.' → logprob: -1.9279491901397705
    4. '   ' → logprob: -2.6779491901397705
    5. '.strip' → logprob: -2.9279491901397705
    6. 'return' → logprob: -3.4279491901397705
    7. ')' → logprob: -3.6779491901397705
    8. '[:-' → logprob: -4.052948951721191
    9. '.pop' → logprob: -4.427948951721191
    10. '()' → logprob: -4.427948951721191

Token 99: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.34866863489151
    2. 'res' → logprob: -1.2236685752868652
    3. ' not' → logprob: -9.098669052124023
    4. 'len' → logprob: -10.098669052124023
    5. ' len' → logprob: -10.223669052124023
    6. '(res' → logprob: -10.848669052124023
    7. ' ' → logprob: -11.473669052124023
    8. 'not' → logprob: -12.723669052124023
    9. '	res' → logprob: -14.223669052124023
    10. '(' → logprob: -15.973669052124023

Token 100: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.21509498357772827
    2. ' and' → logprob: -1.715095043182373
    3. 'and' → logprob: -4.465095043182373
    4. '[' → logprob: -6.340095043182373
    5. '==' → logprob: -8.715094566345215
    6. '>' → logprob: -9.090094566345215
    7. '.endswith' → logprob: -10.965094566345215
    8. '&&' → logprob: -11.590094566345215
    9. '[:' → logprob: -12.840094566345215
    10. '[len' → logprob: -12.965094566345215

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016361083544325083
    2. ''\' → logprob: -9.500164031982422
    3. '\n' → logprob: -9.875164031982422
    4. '\' → logprob: -11.375164031982422
    5. ' ' → logprob: -11.625164031982422
    6. '"\' → logprob: -12.125164031982422
    7. '='\' → logprob: -12.875164031982422
    8. '
' → logprob: -13.000164031982422
    9. '=' → logprob: -13.625164031982422
    10. '('\' → logprob: -13.625164031982422

Token 102: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04188235476613045
    2. ' ==' → logprob: -3.291882276535034
    3. '=='' → logprob: -6.041882514953613
    4. '=' → logprob: -6.916882514953613
    5. '==
' → logprob: -8.166882514953613
    6. '=="' → logprob: -9.666882514953613
    7. ' in' → logprob: -10.041882514953613
    8. '===' → logprob: -11.041882514953613
    9. ' ' → logprob: -11.166882514953613
    10. '='\' → logprob: -11.541882514953613

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010668116621673107
    2. ' ==' → logprob: -5.0106682777404785
    3. '=' → logprob: -5.7606682777404785
    4. '==
' → logprob: -7.3856682777404785
    5. '=='' → logprob: -9.01066780090332
    6. ' in' → logprob: -11.26066780090332
    7. '=="' → logprob: -11.38566780090332
    8. 'in' → logprob: -11.88566780090332
    9. '\n' → logprob: -12.76066780090332
    10. ' =' → logprob: -12.76066780090332

Token 104: ' "\' (ID: 6512)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0005911595653742552
    2. ' '\' → logprob: -8.375591278076172
    3. ''
' → logprob: -8.500591278076172
    4. '\n' → logprob: -9.500591278076172
    5. '"\' → logprob: -9.750591278076172
    6. ''' → logprob: -11.375591278076172
    7. '`\' → logprob: -11.750591278076172
    8. '`
' → logprob: -13.625591278076172
    9. '
' → logprob: -14.375591278076172
    10. '\
' → logprob: -14.500591278076172

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.25
    3. ' n' → logprob: -16.5
    4. '
' → logprob: -17.25
    5. '"' → logprob: -19.75
    6. 'newline' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '	n' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. 'r' → logprob: -21.875

Token 106: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.08326737582683563
    2. '":
' → logprob: -2.5832674503326416
    3. '"' → logprob: -5.4582672119140625
    4. '":
' → logprob: -10.083267211914062
    5. '"):
' → logprob: -10.833267211914062
    6. '"):' → logprob: -11.333267211914062
    7. '):
' → logprob: -11.583267211914062
    8. ':
' → logprob: -12.083267211914062
    9. '":

' → logprob: -12.333267211914062
    10. '"]:' → logprob: -12.833267211914062

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10685022175312042
    2. ' res' → logprob: -2.4818501472473145
    3. 'res' → logprob: -4.2318501472473145
    4. '	res' → logprob: -6.2318501472473145
    5. ' del' → logprob: -7.7318501472473145
    6. '       ' → logprob: -8.231850624084473
    7. '
' → logprob: -8.356850624084473
    8. '    
' → logprob: -8.606850624084473
    9. '<|end|>' → logprob: -10.356850624084473
    10. ',res' → logprob: -11.106850624084473

Token 108: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008689859881997108
    2. ' res' → logprob: -4.758689880371094
    3. '   ' → logprob: -10.133689880371094
    4. '
' → logprob: -11.133689880371094
    5. 'r' → logprob: -11.508689880371094
    6. '	res' → logprob: -12.258689880371094
    7. 're' → logprob: -12.883689880371094
    8. 'del' → logprob: -13.758689880371094
    9. '.res' → logprob: -14.508689880371094
    10. 'return' (adapté à ' return') → logprob: -14.883689880371094

Token 109: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2519303858280182
    2. ' res' → logprob: -1.5019303560256958
    3. '	res' → logprob: -14.626930236816406
    4. '(res' → logprob: -15.376930236816406
    5. '$res' → logprob: -15.876930236816406
    6. 'r' → logprob: -15.876930236816406
    7. '[' → logprob: -16.501930236816406
    8. 're' → logprob: -16.626930236816406
    9. ' ' → logprob: -16.751930236816406
    10. '"' → logprob: -17.251930236816406

Token 110: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -10.875020980834961
    3. '[:]' → logprob: -13.500020980834961
    4. '[:' → logprob: -14.750020980834961
    5. '.rstrip' → logprob: -15.500020980834961
    6. '0' → logprob: -15.750020980834961
    7. '.pop' → logprob: -16.50002098083496
    8. '[
' → logprob: -17.12502098083496
    9. 'rstrip' → logprob: -17.12502098083496
    10. '
' → logprob: -17.37502098083496

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '１' → logprob: -17.375001907348633
    5. 'newline' → logprob: -17.625001907348633
    6. '
' → logprob: -18.125001907348633
    7. '```' → logprob: -18.250001907348633
    8. '\n' → logprob: -19.000001907348633
    9. ']' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.562501907348633

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015335931675508618
    2. ' ]' → logprob: -9.250153541564941
    3. ']
' → logprob: -10.250153541564941
    4. '<|end|>' → logprob: -11.000153541564941
    5. '   ' → logprob: -13.250153541564941
    6. ')' → logprob: -13.875153541564941
    7. '']' → logprob: -14.750153541564941
    8. '<|end|>' → logprob: -15.000153541564941
    9. '"]' → logprob: -15.375153541564941
    10. ']

' → logprob: -15.375153541564941

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0210636705160141
    2. ' ' → logprob: -4.771063804626465
    3. '<|end|>' → logprob: -4.771063804626465
    4. '    
' → logprob: -7.021063804626465
    5. ' else' → logprob: -7.271063804626465
    6. '    ' → logprob: -7.521063804626465
    7. '  ' → logprob: -7.896063804626465
    8. '	else' → logprob: -8.271063804626465
    9. ')' → logprob: -8.646063804626465
    10. '	return' → logprob: -8.896063804626465

Token 114: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3616662621498108
    2. 'return' (adapté à ' return') → logprob: -1.236666202545166
    3. ' return' → logprob: -4.861666202545166
    4. 'else' → logprob: -5.736666202545166
    5. '	return' → logprob: -6.861666202545166
    6. ' else' → logprob: -7.736666202545166
    7. ' ' → logprob: -8.236666679382324
    8. ':return' → logprob: -9.236666679382324
    9. '    
' → logprob: -9.486666679382324
    10. 'r' → logprob: -9.611666679382324

Token 115: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004103927407413721
    2. ' res' → logprob: -5.504104137420654
    3. '[]' → logprob: -10.629103660583496
    4. ' []' → logprob: -14.379103660583496
    5. 're' → logprob: -15.504103660583496
    6. '	res' → logprob: -15.754103660583496
    7. '$res' → logprob: -16.504104614257812
    8. 's' → logprob: -16.754104614257812
    9. '(res' → logprob: -16.879104614257812
    10. 'resi' → logprob: -17.004104614257812

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0457347147166729
    2. '<|end|>' → logprob: -3.5457346439361572
    3. '\n' → logprob: -4.420734882354736
    4. '

' → logprob: -6.920734882354736
    5. 'newline' → logprob: -7.170734882354736
    6. 'def' → logprob: -7.170734882354736
    7. '  
' → logprob: -8.795734405517578
    8. '```' → logprob: -8.920734405517578
    9. '<|end|>' → logprob: -8.920734405517578
    10. '(' → logprob: -9.045734405517578

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2639402151107788
    2. '
' → logprob: -1.8889402151107788
    3. 'd' → logprob: -3.2639403343200684
    4. '#' → logprob: -3.7639403343200684
    5. '\' → logprob: -5.013940334320068
    6. ' 
' → logprob: -5.388940334320068
    7. '  
' → logprob: -6.638940334320068
    8. ':' → logprob: -6.763940334320068
    9. '\n' → logprob: -7.013940334320068
    10. '    
' → logprob: -7.263940334320068

Token 118: ' IR' (ID: 23712)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04434001073241234
    2. 'main' → logprob: -4.044340133666992
    3. ' ' → logprob: -5.294340133666992
    4. ' T' → logprob: -5.669340133666992
    5. ' M' → logprob: -5.794340133666992
    6. '_' → logprob: -5.919340133666992
    7. ' J' → logprob: -6.294340133666992
    8. ' LS' → logprob: -6.544340133666992
    9. '_main' → logprob: -7.294340133666992
    10. 'I' → logprob: -7.356840133666992

Token 119: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016725199297070503
    2. 'E' → logprob: -4.891725063323975
    3. '()' → logprob: -4.891725063323975
    4. 'ead' → logprob: -7.266725063323975
    5. 'e' → logprob: -7.641725063323975
    6. '():
' → logprob: -8.766725540161133
    7. ' ():' → logprob: -9.891725540161133
    8. 'ange' → logprob: -10.766725540161133
    9. '):' → logprob: -10.766725540161133
    10. 'EC' → logprob: -11.516725540161133

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002479886752553284
    2. ')' → logprob: -8.500247955322266
    3. '):
' → logprob: -10.375247955322266
    4. ' ):' → logprob: -11.375247955322266
    5. ':' → logprob: -13.625247955322266
    6. '):
' → logprob: -15.625247955322266
    7. ')：' → logprob: -16.250247955322266
    8. ',' → logprob: -17.125247955322266
    9. ']:' → logprob: -17.500247955322266
    10. '=' → logprob: -17.625247955322266

Token 121: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2902328073978424
    2. '   ' → logprob: -2.1652328968048096
    3. '():' → logprob: -3.0402328968048096
    4. ' return' → logprob: -3.2902328968048096
    5. ':
' → logprob: -3.7902328968048096
    6. ' :' → logprob: -4.1652326583862305
    7. ':return' → logprob: -4.7902326583862305
    8. ' ' → logprob: -6.7902326583862305
    9. '):' → logprob: -6.9152326583862305
    10. '():
' → logprob: -7.2902326583862305

Token 122: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5048400163650513
    2. ' return' → logprob: -1.0048400163650513
    3. 'return' (adapté à ' return') → logprob: -4.254839897155762
    4. '[' → logprob: -4.379839897155762
    5. '   ' → logprob: -7.254839897155762
    6. ' [
' → logprob: -7.504839897155762
    7. '[r' → logprob: -7.754839897155762
    8. ' for' → logprob: -8.004839897155762
    9. '[]' → logprob: -8.254839897155762
    10. '[int' → logprob: -8.379839897155762

Token 123: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.030702928081154823
    2. '[' → logprob: -3.780702829360962
    3. ' [' → logprob: -5.530703067779541
    4. '[I' → logprob: -5.780703067779541
    5. '[Int' → logprob: -8.280702590942383
    6. '[i' → logprob: -9.780702590942383
    7. '[list' → logprob: -10.530702590942383
    8. '[List' → logprob: -12.030702590942383
    9. 'int' → logprob: -12.030702590942383
    10. '[n' → logprob: -12.280702590942383

Token 124: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38688287138938904
    2. 'I' → logprob: -1.1368829011917114
    3. ' I' → logprob: -12.386882781982422
    4. ' int' → logprob: -13.136882781982422
    5. '[int' → logprob: -13.261882781982422
    6. '(int' → logprob: -13.636882781982422
    7. '<int' → logprob: -14.511882781982422
    8. '
' → logprob: -14.761882781982422
    9. 'Int' → logprob: -15.011882781982422
    10. ']int' → logprob: -15.011882781982422

Token 125: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5690089639974758e-05
    2. '()]' → logprob: -11.875015258789062
    3. '()
' → logprob: -12.125015258789062
    4. ' ()' → logprob: -13.000015258789062
    5. '(' → logprob: -14.000015258789062
    6. '()

' → logprob: -17.000015258789062
    7. '（）' → logprob: -17.000015258789062
    8. '()\' → logprob: -18.125015258789062
    9. '()
' → logprob: -18.625015258789062
    10. 'for' → logprob: -19.000015258789062

Token 126: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018792471382766962
    2. 'for' → logprob: -8.875187873840332
    3. ' for' → logprob: -10.000187873840332
    4. '()]' → logprob: -14.000187873840332
    5. ' ()' → logprob: -14.000187873840332
    6. '(' → logprob: -14.750187873840332
    7. ')' → logprob: -15.500187873840332
    8. '	for' → logprob: -15.500187873840332
    9. '()
' → logprob: -16.75018882751465
    10. ']' → logprob: -16.87518882751465

Token 127: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10025627166032791
    2. ' _' → logprob: -2.3502562046051025
    3. ' ' → logprob: -9.975255966186523
    4. ' i' → logprob: -13.975255966186523
    5. ' ' → logprob: -14.100255966186523
    6. '_i' → logprob: -14.475255966186523
    7. ' in' → logprob: -15.225255966186523
    8. '_n' → logprob: -15.975255966186523
    9. ' _
' → logprob: -16.100255966186523
    10. 'i' → logprob: -16.225255966186523

Token 128: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2080828845500946
    2. ' in' → logprob: -2.333082914352417
    3. '(' → logprob: -3.208082914352417
    4. '_' → logprob: -3.583082914352417
    5. 'n' → logprob: -4.708082675933838
    6. 'range' → logprob: -4.958082675933838
    7. ' ' → logprob: -5.333082675933838
    8. '(n' → logprob: -7.083082675933838
    9. ' range' → logprob: -8.458083152770996
    10. 's' → logprob: -8.833083152770996

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002624086628202349
    2. ' range' → logprob: -8.250262260437012
    3. 'rang' → logprob: -14.125262260437012
    4. 'ran' → logprob: -16.250263214111328
    5. '(range' → logprob: -16.375263214111328
    6. '	range' → logprob: -16.625263214111328
    7. 'ra' → logprob: -16.750263214111328
    8. 'r' → logprob: -18.500263214111328
    9. 'ange' → logprob: -19.625263214111328
    10. '_range' → logprob: -20.250263214111328

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010355490958318114
    2. '(' → logprob: -6.876035690307617
    3. ' (' → logprob: -13.501035690307617
    4. '(
' → logprob: -14.126035690307617
    5. ' n' → logprob: -14.751035690307617
    6. 'n' → logprob: -16.126035690307617
    7. '	n' → logprob: -16.876035690307617
    8. ')n' → logprob: -17.001035690307617
    9. '(

' → logprob: -18.001035690307617
    10. '(nt' → logprob: -19.126035690307617

Token 131: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -11.750011444091797
    3. ']' → logprob: -12.500011444091797
    4. ')]
' → logprob: -16.250011444091797
    5. '))' → logprob: -17.125011444091797
    6. ' )' → logprob: -17.250011444091797
    7. ')],' → logprob: -17.500011444091797
    8. ')].' → logprob: -18.125011444091797
    9. ')])' → logprob: -18.500011444091797
    10. ')}' → logprob: -18.500011444091797

Token 132: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18641984462738037
    2. '<|end|>' → logprob: -1.9364198446273804
    3. 'def' → logprob: -3.81141996383667
    4. '\n' → logprob: -6.68641996383667
    5. '<|end|>' → logprob: -7.56141996383667
    6. ' 
' → logprob: -7.68641996383667
    7. 'newline' → logprob: -8.436419486999512
    8. '  
' → logprob: -8.561419486999512
    9. '\' → logprob: -8.686419486999512
    10. '```' → logprob: -9.061419486999512

Token 133: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.09132397919893265
    2. 'L' → logprob: -3.3413240909576416
    3. 'LR' → logprob: -4.0913238525390625
    4. 'LI' → logprob: -4.2163238525390625
    5. 'IS' → logprob: -5.0913238525390625
    6. 'SR' → logprob: -5.5913238525390625
    7. 'S' → logprob: -5.8413238525390625
    8. 'IRS' → logprob: -6.0913238525390625
    9. 'IR' → logprob: -6.3413238525390625
    10. ' LS' → logprob: -6.9663238525390625

Token 134: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -3.5716304410016164e-05
    2. 'IR' → logprob: -10.875035285949707
    3. '(n' → logprob: -12.625035285949707
    4. 'S' → logprob: -13.250035285949707
    5. 'ist' → logprob: -13.625035285949707
    6. 'def' → logprob: -13.750035285949707
    7. 'L' → logprob: -13.875035285949707
    8. '()' → logprob: -14.250035285949707
    9. '(' → logprob: -14.375035285949707
    10. '(I' → logprob: -14.375035285949707

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. '(N' → logprob: -15.625040054321289
    4. ' (' → logprob: -16.87504005432129
    5. '(i' → logprob: -18.50004005432129
    6. 'n' → logprob: -18.50004005432129
    7. '(num' → logprob: -18.50004005432129
    8. '(a' → logprob: -18.75004005432129
    9. '():' → logprob: -19.50004005432129
    10. '(size' → logprob: -20.12504005432129

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007591230678372085
    2. '):
' → logprob: -7.250759124755859
    3. ')' → logprob: -10.00075912475586
    4. '):
' → logprob: -13.37575912475586
    5. ']:' → logprob: -13.75075912475586
    6. '）：' → logprob: -15.00075912475586
    7. ' ):' → logprob: -15.25075912475586
    8. '):

' → logprob: -15.25075912475586
    9. ')]' → logprob: -16.12575912475586
    10. '(n' → logprob: -16.25075912475586

Token 137: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47477975487709045
    2. ' return' → logprob: -1.849779725074768
    3. '(n' → logprob: -3.2247798442840576
    4. '():' → logprob: -3.2247798442840576
    5. '   ' → logprob: -3.3497798442840576
    6. 'return' → logprob: -3.3497798442840576
    7. ':return' → logprob: -3.4747798442840576
    8. '(' → logprob: -4.4747796058654785
    9. '):' → logprob: -4.5997796058654785
    10. ':
' → logprob: -5.7247796058654785

Token 138: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.28837934136390686
    2. '[' → logprob: -1.5383793115615845
    3. ' return' → logprob: -3.913379430770874
    4. 'return' (adapté à ' return') → logprob: -4.288379192352295
    5. '[int' → logprob: -6.913379192352295
    6. '[line' → logprob: -8.788379669189453
    7. '[x' → logprob: -8.913379669189453
    8. '[I' → logprob: -9.163379669189453
    9. '[]' → logprob: -9.288379669189453
    10. '[L' → logprob: -9.538379669189453

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2538333237171173
    2. '[int' → logprob: -1.753833293914795
    3. ' [' → logprob: -3.003833293914795
    4. '[Int' → logprob: -7.503833293914795
    5. '[I' → logprob: -7.878833293914795
    6. ' LI' → logprob: -8.628833770751953
    7. 'LI' → logprob: -9.128833770751953
    8. '[List' → logprob: -9.378833770751953
    9. '[list' → logprob: -9.628833770751953
    10. '[L' → logprob: -10.128833770751953

Token 140: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -2.117345684382599e-05
    2. ' LI' → logprob: -11.125020980834961
    3. 'int' → logprob: -12.625020980834961
    4. 'list' → logprob: -13.125020980834961
    5. 'li' → logprob: -14.375020980834961
    6. '[int' → logprob: -16.12502098083496
    7. 'Li' → logprob: -16.12502098083496
    8. '[' → logprob: -16.25002098083496
    9. 'tuple' → logprob: -16.50002098083496
    10. '   ' → logprob: -16.75002098083496

Token 141: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011120688170194626
    2. '(n' → logprob: -4.511120796203613
    3. '()]' → logprob: -9.636120796203613
    4. ' ()' → logprob: -12.761120796203613
    5. '(i' → logprob: -13.386120796203613
    6. '(' → logprob: -13.636120796203613
    7. '()
' → logprob: -14.011120796203613
    8. '()(' → logprob: -15.136120796203613
    9. '()[' → logprob: -15.636120796203613
    10. '())' → logprob: -15.886120796203613

Token 142: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.375006675720215
    3. 'for' → logprob: -14.000006675720215
    4. '(i' → logprob: -14.500006675720215
    5. ' (' → logprob: -15.000006675720215
    6. '()' → logprob: -15.750006675720215
    7. ' for' → logprob: -16.0000057220459
    8. 'n' → logprob: -16.5000057220459
    9. ')' → logprob: -19.1250057220459
    10. '((' → logprob: -20.6250057220459

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5871478319168091
    2. ' i' → logprob: -0.8371478319168091
    3. ' range' → logprob: -5.0871477127075195
    4. 'range' → logprob: -6.2121477127075195
    5. '(n' → logprob: -7.0871477127075195
    6. '_' → logprob: -7.2121477127075195
    7. '(i' → logprob: -7.3371477127075195
    8. '(range' → logprob: -8.08714771270752
    9. '(' → logprob: -9.21214771270752
    10. '_i' → logprob: -9.21214771270752

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4969346523284912
    2. 'in' → logprob: -0.9969346523284912
    3. '(' → logprob: -4.49693489074707
    4. 'n' → logprob: -4.99693489074707
    5. '(n' → logprob: -5.62193489074707
    6. ' ' → logprob: -8.24693489074707
    7. 'range' → logprob: -8.37193489074707
    8. ' i' → logprob: -8.62193489074707
    9. 'i' → logprob: -8.74693489074707
    10. ' n' → logprob: -9.12193489074707

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004340867977589369
    2. ' range' → logprob: -5.504340648651123
    3. '(range' → logprob: -8.254341125488281
    4. '(' → logprob: -14.004341125488281
    5. '(n' → logprob: -15.129341125488281
    6. 'rang' → logprob: -15.379341125488281
    7. 'n' → logprob: -15.504341125488281
    8. 'r' → logprob: -15.629341125488281
    9. 'in' → logprob: -15.629341125488281
    10. '	range' → logprob: -15.879341125488281

Token 146: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.9795445849886164e-05
    2. 'n' → logprob: -10.250060081481934
    3. '(' → logprob: -10.625060081481934
    4. ' n' → logprob: -17.375059127807617
    5. ' (' → logprob: -18.000059127807617
    6. '(
' → logprob: -18.250059127807617
    7. '	n' → logprob: -19.250059127807617
    8. 's' → logprob: -20.625059127807617
    9. ')n' → logprob: -20.625059127807617
    10. '   ' → logprob: -21.500059127807617

Token 147: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000464631273644045
    2. ']' → logprob: -8.00046443939209
    3. '()]' → logprob: -9.00046443939209
    4. ')' → logprob: -12.37546443939209
    5. '()' → logprob: -14.75046443939209
    6. '())' → logprob: -15.25046443939209
    7. '(' → logprob: -15.50046443939209
    8. '}]' → logprob: -15.62546443939209
    9. '])' → logprob: -15.75046443939209
    10. ']()' → logprob: -16.000465393066406

Token 148: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2884126603603363
    2. 'def' → logprob: -1.6634126901626587
    3. '<|end|>' → logprob: -3.538412570953369
    4. ':' → logprob: -4.788412570953369
    5. '#' → logprob: -4.913412570953369
    6. '\' → logprob: -5.163412570953369
    7. '\n' → logprob: -5.663412570953369
    8. ' 
' → logprob: -6.288412570953369
    9. 'd' → logprob: -7.163412570953369
    10. '' → logprob: -7.288412570953369

Token 149: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.03328462317585945
    2. 'LS' → logprob: -4.158284664154053
    3. 'IR' → logprob: -4.908284664154053
    4. 'S' → logprob: -5.533284664154053
    5. 'main' → logprob: -6.908284664154053
    6. 'RS' → logprob: -7.158284664154053
    7. 'SI' → logprob: -7.158284664154053
    8. 'IS' → logprob: -7.283284664154053
    9. ' SR' → logprob: -7.283284664154053
    10. 'I' → logprob: -7.783284664154053

Token 150: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.43088972568511963
    2. '():' → logprob: -1.0558897256851196
    3. '():
' → logprob: -6.68088960647583
    4. '()' → logprob: -7.05588960647583
    5. '()(' → logprob: -11.055890083312988
    6. '(' → logprob: -11.555890083312988
    7. '(N' → logprob: -11.555890083312988
    8. '(size' → logprob: -12.305890083312988
    9. 'e' → logprob: -12.555890083312988
    10. 'ange' → logprob: -12.680890083312988

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04312354326248169
    2. '):
' → logprob: -3.168123483657837
    3. ')' → logprob: -9.168123245239258
    4. '):
' → logprob: -11.043123245239258
    5. ']:' → logprob: -13.293123245239258
    6. '):

' → logprob: -13.793123245239258
    7. ' ):' → logprob: -14.918123245239258
    8. '(n' → logprob: -15.543123245239258
    9. '):(' → logprob: -15.918123245239258
    10. '）：' → logprob: -16.043123245239258

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007667790167033672
    2. 'def' → logprob: -6.1326680183410645
    3. '(n' → logprob: -6.5076680183410645
    4. 'return' → logprob: -7.0076680183410645
    5. ' return' → logprob: -7.2576680183410645
    6. '[' → logprob: -7.7576680183410645
    7. ':' → logprob: -8.132667541503906
    8. ':
' → logprob: -8.132667541503906
    9. '[n' → logprob: -8.382667541503906
    10. ' ' → logprob: -9.007667541503906

Token 153: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1628868281841278
    2. '[S' → logprob: -2.28788685798645
    3. 'return' (adapté à ' return') → logprob: -3.91288685798645
    4. '[list' → logprob: -4.162886619567871
    5. ' [' → logprob: -4.912886619567871
    6. '[s' → logprob: -6.412886619567871
    7. '[str' → logprob: -6.787886619567871
    8. '[string' → logprob: -7.162886619567871
    9. '   ' → logprob: -7.662886619567871
    10. ' return' → logprob: -7.662886619567871

Token 154: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.012113896198570728
    2. '[list' → logprob: -4.76211404800415
    3. '[' → logprob: -6.38711404800415
    4. ' [' → logprob: -6.63711404800415
    5. 'S' → logprob: -8.762113571166992
    6. 'list' → logprob: -8.887113571166992
    7. '[List' → logprob: -10.137113571166992
    8. '[s' → logprob: -10.137113571166992
    9. '[string' → logprob: -10.387113571166992
    10. '[String' → logprob: -10.762113571166992

Token 155: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.843177233240567e-05
    2. 'list' → logprob: -11.000018119812012
    3. 'sys' → logprob: -13.500018119812012
    4. ' S' → logprob: -15.250018119812012
    5. 'input' → logprob: -17.750019073486328
    6. 'str' → logprob: -20.000019073486328
    7. 'Sys' → logprob: -20.000019073486328
    8. 's' → logprob: -20.125019073486328
    9. 'set' → logprob: -20.250019073486328
    10. '_S' → logprob: -20.375019073486328

Token 156: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1604333072900772
    2. '(n' → logprob: -1.910433292388916
    3. '(i' → logprob: -8.785433769226074
    4. ' ()' → logprob: -10.160433769226074
    5. '(' → logprob: -11.660433769226074
    6. '()]' → logprob: -12.035433769226074
    7. ' (' → logprob: -13.535433769226074
    8. 'for' → logprob: -14.660433769226074
    9. '()(' → logprob: -14.660433769226074
    10. '()
' → logprob: -15.535433769226074

Token 157: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017970333283301443
    2. 'for' → logprob: -9.000179290771484
    3. ' for' → logprob: -10.500179290771484
    4. '(' → logprob: -11.500179290771484
    5. ' (' → logprob: -11.750179290771484
    6. ')' → logprob: -11.750179290771484
    7. 'n' → logprob: -12.875179290771484
    8. '(i' → logprob: -16.125179290771484
    9. ')n' → logprob: -16.750179290771484
    10. '   ' → logprob: -17.000179290771484

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31728899478912354
    2. ' i' → logprob: -1.3172889947891235
    3. '_' → logprob: -6.067288875579834
    4. ' range' → logprob: -6.692288875579834
    5. 'range' → logprob: -8.067289352416992
    6. ' _' → logprob: -9.692289352416992
    7. ' ' → logprob: -9.942289352416992
    8. '_i' → logprob: -10.942289352416992
    9. ' in' → logprob: -11.442289352416992
    10. 'n' → logprob: -12.942289352416992

Token 159: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22435514628887177
    2. '(n' → logprob: -1.8493551015853882
    3. ' (' → logprob: -3.3493552207946777
    4. ' in' → logprob: -4.849355220794678
    5. ' n' → logprob: -7.974355220794678
    6. 'n' → logprob: -8.47435474395752
    7. 'in' → logprob: -9.84935474395752
    8. '(
' → logprob: -10.47435474395752
    9. ' ' → logprob: -10.84935474395752
    10. '(range' → logprob: -11.22435474395752

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028009600937366486
    2. ' range' → logprob: -6.252800941467285
    3. '(range' → logprob: -7.627800941467285
    4. '(n' → logprob: -7.877800941467285
    5. 'n' → logprob: -12.252800941467285
    6. '(' → logprob: -13.752800941467285
    7. ' (' → logprob: -15.877800941467285
    8. 'rang' → logprob: -16.6278018951416
    9. '	range' → logprob: -17.0028018951416
    10. '(r' → logprob: -17.5028018951416

Token 161: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013289296766743064
    2. 'n' → logprob: -6.751328945159912
    3. '(' → logprob: -8.751328468322754
    4. '(
' → logprob: -14.751328468322754
    5. ')n' → logprob: -17.25132942199707
    6. ' n' → logprob: -17.50132942199707
    7. ' (' → logprob: -17.50132942199707
    8. '(

' → logprob: -19.00132942199707
    9. ')' → logprob: -19.12632942199707
    10. '	n' → logprob: -19.37632942199707

Token 162: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.157039049663581e-05
    2. ']' → logprob: -10.000051498413086
    3. ')' → logprob: -12.125051498413086
    4. ')]
' → logprob: -14.625051498413086
    5. '')]' → logprob: -16.875051498413086
    6. '}]' → logprob: -17.625051498413086
    7. ')].' → logprob: -17.625051498413086
    8. ')],' → logprob: -17.750051498413086
    9. '))' → logprob: -17.750051498413086
    10. '")]' → logprob: -17.875051498413086

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003485677530989051
    2. 'd' → logprob: -6.503485679626465
    3. 'class' → logprob: -6.753485679626465
    4. '#' → logprob: -7.628485679626465
    5. '
' → logprob: -9.503485679626465
    6. 'a' → logprob: -9.628485679626465
    7. 'n' → logprob: -9.878485679626465
    8. 'de' → logprob: -10.753485679626465
    9. '0' → logprob: -11.128485679626465
    10. 'ndef' → logprob: -11.128485679626465

Token 164: ' L' (ID: 451)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06494557112455368
    2. 'main' → logprob: -2.8149454593658447
    3. ' solve' → logprob: -7.314945697784424
    4. 'I' → logprob: -8.189945220947266
    5. 'solve' → logprob: -8.814945220947266
    6. 'T' → logprob: -8.814945220947266
    7. ' ma' → logprob: -8.939945220947266
    8. 'LI' → logprob: -9.064945220947266
    9. ' T' → logprob: -9.064945220947266
    10. ' M' → logprob: -9.314945220947266

Token 165: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.009479692205786705
    2. 'I' → logprob: -5.134479522705078
    3. 'R' → logprob: -5.884479522705078
    4. 'SR' → logprob: -7.759479522705078
    5. 'S' → logprob: -8.884479522705078
    6. '(IR' → logprob: -9.509479522705078
    7. 'def' → logprob: -10.009479522705078
    8. ' IR' → logprob: -10.634479522705078
    9. '_IR' → logprob: -11.134479522705078
    10. '(' → logprob: -11.384479522705078

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.375032424926758
    3. ' (' → logprob: -13.875032424926758
    4. '():' → logprob: -16.500032424926758
    5. 'n' → logprob: -17.375032424926758
    6. '(
' → logprob: -17.625032424926758
    7. 'def' → logprob: -19.625032424926758
    8. '(N' → logprob: -20.375032424926758
    9. ':' → logprob: -20.750032424926758
    10. '():
' → logprob: -20.875032424926758

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00039051592466421425
    2. '):
' → logprob: -8.00039005279541
    3. ')' → logprob: -10.00039005279541
    4. '():' → logprob: -11.75039005279541
    5. ' ):' → logprob: -14.00039005279541
    6. '(n' → logprob: -15.00039005279541
    7. ']:' → logprob: -15.75039005279541
    8. '):
' → logprob: -16.000391006469727
    9. '):

' → logprob: -16.250391006469727
    10. '   ' → logprob: -16.750391006469727

Token 168: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005444537382572889
    2. '   ' → logprob: -8.000544548034668
    3. '(' → logprob: -9.125544548034668
    4. ':' → logprob: -9.750544548034668
    5. ' =' → logprob: -10.875544548034668
    6. ' (' → logprob: -11.500544548034668
    7. 'def' → logprob: -12.875544548034668
    8. ' n' → logprob: -13.250544548034668
    9. ' :' → logprob: -13.250544548034668
    10. '=' → logprob: -13.375544548034668

Token 169: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7643023133277893
    2. 'return' (adapté à ' return') → logprob: -0.7643023133277893
    3. '[' → logprob: -2.8893022537231445
    4. ' [' → logprob: -4.3893022537231445
    5. '[L' → logprob: -8.139302253723145
    6. '   ' → logprob: -8.764302253723145
    7. 'def' → logprob: -9.889302253723145
    8. '[int' → logprob: -10.264302253723145
    9. '[n' → logprob: -10.514302253723145
    10. 'eturn' → logprob: -10.764302253723145

Token 170: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020339188631623983
    2. '[L' → logprob: -6.252033710479736
    3. '[List' → logprob: -9.877034187316895
    4. ' [' → logprob: -10.252034187316895
    5. '[int' → logprob: -11.502034187316895
    6. '[list' → logprob: -12.002034187316895
    7. '[S' → logprob: -13.627034187316895
    8. '[Int' → logprob: -14.377034187316895
    9. '[len' → logprob: -15.252034187316895
    10. '[line' → logprob: -15.877034187316895

Token 171: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.5682053565979004
    2. 'S' → logprob: -1.3182053565979004
    3. 'list' → logprob: -1.8182053565979004
    4. 'sys' → logprob: -6.6932053565979
    5. '[list' → logprob: -6.9432053565979
    6. '[S' → logprob: -7.3182053565979
    7. 'ls' → logprob: -8.443204879760742
    8. 'LI' → logprob: -9.193204879760742
    9. ' LS' → logprob: -9.443204879760742
    10. ' list' → logprob: -9.568204879760742

Token 172: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2529357969760895
    2. '()' → logprob: -1.502935767173767
    3. '()]' → logprob: -7.002935886383057
    4. '(' → logprob: -9.502935409545898
    5. '()
' → logprob: -11.877935409545898
    6. ' ()' → logprob: -12.127935409545898
    7. '()(' → logprob: -12.252935409545898
    8. ' (' → logprob: -13.502935409545898
    9. '(i' → logprob: -14.627935409545898
    10. ']' → logprob: -14.627935409545898

Token 173: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.008129963040119e-06
    2. ' (' → logprob: -12.750003814697266
    3. '(' → logprob: -14.625003814697266
    4. 'for' → logprob: -15.000003814697266
    5. ' for' → logprob: -16.125003814697266
    6. 'n' → logprob: -16.625003814697266
    7. ')' → logprob: -17.250003814697266
    8. '(i' → logprob: -18.000003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '((' → logprob: -19.500003814697266

Token 174: ' i' (ID: 575)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4774385094642639
    2. 'n' → logprob: -0.9774385094642639
    3. ' n' → logprob: -5.727438449859619
    4. ' (' → logprob: -9.227438926696777
    5. '(' → logprob: -13.977438926696777
    6. 'int' → logprob: -14.102438926696777
    7. ')n' → logprob: -15.727438926696777
    8. '	n' → logprob: -15.852438926696777
    9. 'range' → logprob: -16.85243797302246
    10. ' ' → logprob: -17.72743797302246

Token 175: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0467745065689087
    2. ' in' → logprob: -1.2967745065689087
    3. '(n' → logprob: -1.7967745065689087
    4. 'in' → logprob: -2.796774387359619
    5. ' (' → logprob: -2.796774387359619
    6. 'range' → logprob: -2.921774387359619
    7. '(range' → logprob: -3.921774387359619
    8. ' range' → logprob: -4.421774387359619
    9. ' ' → logprob: -7.296774387359619
    10. '(in' → logprob: -7.796774387359619

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.251988023519516
    2. ' range' → logprob: -1.5019880533218384
    3. '(range' → logprob: -10.001988410949707
    4. '(n' → logprob: -11.376988410949707
    5. 'n' → logprob: -13.251988410949707
    6. ' n' → logprob: -15.376988410949707
    7. '(' → logprob: -17.00198745727539
    8. '	range' → logprob: -17.37698745727539
    9. 'rang' → logprob: -17.37698745727539
    10. ' in' → logprob: -17.62698745727539

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.621933451038785e-05
    2. 'n' → logprob: -10.000056266784668
    3. '(' → logprob: -11.500056266784668
    4. ' (' → logprob: -14.500056266784668
    5. ' n' → logprob: -16.50005531311035
    6. '(
' → logprob: -18.00005531311035
    7. ')n' → logprob: -18.50005531311035
    8. '
' → logprob: -19.00005531311035
    9. ')' → logprob: -19.12505531311035
    10. ')(' → logprob: -19.62505531311035

Token 178: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002273774443892762
    2. ')' → logprob: -8.500226974487305
    3. ']' → logprob: -11.125226974487305
    4. '):' → logprob: -11.875226974487305
    5. ')]
' → logprob: -15.000226974487305
    6. ' )' → logprob: -15.000226974487305
    7. ')])' → logprob: -15.000226974487305
    8. '])' → logprob: -15.250226974487305
    9. '()]' → logprob: -15.375226974487305
    10. '))' → logprob: -15.375226974487305

Token 179: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013021635822951794
    2. 'd' → logprob: -4.513021469116211
    3. 'class' → logprob: -6.388021469116211
    4. 'de' → logprob: -9.013021469116211
    5. '#' → logprob: -9.138021469116211
    6. 'n' → logprob: -10.888021469116211
    7. 'a' → logprob: -11.263021469116211
    8. 'D' → logprob: -11.638021469116211
    9. 'dp' → logprob: -11.888021469116211
    10. 'c' → logprob: -12.888021469116211

Token 180: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12394966185092926
    2. '.exit' → logprob: -2.4989497661590576
    3. '.stdout' → logprob: -3.6239497661590576
    4. '.stdin' → logprob: -5.1239495277404785
    5. '.stderr' → logprob: -6.7489495277404785
    6. '.setdefault' → logprob: -7.9989495277404785
    7. '.argv' → logprob: -9.123950004577637
    8. '.readline' → logprob: -9.998950004577637
    9. '.write' → logprob: -10.248950004577637
    10. '.max' → logprob: -11.123950004577637

Token 181: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00031651611789129674
    2. '_rec' → logprob: -9.000316619873047
    3. 'set' → logprob: -9.125316619873047
    4. 'limit' → logprob: -10.500316619873047
    5. 're' → logprob: -11.000316619873047
    6. 'execution' → logprob: -11.250316619873047
    7. 'r' → logprob: -12.500316619873047
    8. 'stdin' → logprob: -12.625316619873047
    9. 'ursion' → logprob: -12.875316619873047
    10. 's' → logprob: -12.875316619873047

Token 182: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -5.200166469876422e-06
    2. 'limit' → logprob: -13.125004768371582
    3. 'urs' → logprob: -13.250004768371582
    4. 'ursive' → logprob: -14.625004768371582
    5. 'usion' → logprob: -14.875004768371582
    6. 'ur' → logprob: -15.000004768371582
    7. 'ursor' → logprob: -16.1250057220459
    8. 'ision' → logprob: -16.7500057220459
    9. 'rs' → logprob: -17.1250057220459
    10. '_limit' → logprob: -18.1250057220459

Token 183: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.339278580620885e-06
    2. '_limit' → logprob: -13.500001907348633
    3. 'depth' → logprob: -14.625001907348633
    4. ' limit' → logprob: -15.500001907348633
    5. 'lim' → logprob: -15.750001907348633
    6. 'limits' → logprob: -17.375001907348633
    7. 'al' → logprob: -18.000001907348633
    8. 'Limit' → logprob: -19.000001907348633
    9. 'LIMIT' → logprob: -19.500001907348633
    10. 'limited' → logprob: -19.625001907348633

Token 184: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1994775377388578e-05
    2. '(
' → logprob: -12.000012397766113
    3. ' (' → logprob: -12.250012397766113
    4. '((' → logprob: -14.375012397766113
    5. '(int' → logprob: -15.000012397766113
    6. '()' → logprob: -16.625011444091797
    7. '(

' → logprob: -16.625011444091797
    8. '100' → logprob: -17.500011444091797
    9. '(
' → logprob: -18.250011444091797
    10. '(pow' → logprob: -18.500011444091797

Token 185: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015040287980809808
    2. '100' → logprob: -6.501503944396973
    3. '1' → logprob: -13.626503944396973
    4. ' ' → logprob: -15.001503944396973
    5. '500' → logprob: -16.75150489807129
    6. '200' → logprob: -16.75150489807129
    7. '400' → logprob: -16.87650489807129
    8. '300' → logprob: -17.12650489807129
    9. '999' → logprob: -17.37650489807129
    10. '410' → logprob: -17.62650489807129

Token 186: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.005950013641268015
    2. '00' → logprob: -5.130949974060059
    3. '007' → logprob: -11.505949974060059
    4. '0' → logprob: -12.130949974060059
    5. '_' → logprob: -12.880949974060059
    6. '7' → logprob: -13.880949974060059
    7. '006' → logprob: -13.880949974060059
    8. '010' → logprob: -14.755949974060059
    9. '6' → logprob: -14.755949974060059
    10. '07' → logprob: -15.255949974060059

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ')' → logprob: -6.7511701583862305
    3. ')
' → logprob: -16.251171112060547
    4. '(' → logprob: -16.876171112060547
    5. '00' → logprob: -17.126171112060547
    6. '1' → logprob: -17.376171112060547
    7. ' )' → logprob: -17.626171112060547
    8. '))' → logprob: -18.251171112060547
    9. ' ' → logprob: -18.751171112060547
    10. ')

' → logprob: -19.376171112060547

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.50000286102295
    4. ')

' → logprob: -17.750001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '),' → logprob: -18.500001907348633
    7. '))' → logprob: -18.625001907348633
    8. ')
' → logprob: -18.625001907348633
    9. ');' → logprob: -19.125001907348633
    10. '
' → logprob: -19.375001907348633

Token 189: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33044442534446716
    2. '
' → logprob: -2.2054443359375
    3. 'class' → logprob: -2.2054443359375
    4. 'n' → logprob: -3.5804443359375
    5. '#' → logprob: -4.4554443359375
    6. 'd' → logprob: -4.5804443359375
    7. '' → logprob: -5.7054443359375
    8. '

' → logprob: -5.8304443359375
    9. '\' → logprob: -6.5804443359375
    10. '\n' → logprob: -6.7054443359375

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052481576800346375
    2. '=' → logprob: -3.0524816513061523
    3. ' ' → logprob: -5.802481651306152
    4. '_' → logprob: -7.177481651306152
    5. ',' → logprob: -10.802481651306152
    6. '  ' → logprob: -11.177481651306152
    7. ' _' → logprob: -11.302481651306152
    8. ' =
' → logprob: -11.552481651306152
    9. ' =)' → logprob: -12.052481651306152
    10. '<|end|>' → logprob: -12.177481651306152

Token 191: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10224568098783493
    2. ' ' → logprob: -2.352245569229126
    3. '100' → logprob: -6.227245807647705
    4. '1' → logprob: -9.727245330810547
    5. '998' → logprob: -13.227245330810547
    6. 'int' → logprob: -15.352245330810547
    7. '999' → logprob: -15.477245330810547
    8. '0' → logprob: -16.602245330810547
    9. '109' → logprob: -16.602245330810547
    10. '9' → logprob: -16.852245330810547

Token 192: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004280331078916788
    2. '100' → logprob: -5.5042805671691895
    3. ' ' → logprob: -8.754280090332031
    4. '1' → logprob: -10.504280090332031
    5. '998' → logprob: -11.004280090332031
    6. 'int' → logprob: -16.87928009033203
    7. '999' → logprob: -17.37928009033203
    8. '１０' → logprob: -18.12928009033203
    9. '9' → logprob: -18.50428009033203
    10. '109' → logprob: -18.50428009033203

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0011091399937868118
    2. '9' → logprob: -6.8761091232299805
    3. '09' → logprob: -10.37610912322998
    4. '0' → logprob: -10.75110912322998
    5. '+' → logprob: -11.75110912322998
    6. '009' → logprob: -11.75110912322998
    7. '00' → logprob: -12.37610912322998
    8. '_' → logprob: -14.00110912322998
    9. ' ' → logprob: -14.37610912322998
    10. '007' → logprob: -14.50110912322998

Token 194: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -6.229872087715194e-05
    2. '007' → logprob: -9.875061988830566
    3. '7' → logprob: -12.000061988830566
    4. '0' → logprob: -12.750061988830566
    5. '00' → logprob: -14.375061988830566
    6. '+' → logprob: -14.375061988830566
    7. '07' → logprob: -15.250061988830566
    8. '9' → logprob: -15.625061988830566
    9. '009' → logprob: -16.500062942504883
    10. '19' → logprob: -16.625062942504883

Token 195: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.935296834039036e-06
    2. '07' → logprob: -13.37500286102295
    3. '+' → logprob: -13.62500286102295
    4. '9' → logprob: -16.000003814697266
    5. '```' → logprob: -19.000003814697266
    6. ' ' → logprob: -19.125003814697266
    7. '007' → logprob: -19.500003814697266
    8. '79' → logprob: -19.875003814697266
    9. '0' → logprob: -20.000003814697266
    10. '   ' → logprob: -20.375003814697266

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0013864279026165605
    2. '<|end|>' → logprob: -7.751386642456055
    3. '

' → logprob: -8.001386642456055
    4. 'def' → logprob: -8.751386642456055
    5. '
' → logprob: -8.876386642456055
    6. '\n' → logprob: -9.126386642456055
    7. '' → logprob: -9.501386642456055
    8. ' 
' → logprob: -10.001386642456055
    9. '#' → logprob: -10.126386642456055
    10. 'n' → logprob: -11.251386642456055

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041947141289711
    2. 'd' → logprob: -8.250419616699219
    3. 'class' → logprob: -8.875419616699219
    4. 'de' → logprob: -11.250419616699219
    5. 'n' → logprob: -12.625419616699219
    6. '#' → logprob: -13.500419616699219
    7. ' def' → logprob: -14.625419616699219
    8. 'dp' → logprob: -16.12541961669922
    9. 'a' → logprob: -16.50041961669922
    10. 'ndef' → logprob: -17.50041961669922

Token 198: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06111836060881615
    2. ' solve' → logprob: -3.0611183643341064
    3. ' dfs' → logprob: -4.811118125915527
    4. 'main' → logprob: -6.811118125915527
    5. 'solve' → logprob: -7.436118125915527
    6. ' factorial' → logprob: -7.561118125915527
    7. ' mod' → logprob: -8.061118125915527
    8. ' ma' → logprob: -8.061118125915527
    9. ' pow' → logprob: -8.311118125915527
    10. ' bfs' → logprob: -8.561118125915527

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018375257786829025
    2. ' ():' → logprob: -8.625184059143066
    3. '():
' → logprob: -13.125184059143066
    4. '()' → logprob: -13.125184059143066
    5. '(' → logprob: -16.12518310546875
    6. ' ()' → logprob: -18.75018310546875
    7. '(":' → logprob: -18.87518310546875
    8. '(:' → logprob: -19.62518310546875
    9. '().' → logprob: -19.62518310546875
    10. '()(' → logprob: -19.75018310546875

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05113368481397629
    2. '(' → logprob: -4.426133632659912
    3. ':' → logprob: -4.926133632659912
    4. '    ' → logprob: -5.051133632659912
    5. 'n' → logprob: -5.426133632659912
    6. '    
' → logprob: -5.426133632659912
    7. ' ' → logprob: -5.551133632659912
    8. ' 
' → logprob: -5.676133632659912
    9. '<|end|>' → logprob: -6.051133632659912
    10. '
' → logprob: -6.301133632659912

Token 201: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7658851146697998
    2. ' ' → logprob: -1.0158851146697998
    3. 'n' (adapté à ' n') → logprob: -1.7658851146697998
    4. '   ' → logprob: -7.515885353088379
    5. '    ' → logprob: -7.765885353088379
    6. ' pass' → logprob: -8.265885353088379
    7. ' 
' → logprob: -9.140885353088379
    8. 'a' → logprob: -9.140885353088379
    9. '  ' → logprob: -9.515885353088379
    10. ' #' → logprob: -9.515885353088379

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11753031611442566
    2. '=' → logprob: -2.367530345916748
    3. ',' → logprob: -4.242530345916748
    4. ' ' → logprob: -5.992530345916748
    5. ' ,' → logprob: -8.49252986907959
    6. '=int' → logprob: -9.61752986907959
    7. ' =
' → logprob: -11.49252986907959
    8. ')' → logprob: -12.11752986907959
    9. ',n' → logprob: -12.36752986907959
    10. '=input' → logprob: -13.11752986907959

Token 203: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.12719151377677917
    2. 'I' → logprob: -2.1271915435791016
    3. ' int' → logprob: -8.877191543579102
    4. 'int' → logprob: -9.252191543579102
    5. ' ' → logprob: -10.502191543579102
    6. '	I' → logprob: -15.877191543579102
    7. ' ' → logprob: -17.1271915435791
    8. ' i' → logprob: -17.2521915435791
    9. '  ' → logprob: -17.5021915435791
    10. ' 
' → logprob: -17.6271915435791

Token 204: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007212492637336254
    2. '()
' → logprob: -7.875721454620361
    3. ')' → logprob: -8.125720977783203
    4. ' ()' → logprob: -10.750720977783203
    5. '(' → logprob: -11.000720977783203
    6. '())' → logprob: -13.000720977783203
    7. '()\' → logprob: -14.125720977783203
    8. '   ' → logprob: -14.250720977783203
    9. '#' → logprob: -14.500720977783203
    10. ',' → logprob: -15.000720977783203

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05871889367699623
    2. '
' → logprob: -4.058718681335449
    3. ' ' → logprob: -4.308718681335449
    4. '    
' → logprob: -4.558718681335449
    5. '<|end|>' → logprob: -5.183718681335449
    6. ' 
' → logprob: -5.433718681335449
    7. ')' → logprob: -6.683718681335449
    8. '    ' → logprob: -6.808718681335449
    9. 'n' → logprob: -7.183718681335449
    10. '  ' → logprob: -7.558718681335449

Token 206: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0701170489192009
    2. 'arr' → logprob: -2.8201169967651367
    3. 'A' → logprob: -5.195116996765137
    4. 's' → logprob: -7.195116996765137
    5. 'dp' → logprob: -7.570116996765137
    6. 'd' → logprob: -7.945116996765137
    7. ' a' → logprob: -8.570116996765137
    8. 'lst' → logprob: -8.695116996765137
    9. ' arr' → logprob: -9.320116996765137
    10. 'l' → logprob: -9.570116996765137

Token 207: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6689504384994507
    2. 'act' → logprob: -1.9189504384994507
    3. ' =' → logprob: -2.4189505577087402
    4. 'req' → logprob: -2.6689505577087402
    5. 'ac' → logprob: -3.0439505577087402
    6. 'acts' → logprob: -3.4189505577087402
    7. 'actor' → logprob: -3.4189505577087402
    8. 'actors' → logprob: -3.6689505577087402
    9. 'a' → logprob: -4.29395055770874
    10. 'rom' → logprob: -4.91895055770874

Token 208: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7647147178649902
    2. '[' → logprob: -0.8897147178649902
    3. ' defaultdict' → logprob: -2.3897147178649902
    4. '[n' → logprob: -5.01471471786499
    5. '[]' → logprob: -5.13971471786499
    6. 'default' → logprob: -5.26471471786499
    7. ' []' → logprob: -5.76471471786499
    8. ' ' → logprob: -6.51471471786499
    9. '{}' → logprob: -6.51471471786499
    10. '[I' → logprob: -7.01471471786499

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07804214954376221
    2. 'I' → logprob: -3.5780420303344727
    3. 'int' → logprob: -3.5780420303344727
    4. 'False' → logprob: -4.328042030334473
    5. '1' → logprob: -5.828042030334473
    6. ']' → logprob: -7.328042030334473
    7. 'i' → logprob: -7.578042030334473
    8. 'list' → logprob: -7.703042030334473
    9. 'n' → logprob: -8.578042030334473
    10. '-' → logprob: -8.578042030334473

Token 210: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02737993746995926
    2. ']*(' → logprob: -3.7773799896240234
    3. ']*' → logprob: -5.527379989624023
    4. ' for' → logprob: -9.902379989624023
    5. 'for' → logprob: -10.152379989624023
    6. ']+' → logprob: -10.402379989624023
    7. '()]' → logprob: -11.027379989624023
    8. ' ]' → logprob: -12.027379989624023
    9. '(n' → logprob: -12.902379989624023
    10. '   ' → logprob: -14.152379989624023

Token 211: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.032078612595796585
    2. 'n' → logprob: -3.532078504562378
    3. '(' → logprob: -6.282078742980957
    4. ' (' → logprob: -8.032078742980957
    5. '100' → logprob: -9.532078742980957
    6. '101' → logprob: -11.407078742980957
    7. '10' → logprob: -11.532078742980957
    8. '500' → logprob: -12.532078742980957
    9. '300' → logprob: -12.782078742980957
    10. ' n' → logprob: -13.032078742980957

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0669647753238678
    2. '   ' → logprob: -3.191964864730835
    3. '<|end|>' → logprob: -4.691964626312256
    4. '    
' → logprob: -5.316964626312256
    5. ' 
' → logprob: -6.066964626312256
    6. '  
' → logprob: -6.691964626312256
    7. '   
' → logprob: -6.941964626312256
    8. '  ' → logprob: -7.066964626312256
    9. ',' → logprob: -7.191964626312256
    10. ' ' → logprob: -7.191964626312256

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039239260368049145
    2. '
' → logprob: -6.8789238929748535
    3. '    
' → logprob: -7.1289238929748535
    4. ' for' → logprob: -7.5039238929748535
    5. '<|end|>' → logprob: -7.8789238929748535
    6. 'for' → logprob: -8.378924369812012
    7. ' f' → logprob: -8.378924369812012
    8. '    ' → logprob: -8.753924369812012
    9. 'f' → logprob: -9.253924369812012
    10. ' ' → logprob: -9.503924369812012

Token 214: ' v' (ID: 323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0891323834657669
    2. 'stack' → logprob: -3.214132308959961
    3. 'dp' → logprob: -4.214132308959961
    4. 'p' → logprob: -4.714132308959961
    5. 'q' → logprob: -5.339132308959961
    6. 'a' → logprob: -5.589132308959961
    7. 'g' → logprob: -6.089132308959961
    8. 'd' → logprob: -6.589132308959961
    9. 's' → logprob: -6.714132308959961
    10. 'f' → logprob: -6.714132308959961

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5690200328826904
    2. '=' → logprob: -1.3190200328826904
    3. 'al' → logprob: -1.8190200328826904
    4. 'a' → logprob: -6.1940202713012695
    5. 'alid' → logprob: -7.3190202713012695
    6. '[' → logprob: -7.8190202713012695
    7. '   ' → logprob: -8.06902027130127
    8. ',' → logprob: -8.44402027130127
    9. 'alue' → logprob: -9.44402027130127
    10. 'alist' → logprob: -9.44402027130127

Token 216: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2152104377746582
    2. '[]' → logprob: -2.590210437774658
    3. ' [' → logprob: -2.590210437774658
    4. '[I' → logprob: -3.340210437774658
    5. 'I' → logprob: -6.340210437774658
    6. '[n' → logprob: -6.465210437774658
    7. 'LI' → logprob: -6.590210437774658
    8. ' []' → logprob: -6.965210437774658
    9. '[S' → logprob: -7.590210437774658
    10. '0' → logprob: -7.590210437774658

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.252908855676651
    2. ' for' → logprob: -1.5029088258743286
    3. ']' → logprob: -7.252908706665039
    4. ')' → logprob: -8.627908706665039
    5. ',' → logprob: -10.127908706665039
    6. '
' → logprob: -11.002908706665039
    7. '	for' → logprob: -11.377908706665039
    8. '()' → logprob: -12.127908706665039
    9. ' ' → logprob: -12.627908706665039
    10. 'f' → logprob: -12.627908706665039

Token 218: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2608289420604706
    2. ' range' → logprob: -1.760828971862793
    3. '_' → logprob: -3.010828971862793
    4. '(range' → logprob: -5.260828971862793
    5. 'in' → logprob: -6.010828971862793
    6. '_range' → logprob: -7.885828971862793
    7. ' in' → logprob: -7.885828971862793
    8. 'i' → logprob: -10.885828971862793
    9. '_in' → logprob: -11.760828971862793
    10. ' _' → logprob: -12.260828971862793

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5775405168533325
    2. 'in' → logprob: -0.8275405168533325
    3. 'range' → logprob: -6.827540397644043
    4. ' range' → logprob: -7.827540397644043
    5. '(range' → logprob: -9.702540397644043
    6. '(n' → logprob: -10.202540397644043
    7. 'n' → logprob: -11.827540397644043
    8. '(' → logprob: -12.077540397644043
    9. ' ' → logprob: -12.952540397644043
    10. ' n' → logprob: -14.202540397644043

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048289015889168
    2. ' range' → logprob: -4.511048316955566
    3. '(range' → logprob: -15.136048316955566
    4. 'rang' → logprob: -16.13604736328125
    5. '   ' → logprob: -17.01104736328125
    6. 'ran' → logprob: -17.13604736328125
    7. '	range' → logprob: -17.26104736328125
    8. 'r' → logprob: -17.38604736328125
    9. ' ' → logprob: -17.76104736328125
    10. 'ange' → logprob: -18.88604736328125

Token 221: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2200749754119897e-06
    2. 'n' → logprob: -13.625001907348633
    3. '(' → logprob: -14.000001907348633
    4. 'range' → logprob: -16.625001907348633
    5. '(range' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.625001907348633
    7. '(N' → logprob: -18.750001907348633
    8. '(
' → logprob: -19.500001907348633
    9. '((' → logprob: -19.625001907348633
    10. ' range' → logprob: -19.750001907348633

Token 222: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013834332639817148
    2. ')' → logprob: -9.125138282775879
    3. '   ' → logprob: -11.875138282775879
    4. ']' → logprob: -12.000138282775879
    5. ')]
' → logprob: -12.250138282775879
    6. ' )' → logprob: -12.500138282775879
    7. '])' → logprob: -12.750138282775879
    8. ')])' → logprob: -13.000138282775879
    9. '])]' → logprob: -13.875138282775879
    10. ')
' → logprob: -14.750138282775879

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045941125601530075
    2. '<|end|>' → logprob: -3.295941114425659
    3. '
' → logprob: -5.795941352844238
    4. '    
' → logprob: -5.920941352844238
    5. 'for' → logprob: -7.295941352844238
    6. ' for' → logprob: -7.420941352844238
    7. '	for' → logprob: -9.170941352844238
    8. ')' → logprob: -9.295941352844238
    9. 'n' → logprob: -9.545941352844238
    10. 'i' → logprob: -9.670941352844238

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.27567189931869507
    2. ' for' → logprob: -1.5256719589233398
    3. '   ' → logprob: -4.52567195892334
    4. 'i' → logprob: -5.15067195892334
    5. 'f' → logprob: -7.02567195892334
    6. 'u' → logprob: -7.40067195892334
    7. ' ' → logprob: -7.40067195892334
    8. ' i' → logprob: -7.65067195892334
    9. 'd' → logprob: -7.77567195892334
    10. 'x' → logprob: -7.90067195892334

Token 225: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1049569845199585
    2. ' i' → logprob: -2.354957103729248
    3. '_' → logprob: -5.354957103729248
    4. ' ' → logprob: -11.47995662689209
    5. 'i' → logprob: -12.85495662689209
    6. ' ' → logprob: -14.47995662689209
    7. '_i' → logprob: -14.85495662689209
    8. ' ‌' → logprob: -15.22995662689209
    9. ' __' → logprob: -15.60495662689209
    10. '  ' → logprob: -16.229957580566406

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014295374974608421
    2. 'in' → logprob: -4.26429557800293
    3. ' ' → logprob: -9.26429557800293
    4. ' i' → logprob: -11.01429557800293
    5. 'n' → logprob: -12.01429557800293
    6. 'range' → logprob: -12.51429557800293
    7. '	in' → logprob: -12.88929557800293
    8. '(' → logprob: -13.13929557800293
    9. ' n' → logprob: -13.76429557800293
    10. '    ' → logprob: -14.13929557800293

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048594411462545395
    2. ' range' → logprob: -3.0485944747924805
    3. '(range' → logprob: -12.04859447479248
    4. ' ' → logprob: -14.67359447479248
    5. '	range' → logprob: -15.29859447479248
    6. 'ange' → logprob: -16.048593521118164
    7. 'rang' → logprob: -16.423593521118164
    8. 'r' → logprob: -16.798593521118164
    9. 'ran' → logprob: -16.923593521118164
    10. 'ra' → logprob: -17.173593521118164

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002993544621858746
    2. '(' → logprob: -8.125299453735352
    3. '(
' → logprob: -13.000299453735352
    4. 'n' → logprob: -14.000299453735352
    5. ' (' → logprob: -16.62529945373535
    6. '1' → logprob: -17.37529945373535
    7. ' n' → logprob: -18.25029945373535
    8. '	n' → logprob: -18.62529945373535
    9. '(

' → logprob: -19.00029945373535
    10. '()' → logprob: -19.12529945373535

Token 229: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14297080039978027
    2. '):
' → logprob: -2.0179708003997803
    3. ' ):' → logprob: -9.14297103881836
    4. ')' → logprob: -9.26797103881836
    5. '-' → logprob: -9.76797103881836
    6. '   ' → logprob: -11.01797103881836
    7. ' ):
' → logprob: -11.51797103881836
    8. '):
' → logprob: -12.01797103881836
    9. ' -' → logprob: -13.89297103881836
    10. ' ' → logprob: -14.14297103881836

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024819616228342056
    2. ' ' → logprob: -6.002481937408447
    3. ')' → logprob: -13.252482414245605
    4. '2' → logprob: -13.502482414245605
    5. '
' → logprob: -14.127482414245605
    6. '   ' → logprob: -14.252482414245605
    7. ' )' → logprob: -14.252482414245605
    8. '  ' → logprob: -15.939982414245605
    9. '(' → logprob: -16.18998146057129
    10. '

' → logprob: -16.50248146057129

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023221833631396294
    2. '):
' → logprob: -3.898221731185913
    3. ')' → logprob: -6.523221969604492
    4. ' ):' → logprob: -6.773221969604492
    5. '   ' → logprob: -10.898221969604492
    6. ' ):
' → logprob: -11.273221969604492
    7. ':' → logprob: -11.398221969604492
    8. '):
' → logprob: -11.898221969604492
    9. ',' → logprob: -12.023221969604492
    10. ' )' → logprob: -12.398221969604492

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12259124964475632
    2. '   ' → logprob: -2.247591257095337
    3. 'u' → logprob: -5.622591018676758
    4. 'a' → logprob: -5.997591018676758
    5. ' u' → logprob: -6.622591018676758
    6. ' a' → logprob: -7.122591018676758
    7. '    ' → logprob: -7.497591018676758
    8. '	   ' → logprob: -8.622591018676758
    9. ' x' → logprob: -8.872591018676758
    10. '	u' → logprob: -9.122591018676758

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3122040331363678
    2. 'u' → logprob: -2.312204122543335
    3. ' a' → logprob: -2.312204122543335
    4. ' u' → logprob: -2.687204122543335
    5. '   ' → logprob: -6.312203884124756
    6. 'x' → logprob: -9.437204360961914
    7. '       ' → logprob: -10.312204360961914
    8. 'p' → logprob: -10.812204360961914
    9. ' p' → logprob: -11.187204360961914
    10. '    ' → logprob: -11.687204360961914

Token 234: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07709070295095444
    2. ' ,' → logprob: -2.7020907402038574
    3. ',b' → logprob: -4.952090740203857
    4. ' b' → logprob: -10.8270902633667
    5. ' ' → logprob: -11.3270902633667
    6. ',a' → logprob: -11.3270902633667
    7. ',v' → logprob: -12.7020902633667
    8. 'b' → logprob: -12.8270902633667
    9. ',n' → logprob: -13.4520902633667
    10. ',
' → logprob: -13.7020902633667

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014150768518448
    2. ' =' → logprob: -1.7014150619506836
    3. '=input' → logprob: -13.951415061950684
    4. '=line' → logprob: -14.826415061950684
    5. ',' → logprob: -16.326416015625
    6. '=a' → logprob: -16.451416015625
    7. '=int' → logprob: -16.701416015625
    8. ' ' → logprob: -16.826416015625
    9. '＝' → logprob: -16.826416015625
    10. '=i' → logprob: -17.326416015625

Token 236: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.13029402494430542
    2. ' LI' → logprob: -2.13029408454895
    3. 'I' → logprob: -5.880293846130371
    4. ' I' → logprob: -8.130293846130371
    5. ' ' → logprob: -9.005293846130371
    6. 'L' → logprob: -9.505293846130371
    7. ' L' → logprob: -10.255293846130371
    8. ' map' → logprob: -10.755293846130371
    9. 'map' → logprob: -12.130293846130371
    10. 'Li' → logprob: -12.505293846130371

Token 237: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.111979357432574e-05
    2. '()]' → logprob: -9.62507152557373
    3. '()
' → logprob: -12.87507152557373
    4. ' ()' → logprob: -13.75007152557373
    5. '(' → logprob: -14.75007152557373
    6. '(),' → logprob: -15.37507152557373
    7. '();' → logprob: -15.62507152557373
    8. '()\' → logprob: -16.000070571899414
    9. '().' → logprob: -16.500070571899414
    10. '()[' → logprob: -16.625070571899414

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5933836698532104
    2. '<|end|>' → logprob: -0.8433836698532104
    3. '
' → logprob: -4.9683837890625
    4. ')' → logprob: -6.0933837890625
    5. '<|end|>' → logprob: -6.0933837890625
    6. '   ' → logprob: -6.3433837890625
    7. ' ' → logprob: -6.7183837890625
    8. 'a' → logprob: -7.4683837890625
    9. '#' → logprob: -8.0933837890625
    10. '[' → logprob: -8.2183837890625

Token 239: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.17288635671138763
    2. ' a' → logprob: -1.9228863716125488
    3. 'v' → logprob: -4.547886371612549
    4. ' v' → logprob: -6.297886371612549
    5. '   ' → logprob: -9.17288589477539
    6. 'f' → logprob: -10.54788589477539
    7. ' f' → logprob: -11.79788589477539
    8. 'u' → logprob: -12.04788589477539
    9. '       ' → logprob: -12.92288589477539
    10. '	a' → logprob: -13.04788589477539

Token 240: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.38326650857925415
    2. '-=' → logprob: -1.2582664489746094
    3. '-' → logprob: -3.3832664489746094
    4. ' -' → logprob: -9.25826644897461
    5. ',' → logprob: -9.38326644897461
    6. '   ' → logprob: -10.00826644897461
    7. '=' → logprob: -11.00826644897461
    8. ' ' → logprob: -11.25826644897461
    9. ' =' → logprob: -11.88326644897461
    10. 'a' → logprob: -12.25826644897461

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.37523078918457
    4. '```' → logprob: -18.00023078918457
    5. '１' → logprob: -19.00023078918457
    6. '<|end|>' → logprob: -19.43773078918457
    7. '
' → logprob: -20.12523078918457
    8. '  ' → logprob: -20.31273078918457
    9. '۱' → logprob: -20.31273078918457
    10. '0' → logprob: -20.37523078918457

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '１' → logprob: -20.062501907348633
    6. '<|end|>' → logprob: -20.625001907348633
    7. '۱' → logprob: -21.125001907348633
    8. '2' → logprob: -21.750001907348633
    9. '१' → logprob: -21.937501907348633
    10. '১' → logprob: -21.937501907348633

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6704713106155396
    2. 'b' → logprob: -1.5454713106155396
    3. '
' → logprob: -1.6704713106155396
    4. '<|end|>' → logprob: -3.04547119140625
    5. ' b' → logprob: -4.04547119140625
    6. ',b' → logprob: -4.29547119140625
    7. ',' → logprob: -5.54547119140625
    8. ';b' → logprob: -6.04547119140625
    9. ' 
' → logprob: -7.42047119140625
    10. ';' → logprob: -8.04547119140625

Token 244: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.676292231422849e-05
    2. ' b' → logprob: -11.000017166137695
    3. '       ' → logprob: -17.625017166137695
    4. '   ' → logprob: -18.875017166137695
    5. '	b' → logprob: -19.500017166137695
    6. '
' → logprob: -22.625017166137695
    7. '_b' → logprob: -22.750017166137695
    8. ',b' → logprob: -23.125017166137695
    9. ' ' → logprob: -23.625017166137695
    10. '```' → logprob: -23.750017166137695

Token 246: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.01202838309109211
    2. '-=' → logprob: -4.512028217315674
    3. '-' → logprob: -7.012028217315674
    4. ' ' → logprob: -10.137028694152832
    5. ' -' → logprob: -10.762028694152832
    6. '    ' → logprob: -12.137028694152832
    7. '=' → logprob: -12.137028694152832
    8. '   ' → logprob: -13.137028694152832
    9. ' =' → logprob: -13.762028694152832
    10. ')' → logprob: -13.887028694152832

Token 247: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026304941624403
    2. ' ' → logprob: -3.6513049602508545
    3. '<|end|>' → logprob: -12.651305198669434
    4. '   ' → logprob: -14.776305198669434
    5. '```' → logprob: -15.401305198669434
    6. '2' → logprob: -15.901305198669434
    7. '  ' → logprob: -16.401304244995117
    8. ' ' → logprob: -16.901304244995117
    9. '	' → logprob: -16.901304244995117
    10. '
' → logprob: -16.963804244995117

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -10.62502670288086
    3. '<|end|>' → logprob: -14.37502670288086
    4. '```' → logprob: -15.87502670288086
    5. '14' → logprob: -15.93752670288086
    6. '146' → logprob: -16.18752670288086
    7. '   ' → logprob: -16.31252670288086
    8. '11' → logprob: -16.37502670288086
    9. '114' → logprob: -16.50002670288086
    10. '116' → logprob: -16.50002670288086

Token 249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011565856635570526
    2. '
' → logprob: -4.511565685272217
    3. 'v' → logprob: -8.386566162109375
    4. '   ' → logprob: -8.636566162109375
    5. '
' → logprob: -10.011566162109375
    6. ',
' → logprob: -10.386566162109375
    7. ',' → logprob: -11.511566162109375
    8. ' v' → logprob: -11.886566162109375
    9. '<|end|>' → logprob: -12.136566162109375
    10. '        
' → logprob: -12.886566162109375

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10362999141216278
    2. '
' → logprob: -2.3536300659179688
    3. 'v' → logprob: -6.478630065917969
    4. '   ' → logprob: -7.103630065917969
    5. '<|end|>' → logprob: -7.853630065917969
    6. ' v' → logprob: -8.228630065917969
    7. '
' → logprob: -8.728630065917969
    8. '	v' → logprob: -9.728630065917969
    9. ',
' → logprob: -9.853630065917969
    10. ',' → logprob: -10.853630065917969

Token 251: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.0683535037969705e-05
    2. 'f' → logprob: -11.87501049041748
    3. ' v' → logprob: -12.87501049041748
    4. '   ' → logprob: -13.75001049041748
    5. '       ' → logprob: -17.125011444091797
    6. '
' → logprob: -17.375011444091797
    7. '	v' → logprob: -18.250011444091797
    8. '```' → logprob: -19.250011444091797
    9. '    
' → logprob: -19.500011444091797
    10. '        
' → logprob: -20.375011444091797

Token 252: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.2127087504486553e-05
    2. '[b' → logprob: -11.375021934509277
    3. 'a' → logprob: -11.625021934509277
    4. '[' → logprob: -13.375021934509277
    5. ' [' → logprob: -16.500022888183594
    6. '[v' → logprob: -17.125022888183594
    7. '[u' → logprob: -18.250022888183594
    8. '
' → logprob: -18.750022888183594
    9. ')[' → logprob: -18.875022888183594
    10. '[i' → logprob: -19.000022888183594

Token 253: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00015908108616713434
    2. ']' → logprob: -8.75015926361084
    3. ' ].' → logprob: -14.87515926361084
    4. '.append' → logprob: -16.000158309936523
    5. '[' → logprob: -17.000158309936523
    6. '][' → logprob: -17.625158309936523
    7. '.' → logprob: -17.750158309936523
    8. ']
' → logprob: -18.375158309936523
    9. '   ' → logprob: -18.750158309936523
    10. '"].' → logprob: -19.125158309936523

Token 254: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -14.750000953674316
    3. 'appen' → logprob: -15.500000953674316
    4. '.append' → logprob: -16.625
    5. 'app' → logprob: -17.75
    6. 'ap' → logprob: -18.5
    7. 'appe' → logprob: -19.75
    8. 'push' → logprob: -20.125
    9. '	append' → logprob: -20.375
    10. 'add' → logprob: -21.125

Token 255: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. 'b' → logprob: -15.75000286102295
    4. '(
' → logprob: -16.125003814697266
    5. '(a' → logprob: -17.625003814697266
    6. ' (' → logprob: -18.625003814697266
    7. ')b' → logprob: -19.875003814697266
    8. '((' → logprob: -20.625003814697266
    9. '	b' → logprob: -20.750003814697266
    10. '(v' → logprob: -20.875003814697266

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017227731877937913
    2. ')
' → logprob: -6.376722812652588
    3. '       ' → logprob: -11.50172233581543
    4. ')v' → logprob: -12.62672233581543
    5. ' )' → logprob: -12.75172233581543
    6. '),' → logprob: -14.25172233581543
    7. '   ' → logprob: -14.50172233581543
    8. '<|end|>' → logprob: -14.50172233581543
    9. ')b' → logprob: -14.62672233581543
    10. ')#' → logprob: -15.00172233581543

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002353526186197996
    2. '   ' → logprob: -6.502353668212891
    3. '<|end|>' → logprob: -7.752353668212891
    4. 'v' → logprob: -8.00235366821289
    5. ' v' → logprob: -10.62735366821289
    6. '	v' → logprob: -11.25235366821289
    7. ',' → logprob: -11.62735366821289
    8. ')' → logprob: -11.75235366821289
    9. '	' → logprob: -11.87735366821289
    10. '
' → logprob: -12.12735366821289

Token 258: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.011253184638917446
    2. ' v' → logprob: -4.511253356933594
    3. '       ' → logprob: -8.511253356933594
    4. '	v' → logprob: -12.511253356933594
    5. ')v' → logprob: -15.386253356933594
    6. ',v' → logprob: -16.511253356933594
    7. '   ' → logprob: -16.886253356933594
    8. '<|end|>' → logprob: -17.386253356933594
    9. ' ' → logprob: -17.761253356933594
    10. '.v' → logprob: -17.886253356933594

Token 259: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -13.000005722045898
    3. 'b' → logprob: -13.250005722045898
    4. '[v' → logprob: -13.875005722045898
    5. '[a' → logprob: -15.250005722045898
    6. ' [' → logprob: -16.5000057220459
    7. '```' → logprob: -17.8750057220459
    8. '[s' → logprob: -19.0000057220459
    9. '	b' → logprob: -19.3750057220459
    10. '[
' → logprob: -19.5000057220459

Token 260: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0017449157312512398
    2. '.' → logprob: -6.876744747161865
    3. ']' → logprob: -7.626744747161865
    4. ').' → logprob: -8.626745223999023
    5. '.append' → logprob: -10.876745223999023
    6. ' ].' → logprob: -11.751745223999023
    7. '[' → logprob: -12.126745223999023
    8. ' .' → logprob: -12.251745223999023
    9. '[a' → logprob: -12.751745223999023
    10. '   ' → logprob: -13.001745223999023

Token 261: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. 'appen' → logprob: -13.875001907348633
    3. ' append' → logprob: -15.375001907348633
    4. 'app' → logprob: -15.875001907348633
    5. '.append' → logprob: -16.375001907348633
    6. 'a' → logprob: -17.125001907348633
    7. '	append' → logprob: -17.750001907348633
    8. '```' → logprob: -19.375001907348633
    9. 'add' → logprob: -19.750001907348633
    10. 'insert' → logprob: -20.375001907348633

Token 262: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. '(
' → logprob: -16.1250057220459
    4. 'a' → logprob: -16.1250057220459
    5. '(A' → logprob: -20.6250057220459
    6. ' (' → logprob: -21.0000057220459
    7. '(

' → logprob: -22.3750057220459
    8. '(
' → logprob: -22.8750057220459
    9. ')a' → logprob: -23.1250057220459
    10. '((' → logprob: -23.1250057220459

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.719917630311102e-05
    2. ')
' → logprob: -9.500077247619629
    3. ' )' → logprob: -14.000077247619629
    4. '       ' → logprob: -14.750077247619629
    5. ')n' → logprob: -15.125077247619629
    6. '   ' → logprob: -15.625077247619629
    7. '
' → logprob: -16.125076293945312
    8. ')v' → logprob: -16.250076293945312
    9. ')return' → logprob: -16.500076293945312
    10. ')
' → logprob: -17.000076293945312

Token 264: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12223632633686066
    2. '   ' → logprob: -2.7472362518310547
    3. '<|end|>' → logprob: -3.1222362518310547
    4. '  
' → logprob: -5.622236251831055
    5. '    
' → logprob: -6.372236251831055
    6. ' 
' → logprob: -7.622236251831055
    7. ')' → logprob: -8.872236251831055
    8. 'def' → logprob: -8.997236251831055
    9. ',' → logprob: -8.997236251831055
    10. '   
' → logprob: -9.122236251831055

Token 265: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.5681388974189758
    2. '
' → logprob: -1.318138837814331
    3. ' f' → logprob: -2.193138837814331
    4. '   ' → logprob: -3.318138837814331
    5. ')' → logprob: -5.44313907623291
    6. 'def' → logprob: -5.56813907623291
    7. '<|end|>' → logprob: -5.56813907623291
    8. ' ' → logprob: -6.19313907623291
    9. ' 
' → logprob: -6.31813907623291
    10. 'n' → logprob: -8.06813907623291

Token 266: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.004151530098170042
    2. '[b' → logprob: -5.629151344299316
    3. '[' → logprob: -8.004151344299316
    4. 'a' → logprob: -9.504151344299316
    5. '[i' → logprob: -9.754151344299316
    6. '[v' → logprob: -10.129151344299316
    7. '[f' → logprob: -10.504151344299316
    8. '[
' → logprob: -12.629151344299316
    9. 'b' → logprob: -12.879151344299316
    10. '[c' → logprob: -13.504151344299316

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030332699418067932
    2. ']+=' → logprob: -3.5303328037261963
    3. ']+' → logprob: -7.780332565307617
    4. ']=' → logprob: -10.155332565307617
    5. '][' → logprob: -10.155332565307617
    6. '[' → logprob: -10.280332565307617
    7. '[a' → logprob: -10.780332565307617
    8. '[b' → logprob: -12.030332565307617
    9. ']
' → logprob: -12.655332565307617
    10. ']++;
' → logprob: -12.780332565307617

Token 268: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15423274040222168
    2. '=' → logprob: -2.6542327404022217
    3. ' +=' → logprob: -3.4042327404022217
    4. '[' → logprob: -4.029232978820801
    5. '+' → logprob: -4.154232978820801
    6. ']+=' → logprob: -5.404232978820801
    7. '|' → logprob: -7.779232978820801
    8. ']' → logprob: -7.904232978820801
    9. ' =' → logprob: -8.6542329788208
    10. ')' → logprob: -9.5292329788208

Token 269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'v' → logprob: -16.75000762939453
    4. 'f' → logprob: -17.87500762939453
    5. 'b' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.75000762939453
    7. '2' → logprob: -19.25000762939453
    8. '0' → logprob: -19.87500762939453
    9. '
' → logprob: -20.56250762939453
    10. 's' → logprob: -21.06250762939453

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'f' → logprob: -15.000001907348633
    4. '2' → logprob: -15.750001907348633
    5. 'v' → logprob: -15.875001907348633
    6. 'b' → logprob: -17.625001907348633
    7. '0' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.062501907348633
    9. '-' → logprob: -18.562501907348633
    10. '
' → logprob: -18.875001907348633

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007865179213695228
    2. '<|end|>' → logprob: -7.375786304473877
    3. '
' → logprob: -9.375786781311035
    4. '   ' → logprob: -10.250786781311035
    5. 'f' → logprob: -11.000786781311035
    6. '	' → logprob: -11.750786781311035
    7. ' f' → logprob: -12.500786781311035
    8. 'v' → logprob: -13.000786781311035
    9. ' ' → logprob: -13.125786781311035
    10. '<|end|>' → logprob: -13.750786781311035

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015024791937321424
    2. '<|end|>' → logprob: -7.001502513885498
    3. '   ' → logprob: -8.25150203704834
    4. 'f' → logprob: -8.62650203704834
    5. ' ' → logprob: -10.00150203704834
    6. ' f' → logprob: -10.75150203704834
    7. 'v' → logprob: -10.75150203704834
    8. 'b' → logprob: -11.12650203704834
    9. ',' → logprob: -11.87650203704834
    10. '
' → logprob: -12.00150203704834

Token 273: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.0007106438861228526
    2. '       ' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.750710487365723
    4. ' f' → logprob: -15.500710487365723
    5. '
' → logprob: -17.00071144104004
    6. '           ' → logprob: -17.50071144104004
    7. '1' → logprob: -18.12571144104004
    8. '```' → logprob: -18.12571144104004
    9. '        ' → logprob: -18.50071144104004
    10. '	f' → logprob: -18.87571144104004

Token 274: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.165027217415627e-05
    2. 'b' → logprob: -11.000021934509277
    3. '[' → logprob: -12.375021934509277
    4. '[f' → logprob: -15.125021934509277
    5. ' [' → logprob: -15.875021934509277
    6. '[
' → logprob: -16.75002098083496
    7. '	b' → logprob: -16.75002098083496
    8. ' b' → logprob: -17.00002098083496
    9. '[a' → logprob: -17.50002098083496
    10. '```' → logprob: -17.62502098083496

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023122651036828756
    2. ' ]' → logprob: -6.502312183380127
    3. ']+=' → logprob: -7.377312183380127
    4. ')' → logprob: -8.627312660217285
    5. '<|end|>' → logprob: -12.502312660217285
    6. ']+' → logprob: -14.877312660217285
    7. ')]' → logprob: -15.127312660217285
    8. '']' → logprob: -15.252312660217285
    9. ' )' → logprob: -15.752312660217285
    10. '[' → logprob: -16.62731170654297

Token 276: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01884998381137848
    2. ' +=' → logprob: -4.143849849700928
    3. '+' → logprob: -6.018849849700928
    4. ']+=' → logprob: -7.893849849700928
    5. '[' → logprob: -13.643850326538086
    6. '```' → logprob: -13.893850326538086
    7. ' ' → logprob: -14.018850326538086
    8. '+='' → logprob: -14.143850326538086
    9. '   ' → logprob: -14.518850326538086
    10. ' +' → logprob: -14.518850326538086

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -18.375051498413086
    4. '  ' → logprob: -21.250051498413086
    5. '```' → logprob: -21.250051498413086
    6. '１' → logprob: -21.437551498413086
    7. '
' → logprob: -21.812551498413086
    8. '0' → logprob: -21.875051498413086
    9. ')' → logprob: -23.125051498413086
    10. ' ' → logprob: -23.187551498413086

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.500001907348633
    4. '  ' → logprob: -22.125001907348633
    5. '１' → logprob: -22.125001907348633
    6. '```' → logprob: -22.125001907348633
    7. '
' → logprob: -22.500001907348633
    8. '-' → logprob: -23.062501907348633
    9. ')' → logprob: -23.375001907348633
    10. '۱' → logprob: -23.500001907348633

Token 279: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37054571509361267
    2. '   ' → logprob: -1.495545744895935
    3. '<|end|>' → logprob: -2.4955456256866455
    4. '    
' → logprob: -6.245545864105225
    5. '<|end|>' → logprob: -7.495545864105225
    6. 'def' → logprob: -8.370545387268066
    7. '
' → logprob: -9.620545387268066
    8. '  
' → logprob: -9.870545387268066
    9. ' 
' → logprob: -10.120545387268066
    10. ')' → logprob: -11.245545387268066

Token 280: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23033809661865234
    2. '   ' → logprob: -1.9803380966186523
    3. '<|end|>' → logprob: -2.7303380966186523
    4. '    
' → logprob: -6.855338096618652
    5. '  
' → logprob: -8.230338096618652
    6. ' 
' → logprob: -8.605338096618652
    7. 'def' → logprob: -8.605338096618652
    8. '<|end|>' → logprob: -9.105338096618652
    9. ')' → logprob: -9.355338096618652
    10. ' for' → logprob: -9.355338096618652

Token 281: ' a' (ID: 261)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.78989177942276
    2. '   ' → logprob: -1.0398917198181152
    3. 'dp' → logprob: -2.9148917198181152
    4. 'p' → logprob: -3.6648917198181152
    5. 'd' → logprob: -3.7898917198181152
    6. ' q' → logprob: -4.289891719818115
    7. 'for' → logprob: -4.539891719818115
    8. 'pq' → logprob: -4.664891719818115
    9. ' for' → logprob: -4.914891719818115
    10. 'queue' → logprob: -5.164891719818115

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3326139748096466
    2. 'ns' → logprob: -1.7076139450073242
    3. '=' → logprob: -2.832613945007324
    4. 'll' → logprob: -4.332613945007324
    5. 'queue' → logprob: -4.457613945007324
    6. ',' → logprob: -5.457613945007324
    7. '_queue' → logprob: -5.582613945007324
    8. 'd' → logprob: -7.082613945007324
    9. 'deque' → logprob: -7.332613945007324
    10. 'v' → logprob: -7.457613945007324

Token 283: ' LI' (ID: 14875)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1561263799667358
    2. 'deque' → logprob: -1.5311263799667358
    3. '[' → logprob: -2.2811264991760254
    4. 'f' → logprob: -2.4061264991760254
    5. '0' → logprob: -2.4061264991760254
    6. 'max' → logprob: -2.5311264991760254
    7. 'sorted' → logprob: -3.2811264991760254
    8. 'min' → logprob: -4.406126499176025
    9. '[max' → logprob: -4.781126499176025
    10. ' []' → logprob: -5.156126499176025

Token 284: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.53050296427682e-05
    2. '()
' → logprob: -9.87508487701416
    3. '(n' → logprob: -11.00008487701416
    4. '(' → logprob: -11.25008487701416
    5. '()]' → logprob: -13.62508487701416
    6. ' ()' → logprob: -13.87508487701416
    7. '()[' → logprob: -14.25008487701416
    8. '())' → logprob: -14.50008487701416
    9. '(),' → logprob: -15.87508487701416
    10. '()
' → logprob: -15.87508487701416

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023639552295207977
    2. '<|end|>' → logprob: -4.023639678955078
    3. ' for' → logprob: -6.148639678955078
    4. '
' → logprob: -6.648639678955078
    5. '[' → logprob: -7.773639678955078
    6. 'for' → logprob: -7.898639678955078
    7. '    
' → logprob: -8.523639678955078
    8. ' ' → logprob: -9.023639678955078
    9. ')' → logprob: -9.023639678955078
    10. '<|end|>' → logprob: -9.148639678955078

Token 286: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3050150871276855
    2. 'for' → logprob: -1.4300150871276855
    3. '   ' → logprob: -1.8050150871276855
    4. ' for' → logprob: -1.9300150871276855
    5. 'd' → logprob: -3.3050150871276855
    6. 'p' → logprob: -3.6800150871276855
    7. 'dp' → logprob: -3.8050150871276855
    8. 'f' → logprob: -4.4300150871276855
    9. ' a' → logprob: -4.6800150871276855
    10. 'c' → logprob: -4.8050150871276855

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1017034649848938
    2. '=' → logprob: -2.351703405380249
    3. '()' → logprob: -7.226703643798828
    4. ')' → logprob: -8.351703643798828
    5. '_' → logprob: -8.351703643798828
    6. '.' → logprob: -9.476703643798828
    7. ',' → logprob: -10.101703643798828
    8. '[' → logprob: -10.101703643798828
    9. ' )' → logprob: -10.476703643798828
    10. '[:]' → logprob: -10.601703643798828

Token 288: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.07917739450931549
    2. ' LI' → logprob: -2.5791773796081543
    3. 'L' → logprob: -9.829177856445312
    4. '[' → logprob: -9.829177856445312
    5. ' ' → logprob: -9.829177856445312
    6. 'I' → logprob: -10.204177856445312
    7. '[]' → logprob: -10.704177856445312
    8. 'a' → logprob: -11.204177856445312
    9. ' L' → logprob: -11.579177856445312
    10. ' [' → logprob: -11.829177856445312

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.6895233531831764e-05
    2. '()
' → logprob: -11.50002670288086
    3. '(' → logprob: -11.75002670288086
    4. '()]' → logprob: -12.37502670288086
    5. ' ()' → logprob: -13.00002670288086
    6. '()[' → logprob: -14.75002670288086
    7. '()>' → logprob: -15.12502670288086
    8. '())' → logprob: -15.25002670288086
    9. '()

' → logprob: -15.25002670288086
    10. '()\' → logprob: -15.37502670288086

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05851282179355621
    2. '
' → logprob: -3.0585129261016846
    3. '<|end|>' → logprob: -4.9335126876831055
    4. ' for' → logprob: -6.8085126876831055
    5. '    
' → logprob: -7.8085126876831055
    6. ')' → logprob: -8.683512687683105
    7. ' ' → logprob: -9.183512687683105
    8. 'n' → logprob: -9.308512687683105
    9. 'for' → logprob: -9.308512687683105
    10. '#' → logprob: -9.308512687683105

Token 291: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7412183284759521
    2. 'c' (adapté à ' c') → logprob: -1.3662183284759521
    3. 'd' → logprob: -2.616218328475952
    4. 'dp' → logprob: -3.116218328475952
    5. 'for' → logprob: -3.241218328475952
    6. 'f' → logprob: -4.366218566894531
    7. 'q' → logprob: -4.491218566894531
    8. 'x' → logprob: -4.616218566894531
    9. 'a' → logprob: -4.741218566894531
    10. 'u' → logprob: -4.866218566894531

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0183526873588562
    2. '=' → logprob: -4.018352508544922
    3. '=[]' → logprob: -9.643352508544922
    4. ',' → logprob: -10.268352508544922
    5. '_' → logprob: -10.393352508544922
    6. 'a' → logprob: -11.143352508544922
    7. ' ' → logprob: -11.393352508544922
    8. '[' → logprob: -11.643352508544922
    9. ' =[' → logprob: -11.893352508544922
    10. '=[' → logprob: -12.143352508544922

Token 293: ' [' (ID: 723)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.20864558219909668
    2. ' LI' → logprob: -2.4586455821990967
    3. '[' → logprob: -3.0836455821990967
    4. ' [' → logprob: -3.3336455821990967
    5. '[a' → logprob: -5.208645820617676
    6. 'I' → logprob: -5.458645820617676
    7. '[I' → logprob: -5.583645820617676
    8. '[]' → logprob: -6.083645820617676
    9. 'a' → logprob: -6.333645820617676
    10. ' I' → logprob: -7.458645820617676

Token 294: 'b' (ID: 65)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003316384507343173
    2. 'a' → logprob: -6.878316402435303
    3. 'False' → logprob: -8.003315925598145
    4. ']' → logprob: -8.128315925598145
    5. '[' → logprob: -8.128315925598145
    6. '-' → logprob: -8.628315925598145
    7. 'max' → logprob: -8.628315925598145
    8. '[a' → logprob: -9.253315925598145
    9. 'f' → logprob: -9.378315925598145
    10. 'int' → logprob: -9.503315925598145

Token 295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02376074157655239
    2. '[' → logprob: -4.648760795593262
    3. '[a' → logprob: -4.773760795593262
    4. '[:]' → logprob: -5.773760795593262
    5. ']' → logprob: -6.648760795593262
    6. '[:' → logprob: -7.648760795593262
    7. '.copy' → logprob: -8.773760795593262
    8. '[b' → logprob: -9.648760795593262
    9. '])' → logprob: -9.773760795593262
    10. '[j' → logprob: -9.898760795593262

Token 296: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2059444636106491
    2. ']-' → logprob: -1.8309444189071655
    3. '-' → logprob: -4.205944538116455
    4. ']+' → logprob: -4.955944538116455
    5. ']*' → logprob: -5.705944538116455
    6. ' -' → logprob: -8.205944061279297
    7. '+' → logprob: -10.080944061279297
    8. ']%' → logprob: -10.330944061279297
    9. '*' → logprob: -10.455944061279297
    10. ' for' → logprob: -10.580944061279297

Token 297: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00034023032640106976
    2. ' a' → logprob: -8.625340461730957
    3. '1' → logprob: -8.750340461730957
    4. ')a' → logprob: -14.625340461730957
    5. ')' → logprob: -14.750340461730957
    6. '	a' → logprob: -15.125340461730957
    7. ' ' → logprob: -15.250340461730957
    8. ''a' → logprob: -15.375340461730957
    9. '(' → logprob: -15.875340461730957
    10. 'c' → logprob: -16.00033950805664

Token 298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '(i' → logprob: -13.000005722045898
    3. '[' → logprob: -13.500005722045898
    4. 'i' → logprob: -14.125005722045898
    5. ' [' → logprob: -15.125005722045898
    6. '[
' → logprob: -15.250005722045898
    7. ']' → logprob: -15.375005722045898
    8. ' i' → logprob: -15.375005722045898
    9. '[I' → logprob: -15.750005722045898
    10. ')i' → logprob: -16.3750057220459

Token 299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017309773713350296
    2. ' for' → logprob: -4.767309665679932
    3. 'for' → logprob: -4.767309665679932
    4. ' ]' → logprob: -9.14231014251709
    5. ' ' → logprob: -11.26731014251709
    6. ']+' → logprob: -11.76731014251709
    7. ')' → logprob: -12.01731014251709
    8. ']*' → logprob: -12.01731014251709
    9. '	for' → logprob: -12.51731014251709
    10. ')]' → logprob: -12.89231014251709

Token 300: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3893895149230957
    2. 'for' → logprob: -1.1393895149230957
    3. '	for' → logprob: -6.514389514923096
    4. ']' → logprob: -7.264389514923096
    5. ' ' → logprob: -8.639389038085938
    6. ')' → logprob: -9.139389038085938
    7. '   ' → logprob: -10.889389038085938
    8. '+' → logprob: -11.764389038085938
    9. '    ' → logprob: -12.389389038085938
    10. '  ' → logprob: -12.389389038085938

Token 301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326213479042053
    2. ' i' → logprob: -1.3132621049880981
    3. ' range' → logprob: -15.313261985778809
    4. '	i' → logprob: -16.063262939453125
    5. ' in' → logprob: -16.313262939453125
    6. 'range' → logprob: -16.688262939453125
    7. ' ' → logprob: -18.438262939453125
    8. '(i' → logprob: -19.563262939453125
    9. ' ' → logprob: -20.188262939453125
    10. ')i' → logprob: -20.438262939453125

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04878493398427963
    2. 'in' → logprob: -3.0487849712371826
    3. 'range' → logprob: -9.048785209655762
    4. ' ' → logprob: -10.548785209655762
    5. ' i' → logprob: -11.048785209655762
    6. ' range' → logprob: -11.298785209655762
    7. 'n' → logprob: -11.423785209655762
    8. 'i' → logprob: -12.298785209655762
    9. '<|end|>' → logprob: -13.173785209655762
    10. ',' → logprob: -13.173785209655762

Token 303: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. ' ' → logprob: -16.25247573852539
    4. '	range' → logprob: -16.37747573852539
    5. '(range' → logprob: -16.50247573852539
    6. 'r' → logprob: -17.62747573852539
    7. 'rang' → logprob: -17.75247573852539
    8. '   ' → logprob: -17.87747573852539
    9. 'ra' → logprob: -18.37747573852539
    10. 'ran' → logprob: -18.87747573852539

Token 304: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00046296243090182543
    2. 'n' → logprob: -7.750463008880615
    3. '(' → logprob: -10.375462532043457
    4. '(
' → logprob: -14.125462532043457
    5. ' (' → logprob: -16.000463485717773
    6. ' n' → logprob: -16.250463485717773
    7. '(len' → logprob: -17.250463485717773
    8. '	n' → logprob: -17.625463485717773
    9. ')n' → logprob: -19.375463485717773
    10. ',n' → logprob: -19.500463485717773

Token 305: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005160979344509542
    2. ']' → logprob: -8.250515937805176
    3. ')' → logprob: -8.375515937805176
    4. ' )' → logprob: -11.500515937805176
    5. '   ' → logprob: -12.500515937805176
    6. '])]' → logprob: -13.125515937805176
    7. ')])' → logprob: -13.250515937805176
    8. ')]
' → logprob: -13.250515937805176
    9. ' ]' → logprob: -13.875515937805176
    10. ')],' → logprob: -14.500515937805176

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08552873134613037
    2. '<|end|>' → logprob: -3.46052885055542
    3. 'def' → logprob: -3.83552885055542
    4. '
' → logprob: -3.83552885055542
    5. '    
' → logprob: -5.71052885055542
    6. 'dp' → logprob: -6.46052885055542
    7. ')' → logprob: -7.71052885055542
    8. '#' → logprob: -7.96052885055542
    9. 'for' → logprob: -8.585528373718262
    10. ' for' → logprob: -8.585528373718262

Token 307: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2431415617465973
    2. 'dp' → logprob: -2.1181416511535645
    3. 'def' → logprob: -3.6181416511535645
    4. '
' → logprob: -4.3681416511535645
    5. '<|end|>' → logprob: -4.4931416511535645
    6. 'stack' → logprob: -4.6181416511535645
    7. ' dp' → logprob: -5.1181416511535645
    8. ')' → logprob: -5.4931416511535645
    9. '    
' → logprob: -5.9931416511535645
    10. ' for' → logprob: -6.2431416511535645

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009805436246097088
    2. '=' → logprob: -4.634805202484131
    3. ',' → logprob: -10.759805679321289
    4. ' ' → logprob: -11.134805679321289
    5. ' =[' → logprob: -12.384805679321289
    6. '[' → logprob: -12.759805679321289
    7. ' =
' → logprob: -13.759805679321289
    8. ' ,' → logprob: -14.009805679321289
    9. '.' → logprob: -14.259805679321289
    10. '=[]' → logprob: -14.509805679321289

Token 309: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4268094003200531
    2. ' [' → logprob: -1.5518094301223755
    3. '[c' → logprob: -2.301809310913086
    4. 'c' → logprob: -4.801809310913086
    5. 'deque' → logprob: -5.176809310913086
    6. '[f' → logprob: -5.676809310913086
    7. '0' → logprob: -5.676809310913086
    8. '[a' → logprob: -5.801809310913086
    9. '[max' → logprob: -5.926809310913086
    10. ' c' → logprob: -6.801809310913086

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08059591799974442
    2. 'abs' → logprob: -3.5805959701538086
    3. 'c' → logprob: -3.8305959701538086
    4. '(' → logprob: -4.330595970153809
    5. 'f' → logprob: -5.330595970153809
    6. 'math' → logprob: -6.205595970153809
    7. '(c' → logprob: -6.205595970153809
    8. '[' → logprob: -6.705595970153809
    9. '1' → logprob: -7.580595970153809
    10. '(f' → logprob: -7.705595970153809

Token 311: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.18039079010486603
    2. ']' → logprob: -1.8053908348083496
    3. ']*(' → logprob: -7.55539083480835
    4. ' ]' → logprob: -9.805390357971191
    5. 'for' → logprob: -10.805390357971191
    6. ' for' → logprob: -10.805390357971191
    7. ']+' → logprob: -11.930390357971191
    8. 'n' → logprob: -12.305390357971191
    9. ',n' → logprob: -12.430390357971191
    10. '
' → logprob: -13.305390357971191

Token 312: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003673829138278961
    2. '(n' → logprob: -5.628674030303955
    3. '(' → logprob: -9.628673553466797
    4. ' n' → logprob: -13.878673553466797
    5. '2' → logprob: -13.878673553466797
    6. '3' → logprob: -14.128673553466797
    7. '1' → logprob: -14.253673553466797
    8. ' (' → logprob: -14.253673553466797
    9. '
' → logprob: -14.878673553466797
    10. '   ' → logprob: -14.878673553466797

Token 313: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6771366000175476
    2. '   ' → logprob: -0.8021366000175476
    3. ' for' → logprob: -5.177136421203613
    4. ' queue' → logprob: -5.302136421203613
    5. 'def' → logprob: -5.552136421203613
    6. '<|end|>' → logprob: -5.552136421203613
    7. '    
' → logprob: -5.677136421203613
    8. 'stack' → logprob: -6.177136421203613
    9. '	stack' → logprob: -6.177136421203613
    10. ' stack' → logprob: -6.177136421203613

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02363908477127552
    2. ' queue' → logprob: -5.02363920211792
    3. 'def' → logprob: -5.27363920211792
    4. ' for' → logprob: -5.77363920211792
    5. ' stack' → logprob: -6.39863920211792
    6. 'q' → logprob: -6.52363920211792
    7. ' q' → logprob: -6.64863920211792
    8. ' def' → logprob: -6.77363920211792
    9. 'stack' → logprob: -7.02363920211792
    10. 'queue' → logprob: -7.64863920211792

Token 315: ' d' (ID: 272)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.075470931828022
    2. 'queue' → logprob: -4.075470924377441
    3. 'def' → logprob: -4.325470924377441
    4. '   ' → logprob: -4.575470924377441
    5. 'for' → logprob: -4.575470924377441
    6. 'stack' → logprob: -4.825470924377441
    7. ' q' → logprob: -5.700470924377441
    8. 'dp' → logprob: -6.325470924377441
    9. ' queue' → logprob: -6.325470924377441
    10. ' for' → logprob: -6.575470924377441

Token 316: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13219492137432098
    2. ' =' → logprob: -2.257194995880127
    3. '=' → logprob: -4.382194995880127
    4. '[:]' → logprob: -6.132194995880127
    5. '0' → logprob: -7.257194995880127
    6. ',' → logprob: -7.382194995880127
    7. ' [' → logprob: -8.257194519042969
    8. 'def' → logprob: -8.257194519042969
    9. ' ' → logprob: -8.382194519042969
    10. 'a' → logprob: -8.507194519042969

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.353008499601856e-05
    2. '(' → logprob: -10.750093460083008
    3. 'a' → logprob: -10.875093460083008
    4. 'n' → logprob: -10.875093460083008
    5. ' ' → logprob: -11.125093460083008
    6. 'c' → logprob: -11.625093460083008
    7. 'f' → logprob: -12.625093460083008
    8. 'v' → logprob: -13.750093460083008
    9. 'b' → logprob: -13.750093460083008
    10. '[' → logprob: -13.875093460083008

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008801525458693504
    2. ']=' → logprob: -4.758801460266113
    3. ' ]' → logprob: -8.758801460266113
    4. '=' → logprob: -10.633801460266113
    5. ']+=' → logprob: -13.008801460266113
    6. ' =' → logprob: -13.258801460266113
    7. '],' → logprob: -14.883801460266113
    8. '[' → logprob: -15.258801460266113
    9. ']==' → logprob: -15.383801460266113
    10. '()]' → logprob: -16.00880241394043

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1428106427192688
    2. ' =' → logprob: -2.017810583114624
    3. '+=' → logprob: -9.267810821533203
    4. ',' → logprob: -10.892810821533203
    5. ' +=' → logprob: -10.892810821533203
    6. '=int' → logprob: -14.267810821533203
    7. '.' → logprob: -14.517810821533203
    8. ' ' → logprob: -14.892810821533203
    9. '+' → logprob: -15.392810821533203
    10. ')' → logprob: -15.517810821533203

Token 320: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03173164650797844
    2. '0' → logprob: -3.906731605529785
    3. '1' → logprob: -4.656731605529785
    4. 'abs' → logprob: -7.781731605529785
    5. 'max' → logprob: -7.906731605529785
    6. 'mod' → logprob: -8.406731605529785
    7. '100' → logprob: -8.906731605529785
    8. 'math' → logprob: -9.031731605529785
    9. ' c' → logprob: -9.281731605529785
    10. 'a' → logprob: -9.406731605529785

Token 321: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03401252254843712
    2. '1' → logprob: -3.90901255607605
    3. '0' → logprob: -4.659012317657471
    4. 'abs' → logprob: -6.284012317657471
    5. 'max' → logprob: -7.159012317657471
    6. 'a' → logprob: -7.284012317657471
    7. 'math' → logprob: -8.159012794494629
    8. '-' → logprob: -9.159012794494629
    9. 'f' → logprob: -10.284012794494629
    10. 'b' → logprob: -10.409012794494629

Token 322: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14709722995758057
    2. '   ' → logprob: -2.522097110748291
    3. '<|end|>' → logprob: -3.147097110748291
    4. ' for' → logprob: -4.772097110748291
    5. ' ' → logprob: -7.147097110748291
    6. '  
' → logprob: -7.272097110748291
    7. '	for' → logprob: -7.522097110748291
    8. ' 
' → logprob: -7.522097110748291
    9. '  ' → logprob: -7.772097110748291
    10. '    
' → logprob: -8.14709758758545

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17548289895057678
    2. '
' → logprob: -2.050482988357544
    3. ' for' → logprob: -3.925482988357544
    4. '<|end|>' → logprob: -5.675482749938965
    5. 'for' → logprob: -5.800482749938965
    6. ' queue' → logprob: -6.175482749938965
    7. 'deque' → logprob: -7.550482749938965
    8. '    
' → logprob: -7.675482749938965
    9. 'queue' → logprob: -7.800482749938965
    10. '	queue' → logprob: -7.800482749938965

Token 324: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.06233389303088188
    2. 'queue' → logprob: -3.312333822250366
    3. 'from' → logprob: -4.437334060668945
    4. 'for' → logprob: -5.062334060668945
    5. 'stack' → logprob: -6.562334060668945
    6. '   ' → logprob: -6.562334060668945
    7. 'dq' → logprob: -6.687334060668945
    8. ' queue' → logprob: -7.562334060668945
    9. 'deque' → logprob: -8.312334060668945
    10. 'de' → logprob: -8.437334060668945

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002797782421112
    2. '=' → logprob: -2.3502798080444336
    3. ' ' → logprob: -9.850279808044434
    4. 'ue' → logprob: -11.600279808044434
    5. 'u' → logprob: -11.850279808044434
    6. ' =
' → logprob: -13.975279808044434
    7. '.' → logprob: -14.100279808044434
    8. ',' → logprob: -14.100279808044434
    9. 'e' → logprob: -14.475279808044434
    10. ' ' → logprob: -15.600279808044434

Token 326: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -5.848420551046729e-05
    2. ' deque' → logprob: -9.7500581741333
    3. 'de' → logprob: -16.625059127807617
    4. '[' → logprob: -17.500059127807617
    5. 'Deque' → logprob: -20.875059127807617
    6. '   ' → logprob: -21.875059127807617
    7. '	de' → logprob: -22.000059127807617
    8. 'collections' → logprob: -22.125059127807617
    9. ' [' → logprob: -22.625059127807617
    10. 'd' → logprob: -22.750059127807617

Token 327: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.052336886525154114
    2. '()' → logprob: -3.0523369312286377
    3. '([(' → logprob: -5.677336692810059
    4. '()
' → logprob: -8.677336692810059
    5. '(' → logprob: -8.927336692810059
    6. '((' → logprob: -12.427336692810059
    7. '[' → logprob: -12.427336692810059
    8. '[(' → logprob: -12.677336692810059
    9. '()

' → logprob: -13.177336692810059
    10. '([]' → logprob: -13.927336692810059

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.000019073486328
    4. '[' → logprob: -17.375019073486328
    5. ')' → logprob: -17.562519073486328
    6. ' (' → logprob: -17.687519073486328
    7. '
' → logprob: -17.750019073486328
    8. '{' → logprob: -18.250019073486328
    9. '   ' → logprob: -18.625019073486328
    10. '([' → logprob: -18.687519073486328

Token 329: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.2961512513575144e-05
    2. '])
' → logprob: -11.000022888183594
    3. ')' → logprob: -12.500022888183594
    4. ' ])' → logprob: -13.750022888183594
    5. ')])' → logprob: -13.875022888183594
    6. ']' → logprob: -16.500022888183594
    7. '))' → logprob: -16.625022888183594
    8. ']))' → logprob: -16.625022888183594
    9. '])]' → logprob: -16.625022888183594
    10. '])

' → logprob: -16.750022888183594

Token 330: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7351608276367188
    2. 'while' → logprob: -1.1101608276367188
    3. '   ' → logprob: -2.2351608276367188
    4. '
' → logprob: -2.6101608276367188
    5. '	while' → logprob: -4.610160827636719
    6. '    
' → logprob: -8.860160827636719
    7. ' 
' → logprob: -8.860160827636719
    8. ',' → logprob: -9.735160827636719
    9. 'While' → logprob: -9.860160827636719
    10. '  
' → logprob: -9.985160827636719

Token 331: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006748647429049015
    2. ' while' → logprob: -5.006748676300049
    3. '   ' → logprob: -10.38174819946289
    4. '	while' → logprob: -13.00674819946289
    5. 'While' → logprob: -17.38174819946289
    6. '```' → logprob: -17.63174819946289
    7. '  ' → logprob: -18.63174819946289
    8. '
' → logprob: -18.88174819946289
    9. 'for' → logprob: -19.50674819946289
    10. 'wh' → logprob: -19.50674819946289

Token 332: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006724249105900526
    2. ' q' → logprob: -5.0067243576049805
    3. 'len' → logprob: -11.75672435760498
    4. ' len' → logprob: -14.00672435760498
    5. ' ' → logprob: -16.006723403930664
    6. '	q' → logprob: -16.631723403930664
    7. '(q' → logprob: -19.131723403930664
    8. '   ' → logprob: -19.131723403930664
    9. ' ' → logprob: -20.506723403930664
    10. '  ' → logprob: -20.631723403930664

Token 333: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.5133244395256042
    2. ':' → logprob: -1.388324499130249
    3. '.pop' → logprob: -2.513324499130249
    4. '):' → logprob: -3.263324499130249
    5. ':
' → logprob: -4.38832426071167
    6. 'opleft' → logprob: -5.01332426071167
    7. '.' → logprob: -5.13832426071167
    8. '.append' → logprob: -6.01332426071167
    9. '):
' → logprob: -6.63832426071167
    10. 'pop' → logprob: -7.01332426071167

Token 334: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07221022248268127
    2. '       ' → logprob: -2.8222103118896484
    3. 'u' → logprob: -4.947210311889648
    4. ' u' → logprob: -6.197210311889648
    5. ' v' → logprob: -7.697210311889648
    6. 'v' → logprob: -8.572210311889648
    7. ' node' → logprob: -9.572210311889648
    8. ' x' → logprob: -9.572210311889648
    9. 'x' → logprob: -9.822210311889648
    10. 'node' → logprob: -10.072210311889648

Token 335: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.31521889567375183
    2. 'u' → logprob: -1.3152189254760742
    3. ' u' → logprob: -6.940218925476074
    4. 'p' → logprob: -7.440218925476074
    5. ' x' → logprob: -8.565218925476074
    6. 'cur' → logprob: -9.065218925476074
    7. 't' → logprob: -10.440218925476074
    8. '   ' → logprob: -10.565218925476074
    9. 'node' → logprob: -11.315218925476074
    10. 'i' → logprob: -11.815218925476074

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868807554244995
    2. '=' → logprob: -1.1368807554244995
    3. '=q' → logprob: -12.011880874633789
    4. ')' → logprob: -13.511880874633789
    5. ' =
' → logprob: -13.636880874633789
    6. ',' → logprob: -15.011880874633789
    7. ')=' → logprob: -15.511880874633789
    8. ' ' → logprob: -15.886880874633789
    9. '=
' → logprob: -16.51188087463379
    10. 'q' → logprob: -16.88688087463379

Token 337: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00020354038861114532
    2. ' q' → logprob: -8.500203132629395
    3. '	q' → logprob: -18.62520408630371
    4. '   ' → logprob: -20.87520408630371
    5. 'queue' → logprob: -21.87520408630371
    6. '*q' → logprob: -22.00020408630371
    7. '
' → logprob: -22.00020408630371
    8. 'deque' → logprob: -22.12520408630371
    9. '\' → logprob: -22.25020408630371
    10. '[q' → logprob: -22.37520408630371

Token 338: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.750436007976532e-05
    2. '.pop' → logprob: -10.37503719329834
    3. '.' → logprob: -12.12503719329834
    4. 'p' → logprob: -15.12503719329834
    5. '   ' → logprob: -16.000038146972656
    6. '().' → logprob: -16.375038146972656
    7. 'opleft' → logprob: -16.375038146972656
    8. ' .' → logprob: -16.750038146972656
    9. '].' → logprob: -17.125038146972656
    10. '>.' → logprob: -17.625038146972656

Token 339: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.5759890675544739
    2. 'op' → logprob: -0.8259890675544739
    3. 'ople' → logprob: -10.70098876953125
    4. 'opl' → logprob: -11.07598876953125
    5. 'opf' → logprob: -12.20098876953125
    6. 'p' → logprob: -12.95098876953125
    7. 'pop' → logprob: -13.57598876953125
    8. 'opup' → logprob: -14.20098876953125
    9. 'opt' → logprob: -14.32598876953125
    10. 'o' → logprob: -15.07598876953125

Token 340: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21331165730953217
    2. '
' → logprob: -2.8383116722106934
    3. ')' → logprob: -2.9633116722106934
    4. '   ' → logprob: -3.3383116722106934
    5. '<|end|>' → logprob: -3.3383116722106934
    6. ' for' → logprob: -6.213311672210693
    7. '<|end|>' → logprob: -6.588311672210693
    8. '  
' → logprob: -6.838311672210693
    9. ':' → logprob: -6.963311672210693
    10. '    
' → logprob: -7.088311672210693

Token 341: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6798813939094543
    2. ' for' → logprob: -0.8048813939094543
    3. '<|end|>' → logprob: -4.179881572723389
    4. '       ' → logprob: -4.679881572723389
    5. 'for' → logprob: -4.804881572723389
    6. '	for' → logprob: -5.054881572723389
    7. '    
' → logprob: -6.304881572723389
    8. ' ' → logprob: -6.429881572723389
    9. '
' → logprob: -6.554881572723389
    10. ' 
' → logprob: -7.804881572723389

Token 342: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.650518920039758e-06
    2. ' for' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.250003814697266
    4. '	for' → logprob: -17.625003814697266
    5. '
' → logprob: -18.375003814697266
    6. '       ' → logprob: -19.500003814697266
    7. '    
' → logprob: -21.500003814697266
    8. 'fo' → logprob: -22.250003814697266
    9. 'f' → logprob: -23.000003814697266
    10. '_for' → logprob: -24.125003814697266

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09035255014896393
    2. ' =' → logprob: -2.4653525352478027
    3. 'x' → logprob: -7.340352535247803
    4. 'ex' → logprob: -8.340353012084961
    5. '   ' → logprob: -8.715353012084961
    6. 'ext' → logprob: -8.965353012084961
    7. ')' → logprob: -9.840353012084961
    8. ' ' → logprob: -10.340353012084961
    9. 'for' → logprob: -10.965353012084961
    10. '(' → logprob: -11.215353012084961

Token 344: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004322710447013378
    2. ' d' → logprob: -5.504322528839111
    3. '0' → logprob: -9.75432300567627
    4. '(d' → logprob: -9.75432300567627
    5. 'c' → logprob: -10.12932300567627
    6. '1' → logprob: -10.37932300567627
    7. 'not' → logprob: -11.25432300567627
    8. '   ' → logprob: -11.62932300567627
    9. '[d' → logprob: -11.62932300567627
    10. ' ' → logprob: -12.12932300567627

Token 345: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.117345684382599e-05
    2. '[' → logprob: -11.250020980834961
    3. 'x' → logprob: -11.750020980834961
    4. '[
' → logprob: -15.750020980834961
    5. ' [' → logprob: -17.62502098083496
    6. '[q' → logprob: -17.62502098083496
    7. ' x' → logprob: -18.75002098083496
    8. '(x' → logprob: -19.25002098083496
    9. '```' → logprob: -19.37502098083496
    10. '][' → logprob: -19.50002098083496

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.523188591003418
    2. ']+' → logprob: -0.898188591003418
    3. ']*' → logprob: -10.023188591003418
    4. ']+=' → logprob: -12.273188591003418
    5. ']-' → logprob: -12.523188591003418
    6. ')+' → logprob: -13.523188591003418
    7. '+' → logprob: -13.523188591003418
    8. ']<<' → logprob: -13.648188591003418
    9. ']%' → logprob: -13.648188591003418
    10. ']
' → logprob: -13.773188591003418

Token 347: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024620062322355807
    2. ' +' → logprob: -9.000246047973633
    3. '+
' → logprob: -9.875246047973633
    4. '^' → logprob: -11.250246047973633
    5. '+c' → logprob: -11.375246047973633
    6. '
' → logprob: -11.500246047973633
    7. '-' → logprob: -11.625246047973633
    8. '%' → logprob: -11.875246047973633
    9. '+d' → logprob: -12.000246047973633
    10. '*' → logprob: -12.125246047973633

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35183489322662354
    2. 'c' → logprob: -1.2268348932266235
    3. ' c' → logprob: -5.851834774017334
    4. ' ' → logprob: -7.851834774017334
    5. 'abs' → logprob: -9.851835250854492
    6. '   ' → logprob: -10.726835250854492
    7. '(' → logprob: -11.976835250854492
    8. '	c' → logprob: -11.976835250854492
    9. '0' → logprob: -12.414335250854492
    10. 'math' → logprob: -12.476835250854492

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11324211955070496
    2. 'c' → logprob: -2.2382421493530273
    3. 'abs' → logprob: -8.863242149353027
    4. ' ' → logprob: -9.863242149353027
    5. ' c' → logprob: -9.863242149353027
    6. 'max' → logprob: -9.988242149353027
    7. '0' → logprob: -10.613242149353027
    8. '(' → logprob: -10.738242149353027
    9. '(c' → logprob: -10.988242149353027
    10. 'f' → logprob: -10.988242149353027

Token 350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008095706813037395
    2. '<|end|>' → logprob: -5.008095741271973
    3. '  
' → logprob: -7.383095741271973
    4. '
' → logprob: -8.383095741271973
    5. '   ' → logprob: -8.633095741271973
    6. ' for' → logprob: -9.633095741271973
    7. ' 
' → logprob: -9.633095741271973
    8. '    
' → logprob: -9.758095741271973
    9. '\n' → logprob: -10.133095741271973
    10. '       ' → logprob: -10.383095741271973

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08076439052820206
    2. '   ' → logprob: -2.7057642936706543
    3. ' for' → logprob: -4.705764293670654
    4. 'for' → logprob: -7.330764293670654
    5. '<|end|>' → logprob: -7.830764293670654
    6. '
' → logprob: -8.205764770507812
    7. '	for' → logprob: -8.830764770507812
    8. '	' → logprob: -9.580764770507812
    9. ' ' → logprob: -9.830764770507812
    10. '        
' → logprob: -10.080764770507812

Token 352: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012475410767365247
    2. ' for' → logprob: -9.25012493133545
    3. '   ' → logprob: -10.50012493133545
    4. '	for' → logprob: -14.37512493133545
    5. '       ' → logprob: -14.50012493133545
    6. '
' → logprob: -16.750123977661133
    7. '        
' → logprob: -20.625123977661133
    8. '    
' → logprob: -20.625123977661133
    9. ' ' → logprob: -21.875123977661133
    10. '  ' → logprob: -23.250123977661133

Token 353: ' y' (ID: 342)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.40046530961990356
    2. 'y' → logprob: -1.1504652500152588
    3. 'i' → logprob: -5.275465488433838
    4. 'u' → logprob: -5.525465488433838
    5. 'e' → logprob: -6.400465488433838
    6. 'to' → logprob: -6.775465488433838
    7. 'w' → logprob: -7.650465488433838
    8. 'nv' → logprob: -8.02546501159668
    9. ' y' → logprob: -8.02546501159668
    10. ' nx' → logprob: -8.77546501159668

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269473135471344
    2. 'in' → logprob: -2.1269474029541016
    3. ' ' → logprob: -11.126947402954102
    4. '	in' → logprob: -12.501947402954102
    5. ' ' → logprob: -15.751947402954102
    6. '  ' → logprob: -16.0019474029541
    7. ' y' → logprob: -16.1269474029541
    8. 'In' → logprob: -16.7519474029541
    9. 'y' → logprob: -16.7519474029541
    10. 'n' → logprob: -17.0019474029541

Token 355: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003178071230649948
    2. ' v' → logprob: -5.753178119659424
    3. '(v' → logprob: -16.128177642822266
    4. '	v' → logprob: -16.503177642822266
    5. '[v' → logprob: -16.628177642822266
    6. ')v' → logprob: -18.003177642822266
    7. '<v' → logprob: -19.503177642822266
    8. ',v' → logprob: -20.253177642822266
    9. '   ' → logprob: -20.753177642822266
    10. '.v' → logprob: -21.253177642822266

Token 356: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -11.000019073486328
    3. ' [' → logprob: -13.875019073486328
    4. 'x' → logprob: -13.875019073486328
    5. '[
' → logprob: -14.000019073486328
    6. '{x' → logprob: -18.125019073486328
    7. '(x' → logprob: -18.250019073486328
    8. '[s' → logprob: -18.875019073486328
    9. '```' → logprob: -19.000019073486328
    10. '[y' → logprob: -19.625019073486328

Token 357: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0005487450980581343
    2. ']:
' → logprob: -8.000548362731934
    3. ':' → logprob: -9.000548362731934
    4. ']' → logprob: -9.500548362731934
    5. '):' → logprob: -11.500548362731934
    6. ']:
' → logprob: -13.125548362731934
    7. '}:' → logprob: -14.000548362731934
    8. '>:' → logprob: -14.750548362731934
    9. '       ' → logprob: -14.875548362731934
    10. ']>' → logprob: -15.250548362731934

Token 358: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028413336724042892
    2. '           ' → logprob: -4.27841329574585
    3. '<|end|>' → logprob: -4.90341329574585
    4. ' if' → logprob: -5.52841329574585
    5. ':' → logprob: -7.27841329574585
    6. ',' → logprob: -7.27841329574585
    7. '               ' → logprob: -8.028413772583008
    8. ':
' → logprob: -8.653413772583008
    9. '<|end|>' → logprob: -8.903413772583008
    10. '   ' → logprob: -8.903413772583008

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023289386183023453
    2. '               ' → logprob: -3.898289442062378
    3. 'if' (adapté à ' if') → logprob: -6.273289203643799
    4. '       ' → logprob: -7.523289203643799
    5. '           ' → logprob: -8.648289680480957
    6. ' ' → logprob: -9.898289680480957
    7. '   ' → logprob: -10.773289680480957
    8. '	if' → logprob: -10.898289680480957
    9. ' 
' → logprob: -11.648289680480957
    10. '<|end|>' → logprob: -11.773289680480957

Token 360: ' not' (ID: 625)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.45925042033195496
    2. ' d' → logprob: -1.3342504501342773
    3. ' not' → logprob: -2.4592504501342773
    4. 'not' → logprob: -3.9592504501342773
    5. 'f' → logprob: -8.334250450134277
    6. ' f' → logprob: -10.084250450134277
    7. '   ' → logprob: -11.334250450134277
    8. ' ' → logprob: -12.334250450134277
    9. '	d' → logprob: -12.334250450134277
    10. '(not' → logprob: -13.084250450134277

Token 361: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38687509298324585
    2. ' d' → logprob: -1.1368751525878906
    3. '	d' → logprob: -13.51187515258789
    4. ' ' → logprob: -13.88687515258789
    5. 'f' → logprob: -14.38687515258789
    6. '   ' → logprob: -14.76187515258789
    7. ')d' → logprob: -15.51187515258789
    8. '(d' → logprob: -16.01187515258789
    9. '_d' → logprob: -16.13687515258789
    10. '
' → logprob: -16.13687515258789

Token 362: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.000007629394531
    3. 'y' → logprob: -14.250007629394531
    4. ' [' → logprob: -15.500007629394531
    5. '```' → logprob: -16.62500762939453
    6. '[x' → logprob: -17.37500762939453
    7. '[u' → logprob: -17.75000762939453
    8. '[
' → logprob: -17.87500762939453
    9. '[user' → logprob: -18.00000762939453
    10. ' y' → logprob: -18.25000762939453

Token 363: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023602403700351715
    2. ']:' → logprob: -4.273602485656738
    3. ':
' → logprob: -4.773602485656738
    4. ']' → logprob: -7.898602485656738
    5. ']:
' → logprob: -8.898602485656738
    6. '):' → logprob: -9.148602485656738
    7. '<|end|>' → logprob: -9.523602485656738
    8. ' and' → logprob: -9.648602485656738
    9. 'and' → logprob: -10.148602485656738
    10. '>:' → logprob: -10.648602485656738

Token 364: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08739789575338364
    2. ':
' → logprob: -2.962397813796997
    3. ' and' → logprob: -3.587397813796997
    4. ':' → logprob: -5.587398052215576
    5. '           ' → logprob: -8.087397575378418
    6. ' or' → logprob: -10.087397575378418
    7. ' :
' → logprob: -10.087397575378418
    8. '):
' → logprob: -10.337397575378418
    9. '       ' → logprob: -10.587397575378418
    10. 'and' → logprob: -10.712397575378418

Token 365: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02157784253358841
    2. 'd' (adapté à ' d') → logprob: -4.396577835083008
    3. '               ' → logprob: -5.146577835083008
    4. '                   ' → logprob: -5.771577835083008
    5. '           ' → logprob: -10.021577835083008
    6. ' if' → logprob: -11.021577835083008
    7. '                ' → logprob: -11.396577835083008
    8. '   ' → logprob: -12.146577835083008
    9. '       ' → logprob: -12.646577835083008
    10. 'if' → logprob: -12.896577835083008

Token 366: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0007220837287604809
    2. '[' → logprob: -7.2507219314575195
    3. '[user' → logprob: -12.62572193145752
    4. '[
' → logprob: -13.62572193145752
    5. '[x' → logprob: -13.75072193145752
    6. '[q' → logprob: -14.00072193145752
    7. '```' → logprob: -14.12572193145752
    8. '<|end|>' → logprob: -14.25072193145752
    9. 'y' → logprob: -14.37572193145752
    10. '[n' → logprob: -14.50072193145752

Token 367: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4662635326385498
    2. ' =' → logprob: -1.4662635326385498
    3. ']' → logprob: -1.9662635326385498
    4. ']=' → logprob: -6.341263771057129
    5. ' ]' → logprob: -9.216263771057129
    6. ')' → logprob: -10.841263771057129
    7. '[' → logprob: -11.966263771057129
    8. ' ' → logprob: -13.591263771057129
    9. ')=' → logprob: -13.841263771057129
    10. ',' → logprob: -14.341263771057129

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '+=' → logprob: -17.203889846801758
    4. ' ' → logprob: -17.953889846801758
    5. '.=' → logprob: -17.953889846801758
    6. ',' → logprob: -18.578889846801758
    7. '＝' → logprob: -18.578889846801758
    8. ')' → logprob: -18.828889846801758
    9. '=
' → logprob: -19.203889846801758
    10. ' +=' → logprob: -19.328889846801758

Token 369: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.04302510991692543
    2. ' nd' → logprob: -3.168025016784668
    3. '(nd' → logprob: -11.793025016784668
    4. '   ' → logprob: -11.918025016784668
    5. ' ' → logprob: -13.043025016784668
    6. 'n' → logprob: -13.043025016784668
    7. '  ' → logprob: -13.668025016784668
    8. 'nt' → logprob: -14.293025016784668
    9. 'ndl' → logprob: -14.668025016784668
    10. 'ng' → logprob: -14.668025016784668

Token 370: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019985361024737358
    2. '
' → logprob: -4.644985198974609
    3. '<|end|>' → logprob: -4.644985198974609
    4. '<|end|>' → logprob: -9.14498519897461
    5. '                
' → logprob: -9.51998519897461
    6. '
' → logprob: -9.64498519897461
    7. 'q' → logprob: -9.64498519897461
    8. ',' → logprob: -9.64498519897461
    9. '              ' → logprob: -10.01998519897461
    10. '           ' → logprob: -10.51998519897461

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006697862991131842
    2. '
' → logprob: -8.000669479370117
    3. 'q' → logprob: -8.375669479370117
    4. ' q' → logprob: -10.125669479370117
    5. '<|end|>' → logprob: -10.375669479370117
    6. '                
' → logprob: -11.625669479370117
    7. '
' → logprob: -12.250669479370117
    8. '              ' → logprob: -12.500669479370117
    9. ',q' → logprob: -12.875669479370117
    10. ',' → logprob: -13.000669479370117

Token 372: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00030388421146199107
    2. 'if' → logprob: -8.625304222106934
    3. ' q' → logprob: -9.625304222106934
    4. '               ' → logprob: -10.625304222106934
    5. '   ' → logprob: -10.875304222106934
    6. 'c' → logprob: -11.625304222106934
    7. '           ' → logprob: -13.250304222106934
    8. ' if' → logprob: -13.375304222106934
    9. '
' → logprob: -13.875304222106934
    10. '                   ' → logprob: -14.875304222106934

Token 373: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008878758526407182
    2. '.' → logprob: -7.750887870788574
    3. '.app' → logprob: -8.125887870788574
    4. '.p' → logprob: -9.375887870788574
    5. '.ap' → logprob: -10.375887870788574
    6. '.push' → logprob: -10.750887870788574
    7. '.extend' → logprob: -12.000887870788574
    8. 'append' → logprob: -12.125887870788574
    9. '.enqueue' → logprob: -13.000887870788574
    10. 'appen' → logprob: -13.250887870788574

Token 374: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -17.375001907348633
    4. 'y' → logprob: -17.375001907348633
    5. '(x' → logprob: -17.750001907348633
    6. ' (' → logprob: -19.625001907348633
    7. '((' → logprob: -19.875001907348633
    8. '(s' → logprob: -20.625001907348633
    9. ')' → logprob: -20.750001907348633
    10. '(z' → logprob: -20.875001907348633

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.375035285949707
    3. ')y' → logprob: -13.125035285949707
    4. ']' → logprob: -14.500035285949707
    5. '<|end|>' → logprob: -14.500035285949707
    6. ')return' → logprob: -15.125035285949707
    7. ' )' → logprob: -15.125035285949707
    8. ')x' → logprob: -15.500035285949707
    9. ')#' → logprob: -16.375036239624023
    10. '])' → logprob: -16.500036239624023

Token 376: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' V' (ID: 631)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3968358337879181
    2. 'for' → logprob: -2.0218358039855957
    3. '   ' → logprob: -2.3968358039855957
    4. 'c' → logprob: -3.2718358039855957
    5. 'res' → logprob: -4.271835803985596
    6. 'ans' → logprob: -4.646835803985596
    7. 'd' → logprob: -5.021835803985596
    8. 'p' → logprob: -5.396835803985596
    9. 'cnt' → logprob: -5.646835803985596
    10. 'f' → logprob: -5.646835803985596

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3397688567638397
    2. '=' → logprob: -2.089768886566162
    3. 'al' → logprob: -2.339768886566162
    4. 'alid' → logprob: -3.214768886566162
    5. '   ' → logprob: -4.714768886566162
    6. 'ALUE' → logprob: -5.589768886566162
    7. 'AL' → logprob: -5.964768886566162
    8. 'is' → logprob: -6.214768886566162
    9. 'V' → logprob: -6.589768886566162
    10. ',' → logprob: -6.964768886566162

Token 379: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8573201894760132
    2. '[' → logprob: -1.3573201894760132
    3. '[max' → logprob: -2.2323203086853027
    4. '[n' → logprob: -2.7323203086853027
    5. '[(' → logprob: -3.6073203086853027
    6. '[]
' → logprob: -4.107320308685303
    7. 'sum' → logprob: -4.232320308685303
    8. 'max' → logprob: -4.357320308685303
    9. '0' → logprob: -4.357320308685303
    10. 'sorted' → logprob: -4.482320308685303

Token 380: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.23766356706619263
    2. '(per' → logprob: -1.6126635074615479
    3. '(' → logprob: -5.612663745880127
    4. '(en' → logprob: -6.487663745880127
    5. '(c' → logprob: -6.487663745880127
    6. '(filter' → logprob: -6.737663745880127
    7. '(sorted' → logprob: -6.737663745880127
    8. '(acc' → logprob: -6.862663745880127
    9. '(set' → logprob: -6.987663745880127
    10. '(math' → logprob: -8.612663269042969

Token 381: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023762896307744086
    2. '(' → logprob: -8.375237464904785
    3. 'n' → logprob: -12.125237464904785
    4. '(len' → logprob: -13.750237464904785
    5. '(
' → logprob: -15.125237464904785
    6. ')n' → logprob: -16.0002384185791
    7. '(N' → logprob: -16.8752384185791
    8. ')' → logprob: -17.0002384185791
    9. ')(' → logprob: -17.3752384185791
    10. ' (' → logprob: -17.5002384185791

Token 382: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3157844543457031
    2. ')' → logprob: -1.3157844543457031
    3. '))
' → logprob: -6.315784454345703
    4. ')
' → logprob: -7.315784454345703
    5. ' )' → logprob: -11.065784454345703
    6. ')))' → logprob: -11.440784454345703
    7. ' ))' → logprob: -11.690784454345703
    8. '));' → logprob: -12.565784454345703
    9. '))

' → logprob: -13.190784454345703
    10. '])' → logprob: -13.315784454345703

Token 383: '   ' (ID: 271)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.6384053230285645
    2. '   ' → logprob: -0.8884053230285645
    3. ')' → logprob: -3.1384053230285645
    4. ',' → logprob: -5.0134053230285645
    5. 'V' → logprob: -6.1384053230285645
    6. '<|end|>' → logprob: -6.5134053230285645
    7. ').' → logprob: -6.7634053230285645
    8. '.' → logprob: -6.7634053230285645
    9. ',V' → logprob: -7.2634053230285645
    10. '
' → logprob: -7.2634053230285645

Token 384: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.0009623158257454634
    2. '   ' → logprob: -7.000962257385254
    3. ' V' → logprob: -10.500962257385254
    4. ')' → logprob: -12.250962257385254
    5. 'def' → logprob: -12.625962257385254
    6. 'for' → logprob: -12.625962257385254
    7. 'v' → logprob: -13.375962257385254
    8. 'sort' → logprob: -13.500962257385254
    9. '
' → logprob: -13.625962257385254
    10. '```' → logprob: -14.125962257385254

Token 385: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.005238736979663372
    2. '.' → logprob: -5.2552385330200195
    3. 'sort' → logprob: -12.63023853302002
    4. '.reverse' → logprob: -14.50523853302002
    5. '.pop' → logprob: -15.38023853302002
    6. ' .' → logprob: -15.38023853302002
    7. '.remove' → logprob: -15.75523853302002
    8. '.s' → logprob: -15.88023853302002
    9. '=' → logprob: -16.130239486694336
    10. '.=' → logprob: -16.630239486694336

Token 386: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00017183588352054358
    2. '(reverse' → logprob: -8.750171661376953
    3. 'key' → logprob: -11.625171661376953
    4. '(' → logprob: -13.250171661376953
    5. ',key' → logprob: -13.625171661376953
    6. 'reverse' → logprob: -14.125171661376953
    7. '(lambda' → logprob: -15.125171661376953
    8. '(
' → logprob: -15.500171661376953
    9. '()' → logprob: -15.625171661376953
    10. ' key' → logprob: -17.875171661376953

Token 387: ' =' (ID: 314)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0001234428636962548
    2. '=' → logprob: -9.000123023986816
    3. '(lambda' → logprob: -17.750123977661133
    4. 'lambda' → logprob: -17.875123977661133
    5. '=c' → logprob: -18.250123977661133
    6. '=len' → logprob: -18.625123977661133
    7. '=d' → logprob: -18.875123977661133
    8. '=v' → logprob: -19.875123977661133
    9. '=int' → logprob: -20.250123977661133
    10. '=
' → logprob: -20.250123977661133

Token 388: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00032724079210311174
    2. ' lambda' → logprob: -9.000327110290527
    3. '=lambda' → logprob: -9.125327110290527
    4. '(lambda' → logprob: -9.375327110290527
    5. '   ' → logprob: -11.625327110290527
    6. '
' → logprob: -14.625327110290527
    7. 'lam' → logprob: -14.750327110290527
    8. 'l' → logprob: -16.500328063964844
    9. '_lambda' → logprob: -17.125328063964844
    10. ')' → logprob: -17.500328063964844

Token 389: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7872117757797241
    2. ' lambda' → logprob: -0.7872117757797241
    3. 'x' → logprob: -3.0372118949890137
    4. 'lambda' → logprob: -3.2872118949890137
    5. '=lambda' → logprob: -6.412211894989014
    6. ' y' → logprob: -6.787211894989014
    7. ':' → logprob: -6.787211894989014
    8. 'y' → logprob: -9.037211418151855
    9. ' d' → logprob: -9.162211418151855
    10. '   ' → logprob: -9.662211418151855

Token 390: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036851167678833008
    2. ':c' → logprob: -6.003684997558594
    3. ' :' → logprob: -7.003684997558594
    4. ':d' → logprob: -8.128684997558594
    5. ':
' → logprob: -13.253684997558594
    6. ':v' → logprob: -13.628684997558594
    7. ':C' → logprob: -14.878684997558594
    8. ':x' → logprob: -15.128684997558594
    9. ':(' → logprob: -15.753684997558594
    10. ' c' → logprob: -15.753684997558594

Token 391: 'd' (ID: 67)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20831994712352753
    2. 'd' → logprob: -2.208319902420044
    3. 'f' → logprob: -2.583319902420044
    4. '(c' → logprob: -6.458320140838623
    5. '(f' → logprob: -7.833320140838623
    6. '   ' → logprob: -8.708319664001465
    7. 'abs' → logprob: -8.833319664001465
    8. ' c' → logprob: -8.958319664001465
    9. '(d' → logprob: -9.208319664001465
    10. ' d' → logprob: -10.708319664001465

Token 392: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -10.625028610229492
    3. '[
' → logprob: -13.000028610229492
    4. 'x' → logprob: -13.250028610229492
    5. ' [' → logprob: -16.000028610229492
    6. '
' → logprob: -16.500028610229492
    7. '(x' → logprob: -17.000028610229492
    8. ' x' → logprob: -17.750028610229492
    9. ')' → logprob: -18.125028610229492
    10. ')x' → logprob: -19.000028610229492

Token 393: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001544141792692244
    2. '])' → logprob: -6.501543998718262
    3. ' )' → logprob: -10.501543998718262
    4. ')])' → logprob: -12.126543998718262
    5. '})' → logprob: -13.001543998718262
    6. ')]' → logprob: -13.251543998718262
    7. '))' → logprob: -13.251543998718262
    8. ')
' → logprob: -13.876543998718262
    9. '[x' → logprob: -13.876543998718262
    10. ']' → logprob: -15.251543998718262

Token 394: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7872011065483093
    2. ' for' → logprob: -1.162201166152954
    3. '   ' → logprob: -2.037201166152954
    4. '
' → logprob: -2.537201166152954
    5. ')' → logprob: -4.287200927734375
    6. ',' → logprob: -6.037200927734375
    7. '    
' → logprob: -6.912200927734375
    8. 'dp' → logprob: -6.912200927734375
    9. 'def' → logprob: -7.037200927734375
    10. ':' → logprob: -7.537200927734375

Token 395: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6148532032966614
    2. 'dp' → logprob: -0.8648532032966614
    3. 'ans' → logprob: -4.114853382110596
    4. 'res' → logprob: -4.489853382110596
    5. 'f' → logprob: -6.489853382110596
    6. 'p' → logprob: -6.614853382110596
    7. 'c' → logprob: -6.739853382110596
    8. '   ' → logprob: -6.989853382110596
    9. 'cnt' → logprob: -6.989853382110596
    10. 'cur' → logprob: -7.739853382110596

Token 396: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.537246584892273
    2. ' =' → logprob: -0.912246584892273
    3. '=' → logprob: -4.7872467041015625
    4. 'core' → logprob: -6.5372467041015625
    5. 'u' → logprob: -6.7872467041015625
    6. 'et' → logprob: -7.4122467041015625
    7. 't' → logprob: -7.4122467041015625
    8. 'z' → logprob: -7.7872467041015625
    9. 'ize' → logprob: -8.162246704101562
    10. 'ums' → logprob: -8.412246704101562

Token 397: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0780985951423645
    2. '[' → logprob: -2.8280985355377197
    3. '[]' → logprob: -4.703098773956299
    4. ' ' → logprob: -5.703098773956299
    5. ' [' → logprob: -6.078098773956299
    6. 'sum' → logprob: -7.828098773956299
    7. 'set' → logprob: -7.953098773956299
    8. ' []' → logprob: -9.20309829711914
    9. '{}' → logprob: -9.57809829711914
    10. '[a' → logprob: -9.57809829711914

Token 398: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0077811297960579395
    2. '(' → logprob: -5.882781028747559
    3. 'c' → logprob: -6.507781028747559
    4. '[' → logprob: -6.882781028747559
    5. '[]' → logprob: -6.882781028747559
    6. 'float' → logprob: -7.757781028747559
    7. 'math' → logprob: -8.257781028747559
    8. 'False' → logprob: -9.132781028747559
    9. '[c' → logprob: -9.132781028747559
    10. '-' → logprob: -9.257781028747559

Token 399: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028574615716934204
    2. ']*' → logprob: -3.7785747051239014
    3. ']*(' → logprob: -6.153574466705322
    4. 'for' → logprob: -6.403574466705322
    5. ' for' → logprob: -7.278574466705322
    6. ']+' → logprob: -7.528574466705322
    7. ']
' → logprob: -9.40357494354248
    8. ' ]' → logprob: -9.40357494354248
    9. ',' → logprob: -10.15357494354248
    10. ']<<' → logprob: -10.40357494354248

Token 400: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001337147317826748
    2. '(n' → logprob: -6.626337051391602
    3. '(' → logprob: -11.626337051391602
    4. '   ' → logprob: -14.126337051391602
    5. ' n' → logprob: -14.626337051391602
    6. '
' → logprob: -14.876337051391602
    7. '[n' → logprob: -15.251337051391602
    8. ' (' → logprob: -15.376337051391602
    9. '(len' → logprob: -16.0013370513916
    10. '```' → logprob: -17.0013370513916

Token 401: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07330765575170517
    2. '   ' → logprob: -2.948307752609253
    3. ' for' → logprob: -5.448307514190674
    4. 'for' → logprob: -5.698307514190674
    5. '<|end|>' → logprob: -5.698307514190674
    6. '    
' → logprob: -6.198307514190674
    7. ' 
' → logprob: -6.948307514190674
    8. '  
' → logprob: -7.073307514190674
    9. '	for' → logprob: -7.448307514190674
    10. ' ' → logprob: -8.073307991027832

Token 402: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.014829397201538
    2. '   ' → logprob: -1.139829397201538
    3. ' for' → logprob: -1.514829397201538
    4. 'p' → logprob: -3.139829397201538
    5. 't' → logprob: -3.264829397201538
    6. 'f' → logprob: -5.264829635620117
    7. 'dp' → logprob: -5.889829635620117
    8. 'd' → logprob: -6.139829635620117
    9. ',' → logprob: -6.264829635620117
    10. 'm' → logprob: -7.514829635620117

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04427136480808258
    2. 'dp' → logprob: -4.294271469116211
    3. 't' → logprob: -4.669271469116211
    4. 'ans' → logprob: -5.294271469116211
    5. 'def' → logprob: -5.794271469116211
    6. 'f' → logprob: -5.794271469116211
    7. 'res' → logprob: -6.044271469116211
    8. 'p' → logprob: -6.044271469116211
    9. 'g' → logprob: -6.544271469116211
    10. 'r' → logprob: -7.294271469116211

Token 404: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003906826954334974
    2. 'i' → logprob: -5.753906726837158
    3. 'u' → logprob: -7.253906726837158
    4. ' x' → logprob: -12.003907203674316
    5. 'z' → logprob: -12.378907203674316
    6. 'v' → logprob: -12.378907203674316
    7. 'w' → logprob: -13.628907203674316
    8. 'k' → logprob: -14.003907203674316
    9. 'y' → logprob: -14.003907203674316
    10. 'p' → logprob: -14.003907203674316

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0548994354903698
    2. 'in' → logprob: -2.9298994541168213
    3. 'n' → logprob: -12.304899215698242
    4. '	in' → logprob: -12.429899215698242
    5. ' ' → logprob: -12.929899215698242
    6. 's' → logprob: -13.554899215698242
    7. '   ' → logprob: -13.679899215698242
    8. 'import' → logprob: -14.179899215698242
    9. ',' → logprob: -14.179899215698242
    10. '  ' → logprob: -14.679899215698242

Token 406: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.003179855877533555
    2. ' V' → logprob: -5.753180027008057
    3. ' ' → logprob: -13.878179550170898
    4. '   ' → logprob: -14.128179550170898
    5. 'range' → logprob: -15.628179550170898
    6. ' range' → logprob: -16.0031795501709
    7. 'v' → logprob: -16.5031795501709
    8. '  ' → logprob: -17.1281795501709
    9. '	V' → logprob: -17.2531795501709
    10. 's' → logprob: -17.3781795501709

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.3596853831550106e-05
    2. ':
' → logprob: -9.875053405761719
    3. ' :' → logprob: -14.000053405761719
    4. ',' → logprob: -14.250053405761719
    5. '):' → logprob: -15.625053405761719
    6. ':**' → logprob: -15.625053405761719
    7. '   ' → logprob: -15.750053405761719
    8. '=' → logprob: -17.12505340576172
    9. ':
' → logprob: -17.87505340576172
    10. 's' → logprob: -18.37505340576172

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07736823707818985
    2. 'for' → logprob: -3.0773682594299316
    3. ' for' → logprob: -3.5773682594299316
    4. '   ' → logprob: -7.952368259429932
    5. 'if' → logprob: -10.452367782592773
    6. '	for' → logprob: -11.202367782592773
    7. ' if' → logprob: -11.827367782592773
    8. '           ' → logprob: -12.077367782592773
    9. '     ' → logprob: -13.327367782592773
    10. ' ' → logprob: -13.327367782592773

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007382771000266075
    2. 'if' → logprob: -7.375738143920898
    3. '   ' → logprob: -9.375738143920898
    4. ' for' → logprob: -10.750738143920898
    5. 's' → logprob: -12.875738143920898
    6. '       ' → logprob: -14.000738143920898
    7. 'fo' → logprob: -14.875738143920898
    8. '	for' → logprob: -15.000738143920898
    9. 'res' → logprob: -15.125738143920898
    10. 'dp' → logprob: -15.875738143920898

Token 410: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018163753673434258
    2. ' y' → logprob: -4.018163681030273
    3. 'z' → logprob: -12.393163681030273
    4. 'w' → logprob: -12.518163681030273
    5. 'u' → logprob: -12.893163681030273
    6. 'nx' → logprob: -13.518163681030273
    7. 'to' → logprob: -14.018163681030273
    8. 't' → logprob: -15.768163681030273
    9. 'e' → logprob: -15.768163681030273
    10. 'i' → logprob: -15.893163681030273

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043007638305425644
    2. 'in' → logprob: -3.1680076122283936
    3. ' y' → logprob: -12.043007850646973
    4. '	in' → logprob: -13.293007850646973
    5. ' ' → logprob: -15.168007850646973
    6. 'y' → logprob: -15.668007850646973
    7. 'In' → logprob: -16.418006896972656
    8. 's' → logprob: -16.543006896972656
    9. ' i' → logprob: -16.668006896972656
    10. 'v' → logprob: -17.168006896972656

Token 412: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009124171338044107
    2. ' v' → logprob: -7.000912189483643
    3. '[v' → logprob: -14.3759126663208
    4. '	v' → logprob: -15.3759126663208
    5. '(v' → logprob: -17.375911712646484
    6. '   ' → logprob: -17.500911712646484
    7. '
' → logprob: -18.875911712646484
    8. ')v' → logprob: -19.000911712646484
    9. '<v' → logprob: -19.000911712646484
    10. '_v' → logprob: -19.750911712646484

Token 413: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.995397365652025e-05
    2. '[' → logprob: -9.500089645385742
    3. ' [' → logprob: -12.000089645385742
    4. 'x' → logprob: -12.125089645385742
    5. '[
' → logprob: -12.625089645385742
    6. '{x' → logprob: -16.875089645385742
    7. '   ' → logprob: -17.000089645385742
    8. ' x' → logprob: -17.125089645385742
    9. '[s' → logprob: -17.375089645385742
    10. '(x' → logprob: -17.750089645385742

Token 414: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.17234951257705688
    2. ':' → logprob: -1.922349452972412
    3. ']:
' → logprob: -5.047349452972412
    4. ']' → logprob: -5.422349452972412
    5. '):' → logprob: -7.922349452972412
    6. '}:' → logprob: -8.29734992980957
    7. ':
' → logprob: -8.42234992980957
    8. '>:' → logprob: -8.67234992980957
    9. '       ' → logprob: -9.42234992980957
    10. '           ' → logprob: -10.17234992980957

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041625293670222163
    2. ' if' → logprob: -8.500415802001953
    3. ':' → logprob: -9.500415802001953
    4. '<|end|>' → logprob: -10.375415802001953
    5. '               ' → logprob: -10.500415802001953
    6. '	       ' → logprob: -11.000415802001953
    7. '       ' → logprob: -11.125415802001953
    8. ',' → logprob: -11.125415802001953
    9. ':
' → logprob: -12.250415802001953
    10. '          ' → logprob: -12.875415802001953

Token 416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11460721492767334
    2. '           ' → logprob: -2.614607334136963
    3. ' if' → logprob: -3.739607334136963
    4. '               ' → logprob: -4.489607334136963
    5. '   ' → logprob: -9.364606857299805
    6. ' ' → logprob: -12.239606857299805
    7. '       ' → logprob: -12.239606857299805
    8. '	if' → logprob: -13.739606857299805
    9. '                   ' → logprob: -14.614606857299805
    10. 's' → logprob: -14.614606857299805

Token 417: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023369282484054565
    2. ' d' → logprob: -3.773369312286377
    3. '   ' → logprob: -9.523368835449219
    4. '	d' → logprob: -10.398368835449219
    5. 's' → logprob: -12.273368835449219
    6. ' ' → logprob: -12.523368835449219
    7. '           ' → logprob: -12.773368835449219
    8. '  ' → logprob: -13.648368835449219
    9. 'y' → logprob: -13.648368835449219
    10. '               ' → logprob: -14.273368835449219

Token 418: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00016146517009474337
    2. '[x' → logprob: -9.000161170959473
    3. 'y' → logprob: -10.625161170959473
    4. '[' → logprob: -11.500161170959473
    5. '>' → logprob: -13.625161170959473
    6. ']' → logprob: -13.750161170959473
    7. '```' → logprob: -15.250161170959473
    8. ' y' → logprob: -15.375161170959473
    9. '	y' → logprob: -15.875161170959473
    10. '][' → logprob: -15.875161170959473

Token 419: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06001534312963486
    2. '<' → logprob: -2.9350154399871826
    3. ' >' → logprob: -5.8100152015686035
    4. ' <' → logprob: -6.5600152015686035
    5. ')' → logprob: -7.9350152015686035
    6. ']' → logprob: -8.810015678405762
    7. ']>' → logprob: -10.310015678405762
    8. ')>' → logprob: -10.560015678405762
    9. '">' → logprob: -10.935015678405762
    10. '}' → logprob: -11.310015678405762

Token 420: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12592443823814392
    2. '<' → logprob: -2.2509243488311768
    3. ' >' → logprob: -5.000924587249756
    4. ' <' → logprob: -5.625924587249756
    5. '>d' → logprob: -6.500924587249756
    6. 'd' → logprob: -6.875924587249756
    7. '<n' → logprob: -11.375924110412598
    8. '>x' → logprob: -11.500924110412598
    9. '">' → logprob: -11.625924110412598
    10. '```' → logprob: -11.750924110412598

Token 421: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00031890018726699054
    2. ' d' → logprob: -8.12531852722168
    3. '   ' → logprob: -11.00031852722168
    4. ' ' → logprob: -13.12531852722168
    5. '	d' → logprob: -13.37531852722168
    6. '    
' → logprob: -14.00031852722168
    7. '  ' → logprob: -14.37531852722168
    8. '>d' → logprob: -15.25031852722168
    9. '    ' → logprob: -15.75031852722168
    10. ')d' → logprob: -16.37531852722168

Token 422: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011362451128661633
    2. 'x' → logprob: -4.511362552642822
    3. '[y' → logprob: -8.136362075805664
    4. '[' → logprob: -11.886362075805664
    5. 'y' → logprob: -12.761362075805664
    6. ' x' → logprob: -12.761362075805664
    7. '   ' → logprob: -12.886362075805664
    8. '```' → logprob: -13.386362075805664
    9. '[
' → logprob: -13.886362075805664
    10. '	x' → logprob: -14.261362075805664

Token 423: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.82969069480896
    2. ']:
' → logprob: -0.82969069480896
    3. ']' → logprob: -2.07969069480896
    4. ' and' → logprob: -6.704690933227539
    5. 'and' → logprob: -7.579690933227539
    6. ']:
' → logprob: -7.954690933227539
    7. ':' → logprob: -9.329690933227539
    8. '           ' → logprob: -9.329690933227539
    9. '):
' → logprob: -9.579690933227539
    10. ']:

' → logprob: -9.704690933227539

Token 424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05051969736814499
    2. 's' → logprob: -3.3005197048187256
    3. ' s' → logprob: -4.4255194664001465
    4. '           ' → logprob: -8.425519943237305
    5. ' continue' → logprob: -9.425519943237305
    6. '```' → logprob: -10.425519943237305
    7. ' if' → logprob: -10.675519943237305
    8. ',' → logprob: -10.800519943237305
    9. 'continue' → logprob: -11.175519943237305
    10. '                   ' → logprob: -11.800519943237305

Token 425: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.18610884249210358
    2. 'if' → logprob: -1.9361088275909424
    3. '                   ' → logprob: -4.8111090660095215
    4. '               ' → logprob: -4.9361090660095215
    5. 'continue' → logprob: -5.4361090660095215
    6. ' s' → logprob: -5.6861090660095215
    7. 'c' → logprob: -7.4361090660095215
    8. ' if' → logprob: -7.5611090660095215
    9. 'for' → logprob: -8.061108589172363
    10. 'diff' → logprob: -8.186108589172363

Token 426: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.10063750296831131
    2. '[y' → logprob: -2.350637435913086
    3. '[s' → logprob: -7.850637435913086
    4. '[' → logprob: -10.225637435913086
    5. ' [' → logprob: -14.100637435913086
    6. '```' → logprob: -14.600637435913086
    7. 'x' → logprob: -14.725637435913086
    8. '][' → logprob: -14.725637435913086
    9. '[c' → logprob: -14.850637435913086
    10. '[m' → logprob: -15.100637435913086

Token 427: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.16062702238559723
    2. ']' → logprob: -1.910627007484436
    3. '+=' → logprob: -8.285627365112305
    4. ']*' → logprob: -9.410627365112305
    5. ']+' → logprob: -10.785627365112305
    6. '[' → logprob: -10.910627365112305
    7. '*' → logprob: -11.285627365112305
    8. ']=' → logprob: -11.785627365112305
    9. '*=' → logprob: -12.660627365112305
    10. ' ]' → logprob: -13.160627365112305

Token 428: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0035786915104836226
    2. ' +=' → logprob: -6.1285786628723145
    3. '*=' → logprob: -7.0035786628723145
    4. '=' → logprob: -7.7535786628723145
    5. '+=(' → logprob: -11.003579139709473
    6. ']+=' → logprob: -11.503579139709473
    7. '*' → logprob: -11.878579139709473
    8. '+' → logprob: -12.253579139709473
    9. '-=' → logprob: -12.503579139709473
    10. '%=' → logprob: -12.628579139709473

Token 429: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004938178462907672
    2. ' s' → logprob: -7.875494003295898
    3. 'c' → logprob: -9.500494003295898
    4. '   ' → logprob: -11.500494003295898
    5. '1' → logprob: -11.750494003295898
    6. 'max' → logprob: -11.750494003295898
    7. '2' → logprob: -13.125494003295898
    8. '(s' → logprob: -13.250494003295898
    9. ' ' → logprob: -13.375494003295898
    10. '(' → logprob: -13.500494003295898

Token 430: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.01815907657146454
    2. 'x' → logprob: -4.018158912658691
    3. '[' → logprob: -11.893158912658691
    4. '[
' → logprob: -13.393158912658691
    5. ' x' → logprob: -14.643158912658691
    6. ' [' → logprob: -15.893158912658691
    7. '	x' → logprob: -16.393159866333008
    8. '[s' → logprob: -16.518159866333008
    9. '```' → logprob: -17.268159866333008
    10. '{x' → logprob: -17.643159866333008

Token 431: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0094842910766602
    2. 'for' → logprob: -1.7594842910766602
    3. 'ans' → logprob: -2.38448429107666
    4. 'print' → logprob: -2.50948429107666
    5. 'dp' → logprob: -2.88448429107666
    6. 'if' → logprob: -3.38448429107666
    7. 'res' → logprob: -3.38448429107666
    8. 'max' → logprob: -3.50948429107666
    9. ' for' → logprob: -3.63448429107666
    10. 'p' → logprob: -4.13448429107666

Token 434: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.7651581168174744
    2. '.reverse' → logprob: -1.2651581764221191
    3. '.' → logprob: -1.3901581764221191
    4. '.pop' → logprob: -6.265158176422119
    5. '[::-' → logprob: -7.515158176422119
    6. '.append' → logprob: -7.640158176422119
    7. '.remove' → logprob: -7.890158176422119
    8. ':' → logprob: -10.140157699584961
    9. '[:]' → logprob: -10.390157699584961
    10. 'sort' → logprob: -10.640157699584961

Token 435: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2983100712299347
    2. 'sorted' → logprob: -1.9233100414276123
    3. '[' → logprob: -3.2983100414276123
    4. '[list' → logprob: -3.6733100414276123
    5. '[s' → logprob: -4.423310279846191
    6. '[V' → logprob: -4.673310279846191
    7. 'range' → logprob: -5.048310279846191
    8. '[x' → logprob: -5.173310279846191
    9. '[n' → logprob: -5.298310279846191
    10. '[i' → logprob: -5.923310279846191

Token 436: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00020830852736253291
    2. 'range' → logprob: -9.000207901000977
    3. '(' → logprob: -9.625207901000977
    4. '(filter' → logprob: -11.125207901000977
    5. '(sorted' → logprob: -13.625207901000977
    6. '(set' → logprob: -13.625207901000977
    7. '(
' → logprob: -14.375207901000977
    8. '(re' → logprob: -14.625207901000977
    9. '(x' → logprob: -15.250207901000977
    10. '(r' → logprob: -15.875207901000977

Token 437: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002491807099431753
    2. 'n' → logprob: -8.375248908996582
    3. '(' → logprob: -11.375248908996582
    4. '(len' → logprob: -12.250248908996582
    5. ')' → logprob: -14.250248908996582
    6. '(s' → logprob: -14.875248908996582
    7. ' (' → logprob: -15.625248908996582
    8. 's' → logprob: -15.625248908996582
    9. 'def' → logprob: -15.875248908996582
    10. '   ' → logprob: -16.0002498626709

Token 438: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.578065037727356
    2. ')
' → logprob: -1.203065037727356
    3. '))' → logprob: -2.3280649185180664
    4. '))
' → logprob: -3.2030649185180664
    5. 'n' → logprob: -8.328064918518066
    6. '(n' → logprob: -8.578064918518066
    7. ')n' → logprob: -9.328064918518066
    8. '[n' → logprob: -10.578064918518066
    9. ')

' → logprob: -11.078064918518066
    10. '   ' → logprob: -11.828064918518066

Token 439: '   ' (ID: 271)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.886871337890625
    2. '.sort' → logprob: -1.011871337890625
    3. '   ' → logprob: -1.886871337890625
    4. ' V' → logprob: -3.761871337890625
    5. ')' → logprob: -4.136871337890625
    6. '<|end|>' → logprob: -5.011871337890625
    7. '[::-' → logprob: -5.136871337890625
    8. '.' → logprob: -5.386871337890625
    9. 'sort' → logprob: -6.136871337890625
    10. '(V' → logprob: -6.136871337890625

Token 440: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -2.045823566731997e-05
    2. 'sort' → logprob: -11.625020027160645
    3. ' V' → logprob: -11.750020027160645
    4. 's' → logprob: -13.000020027160645
    5. '.sort' → logprob: -14.750020027160645
    6. '
' → logprob: -15.000020027160645
    7. '   ' → logprob: -16.00002098083496
    8. '	V' → logprob: -16.50002098083496
    9. ' ' → logprob: -16.62502098083496
    10. '<|end|>' → logprob: -16.75002098083496

Token 441: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.010403290390968323
    2. '.' → logprob: -5.010403156280518
    3. '.reverse' → logprob: -5.635403156280518
    4. 'sort' → logprob: -9.385403633117676
    5. '[::-' → logprob: -11.510403633117676
    6. ' .' → logprob: -11.885403633117676
    7. '.s' → logprob: -12.010403633117676
    8. ' sort' → logprob: -13.135403633117676
    9. '	sort' → logprob: -14.885403633117676
    10. '<|end|>' → logprob: -15.010403633117676

Token 442: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0003872974484693259
    2. '(reverse' → logprob: -8.250387191772461
    3. '()' → logprob: -9.000387191772461
    4. '(' → logprob: -13.000387191772461
    5. 'key' → logprob: -15.500387191772461
    6. '(lambda' → logprob: -15.750387191772461
    7. 'reverse' → logprob: -16.87538719177246
    8. '(
' → logprob: -17.50038719177246
    9. ' key' → logprob: -18.25038719177246
    10. '()
' → logprob: -18.37538719177246

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35894808173179626
    2. '=lambda' → logprob: -1.3589481115341187
    3. ' =' → logprob: -3.108947992324829
    4. '=
' → logprob: -11.73394775390625
    5. '=l' → logprob: -13.60894775390625
    6. '＝' → logprob: -15.23394775390625
    7. 'lambda' → logprob: -15.35894775390625
    8. '=v' → logprob: -15.98394775390625
    9. '=\' → logprob: -16.10894775390625
    10. '=len' → logprob: -16.35894775390625

Token 444: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6339033246040344
    2. ' lambda' → logprob: -0.7589033246040344
    3. '=lambda' → logprob: -6.758903503417969
    4. '(lambda' → logprob: -9.383903503417969
    5. ' lamb' → logprob: -11.258903503417969
    6. 'lam' → logprob: -11.383903503417969
    7. 'a' → logprob: -11.758903503417969
    8. 'ambda' → logprob: -12.383903503417969
    9. 'c' → logprob: -12.383903503417969
    10. '   ' → logprob: -13.008903503417969

Token 445: ' x' (ID: 1215)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.269799828529358
    2. 'x' → logprob: -1.394799828529358
    3. 'lambda' → logprob: -1.394799828529358
    4. ' x' → logprob: -2.5197997093200684
    5. ' lambda' → logprob: -2.8947997093200684
    6. 'c' → logprob: -2.8947997093200684
    7. 'd' → logprob: -3.7697997093200684
    8. ' =' → logprob: -5.644799709320068
    9. ' c' → logprob: -5.769799709320068
    10. 's' → logprob: -7.519799709320068

Token 446: ':s' (ID: 31023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2362552434206009
    2. ':-' → logprob: -2.111255168914795
    3. ':c' → logprob: -3.486255168914795
    4. '=lambda' → logprob: -3.986255168914795
    5. ':d' → logprob: -4.486255168914795
    6. '=' → logprob: -4.611255168914795
    7. ':x' → logprob: -4.611255168914795
    8. ':s' → logprob: -6.111255168914795
    9. ' :' → logprob: -6.361255168914795
    10. '=-' → logprob: -6.361255168914795

Token 447: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.869639476761222e-05
    2. 'x' → logprob: -10.500039100646973
    3. '[' → logprob: -11.750039100646973
    4. '[
' → logprob: -13.250039100646973
    5. '[-' → logprob: -14.875039100646973
    6. '(x' → logprob: -15.250039100646973
    7. ')' → logprob: -15.375039100646973
    8. '<x' → logprob: -16.250038146972656
    9. '
' → logprob: -16.625038146972656
    10. ':x' → logprob: -16.875038146972656

Token 448: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35218900442123413
    2. ',' → logprob: -1.227189064025879
    3. ' )' → logprob: -6.227189064025879
    4. ' ,' → logprob: -7.102189064025879
    5. ')
' → logprob: -7.977189064025879
    6. '))' → logprob: -8.852189064025879
    7. '])' → logprob: -8.977189064025879
    8. '):' → logprob: -9.102189064025879
    9. ':' → logprob: -10.102189064025879
    10. ',
' → logprob: -10.102189064025879

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03300727903842926
    2. ' for' → logprob: -3.7830073833465576
    3. 'for' → logprob: -4.6580071449279785
    4. '    
' → logprob: -9.908007621765137
    5. '
' → logprob: -10.158007621765137
    6. ',' → logprob: -10.783007621765137
    7. 'c' → logprob: -10.908007621765137
    8. '<|end|>' → logprob: -11.408007621765137
    9. 's' → logprob: -11.533007621765137
    10. ')' → logprob: -11.658007621765137

Token 450: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8196950554847717
    2. 'for' → logprob: -1.069694995880127
    3. 'ans' (adapté à ' ans') → logprob: -2.069694995880127
    4. 'res' → logprob: -3.069694995880127
    5. '   ' → logprob: -4.569694995880127
    6. 'r' → logprob: -4.944694995880127
    7. 'f' → logprob: -5.694694995880127
    8. 'ret' → logprob: -5.819694995880127
    9. 'p' → logprob: -5.944694995880127
    10. 'g' → logprob: -6.069694995880127

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024291515350342
    2. '=' → logprob: -1.9102429151535034
    3. ',' → logprob: -11.285243034362793
    4. ' ' → logprob: -13.535243034362793
    5. ' =[' → logprob: -13.535243034362793
    6. '[' → logprob: -13.660243034362793
    7. '_' → logprob: -14.160243034362793
    8. '=[' → logprob: -15.285243034362793
    9. '_=' → logprob: -15.535243034362793
    10. '＝' → logprob: -15.660243034362793

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015626046806573868
    2. ' ' → logprob: -5.265625953674316
    3. 's' → logprob: -6.265625953674316
    4. '[' → logprob: -6.515625953674316
    5. 'c' → logprob: -6.640625953674316
    6. 'sum' → logprob: -6.890625953674316
    7. 'max' → logprob: -6.890625953674316
    8. '1' → logprob: -7.515625953674316
    9. '-' → logprob: -7.515625953674316
    10. 'float' → logprob: -7.890625953674316

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030397692695260048
    2. '[' → logprob: -4.655397891998291
    3. 'c' → logprob: -5.155397891998291
    4. 'max' → logprob: -5.655397891998291
    5. 'float' → logprob: -5.905397891998291
    6. 'sum' → logprob: -6.280397891998291
    7. '-' → logprob: -6.280397891998291
    8. 's' → logprob: -7.155397891998291
    9. 'math' → logprob: -7.280397891998291
    10. '1' → logprob: -7.905397891998291

Token 454: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7302550673484802
    2. 'for' → logprob: -1.355255126953125
    3. ' for' → logprob: -1.605255126953125
    4. '   ' → logprob: -2.855255126953125
    5. '	for' → logprob: -7.355255126953125
    6. '<|end|>' → logprob: -7.605255126953125
    7. '    
' → logprob: -8.480255126953125
    8. '\n' → logprob: -8.730255126953125
    9. ' 
' → logprob: -9.105255126953125
    10. '' → logprob: -10.105255126953125

Token 455: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2605041563510895
    2. ' for' → logprob: -1.760504126548767
    3. '   ' → logprob: -2.8855042457580566
    4. '
' → logprob: -7.010504245758057
    5. '	for' → logprob: -7.510504245758057
    6. '<|end|>' → logprob: -10.260503768920898
    7. ',' → logprob: -11.635503768920898
    8. '    
' → logprob: -11.635503768920898
    9. '  ' → logprob: -11.635503768920898
    10. ' ' → logprob: -12.385503768920898

Token 456: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003398726985324174
    2. ' for' → logprob: -8.12533950805664
    3. 'f' → logprob: -11.00033950805664
    4. 'i' → logprob: -11.37533950805664
    5. '   ' → logprob: -12.25033950805664
    6. 'ans' → logprob: -13.75033950805664
    7. 'fo' → logprob: -13.75033950805664
    8. 'p' → logprob: -14.00033950805664
    9. ')' → logprob: -14.25033950805664
    10. 'mult' → logprob: -14.37533950805664

Token 457: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25340595841407776
    2. ' x' → logprob: -1.5034059286117554
    3. ' i' → logprob: -7.003406047821045
    4. 'i' → logprob: -7.503406047821045
    5. 'v' → logprob: -12.253405570983887
    6. ' v' → logprob: -12.253405570983887
    7. ' ' → logprob: -12.878405570983887
    8. 'u' → logprob: -14.378405570983887
    9. '	x' → logprob: -14.628405570983887
    10. ' u' → logprob: -15.003405570983887

Token 458: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048685815185308456
    2. 'in' → logprob: -3.0486857891082764
    3. ' ' → logprob: -9.423686027526855
    4. '	in' → logprob: -11.548686027526855
    5. ' i' → logprob: -13.173686027526855
    6. '   ' → logprob: -13.548686027526855
    7. 'n' → logprob: -14.423686027526855
    8. 'In' → logprob: -14.548686027526855
    9. '  ' → logprob: -14.548686027526855
    10. ' x' → logprob: -14.798686027526855

Token 459: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.001936962129548192
    2. ' V' → logprob: -6.251936912536621
    3. 'range' → logprob: -12.001936912536621
    4. ' range' → logprob: -13.251936912536621
    5. ' ' → logprob: -14.751936912536621
    6. '   ' → logprob: -17.376937866210938
    7. '	V' → logprob: -17.501937866210938
    8. 's' → logprob: -18.126937866210938
    9. 'v' → logprob: -18.376937866210938
    10. '  ' → logprob: -19.126937866210938

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00288772932253778
    2. ':
' → logprob: -5.877887725830078
    3. '   ' → logprob: -10.752887725830078
    4. ',' → logprob: -11.252887725830078
    5. '=' → logprob: -11.252887725830078
    6. '<|end|>' → logprob: -11.252887725830078
    7. '+' → logprob: -11.377887725830078
    8. '):' → logprob: -13.002887725830078
    9. '):
' → logprob: -13.502887725830078
    10. '{' → logprob: -14.127887725830078

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06199771910905838
    2. '   ' → logprob: -2.811997652053833
    3. '	ans' → logprob: -11.561997413635254
    4. 'ans' → logprob: -12.061997413635254
    5. ' ans' → logprob: -12.061997413635254
    6. ' if' → logprob: -13.311997413635254
    7. '<|end|>' → logprob: -13.311997413635254
    8. ',' → logprob: -14.186997413635254
    9. '           ' → logprob: -14.311997413635254
    10. '      ' → logprob: -14.561997413635254

Token 462: ' m' (ID: 284)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8516297340393066
    2. 'if' → logprob: -0.9766297340393066
    3. 'for' → logprob: -1.7266297340393066
    4. '   ' → logprob: -4.726629734039307
    5. 'c' → logprob: -5.101629734039307
    6. 'dp' → logprob: -8.101629257202148
    7. 'val' → logprob: -8.101629257202148
    8. 'cnt' → logprob: -8.101629257202148
    9. 'tmp' → logprob: -8.226629257202148
    10. 't' → logprob: -8.351629257202148

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7160254120826721
    2. 'ax' → logprob: -1.2160253524780273
    3. 'a' → logprob: -1.9660253524780273
    4. '=' → logprob: -2.8410253524780273
    5. 'x' → logprob: -5.466025352478027
    6. '   ' → logprob: -5.591025352478027
    7. 'od' → logprob: -6.341025352478027
    8. 'ath' → logprob: -6.716025352478027
    9. ' +=' → logprob: -7.091025352478027
    10. '  ' → logprob: -7.466025352478027

Token 464: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4500865340232849
    2. 'max' → logprob: -2.3250865936279297
    3. 'min' → logprob: -2.7000865936279297
    4. 'math' → logprob: -2.9500865936279297
    5. 'abs' → logprob: -3.0750865936279297
    6. 's' → logprob: -3.0750865936279297
    7. 'len' → logprob: -4.20008659362793
    8. 'mod' → logprob: -4.70008659362793
    9. '(c' → logprob: -4.95008659362793
    10. '0' → logprob: -5.20008659362793

Token 465: '0' (ID: 15)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8658016920089722
    2. 'min' → logprob: -1.6158016920089722
    3. 'math' → logprob: -2.2408018112182617
    4. 'max' → logprob: -2.4908018112182617
    5. 's' → logprob: -2.7408018112182617
    6. 'len' → logprob: -2.9908018112182617
    7. 'f' → logprob: -3.6158018112182617
    8. 'abs' → logprob: -3.9908018112182617
    9. 'mod' → logprob: -4.615801811218262
    10. '0' → logprob: -5.115801811218262

Token 466: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8209989666938782
    2. '<|end|>' → logprob: -0.9459989666938782
    3. '
' → logprob: -2.0709989070892334
    4. '+' → logprob: -4.4459991455078125
    5. ' ' → logprob: -4.5709991455078125
    6. ',' → logprob: -5.6959991455078125
    7. '<|end|>' → logprob: -5.8209991455078125
    8. '        ' → logprob: -5.8209991455078125
    9. '	' → logprob: -5.9459991455078125
    10. '		
' → logprob: -6.8209991455078125

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015370006440207362
    2. ' for' → logprob: -7.001536846160889
    3. '<|end|>' → logprob: -8.251537322998047
    4. '   ' → logprob: -9.376537322998047
    5. '	' → logprob: -9.751537322998047
    6. '	for' → logprob: -10.001537322998047
    7. ',' → logprob: -10.126537322998047
    8. 'for' → logprob: -10.626537322998047
    9. ' s' → logprob: -11.001537322998047
    10. '	   ' → logprob: -11.251537322998047

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02855294942855835
    2. ' for' → logprob: -4.153553009033203
    3. '       ' → logprob: -4.403553009033203
    4. 'l' → logprob: -10.278553009033203
    5. 's' → logprob: -10.278553009033203
    6. 'f' → logprob: -10.653553009033203
    7. '   ' → logprob: -10.778553009033203
    8. 'if' → logprob: -11.153553009033203
    9. 't' → logprob: -11.153553009033203
    10. 'c' → logprob: -11.528553009033203

Token 469: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0076318238861858845
    2. ' y' → logprob: -4.882631778717041
    3. 'z' → logprob: -10.7576322555542
    4. 'w' → logprob: -13.6326322555542
    5. 'u' → logprob: -13.8826322555542
    6. 'i' → logprob: -14.5076322555542
    7. 'x' → logprob: -15.0076322555542
    8. '_y' → logprob: -15.7576322555542
    9. ' z' → logprob: -15.7576322555542
    10. 'v' → logprob: -15.8826322555542

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12723129987716675
    2. 'in' → logprob: -2.1272313594818115
    3. ' ' → logprob: -8.50223159790039
    4. '	in' → logprob: -9.37723159790039
    5. ' y' → logprob: -12.12723159790039
    6. ' i' → logprob: -13.12723159790039
    7. 's' → logprob: -13.62723159790039
    8. 'n' → logprob: -13.62723159790039
    9. '_in' → logprob: -14.37723159790039
    10. ',' → logprob: -14.50223159790039

Token 471: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014165272004902363
    2. ' v' → logprob: -4.26416540145874
    3. '[v' → logprob: -13.514164924621582
    4. '(v' → logprob: -16.1391658782959
    5. '	v' → logprob: -16.3891658782959
    6. 's' → logprob: -16.5141658782959
    7. '   ' → logprob: -16.5141658782959
    8. ')v' → logprob: -17.6391658782959
    9. '<v' → logprob: -18.3891658782959
    10. '$v' → logprob: -18.3891658782959

Token 472: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.227250610711053e-05
    2. '[' → logprob: -10.875041961669922
    3. '[
' → logprob: -11.000041961669922
    4. ' [' → logprob: -12.500041961669922
    5. 'x' → logprob: -12.875041961669922
    6. '{x' → logprob: -16.375041961669922
    7. '   ' → logprob: -16.625041961669922
    8. '(x' → logprob: -17.375041961669922
    9. '<x' → logprob: -17.875041961669922
    10. ' x' → logprob: -17.875041961669922

Token 473: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25313037633895874
    2. ':
' → logprob: -1.8781304359436035
    3. ']:
' → logprob: -3.5031304359436035
    4. ']:' → logprob: -3.5031304359436035
    5. '           ' → logprob: -5.1281304359436035
    6. '):
' → logprob: -6.0031304359436035
    7. '):' → logprob: -7.2531304359436035
    8. '       ' → logprob: -7.3781304359436035
    9. ']' → logprob: -7.7531304359436035
    10. 'if' → logprob: -8.753129959106445

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001785967731848359
    2. ':' → logprob: -6.751785755157471
    3. '<|end|>' → logprob: -8.876786231994629
    4. '               ' → logprob: -9.001786231994629
    5. '       ' → logprob: -9.126786231994629
    6. ' if' → logprob: -10.001786231994629
    7. ',' → logprob: -10.251786231994629
    8. '          ' → logprob: -10.376786231994629
    9. ':
' → logprob: -10.501786231994629
    10. '	       ' → logprob: -11.001786231994629

Token 475: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03024723008275032
    2. ' if' → logprob: -3.905247211456299
    3. '           ' → logprob: -5.030247211456299
    4. '               ' → logprob: -5.780247211456299
    5. 'm' → logprob: -11.280247688293457
    6. '   ' → logprob: -11.530247688293457
    7. ' ' → logprob: -12.155247688293457
    8. '  ' → logprob: -13.905247688293457
    9. '	if' → logprob: -14.030247688293457
    10. '       ' → logprob: -14.280247688293457

Token 476: ' s' (ID: 265)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14675605297088623
    2. ' d' → logprob: -2.146756172180176
    3. 's' → logprob: -4.146756172180176
    4. ' s' → logprob: -5.896756172180176
    5. '   ' → logprob: -7.896756172180176
    6. '           ' → logprob: -8.396756172180176
    7. 'y' → logprob: -8.896756172180176
    8. ' y' → logprob: -9.271756172180176
    9. ' ' → logprob: -10.521756172180176
    10. '               ' → logprob: -10.646756172180176

Token 477: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0009925569174811244
    2. '[' → logprob: -7.500992774963379
    3. '[x' → logprob: -8.375992774963379
    4. 'y' → logprob: -8.750992774963379
    5. '[s' → logprob: -10.375992774963379
    6. '[
' → logprob: -12.250992774963379
    7. ' [' → logprob: -12.625992774963379
    8. ']' → logprob: -13.375992774963379
    9. '```' → logprob: -13.375992774963379
    10. 's' → logprob: -13.750992774963379

Token 478: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12416353821754456
    2. '>' → logprob: -2.9991636276245117
    3. ' >' → logprob: -3.9991636276245117
    4. ']>' → logprob: -3.9991636276245117
    5. ' <' → logprob: -4.249163627624512
    6. '<' → logprob: -4.749163627624512
    7. ']<' → logprob: -5.499163627624512
    8. '[' → logprob: -6.624163627624512
    9. ' ]' → logprob: -6.624163627624512
    10. '<s' → logprob: -8.999163627624512

Token 479: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8528097867965698
    2. '<' → logprob: -1.1028097867965698
    3. ' >' → logprob: -1.8528097867965698
    4. ' <' → logprob: -2.4778099060058594
    5. '<m' → logprob: -8.22780990600586
    6. ' ' → logprob: -8.35280990600586
    7. '>=' → logprob: -8.72780990600586
    8. '<=' → logprob: -8.97780990600586
    9. ' <=' → logprob: -9.60280990600586
    10. ' >=' → logprob: -9.60280990600586

Token 480: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008621904999017715
    2. ' s' → logprob: -4.758621692657471
    3. ' ' → logprob: -12.883622169494629
    4. '   ' → logprob: -13.258622169494629
    5. 'm' → logprob: -13.383622169494629
    6. '  ' → logprob: -14.883622169494629
    7. '_s' → logprob: -15.383622169494629
    8. '	s' → logprob: -15.383622169494629
    9. '0' → logprob: -16.383621215820312
    10. '```' → logprob: -16.508621215820312

Token 481: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00012916464766021818
    2. 'x' → logprob: -9.750128746032715
    3. '[' → logprob: -10.375128746032715
    4. '[s' → logprob: -10.625128746032715
    5. 's' → logprob: -11.500128746032715
    6. ' [' → logprob: -13.000128746032715
    7. '[
' → logprob: -13.750128746032715
    8. '```' → logprob: -14.625128746032715
    9. ' x' → logprob: -15.125128746032715
    10. '<x' → logprob: -15.500128746032715

Token 482: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7749423980712891
    2. ']:
' → logprob: -1.524942398071289
    3. ':
' → logprob: -2.024942398071289
    4. ':' → logprob: -2.649942398071289
    5. '               ' → logprob: -2.899942398071289
    6. ']' → logprob: -3.899942398071289
    7. ']:' → logprob: -4.024942398071289
    8. 'and' → logprob: -4.149942398071289
    9. '           ' → logprob: -5.149942398071289
    10. '):
' → logprob: -6.024942398071289

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009272660128772259
    2. ' and' → logprob: -5.134272575378418
    3. ':' → logprob: -6.759272575378418
    4. '           ' → logprob: -7.134272575378418
    5. ':
' → logprob: -7.509272575378418
    6. ' m' → logprob: -8.384272575378418
    7. '                   ' → logprob: -9.384272575378418
    8. 'and' → logprob: -9.384272575378418
    9. 'm' → logprob: -9.759272575378418
    10. ',' → logprob: -10.009272575378418

Token 484: ' if' (ID: 538)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2864002585411072
    2. 'm' → logprob: -1.411400318145752
    3. ' if' → logprob: -6.036400318145752
    4. '               ' → logprob: -6.161400318145752
    5. '           ' → logprob: -8.161399841308594
    6. 'if' (adapté à ' if') → logprob: -8.786399841308594
    7. '                   ' → logprob: -9.036399841308594
    8. ' ' → logprob: -9.786399841308594
    9. '   ' → logprob: -10.286399841308594
    10. '```' → logprob: -10.661399841308594

Token 485: ' m' (ID: 284)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2900431752204895
    2. 'c' → logprob: -1.6650431156158447
    3. ' s' → logprob: -3.5400431156158447
    4. 's' → logprob: -4.290043354034424
    5. ' m' → logprob: -4.915043354034424
    6. ' d' → logprob: -5.415043354034424
    7. 'm' → logprob: -5.540043354034424
    8. 'd' → logprob: -6.165043354034424
    9. 'b' → logprob: -8.040042877197266
    10. '               ' → logprob: -8.290042877197266

Token 486: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5912678241729736
    2. '<' → logprob: -1.0912678241729736
    3. '<s' → logprob: -2.2162678241729736
    4. '<m' → logprob: -7.0912675857543945
    5. 's' → logprob: -8.716267585754395
    6. '<int' → logprob: -9.216267585754395
    7. '<size' → logprob: -9.716267585754395
    8. '<n' → logprob: -9.966267585754395
    9. '<std' → logprob: -9.966267585754395
    10. '<x' → logprob: -10.216267585754395

Token 487: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10410334914922714
    2. 'c' → logprob: -2.4791033267974854
    3. ' s' → logprob: -4.3541035652160645
    4. ' c' → logprob: -6.7291035652160645
    5. 'y' → logprob: -8.104103088378906
    6. '   ' → logprob: -8.854103088378906
    7. 'b' → logprob: -8.854103088378906
    8. 'd' → logprob: -9.229103088378906
    9. '           ' → logprob: -9.479103088378906
    10. '               ' → logprob: -10.354103088378906

Token 488: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.013235993683338165
    2. 'y' → logprob: -5.013236045837402
    3. 's' → logprob: -5.638236045837402
    4. '[s' → logprob: -5.888236045837402
    5. ' y' → logprob: -9.763236045837402
    6. '[' → logprob: -9.888236045837402
    7. ' [' → logprob: -11.513236045837402
    8. '(y' → logprob: -11.638236045837402
    9. '[x' → logprob: -11.763236045837402
    10. ',y' → logprob: -12.763236045837402

Token 489: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4235531687736511
    2. ']+' → logprob: -1.923553228378296
    3. ']' → logprob: -2.298553228378296
    4. ']:' → logprob: -2.548553228378296
    5. '+' → logprob: -4.548552989959717
    6. ' ]' → logprob: -5.173552989959717
    7. ' +' → logprob: -5.923552989959717
    8. '[' → logprob: -8.298553466796875
    9. 'm' → logprob: -8.423553466796875
    10. '   ' → logprob: -8.673553466796875

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21639497578144073
    2. 'm' → logprob: -2.4663949012756348
    3. ' m' → logprob: -2.8413949012756348
    4. '               ' → logprob: -3.4663949012756348
    5. '                       ' → logprob: -5.841394901275635
    6. '           ' → logprob: -6.216394901275635
    7. '                    
' → logprob: -6.341394901275635
    8. '				' → logprob: -6.591394901275635
    9. '	               ' → logprob: -6.841394901275635
    10. ' =' → logprob: -6.966394901275635

Token 491: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.7988331317901611
    2. ' m' → logprob: -1.0488331317901611
    3. '                   ' → logprob: -1.6738331317901611
    4. '               ' → logprob: -5.048832893371582
    5. '                       ' → logprob: -5.298832893371582
    6. '           ' → logprob: -8.298832893371582
    7. '                    ' → logprob: -8.423832893371582
    8. '                    
' → logprob: -9.173832893371582
    9. '   ' → logprob: -10.173832893371582
    10. '
' → logprob: -10.298832893371582

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022828221321106
    2. '=' → logprob: -1.9102282524108887
    3. '=c' → logprob: -13.160228729248047
    4. ' ' → logprob: -13.535228729248047
    5. ',' → logprob: -14.785228729248047
    6. '=m' → logprob: -15.660228729248047
    7. '<|end|>' → logprob: -16.410228729248047
    8. ' =
' → logprob: -16.910228729248047
    9. '=cut' → logprob: -17.410228729248047
    10. ')' → logprob: -17.535228729248047

Token 493: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005234002135694027
    2. ' c' → logprob: -5.2552337646484375
    3. '	c' → logprob: -15.630233764648438
    4. '   ' → logprob: -17.255233764648438
    5. ')c' → logprob: -19.380233764648438
    6. '_c' → logprob: -19.630233764648438
    7. ' ' → logprob: -19.755233764648438
    8. '
' → logprob: -20.255233764648438
    9. '*c' → logprob: -20.755233764648438
    10. '$c' → logprob: -21.130233764648438

Token 494: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.001583066419698298
    2. '[' → logprob: -6.501583099365234
    3. 'y' → logprob: -9.626583099365234
    4. ' [' → logprob: -11.876583099365234
    5. ' y' → logprob: -12.376583099365234
    6. '[
' → logprob: -13.376583099365234
    7. '	y' → logprob: -14.376583099365234
    8. '(y' → logprob: -14.626583099365234
    9. '[x' → logprob: -15.001583099365234
    10. ''y' → logprob: -15.876583099365234

Token 495: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2745321989059448
    2. '<|end|>' → logprob: -1.6495321989059448
    3. ')' → logprob: -3.7745323181152344
    4. ' 
' → logprob: -4.399532318115234
    5. '               ' → logprob: -5.899532318115234
    6. ' )' → logprob: -6.399532318115234
    7. ' ' → logprob: -6.399532318115234
    8. '        ' → logprob: -6.774532318115234
    9. '
' → logprob: -7.149532318115234
    10. ' m' → logprob: -7.524532318115234

Token 497: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10123731195926666
    2. 'ans' (adapté à ' ans') → logprob: -2.8512372970581055
    3. ' ans' → logprob: -4.2262372970581055
    4. ' if' → logprob: -4.7262372970581055
    5. 'if' → logprob: -5.4762372970581055
    6. '+' → logprob: -5.7262372970581055
    7. ')' → logprob: -6.1012372970581055
    8. '   ' → logprob: -7.4762372970581055
    9. '	ans' → logprob: -7.4762372970581055
    10. 's' → logprob: -7.6012372970581055

Token 498: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6933093070983887
    2. '+=' → logprob: -0.6933093070983887
    3. '+' → logprob: -8.943309783935547
    4. '+=(' → logprob: -11.693309783935547
    5. '=' → logprob: -11.943309783935547
    6. ']+=' → logprob: -12.193309783935547
    7. ' -=' → logprob: -12.568309783935547
    8. '+='' → logprob: -12.568309783935547
    9. ' +' → logprob: -13.568309783935547
    10. '+="' → logprob: -13.818309783935547

Token 499: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10120327025651932
    2. 'c' → logprob: -2.851203203201294
    3. 's' → logprob: -4.101203441619873
    4. 'max' → logprob: -4.226203441619873
    5. ' m' → logprob: -5.226203441619873
    6. ' max' → logprob: -7.351203441619873
    7. ' c' → logprob: -7.976203441619873
    8. ' s' → logprob: -8.476202964782715
    9. '(m' → logprob: -8.601202964782715
    10. 'a' → logprob: -8.976202964782715

Token 500: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06522068381309509
    2. '
' → logprob: -2.940220594406128
    3. '<|end|>' → logprob: -5.190220832824707
    4. '\n' → logprob: -6.190220832824707
    5. '    
' → logprob: -6.440220832824707
    6. 'print' → logprob: -7.815220832824707
    7. ' 
' → logprob: -9.440220832824707
    8. 'return' → logprob: -9.565220832824707
    9. '  
' → logprob: -9.690220832824707
    10. ')' → logprob: -9.690220832824707

Token 501: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029497507959604263
    2. 'return' → logprob: -3.9044976234436035
    3. '   ' → logprob: -5.4044976234436035
    4. 'if' → logprob: -6.1544976234436035
    5. 'c' (adapté à ' c') → logprob: -6.5294976234436035
    6. 'ans' → logprob: -8.154497146606445
    7. ' print' → logprob: -8.779497146606445
    8. 'for' → logprob: -9.029497146606445
    9. ' return' → logprob: -9.404497146606445
    10. ' if' → logprob: -9.779497146606445

Token 503: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0007706748438067734
    2. '[' → logprob: -7.875770568847656
    3. '[c' → logprob: -7.875770568847656
    4. 'x' → logprob: -12.625770568847656
    5. ' =' → logprob: -13.250770568847656
    6. ' [' → logprob: -13.250770568847656
    7. ' x' → logprob: -13.875770568847656
    8. '[:]' → logprob: -14.500770568847656
    9. '[y' → logprob: -14.625770568847656
    10. '=' → logprob: -15.000770568847656

Token 504: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.8280386328697205
    2. ']' → logprob: -1.5780386924743652
    3. ' -=' → logprob: -1.5780386924743652
    4. '=' → logprob: -2.0780386924743652
    5. ']+=' → logprob: -4.703038692474365
    6. '+=' → logprob: -5.078038692474365
    7. '-' → logprob: -5.453038692474365
    8. ')' → logprob: -6.078038692474365
    9. ' =' → logprob: -6.453038692474365
    10. ']=' → logprob: -7.203038692474365

Token 505: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13291846215724945
    2. '-=' → logprob: -2.632918357849121
    3. ' =' → logprob: -3.257918357849121
    4. ' -=' → logprob: -4.757918357849121
    5. '+=' → logprob: -5.632918357849121
    6. '=max' → logprob: -6.507918357849121
    7. ' +=' → logprob: -8.757918357849121
    8. '-' → logprob: -9.007918357849121
    9. '*=' → logprob: -9.132918357849121
    10. '>' → logprob: -10.882918357849121

Token 506: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.033740557730197906
    2. 'ans' → logprob: -3.408740520477295
    3. ' m' → logprob: -9.908740997314453
    4. 'max' → logprob: -11.033740997314453
    5. '1' → logprob: -11.408740997314453
    6. ' ans' → logprob: -12.033740997314453
    7. 's' → logprob: -12.658740997314453
    8. 'c' → logprob: -12.908740997314453
    9. '(ans' → logprob: -13.158740997314453
    10. 'a' → logprob: -14.033740997314453

Token 507: '*f' (ID: 103126)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.943783253314905e-05
    2. 'x' → logprob: -9.750059127807617
    3. '[' → logprob: -15.000059127807617
    4. '(x' → logprob: -15.375059127807617
    5. ' [' → logprob: -15.625059127807617
    6. ' x' → logprob: -15.625059127807617
    7. '[c' → logprob: -16.625059127807617
    8. '{x' → logprob: -17.000059127807617
    9. '[
' → logprob: -17.125059127807617
    10. '```' → logprob: -17.375059127807617

Token 509: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' for' (ID: 395)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2561432719230652
    2. ' c' → logprob: -1.75614333152771
    3. '<|end|>' → logprob: -3.75614333152771
    4. '   ' → logprob: -4.506143093109131
    5. 'print' → logprob: -5.381143093109131
    6. ' for' → logprob: -5.631143093109131
    7. '```' → logprob: -6.131143093109131
    8. 'for' (adapté à ' for') → logprob: -6.881143093109131
    9. '#' → logprob: -6.881143093109131
    10. '       ' → logprob: -7.006143093109131

Token 512: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07890962064266205
    2. ' y' → logprob: -2.5789096355438232
    3. '	y' → logprob: -11.203909873962402
    4. 'z' → logprob: -13.703909873962402
    5. 'x' → logprob: -13.703909873962402
    6. ' ' → logprob: -13.953909873962402
    7. '   ' → logprob: -14.328909873962402
    8. '```' → logprob: -15.391409873962402
    9. '(y' → logprob: -15.516409873962402
    10. '_y' → logprob: -15.641409873962402

Token 513: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014190183952450752
    2. 'in' → logprob: -4.264190196990967
    3. '	in' → logprob: -11.264189720153809
    4. ' ' → logprob: -11.639189720153809
    5. '	' → logprob: -13.389189720153809
    6. ' y' → logprob: -14.139189720153809
    7. '   ' → logprob: -14.514189720153809
    8. '  ' → logprob: -14.764189720153809
    9. '    ' → logprob: -14.764189720153809
    10. '        ' → logprob: -15.014189720153809

Token 514: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12693282961845398
    2. ' v' → logprob: -2.1269328594207764
    3. '[v' → logprob: -12.751933097839355
    4. '	v' → logprob: -13.376933097839355
    5. '(v' → logprob: -15.501933097839355
    6. '<v' → logprob: -17.37693214416504
    7. 'user' → logprob: -17.50193214416504
    8. ')v' → logprob: -17.62693214416504
    9. ' ' → logprob: -17.87693214416504
    10. '?v' → logprob: -18.00193214416504

Token 515: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.37500286102295
    3. 'x' → logprob: -14.12500286102295
    4. ' [' → logprob: -15.00000286102295
    5. '[
' → logprob: -15.12500286102295
    6. '{x' → logprob: -16.875003814697266
    7. '<x' → logprob: -17.000003814697266
    8. '```' → logprob: -17.375003814697266
    9. '[y' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.375003814697266

Token 516: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4443669319152832
    2. ']:
' → logprob: -1.0693669319152832
    3. ']' → logprob: -4.444366931915283
    4. ':' → logprob: -5.694366931915283
    5. ':
' → logprob: -8.944366455078125
    6. ']:
' → logprob: -8.944366455078125
    7. '           ' → logprob: -9.569366455078125
    8. ' ]' → logprob: -10.319366455078125
    9. ']:

' → logprob: -11.319366455078125
    10. ']>' → logprob: -11.444366455078125

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029937230050563812
    2. '       ' → logprob: -3.654937267303467
    3. ' if' → logprob: -6.904937267303467
    4. '   ' → logprob: -6.904937267303467
    5. '	       ' → logprob: -6.904937267303467
    6. '<|end|>' → logprob: -8.529936790466309
    7. '        ' → logprob: -9.154936790466309
    8. ' ' → logprob: -9.279936790466309
    9. '               ' → logprob: -9.779936790466309
    10. '          ' → logprob: -10.154936790466309

Token 518: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28534334897994995
    2. 'if' (adapté à ' if') → logprob: -2.0353434085845947
    3. '               ' → logprob: -2.1603434085845947
    4. '           ' → logprob: -6.410343170166016
    5. ' s' → logprob: -8.410343170166016
    6. '   ' → logprob: -8.660343170166016
    7. 's' → logprob: -8.785343170166016
    8. ' ' → logprob: -10.410343170166016
    9. '            ' → logprob: -10.785343170166016
    10. '    ' → logprob: -11.535343170166016

Token 519: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04257979243993759
    2. ' s' → logprob: -3.6675798892974854
    3. 'd' → logprob: -4.292579650878906
    4. 'c' → logprob: -6.792579650878906
    5. '   ' → logprob: -7.292579650878906
    6. ' d' → logprob: -7.917579650878906
    7. 'y' → logprob: -9.417579650878906
    8. '           ' → logprob: -9.667579650878906
    9. 'f' → logprob: -10.042579650878906
    10. ' c' → logprob: -10.542579650878906

Token 520: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00019150081789121032
    2. 'y' → logprob: -8.750191688537598
    3. '[x' → logprob: -10.375191688537598
    4. '[s' → logprob: -14.375191688537598
    5. '[
' → logprob: -14.625191688537598
    6. '[' → logprob: -15.750191688537598
    7. '   ' → logprob: -15.875191688537598
    8. '	y' → logprob: -16.00019073486328
    9. '(y' → logprob: -16.00019073486328
    10. ' y' → logprob: -16.12519073486328

Token 521: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.41805383563041687
    2. '<' → logprob: -1.5430538654327393
    3. ']' → logprob: -2.1680538654327393
    4. ']<' → logprob: -4.91805362701416
    5. '>' → logprob: -5.91805362701416
    6. '[' → logprob: -6.29305362701416
    7. ' >' → logprob: -7.41805362701416
    8. '<x' → logprob: -7.91805362701416
    9. '[y' → logprob: -8.41805362701416
    10. '][' → logprob: -9.29305362701416

Token 522: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33343610167503357
    2. ' <' → logprob: -1.458436131477356
    3. '>' → logprob: -3.2084360122680664
    4. ' >' → logprob: -4.583436012268066
    5. '<s' → logprob: -8.583436012268066
    6. '<x' → logprob: -10.583436012268066
    7. '<c' → logprob: -10.708436012268066
    8. ' ' → logprob: -11.333436012268066
    9. '>=' → logprob: -11.333436012268066
    10. ' >=' → logprob: -12.208436012268066

Token 523: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11285648494958878
    2. ' s' → logprob: -2.237856388092041
    3. 'c' → logprob: -10.7378568649292
    4. ' c' → logprob: -11.8628568649292
    5. '   ' → logprob: -12.7378568649292
    6. ' ' → logprob: -14.1128568649292
    7. '	s' → logprob: -15.2378568649292
    8. '       ' → logprob: -15.8628568649292
    9. '           ' → logprob: -15.9878568649292
    10. '```' → logprob: -15.9878568649292

Token 524: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9504606825648807e-05
    2. 'x' → logprob: -11.750019073486328
    3. 's' → logprob: -12.250019073486328
    4. '[' → logprob: -12.875019073486328
    5. '[s' → logprob: -12.875019073486328
    6. '[y' → logprob: -14.750019073486328
    7. '```' → logprob: -15.125019073486328
    8. '(x' → logprob: -15.125019073486328
    9. '<x' → logprob: -15.625019073486328
    10. ' x' → logprob: -15.750019073486328

Token 525: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.10917063057422638
    2. ':
' → logprob: -2.60917067527771
    3. ']:' → logprob: -4.234170436859131
    4. ':' → logprob: -4.734170436859131
    5. '               ' → logprob: -5.359170436859131
    6. '():
' → logprob: -6.984170436859131
    7. '):
' → logprob: -8.234170913696289
    8. '           ' → logprob: -8.734170913696289
    9. ']:
' → logprob: -9.109170913696289
    10. '']:
' → logprob: -9.484170913696289

Token 526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008378406055271626
    2. ' c' → logprob: -4.883378505706787
    3. 'c' → logprob: -7.508378505706787
    4. '   ' → logprob: -8.633378028869629
    5. ' ' → logprob: -10.758378028869629
    6. '	c' → logprob: -12.633378028869629
    7. '                   ' → logprob: -12.758378028869629
    8. '           ' → logprob: -12.758378028869629
    9. '```' → logprob: -13.133378028869629
    10. '       ' → logprob: -13.383378028869629

Token 527: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2757837176322937
    2. ' c' → logprob: -2.1507837772369385
    3. 'if' (adapté à ' if') → logprob: -2.4007837772369385
    4. ' if' → logprob: -3.9007837772369385
    5. '               ' → logprob: -4.900783538818359
    6. '                   ' → logprob: -5.275783538818359
    7. '   ' → logprob: -7.150783538818359
    8. ' ' → logprob: -8.27578353881836
    9. '	c' → logprob: -9.52578353881836
    10. '                       ' → logprob: -10.77578353881836

Token 528: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.039956044405698776
    2. ' c' → logprob: -3.7899560928344727
    3. 'm' → logprob: -4.664956092834473
    4. 'f' → logprob: -6.414956092834473
    5. 'd' → logprob: -6.539956092834473
    6. 's' → logprob: -6.914956092834473
    7. '   ' → logprob: -7.164956092834473
    8. 'y' → logprob: -7.289956092834473
    9. ' m' → logprob: -8.289956092834473
    10. 'b' → logprob: -8.664956092834473

Token 529: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00021390743495430797
    2. '[x' → logprob: -8.750213623046875
    3. 'y' → logprob: -10.500213623046875
    4. '[' → logprob: -11.125213623046875
    5. ' y' → logprob: -12.000213623046875
    6. '[c' → logprob: -13.250213623046875
    7. '(y' → logprob: -13.750213623046875
    8. '```' → logprob: -13.750213623046875
    9. ' [' → logprob: -14.125213623046875
    10. '][' → logprob: -14.125213623046875

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7836796045303345
    2. '>' → logprob: -1.1586796045303345
    3. ' >' → logprob: -1.9086796045303345
    4. ']>' → logprob: -2.783679485321045
    5. '+' → logprob: -4.658679485321045
    6. ']+' → logprob: -5.658679485321045
    7. ' +' → logprob: -6.408679485321045
    8. ' ]' → logprob: -6.783679485321045
    9. '                   ' → logprob: -7.283679485321045
    10. '               ' → logprob: -7.533679485321045

Token 531: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15011358261108398
    2. ' >' → logprob: -2.025113582611084
    3. '<' → logprob: -5.400113582611084
    4. ' <' → logprob: -5.900113582611084
    5. '+' → logprob: -10.400114059448242
    6. '==' → logprob: -10.650114059448242
    7. ' ' → logprob: -11.400114059448242
    8. ' +' → logprob: -11.525114059448242
    9. '>=' → logprob: -11.650114059448242
    10. '!=' → logprob: -11.900114059448242

Token 532: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006356273777782917
    2. ' c' → logprob: -5.131356239318848
    3. '0' → logprob: -8.381356239318848
    4. '   ' → logprob: -9.506356239318848
    5. '               ' → logprob: -10.256356239318848
    6. '           ' → logprob: -10.506356239318848
    7. '                   ' → logprob: -10.881356239318848
    8. '	c' → logprob: -11.631356239318848
    9. ' ' → logprob: -12.006356239318848
    10. '=c' → logprob: -12.381356239318848

Token 533: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.013016337528824806
    2. ':' → logprob: -4.763016223907471
    3. '                   ' → logprob: -6.013016223907471
    4. '+' → logprob: -6.763016223907471
    5. '               ' → logprob: -8.638016700744629
    6. '=' → logprob: -9.138016700744629
    7. '+c' → logprob: -9.388016700744629
    8. ' +' → logprob: -9.513016700744629
    9. '):
' → logprob: -9.638016700744629
    10. ' =' → logprob: -9.763016700744629

Token 534: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026628158520907164
    2. ' c' → logprob: -6.252662658691406
    3. '               ' → logprob: -8.252662658691406
    4. '                       ' → logprob: -8.627662658691406
    5. '   ' → logprob: -9.377662658691406
    6. 'c' → logprob: -9.502662658691406
    7. '           ' → logprob: -9.752662658691406
    8. '
' → logprob: -10.877662658691406
    9. ' =' → logprob: -11.502662658691406
    10. '                  ' → logprob: -11.627662658691406

Token 535: ' res' (ID: 694)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11030817031860352
    2. '                   ' → logprob: -2.3603081703186035
    3. ' c' → logprob: -4.7353081703186035
    4. '               ' → logprob: -7.2353081703186035
    5. '                       ' → logprob: -8.110307693481445
    6. '   ' → logprob: -8.735307693481445
    7. '	c' → logprob: -10.610307693481445
    8. '           ' → logprob: -10.860307693481445
    9. '                  ' → logprob: -11.485307693481445
    10. '                    ' → logprob: -11.735307693481445

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03591926395893097
    2. '=' → logprob: -3.535919189453125
    3. '                   ' → logprob: -6.035919189453125
    4. ' c' → logprob: -6.535919189453125
    5. 'c' → logprob: -7.285919189453125
    6. '                       ' → logprob: -8.160919189453125
    7. '=c' → logprob: -8.410919189453125
    8. '                           ' → logprob: -8.910919189453125
    9. ' =
' → logprob: -9.160919189453125
    10. '=
' → logprob: -9.285919189453125

Token 537: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04074903577566147
    2. ' m' → logprob: -3.6657490730285645
    3. 'False' → logprob: -5.0407490730285645
    4. 'c' → logprob: -5.6657490730285645
    5. 'True' → logprob: -6.4157490730285645
    6. '0' → logprob: -7.6657490730285645
    7. ' False' → logprob: -7.9157490730285645
    8. '                   ' → logprob: -7.9157490730285645
    9. ' c' → logprob: -8.165748596191406
    10. ' True' → logprob: -8.290748596191406

Token 538: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10568280518054962
    2. '-' → logprob: -2.605682849884033
    3. '<|end|>' → logprob: -4.730682849884033
    4. ' =' → logprob: -5.480682849884033
    5. '                   ' → logprob: -6.105682849884033
    6. '
' → logprob: -6.355682849884033
    7. '=' → logprob: -6.355682849884033
    8. '-c' → logprob: -6.355682849884033
    9. '                    
' → logprob: -7.480682849884033
    10. 'c' → logprob: -7.480682849884033

Token 539: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0032237025443464518
    2. 'y' → logprob: -5.753223896026611
    3. '[' → logprob: -10.878223419189453
    4. '	y' → logprob: -11.878223419189453
    5. ' y' → logprob: -12.253223419189453
    6. '                   ' → logprob: -13.128223419189453
    7. '               ' → logprob: -13.253223419189453
    8. '       ' → logprob: -13.503223419189453
    9. '   ' → logprob: -13.878223419189453
    10. '\[' → logprob: -13.878223419189453

Token 540: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026665038894861937
    2. '
' → logprob: -6.877666473388672
    3. '                    
' → logprob: -8.002666473388672
    4. ')
' → logprob: -8.377666473388672
    5. '                  ' → logprob: -8.502666473388672
    6. '               ' → logprob: -8.627666473388672
    7. ']' → logprob: -8.752666473388672
    8. ']
' → logprob: -9.002666473388672
    9. ')' → logprob: -9.127666473388672
    10. '<|end|>' → logprob: -9.377666473388672

Token 541: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00043400691356509924
    2. '               ' → logprob: -8.875433921813965
    3. '
' → logprob: -9.000433921813965
    4. '                       ' → logprob: -10.125433921813965
    5. '                    
' → logprob: -10.250433921813965
    6. ' c' → logprob: -10.500433921813965
    7. '           ' → logprob: -11.000433921813965
    8. '                  ' → logprob: -11.500433921813965
    9. '<|end|>' → logprob: -12.000433921813965
    10. '				' → logprob: -12.500433921813965

Token 542: ' ans' (ID: 3345)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0668061226606369
    2. ' c' → logprob: -2.9418060779571533
    3. 'c' → logprob: -4.566806316375732
    4. '               ' → logprob: -7.691806316375732
    5. ' for' → logprob: -8.066805839538574
    6. '           ' → logprob: -8.941805839538574
    7. 'for' → logprob: -9.191805839538574
    8. 'b' → logprob: -9.316805839538574
    9. '   ' → logprob: -9.441805839538574
    10. '                  ' → logprob: -9.691805839538574

Token 543: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09193244576454163
    2. '+=' → logprob: -2.466932535171509
    3. ' -=' → logprob: -5.84193229675293
    4. '-=' → logprob: -10.46693229675293
    5. '+' → logprob: -10.84193229675293
    6. '                   ' → logprob: -11.71693229675293
    7. '           ' → logprob: -12.21693229675293
    8. ']+=' → logprob: -12.46693229675293
    9. '          ' → logprob: -12.96693229675293
    10. '   ' → logprob: -13.21693229675293

Token 544: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12693241238594055
    2. ' res' → logprob: -2.126932382583618
    3. '                   ' → logprob: -13.001932144165039
    4. '(res' → logprob: -14.501932144165039
    5. 'r' → logprob: -15.001932144165039
    6. '	res' → logprob: -15.626932144165039
    7. 'ress' → logprob: -15.751932144165039
    8. 're' → logprob: -15.876932144165039
    9. '                       ' → logprob: -16.00193214416504
    10. '
' → logprob: -16.25193214416504

Token 545: '*s' (ID: 71191)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.096126576769166e-05
    2. '               ' → logprob: -11.000041007995605
    3. '
' → logprob: -11.750041007995605
    4. '           ' → logprob: -11.750041007995605
    5. '                  ' → logprob: -13.250041007995605
    6. ',' → logprob: -13.500041007995605
    7. '       ' → logprob: -13.875041007995605
    8. '                    
' → logprob: -14.000041007995605
    9. '```' → logprob: -14.000041007995605
    10. '                       ' → logprob: -14.125041007995605

Token 546: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.003269453067332506
    2. 'y' → logprob: -5.753269672393799
    3. '[x' → logprob: -9.75326919555664
    4. '[' → logprob: -11.00326919555664
    5. ' y' → logprob: -12.25326919555664
    6. '	y' → logprob: -12.25326919555664
    7. '(y' → logprob: -12.37826919555664
    8. ',y' → logprob: -13.87826919555664
    9. '[
' → logprob: -14.87826919555664
    10. '   ' → logprob: -15.12826919555664

Token 547: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010543791577219963
    2. ' c' → logprob: -5.3855438232421875
    3. '<|end|>' → logprob: -5.7605438232421875
    4. '               ' → logprob: -6.5105438232421875
    5. '           ' → logprob: -8.385543823242188
    6. 'c' → logprob: -8.385543823242188
    7. '                  ' → logprob: -8.510543823242188
    8. ' 
' → logprob: -9.135543823242188
    9. ' ' → logprob: -9.510543823242188
    10. '   ' → logprob: -10.010543823242188

Token 549: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.09004940837621689
    2. '                   ' → logprob: -2.8400495052337646
    3. ' c' → logprob: -3.5900495052337646
    4. '               ' → logprob: -9.965049743652344
    5. '```' → logprob: -11.090049743652344
    6. '                  ' → logprob: -11.340049743652344
    7. '           ' → logprob: -11.590049743652344
    8. '                       ' → logprob: -12.590049743652344
    9. '                    ' → logprob: -13.215049743652344
    10. ' ' → logprob: -14.090049743652344

Token 550: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0007008800748735666
    2. 'y' → logprob: -7.500700950622559
    3. '[x' → logprob: -9.000700950622559
    4. '[' → logprob: -11.250700950622559
    5. ' y' → logprob: -12.250700950622559
    6. '[c' → logprob: -13.000700950622559
    7. '	y' → logprob: -13.750700950622559
    8. '   ' → logprob: -14.500700950622559
    9. '```' → logprob: -14.500700950622559
    10. '[
' → logprob: -14.750700950622559

Token 551: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.277259886264801
    2. ']-' → logprob: -2.1522598266601562
    3. '-=' → logprob: -2.5272598266601562
    4. ']+=' → logprob: -3.9022598266601562
    5. ' -=' → logprob: -4.402259826660156
    6. '-' → logprob: -5.027259826660156
    7. '[' → logprob: -6.152259826660156
    8. '[x' → logprob: -6.277259826660156
    9. '[-' → logprob: -6.902259826660156
    10. '+=' → logprob: -7.527259826660156

Token 552: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.05292138829827309
    2. ' -=' → logprob: -3.0529212951660156
    3. '+=' → logprob: -5.927921295166016
    4. '-' → logprob: -6.427921295166016
    5. ' +=' → logprob: -10.552921295166016
    6. '=' → logprob: -11.052921295166016
    7. '   ' → logprob: -13.802921295166016
    8. '[-' → logprob: -14.927921295166016
    9. ' -' → logprob: -14.927921295166016
    10. '[' → logprob: -15.302921295166016

Token 553: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004895264864899218
    2. ' res' → logprob: -7.625489711761475
    3. 's' → logprob: -14.125489234924316
    4. '(res' → logprob: -14.500489234924316
    5. 'f' → logprob: -16.375490188598633
    6. 'r' → logprob: -16.750490188598633
    7. '	res' → logprob: -17.250490188598633
    8. 'ress' → logprob: -17.250490188598633
    9. ' s' → logprob: -17.625490188598633
    10. 'c' → logprob: -18.625490188598633

Token 554: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6345018148422241
    2. 's' → logprob: -2.0095019340515137
    3. '*f' → logprob: -2.2595019340515137
    4. '<|end|>' → logprob: -2.6345019340515137
    5. 'f' → logprob: -3.2595019340515137
    6. ' f' → logprob: -3.5095019340515137
    7. '               ' → logprob: -3.6345019340515137
    8. ' s' → logprob: -4.134501934051514
    9. '*s' → logprob: -4.384501934051514
    10. '       ' → logprob: -4.509501934051514

Token 555: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6504955887794495
    2. ':' → logprob: -1.4004955291748047
    3. ':
' → logprob: -2.7754955291748047
    4. '           ' → logprob: -3.6504955291748047
    5. ' :' → logprob: -3.7754955291748047
    6. '       ' → logprob: -3.9004955291748047
    7. ' if' → logprob: -4.025495529174805
    8. '                   ' → logprob: -4.275495529174805
    9. ' :
' → logprob: -4.275495529174805
    10. ' c' → logprob: -4.775495529174805

Token 558: '               ' (ID: 506)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.43594107031822205
    2. '               ' → logprob: -2.310940980911255
    3. '           ' → logprob: -2.685940980911255
    4. 'c' → logprob: -2.685940980911255
    5. '                   ' → logprob: -2.935940980911255
    6. '       ' → logprob: -3.435940980911255
    7. '   ' → logprob: -4.685941219329834
    8. ' if' → logprob: -4.685941219329834
    9. ' for' → logprob: -5.810941219329834
    10. ' f' → logprob: -6.185941219329834

Token 559: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.2800348103046417
    2. 'if' → logprob: -1.5300347805023193
    3. 'ans' → logprob: -4.530035018920898
    4. 'pass' → logprob: -5.280035018920898
    5. 'print' → logprob: -6.155035018920898
    6. '   ' → logprob: -6.155035018920898
    7. ' if' → logprob: -6.655035018920898
    8. 'res' → logprob: -6.905035018920898
    9. '                   ' → logprob: -7.155035018920898
    10. ' c' → logprob: -7.280035018920898

Token 560: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.07264430075883865
    2. '[x' → logprob: -2.6976442337036133
    3. '[' → logprob: -6.072644233703613
    4. 'y' → logprob: -8.197644233703613
    5. 'x' → logprob: -10.197644233703613
    6. '[
' → logprob: -10.572644233703613
    7. ' y' → logprob: -10.822644233703613
    8. '[c' → logprob: -11.197644233703613
    9. '<|end|>' → logprob: -11.947644233703613
    10. '=' → logprob: -12.697644233703613

Token 561: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18826612830162048
    2. '+=' → logprob: -1.8132661581039429
    3. ']+=' → logprob: -5.438266277313232
    4. '+' → logprob: -6.438266277313232
    5. '[' → logprob: -6.688266277313232
    6. ' +' → logprob: -8.063265800476074
    7. ' -=' → logprob: -8.313265800476074
    8. ')' → logprob: -8.563265800476074
    9. ']' → logprob: -8.938265800476074
    10. ')+' → logprob: -9.313265800476074

Token 562: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06860365718603134
    2. '-=' → logprob: -3.193603754043579
    3. '=' → logprob: -4.443603515625
    4. ' +=' → logprob: -4.443603515625
    5. ' -=' → logprob: -6.943603515625
    6. ' =' → logprob: -7.943603515625
    7. '=max' → logprob: -8.943603515625
    8. '-' → logprob: -9.443603515625
    9. '+' → logprob: -9.693603515625
    10. '>' → logprob: -9.818603515625

Token 563: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25828883051872253
    2. 'c' → logprob: -1.883288860321045
    3. '1' → logprob: -3.008288860321045
    4. 'res' → logprob: -4.508288860321045
    5. 's' → logprob: -4.633288860321045
    6. ' m' → logprob: -6.008288860321045
    7. 'f' → logprob: -7.258288860321045
    8. 'ans' → logprob: -7.383288860321045
    9. ' c' → logprob: -7.508288860321045
    10. ' s' → logprob: -9.008288383483887

Token 564: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00024203950306400657
    2. '(' → logprob: -8.875242233276367
    3. '()' → logprob: -9.250242233276367
    4. 'ans' → logprob: -12.750242233276367
    5. '('' → logprob: -13.750242233276367
    6. ' (' → logprob: -14.125242233276367
    7. '(abs' → logprob: -14.125242233276367
    8. '(
' → logprob: -15.000242233276367
    9. '(len' → logprob: -15.625242233276367
    10. '(answer' → logprob: -16.375242233276367

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. '()' → logprob: -10.875038146972656
    3. '())' → logprob: -11.875038146972656
    4. ' )' → logprob: -12.375038146972656
    5. ')
' → logprob: -12.500038146972656
    6. '`)' → logprob: -13.750038146972656
    7. '```' → logprob: -13.875038146972656
    8. '')' → logprob: -14.125038146972656
    9. '**' → logprob: -14.625038146972656
    10. ')`' → logprob: -14.750038146972656

Token 569: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25543609261512756
    2. '<|end|>' → logprob: -1.5054360628128052
    3. '\n' → logprob: -6.005435943603516
    4. 'solve' → logprob: -7.880435943603516
    5. '```' → logprob: -9.130435943603516
    6. '<|end|>' → logprob: -9.130435943603516
    7. '

' → logprob: -9.380435943603516
    8. '#' → logprob: -9.755435943603516
    9. '\' → logprob: -9.880435943603516
    10. ' solve' → logprob: -9.880435943603516

Token 572: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19252508878707886
    2. 'solve' → logprob: -2.0675251483917236
    3. '<|end|>' → logprob: -3.3175251483917236
    4. '
' → logprob: -5.0675249099731445
    5. '#' → logprob: -5.8175249099731445
    6. '```' → logprob: -6.4425249099731445
    7. ' solve' → logprob: -7.3175249099731445
    8. ' if' → logprob: -8.442524909973145
    9. '\n' → logprob: -8.817524909973145
    10. '<|end|>' → logprob: -9.817524909973145

Token 573: 'Solve' (ID: 144594)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04151749238371849
    2. 'solve' → logprob: -4.04151725769043
    3. '()
' → logprob: -4.54151725769043
    4. 'if' → logprob: -4.79151725769043
    5. '
' → logprob: -6.29151725769043
    6. '<|end|>' → logprob: -7.54151725769043
    7. '()

' → logprob: -7.66651725769043
    8. '#' → logprob: -8.41651725769043
    9. '_' → logprob: -8.54151725769043
    10. '```' → logprob: -8.79151725769043

Token 575: 'if' (ID: 366)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.16023986041545868
    2. 'if' → logprob: -1.910239815711975
    3. ' solve' → logprob: -11.910240173339844
    4. '```' → logprob: -12.160240173339844
    5. ' if' → logprob: -13.785240173339844
    6. '#' → logprob: -14.660240173339844
    7. '.solve' → logprob: -14.785240173339844
    8. '
' → logprob: -15.035240173339844
    9. 'for' → logprob: -15.535240173339844
    10. '\' → logprob: -15.910240173339844

Token 576: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011127048172056675
    2. '__' → logprob: -4.51112699508667
    3. '_' → logprob: -9.886127471923828
    4. ' ' → logprob: -11.511127471923828
    5. ' ' → logprob: -11.511127471923828
    6. ' _' → logprob: -12.761127471923828
    7. '_name' → logprob: -13.136127471923828
    8. 'name' → logprob: -13.386127471923828
    9. ' name' → logprob: -14.636127471923828
    10. '	' → logprob: -15.261127471923828

Token 577: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11474698781967163
    2. ' __' → logprob: -2.2397470474243164
    3. '_' → logprob: -6.739747047424316
    4. ' ==' → logprob: -7.614747047424316
    5. 'name' → logprob: -9.239747047424316
    6. '==' → logprob: -9.739747047424316
    7. '_name' → logprob: -10.364747047424316
    8. '___' → logprob: -10.989747047424316
    9. ' _' → logprob: -11.364747047424316
    10. '____' → logprob: -11.989747047424316

Token 578: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00037681119283661246
    2. '_' → logprob: -8.75037670135498
    3. '==' → logprob: -8.75037670135498
    4. '=="' → logprob: -10.75037670135498
    5. ' ==' → logprob: -11.00037670135498
    6. '___' → logprob: -11.87537670135498
    7. '__.__' → logprob: -12.25037670135498
    8. '=='' → logprob: -12.62537670135498
    9. '____' → logprob: -12.87537670135498
    10. '__":
' → logprob: -14.25037670135498

Token 579: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.043004035949707
    2. ' ==' → logprob: -1.043004035949707
    3. '==' → logprob: -1.293004035949707
    4. '=="' → logprob: -3.918004035949707
    5. '_' → logprob: -8.418004035949707
    6. '=' → logprob: -8.418004035949707
    7. '=='' → logprob: -8.543004035949707
    8. ' =="' → logprob: -9.168004035949707
    9. '==
' → logprob: -9.293004035949707
    10. ' =' → logprob: -11.543004035949707

Token 580: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01110229454934597
    2. ''' → logprob: -4.511102199554443
    3. ' "__' → logprob: -9.886102676391602
    4. '__' → logprob: -12.761102676391602
    5. ' '__' → logprob: -14.636102676391602
    6. '"_' → logprob: -15.886102676391602
    7. '"user' → logprob: -16.7611026763916
    8. ''"' → logprob: -17.5111026763916
    9. '"name' → logprob: -17.5111026763916
    10. '"class' → logprob: -17.6361026763916

Token 581: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001502717612311244
    2. 'name' → logprob: -6.501502513885498
    3. ' main' → logprob: -15.501502990722656
    4. '_main' → logprob: -16.626502990722656
    5. '"' → logprob: -16.876502990722656
    6. '__' → logprob: -17.501502990722656
    7. 'ma' → logprob: -18.376502990722656
    8. ''' → logprob: -18.626502990722656
    9. 'm' → logprob: -18.751502990722656
    10. ''name' → logprob: -19.626502990722656

Token 582: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2750052511692047
    2. '__":
' → logprob: -1.7750052213668823
    3. '():
' → logprob: -2.775005340576172
    4. '__':
' → logprob: -5.025005340576172
    5. '__:' → logprob: -6.900005340576172
    6. '():' → logprob: -7.275005340576172
    7. '_' → logprob: -9.150005340576172
    8. '()' → logprob: -9.400005340576172
    9. ':' → logprob: -10.025005340576172
    10. '__()
' → logprob: -10.400005340576172

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019565431401133537
    2. 'solve' → logprob: -4.019565582275391
    3. ' solve' → logprob: -7.144565582275391
    4. '	s' → logprob: -7.519565582275391
    5. '.solve' → logprob: -10.01956558227539
    6. '  ' → logprob: -11.76956558227539
    7. '   ' → logprob: -11.76956558227539
    8. ' ' → logprob: -12.51956558227539
    9. '    
' → logprob: -12.64456558227539
    10. '<|end|>' → logprob: -12.64456558227539

Token 584: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.500000953674316
    3. ' solve' → logprob: -14.500000953674316
    4. 'resolve' → logprob: -19.375001907348633
    5. '.solve' → logprob: -19.875001907348633
    6. 'save' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.250001907348633
    8. 'sol' → logprob: -23.625001907348633
    9. '    
' → logprob: -24.000001907348633
    10. '	s' → logprob: -24.750001907348633

Token 585: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4080229699611664
    2. '<|end|>' → logprob: -1.2830229997634888
    3. '\n' → logprob: -3.033022880554199
    4. '()' → logprob: -5.408022880554199
    5. ')' → logprob: -6.283022880554199
    6. '#' → logprob: -6.408022880554199
    7. '(' → logprob: -7.533022880554199
    8. '```' → logprob: -7.658022880554199
    9. '\' → logprob: -8.5330228805542
    10. '<|end|>' → logprob: -8.9080228805542


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 583
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 261
Tokens correctement prédits (top 10): 500
Précision stricte (1ère position): 40.31%
Précision adaptée (1ère position): 44.77%
Précision (top 10): 85.76%
================================================================================
