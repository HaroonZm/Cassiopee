================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#! /usr/local/bin/python3

from sys import stdin
from math import inf

def merge(A, left, mid, right):
    L = A[left:mid]; L.append(("", inf))
    R = A[mid:right]; R.append(("", inf))
    i = iter(L); l = next(i)
    j = iter(R); r = next(j)
    for k in range(left, right):
        if l[1] <= r[1]:
            A[k] = l
            l = next(i)
        else:
            A[k] = r
            r = next(j)

def merge_sort(A, left, right):
    if left + 1 < right:
        mid = (left + right) // 2
        merge_sort(A, left, mid)
        merge_sort(A, mid, right)
        merge(A, left, mid, right)
    
def swap(A, i, j):
    tmp = A[i]
    A[i] = A[j]
    A[j] = tmp

def partition(A, p, r):
    x = A[r][1]
    i = p - 1
    for j in range(p, r):
        if A[j][1] <= x:
            i += 1
            swap(A, i, j)
    swap(A, i + 1, r)
    return i + 1

def quick_sort(A, p, r):
    if p < r:
        q = partition(A, p, r)
        quick_sort(A, p, q - 1)
        quick_sort(A, q + 1, r)

def main():
    n = int(stdin.readline())
    A = []
    for l in stdin:
        suit, num = l.split()
        A.append((suit, int(num)))
    B = A[:]
    quick_sort(A, 0, n - 1)
    merge_sort(B, 0, n)
    print("Stable" if A == B else "Not stable")
    [print(*a) for a in A]

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: ' /' (ID: 820)
  → Token d'amorce (pas de prédiction)

Token 2: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 3: '/local' (ID: 52214)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3869089186191559
    2. '/bin' → logprob: -1.1369088888168335
    3. '/b' → logprob: -10.261908531188965
    4. '/local' → logprob: -13.761908531188965
    5. '/env' → logprob: -14.261908531188965
    6. '/
' → logprob: -15.011908531188965
    7. 'bin' → logprob: -15.136908531188965
    8. 'b' → logprob: -15.136908531188965
    9. ' /' → logprob: -15.761908531188965
    10. '/bash' → logprob: -16.26190948486328

Token 4: '/bin' (ID: 20950)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.04304737225174904
    2. '/' → logprob: -3.7930474281311035
    3. '/bin' → logprob: -4.0430474281311035
    4. 'python' → logprob: -6.4180474281311035
    5. 'b' → logprob: -7.9180474281311035
    6. '```' → logprob: -10.043046951293945
    7. 'bash' → logprob: -11.168046951293945
    8. '/python' → logprob: -13.043046951293945
    9. 'bi' → logprob: -13.293046951293945
    10. 'binary' → logprob: -13.793046951293945

Token 5: '/python' (ID: 56900)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.02524900622665882
    2. '/python' → logprob: -3.7752490043640137
    3. 'bash' → logprob: -7.275249004364014
    4. '/' → logprob: -7.900249004364014
    5. '```' → logprob: -8.400249481201172
    6. 'p' → logprob: -8.525249481201172
    7. 'py' → logprob: -9.150249481201172
    8. 'b' → logprob: -9.150249481201172
    9. '-python' → logprob: -9.525249481201172
    10. ' python' → logprob: -9.525249481201172

Token 6: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.44050487875938416
    2. '\' → logprob: -1.6905049085617065
    3. ' 
' → logprob: -2.440504789352417
    4. '3' → logprob: -2.940504789352417
    5. '  
' → logprob: -4.440505027770996
    6. '' → logprob: -5.065505027770996
    7. '```' → logprob: -5.690505027770996
    8. '
' → logprob: -5.815505027770996
    9. ' ' → logprob: -6.440505027770996
    10. 'newline' → logprob: -6.440505027770996

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2550177276134491
    2. ' 
' → logprob: -1.8800177574157715
    3. '  
' → logprob: -3.3800177574157715
    4. '\' → logprob: -4.3800177574157715
    5. '
' → logprob: -4.3800177574157715
    6. '' → logprob: -5.2550177574157715
    7. '```' → logprob: -6.1300177574157715
    8. 'import' → logprob: -6.6300177574157715
    9. '   
' → logprob: -6.6300177574157715
    10. '#!/' → logprob: -7.2550177574157715

Token 8: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20794403553009033
    2. 'import' → logprob: -1.9579440355300903
    3. '\' → logprob: -4.207943916320801
    4. '```' → logprob: -4.457943916320801
    5. ' 
' → logprob: -4.707943916320801
    6. '  
' → logprob: -6.332943916320801
    7. '' → logprob: -6.332943916320801
    8. '#' → logprob: -6.457943916320801
    9. '#!/' → logprob: -6.832943916320801
    10. '
' → logprob: -7.082943916320801

Token 9: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.18209314346313477
    2. ' ' → logprob: -2.6820931434631348
    3. ' flask' → logprob: -3.1820931434631348
    4. ' sys' → logprob: -3.4320931434631348
    5. ' collections' → logprob: -4.557093143463135
    6. ' math' → logprob: -5.682093143463135
    7. ' import' → logprob: -6.432093143463135
    8. ' pathlib' → logprob: -6.682093143463135
    9. ' functools' → logprob: -6.807093143463135
    10. 'os' → logprob: -7.307093143463135

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006904221139848232
    2. 'import' → logprob: -5.006904125213623
    3. ' ' → logprob: -8.631904602050781
    4. '.' → logprob: -12.881904602050781
    5. ' im' → logprob: -13.256904602050781
    6. '	import' → logprob: -13.506904602050781
    7. '<|end|>' → logprob: -13.756904602050781
    8. ' importar' → logprob: -14.381904602050781
    9. '.import' → logprob: -14.506904602050781
    10. ' imports' → logprob: -15.006904602050781

Token 11: ' stdin' (ID: 75143)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.041090838611125946
    2. ' exit' → logprob: -3.791090726852417
    3. 'argv' → logprob: -4.041090965270996
    4. 'exit' → logprob: -9.291090965270996
    5. '.argv' → logprob: -12.166090965270996
    6. ' import' → logprob: -12.416090965270996
    7. ' stdin' → logprob: -13.041090965270996
    8. ' path' → logprob: -13.916090965270996
    9. ' stdout' → logprob: -14.166090965270996
    10. '(argv' → logprob: -14.791090965270996

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1847455501556396
    2. '\n' → logprob: -1.5597455501556396
    3. 'import' → logprob: -1.9347455501556396
    4. '<|end|>' → logprob: -1.9347455501556396
    5. '.' → logprob: -3.0597455501556396
    6. '```' → logprob: -3.3097455501556396
    7. '' → logprob: -3.9347455501556396
    8. '.readline' → logprob: -4.059745788574219
    9. 'newline' → logprob: -4.059745788574219
    10. '<|end|>' → logprob: -4.809745788574219

Token 13: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8512483835220337
    2. '\n' → logprob: -1.2262483835220337
    3. '
' → logprob: -2.101248264312744
    4. '' → logprob: -2.976248264312744
    5. 'for' → logprob: -3.101248264312744
    6. '\' → logprob: -4.351248264312744
    7. '```' → logprob: -4.726248264312744
    8. '

' → logprob: -4.851248264312744
    9. '<|end|>' → logprob: -5.226248264312744
    10. '  
' → logprob: -5.351248264312744

Token 14: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03677946701645851
    2. 'os' → logprob: -4.161779403686523
    3. ' sys' → logprob: -4.911779403686523
    4. ' io' → logprob: -5.786779403686523
    5. ' stdout' → logprob: -5.786779403686523
    6. ' itertools' → logprob: -6.161779403686523
    7. 'stdout' → logprob: -6.911779403686523
    8. ' collections' → logprob: -7.286779403686523
    9. ' math' → logprob: -7.536779403686523
    10. ' subprocess' → logprob: -7.911779403686523

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02488429844379425
    2. 'import' → logprob: -3.7748842239379883
    3. ' ' → logprob: -6.524884223937988
    4. '<|end|>' → logprob: -9.399884223937988
    5. '	import' → logprob: -10.899884223937988
    6. '_import' → logprob: -11.024884223937988
    7. ' importar' → logprob: -11.399884223937988
    8. '<|end|>' → logprob: -11.524884223937988
    9. ' sqrt' → logprob: -11.649884223937988
    10. ' im' → logprob: -11.899884223937988

Token 16: ' inf' (ID: 5603)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.5179967880249023
    2. 'sqrt' → logprob: -1.1429967880249023
    3. ' ceil' → logprob: -3.3929967880249023
    4. ' gcd' → logprob: -3.7679967880249023
    5. ' factorial' → logprob: -5.017996788024902
    6. 'ceil' → logprob: -5.017996788024902
    7. ' pi' → logprob: -6.017996788024902
    8. 'log' → logprob: -6.267996788024902
    9. ' inf' → logprob: -6.392996788024902
    10. 'pi' → logprob: -6.392996788024902

Token 17: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.326144814491272
    2. '
' → logprob: -1.326144814491272
    3. '' → logprob: -5.201144695281982
    4. '<|end|>' → logprob: -6.451144695281982
    5. '


' → logprob: -6.576144695281982
    6. '\n' → logprob: -6.576144695281982
    7. '
' → logprob: -7.826144695281982
    8. ',' → logprob: -7.951144695281982
    9. '```' → logprob: -7.951144695281982
    10. 'import' → logprob: -7.951144695281982

Token 18: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8581368327140808
    2. 'def' → logprob: -1.2331368923187256
    3. 'n' → logprob: -1.7331368923187256
    4. '
' → logprob: -3.4831368923187256
    5. 'a' → logprob: -3.8581368923187256
    6. '' → logprob: -4.2331366539001465
    7. '

' → logprob: -4.4831366539001465
    8. '\' → logprob: -5.1081366539001465
    9. '\n' → logprob: -5.4831366539001465
    10. 'i' → logprob: -5.6081366539001465

Token 19: ' merge' (ID: 20345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1425100713968277
    2. ' calculate' → logprob: -3.642510175704956
    3. ' shortest' → logprob: -3.642510175704956
    4. ' space' → logprob: -3.767510175704956
    5. ' max' → logprob: -4.267509937286377
    6. ' find' → logprob: -4.642509937286377
    7. ' dfs' → logprob: -5.142509937286377
    8. ' solve' → logprob: -5.142509937286377
    9. ' d' → logprob: -5.892509937286377
    10. ' parse' → logprob: -5.892509937286377

Token 20: '(A' (ID: 10706)
  Prédit: '_arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arrays' → logprob: -1.1633362770080566
    2. '_sort' → logprob: -1.2883362770080566
    3. '_lists' → logprob: -1.7883362770080566
    4. '_sorted' → logprob: -2.0383362770080566
    5. '_' → logprob: -3.0383362770080566
    6. '(' → logprob: -3.2883362770080566
    7. '(_' → logprob: -4.663336277008057
    8. '(a' → logprob: -5.913336277008057
    9. ' (' → logprob: -6.163336277008057
    10. '_s' → logprob: -6.288336277008057

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.304016228066757e-05
    2. ' ,' → logprob: -10.750082969665527
    3. '[],' → logprob: -11.000082969665527
    4. ')' → logprob: -11.250082969665527
    5. '):' → logprob: -11.375082969665527
    6. '[' → logprob: -12.250082969665527
    7. ',A' → logprob: -13.125082969665527
    8. ',List' → logprob: -13.125082969665527
    9. ',n' → logprob: -13.250082969665527
    10. ',a' → logprob: -13.750082969665527

Token 22: ' left' (ID: 3561)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3672019839286804
    2. ' p' → logprob: -2.492202043533325
    3. ' left' → logprob: -2.492202043533325
    4. 'B' → logprob: -2.742202043533325
    5. ' l' → logprob: -3.242202043533325
    6. 'left' → logprob: -3.992202043533325
    7. 'p' → logprob: -4.742201805114746
    8. 'l' → logprob: -5.492201805114746
    9. ' start' → logprob: -6.117201805114746
    10. ' lo' → logprob: -6.742201805114746

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011855880729854107
    2. ' ,' → logprob: -6.751185417175293
    3. ')' → logprob: -11.876185417175293
    4. '):' → logprob: -13.251185417175293
    5. ':' → logprob: -13.376185417175293
    6. '_,' → logprob: -13.626185417175293
    7. ' ' → logprob: -14.501185417175293
    8. '‌,' → logprob: -14.876185417175293
    9. ',right' → logprob: -15.001185417175293
    10. ',
' → logprob: -15.001185417175293

Token 24: ' mid' (ID: 6959)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.20498649775981903
    2. 'right' → logprob: -1.7049864530563354
    3. ' mid' → logprob: -6.454986572265625
    4. ' middle' → logprob: -7.079986572265625
    5. 'mid' → logprob: -7.329986572265625
    6. 'middle' → logprob: -7.704986572265625
    7. '	right' → logprob: -10.704986572265625
    8. ' ' → logprob: -11.704986572265625
    9. ',right' → logprob: -12.579986572265625
    10. ' center' → logprob: -13.079986572265625

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004936986370012164
    2. ' ,' → logprob: -7.87549352645874
    3. '+' → logprob: -9.250494003295898
    4. '+,' → logprob: -11.625494003295898
    5. ',right' → logprob: -12.875494003295898
    6. ')' → logprob: -13.375494003295898
    7. ' +' → logprob: -14.375494003295898
    8. '),' → logprob: -14.500494003295898
    9. ' ' → logprob: -14.625494003295898
    10. ',
' → logprob: -14.875494003295898

Token 26: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.01423226110637188
    2. 'right' → logprob: -4.264232158660889
    3. ' ' → logprob: -10.639232635498047
    4. '	right' → logprob: -11.014232635498047
    5. ',right' → logprob: -11.014232635498047
    6. ',' → logprob: -12.264232635498047
    7. ':right' → logprob: -13.389232635498047
    8. 'Right' → logprob: -13.764232635498047
    9. '_right' → logprob: -14.139232635498047
    10. '>' → logprob: -14.514232635498047

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005519599071703851
    2. ')' → logprob: -7.750552177429199
    3. ',' → logprob: -9.5005521774292
    4. ' ):' → logprob: -10.2505521774292
    5. ':' → logprob: -11.7505521774292
    6. '):
' → logprob: -13.1255521774292
    7. ''):' → logprob: -15.6255521774292
    8. '):
' → logprob: -15.7505521774292
    9. '   ' → logprob: -15.7505521774292
    10. ' ' → logprob: -15.8755521774292

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6021856665611267
    2. '   ' → logprob: -0.8521856665611267
    3. '):' → logprob: -4.4771857261657715
    4. ' :' → logprob: -4.7271857261657715
    5. ',' → logprob: -6.3521857261657715
    6. '    ' → logprob: -6.4771857261657715
    7. ')' → logprob: -7.1021857261657715
    8. ':
' → logprob: -7.9771857261657715
    9. '```' → logprob: -8.227185249328613
    10. ' ' → logprob: -8.352185249328613

Token 29: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5285756587982178
    2. '    ' → logprob: -1.0285756587982178
    3. ' 
' → logprob: -4.278575897216797
    4. ' ' → logprob: -4.403575897216797
    5. '     
' → logprob: -4.653575897216797
    6. '    
' → logprob: -4.778575897216797
    7. ' i' → logprob: -5.778575897216797
    8. '
' → logprob: -6.028575897216797
    9. '  ' → logprob: -6.903575897216797
    10. ',' → logprob: -8.278575897216797

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0338214673101902
    2. '=' → logprob: -3.4088215827941895
    3. ',' → logprob: -8.783821105957031
    4. '=[]' → logprob: -12.033821105957031
    5. 'eft' → logprob: -12.533821105957031
    6. '[:]' → logprob: -12.783821105957031
    7. ' ' → logprob: -13.158821105957031
    8. '   ' → logprob: -13.283821105957031
    9. '[]' → logprob: -13.408821105957031
    10. '[' → logprob: -13.783821105957031

Token 31: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5760127902030945
    2. ' A' → logprob: -0.8260127902030945
    3. '[' → logprob: -10.45101261138916
    4. ' ' → logprob: -11.07601261138916
    5. '   ' → logprob: -11.32601261138916
    6. '	A' → logprob: -11.70101261138916
    7. '[A' → logprob: -12.32601261138916
    8. '=A' → logprob: -13.45101261138916
    9. '  ' → logprob: -14.20101261138916
    10. '[]' → logprob: -14.32601261138916

Token 32: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -10.875019073486328
    3. 'left' → logprob: -14.750019073486328
    4. ' [' → logprob: -17.375019073486328
    5. '[:' → logprob: -17.500019073486328
    6. '[
' → logprob: -17.500019073486328
    7. '[l' → logprob: -17.500019073486328
    8. ':left' → logprob: -18.250019073486328
    9. '[right' → logprob: -18.375019073486328
    10. '[first' → logprob: -18.375019073486328

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022403974435292184
    2. ' :' → logprob: -8.625224113464355
    3. ':right' → logprob: -10.250224113464355
    4. '[mid' → logprob: -12.000224113464355
    5. ':left' → logprob: -13.625224113464355
    6. ':m' → logprob: -14.750224113464355
    7. ' ' → logprob: -15.000224113464355
    8. '	' → logprob: -15.125224113464355
    9. ':center' → logprob: -15.375224113464355
    10. '   ' → logprob: -15.500224113464355

Token 34: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0003392767102923244
    2. ' mid' → logprob: -8.00033950805664
    3. '(mid' → logprob: -13.37533950805664
    4. '[mid' → logprob: -13.50033950805664
    5. ' ' → logprob: -14.37533950805664
    6. 'middle' → logprob: -16.37533950805664
    7. '   ' → logprob: -16.50033950805664
    8. 'midt' → logprob: -17.62533950805664
    9. '.mid' → logprob: -17.87533950805664
    10. '  ' → logprob: -18.00033950805664

Token 35: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001987044233828783
    2. '+' → logprob: -6.751986980438232
    3. ']+' → logprob: -7.376986980438232
    4. ' ]' → logprob: -8.62698745727539
    5. ']
' → logprob: -12.25198745727539
    6. ' +' → logprob: -13.00198745727539
    7. '+]' → logprob: -13.75198745727539
    8. '1' → logprob: -14.12698745727539
    9. ')' → logprob: -14.37698745727539
    10. '   ' → logprob: -14.50198745727539

Token 36: ' L' (ID: 451)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2923339009284973
    2. ' R' → logprob: -1.5423338413238525
    3. '   ' → logprob: -3.7923338413238525
    4. '    ' → logprob: -4.292334079742432
    5. '    
' → logprob: -7.042334079742432
    6. ' ' → logprob: -7.542334079742432
    7. '	R' → logprob: -7.792334079742432
    8. ' ' → logprob: -8.042333602905273
    9. '‌' → logprob: -9.042333602905273
    10. '```' → logprob: -9.229833602905273

Token 37: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1594951152801514
    2. ' +=' → logprob: -1.2844951152801514
    3. '+' → logprob: -1.7844951152801514
    4. '.extend' → logprob: -2.0344951152801514
    5. '+=' → logprob: -3.0344951152801514
    6. ' =' → logprob: -3.6594951152801514
    7. '=' → logprob: -3.6594951152801514
    8. ' +' → logprob: -4.5344953536987305
    9. '.' → logprob: -8.53449535369873
    10. 'append' → logprob: -9.53449535369873

Token 38: '(' (ID: 7)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.000104616025055293
    2. '(' → logprob: -9.625104904174805
    3. '(L' → logprob: -11.250104904174805
    4. '(float' → logprob: -11.625104904174805
    5. 'inf' → logprob: -11.750104904174805
    6. '(A' → logprob: -12.125104904174805
    7. ' inf' → logprob: -14.000104904174805
    8. '(+' → logprob: -14.625104904174805
    9. '(int' → logprob: -15.375104904174805
    10. '()' → logprob: -15.750104904174805

Token 39: '("",' (ID: 40578)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.018228374421596527
    2. ' inf' → logprob: -4.018228530883789
    3. ' ' → logprob: -10.643228530883789
    4. 'in' → logprob: -10.893228530883789
    5. '-inf' → logprob: -11.393228530883789
    6. '   ' → logprob: -12.518228530883789
    7. '  ' → logprob: -12.705728530883789
    8. 'float' → logprob: -12.955728530883789
    9. ' инф' → logprob: -13.080728530883789
    10. '.inf' → logprob: -13.080728530883789

Token 40: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.032318707555532455
    2. ' inf' → logprob: -4.032318592071533
    3. '-inf' → logprob: -4.407318592071533
    4. ' -' → logprob: -6.532318592071533
    5. '-' → logprob: -8.407319068908691
    6. ' ' → logprob: -9.907319068908691
    7. 'float' → logprob: -10.782319068908691
    8. ')' → logprob: -10.969819068908691
    9. '0' → logprob: -11.032319068908691
    10. '-in' → logprob: -11.469819068908691

Token 41: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3974318206310272
    2. '))' → logprob: -1.1474318504333496
    3. '))
' → logprob: -5.02243185043335
    4. ' ))
' → logprob: -5.89743185043335
    5. '))

' → logprob: -7.52243185043335
    6. ' ))' → logprob: -8.147431373596191
    7. '));' → logprob: -8.772431373596191
    8. ')' → logprob: -9.772431373596191
    9. '))

' → logprob: -10.647431373596191
    10. ',' → logprob: -10.897431373596191

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10406843572854996
    2. 'R' → logprob: -2.3540685176849365
    3. '<|end|>' → logprob: -6.729068279266357
    4. ')' → logprob: -7.229068279266357
    5. '    
' → logprob: -7.479068279266357
    6. ' R' → logprob: -7.604068279266357
    7. '	R' → logprob: -7.729068279266357
    8. '  ' → logprob: -9.104068756103516
    9. '<|end|>' → logprob: -9.104068756103516
    10. '
' → logprob: -9.729068756103516

Token 43: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2981293201446533
    2. 'R' (adapté à ' R') → logprob: -1.5481293201446533
    3. '<|end|>' → logprob: -3.9231293201446533
    4. ')' → logprob: -4.673129081726074
    5. ' R' → logprob: -5.423129081726074
    6. '	R' → logprob: -5.423129081726074
    7. '<|end|>' → logprob: -6.673129081726074
    8. ' ' → logprob: -6.673129081726074
    9. ',' → logprob: -6.923129081726074
    10. '  ' → logprob: -7.173129081726074

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132713735103607
    2. '=' → logprob: -1.313271403312683
    3. '=A' → logprob: -11.688271522521973
    4. ')' → logprob: -14.938271522521973
    5. 's' → logprob: -15.813271522521973
    6. ' ' → logprob: -15.938271522521973
    7. '＝' → logprob: -16.313270568847656
    8. '   ' → logprob: -16.438270568847656
    9. '=[]' → logprob: -17.000770568847656
    10. ']' → logprob: -17.188270568847656

Token 45: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16026820242404938
    2. ' A' → logprob: -1.9102681875228882
    3. '(A' → logprob: -10.41026782989502
    4. '[A' → logprob: -12.53526782989502
    5. '	A' → logprob: -12.66026782989502
    6. '=A' → logprob: -13.03526782989502
    7. '   ' → logprob: -13.16026782989502
    8. '>A' → logprob: -13.91026782989502
    9. ' ' → logprob: -14.28526782989502
    10. '[' → logprob: -14.66026782989502

Token 46: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -3.8889261304575484e-06
    2. '[m' → logprob: -13.250003814697266
    3. 'mid' → logprob: -13.500003814697266
    4. '[' → logprob: -15.000003814697266
    5. ' [' → logprob: -16.500003814697266
    6. '(mid' → logprob: -16.500003814697266
    7. '[right' → logprob: -17.250003814697266
    8. ' mid' → logprob: -18.125003814697266
    9. '[
' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.375003814697266

Token 47: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -3.881560041918419e-05
    2. ' :' → logprob: -10.375039100646973
    3. ':' → logprob: -12.500039100646973
    4. 'right' → logprob: -12.750039100646973
    5. '[right' → logprob: -14.750039100646973
    6. '	right' → logprob: -15.375039100646973
    7. ',right' → logprob: -16.000038146972656
    8. ' right' → logprob: -16.500038146972656
    9. ':r' → logprob: -18.250038146972656
    10. '1' → logprob: -18.750038146972656

Token 48: '];' (ID: 11464)
  Prédit: '];'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '];' → logprob: -0.034434717148542404
    2. ');' → logprob: -3.9094347953796387
    3. ']' → logprob: -4.409434795379639
    4. ']);' → logprob: -7.034434795379639
    5. ']
' → logprob: -8.15943431854248
    6. ')' → logprob: -8.78443431854248
    7. ' ];' → logprob: -8.90943431854248
    8. '])' → logprob: -9.53443431854248
    9. ' );' → logprob: -10.28443431854248
    10. ';' → logprob: -10.65943431854248

Token 49: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.003608505241572857
    2. 'R' → logprob: -5.628608703613281
    3. '   ' → logprob: -11.753608703613281
    4. ' ' → logprob: -15.378608703613281
    5. '    ' → logprob: -15.503608703613281
    6. '  ' → logprob: -16.50360870361328
    7. '	R' → logprob: -17.06610870361328
    8. '[' → logprob: -17.12860870361328
    9. ' ' → logprob: -17.25360870361328
    10. '<|end|>' → logprob: -17.62860870361328

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.841743303695694e-05
    2. 'append' → logprob: -9.87509822845459
    3. '.' → logprob: -10.37509822845459
    4. ' .' → logprob: -11.37509822845459
    5. '.extend' → logprob: -13.00009822845459
    6. ' append' → logprob: -14.37509822845459
    7. '_append' → logprob: -14.50009822845459
    8. '.app' → logprob: -15.00009822845459
    9. '	append' → logprob: -15.25009822845459
    10. ';' → logprob: -17.125099182128906

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5094070477061905e-05
    2. '(("' → logprob: -11.875015258789062
    3. '("",' → logprob: -11.875015258789062
    4. ' ' → logprob: -14.375015258789062
    5. '((' → logprob: -15.250015258789062
    6. '   ' → logprob: -16.375015258789062
    7. '=' → logprob: -16.625015258789062
    8. '("' → logprob: -16.625015258789062
    9. ' (' → logprob: -16.875015258789062
    10. '  ' → logprob: -17.500015258789062

Token 52: '("",' (ID: 40578)
  Prédit: '("",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("",' → logprob: -0.0029387136455625296
    2. '(' → logprob: -5.877938747406006
    3. '("' → logprob: -9.877938270568848
    4. '(""' → logprob: -10.627938270568848
    5. '('',' → logprob: -11.002938270568848
    6. '("")' → logprob: -11.252938270568848
    7. ' ("' → logprob: -11.377938270568848
    8. '["' → logprob: -12.002938270568848
    9. ' ' → logprob: -12.502938270568848
    10. '   ' → logprob: -13.627938270568848

Token 53: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.3133602440357208
    2. ' inf' → logprob: -1.3133602142333984
    3. '-inf' → logprob: -10.188360214233398
    4. ' ' → logprob: -11.438360214233398
    5. ' ' → logprob: -11.563360214233398
    6. 'in' → logprob: -11.938360214233398
    7. '.inf' → logprob: -12.063360214233398
    8. '_inf' → logprob: -12.313360214233398
    9. ')' → logprob: -12.375860214233398
    10. '   ' → logprob: -12.688360214233398

Token 54: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04863369092345238
    2. ')' → logprob: -3.048633575439453
    3. '))
' → logprob: -10.423633575439453
    4. ' ))' → logprob: -12.048633575439453
    5. '   ' → logprob: -12.423633575439453
    6. ')))' → logprob: -12.673633575439453
    7. ')
' → logprob: -13.423633575439453
    8. ' )' → logprob: -14.173633575439453
    9. '"))' → logprob: -14.798633575439453
    10. '));' → logprob: -15.173633575439453

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12350283563137054
    2. ')' → logprob: -2.623502731323242
    3. '<|end|>' → logprob: -3.373502731323242
    4. '    
' → logprob: -5.498502731323242
    5. ' ' → logprob: -6.373502731323242
    6. '    ' → logprob: -6.873502731323242
    7. '
' → logprob: -7.248502731323242
    8. ':' → logprob: -7.998502731323242
    9. '  ' → logprob: -8.123502731323242
    10. '  
' → logprob: -8.623502731323242

Token 56: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04922295734286308
    2. ')' → logprob: -3.174222946166992
    3. ' ' → logprob: -6.174222946166992
    4. '    ' → logprob: -6.299222946166992
    5. '<|end|>' → logprob: -7.674222946166992
    6. '  ' → logprob: -7.924222946166992
    7. ':' → logprob: -8.299222946166992
    8. ' while' → logprob: -8.424222946166992
    9. ' )' → logprob: -8.674222946166992
    10. ',' → logprob: -8.924222946166992

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05209781229496002
    2. '=' → logprob: -3.302097797393799
    3. ',' → logprob: -4.302097797393799
    4. ' ' → logprob: -8.302098274230957
    5. '<|end|>' → logprob: -10.052098274230957
    6. ' ,' → logprob: -10.427098274230957
    7. '  ' → logprob: -10.677098274230957
    8. 'n' → logprob: -10.802098274230957
    9. ',j' → logprob: -10.802098274230957
    10. 'f' → logprob: -12.302098274230957

Token 58: ' iter' (ID: 10621)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03379553556442261
    2. ' ' → logprob: -3.4087955951690674
    3. 'j' → logprob: -8.908795356750488
    4. ' j' → logprob: -11.408795356750488
    5. '   ' → logprob: -13.908795356750488
    6. '  ' → logprob: -14.033795356750488
    7. '<|end|>' → logprob: -14.033795356750488
    8. '	j' → logprob: -15.033795356750488
    9. '<|end|>' → logprob: -15.283795356750488
    10. '۰' → logprob: -16.658796310424805

Token 59: '(L' (ID: 11075)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.22588996589183807
    2. '(L' → logprob: -1.7258899211883545
    3. '(' → logprob: -4.100890159606934
    4. 'range' → logprob: -5.225890159606934
    5. 'ate' → logprob: -6.725890159606934
    6. '([' → logprob: -7.850890159606934
    7. '(int' → logprob: -7.975890159606934
    8. '(a' → logprob: -9.225890159606934
    9. '([]' → logprob: -10.100890159606934
    10. '(list' → logprob: -10.725890159606934

Token 60: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1003437265753746
    2. ')
' → logprob: -3.100343704223633
    3. ').__' → logprob: -3.475343704223633
    4. ');' → logprob: -5.350343704223633
    5. '.__' → logprob: -5.600343704223633
    6. '())' → logprob: -6.100343704223633
    7. '__' → logprob: -6.350343704223633
    8. ')
' → logprob: -6.350343704223633
    9. '().__' → logprob: -7.100343704223633
    10. ')__' → logprob: -7.225343704223633

Token 61: ' l' (ID: 305)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.26757267117500305
    2. ' ' → logprob: -2.8925726413726807
    3. ' next' → logprob: -3.0175726413726807
    4. 'ex' → logprob: -4.01757287979126
    5. '1' → logprob: -4.14257287979126
    6. 'index' → logprob: -4.26757287979126
    7. '0' → logprob: -4.39257287979126
    8. 'ext' → logprob: -4.51757287979126
    9. 'i' → logprob: -4.64257287979126
    10. ' i' → logprob: -4.76757287979126

Token 62: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0986837148666382
    2. ' =' → logprob: -1.7236837148666382
    3. 'st' → logprob: -2.0986838340759277
    4. 'e' → logprob: -2.9736838340759277
    5. '=' → logprob: -2.9736838340759277
    6. 'en' → logprob: -3.2236838340759277
    7. 'ist' → logprob: -3.2236838340759277
    8. '_idx' → logprob: -3.4736838340759277
    9. 'idx' → logprob: -3.5986838340759277
    10. 'ex' → logprob: -3.7236838340759277

Token 63: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6851412653923035
    2. '0' → logprob: -1.3101413249969482
    3. ' next' → logprob: -1.8101413249969482
    4. ' ' → logprob: -2.8101413249969482
    5. 'ext' → logprob: -7.185141086578369
    6. '1' → logprob: -7.935141086578369
    7. '[next' → logprob: -7.935141086578369
    8. 'i' → logprob: -8.810141563415527
    9. '	next' → logprob: -8.935141563415527
    10. '[]' → logprob: -9.560141563415527

Token 64: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. 'i' → logprob: -14.625001907348633
    4. '(iter' → logprob: -18.375001907348633
    5. ' ' → logprob: -18.625001907348633
    6. '(I' → logprob: -19.500001907348633
    7. '(ii' → logprob: -19.625001907348633
    8. ' (' → logprob: -19.750001907348633
    9. '(s' → logprob: -19.875001907348633
    10. '(iterator' → logprob: -20.125001907348633

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05793362855911255
    2. ')
' → logprob: -3.0579335689544678
    3. ')
' → logprob: -5.182933807373047
    4. ');' → logprob: -5.682933807373047
    5. ' )' → logprob: -8.807933807373047
    6. ' )
' → logprob: -10.182933807373047
    7. ')

' → logprob: -10.432933807373047
    8. ' ' → logprob: -10.557933807373047
    9. '()' → logprob: -11.182933807373047
    10. '())' → logprob: -12.182933807373047

Token 66: '   ' (ID: 271)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.6970842480659485
    2. ';' → logprob: -1.6970841884613037
    3. 'st' → logprob: -2.4470841884613037
    4. 'while' → logprob: -3.3220841884613037
    5. ',' → logprob: -3.8220841884613037
    6. '[]' → logprob: -3.9470841884613037
    7. 'i' → logprob: -3.9470841884613037
    8. '   ' → logprob: -3.9470841884613037
    9. '<|end|>' → logprob: -4.322084426879883
    10. '()' → logprob: -4.447084426879883

Token 67: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.538730263710022
    2. '()' → logprob: -2.4137301445007324
    3. ' =' → logprob: -2.4137301445007324
    4. '=' → logprob: -3.0387301445007324
    5. '   ' → logprob: -3.1637301445007324
    6. '  ' → logprob: -3.1637301445007324
    7. ';' → logprob: -3.6637301445007324
    8. ' ' → logprob: -4.038730144500732
    9. 'i' → logprob: -4.163730144500732
    10. 'for' → logprob: -4.663730144500732

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.078890800476074
    4. '  ' → logprob: -15.953890800476074
    5. 's' → logprob: -16.828889846801758
    6. ',' → logprob: -17.078889846801758
    7. '=i' → logprob: -17.078889846801758
    8. 'i' → logprob: -17.578889846801758
    9. 'a' → logprob: -18.078889846801758
    10. '   ' → logprob: -18.578889846801758

Token 69: ' iter' (ID: 10621)
  Prédit: ' iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -0.31336191296577454
    2. 'iter' → logprob: -1.3133618831634521
    3. ' ' → logprob: -9.688362121582031
    4. '0' → logprob: -11.188362121582031
    5. '	iter' → logprob: -11.563362121582031
    6. '(iter' → logprob: -11.688362121582031
    7. 'i' → logprob: -13.313362121582031
    8. '   ' → logprob: -13.438362121582031
    9. '  ' → logprob: -14.500862121582031
    10. '_iter' → logprob: -15.125862121582031

Token 70: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: 0.0
    2. '(L' → logprob: -17.875
    3. '(S' → logprob: -20.375
    4. '(' → logprob: -21.125
    5. '(B' → logprob: -21.375
    6. '(
' → logprob: -21.625
    7. '(M' → logprob: -22.0
    8. 's' → logprob: -22.125
    9. '(F' → logprob: -22.25
    10. '<R' → logprob: -22.25

Token 71: ');' (ID: 2245)
  Prédit: ');'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ');' → logprob: -9.186122770188376e-05
    2. ')' → logprob: -9.375091552734375
    3. ' );' → logprob: -12.750091552734375
    4. ')
' → logprob: -13.250091552734375
    5. ';' → logprob: -13.500091552734375
    6. ');
' → logprob: -14.625091552734375
    7. '),' → logprob: -15.375091552734375
    8. ').' → logprob: -16.125091552734375
    9. '");' → logprob: -16.750091552734375
    10. '   ' → logprob: -17.000091552734375

Token 72: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.46356847882270813
    2. ' l' → logprob: -1.8385684490203857
    3. ' j' → logprob: -2.4635684490203857
    4. 'r' → logprob: -2.4635684490203857
    5. 'j' → logprob: -3.9635684490203857
    6. 'l' → logprob: -4.588568687438965
    7. ' k' → logprob: -4.588568687438965
    8. 'k' → logprob: -6.713568687438965
    9. ' n' → logprob: -7.838568687438965
    10. 'n' → logprob: -8.588568687438965

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132706880569458
    2. '=' → logprob: -1.3132706880569458
    3. ' ' → logprob: -11.813270568847656
    4. '  ' → logprob: -15.438270568847656
    5. '   ' → logprob: -15.563270568847656
    6. 's' → logprob: -15.938270568847656
    7. ',' → logprob: -16.063270568847656
    8. 'r' → logprob: -16.313270568847656
    9. ')' → logprob: -16.438270568847656
    10. '<|end|>' → logprob: -16.438270568847656

Token 74: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5759565234184265
    2. ' next' → logprob: -0.8259565234184265
    3. '(next' → logprob: -11.200956344604492
    4. '	next' → logprob: -13.700956344604492
    5. '[next' → logprob: -13.700956344604492
    6. '.next' → logprob: -14.575956344604492
    7. ' ' → logprob: -15.450956344604492
    8. ',next' → logprob: -16.075956344604492
    9. '_next' → logprob: -16.950956344604492
    10. ' nex' → logprob: -16.950956344604492

Token 75: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -5.037835580878891e-05
    2. '(' → logprob: -10.12505054473877
    3. 'j' → logprob: -11.75005054473877
    4. '(r' → logprob: -13.50005054473877
    5. '	j' → logprob: -15.37505054473877
    6. '[j' → logprob: -15.75005054473877
    7. ' (' → logprob: -16.250049591064453
    8. '<|end|>' → logprob: -16.375049591064453
    9. '```' → logprob: -16.625049591064453
    10. ',j' → logprob: -16.875049591064453

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018542143516242504
    2. ')
' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.750185012817383
    4. ' )' → logprob: -13.500185012817383
    5. ')

' → logprob: -14.375185012817383
    6. '<|end|>' → logprob: -15.250185012817383
    7. '()' → logprob: -15.500185012817383
    8. ')
' → logprob: -16.125185012817383
    9. '))' → logprob: -16.125185012817383
    10. '())' → logprob: -16.375185012817383

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42896172404289246
    2. ' while' → logprob: -2.053961753845215
    3. 'while' → logprob: -2.678961753845215
    4. '
' → logprob: -3.178961753845215
    5. '<|end|>' → logprob: -3.678961753845215
    6. 'result' → logprob: -4.178961753845215
    7. '    
' → logprob: -4.178961753845215
    8. ' ' → logprob: -4.553961753845215
    9. '  ' → logprob: -4.928961753845215
    10. '	while' → logprob: -5.053961753845215

Token 78: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0848908424377441
    2. 'while' → logprob: -1.8348908424377441
    3. '   ' → logprob: -2.209890842437744
    4. ' ' → logprob: -2.334890842437744
    5. ' while' → logprob: -2.334890842437744
    6. 'res' → logprob: -2.834890842437744
    7. ' result' → logprob: -3.209890842437744
    8. '
' → logprob: -4.209890842437744
    9. 'merged' → logprob: -4.209890842437744
    10. '    
' → logprob: -4.709890842437744

Token 79: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0033377676736563444
    2. 'k' → logprob: -5.878337860107422
    3. ' idx' → logprob: -8.628337860107422
    4. ' ' → logprob: -9.128337860107422
    5. ' x' → logprob: -9.503337860107422
    6. ' index' → logprob: -10.003337860107422
    7. ' i' → logprob: -10.253337860107422
    8. ' n' → logprob: -11.003337860107422
    9. ' ' → logprob: -11.253337860107422
    10. ' p' → logprob: -11.878337860107422

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011175386607646942
    2. 'in' → logprob: -4.511175155639648
    3. ',' → logprob: -9.886175155639648
    4. ' ' → logprob: -9.886175155639648
    5. 'range' → logprob: -11.511175155639648
    6. ' range' → logprob: -12.011175155639648
    7. '  ' → logprob: -12.636175155639648
    8. '   ' → logprob: -13.011175155639648
    9. 'n' → logprob: -14.136175155639648
    10. '    ' → logprob: -14.386175155639648

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06997767090797424
    2. ' range' → logprob: -2.6949777603149414
    3. 'ange' → logprob: -10.819977760314941
    4. '(range' → logprob: -11.444977760314941
    5. '	range' → logprob: -12.444977760314941
    6. 'rang' → logprob: -12.944977760314941
    7. ' ' → logprob: -13.069977760314941
    8. 'nge' → logprob: -14.819977760314941
    9. '   ' → logprob: -15.069977760314941
    10. 'ge' → logprob: -15.194977760314941

Token 82: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.00001049041748
    3. 'left' → logprob: -12.75001049041748
    4. ' left' → logprob: -14.25001049041748
    5. ' (' → logprob: -14.75001049041748
    6. ',left' → logprob: -15.75001049041748
    7. '[left' → logprob: -15.87501049041748
    8. '	left' → logprob: -16.750011444091797
    9. '(right' → logprob: -17.000011444091797
    10. ':left' → logprob: -17.500011444091797

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012423748848959804
    2. ' ,' → logprob: -7.376242160797119
    3. ',right' → logprob: -7.501242160797119
    4. ',left' → logprob: -10.001242637634277
    5. '+' → logprob: -11.626242637634277
    6. '   ' → logprob: -11.876242637634277
    7. ',len' → logprob: -14.626242637634277
    8. '+,' → logprob: -14.626242637634277
    9. ' +' → logprob: -15.001242637634277
    10. 'left' → logprob: -15.626242637634277

Token 84: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0789022371172905
    2. ' right' → logprob: -2.578902244567871
    3. '	right' → logprob: -11.328902244567871
    4. '   ' → logprob: -15.828902244567871
    5. '[right' → logprob: -15.953902244567871
    6. ',right' → logprob: -16.328901290893555
    7. ':right' → logprob: -16.453901290893555
    8. ' ' → logprob: -16.828901290893555
    9. '(right' → logprob: -16.953901290893555
    10. '    ' → logprob: -18.078901290893555

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002220318652689457
    2. ':' → logprob: -7.002220153808594
    3. ')' → logprob: -7.127220153808594
    4. '):
' → logprob: -7.877220153808594
    5. ' ):' → logprob: -9.127220153808594
    6. '+' → logprob: -12.127220153808594
    7. ',' → logprob: -12.252220153808594
    8. '   ' → logprob: -12.877220153808594
    9. ' ' → logprob: -13.752220153808594
    10. '):
' → logprob: -14.377220153808594

Token 86: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22857379913330078
    2. '   ' → logprob: -2.728573799133301
    3. ' ' → logprob: -2.853573799133301
    4. '       ' → logprob: -3.353573799133301
    5. '<|end|>' → logprob: -3.728573799133301
    6. ' :' → logprob: -4.353573799133301
    7. '    ' → logprob: -5.603573799133301
    8. '  ' → logprob: -6.603573799133301
    9. ',' → logprob: -7.353573799133301
    10. '):' → logprob: -7.728573799133301

Token 87: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32520753145217896
    2. ' if' → logprob: -1.7002074718475342
    3. 'if' (adapté à ' if') → logprob: -3.450207471847534
    4. '       ' → logprob: -3.575207471847534
    5. '<|end|>' → logprob: -4.075207710266113
    6. '        ' → logprob: -4.950207710266113
    7. '    ' → logprob: -5.825207710266113
    8. 's' → logprob: -6.325207710266113
    9. 'i' → logprob: -6.325207710266113
    10. '  ' → logprob: -6.950207710266113

Token 88: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3945589065551758
    2. ' l' → logprob: -1.1445589065551758
    3. '   ' → logprob: -4.894558906555176
    4. ' ' → logprob: -9.769558906555176
    5. '	l' → logprob: -9.894558906555176
    6. '  ' → logprob: -11.269558906555176
    7. '       ' → logprob: -11.394558906555176
    8. '(l' → logprob: -11.394558906555176
    9. '    ' → logprob: -12.019558906555176
    10. ' ' → logprob: -12.519558906555176

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0322052501142025
    2. '<=' → logprob: -3.78220534324646
    3. '<' → logprob: -5.157205104827881
    4. ' <=' → logprob: -6.407205104827881
    5. '.value' → logprob: -8.032205581665039
    6. ' <' → logprob: -8.282205581665039
    7. '.' → logprob: -8.532205581665039
    8. ''s' → logprob: -8.782205581665039
    9. '>' → logprob: -9.157205581665039
    10. '['' → logprob: -9.407205581665039

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42871782183647156
    2. '0' → logprob: -1.053717851638794
    3. 'value' → logprob: -12.178717613220215
    4. '<' → logprob: -12.303717613220215
    5. ' ' → logprob: -13.491217613220215
    6. '```' → logprob: -14.616217613220215
    7. 'cost' → logprob: -14.866217613220215
    8. '<=' → logprob: -15.053717613220215
    9. '' → logprob: -15.116217613220215
    10. 'score' → logprob: -15.116217613220215

Token 91: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.53303462266922
    2. '<=' → logprob: -0.90803462266922
    3. '<' → logprob: -5.283034801483154
    4. ' <' → logprob: -5.533034801483154
    5. '>' → logprob: -7.908034801483154
    6. ' >' → logprob: -8.908034324645996
    7. '[' → logprob: -9.158034324645996
    8. ' ' → logprob: -9.533034324645996
    9. ']<=' → logprob: -10.783034324645996
    10. ')<=' → logprob: -10.783034324645996

Token 92: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04038410261273384
    2. ' <=' → logprob: -3.66538405418396
    3. '<' → logprob: -4.290384292602539
    4. '>' → logprob: -9.040384292602539
    5. ' <' → logprob: -9.040384292602539
    6. '>=' → logprob: -11.040384292602539
    7. '[' → logprob: -12.040384292602539
    8. '≤' → logprob: -12.540384292602539
    9. ']<=' → logprob: -12.665384292602539
    10. '```' → logprob: -12.790384292602539

Token 93: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20141783356666565
    2. ' r' → logprob: -1.7014178037643433
    3. ' ' → logprob: -13.326417922973633
    4. '   ' → logprob: -13.951417922973633
    5. '  ' → logprob: -14.576417922973633
    6. '	r' → logprob: -14.951417922973633
    7. '<|end|>' → logprob: -15.451417922973633
    8. ' ' → logprob: -15.701417922973633
    9. 's' → logprob: -16.076417922973633
    10. '    ' → logprob: -16.138917922973633

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.68153518543113e-05
    2. ' [' → logprob: -9.875057220458984
    3. '  ' → logprob: -13.750057220458984
    4. '```' → logprob: -14.000057220458984
    5. ' ' → logprob: -14.125057220458984
    6. '[
' → logprob: -14.375057220458984
    7. '   ' → logprob: -14.625057220458984
    8. ')' → logprob: -15.500057220458984
    9. ''s' → logprob: -15.687557220458984
    10. '.' → logprob: -16.062557220458984

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.750012397766113
    3. '[' → logprob: -12.875012397766113
    4. ']' → logprob: -14.687512397766113
    5. ')' → logprob: -15.250012397766113
    6. '<|end|>' → logprob: -15.437512397766113
    7. '   ' → logprob: -15.625012397766113
    8. '```' → logprob: -15.750012397766113
    9. '  ' → logprob: -16.062511444091797
    10. '<|end|>' → logprob: -17.312511444091797

Token 96: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6422041058540344
    2. ':' → logprob: -0.7672041058540344
    3. '):
' → logprob: -4.892204284667969
    4. ':
' → logprob: -6.392204284667969
    5. ']:' → logprob: -8.267204284667969
    6. ')' → logprob: -10.517204284667969
    7. ' ):' → logprob: -10.642204284667969
    8. '       ' → logprob: -11.017204284667969
    9. '   ' → logprob: -11.267204284667969
    10. ' :' → logprob: -11.892204284667969

Token 97: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2975674271583557
    2. ':' → logprob: -1.672567367553711
    3. '<|end|>' → logprob: -3.547567367553711
    4. '           ' → logprob: -4.172567367553711
    5. ':
' → logprob: -4.672567367553711
    6. '        
' → logprob: -4.922567367553711
    7. '):' → logprob: -6.297567367553711
    8. '
' → logprob: -6.672567367553711
    9. '):
' → logprob: -7.172567367553711
    10. '        ' → logprob: -7.422567367553711

Token 98: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0015291442396119237
    2. '           ' → logprob: -6.876529216766357
    3. ' A' → logprob: -7.626529216766357
    4. '       ' → logprob: -12.8765287399292
    5. '   ' → logprob: -12.8765287399292
    6. '               ' → logprob: -14.0015287399292
    7. ' ' → logprob: -14.2515287399292
    8. '```' → logprob: -14.3765287399292
    9. '
' → logprob: -15.0015287399292
    10. '	A' → logprob: -15.2515287399292

Token 99: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -17.625001907348633
    4. 'k' → logprob: -18.000001907348633
    5. '[l' → logprob: -18.000001907348633
    6. '[i' → logprob: -18.250001907348633
    7. '[j' → logprob: -18.375001907348633
    8. '[key' → logprob: -18.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. '[m' → logprob: -19.500001907348633

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004875788930803537
    2. ']=' → logprob: -5.379875659942627
    3. ' ]' → logprob: -8.754876136779785
    4. '=' → logprob: -10.004876136779785
    5. ',' → logprob: -10.754876136779785
    6. '],' → logprob: -11.254876136779785
    7. ' =' → logprob: -11.629876136779785
    8. '[' → logprob: -12.129876136779785
    9. ')' → logprob: -13.004876136779785
    10. ' ' → logprob: -14.754876136779785

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023579001426697
    2. '=' → logprob: -2.3502357006073
    3. '=l' → logprob: -11.100235939025879
    4. ',' → logprob: -11.225235939025879
    5. ' ' → logprob: -15.725235939025879
    6. ' ,' → logprob: -16.225234985351562
    7. ' =
' → logprob: -16.225234985351562
    8. '[' → logprob: -16.725234985351562
    9. '＝' → logprob: -16.725234985351562
    10. ',l' → logprob: -16.975234985351562

Token 102: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008615515194833279
    2. ' l' → logprob: -4.758615493774414
    3. '	l' → logprob: -14.633615493774414
    4. '   ' → logprob: -15.383615493774414
    5. ' ' → logprob: -16.008615493774414
    6. '(l' → logprob: -16.508615493774414
    7. '  ' → logprob: -18.383615493774414
    8. '_l' → logprob: -19.133615493774414
    9. ' ' → logprob: -19.133615493774414
    10. '    ' → logprob: -19.383615493774414

Token 103: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19202090799808502
    2. ' l' → logprob: -2.317020893096924
    3. 'l' → logprob: -3.192020893096924
    4. '
' → logprob: -3.817020893096924
    5. ';' → logprob: -4.942020893096924
    6. ';l' → logprob: -5.817020893096924
    7. '       ' → logprob: -7.192020893096924
    8. '            
' → logprob: -7.442020893096924
    9. '   ' → logprob: -8.442021369934082
    10. 's' → logprob: -8.692021369934082

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009190337732434273
    2. ' l' → logprob: -5.259190559387207
    3. ';' → logprob: -6.134190559387207
    4. 'l' → logprob: -7.009190559387207
    5. ';l' → logprob: -7.759190559387207
    6. 'n' → logprob: -8.884190559387207
    7. '
' → logprob: -9.259190559387207
    8. '            
' → logprob: -10.259190559387207
    9. '       ' → logprob: -11.009190559387207
    10. '   ' → logprob: -11.009190559387207

Token 105: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0002868417650461197
    2. ' l' → logprob: -8.250287055969238
    3. '           ' → logprob: -10.875287055969238
    4. 'try' → logprob: -12.250287055969238
    5. '   ' → logprob: -13.625287055969238
    6. '
' → logprob: -16.125286102294922
    7. '	l' → logprob: -16.500286102294922
    8. ',l' → logprob: -16.500286102294922
    9. '            
' → logprob: -16.625286102294922
    10. ',' → logprob: -17.000286102294922

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715728435665369
    2. ' =' → logprob: -5.006715774536133
    3. ' next' → logprob: -15.256715774536133
    4. ',' → logprob: -15.756715774536133
    5. ' ' → logprob: -17.131715774536133
    6. 'next' → logprob: -18.506715774536133
    7. '.=' → logprob: -18.756715774536133
    8. 'e' → logprob: -18.881715774536133
    9. '=
' → logprob: -19.256715774536133
    10. '=}' → logprob: -19.256715774536133

Token 107: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0004306692280806601
    2. ' next' → logprob: -7.750430583953857
    3. '(next' → logprob: -17.500431060791016
    4. '	next' → logprob: -19.625431060791016
    5. '.next' → logprob: -21.250431060791016
    6. '_next' → logprob: -21.250431060791016
    7. 'n' → logprob: -21.500431060791016
    8. '   ' → logprob: -21.875431060791016
    9. ' ' → logprob: -22.000431060791016
    10. '[next' → logprob: -22.125431060791016

Token 108: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -18.875
    3. 'i' → logprob: -21.375
    4. '(ii' → logprob: -21.75
    5. '(j' → logprob: -23.125
    6. '(iv' → logprob: -23.375
    7. '(s' → logprob: -24.125
    8. '(I' → logprob: -24.125
    9. '(it' → logprob: -24.5
    10. ' (' → logprob: -24.625

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47478049993515015
    2. ')
' → logprob: -0.9747804999351501
    3. ')
' → logprob: -7.349780559539795
    4. ' )
' → logprob: -10.599780082702637
    5. ')

' → logprob: -11.349780082702637
    6. ' )' → logprob: -11.474780082702637
    7. '())
' → logprob: -12.099780082702637
    8. '()' → logprob: -12.724780082702637
    9. '   ' → logprob: -13.099780082702637
    10. '       ' → logprob: -13.849780082702637

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05561515688896179
    2. 'else' → logprob: -3.305615186691284
    3. ' else' → logprob: -4.055614948272705
    4. '<|end|>' → logprob: -9.430615425109863
    5. '	else' → logprob: -11.930615425109863
    6. '   ' → logprob: -12.430615425109863
    7. '```' → logprob: -13.555615425109863
    8. 'elif' → logprob: -13.555615425109863
    9. '<|end|>' → logprob: -14.680615425109863
    10. ' elif' → logprob: -15.555615425109863

Token 111: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2728021442890167
    2. ' else' → logprob: -1.5228021144866943
    3. '       ' → logprob: -3.8978021144866943
    4. '   ' → logprob: -8.272802352905273
    5. '	else' → logprob: -9.147802352905273
    6. '<|end|>' → logprob: -12.397802352905273
    7. 'elif' → logprob: -13.397802352905273
    8. '    ' → logprob: -14.522802352905273
    9. '  ' → logprob: -14.647802352905273
    10. ' ' → logprob: -15.147802352905273

Token 112: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00149462278932333
    2. ' A' → logprob: -7.376494407653809
    3. 'A' → logprob: -8.251494407653809
    4. '       ' → logprob: -8.376494407653809
    5. '{
' → logprob: -8.626494407653809
    6. ':
' → logprob: -9.501494407653809
    7. '          ' → logprob: -10.626494407653809
    8. '   ' → logprob: -10.876494407653809
    9. '         ' → logprob: -11.251494407653809
    10. ' {
' → logprob: -11.626494407653809

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3158653676509857
    2. 'A' → logprob: -1.315865397453308
    3. ' A' → logprob: -6.190865516662598
    4. '   ' → logprob: -7.815865516662598
    5. '       ' → logprob: -9.065865516662598
    6. ' ' → logprob: -10.815865516662598
    7. '          ' → logprob: -12.315865516662598
    8. '         ' → logprob: -12.815865516662598
    9. '               ' → logprob: -13.440865516662598
    10. '            ' → logprob: -13.690865516662598

Token 114: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00023226479243021458
    2. ' A' → logprob: -8.500232696533203
    3. '           ' → logprob: -10.500232696533203
    4. '       ' → logprob: -14.250232696533203
    5. '   ' → logprob: -14.500232696533203
    6. ' ' → logprob: -17.250232696533203
    7. '  ' → logprob: -18.625232696533203
    8. '         ' → logprob: -18.625232696533203
    9. '               ' → logprob: -18.625232696533203
    10. '          ' → logprob: -18.875232696533203

Token 115: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. 'k' → logprob: -16.75
    3. '[' → logprob: -17.25
    4. '=k' → logprob: -17.25
    5. '[key' → logprob: -17.75
    6. ',k' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. '<|end|>' → logprob: -19.125
    9. '(k' → logprob: -19.25
    10. '{k' → logprob: -19.75

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036303192377090454
    2. '=' → logprob: -3.4113032817840576
    3. ' =' → logprob: -6.5363030433654785
    4. ']=' → logprob: -6.7863030433654785
    5. ')' → logprob: -10.411303520202637
    6. ' ]' → logprob: -10.786303520202637
    7. '[' → logprob: -10.786303520202637
    8. '   ' → logprob: -13.411303520202637
    9. ')=' → logprob: -14.411303520202637
    10. ' ' → logprob: -15.286303520202637

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589076846838
    2. ' =' → logprob: -3.048588991165161
    3. '=r' → logprob: -13.298588752746582
    4. ' ' → logprob: -17.6735897064209
    5. '＝' → logprob: -18.6735897064209
    6. '=
' → logprob: -18.9235897064209
    7. '=k' → logprob: -18.9235897064209
    8. '=s' → logprob: -19.0485897064209
    9. '=

' → logprob: -19.4235897064209
    10. ')' → logprob: -19.4235897064209

Token 118: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020542005077004433
    2. ' r' → logprob: -3.8955419063568115
    3. ' ' → logprob: -17.27054214477539
    4. '	r' → logprob: -17.27054214477539
    5. '   ' → logprob: -17.89554214477539
    6. '<|end|>' → logprob: -18.02054214477539
    7. '_r' → logprob: -18.52054214477539
    8. ' ' → logprob: -18.52054214477539
    9. '
' → logprob: -18.77054214477539
    10. 's' → logprob: -18.89554214477539

Token 119: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011799505911767483
    2. 'r' → logprob: -4.636799335479736
    3. ' r' → logprob: -6.261799335479736
    4. '   ' → logprob: -9.761799812316895
    5. '
' → logprob: -9.886799812316895
    6. '	r' → logprob: -12.386799812316895
    7. '          ' → logprob: -13.011799812316895
    8. '' → logprob: -13.136799812316895
    9. '```' → logprob: -13.136799812316895
    10. '       ' → logprob: -13.261799812316895

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1182885468006134
    2. 'r' → logprob: -2.493288516998291
    3. '   ' → logprob: -3.993288516998291
    4. ' r' → logprob: -4.743288516998291
    5. ' =' → logprob: -7.493288516998291
    6. '=' → logprob: -8.11828899383545
    7. '       ' → logprob: -8.24328899383545
    8. '<|end|>' → logprob: -8.49328899383545
    9. ' ' → logprob: -9.61828899383545
    10. '     ' → logprob: -10.11828899383545

Token 121: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.000158842682139948
    2. ' r' → logprob: -8.75015926361084
    3. '           ' → logprob: -15.37515926361084
    4. '   ' → logprob: -16.000158309936523
    5. '       ' → logprob: -17.375158309936523
    6. '	r' → logprob: -18.750158309936523
    7. '_r' → logprob: -19.375158309936523
    8. '  ' → logprob: -20.125158309936523
    9. '    ' → logprob: -20.375158309936523
    10. '     ' → logprob: -20.625158309936523

Token 122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -19.018150329589844
    4. ' ' → logprob: -20.393150329589844
    5. '=

' → logprob: -20.518150329589844
    6. '＝' → logprob: -21.268150329589844
    7. '=}' → logprob: -21.268150329589844
    8. '   ' → logprob: -22.268150329589844
    9. '.=' → logprob: -22.768150329589844
    10. ')' → logprob: -23.643150329589844

Token 123: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.029750952497124672
    2. ' next' → logprob: -3.5297510623931885
    3. '(next' → logprob: -14.90475082397461
    4. '.next' → logprob: -17.27975082397461
    5. '	next' → logprob: -17.27975082397461
    6. '[next' → logprob: -18.02975082397461
    7. '_next' → logprob: -19.77975082397461
    8. 'Next' → logprob: -20.90475082397461
    9. ' ' → logprob: -20.90475082397461
    10. '
' → logprob: -21.02975082397461

Token 124: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -9.889424836728722e-05
    2. 'j' → logprob: -9.250099182128906
    3. '(' → logprob: -12.875099182128906
    4. '	j' → logprob: -16.875099182128906
    5. '[j' → logprob: -17.125099182128906
    6. '(i' → logprob: -17.750099182128906
    7. '```' → logprob: -18.250099182128906
    8. '(
' → logprob: -18.500099182128906
    9. ' (' → logprob: -19.000099182128906
    10. '(next' → logprob: -19.125099182128906

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. ')
' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -14.000012397766113
    4. ' )' → logprob: -15.125012397766113
    5. ')return' → logprob: -17.25001335144043
    6. ')

' → logprob: -17.87501335144043
    7. ')#' → logprob: -18.00001335144043
    8. ')}' → logprob: -18.12501335144043
    9. '       ' → logprob: -18.12501335144043
    10. '   ' → logprob: -18.25001335144043

Token 126: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.021965336054563522
    2. 'mer' → logprob: -4.021965503692627
    3. ' merge' → logprob: -5.896965503692627
    4. ' merges' → logprob: -7.396965503692627
    5. 'ms' → logprob: -8.646965026855469
    6. 'm' → logprob: -9.021965026855469
    7. 'main' → logprob: -10.271965026855469
    8. 'in' → logprob: -11.021965026855469
    9. 'solve' → logprob: -11.521965026855469
    10. '_merge' → logprob: -11.646965026855469

Token 128: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -8.196732960641384e-05
    2. 'sort' → logprob: -9.750082015991211
    3. 'Sort' → logprob: -10.875082015991211
    4. '_' → logprob: -12.750082015991211
    5. '(' → logprob: -14.625082015991211
    6. '_sorted' → logprob: -14.875082015991211
    7. '(A' → logprob: -15.000082015991211
    8. ' sort' → logprob: -15.750082015991211
    9. '_split' → logprob: -16.00008201599121
    10. '(arr' → logprob: -16.12508201599121

Token 129: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005545823951251805
    2. '(' → logprob: -7.50055456161499
    3. ' (' → logprob: -13.875555038452148
    4. '(
' → logprob: -15.500555038452148
    5. '(a' → logprob: -15.625555038452148
    6. '(array' → logprob: -15.625555038452148
    7. '(arr' → logprob: -16.50055503845215
    8. '<|end|>' → logprob: -17.50055503845215
    9. '(

' → logprob: -18.00055503845215
    10. '(AST' → logprob: -18.25055503845215

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.750004768371582
    3. '):' → logprob: -13.375004768371582
    4. ',A' → logprob: -15.625004768371582
    5. ')' → logprob: -17.250003814697266
    6. ',n' → logprob: -19.125003814697266
    7. '   ' → logprob: -19.250003814697266
    8. ',size' → logprob: -19.375003814697266
    9. ',a' → logprob: -19.375003814697266
    10. ' ):' → logprob: -19.500003814697266

Token 131: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16923554241657257
    2. '0' → logprob: -2.0442354679107666
    3. ' left' → logprob: -3.6692354679107666
    4. ' ' → logprob: -7.294235706329346
    5. 'start' → logprob: -11.044235229492188
    6. 'low' → logprob: -12.294235229492188
    7. 'l' → logprob: -12.669235229492188
    8. '	left' → logprob: -12.919235229492188
    9. 'begin' → logprob: -13.419235229492188
    10. 'p' → logprob: -13.544235229492188

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.179569077678025e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',right' → logprob: -13.500041961669922
    4. ',left' → logprob: -16.625041961669922
    5. ',int' → logprob: -16.750041961669922
    6. ',end' → logprob: -17.250041961669922
    7. ',n' → logprob: -17.750041961669922
    8. '=None' → logprob: -18.250041961669922
    9. ',index' → logprob: -18.375041961669922
    10. ',
' → logprob: -18.500041961669922

Token 133: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12693072855472565
    2. ' right' → logprob: -2.1269307136535645
    3. '	right' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.251931190490723
    5. ' ' → logprob: -14.876931190490723
    6. ',right' → logprob: -15.376931190490723
    7. 'Right' → logprob: -16.626930236816406
    8. '_right' → logprob: -17.376930236816406
    9. '[right' → logprob: -17.501930236816406
    10. 'r' → logprob: -17.501930236816406

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.190178904333152e-05
    2. ')' → logprob: -10.875031471252441
    3. ' ):' → logprob: -12.250031471252441
    4. ':' → logprob: -12.250031471252441
    5. '):
' → logprob: -12.625031471252441
    6. '():' → logprob: -17.750032424926758
    7. '):
' → logprob: -18.000032424926758
    8. ' ' → logprob: -18.250032424926758
    9. '=' → logprob: -18.375032424926758
    10. ']:' → logprob: -18.500032424926758

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3728748857975006
    2. ' if' → logprob: -1.2478748559951782
    3. 'if' → logprob: -3.7478749752044678
    4. '	if' → logprob: -7.872874736785889
    5. '    ' → logprob: -9.122875213623047
    6. '  ' → logprob: -10.497875213623047
    7. ' ' → logprob: -11.497875213623047
    8. '    
' → logprob: -11.497875213623047
    9. '```' → logprob: -11.747875213623047
    10. ',' → logprob: -11.872875213623047

Token 136: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1271769255399704
    2. ' if' → logprob: -2.3771770000457764
    3. '   ' → logprob: -3.6271770000457764
    4. '	if' → logprob: -11.502177238464355
    5. ' ' → logprob: -12.752177238464355
    6. '    ' → logprob: -13.002177238464355
    7. '  ' → logprob: -13.002177238464355
    8. '```' → logprob: -14.627177238464355
    9. '    
' → logprob: -15.377177238464355
    10. 'If' → logprob: -15.752177238464355

Token 137: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6699857115745544
    2. ' right' → logprob: -0.9199857115745544
    3. 'left' → logprob: -3.044985771179199
    4. 'right' → logprob: -3.169985771179199
    5. ' ' → logprob: -10.0449857711792
    6. '	left' → logprob: -10.0449857711792
    7. '	right' → logprob: -10.2949857711792
    8. ' lef' → logprob: -10.4199857711792
    9. '(left' → logprob: -13.1699857711792
    10. '   ' → logprob: -13.2949857711792

Token 138: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4160119295120239
    2. '<' → logprob: -1.416011929512024
    3. '+' → logprob: -2.6660118103027344
    4. ' +' → logprob: -3.7910118103027344
    5. ' >=' → logprob: -5.666011810302734
    6. '>=' → logprob: -6.791011810302734
    7. ' ' → logprob: -7.916011810302734
    8. '<int' → logprob: -9.041011810302734
    9. '<n' → logprob: -9.291011810302734
    10. '   ' → logprob: -9.791011810302734

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000204851632588543
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.875205039978027
    4. '```' → logprob: -15.750205039978027
    5. '+' → logprob: -16.25020408630371
    6. '  ' → logprob: -16.62520408630371
    7. '<|end|>' → logprob: -17.37520408630371
    8. '2' → logprob: -17.62520408630371
    9. '-' → logprob: -18.12520408630371
    10. '16' → logprob: -18.75020408630371

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.75001049041748
    4. '>' → logprob: -16.500011444091797
    5. '```' → logprob: -16.500011444091797
    6. '2' → logprob: -17.125011444091797
    7. '+' → logprob: -17.250011444091797
    8. '(' → logprob: -17.750011444091797
    9. '  ' → logprob: -17.750011444091797
    10. '-' → logprob: -18.000011444091797

Token 141: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09952724725008011
    2. ' <' → logprob: -2.724527359008789
    3. '>=' → logprob: -3.849527359008789
    4. ' >=' → logprob: -4.849527359008789
    5. '<int' → logprob: -11.849527359008789
    6. '[' → logprob: -12.474527359008789
    7. ' ' → logprob: -12.849527359008789
    8. '<len' → logprob: -12.849527359008789
    9. '<th' → logprob: -12.974527359008789
    10. '<n' → logprob: -13.099527359008789

Token 142: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0007099286303855479
    2. ' right' → logprob: -7.2507100105285645
    3. '	right' → logprob: -17.125709533691406
    4. '   ' → logprob: -17.500709533691406
    5. ' ' → logprob: -18.875709533691406
    6. '[right' → logprob: -20.875709533691406
    7. '(right' → logprob: -20.875709533691406
    8. 'Right' → logprob: -21.125709533691406
    9. '  ' → logprob: -21.250709533691406
    10. 'r' → logprob: -22.375709533691406

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002207712270319462
    2. ':
' → logprob: -6.1272077560424805
    3. '       ' → logprob: -11.75220775604248
    4. ' :' → logprob: -11.87720775604248
    5. '   ' → logprob: -12.62720775604248
    6. '):' → logprob: -12.62720775604248
    7. '<|end|>' → logprob: -15.37720775604248
    8. '):
' → logprob: -16.002206802368164
    9. ':

' → logprob: -16.002206802368164
    10. '():' → logprob: -16.127206802368164

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012264748103916645
    2. ' mid' → logprob: -4.762264728546143
    3. 'mid' → logprob: -5.637264728546143
    4. '   ' → logprob: -10.1372652053833
    5. '    ' → logprob: -11.5122652053833
    6. 'm' → logprob: -12.1372652053833
    7. ' midpoint' → logprob: -12.5122652053833
    8. '[mid' → logprob: -12.6372652053833
    9. '     ' → logprob: -12.8872652053833
    10. '```' → logprob: -13.1372652053833

Token 145: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.6932770013809204
    2. 'mid' (adapté à ' mid') → logprob: -0.6932770013809204
    3. '       ' → logprob: -9.568277359008789
    4. ' midpoint' → logprob: -10.568277359008789
    5. 'middle' → logprob: -11.193277359008789
    6. ' middle' → logprob: -11.568277359008789
    7. 'm' → logprob: -12.068277359008789
    8. '   ' → logprob: -13.568277359008789
    9. '           ' → logprob: -13.693277359008789
    10. '[mid' → logprob: -14.068277359008789

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142026245594025
    2. '=' → logprob: -1.7014203071594238
    3. '<|end|>' → logprob: -12.326419830322266
    4. ' ' → logprob: -13.701419830322266
    5. ' =
' → logprob: -14.826419830322266
    6. '=int' → logprob: -15.076419830322266
    7. ')' → logprob: -15.826419830322266
    8. ',' → logprob: -16.576419830322266
    9. ' =)' → logprob: -16.576419830322266
    10. '```' → logprob: -16.576419830322266

Token 147: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3133109211921692
    2. '(left' → logprob: -1.3133108615875244
    3. ' left' → logprob: -10.938310623168945
    4. 'left' → logprob: -11.188310623168945
    5. '   ' → logprob: -11.813310623168945
    6. '[left' → logprob: -12.313310623168945
    7. ' ' → logprob: -12.563310623168945
    8. '(lhs' → logprob: -13.938310623168945
    9. '(right' → logprob: -15.063310623168945
    10. '
' → logprob: -15.813310623168945

Token 148: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.10027578473091125
    2. ' left' → logprob: -2.350275754928589
    3. 'right' → logprob: -9.975275993347168
    4. ' lef' → logprob: -11.225275993347168
    5. ' right' → logprob: -12.350275993347168
    6. 'lef' → logprob: -13.225275993347168
    7. ' ' → logprob: -13.850275993347168
    8. '	left' → logprob: -14.100275993347168
    9. '(left' → logprob: -14.350275993347168
    10. '   ' → logprob: -14.975275993347168

Token 149: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407999634742737
    2. '+' → logprob: -0.974079966545105
    3. ' ' → logprob: -14.099080085754395
    4. '<|end|>' → logprob: -14.474080085754395
    5. ' +
' → logprob: -15.099080085754395
    6. '[left' → logprob: -15.224080085754395
    7. '[' → logprob: -15.349080085754395
    8. ' ' → logprob: -15.349080085754395
    9. '```' → logprob: -15.849080085754395
    10. '[right' → logprob: -16.099079132080078

Token 150: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16022828221321106
    2. ' right' → logprob: -1.9102282524108887
    3. ' ' → logprob: -13.160228729248047
    4. '	right' → logprob: -13.660228729248047
    5. '   ' → logprob: -14.785228729248047
    6. '(right' → logprob: -15.285228729248047
    7. '[right' → logprob: -15.285228729248047
    8. '
' → logprob: -16.535228729248047
    9. ',right' → logprob: -17.785228729248047
    10. '_right' → logprob: -17.910228729248047

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010829445673152804
    2. ')//' → logprob: -6.876082897186279
    3. ' )' → logprob: -10.251083374023438
    4. ')>>' → logprob: -11.126083374023438
    5. '//' → logprob: -17.501083374023438
    6. ')
' → logprob: -18.626083374023438
    7. '）' → logprob: -19.126083374023438
    8. ' //' → logprob: -19.376083374023438
    9. '   ' → logprob: -19.751083374023438
    10. ' ' → logprob: -19.876083374023438

Token 152: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.070004902780056
    2. '//' → logprob: -2.695004940032959
    3. ' ' → logprob: -10.4450044631958
    4. '>>' → logprob: -10.8200044631958
    5. ' >>' → logprob: -11.1950044631958
    6. ' ' → logprob: -12.6950044631958
    7. '2' → logprob: -13.5700044631958
    8. '```' → logprob: -15.1950044631958
    9. '   ' → logprob: -15.5700044631958
    10. '  ' → logprob: -16.195005416870117

Token 153: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -14.875804901123047
    4. '```' → logprob: -15.875804901123047
    5. '  ' → logprob: -16.375804901123047
    6. '
' → logprob: -17.125804901123047
    7. '۲' → logprob: -17.500804901123047
    8. '    ' → logprob: -18.188304901123047
    9. '２' → logprob: -19.000804901123047
    10. '<|end|>' → logprob: -19.000804901123047

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.125
    4. '۲' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. '２' → logprob: -20.5
    7. '२' → logprob: -21.75
    8. '
' → logprob: -21.75
    9. '1' → logprob: -22.125
    10. '٢' → logprob: -22.3125

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.652001678943634
    2. '
' → logprob: -0.777001678943634
    3. 'merge' → logprob: -4.402001857757568
    4. '        
' → logprob: -5.277001857757568
    5. '  
' → logprob: -7.902001857757568
    6. '   ' → logprob: -8.02700138092041
    7. '
' → logprob: -8.52700138092041
    8. ' merge' → logprob: -8.65200138092041
    9. ' 
' → logprob: -8.65200138092041
    10. '    
' → logprob: -8.77700138092041

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005312735214829445
    2. 'merge' → logprob: -5.380312919616699
    3. ' merge' → logprob: -7.880312919616699
    4. '
' → logprob: -8.6303129196167
    5. '   ' → logprob: -9.3803129196167
    6. '        
' → logprob: -10.1303129196167
    7. '```' → logprob: -13.2553129196167
    8. '    
' → logprob: -13.6303129196167
    9. '.merge' → logprob: -13.6303129196167
    10. '  
' → logprob: -13.7553129196167

Token 157: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.038044705986976624
    2. ' merge' → logprob: -3.2880446910858154
    3. '       ' → logprob: -13.288044929504395
    4. '   ' → logprob: -14.038044929504395
    5. '
' → logprob: -14.663044929504395
    6. '.merge' → logprob: -15.663044929504395
    7. ' ' → logprob: -16.038043975830078
    8. '_merge' → logprob: -17.038043975830078
    9. '```' → logprob: -19.038043975830078
    10. 'mer' → logprob: -19.163043975830078

Token 158: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.00011284107313258573
    2. '_merge' → logprob: -9.125112533569336
    3. '_sorted' → logprob: -13.500112533569336
    4. '_' → logprob: -14.000112533569336
    5. '_split' → logprob: -15.125112533569336
    6. '_s' → logprob: -15.250112533569336
    7. '(A' → logprob: -15.250112533569336
    8. '_sum' → logprob: -16.500112533569336
    9. '_scroll' → logprob: -16.500112533569336
    10. ' _' → logprob: -16.625112533569336

Token 159: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -16.000158309936523
    4. ' (' → logprob: -17.000158309936523
    5. 'A' → logprob: -18.500158309936523
    6. '```' → logprob: -19.625158309936523
    7. '(AST' → logprob: -19.875158309936523
    8. '((' → logprob: -19.875158309936523
    9. '(B' → logprob: -20.000158309936523
    10. '(

' → logprob: -20.500158309936523

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018268341955263168
    2. ',A' → logprob: -9.00018310546875
    3. '(A' → logprob: -9.87518310546875
    4. ' ,' → logprob: -11.87518310546875
    5. 'A' → logprob: -14.37518310546875
    6. '(' → logprob: -15.37518310546875
    7. ' A' → logprob: -18.50018310546875
    8. ')' → logprob: -18.50018310546875
    9. '```' → logprob: -18.62518310546875
    10. ',
' → logprob: -19.00018310546875

Token 161: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.008616345934569836
    2. ' left' → logprob: -4.7586164474487305
    3. '	left' → logprob: -13.75861644744873
    4. '[left' → logprob: -14.50861644744873
    5. ',left' → logprob: -16.383615493774414
    6. '(left' → logprob: -17.133615493774414
    7. ':left' → logprob: -17.633615493774414
    8. ' lef' → logprob: -17.633615493774414
    9. ' ' → logprob: -17.758615493774414
    10. '_left' → logprob: -18.133615493774414

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',m' → logprob: -14.000014305114746
    4. ',
' → logprob: -18.75001335144043
    5. '[mid' → logprob: -19.62501335144043
    6. '‌,' → logprob: -20.87501335144043
    7. ',module' → logprob: -20.87501335144043
    8. ' ' → logprob: -21.00001335144043
    9. '(mid' → logprob: -21.37501335144043
    10. ',end' → logprob: -21.62501335144043

Token 163: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.002475777640938759
    2. ' mid' → logprob: -6.002475738525391
    3. '[mid' → logprob: -16.25247573852539
    4. '(mid' → logprob: -16.62747573852539
    5. 'middle' → logprob: -20.12747573852539
    6. ' ' → logprob: -20.25247573852539
    7. ' midpoint' → logprob: -20.37747573852539
    8. '   ' → logprob: -20.50247573852539
    9. '_mid' → logprob: -21.25247573852539
    10. '.mid' → logprob: -21.37747573852539

Token 164: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06308291852474213
    2. ')' → logprob: -2.8130829334259033
    3. '       ' → logprob: -6.813082695007324
    4. ')
' → logprob: -11.438082695007324
    5. '   ' → logprob: -12.438082695007324
    6. ' )
' → logprob: -15.188082695007324
    7. ')

' → logprob: -15.438082695007324
    8. '
' → logprob: -16.81308364868164
    9. ',' → logprob: -16.93808364868164
    10. '),' → logprob: -17.56308364868164

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000701707205735147
    2. 'merge' → logprob: -7.375701904296875
    3. '
' → logprob: -10.125701904296875
    4. ' merge' → logprob: -10.500701904296875
    5. '   ' → logprob: -12.875701904296875
    6. '        
' → logprob: -13.375701904296875
    7. '	' → logprob: -13.375701904296875
    8. '```' → logprob: -13.875701904296875
    9. '.merge' → logprob: -14.875701904296875
    10. '_merge' → logprob: -15.875701904296875

Token 166: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.0052974349819123745
    2. '       ' → logprob: -5.630297660827637
    3. ' merge' → logprob: -6.380297660827637
    4. '.merge' → logprob: -14.755297660827637
    5. '   ' → logprob: -14.880297660827637
    6. ' ' → logprob: -15.255297660827637
    7. '     ' → logprob: -16.88029670715332
    8. '      ' → logprob: -17.13029670715332
    9. '_merge' → logprob: -17.13029670715332
    10. 'mer' → logprob: -17.25529670715332

Token 167: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.00010676169040380046
    2. '_merge' → logprob: -9.250106811523438
    3. '_' → logprob: -11.500106811523438
    4. ' _' → logprob: -15.625106811523438
    5. '_sorted' → logprob: -16.500106811523438
    6. '```' → logprob: -17.000106811523438
    7. '_split' → logprob: -17.125106811523438
    8. '_code' → logprob: -17.625106811523438
    9. '_swap' → logprob: -17.625106811523438
    10. '_SORT' → logprob: -17.750106811523438

Token 168: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -17.250001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. 'A' → logprob: -18.125001907348633
    6. ' (' → logprob: -18.750001907348633
    7. ')' → logprob: -19.000001907348633
    8. '```' → logprob: -19.750001907348633
    9. '(AST' → logprob: -20.125001907348633
    10. '[A' → logprob: -20.250001907348633

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ',A' → logprob: -11.750018119812012
    3. ' ,' → logprob: -12.125018119812012
    4. 'A' → logprob: -12.250018119812012
    5. ' A' → logprob: -18.250019073486328
    6. ',right' → logprob: -18.250019073486328
    7. '(A' → logprob: -18.375019073486328
    8. ',
' → logprob: -19.000019073486328
    9. ',R' → logprob: -19.125019073486328
    10. '```' → logprob: -19.250019073486328

Token 170: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2915995419025421
    2. 'A' → logprob: -1.5415995121002197
    3. 'right' → logprob: -3.5415995121002197
    4. ' mid' → logprob: -4.916599750518799
    5. ' right' → logprob: -6.541599750518799
    6. ' A' → logprob: -6.791599750518799
    7. '(mid' → logprob: -10.79159927368164
    8. '[mid' → logprob: -11.91659927368164
    9. '   ' → logprob: -12.54159927368164
    10. '(A' → logprob: -13.29159927368164

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009240844519808888
    2. ',right' → logprob: -7.000924110412598
    3. ' ,' → logprob: -11.375924110412598
    4. 'right' → logprob: -13.875924110412598
    5. '[right' → logprob: -16.12592315673828
    6. ' right' → logprob: -16.62592315673828
    7. '```' → logprob: -17.12592315673828
    8. ',
' → logprob: -18.37592315673828
    9. ':right' → logprob: -18.37592315673828
    10. '(right' → logprob: -18.87592315673828

Token 172: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.004078401252627373
    2. ' right' → logprob: -5.504078388214111
    3. '	right' → logprob: -17.754077911376953
    4. '[right' → logprob: -19.129077911376953
    5. '(right' → logprob: -19.379077911376953
    6. ',right' → logprob: -20.879077911376953
    7. 'r' → logprob: -21.254077911376953
    8. '.right' → logprob: -21.754077911376953
    9. ' ' → logprob: -22.004077911376953
    10. '_right' → logprob: -22.254077911376953

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08614564687013626
    2. '       ' → logprob: -2.7111456394195557
    3. ')
' → logprob: -4.211145877838135
    4. '   ' → logprob: -6.711145877838135
    5. ' )' → logprob: -10.961145401000977
    6. '
' → logprob: -12.211145401000977
    7. ',' → logprob: -13.211145401000977
    8. '	' → logprob: -13.711145401000977
    9. '),' → logprob: -14.086145401000977
    10. '```' → logprob: -14.586145401000977

Token 174: '       ' (ID: 309)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.5356786847114563
    2. '   ' → logprob: -1.4106786251068115
    3. '       ' → logprob: -1.9106786251068115
    4. ' merge' → logprob: -3.7856786251068115
    5. '.merge' → logprob: -10.53567886352539
    6. ' ' → logprob: -10.91067886352539
    7. '_merge' → logprob: -11.91067886352539
    8. '```' → logprob: -11.91067886352539
    9. '     ' → logprob: -12.53567886352539
    10. '  ' → logprob: -13.16067886352539

Token 175: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -2.15310683415737e-05
    2. ' merge' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '       ' → logprob: -18.62502098083496
    5. '
' → logprob: -19.37502098083496
    6. '.merge' → logprob: -20.37502098083496
    7. 'mer' → logprob: -21.62502098083496
    8. ' ' → logprob: -22.12502098083496
    9. '_merge' → logprob: -22.62502098083496
    10. '```' → logprob: -22.75002098083496

Token 176: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04859429597854614
    2. '(' → logprob: -3.0485942363739014
    3. ' (' → logprob: -12.67359447479248
    4. '((' → logprob: -13.92359447479248
    5. '(E' → logprob: -14.04859447479248
    6. '(
' → logprob: -14.17359447479248
    7. '(a' → logprob: -15.29859447479248
    8. '(`' → logprob: -15.54859447479248
    9. '(

' → logprob: -15.92359447479248
    10. '(I' → logprob: -15.92359447479248

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',A' → logprob: -14.375008583068848
    4. 'A' → logprob: -15.375008583068848
    5. ',
' → logprob: -16.125009536743164
    6. ')' → logprob: -17.000009536743164
    7. ',left' → logprob: -17.000009536743164
    8. '‌,' → logprob: -17.875009536743164
    9. '，' → logprob: -18.625009536743164
    10. '`,' → logprob: -18.750009536743164

Token 178: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.02676604874432087
    2. ' left' → logprob: -4.026765823364258
    3. 'A' → logprob: -4.776765823364258
    4. ' A' → logprob: -8.776765823364258
    5. '	left' → logprob: -14.526765823364258
    6. ',left' → logprob: -14.776765823364258
    7. '[left' → logprob: -15.026765823364258
    8. 'right' → logprob: -15.526765823364258
    9. ' ' → logprob: -16.401765823364258
    10. ')' → logprob: -16.901765823364258

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.250007629394531
    3. ',m' → logprob: -12.875007629394531
    4. ',
' → logprob: -17.75000762939453
    5. '[mid' → logprob: -19.75000762939453
    6. '(mid' → logprob: -20.00000762939453
    7. 'mid' → logprob: -20.25000762939453
    8. ',module' → logprob: -20.62500762939453
    9. ',end' → logprob: -21.12500762939453
    10. ',right' → logprob: -21.37500762939453

Token 180: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.07964271306991577
    2. ' mid' → logprob: -2.5796427726745605
    3. 'right' → logprob: -7.5796427726745605
    4. ' right' → logprob: -8.329642295837402
    5. '[mid' → logprob: -15.704642295837402
    6. ' ' → logprob: -15.954642295837402
    7. 'middle' → logprob: -15.954642295837402
    8. '(mid' → logprob: -16.07964324951172
    9. 'm' → logprob: -17.20464324951172
    10. ' midpoint' → logprob: -17.45464324951172

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ',right' → logprob: -13.00000286102295
    3. 'right' → logprob: -14.62500286102295
    4. ' ,' → logprob: -15.00000286102295
    5. ' right' → logprob: -18.750003814697266
    6. ')' → logprob: -18.750003814697266
    7. ',
' → logprob: -20.125003814697266
    8. '[right' → logprob: -20.625003814697266
    9. '   ' → logprob: -21.625003814697266
    10. '```' → logprob: -22.000003814697266

Token 182: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20141343772411346
    2. ' right' → logprob: -1.7014133930206299
    3. '	right' → logprob: -16.076414108276367
    4. '   ' → logprob: -18.201414108276367
    5. ' ' → logprob: -18.576414108276367
    6. '[right' → logprob: -18.951414108276367
    7. 'rights' → logprob: -19.076414108276367
    8. ')' → logprob: -19.201414108276367
    9. 'r' → logprob: -19.201414108276367
    10. '.right' → logprob: -19.326414108276367

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.375000953674316
    3. ')#' → logprob: -17.875
    4. ' )' → logprob: -18.25
    5. '))' → logprob: -19.5
    6. ')

' → logprob: -19.625
    7. ')return' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. '),' → logprob: -20.375
    10. ')`' → logprob: -20.375

Token 184: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0356680154800415
    2. 'if' → logprob: -1.4106680154800415
    3. 'N' → logprob: -2.285667896270752
    4. 'for' → logprob: -2.660667896270752
    5. 'data' → logprob: -2.660667896270752
    6. 'A' → logprob: -2.910667896270752
    7. 'def' → logprob: -3.035667896270752
    8. 'print' → logprob: -4.535667896270752
    9. 'arr' → logprob: -4.535667896270752
    10. 'S' → logprob: -5.535667896270752

Token 186: ' swap' (ID: 25489)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007912751287221909
    2. ' solve' → logprob: -5.757912635803223
    3. ' count' → logprob: -6.757912635803223
    4. ' process' → logprob: -7.257912635803223
    5. 'main' → logprob: -7.632912635803223
    6. ' input' → logprob: -7.882912635803223
    7. ' read' → logprob: -8.007912635803223
    8. ' find' → logprob: -8.382912635803223
    9. ' solution' → logprob: -8.507912635803223
    10. ' max' → logprob: -9.007912635803223

Token 187: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04396579787135124
    2. '(' → logprob: -3.7939658164978027
    3. '(a' → logprob: -3.9189658164978027
    4. '(i' → logprob: -8.543965339660645
    5. '(arr' → logprob: -8.793965339660645
    6. '(lst' → logprob: -10.168965339660645
    7. '(array' → logprob: -10.293965339660645
    8. '(_' → logprob: -10.418965339660645
    9. '((' → logprob: -10.668965339660645
    10. '(
' → logprob: -10.918965339660645

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ',i' → logprob: -10.375035285949707
    3. ' ,' → logprob: -13.000035285949707
    4. ',index' → logprob: -14.000035285949707
    5. ',a' → logprob: -14.750035285949707
    6. ',A' → logprob: -16.25003433227539
    7. ',n' → logprob: -17.00003433227539
    8. 'A' → logprob: -17.62503433227539
    9. '):' → logprob: -17.87503433227539
    10. ',int' → logprob: -17.87503433227539

Token 189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3885849416255951
    2. ' i' → logprob: -1.1385849714279175
    3. 'x' → logprob: -7.388585090637207
    4. 'a' → logprob: -7.638585090637207
    5. ' x' → logprob: -8.263585090637207
    6. ' a' → logprob: -8.638585090637207
    7. ' idx' → logprob: -10.638585090637207
    8. ' ' → logprob: -10.763585090637207
    9. 'index' → logprob: -11.263585090637207
    10. 'idx' → logprob: -11.263585090637207

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. ' ,' → logprob: -10.62503719329834
    3. ',i' → logprob: -11.75003719329834
    4. '   ' → logprob: -12.75003719329834
    5. ',j' → logprob: -14.12503719329834
    6. ' ' → logprob: -15.37503719329834
    7. '):' → logprob: -15.62503719329834
    8. ',A' → logprob: -15.62503719329834
    9. '‌,' → logprob: -16.125038146972656
    10. '):
' → logprob: -16.250038146972656

Token 191: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07677215337753296
    2. 'i' → logprob: -3.2017722129821777
    3. ' j' → logprob: -3.4517722129821777
    4. ' i' → logprob: -6.576772212982178
    5. '<|end|>' → logprob: -9.32677173614502
    6. ' ' → logprob: -11.20177173614502
    7. '   ' → logprob: -11.57677173614502
    8. '  ' → logprob: -12.57677173614502
    9. ')' → logprob: -12.70177173614502
    10. '	j' → logprob: -12.82677173614502

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025978617486543953
    2. '):
' → logprob: -8.500259399414062
    3. ')' → logprob: -9.875259399414062
    4. ':' → logprob: -12.500259399414062
    5. ' ):' → logprob: -14.625259399414062
    6. '):
' → logprob: -15.000259399414062
    7. '):

' → logprob: -15.875259399414062
    8. '   ' → logprob: -15.875259399414062
    9. ',' → logprob: -17.250259399414062
    10. '}:' → logprob: -17.625259399414062

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026552708819508553
    2. ' A' → logprob: -4.276552677154541
    3. 'A' → logprob: -4.401552677154541
    4. '	A' → logprob: -10.0265531539917
    5. '    ' → logprob: -12.9015531539917
    6. '  ' → logprob: -12.9015531539917
    7. ' ' → logprob: -13.1515531539917
    8. ',A' → logprob: -14.0265531539917
    9. '    
' → logprob: -14.6515531539917
    10. '=A' → logprob: -14.6515531539917

Token 194: ' tmp' (ID: 8919)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.045616839081048965
    2. ' A' → logprob: -3.545616865158081
    3. '   ' → logprob: -4.170616626739502
    4. 'temp' → logprob: -8.79561710357666
    5. 'tmp' (adapté à ' tmp') → logprob: -9.54561710357666
    6. ' temp' → logprob: -10.17061710357666
    7. '	A' → logprob: -10.92061710357666
    8. ' ' → logprob: -11.42061710357666
    9. ' tmp' → logprob: -12.42061710357666
    10. '  ' → logprob: -13.17061710357666

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868788182735443
    2. '=' → logprob: -1.1368788480758667
    3. '=A' → logprob: -12.261878967285156
    4. ' ' → logprob: -13.136878967285156
    5. '  ' → logprob: -15.136878967285156
    6. '＝' → logprob: -15.636878967285156
    7. '   ' → logprob: -15.636878967285156
    8. ')' → logprob: -16.011878967285156
    9. ',' → logprob: -16.136878967285156
    10. '    ' → logprob: -16.261878967285156

Token 196: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015024791937321424
    2. ' A' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '	A' → logprob: -17.126502990722656
    5. '=A' → logprob: -18.126502990722656
    6. '(A' → logprob: -19.626502990722656
    7. 'a' → logprob: -19.876502990722656
    8. '>A' → logprob: -20.126502990722656
    9. 'Ａ' → logprob: -20.376502990722656
    10. ' ' → logprob: -20.376502990722656

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001593195047462359
    2. '[j' → logprob: -8.75015926361084
    3. 'i' → logprob: -14.37515926361084
    4. '[' → logprob: -15.12515926361084
    5. '```' → logprob: -18.125160217285156
    6. '[I' → logprob: -19.500160217285156
    7. ' i' → logprob: -20.375160217285156
    8. 'j' → logprob: -20.750160217285156
    9. '_i' → logprob: -20.750160217285156
    10. '(i' → logprob: -21.125160217285156

Token 198: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3871745765209198
    2. ']' → logprob: -1.1371746063232422
    3. ']
' → logprob: -8.387174606323242
    4. ']

' → logprob: -9.887174606323242
    5. '];' → logprob: -11.012174606323242
    6. ' ]
' → logprob: -13.012174606323242
    7. '];
' → logprob: -13.262174606323242
    8. ')
' → logprob: -13.512174606323242
    9. ' ]' → logprob: -13.637174606323242
    10. ')' → logprob: -14.012174606323242

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04556650668382645
    2. '
' → logprob: -3.2955665588378906
    3. 'A' → logprob: -5.670566558837891
    4. ' A' → logprob: -5.795566558837891
    5. '<|end|>' → logprob: -8.17056655883789
    6. '    
' → logprob: -8.67056655883789
    7. ' 
' → logprob: -9.04556655883789
    8. ' ' → logprob: -9.17056655883789
    9. '	A' → logprob: -9.29556655883789
    10. '  
' → logprob: -9.42056655883789

Token 200: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35786470770835876
    2. 'A' (adapté à ' A') → logprob: -1.4828647375106812
    3. ' A' → logprob: -2.7328646183013916
    4. '
' → logprob: -5.107864856719971
    5. ' ' → logprob: -7.232864856719971
    6. '<|end|>' → logprob: -7.482864856719971
    7. ' 
' → logprob: -7.982864856719971
    8. '  
' → logprob: -8.357864379882812
    9. '    
' → logprob: -8.357864379882812
    10. '	A' → logprob: -8.357864379882812

Token 201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016600665403530002
    2. '[j' → logprob: -6.751659870147705
    3. '[' → logprob: -7.626659870147705
    4. 'i' → logprob: -13.501660346984863
    5. '[I' → logprob: -14.751660346984863
    6. '```' → logprob: -15.001660346984863
    7. ',i' → logprob: -16.626659393310547
    8. ' [' → logprob: -16.876659393310547
    9. '	i' → logprob: -17.501659393310547
    10. '(i' → logprob: -17.501659393310547

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.584861744660884e-05
    2. ']=' → logprob: -10.375045776367188
    3. ' ]' → logprob: -11.250045776367188
    4. '[' → logprob: -14.250045776367188
    5. ']
' → logprob: -15.000045776367188
    6. '],' → logprob: -15.125045776367188
    7. '=' → logprob: -16.000045776367188
    8. ',' → logprob: -16.375045776367188
    9. ')' → logprob: -16.750045776367188
    10. '[i' → logprob: -16.875045776367188

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132975995540619
    2. ' =' → logprob: -1.3132976293563843
    3. '=A' → logprob: -10.938297271728516
    4. ',' → logprob: -11.188297271728516
    5. ' ' → logprob: -13.688297271728516
    6. '=
' → logprob: -14.188297271728516
    7. ']' → logprob: -14.313297271728516
    8. ' =
' → logprob: -14.313297271728516
    9. ')' → logprob: -14.813297271728516
    10. '[' → logprob: -15.438297271728516

Token 204: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015860427811276168
    2. ' A' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.000158309936523
    4. '=A' → logprob: -19.500158309936523
    5. '	A' → logprob: -19.625158309936523
    6. ' ' → logprob: -19.625158309936523
    7. '```' → logprob: -19.875158309936523
    8. '  ' → logprob: -20.125158309936523
    9. '>A' → logprob: -20.375158309936523
    10. '(A' → logprob: -20.375158309936523

Token 205: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.7432603272027336e-06
    2. 'j' → logprob: -13.625001907348633
    3. 'A' → logprob: -15.000001907348633
    4. '[' → logprob: -15.750001907348633
    5. '[i' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '[
' → logprob: -19.750001907348633
    9. '	j' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.125001907348633

Token 206: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3676241934299469
    2. ']' → logprob: -1.7426241636276245
    3. ')
' → logprob: -2.242624282836914
    4. ']
' → logprob: -4.492624282836914
    5. '<|end|>' → logprob: -5.117624282836914
    6. '   ' → logprob: -5.367624282836914
    7. '
' → logprob: -5.492624282836914
    8. ' ' → logprob: -8.867624282836914
    9. '```' → logprob: -9.742624282836914
    10. '  
' → logprob: -10.367624282836914

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003605297766625881
    2. 'A' → logprob: -5.878605365753174
    3. '
' → logprob: -8.003604888916016
    4. ' A' → logprob: -8.378604888916016
    5. '    
' → logprob: -9.253604888916016
    6. '<|end|>' → logprob: -9.253604888916016
    7. '	A' → logprob: -10.878604888916016
    8. '  
' → logprob: -11.628604888916016
    9. '  ' → logprob: -11.878604888916016
    10. ' ' → logprob: -12.628604888916016

Token 208: ' A' (ID: 355)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00033546582562848926
    2. ' tmp' → logprob: -8.000335693359375
    3. '	tmp' → logprob: -17.750335693359375
    4. '$tmp' → logprob: -18.125335693359375
    5. '/tmp' → logprob: -18.875335693359375
    6. 'A' (adapté à ' A') → logprob: -19.875335693359375
    7. '[tmp' → logprob: -19.875335693359375
    8. '(tmp' → logprob: -20.000335693359375
    9. '_tmp' → logprob: -20.375335693359375
    10. '.tmp' → logprob: -20.375335693359375

Token 209: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001037815964082256
    2. '[' → logprob: -9.250103950500488
    3. '[i' → logprob: -12.125103950500488
    4. '```' → logprob: -14.000103950500488
    5. '[js' → logprob: -14.375103950500488
    6. '[tmp' → logprob: -15.875103950500488
    7. '][' → logprob: -15.875103950500488
    8. 'j' → logprob: -16.125102996826172
    9. '[
' → logprob: -16.375102996826172
    10. '   ' → logprob: -16.500102996826172

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.8206473871250637e-05
    2. ']
' → logprob: -11.250028610229492
    3. ' ]' → logprob: -11.250028610229492
    4. '<|end|>' → logprob: -13.250028610229492
    5. ')' → logprob: -16.250028610229492
    6. '   ' → logprob: -16.250028610229492
    7. ']=' → logprob: -16.875028610229492
    8. '<|end|>' → logprob: -17.375028610229492
    9. ']

' → logprob: -17.500028610229492
    10. '"]' → logprob: -17.875028610229492

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024213364347815514
    2. ' =' → logprob: -3.7742133140563965
    3. '<|end|>' → logprob: -7.0242133140563965
    4. '=
' → logprob: -11.149213790893555
    5. ']' → logprob: -11.274213790893555
    6. '[tmp' → logprob: -11.524213790893555
    7. 'tmp' → logprob: -11.774213790893555
    8. ')' → logprob: -11.899213790893555
    9. '
' → logprob: -12.274213790893555
    10. ' ' → logprob: -12.274213790893555

Token 212: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0019286326132714748
    2. ' tmp' → logprob: -6.251928806304932
    3. '	tmp' → logprob: -16.751928329467773
    4. '/tmp' → logprob: -18.751928329467773
    5. '$tmp' → logprob: -18.876928329467773
    6. '[tmp' → logprob: -19.751928329467773
    7. 'temp' → logprob: -19.876928329467773
    8. 'A' → logprob: -19.876928329467773
    9. '(tmp' → logprob: -20.626928329467773
    10. '.tmp' → logprob: -21.126928329467773

Token 213: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002955399686470628
    2. '<|end|>' → logprob: -8.375295639038086
    3. 'for' → logprob: -11.375295639038086
    4. '#' → logprob: -11.625295639038086
    5. '[' → logprob: -12.000295639038086
    6. 'd' → logprob: -12.000295639038086
    7. '```' → logprob: -12.000295639038086
    8. '<|end|>' → logprob: -12.125295639038086
    9. ' def' → logprob: -12.375295639038086
    10. '\' → logprob: -12.500295639038086

Token 215: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.1505715548992157
    2. ' partition' → logprob: -2.025571584701538
    3. ' main' → logprob: -6.025571346282959
    4. ' quick' → logprob: -6.400571346282959
    5. 'main' → logprob: -7.150571346282959
    6. 'quick' → logprob: -7.525571346282959
    7. ' bubble' → logprob: -7.900571346282959
    8. 'in' → logprob: -8.025571823120117
    9. 'qu' → logprob: -8.025571823120117
    10. 'bubble' → logprob: -8.275571823120117

Token 216: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.62501335144043
    3. '(arr' → logprob: -12.62501335144043
    4. '(array' → logprob: -14.50001335144043
    5. '(
' → logprob: -16.62501335144043
    6. ' (' → logprob: -17.12501335144043
    7. '(a' → logprob: -17.25001335144043
    8. '<|end|>' → logprob: -17.37501335144043
    9. '(Q' → logprob: -18.87501335144043
    10. '(Array' → logprob: -19.00001335144043

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -15.125000953674316
    3. ',A' → logprob: -15.250000953674316
    4. '   ' → logprob: -20.625
    5. 'A' → logprob: -20.625
    6. ',
' → logprob: -21.75
    7. '‌,' → logprob: -21.75
    8. ',i' → logprob: -22.125
    9. '，' → logprob: -22.5
    10. ',array' → logprob: -22.625

Token 218: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.72897869348526
    2. 'left' → logprob: -0.85397869348526
    3. 'low' → logprob: -2.8539786338806152
    4. ' left' → logprob: -3.7289786338806152
    5. ' p' → logprob: -4.978978633880615
    6. 'lo' → logprob: -6.603978633880615
    7. ' low' → logprob: -6.853978633880615
    8. 'start' → logprob: -8.228979110717773
    9. 'pivot' → logprob: -8.728979110717773
    10. 'l' → logprob: -8.853979110717773

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027337539358995855
    2. ' ,' → logprob: -8.375273704528809
    3. ',p' → logprob: -10.750273704528809
    4. ',A' → logprob: -12.500273704528809
    5. ',i' → logprob: -12.750273704528809
    6. 'def' → logprob: -12.875273704528809
    7. '   ' → logprob: -13.125273704528809
    8. ',int' → logprob: -13.625273704528809
    9. 'index' → logprob: -14.000273704528809
    10. 'p' → logprob: -14.125273704528809

Token 220: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007853295537643135
    2. ' r' → logprob: -7.2507853507995605
    3. 'q' → logprob: -9.500784873962402
    4. '	r' → logprob: -15.125784873962402
    5. 'right' → logprob: -16.00078582763672
    6. ' q' → logprob: -16.25078582763672
    7. '
' → logprob: -17.50078582763672
    8. '   ' → logprob: -17.62578582763672
    9. ' ' → logprob: -18.00078582763672
    10. 'u' → logprob: -18.37578582763672

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011757015017792583
    2. '):
' → logprob: -6.751175880432129
    3. ')' → logprob: -12.501175880432129
    4. '):
' → logprob: -13.626175880432129
    5. ' ):' → logprob: -15.126175880432129
    6. ':' → logprob: -15.626175880432129
    7. '):

' → logprob: -16.126174926757812
    8. ',' → logprob: -17.001174926757812
    9. ''):' → logprob: -18.751174926757812
    10. ']:' → logprob: -19.126174926757812

Token 222: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.250745564699173
    2. 'pivot' → logprob: -2.1257455348968506
    3. '   ' → logprob: -2.6257455348968506
    4. ' x' → logprob: -4.00074577331543
    5. ' pivot' → logprob: -4.50074577331543
    6. ' ' → logprob: -7.75074577331543
    7. 'v' → logprob: -9.50074577331543
    8. 'q' → logprob: -10.25074577331543
    9. 'i' → logprob: -10.62574577331543
    10. '```' → logprob: -11.25074577331543

Token 223: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.011528628878295422
    2. 'pivot' → logprob: -4.511528491973877
    3. ' x' → logprob: -8.011528968811035
    4. '   ' → logprob: -9.386528968811035
    5. ' ' → logprob: -10.011528968811035
    6. ' pivot' → logprob: -11.636528968811035
    7. 'i' → logprob: -11.886528968811035
    8. '	x' → logprob: -13.261528968811035
    9. '```' → logprob: -14.261528968811035
    10. '  ' → logprob: -14.511528968811035

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895298838615417
    2. '=' → logprob: -2.4639530181884766
    3. ',' → logprob: -11.838953018188477
    4. '=A' → logprob: -12.088953018188477
    5. ')' → logprob: -14.963953018188477
    6. ' ' → logprob: -16.463953018188477
    7. '＝' → logprob: -16.713953018188477
    8. ' =
' → logprob: -17.338953018188477
    9. '```' → logprob: -17.338953018188477
    10. '.' → logprob: -17.713953018188477

Token 225: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024758970830589533
    2. ' A' → logprob: -6.002475738525391
    3. '(A' → logprob: -15.75247573852539
    4. '	A' → logprob: -17.25247573852539
    5. '=A' → logprob: -17.25247573852539
    6. '   ' → logprob: -18.50247573852539
    7. 'r' → logprob: -19.25247573852539
    8. ' ' → logprob: -19.37747573852539
    9. '[A' → logprob: -19.75247573852539
    10. '>A' → logprob: -20.00247573852539

Token 226: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0004933410091325641
    2. 'r' → logprob: -7.62549352645874
    3. '[p' → logprob: -12.625493049621582
    4. '[' → logprob: -13.500493049621582
    5. '	r' → logprob: -15.375493049621582
    6. '[
' → logprob: -16.0004940032959
    7. '[j' → logprob: -16.2504940032959
    8. '(r' → logprob: -16.5004940032959
    9. '
' → logprob: -17.0004940032959
    10. '```' → logprob: -17.0004940032959

Token 227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6197724938392639
    2. '[' → logprob: -0.9947724938392639
    3. ')[' → logprob: -2.994772434234619
    4. ']' → logprob: -3.494772434234619
    5. ')' → logprob: -4.494772434234619
    6. ' )[' → logprob: -8.744772911071777
    7. ' ][' → logprob: -8.994772911071777
    8. ']
' → logprob: -10.494772911071777
    9. '])[' → logprob: -10.494772911071777
    10. ' [' → logprob: -10.619772911071777

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -15.375000953674316
    4. '```' → logprob: -15.937500953674316
    5. '

' → logprob: -17.4375
    6. '[' → logprob: -17.8125
    7. '0' → logprob: -17.9375
    8. '   ' → logprob: -18.0
    9. '۱' → logprob: -18.0625
    10. '१' → logprob: -18.375

Token 229: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003550297114998102
    2. ']' → logprob: -6.1285505294799805
    3. ')
' → logprob: -6.6285505294799805
    4. '
' → logprob: -11.37855052947998
    5. '<|end|>' → logprob: -11.87855052947998
    6. ' )' → logprob: -12.00355052947998
    7. '])' → logprob: -12.12855052947998
    8. ']
' → logprob: -12.37855052947998
    9. '   ' → logprob: -12.75355052947998
    10. ')]' → logprob: -14.37855052947998

Token 230: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08686776459217072
    2. '   ' → logprob: -2.9618678092956543
    3. ' i' → logprob: -3.4618678092956543
    4. '
' → logprob: -9.586867332458496
    5. '  ' → logprob: -11.336867332458496
    6. '	i' → logprob: -11.711867332458496
    7. ' ' → logprob: -11.961867332458496
    8. '    
' → logprob: -12.461867332458496
    9. ',i' → logprob: -12.961867332458496
    10. '```' → logprob: -13.461867332458496

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -6.480199954239652e-05
    2. ' i' → logprob: -10.375064849853516
    3. '   ' → logprob: -10.375064849853516
    4. '
' → logprob: -13.625064849853516
    5. ' ' → logprob: -14.250064849853516
    6. '```' → logprob: -15.250064849853516
    7. '	i' → logprob: -16.000064849853516
    8. '    
' → logprob: -16.750064849853516
    9. '

' → logprob: -16.875064849853516
    10. 'store' → logprob: -17.000064849853516

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. ' ' → logprob: -14.19314956665039
    4. '＝' → logprob: -14.69314956665039
    5. '=i' → logprob: -15.19314956665039
    6. '=p' → logprob: -15.31814956665039
    7. 'p' → logprob: -15.56814956665039
    8. '=
' → logprob: -16.56814956665039
    9. '=int' → logprob: -16.81814956665039
    10. ',' → logprob: -16.94314956665039

Token 233: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000553151941858232
    2. ' p' → logprob: -7.500553131103516
    3. '(p' → logprob: -15.625553131103516
    4. '<p' → logprob: -17.625553131103516
    5. '	p' → logprob: -18.125553131103516
    6. '[p' → logprob: -19.125553131103516
    7. '-' → logprob: -20.000553131103516
    8. ' ' → logprob: -20.125553131103516
    9. '   ' → logprob: -20.625553131103516
    10. '
' → logprob: -20.750553131103516

Token 234: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03805778920650482
    2. ' -' → logprob: -3.288057804107666
    3. '   ' → logprob: -11.163057327270508
    4. 'p' → logprob: -13.538057327270508
    5. '
' → logprob: -14.913057327270508
    6. ' ' → logprob: -15.413057327270508
    7. ' p' → logprob: -16.163057327270508
    8. '-=' → logprob: -16.413057327270508
    9. 'def' → logprob: -16.788057327270508
    10. '−' → logprob: -17.038057327270508

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '```' → logprob: -20.125003814697266
    5. '
' → logprob: -20.375003814697266
    6. '  ' → logprob: -21.000003814697266
    7. '0' → logprob: -21.500003814697266
    8. '１' → logprob: -21.625003814697266
    9. '2' → logprob: -22.125003814697266
    10. '

' → logprob: -22.437503814697266

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.375001907348633
    4. '
' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '2' → logprob: -21.687501907348633
    7. '１' → logprob: -21.750001907348633
    8. '  ' → logprob: -21.750001907348633
    9. '

' → logprob: -21.875001907348633
    10. '0' → logprob: -22.062501907348633

Token 237: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6968828439712524
    2. 'for' → logprob: -1.0718828439712524
    3. '   ' → logprob: -2.071882724761963
    4. '
' → logprob: -3.446882724761963
    5. '	for' → logprob: -6.821882724761963
    6. '<|end|>' → logprob: -7.696882724761963
    7. '    
' → logprob: -9.946883201599121
    8. ' ' → logprob: -10.446883201599121
    9. '```' → logprob: -10.946883201599121
    10. '  ' → logprob: -11.196883201599121

Token 238: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2161320596933365
    2. ' for' → logprob: -2.216132164001465
    3. '   ' → logprob: -2.466132164001465
    4. '
' → logprob: -7.966132164001465
    5. '	for' → logprob: -9.966132164001465
    6. '    
' → logprob: -11.216132164001465
    7. '<|end|>' → logprob: -11.591132164001465
    8. ' ' → logprob: -12.466132164001465
    9. '  ' → logprob: -12.466132164001465
    10. '  
' → logprob: -13.591132164001465

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00038241007132455707
    2. ' for' → logprob: -8.000382423400879
    3. '   ' → logprob: -10.000382423400879
    4. '	for' → logprob: -13.875382423400879
    5. '
' → logprob: -14.625382423400879
    6. 'j' → logprob: -15.500382423400879
    7. '    
' → logprob: -18.250381469726562
    8. '  ' → logprob: -20.000381469726562
    9. '```' → logprob: -20.000381469726562
    10. '    ' → logprob: -20.250381469726562

Token 240: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011050889268517494
    2. ' j' → logprob: -4.511050701141357
    3. 'k' → logprob: -13.386051177978516
    4. '	j' → logprob: -14.386051177978516
    5. '   ' → logprob: -15.011051177978516
    6. ' ' → logprob: -15.011051177978516
    7. 'q' → logprob: -15.886051177978516
    8. '$j' → logprob: -16.636051177978516
    9. 'index' → logprob: -16.886051177978516
    10. '[j' → logprob: -17.761051177978516

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004079828038811684
    2. 'in' → logprob: -5.504079818725586
    3. 'range' → logprob: -14.504079818725586
    4. ' ' → logprob: -14.879079818725586
    5. '<|end|>' → logprob: -15.879079818725586
    6. ',' → logprob: -16.379079818725586
    7. 'p' → logprob: -16.504079818725586
    8. 'import' → logprob: -16.754079818725586
    9. '	in' → logprob: -17.004079818725586
    10. ')' → logprob: -17.629079818725586

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022524237632751
    2. ' range' → logprob: -1.91022527217865
    3. '(range' → logprob: -14.160224914550781
    4. 'p' → logprob: -15.785224914550781
    5. ' ' → logprob: -16.16022491455078
    6. ' p' → logprob: -16.78522491455078
    7. '	range' → logprob: -16.78522491455078
    8. '   ' → logprob: -18.16022491455078
    9. ' rang' → logprob: -18.41022491455078
    10. 'rang' → logprob: -19.28522491455078

Token 243: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.125007629394531
    3. 'p' → logprob: -13.625007629394531
    4. ' p' → logprob: -14.750007629394531
    5. ' (' → logprob: -15.625007629394531
    6. '(i' → logprob: -17.87500762939453
    7. ',p' → logprob: -19.25000762939453
    8. '(
' → logprob: -19.62500762939453
    9. '<p' → logprob: -20.00000762939453
    10. '   ' → logprob: -20.12500762939453

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009635079186409712
    2. ' ,' → logprob: -7.1259636878967285
    3. ',r' → logprob: -8.75096321105957
    4. 'r' → logprob: -14.37596321105957
    5. ' r' → logprob: -16.25096321105957
    6. '   ' → logprob: -18.75096321105957
    7. ' ' → logprob: -19.12596321105957
    8. ',
' → logprob: -19.25096321105957
    9. '，' → logprob: -19.50096321105957
    10. '
' → logprob: -19.87596321105957

Token 245: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002475777640938759
    2. ' r' → logprob: -6.002475738525391
    3. '	r' → logprob: -16.87747573852539
    4. '
' → logprob: -17.87747573852539
    5. ' ' → logprob: -18.37747573852539
    6. '_r' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.87747573852539
    8. '   ' → logprob: -20.00247573852539
    9. '­r' → logprob: -21.25247573852539
    10. 'rl' → logprob: -21.50247573852539

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009946378879249096
    2. '):
' → logprob: -4.634946346282959
    3. ' ):' → logprob: -8.759946823120117
    4. ',' → logprob: -11.384946823120117
    5. ')' → logprob: -11.884946823120117
    6. '):
' → logprob: -12.259946823120117
    7. ':' → logprob: -13.009946823120117
    8. '   ' → logprob: -13.009946823120117
    9. '<|end|>' → logprob: -13.509946823120117
    10. ' ):
' → logprob: -13.884946823120117

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011210456723347306
    2. ' if' → logprob: -7.7511210441589355
    3. '<|end|>' → logprob: -8.001121520996094
    4. '   ' → logprob: -9.251121520996094
    5. ':' → logprob: -9.751121520996094
    6. ',' → logprob: -9.751121520996094
    7. '    ' → logprob: -10.501121520996094
    8. '        
' → logprob: -10.626121520996094
    9. ':
' → logprob: -10.876121520996094
    10. '     ' → logprob: -11.126121520996094

Token 248: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0555974543094635
    2. 'if' (adapté à ' if') → logprob: -3.3055975437164307
    3. '       ' → logprob: -4.055597305297852
    4. '           ' → logprob: -9.805597305297852
    5. '   ' → logprob: -11.180597305297852
    6. '	if' → logprob: -12.555597305297852
    7. 'If' → logprob: -13.555597305297852
    8. ' ' → logprob: -13.805597305297852
    9. '    ' → logprob: -14.680597305297852
    10. '<|end|>' → logprob: -14.680597305297852

Token 249: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889298349618912
    2. ' A' → logprob: -2.578892946243286
    3. '   ' → logprob: -13.203892707824707
    4. '	A' → logprob: -13.953892707824707
    5. ' ' → logprob: -14.953892707824707
    6. '(A' → logprob: -15.953892707824707
    7. '  ' → logprob: -17.203893661499023
    8. '>A' → logprob: -18.578893661499023
    9. ' ' → logprob: -18.703893661499023
    10. '<A' → logprob: -18.828893661499023

Token 250: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. 'j' → logprob: -17.0
    4. '[i' → logprob: -18.25
    5. '
' → logprob: -19.625
    6. ' [' → logprob: -20.375
    7. '[
' → logprob: -20.375
    8. '```' → logprob: -20.625
    9. '   ' → logprob: -21.125
    10. '[js' → logprob: -21.25

Token 251: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001367857912555337
    2. '][' → logprob: -6.626368045806885
    3. ')[' → logprob: -10.626367568969727
    4. ' [' → logprob: -11.251367568969727
    5. '1' → logprob: -13.751367568969727
    6. ' ][' → logprob: -14.626367568969727
    7. '>[' → logprob: -14.626367568969727
    8. ']' → logprob: -15.126367568969727
    9. '}[' → logprob: -15.126367568969727
    10. '```' → logprob: -15.251367568969727

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '0' → logprob: -17.0
    5. '][' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -19.3125
    8. '
' → logprob: -19.5
    9. '<|end|>' → logprob: -19.6875
    10. ')' → logprob: -19.75

Token 253: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759835839271545
    2. ' <=' → logprob: -0.8259835839271545
    3. ')' → logprob: -10.950984001159668
    4. ')<=' → logprob: -11.075984001159668
    5. ']<=' → logprob: -12.200984001159668
    6. '<' → logprob: -12.825984001159668
    7. ']' → logprob: -13.950984001159668
    8. ' ' → logprob: -14.325984001159668
    9. ' <' → logprob: -14.700984001159668
    10. '[' → logprob: -14.950984001159668

Token 254: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.020566998049616814
    2. ' <=' → logprob: -3.895566940307617
    3. '<' → logprob: -10.895566940307617
    4. ')<=' → logprob: -13.020566940307617
    5. ']<=' → logprob: -13.020566940307617
    6. '=' → logprob: -14.770566940307617
    7. ' ' → logprob: -14.895566940307617
    8. '```' → logprob: -15.020566940307617
    9. '≤' → logprob: -15.520566940307617
    10. ' ' → logprob: -15.645566940307617

Token 255: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019288709154352546
    2. ' x' → logprob: -6.251928806304932
    3. '	x' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.876928329467773
    5. '```' → logprob: -18.126928329467773
    6. '   ' → logprob: -18.126928329467773
    7. '<x' → logprob: -19.126928329467773
    8. '  ' → logprob: -19.251928329467773
    9. ')x' → logprob: -19.751928329467773
    10. ' ' → logprob: -19.876928329467773

Token 256: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22588853538036346
    2. ':' → logprob: -1.6008884906768799
    3. '           ' → logprob: -8.6008882522583
    4. '       ' → logprob: -8.8508882522583
    5. ' :
' → logprob: -9.1008882522583
    6. ':
' → logprob: -10.9758882522583
    7. ' :' → logprob: -11.9758882522583
    8. '):
' → logprob: -12.1008882522583
    9. '   ' → logprob: -13.4758882522583
    10. '():
' → logprob: -13.4758882522583

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011567858047783375
    2. '       ' → logprob: -5.011568069458008
    3. ' i' → logprob: -5.886568069458008
    4. 'i' → logprob: -7.261568069458008
    5. '
' → logprob: -7.761568069458008
    6. ':
' → logprob: -8.636568069458008
    7. '        
' → logprob: -8.886568069458008
    8. ',' → logprob: -9.011568069458008
    9. '            
' → logprob: -9.386568069458008
    10. '[i' → logprob: -9.511568069458008

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1409728080034256
    2. ' i' → logprob: -2.890972852706909
    3. '               ' → logprob: -3.265972852706909
    4. '           ' → logprob: -3.390972852706909
    5. '   ' → logprob: -6.14097261428833
    6. '       ' → logprob: -6.39097261428833
    7. '	i' → logprob: -9.015973091125488
    8. '```' → logprob: -9.390973091125488
    9. ' ' → logprob: -10.640973091125488
    10. '(i' → logprob: -11.515973091125488

Token 259: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018213391304016113
    2. '+=' → logprob: -4.018213272094727
    3. ' =' → logprob: -9.768213272094727
    4. '=' → logprob: -12.393213272094727
    5. '+' → logprob: -13.518213272094727
    6. ' +' → logprob: -15.018213272094727
    7. ' ' → logprob: -15.893213272094727
    8. ']+=' → logprob: -16.018213272094727
    9. '1' → logprob: -16.268213272094727
    10. '    ' → logprob: -17.643213272094727

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -17.876325607299805
    4. '
' → logprob: -19.501325607299805
    5. '```' → logprob: -19.876325607299805
    6. '１' → logprob: -20.626325607299805
    7. '  ' → logprob: -20.876325607299805
    8. 'i' → logprob: -21.501325607299805
    9. '<|end|>' → logprob: -21.751325607299805
    10. ' ' → logprob: -21.751325607299805

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '１' → logprob: -20.375001907348633
    5. '
' → logprob: -20.500001907348633
    6. '```' → logprob: -20.875001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '0' → logprob: -22.000001907348633
    9. '۱' → logprob: -22.562501907348633
    10. '<|end|>' → logprob: -22.687501907348633

Token 262: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15118171274662018
    2. '
' → logprob: -2.026181697845459
    3. '   ' → logprob: -6.026181697845459
    4. '       ' → logprob: -6.401181697845459
    5. '<|end|>' → logprob: -6.651181697845459
    6. '            
' → logprob: -6.901181697845459
    7. '    
' → logprob: -8.276182174682617
    8. 'swap' → logprob: -8.276182174682617
    9. '.swap' → logprob: -8.276182174682617
    10. '  
' → logprob: -8.401182174682617

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07799958437681198
    2. ' swap' → logprob: -3.4529995918273926
    3. 'swap' → logprob: -3.7029995918273926
    4. '   ' → logprob: -4.952999591827393
    5. '       ' → logprob: -5.077999591827393
    6. '	swap' → logprob: -6.077999591827393
    7. '.swap' → logprob: -6.327999591827393
    8. '
' → logprob: -7.452999591827393
    9. '            
' → logprob: -8.702999114990234
    10. '<|end|>' → logprob: -8.952999114990234

Token 264: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.005253918468952179
    2. ' swap' → logprob: -5.255253791809082
    3. 'A' → logprob: -11.630253791809082
    4. '           ' → logprob: -11.755253791809082
    5. '	swap' → logprob: -13.255253791809082
    6. '
' → logprob: -14.130253791809082
    7. '.swap' → logprob: -14.880253791809082
    8. ' A' → logprob: -15.630253791809082
    9. '   ' → logprob: -16.3802547454834
    10. '            
' → logprob: -16.7552547454834

Token 265: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -10.375031471252441
    3. '(
' → logprob: -16.625030517578125
    4. ' (' → logprob: -21.250030517578125
    5. '(AST' → logprob: -21.250030517578125
    6. '(I' → logprob: -21.500030517578125
    7. '```' → logprob: -21.625030517578125
    8. 'A' → logprob: -21.750030517578125
    9. '(

' → logprob: -22.000030517578125
    10. '(AP' → logprob: -22.000030517578125

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004255508247297257
    2. ',A' → logprob: -7.875425338745117
    3. '(A' → logprob: -10.500425338745117
    4. ' ,' → logprob: -11.000425338745117
    5. 'A' → logprob: -14.500425338745117
    6. ',j' → logprob: -15.375425338745117
    7. ')' → logprob: -15.625425338745117
    8. ',i' → logprob: -16.125425338745117
    9. '   ' → logprob: -16.875425338745117
    10. ' A' → logprob: -17.125425338745117

Token 267: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2185727059841156
    2. 'i' → logprob: -1.718572735786438
    3. ' A' → logprob: -4.218572616577148
    4. ' i' → logprob: -6.093572616577148
    5. 'j' → logprob: -10.843572616577148
    6. ' ' → logprob: -11.843572616577148
    7. ')' → logprob: -12.968572616577148
    8. '   ' → logprob: -13.593572616577148
    9. 'I' → logprob: -13.718572616577148
    10. ')i' → logprob: -14.218572616577148

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008940361440181732
    2. ',j' → logprob: -4.75894021987915
    3. ' ,' → logprob: -8.133940696716309
    4. 'j' → logprob: -10.633940696716309
    5. ' j' → logprob: -11.758940696716309
    6. '   ' → logprob: -15.383940696716309
    7. '	j' → logprob: -16.008939743041992
    8. '```' → logprob: -17.008939743041992
    9. ' ' → logprob: -17.258939743041992
    10. ',
' → logprob: -17.633939743041992

Token 269: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002967320033349097
    2. ' j' → logprob: -8.125296592712402
    3. '	j' → logprob: -14.375296592712402
    4. '   ' → logprob: -16.00029754638672
    5. '[j' → logprob: -17.87529754638672
    6. '$j' → logprob: -18.12529754638672
    7. ' ' → logprob: -19.75029754638672
    8. ',j' → logprob: -19.75029754638672
    9. '_j' → logprob: -20.12529754638672
    10. '```' → logprob: -20.25029754638672

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005536287208087742
    2. ')
' → logprob: -7.500553607940674
    3. ' )' → logprob: -14.750554084777832
    4. ')

' → logprob: -16.375553131103516
    5. ')
' → logprob: -16.625553131103516
    6. '   ' → logprob: -16.875553131103516
    7. '<|end|>' → logprob: -18.500553131103516
    8. ')return' → logprob: -18.750553131103516
    9. ')#' → logprob: -19.375553131103516
    10. '),' → logprob: -19.500553131103516

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03524971380829811
    2. 'swap' → logprob: -3.535249710083008
    3. ' swap' → logprob: -5.285249710083008
    4. '	swap' → logprob: -8.410249710083008
    5. '
' → logprob: -9.285249710083008
    6. '.swap' → logprob: -9.910249710083008
    7. '```' → logprob: -11.285249710083008
    8. '    
' → logprob: -11.535249710083008
    9. '  ' → logprob: -12.035249710083008
    10. ' ' → logprob: -12.285249710083008

Token 272: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.0005076381494291127
    2. ' swap' → logprob: -8.000507354736328
    3. '   ' → logprob: -8.750507354736328
    4. '
' → logprob: -12.250507354736328
    5. '	swap' → logprob: -12.625507354736328
    6. '.swap' → logprob: -13.250507354736328
    7. '```' → logprob: -13.375507354736328
    8. '    
' → logprob: -14.000507354736328
    9. '       ' → logprob: -15.125507354736328
    10. '           ' → logprob: -15.500507354736328

Token 273: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. ' (' → logprob: -19.375001907348633
    4. '```' → logprob: -19.625001907348633
    5. '(
' → logprob: -20.000001907348633
    6. 'A' → logprob: -20.875001907348633
    7. '(AP' → logprob: -21.250001907348633
    8. '((' → logprob: -22.375001907348633
    9. '(E' → logprob: -22.875001907348633
    10. '(AST' → logprob: -22.875001907348633

Token 274: ',' (ID: 11)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.03403499349951744
    2. ',' → logprob: -3.4090349674224854
    3. ',A' → logprob: -8.034034729003906
    4. ')' → logprob: -10.284034729003906
    5. '(' → logprob: -10.909034729003906
    6. 'A' → logprob: -11.784034729003906
    7. ' ,' → logprob: -13.534034729003906
    8. ')(' → logprob: -13.659034729003906
    9. ' (' → logprob: -14.409034729003906
    10. '),' → logprob: -14.659034729003906

Token 275: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0021860685665160418
    2. ' A' → logprob: -6.127186298370361
    3. '	A' → logprob: -14.752185821533203
    4. ' ' → logprob: -15.502185821533203
    5. '(A' → logprob: -15.877185821533203
    6. '   ' → logprob: -15.877185821533203
    7. ')' → logprob: -16.877185821533203
    8. '  ' → logprob: -17.502185821533203
    9. '<|end|>' → logprob: -18.627185821533203
    10. 'I' → logprob: -19.002185821533203

Token 276: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058825756423175335
    2. '+' → logprob: -5.255882740020752
    3. ' ,' → logprob: -7.755882740020752
    4. ',r' → logprob: -9.130882263183594
    5. ' +' → logprob: -9.755882263183594
    6. '+,' → logprob: -10.755882263183594
    7. ',j' → logprob: -11.380882263183594
    8. ' ' → logprob: -12.130882263183594
    9. '   ' → logprob: -12.505882263183594
    10. ',i' → logprob: -12.630882263183594

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. 'r' → logprob: -14.250110626220703
    4. ',' → logprob: -14.375110626220703
    5. '   ' → logprob: -16.375110626220703
    6. '```' → logprob: -16.625110626220703
    7. '  ' → logprob: -18.000110626220703
    8. '<|end|>' → logprob: -18.250110626220703
    9. ' ,' → logprob: -18.750110626220703
    10. '
' → logprob: -19.125110626220703

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -17.75
    4. '<|end|>' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '

' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '１' → logprob: -19.9375
    9. '0' → logprob: -20.375
    10. '۱' → logprob: -20.375

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002728985855355859
    2. ',A' → logprob: -8.750272750854492
    3. ' ,' → logprob: -9.125272750854492
    4. '(A' → logprob: -12.625272750854492
    5. 'A' → logprob: -13.500272750854492
    6. ')' → logprob: -14.875272750854492
    7. ',
' → logprob: -16.375272750854492
    8. '<|end|>' → logprob: -16.500272750854492
    9. '(' → logprob: -16.750272750854492
    10. '```' → logprob: -16.875272750854492

Token 280: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010329303331673145
    2. ' r' → logprob: -6.876032829284668
    3. '	r' → logprob: -16.376033782958984
    4. '   ' → logprob: -16.626033782958984
    5. ' ' → logprob: -17.876033782958984
    6. ')' → logprob: -18.251033782958984
    7. '_r' → logprob: -18.251033782958984
    8. '
' → logprob: -18.376033782958984
    9. '[r' → logprob: -18.626033782958984
    10. '  ' → logprob: -19.376033782958984

Token 281: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16026932001113892
    2. ')' → logprob: -1.9102692604064941
    3. ')
' → logprob: -10.035269737243652
    4. ')

' → logprob: -14.535269737243652
    5. ' )
' → logprob: -14.535269737243652
    6. ')return' → logprob: -15.660269737243652
    7. '   ' → logprob: -16.410268783569336
    8. ' )' → logprob: -17.160268783569336
    9. ')`
' → logprob: -18.660268783569336
    10. '),' → logprob: -19.285268783569336

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008615575497969985
    2. 'return' → logprob: -7.125861644744873
    3. ' return' → logprob: -9.875861167907715
    4. '    
' → logprob: -13.000861167907715
    5. '
' → logprob: -13.250861167907715
    6. '	return' → logprob: -14.000861167907715
    7. ':return' → logprob: -14.875861167907715
    8. '```' → logprob: -15.250861167907715
    9. '<|end|>' → logprob: -16.00086212158203
    10. '       ' → logprob: -16.25086212158203

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007318547577597201
    2. '   ' → logprob: -7.250731945037842
    3. ' return' → logprob: -10.750731468200684
    4. '	return' → logprob: -15.500731468200684
    5. '
' → logprob: -16.375732421875
    6. '    
' → logprob: -16.875732421875
    7. ':return' → logprob: -18.250732421875
    8. '{return' → logprob: -18.375732421875
    9. '```' → logprob: -18.375732421875
    10. 'Return' → logprob: -18.875732421875

Token 284: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759406089782715
    2. ' i' → logprob: -0.8259406089782715
    3. ' ' → logprob: -14.57594108581543
    4. '   ' → logprob: -15.20094108581543
    5. '	i' → logprob: -15.32594108581543
    6. '(i' → logprob: -15.70094108581543
    7. '  ' → logprob: -17.57594108581543
    8. ' ' → logprob: -18.32594108581543
    9. ' (' → logprob: -18.32594108581543
    10. '
' → logprob: -18.45094108581543

Token 285: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687387108802795
    2. ' +' → logprob: -1.1368738412857056
    3. '+i' → logprob: -13.386874198913574
    4. '1' → logprob: -14.261874198913574
    5. ' ' → logprob: -15.261874198913574
    6. '   ' → logprob: -15.886874198913574
    7. '＋' → logprob: -16.011873245239258
    8. ' plus' → logprob: -16.261873245239258
    9. '()+' → logprob: -18.136873245239258
    10. '  ' → logprob: -18.386873245239258

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -15.500015258789062
    4. '```' → logprob: -17.000015258789062
    5. 'def' → logprob: -19.000015258789062
    6. '   ' → logprob: -19.000015258789062
    7. '[' → logprob: -19.250015258789062
    8. '  ' → logprob: -19.625015258789062
    9. '
' → logprob: -20.000015258789062
    10. '`' → logprob: -20.875015258789062

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -16.0
    4. '```' → logprob: -16.375
    5. 'def' → logprob: -18.875
    6. '[' → logprob: -19.875
    7. '   ' → logprob: -20.375
    8. '
' → logprob: -20.5
    9. '`' → logprob: -20.75
    10. '0' → logprob: -21.25

Token 288: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31480011343955994
    2. '<|end|>' → logprob: -1.3148001432418823
    3. '
' → logprob: -6.689800262451172
    4. '```' → logprob: -9.314800262451172
    5. '  
' → logprob: -9.439800262451172
    6. '    
' → logprob: -10.064800262451172
    7. '<|end|>' → logprob: -10.314800262451172
    8. '

' → logprob: -10.939800262451172
    9. ' 
' → logprob: -11.939800262451172
    10. ' def' → logprob: -12.064800262451172

Token 289: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. '<|end|>' → logprob: -13.500001907348633
    3. ' def' → logprob: -15.625001907348633
    4. '
' → logprob: -15.875001907348633
    5. '    
' → logprob: -16.125001907348633
    6. '  
' → logprob: -16.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. 'de' → logprob: -17.250001907348633
    9. '#' → logprob: -18.625001907348633
    10. '\' → logprob: -18.750001907348633

Token 290: ' quick' (ID: 4853)
  Prédit: ' quick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.16475582122802734
    2. 'quick' → logprob: -1.9147558212280273
    3. 'qu' → logprob: -5.414755821228027
    4. 'q' → logprob: -10.039755821228027
    5. '_qu' → logprob: -11.789755821228027
    6. 'Quick' → logprob: -12.289755821228027
    7. ' randomized' → logprob: -12.289755821228027
    8. '
' → logprob: -12.539755821228027
    9. '.quick' → logprob: -13.164755821228027
    10. ' q' → logprob: -13.414755821228027

Token 291: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.16025947034358978
    2. 'sort' → logprob: -1.910259485244751
    3. '_qu' → logprob: -10.410259246826172
    4. 'def' → logprob: -13.785259246826172
    5. 'Sort' → logprob: -13.910259246826172
    6. '_partition' → logprob: -14.660259246826172
    7. '_select' → logprob: -14.785259246826172
    8. 'quick' → logprob: -15.160259246826172
    9. ' sort' → logprob: -15.160259246826172
    10. 'a' → logprob: -15.285259246826172

Token 292: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.62501335144043
    4. ' (' → logprob: -18.00001335144043
    5. 'def' → logprob: -18.75001335144043
    6. '(a' → logprob: -20.12501335144043
    7. 'A' → logprob: -20.50001335144043
    8. '   ' → logprob: -20.62501335144043
    9. '```' → logprob: -20.62501335144043
    10. '\(' → logprob: -21.12501335144043

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.750004768371582
    3. ',A' → logprob: -13.250004768371582
    4. '   ' → logprob: -17.750003814697266
    5. 'A' → logprob: -18.500003814697266
    6. ',
' → logprob: -19.500003814697266
    7. ',a' → logprob: -20.250003814697266
    8. ',p' → logprob: -20.375003814697266
    9. '，' → logprob: -20.625003814697266
    10. ' ' → logprob: -21.000003814697266

Token 294: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4363236427307129
    2. '0' → logprob: -1.186323642730713
    3. ' p' → logprob: -3.186323642730713
    4. ' ' → logprob: -5.186323642730713
    5. 'left' → logprob: -6.936323642730713
    6. ' left' → logprob: -8.686323165893555
    7. 'A' → logprob: -8.936323165893555
    8. ' A' → logprob: -10.311323165893555
    9. '   ' → logprob: -11.936323165893555
    10. 'def' → logprob: -12.436323165893555

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2524021157296374e-05
    2. ' ,' → logprob: -10.375052452087402
    3. ',r' → logprob: -10.875052452087402
    4. ',p' → logprob: -13.625052452087402
    5. ',int' → logprob: -15.250052452087402
    6. ',
' → logprob: -15.250052452087402
    7. '   ' → logprob: -15.500052452087402
    8. ',n' → logprob: -16.12505340576172
    9. '<|end|>' → logprob: -16.50005340576172
    10. '‌,' → logprob: -16.62505340576172

Token 296: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019294669618830085
    2. ' r' → logprob: -6.25192928314209
    3. 'q' → logprob: -14.00192928314209
    4. ' ' → logprob: -17.626930236816406
    5. '   ' → logprob: -17.751930236816406
    6. '	r' → logprob: -17.876930236816406
    7. 'def' → logprob: -18.501930236816406
    8. ')' → logprob: -18.501930236816406
    9. 'p' → logprob: -19.126930236816406
    10. ',' → logprob: -19.251930236816406

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.23917081207037e-05
    2. '):
' → logprob: -10.250041961669922
    3. ')' → logprob: -12.125041961669922
    4. ':' → logprob: -13.625041961669922
    5. ' ):' → logprob: -15.250041961669922
    6. '):
' → logprob: -16.625041961669922
    7. '   ' → logprob: -16.875041961669922
    8. '):

' → logprob: -18.500041961669922
    9. '}:' → logprob: -18.625041961669922
    10. '():' → logprob: -19.250041961669922

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009312349371612072
    2. 'if' → logprob: -5.259312152862549
    3. ' if' → logprob: -5.509312152862549
    4. '	if' → logprob: -10.759312629699707
    5. ' ' → logprob: -17.63431167602539
    6. '```' → logprob: -17.75931167602539
    7. '   ' → logprob: -18.25931167602539
    8. 'If' → logprob: -18.25931167602539
    9. '    ' → logprob: -18.63431167602539
    10. '  ' → logprob: -19.25931167602539

Token 299: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013808627612888813
    2. ' if' → logprob: -4.763808727264404
    3. '   ' → logprob: -5.263808727264404
    4. '	if' → logprob: -12.638808250427246
    5. ' ' → logprob: -13.638808250427246
    6. '```' → logprob: -14.763808250427246
    7. 'stack' → logprob: -15.388808250427246
    8. '
' → logprob: -16.888809204101562
    9. '  ' → logprob: -17.388809204101562
    10. '    
' → logprob: -18.888809204101562

Token 300: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10022769868373871
    2. 'p' → logprob: -2.3502275943756104
    3. ' ' → logprob: -11.225227355957031
    4. '   ' → logprob: -12.725227355957031
    5. '	p' → logprob: -13.600227355957031
    6. '<p' → logprob: -13.600227355957031
    7. ' ' → logprob: -13.850227355957031
    8. '  ' → logprob: -14.975227355957031
    9. '
' → logprob: -15.350227355957031
    10. '(p' → logprob: -15.912727355957031

Token 301: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06198740750551224
    2. ' <' → logprob: -2.8119874000549316
    3. '<p' → logprob: -11.43698787689209
    4. ' ' → logprob: -11.93698787689209
    5. '[' → logprob: -13.93698787689209
    6. '<n' → logprob: -15.18698787689209
    7. '＜' → logprob: -15.81198787689209
    8. '<th' → logprob: -15.93698787689209
    9. '+' → logprob: -16.061986923217773
    10. '<int' → logprob: -16.311986923217773

Token 302: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005235887598246336
    2. ' r' → logprob: -5.25523567199707
    3. '	r' → logprob: -14.00523567199707
    4. '=' → logprob: -15.00523567199707
    5. ' ' → logprob: -15.00523567199707
    6. '=r' → logprob: -15.25523567199707
    7. '   ' → logprob: -15.75523567199707
    8. '
' → logprob: -16.13023567199707
    9. '_r' → logprob: -16.63023567199707
    10. '  ' → logprob: -17.75523567199707

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02977861277759075
    2. ':
' → logprob: -3.5297787189483643
    3. '   ' → logprob: -11.029778480529785
    4. ' :' → logprob: -12.029778480529785
    5. ':
' → logprob: -12.904778480529785
    6. ' :
' → logprob: -13.654778480529785
    7. '):' → logprob: -14.279778480529785
    8. '):
' → logprob: -14.654778480529785
    9. ':

' → logprob: -14.904778480529785
    10. '       ' → logprob: -15.029778480529785

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01804223470389843
    2. '   ' → logprob: -4.518042087554932
    3. 'q' → logprob: -5.393042087554932
    4. 'm' → logprob: -7.143042087554932
    5. '    ' → logprob: -7.518042087554932
    6. 'pivot' → logprob: -8.51804256439209
    7. '	q' → logprob: -8.64304256439209
    8. ' q' → logprob: -8.89304256439209
    9. '     ' → logprob: -9.51804256439209
    10. '	m' → logprob: -9.51804256439209

Token 305: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00033951509976759553
    2. ' q' → logprob: -8.00033950805664
    3. '	q' → logprob: -12.62533950805664
    4. ' ' → logprob: -15.12533950805664
    5. 'pi' → logprob: -15.12533950805664
    6. '
' → logprob: -16.12533950805664
    7. '   ' → logprob: -16.25033950805664
    8. 'v' → logprob: -18.12533950805664
    9. '(q' → logprob: -18.25033950805664
    10. '

' → logprob: -18.75033950805664

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858827963471413
    2. '=' → logprob: -3.048588275909424
    3. ',' → logprob: -14.048588752746582
    4. '=q' → logprob: -17.298587799072266
    5. ' =
' → logprob: -17.423587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '=get' → logprob: -18.048587799072266
    8. '=create' → logprob: -18.048587799072266
    9. '＝' → logprob: -18.298587799072266
    10. '=int' → logprob: -18.298587799072266

Token 307: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.01416350994259119
    2. ' partition' → logprob: -4.264163494110107
    3. '.partition' → logprob: -17.514163970947266
    4. '   ' → logprob: -17.889163970947266
    5. '_partition' → logprob: -19.264163970947266
    6. ' ' → logprob: -19.389163970947266
    7. 'part' → logprob: -19.514163970947266
    8. '(part' → logprob: -20.389163970947266
    9. '  ' → logprob: -22.514163970947266
    10. '
' → logprob: -22.514163970947266

Token 308: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -16.500001907348633
    4. '<|end|>' → logprob: -18.625001907348633
    5. 'A' → logprob: -19.750001907348633
    6. '(AST' → logprob: -20.125001907348633
    7. '```' → logprob: -20.500001907348633
    8. ' (' → logprob: -21.000001907348633
    9. '(B' → logprob: -21.125001907348633
    10. '(AP' → logprob: -21.500001907348633

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.069664333248511e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ',A' → logprob: -12.625020980834961
    4. 'A' → logprob: -15.125020980834961
    5. ')' → logprob: -15.500020980834961
    6. ',
' → logprob: -16.87502098083496
    7. ' A' → logprob: -17.00002098083496
    8. '<|end|>' → logprob: -17.50002098083496
    9. ' ' → logprob: -18.75002098083496
    10. '```' → logprob: -18.75002098083496

Token 310: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0248726774007082
    2. ' p' → logprob: -3.7748727798461914
    3. 'A' → logprob: -6.524872779846191
    4. ' A' → logprob: -8.774872779846191
    5. 'q' → logprob: -13.274872779846191
    6. '   ' → logprob: -14.274872779846191
    7. ' ' → logprob: -14.524872779846191
    8. ')' → logprob: -14.649872779846191
    9. 'r' → logprob: -14.899872779846191
    10. '<p' → logprob: -14.899872779846191

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008650107774883509
    2. ',q' → logprob: -7.3758649826049805
    3. ',r' → logprob: -8.75086498260498
    4. ' ,' → logprob: -9.50086498260498
    5. 'q' → logprob: -13.12586498260498
    6. ',
' → logprob: -13.62586498260498
    7. 'r' → logprob: -14.25086498260498
    8. '   ' → logprob: -14.50086498260498
    9. ' q' → logprob: -15.50086498260498
    10. ')' → logprob: -15.62586498260498

Token 312: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0052342405542731285
    2. ' r' → logprob: -5.255234241485596
    3. '
' → logprob: -16.130233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '   ' → logprob: -16.505233764648438
    6. ')' → logprob: -17.255233764648438
    7. '    ' → logprob: -17.255233764648438
    8. '	r' → logprob: -17.505233764648438
    9. '<|end|>' → logprob: -18.005233764648438
    10. '       ' → logprob: -18.505233764648438

Token 313: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.576097846031189
    2. ')' → logprob: -0.826097846031189
    3. ')
' → logprob: -9.07609748840332
    4. '       ' → logprob: -10.07609748840332
    5. ');' → logprob: -14.95109748840332
    6. ' )
' → logprob: -15.07609748840332
    7. '   ' → logprob: -15.20109748840332
    8. ')

' → logprob: -15.32609748840332
    9. ' )' → logprob: -15.70109748840332
    10. ');
' → logprob: -16.07609748840332

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007775086909532547
    2. 'quick' → logprob: -5.63277530670166
    3. '	' → logprob: -6.38277530670166
    4. '   ' → logprob: -6.75777530670166
    5. ' quick' → logprob: -6.75777530670166
    6. '
' → logprob: -9.50777530670166
    7. '        
' → logprob: -10.13277530670166
    8. '	   ' → logprob: -11.25777530670166
    9. '.quick' → logprob: -12.88277530670166
    10. ' ' → logprob: -12.88277530670166

Token 315: ' quick' (ID: 4853)
  Prédit: 'quick'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quick' (adapté à ' quick') → logprob: -0.14109954237937927
    2. ' quick' → logprob: -2.141099452972412
    3. '       ' → logprob: -4.266099452972412
    4. '   ' → logprob: -10.51609992980957
    5. '.quick' → logprob: -12.76609992980957
    6. ' ' → logprob: -13.51609992980957
    7. '	' → logprob: -13.64109992980957
    8. 'qu' → logprob: -13.76609992980957
    9. '      ' → logprob: -14.64109992980957
    10. '     ' → logprob: -14.76609992980957

Token 316: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.125004768371582
    3. '_split' → logprob: -14.750004768371582
    4. 'sort' → logprob: -14.750004768371582
    5. '_qu' → logprob: -14.875004768371582
    6. '_sorted' → logprob: -14.875004768371582
    7. ' _' → logprob: -15.000004768371582
    8. '_s' → logprob: -15.375004768371582
    9. '_SORT' → logprob: -16.125003814697266
    10. '_set' → logprob: -16.500003814697266

Token 317: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'A' → logprob: -17.750003814697266
    4. '```' → logprob: -19.625003814697266
    5. '(
' → logprob: -19.750003814697266
    6. '(AST' → logprob: -19.875003814697266
    7. '(Q' → logprob: -20.375003814697266
    8. '<|end|>' → logprob: -20.750003814697266
    9. ')' → logprob: -21.375003814697266
    10. '(AP' → logprob: -21.375003814697266

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026992104947566986
    2. '(A' → logprob: -3.651992082595825
    3. ',A' → logprob: -7.651992321014404
    4. ' ,' → logprob: -9.401991844177246
    5. '(' → logprob: -9.651991844177246
    6. 'A' → logprob: -9.776991844177246
    7. ')' → logprob: -12.026991844177246
    8. ' A' → logprob: -12.526991844177246
    9. ' (' → logprob: -13.651991844177246
    10. '   ' → logprob: -13.901991844177246

Token 319: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001867326645879075
    2. ' p' → logprob: -8.625186920166016
    3. 'A' → logprob: -11.875186920166016
    4. 'q' → logprob: -16.000186920166016
    5. '   ' → logprob: -16.625186920166016
    6. ' A' → logprob: -17.625186920166016
    7. '	p' → logprob: -18.625186920166016
    8. ' ' → logprob: -18.625186920166016
    9. '<p' → logprob: -19.250186920166016
    10. ')' → logprob: -19.375186920166016

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011155696120113134
    2. ',q' → logprob: -7.001115798950195
    3. ' ,' → logprob: -8.501115798950195
    4. 'q' → logprob: -14.626115798950195
    5. ' q' → logprob: -15.626115798950195
    6. ',
' → logprob: -16.501115798950195
    7. ')' → logprob: -17.126115798950195
    8. '   ' → logprob: -17.501115798950195
    9. '(q' → logprob: -17.876115798950195
    10. '[q' → logprob: -18.001115798950195

Token 321: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03804263845086098
    2. ' q' → logprob: -3.2880425453186035
    3. '	q' → logprob: -13.913043022155762
    4. '   ' → logprob: -15.163043022155762
    5. ' ' → logprob: -16.913042068481445
    6. '    ' → logprob: -17.538042068481445
    7. '  ' → logprob: -18.538042068481445
    8. '[q' → logprob: -18.663042068481445
    9. ')' → logprob: -19.038042068481445
    10. '(q' → logprob: -19.288042068481445

Token 322: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01955327019095421
    2. '-' → logprob: -4.019553184509277
    3. ' -' → logprob: -6.894553184509277
    4. ')
' → logprob: -7.894553184509277
    5. '-)' → logprob: -12.394553184509277
    6. '<|end|>' → logprob: -12.769553184509277
    7. ')

' → logprob: -13.019553184509277
    8. ' )' → logprob: -13.144553184509277
    9. '1' → logprob: -13.144553184509277
    10. '),' → logprob: -13.894553184509277

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '```' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -20.625001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '0' → logprob: -21.625001907348633
    8. '    ' → logprob: -21.750001907348633
    9. '
' → logprob: -21.875001907348633
    10. '۱' → logprob: -22.000001907348633

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -17.125001907348633
    4. '```' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.750001907348633
    6. ')' → logprob: -19.625001907348633
    7. '0' → logprob: -20.125001907348633
    8. '
' → logprob: -20.187501907348633
    9. '  ' → logprob: -20.500001907348633
    10. '۱' → logprob: -20.562501907348633

Token 325: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018649568781256676
    2. ')' → logprob: -4.018649578094482
    3. '       ' → logprob: -7.643649578094482
    4. ')
' → logprob: -11.393649101257324
    5. '   ' → logprob: -11.643649101257324
    6. ' )
' → logprob: -15.518649101257324
    7. ')

' → logprob: -15.643649101257324
    8. '	' → logprob: -17.14365005493164
    9. '
' → logprob: -17.51865005493164
    10. ' ' → logprob: -18.14365005493164

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.778209353797138e-05
    2. '	' → logprob: -9.875067710876465
    3. '   ' → logprob: -11.375067710876465
    4. '
' → logprob: -12.750067710876465
    5. '	   ' → logprob: -13.875067710876465
    6. '```' → logprob: -15.000067710876465
    7. 'quick' → logprob: -15.375067710876465
    8. '	q' → logprob: -16.37506866455078
    9. '<|end|>' → logprob: -16.50006866455078
    10. ' quick' → logprob: -16.62506866455078

Token 327: ' quick' (ID: 4853)
  Prédit: 'quick'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quick' (adapté à ' quick') → logprob: -0.05098710581660271
    2. ' quick' → logprob: -3.0509870052337646
    3. '       ' → logprob: -6.050987243652344
    4. 'qu' → logprob: -10.300987243652344
    5. '   ' → logprob: -12.300987243652344
    6. '.quick' → logprob: -13.300987243652344
    7. ' ' → logprob: -14.300987243652344
    8. '      ' → logprob: -15.425987243652344
    9. '     ' → logprob: -15.675987243652344
    10. 'q' → logprob: -16.175987243652344

Token 328: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.5048530030981055e-06
    2. 'sort' → logprob: -14.000001907348633
    3. '_' → logprob: -15.750001907348633
    4. '_qu' → logprob: -16.000001907348633
    5. '_s' → logprob: -16.500001907348633
    6. '_sorted' → logprob: -16.625001907348633
    7. '```' → logprob: -16.875001907348633
    8. ' _' → logprob: -17.000001907348633
    9. '_set' → logprob: -17.500001907348633
    10. '_SORT' → logprob: -17.875001907348633

Token 329: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. '(
' → logprob: -17.75
    4. 'A' → logprob: -17.875
    5. '<|end|>' → logprob: -19.25
    6. '(AST' → logprob: -19.625
    7. '```' → logprob: -20.5
    8. '(I' → logprob: -21.125
    9. ' (' → logprob: -21.5
    10. '[A' → logprob: -21.625

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004744110628962517
    2. '(A' → logprob: -5.379744052886963
    3. 'A' → logprob: -9.504744529724121
    4. ',A' → logprob: -10.129744529724121
    5. ' ,' → logprob: -12.254744529724121
    6. '(' → logprob: -13.254744529724121
    7. ')' → logprob: -13.254744529724121
    8. ' A' → logprob: -15.254744529724121
    9. '   ' → logprob: -15.504744529724121
    10. '[A' → logprob: -15.629744529724121

Token 331: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08737671375274658
    2. ' q' → logprob: -2.587376594543457
    3. 'A' → logprob: -4.837376594543457
    4. ' A' → logprob: -7.587376594543457
    5. '   ' → logprob: -11.837376594543457
    6. ' ' → logprob: -12.712376594543457
    7. '(q' → logprob: -12.962376594543457
    8. '	q' → logprob: -13.212376594543457
    9. '    ' → logprob: -15.087376594543457
    10. 'Q' → logprob: -15.337376594543457

Token 332: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687217235565186
    2. '+' → logprob: -1.1368721723556519
    3. ',' → logprob: -14.011872291564941
    4. '1' → logprob: -15.511872291564941
    5. '＋' → logprob: -16.761871337890625
    6. '+,' → logprob: -17.386871337890625
    7. ' plus' → logprob: -17.386871337890625
    8. ' ' → logprob: -18.136871337890625
    9. '```' → logprob: -18.636871337890625
    10. '+
' → logprob: -19.261871337890625

Token 333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020652047533076257
    2. ' ' → logprob: -8.50020694732666
    3. ',' → logprob: -13.37520694732666
    4. '   ' → logprob: -14.75020694732666
    5. '```' → logprob: -14.87520694732666
    6. 'r' → logprob: -16.000205993652344
    7. ')' → logprob: -16.250205993652344
    8. '  ' → logprob: -16.250205993652344
    9. '
' → logprob: -17.062705993652344
    10. '2' → logprob: -17.437705993652344

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'r' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. ',' → logprob: -17.062501907348633
    7. '+' → logprob: -18.187501907348633
    8. '2' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.562501907348633
    10. '(' → logprob: -18.812501907348633

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.337155355140567e-05
    2. ',r' → logprob: -10.125062942504883
    3. ' ,' → logprob: -11.000062942504883
    4. 'r' → logprob: -12.000062942504883
    5. ')' → logprob: -16.250062942504883
    6. '(r' → logprob: -16.625062942504883
    7. ' r' → logprob: -16.875062942504883
    8. '```' → logprob: -17.000062942504883
    9. 'A' → logprob: -17.500062942504883
    10. ',
' → logprob: -18.125062942504883

Token 336: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020545274019241333
    2. ' r' → logprob: -3.895545244216919
    3. '   ' → logprob: -13.27054500579834
    4. ' ' → logprob: -14.27054500579834
    5. '	r' → logprob: -14.39554500579834
    6. ')' → logprob: -16.395545959472656
    7. '    ' → logprob: -16.395545959472656
    8. '  ' → logprob: -16.770545959472656
    9. '       ' → logprob: -16.770545959472656
    10. '_r' → logprob: -16.895545959472656

Token 337: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.584861744660884e-05
    2. ')
' → logprob: -10.000045776367188
    3. ' )' → logprob: -16.250045776367188
    4. '<|end|>' → logprob: -16.375045776367188
    5. ')

' → logprob: -16.500045776367188
    6. '),' → logprob: -18.875045776367188
    7. ')#' → logprob: -19.000045776367188
    8. '   ' → logprob: -19.500045776367188
    9. ')}' → logprob: -20.000045776367188
    10. ')
' → logprob: -20.000045776367188

Token 338: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06992197781801224
    2. 'if' → logprob: -2.8199219703674316
    3. 'def' → logprob: -5.069921970367432
    4. 'N' → logprob: -6.694921970367432
    5. '#' → logprob: -8.94492244720459
    6. 'data' → logprob: -9.69492244720459
    7. ' if' → logprob: -9.81992244720459
    8. 'import' → logprob: -10.31992244720459
    9. ' n' → logprob: -10.56992244720459
    10. 'num' → logprob: -11.06992244720459

Token 339: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004731652792543173
    2. ' main' → logprob: -5.37973165512085
    3. 'stable' → logprob: -10.129731178283691
    4. 'is' → logprob: -10.254731178283691
    5. 'def' → logprob: -10.504731178283691
    6. 'input' → logprob: -12.629731178283691
    7. 'check' → logprob: -13.129731178283691
    8. 'print' → logprob: -14.254731178283691
    9. 'solve' → logprob: -14.629731178283691
    10. 'in' → logprob: -14.879731178283691

Token 340: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3795937522663735e-05
    2. ' ():' → logprob: -11.25002384185791
    3. '():
' → logprob: -11.50002384185791
    4. '()' → logprob: -14.37502384185791
    5. '():
' → logprob: -17.625022888183594
    6. '(' → logprob: -17.750022888183594
    7. '(A' → logprob: -19.625022888183594
    8. '():

' → logprob: -20.125022888183594
    9. '().' → logprob: -21.000022888183594
    10. ' ()' → logprob: -21.625022888183594

Token 341: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.254190057516098
    2. ' n' → logprob: -2.004189968109131
    3. '   ' → logprob: -2.879189968109131
    4. 'N' → logprob: -3.504189968109131
    5. ' N' → logprob: -5.879189968109131
    6. '	n' → logprob: -8.129190444946289
    7. 'import' → logprob: -8.379190444946289
    8. ' ' → logprob: -10.629190444946289
    9. '_n' → logprob: -10.754190444946289
    10. '    ' → logprob: -11.629190444946289

Token 342: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0005280109471641481
    2. '   ' → logprob: -7.875527858734131
    3. 'N' → logprob: -9.250528335571289
    4. ' n' → logprob: -10.500528335571289
    5. 'num' → logprob: -11.625528335571289
    6. '    
' → logprob: -11.875528335571289
    7. 'v' → logprob: -13.000528335571289
    8. '	n' → logprob: -13.625528335571289
    9. ' ' → logprob: -13.750528335571289
    10. '
' → logprob: -14.125528335571289

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014281384646892548
    2. '=' → logprob: -4.264281272888184
    3. '=int' → logprob: -9.139281272888184
    4. ',' → logprob: -11.639281272888184
    5. ' =
' → logprob: -14.139281272888184
    6. '=input' → logprob: -15.014281272888184
    7. '＝' → logprob: -16.0142822265625
    8. ' ' → logprob: -16.2642822265625
    9. ' ,' → logprob: -16.3892822265625
    10. ' =
' → logprob: -16.6392822265625

Token 344: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. ' int' → logprob: -12.250004768371582
    3. '(int' → logprob: -19.8750057220459
    4. '=int' → logprob: -20.7500057220459
    5. '	int' → logprob: -21.2500057220459
    6. '[int' → logprob: -21.5000057220459
    7. '<int' → logprob: -22.0000057220459
    8. 'len' → logprob: -24.0000057220459
    9. '   ' → logprob: -24.1250057220459
    10. '0' → logprob: -24.1250057220459

Token 345: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.038097262382507324
    2. '(input' → logprob: -3.288097381591797
    3. '(' → logprob: -10.413097381591797
    4. 'stdin' → logprob: -11.413097381591797
    5. '()' → logprob: -11.663097381591797
    6. 'input' → logprob: -12.163097381591797
    7. '(st' → logprob: -14.913097381591797
    8. '.stdin' → logprob: -15.538097381591797
    9. '(std' → logprob: -16.538097381591797
    10. '(in' → logprob: -16.538097381591797

Token 346: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025173963513225317
    2. '().' → logprob: -6.002517223358154
    3. '())' → logprob: -11.002517700195312
    4. '()' → logprob: -11.377517700195312
    5. '.' → logprob: -11.502517700195312
    6. '.read' → logprob: -13.002517700195312
    7. ' readline' → logprob: -13.752517700195312
    8. 'read' → logprob: -16.252517700195312
    9. ')' → logprob: -16.752517700195312
    10. '()
' → logprob: -17.877517700195312

Token 347: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014245893806219101
    2. '().' → logprob: -4.264245986938477
    3. '()' → logprob: -9.514245986938477
    4. '())
' → logprob: -12.014245986938477
    5. ' ())' → logprob: -13.264245986938477
    6. '(' → logprob: -14.889245986938477
    7. ')' → logprob: -15.639245986938477
    8. '())

' → logprob: -16.264245986938477
    9. '();)' → logprob: -16.639245986938477
    10. '()
' → logprob: -16.889245986938477

Token 348: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.617917001247406
    2. '   ' → logprob: -0.867917001247406
    3. ' A' → logprob: -3.617917060852051
    4. 'cards' → logprob: -4.867917060852051
    5. 'data' → logprob: -6.367917060852051
    6. 'S' → logprob: -6.492917060852051
    7. ' cards' → logprob: -7.367917060852051
    8. 's' → logprob: -7.492917060852051
    9. '    
' → logprob: -7.992917060852051
    10. 'card' → logprob: -8.11791706085205

Token 349: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.054719772189855576
    2. 'S' → logprob: -3.1797196865081787
    3. 'cards' → logprob: -4.679719924926758
    4. 'C' → logprob: -7.429719924926758
    5. 'data' → logprob: -7.554719924926758
    6. 's' → logprob: -8.304719924926758
    7. '    
' → logprob: -8.429719924926758
    8. ' A' → logprob: -8.554719924926758
    9. 'card' → logprob: -8.554719924926758
    10. 'pairs' → logprob: -9.554719924926758

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25223350524902344
    2. '=' → logprob: -1.5022335052490234
    3. '=[]' → logprob: -8.127233505249023
    4. '=[]
' → logprob: -12.252233505249023
    5. '[]' → logprob: -12.752233505249023
    6. ' =[' → logprob: -15.002233505249023
    7. '[' → logprob: -15.627233505249023
    8. '[:]' → logprob: -15.752233505249023
    9. '=[]
' → logprob: -16.002233505249023
    10. ',' → logprob: -16.127233505249023

Token 351: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20910808444023132
    2. '[]' → logprob: -1.7091081142425537
    3. '[input' → logprob: -5.709107875823975
    4. '[list' → logprob: -6.459107875823975
    5. '[str' → logprob: -7.334107875823975
    6. '[n' → logprob: -7.959107875823975
    7. '[]
' → logprob: -8.209108352661133
    8. '[line' → logprob: -8.459108352661133
    9. '[name' → logprob: -8.584108352661133
    10. '[int' → logprob: -8.834108352661133

Token 352: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7260176539421082
    2. '   ' → logprob: -0.9760176539421082
    3. 'for' → logprob: -1.976017713546753
    4. '	for' → logprob: -7.226017475128174
    5. '    
' → logprob: -12.351017951965332
    6. '  ' → logprob: -13.226017951965332
    7. '<|end|>' → logprob: -13.476017951965332
    8. ' ' → logprob: -13.601017951965332
    9. '
' → logprob: -13.976017951965332
    10. '    ' → logprob: -14.101017951965332

Token 353: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002482434967532754
    2. ' for' → logprob: -6.0024824142456055
    3. '   ' → logprob: -12.002482414245605
    4. '	for' → logprob: -15.002482414245605
    5. '
' → logprob: -15.502482414245605
    6. '    
' → logprob: -18.252483367919922
    7. '```' → logprob: -18.502483367919922
    8. 'A' → logprob: -20.377483367919922
    9. ' 
' → logprob: -20.502483367919922
    10. 'while' → logprob: -21.252483367919922

Token 354: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015498562715947628
    2. '_i' → logprob: -6.50154972076416
    3. ' _' → logprob: -10.50154972076416
    4. 'i' → logprob: -11.62654972076416
    5. '_range' → logprob: -11.62654972076416
    6. '_in' → logprob: -13.87654972076416
    7. ' in' → logprob: -14.75154972076416
    8. '_line' → logprob: -15.37654972076416
    9. ' i' → logprob: -15.37654972076416
    10. '_name' → logprob: -16.751550674438477

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061119820922613144
    2. 'in' → logprob: -2.936119794845581
    3. 'ine' → logprob: -5.18612003326416
    4. 'n' → logprob: -7.56112003326416
    5. 'ines' → logprob: -10.31112003326416
    6. ' ' → logprob: -11.06112003326416
    7. '_' → logprob: -11.06112003326416
    8. 'i' → logprob: -11.56112003326416
    9. 's' → logprob: -11.68612003326416
    10. '_in' → logprob: -13.06112003326416

Token 356: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.20186682045459747
    2. 'range' → logprob: -1.701866865158081
    3. ' range' → logprob: -8.20186710357666
    4. ' stdin' → logprob: -8.70186710357666
    5. '(stdin' → logprob: -11.57686710357666
    6. 'stdout' → logprob: -13.07686710357666
    7. '.stdin' → logprob: -14.07686710357666
    8. 'iter' → logprob: -15.20186710357666
    9. 'sys' → logprob: -16.576866149902344
    10. 'map' → logprob: -16.576866149902344

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11308850347995758
    2. '.readline' → logprob: -2.863088607788086
    3. '.readlines' → logprob: -3.738088607788086
    4. ':
' → logprob: -3.738088607788086
    5. 'n' → logprob: -7.488088607788086
    6. ' in' → logprob: -7.613088607788086
    7. 'in' → logprob: -8.113088607788086
    8. '():' → logprob: -8.238088607788086
    9. '   ' → logprob: -8.613088607788086
    10. ' readline' → logprob: -8.613088607788086

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009984027594327927
    2. ' s' → logprob: -5.134984016418457
    3. ' l' → logprob: -6.259984016418457
    4. '   ' → logprob: -7.384984016418457
    5. ' a' → logprob: -7.509984016418457
    6. ' parts' → logprob: -8.259984016418457
    7. ' tokens' → logprob: -9.134984016418457
    8. 'a' → logprob: -9.384984016418457
    9. ' name' → logprob: -9.509984016418457
    10. 's' → logprob: -9.509984016418457

Token 359: ' suit' (ID: 15170)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19173967838287354
    2. 'v' → logprob: -2.191739559173584
    3. '   ' → logprob: -3.566739559173584
    4. 'S' → logprob: -4.816739559173584
    5. 'a' → logprob: -4.816739559173584
    6. 'A' → logprob: -5.191739559173584
    7. 'name' → logprob: -6.066739559173584
    8. ' s' → logprob: -6.191739559173584
    9. '    
' → logprob: -6.441739559173584
    10. 'l' → logprob: -6.691739559173584

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016361083544325083
    2. 's' → logprob: -10.000164031982422
    3. ' ,' → logprob: -10.000164031982422
    4. ',value' → logprob: -10.500164031982422
    5. ',s' → logprob: -10.750164031982422
    6. ',val' → logprob: -12.000164031982422
    7. ',name' → logprob: -12.500164031982422
    8. 'name' → logprob: -13.625164031982422
    9. ',str' → logprob: -13.750164031982422
    10. ',c' → logprob: -14.125164031982422

Token 361: ' num' (ID: 2269)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7104030251502991
    2. 'num' → logprob: -1.0854029655456543
    3. 'v' → logprob: -2.0854029655456543
    4. 'val' → logprob: -3.3354029655456543
    5. 'number' → logprob: -5.085402965545654
    6. 'd' → logprob: -6.335402965545654
    7. 'rank' → logprob: -7.335402965545654
    8. ' value' → logprob: -7.710402965545654
    9. ' num' → logprob: -8.085403442382812
    10. 's' → logprob: -8.460403442382812

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067161982879042625
    2. ' =' → logprob: -5.006716251373291
    3. 's' → logprob: -14.631715774536133
    4. ',' → logprob: -16.006715774536133
    5. 'str' → logprob: -16.256715774536133
    6. '=line' → logprob: -16.256715774536133
    7. '_str' → logprob: -17.006715774536133
    8. '=str' → logprob: -17.381715774536133
    9. '_=' → logprob: -18.131715774536133
    10. '＝' → logprob: -18.256715774536133

Token 363: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008045066497288644
    2. ' l' → logprob: -7.125804424285889
    3. 'map' → logprob: -17.375804901123047
    4. '	l' → logprob: -17.625804901123047
    5. ' ' → logprob: -18.000804901123047
    6. '[l' → logprob: -18.125804901123047
    7. '(l' → logprob: -19.000804901123047
    8. '   ' → logprob: -19.500804901123047
    9. '*l' → logprob: -20.250804901123047
    10. '=l' → logprob: -20.625804901123047

Token 364: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8126972913742065
    2. '.split' → logprob: -1.0626972913742065
    3. '.rstrip' → logprob: -1.5626972913742065
    4. '.' → logprob: -7.187697410583496
    5. 'rstrip' → logprob: -8.062697410583496
    6. 'split' → logprob: -9.312697410583496
    7. '[:-' → logprob: -9.937697410583496
    8. 'strip' → logprob: -11.062697410583496
    9. '.chomp' → logprob: -11.687697410583496
    10. ' .' → logprob: -12.062697410583496

Token 365: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006749124266207218
    2. '()
' → logprob: -5.006749153137207
    3. '(' → logprob: -11.506749153137207
    4. '();' → logprob: -12.006749153137207
    5. '()\' → logprob: -12.256749153137207
    6. '()

' → logprob: -12.631749153137207
    7. '   ' → logprob: -13.256749153137207
    8. '()[' → logprob: -13.256749153137207
    9. '()
' → logprob: -13.506749153137207
    10. '('' → logprob: -13.756749153137207

Token 366: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4395500421524048
    2. '       ' → logprob: -1.0645500421524048
    3. ' A' → logprob: -5.189549922943115
    4. 'A' → logprob: -5.564549922943115
    5. 'num' → logprob: -6.814549922943115
    6. ' num' → logprob: -8.439550399780273
    7. ' ' → logprob: -11.189550399780273
    8. '           ' → logprob: -11.689550399780273
    9. ',' → logprob: -11.814550399780273
    10. '  ' → logprob: -12.064550399780273

Token 367: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.005855439696460962
    2. 'num' → logprob: -5.380855560302734
    3. '   ' → logprob: -7.005855560302734
    4. ' A' → logprob: -8.130855560302734
    5. '       ' → logprob: -11.380855560302734
    6. 'number' → logprob: -11.380855560302734
    7. ' num' → logprob: -12.005855560302734
    8. 'n' → logprob: -12.505855560302734
    9. ' ' → logprob: -15.380855560302734
    10. '  ' → logprob: -15.630855560302734

Token 368: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006759425159543753
    2. '.' → logprob: -5.0067596435546875
    3. '.ap' → logprob: -10.881759643554688
    4. ' .' → logprob: -11.131759643554688
    5. '.app' → logprob: -12.381759643554688
    6. ').' → logprob: -13.006759643554688
    7. '.push' → logprob: -14.131759643554688
    8. '.add' → logprob: -14.631759643554688
    9. '.py' → logprob: -14.631759643554688
    10. '.setdefault' → logprob: -14.631759643554688

Token 369: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1017005518078804
    2. '(s' → logprob: -2.6017005443573
    3. '(' → logprob: -3.8517005443573
    4. ' (' → logprob: -6.851700782775879
    5. '   ' → logprob: -8.351700782775879
    6. '([' → logprob: -11.976700782775879
    7. ' ' → logprob: -12.601700782775879
    8. '  ' → logprob: -12.851700782775879
    9. ' ((' → logprob: -13.851700782775879
    10. '    ' → logprob: -14.726700782775879

Token 370: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002108118060277775
    2. ' suit' → logprob: -8.625210762023926
    3. '   ' → logprob: -11.625210762023926
    4. 'str' → logprob: -12.375210762023926
    5. '(s' → logprob: -12.375210762023926
    6. 'su' → logprob: -12.625210762023926
    7. 'suite' → logprob: -12.625210762023926
    8. '	s' → logprob: -13.000210762023926
    9. ' ' → logprob: -13.750210762023926
    10. '    ' → logprob: -14.000210762023926

Token 371: 'uit' (ID: 2136)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6449548602104187
    2. 't' → logprob: -0.8949548602104187
    3. 'uit' → logprob: -3.1449549198150635
    4. 'ut' → logprob: -4.894954681396484
    5. 's' → logprob: -5.269954681396484
    6. ' suit' → logprob: -5.894954681396484
    7. 'num' → logprob: -6.144954681396484
    8. 'u' → logprob: -6.769954681396484
    9. 'nt' → logprob: -6.894954681396484
    10. ',' → logprob: -7.144954681396484

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015310514718294144
    2. ',int' → logprob: -6.50153112411499
    3. ' ,' → logprob: -10.876530647277832
    4. 'int' → logprob: -11.876530647277832
    5. ',float' → logprob: -13.626530647277832
    6. ',n' → logprob: -14.501530647277832
    7. ',Integer' → logprob: -15.001530647277832
    8. '[int' → logprob: -15.376530647277832
    9. ',num' → logprob: -15.626530647277832
    10. ',
' → logprob: -15.751530647277832

Token 373: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.750553131103516
    4. '[int' → logprob: -18.875553131103516
    5. 'float' → logprob: -19.625553131103516
    6. '<int' → logprob: -19.875553131103516
    7. '=int' → logprob: -19.875553131103516
    8. ' ' → logprob: -20.250553131103516
    9. '	int' → logprob: -20.500553131103516
    10. ':int' → logprob: -20.875553131103516

Token 374: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00033784625702537596
    2. 'num' → logprob: -8.000337600708008
    3. ' num' → logprob: -13.250337600708008
    4. '(' → logprob: -15.500337600708008
    5. '	num' → logprob: -15.875337600708008
    6. ',num' → logprob: -16.000337600708008
    7. '[num' → logprob: -16.250337600708008
    8. '=num' → logprob: -16.500337600708008
    9. ')' → logprob: -16.750337600708008
    10. '<num' → logprob: -17.250337600708008

Token 375: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -7.93448489275761e-05
    2. '))
' → logprob: -9.500079154968262
    3. ')))' → logprob: -12.875079154968262
    4. ' ))' → logprob: -14.125079154968262
    5. ')' → logprob: -14.500079154968262
    6. '()))' → logprob: -15.000079154968262
    7. '))

' → logprob: -15.375079154968262
    8. '));' → logprob: -17.125080108642578
    9. ' ' → logprob: -17.375080108642578
    10. '))
' → logprob: -17.500080108642578

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004605280235409737
    2. '    
' → logprob: -5.754605293273926
    3. ' for' → logprob: -7.129605293273926
    4. '
' → logprob: -7.754605293273926
    5. 'for' → logprob: -9.504605293273926
    6. '  
' → logprob: -10.504605293273926
    7. '   
' → logprob: -10.879605293273926
    8. '<|end|>' → logprob: -11.254605293273926
    9. '        
' → logprob: -11.504605293273926
    10. 'n' → logprob: -11.629605293273926

Token 377: ' B' (ID: 418)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.3791038393974304
    2. 'B' (adapté à ' B') → logprob: -1.5041038990020752
    3. 'A' → logprob: -2.629103899002075
    4. 'sorted' → logprob: -4.629103660583496
    5. '   ' → logprob: -4.879103660583496
    6. ' merge' → logprob: -6.879103660583496
    7. 'quick' → logprob: -7.254103660583496
    8. 'n' → logprob: -8.004103660583496
    9. 'merged' → logprob: -8.504103660583496
    10. ' B' → logprob: -8.504103660583496

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018226739019155502
    2. '=' → logprob: -4.018226623535156
    3. '=A' → logprob: -9.518226623535156
    4. 'A' → logprob: -13.268226623535156
    5. '[:]' → logprob: -14.018226623535156
    6. '=B' → logprob: -14.768226623535156
    7. '＝' → logprob: -16.268226623535156
    8. ' =[' → logprob: -16.393226623535156
    9. '=[]' → logprob: -16.768226623535156
    10. '.' → logprob: -16.768226623535156

Token 379: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00042745075188577175
    2. ' A' → logprob: -8.12542724609375
    3. 'list' → logprob: -9.00042724609375
    4. '[A' → logprob: -12.00042724609375
    5. ' list' → logprob: -14.00042724609375
    6. '[' → logprob: -14.75042724609375
    7. '   ' → logprob: -14.87542724609375
    8. ' ' → logprob: -16.00042724609375
    9. '	A' → logprob: -16.50042724609375
    10. 'Ａ' → logprob: -18.00042724609375

Token 380: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.1016383096575737
    2. '.copy' → logprob: -2.3516383171081543
    3. '[:' → logprob: -6.601638317108154
    4. '[' → logprob: -9.601637840270996
    5. '.' → logprob: -12.601637840270996
    6. '+' → logprob: -14.101637840270996
    7. '[::-' → logprob: -14.976637840270996
    8. '.deepcopy' → logprob: -15.601637840270996
    9. 'copy' → logprob: -15.851637840270996
    10. '.Copy' → logprob: -16.601638793945312

Token 381: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05663151293992996
    2. ')' → logprob: -3.056631565093994
    3. ')]' → logprob: -4.931631565093994
    4. ' ]' → logprob: -7.431631565093994
    5. ']
' → logprob: -9.556631088256836
    6. '<|end|>' → logprob: -9.931631088256836
    7. ' )' → logprob: -10.681631088256836
    8. ']()' → logprob: -11.306631088256836
    9. '()]' → logprob: -11.306631088256836
    10. '<|end|>' → logprob: -11.556631088256836

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03498268872499466
    2. 'quick' → logprob: -3.784982681274414
    3. 'merge' → logprob: -4.784982681274414
    4. ' quick' → logprob: -5.784982681274414
    5. ' merge' → logprob: -8.909982681274414
    6. '
' → logprob: -10.034982681274414
    7. '    
' → logprob: -11.534982681274414
    8. 'qu' → logprob: -11.659982681274414
    9. '```' → logprob: -11.659982681274414
    10. '  ' → logprob: -11.659982681274414

Token 383: ' quick' (ID: 4853)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.007526058703660965
    2. 'quick' (adapté à ' quick') → logprob: -5.50752592086792
    3. ' merge' → logprob: -5.88252592086792
    4. '   ' → logprob: -7.50752592086792
    5. ' quick' → logprob: -9.382526397705078
    6. '
' → logprob: -11.257526397705078
    7. ' ' → logprob: -13.257526397705078
    8. '    
' → logprob: -13.257526397705078
    9. '
' → logprob: -14.382526397705078
    10. '  ' → logprob: -14.382526397705078

Token 384: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.8670179997570813e-05
    2. '_' → logprob: -11.250019073486328
    3. '_swap' → logprob: -13.375019073486328
    4. '_s' → logprob: -13.375019073486328
    5. '_sorted' → logprob: -14.000019073486328
    6. '_merge' → logprob: -14.625019073486328
    7. '_split' → logprob: -15.250019073486328
    8. ' _' → logprob: -15.875019073486328
    9. 'sort' → logprob: -16.000019073486328
    10. '_write' → logprob: -16.625019073486328

Token 385: '(A' (ID: 10706)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.003178306156769395
    2. '(A' → logprob: -5.753178119659424
    3. '(' → logprob: -14.378178596496582
    4. ' (' → logprob: -18.503177642822266
    5. '(
' → logprob: -18.503177642822266
    6. '(Q' → logprob: -18.628177642822266
    7. '(C' → logprob: -19.503177642822266
    8. '(I' → logprob: -20.503177642822266
    9. '```' → logprob: -20.503177642822266
    10. '<|end|>' → logprob: -20.628177642822266

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5358694731257856e-05
    2. ',B' → logprob: -10.500035285949707
    3. ' ,' → logprob: -12.000035285949707
    4. 'B' → logprob: -14.625035285949707
    5. '(B' → logprob: -15.250035285949707
    6. ')' → logprob: -15.250035285949707
    7. '(' → logprob: -15.500035285949707
    8. '   ' → logprob: -15.500035285949707
    9. '0' → logprob: -15.500035285949707
    10. ',
' → logprob: -16.875036239624023

Token 387: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -19.87502670288086
    4. '00' → logprob: -21.12502670288086
    5. '۰' → logprob: -21.87502670288086
    6. '000' → logprob: -22.12502670288086
    7. ')' → logprob: -22.12502670288086
    8. '０' → logprob: -22.25002670288086
    9. '```' → logprob: -22.75002670288086
    10. '(' → logprob: -22.75002670288086

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '０' → logprob: -19.375001907348633
    4. '00' → logprob: -20.750001907348633
    5. '000' → logprob: -20.875001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '۰' → logprob: -21.250001907348633
    8. '(' → logprob: -22.125001907348633
    9. '012' → logprob: -22.125001907348633
    10. '```' → logprob: -22.500001907348633

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014397578779608011
    2. ',len' → logprob: -6.626439571380615
    3. 'len' → logprob: -9.376440048217773
    4. ' ,' → logprob: -11.126440048217773
    5. ',n' → logprob: -11.251440048217773
    6. '(len' → logprob: -14.501440048217773
    7. ' len' → logprob: -14.626440048217773
    8. 'n' → logprob: -15.251440048217773
    9. ',
' → logprob: -16.001440048217773
    10. '=len' → logprob: -17.626440048217773

Token 390: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47411856055259705
    2. 'len' → logprob: -0.9741185903549194
    3. ' n' → logprob: -10.72411823272705
    4. ' len' → logprob: -10.84911823272705
    5. '(len' → logprob: -16.099119186401367
    6. '   ' → logprob: -17.224119186401367
    7. '(n' → logprob: -18.724119186401367
    8. '	len' → logprob: -18.849119186401367
    9. '	n' → logprob: -19.099119186401367
    10. '[len' → logprob: -19.474119186401367

Token 391: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687223196029663
    2. ' -' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.511872291564941
    4. ')' → logprob: -14.636872291564941
    5. '   ' → logprob: -16.136871337890625
    6. '1' → logprob: -16.636871337890625
    7. '–' → logprob: -17.011871337890625
    8. '−' → logprob: -17.011871337890625
    9. '  ' → logprob: -17.886871337890625
    10. '<|end|>' → logprob: -18.261871337890625

Token 392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. '```' → logprob: -18.000017166137695
    5. ')' → logprob: -18.500017166137695
    6. '  ' → logprob: -19.125017166137695
    7. '2' → logprob: -19.250017166137695
    8. '
' → logprob: -19.250017166137695
    9. '１' → logprob: -20.187517166137695
    10. '<|end|>' → logprob: -20.375017166137695

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.500011444091797
    4. '```' → logprob: -15.437511444091797
    5. '   ' → logprob: -16.375011444091797
    6. ')' → logprob: -16.812511444091797
    7. '１' → logprob: -16.812511444091797
    8. '2' → logprob: -17.562511444091797
    9. '۱' → logprob: -17.812511444091797
    10. '

' → logprob: -17.875011444091797

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004079470410943031
    2. ')
' → logprob: -5.504079341888428
    3. ')
' → logprob: -14.254079818725586
    4. ')

' → logprob: -15.504079818725586
    5. ' )' → logprob: -16.629079818725586
    6. '   ' → logprob: -17.004079818725586
    7. '),' → logprob: -17.504079818725586
    8. ').' → logprob: -18.879079818725586
    9. ');' → logprob: -19.504079818725586
    10. ')#' → logprob: -19.879079818725586

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5297234058380127
    2. 'merge' → logprob: -0.9047234058380127
    3. ' merge' → logprob: -5.029723167419434
    4. ' ' → logprob: -11.404723167419434
    5. '```' → logprob: -12.029723167419434
    6. '.merge' → logprob: -12.404723167419434
    7. '  ' → logprob: -12.529723167419434
    8. '_merge' → logprob: -12.779723167419434
    9. '
' → logprob: -13.154723167419434
    10. 'merged' → logprob: -13.967223167419434

Token 396: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -2.618001053633634e-05
    2. '   ' → logprob: -11.250025749206543
    3. ' merge' → logprob: -11.250025749206543
    4. ' ' → logprob: -16.62502670288086
    5. '  ' → logprob: -18.12502670288086
    6. '.merge' → logprob: -18.12502670288086
    7. '```' → logprob: -18.37502670288086
    8. '
' → logprob: -18.62502670288086
    9. 'print' → logprob: -19.00002670288086
    10. '_merge' → logprob: -19.12502670288086

Token 397: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -8.101369894575328e-05
    2. '_merge' → logprob: -9.500081062316895
    3. '_' → logprob: -12.875081062316895
    4. ' _' → logprob: -13.750081062316895
    5. '_sorted' → logprob: -14.250081062316895
    6. '_s' → logprob: -15.125081062316895
    7. '_split' → logprob: -15.500081062316895
    8. '```' → logprob: -15.500081062316895
    9. '_wrap' → logprob: -15.750081062316895
    10. '_append' → logprob: -16.500080108642578

Token 398: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.875004768371582
    3. '(A' → logprob: -13.000004768371582
    4. ' (' → logprob: -19.2500057220459
    5. '<|end|>' → logprob: -20.2500057220459
    6. '(
' → logprob: -20.5000057220459
    7. 'A' → logprob: -20.7500057220459
    8. '```' → logprob: -20.8750057220459
    9. '(b' → logprob: -21.0000057220459
    10. 'B' → logprob: -21.2500057220459

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006657334160991013
    2. '(B' → logprob: -7.375665664672852
    3. ',B' → logprob: -10.625665664672852
    4. ' ,' → logprob: -11.750665664672852
    5. '(' → logprob: -12.000665664672852
    6. ')' → logprob: -14.625665664672852
    7. ' (' → logprob: -15.500665664672852
    8. '(A' → logprob: -16.62566566467285
    9. '   ' → logprob: -16.87566566467285
    10. 'B' → logprob: -17.50066566467285

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.381715774536133
    4. '  ' → logprob: -21.006715774536133
    5. ' ' → logprob: -21.006715774536133
    6. ')' → logprob: -21.131715774536133
    7. '```' → logprob: -21.506715774536133
    8. '00' → logprob: -21.506715774536133
    9. ',' → logprob: -22.006715774536133
    10. '(' → logprob: -22.506715774536133

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -21.875059127807617
    4. '00' → logprob: -22.750059127807617
    5. ')' → logprob: -23.875059127807617
    6. '000' → logprob: -23.875059127807617
    7. ',' → logprob: -24.625059127807617
    8. '  ' → logprob: -24.625059127807617
    9. '０' → logprob: -24.750059127807617
    10. '۰' → logprob: -25.375059127807617

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.684157026233152e-05
    2. ' ,' → logprob: -10.000077247619629
    3. ',n' → logprob: -10.375077247619629
    4. 'n' → logprob: -15.625077247619629
    5. '   ' → logprob: -17.875076293945312
    6. ',len' → logprob: -19.625076293945312
    7. ',
' → logprob: -19.875076293945312
    8. '‌,' → logprob: -20.375076293945312
    9. ' n' → logprob: -21.000076293945312
    10. '，' → logprob: -21.125076293945312

Token 403: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011708177626132965
    2. ' n' → logprob: -6.751170635223389
    3. 'len' → logprob: -14.376171112060547
    4. '	n' → logprob: -17.126171112060547
    5. ' len' → logprob: -17.501171112060547
    6. '   ' → logprob: -18.501171112060547
    7. ' ' → logprob: -19.126171112060547
    8. '_n' → logprob: -19.501171112060547
    9. ')n' → logprob: -20.376171112060547
    10. '    ' → logprob: -21.251171112060547

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.692145012086257e-05
    2. ',' → logprob: -11.000046730041504
    3. ')n' → logprob: -11.250046730041504
    4. ' )' → logprob: -11.375046730041504
    5. '-' → logprob: -12.625046730041504
    6. '   ' → logprob: -14.500046730041504
    7. ')
' → logprob: -14.875046730041504
    8. '),' → logprob: -15.125046730041504
    9. '<|end|>' → logprob: -15.125046730041504
    10. '```' → logprob: -15.875046730041504

Token 405: '   ' (ID: 271)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.04569371044635773
    2. 'is' → logprob: -3.9206936359405518
    3. 'print' → logprob: -4.670693874359131
    4. '   ' → logprob: -4.920693874359131
    5. 'if' → logprob: -5.045693874359131
    6. 'consistent' → logprob: -7.420693874359131
    7. 'for' → logprob: -8.420693397521973
    8. ' stable' → logprob: -8.670693397521973
    9. 'sorted' → logprob: -8.670693397521973
    10. 's' → logprob: -8.795693397521973

Token 406: ' print' (ID: 2123)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.011898222379386425
    2. 'print' (adapté à ' print') → logprob: -4.761898040771484
    3. 'is' → logprob: -6.636898040771484
    4. 'if' → logprob: -7.011898040771484
    5. 'for' → logprob: -7.261898040771484
    6. 'st' → logprob: -9.386898040771484
    7. ' stable' → logprob: -9.511898040771484
    8. '   ' → logprob: -10.261898040771484
    9. 'sorted' → logprob: -10.261898040771484
    10. 'consistent' → logprob: -10.261898040771484

Token 407: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02038959041237831
    2. '('' → logprob: -4.645389556884766
    3. '(*' → logprob: -4.645389556884766
    4. '(' → logprob: -7.395389556884766
    5. '(*(' → logprob: -8.895389556884766
    6. '(A' → logprob: -9.270389556884766
    7. '(all' → logprob: -10.395389556884766
    8. '(("' → logprob: -10.895389556884766
    9. '(B' → logprob: -11.270389556884766
    10. '()' → logprob: -11.395389556884766

Token 408: 'Stable' (ID: 129551)
  Prédit: 'Stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stable' → logprob: -0.5326536893844604
    2. '".' → logprob: -1.2826536893844604
    3. 'Yes' → logprob: -2.78265380859375
    4. 'No' → logprob: -3.40765380859375
    5. '"' → logprob: -4.15765380859375
    6. 'Sorted' → logprob: -4.90765380859375
    7. 'Not' → logprob: -5.28265380859375
    8. ''.' → logprob: -5.53265380859375
    9. ' ".' → logprob: -5.78265380859375
    10. '")' → logprob: -7.03265380859375

Token 409: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006367644295096397
    2. '")
' → logprob: -5.1313676834106445
    3. '"' → logprob: -8.006367683410645
    4. '\n' → logprob: -9.631367683410645
    5. ')' → logprob: -10.506367683410645
    6. '")
' → logprob: -11.881367683410645
    7. '\' → logprob: -13.506367683410645
    8. '");' → logprob: -14.006367683410645
    9. ' ")' → logprob: -14.006367683410645
    10. 'Yes' → logprob: -14.131367683410645

Token 410: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025028903037309647
    2. '")' → logprob: -6.627502918243408
    3. 'if' → logprob: -7.002502918243408
    4. ' if' → logprob: -8.75250244140625
    5. '()' → logprob: -9.87750244140625
    6. ')
' → logprob: -10.12750244140625
    7. '())' → logprob: -12.25250244140625
    8. '"' → logprob: -12.50250244140625
    9. ')")' → logprob: -12.50250244140625
    10. ' )' → logprob: -13.37750244140625

Token 411: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5302780270576477
    2. 'A' → logprob: -1.655277967453003
    3. ' B' → logprob: -2.030277967453003
    4. ' all' → logprob: -2.905277967453003
    5. 'B' → logprob: -3.405277967453003
    6. 'all' → logprob: -6.780278205871582
    7. ' ' → logprob: -9.780278205871582
    8. '   ' → logprob: -10.780278205871582
    9. ' [' → logprob: -10.905278205871582
    10. '[A' → logprob: -11.405278205871582

Token 412: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760713219642639
    2. ' ==' → logprob: -0.8260713219642639
    3. '[:]' → logprob: -9.076071739196777
    4. ')==' → logprob: -12.076071739196777
    5. ']==' → logprob: -12.826071739196777
    6. ')' → logprob: -13.076071739196777
    7. '===' → logprob: -13.576071739196777
    8. '	' → logprob: -13.826071739196777
    9. ' ' → logprob: -13.951071739196777
    10. '   ' → logprob: -13.951071739196777

Token 413: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0001584850688232109
    2. ' B' → logprob: -8.750158309936523
    3. ' ' → logprob: -19.750158309936523
    4. '   ' → logprob: -20.250158309936523
    5. '	B' → logprob: -20.250158309936523
    6. '>B' → logprob: -21.125158309936523
    7. '<B' → logprob: -21.125158309936523
    8. '```' → logprob: -21.125158309936523
    9. '=B' → logprob: -21.250158309936523
    10. 'Ｂ' → logprob: -21.250158309936523

Token 414: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02324839122593403
    2. 'else' → logprob: -3.7732484340667725
    3. '   ' → logprob: -13.148248672485352
    4. ')' → logprob: -14.648248672485352
    5. ' ' → logprob: -15.523248672485352
    6. '	else' → logprob: -16.02324867248535
    7. '    ' → logprob: -16.14824867248535
    8. '
' → logprob: -16.52324867248535
    9. '```' → logprob: -17.14824867248535
    10. ' )' → logprob: -17.77324867248535

Token 415: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01824324205517769
    2. ' "' → logprob: -4.018243312835693
    3. '"No' → logprob: -9.768242835998535
    4. '   ' → logprob: -10.518242835998535
    5. ' ' → logprob: -12.393242835998535
    6. ''' → logprob: -13.018242835998535
    7. '	' → logprob: -14.393242835998535
    8. '"I' → logprob: -14.518242835998535
    9. '       ' → logprob: -15.018242835998535
    10. '
' → logprob: -15.143242835998535

Token 416: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -3.690834273584187e-05
    2. '"' → logprob: -10.62503719329834
    3. 'No' → logprob: -11.50003719329834
    4. ' Not' → logprob: -13.75003719329834
    5. 'Un' → logprob: -15.00003719329834
    6. 'NOT' → logprob: -15.75003719329834
    7. 'Stable' → logprob: -15.87503719329834
    8. ''' → logprob: -16.375036239624023
    9. '"No' → logprob: -16.500036239624023
    10. 'Non' → logprob: -16.500036239624023

Token 417: ' stable' (ID: 22105)
  Prédit: ' stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stable' → logprob: -0.4130397140979767
    2. ' Stable' → logprob: -1.1630396842956543
    3. 'Stable' → logprob: -3.6630396842956543
    4. 'stable' → logprob: -8.788040161132812
    5. ' ' → logprob: -11.163040161132812
    6. '   ' → logprob: -12.788040161132812
    7. '  ' → logprob: -13.413040161132812
    8. 'St' → logprob: -14.288040161132812
    9. ' ' → logprob: -14.413040161132812
    10. ' stabile' → logprob: -14.663040161132812

Token 418: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07890389114618301
    2. '")
' → logprob: -2.578903913497925
    3. '")
' → logprob: -11.453904151916504
    4. ')' → logprob: -13.078904151916504
    5. '")

' → logprob: -14.828904151916504
    6. ')")' → logprob: -14.828904151916504
    7. ')
' → logprob: -15.078904151916504
    8. '"' → logprob: -15.203904151916504
    9. ')")
' → logprob: -16.453903198242188
    10. '");' → logprob: -18.078903198242188

Token 419: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.673547563375905e-05
    2. '   ' → logprob: -9.500086784362793
    3. ' for' → logprob: -11.375086784362793
    4. 'print' → logprob: -15.375086784362793
    5. '	for' → logprob: -16.250085830688477
    6. '    
' → logprob: -16.875085830688477
    7. '<|end|>' → logprob: -17.750085830688477
    8. 'from' → logprob: -18.375085830688477
    9. '```' → logprob: -18.500085830688477
    10. '
' → logprob: -19.625085830688477

Token 420: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.625000953674316
    4. 'print' → logprob: -19.125
    5. '	for' → logprob: -20.25
    6. 'from' → logprob: -20.25
    7. '```' → logprob: -22.25
    8. '    
' → logprob: -22.375
    9. '[' (adapté à ' [') → logprob: -24.0
    10. '
' → logprob: -24.75

Token 421: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.749814019713085e-06
    2. 'for' → logprob: -12.625006675720215
    3. ' print' → logprob: -12.625006675720215
    4. ' for' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.50000762939453
    6. '
' → logprob: -19.00000762939453
    7. 'r' → logprob: -20.50000762939453
    8. 'printf' → logprob: -20.62500762939453
    9. '```' → logprob: -21.25000762939453
    10. '    
' → logprob: -21.37500762939453

Token 422: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.7901242971420288
    2. '(f' → logprob: -1.4151242971420288
    3. '(a' → logprob: -1.9151242971420288
    4. '("{}' → logprob: -2.6651244163513184
    5. '(s' → logprob: -2.7901244163513184
    6. '(x' → logprob: -4.165124416351318
    7. '(t' → logprob: -5.540124416351318
    8. '(i' → logprob: -6.915124416351318
    9. '('{}' → logprob: -7.040124416351318
    10. '("{' → logprob: -7.165124416351318

Token 423: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7419519424438477
    2. 'x' → logprob: -0.8669519424438477
    3. 'card' → logprob: -3.1169519424438477
    4. 'v' → logprob: -3.9919519424438477
    5. 'item' → logprob: -4.116951942443848
    6. 'A' → logprob: -4.741951942443848
    7. 't' → logprob: -5.241951942443848
    8. 'e' → logprob: -5.616951942443848
    9. 'pair' → logprob: -5.616951942443848
    10. 'p' → logprob: -6.741951942443848

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003933768020942807
    2. '())' → logprob: -8.00039291381836
    3. 'a' → logprob: -11.00039291381836
    4. ')a' → logprob: -11.00039291381836
    5. '(a' → logprob: -11.37539291381836
    6. ')
' → logprob: -12.12539291381836
    7. ')]' → logprob: -12.37539291381836
    8. '()' → logprob: -13.37539291381836
    9. ' )' → logprob: -14.25039291381836
    10. '[a' → logprob: -15.62539291381836

Token 425: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38263389468193054
    2. ')' → logprob: -1.507633924484253
    3. 'for' → logprob: -2.382633924484253
    4. '())' → logprob: -6.132633686065674
    5. ' for' → logprob: -6.257633686065674
    6. '(' → logprob: -10.382634162902832
    7. 'in' → logprob: -10.882634162902832
    8. '()]' → logprob: -11.507634162902832
    9. ']' → logprob: -11.757634162902832
    10. '()
' → logprob: -12.132634162902832

Token 426: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006723064463585615
    2. ' A' → logprob: -5.006722927093506
    3. 'B' → logprob: -12.381723403930664
    4. 'a' → logprob: -13.006723403930664
    5. ' ' → logprob: -14.756723403930664
    6. '(A' → logprob: -14.881723403930664
    7. '   ' → logprob: -14.881723403930664
    8. '  ' → logprob: -16.256723403930664
    9. '	A' → logprob: -16.381723403930664
    10. ' B' → logprob: -17.131723403930664

Token 427: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.523216187953949
    2. ' in' → logprob: -0.898216187953949
    3. 'A' → logprob: -10.023216247558594
    4. '<|end|>' → logprob: -10.898216247558594
    5. ')' → logprob: -12.023216247558594
    6. 's' → logprob: -12.148216247558594
    7. ' A' → logprob: -12.148216247558594
    8. ']' → logprob: -12.523216247558594
    9. ' ' → logprob: -12.523216247558594
    10. '
' → logprob: -13.523216247558594

Token 428: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00038038729690015316
    2. ' A' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.625380516052246
    4. ' ' → logprob: -16.87537956237793
    5. '(A' → logprob: -17.87537956237793
    6. '	A' → logprob: -17.87537956237793
    7. '  ' → logprob: -18.00037956237793
    8. 'a' → logprob: -18.37537956237793
    9. ')' → logprob: -18.50037956237793
    10. 'Ａ' → logprob: -18.50037956237793

Token 429: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003976885695010424
    2. ')]' → logprob: -5.628976821899414
    3. ' ]' → logprob: -8.628976821899414
    4. '()]' → logprob: -9.003976821899414
    5. ')' → logprob: -9.878976821899414
    6. '<|end|>' → logprob: -11.003976821899414
    7. '`]' → logprob: -12.878976821899414
    8. ']
' → logprob: -14.128976821899414
    9. '}]' → logprob: -14.253976821899414
    10. ':]' → logprob: -14.753976821899414

Token 430: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001416069339029491
    2. 'main' → logprob: -6.626416206359863
    3. ' if' → logprob: -9.876416206359863
    4. 'print' → logprob: -10.751416206359863
    5. '<|end|>' → logprob: -11.751416206359863
    6. '```' → logprob: -11.876416206359863
    7. '
' → logprob: -13.501416206359863
    8. '(main' → logprob: -15.626416206359863
    9. '    
' → logprob: -15.751416206359863
    10. '  
' → logprob: -15.876416206359863

Token 431: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 429
Tokens correctement prédits (1ère position, stricte): 193
Tokens correctement prédits (1ère position, avec adaptation): 219
Tokens correctement prédits (top 10): 402
Précision stricte (1ère position): 44.99%
Précision adaptée (1ère position): 51.05%
Précision (top 10): 93.71%
================================================================================
