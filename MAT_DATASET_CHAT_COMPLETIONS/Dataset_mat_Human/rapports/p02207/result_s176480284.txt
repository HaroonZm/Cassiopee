================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import *
from bisect import *
from math import *
from collections import *
from heapq import *
from random import *
import sys

sys.setrecursionlimit(10 ** 6)
int1 = lambda x: int(x) - 1
p2D = lambda x: print(*x, sep="\n")
def II(): return int(sys.stdin.readline())
def MI(): return map(int, sys.stdin.readline().split())
def MI1(): return map(int1, sys.stdin.readline().split())
def MF(): return map(float, sys.stdin.readline().split())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LF(): return list(map(float, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
dij = [(1, 0), (0, 1), (-1, 0), (0, -1)]

def main():
    n=II()
    tt=[]
    aa=[]
    for _ in range(n):
        t,a=MI()
        tt.append(t)
        aa.append(log10(10-a)-1)
    cm=[0]
    for a in aa:
        cm.append(cm[-1]+a)
    #print(cm)
    q=II()
    for _ in range(q):
        l,r=MI()
        li=bisect_left(tt,l)
        ri=bisect_left(tt,r)
        print(pow(10,cm[ri]-cm[li]+9))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1645996570587158
    2. 'product' → logprob: -1.4145996570587158
    3. 'per' → logprob: -1.7895996570587158
    4. 'count' → logprob: -2.039599657058716
    5. 'cycle' → logprob: -2.664599657058716
    6. 'group' → logprob: -3.289599657058716
    7. 'chain' → logprob: -3.414599657058716
    8. 'acc' → logprob: -6.039599418640137
    9. 'is' → logprob: -6.539599418640137
    10. 'zip' → logprob: -6.914599418640137

Token 4: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2417243719100952
    2. 'per' → logprob: -1.3667243719100952
    3. 'product' → logprob: -1.6167243719100952
    4. 'c' → logprob: -2.3667244911193848
    5. 'com' → logprob: -2.6167244911193848
    6. 'import' → logprob: -3.3667244911193848
    7. 'count' → logprob: -4.116724491119385
    8. 'chain' → logprob: -4.866724491119385
    9. 'i' → logprob: -4.991724491119385
    10. 'p' → logprob: -5.366724491119385

Token 5: ' bis' (ID: 7204)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6243625283241272
    2. ' math' → logprob: -1.2493624687194824
    3. ' operator' → logprob: -2.7493624687194824
    4. ' ' → logprob: -3.4993624687194824
    5. 'fun' → logprob: -3.6243624687194824
    6. ' sys' → logprob: -4.499362468719482
    7. ' collections' → logprob: -4.624362468719482
    8. 'math' → logprob: -4.749362468719482
    9. ' os' → logprob: -4.874362468719482
    10. 'operator' → logprob: -5.624362468719482

Token 6: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.856408536899835e-05
    2. 'ec' → logprob: -11.125028610229492
    3. 'e' → logprob: -12.000028610229492
    4. 't' → logprob: -13.125028610229492
    5. 'ected' → logprob: -13.750028610229492
    6. 'ector' → logprob: -14.125028610229492
    7. '   ' → logprob: -14.250028610229492
    8. 'ectl' → logprob: -14.375028610229492
    9. '```' → logprob: -14.750028610229492
    10. 'm' → logprob: -15.000028610229492

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05533682554960251
    2. 'import' → logprob: -2.9303367137908936
    3. ' ' → logprob: -8.305336952209473
    4. '_import' → logprob: -8.805336952209473
    5. '_' → logprob: -10.555336952209473
    6. '.' → logprob: -11.055336952209473
    7. ' _' → logprob: -12.555336952209473
    8. '	import' → logprob: -12.930336952209473
    9. ' ' → logprob: -13.555336952209473
    10. '.import' → logprob: -13.555336952209473

Token 8: ' *
' (ID: 2099)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.616355836391449
    2. 'ins' → logprob: -1.3663558959960938
    3. ' bis' → logprob: -1.7413558959960938
    4. ' ' → logprob: -4.366355895996094
    5. ' *' → logprob: -4.866355895996094
    6. '*' → logprob: -5.241355895996094
    7. 'bis' → logprob: -6.241355895996094
    8. '_ins' → logprob: -6.991355895996094
    9. '_' → logprob: -7.991355895996094
    10. ' b' → logprob: -8.491355895996094

Token 9: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5862480401992798
    2. 'i' → logprob: -1.9612480401992798
    3. 'c' → logprob: -2.2112479209899902
    4. '(' → logprob: -2.9612479209899902
    5. '*' → logprob: -3.3362479209899902
    6. '.' → logprob: -3.8362479209899902
    7. ',' → logprob: -4.08624792098999
    8. '_' → logprob: -4.21124792098999
    9. 'a' → logprob: -4.33624792098999
    10. 'im' → logprob: -5.21124792098999

Token 10: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2829413414001465
    2. 'math' → logprob: -2.1579413414001465
    3. 'collections' → logprob: -3.0329413414001465
    4. ' collections' → logprob: -3.1579413414001465
    5. ' heap' → logprob: -3.6579413414001465
    6. 'heap' → logprob: -4.4079413414001465
    7. ' operator' → logprob: -7.2829413414001465
    8. ' sys' → logprob: -8.407941818237305
    9. 'operator' → logprob: -8.407941818237305
    10. 'copy' → logprob: -8.782941818237305

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03900902718305588
    2. ' ' → logprob: -3.9140090942382812
    3. 'import' → logprob: -4.414009094238281
    4. '.' → logprob: -5.164009094238281
    5. '<|end|>' → logprob: -8.039009094238281
    6. '  ' → logprob: -10.164009094238281
    7. ' im' → logprob: -10.414009094238281
    8. '_' → logprob: -11.414009094238281
    9. ' ,' → logprob: -11.914009094238281
    10. ' .' → logprob: -11.914009094238281

Token 12: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06866498291492462
    2. ' sqrt' → logprob: -3.068665027618408
    3. ' ceil' → logprob: -4.943665027618408
    4. ' inf' → logprob: -6.068665027618408
    5. '*' → logprob: -6.193665027618408
    6. ' *' → logprob: -6.693665027618408
    7. 'sqrt' → logprob: -7.068665027618408
    8. ' log' → logprob: -7.068665027618408
    9. ' pi' → logprob: -7.568665027618408
    10. ' ```' → logprob: -7.568665027618408

Token 13: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5335922241210938
    2. 'd' → logprob: -1.6585922241210938
    3. '#' → logprob: -1.7835922241210938
    4. 'a' → logprob: -2.2835922241210938
    5. 'import' → logprob: -2.9085922241210938
    6. '\n' → logprob: -2.9085922241210938
    7. '_' → logprob: -3.1585922241210938
    8. '' → logprob: -3.1585922241210938
    9. '`' → logprob: -4.033592224121094
    10. '*' → logprob: -4.158592224121094

Token 14: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5017919540405273
    2. ' collections' → logprob: -1.6267919540405273
    3. ' sys' → logprob: -3.1267919540405273
    4. ' fractions' → logprob: -3.5017919540405273
    5. 'operator' → logprob: -3.7517919540405273
    6. 'sys' → logprob: -3.7517919540405273
    7. ' operator' → logprob: -4.001791954040527
    8. 'random' → logprob: -4.626791954040527
    9. ' heap' → logprob: -4.751791954040527
    10. '_' → logprob: -4.876791954040527

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5528170466423035
    2. 'import' → logprob: -1.3028171062469482
    3. '.' → logprob: -2.0528171062469482
    4. ' ' → logprob: -3.8028171062469482
    5. '<|end|>' → logprob: -6.427816867828369
    6. '.import' → logprob: -9.177817344665527
    7. '.Counter' → logprob: -9.177817344665527
    8. ' .' → logprob: -9.427817344665527
    9. '```' → logprob: -9.427817344665527
    10. '	import' → logprob: -10.427817344665527

Token 16: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004779230337589979
    2. ' defaultdict' → logprob: -5.50477933883667
    3. ' import' → logprob: -7.87977933883667
    4. '_' → logprob: -8.879778861999512
    5. ' abc' → logprob: -9.254778861999512
    6. ' ```' → logprob: -10.254778861999512
    7. ' _' → logprob: -10.754778861999512
    8. 'import' → logprob: -12.129778861999512
    9. '  ' → logprob: -12.379778861999512
    10. ' collections' → logprob: -12.504778861999512

Token 17: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6401615738868713
    2. 'd' → logprob: -1.0151615142822266
    3. 'def' → logprob: -3.7651615142822266
    4. ' ' → logprob: -3.7651615142822266
    5. '#' → logprob: -3.8901615142822266
    6. 'a' → logprob: -4.265161514282227
    7. 'from' → logprob: -5.140161514282227
    8. '_' → logprob: -5.515161514282227
    9. ',' → logprob: -5.890161514282227
    10. ' 
' → logprob: -6.015161514282227

Token 18: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6030313372612
    2. ' functools' → logprob: -1.9780313968658447
    3. ' operator' → logprob: -2.2280313968658447
    4. ' typing' → logprob: -2.4780313968658447
    5. ' ' → logprob: -3.2280313968658447
    6. 'heap' → logprob: -3.9780313968658447
    7. '_' → logprob: -4.103031158447266
    8. ' sys' → logprob: -4.853031158447266
    9. 'operator' → logprob: -4.853031158447266
    10. ' queue' → logprob: -4.853031158447266

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.45848218582978e-06
    2. 'import' → logprob: -13.87500286102295
    3. 'i' → logprob: -15.12500286102295
    4. 'queue' → logprob: -15.12500286102295
    5. 'n' → logprob: -15.75000286102295
    6. 'o' → logprob: -16.125001907348633
    7. 's' → logprob: -16.250001907348633
    8. 'a' → logprob: -16.500001907348633
    9. 'u' → logprob: -16.500001907348633
    10. ' queue' → logprob: -16.625001907348633

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026927366852760315
    2. 'import' → logprob: -3.6519274711608887
    3. '<|end|>' → logprob: -7.776927471160889
    4. ' ' → logprob: -8.77692699432373
    5. '.' → logprob: -10.15192699432373
    6. '	import' → logprob: -12.65192699432373
    7. '_import' → logprob: -13.02692699432373
    8. '.import' → logprob: -13.40192699432373
    9. '  ' → logprob: -13.77692699432373
    10. ' Import' → logprob: -13.90192699432373

Token 21: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05168039724230766
    2. ' *' → logprob: -3.676680326461792
    3. ' import' → logprob: -3.801680326461792
    4. 'import' → logprob: -6.551680564880371
    5. '  ' → logprob: -7.426680564880371
    6. '*' → logprob: -8.051680564880371
    7. ' ```' → logprob: -8.801680564880371
    8. '<|end|>' → logprob: -9.301680564880371
    9. ' _' → logprob: -10.176680564880371
    10. ' ' → logprob: -10.176680564880371

Token 22: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3104541599750519
    2. '#' → logprob: -2.6854541301727295
    3. '\' → logprob: -2.8104541301727295
    4. '\n' → logprob: -3.5604541301727295
    5. 'a' → logprob: -3.6854541301727295
    6. '' → logprob: -3.9354541301727295
    7. 'import' → logprob: -4.060454368591309
    8. 'def' → logprob: -4.185454368591309
    9. '_' → logprob: -4.810454368591309
    10. 'n' → logprob: -5.185454368591309

Token 23: ' random' (ID: 7526)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.23320549726486206
    2. 'operator' → logprob: -2.233205556869507
    3. 'random' → logprob: -3.858205556869507
    4. ' random' → logprob: -3.858205556869507
    5. ' functools' → logprob: -3.858205556869507
    6. ' sys' → logprob: -4.108205318450928
    7. 'sys' → logprob: -5.358205318450928
    8. ' copy' → logprob: -5.483205318450928
    9. 'copy' → logprob: -5.858205318450928
    10. ' queue' → logprob: -6.608205318450928

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10775772482156754
    2. 'import' → logprob: -2.732757806777954
    3. ' ' → logprob: -3.357757806777954
    4. '<|end|>' → logprob: -6.482757568359375
    5. '.' → logprob: -7.357757568359375
    6. '  ' → logprob: -10.357757568359375
    7. '_import' → logprob: -10.857757568359375
    8. ' im' → logprob: -10.982757568359375
    9. '_' → logprob: -11.732757568359375
    10. '	import' → logprob: -11.857757568359375

Token 25: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017764460062608123
    2. '  ' → logprob: -6.626776218414307
    3. 'space' → logprob: -8.876776695251465
    4. ' *' → logprob: -9.376776695251465
    5. ' space' → logprob: -9.501776695251465
    6. '_' → logprob: -10.376776695251465
    7. ' _' → logprob: -10.751776695251465
    8. ' ```' → logprob: -11.126776695251465
    9. 'import' → logprob: -11.501776695251465
    10. ' '' → logprob: -11.501776695251465

Token 26: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5864318013191223
    2. 'r' → logprob: -1.7114317417144775
    3. '_' → logprob: -2.8364317417144775
    4. 'a' → logprob: -3.0864317417144775
    5. '*' → logprob: -3.3364317417144775
    6. ' ' → logprob: -3.4614317417144775
    7. '#' → logprob: -3.5864317417144775
    8. 'n' → logprob: -3.8364317417144775
    9. 'import' → logprob: -4.211431980133057
    10. 'i' → logprob: -5.211431980133057

Token 27: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44213977456092834
    2. ' os' → logprob: -1.692139744758606
    3. ' sys' → logprob: -1.942139744758606
    4. '_' → logprob: -4.942139625549316
    5. ' re' → logprob: -5.192139625549316
    6. ' ' → logprob: -5.442139625549316
    7. ' space' → logprob: -6.067139625549316
    8. ' numpy' → logprob: -6.067139625549316
    9. ' _' → logprob: -6.442139625549316
    10. ' math' → logprob: -7.067139625549316

Token 28: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6043980717658997
    2. '\n' → logprob: -1.7293980121612549
    3. '.' → logprob: -2.104398012161255
    4. '' → logprob: -2.854398012161255
    5. 'import' → logprob: -3.354398012161255
    6. '\' → logprob: -3.729398012161255
    7. 'newline' → logprob: -4.479398250579834
    8. '#' → logprob: -4.854398250579834
    9. '

' → logprob: -5.479398250579834
    10. '
' → logprob: -6.104398250579834

Token 29: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18085114657878876
    2. 'def' → logprob: -3.0558512210845947
    3. 'r' → logprob: -4.055850982666016
    4. 'n' → logprob: -4.055850982666016
    5. 'import' → logprob: -4.180850982666016
    6. '#' → logprob: -4.430850982666016
    7. '\n' → logprob: -4.805850982666016
    8. '
' → logprob: -5.180850982666016
    9. 'a' → logprob: -5.180850982666016
    10. '' → logprob: -5.305850982666016

Token 30: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.12258882028982e-05
    2. '.stdout' → logprob: -11.50006103515625
    3. '.user' → logprob: -11.62506103515625
    4. ' .' → logprob: -11.62506103515625
    5. '.stdin' → logprob: -12.62506103515625
    6. '.readline' → logprob: -12.87506103515625
    7. '.import' → logprob: -12.87506103515625
    8. '.exit' → logprob: -13.00006103515625
    9. '.`' → logprob: -13.00006103515625
    10. '.argv' → logprob: -13.12506103515625

Token 31: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.1328035444021225
    2. '_rec' → logprob: -2.757803440093994
    3. '_limit' → logprob: -3.382803440093994
    4. '_int' → logprob: -5.132803440093994
    5. '_version' → logprob: -5.382803440093994
    6. '_exc' → logprob: -6.007803440093994
    7. '_execution' → logprob: -6.132803440093994
    8. '_depth' → logprob: -6.757803440093994
    9. '_' → logprob: -6.882803440093994
    10. '_trace' → logprob: -6.882803440093994

Token 32: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00013321757433004677
    2. 'urs' → logprob: -9.000133514404297
    3. 'ursive' → logprob: -12.375133514404297
    4. 'ur' → logprob: -12.375133514404297
    5. 'ursor' → logprob: -14.625133514404297
    6. 'usion' → logprob: -15.000133514404297
    7. 'urst' → logprob: -15.875133514404297
    8. 'usr' → logprob: -16.000133514404297
    9. 'limit' → logprob: -16.250133514404297
    10. 'rs' → logprob: -17.000133514404297

Token 33: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.005865509156137705
    2. 'limit' → logprob: -5.255865573883057
    3. '_depth' → logprob: -7.505865573883057
    4. '_lim' → logprob: -9.755865097045898
    5. '_limits' → logprob: -11.505865097045898
    6. ' limit' → logprob: -12.880865097045898
    7. '_stack' → logprob: -13.130865097045898
    8. '_LIMIT' → logprob: -13.380865097045898
    9. '_threshold' → logprob: -13.630865097045898
    10. '_' → logprob: -13.880865097045898

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016587569552939385
    2. ' (' → logprob: -8.750165939331055
    3. '(
' → logprob: -12.375165939331055
    4. '(

' → logprob: -13.250165939331055
    5. '((' → logprob: -14.750165939331055
    6. ')' → logprob: -15.750165939331055
    7. '```' → logprob: -16.000165939331055
    8. '<|end|>' → logprob: -16.000165939331055
    9. '(
' → logprob: -16.625165939331055
    10. '()' → logprob: -17.000165939331055

Token 35: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008623912930488586
    2. '100' → logprob: -4.758624076843262
    3. ' ' → logprob: -12.133624076843262
    4. '300' → logprob: -13.133624076843262
    5. '500' → logprob: -14.008624076843262
    6. '999' → logprob: -14.883624076843262
    7. '200' → logprob: -15.383624076843262
    8. '400' → logprob: -15.508624076843262
    9. '1' → logprob: -15.633624076843262
    10. '250' → logprob: -15.883624076843262

Token 36: ' **' (ID: 6240)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0894547551870346
    2. '000' → logprob: -2.7144546508789062
    3. '00' → logprob: -5.089454650878906
    4. '6' → logprob: -5.089454650878906
    5. '**' → logprob: -5.839454650878906
    6. '8' → logprob: -6.214454650878906
    7. '07' → logprob: -6.714454650878906
    8. '0' → logprob: -7.089454650878906
    9. '5' → logprob: -11.089454650878906
    10. '007' → logprob: -11.339454650878906

Token 37: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04873860627412796
    2. '9' → logprob: -3.048738718032837
    3. '8' → logprob: -8.798738479614258
    4. '6' → logprob: -15.798738479614258
    5. '**' → logprob: -16.798738479614258
    6. ' ' → logprob: -17.048738479614258
    7. '```' → logprob: -17.423738479614258
    8. '+' → logprob: -19.673738479614258
    9. '

' → logprob: -19.798738479614258
    10. '  ' → logprob: -19.923738479614258

Token 38: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0626365914940834
    2. '9' → logprob: -2.812636613845825
    3. '8' → logprob: -7.312636375427246
    4. '6' → logprob: -13.312636375427246
    5. '```' → logprob: -17.187637329101562
    6. '10' → logprob: -18.187637329101562
    7. '**' → logprob: -18.437637329101562
    8. ' ' → logprob: -19.187637329101562
    9. '+' → logprob: -19.687637329101562
    10. '``' → logprob: -20.312637329101562

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -15.250000953674316
    5. ')

' → logprob: -18.500001907348633
    6. ')
' → logprob: -18.625001907348633
    7. '),' → logprob: -18.625001907348633
    8. ')`' → logprob: -19.375001907348633
    9. ')))' → logprob: -19.750001907348633
    10. ')#' → logprob: -20.250001907348633

Token 40: 'int' (ID: 491)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.826128363609314
    2. '

' → logprob: -1.451128363609314
    3. 'n' → logprob: -1.576128363609314
    4. '\n' → logprob: -2.8261284828186035
    5. '\' → logprob: -3.8261284828186035
    6. 'def' → logprob: -4.0761284828186035
    7. '' → logprob: -5.0761284828186035
    8. '
' → logprob: -5.5761284828186035
    9. 'd' → logprob: -5.8261284828186035
    10. '```' → logprob: -5.9511284828186035

Token 41: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306213140487671
    2. ' ' → logprob: -1.431213140487671
    3. '32' → logprob: -1.431213140487671
    4. '  ' → logprob: -2.931213140487671
    5. '_' → logprob: -3.056213140487671
    6. '64' → logprob: -3.431213140487671
    7. '()' → logprob: -3.556213140487671
    8. '    ' → logprob: -4.05621337890625
    9. '   ' → logprob: -4.30621337890625
    10. ' =' → logprob: -4.68121337890625

Token 42: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5153667330741882
    2. 'put' → logprob: -1.765366792678833
    3. '()' → logprob: -3.140366792678833
    4. 'val' → logprob: -3.390366792678833
    5. '_val' → logprob: -3.515366792678833
    6. 'o' → logprob: -3.640366792678833
    7. 'nt' → logprob: -3.890366792678833
    8. '_' → logprob: -4.765366554260254
    9. 'def' → logprob: -4.890366554260254
    10. 'v' → logprob: -5.140366554260254

Token 43: ' lambda' (ID: 27871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7448800802230835
    2. '(int' → logprob: -1.1198800802230835
    3. '(input' → logprob: -1.8698800802230835
    4. '(lambda' → logprob: -3.244880199432373
    5. ' (' → logprob: -6.619880199432373
    6. 'lambda' → logprob: -6.869880199432373
    7. 'input' → logprob: -6.869880199432373
    8. 'int' → logprob: -7.244880199432373
    9. '0' → logprob: -7.494880199432373
    10. ' ' → logprob: -8.744879722595215

Token 44: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.32038772106170654
    2. ' x' → logprob: -1.3203877210617065
    3. 'a' → logprob: -6.195387840270996
    4. ' a' → logprob: -6.820387840270996
    5. 's' → logprob: -7.070387840270996
    6. '_' → logprob: -7.320387840270996
    7. ' ' → logprob: -7.445387840270996
    8. ':' → logprob: -7.820387840270996
    9. ' s' → logprob: -8.070387840270996
    10. 'b' → logprob: -8.195387840270996

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005173631943762302
    2. ':int' → logprob: -5.630173683166504
    3. ':x' → logprob: -6.505173683166504
    4. ':void' → logprob: -10.380173683166504
    5. ':list' → logprob: -11.130173683166504
    6. ' :' → logprob: -11.630173683166504
    7. ':n' → logprob: -13.005173683166504
    8. ':
' → logprob: -13.255173683166504
    9. ':return' → logprob: -13.380173683166504
    10. ':str' → logprob: -13.755173683166504

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23891665041446686
    2. 'int' → logprob: -1.6139166355133057
    3. ' x' → logprob: -4.488916873931885
    4. 'x' → logprob: -6.863916873931885
    5. '(int' → logprob: -7.738916873931885
    6. ' ' → logprob: -8.238916397094727
    7. '[int' → logprob: -9.613916397094727
    8. ' max' → logprob: -9.738916397094727
    9. ' (' → logprob: -9.863916397094727
    10. ' ord' → logprob: -9.988916397094727

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5232492685317993
    2. '(' → logprob: -0.8982492685317993
    3. 'x' → logprob: -9.523249626159668
    4. '(input' → logprob: -11.148249626159668
    5. '()' → logprob: -11.898249626159668
    6. 's' → logprob: -11.898249626159668
    7. ' (' → logprob: -12.023249626159668
    8. '1' → logprob: -12.523249626159668
    9. '(
' → logprob: -12.773249626159668
    10. '((' → logprob: -13.023249626159668

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002258277963846922
    2. '(x' → logprob: -9.250226020812988
    3. '(' → logprob: -9.375226020812988
    4. ' )' → logprob: -11.125226020812988
    5. '),' → logprob: -11.250226020812988
    6. ')x' → logprob: -12.250226020812988
    7. '))' → logprob: -13.250226020812988
    8. '[' → logprob: -13.375226020812988
    9. '.strip' → logprob: -13.500226020812988
    10. 's' → logprob: -13.875226020812988

Token 49: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017994942143559456
    2. '(input' → logprob: -5.0179948806762695
    3. 'input' → logprob: -6.1429948806762695
    4. 's' → logprob: -6.5179948806762695
    5. '(x' → logprob: -6.8929948806762695
    6. '_' → logprob: -7.2679948806762695
    7. '0' → logprob: -7.7679948806762695
    8. ')' → logprob: -8.14299488067627
    9. '```' → logprob: -8.14299488067627
    10. 'def' → logprob: -8.14299488067627

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '0' → logprob: -15.879620552062988
    4. '<|end|>' → logprob: -16.629619598388672
    5. ' ' → logprob: -17.254619598388672
    6. '	' → logprob: -17.629619598388672
    7. '   ' → logprob: -18.379619598388672
    8. '198' → logprob: -18.504619598388672
    9. '2' → logprob: -18.567119598388672
    10. '```' → logprob: -18.567119598388672

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '0' → logprob: -18.000009536743164
    4. '<|end|>' → logprob: -19.000009536743164
    5. '2' → logprob: -19.625009536743164
    6. '  ' → logprob: -20.250009536743164
    7. '```' → logprob: -20.312509536743164
    8. 'int' → logprob: -20.625009536743164
    9. '`' → logprob: -20.750009536743164
    10. '﻿' → logprob: -20.875009536743164

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04545510560274124
    2. '\n' → logprob: -3.54545521736145
    3. '' → logprob: -5.920454978942871
    4. '#' → logprob: -6.295454978942871
    5. '\' → logprob: -6.295454978942871
    6. '<|end|>' → logprob: -6.295454978942871
    7. 'newline' → logprob: -6.295454978942871
    8. 'n' → logprob: -6.420454978942871
    9. 'def' → logprob: -7.295454978942871
    10. '
' → logprob: -7.545454978942871

Token 53: 'p' (ID: 79)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5926955342292786
    2. 'n' → logprob: -1.4676954746246338
    3. 'input' → logprob: -1.8426954746246338
    4. '\' → logprob: -3.217695474624634
    5. '\n' → logprob: -4.842695713043213
    6. 'data' → logprob: -5.717695713043213
    7. '
' → logprob: -6.342695713043213
    8. 'newline' → logprob: -6.467695713043213
    9. 'import' → logprob: -7.717695713043213
    10. 'for' → logprob: -7.842695713043213

Token 54: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0012430864153429866
    2. 'ar' → logprob: -7.8762431144714355
    3. 'arse' → logprob: -8.626242637634277
    4. 'ass' → logprob: -9.001242637634277
    5. 'ath' → logprob: -9.501242637634277
    6. '=' → logprob: -9.751242637634277
    7. 'ow' → logprob: -10.001242637634277
    8. 'rim' → logprob: -10.001242637634277
    9. 'riv' → logprob: -10.251242637634277
    10. 'rin' → logprob: -10.501242637634277

Token 55: 'D' (ID: 35)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.07871726155281067
    2. ' =' → logprob: -3.3287172317504883
    3. 'r' → logprob: -4.203717231750488
    4. '=' → logprob: -4.703717231750488
    5. 'w' → logprob: -5.328717231750488
    6. 'ower' → logprob: -5.828717231750488
    7. 'o' → logprob: -6.328717231750488
    8. '2' → logprob: -6.953717231750488
    9. 'owl' → logprob: -7.203717231750488
    10. '0' → logprob: -7.453717231750488

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11995773762464523
    2. '=' → logprob: -2.244957685470581
    3. 'ef' → logprob: -5.99495792388916
    4. '=[]' → logprob: -6.86995792388916
    5. 'array' → logprob: -6.99495792388916
    6. '_array' → logprob: -7.86995792388916
    7. 'ex' → logprob: -8.61995792388916
    8. '_' → logprob: -8.74495792388916
    9. ' ' → logprob: -8.99495792388916
    10. 'ist' → logprob: -9.11995792388916

Token 57: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09002119302749634
    2. ' lambda' → logprob: -2.9650211334228516
    3. '(lambda' → logprob: -3.7150211334228516
    4. '[]' → logprob: -4.840021133422852
    5. '[' → logprob: -6.590021133422852
    6. 'list' → logprob: -7.465021133422852
    7. ' []' → logprob: -9.715021133422852
    8. '=lambda' → logprob: -9.715021133422852
    9. 'print' → logprob: -10.090021133422852
    10. ' [' → logprob: -10.340021133422852

Token 58: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5459946990013123
    2. '(lambda' → logprob: -2.045994758605957
    3. ' x' → logprob: -2.545994758605957
    4. 'lambda' → logprob: -2.545994758605957
    5. '[]' → logprob: -3.670994758605957
    6. '<|end|>' → logprob: -3.670994758605957
    7. '[' → logprob: -4.170994758605957
    8. ' (' → logprob: -4.170994758605957
    9. 'x' → logprob: -4.170994758605957
    10. ' [' → logprob: -4.795994758605957

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048199839890003204
    2. ',' → logprob: -3.4231998920440674
    3. ' :' → logprob: -4.423199653625488
    4. ',x' → logprob: -6.798199653625488
    5. ':x' → logprob: -7.798199653625488
    6. ':[' → logprob: -8.423199653625488
    7. 'x' → logprob: -8.548199653625488
    8. '[' → logprob: -8.798199653625488
    9. ',:' → logprob: -9.048199653625488
    10. ' ,' → logprob: -9.548199653625488

Token 60: ' print' (ID: 2123)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.8251386284828186
    2. '[(' → logprob: -2.075138568878174
    3. 'list' → logprob: -2.075138568878174
    4. '(x' → logprob: -2.575138568878174
    5. '[' → logprob: -2.700138568878174
    6. ' [' → logprob: -3.075138568878174
    7. ' list' → logprob: -3.700138568878174
    8. 'print' → logprob: -3.825138568878174
    9. ' [(' → logprob: -3.825138568878174
    10. '[[' → logprob: -4.325138568878174

Token 61: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.2961731255054474
    2. '(' → logprob: -1.421173095703125
    3. '(x' → logprob: -4.421173095703125
    4. '('' → logprob: -6.921173095703125
    5. '((' → logprob: -7.296173095703125
    6. '(list' → logprob: -8.046173095703125
    7. '(tuple' → logprob: -8.296173095703125
    8. '([' → logprob: -8.546173095703125
    9. '(*(' → logprob: -8.796173095703125
    10. '("("' → logprob: -9.171173095703125

Token 62: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002531664213165641
    2. '['' → logprob: -7.1275315284729
    3. 'map' → logprob: -7.1275315284729
    4. '[' → logprob: -7.6275315284729
    5. '[x' → logprob: -9.002532005310059
    6. '["' → logprob: -9.127532005310059
    7. '(x' → logprob: -9.252532005310059
    8. '('' → logprob: -9.877532005310059
    9. '[*' → logprob: -11.877532005310059
    10. ' x' → logprob: -12.002532005310059

Token 63: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767806172370911
    2. ',' → logprob: -0.8267806172370911
    3. '[' → logprob: -7.701780796051025
    4. ' ,' → logprob: -9.826780319213867
    5. '(),' → logprob: -10.076780319213867
    6. '[],' → logprob: -10.576780319213867
    7. '))' → logprob: -10.701780319213867
    8. '2' → logprob: -10.701780319213867
    9. '),' → logprob: -10.951780319213867
    10. ',x' → logprob: -11.201780319213867

Token 64: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00024715426843613386
    2. ' sep' → logprob: -8.50024700164795
    3. 'se' → logprob: -10.12524700164795
    4. ')' → logprob: -13.00024700164795
    5. 'end' → logprob: -14.37524700164795
    6. 'separator' → logprob: -15.25024700164795
    7. ' ' → logprob: -15.50024700164795
    8. '*' → logprob: -15.87524700164795
    9. '2' → logprob: -16.500247955322266
    10. '  ' → logprob: -17.625247955322266

Token 65: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.5539220571517944
    2. '=' → logprob: -1.5539220571517944
    3. '='\' → logprob: -1.5539220571517944
    4. '="\' → logprob: -6.428922176361084
    5. '="' → logprob: -7.553922176361084
    6. '=\' → logprob: -9.178921699523926
    7. '=',' → logprob: -9.303921699523926
    8. ''' → logprob: -10.178921699523926
    9. '=''' → logprob: -10.178921699523926
    10. '=
' → logprob: -11.053921699523926

Token 66: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005362298339605331
    2. ' ' → logprob: -5.255362510681152
    3. ' n' → logprob: -9.505362510681152
    4. '\n' → logprob: -10.630362510681152
    5. ' \' → logprob: -11.255362510681152
    6. 's' → logprob: -12.505362510681152
    7. '
' → logprob: -12.630362510681152
    8. 'r' → logprob: -13.380362510681152
    9. ' 
' → logprob: -13.505362510681152
    10. '  ' → logprob: -13.880362510681152

Token 67: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014976135455071926
    2. ')' → logprob: -4.2649760246276855
    3. ')")' → logprob: -7.1399760246276855
    4. ')"' → logprob: -11.639976501464844
    5. ' )' → logprob: -12.139976501464844
    6. ' ")' → logprob: -13.639976501464844
    7. '"' → logprob: -13.889976501464844
    8. '}")' → logprob: -14.014976501464844
    9. '")
' → logprob: -14.139976501464844
    10. '')' → logprob: -14.514976501464844

Token 68: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3403022885322571
    2. 'n' → logprob: -1.5903022289276123
    3. '\n' → logprob: -2.8403022289276123
    4. '

' → logprob: -4.215302467346191
    5. '\' → logprob: -4.965302467346191
    6. 'def' → logprob: -6.965302467346191
    7. 'input' → logprob: -6.965302467346191
    8. '' → logprob: -7.090302467346191
    9. 'd' → logprob: -7.840302467346191
    10. '
' → logprob: -7.965302467346191

Token 69: ' II' (ID: 9839)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.33736348152160645
    2. ' dfs' → logprob: -1.9623634815216064
    3. ' solve' → logprob: -1.9623634815216064
    4. 'solve' → logprob: -6.462363243103027
    5. ' bfs' → logprob: -6.962363243103027
    6. ' input' → logprob: -7.462363243103027
    7. ' ' → logprob: -7.962363243103027
    8. 'dfs' → logprob: -7.962363243103027
    9. 'main' → logprob: -8.212363243103027
    10. ' read' → logprob: -8.212363243103027

Token 70: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00437398673966527
    2. '()' → logprob: -5.504374027252197
    3. ' ():' → logprob: -8.254373550415039
    4. ' ()' → logprob: -10.504373550415039
    5. '():
' → logprob: -12.129373550415039
    6. '(' → logprob: -13.379373550415039
    7. '()*' → logprob: -15.379373550415039
    8. '().' → logprob: -15.504373550415039
    9. '(),' → logprob: -15.754373550415039
    10. '(input' → logprob: -16.25437355041504

Token 71: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.013535698875784874
    2. ' int' → logprob: -5.138535499572754
    3. 'return' → logprob: -5.263535499572754
    4. 'int' → logprob: -6.263535499572754
    5. '   ' → logprob: -8.138535499572754
    6. ' ' → logprob: -8.888535499572754
    7. ' ' → logprob: -10.263535499572754
    8. '    ' → logprob: -11.388535499572754
    9. '	return' → logprob: -11.763535499572754
    10. ' map' → logprob: -12.513535499572754

Token 72: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24165910482406616
    2. ' int' → logprob: -1.616659164428711
    3. ' map' → logprob: -4.741659164428711
    4. 'map' → logprob: -5.866659164428711
    5. 'input' → logprob: -6.116659164428711
    6. ' input' → logprob: -6.116659164428711
    7. ' list' → logprob: -10.241659164428711
    8. ' ' → logprob: -10.491659164428711
    9. '<int' → logprob: -10.491659164428711
    10. 'list' → logprob: -10.991659164428711

Token 73: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0004191138141322881
    2. '(' → logprob: -7.8754191398620605
    3. '(sys' → logprob: -10.375418663024902
    4. 'input' → logprob: -12.250418663024902
    5. '()' → logprob: -14.000418663024902
    6. '(int' → logprob: -14.750418663024902
    7. '(stdin' → logprob: -15.000418663024902
    8. '((' → logprob: -15.375418663024902
    9. ' (' → logprob: -15.500418663024902
    10. '(next' → logprob: -15.750418663024902

Token 74: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.1517960956552997e-05
    2. 'stdin' → logprob: -11.625011444091797
    3. '.readline' → logprob: -13.375011444091797
    4. '.' → logprob: -14.375011444091797
    5. '(stdin' → logprob: -15.500011444091797
    6. '.argv' → logprob: -16.375011444091797
    7. ' stdin' → logprob: -17.375011444091797
    8. '.stdout' → logprob: -18.375011444091797
    9. '.std' → logprob: -19.750011444091797
    10. '.st' → logprob: -20.500011444091797

Token 75: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.625011444091797
    3. ' readline' → logprob: -13.000011444091797
    4. '.read' → logprob: -15.375011444091797
    5. '.stdin' → logprob: -15.625011444091797
    6. '().' → logprob: -17.125011444091797
    7. 'read' → logprob: -17.500011444091797
    8. ').' → logprob: -18.750011444091797
    9. ' .' → logprob: -18.875011444091797
    10. '.readlines' → logprob: -19.375011444091797

Token 76: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3890405595302582
    2. '().' → logprob: -1.1390405893325806
    3. '()' → logprob: -6.139040470123291
    4. ' ())' → logprob: -12.38904094696045
    5. '(' → logprob: -13.38904094696045
    6. ')' → logprob: -13.51404094696045
    7. '();)' → logprob: -13.76404094696045
    8. '()))' → logprob: -14.88904094696045
    9. '())
' → logprob: -14.88904094696045
    10. '()]' → logprob: -14.88904094696045

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.756989700486884e-05
    2. '()' → logprob: -10.37508773803711
    3. ' def' → logprob: -10.37508773803711
    4. '<|end|>' → logprob: -11.25008773803711
    5. '
' → logprob: -12.37508773803711
    6. '\' → logprob: -13.00008773803711
    7. '<|end|>' → logprob: -13.87508773803711
    8. '()\' → logprob: -14.25008773803711
    9. '[]' → logprob: -14.37508773803711
    10. 'ndef' → logprob: -14.87508773803711

Token 78: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.4695456326007843
    2. 'LI' → logprob: -1.219545602798462
    3. 'LS' → logprob: -3.594545602798462
    4. ' MI' → logprob: -3.719545602798462
    5. 'MIS' → logprob: -4.719545841217041
    6. 'IS' → logprob: -5.219545841217041
    7. ' LI' → logprob: -5.969545841217041
    8. 'M' → logprob: -5.969545841217041
    9. 'L' → logprob: -6.094545841217041
    10. 'S' → logprob: -6.219545841217041

Token 79: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015494590625166893
    2. '()' → logprob: -4.7654948234558105
    3. 'n' → logprob: -5.7654948234558105
    4. 'N' → logprob: -7.2654948234558105
    5. 'st' → logprob: -7.5154948234558105
    6. 'A' → logprob: -7.5154948234558105
    7. 'nit' → logprob: -7.7654948234558105
    8. 'ST' → logprob: -8.265494346618652
    9. 'S' → logprob: -8.640494346618652
    10. '():
' → logprob: -9.390494346618652

Token 80: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6812012195587158
    2. ' map' → logprob: -1.1812012195587158
    3. ' return' → logprob: -2.056201219558716
    4. 'list' → logprob: -3.306201219558716
    5. 'map' → logprob: -4.306200981140137
    6. 'return' → logprob: -4.806200981140137
    7. ' tuple' → logprob: -7.931200981140137
    8. ' [' → logprob: -9.056200981140137
    9. ' ' → logprob: -9.181200981140137
    10. ' lambda' → logprob: -9.306200981140137

Token 81: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8952028155326843
    2. 'map' → logprob: -1.020202875137329
    3. 'list' → logprob: -1.895202875137329
    4. ' list' → logprob: -2.520202875137329
    5. '[' → logprob: -9.02020263671875
    6. '	map' → logprob: -10.39520263671875
    7. '(map' → logprob: -10.89520263671875
    8. 'tuple' → logprob: -11.27020263671875
    9. ' tuple' → logprob: -11.77020263671875
    10. ' [' → logprob: -12.02020263671875

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00035143180866725743
    2. '(' → logprob: -8.000351905822754
    3. 'int' → logprob: -11.375351905822754
    4. '(lambda' → logprob: -13.125351905822754
    5. '<int' → logprob: -14.000351905822754
    6. '=int' → logprob: -14.375351905822754
    7. '[int' → logprob: -15.000351905822754
    8. '(str' → logprob: -15.000351905822754
    9. ' (' → logprob: -15.375351905822754
    10. ' int' → logprob: -16.500350952148438

Token 83: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.020805558189749718
    2. ',' → logprob: -4.020805358886719
    3. 'sys' → logprob: -6.270805358886719
    4. ' (' → logprob: -8.020805358886719
    5. '=sys' → logprob: -8.645805358886719
    6. ',(' → logprob: -8.895805358886719
    7. ' sys' → logprob: -10.395805358886719
    8. ')' → logprob: -10.645805358886719
    9. ' ,' → logprob: -10.645805358886719
    10. '(' → logprob: -10.645805358886719

Token 84: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03365376591682434
    2. ' sys' → logprob: -3.408653736114502
    3. ' ' → logprob: -13.28365421295166
    4. '(sys' → logprob: -13.28365421295166
    5. '	sys' → logprob: -13.28365421295166
    6. '   ' → logprob: -13.90865421295166
    7. '  ' → logprob: -14.40865421295166
    8. '=sys' → logprob: -14.65865421295166
    9. ')' → logprob: -14.78365421295166
    10. 'system' → logprob: -15.28365421295166

Token 85: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02330802194774151
    2. 'stdin' → logprob: -3.773308038711548
    3. '(stdin' → logprob: -9.898307800292969
    4. '.' → logprob: -12.023307800292969
    5. '.stdout' → logprob: -12.898307800292969
    6. ' stdin' → logprob: -12.898307800292969
    7. '.readline' → logprob: -14.773307800292969
    8. 'in' → logprob: -14.898307800292969
    9. ' .' → logprob: -16.27330780029297
    10. '.stderr' → logprob: -16.52330780029297

Token 86: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02867887355387211
    2. '().' → logprob: -3.6536788940429688
    3. 'read' → logprob: -6.778678894042969
    4. '())' → logprob: -7.528678894042969
    5. '()' → logprob: -8.028678894042969
    6. ')' → logprob: -8.778678894042969
    7. ' readline' → logprob: -9.153678894042969
    8. 'line' → logprob: -10.153678894042969
    9. '(stdin' → logprob: -10.903678894042969
    10. '.' → logprob: -11.153678894042969

Token 87: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013606253080070019
    2. '())' → logprob: -4.513606071472168
    3. '()' → logprob: -6.138606071472168
    4. '.readline' → logprob: -8.138606071472168
    5. ')' → logprob: -9.513606071472168
    6. 'line' → logprob: -11.513606071472168
    7. ' ().' → logprob: -12.013606071472168
    8. ' ())' → logprob: -12.513606071472168
    9. ' ()' → logprob: -13.263606071472168
    10. '()
' → logprob: -13.388606071472168

Token 88: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.006492489017546177
    2. 'strip' → logprob: -5.881492614746094
    3. 'split' → logprob: -6.131492614746094
    4. 'rstrip' → logprob: -7.006492614746094
    5. ')' → logprob: -8.131492614746094
    6. '.readline' → logprob: -8.381492614746094
    7. ' readline' → logprob: -9.506492614746094
    8. ' ' → logprob: -13.881492614746094
    9. 'reader' → logprob: -14.256492614746094
    10. '())' → logprob: -14.881492614746094

Token 89: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0643223449587822
    2. ')' → logprob: -2.9393222332000732
    3. '()' → logprob: -4.689322471618652
    4. '())
' → logprob: -8.814322471618652
    5. ' ())' → logprob: -11.189322471618652
    6. '))' → logprob: -11.564322471618652
    7. '(' → logprob: -11.939322471618652
    8. '()
' → logprob: -12.064322471618652
    9. '()))' → logprob: -12.189322471618652
    10. ')
' → logprob: -13.314322471618652

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5857374668121338
    2. 'd' → logprob: -0.8357374668121338
    3. '\' → logprob: -4.960737228393555
    4. 'n' → logprob: -7.585737228393555
    5. '\n' → logprob: -7.585737228393555
    6. '
' → logprob: -7.835737228393555
    7. 'D' → logprob: -8.085737228393555
    8. '#' → logprob: -8.335737228393555
    9. '' → logprob: -8.835737228393555
    10. ' 
' → logprob: -9.335737228393555

Token 91: ' MI' (ID: 32682)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00543201994150877
    2. 'L' → logprob: -6.00543212890625
    3. ' LI' → logprob: -6.63043212890625
    4. 'LS' → logprob: -7.13043212890625
    5. 'I' → logprob: -8.00543212890625
    6. 'MI' → logprob: -8.88043212890625
    7. 'SI' → logprob: -9.00543212890625
    8. 'input' → logprob: -9.88043212890625
    9. 'LM' → logprob: -10.50543212890625
    10. 'S' → logprob: -10.50543212890625

Token 92: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4757963716983795
    2. '():' → logprob: -0.9757963418960571
    3. '(' → logprob: -8.100796699523926
    4. '())' → logprob: -8.225796699523926
    5. '():
' → logprob: -8.475796699523926
    6. '()>' → logprob: -9.100796699523926
    7. '().' → logprob: -9.475796699523926
    8. '()*' → logprob: -9.475796699523926
    9. '2' → logprob: -9.600796699523926
    10. ')' → logprob: -9.725796699523926

Token 93: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006490522064268589
    2. '()' → logprob: -7.3756489753723145
    3. '):' → logprob: -11.500649452209473
    4. '():
' → logprob: -11.875649452209473
    5. ' ():' → logprob: -13.500649452209473
    6. ':' → logprob: -14.125649452209473
    7. ')' → logprob: -14.125649452209473
    8. '0' → logprob: -14.500649452209473
    9. '(' → logprob: -14.625649452209473
    10. '()>' → logprob: -15.250649452209473

Token 94: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4988875985145569
    2. ' ()' → logprob: -1.623887538909912
    3. '()' → logprob: -1.873887538909912
    4. '():' → logprob: -3.748887538909912
    5. 'return' → logprob: -4.498887538909912
    6. ' ():' → logprob: -5.873887538909912
    7. ' lambda' → logprob: -5.998887538909912
    8. ' ' → logprob: -6.748887538909912
    9. ' (' → logprob: -7.873887538909912
    10. ':' → logprob: -8.74888801574707

Token 95: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5236818790435791
    2. ' map' → logprob: -0.8986818790435791
    3. '(map' → logprob: -8.398681640625
    4. 'int' → logprob: -8.648681640625
    5. 'm' → logprob: -10.023681640625
    6. ' int' → logprob: -10.648681640625
    7. '	map' → logprob: -10.898681640625
    8. ' ' → logprob: -11.273681640625
    9. '[' → logprob: -11.273681640625
    10. '(int' → logprob: -11.523681640625

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.035362608730793
    2. '(lambda' → logprob: -3.410362720489502
    3. 'int' → logprob: -6.785362720489502
    4. '(' → logprob: -7.660362720489502
    5. 'lambda' → logprob: -9.160362243652344
    6. '<int' → logprob: -13.410362243652344
    7. '1' → logprob: -13.660362243652344
    8. ' int' → logprob: -13.910362243652344
    9. '(in' → logprob: -14.285362243652344
    10. 's' → logprob: -14.285362243652344

Token 97: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18187174201011658
    2. '(sys' → logprob: -1.806871771812439
    3. '(' → logprob: -7.1818718910217285
    4. '(x' → logprob: -7.8068718910217285
    5. ' ,' → logprob: -7.9318718910217285
    6. ',s' → logprob: -8.30687141418457
    7. ',(' → logprob: -9.18187141418457
    8. ',x' → logprob: -9.80687141418457
    9. '=sys' → logprob: -9.93187141418457
    10. 's' → logprob: -10.05687141418457

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01636512763798237
    2. '(sys' → logprob: -4.266365051269531
    3. ' ,' → logprob: -6.391365051269531
    4. ')' → logprob: -8.391365051269531
    5. 'sys' → logprob: -9.516365051269531
    6. ',s' → logprob: -9.516365051269531
    7. ',int' → logprob: -10.516365051269531
    8. '=sys' → logprob: -10.641365051269531
    9. ',x' → logprob: -10.891365051269531
    10. 's' → logprob: -11.266365051269531

Token 99: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0021981943864375353
    2. ' sys' → logprob: -6.127198219299316
    3. '(sys' → logprob: -11.502198219299316
    4. ')' → logprob: -13.627198219299316
    5. '=sys' → logprob: -14.127198219299316
    6. ' ' → logprob: -15.127198219299316
    7. '	sys' → logprob: -15.127198219299316
    8. 'system' → logprob: -15.502198219299316
    9. 's' → logprob: -16.377197265625
    10. 'input' → logprob: -16.502197265625

Token 100: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.11252322793006897
    2. 'stdin' → logprob: -2.362523317337036
    3. '(stdin' → logprob: -4.987523078918457
    4. '.readline' → logprob: -5.737523078918457
    5. '().' → logprob: -6.237523078918457
    6. 'sys' → logprob: -9.237523078918457
    7. '())' → logprob: -9.987523078918457
    8. '.stdout' → logprob: -10.737523078918457
    9. 'in' → logprob: -11.362523078918457
    10. '()' → logprob: -11.487523078918457

Token 101: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7041211128234863
    2. '())' → logprob: -0.8291211128234863
    3. '().' → logprob: -2.7041211128234863
    4. ')' → logprob: -6.954121112823486
    5. '()' → logprob: -7.079121112823486
    6. '.readlines' → logprob: -9.579120635986328
    7. '())
' → logprob: -10.204120635986328
    8. '().__' → logprob: -10.454120635986328
    9. 'split' → logprob: -10.454120635986328
    10. 'stdin' → logprob: -10.829120635986328

Token 102: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005302758072502911
    2. '())' → logprob: -7.750530242919922
    3. '()' → logprob: -9.250530242919922
    4. ' ().' → logprob: -13.250530242919922
    5. '.readline' → logprob: -14.000530242919922
    6. ')' → logprob: -14.625530242919922
    7. ' ())' → logprob: -16.000530242919922
    8. '()))' → logprob: -16.625530242919922
    9. ' ()' → logprob: -16.750530242919922
    10. '());' → logprob: -17.000530242919922

Token 103: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011955865193158388
    2. 'read' → logprob: -6.876195430755615
    3. 'strip' → logprob: -9.501195907592773
    4. 'rstrip' → logprob: -9.626195907592773
    5. ' split' → logprob: -11.126195907592773
    6. ')' → logprob: -12.876195907592773
    7. 'spl' → logprob: -13.001195907592773
    8. 'decode' → logprob: -14.501195907592773
    9. 's' → logprob: -14.626195907592773
    10. ' readline' → logprob: -14.751195907592773

Token 104: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.397903174161911
    2. ')' → logprob: -1.1479032039642334
    3. '()' → logprob: -4.522902965545654
    4. '))' → logprob: -10.022903442382812
    5. '())
' → logprob: -10.272903442382812
    6. '()
' → logprob: -11.772903442382812
    7. ' )' → logprob: -11.897903442382812
    8. ')
' → logprob: -12.272903442382812
    9. ' ())' → logprob: -12.272903442382812
    10. '()))' → logprob: -12.647903442382812

Token 105: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09242578595876694
    2. 'def' → logprob: -2.84242582321167
    3. '\' → logprob: -3.59242582321167
    4. '\n' → logprob: -7.34242582321167
    5. '
' → logprob: -7.59242582321167
    6. 'n' → logprob: -8.092425346374512
    7. 'D' → logprob: -8.092425346374512
    8. ' 
' → logprob: -9.217425346374512
    9. '' → logprob: -9.217425346374512
    10. 'i' → logprob: -9.467425346374512

Token 106: ' MF' (ID: 72127)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.2219473421573639
    2. 'SI' → logprob: -2.596947431564331
    3. 'I' → logprob: -2.721947431564331
    4. 'LS' → logprob: -3.846947431564331
    5. 'S' → logprob: -4.096947193145752
    6. 'L' → logprob: -4.596947193145752
    7. ' LI' → logprob: -4.971947193145752
    8. 'IS' → logprob: -6.471947193145752
    9. ' LS' → logprob: -7.221947193145752
    10. ' SI' → logprob: -7.471947193145752

Token 107: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00014609156642109156
    2. '()' → logprob: -9.87514591217041
    3. 'loat' → logprob: -9.87514591217041
    4. '():
' → logprob: -10.50014591217041
    5. ' ():' → logprob: -11.87514591217041
    6. 'lo' → logprob: -12.50014591217041
    7. 'C' → logprob: -13.62514591217041
    8. 'LOAT' → logprob: -14.87514591217041
    9. '():
' → logprob: -15.25014591217041
    10. 'loor' → logprob: -15.50014591217041

Token 108: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.053359195590019226
    2. 'return' → logprob: -3.053359270095825
    3. ' lambda' → logprob: -5.428359031677246
    4. 'lambda' → logprob: -8.178359031677246
    5. ' map' → logprob: -9.928359031677246
    6. ' ' → logprob: -10.928359031677246
    7. ' float' → logprob: -11.803359031677246
    8. ')' → logprob: -13.053359031677246
    9. ' lam' → logprob: -13.178359031677246
    10. 'float' → logprob: -13.303359031677246

Token 109: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.019792070612311363
    2. 'float' → logprob: -4.519792079925537
    3. ' map' → logprob: -4.769792079925537
    4. 'list' → logprob: -8.894791603088379
    5. ' float' → logprob: -10.644791603088379
    6. 'lambda' → logprob: -10.769791603088379
    7. 'm' → logprob: -11.394791603088379
    8. 'flo' → logprob: -12.019791603088379
    9. '   ' → logprob: -12.269791603088379
    10. '	map' → logprob: -12.394791603088379

Token 110: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -9.968312951968983e-06
    2. 'float' → logprob: -12.000009536743164
    3. '(' → logprob: -12.750009536743164
    4. '=float' → logprob: -15.000009536743164
    5. '(int' → logprob: -15.500009536743164
    6. '<float' → logprob: -16.125009536743164
    7. ',float' → logprob: -16.625009536743164
    8. '(lambda' → logprob: -17.625009536743164
    9. '(f' → logprob: -18.000009536743164
    10. ' (' → logprob: -18.250009536743164

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006371428607963026
    2. '(sys' → logprob: -8.00063705444336
    3. '(),' → logprob: -8.37563705444336
    4. ',s' → logprob: -11.25063705444336
    5. ',float' → logprob: -11.37563705444336
    6. ' ,' → logprob: -11.50063705444336
    7. '=sys' → logprob: -11.50063705444336
    8. 'sys' → logprob: -11.62563705444336
    9. ')' → logprob: -11.75063705444336
    10. ',System' → logprob: -12.37563705444336

Token 112: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0010220900876447558
    2. '(sys' → logprob: -7.376021862030029
    3. ' sys' → logprob: -7.876021862030029
    4. ')' → logprob: -11.251022338867188
    5. '=sys' → logprob: -13.376022338867188
    6. '	sys' → logprob: -14.251022338867188
    7. 's' → logprob: -15.501022338867188
    8. 'system' → logprob: -15.751022338867188
    9. '<|end|>' → logprob: -17.376022338867188
    10. '_sys' → logprob: -17.376022338867188

Token 113: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.1318875446449965e-05
    2. 'stdin' → logprob: -10.625041007995605
    3. '.readline' → logprob: -11.750041007995605
    4. '.stdout' → logprob: -12.125041007995605
    5. '.' → logprob: -13.125041007995605
    6. '(stdin' → logprob: -13.625041007995605
    7. '.argv' → logprob: -15.750041007995605
    8. '.stderr' → logprob: -16.500041961669922
    9. ' stdin' → logprob: -16.625041961669922
    10. ' .' → logprob: -16.750041961669922

Token 114: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.980854959692806e-05
    2. '().' → logprob: -10.000069618225098
    3. 'read' → logprob: -12.125069618225098
    4. 'stdin' → logprob: -12.375069618225098
    5. '()' → logprob: -12.500069618225098
    6. '.stdin' → logprob: -12.750069618225098
    7. '())' → logprob: -13.250069618225098
    8. '.readlines' → logprob: -13.250069618225098
    9. '```' → logprob: -13.375069618225098
    10. ' readline' → logprob: -13.625069618225098

Token 115: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001643165247514844
    2. '())' → logprob: -6.501643180847168
    3. '()' → logprob: -8.876643180847168
    4. ')' → logprob: -14.751643180847168
    5. '.readline' → logprob: -15.251643180847168
    6. ' ().' → logprob: -15.876643180847168
    7. '())
' → logprob: -16.12664222717285
    8. ' ())' → logprob: -16.50164222717285
    9. '()[' → logprob: -16.87664222717285
    10. '()))' → logprob: -16.87664222717285

Token 116: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011063982965424657
    2. 'read' → logprob: -8.001106262207031
    3. 'strip' → logprob: -8.001106262207031
    4. ')' → logprob: -8.251106262207031
    5. 'rstrip' → logprob: -8.751106262207031
    6. '())' → logprob: -12.501106262207031
    7. '(split' → logprob: -12.751106262207031
    8. ' split' → logprob: -12.751106262207031
    9. 'decode' → logprob: -13.001106262207031
    10. ')>' → logprob: -13.751106262207031

Token 117: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14297102391719818
    2. '())' → logprob: -2.1429710388183594
    3. '()' → logprob: -4.142971038818359
    4. ')
' → logprob: -11.39297103881836
    5. ' )' → logprob: -11.51797103881836
    6. '())
' → logprob: -12.01797103881836
    7. '()
' → logprob: -12.64297103881836
    8. '(' → logprob: -13.01797103881836
    9. ' ())' → logprob: -13.01797103881836
    10. '))' → logprob: -13.76797103881836

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039028625935316086
    2. 'd' → logprob: -3.2890286445617676
    3. '\' → logprob: -7.164028644561768
    4. '```' → logprob: -9.66402816772461
    5. 'de' → logprob: -10.66402816772461
    6. 'n' → logprob: -10.91402816772461
    7. '\n' → logprob: -11.03902816772461
    8. '
' → logprob: -11.16402816772461
    9. 'ndef' → logprob: -11.28902816772461
    10. 'D' → logprob: -11.41402816772461

Token 119: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.8664542436599731
    2. 'LS' → logprob: -1.1164542436599731
    3. 'S' → logprob: -1.7414542436599731
    4. 'SI' → logprob: -3.9914541244506836
    5. 'input' → logprob: -4.116454124450684
    6. 'L' → logprob: -4.616454124450684
    7. 'I' → logprob: -4.741454124450684
    8. ' LS' → logprob: -4.866454124450684
    9. 'IS' → logprob: -5.241454124450684
    10. ' S' → logprob: -6.241454124450684

Token 120: '():' (ID: 9442)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.45186519622802734
    2. 'st' → logprob: -1.4518651962280273
    3. 'n' → logprob: -3.2018651962280273
    4. '():' → logprob: -3.5768651962280273
    5. 'N' → logprob: -3.7018651962280273
    6. 'ne' → logprob: -3.9518651962280273
    7. '()' → logprob: -4.951865196228027
    8. 'NE' → logprob: -6.451865196228027
    9. 'S' → logprob: -6.951865196228027
    10. 'St' → logprob: -6.951865196228027

Token 121: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.11649967730045319
    2. 'list' → logprob: -2.866499662399292
    3. ' lambda' → logprob: -3.116499662399292
    4. 'lambda' → logprob: -4.741499900817871
    5. ' return' → logprob: -11.366499900817871
    6. 'return' → logprob: -12.241499900817871
    7. ' map' → logprob: -12.741499900817871
    8. ' lamb' → logprob: -12.741499900817871
    9. ' sys' → logprob: -12.991499900817871
    10. '[]' → logprob: -12.991499900817871

Token 122: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.746380237629637e-05
    2. ' list' → logprob: -9.250097274780273
    3. '[list' → logprob: -13.750097274780273
    4. '[' → logprob: -16.000097274780273
    5. 'map' → logprob: -16.750097274780273
    6. '	list' → logprob: -18.250097274780273
    7. 'sys' → logprob: -18.375097274780273
    8. '(list' → logprob: -18.750097274780273
    9. '=list' → logprob: -19.250097274780273
    10. '.list' → logprob: -20.750097274780273

Token 123: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00031055594445206225
    2. '(' → logprob: -8.375310897827148
    3. '(int' → logprob: -9.750310897827148
    4. '(sys' → logprob: -11.125310897827148
    5. 'map' → logprob: -12.750310897827148
    6. '(M' → logprob: -13.375310897827148
    7. '()' → logprob: -14.625310897827148
    8. '(m' → logprob: -14.750310897827148
    9. '(list' → logprob: -15.375310897827148
    10. '(
' → logprob: -16.00031089782715

Token 124: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008617881685495377
    2. 'int' → logprob: -4.758617877960205
    3. '<int' → logprob: -13.633618354797363
    4. '[int' → logprob: -13.758618354797363
    5. '(' → logprob: -14.508618354797363
    6. ' int' → logprob: -15.633618354797363
    7. '=int' → logprob: -16.133617401123047
    8. ':int' → logprob: -16.258617401123047
    9. ']int' → logprob: -16.258617401123047
    10. ',int' → logprob: -16.258617401123047

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34524083137512207
    2. '(sys' → logprob: -1.345240831375122
    3. 'sys' → logprob: -3.470240831375122
    4. ' sys' → logprob: -8.845240592956543
    5. '=sys' → logprob: -9.845240592956543
    6. ',int' → logprob: -10.220240592956543
    7. '	sys' → logprob: -10.470240592956543
    8. '(' → logprob: -10.595240592956543
    9. ' ,' → logprob: -10.720240592956543
    10. ',(' → logprob: -10.845240592956543

Token 126: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.7848862373502925e-05
    2. ' sys' → logprob: -10.500027656555176
    3. '(sys' → logprob: -15.500027656555176
    4. ')' → logprob: -18.125028610229492
    5. 'system' → logprob: -18.125028610229492
    6. 'input' → logprob: -18.375028610229492
    7. '	sys' → logprob: -18.500028610229492
    8. '=sys' → logprob: -19.000028610229492
    9. 'str' → logprob: -19.375028610229492
    10. 'Sys' → logprob: -20.125028610229492

Token 127: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10035277903079987
    2. 'stdin' → logprob: -2.3503527641296387
    3. '(stdin' → logprob: -9.100353240966797
    4. '.readline' → logprob: -10.600353240966797
    5. 'sys' → logprob: -12.350353240966797
    6. ' stdin' → logprob: -12.975353240966797
    7. '=sys' → logprob: -13.600353240966797
    8. '.' → logprob: -13.850353240966797
    9. '.stdout' → logprob: -15.100353240966797
    10. '```' → logprob: -15.600353240966797

Token 128: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.020650850608944893
    2. 'sys' → logprob: -5.145650863647461
    3. '(sys' → logprob: -5.270650863647461
    4. '=sys' → logprob: -5.395650863647461
    5. 'stdin' → logprob: -6.270650863647461
    6. '().' → logprob: -6.270650863647461
    7. '(stdin' → logprob: -7.395650863647461
    8. '.stdin' → logprob: -8.520650863647461
    9. ' readline' → logprob: -9.145650863647461
    10. 'read' → logprob: -9.270650863647461

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.749814019713085e-06
    2. '()' → logprob: -12.875006675720215
    3. '()))' → logprob: -13.375006675720215
    4. '))' → logprob: -13.625006675720215
    5. '.readline' → logprob: -13.875006675720215
    6. ' ().' → logprob: -15.750006675720215
    7. '())' → logprob: -16.50000762939453
    8. ')' → logprob: -17.50000762939453
    9. '.split' → logprob: -17.62500762939453
    10. '.' → logprob: -17.62500762939453

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011940367985516787
    2. 'strip' → logprob: -7.251194000244141
    3. 'rstrip' → logprob: -8.50119400024414
    4. ')' → logprob: -8.62619400024414
    5. 'read' → logprob: -10.12619400024414
    6. '().' → logprob: -10.50119400024414
    7. '())' → logprob: -10.87619400024414
    8. ' split' → logprob: -12.25119400024414
    9. 'spl' → logprob: -12.37619400024414
    10. '()' → logprob: -13.25119400024414

Token 131: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2557389438152313
    2. '))' → logprob: -1.5057389736175537
    3. '()' → logprob: -5.880738735198975
    4. '()))
' → logprob: -7.130738735198975
    5. '())' → logprob: -8.880739212036133
    6. '))
' → logprob: -10.630739212036133
    7. '(' → logprob: -11.005739212036133
    8. ')' → logprob: -11.380739212036133
    9. '()))

' → logprob: -12.130739212036133
    10. ' ))' → logprob: -12.255739212036133

Token 132: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.643152740551159e-05
    2. 'D' → logprob: -10.750036239624023
    3. 'L' → logprob: -12.500036239624023
    4. ' def' → logprob: -13.250036239624023
    5. '[]' → logprob: -13.250036239624023
    6. '()' → logprob: -14.000036239624023
    7. 'I' → logprob: -14.250036239624023
    8. '```' → logprob: -14.250036239624023
    9. 'LS' → logprob: -14.375036239624023
    10. 'd' → logprob: -14.500036239624023

Token 133: ' LI' (ID: 14875)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.049032408744096756
    2. ' LS' → logprob: -3.67403244972229
    3. 'LI' → logprob: -3.92403244972229
    4. 'LF' → logprob: -6.674032211303711
    5. 'L' → logprob: -7.424032211303711
    6. 'LL' → logprob: -8.424032211303711
    7. ' LI' → logprob: -8.674032211303711
    8. ' L' → logprob: -8.799032211303711
    9. ' LF' → logprob: -9.799032211303711
    10. 'S' → logprob: -9.924032211303711

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010032468708232045
    2. '()' → logprob: -9.250100135803223
    3. '():' → logprob: -12.625100135803223
    4. '(' → logprob: -15.375100135803223
    5. '_' → logprob: -16.25010108947754
    6. 'I' → logprob: -16.37510108947754
    7. ' ()' → logprob: -16.50010108947754
    8. '())' → logprob: -16.62510108947754
    9. '```' → logprob: -16.62510108947754
    10. '()]' → logprob: -17.37510108947754

Token 135: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019618207588791847
    2. '()' → logprob: -6.251961708068848
    3. '=' → logprob: -11.126961708068848
    4. ' =' → logprob: -12.126961708068848
    5. '()>' → logprob: -12.251961708068848
    6. '():
' → logprob: -13.126961708068848
    7. '):' → logprob: -13.126961708068848
    8. '(' → logprob: -14.001961708068848
    9. ' ():' → logprob: -14.251961708068848
    10. ':' → logprob: -14.376961708068848

Token 136: ' return' (ID: 622)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.90058833360672
    2. ' lambda' → logprob: -1.5255882740020752
    3. 'list' → logprob: -1.6505882740020752
    4. 'return' → logprob: -2.525588274002075
    5. ' list' → logprob: -2.650588274002075
    6. ' return' → logprob: -3.650588274002075
    7. '=lambda' → logprob: -5.900588512420654
    8. '(lambda' → logprob: -6.025588512420654
    9. 'def' → logprob: -6.775588512420654
    10. '<|end|>' → logprob: -7.650588512420654

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011904643615707755
    2. ' list' → logprob: -6.751190662384033
    3. 'lambda' → logprob: -10.876190185546875
    4. '[list' → logprob: -14.126190185546875
    5. ' lambda' → logprob: -15.376190185546875
    6. 'li' → logprob: -16.126190185546875
    7. '(list' → logprob: -16.126190185546875
    8. '[' → logprob: -16.876190185546875
    9. 'List' → logprob: -17.001190185546875
    10. '	list' → logprob: -17.626190185546875

Token 138: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04132569208741188
    2. '(map' → logprob: -3.291325807571411
    3. '(lambda' → logprob: -5.916325569152832
    4. '(' → logprob: -7.541325569152832
    5. 'int' → logprob: -10.291325569152832
    6. '(list' → logprob: -11.416325569152832
    7. '[int' → logprob: -13.291325569152832
    8. 'map' → logprob: -13.416325569152832
    9. '<int' → logprob: -13.541325569152832
    10. '(func' → logprob: -14.041325569152832

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00033903829171322286
    2. 'int' → logprob: -8.00033950805664
    3. '(lambda' → logprob: -13.12533950805664
    4. '(' → logprob: -14.00033950805664
    5. '[int' → logprob: -15.00033950805664
    6. '<int' → logprob: -15.37533950805664
    7. '=int' → logprob: -16.87533950805664
    8. ' int' → logprob: -17.87533950805664
    9. ',int' → logprob: -18.25033950805664
    10. 'lambda' → logprob: -18.50033950805664

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '(lambda' → logprob: -15.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. ')' → logprob: -15.625000953674316
    5. 'lambda' → logprob: -15.750000953674316
    6. '_)' → logprob: -17.875
    7. '(sys' → logprob: -18.25
    8. 'sys' → logprob: -18.5
    9. 's' → logprob: -18.625
    10. 'int' → logprob: -18.75

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.301394023466855e-05
    2. '(sys' → logprob: -9.750062942504883
    3. 'sys' → logprob: -12.875062942504883
    4. ',s' → logprob: -14.375062942504883
    5. '=sys' → logprob: -14.375062942504883
    6. ' ,' → logprob: -15.125062942504883
    7. ' sys' → logprob: -15.375062942504883
    8. ',map' → logprob: -16.375062942504883
    9. ',input' → logprob: -16.625062942504883
    10. '))' → logprob: -16.875062942504883

Token 142: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.2994620242971e-06
    2. ' sys' → logprob: -12.125008583068848
    3. '(sys' → logprob: -12.875008583068848
    4. ')' → logprob: -16.12500762939453
    5. '=sys' → logprob: -16.12500762939453
    6. '	sys' → logprob: -18.00000762939453
    7. 'lambda' → logprob: -18.62500762939453
    8. '```' → logprob: -19.25000762939453
    9. 'stdin' → logprob: -19.50000762939453
    10. 's' → logprob: -19.62500762939453

Token 143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011839192593470216
    2. '.readline' → logprob: -7.751183986663818
    3. 'stdin' → logprob: -7.751183986663818
    4. '(stdin' → logprob: -8.25118350982666
    5. '().' → logprob: -10.00118350982666
    6. '.stdout' → logprob: -11.75118350982666
    7. '.' → logprob: -13.00118350982666
    8. ' .' → logprob: -13.62618350982666
    9. '.argv' → logprob: -13.75118350982666
    10. '.stderr' → logprob: -14.00118350982666

Token 144: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.028682585805654526
    2. 'stdin' → logprob: -4.528682708740234
    3. '().' → logprob: -5.403682708740234
    4. '.stdin' → logprob: -5.903682708740234
    5. 'split' → logprob: -5.903682708740234
    6. 'read' → logprob: -6.403682708740234
    7. '```' → logprob: -6.403682708740234
    8. 'stdout' → logprob: -7.028682708740234
    9. '.read' → logprob: -7.153682708740234
    10. '))' → logprob: -7.653682708740234

Token 145: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016601867973804474
    2. '()))' → logprob: -4.641602039337158
    3. '))' → logprob: -5.016602039337158
    4. '()))
' → logprob: -9.1416015625
    5. '()' → logprob: -9.6416015625
    6. '.' → logprob: -11.6416015625
    7. '))
' → logprob: -12.0166015625
    8. '()[' → logprob: -12.3916015625
    9. '())' → logprob: -13.7666015625
    10. '()))

' → logprob: -14.0166015625

Token 146: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.6656825866666622e-05
    2. ')' → logprob: -10.87502670288086
    3. ' split' → logprob: -13.12502670288086
    4. '))' → logprob: -13.12502670288086
    5. '(split' → logprob: -13.37502670288086
    6. '())' → logprob: -14.12502670288086
    7. 'read' → logprob: -14.62502670288086
    8. '.split' → logprob: -15.25002670288086
    9. 'strip' → logprob: -15.87502670288086
    10. '()))' → logprob: -16.37502670288086

Token 147: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3905225694179535
    2. '()))' → logprob: -1.1405225992202759
    3. '()' → logprob: -5.640522480010986
    4. '()))
' → logprob: -10.140522956848145
    5. '())' → logprob: -10.515522956848145
    6. ')' → logprob: -11.390522956848145
    7. '))
' → logprob: -11.890522956848145
    8. '(' → logprob: -12.390522956848145
    9. ' ))' → logprob: -12.765522956848145
    10. '()));' → logprob: -14.515522956848145

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007488752016797662
    2. '\' → logprob: -7.875749111175537
    3. 'd' → logprob: -8.625748634338379
    4. '()' → logprob: -10.375748634338379
    5. 'ndef' → logprob: -10.500748634338379
    6. 'D' → logprob: -10.875748634338379
    7. 'n' → logprob: -11.000748634338379
    8. ')' → logprob: -11.125748634338379
    9. '\n' → logprob: -11.125748634338379
    10. '
' → logprob: -11.500748634338379

Token 149: ' LF' (ID: 107653)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.1552562117576599
    2. 'LI' → logprob: -2.5302562713623047
    3. ' LS' → logprob: -3.4052562713623047
    4. 'input' → logprob: -4.905256271362305
    5. 'SI' → logprob: -5.030256271362305
    6. 'S' → logprob: -5.405256271362305
    7. 'L' → logprob: -5.905256271362305
    8. 'LL' → logprob: -6.030256271362305
    9. ' LI' → logprob: -6.405256271362305
    10. ' input' → logprob: -6.530256271362305

Token 150: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008105786982923746
    2. '()' → logprob: -7.125810623168945
    3. ' ():' → logprob: -12.875810623168945
    4. '=' → logprob: -13.875810623168945
    5. '():
' → logprob: -14.000810623168945
    6. '()>' → logprob: -14.125810623168945
    7. ' =' → logprob: -15.250810623168945
    8. ' ()' → logprob: -15.875810623168945
    9. '):' → logprob: -16.250810623168945
    10. '[]' → logprob: -16.875810623168945

Token 151: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01204428169876337
    2. 'lambda' → logprob: -4.762044429779053
    3. ' lambda' → logprob: -6.387044429779053
    4. ')' → logprob: -7.887044429779053
    5. '():' → logprob: -7.887044429779053
    6. 'list' → logprob: -8.012043952941895
    7. ' ()' → logprob: -8.137043952941895
    8. 'return' → logprob: -8.762043952941895
    9. '=lambda' → logprob: -9.637043952941895
    10. '()=>' → logprob: -10.012043952941895

Token 152: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00020354038861114532
    2. ' list' → logprob: -8.500203132629395
    3. 'lambda' → logprob: -17.00020408630371
    4. 'li' → logprob: -19.00020408630371
    5. '(list' → logprob: -19.37520408630371
    6. 'List' → logprob: -20.87520408630371
    7. 'map' → logprob: -21.50020408630371
    8. 'float' → logprob: -22.00020408630371
    9. '	list' → logprob: -22.25020408630371
    10. 'lst' → logprob: -22.62520408630371

Token 153: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00043710620957426727
    2. '(' → logprob: -8.125436782836914
    3. '(float' → logprob: -9.000436782836914
    4. 'map' → logprob: -11.000436782836914
    5. '_map' → logprob: -15.750436782836914
    6. '(lambda' → logprob: -16.000436782836914
    7. ' map' → logprob: -16.000436782836914
    8. '	map' → logprob: -16.375436782836914
    9. ',map' → logprob: -16.375436782836914
    10. '<|end|>' → logprob: -16.750436782836914

Token 154: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.0009170551202259958
    2. 'float' → logprob: -7.000916957855225
    3. '=float' → logprob: -12.875917434692383
    4. '<float' → logprob: -13.625917434692383
    5. '(' → logprob: -13.750917434692383
    6. ',float' → logprob: -14.875917434692383
    7. ' float' → logprob: -15.125917434692383
    8. '	float' → logprob: -16.500917434692383
    9. '```' → logprob: -18.250917434692383
    10. '(lambda' → logprob: -18.375917434692383

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011525685898959637
    2. '(sys' → logprob: -4.511525630950928
    3. ',float' → logprob: -7.761525630950928
    4. 'sys' → logprob: -11.136526107788086
    5. ')' → logprob: -11.511526107788086
    6. '(' → logprob: -11.886526107788086
    7. ',s' → logprob: -12.386526107788086
    8. '(float' → logprob: -12.761526107788086
    9. ',map' → logprob: -13.136526107788086
    10. ' ,' → logprob: -13.136526107788086

Token 156: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00014489953173324466
    2. ' sys' → logprob: -9.000144958496094
    3. 'float' → logprob: -11.375144958496094
    4. '(sys' → logprob: -11.625144958496094
    5. ')' → logprob: -15.125144958496094
    6. '=sys' → logprob: -15.500144958496094
    7. 's' → logprob: -15.750144958496094
    8. '	sys' → logprob: -15.875144958496094
    9. 'system' → logprob: -16.250144958496094
    10. 'lambda' → logprob: -16.500144958496094

Token 157: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2570841610431671
    2. 'stdin' → logprob: -1.6320841312408447
    3. '(stdin' → logprob: -4.007084369659424
    4. 'sys' → logprob: -5.382084369659424
    5. '=sys' → logprob: -5.507084369659424
    6. '(sys' → logprob: -6.132084369659424
    7. '.readline' → logprob: -7.007084369659424
    8. ')' → logprob: -7.632084369659424
    9. '))' → logprob: -8.382083892822266
    10. 'in' → logprob: -8.882083892822266

Token 158: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08446256816387177
    2. '(sys' → logprob: -3.4594626426696777
    3. 'sys' → logprob: -3.5844626426696777
    4. '().' → logprob: -4.334462642669678
    5. '=sys' → logprob: -5.334462642669678
    6. '.stdin' → logprob: -6.709462642669678
    7. '(stdin' → logprob: -7.459462642669678
    8. '()' → logprob: -7.459462642669678
    9. 'stdin' → logprob: -8.20946216583252
    10. '()))' → logprob: -8.45946216583252

Token 159: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.117345684382599e-05
    2. '()' → logprob: -10.875020980834961
    3. '())' → logprob: -14.000020980834961
    4. '()))' → logprob: -14.500020980834961
    5. ')' → logprob: -15.375020980834961
    6. '.' → logprob: -15.625020980834961
    7. '))' → logprob: -15.875020980834961
    8. '()
' → logprob: -16.37502098083496
    9. '.readline' → logprob: -16.62502098083496
    10. ' ().' → logprob: -16.75002098083496

Token 160: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.877503907773644e-05
    2. 'read' → logprob: -9.750099182128906
    3. ')' → logprob: -11.125099182128906
    4. '))' → logprob: -11.500099182128906
    5. '.split' → logprob: -12.500099182128906
    6. 'strip' → logprob: -13.000099182128906
    7. ' split' → logprob: -13.000099182128906
    8. '().' → logprob: -13.375099182128906
    9. '(split' → logprob: -13.375099182128906
    10. '()' → logprob: -13.500099182128906

Token 161: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.21873795986175537
    2. '))' → logprob: -1.7187379598617554
    3. '()' → logprob: -4.468738079071045
    4. '()))
' → logprob: -5.218738079071045
    5. '))
' → logprob: -8.968737602233887
    6. '())' → logprob: -9.468737602233887
    7. '(' → logprob: -10.468737602233887
    8. '()))

' → logprob: -10.468737602233887
    9. ' ))' → logprob: -11.468737602233887
    10. '()))
' → logprob: -11.593737602233887

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005293221911415458
    2. 'd' → logprob: -8.500529289245605
    3. '
' → logprob: -8.625529289245605
    4. 'class' → logprob: -9.625529289245605
    5. 'n' → logprob: -9.750529289245605
    6. 'D' → logprob: -12.375529289245605
    7. 'de' → logprob: -12.625529289245605
    8. 's' → logprob: -13.125529289245605
    9. '\' → logprob: -13.125529289245605
    10. '  
' → logprob: -13.250529289245605

Token 163: ' L' (ID: 451)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.805740237236023
    2. 'input' → logprob: -1.305740237236023
    3. ' input' → logprob: -2.3057403564453125
    4. 'SI' → logprob: -2.6807403564453125
    5. 'LS' → logprob: -3.3057403564453125
    6. 's' → logprob: -3.9307403564453125
    7. 'str' → logprob: -4.0557403564453125
    8. ' S' → logprob: -4.4307403564453125
    9. 'SS' → logprob: -4.6807403564453125
    10. 'SR' → logprob: -5.5557403564453125

Token 164: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.001224870327860117
    2. ' =' → logprob: -7.751224994659424
    3. '=[]' → logprob: -8.876224517822266
    4. 'S' → logprob: -9.001224517822266
    5. 'ambda' → logprob: -9.251224517822266
    6. '=' → logprob: -9.251224517822266
    7. 'IN' → logprob: -9.501224517822266
    8. 'O' → logprob: -10.001224517822266
    9. 'strip' → logprob: -10.001224517822266
    10. '=[]
' → logprob: -10.501224517822266

Token 165: '(rows' (ID: 69648)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014899849193170667
    2. '()' → logprob: -6.626490116119385
    3. '():
' → logprob: -9.626489639282227
    4. '=' → logprob: -9.626489639282227
    5. ' ():' → logprob: -11.626489639282227
    6. ' =' → logprob: -11.626489639282227
    7. '()>' → logprob: -12.501489639282227
    8. '=[]' → logprob: -13.001489639282227
    9. ' ()' → logprob: -13.501489639282227
    10. '(' → logprob: -14.001489639282227

Token 166: '_number' (ID: 11733)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010407903464511037
    2. ',' → logprob: -7.376040935516357
    3. ',n' → logprob: -8.6260404586792
    4. ')' → logprob: -9.0010404586792
    5. '(n' → logprob: -9.8760404586792
    6. ' ):' → logprob: -10.3760404586792
    7. '):
' → logprob: -11.6260404586792
    8. 'n' → logprob: -12.3760404586792
    9. '=' → logprob: -12.5010404586792
    10. '():' → logprob: -12.7510404586792

Token 167: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020947072189301252
    2. ',' → logprob: -6.752094745635986
    3. '):
' → logprob: -7.377094745635986
    4. ')' → logprob: -8.502094268798828
    5. ' ):' → logprob: -9.877094268798828
    6. 'def' → logprob: -11.627094268798828
    7. '(n' → logprob: -11.752094268798828
    8. '):

' → logprob: -12.127094268798828
    9. '=' → logprob: -12.252094268798828
    10. ',n' → logprob: -12.377094268798828

Token 168: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02461390756070614
    2. '   ' → logprob: -4.274613857269287
    3. 'return' → logprob: -4.649613857269287
    4. ' =' → logprob: -8.149614334106445
    5. '	return' → logprob: -8.649614334106445
    6. '[]' → logprob: -8.899614334106445
    7. 'def' → logprob: -9.899614334106445
    8. '[' → logprob: -10.024614334106445
    9. ' def' → logprob: -10.274614334106445
    10. ' [' → logprob: -10.274614334106445

Token 169: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3902362585067749
    2. '[list' → logprob: -1.140236258506775
    3. '[List' → logprob: -6.1402363777160645
    4. '[int' → logprob: -6.8902363777160645
    5. ' [' → logprob: -9.390235900878906
    6. '[line' → logprob: -9.890235900878906
    7. '[str' → logprob: -10.765235900878906
    8. '[input' → logprob: -12.265235900878906
    9. '[array' → logprob: -12.265235900878906
    10. 'list' → logprob: -12.390235900878906

Token 170: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.011089201085269451
    2. 'list' → logprob: -4.511089324951172
    3. ' LI' → logprob: -10.636089324951172
    4. 'li' → logprob: -12.011089324951172
    5. ' list' → logprob: -12.636089324951172
    6. 'LIST' → logprob: -13.011089324951172
    7. 'LL' → logprob: -13.261089324951172
    8. 'List' → logprob: -13.636089324951172
    9. 'Li' → logprob: -13.761089324951172
    10. '[' → logprob: -14.386089324951172

Token 171: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5822400857578032e-05
    2. '()]' → logprob: -10.625025749206543
    3. ' ()' → logprob: -14.625025749206543
    4. '()
' → logprob: -15.125025749206543
    5. '())' → logprob: -15.750025749206543
    6. 'for' → logprob: -16.00002670288086
    7. '（）' → logprob: -16.50002670288086
    8. '(sys' → logprob: -16.62502670288086
    9. '().' → logprob: -16.62502670288086
    10. 'sys' → logprob: -16.87502670288086

Token 172: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10144198685884476
    2. 'for' → logprob: -2.3514420986175537
    3. ' for' → logprob: -6.726441860198975
    4. '(' → logprob: -10.851442337036133
    5. '	for' → logprob: -12.476442337036133
    6. '()]' → logprob: -12.601442337036133
    7. ')' → logprob: -13.351442337036133
    8. ' ()' → logprob: -13.351442337036133
    9. '(sys' → logprob: -13.601442337036133
    10. '```' → logprob: -14.101442337036133

Token 173: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.661626634420827e-05
    2. '_in' → logprob: -9.875086784362793
    3. '_i' → logprob: -11.250086784362793
    4. ' _' → logprob: -11.875086784362793
    5. '_range' → logprob: -12.125086784362793
    6. '_row' → logprob: -13.000086784362793
    7. '(' → logprob: -13.625086784362793
    8. 'in' → logprob: -13.875086784362793
    9. '_rows' → logprob: -13.875086784362793
    10. '_
' → logprob: -14.000086784362793

Token 174: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45485493540763855
    2. 'in' → logprob: -1.204854965209961
    3. '_' → logprob: -3.454854965209961
    4. ' in' → logprob: -3.704854965209961
    5. ' range' → logprob: -4.704854965209961
    6. 'i' → logprob: -8.829854965209961
    7. '(range' → logprob: -9.204854965209961
    8. '_range' → logprob: -9.704854965209961
    9. '	range' → logprob: -10.079854965209961
    10. ' _' → logprob: -10.454854965209961

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003370118502061814
    2. ' range' → logprob: -8.000336647033691
    3. '	range' → logprob: -14.500336647033691
    4. '(range' → logprob: -14.750336647033691
    5. '_' → logprob: -14.875336647033691
    6. '_range' → logprob: -17.250337600708008
    7. 'rang' → logprob: -17.375337600708008
    8. '[' → logprob: -17.375337600708008
    9. 'ra' → logprob: -17.625337600708008
    10. 'repeat' → logprob: -17.750337600708008

Token 176: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.500012397766113
    3. 'rows' → logprob: -13.250012397766113
    4. '	rows' → logprob: -17.750011444091797
    5. '(
' → logprob: -19.125011444091797
    6. '(lines' → logprob: -19.250011444091797
    7. ' rows' → logprob: -19.375011444091797
    8. '(row' → logprob: -19.750011444091797
    9. '(r' → logprob: -20.625011444091797
    10. '(int' → logprob: -20.625011444091797

Token 177: '_number' (ID: 11733)
  Prédit: '(rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.09721094369888306
    2. '_number' → logprob: -2.4722108840942383
    3. 'rows' → logprob: -5.097210884094238
    4. 'number' → logprob: -6.472210884094238
    5. '(number' → logprob: -7.972210884094238
    6. '(' → logprob: -9.222210884094238
    7. '_' → logprob: -9.847210884094238
    8. 'Number' → logprob: -10.472210884094238
    9. '	rows' → logprob: -11.347210884094238
    10. '_rows' → logprob: -11.722210884094238

Token 178: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005742399953305721
    2. ']' → logprob: -7.500574111938477
    3. ')' → logprob: -11.375574111938477
    4. '()]' → logprob: -12.250574111938477
    5. ')]
' → logprob: -12.500574111938477
    6. ')],' → logprob: -15.250574111938477
    7. ']
' → logprob: -15.500574111938477
    8. '])' → logprob: -15.750574111938477
    9. '')]' → logprob: -16.250574111938477
    10. ')])' → logprob: -16.375574111938477

Token 179: 'd' (ID: 67)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011231913231313229
    2. '\' → logprob: -8.251123428344727
    3. '()' → logprob: -8.626123428344727
    4. '#' → logprob: -8.751123428344727
    5. 'd' → logprob: -9.126123428344727
    6. 'n' → logprob: -9.751123428344727
    7. '```' → logprob: -10.001123428344727
    8. '\n' → logprob: -10.126123428344727
    9. '(' → logprob: -10.251123428344727
    10. 'D' → logprob: -10.376123428344727

Token 180: 'ij' (ID: 681)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.0023174879606813192
    2. 'e' → logprob: -6.877317428588867
    3. 'efs' → logprob: -7.002317428588867
    4. '=' → logprob: -9.127317428588867
    5. ' =' → logprob: -9.627317428588867
    6. 'efa' → logprob: -9.877317428588867
    7. 'ict' → logprob: -10.502317428588867
    8. 'eff' → logprob: -10.502317428588867
    9. 'efe' → logprob: -10.627317428588867
    10. 'eft' → logprob: -11.002317428588867

Token 181: ' =' (ID: 314)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.3154571056365967
    2. 'ect' → logprob: -1.6904571056365967
    3. 'star' → logprob: -3.9404571056365967
    4. '```' → logprob: -4.065457344055176
    5. 'stra' → logprob: -4.190457344055176
    6. 'stance' → logprob: -4.815457344055176
    7. 'ek' → logprob: -5.440457344055176
    8. '()' → logprob: -5.690457344055176
    9. 'ik' → logprob: -6.065457344055176
    10. 's' → logprob: -6.315457344055176

Token 182: ' [(' (ID: 43900)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6357128620147705
    2. 'deque' → logprob: -2.0107128620147705
    3. ' defaultdict' → logprob: -2.1357128620147705
    4. '(lambda' → logprob: -2.3857128620147705
    5. '[]' → logprob: -3.3857128620147705
    6. 'default' → logprob: -3.5107128620147705
    7. 'heap' → logprob: -4.385712623596191
    8. 'def' → logprob: -4.510712623596191
    9. 'ijkstra' → logprob: -4.510712623596191
    10. 'd' → logprob: -5.385712623596191

Token 183: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6804404258728027
    2. '-' → logprob: -1.1804404258728027
    3. '1' → logprob: -1.6804404258728027
    4. '(' → logprob: -8.805440902709961
    5. '(-' → logprob: -11.430440902709961
    6. '−' → logprob: -12.680440902709961
    7. ' ' → logprob: -13.055440902709961
    8. ' -' → logprob: -13.305440902709961
    9. '2' → logprob: -13.680440902709961
    10. ')' → logprob: -14.680440902709961

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016028175596147776
    2. '0' → logprob: -6.501602649688721
    3. ' ,' → logprob: -9.251603126525879
    4. ',
' → logprob: -13.001603126525879
    5. ',-' → logprob: -13.376603126525879
    6. ')' → logprob: -16.001602172851562
    7. ',)' → logprob: -16.126602172851562
    8. '),(' → logprob: -16.251602172851562
    9. ',),' → logprob: -16.501602172851562
    10. '1' → logprob: -16.876602172851562

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014280942268669605
    2. ' ' → logprob: -6.751428127288818
    3. '-' → logprob: -8.50142765045166
    4. '1' → logprob: -9.87642765045166
    5. ' -' → logprob: -12.87642765045166
    6. '2' → logprob: -15.12642765045166
    7. '	' → logprob: -16.313928604125977
    8. '   ' → logprob: -16.438928604125977
    9. ' ' → logprob: -16.876428604125977
    10. '  ' → logprob: -17.001428604125977

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012999906903132796
    2. ' ' → logprob: -9.000129699707031
    3. '-' → logprob: -12.375129699707031
    4. '1' → logprob: -13.125129699707031
    5. ' -' → logprob: -16.62512969970703
    6. '  ' → logprob: -16.87512969970703
    7. '   ' → logprob: -17.18762969970703
    8. ' ' → logprob: -17.31262969970703
    9. '
' → logprob: -17.81262969970703
    10. '2' → logprob: -18.43762969970703

Token 187: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07161803543567657
    2. '),
' → logprob: -3.19661808013916
    3. '),(' → logprob: -3.57161808013916
    4. '),

' → logprob: -9.94661808013916
    5. ')' → logprob: -10.07161808013916
    6. '),
' → logprob: -11.82161808013916
    7. ')]' → logprob: -12.69661808013916
    8. ' ),' → logprob: -14.07161808013916
    9. ',' → logprob: -14.44661808013916
    10. '],' → logprob: -14.94661808013916

Token 188: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16054914891719818
    2. '(-' → logprob: -1.9105491638183594
    3. '0' → logprob: -8.53554916381836
    4. ' (' → logprob: -9.03554916381836
    5. ' (-' → logprob: -11.91054916381836
    6. '-' → logprob: -12.91054916381836
    7. ' ' → logprob: -15.16054916381836
    8. '[' → logprob: -18.16054916381836
    9. '   ' → logprob: -18.66054916381836
    10. ' -' → logprob: -19.16054916381836

Token 189: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687264919281006
    2. '0' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.386872291564941
    4. ' -' → logprob: -14.636872291564941
    5. '−' → logprob: -16.011873245239258
    6. '1' → logprob: -16.261873245239258
    7. '(' → logprob: -16.511873245239258
    8. '```' → logprob: -17.011873245239258
    9. ')' → logprob: -17.386873245239258
    10. '(-' → logprob: -17.824373245239258

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.375005722045898
    3. '1' → logprob: -14.125005722045898
    4. ',
' → logprob: -15.375005722045898
    5. ',-' → logprob: -15.750005722045898
    6. '),' → logprob: -18.2500057220459
    7. '-' → logprob: -18.5000057220459
    8. '```' → logprob: -18.8750057220459
    9. ',

' → logprob: -19.1250057220459
    10. '[' → logprob: -19.1875057220459

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001510335598140955
    2. '-' → logprob: -6.501510143280029
    3. ' ' → logprob: -11.751510620117188
    4. ' -' → logprob: -16.376510620117188
    5. '```' → logprob: -17.876510620117188
    6. ')' → logprob: -18.126510620117188
    7. '
' → logprob: -18.376510620117188
    8. '   ' → logprob: -18.939010620117188
    9. '[' → logprob: -19.501510620117188
    10. '+' → logprob: -19.564010620117188

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078997299075127
    2. '-' → logprob: -5.5040788650512695
    3. ' ' → logprob: -14.50407886505127
    4. '```' → logprob: -17.129079818725586
    5. '
' → logprob: -17.629079818725586
    6. ' -' → logprob: -18.254079818725586
    7. '[' → logprob: -18.629079818725586
    8. '   ' → logprob: -18.629079818725586
    9. '−' → logprob: -18.754079818725586
    10. '-
' → logprob: -18.754079818725586

Token 193: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005426656571216881
    2. '),(' → logprob: -8.375542640686035
    3. '),
' → logprob: -8.500542640686035
    4. ')' → logprob: -10.000542640686035
    5. ')]' → logprob: -10.000542640686035
    6. '],' → logprob: -11.750542640686035
    7. ' ),' → logprob: -12.000542640686035
    8. ',' → logprob: -13.250542640686035
    9. '),

' → logprob: -13.875542640686035
    10. ')],' → logprob: -15.125542640686035

Token 194: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.070975071750581e-05
    2. '-' → logprob: -10.875030517578125
    3. '(' → logprob: -11.375030517578125
    4. ' (-' → logprob: -15.375030517578125
    5. '[-' → logprob: -19.125030517578125
    6. '   ' → logprob: -19.500030517578125
    7. '	' → logprob: -20.375030517578125
    8. '
' → logprob: -20.750030517578125
    9. '((-' → logprob: -21.500030517578125
    10. '```' → logprob: -21.750030517578125

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -16.500003814697266
    4. ',' → logprob: -17.375003814697266
    5. '0' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.437503814697266
    7. '１' → logprob: -17.875003814697266
    8. '১' → logprob: -17.875003814697266
    9. '```' → logprob: -18.000003814697266
    10. '

' → logprob: -18.187503814697266

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023762896307744086
    2. '0' → logprob: -8.875237464904785
    3. ' ,' → logprob: -9.250237464904785
    4. '<|end|>' → logprob: -13.625237464904785
    5. ' ' → logprob: -15.875237464904785
    6. '1' → logprob: -16.3752384185791
    7. ')' → logprob: -16.6252384185791
    8. '```' → logprob: -17.0627384185791
    9. '‌,' → logprob: -17.5627384185791
    10. 'The' → logprob: -17.6252384185791

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815076172351837
    2. ' ' → logprob: -4.018150806427002
    3. ' ' → logprob: -15.268150329589844
    4. ')' → logprob: -16.205650329589844
    5. '۰' → logprob: -16.518150329589844
    6. ',' → logprob: -16.830650329589844
    7. '<|end|>' → logprob: -16.830650329589844
    8. '1' → logprob: -16.955650329589844
    9. '```' → logprob: -17.455650329589844
    10. '00' → logprob: -17.830650329589844

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. ')' → logprob: -16.375709533691406
    4. ',' → logprob: -16.813209533691406
    5. '1' → logprob: -17.813209533691406
    6. '```' → logprob: -17.938209533691406
    7. '۰' → logprob: -18.313209533691406
    8. ' ' → logprob: -18.313209533691406
    9. '),' → logprob: -19.188209533691406
    10. '  ' → logprob: -19.250709533691406

Token 199: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000822495436295867
    2. ')]' → logprob: -7.2508225440979
    3. ')' → logprob: -9.375822067260742
    4. '),(' → logprob: -10.875822067260742
    5. ' ),' → logprob: -12.250822067260742
    6. '],' → logprob: -13.125822067260742
    7. '),
' → logprob: -14.000822067260742
    8. ',' → logprob: -14.625822067260742
    9. ')],' → logprob: -15.125822067260742
    10. '},' → logprob: -15.750822067260742

Token 200: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5363190174102783
    2. ' (' → logprob: -0.9113190174102783
    3. '0' → logprob: -4.536318778991699
    4. ' ' → logprob: -6.036318778991699
    5. ' ' → logprob: -12.4113187789917
    6. ')' → logprob: -14.2863187789917
    7. '<|end|>' → logprob: -14.6613187789917
    8. ',' → logprob: -14.9113187789917
    9. ' (
' → logprob: -16.848819732666016
    10. '(
' → logprob: -16.973819732666016

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013313100207597017
    2. ' ' → logprob: -6.626331329345703
    3. '1' → logprob: -13.876331329345703
    4. '```' → logprob: -13.938831329345703
    5. ',' → logprob: -14.001331329345703
    6. '(' → logprob: -14.313831329345703
    7. ' ' → logprob: -14.501331329345703
    8. ')' → logprob: -14.813831329345703
    9. '۰' → logprob: -15.938831329345703
    10. '00' → logprob: -16.001331329345703

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023691373644396663
    2. ',-' → logprob: -9.125236511230469
    3. '-' → logprob: -9.250236511230469
    4. ' ,' → logprob: -10.750236511230469
    5. '1' → logprob: -12.000236511230469
    6. ')]' → logprob: -13.375236511230469
    7. ')' → logprob: -14.000236511230469
    8. ' -' → logprob: -14.500236511230469
    9. ',
' → logprob: -14.875236511230469
    10. ' ,-' → logprob: -14.875236511230469

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. ' -' → logprob: -14.625000953674316
    3. '1' → logprob: -15.375000953674316
    4. ')' → logprob: -18.625
    5. '-
' → logprob: -18.625
    6. '```' → logprob: -19.0
    7. '-)' → logprob: -19.375
    8. ')-' → logprob: -19.75
    9. '−' → logprob: -19.9375
    10. ' ' → logprob: -20.1875

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. ')]' → logprob: -11.125016212463379
    3. ')' → logprob: -13.375016212463379
    4. ' ' → logprob: -15.875016212463379
    5. ')]
' → logprob: -17.125017166137695
    6. '```' → logprob: -17.125017166137695
    7. ')],' → logprob: -17.500017166137695
    8. '   ' → logprob: -18.125017166137695
    9. ')]

' → logprob: -18.187517166137695
    10. ')])' → logprob: -18.312517166137695

Token 205: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001975384308025241
    2. '),' → logprob: -6.8769755363464355
    3. ')' → logprob: -7.0019755363464355
    4. ']' → logprob: -11.001975059509277
    5. ')]
' → logprob: -12.251975059509277
    6. ' )' → logprob: -13.126975059509277
    7. '),
' → logprob: -13.376975059509277
    8. '')]' → logprob: -13.626975059509277
    9. ')],' → logprob: -13.751975059509277
    10. ')])' → logprob: -14.001975059509277

Token 206: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15573732554912567
    2. 'n' → logprob: -2.1557374000549316
    3. 'class' → logprob: -3.7807374000549316
    4. 'd' → logprob: -5.780737400054932
    5. 'N' → logprob: -6.780737400054932
    6. 'for' → logprob: -8.405736923217773
    7. '#' → logprob: -8.405736923217773
    8. 'x' → logprob: -8.905736923217773
    9. 's' → logprob: -8.905736923217773
    10. 'a' → logprob: -9.030736923217773

Token 207: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.027692832052707672
    2. 'main' → logprob: -3.6526927947998047
    3. ' solve' → logprob: -7.027692794799805
    4. 'solve' → logprob: -8.027692794799805
    5. ' dfs' → logprob: -9.527692794799805
    6. ' bfs' → logprob: -9.902692794799805
    7. ' ma' → logprob: -10.152692794799805
    8. 'dfs' → logprob: -12.527692794799805
    9. ' d' → logprob: -12.902692794799805
    10. '	main' → logprob: -13.277692794799805

Token 208: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.676292231422849e-05
    2. ' ():' → logprob: -11.500017166137695
    3. '()' → logprob: -12.125017166137695
    4. '(' → logprob: -14.000017166137695
    5. '():
' → logprob: -15.000017166137695
    6. '(:' → logprob: -17.000017166137695
    7. ':' → logprob: -17.375017166137695
    8. '(":' → logprob: -19.000017166137695
    9. '()(' → logprob: -19.750017166137695
    10. ' ()' → logprob: -20.000017166137695

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031520288437604904
    2. 'input' → logprob: -4.781520366668701
    3. '    ' → logprob: -4.906520366668701
    4. 'n' → logprob: -5.531520366668701
    5. '<|end|>' → logprob: -6.281520366668701
    6. ' ' → logprob: -6.656520366668701
    7. ' input' → logprob: -6.656520366668701
    8. 'x' → logprob: -6.906520366668701
    9. ' readline' → logprob: -7.156520366668701
    10. ' indentation' → logprob: -7.781520366668701

Token 210: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.18792638182640076
    2. ' n' → logprob: -1.8129264116287231
    3. ' pass' → logprob: -5.312926292419434
    4. ' ' → logprob: -6.562926292419434
    5. 'pass' → logprob: -7.062926292419434
    6. 'r' → logprob: -7.812926292419434
    7. '#' → logprob: -9.187926292419434
    8. 'N' → logprob: -9.562926292419434
    9. '    ' → logprob: -9.812926292419434
    10. '(n' → logprob: -9.812926292419434

Token 211: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09879174083471298
    2. '=' → logprob: -2.7237918376922607
    3. ',' → logprob: -3.5987918376922607
    4. ' ,' → logprob: -7.723791599273682
    5. ' ' → logprob: -8.22379207611084
    6. '=int' → logprob: -8.84879207611084
    7. ')' → logprob: -9.09879207611084
    8. ' =
' → logprob: -10.22379207611084
    9. '<|end|>' → logprob: -10.72379207611084
    10. '   ' → logprob: -10.97379207611084

Token 212: 'II' (ID: 6013)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005014344118535519
    2. ' int' → logprob: -5.880014419555664
    3. 'II' → logprob: -6.130014419555664
    4. ' II' → logprob: -10.755014419555664
    5. 'I' → logprob: -12.630014419555664
    6. 'LI' → logprob: -13.005014419555664
    7. ' ' → logprob: -13.880014419555664
    8. 'INT' → logprob: -14.130014419555664
    9. '10' → logprob: -15.255014419555664
    10. '=int' → logprob: -15.255014419555664

Token 213: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028040475444868207
    2. '()
' → logprob: -8.250280380249023
    3. ' ()' → logprob: -11.875280380249023
    4. ')' → logprob: -12.250280380249023
    5. '(' → logprob: -13.000280380249023
    6. '();' → logprob: -13.625280380249023
    7. '   ' → logprob: -14.125280380249023
    8. '())' → logprob: -14.500280380249023
    9. '()\' → logprob: -14.750280380249023
    10. '()
' → logprob: -15.000280380249023

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01822005957365036
    2. '    
' → logprob: -4.893219947814941
    3. ' ' → logprob: -6.268219947814941
    4. 'a' → logprob: -6.518219947814941
    5. '<|end|>' → logprob: -6.518219947814941
    6. '    ' → logprob: -7.018219947814941
    7. 'n' → logprob: -7.268219947814941
    8. '
' → logprob: -7.393219947814941
    9. ',' → logprob: -7.643219947814941
    10. ' 
' → logprob: -7.768219947814941

Token 215: ' tt' (ID: 34181)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09526323527097702
    2. 'arr' → logprob: -2.8452632427215576
    3. 's' → logprob: -4.2202630043029785
    4. 'A' → logprob: -4.9702630043029785
    5. 'lst' → logprob: -6.0952630043029785
    6. 'dp' → logprob: -6.2202630043029785
    7. 'm' → logprob: -7.0952630043029785
    8. 'd' → logprob: -7.2202630043029785
    9. 'edges' → logprob: -7.2202630043029785
    10. 'graph' → logprob: -7.2202630043029785

Token 216: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05271422863006592
    2. ' =' → logprob: -3.0527143478393555
    3. '=[]' → logprob: -5.6777143478393555
    4. '=[' → logprob: -8.677714347839355
    5. ',' → logprob: -9.177714347839355
    6. 'imes' → logprob: -9.677714347839355
    7. 'p' → logprob: -9.677714347839355
    8. '=int' → logprob: -9.802714347839355
    9. 's' → logprob: -9.927714347839355
    10. 'ime' → logprob: -10.177714347839355

Token 217: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6609113216400146
    2. '   ' → logprob: -0.9109113216400146
    3. ' for' → logprob: -3.5359113216400146
    4. ' ' → logprob: -3.7859113216400146
    5. '<|end|>' → logprob: -4.785911560058594
    6. '    
' → logprob: -5.035911560058594
    7. '    ' → logprob: -5.535911560058594
    8. '[' → logprob: -5.660911560058594
    9. '	for' → logprob: -6.660911560058594
    10. '(' → logprob: -6.910911560058594

Token 218: ' aa' (ID: 40260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019635213539004326
    2. '   ' → logprob: -4.644635200500488
    3. ' for' → logprob: -5.019635200500488
    4. 'a' → logprob: -7.144635200500488
    5. 's' → logprob: -7.769635200500488
    6. 'l' → logprob: -8.019635200500488
    7. 't' → logprob: -8.144635200500488
    8. 'r' → logprob: -8.269635200500488
    9. 'd' → logprob: -8.644635200500488
    10. 'arr' → logprob: -8.769635200500488

Token 219: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003206592286005616
    2. '=[]' → logprob: -6.003206729888916
    3. ' =' → logprob: -7.253206729888916
    4. ',' → logprob: -11.003206253051758
    5. '=int' → logprob: -13.753206253051758
    6. '={}' → logprob: -13.753206253051758
    7. '=[' → logprob: -13.878206253051758
    8. '=[]
' → logprob: -14.753206253051758
    9. '=[],' → logprob: -14.878206253051758
    10. '_=' → logprob: -15.128206253051758

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14297370612621307
    2. '<|end|>' → logprob: -2.8929736614227295
    3. 'for' → logprob: -3.3929736614227295
    4. ' ' → logprob: -4.017973899841309
    5. ' for' → logprob: -4.517973899841309
    6. '    
' → logprob: -5.392973899841309
    7. '  ' → logprob: -6.142973899841309
    8. '    ' → logprob: -6.767973899841309
    9. ' 
' → logprob: -6.767973899841309
    10. 't' → logprob: -6.767973899841309

Token 221: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.022661086171865463
    2. 'bb' → logprob: -4.022661209106445
    3. ' for' → logprob: -5.897661209106445
    4. 'cc' → logprob: -7.647661209106445
    5. '   ' → logprob: -7.772661209106445
    6. 'ii' → logprob: -8.647661209106445
    7. 'tt' → logprob: -9.147661209106445
    8. 'fo' → logprob: -9.272661209106445
    9. 'ff' → logprob: -9.397661209106445
    10. 'rr' → logprob: -10.022661209106445

Token 222: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.698668897151947
    2. ' _' → logprob: -0.698668897151947
    3. ' i' → logprob: -5.323668956756592
    4. '_i' → logprob: -8.073668479919434
    5. ' ' → logprob: -8.448668479919434
    6. 'i' → logprob: -9.198668479919434
    7. ' ' → logprob: -13.198668479919434
    8. '__' → logprob: -14.073668479919434
    9. '	i' → logprob: -14.823668479919434
    10. ' __' → logprob: -15.198668479919434

Token 223: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11335302144289017
    2. ' in' → logprob: -2.2383530139923096
    3. ' ' → logprob: -8.73835277557373
    4. 'range' → logprob: -8.86335277557373
    5. 'n' → logprob: -9.23835277557373
    6. '_' → logprob: -9.98835277557373
    7. 'i' → logprob: -10.61335277557373
    8. ' _' → logprob: -11.11335277557373
    9. '	in' → logprob: -11.73835277557373
    10. '  ' → logprob: -11.86335277557373

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004350797680672258
    2. ' range' → logprob: -7.750434875488281
    3. '(range' → logprob: -13.625434875488281
    4. '(' → logprob: -14.000434875488281
    5. 'ra' → logprob: -14.500434875488281
    6. 'ran' → logprob: -14.875434875488281
    7. 'ange' → logprob: -15.000434875488281
    8. ' ' → logprob: -15.125434875488281
    9. '_' → logprob: -15.625434875488281
    10. '	range' → logprob: -15.750434875488281

Token 225: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. 'n' → logprob: -14.125036239624023
    4. '(
' → logprob: -17.750036239624023
    5. ' n' → logprob: -19.750036239624023
    6. '	n' → logprob: -20.000036239624023
    7. '(nn' → logprob: -20.000036239624023
    8. ' (' → logprob: -20.625036239624023
    9. '(nt' → logprob: -21.000036239624023
    10. '(int' → logprob: -21.000036239624023

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005775776808150113
    2. '():' → logprob: -8.250577926635742
    3. ')' → logprob: -8.875577926635742
    4. '):
' → logprob: -8.875577926635742
    5. ':' → logprob: -10.625577926635742
    6. ' ):' → logprob: -11.750577926635742
    7. '()' → logprob: -13.500577926635742
    8. '   ' → logprob: -14.250577926635742
    9. '():
' → logprob: -14.875577926635742
    10. ']:' → logprob: -15.000577926635742

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11378463357686996
    2. '   ' → logprob: -2.2387845516204834
    3. 't' → logprob: -8.113784790039062
    4. 'a' → logprob: -8.238784790039062
    5. 'x' → logprob: -8.988784790039062
    6. '<|end|>' → logprob: -9.988784790039062
    7. '```' → logprob: -10.613784790039062
    8. 'tt' → logprob: -10.988784790039062
    9. '    
' → logprob: -11.113784790039062
    10. '  ' → logprob: -11.113784790039062

Token 228: ' t' (ID: 260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08021862059831619
    2. ' a' → logprob: -2.580218553543091
    3. '   ' → logprob: -6.83021879196167
    4. 'x' → logprob: -9.455218315124512
    5. 't' (adapté à ' t') → logprob: -9.580218315124512
    6. ' t' → logprob: -9.830218315124512
    7. ' x' → logprob: -11.080218315124512
    8. 'A' → logprob: -11.455218315124512
    9. ' ' → logprob: -12.205218315124512
    10. ' A' → logprob: -12.705218315124512

Token 229: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25345203280448914
    2. ',a' → logprob: -1.5034520626068115
    3. 'a' → logprob: -6.753451824188232
    4. ' ,' → logprob: -8.50345230102539
    5. ',x' → logprob: -10.25345230102539
    6. ',i' → logprob: -10.62845230102539
    7. ',p' → logprob: -11.00345230102539
    8. ',s' → logprob: -11.12845230102539
    9. ',v' → logprob: -11.25345230102539
    10. 'i' → logprob: -11.75345230102539

Token 230: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025454589631408453
    2. ' =' → logprob: -6.002545356750488
    3. '=input' → logprob: -10.252545356750488
    4. '=int' → logprob: -11.877545356750488
    5. '=line' → logprob: -12.377545356750488
    6. '   ' → logprob: -12.752545356750488
    7. ')=' → logprob: -12.877545356750488
    8. '=[]' → logprob: -13.127545356750488
    9. '=i' → logprob: -13.502545356750488
    10. '=list' → logprob: -13.627545356750488

Token 231: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.0010198289528489113
    2. ' MI' → logprob: -7.2510199546813965
    3. 'MF' → logprob: -8.251019477844238
    4. 'map' → logprob: -10.251019477844238
    5. 'II' → logprob: -12.251019477844238
    6. 'LI' → logprob: -12.376019477844238
    7. 'MAP' → logprob: -13.626019477844238
    8. ' map' → logprob: -13.876019477844238
    9. 'MJ' → logprob: -13.876019477844238
    10. '_MI' → logprob: -14.876019477844238

Token 232: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013560713268816471
    2. '()
' → logprob: -6.62635612487793
    3. '())' → logprob: -10.87635612487793
    4. '();' → logprob: -12.50135612487793
    5. '()

' → logprob: -13.25135612487793
    6. '()]' → logprob: -13.37635612487793
    7. '()
' → logprob: -13.37635612487793
    8. ')' → logprob: -14.50135612487793
    9. ' ()' → logprob: -14.62635612487793
    10. '()`' → logprob: -14.62635612487793

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00591848511248827
    2. ',' → logprob: -5.630918502807617
    3. '<|end|>' → logprob: -6.630918502807617
    4. '
' → logprob: -7.255918502807617
    5. '        
' → logprob: -9.505918502807617
    6. ',
' → logprob: -9.755918502807617
    7. '<|end|>' → logprob: -10.380918502807617
    8. '   ' → logprob: -10.505918502807617
    9. '	' → logprob: -11.505918502807617
    10. ' ' → logprob: -11.505918502807617

Token 234: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' (adapté à ' tt') → logprob: -0.13263557851314545
    2. '       ' → logprob: -2.6326355934143066
    3. ' tt' → logprob: -3.5076355934143066
    4. '   ' → logprob: -3.8826355934143066
    5. 't' → logprob: -6.632635593414307
    6. ' t' → logprob: -9.007635116577148
    7. '    ' → logprob: -10.007635116577148
    8. '           ' → logprob: -10.257635116577148
    9. 'aa' → logprob: -10.382635116577148
    10. '
' → logprob: -10.507635116577148

Token 235: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0026515135541558266
    2. '.' → logprob: -6.002651691436768
    3. '.app' → logprob: -9.12765121459961
    4. '.ap' → logprob: -10.00265121459961
    5. 'append' → logprob: -11.87765121459961
    6. ').' → logprob: -12.37765121459961
    7. '​.' → logprob: -12.75265121459961
    8. '.pp' → logprob: -13.00265121459961
    9. '.extend' → logprob: -13.75265121459961
    10. '.Append' → logprob: -14.00265121459961

Token 236: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. 't' → logprob: -16.25000762939453
    4. '(
' → logprob: -17.75000762939453
    5. '((' → logprob: -19.75000762939453
    6. '(T' → logprob: -20.62500762939453
    7. '	t' → logprob: -20.75000762939453
    8. ' (' → logprob: -21.75000762939453
    9. '()' → logprob: -22.12500762939453
    10. '(int' → logprob: -22.12500762939453

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20402488112449646
    2. ')
' → logprob: -1.7040249109268188
    3. ')a' → logprob: -5.954024791717529
    4. ')
' → logprob: -11.704025268554688
    5. ')

' → logprob: -14.079025268554688
    6. ')t' → logprob: -14.079025268554688
    7. '),' → logprob: -14.829025268554688
    8. ')return' → logprob: -14.954025268554688
    9. ')add' → logprob: -14.954025268554688
    10. 'a' → logprob: -15.204025268554688

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11361832916736603
    2. 'a' → logprob: -2.7386183738708496
    3. ' a' → logprob: -3.3636183738708496
    4. ',a' → logprob: -5.11361837387085
    5. ',' → logprob: -6.86361837387085
    6. '<|end|>' → logprob: -7.98861837387085
    7. '   ' → logprob: -8.238617897033691
    8. ')a' → logprob: -9.113617897033691
    9. '	a' → logprob: -9.863617897033691
    10. ')' → logprob: -9.863617897033691

Token 239: ' aa' (ID: 40260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6980894804000854
    2. 'aa' (adapté à ' aa') → logprob: -0.6980894804000854
    3. ' a' → logprob: -5.948089599609375
    4. ' aa' → logprob: -6.073089599609375
    5. ' ' → logprob: -11.823089599609375
    6. '   ' → logprob: -13.323089599609375
    7. 'ai' → logprob: -13.573089599609375
    8. '  ' → logprob: -14.073089599609375
    9. ' ' → logprob: -14.073089599609375
    10. 'aaa' → logprob: -14.323089599609375

Token 240: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.375014305114746
    3. '.app' → logprob: -14.000014305114746
    4. '.ap' → logprob: -14.375014305114746
    5. ' .' → logprob: -14.500014305114746
    6. ').' → logprob: -15.250014305114746
    7. '].' → logprob: -16.00001335144043
    8. 'append' → logprob: -16.87501335144043
    9. '.extend' → logprob: -17.12501335144043
    10. '​.' → logprob: -17.12501335144043

Token 241: '(log' (ID: 25116)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.627176768844947e-05
    2. 'a' → logprob: -9.250096321105957
    3. '(' → logprob: -16.62509536743164
    4. '(
' → logprob: -19.25009536743164
    5. '(A' → logprob: -20.87509536743164
    6. ' a' → logprob: -21.12509536743164
    7. ' (' → logprob: -21.37509536743164
    8. '	a' → logprob: -22.00009536743164
    9. '(abs' → logprob: -22.12509536743164
    10. '((' → logprob: -22.12509536743164

Token 242: '10' (ID: 702)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00030805266578681767
    2. 'a' → logprob: -8.5003080368042
    3. '10' → logprob: -9.5003080368042
    4. '(' → logprob: -11.1253080368042
    5. '(t' → logprob: -12.0003080368042
    6. '(abs' → logprob: -12.6253080368042
    7. '(max' → logprob: -12.8753080368042
    8. '2' → logprob: -13.2503080368042
    9. '((' → logprob: -14.3753080368042
    10. ')' → logprob: -16.250308990478516

Token 243: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.750018119812012
    3. 'a' → logprob: -12.000018119812012
    4. ' (' → logprob: -13.625018119812012
    5. '((' → logprob: -13.625018119812012
    6. ')' → logprob: -14.250018119812012
    7. '(abs' → logprob: -14.625018119812012
    8. '10' → logprob: -15.875018119812012
    9. '(max' → logprob: -16.000017166137695
    10. '(
' → logprob: -16.375017166137695

Token 244: '10' (ID: 702)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001085566938854754
    2. '(a' → logprob: -6.8760857582092285
    3. '10' → logprob: -10.50108528137207
    4. 't' → logprob: -11.62608528137207
    5. ' a' → logprob: -11.87608528137207
    6. '(' → logprob: -13.37608528137207
    7. ')' → logprob: -13.50108528137207
    8. 'max' → logprob: -13.50108528137207
    9. '1' → logprob: -13.87608528137207
    10. '(t' → logprob: -14.00108528137207

Token 245: '-a' (ID: 8575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26491981744766235
    2. 't' → logprob: -2.6399197578430176
    3. '-a' → logprob: -3.1399197578430176
    4. '(t' → logprob: -3.3899197578430176
    5. '**' → logprob: -3.6399197578430176
    6. '0' → logprob: -4.389919757843018
    7. ')' → logprob: -4.764919757843018
    8. '*a' → logprob: -4.889919757843018
    9. '(a' → logprob: -5.014919757843018
    10. ' a' → logprob: -5.889919757843018

Token 246: ')-' (ID: 14080)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20986352860927582
    2. '/' → logprob: -2.2098634243011475
    3. ' /' → logprob: -3.7098634243011475
    4. ' ))' → logprob: -3.9598634243011475
    5. ')' → logprob: -4.084863662719727
    6. '0' → logprob: -4.209863662719727
    7. '**' → logprob: -6.584863662719727
    8. ')/' → logprob: -7.334863662719727
    9. ' )' → logprob: -7.584863662719727
    10. '*' → logprob: -7.959863662719727

Token 247: '1' (ID: 16)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.02357504330575466
    2. ' log' → logprob: -3.7735750675201416
    3. '(log' → logprob: -8.773574829101562
    4. '1' → logprob: -10.023574829101562
    5. '   ' → logprob: -10.648574829101562
    6. ' ' → logprob: -11.023574829101562
    7. 't' → logprob: -11.273574829101562
    8. ' (' → logprob: -11.273574829101562
    9. '0' → logprob: -11.398574829101562
    10. '(' → logprob: -11.398574829101562

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043519894825294614
    2. ' )' → logprob: -8.625434875488281
    3. '+' → logprob: -9.625434875488281
    4. '))' → logprob: -10.000434875488281
    5. ')
' → logprob: -10.250434875488281
    6. '-)' → logprob: -10.750434875488281
    7. ')))' → logprob: -11.250434875488281
    8. '<|end|>' → logprob: -11.500434875488281
    9. ')*' → logprob: -11.750434875488281
    10. '0' → logprob: -11.750434875488281

Token 249: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' cm' (ID: 9256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '=[' (ID: 13370)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0331029891967773
    2. '=' → logprob: -1.1581029891967773
    3. 'ul' → logprob: -1.9081029891967773
    4. 'p' → logprob: -2.7831029891967773
    5. 'u' → logprob: -3.4081029891967773
    6. '=[]' → logprob: -3.4081029891967773
    7. ' =' → logprob: -3.6581029891967773
    8. '=[' → logprob: -4.783102989196777
    9. 'a' → logprob: -5.783102989196777
    10. 'i' → logprob: -5.783102989196777

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05954193323850632
    2. 'tt' → logprob: -3.309541940689087
    3. '(' → logprob: -4.809541702270508
    4. 'float' → logprob: -5.809541702270508
    5. '1' → logprob: -6.309541702270508
    6. 'aa' → logprob: -6.309541702270508
    7. '10' → logprob: -6.434541702270508
    8. '-' → logprob: -6.559541702270508
    9. '[' → logprob: -6.809541702270508
    10. '(tt' → logprob: -7.059541702270508

Token 253: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023979226127266884
    2. ']*(' → logprob: -4.273979187011719
    3. ']*' → logprob: -4.648979187011719
    4. ']+' → logprob: -9.523979187011719
    5. ']
' → logprob: -9.648979187011719
    6. 'for' → logprob: -10.648979187011719
    7. '0' → logprob: -11.023979187011719
    8. ' ]' → logprob: -12.398979187011719
    9. ' for' → logprob: -12.523979187011719
    10. ')]' → logprob: -12.898979187011719

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5671913027763367
    2. ' for' → logprob: -1.0671913623809814
    3. 'for' → logprob: -2.4421913623809814
    4. 's' → logprob: -7.692191123962402
    5. 'c' → logprob: -8.442191123962402
    6. '	for' → logprob: -8.442191123962402
    7. ' ' → logprob: -8.942191123962402
    8. '    
' → logprob: -8.942191123962402
    9. ' s' → logprob: -9.192191123962402
    10. '
' → logprob: -9.442191123962402

Token 255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42978718876838684
    2. ' for' → logprob: -1.0547871589660645
    3. '   ' → logprob: -7.0547871589660645
    4. 'c' → logprob: -9.804787635803223
    5. 's' → logprob: -9.804787635803223
    6. '	for' → logprob: -10.804787635803223
    7. ' ' → logprob: -11.054787635803223
    8. 'or' → logprob: -11.304787635803223
    9. '0' → logprob: -11.679787635803223
    10. 'cum' → logprob: -11.804787635803223

Token 256: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6334978342056274
    2. 'i' → logprob: -0.7584978342056274
    3. 'x' → logprob: -8.508498191833496
    4. '_' → logprob: -8.633498191833496
    5. '_i' → logprob: -8.633498191833496
    6. ' _' → logprob: -9.508498191833496
    7. ' x' → logprob: -9.633498191833496
    8. 't' → logprob: -10.258498191833496
    9. ' ' → logprob: -10.508498191833496
    10. ' t' → logprob: -10.508498191833496

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04955847188830376
    2. 'in' → logprob: -3.049558401107788
    3. 'a' → logprob: -7.174558639526367
    4. ',' → logprob: -9.674558639526367
    5. 'i' → logprob: -9.674558639526367
    6. 'n' → logprob: -10.799558639526367
    7. ' ' → logprob: -11.049558639526367
    8. '_in' → logprob: -11.299558639526367
    9. '_' → logprob: -12.049558639526367
    10. ',a' → logprob: -12.924558639526367

Token 258: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.003529398003593087
    2. 'range' → logprob: -5.8785295486450195
    3. 'tt' → logprob: -7.7535295486450195
    4. ' aa' → logprob: -8.62852954864502
    5. 'a' → logprob: -9.87852954864502
    6. 'aaa' → logprob: -10.75352954864502
    7. ' range' → logprob: -11.37852954864502
    8. 'sorted' → logprob: -12.25352954864502
    9. '[' → logprob: -12.50352954864502
    10. 'enumer' → logprob: -12.87852954864502

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009825548622757196
    2. ':
' → logprob: -7.375982761383057
    3. ' :' → logprob: -8.625982284545898
    4. '[' → logprob: -9.500982284545898
    5. '):' → logprob: -10.625982284545898
    6. ',' → logprob: -10.750982284545898
    7. '[::-' → logprob: -11.000982284545898
    8. '[:-' → logprob: -11.250982284545898
    9. ']:' → logprob: -11.500982284545898
    10. ' in' → logprob: -12.375982284545898

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035358022432774305
    2. ' cm' → logprob: -5.753535747528076
    3. '   ' → logprob: -8.753536224365234
    4. 'cm' → logprob: -9.378536224365234
    5. '
' → logprob: -9.753536224365234
    6. ',' → logprob: -11.128536224365234
    7. '        
' → logprob: -11.878536224365234
    8. '<|end|>' → logprob: -12.128536224365234
    9. '    ' → logprob: -12.378536224365234
    10. '      ' → logprob: -12.378536224365234

Token 261: ' cm' (ID: 9256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8375968933105469
    2. ' cm' → logprob: -0.9625968933105469
    3. '       ' → logprob: -1.7125968933105469
    4. 'cm' (adapté à ' cm') → logprob: -5.337596893310547
    5. '    ' → logprob: -9.212596893310547
    6. ' c' → logprob: -11.712596893310547
    7. '	c' → logprob: -11.962596893310547
    8. 'c' → logprob: -12.837596893310547
    9. ' ' → logprob: -12.837596893310547
    10. '        ' → logprob: -12.900096893310547

Token 262: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017337289173156023
    2. '.' → logprob: -6.376733779907227
    3. ' .' → logprob: -11.126733779907227
    4. '.app' → logprob: -12.376733779907227
    5. '.extend' → logprob: -12.751733779907227
    6. '+=' → logprob: -13.001733779907227
    7. '+.' → logprob: -13.376733779907227
    8. '.ap' → logprob: -13.501733779907227
    9. 'append' → logprob: -13.501733779907227
    10. '[-' → logprob: -14.126733779907227

Token 263: '(cm' (ID: 99099)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.5803119540214539
    2. '(cm' → logprob: -0.8303119540214539
    3. ' cm' → logprob: -5.4553117752075195
    4. '/cm' → logprob: -10.08031177520752
    5. '(' → logprob: -11.08031177520752
    6. '(c' → logprob: -11.45531177520752
    7. 'max' → logprob: -11.70531177520752
    8. '   ' → logprob: -12.20531177520752
    9. '(max' → logprob: -12.83031177520752
    10. '_cm' → logprob: -13.58031177520752

Token 264: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.2200749754119897e-06
    2. '+' → logprob: -13.250001907348633
    3. ' [-' → logprob: -15.125001907348633
    4. '[' → logprob: -15.750001907348633
    5. '][-' → logprob: -17.500001907348633
    6. '+[' → logprob: -17.500001907348633
    7. '.append' → logprob: -18.125001907348633
    8. '[
' → logprob: -18.875001907348633
    9. '   ' → logprob: -18.875001907348633
    10. '[]' → logprob: -19.125001907348633

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04334352910518646
    2. ']+' → logprob: -3.4183435440063477
    3. ']' → logprob: -5.293343544006348
    4. '+' → logprob: -5.793343544006348
    5. '()+' → logprob: -7.043343544006348
    6. 'a' → logprob: -7.918343544006348
    7. '()' → logprob: -8.918343544006348
    8. '+a' → logprob: -9.043343544006348
    9. '0' → logprob: -11.043343544006348
    10. '2' → logprob: -11.543343544006348

Token 266: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17770875990390778
    2. '+a' → logprob: -2.052708864212036
    3. ' +' → logprob: -3.427708864212036
    4. ']+' → logprob: -7.052708625793457
    5. ')+' → logprob: -7.302708625793457
    6. ')' → logprob: -9.302708625793457
    7. ' a' → logprob: -9.427708625793457
    8. 'a' → logprob: -9.552708625793457
    9. '+
' → logprob: -10.177708625793457
    10. ']' → logprob: -10.802708625793457

Token 267: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00022082125360611826
    2. ' a' → logprob: -8.500221252441406
    3. 'ceil' → logprob: -12.000221252441406
    4. 'int' → logprob: -12.750221252441406
    5. '10' → logprob: -12.875221252441406
    6. 'log' → logprob: -13.000221252441406
    7. 'round' → logprob: -14.250221252441406
    8. 'abs' → logprob: -14.375221252441406
    9. '1' → logprob: -14.375221252441406
    10. '   ' → logprob: -15.000221252441406

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0722858102526516e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -15.500041007995605
    4. ')return' → logprob: -15.500041007995605
    5. '   ' → logprob: -17.37504005432129
    6. '))' → logprob: -17.62504005432129
    7. '),' → logprob: -17.75004005432129
    8. '+' → logprob: -18.00004005432129
    9. ')#' → logprob: -18.12504005432129
    10. ')n' → logprob: -18.25004005432129

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0754455104470253
    2. '<|end|>' → logprob: -2.7004454135894775
    3. '    
' → logprob: -5.950445652008057
    4. '
' → logprob: -7.075445652008057
    5. ' ' → logprob: -7.825445652008057
    6. '    ' → logprob: -8.075445175170898
    7. ')' → logprob: -8.200445175170898
    8. ' 
' → logprob: -8.700445175170898
    9. '[' → logprob: -8.950445175170898
    10. ',' → logprob: -9.200445175170898

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06112284958362579
    2. ' for' → logprob: -3.9361228942871094
    3. 'for' → logprob: -4.561122894287109
    4. '    
' → logprob: -5.561122894287109
    5. ' ans' → logprob: -5.811122894287109
    6. 'ans' → logprob: -5.936122894287109
    7. 'dp' → logprob: -6.186122894287109
    8. ' res' → logprob: -6.686122894287109
    9. 'r' → logprob: -6.811122894287109
    10. 'res' → logprob: -6.936122894287109

Token 271: 'print' (ID: 1598)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0115060806274414
    2. '   ' → logprob: -1.3865060806274414
    3. 'for' → logprob: -2.1365060806274414
    4. ' l' → logprob: -2.8865060806274414
    5. ' dp' → logprob: -3.2615060806274414
    6. 'dp' → logprob: -4.011506080627441
    7. ' x' → logprob: -4.136506080627441
    8. ' s' → logprob: -4.761506080627441
    9. ' t' → logprob: -4.886506080627441
    10. ' ans' → logprob: -4.886506080627441

Token 272: '(cm' (ID: 99099)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11083317548036575
    2. '(cm' → logprob: -2.610833168029785
    3. '()' → logprob: -4.360833168029785
    4. '(len' → logprob: -4.735833168029785
    5. '(*' → logprob: -5.235833168029785
    6. '("' → logprob: -6.110833168029785
    7. '('' → logprob: -7.610833168029785
    8. 's' → logprob: -7.860833168029785
    9. '(c' → logprob: -8.110833168029785
    10. '(
' → logprob: -8.110833168029785

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. ')
' → logprob: -11.125032424926758
    3. '[' → logprob: -12.125032424926758
    4. ' )' → logprob: -12.125032424926758
    5. ')#' → logprob: -12.750032424926758
    6. '))' → logprob: -13.375032424926758
    7. '])' → logprob: -15.000032424926758
    8. '#' → logprob: -15.125032424926758
    9. '   ' → logprob: -15.250032424926758
    10. ')`' → logprob: -15.500032424926758

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041875723749399185
    2. '<|end|>' → logprob: -3.9168758392333984
    3. '    ' → logprob: -4.291875839233398
    4. ' for' → logprob: -5.791875839233398
    5. '    
' → logprob: -6.791875839233398
    6. ')' → logprob: -7.166875839233398
    7. 'for' → logprob: -7.541875839233398
    8. 's' → logprob: -8.291875839233398
    9. ' ' → logprob: -8.666875839233398
    10. 'n' → logprob: -8.666875839233398

Token 275: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14570896327495575
    2. 'for' → logprob: -3.5207090377807617
    3. ' for' → logprob: -3.6457090377807617
    4. ' l' → logprob: -4.395709037780762
    5. 'l' → logprob: -4.520709037780762
    6. 'dp' → logprob: -4.645709037780762
    7. 'x' → logprob: -5.520709037780762
    8. ' ' → logprob: -5.520709037780762
    9. 'n' → logprob: -5.645709037780762
    10. '    ' → logprob: -5.895709037780762

Token 276: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006732660811394453
    2. '=int' → logprob: -5.13173246383667
    3. ' =' → logprob: -7.13173246383667
    4. '=q' → logprob: -13.381732940673828
    5. '=n' → logprob: -14.131732940673828
    6. '=sys' → logprob: -14.631732940673828
    7. '=query' → logprob: -15.506732940673828
    8. 'u' → logprob: -15.631732940673828
    9. '=_' → logprob: -15.756732940673828
    10. '=input' → logprob: -15.756732940673828

Token 277: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.0036551947705447674
    2. 'int' → logprob: -5.628654956817627
    3. ' II' → logprob: -10.003655433654785
    4. 'ii' → logprob: -12.753655433654785
    5. ' int' → logprob: -13.503655433654785
    6. 'I' → logprob: -13.878655433654785
    7. 'LI' → logprob: -14.003655433654785
    8. 'III' → logprob: -14.003655433654785
    9. 'MI' → logprob: -14.128655433654785
    10. '10' → logprob: -15.128655433654785

Token 278: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038539018714800477
    2. '()
' → logprob: -7.875385284423828
    3. '())' → logprob: -12.750385284423828
    4. '()
' → logprob: -14.125385284423828
    5. '()\' → logprob: -14.500385284423828
    6. '()

' → logprob: -15.375385284423828
    7. ' ()' → logprob: -15.625385284423828
    8. '()]' → logprob: -15.625385284423828
    9. '()`' → logprob: -15.750385284423828
    10. '()"' → logprob: -16.000385284423828

Token 279: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25294896960258484
    2. '   ' → logprob: -1.8779489994049072
    3. ' for' → logprob: -3.1279489994049072
    4. '	for' → logprob: -4.002948760986328
    5. '
' → logprob: -5.002948760986328
    6. '<|end|>' → logprob: -6.502948760986328
    7. '    
' → logprob: -9.377948760986328
    8. '\n' → logprob: -10.502948760986328
    9. '```' → logprob: -10.502948760986328
    10. '' → logprob: -10.502948760986328

Token 280: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00023357603640761226
    2. ' for' → logprob: -8.37523365020752
    3. 'res' → logprob: -13.87523365020752
    4. 'results' → logprob: -14.25023365020752
    5. '	for' → logprob: -14.62523365020752
    6. '   ' → logprob: -15.12523365020752
    7. 'ans' → logprob: -15.37523365020752
    8. 'result' → logprob: -15.87523365020752
    9. 'queries' → logprob: -16.250232696533203
    10. 'q' → logprob: -16.500232696533203

Token 281: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0297942366451025
    2. '_' → logprob: -3.529794216156006
    3. ' ' → logprob: -10.654794692993164
    4. ' i' → logprob: -11.029794692993164
    5. '_i' → logprob: -12.779794692993164
    6. ' __' → logprob: -14.904794692993164
    7. ' ' → logprob: -14.904794692993164
    8. '__' → logprob: -15.654794692993164
    9. ' _
' → logprob: -16.279794692993164
    10. 'i' → logprob: -16.779794692993164

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.387532114982605
    2. 'in' → logprob: -1.137532114982605
    3. '_' → logprob: -8.262532234191895
    4. 'q' → logprob: -9.262532234191895
    5. ' _' → logprob: -9.387532234191895
    6. ' ' → logprob: -10.012532234191895
    7. 's' → logprob: -10.137532234191895
    8. 'n' → logprob: -10.262532234191895
    9. 'import' → logprob: -10.637532234191895
    10. '```' → logprob: -11.512532234191895

Token 283: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031804447062313557
    2. ' range' → logprob: -5.753180503845215
    3. 'q' → logprob: -13.253180503845215
    4. '(range' → logprob: -14.878180503845215
    5. ' ' → logprob: -15.128180503845215
    6. '	range' → logprob: -16.6281795501709
    7. 'r' → logprob: -17.5031795501709
    8. ')' → logprob: -17.5031795501709
    9. 'ange' → logprob: -17.6281795501709
    10. '  ' → logprob: -17.6281795501709

Token 284: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00028278882382437587
    2. 'q' → logprob: -8.750283241271973
    3. '(' → logprob: -9.375283241271973
    4. ' (' → logprob: -10.375283241271973
    5. ' q' → logprob: -11.750283241271973
    6. '	q' → logprob: -15.625283241271973
    7. '(
' → logprob: -16.125282287597656
    8. '   ' → logprob: -17.125282287597656
    9. '()' → logprob: -17.500282287597656
    10. '(query' → logprob: -17.625282287597656

Token 285: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014454705640673637
    2. '):
' → logprob: -4.2644548416137695
    3. '():' → logprob: -9.13945484161377
    4. ')' → logprob: -9.51445484161377
    5. ':' → logprob: -9.76445484161377
    6. '():
' → logprob: -10.63945484161377
    7. '   ' → logprob: -11.51445484161377
    8. '):
' → logprob: -12.13945484161377
    9. ',' → logprob: -12.26445484161377
    10. ' ):' → logprob: -12.51445484161377

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08294199407100677
    2. '<|end|>' → logprob: -2.957942008972168
    3. '	' → logprob: -4.957942008972168
    4. '	   ' → logprob: -5.207942008972168
    5. '(' → logprob: -5.707942008972168
    6. '   ' → logprob: -5.832942008972168
    7. '<|end|>' → logprob: -6.957942008972168
    8. '[' → logprob: -6.957942008972168
    9. '' → logprob: -7.457942008972168
    10. ' ' → logprob: -7.457942008972168

Token 287: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3968246877193451
    2. 'l' (adapté à ' l') → logprob: -1.2718247175216675
    3. 'k' → logprob: -4.146824836730957
    4. 'L' → logprob: -4.771824836730957
    5. '   ' → logprob: -4.896824836730957
    6. 'd' → logprob: -5.521824836730957
    7. 'c' → logprob: -6.271824836730957
    8. 'T' → logprob: -6.521824836730957
    9. 't' → logprob: -6.521824836730957
    10. 's' → logprob: -6.521824836730957

Token 288: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34879371523857117
    2. ',r' → logprob: -1.2237937450408936
    3. ' ,' → logprob: -8.973793983459473
    4. ',k' → logprob: -9.723793983459473
    5. ',u' → logprob: -10.223793983459473
    6. 'r' → logprob: -10.348793983459473
    7. ',q' → logprob: -10.973793983459473
    8. ',a' → logprob: -11.223793983459473
    9. ',m' → logprob: -11.723793983459473
    10. ',n' → logprob: -11.723793983459473

Token 289: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034754592925310135
    2. ' =' → logprob: -5.878475666046143
    3. ',' → logprob: -7.628475666046143
    4. '=int' → logprob: -9.628475189208984
    5. '=input' → logprob: -9.878475189208984
    6. ',l' → logprob: -10.753475189208984
    7. '=l' → logprob: -10.878475189208984
    8. '=line' → logprob: -12.253475189208984
    9. '=query' → logprob: -12.503475189208984
    10. '=q' → logprob: -12.753475189208984

Token 290: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.0001605115394340828
    2. ' MI' → logprob: -9.000160217285156
    3. 'LI' → logprob: -10.250160217285156
    4. '_MI' → logprob: -14.000160217285156
    5. 'map' → logprob: -15.375160217285156
    6. 'II' → logprob: -15.500160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '   ' → logprob: -16.500160217285156
    9. 'ML' → logprob: -16.875160217285156
    10. 'M' → logprob: -17.375160217285156

Token 291: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020612545311450958
    2. '1' → logprob: -3.8956124782562256
    3. '(' → logprob: -10.770612716674805
    4. '()
' → logprob: -10.895612716674805
    5. '()>' → logprob: -11.770612716674805
    6. '();' → logprob: -12.270612716674805
    7. ' ()' → logprob: -12.270612716674805
    8. '())' → logprob: -12.770612716674805
    9. '()]' → logprob: -13.395612716674805
    10. '()<' → logprob: -13.395612716674805

Token 292: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' li' (ID: 3476)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1649377942085266
    2. 'print' → logprob: -2.289937734603882
    3. ' print' → logprob: -3.664937734603882
    4. ' s' → logprob: -5.539937973022461
    5. 's' → logprob: -5.664937973022461
    6. 'l' → logprob: -5.789937973022461
    7. ' l' → logprob: -5.914937973022461
    8. 'r' → logprob: -6.164937973022461
    9. 'res' → logprob: -6.414937973022461
    10. '   ' → logprob: -6.664937973022461

Token 294: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44123202562332153
    2. 'b' → logprob: -1.9412319660186768
    3. 'n' → logprob: -2.8162319660186768
    4. 'ft' → logprob: -2.9412319660186768
    5. 'f' → logprob: -4.316232204437256
    6. 'br' → logprob: -4.441232204437256
    7. 'r' → logprob: -4.566232204437256
    8. '=l' → logprob: -4.566232204437256
    9. 'nt' → logprob: -4.941232204437256
    10. 'l' → logprob: -4.941232204437256

Token 295: 'bis' (ID: 38042)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.02430795505642891
    2. 'log' → logprob: -4.649307727813721
    3. '(cm' → logprob: -5.149307727813721
    4. 'l' → logprob: -5.899307727813721
    5. 'bis' → logprob: -6.274307727813721
    6. 'ceil' → logprob: -6.649307727813721
    7. 'floor' → logprob: -7.399307727813721
    8. 'int' → logprob: -8.274308204650879
    9. '(log' → logprob: -8.274308204650879
    10. ' cm' → logprob: -8.774308204650879

Token 296: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.954393079970032e-05
    2. 'e' → logprob: -10.250049591064453
    3. 'ct' → logprob: -12.000049591064453
    4. 'n' → logprob: -12.500049591064453
    5. '
' → logprob: -13.500049591064453
    6. '

' → logprob: -14.500049591064453
    7. '`' → logprob: -15.125049591064453
    8. '[' → logprob: -15.250049591064453
    9. '```' → logprob: -15.250049591064453
    10. 'ectl' → logprob: -15.375049591064453

Token 297: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0015599739272147417
    2. '_right' → logprob: -6.501560211181641
    3. 'left' → logprob: -11.00156021118164
    4. 'cm' → logprob: -11.00156021118164
    5. '(cm' → logprob: -11.00156021118164
    6. '_cm' → logprob: -12.37656021118164
    7. '_' → logprob: -14.00156021118164
    8. ' cm' → logprob: -14.25156021118164
    9. '.b' → logprob: -14.87656021118164
    10. 'l' → logprob: -14.87656021118164

Token 298: '(tt' (ID: 90971)
  Prédit: '(cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cm' → logprob: -4.36574100604048e-06
    2. 'cm' → logprob: -12.500004768371582
    3. '(' → logprob: -15.000004768371582
    4. ' cm' → logprob: -16.125003814697266
    5. '(
' → logprob: -16.125003814697266
    6. '/cm' → logprob: -17.375003814697266
    7. '```' → logprob: -17.500003814697266
    8. '(c' → logprob: -18.000003814697266
    9. '(mm' → logprob: -18.000003814697266
    10. '_cm' → logprob: -18.375003814697266

Token 299: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025699442252516747
    2. ',r' → logprob: -4.025699615478516
    3. ',l' → logprob: -4.900699615478516
    4. ' ,' → logprob: -10.275699615478516
    5. ',ll' → logprob: -10.650699615478516
    6. ',t' → logprob: -12.400699615478516
    7. ',n' → logprob: -12.775699615478516
    8. ',[' → logprob: -12.900699615478516
    9. ',s' → logprob: -13.150699615478516
    10. 'r' → logprob: -13.900699615478516

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028609247878193855
    2. ')-' → logprob: -3.653609275817871
    3. ')
' → logprob: -6.153609275817871
    4. '-' → logprob: -8.903609275817871
    5. ',' → logprob: -11.278609275817871
    6. '-)' → logprob: -11.903609275817871
    7. ' )' → logprob: -12.278609275817871
    8. ')
' → logprob: -12.403609275817871
    9. ')

' → logprob: -13.153609275817871
    10. '[' → logprob: -13.278609275817871

Token 301: '       ' (ID: 309)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.1510571986436844
    2. '       ' → logprob: -2.026057243347168
    3. 'rr' → logprob: -6.026057243347168
    4. 'r' → logprob: -6.776057243347168
    5. 'lr' → logprob: -7.026057243347168
    6. 'ur' → logprob: -7.276057243347168
    7. '-' → logprob: -7.401057243347168
    8. 'hi' → logprob: -7.901057243347168
    9. 'li' → logprob: -8.151057243347168
    10. '-ri' → logprob: -8.526057243347168

Token 302: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' (adapté à ' ri') → logprob: -0.003752456046640873
    2. 'r' → logprob: -6.3787522315979
    3. 're' → logprob: -7.1287522315979
    4. 'lj' → logprob: -7.2537522315979
    5. 'ra' → logprob: -9.253752708435059
    6. 'rr' → logprob: -9.503752708435059
    7. 'lr' → logprob: -9.628752708435059
    8. 'ru' → logprob: -9.753752708435059
    9. 'li' → logprob: -10.253752708435059
    10. 'ir' → logprob: -10.378752708435059

Token 303: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.143808109802194e-05
    2. ' =' → logprob: -10.500041007995605
    3. '=b' → logprob: -11.250041007995605
    4. '=
' → logprob: -14.625041007995605
    5. '=

' → logprob: -15.375041007995605
    6. '=int' → logprob: -15.875041007995605
    7. '=batch' → logprob: -18.750041961669922
    8. '=len' → logprob: -19.125041961669922
    9. '=`' → logprob: -19.250041961669922
    10. '=}' → logprob: -19.375041961669922

Token 304: 'bis' (ID: 38042)
  Prédit: 'bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -3.650518920039758e-06
    2. ' bis' → logprob: -12.625003814697266
    3. 'b' → logprob: -15.875003814697266
    4. 'bi' → logprob: -16.625003814697266
    5. 'bs' → logprob: -17.875003814697266
    6. '	b' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '```' → logprob: -19.000003814697266
    9. 'bir' → logprob: -19.125003814697266
    10. 'ins' → logprob: -19.375003814697266

Token 305: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.16029387712478638
    2. 'ct' → logprob: -1.9102938175201416
    3. 'sect' → logprob: -10.285293579101562
    4. 'lect' → logprob: -10.785293579101562
    5. 't' → logprob: -12.410293579101562
    6. '_left' → logprob: -12.910293579101562
    7. 'ects' → logprob: -12.910293579101562
    8. 'left' → logprob: -13.910293579101562
    9. 'ectl' → logprob: -14.035293579101562
    10. 'c' → logprob: -14.535293579101562

Token 306: '_left' (ID: 22189)
  Prédit: 'ght'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ght' → logprob: -0.07092701643705368
    2. 'ight' → logprob: -2.8209269046783447
    3. '_right' → logprob: -5.195927143096924
    4. 't' → logprob: -6.445927143096924
    5. 'right' → logprob: -7.570927143096924
    6. 'ht' → logprob: -7.820927143096924
    7. 'gt' → logprob: -7.820927143096924
    8. '_left' → logprob: -8.070926666259766
    9. 'gh' → logprob: -9.445926666259766
    10. 'left' → logprob: -10.195926666259766

Token 307: '(tt' (ID: 90971)
  Prédit: '(tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tt' → logprob: -1.981667537620524e-06
    2. '(rr' → logprob: -14.000001907348633
    3. 'tt' → logprob: -14.250001907348633
    4. ' tt' → logprob: -15.625001907348633
    5. '(' → logprob: -15.875001907348633
    6. ' (' → logprob: -17.250001907348633
    7. '(t' → logprob: -17.750001907348633
    8. '_tt' → logprob: -18.875001907348633
    9. '(rt' → logprob: -19.125001907348633
    10. '(r' → logprob: -19.375001907348633

Token 308: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.011076832190155983
    2. ',' → logprob: -4.511076927185059
    3. '(r' → logprob: -11.261076927185059
    4. ',(' → logprob: -12.011076927185059
    5. ' ,' → logprob: -12.136076927185059
    6. 'r' → logprob: -12.636076927185059
    7. ' r' → logprob: -15.261076927185059
    8. ',n' → logprob: -15.636076927185059
    9. ',
' → logprob: -16.136075973510742
    10. ',b' → logprob: -16.261075973510742

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07269041985273361
    2. ')+' → logprob: -2.822690486907959
    3. ')
' → logprob: -4.572690486907959
    4. '+' → logprob: -8.0726900100708
    5. ')-' → logprob: -11.1976900100708
    6. ')
' → logprob: -13.0726900100708
    7. ')

' → logprob: -13.4476900100708
    8. ')return' → logprob: -13.8226900100708
    9. ' )' → logprob: -14.3226900100708
    10. ')>' → logprob: -14.5726900100708

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5426382422447205
    2. '<|end|>' → logprob: -1.0426383018493652
    3. '
' → logprob: -3.6676383018493652
    4. ')' → logprob: -3.9176383018493652
    5. ' if' → logprob: -5.542638301849365
    6. '[' → logprob: -5.542638301849365
    7. '+' → logprob: -5.792638301849365
    8. '   ' → logprob: -5.917638301849365
    9. 'if' → logprob: -6.542638301849365
    10. '#' → logprob: -6.792638301849365

Token 311: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03720074146986008
    2. 'if' → logprob: -4.037200927734375
    3. 'res' → logprob: -4.412200927734375
    4. 'ans' → logprob: -5.412200927734375
    5. 'pr' → logprob: -7.162200927734375
    6. ' print' → logprob: -7.912200927734375
    7. '       ' → logprob: -8.037200927734375
    8. 's' → logprob: -8.912200927734375
    9. ' if' → logprob: -9.162200927734375
    10. 'val' → logprob: -9.412200927734375

Token 312: '(pow' (ID: 189160)
  Prédit: '(cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cm' → logprob: -0.9509916305541992
    2. '(abs' → logprob: -1.5759916305541992
    3. '(int' → logprob: -1.7009916305541992
    4. '(round' → logprob: -1.8259916305541992
    5. '(f' → logprob: -3.075991630554199
    6. '(' → logprob: -5.075991630554199
    7. '("{' → logprob: -6.075991630554199
    8. '("%.' → logprob: -6.200991630554199
    9. '(max' → logprob: -6.325991630554199
    10. 'int' → logprob: -7.075991630554199

Token 313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008854917832650244
    2. '10' → logprob: -7.125885486602783
    3. ')' → logprob: -10.125885963439941
    4. '(
' → logprob: -11.125885963439941
    5. '
' → logprob: -11.750885963439941
    6. '```' → logprob: -12.125885963439941
    7. ' (' → logprob: -13.625885963439941
    8. '((' → logprob: -13.625885963439941
    9. '(pow' → logprob: -13.875885963439941
    10. '))' → logprob: -13.875885963439941

Token 314: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004257188644260168
    2. '(' → logprob: -5.5042572021484375
    3. ' ' → logprob: -9.629257202148438
    4. ')' → logprob: -9.754257202148438
    5. '   ' → logprob: -10.754257202148438
    6. '
' → logprob: -11.754257202148438
    7. '```' → logprob: -12.504257202148438
    8. '    ' → logprob: -12.879257202148438
    9. '1' → logprob: -13.004257202148438
    10. '       ' → logprob: -13.504257202148438

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003156568855047226
    2. ',int' → logprob: -6.628156661987305
    3. ',float' → logprob: -7.378156661987305
    4. 'cm' → logprob: -7.503156661987305
    5. ' ,' → logprob: -8.378156661987305
    6. ',(' → logprob: -8.878156661987305
    7. ',
' → logprob: -9.253156661987305
    8. ' cm' → logprob: -9.503156661987305
    9. ',c' → logprob: -10.003156661987305
    10. '(cm' → logprob: -11.128156661987305

Token 316: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0017347980756312609
    2. ' cm' → logprob: -6.376734733581543
    3. '(cm' → logprob: -10.501734733581543
    4. '   ' → logprob: -12.876734733581543
    5. '/cm' → logprob: -13.751734733581543
    6. ' ' → logprob: -14.876734733581543
    7. 'round' → logprob: -15.376734733581543
    8. ')' → logprob: -15.751734733581543
    9. '_cm' → logprob: -15.876734733581543
    10. 'cmath' → logprob: -16.00173568725586

Token 317: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.014684110297821e-06
    2. '[r' → logprob: -11.625008583068848
    3. ' [' → logprob: -17.375009536743164
    4. '[
' → logprob: -17.625009536743164
    5. 'ri' → logprob: -17.750009536743164
    6. '[-' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.125009536743164
    8. ')' → logprob: -18.750009536743164
    9. '[right' → logprob: -18.875009536743164
    10. '][' → logprob: -19.125009536743164

Token 318: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0007997421780601144
    2. '[' → logprob: -7.250799655914307
    3. ' ri' → logprob: -9.375800132751465
    4. '   ' → logprob: -13.125800132751465
    5. 'r' → logprob: -13.625800132751465
    6. '
' → logprob: -14.750800132751465
    7. ')' → logprob: -14.875800132751465
    8. '[r' → logprob: -15.625800132751465
    9. '(' → logprob: -15.875800132751465
    10. '-ri' → logprob: -15.875800132751465

Token 319: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.28151240944862366
    2. ']' → logprob: -1.4065123796463013
    3. '])' → logprob: -9.031512260437012
    4. '])-' → logprob: -9.781512260437012
    5. ' ]' → logprob: -10.031512260437012
    6. '[' → logprob: -10.281512260437012
    7. '-' → logprob: -10.531512260437012
    8. '+' → logprob: -10.656512260437012
    9. ']+' → logprob: -10.781512260437012
    10. ')-' → logprob: -11.281512260437012

Token 320: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.7697225252486533e-06
    2. ' cm' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.250003814697266
    4. '(cm' → logprob: -20.250003814697266
    5. '/cm' → logprob: -21.375003814697266
    6. '
' → logprob: -22.875003814697266
    7. 'ci' → logprob: -22.875003814697266
    8. '_cm' → logprob: -23.625003814697266
    9. '.cm' → logprob: -23.750003814697266
    10. 'cn' → logprob: -23.875003814697266

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5570885807392187e-05
    2. 'li' → logprob: -11.125015258789062
    3. '(li' → logprob: -14.500015258789062
    4. '   ' → logprob: -15.750015258789062
    5. '[
' → logprob: -16.750015258789062
    6. '<li' → logprob: -16.750015258789062
    7. ' li' → logprob: -18.375015258789062
    8. '_li' → logprob: -18.625015258789062
    9. ' [' → logprob: -19.125015258789062
    10. '	' → logprob: -19.625015258789062

Token 322: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -2.45848218582978e-06
    2. ' li' → logprob: -13.62500286102295
    3. '(li' → logprob: -13.87500286102295
    4. '<li' → logprob: -15.12500286102295
    5. '   ' → logprob: -18.250001907348633
    6. '/li' → logprob: -19.250001907348633
    7. '[' → logprob: -19.500001907348633
    8. '-li' → logprob: -20.125001907348633
    9. '(' → logprob: -20.250001907348633
    10. '_li' → logprob: -20.375001907348633

Token 323: ']+' (ID: 15344)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007727887947112322
    2. '),' → logprob: -5.382728099822998
    3. ' ))' → logprob: -6.382728099822998
    4. ')' → logprob: -6.757728099822998
    5. ')))' → logprob: -9.38272762298584
    6. '))
' → logprob: -10.00772762298584
    7. '-' → logprob: -10.38272762298584
    8. '*))' → logprob: -11.13272762298584
    9. ' )' → logprob: -11.38272762298584
    10. ' ),' → logprob: -11.63272762298584

Token 324: '9' (ID: 24)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.2008391171693802
    2. 'aa' → logprob: -1.8258391618728638
    3. 'tt' → logprob: -4.450839042663574
    4. '(' → logprob: -5.950839042663574
    5. '(log' → logprob: -5.950839042663574
    6. 'a' → logprob: -6.700839042663574
    7. ')' → logprob: -7.450839042663574
    8. '1' → logprob: -7.950839042663574
    9. ' log' → logprob: -7.950839042663574
    10. '))' → logprob: -8.200839042663574

Token 325: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1317029744386673
    2. ')' → logprob: -2.6317028999328613
    3. '),' → logprob: -3.6317028999328613
    4. '-' → logprob: -3.8817028999328613
    5. ',' → logprob: -5.756702899932861
    6. ' -' → logprob: -8.00670337677002
    7. ' ))' → logprob: -8.00670337677002
    8. ')))' → logprob: -8.50670337677002
    9. ' )' → logprob: -9.75670337677002
    10. ')}' → logprob: -10.75670337677002

Token 326: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 325
Tokens correctement prédits (1ère position, stricte): 149
Tokens correctement prédits (1ère position, avec adaptation): 156
Tokens correctement prédits (top 10): 266
Précision stricte (1ère position): 45.85%
Précision adaptée (1ère position): 48.00%
Précision (top 10): 81.85%
================================================================================
