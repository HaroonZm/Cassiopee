================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N=int(input())

E=[list(map(int,input().split())) for i in range(N)]

QU=int(input())

Q=[list(map(int,input().split())) for i in range(QU)]

TIMELIST=[]
for t,a in E:
    TIMELIST.append(t)

for l,r in Q:
    TIMELIST.append(l)
    TIMELIST.append(r)

compression_dict={a: ind for ind, a in enumerate(sorted(set(TIMELIST)))}

for i in range(N):
    E[i][0]=compression_dict[E[i][0]]

for i in range(QU):
    Q[i]=[compression_dict[Q[i][0]],compression_dict[Q[i][1]]]

    

def seg_function(x,y):# Segment treeで扱うfunction
    return x*y

seg_el=1<<(len(compression_dict).bit_length())# Segment treeの台の要素数
SEG=[1]*(2*seg_el)# 1-indexedなので、要素数2*seg_el.Segment treeの初期値で初期化

for t,a in E:
    SEG[t+seg_el]=1-0.1*a

for i in range(seg_el-1,0,-1):# 親の部分もupdate
    SEG[i]=seg_function(SEG[i*2],SEG[i*2+1])

def update(n,x,seg_el):# A[n]をxへ更新（反映）
    i=n+seg_el
    SEG[i]=x
    i>>=1# 子ノードへ
    
    while i!=0:
        SEG[i]=seg_function(SEG[i*2],SEG[i*2+1])
        i>>=1
        
def getvalues(l,r):# 区間[l,r)に関するseg_functionを調べる
    L=l+seg_el
    R=r+seg_el
    ANS=1

    while L<R:
        if L & 1:
            ANS=ANS*SEG[L]
            L+=1

        if R & 1:
            R-=1
            ANS=ANS*SEG[R]
        L>>=1
        R>>=1

    return ANS

for l,r in Q:
    print(10**9*getvalues(l,r))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12724284827709198
    2. 'sys' → logprob: -2.1272428035736084
    3. ' input' → logprob: -8.752243041992188
    4. 'input' → logprob: -8.877243041992188
    5. '	sys' → logprob: -11.877243041992188
    6. '=sys' → logprob: -12.127243041992188
    7. '(sys' → logprob: -12.877243041992188
    8. ' ' → logprob: -13.502243041992188
    9. ' system' → logprob: -15.002243041992188
    10. '_sys' → logprob: -15.627243041992188

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013680962147191167
    2. ' .' → logprob: -7.376368045806885
    3. '.stdin' → logprob: -7.751368045806885
    4. '.import' → logprob: -9.251368522644043
    5. '.readline' → logprob: -9.501368522644043
    6. '.
' → logprob: -10.126368522644043
    7. '.argv' → logprob: -10.376368522644043
    8. '.stdout' → logprob: -11.501368522644043
    9. '.input' → logprob: -11.501368522644043
    10. '.exit' → logprob: -12.001368522644043

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17288635671138763
    2. '(' → logprob: -1.9228863716125488
    3. '()
' → logprob: -5.672886371612549
    4. '(
' → logprob: -6.047886371612549
    5. '\' → logprob: -6.297886371612549
    6. '\n' → logprob: -6.672886371612549
    7. '
' → logprob: -6.797886371612549
    8. '()\' → logprob: -6.922886371612549
    9. '().' → logprob: -7.172886371612549
    10. '()

' → logprob: -8.79788589477539

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130169808864594
    2. '(' → logprob: -1.8063017129898071
    3. '().' → logprob: -6.806301593780518
    4. '()
' → logprob: -8.806302070617676
    5. '(
' → logprob: -10.056302070617676
    6. '()

' → logprob: -10.306302070617676
    7. ')' → logprob: -10.431302070617676
    8. '#' → logprob: -10.431302070617676
    9. 'def' → logprob: -10.681302070617676
    10. 'a' → logprob: -10.681302070617676

Token 10: '=int' (ID: 37431)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8452599048614502
    2. ')' → logprob: -1.5952599048614502
    3. ' =' → logprob: -1.8452599048614502
    4. '=' → logprob: -1.8452599048614502
    5. '[' → logprob: -4.470259666442871
    6. '>' → logprob: -4.970259666442871
    7. ' )' → logprob: -5.095259666442871
    8. '.' → logprob: -5.345259666442871
    9. '<|end|>' → logprob: -5.595259666442871
    10. '+' → logprob: -5.970259666442871

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002523992152418941
    2. '(N' → logprob: -9.125252723693848
    3. '(input' → logprob: -9.625252723693848
    4. '('' → logprob: -10.500252723693848
    5. ' (' → logprob: -10.750252723693848
    6. '()' → logprob: -12.250252723693848
    7. '<|end|>' → logprob: -12.625252723693848
    8. '("("' → logprob: -12.875252723693848
    9. '(
' → logprob: -13.000252723693848
    10. '(`' → logprob: -13.375252723693848

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28561896085739136
    2. ')' → logprob: -1.5356190204620361
    3. '()' → logprob: -3.410619020462036
    4. '(' → logprob: -9.535618782043457
    5. ' ())' → logprob: -11.160618782043457
    6. '().' → logprob: -12.410618782043457
    7. '`)' → logprob: -12.535618782043457
    8. ' )' → logprob: -12.785618782043457
    9. '())
' → logprob: -13.410618782043457
    10. '))' → logprob: -13.660618782043457

Token 13: 'E' (ID: 36)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05869033560156822
    2. 'data' → logprob: -3.933690309524536
    3. 'arr' → logprob: -4.933690547943115
    4. 'a' → logprob: -5.058690547943115
    5. 'result' → logprob: -5.058690547943115
    6. 'if' → logprob: -5.558690547943115
    7. 'dp' → logprob: -5.558690547943115
    8. 's' → logprob: -6.558690547943115
    9. 'lst' → logprob: -6.683690547943115
    10. 'array' → logprob: -6.683690547943115

Token 14: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7766338586807251
    2. ' =' → logprob: -1.526633858680725
    3. '_' → logprob: -3.4016337394714355
    4. 'x' → logprob: -3.5266337394714355
    5. 'N' → logprob: -3.6516337394714355
    6. ',' → logprob: -3.6516337394714355
    7. 'm' → logprob: -3.9016337394714355
    8. 'nt' → logprob: -4.1516337394714355
    9. 'n' → logprob: -4.2766337394714355
    10. 'd' → logprob: -4.4016337394714355

Token 15: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9857721924781799
    2. '0' → logprob: -1.1107721328735352
    3. 'int' → logprob: -1.4857721328735352
    4. ']' → logprob: -2.985772132873535
    5. '[]' → logprob: -4.860772132873535
    6. ']int' → logprob: -5.735772132873535
    7. 'tuple' → logprob: -5.985772132873535
    8. '()]' → logprob: -6.110772132873535
    9. '(int' → logprob: -6.360772132873535
    10. ']*' → logprob: -7.110772132873535

Token 16: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002569289645180106
    2. '(' → logprob: -8.375256538391113
    3. '(input' → logprob: -11.375256538391113
    4. '()' → logprob: -11.625256538391113
    5. '(int' → logprob: -13.125256538391113
    6. 'map' → logprob: -13.250256538391113
    7. '(range' → logprob: -14.250256538391113
    8. ' map' → logprob: -14.500256538391113
    9. '()]' → logprob: -15.125256538391113
    10. '(eval' → logprob: -15.500256538391113

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002797510474920273
    2. '(' → logprob: -6.252797603607178
    3. '(str' → logprob: -7.502797603607178
    4. '(lambda' → logprob: -8.62779712677002
    5. 'int' → logprob: -9.62779712677002
    6. '<|end|>' → logprob: -10.87779712677002
    7. '[int' → logprob: -11.87779712677002
    8. '=int' → logprob: -11.87779712677002
    9. '(input' → logprob: -12.00279712677002
    10. ')' → logprob: -12.00279712677002

Token 18: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20911280810832977
    2. '(' → logprob: -1.7091127634048462
    3. ',input' → logprob: -5.584112644195557
    4. ',' → logprob: -6.084112644195557
    5. ')' → logprob: -6.959112644195557
    6. '<|end|>' → logprob: -8.709113121032715
    7. '(x' → logprob: -9.459113121032715
    8. 'input' → logprob: -9.834113121032715
    9. '(sys' → logprob: -9.959113121032715
    10. '(INPUT' → logprob: -10.209113121032715

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7729658540920354e-05
    2. '()' → logprob: -11.250027656555176
    3. '()))' → logprob: -11.875027656555176
    4. '())' → logprob: -12.750027656555176
    5. '.readline' → logprob: -13.000027656555176
    6. '.split' → logprob: -13.875027656555176
    7. 'split' → logprob: -14.250027656555176
    8. ')' → logprob: -15.750027656555176
    9. '(' → logprob: -15.875027656555176
    10. '())))' → logprob: -15.875027656555176

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.039901863783597946
    2. 'strip' → logprob: -3.2899019718170166
    3. 'rstrip' → logprob: -6.2899017333984375
    4. ' split' → logprob: -12.664901733398438
    5. '(split' → logprob: -15.414901733398438
    6. 'read' → logprob: -15.664901733398438
    7. ' strip' → logprob: -15.914901733398438
    8. 'rs' → logprob: -16.414901733398438
    9. ')' → logprob: -17.289901733398438
    10. 'spl' → logprob: -17.914901733398438

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08078913390636444
    2. '))' → logprob: -2.580789089202881
    3. '()' → logprob: -7.080789089202881
    4. '())' → logprob: -7.330789089202881
    5. '(' → logprob: -8.205789566040039
    6. '())))' → logprob: -9.830789566040039
    7. ')' → logprob: -10.705789566040039
    8. ')))' → logprob: -10.705789566040039
    9. '()))
' → logprob: -11.205789566040039
    10. '()));' → logprob: -12.580789566040039

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19698534905910492
    2. ']' → logprob: -1.9469853639602661
    3. ' for' → logprob: -4.321985244750977
    4. 'for' → logprob: -4.321985244750977
    5. ')]' → logprob: -5.446985244750977
    6. '[' → logprob: -5.696985244750977
    7. '()' → logprob: -7.196985244750977
    8. '])' → logprob: -7.571985244750977
    9. '()]' → logprob: -8.571985244750977
    10. '(' → logprob: -8.946985244750977

Token 23: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08404595404863358
    2. ' _' → logprob: -2.834045886993408
    3. ' range' → logprob: -3.834045886993408
    4. ' i' → logprob: -9.709046363830566
    5. ' ' → logprob: -9.834046363830566
    6. 'range' → logprob: -9.959046363830566
    7. '_range' → logprob: -10.334046363830566
    8. ' in' → logprob: -11.334046363830566
    9. ' ' → logprob: -12.959046363830566
    10. '_i' → logprob: -13.334046363830566

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009836959652602673
    2. 'in' → logprob: -4.6348371505737305
    3. 'range' → logprob: -10.00983715057373
    4. ' range' → logprob: -10.38483715057373
    5. ' ' → logprob: -12.88483715057373
    6. '	in' → logprob: -13.75983715057373
    7. '<|end|>' → logprob: -14.75983715057373
    8. '(range' → logprob: -15.50983715057373
    9. ')' → logprob: -15.75983715057373
    10. '  ' → logprob: -16.259836196899414

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132633566856384
    2. 'range' → logprob: -1.3132634162902832
    3. '	range' → logprob: -13.813262939453125
    4. '(range' → logprob: -14.688262939453125
    5. '_range' → logprob: -16.813262939453125
    6. ' ' → logprob: -16.938262939453125
    7. 'rang' → logprob: -17.063262939453125
    8. 'Range' → logprob: -17.938262939453125
    9. '.range' → logprob: -17.938262939453125
    10. ' xrange' → logprob: -18.563262939453125

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000913370808120817
    2. '(' → logprob: -7.000913143157959
    3. '(n' → logprob: -14.000913619995117
    4. '(range' → logprob: -15.125913619995117
    5. ' range' → logprob: -15.250913619995117
    6. ' (' → logprob: -15.625913619995117
    7. '(
' → logprob: -16.500913619995117
    8. '(len' → logprob: -16.875913619995117
    9. 'range' → logprob: -17.000913619995117
    10. '(E' → logprob: -17.125913619995117

Token 27: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000453910295618698
    2. ']' → logprob: -8.50045394897461
    3. ')' → logprob: -9.00045394897461
    4. '])]' → logprob: -9.37545394897461
    5. ')])' → logprob: -10.62545394897461
    6. '])' → logprob: -11.12545394897461
    7. ')],' → logprob: -14.00045394897461
    8. '))' → logprob: -14.25045394897461
    9. ')}' → logprob: -15.25045394897461
    10. ')][' → logprob: -15.50045394897461

Token 28: 'QU' (ID: 9866)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17203903198242188
    2. 'for' → logprob: -2.172039031982422
    3. '\n' → logprob: -3.672039031982422
    4. '#' → logprob: -5.922039031982422
    5. ')' → logprob: -6.047039031982422
    6. '\' → logprob: -6.172039031982422
    7. '<|end|>' → logprob: -6.547039031982422
    8. 'result' → logprob: -6.797039031982422
    9. '[' → logprob: -6.797039031982422
    10. '```' → logprob: -6.922039031982422

Token 29: '=int' (ID: 37431)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07232666015625
    2. 'ES' → logprob: -3.69732666015625
    3. 'ER' → logprob: -3.82232666015625
    4. 'EST' → logprob: -4.07232666015625
    5. 'ERY' → logprob: -6.19732666015625
    6. '[' → logprob: -6.57232666015625
    7. 'EU' → logprob: -6.69732666015625
    8. '

' → logprob: -8.69732666015625
    9. '_E' → logprob: -9.07232666015625
    10. 'I' → logprob: -9.19732666015625

Token 30: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031846018973737955
    2. '(' → logprob: -5.753184795379639
    3. '()' → logprob: -13.00318431854248
    4. ' (' → logprob: -13.50318431854248
    5. '(int' → logprob: -14.50318431854248
    6. 'input' → logprob: -14.75318431854248
    7. '(sys' → logprob: -14.75318431854248
    8. '(list' → logprob: -15.62818431854248
    9. '(in' → logprob: -15.75318431854248
    10. '((' → logprob: -15.75318431854248

Token 31: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1020079255104065
    2. '()' → logprob: -2.3520078659057617
    3. ')' → logprob: -6.352007865905762
    4. ' ())' → logprob: -10.852007865905762
    5. '(' → logprob: -11.227007865905762
    6. '()))' → logprob: -11.852007865905762
    7. '().' → logprob: -12.352007865905762
    8. '();)' → logprob: -12.602007865905762
    9. '()
' → logprob: -12.727007865905762
    10. '())
' → logprob: -13.102007865905762

Token 32: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.27120622992515564
    2. 'for' → logprob: -1.521206259727478
    3. 'q' → logprob: -4.771206378936768
    4. 'result' → logprob: -5.896206378936768
    5. 'query' → logprob: -6.146206378936768
    6. 'queries' → logprob: -6.646206378936768
    7. 'r' → logprob: -7.396206378936768
    8. 'results' → logprob: -7.521206378936768
    9. 'a' → logprob: -7.896206378936768
    10. 'A' → logprob: -7.896206378936768

Token 33: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3225141763687134
    2. '=[]' → logprob: -1.6975141763687134
    3. '=[' → logprob: -3.197514057159424
    4. ' =' → logprob: -3.322514057159424
    5. 'U' → logprob: -4.572514057159424
    6. '_' → logprob: -7.072514057159424
    7. '=[]
' → logprob: -7.197514057159424
    8. '[' → logprob: -7.572514057159424
    9. ' =[' → logprob: -7.572514057159424
    10. '=int' → logprob: -7.697514057159424

Token 34: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.870950215263292e-05
    2. ' list' → logprob: -10.250048637390137
    3. 'tuple' → logprob: -11.750048637390137
    4. '(list' → logprob: -12.875048637390137
    5. 'int' → logprob: -13.250048637390137
    6. 'map' → logprob: -13.875048637390137
    7. 'input' → logprob: -16.500049591064453
    8. '	list' → logprob: -17.500049591064453
    9. '=list' → logprob: -18.375049591064453
    10. ' tuple' → logprob: -18.750049591064453

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.893480243277736e-05
    2. '(' → logprob: -10.250039100646973
    3. 'map' → logprob: -13.500039100646973
    4. '(int' → logprob: -13.750039100646973
    5. ' (' → logprob: -15.250039100646973
    6. '	map' → logprob: -15.875039100646973
    7. ',map' → logprob: -16.000038146972656
    8. '(input' → logprob: -16.250038146972656
    9. '_map' → logprob: -16.375038146972656
    10. '(
' → logprob: -16.500038146972656

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009249189170077443
    2. ',int' → logprob: -8.375925064086914
    3. '<int' → logprob: -8.375925064086914
    4. 'int' → logprob: -8.750925064086914
    5. '=int' → logprob: -8.750925064086914
    6. '[int' → logprob: -9.625925064086914
    7. ']int' → logprob: -10.000925064086914
    8. ')' → logprob: -11.750925064086914
    9. '<|end|>' → logprob: -11.875925064086914
    10. '(' → logprob: -12.000925064086914

Token 37: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0008833571337163448
    2. ',int' → logprob: -7.25088357925415
    3. ',' → logprob: -8.750883102416992
    4. '(input' → logprob: -11.250883102416992
    5. ' ,' → logprob: -13.625883102416992
    6. 'input' → logprob: -14.875883102416992
    7. ',float' → logprob: -16.500883102416992
    8. '=input' → logprob: -16.500883102416992
    9. '(),' → logprob: -16.875883102416992
    10. '(' → logprob: -17.125883102416992

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.375000953674316
    3. '()' → logprob: -15.500000953674316
    4. ' ().' → logprob: -16.875
    5. '.readline' → logprob: -18.75
    6. '(' → logprob: -19.75
    7. ' .' → logprob: -20.0
    8. ').' → logprob: -20.25
    9. '.split' → logprob: -20.875
    10. ')' → logprob: -20.875

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0802738870552275e-05
    2. 'strip' → logprob: -11.75001049041748
    3. ' split' → logprob: -13.25001049041748
    4. 'read' → logprob: -14.12501049041748
    5. 'rstrip' → logprob: -15.37501049041748
    6. '(split' → logprob: -16.750011444091797
    7. '.split' → logprob: -17.125011444091797
    8. 'spl' → logprob: -17.625011444091797
    9. ')' → logprob: -18.750011444091797
    10. 'plit' → logprob: -18.875011444091797

Token 40: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004550696350634098
    2. '))' → logprob: -5.504550933837891
    3. '()' → logprob: -7.879550933837891
    4. '())' → logprob: -9.50455093383789
    5. '(' → logprob: -11.62955093383789
    6. '()))
' → logprob: -12.50455093383789
    7. '())))' → logprob: -12.87955093383789
    8. '())).' → logprob: -14.12955093383789
    9. '()[' → logprob: -14.37955093383789
    10. '()
' → logprob: -14.62955093383789

Token 41: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09133518487215042
    2. '())' → logprob: -3.5913352966308594
    3. '()' → logprob: -3.8413352966308594
    4. ')]' → logprob: -4.216335296630859
    5. 'for' → logprob: -4.591335296630859
    6. '(' → logprob: -4.716335296630859
    7. '()]' → logprob: -6.091335296630859
    8. ' for' → logprob: -6.841335296630859
    9. '(Q' → logprob: -7.841335296630859
    10. ']' → logprob: -8.59133529663086

Token 42: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13823354244232178
    2. 'range' → logprob: -2.1382336616516113
    3. ' in' → logprob: -5.638233661651611
    4. '(' → logprob: -6.263233661651611
    5. ' i' → logprob: -6.513233661651611
    6. '(range' → logprob: -6.513233661651611
    7. '_' → logprob: -6.763233661651611
    8. ' _' → logprob: -7.388233661651611
    9. ' (' → logprob: -8.263233184814453
    10. '(int' → logprob: -8.388233184814453

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03224668651819229
    2. 'in' → logprob: -4.0322465896606445
    3. '(range' → logprob: -5.4072465896606445
    4. ' range' → logprob: -5.6572465896606445
    5. '(' → logprob: -5.7822465896606445
    6. 'range' → logprob: -6.0322465896606445
    7. ' (' → logprob: -7.6572465896606445
    8. '(in' → logprob: -10.657246589660645
    9. ' ' → logprob: -10.907246589660645
    10. '(int' → logprob: -12.782246589660645

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269528865814209
    2. ' range' → logprob: -2.126952886581421
    3. '(range' → logprob: -10.626953125
    4. '(' → logprob: -15.376953125
    5. '	range' → logprob: -16.126953125
    6. ' ' → logprob: -16.376953125
    7. 'in' → logprob: -17.251953125
    8. '   ' → logprob: -17.376953125
    9. '  ' → logprob: -17.751953125
    10. 'Range' → logprob: -19.001953125

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018180029466748238
    2. '(Q' → logprob: -4.018179893493652
    3. ' (' → logprob: -11.268179893493652
    4. 'QU' → logprob: -12.143179893493652
    5. ')' → logprob: -12.518179893493652
    6. '((' → logprob: -13.518179893493652
    7. '(int' → logprob: -14.268179893493652
    8. '(INT' → logprob: -14.268179893493652
    9. '(N' → logprob: -14.518179893493652
    10. 'Q' → logprob: -14.518179893493652

Token 46: 'QU' (ID: 9866)
  Prédit: 'QU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QU' → logprob: -0.002061522798612714
    2. '(' → logprob: -6.877061367034912
    3. 'Q' → logprob: -7.627061367034912
    4. 'range' → logprob: -8.00206184387207
    5. ' QU' → logprob: -8.75206184387207
    6. ' range' → logprob: -10.62706184387207
    7. ')' → logprob: -11.75206184387207
    8. '_QU' → logprob: -11.87706184387207
    9. 'QUIT' → logprob: -12.87706184387207
    10. '(Q' → logprob: -13.00206184387207

Token 47: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005941396811977029
    2. ']' → logprob: -8.000594139099121
    3. '])]' → logprob: -8.500594139099121
    4. ')' → logprob: -10.500594139099121
    5. '])' → logprob: -10.875594139099121
    6. ')])' → logprob: -11.875594139099121
    7. ')],' → logprob: -14.625594139099121
    8. '))' → logprob: -14.875594139099121
    9. '')]' → logprob: -15.125594139099121
    10. ')][' → logprob: -15.750594139099121

Token 48: 'TIM' (ID: 84392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005749844945967197
    2. 'dp' → logprob: -6.630749702453613
    3. 'result' → logprob: -6.880749702453613
    4. 'd' → logprob: -7.130749702453613
    5. 'answers' → logprob: -7.380749702453613
    6. '```' → logprob: -8.005749702453613
    7. 'answer' → logprob: -8.130749702453613
    8. 'res' → logprob: -8.130749702453613
    9. 'results' → logprob: -8.380749702453613
    10. '
' → logprob: -8.880749702453613

Token 49: 'EL' (ID: 3651)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1625613272190094
    2. 'ES' → logprob: -2.5375614166259766
    3. 'ESTAMP' → logprob: -2.9125614166259766
    4. 'EST' → logprob: -4.287561416625977
    5. 'ESP' → logprob: -7.162561416625977
    6. 'EL' → logprob: -7.287561416625977
    7. 'Es' → logprob: -7.537561416625977
    8. 'ESC' → logprob: -7.912561416625977
    9. 'EM' → logprob: -8.662561416625977
    10. 'I' → logprob: -10.037561416625977

Token 50: 'IST' (ID: 6258)
  Prédit: 'INE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INE' → logprob: -0.30294010043144226
    2. 'IMIT' → logprob: -1.9279401302337646
    3. 'INES' → logprob: -2.5529401302337646
    4. 'IM' → logprob: -3.8029401302337646
    5. 'IST' → logprob: -4.6779398918151855
    6. 'I' → logprob: -6.1779398918151855
    7. 'E' → logprob: -6.8029398918151855
    8. 'IME' → logprob: -7.0529398918151855
    9. '[' → logprob: -7.4279398918151855
    10. 'IN' → logprob: -7.9279398918151855

Token 51: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10374195873737335
    2. ' =' → logprob: -2.4787418842315674
    3. '=[]' → logprob: -4.3537421226501465
    4. '_' → logprob: -7.3537421226501465
    5. '[' → logprob: -7.4787421226501465
    6. '=[' → logprob: -7.8537421226501465
    7. ',' → logprob: -9.728741645812988
    8. '_=' → logprob: -10.353741645812988
    9. '={}' → logprob: -10.603741645812988
    10. '[:]' → logprob: -10.853741645812988

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006704123690724373
    2. 'time' → logprob: -6.256704330444336
    3. 'dp' → logprob: -7.006704330444336
    4. 'max' → logprob: -7.381704330444336
    5. 'sum' → logprob: -7.756704330444336
    6. 'count' → logprob: -7.756704330444336
    7. 'stack' → logprob: -8.506704330444336
    8. 'cnt' → logprob: -8.631704330444336
    9. 'answer' → logprob: -8.756704330444336
    10. 'idx' → logprob: -8.756704330444336

Token 53: ' t' (ID: 260)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16888149082660675
    2. 'i' → logprob: -2.168881416320801
    3. ' q' → logprob: -3.918881416320801
    4. 'q' → logprob: -5.293881416320801
    5. ' _' → logprob: -5.668881416320801
    6. ' e' → logprob: -5.918881416320801
    7. ' t' → logprob: -5.918881416320801
    8. '_' → logprob: -6.418881416320801
    9. ' x' → logprob: -7.043881416320801
    10. 'e' → logprob: -7.543881416320801

Token 54: ',a' (ID: 26776)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06505470722913742
    2. 'ime' → logprob: -2.8150546550750732
    3. 'in' → logprob: -6.565054893493652
    4. 'i' → logprob: -7.315054893493652
    5. ' i' → logprob: -8.065054893493652
    6. 'im' → logprob: -8.940054893493652
    7. '_' → logprob: -9.315054893493652
    8. 'o' → logprob: -9.565054893493652
    9. 'imes' → logprob: -9.690054893493652
    10. ' ' → logprob: -9.690054893493652

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32082635164260864
    2. 'in' → logprob: -1.3208262920379639
    3. ',' → logprob: -5.320826530456543
    4. ',in' → logprob: -6.570826530456543
    5. 'n' → logprob: -7.820826530456543
    6. ' ,' → logprob: -8.195826530456543
    7. ',n' → logprob: -8.445826530456543
    8. ' ' → logprob: -9.195826530456543
    9. ',b' → logprob: -10.070826530456543
    10. ',r' → logprob: -10.445826530456543

Token 56: ' E' (ID: 457)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.1426873505115509
    2. ' Q' → logprob: -2.0176873207092285
    3. 'T' → logprob: -11.767687797546387
    4. ' T' → logprob: -13.392687797546387
    5. '	Q' → logprob: -13.892687797546387
    6. '(Q' → logprob: -14.392687797546387
    7. 'QU' → logprob: -15.142687797546387
    8. ' ' → logprob: -15.267687797546387
    9. ' range' → logprob: -15.767687797546387
    10. '   ' → logprob: -16.01768684387207

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.040457421680912e-05
    2. '[:]' → logprob: -11.375070571899414
    3. ' :' → logprob: -11.500070571899414
    4. '():' → logprob: -11.625070571899414
    5. ':**' → logprob: -11.750070571899414
    6. '[:' → logprob: -11.875070571899414
    7. '[' → logprob: -12.125070571899414
    8. ',:' → logprob: -12.250070571899414
    9. '):' → logprob: -12.750070571899414
    10. ':
' → logprob: -12.875070571899414

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005387310869991779
    2. ' TIM' → logprob: -5.755387306213379
    3. ' if' → logprob: -6.880387306213379
    4. 'TIM' → logprob: -8.380387306213379
    5. '<|end|>' → logprob: -8.880387306213379
    6. ' ' → logprob: -9.005387306213379
    7. '```' → logprob: -9.005387306213379
    8. '    
' → logprob: -9.130387306213379
    9. '   ' → logprob: -9.505387306213379
    10. '
' → logprob: -9.755387306213379

Token 59: ' TIM' (ID: 39045)
  Prédit: 'TIM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TIM' (adapté à ' TIM') → logprob: -0.8199297785758972
    2. ' if' → logprob: -1.319929838180542
    3. ' TIM' → logprob: -2.069929838180542
    4. 'if' → logprob: -2.194929838180542
    5. '   ' → logprob: -3.194929838180542
    6. ' for' → logprob: -5.194929599761963
    7. 'for' → logprob: -6.319929599761963
    8. ' a' → logprob: -7.069929599761963
    9. 'a' → logprob: -7.319929599761963
    10. '_TIM' → logprob: -7.632429599761963

Token 60: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -7.226628895296017e-06
    2. 'E' → logprob: -11.875007629394531
    3. 'ELE' → logprob: -15.750007629394531
    4. 'EST' → logprob: -17.37500762939453
    5. 'ESTAMP' → logprob: -18.12500762939453
    6. 'El' → logprob: -18.37500762939453
    7. 'LIST' → logprob: -18.50000762939453
    8. 'ЕЛ' → logprob: -19.12500762939453
    9. 'ES' → logprob: -19.87500762939453
    10. 'ELS' → logprob: -20.00000762939453

Token 61: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -5.676981345459353e-06
    2. 'LIST' → logprob: -12.500005722045898
    3. 'EST' → logprob: -13.625005722045898
    4. 'ST' → logprob: -15.250005722045898
    5. '1' → logprob: -16.3750057220459
    6. 'EL' → logprob: -16.5000057220459
    7. ' IST' → logprob: -16.6250057220459
    8. 'ist' → logprob: -17.1250057220459
    9. '[' → logprob: -17.1250057220459
    10. 'I' → logprob: -17.5000057220459

Token 62: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008679335936903954
    2. '.' → logprob: -4.758679389953613
    3. '.extend' → logprob: -10.133679389953613
    4. ' .' → logprob: -11.258679389953613
    5. '.app' → logprob: -11.883679389953613
    6. '.ap' → logprob: -12.883679389953613
    7. '.add' → logprob: -13.508679389953613
    8. 'append' → logprob: -14.633679389953613
    9. '.insert' → logprob: -15.383679389953613
    10. ' +=' → logprob: -16.133678436279297

Token 63: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7383787631988525
    2. '((' → logprob: -0.9883787631988525
    3. '(' → logprob: -1.9883787631988525
    4. '(a' → logprob: -4.363378524780273
    5. 't' → logprob: -9.113378524780273
    6. '([' → logprob: -9.363378524780273
    7. 'a' → logprob: -10.613378524780273
    8. '(time' → logprob: -11.113378524780273
    9. '(('' → logprob: -11.988378524780273
    10. '(int' → logprob: -12.363378524780273

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009067014791071415
    2. '-' → logprob: -6.009067058563232
    3. '+' → logprob: -6.509067058563232
    4. '*' → logprob: -6.759067058563232
    5. '+a' → logprob: -6.759067058563232
    6. ',' → logprob: -7.134067058563232
    7. ',a' → logprob: -7.509067058563232
    8. ')a' → logprob: -7.884067058563232
    9. '*a' → logprob: -8.384066581726074
    10. ' )' → logprob: -8.509066581726074

Token 65: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7623095512390137
    2. 'sorted' → logprob: -2.0123095512390137
    3. 'for' → logprob: -2.1373095512390137
    4. '.sort' → logprob: -2.5123095512390137
    5. 'Q' → logprob: -2.7623095512390137
    6. '[' → logprob: -2.8873095512390137
    7. '```' → logprob: -3.1373095512390137
    8. 't' → logprob: -3.3873095512390137
    9. 'TIM' → logprob: -3.3873095512390137
    10. ',' → logprob: -3.5123095512390137

Token 66: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06754357367753983
    2. ' t' → logprob: -3.0675435066223145
    3. ' ' → logprob: -5.3175435066223145
    4. 'a' → logprob: -5.4425435066223145
    5. ' i' → logprob: -5.4425435066223145
    6. ' _' → logprob: -5.5675435066223145
    7. '_' → logprob: -7.6925435066223145
    8. ' range' → logprob: -8.317543983459473
    9. 't' → logprob: -8.942543983459473
    10. ' q' → logprob: -9.067543983459473

Token 67: ',r' (ID: 33654)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9968557953834534
    2. ',' → logprob: -1.1218557357788086
    3. ',a' → logprob: -1.8718557357788086
    4. ',t' → logprob: -2.8718557357788086
    5. ',r' → logprob: -3.4968557357788086
    6. ',e' → logprob: -3.8718557357788086
    7. ',_' → logprob: -4.371855735778809
    8. ' ,' → logprob: -4.996855735778809
    9. ',v' → logprob: -5.246855735778809
    10. ',u' → logprob: -5.371855735778809

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2024640291929245
    2. 'in' → logprob: -1.702463984489441
    3. ',' → logprob: -7.0774641036987305
    4. ',in' → logprob: -8.82746410369873
    5. ' ' → logprob: -10.70246410369873
    6. ' ,' → logprob: -11.57746410369873
    7. '	in' → logprob: -11.82746410369873
    8. '   ' → logprob: -12.95246410369873
    9. ',r' → logprob: -13.07746410369873
    10. 'In' → logprob: -13.45246410369873

Token 69: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0059290360659360886
    2. ' Q' → logprob: -5.130928993225098
    3. '	Q' → logprob: -15.130928993225098
    4. ' ' → logprob: -16.630929946899414
    5. '   ' → logprob: -17.130929946899414
    6. '  ' → logprob: -17.380929946899414
    7. ',Q' → logprob: -17.755929946899414
    8. '(Q' → logprob: -18.130929946899414
    9. '<Q' → logprob: -18.130929946899414
    10. 'q' → logprob: -18.380929946899414

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3902033970225602e-05
    2. ':
' → logprob: -11.875014305114746
    3. ':**' → logprob: -13.000014305114746
    4. ' :' → logprob: -13.625014305114746
    5. ',' → logprob: -13.625014305114746
    6. '):' → logprob: -14.375014305114746
    7. ':list' → logprob: -14.625014305114746
    8. ',:' → logprob: -15.375014305114746
    9. '>:' → logprob: -16.12501335144043
    10. ':int' → logprob: -16.50001335144043

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038157496601343155
    2. '    
' → logprob: -6.378815650939941
    3. '    ' → logprob: -7.253815650939941
    4. '<|end|>' → logprob: -7.253815650939941
    5. '
' → logprob: -8.628815650939941
    6. '       ' → logprob: -9.128815650939941
    7. ' for' → logprob: -9.378815650939941
    8. ' ' → logprob: -9.878815650939941
    9. 'print' → logprob: -10.128815650939941
    10. ' 
' → logprob: -10.128815650939941

Token 72: ' TIM' (ID: 39045)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1123756170272827
    2. ' print' → logprob: -1.9873756170272827
    3. 'count' → logprob: -2.1123757362365723
    4. ' count' → logprob: -2.1123757362365723
    5. ' cnt' → logprob: -2.7373757362365723
    6. 'cnt' → logprob: -3.1123757362365723
    7. ' ans' → logprob: -3.4873757362365723
    8. '   ' → logprob: -4.112375736236572
    9. ' pass' → logprob: -4.112375736236572
    10. ' idx' → logprob: -4.237375736236572

Token 73: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -3.2617008400848135e-05
    2. 'ELE' → logprob: -10.875032424926758
    3. 'E' → logprob: -12.000032424926758
    4. '   ' → logprob: -12.750032424926758
    5. 'LIST' → logprob: -13.375032424926758
    6. 'ESTAMP' → logprob: -14.375032424926758
    7. 'EST' → logprob: -14.750032424926758
    8. '_EL' → logprob: -14.875032424926758
    9. 'ЕЛ' → logprob: -15.625032424926758
    10. '```' → logprob: -15.875032424926758

Token 74: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: 0.0
    2. ' IST' → logprob: -17.5
    3. 'ist' → logprob: -18.125
    4. 'ST' → logprob: -18.125
    5. '1' → logprob: -18.5
    6. '   ' → logprob: -18.5
    7. 'ISTS' → logprob: -19.0
    8. 'LIST' → logprob: -19.375
    9. 'I' → logprob: -19.5
    10. '[' → logprob: -19.875

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.024251526221632957
    2. '.' → logprob: -4.524251461029053
    3. '.index' → logprob: -4.649251461029053
    4. '.count' → logprob: -6.399251461029053
    5. '.extend' → logprob: -6.399251461029053
    6. 'index' → logprob: -9.649251937866211
    7. '.sort' → logprob: -10.149251937866211
    8. '.insert' → logprob: -10.774251937866211
    9. '.remove' → logprob: -10.899251937866211
    10. '.add' → logprob: -11.524251937866211

Token 76: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9588625431060791
    2. '(l' → logprob: -0.9588625431060791
    3. '(r' → logprob: -1.458862543106079
    4. '(t' → logprob: -7.8338623046875
    5. '((' → logprob: -7.9588623046875
    6. '(a' → logprob: -10.5838623046875
    7. '(max' → logprob: -10.8338623046875
    8. '('' → logprob: -11.5838623046875
    9. '(s' → logprob: -12.0838623046875
    10. ' (' → logprob: -12.3338623046875

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012683049775660038
    2. ')
' → logprob: -4.637682914733887
    3. ' )' → logprob: -5.887682914733887
    4. ' )
' → logprob: -9.262682914733887
    5. '-' → logprob: -10.387682914733887
    6. '   ' → logprob: -12.137682914733887
    7. '-)' → logprob: -12.512682914733887
    8. '+' → logprob: -12.762682914733887
    9. '),' → logprob: -12.762682914733887
    10. ')\' → logprob: -13.512682914733887

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13364054262638092
    2. '
' → logprob: -3.1336405277252197
    3. '    
' → logprob: -3.6336405277252197
    4. ' 
' → logprob: -3.8836405277252197
    5. '  
' → logprob: -4.758640766143799
    6. '<|end|>' → logprob: -4.758640766143799
    7. '```' → logprob: -6.133640766143799
    8. ',
' → logprob: -6.133640766143799
    9. '+
' → logprob: -6.258640766143799
    10. '\' → logprob: -6.383640766143799

Token 79: ' TIM' (ID: 39045)
  Prédit: 'TIM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TIM' (adapté à ' TIM') → logprob: -0.2540767192840576
    2. '   ' → logprob: -1.5040767192840576
    3. '_TIM' → logprob: -6.879076957702637
    4. '.TIM' → logprob: -7.629076957702637
    5. ' TIM' → logprob: -8.629076957702637
    6. 'Tim' → logprob: -8.754076957702637
    7. '<|end|>' → logprob: -9.004076957702637
    8. '```' → logprob: -10.629076957702637
    9. '    
' → logprob: -10.754076957702637
    10. '   ' → logprob: -11.379076957702637

Token 80: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -0.0008324974915012717
    2. 'E' → logprob: -7.625832557678223
    3. 'ELE' → logprob: -8.375832557678223
    4. 'LIST' → logprob: -9.250832557678223
    5. '_EL' → logprob: -12.625832557678223
    6. 'ESTAMP' → logprob: -12.750832557678223
    7. 'L' → logprob: -12.875832557678223
    8. 'LE' → logprob: -13.750832557678223
    9. 'ELS' → logprob: -13.750832557678223
    10. 'EST' → logprob: -14.000832557678223

Token 81: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -7.362307223957032e-05
    2. 'ST' → logprob: -9.625073432922363
    3. 'I' → logprob: -12.250073432922363
    4. 'LIST' → logprob: -14.250073432922363
    5. 'IS' → logprob: -14.375073432922363
    6. ' IST' → logprob: -14.625073432922363
    7. 'ISTS' → logprob: -14.875073432922363
    8. 'ist' → logprob: -15.750073432922363
    9. '```' → logprob: -16.12507438659668
    10. 'S' → logprob: -16.25007438659668

Token 82: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4298343062400818
    2. '.' → logprob: -1.0548343658447266
    3. '.extend' → logprob: -7.804834365844727
    4. 'append' → logprob: -8.054834365844727
    5. '<|end|>' → logprob: -8.679834365844727
    6. '.
' → logprob: -8.804834365844727
    7. '.sort' → logprob: -10.679834365844727
    8. ' .' → logprob: -11.304834365844727
    9. '.setdefault' → logprob: -12.054834365844727
    10. '_append' → logprob: -12.429834365844727

Token 83: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16023559868335724
    2. '(' → logprob: -1.9102356433868408
    3. 'r' → logprob: -12.285235404968262
    4. '(
' → logprob: -13.160235404968262
    5. ' (' → logprob: -13.535235404968262
    6. '((' → logprob: -13.660235404968262
    7. '('' → logprob: -14.160235404968262
    8. ' r' → logprob: -14.160235404968262
    9. '(space' → logprob: -14.785235404968262
    10. '(

' → logprob: -16.160236358642578

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -14.625007629394531
    4. '<|end|>' → logprob: -15.250007629394531
    5. ')

' → logprob: -17.00000762939453
    6. '}' → logprob: -17.50000762939453
    7. '')' → logprob: -17.50000762939453
    8. '))' → logprob: -17.62500762939453
    9. '`)' → logprob: -18.00000762939453
    10. ')return' → logprob: -18.00000762939453

Token 85: 'compression' (ID: 157910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2578042149543762
    2. 'TIM' → logprob: -3.1328041553497314
    3. '
' → logprob: -3.2578041553497314
    4. '#' → logprob: -3.5078041553497314
    5. '\n' → logprob: -3.7578041553497314
    6. 'sorted' → logprob: -3.7578041553497314
    7. '.sort' → logprob: -4.1328043937683105
    8. ']' → logprob: -4.2578043937683105
    9. '```' → logprob: -5.2578043937683105
    10. '=' → logprob: -5.2578043937683105

Token 86: '_dict' (ID: 11295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03753044083714485
    2. ' =' → logprob: -3.9125304222106934
    3. '={}' → logprob: -4.537530422210693
    4. '_' → logprob: -5.912530422210693
    5. '_map' → logprob: -6.037530422210693
    6. '=[]' → logprob: -7.662530422210693
    7. '_=' → logprob: -9.412530899047852
    8. '=_' → logprob: -9.662530899047852
    9. '_dict' → logprob: -9.662530899047852
    10. ',' → logprob: -9.912530899047852

Token 87: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5272356271743774
    2. ' =' → logprob: -0.9022356271743774
    3. '={}' → logprob: -5.527235507965088
    4. ' ={' → logprob: -9.902235984802246
    5. '={' → logprob: -10.277235984802246
    6. '={"' → logprob: -11.152235984802246
    7. '={'' → logprob: -11.402235984802246
    8. '=dict' → logprob: -13.027235984802246
    9. '＝' → logprob: -13.027235984802246
    10. '=[]' → logprob: -13.527235984802246

Token 88: 'a' (ID: 64)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0007769925869069993
    2. '0' → logprob: -7.625776767730713
    3. 't' → logprob: -8.625777244567871
    4. '}
' → logprob: -10.250777244567871
    5. ' }' → logprob: -10.375777244567871
    6. '}

' → logprob: -12.000777244567871
    7. 'v' → logprob: -12.000777244567871
    8. 'x' → logprob: -12.250777244567871
    9. 'k' → logprob: -12.250777244567871
    10. '}\' → logprob: -12.750777244567871

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01647265814244747
    2. ':i' → logprob: -4.141472816467285
    3. ':index' → logprob: -8.266472816467285
    4. ':a' → logprob: -9.891472816467285
    5. ':t' → logprob: -10.266472816467285
    6. ':l' → logprob: -11.016472816467285
    7. ' :' → logprob: -11.016472816467285
    8. ':x' → logprob: -11.266472816467285
    9. ':-' → logprob: -12.016472816467285
    10. ':min' → logprob: -12.016472816467285

Token 90: ' ind' (ID: 1383)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004066763445734978
    2. 'idx' → logprob: -5.6290669441223145
    3. 'len' → logprob: -8.379066467285156
    4. ' i' → logprob: -8.629066467285156
    5. 'b' → logprob: -10.629066467285156
    6. 'index' → logprob: -10.754066467285156
    7. ' idx' → logprob: -12.129066467285156
    8. '0' → logprob: -12.629066467285156
    9. 'a' → logprob: -14.004066467285156
    10. '[i' → logprob: -14.254066467285156

Token 91: ' for' (ID: 395)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0025189423467963934
    2. ' for' → logprob: -6.002519130706787
    3. 'for' → logprob: -11.002518653869629
    4. 'dex' → logprob: -11.502518653869629
    5. ' ' → logprob: -12.127518653869629
    6. '+' → logprob: -12.877518653869629
    7. 'ext' → logprob: -13.002518653869629
    8. ' ex' → logprob: -13.127518653869629
    9. 'x' → logprob: -13.502518653869629
    10. '   ' → logprob: -14.752518653869629

Token 92: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -9.686778503237292e-05
    2. ' ind' → logprob: -9.250097274780273
    3. '(ind' → logprob: -15.000097274780273
    4. 'a' → logprob: -16.250097274780273
    5. 'indt' → logprob: -16.375097274780273
    6. ',' → logprob: -16.750097274780273
    7. '_ind' → logprob: -18.000097274780273
    8. ' ' → logprob: -18.125097274780273
    9. '[ind' → logprob: -18.125097274780273
    10. 'inding' → logprob: -18.500097274780273

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010826025158166885
    2. 'ex' → logprob: -5.135826110839844
    3. ',a' → logprob: -5.635826110839844
    4. 'dex' → logprob: -7.260826110839844
    5. 'a' → logprob: -9.010826110839844
    6. 'enumer' → logprob: -9.135826110839844
    7. ',in' → logprob: -9.385826110839844
    8. 'in' → logprob: -9.885826110839844
    9. ',x' → logprob: -10.010826110839844
    10. ',val' → logprob: -10.510826110839844

Token 94: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11356639862060547
    2. ' a' → logprob: -2.2385663986206055
    3. 'enumer' → logprob: -7.6135663986206055
    4. '<|end|>' → logprob: -8.488566398620605
    5. ' enumerate' → logprob: -10.613566398620605
    6. ' in' → logprob: -11.863566398620605
    7. '(a' → logprob: -13.113566398620605
    8. '(' → logprob: -13.238566398620605
    9. ' ' → logprob: -13.488566398620605
    10. '>a' → logprob: -13.738566398620605

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38694387674331665
    2. 'in' → logprob: -1.1369438171386719
    3. 'enumer' → logprob: -9.886943817138672
    4. '<|end|>' → logprob: -12.386943817138672
    5. ' ' → logprob: -12.511943817138672
    6. ',' → logprob: -12.886943817138672
    7. 'n' → logprob: -13.261943817138672
    8. 'In' → logprob: -13.761943817138672
    9. '```' → logprob: -14.011943817138672
    10. 's' → logprob: -14.011943817138672

Token 96: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2014138251543045
    2. 'enumer' → logprob: -1.701413869857788
    3. 'Enumer' → logprob: -15.326414108276367
    4. '```' → logprob: -15.701414108276367
    5. 'en' → logprob: -16.951414108276367
    6. '.enumer' → logprob: -17.451414108276367
    7. ' enumer' → logprob: -17.576414108276367
    8. '(en' → logprob: -17.826414108276367
    9. ' enumeration' → logprob: -18.076414108276367
    10. 'enum' → logprob: -18.201414108276367

Token 97: '(sorted' (ID: 92488)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5353642106056213
    2. '(sorted' → logprob: -0.9103642106056213
    3. '(T' → logprob: -4.785364151000977
    4. ' sorted' → logprob: -6.035364151000977
    5. 'TIM' → logprob: -7.285364151000977
    6. 'T' → logprob: -7.910364151000977
    7. '(' → logprob: -8.660364151000977
    8. 'set' → logprob: -9.785364151000977
    9. '(t' → logprob: -9.910364151000977
    10. '(set' → logprob: -11.035364151000977

Token 98: '(set' (ID: 25904)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.6359623670578003
    2. '(set' → logprob: -0.7609623670578003
    3. 'set' → logprob: -6.63596248626709
    4. '(' → logprob: -6.76096248626709
    5. '(list' → logprob: -7.38596248626709
    6. 'T' → logprob: -8.63596248626709
    7. '(
' → logprob: -10.88596248626709
    8. '(t' → logprob: -11.01096248626709
    9. 'TIM' → logprob: -11.01096248626709
    10. '((' → logprob: -11.51096248626709

Token 99: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.625017166137695
    3. '(
' → logprob: -12.125017166137695
    4. 'T' → logprob: -13.500017166137695
    5. 'TIM' → logprob: -15.125017166137695
    6. '(t' → logprob: -15.250017166137695
    7. ' (' → logprob: -16.250017166137695
    8. '(

' → logprob: -16.250017166137695
    9. '(TM' → logprob: -16.875017166137695
    10. '	T' → logprob: -17.250017166137695

Token 100: 'IM' (ID: 2833)
  Prédit: 'IM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IM' → logprob: -2.339278580620885e-06
    2. 'im' → logprob: -13.125001907348633
    3. 'TIM' → logprob: -15.625001907348633
    4. '
' → logprob: -17.250001907348633
    5. 'IME' → logprob: -18.250001907348633
    6. 'IL' → logprob: -18.500001907348633
    7. '(IM' → logprob: -18.750001907348633
    8. '

' → logprob: -19.250001907348633
    9. ' IM' → logprob: -19.500001907348633
    10. 'M' → logprob: -19.500001907348633

Token 101: 'EL' (ID: 3651)
  Prédit: 'EL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EL' → logprob: -1.5048530030981055e-06
    2. 'LIST' → logprob: -14.250001907348633
    3. 'E' → logprob: -14.750001907348633
    4. 'El' → logprob: -16.250001907348633
    5. 'ELE' → logprob: -16.250001907348633
    6. 'ЕЛ' → logprob: -17.000001907348633
    7. 'LE' → logprob: -17.375001907348633
    8. 'L' → logprob: -17.375001907348633
    9. 'EST' → logprob: -17.500001907348633
    10. 'ESTAMP' → logprob: -17.750001907348633

Token 102: 'IST' (ID: 6258)
  Prédit: 'IST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IST' → logprob: -6.704273118884885e-07
    2. 'ST' → logprob: -15.750000953674316
    3. 'LIST' → logprob: -16.0
    4. 'ISTS' → logprob: -16.375
    5. 'I' → logprob: -16.5
    6. 'ist' → logprob: -16.75
    7. ' IST' → logprob: -17.0
    8. 'IS' → logprob: -17.875
    9. '```' → logprob: -18.0
    10. '   ' → logprob: -18.125

Token 103: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062118254601955414
    2. ')))' → logprob: -2.8121182918548584
    3. '),' → logprob: -9.687118530273438
    4. ' ))' → logprob: -10.187118530273438
    5. '))))' → logprob: -10.687118530273438
    6. ' ' → logprob: -11.562118530273438
    7. '))}
' → logprob: -12.187118530273438
    8. ')' → logprob: -12.312118530273438
    9. '}))' → logprob: -12.562118530273438
    10. '   ' → logprob: -13.562118530273438

Token 104: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.45848218582978e-06
    2. ' }' → logprob: -13.50000286102295
    3. ',' → logprob: -14.25000286102295
    4. '}
' → logprob: -14.75000286102295
    5. ')}' → logprob: -17.125001907348633
    6. ')' → logprob: -18.250001907348633
    7. '})' → logprob: -18.875001907348633
    8. '`}' → logprob: -18.875001907348633
    9. '}}' → logprob: -19.000001907348633
    10. '}

' → logprob: -19.250001907348633

Token 105: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013491714373230934
    2. 'for' → logprob: -4.763491630554199
    3. ')' → logprob: -6.138491630554199
    4. '#' → logprob: -7.138491630554199
    5. '#print' → logprob: -7.638491630554199
    6. 'output' → logprob: -8.8884916305542
    7. '<|end|>' → logprob: -9.0134916305542
    8. 'p' → logprob: -9.1384916305542
    9. 'result' → logprob: -9.2634916305542
    10. 'pr' → logprob: -9.2634916305542

Token 106: ' i' (ID: 575)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.15519800782203674
    2. ' i' → logprob: -3.280198097229004
    3. ' a' → logprob: -3.405198097229004
    4. ' ' → logprob: -4.030198097229004
    5. ' E' → logprob: -4.030198097229004
    6. ' l' → logprob: -4.030198097229004
    7. 't' → logprob: -4.280198097229004
    8. 'a' → logprob: -6.905198097229004
    9. ' _' → logprob: -7.280198097229004
    10. 'E' → logprob: -7.655198097229004

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3380698561668396
    2. 'in' → logprob: -1.4630699157714844
    3. ',' → logprob: -3.0880699157714844
    4. 'range' → logprob: -5.463069915771484
    5. ' range' → logprob: -5.463069915771484
    6. ' ' → logprob: -7.088069915771484
    7. ' ,' → logprob: -9.213069915771484
    8. ',n' → logprob: -9.338069915771484
    9. ',in' → logprob: -10.088069915771484
    10. ',_' → logprob: -10.588069915771484

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09081584960222244
    2. ' range' → logprob: -2.465815782546997
    3. 'E' → logprob: -6.340816020965576
    4. ' E' → logprob: -9.840815544128418
    5. '(range' → logprob: -11.465815544128418
    6. 'Q' → logprob: -11.715815544128418
    7. ' ' → logprob: -11.840815544128418
    8. '	range' → logprob: -12.090815544128418
    9. '   ' → logprob: -12.715815544128418
    10. '  ' → logprob: -12.840815544128418

Token 109: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08224820345640182
    2. '(len' → logprob: -3.0822482109069824
    3. '(' → logprob: -3.4572482109069824
    4. '(Q' → logprob: -7.332248210906982
    5. ' (' → logprob: -7.582248210906982
    6. '(E' → logprob: -8.832247734069824
    7. 'N' → logprob: -9.582247734069824
    8. '(NUM' → logprob: -9.707247734069824
    9. ' N' → logprob: -9.957247734069824
    10. '(n' → logprob: -10.832247734069824

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006341627449728549
    2. '):
' → logprob: -7.50063419342041
    3. ' ):' → logprob: -10.00063419342041
    4. ':' → logprob: -11.00063419342041
    5. '+' → logprob: -11.62563419342041
    6. ')' → logprob: -11.87563419342041
    7. ']:' → logprob: -13.37563419342041
    8. '}:' → logprob: -14.50063419342041
    9. '):
' → logprob: -15.37563419342041
    10. ' ' → logprob: -15.75063419342041

Token 111: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.39873868227005005
    2. ' E' → logprob: -1.1487386226654053
    3. '   ' → logprob: -4.523738861083984
    4. '	E' → logprob: -8.523738861083984
    5. ',E' → logprob: -8.648738861083984
    6. 'a' → logprob: -9.148738861083984
    7. ')' → logprob: -9.398738861083984
    8. ' ' → logprob: -9.773738861083984
    9. '>E' → logprob: -10.273738861083984
    10. ' for' → logprob: -10.398738861083984

Token 112: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.0021688169799745083
    2. ' E' → logprob: -6.502168655395508
    3. 'a' → logprob: -7.627168655395508
    4. 't' → logprob: -9.502168655395508
    5. 'for' → logprob: -10.502168655395508
    6. 'pass' → logprob: -11.127168655395508
    7. 'e' → logprob: -11.627168655395508
    8. '#' → logprob: -11.752168655395508
    9. '...' → logprob: -12.627168655395508
    10. ' for' → logprob: -12.627168655395508

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005477313883602619
    2. '[' → logprob: -5.380477428436279
    3. '][' → logprob: -7.130477428436279
    4. ']' → logprob: -11.255476951599121
    5. '[I' → logprob: -11.755476951599121
    6. '[
' → logprob: -12.130476951599121
    7. '[][' → logprob: -12.130476951599121
    8. '[E' → logprob: -12.380476951599121
    9. ')[' → logprob: -12.880476951599121
    10. 'i' → logprob: -12.880476951599121

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006360774394124746
    2. '[' → logprob: -5.25636100769043
    3. ']' → logprob: -7.13136100769043
    4. ']=' → logprob: -8.25636100769043
    5. ' ][' → logprob: -11.00636100769043
    6. '"][' → logprob: -11.38136100769043
    7. '=' → logprob: -11.38136100769043
    8. '=[' → logprob: -11.63136100769043
    9. ')[' → logprob: -12.38136100769043
    10. ''][' → logprob: -13.13136100769043

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036420035175979137
    2. '1' → logprob: -5.6286420822143555
    3. ' ' → logprob: -10.128642082214355
    4. '2' → logprob: -14.378642082214355
    5. 't' → logprob: -15.003642082214355
    6. '   ' → logprob: -15.566142082214355
    7. '
' → logprob: -15.753642082214355
    8. '-' → logprob: -16.12864112854004
    9. '```' → logprob: -16.37864112854004
    10. '=' → logprob: -16.62864112854004

Token 116: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6367199420928955
    2. '=' → logprob: -0.8867199420928955
    3. ']=' → logprob: -2.8867199420928955
    4. ' =' → logprob: -5.761719703674316
    5. ' ]' → logprob: -9.886719703674316
    6. '=

' → logprob: -12.886719703674316
    7. ']+=' → logprob: -12.886719703674316
    8. ')' → logprob: -13.136719703674316
    9. ')=' → logprob: -13.386719703674316
    10. '[' → logprob: -14.136719703674316

Token 117: 'compression' (ID: 157910)
  Prédit: 'compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.0003357006062287837
    2. ' compression' → logprob: -8.000335693359375
    3. 'compress' → logprob: -16.250335693359375
    4. 'compressed' → logprob: -16.375335693359375
    5. 'com' → logprob: -18.250335693359375
    6. 'completion' → logprob: -19.250335693359375
    7. 'conversion' → logprob: -19.625335693359375
    8. 'Compression' → logprob: -20.375335693359375
    9. 'composition' → logprob: -20.625335693359375
    10. '
' → logprob: -21.250335693359375

Token 118: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.8624639324116288e-06
    2. '_dic' → logprob: -13.875001907348633
    3. 'dict' → logprob: -14.625001907348633
    4. '_' → logprob: -15.375001907348633
    5. '_d' → logprob: -16.500001907348633
    6. ' _' → logprob: -16.875001907348633
    7. '__' → logprob: -17.500001907348633
    8. '_list' → logprob: -18.125001907348633
    9. 'd' → logprob: -18.125001907348633
    10. '_DICT' → logprob: -18.375001907348633

Token 119: '[E' (ID: 145915)
  Prédit: '[E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[E' → logprob: -0.001300830626860261
    2. '[' → logprob: -7.376300811767578
    3. '(E' → logprob: -7.501300811767578
    4. '[(' → logprob: -9.626300811767578
    5. '[
' → logprob: -10.001300811767578
    6. 'E' → logprob: -12.376300811767578
    7. '[T' → logprob: -12.876300811767578
    8. '```' → logprob: -13.251300811767578
    9. '(' → logprob: -14.876300811767578
    10. '[e' → logprob: -15.501300811767578

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. '[E' → logprob: -14.875000953674316
    4. '[I' → logprob: -17.000001907348633
    5. 'i' → logprob: -17.000001907348633
    6. '[N' → logprob: -17.250001907348633
    7. '[
' → logprob: -18.375001907348633
    8. 'E' → logprob: -18.750001907348633
    9. '```' → logprob: -19.500001907348633
    10. ' [' → logprob: -19.625001907348633

Token 121: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.919942486798391e-05
    2. '[' → logprob: -10.375059127807617
    3. 'i' → logprob: -10.750059127807617
    4. '][' → logprob: -12.750059127807617
    5. '
' → logprob: -14.250059127807617
    6. ' [' → logprob: -14.250059127807617
    7. '```' → logprob: -14.625059127807617
    8. ']' → logprob: -15.000059127807617
    9. '

' → logprob: -15.125059127807617
    10. '[
' → logprob: -15.375059127807617

Token 122: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13979625701904297
    2. '0' → logprob: -2.514796257019043
    3. '[i' → logprob: -3.014796257019043
    4. '[' → logprob: -8.514796257019043
    5. '(i' → logprob: -8.764796257019043
    6. ' i' → logprob: -9.389796257019043
    7. '
' → logprob: -10.889796257019043
    8. '][' → logprob: -11.389796257019043
    9. '```' → logprob: -11.702296257019043
    10. ' ' → logprob: -11.827296257019043

Token 123: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012195244198665023
    2. ']]' → logprob: -6.751219749450684
    3. ']
' → logprob: -10.751219749450684
    4. ')]' → logprob: -11.376219749450684
    5. ' ]' → logprob: -12.501219749450684
    6. ']>' → logprob: -12.876219749450684
    7. ']

' → logprob: -13.001219749450684
    8. '>]' → logprob: -13.376219749450684
    9. ']}' → logprob: -13.626219749450684
    10. '`]' → logprob: -14.001219749450684

Token 124: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.107437863945961
    2. '<|end|>' → logprob: -2.3574378490448
    3. ' for' → logprob: -5.232438087463379
    4. 'E' → logprob: -7.607438087463379
    5. '[' → logprob: -7.982438087463379
    6. ' ' → logprob: -8.357438087463379
    7. '```' → logprob: -8.357438087463379
    8. ')' → logprob: -8.607438087463379
    9. '[i' → logprob: -9.357438087463379
    10. 'i' → logprob: -9.857438087463379

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18567439913749695
    2. ' i' → logprob: -1.9356744289398193
    3. 'range' → logprob: -4.31067419052124
    4. ' range' → logprob: -5.06067419052124
    5. 'Q' → logprob: -5.43567419052124
    6. 'j' → logprob: -7.93567419052124
    7. ' Q' → logprob: -8.435674667358398
    8. ' j' → logprob: -9.685674667358398
    9. 'a' → logprob: -9.685674667358398
    10. 'r' → logprob: -9.810674667358398

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862949252128601
    2. 'in' → logprob: -3.0486295223236084
    3. 'range' → logprob: -10.548629760742188
    4. ' ' → logprob: -11.798629760742188
    5. ' range' → logprob: -13.298629760742188
    6. 'n' → logprob: -13.548629760742188
    7. '   ' → logprob: -13.673629760742188
    8. '(' → logprob: -13.798629760742188
    9. '  ' → logprob: -14.173629760742188
    10. ',' → logprob: -14.423629760742188

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06993921101093292
    2. ' range' → logprob: -2.694939136505127
    3. ' ' → logprob: -14.069939613342285
    4. 'r' → logprob: -14.444939613342285
    5. '(range' → logprob: -14.444939613342285
    6. 'Q' → logprob: -14.694939613342285
    7. '  ' → logprob: -15.694939613342285
    8. 'rang' → logprob: -16.19493865966797
    9. '   ' → logprob: -16.31993865966797
    10. '	range' → logprob: -16.31993865966797

Token 128: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003855059389024973
    2. '(Q' → logprob: -5.753855228424072
    3. '(N' → logprob: -7.753855228424072
    4. '(len' → logprob: -8.378854751586914
    5. '(NUM' → logprob: -12.628854751586914
    6. '(range' → logprob: -12.878854751586914
    7. 'range' → logprob: -13.128854751586914
    8. 'QU' → logprob: -13.253854751586914
    9. 'len' → logprob: -13.503854751586914
    10. '((' → logprob: -13.753854751586914

Token 129: 'QU' (ID: 9866)
  Prédit: 'QU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QU' → logprob: -0.000992795336060226
    2. 'len' → logprob: -7.750992774963379
    3. 'N' → logprob: -8.125992774963379
    4. 'range' → logprob: -9.000992774963379
    5. '(' → logprob: -9.500992774963379
    6. 'Q' → logprob: -9.750992774963379
    7. ' QU' → logprob: -12.125992774963379
    8. '(len' → logprob: -13.000992774963379
    9. ' range' → logprob: -14.250992774963379
    10. '(N' → logprob: -15.125992774963379

Token 130: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.33671924471855164
    2. '):' → logprob: -1.336719274520874
    3. ']:' → logprob: -4.211719036102295
    4. ']:
' → logprob: -5.086719036102295
    5. '[i' → logprob: -7.211719036102295
    6. ':' → logprob: -7.336719036102295
    7. ':
' → logprob: -7.711719036102295
    8. ']):
' → logprob: -9.211719512939453
    9. ']):' → logprob: -9.336719512939453
    10. '[' → logprob: -10.336719512939453

Token 131: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6965031623840332
    2. '   ' → logprob: -0.6965031623840332
    3. ' Q' → logprob: -6.571503162384033
    4. 'for' → logprob: -6.946503162384033
    5. '	Q' → logprob: -7.446503162384033
    6. 'a' → logprob: -9.446502685546875
    7. '
' → logprob: -9.571502685546875
    8. ',Q' → logprob: -10.071502685546875
    9. ' for' → logprob: -10.321502685546875
    10. '```' → logprob: -10.571502685546875

Token 132: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -4.3226136767771095e-05
    2. 'for' → logprob: -10.375042915344238
    3. ' Q' → logprob: -12.125042915344238
    4. '   ' → logprob: -12.125042915344238
    5. 'q' → logprob: -14.750042915344238
    6. '	Q' → logprob: -15.250042915344238
    7. '    
' → logprob: -15.250042915344238
    8. 'l' → logprob: -16.250043869018555
    9. ' for' → logprob: -17.250043869018555
    10. '    ' → logprob: -17.500043869018555

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -10.75002384185791
    3. '[I' → logprob: -14.00002384185791
    4. '][' → logprob: -14.25002384185791
    5. '```' → logprob: -15.12502384185791
    6. '[][' → logprob: -15.75002384185791
    7. ')[' → logprob: -16.000022888183594
    8. 'i' → logprob: -16.750022888183594
    9. ' [' → logprob: -16.750022888183594
    10. '
' → logprob: -17.625022888183594

Token 134: ']=' (ID: 9539)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013715495588257909
    2. '[' → logprob: -6.626371383666992
    3. ']' → logprob: -11.126371383666992
    4. '"][' → logprob: -11.751371383666992
    5. '
' → logprob: -12.001371383666992
    6. ' ][' → logprob: -12.001371383666992
    7. '0' → logprob: -12.251371383666992
    8. ''][' → logprob: -13.626371383666992
    9. ']=' → logprob: -14.126371383666992
    10. '=' → logprob: -14.126371383666992

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016158436483237892
    2. '(com' → logprob: -8.875161170959473
    3. '[
' → logprob: -11.750161170959473
    4. '[list' → logprob: -11.875161170959473
    5. '[(' → logprob: -13.000161170959473
    6. ' [' → logprob: -13.250161170959473
    7. '([' → logprob: -14.000161170959473
    8. 'compression' → logprob: -14.375161170959473
    9. '(' → logprob: -15.000161170959473
    10. '[int' → logprob: -15.375161170959473

Token 136: 'compression' (ID: 157910)
  Prédit: 'compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -1.0445127372804563e-05
    2. ' compression' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.87501049041748
    4. '
' → logprob: -16.750009536743164
    5. 'compressed' → logprob: -17.500009536743164
    6. '[' → logprob: -17.625009536743164
    7. '  ' → logprob: -18.125009536743164
    8. ' ' → logprob: -19.125009536743164
    9. 'composition' → logprob: -19.625009536743164
    10. '    ' → logprob: -20.625009536743164

Token 137: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.001040552044287324
    2. 'dict' → logprob: -6.876040458679199
    3. 'Dict' → logprob: -12.6260404586792
    4. '_DICT' → logprob: -13.6260404586792
    5. 'd' → logprob: -14.0010404586792
    6. 'ict' → logprob: -15.0010404586792
    7. 's' → logprob: -15.3760404586792
    8. '[' → logprob: -15.3760404586792
    9. 'DICT' → logprob: -15.3760404586792
    10. '_dic' → logprob: -15.5010404586792

Token 138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004317420825827867
    2. '[q' → logprob: -8.875432014465332
    3. '[x' → logprob: -9.000432014465332
    4. 'Q' → logprob: -9.250432014465332
    5. '[l' → logprob: -10.250432014465332
    6. '[a' → logprob: -11.375432014465332
    7. '[val' → logprob: -12.375432014465332
    8. '(Q' → logprob: -12.750432014465332
    9. '[i' → logprob: -12.750432014465332
    10. '[v' → logprob: -13.250432014465332

Token 139: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -7.517272024415433e-05
    2. 'x' → logprob: -9.750075340270996
    3. ' Q' → logprob: -11.875075340270996
    4. 'q' → logprob: -12.375075340270996
    5. 'l' → logprob: -13.375075340270996
    6. '   ' → logprob: -13.750075340270996
    7. 'a' → logprob: -13.750075340270996
    8. 'elem' → logprob: -14.375075340270996
    9. 'val' → logprob: -15.125075340270996
    10. '[' → logprob: -15.125075340270996

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.375004768371582
    3. 'i' → logprob: -15.875004768371582
    4. '[
' → logprob: -16.625003814697266
    5. '[I' → logprob: -17.625003814697266
    6. 'Q' → logprob: -19.375003814697266
    7. '[l' → logprob: -19.500003814697266
    8. '```' → logprob: -19.625003814697266
    9. '[j' → logprob: -20.125003814697266
    10. '
' → logprob: -20.500003814697266

Token 141: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011157111264765263
    2. '][' → logprob: -4.886157035827637
    3. '0' → logprob: -6.011157035827637
    4. '[i' → logprob: -6.886157035827637
    5. '[l' → logprob: -10.261157035827637
    6. '   ' → logprob: -11.886157035827637
    7. ' [' → logprob: -11.886157035827637
    8. '[j' → logprob: -12.386157035827637
    9. ']' → logprob: -12.511157035827637
    10. 'i' → logprob: -12.761157035827637

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7491250875755213e-05
    2. '   ' → logprob: -11.937527656555176
    3. ' ' → logprob: -11.937527656555176
    4. '[' → logprob: -12.437527656555176
    5. '1' → logprob: -13.000027656555176
    6. 'l' → logprob: -14.062527656555176
    7. ']' → logprob: -14.062527656555176
    8. 'i' → logprob: -14.187527656555176
    9. '
' → logprob: -14.312527656555176
    10. '```' → logprob: -14.312527656555176

Token 143: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0009771942859515548
    2. ']],' → logprob: -7.250977039337158
    3. ']' → logprob: -8.375977516174316
    4. '],
' → logprob: -11.000977516174316
    5. ']]' → logprob: -11.500977516174316
    6. ' ],' → logprob: -12.375977516174316
    7. '   ' → logprob: -13.125977516174316
    8. '[' → logprob: -13.375977516174316
    9. ']],
' → logprob: -14.875977516174316
    10. '"],' → logprob: -15.000977516174316

Token 144: 'compression' (ID: 157910)
  Prédit: 'compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.038049984723329544
    2. ' compression' → logprob: -3.2880499362945557
    3. 'compressed' → logprob: -11.913049697875977
    4. 'compress' → logprob: -13.788049697875977
    5. '   ' → logprob: -15.413049697875977
    6. 'Compression' → logprob: -15.913049697875977
    7. ' 
' → logprob: -16.288049697875977
    8. ' ' → logprob: -16.413049697875977
    9. ' compressed' → logprob: -16.788049697875977
    10. 'com' → logprob: -16.788049697875977

Token 145: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0002751598076429218
    2. 'dict' → logprob: -8.250275611877441
    3. '_DICT' → logprob: -11.750275611877441
    4. '[' → logprob: -12.750275611877441
    5. 'DICT' → logprob: -13.750275611877441
    6. 'Dict' → logprob: -13.875275611877441
    7. '_dic' → logprob: -15.625275611877441
    8. '
' → logprob: -15.625275611877441
    9. '[i' → logprob: -15.750275611877441
    10. 'edict' → logprob: -16.125274658203125

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. 'Q' → logprob: -14.000000953674316
    3. '(Q' → logprob: -16.625001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '[
' → logprob: -16.875001907348633
    6. '][' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. ' Q' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.125001907348633

Token 147: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.4140441635390744e-05
    2. ' Q' → logprob: -11.250014305114746
    3. '[' → logprob: -14.000014305114746
    4. '   ' → logprob: -15.625014305114746
    5. '	Q' → logprob: -17.62501335144043
    6. '       ' → logprob: -18.87501335144043
    7. '           ' → logprob: -19.87501335144043
    8. ' ' → logprob: -20.00001335144043
    9. '(Q' → logprob: -20.50001335144043
    10. '  ' → logprob: -20.50001335144043

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '][' → logprob: -16.250003814697266
    4. 'i' → logprob: -17.000003814697266
    5. '
' → logprob: -19.125003814697266
    6. '```' → logprob: -19.250003814697266
    7. '[
' → logprob: -19.875003814697266
    8. ' [' → logprob: -20.250003814697266
    9. '[][' → logprob: -20.500003814697266
    10. '[I' → logprob: -20.625003814697266

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1619146764278412
    2. '[' → logprob: -1.9119147062301636
    3. '[i' → logprob: -6.661914825439453
    4. '1' → logprob: -8.161914825439453
    5. ']][' → logprob: -9.786914825439453
    6. ' ][' → logprob: -11.161914825439453
    7. '0' → logprob: -11.661914825439453
    8. '   ' → logprob: -11.661914825439453
    9. 'i' → logprob: -11.786914825439453
    10. '"][' → logprob: -11.911914825439453

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.625005722045898
    3. '0' → logprob: -14.125005722045898
    4. '
' → logprob: -14.250005722045898
    5. '   ' → logprob: -15.000005722045898
    6. '```' → logprob: -15.125005722045898
    7. ' ' → logprob: -15.250005722045898
    8. 'i' → logprob: -16.1250057220459
    9. ']' → logprob: -16.3750057220459
    10. '[i' → logprob: -16.6250057220459

Token 151: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.6964104175567627
    2. ']]]' → logprob: -0.6964104175567627
    3. ']' → logprob: -5.946410179138184
    4. '])]' → logprob: -8.071410179138184
    5. ']])' → logprob: -8.321410179138184
    6. '"]]' → logprob: -10.946410179138184
    7. ']]
' → logprob: -11.071410179138184
    8. ']+' → logprob: -11.696410179138184
    9. ']],' → logprob: -11.946410179138184
    10. '1' → logprob: -12.071410179138184

Token 152: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.778209353797138e-05
    2. ' ]' → logprob: -9.875067710876465
    3. ')]' → logprob: -12.000067710876465
    4. ']
' → logprob: -12.375067710876465
    5. '()]' → logprob: -12.875067710876465
    6. ',' → logprob: -13.625067710876465
    7. ']

' → logprob: -14.875067710876465
    8. ']]' → logprob: -15.375067710876465
    9. '+]' → logprob: -15.500067710876465
    10. '`]' → logprob: -15.500067710876465

Token 153: '    

' (ID: 24372)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5908530950546265
    2. 'max' → logprob: -2.340853214263916
    3. 'diff' → logprob: -2.340853214263916
    4. 'seg' → logprob: -2.465853214263916
    5. 'BIT' → logprob: -2.590853214263916
    6. 'bit' → logprob: -3.090853214263916
    7. 'size' → logprob: -3.215853214263916
    8. 'arr' → logprob: -3.215853214263916
    9. 'from' → logprob: -3.340853214263916
    10. 'time' → logprob: -3.590853214263916

Token 154: 'def' (ID: 1314)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4589225053787231
    2. 'diff' → logprob: -2.0839223861694336
    3. 'dp' → logprob: -2.4589223861694336
    4. 'from' → logprob: -2.4589223861694336
    5. 'size' → logprob: -2.5839223861694336
    6. 'arr' → logprob: -2.8339223861694336
    7. 'bit' → logprob: -2.9589223861694336
    8. 'seg' → logprob: -2.9589223861694336
    9. 'timeline' → logprob: -3.4589223861694336
    10. 'BIT' → logprob: -3.8339223861694336

Token 155: ' seg' (ID: 3055)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5640219449996948
    2. ' segment' → logprob: -2.5640220642089844
    3. 'main' → logprob: -2.6890220642089844
    4. 'solve' → logprob: -2.9390220642089844
    5. 'segment' → logprob: -3.1890220642089844
    6. ' update' → logprob: -3.4390220642089844
    7. ' solve' → logprob: -3.4390220642089844
    8. ' solution' → logprob: -4.064022064208984
    9. 'update' → logprob: -4.064022064208984
    10. ' seg' → logprob: -4.064022064208984

Token 156: '_function' (ID: 21094)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0038913998287171125
    2. 'ment' → logprob: -6.128891468048096
    3. '_tree' → logprob: -6.503891468048096
    4. 'def' → logprob: -8.753890991210938
    5. 'ement' → logprob: -11.628890991210938
    6. 'mented' → logprob: -12.003890991210938
    7. 'build' → logprob: -12.128890991210938
    8. '(tree' → logprob: -12.628890991210938
    9. 'func' → logprob: -12.753890991210938
    10. '```' → logprob: -12.753890991210938

Token 157: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08219737559556961
    2. '(x' → logprob: -2.957197427749634
    3. '(' → logprob: -3.707197427749634
    4. '(left' → logprob: -6.582197189331055
    5. '(node' → logprob: -8.082197189331055
    6. '(max' → logprob: -9.207197189331055
    7. '(min' → logprob: -9.332197189331055
    8. '(seg' → logprob: -9.582197189331055
    9. '(sum' → logprob: -9.582197189331055
    10. '(tree' → logprob: -9.832197189331055

Token 158: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3869975209236145
    2. ',y' → logprob: -1.1369974613189697
    3. ' ,' → logprob: -9.63699722290039
    4. ',x' → logprob: -11.01199722290039
    5. ',b' → logprob: -11.13699722290039
    6. ',left' → logprob: -12.01199722290039
    7. ',f' → logprob: -12.26199722290039
    8. ',a' → logprob: -13.13699722290039
    9. ',l' → logprob: -13.26199722290039
    10. 'y' → logprob: -13.51199722290039

Token 159: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014604736352339387
    2. ':' → logprob: -6.751460552215576
    3. ' ):' → logprob: -8.376460075378418
    4. '):
' → logprob: -10.126460075378418
    5. ',' → logprob: -12.001460075378418
    6. ')' → logprob: -12.751460075378418
    7. ' :' → logprob: -12.751460075378418
    8. ']:' → logprob: -13.251460075378418
    9. ':int' → logprob: -13.626460075378418
    10. '=' → logprob: -13.626460075378418

Token 160: '#' (ID: 2)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04058890417218208
    2. ' return' → logprob: -3.290588855743408
    3. '   ' → logprob: -6.040588855743408
    4. ':return' → logprob: -9.665589332580566
    5. '{return' → logprob: -9.915589332580566
    6. '	return' → logprob: -10.290589332580566
    7. '
' → logprob: -11.290589332580566
    8. 'max' → logprob: -13.665589332580566
    9. ' ' → logprob: -13.790589332580566
    10. 'x' → logprob: -14.415589332580566

Token 161: ' Segment' (ID: 64922)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2457965910434723
    2. ' return' → logprob: -1.62079656124115
    3. 'x' → logprob: -4.2457966804504395
    4. ' x' → logprob: -5.3707966804504395
    5. 'max' → logprob: -6.9957966804504395
    6. ' max' → logprob: -8.995796203613281
    7. ' ' → logprob: -9.745796203613281
    8. '{return' → logprob: -10.245796203613281
    9. '   ' → logprob: -10.870796203613281
    10. '	return' → logprob: -11.495796203613281

Token 162: ' tree' (ID: 8165)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.5845593214035034
    2. 'tree' → logprob: -1.0845593214035034
    3. '_' → logprob: -3.459559440612793
    4. ' tree' → logprob: -3.584559440612793
    5. '   ' → logprob: -4.334559440612793
    6. '[' → logprob: -5.459559440612793
    7. '_T' → logprob: -5.709559440612793
    8. ' ' → logprob: -5.834559440612793
    9. 'return' → logprob: -6.084559440612793
    10. ' _' → logprob: -6.209559440612793

Token 163: 'で' (ID: 4344)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '扱' (ID: 161953)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003314361674711108
    2. ' return' → logprob: -6.37831449508667
    3. 'x' → logprob: -6.87831449508667
    4. 'max' → logprob: -7.50331449508667
    5. 'min' → logprob: -11.128314018249512
    6. '   ' → logprob: -13.128314018249512
    7. '	return' → logprob: -13.253314018249512
    8. ' ' → logprob: -13.378314018249512
    9. 'seg' → logprob: -13.628314018249512
    10. '```' → logprob: -13.628314018249512

Token 165: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -4.024604277219623e-05
    2. '```' → logprob: -11.125040054321289
    3. 'る' → logprob: -11.250040054321289
    4. 'える' → logprob: -12.250040054321289
    5. ' ' → logprob: -13.750040054321289
    6. '   ' → logprob: -14.125040054321289
    7. 'い' → logprob: -14.375040054321289
    8. 'いや' → logprob: -14.625040054321289
    9. '-' → logprob: -14.875040054321289
    10. '#' → logprob: -14.875040054321289

Token 166: 'function' (ID: 2706)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14807194471359253
    2. 'return' → logprob: -2.0230720043182373
    3. 'max' → logprob: -5.273071765899658
    4. ' return' → logprob: -8.898072242736816
    5. 'min' → logprob: -10.273072242736816
    6. ' x' → logprob: -10.648072242736816
    7. '   ' → logprob: -10.773072242736816
    8. '0' → logprob: -11.023072242736816
    9. ':return' → logprob: -12.148072242736816
    10. '#' → logprob: -12.523072242736816

Token 167: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06269402801990509
    2. ' return' → logprob: -2.8126940727233887
    3. 'x' → logprob: -8.43769359588623
    4. '   ' → logprob: -8.93769359588623
    5. ':return' → logprob: -8.93769359588623
    6. 'max' → logprob: -9.06269359588623
    7. '	return' → logprob: -9.43769359588623
    8. '{return' → logprob: -10.43769359588623
    9. 'min' → logprob: -11.93769359588623
    10. ' x' → logprob: -12.18769359588623

Token 168: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005301350262016058
    2. ' return' → logprob: -5.255301475524902
    3. '   ' → logprob: -9.880301475524902
    4. '{return' → logprob: -11.630301475524902
    5. ':return' → logprob: -12.630301475524902
    6. '	return' → logprob: -12.755301475524902
    7. ' ' → logprob: -15.130301475524902
    8. '
' → logprob: -15.505301475524902
    9. 'eturn' → logprob: -15.630301475524902
    10. ')return' → logprob: -15.755301475524902

Token 169: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001454955490771681
    2. ' return' → logprob: -8.87514591217041
    3. '   ' → logprob: -12.62514591217041
    4. 'x' → logprob: -14.00014591217041
    5. 'max' → logprob: -14.50014591217041
    6. 'if' → logprob: -15.12514591217041
    7. '	return' → logprob: -15.37514591217041
    8. ' ' → logprob: -16.000144958496094
    9. '{return' → logprob: -16.250144958496094
    10. 'ret' → logprob: -16.500144958496094

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04020478576421738
    2. 'max' → logprob: -3.2902047634124756
    3. 'min' → logprob: -6.165205001831055
    4. ' x' → logprob: -10.040205001831055
    5. ' max' → logprob: -11.290205001831055
    6. '0' → logprob: -13.290205001831055
    7. ' min' → logprob: -13.540205001831055
    8. ' ' → logprob: -16.040205001831055
    9. '	x' → logprob: -16.290205001831055
    10. 'y' → logprob: -16.290205001831055

Token 171: '*y' (ID: 83575)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.127256378531456
    2. '+y' → logprob: -2.127256393432617
    3. ' +' → logprob: -8.877256393432617
    4. 'y' → logprob: -9.252256393432617
    5. 'if' → logprob: -9.502256393432617
    6. ' if' → logprob: -11.502256393432617
    7. '+x' → logprob: -13.502256393432617
    8. '|' → logprob: -13.502256393432617
    9. '^' → logprob: -13.752256393432617
    10. 'max' → logprob: -13.752256393432617

Token 172: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: 'seg' (ID: 10717)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '_el' (ID: 55168)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.8290743231773376
    2. '_' → logprob: -1.0790743827819824
    3. 'tree' → logprob: -2.3290743827819824
    4. 'ment' → logprob: -3.0790743827819824
    5. 'mentation' → logprob: -3.4540743827819824
    6. '_array' → logprob: -4.454074382781982
    7. '_size' → logprob: -4.579074382781982
    8. ' =' → logprob: -5.079074382781982
    9. '_list' → logprob: -5.204074382781982
    10. 'mented' → logprob: -5.829074382781982

Token 175: '=' (ID: 28)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.5202469825744629
    2. 'ement' → logprob: -1.270246982574463
    3. 'e' → logprob: -2.395246982574463
    4. 'ev' → logprob: -4.020246982574463
    5. '1' → logprob: -4.645246982574463
    6. '=' → logprob: -6.270246982574463
    7. 'emt' → logprob: -6.645246982574463
    8. '2' → logprob: -7.395246982574463
    9. '0' → logprob: -7.770246982574463
    10. 'emin' → logprob: -8.020246505737305

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '-' → logprob: -12.625007629394531
    3. '0' → logprob: -12.875007629394531
    4. '(' → logprob: -14.750007629394531
    5. '[' → logprob: -14.750007629394531
    6. ' ' → logprob: -15.000007629394531
    7. 'None' → logprob: -16.37500762939453
    8. 'int' → logprob: -16.50000762939453
    9. '<|end|>' → logprob: -16.75000762939453
    10. '2' → logprob: -17.43750762939453

Token 177: '<<(' (ID: 82331)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.09620654582977295
    2. 'seg' → logprob: -3.4712066650390625
    3. 'n' → logprob: -3.9712066650390625
    4. '
' → logprob: -4.4712066650390625
    5. 'class' → logprob: -5.0962066650390625
    6. '0' → logprob: -5.4712066650390625
    7. 'N' → logprob: -5.7212066650390625
    8. 'import' → logprob: -5.8462066650390625
    9. 'SIZE' → logprob: -6.0962066650390625
    10. ' size' → logprob: -6.3462066650390625

Token 178: 'len' (ID: 3303)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.3772079348564148
    2. '17' → logprob: -1.2522079944610596
    3. '18' → logprob: -4.5022077560424805
    4. '21' → logprob: -5.1272077560424805
    5. '30' → logprob: -5.8772077560424805
    6. '19' → logprob: -6.0022077560424805
    7. '31' → logprob: -6.0022077560424805
    8. 'N' → logprob: -6.2522077560424805
    9. '16' → logprob: -7.5022077560424805
    10. '10' → logprob: -8.50220775604248

Token 179: '(com' (ID: 27868)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.05487348511815071
    2. 'bin' → logprob: -3.679873466491699
    3. '(str' → logprob: -4.054873466491699
    4. '(com' → logprob: -4.804873466491699
    5. '(T' → logprob: -7.179873466491699
    6. 'compression' → logprob: -7.429873466491699
    7. '(format' → logprob: -7.804873466491699
    8. '(' → logprob: -8.6798734664917
    9. 'str' → logprob: -8.6798734664917
    10. 'format' → logprob: -9.0548734664917

Token 180: 'pression' (ID: 4521)
  Prédit: 'pression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.008274122141301632
    2. 'PRESSION' → logprob: -5.883274078369141
    3. 'pressed' → logprob: -6.133274078369141
    4. 'p' → logprob: -7.008274078369141
    5. 'ression' → logprob: -7.258274078369141
    6. 'T' → logprob: -7.633274078369141
    7. 'press' → logprob: -7.758274078369141
    8. '(T' → logprob: -8.25827407836914
    9. 'TIM' → logprob: -9.50827407836914
    10. 'PRESS' → logprob: -9.75827407836914

Token 181: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.005559590179473162
    2. 'ict' → logprob: -6.50555944442749
    3. 'ction' → logprob: -7.25555944442749
    4. 'dict' → logprob: -7.25555944442749
    5. '
' → logprob: -8.005559921264648
    6. '_list' → logprob: -8.130559921264648
    7. 's' → logprob: -8.380559921264648
    8. '_DICT' → logprob: -8.380559921264648
    9. ')' → logprob: -8.880559921264648
    10. 't' → logprob: -9.005559921264648

Token 182: ').' (ID: 741)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.9860131144523621
    2. ')' → logprob: -1.3610131740570068
    3. '))' → logprob: -1.3610131740570068
    4. ').' → logprob: -3.236013174057007
    5. '.keys' → logprob: -3.236013174057007
    6. '.bit' → logprob: -4.236012935638428
    7. '))-' → logprob: -5.736012935638428
    8. ')+' → logprob: -5.986012935638428
    9. ' ' → logprob: -6.111012935638428
    10. '))
' → logprob: -6.236012935638428

Token 183: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.5107177862082608e-05
    2. '.bit' → logprob: -11.625024795532227
    3. ' bit' → logprob: -11.875024795532227
    4. 'to' → logprob: -12.625024795532227
    5. '-' → logprob: -12.875024795532227
    6. '```' → logprob: -13.125024795532227
    7. '_bit' → logprob: -15.375024795532227
    8. ' ' → logprob: -15.500024795532227
    9. '
' → logprob: -16.000024795532227
    10. 'bits' → logprob: -16.125024795532227

Token 184: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.682846287731081e-05
    2. 'length' → logprob: -9.750066757202148
    3. 'ength' → logprob: -12.250066757202148
    4. 'len' → logprob: -14.125066757202148
    5. '_count' → logprob: -14.500066757202148
    6. '_width' → logprob: -14.625066757202148
    7. 'l' → logprob: -14.750066757202148
    8. 'Length' → logprob: -14.750066757202148
    9. '```' → logprob: -15.625066757202148
    10. '_LENGTH' → logprob: -15.875066757202148

Token 185: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36223772168159485
    2. '())' → logprob: -1.2372376918792725
    3. '()' → logprob: -4.487237930297852
    4. '()-' → logprob: -7.362237930297852
    5. ' )' → logprob: -7.612237930297852
    6. '-' → logprob: -7.737237930297852
    7. '(' → logprob: -8.612237930297852
    8. ')-' → logprob: -8.862237930297852
    9. ')
' → logprob: -9.112237930297852
    10. '())
' → logprob: -9.237237930297852

Token 186: '#' (ID: 2)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1288267821073532
    2. 'size' → logprob: -3.378826856613159
    3. '*' → logprob: -3.503826856613159
    4. 'tree' → logprob: -4.12882661819458
    5. 'segment' → logprob: -4.25382661819458
    6. ' seg' → logprob: -4.87882661819458
    7. '#' → logprob: -5.37882661819458
    8. 'for' → logprob: -6.50382661819458
    9. 's' → logprob: -6.62882661819458
    10. '0' → logprob: -6.62882661819458

Token 187: ' Segment' (ID: 64922)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.12020512670278549
    2. '(seg' → logprob: -3.1202051639556885
    3. 'len' → logprob: -3.4952051639556885
    4. '1' → logprob: -3.4952051639556885
    5. '(' → logprob: -6.120204925537109
    6. '2' → logprob: -6.245204925537109
    7. ' seg' → logprob: -6.245204925537109
    8. '(len' → logprob: -6.620204925537109
    9. '4' → logprob: -8.12020492553711
    10. ' ' → logprob: -8.37020492553711

Token 188: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.026064783334732056
    2. ' tree' → logprob: -4.776064872741699
    3. '_tree' → logprob: -5.151064872741699
    4. 'ツ' → logprob: -5.276064872741699
    5. '木' → logprob: -5.651064872741699
    6. 'size' → logprob: -6.276064872741699
    7. '_size' → logprob: -7.526064872741699
    8. 'length' → logprob: -9.0260648727417
    9. 'の' → logprob: -10.1510648727417
    10. '_t' → logprob: -10.1510648727417

Token 189: 'の' (ID: 3385)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.29793235659599304
    2. 'size' → logprob: -1.5479323863983154
    3. ' size' → logprob: -3.1729323863983154
    4. '_SIZE' → logprob: -6.547932147979736
    5. 'の' → logprob: -8.422932624816895
    6. '-size' → logprob: -8.797932624816895
    7. ' =' → logprob: -8.797932624816895
    8. '.size' → logprob: -8.922932624816895
    9. '#' → logprob: -9.047932624816895
    10. '_length' → logprob: -9.422932624816895

Token 190: '台' (ID: 3735)
  Prédit: '要'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '要' → logprob: -0.38664108514785767
    2. 'size' → logprob: -1.886641025543213
    3. 'サイズ' → logprob: -2.136641025543213
    4. '葉' → logprob: -3.636641025543213
    5. '長' → logprob: -4.511641025543213
    6. '初' → logprob: -5.261641025543213
    7. '元' → logprob: -6.636641025543213
    8. 'leaf' → logprob: -7.136641025543213
    9. ' size' → logprob: -7.386641025543213
    10. 'length' → logprob: -7.636641025543213

Token 191: 'の' (ID: 3385)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.3334660232067108
    2. '木' → logprob: -2.208466053009033
    3. '葉' → logprob: -2.208466053009033
    4. 'size' → logprob: -4.083466053009033
    5. '座' → logprob: -4.083466053009033
    6. 'の' → logprob: -4.333466053009033
    7. '_size' → logprob: -6.208466053009033
    8. 'x' → logprob: -6.208466053009033
    9. 'm' → logprob: -6.333466053009033
    10. 's' → logprob: -6.458466053009033

Token 192: '要' (ID: 7724)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.15049238502979279
    2. 'サイズ' → logprob: -2.7754924297332764
    3. ' size' → logprob: -3.1504924297332764
    4. '長' → logprob: -4.400492191314697
    5. '数' → logprob: -5.275492191314697
    6. '_size' → logprob: -5.525492191314697
    7. '大' → logprob: -6.525492191314697
    8. '要' → logprob: -6.650492191314697
    9. 'length' → logprob: -6.900492191314697
    10. '2' → logprob: -7.025492191314697

Token 193: '素' (ID: 31399)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.7766232490539551
    2. 'nt' → logprob: -2.026623249053955
    3. 's' → logprob: -2.151623249053955
    4. 'x' → logprob: -2.401623249053955
    5. 'm' → logprob: -3.401623249053955
    6. '_' → logprob: -3.651623249053955
    7. 'num' → logprob: -4.526623249053955
    8. 'の' → logprob: -4.526623249053955
    9. 'n' → logprob: -4.651623249053955
    10. '素' → logprob: -4.651623249053955

Token 194: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.41245779395103455
    2. 'num' → logprob: -1.912457823753357
    3. 'count' → logprob: -2.5374577045440674
    4. 'size' → logprob: -2.5374577045440674
    5. 's' → logprob: -4.7874579429626465
    6. 'の' → logprob: -4.9124579429626465
    7. '_num' → logprob: -5.0374579429626465
    8. '_count' → logprob: -5.6624579429626465
    9. '_size' → logprob: -5.7874579429626465
    10. '=' → logprob: -7.5374579429626465

Token 195: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1505180150270462
    2. 'seg' → logprob: -2.1505179405212402
    3. '#' → logprob: -5.15051794052124
    4. '<|end|>' → logprob: -5.15051794052124
    5. '
' → logprob: -5.52551794052124
    6. '(seg' → logprob: -6.02551794052124
    7. 'print' → logprob: -7.15051794052124
    8. 'for' → logprob: -7.40051794052124
    9. ' seg' → logprob: -7.40051794052124
    10. '<|end|>' → logprob: -7.52551794052124

Token 196: 'SEG' (ID: 128217)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0741322860121727
    2. 'tree' → logprob: -3.324132204055786
    3. 'size' → logprob: -3.824132204055786
    4. 'data' → logprob: -4.699132442474365
    5. 'segment' → logprob: -6.074132442474365
    6. ' seg' → logprob: -6.574132442474365
    7. '#' → logprob: -9.199131965637207
    8. 'se' → logprob: -9.699131965637207
    9. 's' → logprob: -10.074131965637207
    10. 'node' → logprob: -10.074131965637207

Token 197: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1334166526794434
    2. ' =' → logprob: -1.1334166526794434
    3. 'tree' → logprob: -2.5084166526794434
    4. '_SIZE' → logprob: -2.6334166526794434
    5. 'TREE' → logprob: -2.7584166526794434
    6. '_TREE' → logprob: -3.1334166526794434
    7. '=[]' → logprob: -3.2584166526794434
    8. 'SIZE' → logprob: -4.008416652679443
    9. '=[' → logprob: -4.883416652679443
    10. '=_' → logprob: -5.383416652679443

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06374885141849518
    2. '[' → logprob: -3.313748836517334
    3. 'seg' → logprob: -3.688748836517334
    4. '(seg' → logprob: -8.563749313354492
    5. '0' → logprob: -9.938749313354492
    6. ' ' → logprob: -10.063749313354492
    7. ' seg' → logprob: -10.313749313354492
    8. ' [' → logprob: -10.438749313354492
    9. '(' → logprob: -11.438749313354492
    10. '```' → logprob: -12.563749313354492

Token 199: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2537854313850403
    2. ']' → logprob: -2.1287853717803955
    3. ']*(' → logprob: -2.2537853717803955
    4. ' for' → logprob: -9.253785133361816
    5. ' ]' → logprob: -10.378785133361816
    6. '*' → logprob: -10.878785133361816
    7. 'for' → logprob: -12.003785133361816
    8. ']<<' → logprob: -13.128785133361816
    9. ']+' → logprob: -13.503785133361816
    10. ')*(' → logprob: -14.253785133361816

Token 200: '2' (ID: 17)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0010778261348605156
    2. '2' → logprob: -6.876077651977539
    3. '(seg' → logprob: -10.376077651977539
    4. ' seg' → logprob: -11.501077651977539
    5. 'sig' → logprob: -13.626077651977539
    6. 'se' → logprob: -14.626077651977539
    7. 'sep' → logprob: -14.751077651977539
    8. 'segment' → logprob: -15.001077651977539
    9. '(' → logprob: -15.001077651977539
    10. '   ' → logprob: -15.251077651977539

Token 201: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04875859245657921
    2. 'seg' → logprob: -3.0487585067749023
    3. ' *' → logprob: -8.798758506774902
    4. ' seg' → logprob: -11.548758506774902
    5. '(seg' → logprob: -11.798758506774902
    6. '_seg' → logprob: -13.048758506774902
    7. ',' → logprob: -15.673758506774902
    8. 'segments' → logprob: -16.04875946044922
    9. ' ' → logprob: -16.04875946044922
    10. '
' → logprob: -16.17375946044922

Token 202: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.292907877039397e-06
    2. ' seg' → logprob: -13.00000286102295
    3. '(seg' → logprob: -13.87500286102295
    4. 'sep' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.750003814697266
    6. 'se' → logprob: -19.250003814697266
    7. 'segment' → logprob: -19.375003814697266
    8. 'sig' → logprob: -19.875003814697266
    9. 'sem' → logprob: -20.250003814697266
    10. 'sec' → logprob: -20.875003814697266

Token 203: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.004650491755455732
    2. 'el' → logprob: -5.379650592803955
    3. '_seg' → logprob: -11.754650115966797
    4. '_' → logprob: -12.129650115966797
    5. '	el' → logprob: -12.129650115966797
    6. 'seg' → logprob: -12.254650115966797
    7. 'El' → logprob: -13.004650115966797
    8. '_se' → logprob: -14.254650115966797
    9. 'len' → logprob: -14.629650115966797
    10. '   ' → logprob: -15.129650115966797

Token 204: ')#' (ID: 117975)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.297462171758525e-05
    2. ' )' → logprob: -10.375033378601074
    3. ')
' → logprob: -13.875033378601074
    4. '))' → logprob: -16.000032424926758
    5. '）' → logprob: -16.125032424926758
    6. ')#' → logprob: -16.375032424926758
    7. '<|end|>' → logprob: -16.375032424926758
    8. ')...' → logprob: -17.125032424926758
    9. ')`' → logprob: -17.375032424926758
    10. ')}}' → logprob: -17.375032424926758

Token 205: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4660722017288208
    2. 'seg' → logprob: -1.4660722017288208
    3. '<|end|>' → logprob: -1.4660722017288208
    4. '0' → logprob: -1.5910722017288208
    5. '1' → logprob: -3.9660720825195312
    6. '```' → logprob: -4.091072082519531
    7. ' ' → logprob: -4.216072082519531
    8. 'len' → logprob: -4.466072082519531
    9. ' seg' → logprob: -5.216072082519531
    10. '(' → logprob: -5.216072082519531

Token 206: '1' (ID: 16)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.16582684218883514
    2. '(seg' → logprob: -3.0408267974853516
    3. 'len' → logprob: -3.2908267974853516
    4. '(' → logprob: -3.4158267974853516
    5. '2' → logprob: -4.165826797485352
    6. '1' → logprob: -4.915826797485352
    7. '[' → logprob: -5.665826797485352
    8. '0' → logprob: -5.915826797485352
    9. 'SEG' → logprob: -6.665826797485352
    10. '(len' → logprob: -6.665826797485352

Token 207: '-index' (ID: 45533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4318886697292328
    2. 'based' → logprob: -1.6818886995315552
    3. '-based' → logprob: -2.9318885803222656
    4. '-' → logprob: -3.3068885803222656
    5. 'd' → logprob: -3.4318885803222656
    6. 'xed' → logprob: -4.431888580322266
    7. '0' → logprob: -4.931888580322266
    8. 'x' → logprob: -5.056888580322266
    9. 'nd' → logprob: -5.556888580322266
    10. '[' → logprob: -5.681888580322266

Token 209: 'なので' (ID: 145461)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.990723729133606
    2. '<|end|>' → logprob: -1.115723729133606
    3. 'for' → logprob: -1.740723729133606
    4. ' for' → logprob: -2.6157236099243164
    5. '  
' → logprob: -4.490723609924316
    6. ' 
' → logprob: -4.615723609924316
    7. '\n' → logprob: -4.990723609924316
    8. '<|end|>' → logprob: -5.365723609924316
    9. '```' → logprob: -5.490723609924316
    10. '[' → logprob: -5.740723609924316

Token 210: '、' (ID: 1395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34786269068717957
    2. ' for' → logprob: -1.347862720489502
    3. ')' → logprob: -4.722862720489502
    4. '<|end|>' → logprob: -4.972862720489502
    5. ' ' → logprob: -5.097862720489502
    6. '
' → logprob: -5.847862720489502
    7. ' 
' → logprob: -6.347862720489502
    8. 'seg' → logprob: -6.472862720489502
    9. '0' → logprob: -6.597862720489502
    10. '```' → logprob: -7.597862720489502

Token 211: '要' (ID: 7724)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.48064443469047546
    2. ' seg' → logprob: -2.105644464492798
    3. '#' → logprob: -2.230644464492798
    4. 'for' → logprob: -3.105644464492798
    5. '0' → logprob: -3.480644464492798
    6. ' for' → logprob: -3.730644464492798
    7. ')' → logprob: -3.980644464492798
    8. '1' → logprob: -5.230644226074219
    9. ' ' → logprob: -5.480644226074219
    10. ' #' → logprob: -5.605644226074219

Token 212: '素' (ID: 31399)
  Prédit: '素'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '素' → logprob: -0.0016707765171304345
    2. '```' → logprob: -7.251670837402344
    3. 'len' → logprob: -7.751670837402344
    4. '望' → logprob: -9.376670837402344
    5. '索' → logprob: -10.126670837402344
    6. '0' → logprob: -10.126670837402344
    7. '``' → logprob: -10.376670837402344
    8. '1' → logprob: -10.501670837402344
    9. 'x' → logprob: -11.001670837402344
    10. 'う' → logprob: -11.126670837402344

Token 213: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.0016530444845557213
    2. 'num' → logprob: -7.37665319442749
    3. '0' → logprob: -7.75165319442749
    4. 'count' → logprob: -8.376652717590332
    5. '=' → logprob: -9.501652717590332
    6. 'の' → logprob: -9.876652717590332
    7. 's' → logprob: -10.251652717590332
    8. '番号' → logprob: -10.251652717590332
    9. 'number' → logprob: -10.626652717590332
    10. '```' → logprob: -10.876652717590332

Token 214: '2' (ID: 17)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0629492700099945
    2. '=' → logprob: -3.1879491806030273
    3. '#' → logprob: -4.437949180603027
    4. ')' → logprob: -5.562949180603027
    5. '//=' → logprob: -6.687949180603027
    6. ' =' → logprob: -8.062949180603027
    7. '*' → logprob: -8.062949180603027
    8. '+' → logprob: -8.187949180603027
    9. '=len' → logprob: -8.562949180603027
    10. ',' → logprob: -8.687949180603027

Token 215: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00023798657639417797
    2. 'seg' → logprob: -9.000238418579102
    3. ' *' → logprob: -10.000238418579102
    4. '**' → logprob: -10.625238418579102
    5. '*(' → logprob: -10.625238418579102
    6. '(seg' → logprob: -12.125238418579102
    7. '*object' → logprob: -13.125238418579102
    8. '*num' → logprob: -13.500238418579102
    9. ' ' → logprob: -14.125238418579102
    10. '```' → logprob: -14.125238418579102

Token 216: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00010342398309148848
    2. '(seg' → logprob: -9.625102996826172
    3. ' seg' → logprob: -10.250102996826172
    4. 'se' → logprob: -14.750102996826172
    5. 's' → logprob: -14.750102996826172
    6. '
' → logprob: -15.000102996826172
    7. ' ' → logprob: -16.000102996826172
    8. 'sig' → logprob: -16.250102996826172
    9. '_seg' → logprob: -16.500102996826172
    10. '(' → logprob: -16.625102996826172

Token 217: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.008662551641464233
    2. 'el' → logprob: -4.758662700653076
    3. 'El' → logprob: -11.133662223815918
    4. 'l' → logprob: -11.258662223815918
    5. 'seg' → logprob: -11.508662223815918
    6. '_seg' → logprob: -13.133662223815918
    7. '	el' → logprob: -13.258662223815918
    8. '_l' → logprob: -14.008662223815918
    9. 'lel' → logprob: -14.133662223815918
    10. '_il' → logprob: -14.633662223815918

Token 218: '.S' (ID: 1242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3535172939300537
    2. '<|end|>' → logprob: -1.7285172939300537
    3. ')' → logprob: -2.7285172939300537
    4. ' for' → logprob: -3.7285172939300537
    5. '<|end|>' → logprob: -4.728517532348633
    6. ',' → logprob: -4.978517532348633
    7. '
' → logprob: -5.353517532348633
    8. '```' → logprob: -5.978517532348633
    9. ']' → logprob: -6.228517532348633
    10. '#' → logprob: -6.478517532348633

Token 219: 'egment' (ID: 132263)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.01959441974759102
    2. 'g' → logprob: -4.269594192504883
    3. 'egment' → logprob: -6.269594192504883
    4. 'seg' → logprob: -6.394594192504883
    5. 'ize' → logprob: -6.894594192504883
    6. 'EG' → logprob: -8.894594192504883
    7. 'size' → logprob: -9.019594192504883
    8. 'iz' → logprob: -9.269594192504883
    9. '```' → logprob: -9.394594192504883
    10. 'gment' → logprob: -9.644594192504883

Token 220: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.21724224090576172
    2. '_tree' → logprob: -1.9672422409057617
    3. '[' → logprob: -4.092242240905762
    4. ' tree' → logprob: -4.217242240905762
    5. '_size' → logprob: -4.467242240905762
    6. '_TREE' → logprob: -6.467242240905762
    7. '_el' → logprob: -6.467242240905762
    8. 'size' → logprob: -6.592242240905762
    9. '[]' → logprob: -6.717242240905762
    10. 'el' → logprob: -7.217242240905762

Token 221: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8106047511100769
    2. 'for' → logprob: -1.3106048107147217
    3. 'def' → logprob: -2.6856048107147217
    4. '=' → logprob: -2.6856048107147217
    5. '_size' → logprob: -3.4356048107147217
    6. '=[]' → logprob: -4.060604572296143
    7. '#' → logprob: -4.310604572296143
    8. 'size' → logprob: -4.310604572296143
    9. 'import' → logprob: -4.685604572296143
    10. '[' → logprob: -4.685604572296143

Token 222: '初' (ID: 26719)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.03679394721984863
    2. 'サイズ' → logprob: -4.7867937088012695
    3. 'length' → logprob: -5.0367937088012695
    4. 'n' → logprob: -5.5367937088012695
    5. 'node' → logprob: -5.9117937088012695
    6. 'base' → logprob: -5.9117937088012695
    7. 'height' → logprob: -6.2867937088012695
    8. ' size' → logprob: -6.4117937088012695
    9. 'data' → logprob: -6.7867937088012695
    10. 'leaf' → logprob: -7.1617937088012695

Token 223: '期' (ID: 5055)
  Prédit: '期'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '期' → logprob: -0.7057741284370422
    2. '化' → logprob: -0.7057741284370422
    3. 'z' → logprob: -5.330774307250977
    4. 'ze' → logprob: -5.705774307250977
    5. 'ズ' → logprob: -6.080774307250977
    6. 'zed' → logprob: -7.205774307250977
    7. '始化' → logprob: -8.580774307250977
    8. 'isation' → logprob: -8.955774307250977
    9. 'ization' → logprob: -8.955774307250977
    10. 'ゼ' → logprob: -9.080774307250977

Token 224: '値' (ID: 69555)
  Prédit: '化'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '化' → logprob: -0.004903669934719801
    2. '値' → logprob: -6.129903793334961
    3. '状態' → logprob: -6.379903793334961
    4. 'ization' → logprob: -7.629903793334961
    5. '#' → logprob: -9.004903793334961
    6. 'value' → logprob: -9.754903793334961
    7. 'def' → logprob: -9.754903793334961
    8. '位置' → logprob: -10.379903793334961
    9. '構' → logprob: -10.629903793334961
    10. 'の' → logprob: -10.754903793334961

Token 225: 'で' (ID: 4344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028319012373685837
    2. 'def' → logprob: -4.153318881988525
    3. ' for' → logprob: -4.778318881988525
    4. '
' → logprob: -6.403318881988525
    5. '<|end|>' → logprob: -6.778318881988525
    6. '#' → logprob: -7.653318881988525
    7. ')' → logprob: -8.028319358825684
    8. '```' → logprob: -9.403319358825684
    9. '<|end|>' → logprob: -10.278319358825684
    10. ']' → logprob: -11.903319358825684

Token 226: '初' (ID: 26719)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.7436981201171875
    2. 'す' → logprob: -1.6186981201171875
    3. '1' → logprob: -2.8686981201171875
    4. 'x' → logprob: -2.9936981201171875
    5. 'multip' → logprob: -3.2436981201171875
    6. 'all' → logprob: -3.3686981201171875
    7. 's' → logprob: -4.2436981201171875
    8. 'は' → logprob: -4.2436981201171875
    9. 'for' → logprob: -4.4936981201171875
    10. '[' → logprob: -4.7436981201171875

Token 227: '期' (ID: 5055)
  Prédit: '期'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '期' → logprob: -0.002329267328605056
    2. '値' → logprob: -7.002329349517822
    3. '化' → logprob: -7.127329349517822
    4. 'め' → logprob: -7.877329349517822
    5. '始化' → logprob: -9.002328872680664
    6. '始' → logprob: -10.002328872680664
    7. '段' → logprob: -11.877328872680664
    8. '価' → logprob: -12.002328872680664
    9. '```' → logprob: -12.377328872680664
    10. '
' → logprob: -12.502328872680664

Token 228: '化' (ID: 11415)
  Prédit: '化'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '化' → logprob: -0.006455181632190943
    2. '値' → logprob: -5.131454944610596
    3. 'value' → logprob: -8.256455421447754
    4. 'ization' → logprob: -9.506455421447754
    5. 'ized' → logprob: -10.256455421447754
    6. '```' → logprob: -10.506455421447754
    7. '#' → logprob: -11.006455421447754
    8. '화' → logprob: -11.631455421447754
    9. 'ize' → logprob: -11.756455421447754
    10. 'def' → logprob: -12.006455421447754

Token 229: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08582428097724915
    2. ' for' → logprob: -2.8358242511749268
    3. 'def' → logprob: -4.710824489593506
    4. '<|end|>' → logprob: -4.835824489593506
    5. '#' → logprob: -5.460824489593506
    6. ')' → logprob: -6.960824489593506
    7. '
' → logprob: -7.710824489593506
    8. '```' → logprob: -7.960824489593506
    9. '<|end|>' → logprob: -9.085824012756348
    10. ',' → logprob: -9.460824012756348

Token 230: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006512386724352837
    2. 'def' → logprob: -5.25651216506958
    3. ' for' → logprob: -6.88151216506958
    4. '#' → logprob: -8.756512641906738
    5. '
' → logprob: -10.506512641906738
    6. '```' → logprob: -11.131512641906738
    7. '    
' → logprob: -11.506512641906738
    8. ')' → logprob: -11.506512641906738
    9. 'class' → logprob: -12.256512641906738
    10. '  
' → logprob: -12.756512641906738

Token 231: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25853967666625977
    2. ' i' → logprob: -1.5085396766662598
    3. 't' → logprob: -5.50853967666626
    4. ' t' → logprob: -6.13353967666626
    5. 'e' → logprob: -9.008539199829102
    6. ' ind' → logprob: -10.258539199829102
    7. 'idx' → logprob: -10.508539199829102
    8. 'x' → logprob: -10.883539199829102
    9. ' idx' → logprob: -11.008539199829102
    10. 'ind' → logprob: -11.258539199829102

Token 232: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.011657176539301872
    2. ',' → logprob: -4.636657238006592
    3. ',i' → logprob: -7.511657238006592
    4. 'a' → logprob: -7.511657238006592
    5. ',e' → logprob: -7.636657238006592
    6. ',x' → logprob: -8.511656761169434
    7. ',v' → logprob: -10.136656761169434
    8. ' ,' → logprob: -10.886656761169434
    9. ',_' → logprob: -11.136656761169434
    10. '_,' → logprob: -11.886656761169434

Token 233: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25250110030174255
    2. ' in' → logprob: -1.502501130104065
    3. ',' → logprob: -8.127501487731934
    4. 'n' → logprob: -9.252501487731934
    5. ' ' → logprob: -10.877501487731934
    6. ',in' → logprob: -11.002501487731934
    7. '
' → logprob: -11.127501487731934
    8. '_in' → logprob: -11.127501487731934
    9. ' ,' → logprob: -11.127501487731934
    10. 'の' → logprob: -11.502501487731934

Token 234: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0014136888785287738
    2. ' E' → logprob: -7.001413822174072
    3. 'range' → logprob: -8.001413345336914
    4. ' range' → logprob: -8.751413345336914
    5. 'enumer' → logprob: -12.001413345336914
    6. ' enumerate' → logprob: -14.126413345336914
    7. '[E' → logprob: -14.126413345336914
    8. '(E' → logprob: -14.501413345336914
    9. ' ' → logprob: -15.376413345336914
    10. '(range' → logprob: -15.876413345336914

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6120663285255432
    2. ':
' → logprob: -0.8620663285255432
    3. ',' → logprob: -3.4870662689208984
    4. '   ' → logprob: -5.987066268920898
    5. '[' → logprob: -6.362066268920898
    6. ',t' → logprob: -8.987066268920898
    7. ',
' → logprob: -10.237066268920898
    8. ',s' → logprob: -10.362066268920898
    9. ':

' → logprob: -10.487066268920898
    10. '[::-' → logprob: -10.487066268920898

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45157405734062195
    2. 'idx' → logprob: -1.5765740871429443
    3. 'pos' → logprob: -2.9515740871429443
    4. 'i' → logprob: -3.4515740871429443
    5. 'p' → logprob: -3.8265740871429443
    6. 'seg' → logprob: -4.451573848724365
    7. 'SEG' → logprob: -4.451573848724365
    8. 'index' → logprob: -5.451573848724365
    9. 'v' → logprob: -5.701573848724365
    10. ' SEG' → logprob: -5.701573848724365

Token 237: ' SEG' (ID: 90192)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49309930205345154
    2. 'idx' → logprob: -1.493099331855774
    3. 'SEG' (adapté à ' SEG') → logprob: -2.3680992126464844
    4. 'index' → logprob: -3.6180992126464844
    5. 'i' → logprob: -3.8680992126464844
    6. 'seg' → logprob: -4.743099212646484
    7. 'p' → logprob: -4.743099212646484
    8. 'k' → logprob: -5.868099212646484
    9. 'node' → logprob: -7.368099212646484
    10. '   ' → logprob: -7.618099212646484

Token 238: '[t' (ID: 32184)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0057637072168290615
    2. '[t' → logprob: -5.630763530731201
    3. '[len' → logprob: -7.130763530731201
    4. 'seg' → logprob: -7.880763530731201
    5. '[(' → logprob: -8.63076400756836
    6. '[
' → logprob: -8.88076400756836
    7. 't' → logprob: -9.00576400756836
    8. '=' → logprob: -9.38076400756836
    9. '_seg' → logprob: -9.38076400756836
    10. '   ' → logprob: -9.63076400756836

Token 239: '+' (ID: 10)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.13802462816238403
    2. ']=' → logprob: -2.7630245685577393
    3. ']+=' → logprob: -3.2630245685577393
    4. ']' → logprob: -3.6380245685577393
    5. ']=(' → logprob: -7.138024806976318
    6. '+' → logprob: -8.76302433013916
    7. '*=' → logprob: -8.88802433013916
    8. ']*(' → logprob: -10.51302433013916
    9. ' ]' → logprob: -10.76302433013916
    10. '*' → logprob: -11.26302433013916

Token 240: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -5.676981345459353e-06
    2. ' seg' → logprob: -13.000005722045898
    3. '(seg' → logprob: -13.875005722045898
    4. 'sig' → logprob: -13.875005722045898
    5. 'se' → logprob: -14.750005722045898
    6. 'el' → logprob: -15.250005722045898
    7. '1' → logprob: -15.625005722045898
    8. 'sec' → logprob: -15.875005722045898
    9. 'segment' → logprob: -16.0000057220459
    10. 'sem' → logprob: -16.2500057220459

Token 241: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.3584040701389313
    2. 'el' → logprob: -1.4834040403366089
    3. 'l' → logprob: -2.6084041595458984
    4. '_l' → logprob: -8.483404159545898
    5. '	el' → logprob: -9.358404159545898
    6. 'tree' → logprob: -10.108404159545898
    7. 'El' → logprob: -10.108404159545898
    8. '_' → logprob: -10.483404159545898
    9. 'le' → logprob: -10.483404159545898
    10. 'e' → logprob: -11.045904159545898

Token 242: ']=' (ID: 9539)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.09973820298910141
    2. ']' → logprob: -2.724738121032715
    3. ']=' → logprob: -3.599738121032715
    4. ']+=' → logprob: -6.599738121032715
    5. '*=' → logprob: -7.474738121032715
    6. ']=(' → logprob: -10.224738121032715
    7. '*' → logprob: -11.224738121032715
    8. ' ]' → logprob: -11.349738121032715
    9. ']

' → logprob: -12.099738121032715
    10. ']
' → logprob: -12.474738121032715

Token 243: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008059371029958129
    2. '(' → logprob: -7.625805854797363
    3. '(a' → logprob: -8.500805854797363
    4. 'SEG' → logprob: -9.500805854797363
    5. ' a' → logprob: -11.000805854797363
    6. 'seg' → logprob: -11.875805854797363
    7. '(seg' → logprob: -12.500805854797363
    8. ' (' → logprob: -12.875805854797363
    9. ' SEG' → logprob: -13.625805854797363
    10. 'max' → logprob: -13.875805854797363

Token 244: '-' (ID: 12)
  Prédit: '*a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.024996159598231316
    2. '*' → logprob: -4.274996280670166
    3. '+a' → logprob: -4.899996280670166
    4. 'a' → logprob: -6.524996280670166
    5. '*(' → logprob: -7.899996280670166
    6. ' *' → logprob: -8.024995803833008
    7. '
' → logprob: -8.149995803833008
    8. '+' → logprob: -8.774995803833008
    9. '-a' → logprob: -8.774995803833008
    10. '<|end|>' → logprob: -9.024995803833008

Token 245: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006588182412087917
    2. ' a' → logprob: -5.131587982177734
    3. 'SEG' → logprob: -8.256587982177734
    4. '1' → logprob: -8.881587982177734
    5. '0' → logprob: -9.506587982177734
    6. 'seg' → logprob: -10.131587982177734
    7. ' SEG' → logprob: -10.381587982177734
    8. '-a' → logprob: -10.631587982177734
    9. ' ' → logprob: -11.256587982177734
    10. 't' → logprob: -11.756587982177734

Token 246: '.' (ID: 13)
  Prédit: '*a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.6930332183837891
    2. '+a' → logprob: -0.9430332183837891
    3. '+' → logprob: -2.568033218383789
    4. '*' → logprob: -3.943033218383789
    5. 'a' → logprob: -5.068033218383789
    6. '<|end|>' → logprob: -6.193033218383789
    7. '0' → logprob: -6.568033218383789
    8. '**' → logprob: -6.943033218383789
    9. '-a' → logprob: -7.318033218383789
    10. '
' → logprob: -7.318033218383789

Token 247: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3617626428604126
    2. '5' → logprob: -1.4867626428604126
    3. 'a' → logprob: -2.611762523651123
    4. '1' → logprob: -6.111762523651123
    5. '<|end|>' → logprob: -7.361762523651123
    6. '.' → logprob: -8.111763000488281
    7. ' a' → logprob: -8.611763000488281
    8. ' ' → logprob: -8.861763000488281
    9. '05' → logprob: -9.361763000488281
    10. '3' → logprob: -9.736763000488281

Token 248: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.022125903517007828
    2. '*' → logprob: -4.022125720977783
    3. '**' → logprob: -6.647125720977783
    4. '<|end|>' → logprob: -7.022125720977783
    5. '5' → logprob: -8.022126197814941
    6. '0' → logprob: -8.272126197814941
    7. '+a' → logprob: -8.772126197814941
    8. ' *' → logprob: -8.897126197814941
    9. '*t' → logprob: -8.897126197814941
    10. '*(' → logprob: -9.397126197814941

Token 249: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6756406426429749
    2. 'for' → logprob: -0.8006406426429749
    3. ' for' → logprob: -3.92564058303833
    4. '  
' → logprob: -4.17564058303833
    5. '    
' → logprob: -5.67564058303833
    6. '<|end|>' → logprob: -6.67564058303833
    7. '   ' → logprob: -7.17564058303833
    8. ' 
' → logprob: -7.42564058303833
    9. '   
' → logprob: -8.550641059875488
    10. '

' → logprob: -8.675641059875488

Token 250: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001740508945658803
    2. ' for' → logprob: -6.376740455627441
    3. '
' → logprob: -11.001740455627441
    4. '```' → logprob: -11.376740455627441
    5. ')' → logprob: -12.751740455627441
    6. 'i' → logprob: -13.126740455627441
    7. '<|end|>' → logprob: -13.376740455627441
    8. '  
' → logprob: -14.126740455627441
    9. '	for' → logprob: -14.376740455627441
    10. ' ' → logprob: -14.376740455627441

Token 251: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029876720160245895
    2. 'i' → logprob: -3.529876708984375
    3. ' t' → logprob: -9.154876708984375
    4. ' ' → logprob: -12.154876708984375
    5. ' range' → logprob: -12.154876708984375
    6. ' idx' → logprob: -12.904876708984375
    7. 't' → logprob: -13.279876708984375
    8. ' j' → logprob: -13.529876708984375
    9. ' seg' → logprob: -13.654876708984375
    10. 'range' → logprob: -14.529876708984375

Token 252: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31329140067100525
    2. ' in' → logprob: -1.3132914304733276
    3. '   ' → logprob: -11.313291549682617
    4. 'range' → logprob: -11.688291549682617
    5. ' ' → logprob: -12.813291549682617
    6. '	in' → logprob: -13.563291549682617
    7. '
' → logprob: -14.188291549682617
    8. '　' → logprob: -14.188291549682617
    9. '=' → logprob: -14.188291549682617
    10. '  ' → logprob: -14.813291549682617

Token 253: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7004632949829102
    2. 'range' → logprob: -0.7004632949829102
    3. 'seg' → logprob: -4.95046329498291
    4. ' seg' → logprob: -8.70046329498291
    5. '(seg' → logprob: -10.82546329498291
    6. ' reversed' → logprob: -11.07546329498291
    7. '(range' → logprob: -12.20046329498291
    8. ' ' → logprob: -13.82546329498291
    9. 're' → logprob: -14.70046329498291
    10. '	range' → logprob: -14.82546329498291

Token 254: '(seg' (ID: 140462)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.023251652717590332
    2. '(seg' → logprob: -3.773251533508301
    3. ' seg' → logprob: -12.0232515335083
    4. '(' → logprob: -16.398252487182617
    5. '_seg' → logprob: -18.648252487182617
    6. 'segment' → logprob: -18.898252487182617
    7. ' ' → logprob: -19.148252487182617
    8. 't' → logprob: -19.148252487182617
    9. '(s' → logprob: -19.398252487182617
    10. '.seg' → logprob: -19.648252487182617

Token 255: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.0003009041247423738
    2. 'el' → logprob: -8.125301361083984
    3. 'El' → logprob: -13.000301361083984
    4. '	el' → logprob: -14.250301361083984
    5. 'i' → logprob: -14.375301361083984
    6. '-el' → logprob: -14.500301361083984
    7. '_' → logprob: -15.750301361083984
    8. '_il' → logprob: -16.000301361083984
    9. '   ' → logprob: -16.750301361083984
    10. '
' → logprob: -16.875301361083984

Token 256: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005928678438067436
    2. ' -' → logprob: -5.1309285163879395
    3. ' ' → logprob: -16.25592803955078
    4. ')-' → logprob: -17.50592803955078
    5. ',' → logprob: -18.00592803955078
    6. '1' → logprob: -18.13092803955078
    7. '   ' → logprob: -18.25592803955078
    8. ',-' → logprob: -18.50592803955078
    9. '
' → logprob: -19.13092803955078
    10. '  ' → logprob: -19.50592803955078

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '2' → logprob: -15.875000953674316
    4. '-' → logprob: -17.75
    5. '１' → logprob: -18.0
    6. '   ' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. '```' → logprob: -19.625
    9. '0' → logprob: -21.375
    10. ' -' → logprob: -21.5625

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030434345826506615
    2. ',-' → logprob: -3.5304343700408936
    3. '-' → logprob: -7.9054341316223145
    4. ' ,' → logprob: -8.405434608459473
    5. ' ,-' → logprob: -9.655434608459473
    6. '0' → logprob: -10.780434608459473
    7. ' -' → logprob: -12.280434608459473
    8. ' ' → logprob: -14.905434608459473
    9. '   ' → logprob: -14.905434608459473
    10. '1' → logprob: -14.905434608459473

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. '-' → logprob: -13.50001049041748
    4. '
' → logprob: -16.000011444091797
    5. ' -' → logprob: -18.500011444091797
    6. '   ' → logprob: -18.625011444091797
    7. '０' → logprob: -19.250011444091797
    8. '1' → logprob: -20.125011444091797
    9. '۰' → logprob: -20.875011444091797
    10. '

' → logprob: -21.375011444091797

Token 260: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.05093091353774071
    2. ',' → logprob: -3.050930976867676
    3. '0' → logprob: -6.925930976867676
    4. '-' → logprob: -6.925930976867676
    5. ' ,-' → logprob: -8.050930976867676
    6. ' ,' → logprob: -10.425930976867676
    7. ' -' → logprob: -10.925930976867676
    8. '   ' → logprob: -12.175930976867676
    9. ',-
' → logprob: -13.425930976867676
    10. ' ' → logprob: -13.425930976867676

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'i' → logprob: -17.5
    4. '１' → logprob: -18.25
    5. '0' → logprob: -19.375
    6. '
' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '-' → logprob: -20.625
    9. '   ' → logprob: -20.625
    10. ')' → logprob: -21.25

Token 262: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15552979707717896
    2. '):' → logprob: -2.030529737472534
    3. '-' → logprob: -4.530529975891113
    4. ',' → logprob: -7.030529975891113
    5. '1' → logprob: -7.780529975891113
    6. ')' → logprob: -8.405529975891113
    7. '):
' → logprob: -8.530529975891113
    8. ',-' → logprob: -9.155529975891113
    9. '):

' → logprob: -9.655529975891113
    10. '):-' → logprob: -10.530529975891113

Token 263: '#' (ID: 2)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.04982413724064827
    2. '   ' → logprob: -3.4248242378234863
    3. ' SEG' → logprob: -4.174824237823486
    4. '       ' → logprob: -7.549824237823486
    5. '_SEG' → logprob: -9.674823760986328
    6. 'SE' → logprob: -9.799823760986328
    7. '  ' → logprob: -11.674823760986328
    8. ' ' → logprob: -12.174823760986328
    9. '    ' → logprob: -13.049823760986328
    10. 'SG' → logprob: -13.049823760986328

Token 264: ' �' (ID: 83954)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00016074994346126914
    2. '   ' → logprob: -9.375161170959473
    3. ' SEG' → logprob: -9.500161170959473
    4. 'SE' → logprob: -15.250161170959473
    5. 'SG' → logprob: -15.500161170959473
    6. '       ' → logprob: -15.750161170959473
    7. ' ' → logprob: -15.750161170959473
    8. '_SEG' → logprob: -15.875161170959473
    9. '  ' → logprob: -16.875160217285156
    10. 'SEC' → logprob: -17.250160217285156

Token 265: '�' (ID: 103)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.2617412209510803
    2. 'i' → logprob: -2.3867411613464355
    3. 'range' → logprob: -2.5117411613464355
    4. ' SEG' → logprob: -3.5117411613464355
    5. 'seg' → logprob: -4.7617411613464355
    6. ' range' → logprob: -5.1367411613464355
    7. 'for' → logprob: -5.1367411613464355
    8. '   ' → logprob: -5.2617411613464355
    9. '
' → logprob: -7.7617411613464355
    10. '0' → logprob: -8.011741638183594

Token 266: 'の' (ID: 3385)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2576870620250702
    2. 'i' → logprob: -2.2576870918273926
    3. ' range' → logprob: -2.8826870918273926
    4. '0' → logprob: -3.5076870918273926
    5. '
' → logprob: -4.757687091827393
    6. 'for' → logprob: -4.757687091827393
    7. '1' → logprob: -5.007687091827393
    8. '   ' → logprob: -5.382687091827393
    9. ' ' → logprob: -6.507687091827393
    10. 'seg' → logprob: -6.632687091827393

Token 267: '部分' (ID: 69424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1849800944328308
    2. 'range' → logprob: -1.8099801540374756
    3. ' range' → logprob: -5.6849799156188965
    4. 'SEG' → logprob: -6.5599799156188965
    5. ' i' → logprob: -8.684980392456055
    6. 'seg' → logprob: -9.059980392456055
    7. 'for' → logprob: -9.934980392456055
    8. '[i' → logprob: -10.434980392456055
    9. ' ' → logprob: -11.684980392456055
    10. ' SEG' → logprob: -11.809980392456055

Token 268: 'も' (ID: 8446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09136827290058136
    2. 'SEG' → logprob: -2.4663681983947754
    3. ' SEG' → logprob: -6.341368198394775
    4. ':' → logprob: -8.341368675231934
    5. 'SE' → logprob: -9.091368675231934
    6. ':
' → logprob: -9.716368675231934
    7. '  ' → logprob: -9.966368675231934
    8. ' ' → logprob: -10.216368675231934
    9. ',' → logprob: -10.216368675231934
    10. '
' → logprob: -10.341368675231934

Token 269: 'update' (ID: 4076)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.2621745765209198
    2. '   ' → logprob: -1.5121746063232422
    3. ' SEG' → logprob: -4.637174606323242
    4. 'SE' → logprob: -8.762174606323242
    5. '_SEG' → logprob: -9.637174606323242
    6. '  ' → logprob: -9.762174606323242
    7. ' ' → logprob: -9.887174606323242
    8. '
' → logprob: -10.012174606323242
    9. '       ' → logprob: -10.262174606323242
    10. 'seg' → logprob: -10.887174606323242

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44428467750549316
    2. 'SEG' → logprob: -1.1942846775054932
    3. ':
' → logprob: -3.319284677505493
    4. ':' → logprob: -4.569284439086914
    5. ' SEG' → logprob: -5.069284439086914
    6. ',' → logprob: -6.694284439086914
    7. ' ' → logprob: -7.944284439086914
    8. '):
' → logprob: -8.069284439086914
    9. '_SEG' → logprob: -8.444284439086914
    10. '
' → logprob: -8.569284439086914

Token 271: '   ' (ID: 271)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0013551177689805627
    2. '   ' → logprob: -6.876355171203613
    3. ' SEG' → logprob: -8.251355171203613
    4. 'SE' → logprob: -10.126355171203613
    5. '_SEG' → logprob: -11.501355171203613
    6. 'SG' → logprob: -12.251355171203613
    7. '       ' → logprob: -13.626355171203613
    8. ' ' → logprob: -13.626355171203613
    9. '  ' → logprob: -14.251355171203613
    10. 'seg' → logprob: -14.751355171203613

Token 272: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -9.372294698550832e-06
    2. ' SEG' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.000009536743164
    4. '_SEG' → logprob: -16.875009536743164
    5. 'SG' → logprob: -17.125009536743164
    6. 'SIG' → logprob: -18.500009536743164
    7. 'seg' → logprob: -18.625009536743164
    8. 'SE' → logprob: -19.000009536743164
    9. 'SEC' → logprob: -20.000009536743164
    10. 'SEQ' → logprob: -20.375009536743164

Token 273: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. '[' → logprob: -11.250014305114746
    3. '[I' → logprob: -14.625014305114746
    4. 'i' → logprob: -16.00001335144043
    5. '=' → logprob: -16.25001335144043
    6. '=[' → logprob: -16.87501335144043
    7. '```' → logprob: -16.87501335144043
    8. '[S' → logprob: -18.00001335144043
    9. ' [' → logprob: -18.12501335144043
    10. '[j' → logprob: -18.25001335144043

Token 274: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.20810756087303162
    2. '=' → logprob: -1.958107590675354
    3. ']' → logprob: -3.0831074714660645
    4. ' =' → logprob: -8.208107948303223
    5. ')=' → logprob: -8.458107948303223
    6. ']=(' → logprob: -8.833107948303223
    7. ' ]' → logprob: -8.958107948303223
    8. '*=' → logprob: -9.583107948303223
    9. ']+=' → logprob: -10.833107948303223
    10. ' ' → logprob: -10.958107948303223

Token 275: 'seg' (ID: 10717)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -7.584239938296378e-06
    2. 'seg' → logprob: -12.875007629394531
    3. ' SEG' → logprob: -13.000007629394531
    4. '_SEG' → logprob: -13.250007629394531
    5. 'SE' → logprob: -14.250007629394531
    6. 'Seg' → logprob: -16.50000762939453
    7. 'SG' → logprob: -16.75000762939453
    8. '(seg' → logprob: -17.62500762939453
    9. 'SEQ' → logprob: -17.87500762939453
    10. '   ' → logprob: -18.00000762939453

Token 276: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -1.1398757123970427e-05
    2. '_func' → logprob: -12.500011444091797
    3. 'function' → logprob: -12.750011444091797
    4. '_el' → logprob: -13.375011444091797
    5. '_' → logprob: -14.125011444091797
    6. '_FUNCTION' → logprob: -14.750011444091797
    7. 'm' → logprob: -15.000011444091797
    8. '_ent' → logprob: -15.125011444091797
    9. 'ent' → logprob: -15.250011444091797
    10. '_element' → logprob: -15.500011444091797

Token 277: '(' (ID: 7)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.5759972333908081
    2. '(' → logprob: -0.8259972333908081
    3. ' SEG' → logprob: -10.200997352600098
    4. '(SE' → logprob: -10.950997352600098
    5. '_SEG' → logprob: -13.825997352600098
    6. '(S' → logprob: -14.325997352600098
    7. 'SE' → logprob: -14.700997352600098
    8. '(
' → logprob: -14.950997352600098
    9. '   ' → logprob: -15.075997352600098
    10. '[' → logprob: -15.825997352600098

Token 278: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.9623810658231378e-05
    2. ' SEG' → logprob: -11.000020027160645
    3. 'SE' → logprob: -13.125020027160645
    4. 'SG' → logprob: -15.000020027160645
    5. 'S' → logprob: -15.125020027160645
    6. '_SEG' → logprob: -15.875020027160645
    7. 'SIG' → logprob: -16.875019073486328
    8. '   ' → logprob: -17.625019073486328
    9. 'SEC' → logprob: -18.000019073486328
    10. '
' → logprob: -18.250019073486328

Token 279: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2018541544675827
    2. '[i' → logprob: -1.7018541097640991
    3. '2' → logprob: -8.07685375213623
    4. 'i' → logprob: -8.95185375213623
    5. ' ' → logprob: -16.201854705810547
    6. '(' → logprob: -16.201854705810547
    7. '[(' → logprob: -16.326854705810547
    8. '	' → logprob: -16.451854705810547
    9. '   ' → logprob: -16.701854705810547
    10. '(i' → logprob: -16.951854705810547

Token 280: '*' (ID: 9)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03905098885297775
    2. '[' → logprob: -3.664051055908203
    3. '*' → logprob: -4.539051055908203
    4. '<<' → logprob: -6.289051055908203
    5. ',i' → logprob: -10.539051055908203
    6. '2' → logprob: -10.914051055908203
    7. '
' → logprob: -11.039051055908203
    8. '[left' → logprob: -11.414051055908203
    9. '

' → logprob: -11.664051055908203
    10. '[
' → logprob: -11.664051055908203

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.750051498413086
    4. '  ' → logprob: -17.375051498413086
    5. '２' → logprob: -18.125051498413086
    6. '
' → logprob: -18.750051498413086
    7. '```' → logprob: -18.750051498413086
    8. '1' → logprob: -18.750051498413086
    9. '    ' → logprob: -19.250051498413086
    10. '	' → logprob: -19.375051498413086

Token 282: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002968072658404708
    2. '],' → logprob: -6.377967834472656
    3. ' ,' → logprob: -6.752967834472656
    4. ',i' → logprob: -10.002967834472656
    5. '   ' → logprob: -10.252967834472656
    6. ' ' → logprob: -12.252967834472656
    7. ']' → logprob: -12.377967834472656
    8. '  ' → logprob: -12.877967834472656
    9. ' ],' → logprob: -13.252967834472656
    10. ',
' → logprob: -13.877967834472656

Token 283: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00020461321400944144
    2. ' SEG' → logprob: -8.500205039978027
    3. 'SE' → logprob: -14.500205039978027
    4. '   ' → logprob: -15.000205039978027
    5. '_SEG' → logprob: -16.37520408630371
    6. 'seg' → logprob: -17.25020408630371
    7. 'SIG' → logprob: -17.37520408630371
    8. '  ' → logprob: -17.87520408630371
    9. ' ' → logprob: -18.37520408630371
    10. 'SEQ' → logprob: -18.62520408630371

Token 284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00041637211688794196
    2. '[' → logprob: -8.50041675567627
    3. 'i' → logprob: -8.62541675567627
    4. '[
' → logprob: -10.62541675567627
    5. '2' → logprob: -12.25041675567627
    6. '*i' → logprob: -13.75041675567627
    7. '*' → logprob: -14.50041675567627
    8. '(i' → logprob: -14.50041675567627
    9. '[]' → logprob: -14.75041675567627
    10. '
' → logprob: -15.12541675567627

Token 285: '*' (ID: 9)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38225245475769043
    2. '*' → logprob: -1.7572524547576904
    3. 'i' → logprob: -2.1322524547576904
    4. '[i' → logprob: -4.7572526931762695
    5. '*i' → logprob: -5.2572526931762695
    6. ']' → logprob: -5.5072526931762695
    7. '[' → logprob: -6.6322526931762695
    8. '   ' → logprob: -6.7572526931762695
    9. ' i' → logprob: -6.8822526931762695
    10. '])' → logprob: -7.0072526931762695

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006665678229182959
    2. 'i' → logprob: -8.125666618347168
    3. '1' → logprob: -8.250666618347168
    4. ' ' → logprob: -9.500666618347168
    5. '+' → logprob: -10.500666618347168
    6. '+i' → logprob: -12.125666618347168
    7. '
' → logprob: -14.875666618347168
    8. '  ' → logprob: -15.375666618347168
    9. ' i' → logprob: -15.375666618347168
    10. '   ' → logprob: -15.500666618347168

Token 287: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06835730373859406
    2. ')' → logprob: -3.443357229232788
    3. ']' → logprob: -4.818357467651367
    4. ')i' → logprob: -5.318357467651367
    5. ',i' → logprob: -5.568357467651367
    6. 'i' → logprob: -5.693357467651367
    7. '],' → logprob: -5.818357467651367
    8. '+' → logprob: -5.818357467651367
    9. '2' → logprob: -6.693357467651367
    10. '[i' → logprob: -6.818357467651367

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007654307410120964
    2. 'i' → logprob: -4.882654190063477
    3. ' ' → logprob: -10.632654190063477
    4. ' i' → logprob: -11.257654190063477
    5. '2' → logprob: -12.007654190063477
    6. '(i' → logprob: -13.007654190063477
    7. ')i' → logprob: -14.257654190063477
    8. '])' → logprob: -14.757654190063477
    9. ',i' → logprob: -15.257654190063477
    10. '[i' → logprob: -15.382654190063477

Token 289: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -13.000006675720215
    3. '])' → logprob: -13.500006675720215
    4. '))' → logprob: -14.125006675720215
    5. '）' → logprob: -14.125006675720215
    6. ' )' → logprob: -14.250006675720215
    7. '})' → logprob: -16.0000057220459
    8. ')}' → logprob: -16.5000057220459
    9. ')#' → logprob: -16.6250057220459
    10. '),' → logprob: -16.6250057220459

Token 290: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22939863801002502
    2. 'for' → logprob: -2.229398727416992
    3. '   ' → logprob: -2.979398727416992
    4. ')' → logprob: -4.104398727416992
    5. ' for' → logprob: -4.104398727416992
    6. '```' → logprob: -4.979398727416992
    7. ' ' → logprob: -6.354398727416992
    8. '<|end|>' → logprob: -6.729398727416992
    9. ' def' → logprob: -7.354398727416992
    10. '    ' → logprob: -7.729398727416992

Token 291: ' update' (ID: 4027)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.089793361723423
    2. 'seg' → logprob: -2.4647934436798096
    3. ' query' → logprob: -8.21479320526123
    4. ' segment' → logprob: -8.46479320526123
    5. 'segment' → logprob: -8.96479320526123
    6. '_seg' → logprob: -9.08979320526123
    7. 'query' → logprob: -9.46479320526123
    8. 'def' → logprob: -10.83979320526123
    9. '_segment' → logprob: -12.33979320526123
    10. '
' → logprob: -12.46479320526123

Token 292: '(n' (ID: 2406)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.412811815738678
    2. '(idx' → logprob: -1.4128117561340332
    3. '(p' → logprob: -3.537811756134033
    4. '(i' → logprob: -3.787811756134033
    5. '(index' → logprob: -3.912811756134033
    6. '(k' → logprob: -4.162811756134033
    7. '(t' → logprob: -5.662811756134033
    8. '(position' → logprob: -6.412811756134033
    9. '(seg' → logprob: -6.912811756134033
    10. '(' → logprob: -8.037812232971191

Token 293: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017641639336943626
    2. ',value' → logprob: -4.517641544342041
    3. ',x' → logprob: -6.267641544342041
    4. ',v' → logprob: -6.392641544342041
    5. ',n' → logprob: -6.767641544342041
    6. ',val' → logprob: -7.017641544342041
    7. ' ,' → logprob: -7.892641544342041
    8. ',pos' → logprob: -8.3926420211792
    9. ',k' → logprob: -9.1426420211792
    10. ',p' → logprob: -9.2676420211792

Token 294: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010262529365718365
    2. '):
' → logprob: -4.635262489318848
    3. ',' → logprob: -7.760262489318848
    4. ')' → logprob: -10.260262489318848
    5. ',x' → logprob: -11.635262489318848
    6. ' ):' → logprob: -11.635262489318848
    7. ',n' → logprob: -11.885262489318848
    8. '):
' → logprob: -12.260262489318848
    9. ',y' → logprob: -12.760262489318848
    10. ',value' → logprob: -13.010262489318848

Token 295: 'seg' (ID: 10717)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8107995390892029
    2. 'val' → logprob: -1.1857995986938477
    3. 'seg' → logprob: -2.6857995986938477
    4. '):' → logprob: -2.6857995986938477
    5. '):
' → logprob: -3.6857995986938477
    6. ')' → logprob: -3.6857995986938477
    7. 'y' → logprob: -3.8107995986938477
    8. 'SEG' → logprob: -4.435799598693848
    9. 'v' → logprob: -4.560799598693848
    10. ' value' → logprob: -5.185799598693848

Token 296: '_el' (ID: 55168)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056922104209661484
    2. '):
' → logprob: -2.931922197341919
    3. ')' → logprob: -6.80692195892334
    4. ',' → logprob: -8.68192195892334
    5. '[]):' → logprob: -8.68192195892334
    6. '   ' → logprob: -9.18192195892334
    7. '):

' → logprob: -9.43192195892334
    8. '):
' → logprob: -9.68192195892334
    9. '[]' → logprob: -9.68192195892334
    10. '[' → logprob: -10.05692195892334

Token 297: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004342887084931135
    2. ',' → logprob: -5.754343032836914
    3. '):
' → logprob: -6.879343032836914
    4. ')' → logprob: -9.254343032836914
    5. ',n' → logprob: -11.129343032836914
    6. ' ):' → logprob: -11.754343032836914
    7. ',x' → logprob: -13.004343032836914
    8. '):
' → logprob: -13.129343032836914
    9. ')：' → logprob: -13.129343032836914
    10. '   ' → logprob: -13.629343032836914

Token 298: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43180033564567566
    2. '   ' → logprob: -1.056800365447998
    3. 'SEG' → logprob: -6.431800365447998
    4. ' n' → logprob: -7.931800365447998
    5. 'i' → logprob: -8.30679988861084
    6. 'x' → logprob: -8.43179988861084
    7. 'seg' → logprob: -8.80679988861084
    8. 'SE' → logprob: -8.93179988861084
    9. ' SEG' → logprob: -9.30679988861084
    10. '	n' → logprob: -9.93179988861084

Token 299: ' A' (ID: 355)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10404394567012787
    2. ' n' → logprob: -2.354043960571289
    3. '   ' → logprob: -6.229043960571289
    4. 'i' → logprob: -6.729043960571289
    5. ' i' → logprob: -8.229043960571289
    6. ' SEG' → logprob: -9.354043960571289
    7. 'pos' → logprob: -9.729043960571289
    8. ' while' → logprob: -9.729043960571289
    9. 'idx' → logprob: -10.229043960571289
    10. ' ' → logprob: -10.229043960571289

Token 300: '[n' (ID: 15433)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8585578799247742
    2. ')' → logprob: -1.983557939529419
    3. 'def' → logprob: -2.483557939529419
    4. '=' → logprob: -2.608557939529419
    5. '[i' → logprob: -2.858557939529419
    6. ' ' → logprob: -3.358557939529419
    7. '):' → logprob: -3.483557939529419
    8. ',' → logprob: -3.983557939529419
    9. '
' → logprob: -3.983557939529419
    10. '[' → logprob: -4.35855770111084

Token 301: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6047259569168091
    2. ']=' → logprob: -0.8547259569168091
    3. ']+=' → logprob: -3.6047258377075195
    4. ' ]' → logprob: -7.4797258377075195
    5. ')' → logprob: -9.72972583770752
    6. '],' → logprob: -9.85472583770752
    7. ']={' → logprob: -9.85472583770752
    8. ']+' → logprob: -9.85472583770752
    9. ']=-' → logprob: -10.10472583770752
    10. ')=' → logprob: -10.22972583770752

Token 302: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7938464283943176
    2. '):' → logprob: -1.1688463687896729
    3. ':' → logprob: -2.543846368789673
    4. '+=' → logprob: -2.668846368789673
    5. '
' → logprob: -3.918846368789673
    6. '):
' → logprob: -4.043846607208252
    7. '*=' → logprob: -4.793846607208252
    8. ']=' → logprob: -4.918846607208252
    9. ',' → logprob: -5.168846607208252
    10. ']:' → logprob: -5.418846607208252

Token 303: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002989968634210527
    2. ' x' → logprob: -8.125299453735352
    3. 'seg' → logprob: -14.000299453735352
    4. ')' → logprob: -14.500299453735352
    5. ')x' → logprob: -14.625299453735352
    6. 'n' → logprob: -15.500299453735352
    7. '
' → logprob: -15.625299453735352
    8. '=' → logprob: -16.25029945373535
    9. '*x' → logprob: -16.25029945373535
    10. '=x' → logprob: -16.37529945373535

Token 304: 'へ' (ID: 40026)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0806585550308228
    2. ')' → logprob: -1.2056585550308228
    3. 'に' → logprob: -1.4556585550308228
    4. '+=' → logprob: -3.705658435821533
    5. '*=' → logprob: -3.705658435821533
    6. ':=' → logprob: -4.705658435821533
    7. ':' → logprob: -4.830658435821533
    8. ' =' → logprob: -4.830658435821533
    9. ')=' → logprob: -4.955658435821533
    10. ',' → logprob: -5.205658435821533

Token 305: '更新' (ID: 26889)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7876290678977966
    2. ')' → logprob: -1.7876291275024414
    3. 'def' → logprob: -2.1626291275024414
    4. '   ' → logprob: -3.0376291275024414
    5. '1' → logprob: -3.2876291275024414
    6. '更新' → logprob: -3.2876291275024414
    7. '
' → logprob: -3.7876291275024414
    8. ',' → logprob: -4.037629127502441
    9. ':' → logprob: -4.287629127502441
    10. 'None' → logprob: -4.787629127502441

Token 306: '（' (ID: 3603)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048533424735069275
    2. '):' → logprob: -3.2985334396362305
    3. '   ' → logprob: -5.4235334396362305
    4. '):
' → logprob: -6.2985334396362305
    5. ':
' → logprob: -6.5485334396362305
    6. '<|end|>' → logprob: -7.1735334396362305
    7. ')' → logprob: -8.04853343963623
    8. ':def' → logprob: -8.17353343963623
    9. ',' → logprob: -8.29853343963623
    10. ':int' → logprob: -8.29853343963623

Token 307: '反' (ID: 23004)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7483459115028381
    2. ')' → logprob: -1.1233458518981934
    3. '):' → logprob: -1.7483458518981934
    4. ',' → logprob: -4.373345851898193
    5. ')
' → logprob: -5.123345851898193
    6. ' ):
' → logprob: -6.498345851898193
    7. '   ' → logprob: -6.873345851898193
    8. ' ' → logprob: -7.123345851898193
    9. ',n' → logprob: -7.123345851898193
    10. '
' → logprob: -7.248345851898193

Token 308: '映' (ID: 55615)
  Prédit: '転'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '転' → logprob: -0.7146947383880615
    2. '映' → logprob: -0.9646947383880615
    3. '復' → logprob: -2.0896947383880615
    4. '```' → logprob: -6.089694976806641
    5. '時計' → logprob: -6.339694976806641
    6. ')' → logprob: -8.08969497680664
    7. '#' → logprob: -8.21469497680664
    8. '訳' → logprob: -8.71469497680664
    9. '{' → logprob: -8.83969497680664
    10. '``' → logprob: -8.96469497680664

Token 309: '）
' (ID: 18433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18836113810539246
    2. ')' → logprob: -2.063361167907715
    3. '）' → logprob: -3.688361167907715
    4. '):
' → logprob: -4.813361167907715
    5. '）：' → logprob: -5.563361167907715
    6. 'する' → logprob: -5.813361167907715
    7. ',' → logprob: -6.063361167907715
    8. 'def' → logprob: -7.063361167907715
    9. '   ' → logprob: -7.563361167907715
    10. '):
' → logprob: -8.813361167907715

Token 310: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5278518795967102
    2. '   ' → logprob: -0.9028518795967102
    3. ' n' → logprob: -5.5278520584106445
    4. ',n' → logprob: -8.527852058410645
    5. '	n' → logprob: -8.777852058410645
    6. ' ' → logprob: -9.277852058410645
    7. '):
' → logprob: -9.902852058410645
    8. ')' → logprob: -10.652852058410645
    9. 'seg' → logprob: -10.777852058410645
    10. '):' → logprob: -10.777852058410645

Token 311: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008357948623597622
    2. '   ' → logprob: -4.883358001708984
    3. ' n' → logprob: -7.508358001708984
    4. '    
' → logprob: -9.133358001708984
    5. 'i' (adapté à ' i') → logprob: -10.508358001708984
    6. '	n' → logprob: -10.758358001708984
    7. '  ' → logprob: -11.258358001708984
    8. '```' → logprob: -11.258358001708984
    9. '
' → logprob: -12.633358001708984
    10. '  
' → logprob: -12.758358001708984

Token 312: '=n' (ID: 47985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3330540955066681
    2. ' =' → logprob: -1.4580540657043457
    3. '=n' → logprob: -3.0830540657043457
    4. '=i' → logprob: -6.083054065704346
    5. 'n' → logprob: -6.958054065704346
    6. '=
' → logprob: -8.208054542541504
    7. '=f' → logprob: -8.458054542541504
    8. '=int' → logprob: -8.583054542541504
    9. '＝' → logprob: -8.833054542541504
    10. '=x' → logprob: -8.833054542541504

Token 313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023008203133940697
    2. ' +' → logprob: -4.148008346557617
    3. '=' → logprob: -5.523008346557617
    4. '+=' → logprob: -6.148008346557617
    5. ' =' → logprob: -8.148008346557617
    6. ' +=' → logprob: -8.398008346557617
    7. '+
' → logprob: -8.523008346557617
    8. '+i' → logprob: -10.023008346557617
    9. '
' → logprob: -10.273008346557617
    10. '   ' → logprob: -11.898008346557617

Token 314: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -5.512236498361744e-07
    2. '(seg' → logprob: -14.875000953674316
    3. ' seg' → logprob: -16.25
    4. '   ' → logprob: -19.25
    5. '_seg' → logprob: -20.0
    6. '```' → logprob: -20.375
    7. 'segment' → logprob: -20.625
    8. 'segu' → logprob: -20.875
    9. 'se' → logprob: -21.125
    10. 'sig' → logprob: -21.625

Token 315: '_el' (ID: 55168)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.02979295887053013
    2. '_el' → logprob: -3.5297930240631104
    3. 'seg' → logprob: -11.279792785644531
    4. 'l' → logprob: -11.404792785644531
    5. '	el' → logprob: -12.404792785644531
    6. 'al' → logprob: -12.404792785644531
    7. '   ' → logprob: -13.529792785644531
    8. 'lel' → logprob: -13.529792785644531
    9. 'sel' → logprob: -13.904792785644531
    10. 'El' → logprob: -14.154792785644531

Token 316: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21567289531230927
    2. '   ' → logprob: -1.9656728506088257
    3. 'SEG' → logprob: -3.5906729698181152
    4. '    
' → logprob: -4.465672969818115
    5. ')
' → logprob: -5.340672969818115
    6. '  
' → logprob: -5.590672969818115
    7. ')' → logprob: -6.340672969818115
    8. '   
' → logprob: -7.090672969818115
    9. '
' → logprob: -7.340672969818115
    10. ']' → logprob: -7.340672969818115

Token 317: '   ' (ID: 271)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.35060811042785645
    2. '   ' → logprob: -1.2256081104278564
    3. ' SEG' → logprob: -6.725607872009277
    4. 'while' → logprob: -7.850607872009277
    5. '    
' → logprob: -8.475607872009277
    6. '_SEG' → logprob: -9.475607872009277
    7. 'seg' → logprob: -9.475607872009277
    8. '
' → logprob: -9.725607872009277
    9. '	' → logprob: -9.975607872009277
    10. ' while' → logprob: -10.850607872009277

Token 318: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.004220739938318729
    2. '   ' → logprob: -5.504220962524414
    3. ' SEG' → logprob: -9.379220962524414
    4. 'while' → logprob: -10.379220962524414
    5. 'SE' → logprob: -11.629220962524414
    6. '_SEG' → logprob: -11.879220962524414
    7. 'x' → logprob: -13.004220962524414
    8. 'seg' → logprob: -13.129220962524414
    9. '    
' → logprob: -13.754220962524414
    10. '```' → logprob: -13.754220962524414

Token 319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '=' → logprob: -13.125005722045898
    3. '[' → logprob: -13.250005722045898
    4. 'i' → logprob: -13.875005722045898
    5. '[n' → logprob: -15.375005722045898
    6. '=i' → logprob: -15.375005722045898
    7. '[
' → logprob: -16.1250057220459
    8. '[I' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.8750057220459
    10. '```' → logprob: -16.8750057220459

Token 320: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.26742881536483765
    2. '=' → logprob: -1.5174288749694824
    3. '=x' → logprob: -4.267428874969482
    4. ']' → logprob: -6.642428874969482
    5. ' =' → logprob: -10.267428398132324
    6. '=i' → logprob: -12.267428398132324
    7. '=
' → logprob: -12.517428398132324
    8. '*=' → logprob: -12.892428398132324
    9. '=

' → logprob: -13.392428398132324
    10. ']+=' → logprob: -13.767428398132324

Token 321: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -15.0
    3. '	x' → logprob: -21.625
    4. '1' → logprob: -22.125
    5. ')x' → logprob: -23.125
    6. '"x' → logprob: -23.125
    7. '   ' → logprob: -23.625
    8. '{x' → logprob: -24.25
    9. '(x' → logprob: -24.625
    10. '$x' → logprob: -24.75

Token 322: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5819525122642517
    2. '   ' → logprob: -0.9569525122642517
    3. 'while' → logprob: -3.0819525718688965
    4. ' while' → logprob: -4.8319525718688965
    5. 'i' → logprob: -7.2069525718688965
    6. ',i' → logprob: -7.3319525718688965
    7. '  
' → logprob: -7.5819525718688965
    8. '    
' → logprob: -7.5819525718688965
    9. '	while' → logprob: -8.206952095031738
    10. '
' → logprob: -8.831952095031738

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013516645412892103
    2. 'while' → logprob: -6.876351833343506
    3. ' while' → logprob: -9.001351356506348
    4. 'i' → logprob: -9.001351356506348
    5. ',i' → logprob: -10.501351356506348
    6. '	while' → logprob: -11.001351356506348
    7. ' i' → logprob: -11.126351356506348
    8. '	i' → logprob: -12.501351356506348
    9. '[i' → logprob: -12.751351356506348
    10. '
' → logprob: -13.126351356506348

Token 324: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3490961194038391
    2. '   ' → logprob: -1.3490960597991943
    3. 'while' → logprob: -3.3490960597991943
    4. ' i' → logprob: -9.849096298217773
    5. ' while' → logprob: -10.474096298217773
    6. '	i' → logprob: -14.349096298217773
    7. '	while' → logprob: -14.349096298217773
    8. '    
' → logprob: -14.349096298217773
    9. '
' → logprob: -14.849096298217773
    10. '```' → logprob: -15.224096298217773

Token 325: '>>' (ID: 3920)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.006566756870597601
    2. '>>' → logprob: -5.631566524505615
    3. '//' → logprob: -6.006566524505615
    4. '=i' → logprob: -8.381567001342773
    5. '=' → logprob: -8.881567001342773
    6. ' //' → logprob: -9.506567001342773
    7. ' >>=' → logprob: -9.881567001342773
    8. '   ' → logprob: -13.006567001342773
    9. '#' → logprob: -14.131567001342773
    10. '>' → logprob: -14.756567001342773

Token 326: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.128163257315464e-07
    2. '>=' → logprob: -15.25
    3. '=i' → logprob: -16.75
    4. '1' → logprob: -17.125
    5. '=_' → logprob: -17.75
    6. ' =' → logprob: -17.75
    7. '＝' → logprob: -18.625
    8. '>' → logprob: -19.625
    9. '=
' → logprob: -19.875
    10. '='' → logprob: -19.875

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008058178937062621
    2. '=' → logprob: -7.125805854797363
    3. ' ' → logprob: -14.250805854797363
    4. '１' → logprob: -14.375805854797363
    5. '```' → logprob: -16.500804901123047
    6. '>' → logprob: -17.750804901123047
    7. '
' → logprob: -17.750804901123047
    8. '0' → logprob: -18.125804901123047
    9. 'i' → logprob: -18.500804901123047
    10. '=
' → logprob: -18.750804901123047

Token 328: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11582912504673004
    2. 'while' → logprob: -2.3658292293548584
    3. ' while' → logprob: -4.365828990936279
    4. '	while' → logprob: -6.740828990936279
    5. '    
' → logprob: -7.240828990936279
    6. '
' → logprob: -7.240828990936279
    7. '<|end|>' → logprob: -9.740829467773438
    8. '  
' → logprob: -10.990829467773438
    9. ' 
' → logprob: -11.115829467773438
    10. 'for' → logprob: -11.240829467773438

Token 329: ' 子' (ID: 133835)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007573965936899185
    2. ' while' → logprob: -5.257574081420898
    3. 'i' → logprob: -6.757574081420898
    4. '   ' → logprob: -6.757574081420898
    5. ' i' → logprob: -12.132574081420898
    6. '	while' → logprob: -12.632574081420898
    7. 'While' → logprob: -12.632574081420898
    8. '
' → logprob: -14.507574081420898
    9. '    
' → logprob: -15.507574081420898
    10. '  ' → logprob: -15.882574081420898

Token 330: 'ノ' (ID: 42562)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05653463304042816
    2. '=' → logprob: -3.8065345287323
    3. 's' → logprob: -4.306534767150879
    4. '1' → logprob: -4.931534767150879
    5. ' i' → logprob: -5.556534767150879
    6. '0' → logprob: -6.806534767150879
    7. '>' → logprob: -6.806534767150879
    8. '2' → logprob: -7.056534767150879
    9. '>>>' → logprob: -7.056534767150879
    10. '=i' → logprob: -7.431534767150879

Token 331: 'ード' (ID: 31933)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5983010530471802
    2. '1' → logprob: -1.9733010530471802
    3. '2' → logprob: -2.4733009338378906
    4. 'f' → logprob: -2.5983009338378906
    5. 'i' → logprob: -3.2233009338378906
    6. 'ード' → logprob: -3.7233009338378906
    7. 'w' → logprob: -3.9733009338378906
    8. 'ー' → logprob: -4.348300933837891
    9. 'd' → logprob: -4.598300933837891
    10. 'de' → logprob: -4.848300933837891

Token 332: 'へ' (ID: 40026)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13183212280273438
    2. '   ' → logprob: -2.3818321228027344
    3. ' while' → logprob: -3.6318321228027344
    4. '<|end|>' → logprob: -6.131832122802734
    5. 'for' → logprob: -6.631832122802734
    6. ',' → logprob: -8.506832122802734
    7. '	while' → logprob: -8.881832122802734
    8. ' for' → logprob: -9.006832122802734
    9. '    
' → logprob: -9.131832122802734
    10. '  ' → logprob: -9.381832122802734

Token 333: '
    
' (ID: 15698)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.056587815284729004
    2. '   ' → logprob: -3.1815876960754395
    3. ' while' → logprob: -4.4315876960754395
    4. 'i' → logprob: -7.1815876960754395
    5. 'for' → logprob: -7.6815876960754395
    6. 's' → logprob: -8.681588172912598
    7. '  ' → logprob: -9.681588172912598
    8. '
' → logprob: -10.556588172912598
    9. '	while' → logprob: -10.931588172912598
    10. '<|end|>' → logprob: -10.931588172912598

Token 334: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3995988070964813
    2. '   ' → logprob: -1.5245988368988037
    3. 'i' → logprob: -3.2745988368988037
    4. 'for' → logprob: -3.6495988368988037
    5. '<|end|>' → logprob: -3.6495988368988037
    6. ' while' → logprob: -4.524598598480225
    7. '  ' → logprob: -6.024598598480225
    8. '#' → logprob: -6.524598598480225
    9. '>' → logprob: -6.899598598480225
    10. ' for' → logprob: -6.899598598480225

Token 335: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04946046322584152
    2. '   ' → logprob: -3.0494604110717773
    3. ' while' → logprob: -7.049460411071777
    4. '	while' → logprob: -12.549460411071777
    5. '  ' → logprob: -14.549460411071777
    6. ' ' → logprob: -15.049460411071777
    7. '    ' → logprob: -15.549460411071777
    8. 'While' → logprob: -15.674460411071777
    9. 'for' → logprob: -15.924460411071777
    10. 's' → logprob: -17.049461364746094

Token 336: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693534791469574
    2. ' i' → logprob: -2.1269352436065674
    3. '(i' → logprob: -13.001935005187988
    4. '   ' → logprob: -13.501935005187988
    5. '0' → logprob: -13.626935005187988
    6. ' ' → logprob: -13.876935005187988
    7. '	i' → logprob: -14.376935005187988
    8. '1' → logprob: -14.876935005187988
    9. '  ' → logprob: -15.626935005187988
    10. '>' → logprob: -16.251935958862305

Token 337: '!=' (ID: 11408)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003235109616070986
    2. '>=' → logprob: -5.753235340118408
    3. ' >' → logprob: -10.25323486328125
    4. '&gt' → logprob: -12.00323486328125
    5. '>
' → logprob: -12.62823486328125
    6. '()>' → logprob: -12.75323486328125
    7. '>:' → logprob: -12.87823486328125
    8. '   ' → logprob: -13.00323486328125
    9. '">' → logprob: -13.75323486328125
    10. '>>' → logprob: -14.12823486328125

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '０' → logprob: -16.500003814697266
    4. '
' → logprob: -18.750003814697266
    5. '۰' → logprob: -18.875003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '1' → logprob: -19.625003814697266
    8. '>' → logprob: -20.625003814697266
    9. '```' → logprob: -21.250003814697266
    10. '00' → logprob: -21.250003814697266

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34861430525779724
    2. ':
' → logprob: -1.2236143350601196
    3. ' and' → logprob: -9.723614692687988
    4. '):
' → logprob: -10.098614692687988
    5. ':

' → logprob: -10.723614692687988
    6. '   ' → logprob: -10.973614692687988
    7. '=' → logprob: -11.598614692687988
    8. ',' → logprob: -12.098614692687988
    9. '):' → logprob: -12.348614692687988
    10. 'and' → logprob: -13.223614692687988

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03794623166322708
    2. '   ' → logprob: -3.9129462242126465
    3. 'SEG' → logprob: -4.2879462242126465
    4. ' SEG' → logprob: -6.4129462242126465
    5. '_SEG' → logprob: -7.7879462242126465
    6. 'SE' → logprob: -8.412946701049805
    7. '```' → logprob: -8.537946701049805
    8. '=' → logprob: -8.537946701049805
    9. '        
' → logprob: -8.787946701049805
    10. '<|end|>' → logprob: -9.037946701049805

Token 341: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.0008756125462241471
    2. ' SEG' → logprob: -7.250875473022461
    3. '       ' → logprob: -8.875875473022461
    4. '_SEG' → logprob: -11.250875473022461
    5. 'SE' → logprob: -11.875875473022461
    6. '   ' → logprob: -12.625875473022461
    7. 'SG' → logprob: -14.000875473022461
    8. 'SIG' → logprob: -14.875875473022461
    9. '```' → logprob: -15.000875473022461
    10. 'seg' → logprob: -15.375875473022461

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000643095700070262
    2. '[' → logprob: -7.500643253326416
    3. '=[' → logprob: -10.125642776489258
    4. '=' → logprob: -11.125642776489258
    5. '=i' → logprob: -11.750642776489258
    6. ']=' → logprob: -12.250642776489258
    7. 'func' → logprob: -12.625642776489258
    8. ']' → logprob: -12.750642776489258
    9. '][' → logprob: -12.875642776489258
    10. '[I' → logprob: -13.000642776489258

Token 343: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003559615579433739
    2. ')=' → logprob: -8.75035572052002
    3. ']=' → logprob: -8.87535572052002
    4. ' =' → logprob: -10.37535572052002
    5. '=
' → logprob: -11.00035572052002
    6. '=s' → logprob: -12.50035572052002
    7. '*=' → logprob: -13.37535572052002
    8. '=

' → logprob: -14.50035572052002
    9. '=len' → logprob: -14.62535572052002
    10. '>=' → logprob: -14.87535572052002

Token 344: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.2664456789934775e-06
    2. '(seg' → logprob: -14.375000953674316
    3. ' seg' → logprob: -15.000000953674316
    4. 'SEG' → logprob: -15.250000953674316
    5. 'x' → logprob: -17.375001907348633
    6. 'sig' → logprob: -18.250001907348633
    7. '_seg' → logprob: -18.500001907348633
    8. 'Seg' → logprob: -18.500001907348633
    9. 'sem' → logprob: -18.625001907348633
    10. 'segment' → logprob: -18.750001907348633

Token 345: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -9.984787902794778e-05
    2. 'function' → logprob: -9.500100135803223
    3. 'seg' → logprob: -10.625100135803223
    4. 'func' → logprob: -15.375100135803223
    5. '_func' → logprob: -15.500100135803223
    6. 'FUNCTION' → logprob: -17.250099182128906
    7. '(seg' → logprob: -17.250099182128906
    8. '_FUNCTION' → logprob: -17.500099182128906
    9. '_seg' → logprob: -17.750099182128906
    10. 'Function' → logprob: -17.750099182128906

Token 346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '(SE' → logprob: -14.000000953674316
    3. 'SEG' → logprob: -15.875000953674316
    4. '(
' → logprob: -17.500001907348633
    5. '(seg' → logprob: -18.125001907348633
    6. '(SIG' → logprob: -18.875001907348633
    7. '(S' → logprob: -19.375001907348633
    8. '[' → logprob: -19.500001907348633
    9. '((' → logprob: -19.750001907348633
    10. 'Seg' → logprob: -19.875001907348633

Token 347: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -6.704273118884885e-07
    2. ' SEG' → logprob: -14.250000953674316
    3. 'SE' → logprob: -18.875
    4. '_SEG' → logprob: -19.5
    5. 'seg' → logprob: -20.0
    6. '(' → logprob: -20.25
    7. 'SG' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. 'SEQ' → logprob: -20.625
    10. '[' → logprob: -21.125

Token 348: '[i' (ID: 1768)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.12568886578083038
    2. '[i' → logprob: -2.5006887912750244
    3. '[' → logprob: -3.5006887912750244
    4. '(' → logprob: -6.0006890296936035
    5. ' SEG' → logprob: -6.5006890296936035
    6. '(i' → logprob: -7.2506890296936035
    7. 'EG' → logprob: -7.5006890296936035
    8. 'i' → logprob: -8.250688552856445
    9. '2' → logprob: -9.125688552856445
    10. ',i' → logprob: -9.750688552856445

Token 349: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -9.269565634895116e-05
    2. '<<' → logprob: -9.500092506408691
    3. '[i' → logprob: -12.000092506408691
    4. '2' → logprob: -12.500092506408691
    5. '[' → logprob: -12.750092506408691
    6. ',i' → logprob: -12.875092506408691
    7. '(i' → logprob: -14.125092506408691
    8. 'i' → logprob: -14.500092506408691
    9. ',' → logprob: -14.625092506408691
    10. '   ' → logprob: -15.250092506408691

Token 350: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3183135986328125
    2. '2' → logprob: -1.3183135986328125
    3. 'i' → logprob: -5.3183135986328125
    4. ' ' → logprob: -10.193313598632812
    5. ',' → logprob: -10.693313598632812
    6. '
' → logprob: -10.943313598632812
    7. '   ' → logprob: -11.068313598632812
    8. '*' → logprob: -11.818313598632812
    9. 'index' → logprob: -12.443313598632812
    10. '>>' → logprob: -12.443313598632812

Token 351: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04342183098196983
    2. ',i' → logprob: -3.793421745300293
    3. ' ,' → logprob: -3.918421745300293
    4. ',
' → logprob: -10.418421745300293
    5. '   ' → logprob: -10.918421745300293
    6. '],' → logprob: -11.043421745300293
    7. ',S' → logprob: -11.418421745300293
    8. ' ' → logprob: -12.293421745300293
    9. '‌,' → logprob: -12.293421745300293
    10. ',int' → logprob: -13.168421745300293

Token 352: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -3.583550642360933e-05
    2. ' SEG' → logprob: -10.250036239624023
    3. '_SEG' → logprob: -16.125036239624023
    4. '   ' → logprob: -16.125036239624023
    5. 'SE' → logprob: -16.875036239624023
    6. 'i' → logprob: -17.125036239624023
    7. 'SIG' → logprob: -17.875036239624023
    8. 'SG' → logprob: -18.125036239624023
    9. '       ' → logprob: -18.250036239624023
    10. 'seg' → logprob: -18.875036239624023

Token 353: '[i' (ID: 1768)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6367924809455872
    2. '+' → logprob: -0.7617924809455872
    3. 'i' → logprob: -5.8867926597595215
    4. '+i' → logprob: -7.5117926597595215
    5. '[i' → logprob: -8.261792182922363
    6. '```' → logprob: -8.886792182922363
    7. '])' → logprob: -9.011792182922363
    8. '[' → logprob: -9.136792182922363
    9. '*' → logprob: -10.261792182922363
    10. ']+' → logprob: -10.261792182922363

Token 354: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4814068078994751
    2. '],' → logprob: -1.106406807899475
    3. '])' → logprob: -3.4814066886901855
    4. '1' → logprob: -4.4814066886901855
    5. ']+' → logprob: -5.2314066886901855
    6. ']' → logprob: -7.1064066886901855
    7. '+i' → logprob: -7.1064066886901855
    8. ',' → logprob: -7.7314066886901855
    9. '   ' → logprob: -8.356407165527344
    10. ',i' → logprob: -8.731407165527344

Token 355: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -11.37502384185791
    3. '+' → logprob: -11.87502384185791
    4. 'i' → logprob: -12.25002384185791
    5. '   ' → logprob: -15.25002384185791
    6. '2' → logprob: -16.125024795532227
    7. ']' → logprob: -17.000024795532227
    8. '  ' → logprob: -17.000024795532227
    9. '
' → logprob: -17.250024795532227
    10. '+i' → logprob: -17.750024795532227

Token 356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0034917385783046484
    2. '],' → logprob: -6.1284918785095215
    3. '])' → logprob: -7.6284918785095215
    4. '1' → logprob: -7.8784918785095215
    5. '+i' → logprob: -8.378491401672363
    6. ']+' → logprob: -9.503491401672363
    7. ' +' → logprob: -10.378491401672363
    8. '),' → logprob: -10.878491401672363
    9. '   ' → logprob: -11.003491401672363
    10. ' ' → logprob: -11.503491401672363

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.250015258789062
    3. '
' → logprob: -13.875015258789062
    4. 'i' → logprob: -15.250015258789062
    5. '+' → logprob: -15.625015258789062
    6. '   ' → logprob: -16.125015258789062
    7. '

' → logprob: -16.437515258789062
    8. '2' → logprob: -16.687515258789062
    9. '１' → logprob: -16.875015258789062
    10. ']' → logprob: -16.937515258789062

Token 358: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891743630170822
    2. ')
' → logprob: -2.5789175033569336
    3. ')i' → logprob: -10.953917503356934
    4. ')

' → logprob: -12.578917503356934
    5. ')
' → logprob: -12.828917503356934
    6. ' )' → logprob: -14.078917503356934
    7. ')#' → logprob: -14.453917503356934
    8. ' )
' → logprob: -14.703917503356934
    9. ')`
' → logprob: -14.828917503356934
    10. '   ' → logprob: -14.953917503356934

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006803844007663429
    2. '>>' → logprob: -8.500679969787598
    3. '=' → logprob: -9.000679969787598
    4. 'i' → logprob: -9.875679969787598
    5. '>' → logprob: -9.875679969787598
    6. '      ' → logprob: -9.875679969787598
    7. '   ' → logprob: -10.000679969787598
    8. '        
' → logprob: -10.500679969787598
    9. ' i' → logprob: -10.500679969787598
    10. '<|end|>' → logprob: -10.875679969787598

Token 360: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00861729308962822
    2. ' i' → logprob: -4.758617401123047
    3. '       ' → logprob: -13.008617401123047
    4. '   ' → logprob: -14.883617401123047
    5. '
' → logprob: -16.758617401123047
    6. '	i' → logprob: -17.008617401123047
    7. '  ' → logprob: -17.258617401123047
    8. '        
' → logprob: -18.133617401123047
    9. '    ' → logprob: -18.383617401123047
    10. '```' → logprob: -18.383617401123047

Token 361: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.00010652327910065651
    2. '//=' → logprob: -9.375106811523438
    3. ' >>=' → logprob: -10.875106811523438
    4. '=' → logprob: -12.875106811523438
    5. '≫' → logprob: -16.875106811523438
    6. ' >>' → logprob: -17.625106811523438
    7. '>>&' → logprob: -17.875106811523438
    8. '>' → logprob: -18.125106811523438
    9. ')>>' → logprob: -18.375106811523438
    10. '/=' → logprob: -18.375106811523438

Token 362: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001093841710826382
    2. '1' → logprob: -9.125109672546387
    3. '=
' → logprob: -15.250109672546387
    4. '＝' → logprob: -17.12510871887207
    5. '>=' → logprob: -17.62510871887207
    6. ' =' → logprob: -18.50010871887207
    7. '>' → logprob: -18.62510871887207
    8. '2' → logprob: -18.75010871887207
    9. '=i' → logprob: -18.75010871887207
    10. '=

' → logprob: -19.00010871887207

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '=' → logprob: -17.375
    4. '```' → logprob: -18.375
    5. '0' → logprob: -18.875
    6. '１' → logprob: -19.25
    7. '>' → logprob: -20.125
    8. '<|end|>' → logprob: -20.625
    9. '2' → logprob: -20.875
    10. '   ' → logprob: -21.1875

Token 364: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' get' (ID: 717)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.036344461143016815
    2. ' query' → logprob: -3.536344528198242
    3. 'range' → logprob: -5.411344528198242
    4. 'seg' → logprob: -6.786344528198242
    5. 'segment' → logprob: -7.786344528198242
    6. 'product' → logprob: -8.661344528198242
    7. 'prod' → logprob: -9.036344528198242
    8. 'get' → logprob: -9.411344528198242
    9. ' seg' → logprob: -9.661344528198242
    10. 'search' → logprob: -10.536344528198242

Token 367: 'values' (ID: 7222)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.11088471859693527
    2. '_range' → logprob: -3.610884666442871
    3. 'sum' → logprob: -4.110884666442871
    4. '(' → logprob: -4.110884666442871
    5. '_sum' → logprob: -4.610884666442871
    6. 'range' → logprob: -4.735884666442871
    7. '(i' → logprob: -5.610884666442871
    8. '(r' → logprob: -5.735884666442871
    9. '(x' → logprob: -5.860884666442871
    10. '(a' → logprob: -5.985884666442871

Token 368: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.14805014431476593
    2. '(n' → logprob: -2.14805006980896
    3. '(s' → logprob: -4.523050308227539
    4. '(' → logprob: -5.023050308227539
    5. '(a' → logprob: -6.648050308227539
    6. '(i' → logprob: -6.773050308227539
    7. '(L' → logprob: -8.273050308227539
    8. '(node' → logprob: -8.648050308227539
    9. '(k' → logprob: -8.898050308227539
    10. '(left' → logprob: -9.398050308227539

Token 369: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.07037506997585297
    2. ',' → logprob: -2.6953749656677246
    3. ' ,' → logprob: -7.820374965667725
    4. ',R' → logprob: -11.945375442504883
    5. 'r' → logprob: -12.070375442504883
    6. ',n' → logprob: -12.195375442504883
    7. ',int' → logprob: -12.570375442504883
    8. ' r' → logprob: -13.070375442504883
    9. ',right' → logprob: -13.195375442504883
    10. ',
' → logprob: -13.445375442504883

Token 370: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04131345450878143
    2. ',n' → logprob: -3.916313409805298
    3. ',l' → logprob: -4.541313648223877
    4. ',r' → logprob: -5.166313648223877
    5. ',i' → logprob: -6.916313648223877
    6. '):' → logprob: -7.166313648223877
    7. ',int' → logprob: -7.166313648223877
    8. ',s' → logprob: -8.166313171386719
    9. ',k' → logprob: -8.166313171386719
    10. ',x' → logprob: -8.291313171386719

Token 371: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3839884400367737
    2. ' l' → logprob: -1.508988380432129
    3. '   ' → logprob: -2.883988380432129
    4. ' res' → logprob: -3.383988380432129
    5. 'res' → logprob: -6.008988380432129
    6. ' result' → logprob: -6.133988380432129
    7. 'result' → logprob: -6.758988380432129
    8. 'r' → logprob: -7.508988380432129
    9. 's' → logprob: -7.508988380432129
    10. ' s' → logprob: -7.883988380432129

Token 372: ' �' (ID: 4018)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16105808317661285
    2. 'res' → logprob: -2.036058187484741
    3. 'r' → logprob: -4.911057949066162
    4. 'ans' → logprob: -5.661057949066162
    5. 'result' → logprob: -5.911057949066162
    6. 's' → logprob: -6.911057949066162
    7. ' res' → logprob: -7.036057949066162
    8. 'prod' → logprob: -7.036057949066162
    9. '   ' → logprob: -7.536057949066162
    10. 'x' → logprob: -7.661057949066162

Token 373: '�' (ID: 118)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5309898257255554
    2. 'def' → logprob: -1.4059898853302002
    3. 'result' → logprob: -3.1559898853302
    4. 'res' → logprob: -3.6559898853302
    5. '1' → logprob: -3.6559898853302
    6. ' l' → logprob: -4.030989646911621
    7. 'r' → logprob: -4.155989646911621
    8. ' result' → logprob: -4.530989646911621
    9. 's' → logprob: -4.655989646911621
    10. '0' → logprob: -5.405989646911621

Token 374: '間' (ID: 16987)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3880283236503601
    2. 'def' → logprob: -1.3880283832550049
    3. ' l' → logprob: -3.888028383255005
    4. '   ' → logprob: -4.013028144836426
    5. '1' → logprob: -4.388028144836426
    6. 'res' → logprob: -5.388028144836426
    7. 'result' → logprob: -5.513028144836426
    8. ' def' → logprob: -6.013028144836426
    9. ' res' → logprob: -6.263028144836426
    10. '
' → logprob: -6.263028144836426

Token 375: '[l' (ID: 38286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09085502475500107
    2. ',' → logprob: -3.090855121612549
    3. ' l' → logprob: -4.340855121612549
    4. 'def' → logprob: -4.590855121612549
    5. '   ' → logprob: -5.340855121612549
    6. '[l' → logprob: -5.340855121612549
    7. '[' → logprob: -6.715855121612549
    8. 'query' → logprob: -6.715855121612549
    9. ' query' → logprob: -7.215855121612549
    10. 's' → logprob: -7.215855121612549

Token 376: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.06342142075300217
    2. ',' → logprob: -2.8134214878082275
    3. ' ,' → logprob: -6.813421249389648
    4. 'r' → logprob: -8.063421249389648
    5. ',l' → logprob: -11.563421249389648
    6. ',
' → logprob: -11.688421249389648
    7. ',right' → logprob: -12.438421249389648
    8. ',b' → logprob: -12.563421249389648
    9. '，' → logprob: -13.688421249389648
    10. ' r' → logprob: -13.688421249389648

Token 377: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2018262892961502
    2. ')' → logprob: -1.9518263339996338
    3. '):' → logprob: -4.326826095581055
    4. ',' → logprob: -4.701826095581055
    5. '+' → logprob: -4.951826095581055
    6. ']:' → logprob: -5.451826095581055
    7. ' ]' → logprob: -6.701826095581055
    8. ']
' → logprob: -6.951826095581055
    9. ']=' → logprob: -7.076826095581055
    10. '):
' → logprob: -7.701826095581055

Token 378: 'に' (ID: 5280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10384410619735718
    2. ':' → logprob: -2.603844165802002
    3. ':
' → logprob: -5.103844165802002
    4. ',' → logprob: -5.353844165802002
    5. 'l' → logprob: -6.228844165802002
    6. ' ' → logprob: -6.228844165802002
    7. ')' → logprob: -6.728844165802002
    8. ' l' → logprob: -6.853844165802002
    9. '    
' → logprob: -7.103844165802002
    10. ',l' → logprob: -7.228844165802002

Token 379: '関' (ID: 42366)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5992146134376526
    2. ')' → logprob: -1.2242145538330078
    3. 'def' → logprob: -3.224214553833008
    4. '1' → logprob: -3.599214553833008
    5. 'a' → logprob: -4.349214553833008
    6. 'range' → logprob: -4.349214553833008
    7. '```' → logprob: -4.974214553833008
    8. '=' → logprob: -5.099214553833008
    9. 's' → logprob: -5.224214553833008
    10. 'return' → logprob: -5.599214553833008

Token 380: 'する' (ID: 39065)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -1.0208985805511475
    2. '連' → logprob: -1.1458985805511475
    3. '係' → logprob: -2.5208985805511475
    4. 'する' → logprob: -2.6458985805511475
    5. 'る' → logprob: -3.2708985805511475
    6. ')' → logprob: -3.5208985805511475
    7. 'を' → logprob: -3.8958985805511475
    8. 'の' → logprob: -4.645898818969727
    9. '```' → logprob: -4.645898818969727
    10. 'わ' → logprob: -4.895898818969727

Token 381: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.46727102994918823
    2. 'result' → logprob: -1.467271089553833
    3. 'res' → logprob: -2.217271089553833
    4. 'prod' → logprob: -4.092270851135254
    5. 'product' → logprob: -4.717270851135254
    6. '積' → logprob: -6.217270851135254
    7. 'segment' → logprob: -6.592270851135254
    8. 'ans' → logprob: -7.217270851135254
    9. 'answer' → logprob: -7.592270851135254
    10. 'acc' → logprob: -7.592270851135254

Token 382: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.056574176996946335
    2. 'function' → logprob: -3.8065741062164307
    3. 'ment' → logprob: -4.43157434463501
    4. 'tree' → logprob: -4.68157434463501
    5. '_tree' → logprob: -6.43157434463501
    6. '   ' → logprob: -6.68157434463501
    7. 'm' → logprob: -6.80657434463501
    8. 't' → logprob: -6.93157434463501
    9. '_' → logprob: -7.05657434463501
    10. 'mentation' → logprob: -7.18157434463501

Token 383: 'を' (ID: 7277)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5037724375724792
    2. 'def' → logprob: -1.253772497177124
    3. '(' → logprob: -2.503772497177124
    4. '(
' → logprob: -4.503772258758545
    5. '   ' → logprob: -5.753772258758545
    6. 'result' → logprob: -6.128772258758545
    7. ',' → logprob: -6.378772258758545
    8. '(n' → logprob: -6.378772258758545
    9. 'return' → logprob: -6.503772258758545
    10. ' return' → logprob: -6.753772258758545

Token 384: '調' (ID: 65541)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28490081429481506
    2. 'result' → logprob: -1.7849007844924927
    3. 'res' → logprob: -3.4099009037017822
    4. '1' → logprob: -3.9099009037017822
    5. ' ' → logprob: -4.784900665283203
    6. ' res' → logprob: -5.409900665283203
    7. 'return' → logprob: -5.534900665283203
    8. ' result' → logprob: -5.534900665283203
    9. 'def' → logprob: -6.159900665283203
    10. 'ans' → logprob: -6.409900665283203

Token 385: 'べ' (ID: 55078)
  Prédit: 'べ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'べ' → logprob: -0.08662894368171692
    2. '算' → logprob: -2.8366289138793945
    3. 'え' → logprob: -5.4616289138793945
    4. '査' → logprob: -6.3366289138793945
    5. 'て' → logprob: -6.7116289138793945
    6. 'u' → logprob: -6.7116289138793945
    7. '用' → logprob: -6.8366289138793945
    8. 'せ' → logprob: -6.8366289138793945
    9. 'わせ' → logprob: -7.0866289138793945
    10. 'す' → logprob: -7.2116289138793945

Token 386: 'る' (ID: 6996)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4994993209838867
    2. '(l' → logprob: -1.4994993209838867
    3. 'range' → logprob: -2.1244993209838867
    4. '   ' → logprob: -2.2494993209838867
    5. 'return' → logprob: -2.3744993209838867
    6. '1' → logprob: -2.4994993209838867
    7. 'a' → logprob: -3.6244993209838867
    8. '
' → logprob: -4.249499320983887
    9. 'べ' → logprob: -4.499499320983887
    10. 'e' → logprob: -4.749499320983887

Token 387: '
' (ID: 198)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1165829673409462
    2. '   ' → logprob: -3.2415828704833984
    3. '(' → logprob: -3.4915828704833984
    4. 'result' → logprob: -3.6165828704833984
    5. '(
' → logprob: -5.491582870483398
    6. '(i' → logprob: -5.991582870483398
    7. ' result' → logprob: -6.616582870483398
    8. '(result' → logprob: -6.866582870483398
    9. 'res' → logprob: -7.241582870483398
    10. 'def' → logprob: -7.491582870483398

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017280252650380135
    2. ' res' → logprob: -4.392280101776123
    3. 'res' → logprob: -6.517280101776123
    4. 'l' → logprob: -6.517280101776123
    5. ' l' → logprob: -6.892280101776123
    6. 'result' → logprob: -8.017280578613281
    7. ' result' → logprob: -8.142280578613281
    8. '    
' → logprob: -9.767280578613281
    9. ' ' → logprob: -10.767280578613281
    10. '	l' → logprob: -10.892280578613281

Token 389: ' L' (ID: 451)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08547051250934601
    2. 'l' → logprob: -2.58547043800354
    3. 's' → logprob: -5.210470676422119
    4. 'result' → logprob: -7.210470676422119
    5. 'ans' → logprob: -8.335470199584961
    6. ' res' → logprob: -10.335470199584961
    7. 'r' → logprob: -10.335470199584961
    8. 'ret' → logprob: -10.710470199584961
    9. '   ' → logprob: -10.835470199584961
    10. '    
' → logprob: -12.210470199584961

Token 390: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12818174064159393
    2. '=l' → logprob: -2.5031816959381104
    3. ',' → logprob: -3.3781816959381104
    4. ' =' → logprob: -5.6281819343566895
    5. ',l' → logprob: -7.3781819343566895
    6. '=
' → logprob: -9.753181457519531
    7. '=L' → logprob: -10.253181457519531
    8. ' ,' → logprob: -10.628181457519531
    9. '=r' → logprob: -11.128181457519531
    10. ',
' → logprob: -12.128181457519531

Token 391: '+' (ID: 10)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.9590985774993896
    2. ',' → logprob: -1.5840985774993896
    3. '+r' → logprob: -2.2090985774993896
    4. '+' → logprob: -2.4590985774993896
    5. '   ' → logprob: -3.0840985774993896
    6. '=r' → logprob: -3.2090985774993896
    7. ',R' → logprob: -3.4590985774993896
    8. '=' → logprob: -3.5840985774993896
    9. ',
' → logprob: -4.084098815917969
    10. '+=' → logprob: -4.709098815917969

Token 392: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -9.088346359931165e-07
    2. '(seg' → logprob: -14.375000953674316
    3. ' seg' → logprob: -16.125
    4. '   ' → logprob: -16.625
    5. '<|end|>' → logprob: -17.125
    6. '_seg' → logprob: -18.25
    7. 'segment' → logprob: -19.375
    8. '```' → logprob: -19.625
    9. 'sig' → logprob: -19.75
    10. 'sem' → logprob: -21.0

Token 393: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.5759599208831787
    2. 'el' → logprob: -0.8259599208831787
    3. '	el' → logprob: -11.450960159301758
    4. 'El' → logprob: -12.700960159301758
    5. '   ' → logprob: -12.825960159301758
    6. '```' → logprob: -13.950960159301758
    7. 'elf' → logprob: -14.825960159301758
    8. 'elb' → logprob: -14.950960159301758
    9. '
' → logprob: -15.575960159301758
    10. ' el' → logprob: -16.325960159301758

Token 394: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33910417556762695
    2. 'R' → logprob: -1.339104175567627
    3. ',R' → logprob: -4.464104175567627
    4. '    
' → logprob: -4.964104175567627
    5. ' R' → logprob: -5.339104175567627
    6. '<|end|>' → logprob: -7.464104175567627
    7. ',' → logprob: -7.589104175567627
    8. '	R' → logprob: -8.464103698730469
    9. ':R' → logprob: -8.839103698730469
    10. ';' → logprob: -8.964103698730469

Token 395: '   ' (ID: 271)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2485530525445938
    2. '   ' → logprob: -1.7485530376434326
    3. 'R' → logprob: -3.9985530376434326
    4. ' 
' → logprob: -4.623553276062012
    5. '  
' → logprob: -5.123553276062012
    6. '    
' → logprob: -5.623553276062012
    7. '	R' → logprob: -5.748553276062012
    8. '<|end|>' → logprob: -6.498553276062012
    9. ' ' → logprob: -6.998553276062012
    10. '  ' → logprob: -7.123553276062012

Token 396: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -7.779520092299208e-05
    2. '   ' → logprob: -10.000078201293945
    3. ' R' → logprob: -10.375078201293945
    4. '
' → logprob: -14.375078201293945
    5. 'r' → logprob: -15.250078201293945
    6. '    
' → logprob: -15.875078201293945
    7. '```' → logprob: -16.125078201293945
    8. '``' → logprob: -17.250078201293945
    9. '  
' → logprob: -17.875078201293945
    10. ',' → logprob: -18.375078201293945

Token 397: '=r' (ID: 67845)
  Prédit: '=r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=r' → logprob: -0.0001882823125924915
    2. '=' → logprob: -8.750187873840332
    3. ' =' → logprob: -10.625187873840332
    4. 'r' → logprob: -12.250187873840332
    5. ' r' → logprob: -15.125187873840332
    6. '=
' → logprob: -15.625187873840332
    7. ',r' → logprob: -16.75018882751465
    8. '=l' → logprob: -17.62518882751465
    9. '=int' → logprob: -17.75018882751465
    10. '	r' → logprob: -17.87518882751465

Token 398: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08047306537628174
    2. '+r' → logprob: -2.580472946166992
    3. '=' → logprob: -7.330472946166992
    4. '+s' → logprob: -7.455472946166992
    5. '+=' → logprob: -9.330472946166992
    6. ' +' → logprob: -9.455472946166992
    7. '+l' → logprob: -9.455472946166992
    8. '+
' → logprob: -9.955472946166992
    9. '=r' → logprob: -10.080472946166992
    10. '<|end|>' → logprob: -12.455472946166992

Token 399: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00026658078422769904
    2. 'r' → logprob: -8.250267028808594
    3. '(seg' → logprob: -12.250267028808594
    4. ' seg' → logprob: -14.875267028808594
    5. 's' → logprob: -16.750267028808594
    6. '_seg' → logprob: -17.375267028808594
    7. '   ' → logprob: -17.500267028808594
    8. '
' → logprob: -17.750267028808594
    9. 'rag' → logprob: -18.000267028808594
    10. 'sg' → logprob: -18.125267028808594

Token 400: '_el' (ID: 55168)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.08984512090682983
    2. '_el' → logprob: -2.4648451805114746
    3. 'seg' → logprob: -7.089845180511475
    4. '_seg' → logprob: -10.089844703674316
    5. 'El' → logprob: -11.714844703674316
    6. 'r' → logprob: -12.214844703674316
    7. '	el' → logprob: -12.964844703674316
    8. '```' → logprob: -13.089844703674316
    9. 'R' → logprob: -13.214844703674316
    10. 'sel' → logprob: -13.589844703674316

Token 401: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021263018250465393
    2. '<|end|>' → logprob: -4.021263122558594
    3. '    
' → logprob: -6.646263122558594
    4. '       ' → logprob: -7.021263122558594
    5. '<|end|>' → logprob: -8.146263122558594
    6. '
' → logprob: -8.771263122558594
    7. '    ' → logprob: -9.396263122558594
    8. ',' → logprob: -9.771263122558594
    9. '[' → logprob: -9.896263122558594
    10. '	while' → logprob: -9.896263122558594

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1068219318985939
    2. '<|end|>' → logprob: -2.8568220138549805
    3. '       ' → logprob: -3.9818220138549805
    4. '```' → logprob: -4.4818220138549805
    5. '    ' → logprob: -5.8568220138549805
    6. ' while' → logprob: -5.9818220138549805
    7. '<|end|>' → logprob: -6.4818220138549805
    8. '    
' → logprob: -6.9818220138549805
    9. '	while' → logprob: -7.2318220138549805
    10. 'while' → logprob: -7.3568220138549805

Token 403: ' AN' (ID: 3473)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04246486723423004
    2. 'result' → logprob: -3.7924649715423584
    3. 's' → logprob: -4.417464733123779
    4. 'ans' → logprob: -5.292464733123779
    5. ' res' → logprob: -7.167464733123779
    6. '   ' → logprob: -7.542464733123779
    7. 'r' → logprob: -8.042465209960938
    8. 'prod' → logprob: -8.667465209960938
    9. 'ret' → logprob: -10.292465209960938
    10. ' result' → logprob: -10.417465209960938

Token 404: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0087516784551553e-05
    2. 'swer' → logprob: -12.75001049041748
    3. ' S' → logprob: -12.87501049041748
    4. '
' → logprob: -13.62501049041748
    5. '=' → logprob: -14.37501049041748
    6. '```' → logprob: -14.37501049041748
    7. '

' → logprob: -14.75001049041748
    8. '=S' → logprob: -15.12501049041748
    9. '[' → logprob: -15.75001049041748
    10. '[S' → logprob: -15.75001049041748

Token 405: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.014684110297821e-06
    2. '=
' → logprob: -12.000008583068848
    3. ' =' → logprob: -13.125008583068848
    4. '=

' → logprob: -14.750008583068848
    5. '=int' → logprob: -15.500008583068848
    6. '＝' → logprob: -17.250009536743164
    7. '_=' → logprob: -17.750009536743164
    8. '*=' → logprob: -18.125009536743164
    9. '=`' → logprob: -18.125009536743164
    10. '=result' → logprob: -18.375009536743164

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012525303289294243
    2. 'seg' → logprob: -4.3875250816345215
    3. ' ' → logprob: -12.01252555847168
    4. '(seg' → logprob: -12.13752555847168
    5. ' seg' → logprob: -13.26252555847168
    6. '```' → logprob: -14.51252555847168
    7. '   ' → logprob: -15.01252555847168
    8. 'segment' → logprob: -15.26252555847168
    9. 'Seg' → logprob: -15.63752555847168
    10. 'SEG' → logprob: -15.82502555847168

Token 407: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9934149980545044
    2. '<|end|>' → logprob: -1.1184149980545044
    3. '   ' → logprob: -1.6184149980545044
    4. '    
' → logprob: -3.118414878845215
    5. '  
' → logprob: -3.868414878845215
    6. ' 
' → logprob: -4.118414878845215
    7. '<|end|>' → logprob: -4.993414878845215
    8. ' while' → logprob: -5.243414878845215
    9. 'while' → logprob: -5.368414878845215
    10. '   
' → logprob: -6.243414878845215

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6609324216842651
    2. '<|end|>' → logprob: -0.9109324216842651
    3. '
' → logprob: -3.7859325408935547
    4. ' ' → logprob: -4.035932540893555
    5. '  
' → logprob: -4.535932540893555
    6. '    
' → logprob: -4.785932540893555
    7. ' while' → logprob: -4.910932540893555
    8. ' 
' → logprob: -5.160932540893555
    9. '<|end|>' → logprob: -5.535932540893555
    10. '  ' → logprob: -6.035932540893555

Token 409: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04957004636526108
    2. ' while' → logprob: -3.049570083618164
    3. '   ' → logprob: -7.924570083618164
    4. 'While' → logprob: -8.174570083618164
    5. '
' → logprob: -8.674570083618164
    6. '	while' → logprob: -9.549570083618164
    7. 'L' → logprob: -9.799570083618164
    8. '    
' → logprob: -11.549570083618164
    9. ' L' → logprob: -11.799570083618164
    10. ' While' → logprob: -12.424570083618164

Token 410: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.029753148555755615
    2. ' L' → logprob: -3.5297532081604004
    3. '   ' → logprob: -13.529752731323242
    4. '(L' → logprob: -13.779752731323242
    5. '	L' → logprob: -15.904752731323242
    6. '>L' → logprob: -16.154752731323242
    7. ' ' → logprob: -17.154752731323242
    8. '
' → logprob: -17.279752731323242
    9. '<L' → logprob: -17.654752731323242
    10. '[L' → logprob: -17.654752731323242

Token 411: '<R' (ID: 42311)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17656388878822327
    2. '<=' → logprob: -1.9265638589859009
    3. ' <=' → logprob: -4.551563739776611
    4. ' <' → logprob: -5.676563739776611
    5. '<len' → logprob: -6.926563739776611
    6. '<L' → logprob: -8.05156421661377
    7. '[' → logprob: -8.67656421661377
    8. '```' → logprob: -8.80156421661377
    9. '<int' → logprob: -9.05156421661377
    10. '<R' → logprob: -9.67656421661377

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28386369347572327
    2. ':
' → logprob: -1.4088636636734009
    3. '       ' → logprob: -7.283863544464111
    4. '[' → logprob: -7.533863544464111
    5. ' and' → logprob: -8.15886402130127
    6. '   ' → logprob: -8.15886402130127
    7. 'and' → logprob: -8.53386402130127
    8. '```' → logprob: -9.03386402130127
    9. '=' → logprob: -9.15886402130127
    10. ' :' → logprob: -9.40886402130127

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6052075624465942
    2. ' 
' → logprob: -1.6052075624465942
    3. '<|end|>' → logprob: -2.2302074432373047
    4. '        
' → logprob: -2.9802074432373047
    5. '
' → logprob: -3.6052074432373047
    6. '  
' → logprob: -4.105207443237305
    7. '    
' → logprob: -4.480207443237305
    8. '    ' → logprob: -4.605207443237305
    9. ' ' → logprob: -4.855207443237305
    10. '   ' → logprob: -5.855207443237305

Token 414: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06665500998497009
    2. '       ' → logprob: -2.941654920578003
    3. 'If' → logprob: -5.441655158996582
    4. '   ' → logprob: -6.316655158996582
    5. '        
' → logprob: -6.566655158996582
    6. ' if' → logprob: -6.816655158996582
    7. '
' → logprob: -6.816655158996582
    8. '           ' → logprob: -7.316655158996582
    9. '```' → logprob: -7.691655158996582
    10. '#' → logprob: -8.816655158996582

Token 415: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00033581978641450405
    2. ' L' → logprob: -8.000335693359375
    3. '(L' → logprob: -15.000335693359375
    4. '   ' → logprob: -17.250335693359375
    5. ' (' → logprob: -18.500335693359375
    6. ' ' → logprob: -18.750335693359375
    7. '	L' → logprob: -19.500335693359375
    8. '>L' → logprob: -20.625335693359375
    9. 'R' → logprob: -21.875335693359375
    10. '(' → logprob: -22.000335693359375

Token 416: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.034380245953798294
    2. ' &' → logprob: -3.4093801975250244
    3. '&
' → logprob: -7.9093804359436035
    4. '%' → logprob: -8.909379959106445
    5. '&amp' → logprob: -10.159379959106445
    6. '&S' → logprob: -10.409379959106445
    7. '&C' → logprob: -10.409379959106445
    8. '&B' → logprob: -10.909379959106445
    9. ' &
' → logprob: -11.034379959106445
    10. '&I' → logprob: -11.284379959106445

Token 417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -18.125009536743164
    4. '１' → logprob: -18.875009536743164
    5. '01' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.125009536743164
    7. '```' → logprob: -20.625009536743164
    8. '' → logprob: -20.750009536743164
    9. '#' → logprob: -20.750009536743164
    10. '>' → logprob: -20.875009536743164

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -18.625
    4. 'L' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. '１' → logprob: -20.5
    7. '-' → logprob: -20.625
    8. '' → logprob: -21.0
    9. '#' → logprob: -21.125
    10. '>' → logprob: -21.25

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4403727054595947
    2. ':
' → logprob: -1.3153727054595947
    3. '==' → logprob: -2.4403727054595947
    4. ' ==' → logprob: -7.815372467041016
    5. '==
' → logprob: -9.065372467041016
    6. '=' → logprob: -9.190372467041016
    7. '!=' → logprob: -11.065372467041016
    8. '1' → logprob: -11.315372467041016
    9. ':

' → logprob: -11.440372467041016
    10. ' :' → logprob: -11.690372467041016

Token 420: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1786014884710312
    2. 'ANS' → logprob: -1.9286015033721924
    3. '
' → logprob: -4.553601264953613
    4. '   ' → logprob: -5.803601264953613
    5. '        
' → logprob: -6.428601264953613
    6. '    
' → logprob: -6.928601264953613
    7. '```' → logprob: -7.428601264953613
    8. ' AN' → logprob: -7.678601264953613
    9. '           ' → logprob: -8.678601264953613
    10. ' 
' → logprob: -9.428601264953613

Token 421: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -3.4285862057004124e-05
    2. 'ANSWER' → logprob: -10.87503433227539
    3. '   ' → logprob: -12.62503433227539
    4. 'ans' → logprob: -12.75003433227539
    5. '=' → logprob: -12.87503433227539
    6. '
' → logprob: -13.50003433227539
    7. 'AN' (adapté à ' AN') → logprob: -13.75003433227539
    8. ' AN' → logprob: -13.87503433227539
    9. '       ' → logprob: -14.25003433227539
    10. 'ANTS' → logprob: -14.37503433227539

Token 422: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1472419600977446e-06
    2. '=' → logprob: -14.750000953674316
    3. '(S' → logprob: -15.750000953674316
    4. 'Ｓ' → logprob: -15.750000953674316
    5. '=S' → logprob: -16.125001907348633
    6. '	S' → logprob: -16.750001907348633
    7. '[S' → logprob: -16.875001907348633
    8. '{' → logprob: -17.125001907348633
    9. ' S' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.500001907348633

Token 423: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004163164179772139
    2. '*=' → logprob: -5.5041632652282715
    3. ' =' → logprob: -9.504162788391113
    4. '=s' → logprob: -13.129162788391113
    5. '＝' → logprob: -13.504162788391113
    6. '=
' → logprob: -13.629162788391113
    7. '=*' → logprob: -13.879162788391113
    8. '=query' → logprob: -14.754162788391113
    9. ' *=' → logprob: -14.879162788391113
    10. '=cut' → logprob: -14.879162788391113

Token 424: 'ANS' (ID: 18850)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.004184652119874954
    2. 'ANS' → logprob: -6.379184722900391
    3. ' seg' → logprob: -6.879184722900391
    4. 'SEG' → logprob: -6.879184722900391
    5. 'ans' → logprob: -8.25418472290039
    6. '(seg' → logprob: -9.25418472290039
    7. 'sem' → logprob: -11.00418472290039
    8. 'AN' → logprob: -11.62918472290039
    9. 'segment' → logprob: -11.75418472290039
    10. 'ANSWER' → logprob: -12.31668472290039

Token 425: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.6047699318733066e-05
    2. ' *' → logprob: -11.375016212463379
    3. 'seg' → logprob: -12.500016212463379
    4. '**' → logprob: -15.000016212463379
    5. '(seg' → logprob: -15.500016212463379
    6. '*
' → logprob: -16.625015258789062
    7. ' seg' → logprob: -17.000015258789062
    8. '_seg' → logprob: -17.750015258789062
    9. '*=' → logprob: -18.000015258789062
    10. '*object' → logprob: -18.250015258789062

Token 426: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -6.749814019713085e-06
    2. ' SEG' → logprob: -12.000006675720215
    3. '_SEG' → logprob: -15.000006675720215
    4. 'SE' → logprob: -16.00000762939453
    5. '   ' → logprob: -17.25000762939453
    6. 'SG' → logprob: -18.62500762939453
    7. 'SEQ' → logprob: -19.37500762939453
    8. 'seg' → logprob: -20.12500762939453
    9. 'Seg' → logprob: -21.37500762939453
    10. '       ' → logprob: -22.00000762939453

Token 427: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -6.2729995988775045e-06
    2. 'L' → logprob: -12.000006675720215
    3. '[' → logprob: -16.8750057220459
    4. '	L' → logprob: -17.3750057220459
    5. '[
' → logprob: -17.6250057220459
    6. '(L' → logprob: -19.3750057220459
    7. '```' → logprob: -19.3750057220459
    8. '[I' → logprob: -20.0000057220459
    9. '   ' → logprob: -20.5000057220459
    10. '[S' → logprob: -20.6250057220459

Token 428: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4040013253688812
    2. '<|end|>' → logprob: -1.5290013551712036
    3. '       ' → logprob: -3.529001235961914
    4. ')' → logprob: -3.779001235961914
    5. ']
' → logprob: -4.404001235961914
    6. '
' → logprob: -4.404001235961914
    7. '<|end|>' → logprob: -4.404001235961914
    8. '           ' → logprob: -5.529001235961914
    9. ']+=' → logprob: -5.529001235961914
    10. ']+' → logprob: -6.029001235961914

Token 429: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9724279642105103
    2. '```' → logprob: -1.2224279642105103
    3. '<|end|>' → logprob: -1.9724279642105103
    4. '           ' → logprob: -2.7224278450012207
    5. '
' → logprob: -3.0974278450012207
    6. ' 
' → logprob: -4.597427845001221
    7. '        
' → logprob: -4.847427845001221
    8. '    
' → logprob: -4.847427845001221
    9. ' L' → logprob: -4.972427845001221
    10. '``' → logprob: -4.972427845001221

Token 430: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.029878808185458183
    2. ' L' → logprob: -3.529878854751587
    3. '           ' → logprob: -9.404878616333008
    4. '       ' → logprob: -10.154878616333008
    5. '   ' → logprob: -11.904878616333008
    6. ' ' → logprob: -16.029878616333008
    7. '```' → logprob: -16.654878616333008
    8. '               ' → logprob: -16.904878616333008
    9. '    ' → logprob: -16.904878616333008
    10. '	L' → logprob: -17.154878616333008

Token 431: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00010020548506872728
    2. ' +=' → logprob: -9.250100135803223
    3. '=' → logprob: -13.250100135803223
    4. '+' → logprob: -13.500100135803223
    5. ']+=' → logprob: -14.125100135803223
    6. '+=(' → logprob: -16.75010108947754
    7. '+='' → logprob: -17.12510108947754
    8. '+="' → logprob: -17.25010108947754
    9. '```' → logprob: -20.00010108947754
    10. '|' → logprob: -20.37510108947754

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '１' → logprob: -20.375001907348633
    6. '<|end|>' → logprob: -20.500001907348633
    7. '۱' → logprob: -21.125001907348633
    8. '+' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.937501907348633
    10. '१' → logprob: -21.937501907348633

Token 433: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006305343005806208
    2. '
' → logprob: -6.00630521774292
    3. '   ' → logprob: -7.13130521774292
    4. 'if' → logprob: -7.25630521774292
    5. '        
' → logprob: -7.38130521774292
    6. '```' → logprob: -7.50630521774292
    7. '``' → logprob: -8.631305694580078
    8. ' if' → logprob: -8.631305694580078
    9. ' 
' → logprob: -8.756305694580078
    10. '\
' → logprob: -8.881305694580078

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019135229522362351
    2. '
' → logprob: -6.876913547515869
    3. '   ' → logprob: -7.626913547515869
    4. '        
' → logprob: -9.126913070678711
    5. '```' → logprob: -10.001913070678711
    6. ' 
' → logprob: -10.251913070678711
    7. '    
' → logprob: -10.251913070678711
    8. '  
' → logprob: -10.501913070678711
    9. '<|end|>' → logprob: -11.001913070678711
    10. '>>' → logprob: -11.001913070678711

Token 435: ' if' (ID: 538)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.13128481805324554
    2. 'if' (adapté à ' if') → logprob: -2.131284713745117
    3. ' if' → logprob: -5.506284713745117
    4. ' R' → logprob: -8.631284713745117
    5. '   ' → logprob: -10.131284713745117
    6. '       ' → logprob: -10.506284713745117
    7. '```' → logprob: -10.631284713745117
    8. 'while' → logprob: -11.506284713745117
    9. '``' → logprob: -13.506284713745117
    10. '
' → logprob: -13.881284713745117

Token 436: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6326492428779602
    2. 'R' → logprob: -0.7576492428779602
    3. '   ' → logprob: -10.757649421691895
    4. ' ' → logprob: -10.882649421691895
    5. ' not' → logprob: -12.007649421691895
    6. 'not' → logprob: -13.882649421691895
    7. '	R' → logprob: -14.007649421691895
    8. '  ' → logprob: -14.257649421691895
    9. '<R' → logprob: -15.382649421691895
    10. ' ' → logprob: -15.382649421691895

Token 437: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.036773037165403366
    2. '>' → logprob: -4.161773204803467
    3. ' &' → logprob: -4.161773204803467
    4. '-' → logprob: -6.536773204803467
    5. '-=' → logprob: -6.911773204803467
    6. '&
' → logprob: -7.036773204803467
    7. '&gt' → logprob: -7.786773204803467
    8. '&R' → logprob: -8.161772727966309
    9. ' -=' → logprob: -8.661772727966309
    10. '```' → logprob: -8.911772727966309

Token 438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009142052149400115
    2. ' ' → logprob: -7.000914096832275
    3. '-' → logprob: -13.000914573669434
    4. '>' → logprob: -16.125913619995117
    5. '   ' → logprob: -16.250913619995117
    6. '
' → logprob: -16.375913619995117
    7. ' -' → logprob: -17.063413619995117
    8. 'r' → logprob: -17.375913619995117
    9. '#' → logprob: -17.625913619995117
    10. 'R' → logprob: -17.688413619995117

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '
' → logprob: -15.750035285949707
    4. '-' → logprob: -16.500036239624023
    5. '   ' → logprob: -18.375036239624023
    6. '--' → logprob: -18.750036239624023
    7. 'r' → logprob: -18.750036239624023
    8. '>' → logprob: -18.875036239624023
    9. 'R' → logprob: -19.375036239624023
    10. '  ' → logprob: -19.750036239624023

Token 440: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6838430762290955
    2. ':
' → logprob: -0.9338430762290955
    3. ':' → logprob: -2.9338431358337402
    4. '-' → logprob: -3.5588431358337402
    5. ' ==' → logprob: -4.43384313583374
    6. '       ' → logprob: -6.43384313583374
    7. '-=' → logprob: -6.43384313583374
    8. '--' → logprob: -7.55884313583374
    9. ' -=' → logprob: -7.55884313583374
    10. '):
' → logprob: -7.55884313583374

Token 441: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31023868918418884
    2. ':
' → logprob: -1.9352387189865112
    3. '-=' → logprob: -2.6852385997772217
    4. '==' → logprob: -4.060238838195801
    5. '           ' → logprob: -4.310238838195801
    6. '```' → logprob: -4.685238838195801
    7. '   ' → logprob: -5.435238838195801
    8. ' -=' → logprob: -5.685238838195801
    9. '-' → logprob: -6.435238838195801
    10. ':' → logprob: -6.685238838195801

Token 442: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -7.703443770878948e-06
    2. ' R' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '       ' → logprob: -15.125007629394531
    5. '           ' → logprob: -15.375007629394531
    6. '
' → logprob: -16.00000762939453
    7. '--' → logprob: -16.25000762939453
    8. '```' → logprob: -16.50000762939453
    9. '               ' → logprob: -16.87500762939453
    10. 'r' → logprob: -17.00000762939453

Token 443: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0001434690784662962
    2. ' -=' → logprob: -9.250143051147461
    3. '-' → logprob: -10.000143051147461
    4. '=' → logprob: -13.875143051147461
    5. '+=' → logprob: -14.625143051147461
    6. '```' → logprob: -15.125143051147461
    7. '>' → logprob: -17.25014305114746
    8. '–' → logprob: -17.37514305114746
    9. '−' → logprob: -17.50014305114746
    10. '   ' → logprob: -17.62514305114746

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -22.375
    5. '
' → logprob: -24.25
    6. '１' → logprob: -24.25
    7. 'R' → logprob: -24.375
    8. '۱' → logprob: -24.5
    9. '  ' → logprob: -24.625
    10. '#' → logprob: -25.1875

Token 445: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2557148337364197
    2. '       ' → logprob: -1.6307148933410645
    3. ':
' → logprob: -4.3807148933410645
    4. '
' → logprob: -4.7557148933410645
    5. '   ' → logprob: -5.7557148933410645
    6. ' AN' → logprob: -6.3807148933410645
    7. '               ' → logprob: -6.8807148933410645
    8. '=' → logprob: -7.2557148933410645
    9. 'ANS' → logprob: -7.2557148933410645
    10. '            
' → logprob: -8.755714416503906

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020049283280968666
    2. '       ' → logprob: -4.145049095153809
    3. '
' → logprob: -5.645049095153809
    4. '   ' → logprob: -9.520049095153809
    5. '=' → logprob: -9.645049095153809
    6. '               ' → logprob: -10.145049095153809
    7. ':
' → logprob: -10.145049095153809
    8. '            
' → logprob: -10.395049095153809
    9. ' and' → logprob: -10.520049095153809
    10. ',' → logprob: -10.645049095153809

Token 447: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.00018863992590922862
    2. ' AN' → logprob: -8.750188827514648
    3. '       ' → logprob: -11.500188827514648
    4. 'AN' (adapté à ' AN') → logprob: -12.000188827514648
    5. 'ANSWER' → logprob: -12.125188827514648
    6. '   ' → logprob: -12.375188827514648
    7. '           ' → logprob: -13.125188827514648
    8. 'ANTLR' → logprob: -13.500188827514648
    9. ' ' → logprob: -15.625188827514648
    10. '```' → logprob: -15.875188827514648

Token 448: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.856408536899835e-05
    2. '=' → logprob: -10.625028610229492
    3. '   ' → logprob: -12.875028610229492
    4. '       ' → logprob: -14.750028610229492
    5. '[' → logprob: -15.250028610229492
    6. 'ANS' → logprob: -15.750028610229492
    7. '[S' → logprob: -16.125028610229492
    8. '    ' → logprob: -16.375028610229492
    9. '=S' → logprob: -16.375028610229492
    10. '           ' → logprob: -16.500028610229492

Token 449: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009792567230761051
    2. '*=' → logprob: -4.634792804718018
    3. '=
' → logprob: -10.75979232788086
    4. ' *=' → logprob: -12.25979232788086
    5. ' =' → logprob: -13.00979232788086
    6. '*' → logprob: -13.13479232788086
    7. '=*' → logprob: -13.63479232788086
    8. '```' → logprob: -13.88479232788086
    9. ',' → logprob: -14.88479232788086
    10. '   ' → logprob: -15.00979232788086

Token 450: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -9.043078898685053e-05
    2. 'AN' → logprob: -10.000090599060059
    3. 'ANSWER' → logprob: -10.625090599060059
    4. ' AN' → logprob: -11.625090599060059
    5. 'SEG' → logprob: -11.750090599060059
    6. 'ANTS' → logprob: -13.875090599060059
    7. 'ANTLR' → logprob: -14.250090599060059
    8. 'ANCE' → logprob: -14.625090599060059
    9. 'ans' → logprob: -15.250090599060059
    10. '(ans' → logprob: -15.375090599060059

Token 451: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.896309739408025e-07
    2. '*[' → logprob: -14.500000953674316
    3. '*=' → logprob: -16.25
    4. '**' → logprob: -16.625
    5. ' *' → logprob: -16.875
    6. '[' → logprob: -17.5
    7. '*
' → logprob: -18.25
    8. ']*' → logprob: -18.5
    9. '***' → logprob: -18.5
    10. ')*' → logprob: -18.75

Token 452: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -6.704273118884885e-07
    2. ' SEG' → logprob: -14.375000953674316
    3. '_SEG' → logprob: -17.25
    4. 'SG' → logprob: -19.375
    5. 'seg' → logprob: -19.625
    6. 'SE' → logprob: -19.75
    7. 'SIG' → logprob: -20.0
    8. '[' → logprob: -20.625
    9. 'SEM' → logprob: -20.625
    10. '   ' → logprob: -21.375

Token 453: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -1.2352385965641588e-05
    2. 'R' → logprob: -11.375012397766113
    3. '[' → logprob: -14.000012397766113
    4. ' R' → logprob: -17.375011444091797
    5. '(R' → logprob: -17.375011444091797
    6. '	R' → logprob: -18.625011444091797
    7. '[
' → logprob: -18.875011444091797
    8. '[r' → logprob: -19.375011444091797
    9. '&R' → logprob: -19.875011444091797
    10. '<R' → logprob: -20.000011444091797

Token 454: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012856863031629473
    2. '   ' → logprob: -9.125128746032715
    3. '           ' → logprob: -11.000128746032715
    4. '<|end|>' → logprob: -14.000128746032715
    5. '      ' → logprob: -14.375128746032715
    6. '        
' → logprob: -15.125128746032715
    7. '	' → logprob: -15.375128746032715
    8. '```' → logprob: -15.875128746032715
    9. '     ' → logprob: -16.0001277923584
    10. ' ' → logprob: -16.6251277923584

Token 456: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006207128055393696
    2. '   ' → logprob: -5.38120698928833
    3. '>>' → logprob: -6.88120698928833
    4. '           ' → logprob: -8.756207466125488
    5. ' L' → logprob: -8.881207466125488
    6. ' ' → logprob: -10.381207466125488
    7. '        
' → logprob: -10.506207466125488
    8. '      ' → logprob: -10.631207466125488
    9. '```' → logprob: -10.631207466125488
    10. 'L' (adapté à ' L') → logprob: -10.756207466125488

Token 457: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.000810936326161027
    2. ' >>=' → logprob: -7.3758111000061035
    3. '+=' → logprob: -8.750810623168945
    4. '=' → logprob: -11.750810623168945
    5. '>>>' → logprob: -11.750810623168945
    6. '//=' → logprob: -12.500810623168945
    7. '|' → logprob: -13.625810623168945
    8. '<<' → logprob: -14.000810623168945
    9. '>' → logprob: -14.250810623168945
    10. ')>>' → logprob: -14.375810623168945

Token 458: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007110013975761831
    2. '1' → logprob: -7.250710964202881
    3. '>=' → logprob: -14.375711441040039
    4. '>' → logprob: -14.750711441040039
    5. '=
' → logprob: -16.75071144104004
    6. '2' → logprob: -16.87571144104004
    7. '/=' → logprob: -17.25071144104004
    8. '/' → logprob: -18.00071144104004
    9. '```' → logprob: -18.12571144104004
    10. '0' → logprob: -18.37571144104004

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -21.25
    4. '0' → logprob: -21.25
    5. '１' → logprob: -22.0
    6. '```' → logprob: -22.0
    7. '
' → logprob: -22.125
    8. '=' → logprob: -23.0
    9. '۱' → logprob: -23.875
    10. '       ' → logprob: -24.25

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1640601009130478
    2. ' R' → logprob: -3.039060115814209
    3. '<|end|>' → logprob: -3.414060115814209
    4. '>>' → logprob: -3.914060115814209
    5. ',R' → logprob: -3.914060115814209
    6. '   ' → logprob: -4.164060115814209
    7. 'R' → logprob: -4.914060115814209
    8. '	R' → logprob: -6.414060115814209
    9. ',' → logprob: -6.664060115814209
    10. '        
' → logprob: -6.789060115814209

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07891975343227386
    2. ',R' → logprob: -3.5789196491241455
    3. '>>' → logprob: -4.328919887542725
    4. 'R' → logprob: -4.328919887542725
    5. '   ' → logprob: -4.703919887542725
    6. ' R' → logprob: -4.703919887542725
    7. ',' → logprob: -6.328919887542725
    8. '#' → logprob: -7.578919887542725
    9. '<|end|>' → logprob: -8.078919410705566
    10. '           ' → logprob: -8.453919410705566

Token 462: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -9.088346359931165e-07
    2. ' R' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.25
    4. '       ' → logprob: -22.125
    5. 'r' → logprob: -22.625
    6. '	R' → logprob: -23.125
    7. '```' → logprob: -23.375
    8. '
' → logprob: -23.375
    9. '    
' → logprob: -24.0
    10. '    ' → logprob: -24.125

Token 463: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -1.9361264946837764e-07
    2. ' >>=' → logprob: -16.875
    3. '=' → logprob: -17.875
    4. '>' → logprob: -18.0
    5. '>>&' → logprob: -18.5
    6. '>>>' → logprob: -19.0
    7. '//=' → logprob: -19.125
    8. ')>>' → logprob: -20.0
    9. '>>
' → logprob: -20.0
    10. '```' → logprob: -21.75

Token 464: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31327730417251587
    2. '=' → logprob: -1.313277244567871
    3. '>' → logprob: -11.313277244567871
    4. ' ' → logprob: -13.813277244567871
    5. '/=' → logprob: -13.813277244567871
    6. '>>' → logprob: -14.438277244567871
    7. '>=' → logprob: -15.313277244567871
    8. '==' → logprob: -16.063278198242188
    9. '>>>' → logprob: -16.188278198242188
    10. '```' → logprob: -16.188278198242188

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '<|end|>' → logprob: -18.875
    4. '0' → logprob: -19.625
    5. '```' → logprob: -20.625
    6. '۱' → logprob: -21.375
    7. '   ' → logprob: -21.375
    8. '１' → logprob: -21.5
    9. '>' → logprob: -21.875
    10. '2' → logprob: -22.125

Token 466: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010896162129938602
    2. '<|end|>' → logprob: -6.876089572906494
    3. 'return' → logprob: -11.251090049743652
    4. '<|end|>' → logprob: -11.626090049743652
    5. '       ' → logprob: -12.001090049743652
    6. '```' → logprob: -12.001090049743652
    7. '[' → logprob: -12.376090049743652
    8. '
' → logprob: -12.376090049743652
    9. '	return' → logprob: -12.751090049743652
    10. '    
' → logprob: -12.876090049743652

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028688274323940277
    2. 'return' → logprob: -5.87786865234375
    3. '<|end|>' → logprob: -9.87786865234375
    4. ' return' → logprob: -12.62786865234375
    5. '	return' → logprob: -12.87786865234375
    6. '       ' → logprob: -13.00286865234375
    7. 'print' → logprob: -13.75286865234375
    8. ')' → logprob: -14.25286865234375
    9. '```' → logprob: -14.37786865234375
    10. '{return' → logprob: -14.50286865234375

Token 468: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00019424250058364123
    2. '   ' → logprob: -8.875194549560547
    3. ' return' → logprob: -9.875194549560547
    4. '	return' → logprob: -13.750194549560547
    5. 'print' → logprob: -14.125194549560547
    6. '    
' → logprob: -14.750194549560547
    7. ':return' → logprob: -15.250194549560547
    8. '{return' → logprob: -16.125194549560547
    9. '```' → logprob: -16.125194549560547
    10. 'eturn' → logprob: -16.750194549560547

Token 469: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -4.320199877838604e-07
    2. 'AN' → logprob: -15.5
    3. ' AN' → logprob: -16.0
    4. 'ANTS' → logprob: -16.875
    5. 'ANSWER' → logprob: -17.75
    6. '1' → logprob: -18.375
    7. 'ans' → logprob: -18.625
    8. 'A' → logprob: -18.875
    9. 'Ans' → logprob: -19.875
    10. 'ANT' → logprob: -20.125

Token 470: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.512236498361744e-07
    2. '(S' → logprob: -16.125
    3. 'Ｓ' → logprob: -16.375
    4. 'SOR' → logprob: -16.625
    5. '[S' → logprob: -16.75
    6. '	S' → logprob: -17.75
    7. '\S' → logprob: -18.125
    8. '=S' → logprob: -18.25
    9. '_S' → logprob: -18.5
    10. '=' → logprob: -18.5

Token 471: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003989720717072487
    2. '
' → logprob: -8.500398635864258
    3. ' for' → logprob: -9.500398635864258
    4. '<|end|>' → logprob: -9.500398635864258
    5. 'result' → logprob: -11.000398635864258
    6. 'results' → logprob: -11.500398635864258
    7. '    
' → logprob: -11.875398635864258
    8. '```' → logprob: -13.000398635864258
    9. 'answers' → logprob: -13.250398635864258
    10. '  
' → logprob: -13.625398635864258

Token 472: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.35837464465294e-05
    2. 'results' → logprob: -10.750043869018555
    3. 'result' → logprob: -11.250043869018555
    4. 'answers' → logprob: -12.750043869018555
    5. 'output' → logprob: -13.375043869018555
    6. 'answer' → logprob: -13.750043869018555
    7. '
' → logprob: -13.875043869018555
    8. ' for' → logprob: -14.000043869018555
    9. 'ans' → logprob: -14.375043869018555
    10. 'outputs' → logprob: -14.875043869018555

Token 473: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7162151336669922
    2. ' l' → logprob: -0.7162151336669922
    3. '_l' → logprob: -5.341215133666992
    4. 'q' → logprob: -5.466215133666992
    5. '_' → logprob: -5.591215133666992
    6. ' q' → logprob: -5.841215133666992
    7. ' _' → logprob: -5.966215133666992
    8. 'i' → logprob: -6.591215133666992
    9. '_q' → logprob: -7.341215133666992
    10. ' i' → logprob: -7.466215133666992

Token 474: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.023259803652763367
    2. ',' → logprob: -3.7732598781585693
    3. ' ,' → logprob: -11.898260116577148
    4. ',_' → logprob: -12.398260116577148
    5. 'r' → logprob: -12.773260116577148
    6. '_,' → logprob: -15.898260116577148
    7. 'in' → logprob: -15.898260116577148
    8. ' in' → logprob: -16.27326011657715
    9. ',l' → logprob: -16.89826011657715
    10. ',R' → logprob: -17.39826011657715

Token 475: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740813374519348
    2. ' in' → logprob: -0.9740813374519348
    3. '	in' → logprob: -12.974081039428711
    4. ',' → logprob: -14.724081039428711
    5. ',in' → logprob: -14.724081039428711
    6. 'n' → logprob: -14.849081039428711
    7. '   ' → logprob: -15.599081039428711
    8. '_in' → logprob: -15.724081039428711
    9. ' ' → logprob: -15.974081039428711
    10. 'In' → logprob: -16.59908103942871

Token 476: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00027897433028556406
    2. ' Q' → logprob: -8.250279426574707
    3. 'range' → logprob: -11.000279426574707
    4. ' range' → logprob: -14.000279426574707
    5. '   ' → logprob: -16.12527847290039
    6. ' ' → logprob: -16.75027847290039
    7. '  ' → logprob: -16.87527847290039
    8. '	Q' → logprob: -17.87527847290039
    9. '(Q' → logprob: -18.50027847290039
    10. '[' → logprob: -18.62527847290039

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004450892156455666
    2. ':
' → logprob: -7.7504448890686035
    3. ' in' → logprob: -12.000445365905762
    4. ',' → logprob: -12.625445365905762
    5. 'in' → logprob: -13.750445365905762
    6. ' :' → logprob: -14.125445365905762
    7. '):' → logprob: -14.625445365905762
    8. '=' → logprob: -14.625445365905762
    9. ':**' → logprob: -14.750445365905762
    10. '   ' → logprob: -15.125445365905762

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02628798969089985
    2. 'print' → logprob: -4.151288032531738
    3. '```' → logprob: -4.651288032531738
    4. '
' → logprob: -8.276288032531738
    5. '    
' → logprob: -8.651288032531738
    6. '``' → logprob: -9.651288032531738
    7. ' print' → logprob: -10.151288032531738
    8. '<|end|>' → logprob: -10.401288032531738
    9. 'result' → logprob: -10.651288032531738
    10. '  ' → logprob: -11.401288032531738

Token 479: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07417235523462296
    2. 'ans' → logprob: -3.074172258377075
    3. 'res' → logprob: -4.324172496795654
    4. 'result' → logprob: -4.824172496795654
    5. 'v' → logprob: -6.074172496795654
    6. 'val' → logprob: -7.324172496795654
    7. 'x' → logprob: -8.574172019958496
    8. 'a' → logprob: -8.699172019958496
    9. '   ' → logprob: -8.949172019958496
    10. 'answer' → logprob: -8.949172019958496

Token 480: '(' (ID: 7)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.015210502780973911
    2. '(' → logprob: -4.6402106285095215
    3. '(f' → logprob: -6.0152106285095215
    4. '(round' → logprob: -6.6402106285095215
    5. 'get' → logprob: -7.3902106285095215
    6. '("{' → logprob: -7.5152106285095215
    7. '(int' → logprob: -8.515210151672363
    8. '(format' → logprob: -9.140210151672363
    9. '('{' → logprob: -9.890210151672363
    10. '("%.' → logprob: -9.890210151672363

Token 481: '10' (ID: 702)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.002472089836373925
    2. '1' → logprob: -6.377471923828125
    3. 'f' → logprob: -7.877471923828125
    4. '"{' → logprob: -9.252471923828125
    5. 'round' → logprob: -9.252471923828125
    6. '{' → logprob: -9.752471923828125
    7. '(get' → logprob: -10.002471923828125
    8. 'format' → logprob: -10.127471923828125
    9. ' get' → logprob: -10.502471923828125
    10. ''{' → logprob: -12.127471923828125

Token 482: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5015100836753845
    2. '**' → logprob: -1.3765101432800293
    3. '(get' → logprob: -2.6265101432800293
    4. 'get' → logprob: -3.5015101432800293
    5. ' *' → logprob: -4.251510143280029
    6. '[get' → logprob: -4.626510143280029
    7. ',get' → logprob: -5.376510143280029
    8. '*(' → logprob: -6.001510143280029
    9. ')' → logprob: -6.501510143280029
    10. ' get' → logprob: -6.626510143280029

Token 483: '9' (ID: 24)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5540368556976318
    2. '(get' → logprob: -1.0540368556976318
    3. '-get' → logprob: -2.929036855697632
    4. '(' → logprob: -4.804037094116211
    5. '(-' → logprob: -5.429037094116211
    6. 'int' → logprob: -6.304037094116211
    7. '-' → logprob: -6.429037094116211
    8. 'r' → logprob: -6.554037094116211
    9. '9' → logprob: -6.679037094116211
    10. '0' → logprob: -6.929037094116211

Token 484: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.024296322837471962
    2. '*(' → logprob: -4.524296283721924
    3. ',' → logprob: -5.149296283721924
    4. ')' → logprob: -5.399296283721924
    5. '*(-' → logprob: -7.274296283721924
    6. ' *' → logprob: -7.524296283721924
    7. '-' → logprob: -8.274296760559082
    8. '   ' → logprob: -8.274296760559082
    9. ')*' → logprob: -8.524296760559082
    10. '*)' → logprob: -8.649296760559082

Token 485: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.000182921823579818
    2. '(get' → logprob: -9.12518310546875
    3. '(' → logprob: -9.75018310546875
    4. ' get' → logprob: -11.75018310546875
    5. 'int' → logprob: -13.37518310546875
    6. '1' → logprob: -13.75018310546875
    7. '0' → logprob: -14.25018310546875
    8. '10' → logprob: -14.25018310546875
    9. 'abs' → logprob: -14.25018310546875
    10. 'seg' → logprob: -14.75018310546875

Token 486: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0024762547109276056
    2. '(l' → logprob: -6.002476215362549
    3. ' values' → logprob: -15.627476692199707
    4. 'value' → logprob: -16.12747573852539
    5. '(values' → logprob: -16.25247573852539
    6. 'Values' → logprob: -16.25247573852539
    7. '_values' → logprob: -16.87747573852539
    8. 'VALUES' → logprob: -17.87747573852539
    9. 'vals' → logprob: -18.12747573852539
    10. 'valu' → logprob: -18.12747573852539

Token 487: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.125005722045898
    3. 'l' → logprob: -15.125005722045898
    4. '[l' → logprob: -15.125005722045898
    5. ' (' → logprob: -16.2500057220459
    6. '(L' → logprob: -17.5000057220459
    7. '(
' → logprob: -17.8750057220459
    8. '((' → logprob: -18.1250057220459
    9. ',l' → logprob: -18.8750057220459
    10. '	l' → logprob: -19.8750057220459

Token 488: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.002815217012539506
    2. ',' → logprob: -5.877815246582031
    3. ' ,' → logprob: -11.877815246582031
    4. '[r' → logprob: -13.877815246582031
    5. '(r' → logprob: -14.127815246582031
    6. 'r' → logprob: -14.252815246582031
    7. ',
' → logprob: -14.252815246582031
    8. ' r' → logprob: -15.877815246582031
    9. '+' → logprob: -16.62781524658203
    10. ',R' → logprob: -16.62781524658203

Token 489: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43341773748397827
    2. '())' → logprob: -1.433417797088623
    3. '))' → logprob: -2.183417797088623
    4. '()))' → logprob: -7.808417797088623
    5. '()' → logprob: -9.933417320251465
    6. '(' → logprob: -10.558417320251465
    7. ')))' → logprob: -10.933417320251465
    8. '(),' → logprob: -11.683417320251465
    9. ' )' → logprob: -11.683417320251465
    10. ' ())' → logprob: -11.683417320251465


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 487
Tokens correctement prédits (1ère position, stricte): 208
Tokens correctement prédits (1ère position, avec adaptation): 227
Tokens correctement prédits (top 10): 380
Précision stricte (1ère position): 42.71%
Précision adaptée (1ère position): 46.61%
Précision (top 10): 78.03%
================================================================================
