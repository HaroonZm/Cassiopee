================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import heappush, heappop

inf = float('inf')
n = int(input())
g = []
for i in range(n):
    line = list(map(int, input().split()[2:]))
    g.append(zip(line[0::2], line[1::2]))

dist = [inf] * n
dist[0] = 0
heap = [(0, 0)]

while heap:
    current = heappop(heap)[1]
    for v, c in g[current]:
        new_dist = dist[current] + c
        if new_dist < dist[v]:
            dist[v] = new_dist
            heappush(heap, (new_dist, v))

for i in range(n):
    print(i, dist[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06490714102983475
    2. 'import' → logprob: -2.8149070739746094
    3. ' import' → logprob: -5.939907073974609
    4. '.import' → logprob: -8.68990707397461
    5. '(' → logprob: -10.68990707397461
    6. '.he' → logprob: -11.06490707397461
    7. 'i' → logprob: -11.43990707397461
    8. ' .' → logprob: -11.56490707397461
    9. '.im' → logprob: -11.81490707397461
    10. ' ' → logprob: -11.81490707397461

Token 4: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.28018274903297424
    2. ' he' → logprob: -1.5301827192306519
    3. 'heap' → logprob: -3.6551828384399414
    4. 'nl' → logprob: -6.655182838439941
    5. ' n' → logprob: -7.905182838439941
    6. ' heap' → logprob: -9.155182838439941
    7. 'n' → logprob: -9.530182838439941
    8. 'merge' → logprob: -9.655182838439941
    9. '`' → logprob: -10.280182838439941
    10. '```' → logprob: -10.280182838439941

Token 5: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03823668137192726
    2. 'ap' → logprob: -3.288236618041992
    3. 'a' → logprob: -8.663236618041992
    4. 'apl' → logprob: -11.538236618041992
    5. 'aps' → logprob: -12.538236618041992
    6. 'q' → logprob: -12.663236618041992
    7. 'aq' → logprob: -13.538236618041992
    8. 'n' → logprob: -13.663236618041992
    9. 'appen' → logprob: -14.038236618041992
    10. 'ап' → logprob: -14.413236618041992

Token 6: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.024806387722492218
    2. 'op' → logprob: -4.149806499481201
    3. 'us' → logprob: -5.024806499481201
    4. 'u' → logprob: -6.399806499481201
    5. 'o' → logprob: -7.649806499481201
    6. 'opleft' → logprob: -12.274806022644043
    7. '```' → logprob: -12.399806022644043
    8. 'uf' → logprob: -13.399806022644043
    9. 'os' → logprob: -13.649806022644043
    10. 'opl' → logprob: -13.899806022644043

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007412535487674177
    2. '(heap' → logprob: -7.750741481781006
    3. 'he' → logprob: -9.000741004943848
    4. ',' → logprob: -9.250741004943848
    5. '```' → logprob: -10.250741004943848
    6. '\(' → logprob: -10.875741004943848
    7. '(
' → logprob: -11.000741004943848
    8. 'heap' → logprob: -12.375741004943848
    9. ' (' → logprob: -13.000741004943848
    10. 'import' → logprob: -13.500741004943848

Token 8: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.002812601625919342
    2. ' he' → logprob: -6.127812385559082
    3. 'heap' → logprob: -7.377812385559082
    4. ' heap' → logprob: -13.752812385559082
    5. '```' → logprob: -14.127812385559082
    6. ' ' → logprob: -15.502812385559082
    7. '.he' → logprob: -16.1278133392334
    8. 'hev' → logprob: -16.3778133392334
    9. 'hep' → logprob: -16.6278133392334
    10. 'pop' → logprob: -17.0028133392334

Token 9: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002476724097505212
    2. 'ap' → logprob: -6.002476692199707
    3. 'a' → logprob: -14.502476692199707
    4. 'e' → logprob: -15.877476692199707
    5. 'appen' → logprob: -16.002477645874023
    6. 'apl' → logprob: -16.002477645874023
    7. 'ап' → logprob: -16.877477645874023
    8. 'appe' → logprob: -17.002477645874023
    9. 'apply' → logprob: -17.627477645874023
    10. 'APP' → logprob: -17.877477645874023

Token 10: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0067208209075033665
    2. 'ush' → logprob: -5.006721019744873
    3. 'o' → logprob: -13.006720542907715
    4. 'pop' → logprob: -13.756720542907715
    5. 'opl' → logprob: -14.006720542907715
    6. 'opp' → logprob: -14.131720542907715
    7. 'opleft' → logprob: -15.256720542907715
    8. 'opf' → logprob: -16.75672149658203
    9. 'opr' → logprob: -17.63172149658203
    10. 'ope' → logprob: -17.75672149658203

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000592947646509856
    2. '\(' → logprob: -8.375593185424805
    3. '(
' → logprob: -8.750593185424805
    4. '\' → logprob: -10.000593185424805
    5. '\n' → logprob: -10.125593185424805
    6. 'def' → logprob: -10.125593185424805
    7. 'd' → logprob: -10.625593185424805
    8. '
' → logprob: -11.250593185424805
    9. '[' → logprob: -12.375593185424805
    10. '\[' → logprob: -12.500593185424805

Token 12: 'inf' (ID: 22226)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.539801688631997e-05
    2. '(heap' → logprob: -10.625065803527832
    3. '[' → logprob: -11.625065803527832
    4. '\(' → logprob: -11.750065803527832
    5. 'def' → logprob: -11.875065803527832
    6. ' (' → logprob: -12.500065803527832
    7. 'heap' → logprob: -13.000065803527832
    8. 'he' → logprob: -13.375065803527832
    9. 'a' → logprob: -13.750065803527832
    10. '#' → logprob: -13.750065803527832

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40125128626823425
    2. ' =' → logprob: -1.1512513160705566
    3. '```' → logprob: -5.401251316070557
    4. 'inity' → logprob: -5.526251316070557
    5. '_' → logprob: -6.526251316070557
    6. 'i' → logprob: -7.151251316070557
    7. ',' → logprob: -7.651251316070557
    8. ' ' → logprob: -7.776251316070557
    9. '`' → logprob: -8.151250839233398
    10. '   ' → logprob: -8.401250839233398

Token 14: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.029807081446051598
    2. 'float' → logprob: -3.5298070907592773
    3. ' ' → logprob: -10.154807090759277
    4. '	float' → logprob: -12.154807090759277
    5. '=float' → logprob: -12.404807090759277
    6. ' inf' → logprob: -12.529807090759277
    7. '10' → logprob: -12.779807090759277
    8. 'inf' → logprob: -14.154807090759277
    9. '1' → logprob: -15.154807090759277
    10. ' flo' → logprob: -15.279807090759277

Token 15: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.027630794793367386
    2. '(' → logprob: -3.6526308059692383
    3. '('.')' → logprob: -7.527630805969238
    4. ''' → logprob: -8.027630805969238
    5. '("("' → logprob: -8.027630805969238
    6. '('(' → logprob: -10.777630805969238
    7. '```' → logprob: -10.902630805969238
    8. ' '('' → logprob: -10.902630805969238
    9. ''s' → logprob: -10.902630805969238
    10. '('.' → logprob: -11.527630805969238

Token 16: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.190178904333152e-05
    2. 'in' → logprob: -11.250031471252441
    3. ''in' → logprob: -11.500031471252441
    4. 'info' → logprob: -12.875031471252441
    5. '-inf' → logprob: -13.250031471252441
    6. '_inf' → logprob: -13.625031471252441
    7. '123' → logprob: -13.875031471252441
    8. 'Inf' → logprob: -15.000031471252441
    9. ' inf' → logprob: -15.250031471252441
    10. ''' → logprob: -15.500031471252441

Token 17: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931636333465576
    2. '')' → logprob: -0.6931636333465576
    3. '('' → logprob: -12.068163871765137
    4. ')'' → logprob: -12.193163871765137
    5. ''' → logprob: -12.693163871765137
    6. '()' → logprob: -14.568163871765137
    7. '}')' → logprob: -14.568163871765137
    8. '.')' → logprob: -15.068163871765137
    9. '")' → logprob: -15.443163871765137
    10. ' ')' → logprob: -15.568163871765137

Token 18: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45202913880348206
    2. '
' → logprob: -1.2020291090011597
    3. '\' → logprob: -3.452029228210449
    4. '

' → logprob: -4.577029228210449
    5. '' → logprob: -4.702029228210449
    6. '
' → logprob: -5.702029228210449
    7. '\n' → logprob: -5.952029228210449
    8. '```' → logprob: -5.952029228210449
    9. 'd' → logprob: -6.702029228210449
    10. 'class' → logprob: -7.077029228210449

Token 19: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3528965711593628
    2. '_' → logprob: -1.7278965711593628
    3. ' =' → logprob: -2.8528966903686523
    4. '=' → logprob: -3.4778966903686523
    5. ',' → logprob: -3.9778966903686523
    6. ' ,' → logprob: -5.727896690368652
    7. ')' → logprob: -5.852896690368652
    8. '  ' → logprob: -6.102896690368652
    9. '.' → logprob: -6.477896690368652
    10. '[' → logprob: -7.727896690368652

Token 20: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5428773760795593
    2. ' int' → logprob: -0.9178773760795593
    3. '0' → logprob: -4.667877197265625
    4. 'int' → logprob: -4.792877197265625
    5. '10' → logprob: -7.292877197265625
    6. ' len' → logprob: -7.917877197265625
    7. '1' → logprob: -8.417877197265625
    8. ' input' → logprob: -8.542877197265625
    9. 'input' → logprob: -9.167877197265625
    10. '20' → logprob: -9.792877197265625

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036968740168958902
    2. '('' → logprob: -5.753696918487549
    3. ''' → logprob: -7.753696918487549
    4. '`' → logprob: -11.12869644165039
    5. '(input' → logprob: -11.37869644165039
    6. '"' → logprob: -11.62869644165039
    7. '(`' → logprob: -12.00369644165039
    8. '```' → logprob: -12.00369644165039
    9. ' (' → logprob: -12.12869644165039
    10. '()' → logprob: -12.12869644165039

Token 22: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4972167909145355
    2. ')' → logprob: -1.372216820716858
    3. '(' → logprob: -2.3722167015075684
    4. '())' → logprob: -3.1222167015075684
    5. '('' → logprob: -7.497216701507568
    6. '')' → logprob: -8.872217178344727
    7. '(
' → logprob: -9.622217178344727
    8. '().' → logprob: -10.372217178344727
    9. '(

' → logprob: -10.747217178344727
    10. '`)' → logprob: -11.247217178344727

Token 23: 'g' (ID: 70)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7414122223854065
    2. 'dist' → logprob: -0.9914122223854065
    3. 'a' → logprob: -2.2414121627807617
    4. 'd' → logprob: -3.9914121627807617
    5. 'arr' → logprob: -4.866412162780762
    6. 'data' → logprob: -5.491412162780762
    7. ')' → logprob: -6.241412162780762
    8. 'dp' → logprob: -6.366412162780762
    9. 'edges' → logprob: -6.491412162780762
    10. 'nums' → logprob: -6.616412162780762

Token 24: ' =' (ID: 314)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.06380041688680649
    2. ' =' → logprob: -3.18880033493042
    3. '=' → logprob: -4.18880033493042
    4. 'r' → logprob: -5.93880033493042
    5. ' ' → logprob: -6.56380033493042
    6. '[' → logprob: -7.06380033493042
    7. '[]' → logprob: -8.938800811767578
    8. 'raphics' → logprob: -9.188800811767578
    9. 'ra' → logprob: -9.813800811767578
    10. 'raf' → logprob: -10.563800811767578

Token 25: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7004513144493103
    2. ' [[]' → logprob: -0.9504513144493103
    3. ' []' → logprob: -2.825451374053955
    4. ' [' → logprob: -3.450451374053955
    5. '[]' → logprob: -4.450451374053955
    6. ' {}' → logprob: -5.075451374053955
    7. '{}' → logprob: -5.200451374053955
    8. ' [{}' → logprob: -6.075451374053955
    9. ' defaultdict' → logprob: -8.575450897216797
    10. ' {' → logprob: -9.950450897216797

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012216583825647831
    2. ' for' → logprob: -4.637216567993164
    3. '[' → logprob: -6.137216567993164
    4. '[]' → logprob: -8.262216567993164
    5. '[:]' → logprob: -11.637216567993164
    6. '[n' → logprob: -12.262216567993164
    7. '	for' → logprob: -12.637216567993164
    8. '=' → logprob: -12.637216567993164
    9. '[
' → logprob: -13.137216567993164
    10. ' ' → logprob: -13.137216567993164

Token 27: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09522692859172821
    2. ' ' → logprob: -2.720227003097534
    3. '_' → logprob: -4.220226764678955
    4. ' i' → logprob: -4.595226764678955
    5. ' ‌' → logprob: -8.845227241516113
    6. '  ' → logprob: -11.220227241516113
    7. ' ' → logprob: -11.845227241516113
    8. 'i' → logprob: -12.595227241516113
    9. '_i' → logprob: -12.970227241516113
    10. ' ​' → logprob: -13.095227241516113

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046668846160173416
    2. 'in' → logprob: -3.171668767929077
    3. ' ' → logprob: -5.921669006347656
    4. 'n' → logprob: -7.046669006347656
    5. ' n' → logprob: -9.796669006347656
    6. '  ' → logprob: -10.796669006347656
    7. '_' → logprob: -11.671669006347656
    8. '	in' → logprob: -11.671669006347656
    9. 'range' → logprob: -12.671669006347656
    10. ' i' → logprob: -13.296669006347656

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196948140859604
    2. ' range' → logprob: -2.811969518661499
    3. ' ' → logprob: -14.061969757080078
    4. '	range' → logprob: -14.561969757080078
    5. '(range' → logprob: -16.061969757080078
    6. 'ran' → logprob: -16.436969757080078
    7. 'rang' → logprob: -16.436969757080078
    8. ')' → logprob: -16.436969757080078
    9. 'r' → logprob: -16.811969757080078
    10. '_range' → logprob: -17.186969757080078

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1002117469906807
    2. '(' → logprob: -2.3502118587493896
    3. ' (' → logprob: -12.350212097167969
    4. 'n' → logprob: -15.475212097167969
    5. ' n' → logprob: -15.975212097167969
    6. '(len' → logprob: -16.22521209716797
    7. '(range' → logprob: -16.60021209716797
    8. '(
' → logprob: -17.10021209716797
    9. '()' → logprob: -17.22521209716797
    10. '(num' → logprob: -17.60021209716797

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020768598187714815
    2. ')' → logprob: -6.252076625823975
    3. ' ):' → logprob: -9.627077102661133
    4. '):
' → logprob: -9.752077102661133
    5. ':' → logprob: -11.127077102661133
    6. '+' → logprob: -12.002077102661133
    7. ',' → logprob: -14.252077102661133
    8. ']:' → logprob: -15.002077102661133
    9. ' )' → logprob: -15.127077102661133
    10. ' ' → logprob: -15.127077102661133

Token 32: '   ' (ID: 271)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.533484935760498
    2. ' []' → logprob: -0.908484935760498
    3. 'g' → logprob: -5.408484935760498
    4. '[]' → logprob: -6.283484935760498
    5. '   ' → logprob: -6.658484935760498
    6. ' ' → logprob: -7.158484935760498
    7. ' [' → logprob: -7.158484935760498
    8. '[' → logprob: -8.408485412597656
    9. '    ' → logprob: -8.533485412597656
    10. ' input' → logprob: -8.783485412597656

Token 33: ' line' (ID: 2543)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1524924635887146
    2. '[]' → logprob: -2.9024925231933594
    3. ' g' → logprob: -3.1524925231933594
    4. ' list' → logprob: -3.7774925231933594
    5. 'list' → logprob: -4.902492523193359
    6. 'g' → logprob: -5.027492523193359
    7. '   ' → logprob: -6.027492523193359
    8. ' map' → logprob: -6.777492523193359
    9. ' [' → logprob: -7.027492523193359
    10. '[' → logprob: -7.652492523193359

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804550692439079
    2. '=' → logprob: -3.2880454063415527
    3. 's' → logprob: -13.288045883178711
    4. '=input' → logprob: -14.413045883178711
    5. '=line' → logprob: -14.663045883178711
    6. ')' → logprob: -14.913045883178711
    7. '_' → logprob: -15.663045883178711
    8. ' ' → logprob: -15.663045883178711
    9. ',' → logprob: -16.28804588317871
    10. '=[]' → logprob: -16.41304588317871

Token 35: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.048687178641557693
    2. ' list' → logprob: -3.048687219619751
    3. 'input' → logprob: -9.298686981201172
    4. '[list' → logprob: -12.423686981201172
    5. ' input' → logprob: -13.298686981201172
    6. '[' → logprob: -14.048686981201172
    7. '[input' → logprob: -14.173686981201172
    8. '[]' → logprob: -14.673686981201172
    9. ' [' → logprob: -15.673686981201172
    10. '=list' → logprob: -15.673686981201172

Token 36: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.018425123766064644
    2. '(' → logprob: -4.018424987792969
    3. '(int' → logprob: -8.518424987792969
    4. '()' → logprob: -10.268424987792969
    5. '(input' → logprob: -10.393424987792969
    6. 'map' → logprob: -12.893424987792969
    7. ' map' → logprob: -13.518424987792969
    8. '(range' → logprob: -13.768424987792969
    9. '(
' → logprob: -13.893424987792969
    10. '<|end|>' → logprob: -14.393424987792969

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001180704333819449
    2. '(' → logprob: -7.126180648803711
    3. '(str' → logprob: -9.251180648803711
    4. 'int' → logprob: -9.376180648803711
    5. '(input' → logprob: -9.626180648803711
    6. '(lambda' → logprob: -9.626180648803711
    7. '<|end|>' → logprob: -10.751180648803711
    8. '[int' → logprob: -11.251180648803711
    9. '<int' → logprob: -11.376180648803711
    10. '(eval' → logprob: -12.626180648803711

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02465752139687538
    2. ',input' → logprob: -3.7746574878692627
    3. '(' → logprob: -7.399657726287842
    4. ',' → logprob: -7.649657726287842
    5. 'input' → logprob: -8.149657249450684
    6. ')' → logprob: -11.399657249450684
    7. ' input' → logprob: -11.524657249450684
    8. '=input' → logprob: -13.024657249450684
    9. '<|end|>' → logprob: -13.649657249450684
    10. '	input' → logprob: -13.649657249450684

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00318163656629622
    2. ' input' → logprob: -5.753181457519531
    3. ')' → logprob: -12.628181457519531
    4. ',input' → logprob: -15.128181457519531
    5. '(input' → logprob: -16.37818145751953
    6. '   ' → logprob: -16.37818145751953
    7. ' ' → logprob: -16.75318145751953
    8. '=input' → logprob: -17.25318145751953
    9. '	input' → logprob: -17.62818145751953
    10. '))' → logprob: -18.25318145751953

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.842555426876061e-06
    2. '()' → logprob: -12.625004768371582
    3. ')' → logprob: -14.750004768371582
    4. '()))' → logprob: -15.500004768371582
    5. '(' → logprob: -15.875004768371582
    6. '())' → logprob: -16.0000057220459
    7. '('').' → logprob: -16.0000057220459
    8. ' ().' → logprob: -16.1250057220459
    9. '()));' → logprob: -16.3750057220459
    10. '.split' → logprob: -16.3750057220459

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005667338264174759
    2. 'strip' → logprob: -7.5005669593811035
    3. 'rstrip' → logprob: -11.375566482543945
    4. '(split' → logprob: -13.500566482543945
    5. ' split' → logprob: -14.500566482543945
    6. 'spl' → logprob: -15.250566482543945
    7. ')' → logprob: -16.250566482543945
    8. 's' → logprob: -18.125566482543945
    9. 'sp' → logprob: -19.000566482543945
    10. '/s' → logprob: -19.125566482543945

Token 42: '()[' (ID: 20778)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13360445201396942
    2. '())' → logprob: -2.5086045265197754
    3. '()' → logprob: -3.6336045265197754
    4. '())))' → logprob: -4.633604526519775
    5. '))' → logprob: -5.508604526519775
    6. '(' → logprob: -6.508604526519775
    7. ')' → logprob: -7.383604526519775
    8. ')))' → logprob: -7.508604526519775
    9. '('' → logprob: -7.758604526519775
    10. '()))
' → logprob: -9.008604049682617

Token 43: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.110221266746521
    2. ']))' → logprob: -3.1102213859558105
    3. '1' → logprob: -3.4852213859558105
    4. '():' → logprob: -4.6102213859558105
    5. '()' → logprob: -5.2352213859558105
    6. ':]' → logprob: -5.4852213859558105
    7. '0' → logprob: -5.6102213859558105
    8. '2' → logprob: -6.2352213859558105
    9. '(' → logprob: -7.1102213859558105
    10. ' :' → logprob: -7.4852213859558105

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006091492250561714
    2. ':]' → logprob: -5.131091594696045
    3. ':],' → logprob: -9.756091117858887
    4. ']))' → logprob: -10.131091117858887
    5. ']:' → logprob: -10.506091117858887
    6. '():' → logprob: -11.131091117858887
    7. ' :' → logprob: -11.381091117858887
    8. ':)' → logprob: -13.131091117858887
    9. '):' → logprob: -13.131091117858887
    10. '::' → logprob: -13.381091117858887

Token 45: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0012976157013326883
    2. ']' → logprob: -7.001297473907471
    3. ']))
' → logprob: -9.126297950744629
    4. '2' → logprob: -9.251297950744629
    5. ' ]' → logprob: -9.626297950744629
    6. ' ' → logprob: -10.251297950744629
    7. 'n' → logprob: -10.501297950744629
    8. '1' → logprob: -11.501297950744629
    9. '])))' → logprob: -11.626297950744629
    10. '])' → logprob: -11.751297950744629

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015924794599413872
    2. 'g' → logprob: -4.89092493057251
    3. ')' → logprob: -5.39092493057251
    4. ' g' → logprob: -6.01592493057251
    5. ' ' → logprob: -8.140924453735352
    6. '    ' → logprob: -8.140924453735352
    7. '  ' → logprob: -8.765924453735352
    8. '    
' → logprob: -8.890924453735352
    9. '<|end|>' → logprob: -9.140924453735352
    10. ',' → logprob: -9.765924453735352

Token 47: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.5144320130348206
    2. '   ' → logprob: -1.0144319534301758
    3. ' g' → logprob: -3.264431953430176
    4. ')' → logprob: -8.139431953430176
    5. 'for' → logprob: -8.139431953430176
    6. ' for' → logprob: -9.014431953430176
    7. '	g' → logprob: -9.014431953430176
    8. ' ' → logprob: -9.639431953430176
    9. 'he' → logprob: -9.764431953430176
    10. '  ' → logprob: -9.889431953430176

Token 48: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02078944630920887
    2. '.' → logprob: -3.895789384841919
    3. '.app' → logprob: -9.39578914642334
    4. '.ap' → logprob: -9.39578914642334
    5. '.extend' → logprob: -10.27078914642334
    6. '.setdefault' → logprob: -10.39578914642334
    7. ' .' → logprob: -12.39578914642334
    8. '​.' → logprob: -12.52078914642334
    9. '.add' → logprob: -14.02078914642334
    10. '.push' → logprob: -14.14578914642334

Token 49: '(zip' (ID: 87520)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00017350474081467837
    2. '(' → logprob: -8.750173568725586
    3. '(list' → logprob: -11.750173568725586
    4. '((' → logprob: -12.375173568725586
    5. '([' → logprob: -13.000173568725586
    6. '[line' → logprob: -15.875173568725586
    7. '(lambda' → logprob: -16.125173568725586
    8. '(
' → logprob: -16.375173568725586
    9. '(tuple' → logprob: -16.500173568725586
    10. '(Line' → logprob: -16.500173568725586

Token 50: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.004729991778731346
    2. '(' → logprob: -5.379730224609375
    3. ' (' → logprob: -10.379730224609375
    4. ')' → logprob: -10.754730224609375
    5. '(range' → logprob: -10.879730224609375
    6. '(Line' → logprob: -11.379730224609375
    7. '((' → logprob: -11.879730224609375
    8. '[line' → logprob: -12.379730224609375
    9. '(
' → logprob: -12.629730224609375
    10. '(list' → logprob: -13.254730224609375

Token 51: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4456738233566284
    2. '(' → logprob: -2.070673942565918
    3. '))' → logprob: -2.195673942565918
    4. ',' → logprob: -2.445673942565918
    5. '())' → logprob: -3.945673942565918
    6. '(line' → logprob: -4.945673942565918
    7. ',)' → logprob: -5.445673942565918
    8. '()))' → logprob: -6.820673942565918
    9. '(),' → logprob: -7.070673942565918
    10. '()' → logprob: -7.320673942565918

Token 52: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9164566993713379
    2. ':' → logprob: -1.541456699371338
    3. '::' → logprob: -1.666456699371338
    4. '0' → logprob: -2.791456699371338
    5. ':],' → logprob: -2.916456699371338
    6. '2' → logprob: -3.791456699371338
    7. '])' → logprob: -4.541456699371338
    8. ' :' → logprob: -4.666456699371338
    9. '],' → logprob: -5.166456699371338
    10. '(' → logprob: -5.166456699371338

Token 53: '::' (ID: 742)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7011388540267944
    2. ':],' → logprob: -0.9511388540267944
    3. '::' → logprob: -2.951138973236084
    4. ':' → logprob: -3.326138973236084
    5. ':]' → logprob: -4.326138973236084
    6. ']' → logprob: -4.326138973236084
    7. '+' → logprob: -7.076138973236084
    8. ' ],' → logprob: -7.826138973236084
    9. ' :' → logprob: -8.076138496398926
    10. '])' → logprob: -8.076138496398926

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002595992060378194
    2. '3' → logprob: -6.127595901489258
    3. ' ' → logprob: -8.377595901489258
    4. '1' → logprob: -9.377595901489258
    5. '4' → logprob: -10.127595901489258
    6. 'n' → logprob: -11.502595901489258
    7. '])' → logprob: -11.502595901489258
    8. '5' → logprob: -12.190095901489258
    9. '   ' → logprob: -12.440095901489258
    10. '],' → logprob: -12.815095901489258

Token 55: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003861831733956933
    2. ' ,' → logprob: -5.753861904144287
    3. '],' → logprob: -7.503861904144287
    4. ' ],' → logprob: -10.003861427307129
    5. ' ' → logprob: -11.128861427307129
    6. '   ' → logprob: -11.503861427307129
    7. '])' → logprob: -11.628861427307129
    8. ',)' → logprob: -11.628861427307129
    9. ',
' → logprob: -12.003861427307129
    10. ']' → logprob: -12.253861427307129

Token 56: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1269584596157074
    2. 'line' → logprob: -2.1269583702087402
    3. ' ' → logprob: -11.376958847045898
    4. '   ' → logprob: -11.501958847045898
    5. '    ' → logprob: -12.751958847045898
    6. '	line' → logprob: -12.751958847045898
    7. '[line' → logprob: -14.001958847045898
    8. '  ' → logprob: -14.876958847045898
    9. ',line' → logprob: -15.251958847045898
    10. '(line' → logprob: -15.376958847045898

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002726601669564843
    2. '1' → logprob: -8.250272750854492
    3. '][' → logprob: -12.000272750854492
    4. ' [' → logprob: -13.875272750854492
    5. '   ' → logprob: -14.125272750854492
    6. '2' → logprob: -14.500272750854492
    7. '-' → logprob: -14.875272750854492
    8. '```' → logprob: -14.875272750854492
    9. ')[' → logprob: -15.250272750854492
    10. '+' → logprob: -15.250272750854492

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.250018119812012
    3. '   ' → logprob: -13.250018119812012
    4. '2' → logprob: -14.000018119812012
    5. '  ' → logprob: -14.375018119812012
    6. '0' → logprob: -15.312518119812012
    7. '3' → logprob: -15.750018119812012
    8. '    ' → logprob: -15.875018119812012
    9. '```' → logprob: -16.062517166137695
    10. '11' → logprob: -16.312517166137695

Token 59: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.00022403974435292184
    2. ']))' → logprob: -9.000224113464355
    3. '])' → logprob: -10.500224113464355
    4. ' ::' → logprob: -11.125224113464355
    5. ':' → logprob: -11.250224113464355
    6. '::_' → logprob: -11.250224113464355
    7. ']' → logprob: -11.750224113464355
    8. ':::' → logprob: -12.250224113464355
    9. ':end' → logprob: -12.625224113464355
    10. '0' → logprob: -13.125224113464355

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.125003814697266
    3. ']))' → logprob: -14.250003814697266
    4. '])' → logprob: -14.375003814697266
    5. '1' → logprob: -15.500003814697266
    6. '   ' → logprob: -16.375003814697266
    7. ']' → logprob: -16.375003814697266
    8. '0' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. '  ' → logprob: -17.500003814697266

Token 61: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06301296502351761
    2. ')' → logprob: -2.8130130767822266
    3. ')))' → logprob: -6.938013076782227
    4. ' ))' → logprob: -10.063013076782227
    5. '))
' → logprob: -10.938013076782227
    6. ' )' → logprob: -12.063013076782227
    7. '   ' → logprob: -12.688013076782227
    8. ' ' → logprob: -13.813013076782227
    9. '),' → logprob: -13.938013076782227
    10. ')
' → logprob: -14.063013076782227

Token 62: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018916653469204903
    2. ']' → logprob: -4.393916606903076
    3. 'g' → logprob: -5.768916606903076
    4. 'for' → logprob: -7.143916606903076
    5. '   ' → logprob: -7.893916606903076
    6. '<|end|>' → logprob: -8.018917083740234
    7. 'n' → logprob: -8.393917083740234
    8. ' ' → logprob: -8.768917083740234
    9. '```' → logprob: -8.768917083740234
    10. '
' → logprob: -9.143917083740234

Token 63: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020662866532802582
    2. '=' → logprob: -4.270662784576416
    3. '[]' → logprob: -5.645662784576416
    4. 's' → logprob: -6.770662784576416
    5. ' =' → logprob: -6.770662784576416
    6. ']' → logprob: -9.020663261413574
    7. ',' → logprob: -9.145663261413574
    8. '(' → logprob: -9.145663261413574
    9. '=[' → logprob: -9.520663261413574
    10. '[:]' → logprob: -9.645663261413574

Token 64: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027092011645436287
    2. ' [' → logprob: -4.277091979980469
    3. '[in' → logprob: -4.527091979980469
    4. '[n' → logprob: -6.402091979980469
    5. '{' → logprob: -8.652091979980469
    6. '[int' → logprob: -9.777091979980469
    7. '[ind' → logprob: -10.152091979980469
    8. '[i' → logprob: -10.527091979980469
    9. '[node' → logprob: -11.027091979980469
    10. '[min' → logprob: -12.027091979980469

Token 65: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0015500946901738644
    2. ' inf' → logprob: -6.501550197601318
    3. '0' → logprob: -10.00154972076416
    4. '-inf' → logprob: -14.62654972076416
    5. '   ' → logprob: -14.75154972076416
    6. ' ' → logprob: -15.37654972076416
    7. '.inf' → logprob: -15.50154972076416
    8. 'in' → logprob: -15.50154972076416
    9. '[' → logprob: -15.75154972076416
    10. '_inf' → logprob: -16.001550674438477

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008701292099431157
    2. ')]' → logprob: -7.875870227813721
    3. ']*' → logprob: -8.375869750976562
    4. ' for' → logprob: -9.125869750976562
    5. ' ]' → logprob: -9.375869750976562
    6. ')' → logprob: -10.000869750976562
    7. 'for' → logprob: -11.625869750976562
    8. ',' → logprob: -11.750869750976562
    9. '`]' → logprob: -13.875869750976562
    10. '()]' → logprob: -13.875869750976562

Token 67: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1558268964290619
    2. ' *' → logprob: -2.7808268070220947
    3. ']' → logprob: -3.4058268070220947
    4. '*(' → logprob: -3.9058268070220947
    5. ',' → logprob: -5.030827045440674
    6. ')' → logprob: -5.155827045440674
    7. '(n' → logprob: -5.405827045440674
    8. '(' → logprob: -6.030827045440674
    9. '+' → logprob: -6.155827045440674
    10. '*n' → logprob: -6.280827045440674

Token 68: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018974634585902095
    2. '(n' → logprob: -6.50189733505249
    3. ' n' → logprob: -7.87689733505249
    4. '(' → logprob: -11.251897811889648
    5. ' (' → logprob: -13.001897811889648
    6. '	n' → logprob: -15.751897811889648
    7. '   ' → logprob: -16.12689781188965
    8. ' ' → logprob: -16.12689781188965
    9. '_n' → logprob: -17.37689781188965
    10. ')n' → logprob: -17.62689781188965

Token 69: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0015656884061172605
    2. 'prev' → logprob: -7.501565456390381
    3. 'visited' → logprob: -8.501565933227539
    4. '```' → logprob: -8.501565933227539
    5. 'start' → logprob: -8.876565933227539
    6. 'parent' → logprob: -9.751565933227539
    7. 'queue' → logprob: -9.751565933227539
    8. '
' → logprob: -9.876565933227539
    9. 'heap' → logprob: -9.876565933227539
    10. 'import' → logprob: -10.251565933227539

Token 70: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.538490950129926e-05
    2. '0' → logprob: -11.375055313110352
    3. 'import' → logprob: -11.625055313110352
    4. ' dist' → logprob: -11.750055313110352
    5. '```' → logprob: -11.750055313110352
    6. 'visited' → logprob: -12.375055313110352
    7. '
' → logprob: -12.625055313110352
    8. 'def' → logprob: -13.375055313110352
    9. 'd' → logprob: -13.375055313110352
    10. '1' → logprob: -13.875055313110352

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010163593105971813
    2. '[n' → logprob: -10.500102043151855
    3. '0' → logprob: -10.875102043151855
    4. '<|end|>' → logprob: -11.125102043151855
    5. '\[' → logprob: -11.625102043151855
    6. '[]' → logprob: -11.750102043151855
    7. '[
' → logprob: -11.875102043151855
    8. ',' → logprob: -12.500102043151855
    9. ']' → logprob: -13.375102043151855
    10. '```' → logprob: -13.500102043151855

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -15.125001907348633
    4. 's' → logprob: -15.625001907348633
    5. '۰' → logprob: -16.250001907348633
    6. '[' → logprob: -16.625001907348633
    7. '(' → logprob: -16.750001907348633
    8. '```' → logprob: -17.187501907348633
    9. ']' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.812501907348633

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001049736310960725
    2. ']=' → logprob: -9.750104904174805
    3. ' ]' → logprob: -10.000104904174805
    4. '=' → logprob: -13.625104904174805
    5. ' =' → logprob: -17.125104904174805
    6. ')' → logprob: -17.750104904174805
    7. '`]' → logprob: -18.250104904174805
    8. ')]' → logprob: -19.000104904174805
    9. ']

' → logprob: -19.375104904174805
    10. '0' → logprob: -19.375104904174805

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759609937667847
    2. '=' → logprob: -0.8259609937667847
    3. ',' → logprob: -11.700961112976074
    4. ' =
' → logprob: -12.075961112976074
    5. '=

' → logprob: -13.325961112976074
    6. '<|end|>' → logprob: -13.325961112976074
    7. '=
' → logprob: -13.450961112976074
    8. ' ' → logprob: -13.950961112976074
    9. ')' → logprob: -14.575961112976074
    10. ']' → logprob: -15.575961112976074

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -18.375003814697266
    4. '00' → logprob: -19.750003814697266
    5. '   ' → logprob: -19.875003814697266
    6. ' ' → logprob: -20.375003814697266
    7. '０' → logprob: -20.375003814697266
    8. '```' → logprob: -20.375003814697266
    9. '  ' → logprob: -20.437503814697266
    10. '000' → logprob: -21.000003814697266

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -18.75
    4. '０' → logprob: -20.0
    5. '00' → logprob: -21.0
    6. '०' → logprob: -21.1875
    7. '০' → logprob: -21.25
    8. '٠' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. '   ' → logprob: -22.0

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0959722027182579
    2. 'heap' → logprob: -3.7209722995758057
    3. 'import' → logprob: -4.220972061157227
    4. ',' → logprob: -4.345972061157227
    5. 'for' → logprob: -4.345972061157227
    6. 'q' → logprob: -4.970972061157227
    7. '' → logprob: -5.345972061157227
    8. 'priority' → logprob: -5.720972061157227
    9. 'he' → logprob: -6.095972061157227
    10. '<|end|>' → logprob: -6.345972061157227

Token 78: 'heap' (ID: 38535)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.9402761459350586
    2. 'hq' → logprob: -1.3152761459350586
    3. 'heap' → logprob: -1.4402761459350586
    4. 'q' → logprob: -2.9402761459350586
    5. 'h' → logprob: -3.8152761459350586
    6. 'import' → logprob: -4.190276145935059
    7. 'queue' → logprob: -4.690276145935059
    8. 'for' → logprob: -6.565276145935059
    9. '```' → logprob: -6.565276145935059
    10. 'priority' → logprob: -6.940276145935059

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4271661043167114
    2. '=' → logprob: -1.1771661043167114
    3. '.push' → logprob: -3.927165985107422
    4. '.' → logprob: -4.427165985107422
    5. ')' → logprob: -6.427165985107422
    6. '=[]' → logprob: -6.427165985107422
    7. '[' → logprob: -6.677165985107422
    8. '.append' → logprob: -6.677165985107422
    9. 'q' → logprob: -7.302165985107422
    10. ',' → logprob: -7.927165985107422

Token 80: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004286265466362238
    2. ' [(' → logprob: -5.504286289215088
    3. '[]' → logprob: -8.50428581237793
    4. ' []' → logprob: -12.37928581237793
    5. '[' → logprob: -13.87928581237793
    6. '([(' → logprob: -17.00428581237793
    7. '[((' → logprob: -17.75428581237793
    8. '[]}' → logprob: -17.87928581237793
    9. ' ' → logprob: -18.75428581237793
    10. '[](' → logprob: -19.62928581237793

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '(' → logprob: -15.250004768371582
    4. 'dist' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.5000057220459
    6. ')' → logprob: -20.0000057220459
    7. '  ' → logprob: -21.2500057220459
    8. '(dist' → logprob: -21.3750057220459
    9. '```' → logprob: -21.3750057220459
    10. '۰' → logprob: -21.5000057220459

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -13.875000953674316
    3. '0' → logprob: -16.000001907348633
    4. ',
' → logprob: -18.875001907348633
    5. '```' → logprob: -19.125001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '，' → logprob: -19.750001907348633
    8. '‌,' → logprob: -19.875001907348633
    9. ',int' → logprob: -20.375001907348633
    10. '،' → logprob: -20.375001907348633

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -20.500335693359375
    4. ')' → logprob: -21.125335693359375
    5. '```' → logprob: -21.875335693359375
    6. '  ' → logprob: -22.062835693359375
    7. '<|end|>' → logprob: -22.250335693359375
    8. '   ' → logprob: -22.250335693359375
    9. '０' → logprob: -22.312835693359375
    10. '1' → logprob: -22.625335693359375

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '00' → logprob: -22.125
    4. '۰' → logprob: -22.625
    5. '０' → logprob: -24.125
    6. ')' → logprob: -24.25
    7. '   ' → logprob: -24.375
    8. '```' → logprob: -24.375
    9. '1' → logprob: -24.5
    10. '  ' → logprob: -25.5625

Token 85: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.048611097037792206
    2. ')' → logprob: -3.0486111640930176
    3. '))' → logprob: -11.29861068725586
    4. ')])' → logprob: -12.17361068725586
    5. '),' → logprob: -13.17361068725586
    6. ' )' → logprob: -13.29861068725586
    7. ')]
' → logprob: -14.04861068725586
    8. ']' → logprob: -14.29861068725586
    9. ')
' → logprob: -14.54861068725586
    10. ')}' → logprob: -15.17361068725586

Token 86: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052442774176597595
    2. 'while' → logprob: -3.052442789077759
    3. ' while' → logprob: -5.80244255065918
    4. '   ' → logprob: -8.42744255065918
    5. ' ' → logprob: -9.05244255065918
    6. ',' → logprob: -9.05244255065918
    7. '```' → logprob: -9.17744255065918
    8. ':' → logprob: -9.80244255065918
    9. ']' → logprob: -9.80244255065918
    10. '):' → logprob: -9.92744255065918

Token 87: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.2519512474536896
    2. 'heap' → logprob: -1.5019512176513672
    3. '(heap' → logprob: -10.876951217651367
    4. ' len' → logprob: -13.251951217651367
    5. '.heap' → logprob: -14.126951217651367
    6. 'he' → logprob: -15.376951217651367
    7. 'len' → logprob: -15.501951217651367
    8. ' ' → logprob: -15.876951217651367
    9. ' he' → logprob: -16.501951217651367
    10. 'Heap' → logprob: -16.876951217651367

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013893934374209493
    2. '):' → logprob: -9.125139236450195
    3. '>:' → logprob: -11.250139236450195
    4. ',' → logprob: -12.125139236450195
    5. ':**' → logprob: -12.625139236450195
    6. '[' → logprob: -12.875139236450195
    7. ':not' → logprob: -13.875139236450195
    8. ' and' → logprob: -14.000139236450195
    9. '():' → logprob: -14.500139236450195
    10. '.pop' → logprob: -14.500139236450195

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6766606569290161
    2. ',' → logprob: -1.0516606569290161
    3. ')' → logprob: -2.0516605377197266
    4. ' ,' → logprob: -4.926660537719727
    5. ' )' → logprob: -6.051660537719727
    6. '):' → logprob: -6.801660537719727
    7. 'he' → logprob: -7.301660537719727
    8. '    
' → logprob: -7.926660537719727
    9. ':' → logprob: -8.051660537719727
    10. ' (' → logprob: -8.176660537719727

Token 90: ' current' (ID: 2208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3353925347328186
    2. 'cost' → logprob: -2.085392475128174
    3. '   ' → logprob: -2.210392475128174
    4. ' d' → logprob: -4.335392475128174
    5. 'dist' → logprob: -4.335392475128174
    6. 'c' → logprob: -5.210392475128174
    7. ',' → logprob: -5.460392475128174
    8. '_,' → logprob: -5.710392475128174
    9. ' cost' → logprob: -6.085392475128174
    10. '```' → logprob: -6.585392475128174

Token 91: ' =' (ID: 314)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03253844007849693
    2. 'dist' → logprob: -4.282538414001465
    3. '_distance' → logprob: -4.532538414001465
    4. '_cost' → logprob: -5.157538414001465
    5. '_' → logprob: -7.407538414001465
    6. '_time' → logprob: -7.532538414001465
    7. '_weight' → logprob: -8.532538414001465
    8. '_d' → logprob: -9.657538414001465
    9. 'Dist' → logprob: -9.782538414001465
    10. ')' → logprob: -10.157538414001465

Token 92: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.007959115318953991
    2. ' he' → logprob: -5.632958889007568
    3. 'dist' → logprob: -6.257958889007568
    4. '0' → logprob: -7.007958889007568
    5. 'heap' → logprob: -7.632958889007568
    6. '_he' → logprob: -8.382959365844727
    7. 'cost' → logprob: -8.507959365844727
    8. ')' → logprob: -9.257959365844727
    9. ',' → logprob: -9.507959365844727
    10. 'distance' → logprob: -10.007959365844727

Token 93: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.04870080202817917
    2. 'ap' → logprob: -3.0487008094787598
    3. '   ' → logprob: -10.673700332641602
    4. '```' → logprob: -10.673700332641602
    5. 'a' → logprob: -11.173700332641602
    6. ' app' → logprob: -11.673700332641602
    7. 'ап' → logprob: -11.798700332641602
    8. '  ' → logprob: -11.923700332641602
    9. ' ' → logprob: -12.048700332641602
    10. '[' → logprob: -13.173700332641602

Token 94: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0005825805710628629
    2. 'o' → logprob: -7.500582695007324
    3. 'pop' → logprob: -11.750582695007324
    4. '   ' → logprob: -12.625582695007324
    5. 'p' → logprob: -12.875582695007324
    6. 'ap' → logprob: -13.125582695007324
    7. '	op' → logprob: -13.125582695007324
    8. '  ' → logprob: -13.375582695007324
    9. 'оп' → logprob: -13.500582695007324
    10. ' ' → logprob: -13.500582695007324

Token 95: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.011055837385356426
    2. '(' → logprob: -4.511055946350098
    3. 'heap' → logprob: -12.011055946350098
    4. '(
' → logprob: -14.511055946350098
    5. ')' → logprob: -14.636055946350098
    6. ' heap' → logprob: -15.386055946350098
    7. ' (' → logprob: -15.511055946350098
    8. '(

' → logprob: -16.26105499267578
    9. '(h' → logprob: -16.38605499267578
    10. '(stack' → logprob: -16.51105499267578

Token 96: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071860686875879765
    2. '[' → logprob: -5.632185935974121
    3. ')[' → logprob: -5.882185935974121
    4. ',' → logprob: -7.382185935974121
    5. ')
' → logprob: -9.257185935974121
    6. ' )' → logprob: -10.132185935974121
    7. '   ' → logprob: -11.757185935974121
    8. '()' → logprob: -12.132185935974121
    9. ')`' → logprob: -12.632185935974121
    10. '),' → logprob: -13.007185935974121

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.750066757202148
    3. '0' → logprob: -11.750066757202148
    4. '   ' → logprob: -15.375066757202148
    5. '-' → logprob: -16.50006675720215
    6. '```' → logprob: -17.00006675720215
    7. '
' → logprob: -17.31256675720215
    8. ' -' → logprob: -17.75006675720215
    9. ' ' → logprob: -18.31256675720215
    10. '    ' → logprob: -18.43756675720215

Token 98: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003149438416585326
    2. ',' → logprob: -6.253149509429932
    3. ']' → logprob: -7.503149509429932
    4. '<|end|>' → logprob: -7.878149509429932
    5. ' )' → logprob: -8.378149032592773
    6. ')
' → logprob: -10.878149032592773
    7. ' ' → logprob: -11.503149032592773
    8. ')]' → logprob: -12.253149032592773
    9. '<|end|>' → logprob: -12.378149032592773
    10. ',)' → logprob: -12.378149032592773

Token 99: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2215730845928192
    2. 'for' (adapté à ' for') → logprob: -1.8465731143951416
    3. '   ' → logprob: -4.2215728759765625
    4. ' if' → logprob: -4.7215728759765625
    5. ':' → logprob: -5.2215728759765625
    6. 'if' → logprob: -5.8465728759765625
    7. ' ' → logprob: -6.0965728759765625
    8. ',' → logprob: -6.0965728759765625
    9. ')' → logprob: -6.8465728759765625
    10. '    
' → logprob: -7.2215728759765625

Token 101: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8468764424324036
    2. ' v' → logprob: -1.5968763828277588
    3. 'to' → logprob: -1.5968763828277588
    4. 'w' → logprob: -2.846876382827759
    5. 'neighbor' → logprob: -3.096876382827759
    6. ' to' → logprob: -4.096876621246338
    7. ' w' → logprob: -4.221876621246338
    8. 'cost' → logprob: -4.971876621246338
    9. ' neighbor' → logprob: -5.471876621246338
    10. 't' → logprob: -5.596876621246338

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002153378736693412
    2. ',w' → logprob: -8.750215530395508
    3. ',v' → logprob: -10.875215530395508
    4. ',d' → logprob: -11.000215530395508
    5. ' ,' → logprob: -11.625215530395508
    6. ',u' → logprob: -12.375215530395508
    7. ',c' → logprob: -13.125215530395508
    8. 'w' → logprob: -13.375215530395508
    9. ',next' → logprob: -14.750215530395508
    10. ',node' → logprob: -14.750215530395508

Token 103: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.031790196895599365
    2. 'c' → logprob: -3.781790256500244
    3. 'cost' → logprob: -5.156790256500244
    4. 'd' → logprob: -6.781790256500244
    5. ' w' → logprob: -6.781790256500244
    6. 'l' → logprob: -8.406789779663086
    7. 'weight' → logprob: -9.406789779663086
    8. '   ' → logprob: -9.781789779663086
    9. ' c' → logprob: -10.281789779663086
    10. ' ' → logprob: -10.906789779663086

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47419506311416626
    2. 'in' → logprob: -0.9741950631141663
    3. ',' → logprob: -9.97419548034668
    4. ' ' → logprob: -10.47419548034668
    5. ')' → logprob: -10.59919548034668
    6. 's' → logprob: -12.72419548034668
    7. 'n' → logprob: -12.72419548034668
    8. 'v' → logprob: -12.72419548034668
    9. '	in' → logprob: -12.84919548034668
    10. '  ' → logprob: -13.72419548034668

Token 105: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.5231286287307739
    2. 'g' → logprob: -0.8981286287307739
    3. ' ' → logprob: -12.898128509521484
    4. '	g' → logprob: -13.898128509521484
    5. '(g' → logprob: -14.273128509521484
    6. 's' → logprob: -15.273128509521484
    7. '    ' → logprob: -15.648128509521484
    8. '<|end|>' → logprob: -16.273128509521484
    9. ' ' → logprob: -16.398128509521484
    10. '_g' → logprob: -16.398128509521484

Token 106: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.0219828002154827e-05
    2. 'current' → logprob: -11.250020027160645
    3. '[' → logprob: -12.000020027160645
    4. '[cur' → logprob: -14.125020027160645
    5. ' [' → logprob: -16.50002098083496
    6. '[curr' → logprob: -16.87502098083496
    7. ' current' → logprob: -17.12502098083496
    8. '[c' → logprob: -18.12502098083496
    9. '[now' → logprob: -18.37502098083496
    10. '```' → logprob: -18.62502098083496

Token 107: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04409446567296982
    2. ']:' → logprob: -3.1690945625305176
    3. ':' → logprob: -7.294094562530518
    4. ')' → logprob: -8.91909408569336
    5. '):
' → logprob: -8.91909408569336
    6. ' ):' → logprob: -9.54409408569336
    7. ']' → logprob: -10.54409408569336
    8. '   ' → logprob: -10.91909408569336
    9. ']):' → logprob: -11.41909408569336
    10. '}:' → logprob: -12.54409408569336

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.508082926273346
    2. '   ' → logprob: -1.3830828666687012
    3. '<|end|>' → logprob: -2.383082866668701
    4. ':' → logprob: -3.508082866668701
    5. ')' → logprob: -4.508082866668701
    6. ' if' → logprob: -5.883082866668701
    7. '):' → logprob: -6.008082866668701
    8. ' ' → logprob: -6.258082866668701
    9. '    ' → logprob: -6.258082866668701
    10. '):
' → logprob: -6.758082866668701

Token 109: ' new' (ID: 620)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6106635928153992
    2. ' if' → logprob: -1.610663652420044
    3. '<|end|>' → logprob: -1.985663652420044
    4. '           ' → logprob: -3.110663652420044
    5. '       ' → logprob: -3.485663652420044
    6. 'if' → logprob: -3.860663652420044
    7. '        ' → logprob: -4.360663414001465
    8. ' 
' → logprob: -6.360663414001465
    9. '            ' → logprob: -6.610663414001465
    10. '<|end|>' → logprob: -6.610663414001465

Token 110: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.11360747367143631
    2. 'dist' → logprob: -2.863607406616211
    3. '_cost' → logprob: -3.863607406616211
    4. '_distance' → logprob: -4.363607406616211
    5. '_' → logprob: -4.738607406616211
    6. '_d' → logprob: -5.488607406616211
    7. 'd' → logprob: -6.238607406616211
    8. 'Dist' → logprob: -6.988607406616211
    9. 'cost' → logprob: -8.613607406616211
    10. ' ' → logprob: -8.738607406616211

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0336565300822258
    2. '=' → logprob: -3.408656597137451
    3. ' ' → logprob: -12.658656120300293
    4. ')' → logprob: -12.908656120300293
    5. '<|end|>' → logprob: -13.033656120300293
    6. ',' → logprob: -14.158656120300293
    7. '  ' → logprob: -14.658656120300293
    8. ' =
' → logprob: -15.033656120300293
    9. '>' → logprob: -15.283656120300293
    10. '[' → logprob: -15.283656120300293

Token 112: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.14269065856933594
    2. 'dist' → logprob: -2.017690658569336
    3. '	dist' → logprob: -12.142690658569336
    4. ' ' → logprob: -12.767690658569336
    5. '   ' → logprob: -13.267690658569336
    6. '(dist' → logprob: -13.517690658569336
    7. '    ' → logprob: -13.892690658569336
    8. ' current' → logprob: -14.392690658569336
    9. 'd' → logprob: -14.392690658569336
    10. 'Dist' → logprob: -14.767690658569336

Token 113: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00018577903392724693
    2. 'current' → logprob: -8.6251859664917
    3. '[' → logprob: -12.6251859664917
    4. '[cur' → logprob: -13.8751859664917
    5. ' current' → logprob: -14.2501859664917
    6. ' ' → logprob: -15.3751859664917
    7. ' [' → logprob: -15.6251859664917
    8. '[curr' → logprob: -15.7501859664917
    9. '[v' → logprob: -16.000185012817383
    10. 'urrent' → logprob: -16.375185012817383

Token 114: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16175192594528198
    2. '+' → logprob: -1.9117519855499268
    3. '+c' → logprob: -7.286751747131348
    4. ']' → logprob: -7.411751747131348
    5. ']+' → logprob: -8.786751747131348
    6. ')' → logprob: -10.161751747131348
    7. ' ]' → logprob: -11.411751747131348
    8. ')+' → logprob: -11.661751747131348
    9. ' ' → logprob: -11.661751747131348
    10. '   ' → logprob: -13.161751747131348

Token 115: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2838769555091858
    2. '+' → logprob: -1.408876895904541
    3. '+c' → logprob: -5.908876895904541
    4. '<|end|>' → logprob: -12.5338773727417
    5. '+C' → logprob: -14.1588773727417
    6. ')' → logprob: -14.7838773727417
    7. ' ' → logprob: -15.1588773727417
    8. ' ' → logprob: -15.1588773727417
    9. '+k' → logprob: -15.1588773727417
    10. '[' → logprob: -15.2838773727417

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.126929372549057
    2. ' c' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.75192928314209
    4. '	c' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.50192928314209
    6. ')c' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.251930236816406
    8. '    ' → logprob: -17.001930236816406
    9. 'int' → logprob: -17.501930236816406
    10. '$c' → logprob: -17.876930236816406

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0818581581115723
    2. '<|end|>' → logprob: -1.0818581581115723
    3. '       ' → logprob: -1.2068581581115723
    4. ' 
' → logprob: -4.956858158111572
    5. ' if' → logprob: -5.581858158111572
    6. '<|end|>' → logprob: -6.081858158111572
    7. 'if' → logprob: -6.331858158111572
    8. '  
' → logprob: -6.581858158111572
    9. '           ' → logprob: -6.956858158111572
    10. ';if' → logprob: -7.081858158111572

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050314877182245255
    2. '<|end|>' → logprob: -3.1753149032592773
    3. '
' → logprob: -5.425314903259277
    4. ' 
' → logprob: -6.800314903259277
    5. ')' → logprob: -7.925314903259277
    6. ' if' → logprob: -8.300314903259277
    7. '<|end|>' → logprob: -8.425314903259277
    8. '        
' → logprob: -8.425314903259277
    9. '  
' → logprob: -8.675314903259277
    10. ' ' → logprob: -9.300314903259277

Token 119: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4352276027202606
    2. 'if' (adapté à ' if') → logprob: -1.060227632522583
    3. ' ' → logprob: -5.810227394104004
    4. ' 
' → logprob: -6.310227394104004
    5. '       ' → logprob: -7.310227394104004
    6. '<|end|>' → logprob: -8.310227394104004
    7. '        ' → logprob: -9.060227394104004
    8. '           ' → logprob: -9.185227394104004
    9. '
' → logprob: -9.560227394104004
    10. '        
' → logprob: -9.685227394104004

Token 120: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20396381616592407
    2. 'new' → logprob: -1.7039637565612793
    3. ' dist' → logprob: -6.203963756561279
    4. 'dist' → logprob: -7.578963756561279
    5. ' ' → logprob: -12.203964233398438
    6. '   ' → logprob: -12.578964233398438
    7. ' ' → logprob: -12.828964233398438
    8. '	new' → logprob: -13.203964233398438
    9. '```' → logprob: -14.453964233398438
    10. '  ' → logprob: -14.953964233398438

Token 121: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.008841464295983315
    2. 'dist' → logprob: -4.758841514587402
    3. '[v' → logprob: -9.508841514587402
    4. 'Dist' → logprob: -10.133841514587402
    5. 'ist' → logprob: -10.633841514587402
    6. '	dist' → logprob: -10.758841514587402
    7. ')' → logprob: -11.508841514587402
    8. ' dist' → logprob: -12.008841514587402
    9. 'v' → logprob: -12.258841514587402
    10. ']' → logprob: -12.633841514587402

Token 122: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020563960075378418
    2. '<' → logprob: -3.895564079284668
    3. ' ' → logprob: -11.895564079284668
    4. ' ' → logprob: -12.270564079284668
    5. '<|end|>' → logprob: -12.395564079284668
    6. '<int' → logprob: -13.520564079284668
    7. '<v' → logprob: -13.770564079284668
    8. '<n' → logprob: -14.395564079284668
    9. ' <",' → logprob: -14.645564079284668
    10. '[' → logprob: -15.145564079284668

Token 123: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018150877207517624
    2. ' dist' → logprob: -4.018150806427002
    3. '	dist' → logprob: -14.01815128326416
    4. '(dist' → logprob: -16.268150329589844
    5. '_dist' → logprob: -17.893150329589844
    6. '
' → logprob: -18.018150329589844
    7. '.dist' → logprob: -18.643150329589844
    8. '   ' → logprob: -18.768150329589844
    9. ' ' → logprob: -19.143150329589844
    10. 'Dist' → logprob: -19.768150329589844

Token 124: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.339278580620885e-06
    2. 'v' → logprob: -13.000001907348633
    3. '[' → logprob: -18.000001907348633
    4. '	v' → logprob: -19.750001907348633
    5. '<v' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '[u' → logprob: -20.875001907348633
    8. '(v' → logprob: -21.125001907348633
    9. ' v' → logprob: -21.250001907348633
    10. '[int' → logprob: -21.625001907348633

Token 125: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1272716075181961
    2. ']:
' → logprob: -2.1272716522216797
    3. ']' → logprob: -8.75227165222168
    4. ']:
' → logprob: -9.62727165222168
    5. ':' → logprob: -9.75227165222168
    6. ':
' → logprob: -10.87727165222168
    7. '):
' → logprob: -11.25227165222168
    8. '):' → logprob: -11.62727165222168
    9. '[' → logprob: -11.87727165222168
    10. '   ' → logprob: -12.62727165222168

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017845372203737497
    2. ':' → logprob: -6.876784324645996
    3. ' dist' → logprob: -8.876784324645996
    4. '       ' → logprob: -9.001784324645996
    5. ':
' → logprob: -9.126784324645996
    6. '            ' → logprob: -9.626784324645996
    7. '               ' → logprob: -10.001784324645996
    8. '):
' → logprob: -10.001784324645996
    9. '            
' → logprob: -10.126784324645996
    10. '          ' → logprob: -10.376784324645996

Token 127: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.03811252489686012
    2. 'dist' (adapté à ' dist') → logprob: -3.2881126403808594
    3. '_dist' → logprob: -11.03811264038086
    4. ' ' → logprob: -11.16311264038086
    5. '	dist' → logprob: -11.16311264038086
    6. '           ' → logprob: -11.53811264038086
    7. ' 
' → logprob: -11.78811264038086
    8. '               ' → logprob: -12.78811264038086
    9. '            ' → logprob: -13.28811264038086
    10. '(dist' → logprob: -13.91311264038086

Token 128: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.625005722045898
    3. 'v' → logprob: -13.125005722045898
    4. '[val' → logprob: -18.7500057220459
    5. '	v' → logprob: -18.8750057220459
    6. '[
' → logprob: -19.5000057220459
    7. '=v' → logprob: -19.5000057220459
    8. '<v' → logprob: -19.6250057220459
    9. '[u' → logprob: -20.1250057220459
    10. '(v' → logprob: -20.1250057220459

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020890454470645636
    2. ']=' → logprob: -8.625208854675293
    3. '=' → logprob: -10.625208854675293
    4. ' =' → logprob: -13.000208854675293
    5. ')' → logprob: -13.750208854675293
    6. ' ]' → logprob: -14.125208854675293
    7. '[' → logprob: -14.500208854675293
    8. '']' → logprob: -16.25020980834961
    9. '"]' → logprob: -16.62520980834961
    10. '])' → logprob: -17.00020980834961

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023336350917816
    2. '=' → logprob: -1.9102333784103394
    3. ']' → logprob: -12.160233497619629
    4. '[' → logprob: -13.535233497619629
    5. ',' → logprob: -13.910233497619629
    6. ')' → logprob: -14.785233497619629
    7. '.=' → logprob: -14.785233497619629
    8. ' =
' → logprob: -15.160233497619629
    9. ']=' → logprob: -15.535233497619629
    10. ' ' → logprob: -16.410232543945312

Token 131: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.03804149478673935
    2. 'new' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.288042068481445
    4. '	new' → logprob: -17.788042068481445
    5. '_new' → logprob: -17.913042068481445
    6. '[new' → logprob: -19.038042068481445
    7. '(new' → logprob: -19.163042068481445
    8. '新' → logprob: -19.163042068481445
    9. ')new' → logprob: -19.288042068481445
    10. '$new' → logprob: -20.413042068481445

Token 132: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0009307525469921529
    2. 'dist' → logprob: -7.0009307861328125
    3. 'ist' → logprob: -11.625930786132812
    4. 'w' → logprob: -12.250930786132812
    5. '_' → logprob: -13.625930786132812
    6. '_cost' → logprob: -13.625930786132812
    7. 'ew' → logprob: -14.250930786132812
    8. ' dist' → logprob: -14.500930786132812
    9. '	dist' → logprob: -15.250930786132812
    10. '.dist' → logprob: -15.375930786132812

Token 133: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022984324023127556
    2. ' he' → logprob: -4.022984504699707
    3. 'he' → logprob: -5.397984504699707
    4. '            
' → logprob: -8.522984504699707
    5. '            ' → logprob: -10.147984504699707
    6. '          ' → logprob: -11.022984504699707
    7. ',' → logprob: -11.147984504699707
    8. '[' → logprob: -11.897984504699707
    9. '		' → logprob: -12.272984504699707
    10. '           
' → logprob: -12.647984504699707

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05873529613018036
    2. ' he' → logprob: -3.3087353706359863
    3. 'he' → logprob: -3.9337353706359863
    4. '            
' → logprob: -7.433735370635986
    5. '            ' → logprob: -8.433734893798828
    6. '          ' → logprob: -10.433734893798828
    7. ')' → logprob: -11.058734893798828
    8. ',' → logprob: -11.558734893798828
    9. '               ' → logprob: -12.308734893798828
    10. '		' → logprob: -12.308734893798828

Token 135: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -9.014684110297821e-06
    2. ' he' → logprob: -11.625008583068848
    3. 'heap' → logprob: -17.125009536743164
    4. '   ' → logprob: -17.750009536743164
    5. '           ' → logprob: -20.625009536743164
    6. ' ' → logprob: -21.125009536743164
    7. '            
' → logprob: -21.250009536743164
    8. '  ' → logprob: -21.750009536743164
    9. '    ' → logprob: -22.000009536743164
    10. 'He' → logprob: -22.125009536743164

Token 136: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.3856492842023727e-06
    2. 'ap' → logprob: -13.625000953674316
    3. ' app' → logprob: -16.500001907348633
    4. 'pp' → logprob: -17.625001907348633
    5. 'ап' → logprob: -19.000001907348633
    6. 'a' → logprob: -19.750001907348633
    7. 'append' → logprob: -19.750001907348633
    8. 'App' → logprob: -19.750001907348633
    9. '```' → logprob: -19.750001907348633
    10. '	app' → logprob: -20.125001907348633

Token 137: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.143808109802194e-05
    2. 'push' → logprob: -10.250041007995605
    3. 'op' → logprob: -12.375041007995605
    4. 'sh' → logprob: -14.000041007995605
    5. '   ' → logprob: -14.625041007995605
    6. 'app' → logprob: -15.875041007995605
    7. '```' → logprob: -16.000041961669922
    8. 'p' → logprob: -16.250041961669922
    9. 'Push' → logprob: -16.625041961669922
    10. '.push' → logprob: -17.625041961669922

Token 138: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. 'heap' → logprob: -17.0
    4. ' (' → logprob: -18.5
    5. '(queue' → logprob: -18.875
    6. ' heap' → logprob: -19.25
    7. '(
' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. '.heap' → logprob: -20.25
    10. '(hero' → logprob: -21.0

Token 139: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.00012987985974177718
    2. ',' → logprob: -9.000129699707031
    3. '(' → logprob: -12.250129699707031
    4. ' (' → logprob: -14.250129699707031
    5. ',(' → logprob: -15.125129699707031
    6. 'heap' → logprob: -15.500129699707031
    7. ')' → logprob: -15.500129699707031
    8. '((' → logprob: -16.75012969970703
    9. ' heap' → logprob: -16.87512969970703
    10. ' ,' → logprob: -17.12512969970703

Token 140: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.06551269441843033
    2. ' (' → logprob: -2.8155126571655273
    3. '(' → logprob: -5.815512657165527
    4. '(current' → logprob: -7.565512657165527
    5. '(dist' → logprob: -10.940512657165527
    6. '(c' → logprob: -11.815512657165527
    7. '(next' → logprob: -13.065512657165527
    8. '(v' → logprob: -13.315512657165527
    9. '(distance' → logprob: -13.315512657165527
    10. '(cost' → logprob: -13.315512657165527

Token 141: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0008688253001309931
    2. 'dist' → logprob: -7.625868797302246
    3. ' new' → logprob: -7.875868797302246
    4. ' dist' → logprob: -14.125868797302246
    5. '
' → logprob: -16.625869750976562
    6. '_new' → logprob: -17.500869750976562
    7. '(new' → logprob: -17.625869750976562
    8. '   ' → logprob: -17.750869750976562
    9. '	new' → logprob: -18.250869750976562
    10. ')new' → logprob: -18.375869750976562

Token 142: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.01816023886203766
    2. 'dist' → logprob: -4.018160343170166
    3. ' dist' → logprob: -12.018159866333008
    4. '	dist' → logprob: -13.643159866333008
    5. 'v' → logprob: -13.893159866333008
    6. 'w' → logprob: -14.143159866333008
    7. 'Dist' → logprob: -15.268159866333008
    8. '_distance' → logprob: -15.393159866333008
    9. '.dist' → logprob: -15.643159866333008
    10. 'new' → logprob: -15.643159866333008

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ',v' → logprob: -10.000054359436035
    3. ' ,' → logprob: -11.750054359436035
    4. 'v' → logprob: -14.875054359436035
    5. ')' → logprob: -15.750054359436035
    6. ',
' → logprob: -17.00005340576172
    7. '‌,' → logprob: -17.25005340576172
    8. '),' → logprob: -17.62505340576172
    9. ' v' → logprob: -17.75005340576172
    10. '[' → logprob: -18.62505340576172

Token 144: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. ')v' → logprob: -17.001171112060547
    4. '	v' → logprob: -18.626171112060547
    5. '   ' → logprob: -20.376171112060547
    6. 'vq' → logprob: -21.001171112060547
    7. '_v' → logprob: -21.251171112060547
    8. ')' → logprob: -21.251171112060547
    9. '$v' → logprob: -21.626171112060547
    10. '[v' → logprob: -22.001171112060547

Token 145: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02976194955408573
    2. ')' → logprob: -3.529762029647827
    3. '))
' → logprob: -11.654762268066406
    4. ')))' → logprob: -13.279762268066406
    5. ')
' → logprob: -14.029762268066406
    6. ' ))' → logprob: -15.529762268066406
    7. '),' → logprob: -18.154762268066406
    8. ')}' → logprob: -18.279762268066406
    9. ' )' → logprob: -18.279762268066406
    10. '   ' → logprob: -18.404762268066406

Token 146: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1809333562850952
    2. '<|end|>' → logprob: -1.3059333562850952
    3. ')' → logprob: -1.4309333562850952
    4. ' ' → logprob: -2.8059334754943848
    5. '#' → logprob: -2.9309334754943848
    6. '```' → logprob: -4.180933475494385
    7. '.' → logprob: -4.555933475494385
    8. '\n' → logprob: -5.055933475494385
    9. ' 
' → logprob: -5.430933475494385
    10. 'd' → logprob: -5.430933475494385

Token 147: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06521889567375183
    2. ' d' → logprob: -3.065218925476074
    3. 'i' → logprob: -4.190218925476074
    4. ' i' → logprob: -6.690218925476074
    5. 'x' → logprob: -9.315218925476074
    6. 'v' → logprob: -11.940218925476074
    7. ' x' → logprob: -12.815218925476074
    8. '_d' → logprob: -13.065218925476074
    9. ' ' → logprob: -13.690218925476074
    10. '_' → logprob: -13.815218925476074

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03455541282892227
    2. 'in' → logprob: -3.409555435180664
    3. ',' → logprob: -7.159555435180664
    4. ' ' → logprob: -9.284555435180664
    5. 'n' → logprob: -10.784555435180664
    6. 'range' → logprob: -12.034555435180664
    7. ' ,' → logprob: -12.409555435180664
    8. ' i' → logprob: -12.659555435180664
    9. ' range' → logprob: -13.659555435180664
    10. '  ' → logprob: -13.909555435180664

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010662743588909507
    2. ' range' → logprob: -7.126066207885742
    3. 'dist' → logprob: -8.251066207885742
    4. ' ' → logprob: -15.751066207885742
    5. ' dist' → logprob: -16.001066207885742
    6. 'rang' → logprob: -16.001066207885742
    7. '(range' → logprob: -16.251066207885742
    8. '   ' → logprob: -16.501066207885742
    9. 'distance' → logprob: -16.626066207885742
    10. '  ' → logprob: -16.626066207885742

Token 150: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6940334439277649
    2. '(n' → logprob: -0.6940334439277649
    3. 'n' → logprob: -7.069033622741699
    4. '1' → logprob: -10.3190336227417
    5. '(len' → logprob: -14.3190336227417
    6. ' n' → logprob: -14.3190336227417
    7. ' (' → logprob: -14.5690336227417
    8. '(
' → logprob: -16.194032669067383
    9. ',n' → logprob: -17.819032669067383
    10. ')n' → logprob: -18.069032669067383

Token 151: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06246079504489899
    2. '):' → logprob: -2.8124608993530273
    3. '):
' → logprob: -7.687460899353027
    4. ',' → logprob: -11.562460899353027
    5. '+' → logprob: -11.937460899353027
    6. ' )' → logprob: -12.437460899353027
    7. ')
' → logprob: -12.562460899353027
    8. ':' → logprob: -12.562460899353027
    9. '),' → logprob: -13.562460899353027
    10. '):
' → logprob: -14.187460899353027

Token 152: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5968668460845947
    2. '   ' → logprob: -1.0968668460845947
    3. 'print' → logprob: -2.2218668460845947
    4. ' if' → logprob: -4.971866607666016
    5. 'if' → logprob: -8.596866607666016
    6. '```' → logprob: -11.471866607666016
    7. '	print' → logprob: -11.721866607666016
    8. '    ' → logprob: -12.971866607666016
    9. '.print' → logprob: -13.721866607666016
    10. '       ' → logprob: -13.846866607666016

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02701066993176937
    2. 'if' → logprob: -3.652010679244995
    3. ' print' → logprob: -8.027010917663574
    4. ' if' → logprob: -8.152010917663574
    5. '   ' → logprob: -9.277010917663574
    6. 'pr' → logprob: -14.527010917663574
    7. '    
' → logprob: -15.027010917663574
    8. '```' → logprob: -15.402010917663574
    9. 'printf' → logprob: -15.527010917663574
    10. '  ' → logprob: -16.152009963989258

Token 154: '(i' (ID: 3649)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0006288022268563509
    2. 'dist' → logprob: -7.50062894821167
    3. '(' → logprob: -9.500628471374512
    4. '(d' → logprob: -15.750628471374512
    5. '(distance' → logprob: -15.875628471374512
    6. '()' → logprob: -16.000629425048828
    7. ' dist' → logprob: -16.125629425048828
    8. '(int' → logprob: -16.125629425048828
    9. '(
' → logprob: -16.625629425048828
    10. '(f' → logprob: -16.750629425048828

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019412329129409045
    2. ')' → logprob: -9.000194549560547
    3. ' ,' → logprob: -10.125194549560547
    4. ',end' → logprob: -11.000194549560547
    5. ',)' → logprob: -12.250194549560547
    6. ',
' → logprob: -13.125194549560547
    7. ',len' → logprob: -13.250194549560547
    8. ',",' → logprob: -13.750194549560547
    9. ',d' → logprob: -14.000194549560547
    10. ',int' → logprob: -14.125194549560547

Token 156: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009099025279283524
    2. ' dist' → logprob: -4.759099006652832
    3. ''' → logprob: -8.509099006652832
    4. '"' → logprob: -8.634099006652832
    5. '''' → logprob: -9.884099006652832
    6. '""' → logprob: -10.384099006652832
    7. '(dist' → logprob: -11.384099006652832
    8. ' '' → logprob: -12.759099006652832
    9. 'end' → logprob: -13.259099006652832
    10. ' "' → logprob: -13.634099006652832

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024512779782526195
    2. '[' → logprob: -8.375245094299316
    3. ')' → logprob: -12.500245094299316
    4. '[
' → logprob: -12.625245094299316
    5. ']' → logprob: -12.875245094299316
    6. '])' → logprob: -13.125245094299316
    7. ')[' → logprob: -13.750245094299316
    8. '[n' → logprob: -14.250245094299316
    9. '][' → logprob: -14.375245094299316
    10. '```' → logprob: -16.375246047973633

Token 158: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '))' → logprob: -12.75000286102295
    3. ')`' → logprob: -15.50000286102295
    4. ' )' → logprob: -16.500003814697266
    5. ')")' → logprob: -16.750003814697266
    6. '})' → logprob: -17.250003814697266
    7. '')' → logprob: -17.500003814697266
    8. '`)' → logprob: -17.625003814697266
    9. ')
' → logprob: -18.750003814697266
    10. '])' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 156
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 50.64%
Précision adaptée (1ère position): 52.56%
Précision (top 10): 83.97%
================================================================================
