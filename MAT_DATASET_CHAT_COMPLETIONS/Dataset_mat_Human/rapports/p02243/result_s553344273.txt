================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq

INFINITY = 10 ** 10
WHITE = 0
GRAY = 1
BLACK = 2

n = int(input())
dict_adjacency = {}

for _ in range(n):
    u, k, *list_num = map(int, input().split())

    list_temp = []

    dict_adjacency[str(u)] = {}

    for i in range(0, k * 2, 2):
        dict_adjacency[str(u)][str(list_num[i])] = list_num[i + 1]

d = [INFINITY] * n

def dijkstra(top_start):
    color = [WHITE] * n

    d[top_start] = 0
    h = []

    heapq.heappush(h, (d[top_start], top_start))

    while len(h) >= 1:
        cost_now, top_now = heapq.heappop(h)

        color[top_now] = BLACK

        if d[top_now] < cost_now:
            continue

        for top_next in dict_adjacency[str(top_now)].keys():
            top_next = int(top_next)
            if color[top_next] == BLACK:
                continue

            cost_next = d[top_now] + dict_adjacency[str(top_now)][str(top_next)]
            if cost_next < d[top_next]:
                d[top_next] = cost_next
                color[top_next] = GRAY
                heapq.heappush(h, (d[top_next], top_next))

dijkstra(top_start = 0)

for i, cost in enumerate(d):
    print(i, cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'IN' (ID: 965)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00024965754710137844
    2. '\' → logprob: -9.625249862670898
    3. '(' → logprob: -10.125249862670898
    4. '```' → logprob: -10.500249862670898
    5. '.\' → logprob: -11.250249862670898
    6. '.
' → logprob: -11.375249862670898
    7. '[' → logprob: -11.375249862670898
    8. '.heap' → logprob: -11.750249862670898
    9. '<|end|>' → logprob: -11.875249862670898
    10. 'import' → logprob: -11.875249862670898

Token 5: 'FINITY' (ID: 113276)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.046171195805072784
    2. 'T' → logprob: -4.421171188354492
    3. 'IT' → logprob: -4.421171188354492
    4. 'S' → logprob: -5.171171188354492
    5. 'I' → logprob: -5.171171188354492
    6. '_' → logprob: -5.296171188354492
    7. '```' → logprob: -6.296171188354492
    8. ' =' → logprob: -7.421171188354492
    9. '=' → logprob: -8.171171188354492
    10. '   ' → logprob: -8.546171188354492

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022352317348122597
    2. '=' → logprob: -3.8973522186279297
    3. '_' → logprob: -6.39735221862793
    4. ' ' → logprob: -9.27235221862793
    5. ')' → logprob: -10.77235221862793
    6. ',' → logprob: -11.39735221862793
    7. ' _' → logprob: -12.39735221862793
    8. ' =
' → logprob: -12.89735221862793
    9. '.' → logprob: -13.52235221862793
    10. '_=' → logprob: -13.77235221862793

Token 7: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.10028602927923203
    2. 'float' → logprob: -2.3502860069274902
    3. ' ' → logprob: -9.850286483764648
    4. '=float' → logprob: -11.350286483764648
    5. '(float' → logprob: -12.100286483764648
    6. '10' → logprob: -12.975286483764648
    7. ' inf' → logprob: -13.225286483764648
    8. '	float' → logprob: -13.225286483764648
    9. 'inf' → logprob: -13.850286483764648
    10. '1' → logprob: -14.475286483764648

Token 8: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001929228543303907
    2. ' float' → logprob: -6.25192928314209
    3. '10' → logprob: -15.25192928314209
    4. '	float' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.501928329467773
    6. '999' → logprob: -16.626928329467773
    7. '   ' → logprob: -16.626928329467773
    8. '1' → logprob: -17.001928329467773
    9. '(float' → logprob: -17.001928329467773
    10. 'flo' → logprob: -17.751928329467773

Token 9: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015194887295365334
    2. '00' → logprob: -4.265194892883301
    3. '000' → logprob: -7.515194892883301
    4. '**' → logprob: -7.640194892883301
    5. '```' → logprob: -13.3901948928833
    6. '6' → logprob: -13.6401948928833
    7. ' **' → logprob: -14.0151948928833
    8. '^' → logprob: -14.8901948928833
    9. '``' → logprob: -15.3901948928833
    10. '24' → logprob: -15.3901948928833

Token 10: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00017410075815860182
    2. '12' → logprob: -9.625174522399902
    3. '18' → logprob: -9.875174522399902
    4. '10' → logprob: -10.250174522399902
    5. '15' → logprob: -11.250174522399902
    6. '100' → logprob: -12.750174522399902
    7. '99' → logprob: -12.750174522399902
    8. '20' → logprob: -13.875174522399902
    9. '6' → logprob: -14.125174522399902
    10. '7' → logprob: -15.750174522399902

Token 11: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0035930639132857323
    2. '12' → logprob: -6.2535929679870605
    3. '10' → logprob: -6.7535929679870605
    4. '18' → logprob: -8.128593444824219
    5. '6' → logprob: -9.003593444824219
    6. '15' → logprob: -9.878593444824219
    7. '7' → logprob: -11.503593444824219
    8. '8' → logprob: -11.503593444824219
    9. '20' → logprob: -12.378593444824219
    10. '100' → logprob: -14.003593444824219

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10131455212831497
    2. '
' → logprob: -3.4763145446777344
    3. '

' → logprob: -3.7263145446777344
    4. '' → logprob: -3.8513145446777344
    5. '\n' → logprob: -4.601314544677734
    6. '\' → logprob: -5.101314544677734
    7. ' 
' → logprob: -7.226314544677734
    8. '```' → logprob: -7.601314544677734
    9. ',' → logprob: -7.726314544677734
    10. 'newline' → logprob: -7.851314544677734

Token 13: 'WHITE' (ID: 104380)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16834187507629395
    2. '

' → logprob: -2.668341875076294
    3. 'def' → logprob: -3.293341875076294
    4. '
' → logprob: -3.918341875076294
    5. '' → logprob: -4.793341636657715
    6. '\' → logprob: -5.168341636657715
    7. '#' → logprob: -5.793341636657715
    8. 'class' → logprob: -5.793341636657715
    9. '\n' → logprob: -6.043341636657715
    10. ' 

' → logprob: -6.918341636657715

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036525758914649487
    2. '=' → logprob: -5.753652572631836
    3. ',' → logprob: -8.128652572631836
    4. '_' → logprob: -9.503652572631836
    5. ' ' → logprob: -10.128652572631836
    6. '  ' → logprob: -10.753652572631836
    7. '_SPACE' → logprob: -10.878652572631836
    8. '```' → logprob: -11.878652572631836
    9. ')' → logprob: -12.378652572631836
    10. '   ' → logprob: -13.003652572631836

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38755229115486145
    2. '0' → logprob: -1.137552261352539
    3. ''' → logprob: -7.387552261352539
    4. ' '' → logprob: -9.887552261352539
    5. '"' → logprob: -12.012552261352539
    6. '-' → logprob: -13.137552261352539
    7. '  ' → logprob: -14.012552261352539
    8. '1' → logprob: -14.387552261352539
    9. ''s' → logprob: -14.637552261352539
    10. ' "' → logprob: -14.887552261352539

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002319071936653927
    2. ''' → logprob: -8.500231742858887
    3. '"' → logprob: -11.125231742858887
    4. '-' → logprob: -12.000231742858887
    5. ' ' → logprob: -12.125231742858887
    6. '1' → logprob: -14.250231742858887
    7. ''\' → logprob: -15.000231742858887
    8. ''s' → logprob: -15.125231742858887
    9. ''h' → logprob: -16.375232696533203
    10. ''a' → logprob: -16.375232696533203

Token 17: '
' (ID: 198)
  Prédit: 'GRAY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GRAY' → logprob: -0.18661372363567352
    2. 'BLACK' → logprob: -1.81161367893219
    3. 'RED' → logprob: -5.5616135597229
    4. '
' → logprob: -6.8116135597229
    5. 'GRE' → logprob: -7.1866135597229
    6. ',' → logprob: -8.186614036560059
    7. 'BLUE' → logprob: -8.436614036560059
    8. 'Y' → logprob: -9.061614036560059
    9. '_GRAY' → logprob: -9.436614036560059
    10. 'GREEN' → logprob: -9.561614036560059

Token 18: 'GRAY' (ID: 140884)
  Prédit: 'GRAY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GRAY' → logprob: -0.01998758129775524
    2. 'GRE' → logprob: -4.3949875831604
    3. ' GR' → logprob: -5.3949875831604
    4. 'GR' → logprob: -6.5199875831604
    5. 'BLACK' → logprob: -6.8949875831604
    6. ' GRE' → logprob: -7.8949875831604
    7. ' BLACK' → logprob: -10.644987106323242
    8. 'G' → logprob: -12.144987106323242
    9. '_GRAY' → logprob: -12.644987106323242
    10. '.GRAY' → logprob: -12.644987106323242

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02087538316845894
    2. '=' → logprob: -3.8958754539489746
    3. ' ' → logprob: -8.020874977111816
    4. ',' → logprob: -13.270874977111816
    5. '<|end|>' → logprob: -13.395874977111816
    6. ' =
' → logprob: -14.895874977111816
    7. '0' → logprob: -15.270874977111816
    8. ' ,' → logprob: -15.270874977111816
    9. ')' → logprob: -15.395874977111816
    10. ' ' → logprob: -16.020875930786133

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811517119407654
    2. '1' → logprob: -1.4061517715454102
    3. ' ' → logprob: -15.09365177154541
    4. '  ' → logprob: -15.40615177154541
    5. '	' → logprob: -15.90615177154541
    6. ' =' → logprob: -16.093650817871094
    7. '   ' → logprob: -16.218650817871094
    8. '' → logprob: -16.531150817871094
    9. '<|end|>' → logprob: -16.593650817871094
    10. ' -' → logprob: -16.718650817871094

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003202550346031785
    2. ' ' → logprob: -5.753202438354492
    3. '127' → logprob: -11.128202438354492
    4. '128' → logprob: -11.628202438354492
    5. '  ' → logprob: -14.628202438354492
    6. '100' → logprob: -15.753202438354492
    7. '-' → logprob: -16.003202438354492
    8. '   ' → logprob: -16.003202438354492
    9. '2' → logprob: -16.628202438354492
    10. '10' → logprob: -16.878202438354492

Token 22: '
' (ID: 198)
  Prédit: 'BLACK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLACK' → logprob: -0.0363755002617836
    2. '
' → logprob: -4.036375522613525
    3. 'RED' → logprob: -4.036375522613525
    4. ' BLACK' → logprob: -8.536375045776367
    5. 'GRAY' → logprob: -9.161375045776367
    6. 'WHITE' → logprob: -11.036375045776367
    7. 'Y' → logprob: -11.161375045776367
    8. 'D' → logprob: -11.536375045776367
    9. '
' → logprob: -11.661375045776367
    10. 'BLUE' → logprob: -11.911375045776367

Token 23: 'BLACK' (ID: 120338)
  Prédit: 'BLACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLACK' → logprob: -0.0009138475870713592
    2. ' BLACK' → logprob: -7.000913619995117
    3. '_BLACK' → logprob: -13.750913619995117
    4. 'Black' → logprob: -14.500913619995117
    5. '.BLACK' → logprob: -15.125913619995117
    6. ' black' → logprob: -15.250913619995117
    7. 'RED' → logprob: -15.875913619995117
    8. ' Black' → logprob: -16.750913619995117
    9. 'GRAY' → logprob: -17.000913619995117
    10. '```' → logprob: -17.250913619995117

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12783467769622803
    2. '=' → logprob: -2.2528347969055176
    3. '<|end|>' → logprob: -4.252834796905518
    4. ' ' → logprob: -8.12783432006836
    5. '0' → logprob: -9.12783432006836
    6. '<|end|>' → logprob: -9.62783432006836
    7. '2' → logprob: -10.00283432006836
    8. ' =
' → logprob: -10.12783432006836
    9. '=
' → logprob: -10.12783432006836
    10. '```' → logprob: -10.12783432006836

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759400129318237
    2. ' ' → logprob: -0.8259400129318237
    3. ' ' → logprob: -15.950940132141113
    4. '  ' → logprob: -15.950940132141113
    5. '```' → logprob: -16.825939178466797
    6. '255' → logprob: -17.200939178466797
    7. '   ' → logprob: -17.200939178466797
    8. '۲' → logprob: -17.825939178466797
    9. '0' → logprob: -17.888439178466797
    10. '-' → logprob: -18.075939178466797

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.50023078918457
    4. '  ' → logprob: -16.62523078918457
    5. '```' → logprob: -18.37523078918457
    6. '２' → logprob: -18.87523078918457
    7. '-' → logprob: -19.00023078918457
    8. '۲' → logprob: -19.12523078918457
    9. '255' → logprob: -19.75023078918457
    10. '	' → logprob: -20.25023078918457

Token 27: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.48831960558891296
    2. '
' → logprob: -0.9883196353912354
    3. 'def' → logprob: -4.488319396972656
    4. '
' → logprob: -6.488319396972656
    5. 'class' → logprob: -7.488319396972656
    6. '' → logprob: -8.363319396972656
    7. 'n' → logprob: -8.863319396972656
    8. ' 

' → logprob: -9.113319396972656
    9. 'd' → logprob: -9.238319396972656
    10. '#' → logprob: -10.238319396972656

Token 28: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0388353131711483
    2. 'class' → logprob: -3.288835287094116
    3. '
' → logprob: -7.663835525512695
    4. '```' → logprob: -8.663835525512695
    5. '

' → logprob: -9.913835525512695
    6. 'd' → logprob: -10.288835525512695
    7. 'dist' → logprob: -11.163835525512695
    8. 'distance' → logprob: -11.288835525512695
    9. '\' → logprob: -11.538835525512695
    10. 'de' → logprob: -11.788835525512695

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4883069097995758
    2. 'odes' → logprob: -1.6133068799972534
    3. 'e' → logprob: -2.613306999206543
    4. '_' → logprob: -2.863306999206543
    5. '_nodes' → logprob: -3.613306999206543
    6. ',' → logprob: -4.488306999206543
    7. '=' → logprob: -5.113306999206543
    8. 'ode' → logprob: -5.738306999206543
    9. ' ' → logprob: -6.113306999206543
    10. 'o' → logprob: -7.113306999206543

Token 30: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10610347986221313
    2. ' int' → logprob: -2.4811034202575684
    3. '0' → logprob: -4.231103420257568
    4. 'int' → logprob: -6.106103420257568
    5. '10' → logprob: -9.106103897094727
    6. '5' → logprob: -9.856103897094727
    7. '[int' → logprob: -10.981103897094727
    8. ' len' → logprob: -11.106103897094727
    9. '1' → logprob: -11.606103897094727
    10. ' input' → logprob: -11.856103897094727

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010196933522820473
    2. '(input' → logprob: -4.760197162628174
    3. '()' → logprob: -6.885197162628174
    4. '(n' → logprob: -7.760197162628174
    5. '('' → logprob: -10.010196685791016
    6. 'input' → logprob: -10.510196685791016
    7. '(
' → logprob: -11.510196685791016
    8. '<|end|>' → logprob: -11.510196685791016
    9. '(`' → logprob: -12.135196685791016
    10. '(

' → logprob: -12.385196685791016

Token 32: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16591086983680725
    2. '(' → logprob: -2.5409109592437744
    3. ')' → logprob: -3.0409109592437744
    4. '())' → logprob: -3.6659109592437744
    5. '(
' → logprob: -7.915910720825195
    6. '('' → logprob: -8.915910720825195
    7. '(

' → logprob: -10.040910720825195
    8. '(()' → logprob: -10.540910720825195
    9. '(`' → logprob: -10.790910720825195
    10. '()
' → logprob: -11.165910720825195

Token 33: 'dict' (ID: 20993)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10108314454555511
    2. 'colors' → logprob: -3.7260830402374268
    3. 'dist' → logprob: -4.101083278656006
    4. ' graph' → logprob: -4.101083278656006
    5. '
' → logprob: -4.601083278656006
    6. 'vertices' → logprob: -4.976083278656006
    7. 'edges' → logprob: -5.101083278656006
    8. ' 
' → logprob: -5.601083278656006
    9. 'nodes' → logprob: -6.351083278656006
    10. 'color' → logprob: -6.601083278656006

Token 34: '_ad' (ID: 23782)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8037137389183044
    2. '_nodes' → logprob: -0.8037137389183044
    3. 's' → logprob: -3.178713798522949
    4. '_vertices' → logprob: -3.678713798522949
    5. '_edges' → logprob: -5.053713798522949
    6. '_input' → logprob: -5.428713798522949
    7. ' =' → logprob: -6.053713798522949
    8. '_neighbors' → logprob: -6.053713798522949
    9. '_graph' → logprob: -6.178713798522949
    10. '_data' → logprob: -6.678713798522949

Token 35: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00028183520771563053
    2. 'jac' → logprob: -8.250282287597656
    3. 'jc' → logprob: -12.125282287597656
    4. ' j' → logprob: -12.250282287597656
    5. '	j' → logprob: -12.375282287597656
    6. '[j' → logprob: -13.125282287597656
    7. 'js' → logprob: -13.750282287597656
    8. '_j' → logprob: -14.375282287597656
    9. 'jec' → logprob: -14.875282287597656
    10. 'ј' → logprob: -15.000282287597656

Token 36: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0010838981252163649
    2. '```' → logprob: -8.126084327697754
    3. 'ent' → logprob: -8.626084327697754
    4. 'y' → logprob: -8.876084327697754
    5. 'encies' → logprob: -9.501084327697754
    6. 'cy' → logprob: -9.751084327697754
    7. 'ence' → logprob: -10.126084327697754
    8. 'enc' → logprob: -10.501084327697754
    9. '   ' → logprob: -10.501084327697754
    10. '[' → logprob: -10.751084327697754

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38480934500694275
    2. '=' → logprob: -1.8848093748092651
    3. '_list' → logprob: -1.8848093748092651
    4. '_' → logprob: -5.134809494018555
    5. '_lists' → logprob: -5.634809494018555
    6. '[' → logprob: -6.134809494018555
    7. 's' → logprob: -6.259809494018555
    8. ' ' → logprob: -6.884809494018555
    9. 'List' → logprob: -7.134809494018555
    10. 'list' → logprob: -9.384809494018555

Token 38: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0004957250785082579
    2. 'default' → logprob: -8.125495910644531
    3. 'dict' → logprob: -9.125495910644531
    4. '{' → logprob: -10.000495910644531
    5. ' {}' → logprob: -10.125495910644531
    6. '[]' → logprob: -13.000495910644531
    7. '[' → logprob: -13.375495910644531
    8. '{})' → logprob: -14.500495910644531
    9. '={}' → logprob: -15.125495910644531
    10. ' defaultdict' → logprob: -15.750495910644531

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038407891406677663
    2. ' for' → logprob: -7.8753838539123535
    3. 'f' → logprob: -13.500384330749512
    4. 'graph' → logprob: -14.500384330749512
    5. 'colors' → logprob: -15.000384330749512
    6. '```' → logprob: -15.250384330749512
    7. 'color' → logprob: -15.375384330749512
    8. '
' → logprob: -15.625384330749512
    9. '<|end|>' → logprob: -15.625384330749512
    10. 'n' → logprob: -15.625384330749512

Token 40: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.9199814200401306
    2. ' ' → logprob: -1.1699814796447754
    3. ' i' → logprob: -1.2949814796447754
    4. '_' → logprob: -4.919981479644775
    5. ' node' → logprob: -5.169981479644775
    6. ' v' → logprob: -5.919981479644775
    7. ' u' → logprob: -7.294981479644775
    8. ' vertex' → logprob: -7.419981479644775
    9. 'i' → logprob: -8.919981002807617
    10. '  ' → logprob: -11.169981002807617

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01522518415004015
    2. 'in' → logprob: -4.640225410461426
    3. ' ' → logprob: -5.390225410461426
    4. 'n' → logprob: -8.015225410461426
    5. ' i' → logprob: -8.390225410461426
    6. 'i' → logprob: -8.640225410461426
    7. 'import' → logprob: -10.390225410461426
    8. '  ' → logprob: -10.390225410461426
    9. ' n' → logprob: -11.265225410461426
    10. '```' → logprob: -11.640225410461426

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015106932260096073
    2. ' range' → logprob: -6.5015106201171875
    3. '(range' → logprob: -12.251510620117188
    4. ')' → logprob: -13.626510620117188
    5. 'rang' → logprob: -14.626510620117188
    6. '	range' → logprob: -14.876510620117188
    7. 'ran' → logprob: -15.251510620117188
    8. 'n' → logprob: -15.376510620117188
    9. 'input' → logprob: -15.626510620117188
    10. 'r' → logprob: -15.876510620117188

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011083188466727734
    2. '(' → logprob: -4.511083126068115
    3. ' (' → logprob: -10.886083602905273
    4. '(range' → logprob: -11.511083602905273
    5. ' n' → logprob: -12.761083602905273
    6. 'n' → logprob: -12.761083602905273
    7. '(
' → logprob: -15.011083602905273
    8. '()' → logprob: -15.761083602905273
    9. '(int' → logprob: -16.136083602905273
    10. ' ' → logprob: -16.386083602905273

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002736997092142701
    2. ' ):' → logprob: -6.252737045288086
    3. ')' → logprob: -7.752737045288086
    4. '+' → logprob: -8.377737045288086
    5. '):
' → logprob: -9.377737045288086
    6. ':' → logprob: -10.752737045288086
    7. ',' → logprob: -11.002737045288086
    8. ' +' → logprob: -12.127737045288086
    9. '*' → logprob: -12.377737045288086
    10. '():' → logprob: -12.502737045288086

Token 45: '   ' (ID: 271)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8177260160446167
    2. ' line' → logprob: -0.9427260160446167
    3. '   ' → logprob: -2.6927261352539062
    4. ' city' → logprob: -3.3177261352539062
    5. ' u' → logprob: -3.5677261352539062
    6. ' nodes' → logprob: -4.692726135253906
    7. ' parts' → logprob: -5.067726135253906
    8. ' s' → logprob: -5.567726135253906
    9. 'node' → logprob: -5.942726135253906
    10. ' edges' → logprob: -6.817726135253906

Token 46: ' u' (ID: 337)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7331549525260925
    2. ' u' → logprob: -1.4831550121307373
    3. 'u' (adapté à ' u') → logprob: -2.3581550121307373
    4. ' node' → logprob: -2.6081550121307373
    5. 'line' → logprob: -2.7331550121307373
    6. 'node' → logprob: -3.9831550121307373
    7. 'v' → logprob: -4.608154773712158
    8. ' vertex' → logprob: -5.233154773712158
    9. ' v' → logprob: -5.483154773712158
    10. ' city' → logprob: -5.733154773712158

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027951950207352638
    2. ',v' → logprob: -3.902951955795288
    3. ' ,' → logprob: -5.402951717376709
    4. ' =' → logprob: -6.152951717376709
    5. '=' → logprob: -8.277952194213867
    6. ' ' → logprob: -9.777952194213867
    7. ',s' → logprob: -10.027952194213867
    8. ',n' → logprob: -10.277952194213867
    9. 'v' → logprob: -10.402952194213867
    10. ',input' → logprob: -10.402952194213867

Token 48: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013391701504588127
    2. ' v' → logprob: -6.751338958740234
    3. '=' → logprob: -9.501338958740234
    4. ',v' → logprob: -10.876338958740234
    5. ' =' → logprob: -11.126338958740234
    6. '*v' → logprob: -11.251338958740234
    7. ' ' → logprob: -11.376338958740234
    8. '=v' → logprob: -11.751338958740234
    9. '  ' → logprob: -12.001338958740234
    10. '*' → logprob: -12.001338958740234

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7031334042549133
    2. ' =' → logprob: -0.8281334042549133
    3. '=' → logprob: -2.7031333446502686
    4. ' ,' → logprob: -7.078133583068848
    5. ' ' → logprob: -8.703133583068848
    6. '   ' → logprob: -10.078133583068848
    7. '    ' → logprob: -10.703133583068848
    8. '  ' → logprob: -11.203133583068848
    9. 'u' → logprob: -12.703133583068848
    10. '```' → logprob: -13.078133583068848

Token 50: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7684887647628784
    2. '*v' → logprob: -1.0184887647628784
    3. ' *' → logprob: -2.143488883972168
    4. ' =' → logprob: -4.393488883972168
    5. '*k' → logprob: -4.393488883972168
    6. '=' → logprob: -4.643488883972168
    7. '*u' → logprob: -5.143488883972168
    8. '*w' → logprob: -5.518488883972168
    9. 'v' → logprob: -5.768488883972168
    10. '*l' → logprob: -6.143488883972168

Token 51: 'list' (ID: 2641)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6337211728096008
    2. 'vs' → logprob: -1.008721113204956
    3. 'rest' → logprob: -3.508721113204956
    4. 'neighbors' → logprob: -4.133721351623535
    5. 'edges' → logprob: -4.258721351623535
    6. 'vl' → logprob: -4.383721351623535
    7. 'vk' → logprob: -4.508721351623535
    8. 'data' → logprob: -5.633721351623535
    9. 'adj' → logprob: -5.758721351623535
    10. 'items' → logprob: -6.258721351623535

Token 52: '_num' (ID: 9834)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8839806318283081
    2. '_v' → logprob: -1.008980631828308
    3. '_neighbors' → logprob: -2.5089807510375977
    4. '_' → logprob: -3.0089807510375977
    5. 'v' → logprob: -3.5089807510375977
    6. '_of' → logprob: -3.6339807510375977
    7. '_nodes' → logprob: -4.508980751037598
    8. '_adj' → logprob: -5.008980751037598
    9. '_vertices' → logprob: -5.133980751037598
    10. 'a' → logprob: -6.258980751037598

Token 53: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023603221401572227
    2. 'bers' → logprob: -3.8986032009124756
    3. 'ber' → logprob: -6.523603439331055
    4. '_neighbors' → logprob: -6.898603439331055
    5. '=' → logprob: -8.648603439331055
    6. ' =' → logprob: -9.023603439331055
    7. 'neighbors' → logprob: -9.773603439331055
    8. '_nodes' → logprob: -10.023603439331055
    9. '_list' → logprob: -10.023603439331055
    10. 'be' → logprob: -10.648603439331055

Token 54: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20152083039283752
    2. 'map' → logprob: -1.7015208005905151
    3. ' list' → logprob: -10.201520919799805
    4. '(map' → logprob: -10.701520919799805
    5. 'list' → logprob: -11.201520919799805
    6. ' ' → logprob: -11.576520919799805
    7. '   ' → logprob: -12.201520919799805
    8. '[' → logprob: -12.201520919799805
    9. 'input' → logprob: -12.451520919799805
    10. '	map' → logprob: -12.451520919799805

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002678920282050967
    2. '(' → logprob: -8.25026798248291
    3. 'int' → logprob: -12.75026798248291
    4. '<int' → logprob: -13.37526798248291
    5. '[int' → logprob: -14.37526798248291
    6. '=int' → logprob: -14.62526798248291
    7. '(
' → logprob: -14.87526798248291
    8. '(str' → logprob: -15.00026798248291
    9. '(input' → logprob: -15.62526798248291
    10. '(in' → logprob: -16.625267028808594

Token 56: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4742092490196228
    2. ',' → logprob: -0.9742092490196228
    3. '(input' → logprob: -9.84920883178711
    4. ',int' → logprob: -9.97420883178711
    5. 'input' → logprob: -11.22420883178711
    6. ' ,' → logprob: -12.09920883178711
    7. ')' → logprob: -12.09920883178711
    8. '(' → logprob: -13.72420883178711
    9. ',(' → logprob: -13.72420883178711
    10. ' input' → logprob: -13.72420883178711

Token 57: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04860009253025055
    2. ' input' → logprob: -3.048600196838379
    3. ')' → logprob: -12.423600196838379
    4. ',input' → logprob: -12.798600196838379
    5. ' ' → logprob: -13.423600196838379
    6. '[input' → logprob: -13.673600196838379
    7. '   ' → logprob: -13.923600196838379
    8. '=input' → logprob: -14.173600196838379
    9. 'list' → logprob: -14.173600196838379
    10. '_input' → logprob: -15.423600196838379

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023095356300473213
    2. ')' → logprob: -8.87523078918457
    3. '()' → logprob: -9.50023078918457
    4. '.' → logprob: -12.12523078918457
    5. '.readline' → logprob: -12.50023078918457
    6. ' ().' → logprob: -12.75023078918457
    7. ' .' → logprob: -13.87523078918457
    8. ' ' → logprob: -14.37523078918457
    9. '.split' → logprob: -14.37523078918457
    10. ').' → logprob: -14.37523078918457

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.2576454335358e-05
    2. 'strip' → logprob: -9.625092506408691
    3. ')' → logprob: -11.375092506408691
    4. ' split' → logprob: -12.125092506408691
    5. 'rstrip' → logprob: -12.250092506408691
    6. 'spl' → logprob: -13.250092506408691
    7. 'sp' → logprob: -13.875092506408691
    8. '(split' → logprob: -14.125092506408691
    9. 's' → logprob: -14.500092506408691
    10. '().' → logprob: -15.250092506408691

Token 60: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4830707907676697
    2. ')' → logprob: -0.9830707907676697
    3. '()' → logprob: -4.7330708503723145
    4. '())
' → logprob: -9.608070373535156
    5. '(' → logprob: -10.108070373535156
    6. '))' → logprob: -11.358070373535156
    7. ' )' → logprob: -11.858070373535156
    8. ')
' → logprob: -11.983070373535156
    9. '`)' → logprob: -12.483070373535156
    10. ' ())' → logprob: -12.483070373535156

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03936873376369476
    2. 'dict' → logprob: -3.6643686294555664
    3. '
' → logprob: -5.539368629455566
    4. '<|end|>' → logprob: -6.039368629455566
    5. ')' → logprob: -6.164368629455566
    6. ' for' → logprob: -6.414368629455566
    7. ' ' → logprob: -7.164368629455566
    8. 'for' → logprob: -7.414368629455566
    9. ' dict' → logprob: -7.539368629455566
    10. '    
' → logprob: -8.164368629455566

Token 62: ' list' (ID: 1562)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.016050441190600395
    2. ' dict' → logprob: -4.516050338745117
    3. '   ' → logprob: -5.516050338745117
    4. 'if' → logprob: -8.141050338745117
    5. 'for' → logprob: -8.266050338745117
    6. ' for' → logprob: -8.391050338745117
    7. ' if' → logprob: -9.016050338745117
    8. '```' → logprob: -10.391050338745117
    9. 'list' (adapté à ' list') → logprob: -11.641050338745117
    10. '
' → logprob: -11.641050338745117

Token 63: '_temp' (ID: 27535)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.08941932767629623
    2. '_ad' → logprob: -2.464419364929199
    3. '_' → logprob: -8.4644193649292
    4. '_adj' → logprob: -8.9644193649292
    5. 'num' → logprob: -9.4644193649292
    6. '_number' → logprob: -11.0894193649292
    7. '_nums' → logprob: -11.0894193649292
    8. '_numbers' → logprob: -12.0894193649292
    9. '_of' → logprob: -12.4644193649292
    10. '_d' → logprob: -13.5894193649292

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030089467763900757
    2. '=' → logprob: -3.5300893783569336
    3. 's' → logprob: -9.155089378356934
    4. '[:]' → logprob: -9.780089378356934
    5. '=[]' → logprob: -10.030089378356934
    6. ')' → logprob: -10.655089378356934
    7. '_' → logprob: -10.905089378356934
    8. '.extend' → logprob: -10.905089378356934
    9. ' ' → logprob: -11.030089378356934
    10. '[' → logprob: -11.280089378356934

Token 65: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3266148567199707
    2. ' []' → logprob: -1.3266148567199707
    3. 'list' → logprob: -4.826614856719971
    4. '[list' → logprob: -6.701614856719971
    5. 'dict' → logprob: -7.076614856719971
    6. ' list' → logprob: -7.201614856719971
    7. '[(' → logprob: -7.451614856719971
    8. ' [' → logprob: -7.451614856719971
    9. '[' → logprob: -7.826614856719971
    10. ' [(' → logprob: -8.076614379882812

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3537048399448395
    2. ' for' → logprob: -1.978704810142517
    3. 'for' → logprob: -2.1037049293518066
    4. '<|end|>' → logprob: -3.6037049293518066
    5. '	for' → logprob: -4.853704929351807
    6. ' ' → logprob: -6.978704929351807
    7. '\t' → logprob: -7.228704929351807
    8. '<|end|>' → logprob: -7.978704929351807
    9. '
' → logprob: -8.728704452514648
    10. '    
' → logprob: -8.853704452514648

Token 67: ' dict' (ID: 11878)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10054803639650345
    2. '   ' → logprob: -2.475548028945923
    3. ' for' → logprob: -4.475548267364502
    4. '	for' → logprob: -9.225547790527344
    5. ' ' → logprob: -10.350547790527344
    6. '<|end|>' → logprob: -10.850547790527344
    7. '  ' → logprob: -12.350547790527344
    8. '    ' → logprob: -13.850547790527344
    9. '    
' → logprob: -14.600547790527344
    10. '\t' → logprob: -15.350547790527344

Token 68: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.723352049040841e-06
    2. '_adj' → logprob: -12.375004768371582
    3. '_' → logprob: -15.375004768371582
    4. '_add' → logprob: -18.125003814697266
    5. '_a' → logprob: -18.250003814697266
    6. '_temp' → logprob: -18.375003814697266
    7. 'adj' → logprob: -18.375003814697266
    8. '_AD' → logprob: -18.625003814697266
    9. '_adapter' → logprob: -18.750003814697266
    10. '<|end|>' → logprob: -19.125003814697266

Token 69: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.005962930154055357
    2. 'acency' → logprob: -5.13096284866333
    3. 'j' → logprob: -10.755963325500488
    4. ' adjacency' → logprob: -11.380963325500488
    5. 'adj' → logprob: -14.130963325500488
    6. ' jac' → logprob: -15.005963325500488
    7. 'dict' → logprob: -16.130962371826172
    8. 'jc' → logprob: -16.255962371826172
    9. 'Jac' → logprob: -16.255962371826172
    10. '```' → logprob: -16.505962371826172

Token 70: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0004074354947078973
    2. 'acency' → logprob: -8.000407218933105
    3. 'ent' → logprob: -10.500407218933105
    4. 'encv' → logprob: -11.875407218933105
    5. '   ' → logprob: -12.125407218933105
    6. 'ity' → logprob: -12.500407218933105
    7. 'ENCY' → logprob: -12.500407218933105
    8. 't' → logprob: -12.625407218933105
    9. 'en' → logprob: -13.250407218933105
    10. 'acy' → logprob: -13.250407218933105

Token 71: '[str' (ID: 33439)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004082699597347528
    2. '[' → logprob: -7.875408172607422
    3. '.setdefault' → logprob: -10.625408172607422
    4. ' [' → logprob: -13.375408172607422
    5. '\[' → logprob: -15.000408172607422
    6. '```' → logprob: -15.000408172607422
    7. '   ' → logprob: -15.250408172607422
    8. '[user' → logprob: -15.500408172607422
    9. '[s' → logprob: -15.625408172607422
    10. 'u' → logprob: -15.625408172607422

Token 72: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.7697225252486533e-06
    2. 'u' → logprob: -12.625003814697266
    3. '(' → logprob: -15.000003814697266
    4. '[u' → logprob: -16.625003814697266
    5. ')(' → logprob: -17.000003814697266
    6. '	u' → logprob: -17.750003814697266
    7. ')' → logprob: -18.625003814697266
    8. ' u' → logprob: -19.125003814697266
    9. '<u' → logprob: -19.500003814697266
    10. '/u' → logprob: -19.750003814697266

Token 73: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002834707498550415
    2. ']' → logprob: -6.002834796905518
    3. ')' → logprob: -8.87783432006836
    4. '])' → logprob: -9.12783432006836
    5. ')].' → logprob: -9.37783432006836
    6. ']]' → logprob: -12.00283432006836
    7. ')])' → logprob: -12.12783432006836
    8. '')]' → logprob: -12.50283432006836
    9. '])]' → logprob: -12.75283432006836
    10. ']=' → logprob: -13.37783432006836

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048625409603118896
    2. ' =' → logprob: -3.0486254692077637
    3. '.extend' → logprob: -10.423624992370605
    4. '+=' → logprob: -13.048624992370605
    5. '=[]' → logprob: -13.048624992370605
    6. '.=' → logprob: -13.548624992370605
    7. '[:]' → logprob: -14.423624992370605
    8. ' +=' → logprob: -14.548624992370605
    9. ' ' → logprob: -15.423624992370605
    10. '＝' → logprob: -15.548624992370605

Token 75: ' {}

' (ID: 21724)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2491254061460495
    2. '[]' → logprob: -1.624125361442566
    3. '[list' → logprob: -4.8741254806518555
    4. '[(' → logprob: -5.1241254806518555
    5. ' list' → logprob: -5.2491254806518555
    6. '[' → logprob: -5.8741254806518555
    7. ' []' → logprob: -6.4991254806518555
    8. '(list' → logprob: -9.624125480651855
    9. '[[' → logprob: -10.249125480651855
    10. ' [(' → logprob: -10.249125480651855

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949795722961426
    2. 'for' → logprob: -1.4199795722961426
    3. ' for' → logprob: -4.294979572296143
    4. '	for' → logprob: -9.794979095458984
    5. '<|end|>' → logprob: -10.919979095458984
    6. '    
' → logprob: -11.169979095458984
    7. '
' → logprob: -12.669979095458984
    8. ' ' → logprob: -12.794979095458984
    9. '  ' → logprob: -13.419979095458984
    10. '    ' → logprob: -14.669979095458984

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0033857650123536587
    2. '   ' → logprob: -6.003385543823242
    3. ' for' → logprob: -7.003385543823242
    4. '	for' → logprob: -14.628385543823242
    5. ' ' → logprob: -15.503385543823242
    6. '    
' → logprob: -16.253385543823242
    7. '  ' → logprob: -17.128385543823242
    8. '
' → logprob: -17.878385543823242
    9. '```' → logprob: -18.253385543823242
    10. '    ' → logprob: -18.878385543823242

Token 78: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3595532476902008
    2. ' v' → logprob: -1.9845532178878784
    3. 'i' → logprob: -2.234553337097168
    4. 'num' → logprob: -3.859553337097168
    5. ' i' → logprob: -3.984553337097168
    6. ' num' → logprob: -5.859553337097168
    7. 'list' → logprob: -6.484553337097168
    8. 'j' → logprob: -6.484553337097168
    9. 'x' → logprob: -6.609553337097168
    10. '_v' → logprob: -7.109553337097168

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020635083317756653
    2. 'in' → logprob: -3.8956351280212402
    3. ' ' → logprob: -9.895634651184082
    4. ',' → logprob: -10.520634651184082
    5. '  ' → logprob: -12.645634651184082
    6. '   ' → logprob: -12.895634651184082
    7. 'range' → logprob: -12.895634651184082
    8. ' ,' → logprob: -13.895634651184082
    9. '_' → logprob: -13.895634651184082
    10. '_in' → logprob: -14.020634651184082

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1322627067565918
    2. ' range' → logprob: -2.132262706756592
    3. 'list' → logprob: -5.257262706756592
    4. ' list' → logprob: -9.25726318359375
    5. ' ' → logprob: -12.38226318359375
    6. '   ' → logprob: -12.38226318359375
    7. '(range' → logprob: -13.00726318359375
    8. '	range' → logprob: -13.50726318359375
    9. '  ' → logprob: -13.63226318359375
    10. 'rang' → logprob: -14.13226318359375

Token 81: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.009965615347027779
    2. 'k' → logprob: -4.634965419769287
    3. '(' → logprob: -8.759965896606445
    4. '(len' → logprob: -10.009965896606445
    5. '   ' → logprob: -12.759965896606445
    6. ' (' → logprob: -12.884965896606445
    7. 'len' → logprob: -13.634965896606445
    8. ' k' → logprob: -14.759965896606445
    9. '(i' → logprob: -15.509965896606445
    10. '0' → logprob: -15.884965896606445

Token 82: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00037955286097712815
    2. ' k' → logprob: -8.00037956237793
    3. 'len' → logprob: -10.25037956237793
    4. '   ' → logprob: -12.00037956237793
    5. ' ' → logprob: -13.87537956237793
    6. ' len' → logprob: -14.50037956237793
    7. '  ' → logprob: -15.00037956237793
    8. '(k' → logprob: -15.12537956237793
    9. '0' → logprob: -15.25037956237793
    10. '    ' → logprob: -16.12537956237793

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028882723301649094
    2. ',k' → logprob: -3.7788827419281006
    3. 'k' → logprob: -6.1538825035095215
    4. ' k' → logprob: -6.5288825035095215
    5. ' ,' → logprob: -7.0288825035095215
    6. ',len' → logprob: -7.5288825035095215
    7. '   ' → logprob: -8.27888298034668
    8. ' ' → logprob: -8.90388298034668
    9. ')' → logprob: -9.27888298034668
    10. '    ' → logprob: -10.15388298034668

Token 84: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005725182592868805
    2. ' k' → logprob: -5.255725383758545
    3. 'len' → logprob: -7.755725383758545
    4. ' len' → logprob: -9.880724906921387
    5. '   ' → logprob: -12.005724906921387
    6. ' ' → logprob: -12.630724906921387
    7. '  ' → logprob: -13.255724906921387
    8. '	k' → logprob: -15.005724906921387
    9. '    ' → logprob: -15.505724906921387
    10. '(k' → logprob: -17.005725860595703

Token 85: ' *' (ID: 425)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008466233499348164
    2. '):
' → logprob: -5.0084662437438965
    3. ',' → logprob: -7.3834662437438965
    4. ' ):' → logprob: -7.5084662437438965
    5. ')' → logprob: -7.6334662437438965
    6. ':' → logprob: -9.883465766906738
    7. '   ' → logprob: -10.508465766906738
    8. ' ' → logprob: -12.758465766906738
    9. '):
' → logprob: -12.758465766906738
    10. ' ):
' → logprob: -12.883465766906738

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.044790010899305344
    2. ' ' → logprob: -3.169790029525757
    3. '3' → logprob: -6.419789791107178
    4. '1' → logprob: -9.419790267944336
    5. '   ' → logprob: -9.919790267944336
    6. '4' → logprob: -11.919790267944336
    7. '  ' → logprob: -12.169790267944336
    8. ')' → logprob: -12.294790267944336
    9. ',' → logprob: -12.419790267944336
    10. ' ,' → logprob: -12.919790267944336

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00047475993051193655
    2. '3' → logprob: -8.37547492980957
    3. ' ' → logprob: -8.37547492980957
    4. '1' → logprob: -11.50047492980957
    5. '```' → logprob: -14.50047492980957
    6. ')' → logprob: -14.56297492980957
    7. '4' → logprob: -14.68797492980957
    8. '２' → logprob: -14.93797492980957
    9. '   ' → logprob: -15.50047492980957
    10. '۲' → logprob: -15.50047492980957

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008315438753925264
    2. ' ,' → logprob: -7.125831604003906
    3. '2' → logprob: -11.375831604003906
    4. '   ' → logprob: -11.875831604003906
    5. '+' → logprob: -12.125831604003906
    6. '+,' → logprob: -13.500831604003906
    7. ' ' → logprob: -14.625831604003906
    8. ',
' → logprob: -15.125831604003906
    9. '```' → logprob: -15.625831604003906
    10. '    ' → logprob: -15.625831604003906

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02630273625254631
    2. ' ' → logprob: -3.6513028144836426
    3. '   ' → logprob: -13.401302337646484
    4. '  ' → logprob: -15.026302337646484
    5. ' ' → logprob: -15.901302337646484
    6. ')' → logprob: -16.026302337646484
    7. '```' → logprob: -16.276302337646484
    8. '1' → logprob: -16.401302337646484
    9. '    ' → logprob: -16.401302337646484
    10. '+' → logprob: -16.901302337646484

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023298001906368881
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.250232696533203
    4. '  ' → logprob: -15.750232696533203
    5. '1' → logprob: -16.125232696533203
    6. ')' → logprob: -16.625232696533203
    7. '```' → logprob: -16.812732696533203
    8. '۲' → logprob: -16.937732696533203
    9. '    ' → logprob: -17.500232696533203
    10. '２' → logprob: -17.750232696533203

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013337289914488792
    2. '):
' → logprob: -4.638337135314941
    3. ':' → logprob: -5.888337135314941
    4. ')' → logprob: -8.013337135314941
    5. '   ' → logprob: -8.388337135314941
    6. ' ):' → logprob: -8.513337135314941
    7. ',' → logprob: -11.138337135314941
    8. '):
' → logprob: -11.638337135314941
    9. ' ):
' → logprob: -12.263337135314941
    10. ' ' → logprob: -12.638337135314941

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.205505833029747
    2. '   ' → logprob: -2.330505847930908
    3. ':' → logprob: -2.830505847930908
    4. 'dict' → logprob: -5.330505847930908
    5. '<|end|>' → logprob: -5.455505847930908
    6. ' ' → logprob: -5.455505847930908
    7. '):' → logprob: -5.705505847930908
    8. ',' → logprob: -6.205505847930908
    9. '{' → logprob: -6.330505847930908
    10. ')' → logprob: -6.330505847930908

Token 93: ' dict' (ID: 11878)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.37693116068840027
    2. ' v' → logprob: -1.2519311904907227
    3. '       ' → logprob: -4.626931190490723
    4. ' dict' → logprob: -5.001931190490723
    5. 'dict' (adapté à ' dict') → logprob: -5.126931190490723
    6. '   ' → logprob: -6.501931190490723
    7. 'u' → logprob: -7.376931190490723
    8. '    ' → logprob: -7.626931190490723
    9. 'neighbor' → logprob: -7.751931190490723
    10. 'node' → logprob: -8.126931190490723

Token 94: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -9.088346359931165e-07
    2. '_adj' → logprob: -14.625000953674316
    3. '[_' → logprob: -15.750000953674316
    4. '[' → logprob: -16.0
    5. '_a' → logprob: -16.875
    6. '_ac' → logprob: -17.0
    7. '_' → logprob: -17.75
    8. '```' → logprob: -17.75
    9. '_answer' → logprob: -18.5
    10. '._' → logprob: -18.5

Token 95: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.08949475735425949
    2. 'acency' → logprob: -2.4644947052001953
    3. 'adj' → logprob: -8.089494705200195
    4. 'ac' → logprob: -8.839494705200195
    5. 'j' → logprob: -9.839494705200195
    6. ' adjacency' → logprob: -10.339494705200195
    7. 'dict' → logprob: -11.589494705200195
    8. '[str' → logprob: -13.589494705200195
    9. '```' → logprob: -13.714494705200195
    10. 'dic' → logprob: -14.089494705200195

Token 96: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.633229672908783
    2. 'acency' → logprob: -0.758229672908783
    3. 'ancy' → logprob: -8.50822925567627
    4. 'acy' → logprob: -8.88322925567627
    5. 'ac' → logprob: -9.13322925567627
    6. 'dict' → logprob: -9.75822925567627
    7. 'acity' → logprob: -10.63322925567627
    8. '   ' → logprob: -11.25822925567627
    9. 'cy' → logprob: -11.75822925567627
    10. '_dict' → logprob: -12.00822925567627

Token 97: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -12.125011444091797
    3. '[f' → logprob: -12.500011444091797
    4. '[s' → logprob: -13.625011444091797
    5. 'str' → logprob: -13.875011444091797
    6. ' [' → logprob: -16.000011444091797
    7. '['' → logprob: -17.250011444091797
    8. '   ' → logprob: -18.000011444091797
    9. '```' → logprob: -18.125011444091797
    10. '.setdefault' → logprob: -18.625011444091797

Token 98: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.001674110535532236
    2. 'u' → logprob: -6.501674175262451
    3. '(list' → logprob: -9.251673698425293
    4. 'list' → logprob: -10.251673698425293
    5. '_u' → logprob: -11.126673698425293
    6. '[u' → logprob: -11.376673698425293
    7. '_list' → logprob: -13.001673698425293
    8. ')' → logprob: -13.126673698425293
    9. '(' → logprob: -13.251673698425293
    10. '	u' → logprob: -13.876673698425293

Token 99: ')][' (ID: 112886)
  Prédit: ')]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.002398009179159999
    2. '][' → logprob: -6.6273980140686035
    3. ')' → logprob: -7.2523980140686035
    4. '[str' → logprob: -8.502397537231445
    5. ')[' → logprob: -9.752397537231445
    6. '])[' → logprob: -10.127397537231445
    7. ']][' → logprob: -10.752397537231445
    8. ']' → logprob: -11.002397537231445
    9. ')]' → logprob: -11.127397537231445
    10. '[' → logprob: -12.127397537231445

Token 100: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6326732039451599
    2. 'list' → logprob: -0.7576732039451599
    3. ' str' → logprob: -10.382673263549805
    4. ' list' → logprob: -10.632673263549805
    5. '   ' → logprob: -12.132673263549805
    6. '(str' → logprob: -12.632673263549805
    7. 'int' → logprob: -12.882673263549805
    8. '[str' → logprob: -13.757673263549805
    9. 'string' → logprob: -13.882673263549805
    10. 'f' → logprob: -14.257673263549805

Token 101: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -12.000007629394531
    3. '(num' → logprob: -13.875007629394531
    4. 'list' → logprob: -15.500007629394531
    5. '=list' → logprob: -15.625007629394531
    6. '(lst' → logprob: -16.25000762939453
    7. '(lista' → logprob: -16.50000762939453
    8. '((' → logprob: -16.75000762939453
    9. '[list' → logprob: -17.12500762939453
    10. '(i' → logprob: -17.37500762939453

Token 102: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.27099974633893e-05
    2. '_temp' → logprob: -12.125012397766113
    3. 'num' → logprob: -12.375012397766113
    4. '[num' → logprob: -13.500012397766113
    5. '[' → logprob: -14.875012397766113
    6. '```' → logprob: -15.125012397766113
    7. '[i' → logprob: -15.500012397766113
    8. '_number' → logprob: -16.37501335144043
    9. ')' → logprob: -16.37501335144043
    10. '[_' → logprob: -16.37501335144043

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '[' → logprob: -16.75
    4. '[
' → logprob: -17.375
    5. 'i' → logprob: -18.375
    6. ')' → logprob: -18.375
    7. ')[' → logprob: -18.875
    8. ' [' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '   ' → logprob: -19.25

Token 104: '])]' (ID: 178925)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001625429606065154
    2. ' )' → logprob: -7.2516255378723145
    3. '])]' → logprob: -7.7516255378723145
    4. ']' → logprob: -8.501625061035156
    5. ')' → logprob: -9.001625061035156
    6. '])' → logprob: -9.376625061035156
    7. '   ' → logprob: -10.251625061035156
    8. ')])' → logprob: -11.001625061035156
    9. '')]' → logprob: -12.376625061035156
    10. '    ' → logprob: -12.751625061035156

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231408476829529
    2. ' =' → logprob: -0.8981408476829529
    3. ',' → logprob: -11.648140907287598
    4. '=int' → logprob: -12.773140907287598
    5. ' ' → logprob: -13.773140907287598
    6. ')' → logprob: -14.023140907287598
    7. ']=' → logprob: -14.023140907287598
    8. ']' → logprob: -14.023140907287598
    9. ')=' → logprob: -15.148140907287598
    10. '=list' → logprob: -15.148140907287598

Token 106: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006230709608644247
    2. ' list' → logprob: -5.13123083114624
    3. 'int' → logprob: -8.131230354309082
    4. ' int' → logprob: -13.131230354309082
    5. '(list' → logprob: -13.131230354309082
    6. 'dict' → logprob: -13.756230354309082
    7. ' ' → logprob: -14.006230354309082
    8. '   ' → logprob: -15.006230354309082
    9. 'IN' → logprob: -15.381230354309082
    10. ' (' → logprob: -15.381230354309082

Token 107: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.3306015716807451e-05
    2. '_temp' → logprob: -11.62501335144043
    3. 'num' → logprob: -12.62501335144043
    4. '[num' → logprob: -14.12501335144043
    5. '_' → logprob: -16.37501335144043
    6. '```' → logprob: -16.62501335144043
    7. 'Num' → logprob: -17.25001335144043
    8. '_tmp' → logprob: -17.62501335144043
    9. '_prob' → logprob: -17.87501335144043
    10. '[' → logprob: -18.37501335144043

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.500006675720215
    3. '[' → logprob: -13.125006675720215
    4. ' [' → logprob: -14.750006675720215
    5. '```' → logprob: -15.500006675720215
    6. ' ' → logprob: -15.625006675720215
    7. '   ' → logprob: -16.12500762939453
    8. '[
' → logprob: -16.75000762939453
    9. '1' → logprob: -16.87500762939453
    10. '(i' → logprob: -17.37500762939453

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01427562814205885
    2. ' +' → logprob: -4.264275550842285
    3. '1' → logprob: -9.139275550842285
    4. '+i' → logprob: -12.889275550842285
    5. '   ' → logprob: -13.889275550842285
    6. ' ' → logprob: -14.264275550842285
    7. ' ' → logprob: -15.514275550842285
    8. ']' → logprob: -15.889275550842285
    9. ' plus' → logprob: -16.7642765045166
    10. '＋' → logprob: -17.0142765045166

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -14.750007629394531
    4. '   ' → logprob: -16.37500762939453
    5. '<|end|>' → logprob: -16.75000762939453
    6. '```' → logprob: -17.12500762939453
    7. '  ' → logprob: -18.00000762939453
    8. ']' → logprob: -18.25000762939453
    9. '     ' → logprob: -18.87500762939453
    10. '    ' → logprob: -19.43750762939453

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '```' → logprob: -18.000001907348633
    6. ']' → logprob: -18.500001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. '2' → logprob: -19.500001907348633
    9. '  ' → logprob: -19.687501907348633
    10. '۱' → logprob: -20.875001907348633

Token 112: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004282851587049663
    2. '<|end|>' → logprob: -8.000428199768066
    3. ' )' → logprob: -9.500428199768066
    4. ')
' → logprob: -11.500428199768066
    5. '}' → logprob: -13.375428199768066
    6. '<|end|>' → logprob: -13.500428199768066
    7. '
' → logprob: -13.625428199768066
    8. '   ' → logprob: -14.125428199768066
    9. ')}' → logprob: -14.375428199768066
    10. ' ' → logprob: -14.750428199768066

Token 113: 'd' (ID: 67)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.4287382960319519
    2. 'e' → logprob: -1.3037383556365967
    3. 'ict' → logprob: -2.6787383556365967
    4. 'ijkstra' → logprob: -6.053738117218018
    5. 'eft' → logprob: -6.303738117218018
    6. 'ist' → logprob: -6.553738117218018
    7. 'i' → logprob: -6.928738117218018
    8. 'efs' → logprob: -7.178738117218018
    9. 'el' → logprob: -8.053738594055176
    10. 'ic' → logprob: -8.678738594055176

Token 115: ' [' (ID: 723)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.11786598712205887
    2. ' int' → logprob: -3.242866039276123
    3. 'int' → logprob: -3.617866039276123
    4. ' str' → logprob: -4.867866039276123
    5. 'str' → logprob: -4.992866039276123
    6. ' dict' → logprob: -4.992866039276123
    7. '{}' → logprob: -5.242866039276123
    8. '0' → logprob: -5.992866039276123
    9. 'dict' → logprob: -6.117866039276123
    10. ' ' → logprob: -6.117866039276123

Token 116: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.00019448090461082757
    2. '0' → logprob: -8.750194549560547
    3. 'INF' → logprob: -11.500194549560547
    4. ' IN' → logprob: -12.000194549560547
    5. '   ' → logprob: -12.125194549560547
    6. ']' → logprob: -12.250194549560547
    7. ' ' → logprob: -13.250194549560547
    8. '{}' → logprob: -13.625194549560547
    9. '(IN' → logprob: -13.750194549560547
    10. '{' → logprob: -13.875194549560547

Token 117: 'FINITY' (ID: 113276)
  Prédit: 'FINITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FINITY' → logprob: -0.0012690435396507382
    2. 'I' → logprob: -7.1262688636779785
    3. 'ITY' → logprob: -8.876269340515137
    4. 'F' → logprob: -9.376269340515137
    5. '```' → logprob: -9.876269340515137
    6. 'ENTITY' → logprob: -10.001269340515137
    7. '[' → logprob: -10.876269340515137
    8. 'IST' → logprob: -11.251269340515137
    9. 'E' → logprob: -11.376269340515137
    10. '#' → logprob: -12.126269340515137

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011987987905740738
    2. ' for' → logprob: -4.511988162994385
    3. ']*' → logprob: -7.636988162994385
    4. 'for' → logprob: -8.011987686157227
    5. ' ]' → logprob: -9.511987686157227
    6. ']*(' → logprob: -10.261987686157227
    7. ')' → logprob: -11.136987686157227
    8. ')]' → logprob: -14.386987686157227
    9. '(n' → logprob: -14.886987686157227
    10. ',' → logprob: -15.136987686157227

Token 119: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12724074721336365
    2. ' *' → logprob: -2.1272406578063965
    3. '+' → logprob: -9.002241134643555
    4. '*(' → logprob: -9.127241134643555
    5. ' for' → logprob: -11.377241134643555
    6. '(n' → logprob: -11.502241134643555
    7. ')' → logprob: -11.502241134643555
    8. '[' → logprob: -11.627241134643555
    9. 'for' → logprob: -11.627241134643555
    10. '(' → logprob: -12.002241134643555

Token 120: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006589128170162439
    2. ' (' → logprob: -5.506588935852051
    3. 'n' → logprob: -6.756588935852051
    4. '(' → logprob: -6.756588935852051
    5. '(len' → logprob: -9.63158893585205
    6. '((' → logprob: -10.63158893585205
    7. '100' → logprob: -10.88158893585205
    8. ' n' → logprob: -11.38158893585205
    9. ' ' → logprob: -11.63158893585205
    10. '(
' → logprob: -11.75658893585205

Token 121: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49528929591178894
    2. 'distance' → logprob: -1.7452893257141113
    3. 'dist' → logprob: -1.7452893257141113
    4. 'd' → logprob: -3.7452893257141113
    5. ' distances' → logprob: -5.370289325714111
    6. ' 
' → logprob: -5.495289325714111
    7. 'visited' → logprob: -5.495289325714111
    8. '  
' → logprob: -7.120289325714111
    9. '
' → logprob: -7.245289325714111
    10. '```' → logprob: -7.620289325714111

Token 122: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5281499624252319
    2. 'd' → logprob: -1.778149962425232
    3. 'dist' → logprob: -2.5281500816345215
    4. 'color' → logprob: -3.4031500816345215
    5. 'start' → logprob: -3.4031500816345215
    6. 'colors' → logprob: -4.0281500816345215
    7. 'src' → logprob: -4.2781500816345215
    8. 'source' → logprob: -4.4031500816345215
    9. 'for' → logprob: -4.6531500816345215
    10. 'q' → logprob: -4.9031500816345215

Token 123: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0005266997031867504
    2. 'd' → logprob: -8.500526428222656
    3. ' ' → logprob: -8.500526428222656
    4. ' shortest' → logprob: -10.250526428222656
    5. ' def' → logprob: -10.875526428222656
    6. 'ijkstra' → logprob: -11.250526428222656
    7. ' D' → logprob: -11.375526428222656
    8. ' dfs' → logprob: -11.750526428222656
    9. '```' → logprob: -12.000526428222656
    10. ' dij' → logprob: -12.500526428222656

Token 124: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.012912668287754059
    2. 'ijk' → logprob: -4.762912750244141
    3. 'ij' → logprob: -6.762912750244141
    4. '_' → logprob: -6.762912750244141
    5. 'jik' → logprob: -7.137912750244141
    6. 'i' → logprob: -7.512912750244141
    7. 'e' → logprob: -9.01291275024414
    8. 'j' → logprob: -9.38791275024414
    9. 'ijks' → logprob: -9.51291275024414
    10. '```' → logprob: -9.88791275024414

Token 125: '(top' (ID: 42605)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5363845229148865
    2. '(' → logprob: -0.9113845229148865
    3. '(s' → logprob: -5.286384582519531
    4. '(node' → logprob: -5.536384582519531
    5. '(graph' → logprob: -6.286384582519531
    6. '(start' → logprob: -7.661384582519531
    7. ' (' → logprob: -7.786384582519531
    8. '(n' → logprob: -8.036384582519531
    9. '(str' → logprob: -8.161384582519531
    10. '(source' → logprob: -8.161384582519531

Token 126: '_start' (ID: 10949)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2548694610595703
    2. ',' → logprob: -3.1298694610595703
    3. 'ological' → logprob: -3.5048694610595703
    4. 'ath' → logprob: -3.7548694610595703
    5. 'ology' → logprob: -3.8798694610595703
    6. 'u' → logprob: -3.8798694610595703
    7. ')' → logprob: -4.12986946105957
    8. '(u' → logprob: -4.25486946105957
    9. ':' → logprob: -4.87986946105957
    10. '):
' → logprob: -5.00486946105957

Token 127: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1502164751291275
    2. '):' → logprob: -2.025216579437256
    3. ')' → logprob: -6.025216579437256
    4. '(' → logprob: -6.400216579437256
    5. '(u' → logprob: -7.525216579437256
    6. '(graph' → logprob: -7.775216579437256
    7. '(s' → logprob: -8.025216102600098
    8. '):
' → logprob: -8.150216102600098
    9. '   ' → logprob: -8.275216102600098
    10. '(n' → logprob: -8.400216102600098

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09719796478748322
    2. '
' → logprob: -3.472198009490967
    3. '    
' → logprob: -4.597198009490967
    4. ':' → logprob: -4.847198009490967
    5. ' heap' → logprob: -4.972198009490967
    6. '(heap' → logprob: -5.222198009490967
    7. '  
' → logprob: -5.347198009490967
    8. ' 
' → logprob: -5.472198009490967
    9. 'heap' → logprob: -5.847198009490967
    10. ' ' → logprob: -5.847198009490967

Token 129: ' color' (ID: 3089)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7331926226615906
    2. '   ' → logprob: -0.9831926226615906
    3. ' dist' → logprob: -2.8581926822662354
    4. 'heap' → logprob: -4.358192443847656
    5. 'visited' → logprob: -4.358192443847656
    6. 'distance' → logprob: -4.483192443847656
    7. ' distances' → logprob: -5.108192443847656
    8. 'queue' → logprob: -5.233192443847656
    9. 'd' → logprob: -5.358192443847656
    10. 'q' → logprob: -5.483192443847656

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3377722501754761
    2. ' =' → logprob: -1.962772250175476
    3. '[top' → logprob: -1.962772250175476
    4. '[' → logprob: -5.337772369384766
    5. '[str' → logprob: -7.712772369384766
    6. '=[' → logprob: -8.337772369384766
    7. ' ' → logprob: -10.087772369384766
    8. '   ' → logprob: -10.337772369384766
    9. ']' → logprob: -10.837772369384766
    10. '```' → logprob: -10.962772369384766

Token 131: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008964232169091702
    2. ' [' → logprob: -4.7589640617370605
    3. '{' → logprob: -8.258964538574219
    4. '   ' → logprob: -9.383964538574219
    5. ' ' → logprob: -12.258964538574219
    6. ' {' → logprob: -13.508964538574219
    7. '{}' → logprob: -15.633964538574219
    8. '[n' → logprob: -15.883964538574219
    9. '  ' → logprob: -16.50896453857422
    10. ' ' → logprob: -17.13396453857422

Token 132: 'WHITE' (ID: 104380)
  Prédit: 'WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WHITE' → logprob: -9.722539834911004e-05
    2. ' WHITE' → logprob: -9.250097274780273
    3. '0' → logprob: -14.000097274780273
    4. 'White' → logprob: -16.250097274780273
    5. '.WHITE' → logprob: -16.375097274780273
    6. 'GRAY' → logprob: -16.500097274780273
    7. '   ' → logprob: -16.875097274780273
    8. 'white' → logprob: -17.375097274780273
    9. '_WHITE' → logprob: -18.000097274780273
    10. ' ' → logprob: -20.000097274780273

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.364928700961173e-05
    2. ']*' → logprob: -10.000093460083008
    3. ' for' → logprob: -10.125093460083008
    4. ' ]' → logprob: -12.500093460083008
    5. 'for' → logprob: -12.500093460083008
    6. '   ' → logprob: -15.250093460083008
    7. ',' → logprob: -15.375093460083008
    8. ')' → logprob: -16.000093460083008
    9. '}' → logprob: -17.000093460083008
    10. ']*(' → logprob: -17.625093460083008

Token 134: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03635871410369873
    2. '<|end|>' → logprob: -3.5363588333129883
    3. 'd' → logprob: -7.286358833312988
    4. '[' → logprob: -7.286358833312988
    5. '    
' → logprob: -7.286358833312988
    6. '  
' → logprob: -7.411358833312988
    7. 'for' → logprob: -7.411358833312988
    8. '
' → logprob: -7.411358833312988
    9. '<|end|>' → logprob: -7.786358833312988
    10. ' 
' → logprob: -7.911358833312988

Token 135: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0035847488325089216
    2. ' n' → logprob: -5.753584861755371
    3. '(n' → logprob: -7.878584861755371
    4. ' (' → logprob: -10.628584861755371
    5. '(' → logprob: -12.753584861755371
    6. '(len' → logprob: -14.628584861755371
    7. 'len' → logprob: -14.753584861755371
    8. ' ' → logprob: -16.503583908081055
    9. '   ' → logprob: -16.628583908081055
    10. '_n' → logprob: -17.503583908081055

Token 136: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07780098170042038
    2. '   ' → logprob: -3.577800989151001
    3. ' 
' → logprob: -4.202800750732422
    4. '<|end|>' → logprob: -4.577800750732422
    5. '    
' → logprob: -4.827800750732422
    6. '  
' → logprob: -5.077800750732422
    7. ',' → logprob: -6.577800750732422
    8. ' ' → logprob: -6.577800750732422
    9. ')' → logprob: -7.077800750732422
    10. ',
' → logprob: -7.577800750732422

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04185308888554573
    2. 'heap' → logprob: -3.791853189468384
    3. 'pq' → logprob: -5.666852951049805
    4. '    
' → logprob: -6.041852951049805
    5. ' heap' → logprob: -6.166852951049805
    6. 'distance' → logprob: -6.291852951049805
    7. 'dist' → logprob: -6.416852951049805
    8. '
' → logprob: -6.416852951049805
    9. ',' → logprob: -7.291852951049805
    10. 'queue' → logprob: -7.666852951049805

Token 138: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.42227938771247864
    2. 'pq' → logprob: -2.1722793579101562
    3. 'color' → logprob: -2.5472793579101562
    4. 'dist' → logprob: -2.5472793579101562
    5. 'p' → logprob: -4.047279357910156
    6. 'queue' → logprob: -4.297279357910156
    7. 'q' → logprob: -4.422279357910156
    8. 'heap' → logprob: -4.797279357910156
    9. 'distance' → logprob: -4.922279357910156
    10. 'h' → logprob: -5.297279357910156

Token 139: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -0.003373534418642521
    2. '[' → logprob: -5.753373622894287
    3. '[str' → logprob: -10.378373146057129
    4. '=' → logprob: -10.378373146057129
    5. '[:]' → logprob: -10.878373146057129
    6. ',' → logprob: -11.128373146057129
    7. 'top' → logprob: -11.503373146057129
    8. ' [' → logprob: -11.753373146057129
    9. '[start' → logprob: -11.753373146057129
    10. '[int' → logprob: -11.878373146057129

Token 140: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.3438327843905427e-05
    2. '_' → logprob: -11.75002384185791
    3. '_START' → logprob: -12.25002384185791
    4. 'start' → logprob: -12.37502384185791
    5. '[start' → logprob: -13.62502384185791
    6. ')' → logprob: -14.37502384185791
    7. '-start' → logprob: -14.37502384185791
    8. ' _' → logprob: -14.50002384185791
    9. '   ' → logprob: -14.75002384185791
    10. 'Start' → logprob: -14.75002384185791

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014433303149417043
    2. '[' → logprob: -7.376443386077881
    3. ')' → logprob: -8.251442909240723
    4. ' ]' → logprob: -8.376442909240723
    5. '=' → logprob: -8.876442909240723
    6. ']=' → logprob: -9.376442909240723
    7. ' =' → logprob: -10.626442909240723
    8. ']+=' → logprob: -10.751442909240723
    9. '   ' → logprob: -11.126442909240723
    10. '[node' → logprob: -12.126442909240723

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023315709084272385
    2. ' =' → logprob: -3.773315668106079
    3. '[top' → logprob: -10.2733154296875
    4. '[' → logprob: -10.8983154296875
    5. '<|end|>' → logprob: -11.7733154296875
    6. '[token' → logprob: -13.5233154296875
    7. ']=' → logprob: -13.8983154296875
    8. ')=' → logprob: -14.0233154296875
    9. '=int' → logprob: -14.1483154296875
    10. ' ' → logprob: -14.2733154296875

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.5
    4. '00' → logprob: -21.875
    5. '000' → logprob: -22.5
    6. '۰' → logprob: -22.875
    7. '  ' → logprob: -23.5
    8. '```' → logprob: -24.875
    9. '０' → logprob: -25.125
    10. '[' → logprob: -25.25

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.25
    4. '۰' → logprob: -20.375
    5. '00' → logprob: -20.5
    6. '000' → logprob: -21.375
    7. '  ' → logprob: -22.0
    8. 'd' → logprob: -22.25
    9. '[' → logprob: -22.25
    10. '```' → logprob: -22.5

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3532733917236328
    2. '
' → logprob: -1.3532733917236328
    3. 'heap' → logprob: -4.103273391723633
    4. '    
' → logprob: -4.728273391723633
    5. ' heap' → logprob: -4.853273391723633
    6. ' 
' → logprob: -6.853273391723633
    7. '  
' → logprob: -7.103273391723633
    8. '<|end|>' → logprob: -7.103273391723633
    9. ',' → logprob: -7.478273391723633
    10. '   
' → logprob: -7.853273391723633

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013752772472798824
    2. 'heap' → logprob: -4.8887529373168945
    3. '
' → logprob: -5.7637529373168945
    4. ' heap' → logprob: -6.0137529373168945
    5. '    
' → logprob: -8.263752937316895
    6. 'pq' → logprob: -9.263752937316895
    7. ',' → logprob: -10.513752937316895
    8. '	queue' → logprob: -10.888752937316895
    9. 'queue' → logprob: -11.388752937316895
    10. ' queue' → logprob: -11.388752937316895

Token 147: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2888163924217224
    2. 'queue' → logprob: -2.038816452026367
    3. 'pq' → logprob: -2.663816452026367
    4. 'q' → logprob: -3.413816452026367
    5. 'hq' → logprob: -4.788816452026367
    6. '   ' → logprob: -5.413816452026367
    7. 'h' (adapté à ' h') → logprob: -5.788816452026367
    8. 'priority' → logprob: -6.913816452026367
    9. 'Q' → logprob: -7.538816452026367
    10. 'que' → logprob: -7.788816452026367

Token 148: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018285730853676796
    2. ' =' → logprob: -4.518285751342773
    3. '=' → logprob: -5.768285751342773
    4. 'eep' → logprob: -6.393285751342773
    5. 'q' → logprob: -6.893285751342773
    6. 'eq' → logprob: -7.518285751342773
    7. 'p' → logprob: -7.643285751342773
    8. '=e' → logprob: -9.018285751342773
    9. 'eat' → logprob: -9.518285751342773
    10. 'heap' → logprob: -9.893285751342773

Token 149: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.49131765961647034
    2. ' []' → logprob: -1.741317629814148
    3. '[(' → logprob: -2.2413177490234375
    4. ' [(' → logprob: -2.2413177490234375
    5. '[' → logprob: -8.741317749023438
    6. '[]
' → logprob: -9.741317749023438
    7. ' [' → logprob: -10.991317749023438
    8. ' []
' → logprob: -11.116317749023438
    9. '[]}' → logprob: -13.991317749023438
    10. '[]

' → logprob: -13.991317749023438

Token 150: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5057935118675232
    2. '   ' → logprob: -1.005793571472168
    3. ' heap' → logprob: -3.755793571472168
    4. 'h' → logprob: -5.255793571472168
    5. 'he' → logprob: -6.380793571472168
    6. ' h' → logprob: -7.630793571472168
    7. '(heap' → logprob: -8.880793571472168
    8. ',' → logprob: -9.755793571472168
    9. '	h' → logprob: -10.130793571472168
    10. '.heap' → logprob: -10.880793571472168

Token 151: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0019548023119568825
    2. ' heap' → logprob: -6.376955032348633
    3. '   ' → logprob: -8.501955032348633
    4. 'he' → logprob: -10.001955032348633
    5. '```' → logprob: -12.626955032348633
    6. '(heap' → logprob: -15.001955032348633
    7. 'h' → logprob: -15.501955032348633
    8. '
' → logprob: -16.376955032348633
    9. 'import' → logprob: -16.501955032348633
    10. ' he' → logprob: -17.126955032348633

Token 152: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.12127808178775e-05
    2. '.he' → logprob: -10.000051498413086
    3. '.push' → logprob: -13.000051498413086
    4. '.' → logprob: -13.625051498413086
    5. '```' → logprob: -13.875051498413086
    6. ' .' → logprob: -14.875051498413086
    7. 'p' → logprob: -15.625051498413086
    8. ').' → logprob: -15.750051498413086
    9. '   ' → logprob: -15.750051498413086
    10. '.heap' → logprob: -15.750051498413086

Token 153: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004581076558679342
    2. '.heap' → logprob: -5.504580974578857
    3. '.' → logprob: -7.629580974578857
    4. '.push' → logprob: -11.629581451416016
    5. ' .' → logprob: -13.004581451416016
    6. '.q' → logprob: -13.504581451416016
    7. '.put' → logprob: -13.754581451416016
    8. '.h' → logprob: -14.004581451416016
    9. '.append' → logprob: -15.004581451416016
    10. '‌.' → logprob: -15.254581451416016

Token 154: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.8789383830153383e-05
    2. 'pp' → logprob: -11.000019073486328
    3. 'ap' → logprob: -13.375019073486328
    4. 'push' → logprob: -15.000019073486328
    5. 'appen' → logprob: -17.250019073486328
    6. 'a' → logprob: -18.750019073486328
    7. '```' → logprob: -19.125019073486328
    8. 'append' → logprob: -19.250019073486328
    9. 'q' → logprob: -19.250019073486328
    10. ' app' → logprob: -19.375019073486328

Token 155: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.002515373518690467
    2. 'sh' → logprob: -6.0025153160095215
    3. 'pp' → logprob: -11.00251579284668
    4. 'p' → logprob: -12.12751579284668
    5. 'op' → logprob: -12.12751579284668
    6. 'push' → logprob: -12.25251579284668
    7. 'app' → logprob: -12.50251579284668
    8. 'd' → logprob: -14.00251579284668
    9. '```' → logprob: -14.62751579284668
    10. 't' → logprob: -14.62751579284668

Token 156: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -11.125020027160645
    3. ' (' → logprob: -12.125020027160645
    4. '(heap' → logprob: -16.25002098083496
    5. '```' → logprob: -17.75002098083496
    6. '((' → logprob: -18.00002098083496
    7. '(
' → logprob: -18.75002098083496
    8. ' ' → logprob: -19.00002098083496
    9. '(ht' → logprob: -19.12502098083496
    10. '(s' → logprob: -19.37502098083496

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17035885155200958
    2. '(' → logprob: -1.9203588962554932
    3. ' (' → logprob: -5.295358657836914
    4. ',(' → logprob: -6.295358657836914
    5. ' ,' → logprob: -6.545358657836914
    6. '((' → logprob: -6.920358657836914
    7. ' ' → logprob: -7.295358657836914
    8. ')' → logprob: -10.045358657836914
    9. '(h' → logprob: -10.045358657836914
    10. '   ' → logprob: -11.545358657836914

Token 158: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16072924435138702
    2. '(top' → logprob: -1.9107292890548706
    3. ' (' → logprob: -7.66072940826416
    4. '(t' → logprob: -11.28572940826416
    5. '(u' → logprob: -11.28572940826416
    6. '(up' → logprob: -12.78572940826416
    7. '(start' → logprob: -13.66072940826416
    8. '[top' → logprob: -13.91072940826416
    9. '(user' → logprob: -14.28572940826416
    10. '(tmp' → logprob: -14.66072940826416

Token 159: 'd' (ID: 67)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001310719089815393
    2. 'd' → logprob: -9.625130653381348
    3. '(' → logprob: -9.750130653381348
    4. ' ' → logprob: -12.000130653381348
    5. '(d' → logprob: -14.875130653381348
    6. ')' → logprob: -17.125131607055664
    7. ' d' → logprob: -17.750131607055664
    8. ' (' → logprob: -18.000131607055664
    9. '   ' → logprob: -18.250131607055664
    10. '```' → logprob: -18.750131607055664

Token 160: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.625018119812012
    3. '(top' → logprob: -12.625018119812012
    4. ',' → logprob: -13.125018119812012
    5. 'top' → logprob: -13.250018119812012
    6. ' [' → logprob: -14.500018119812012
    7. ' top' → logprob: -15.125018119812012
    8. '[
' → logprob: -15.250018119812012
    9. ')' → logprob: -15.375018119812012
    10. '```' → logprob: -15.625018119812012

Token 161: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.3676733690081164e-05
    2. 'start' → logprob: -10.75002384185791
    3. '-start' → logprob: -13.62502384185791
    4. '_START' → logprob: -14.25002384185791
    5. 'Start' → logprob: -15.75002384185791
    6. '[start' → logprob: -16.250022888183594
    7. ' start' → logprob: -18.750022888183594
    8. '_Start' → logprob: -18.750022888183594
    9. 'START' → logprob: -18.750022888183594
    10. ':start' → logprob: -18.750022888183594

Token 162: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. '),' → logprob: -10.875041007995605
    3. ')' → logprob: -11.000041007995605
    4. ' ,' → logprob: -12.625041007995605
    5. ',)' → logprob: -13.750041007995605
    6. ',
' → logprob: -15.250041007995605
    7. ',u' → logprob: -15.625041007995605
    8. '],' → logprob: -15.875041007995605
    9. ',

' → logprob: -16.500041961669922
    10. '[' → logprob: -16.500041961669922

Token 163: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.048792995512485504
    2. ' top' → logprob: -3.048793077468872
    3. 'str' → logprob: -8.673792839050293
    4. ' str' → logprob: -10.423792839050293
    5. '[top' → logprob: -13.173792839050293
    6. '(top' → logprob: -14.298792839050293
    7. '	top' → logprob: -14.298792839050293
    8. ' ' → logprob: -14.548792839050293
    9. 'u' → logprob: -14.673792839050293
    10. ' u' → logprob: -15.673792839050293

Token 164: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -8.895480277715251e-06
    2. 'start' → logprob: -12.125008583068848
    3. '_START' → logprob: -13.500008583068848
    4. 'Start' → logprob: -14.250008583068848
    5. 'u' → logprob: -15.375008583068848
    6. '-start' → logprob: -15.375008583068848
    7. '_Start' → logprob: -16.000009536743164
    8. '_star' → logprob: -16.125009536743164
    9. 's' → logprob: -16.250009536743164
    10. ')' → logprob: -16.250009536743164

Token 165: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00035631912760436535
    2. ')' → logprob: -8.125356674194336
    3. '))
' → logprob: -9.750356674194336
    4. ' ))' → logprob: -14.000356674194336
    5. ')))' → logprob: -14.250356674194336
    6. '))

' → logprob: -15.750356674194336
    7. ')
' → logprob: -15.875356674194336
    8. '   ' → logprob: -16.375356674194336
    9. '));' → logprob: -16.750356674194336
    10. '),' → logprob: -18.000356674194336

Token 166: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.974431574344635
    2. 'while' → logprob: -1.3494315147399902
    3. ')' → logprob: -1.7244315147399902
    4. '   ' → logprob: -1.7244315147399902
    5. '    
' → logprob: -6.34943151473999
    6. '```' → logprob: -6.84943151473999
    7. '	while' → logprob: -6.84943151473999
    8. ' 
' → logprob: -6.97443151473999
    9. ' )' → logprob: -7.59943151473999
    10. '  
' → logprob: -7.97443151473999

Token 167: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00012737659562844783
    2. ' while' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.625127792358398
    4. '	while' → logprob: -14.875127792358398
    5. '```' → logprob: -15.375127792358398
    6. ')' → logprob: -16.0001277923584
    7. '
' → logprob: -17.5001277923584
    8. 'While' → logprob: -18.0001277923584
    9. '    
' → logprob: -18.6251277923584
    10. '``' → logprob: -20.1251277923584

Token 168: ' len' (ID: 4631)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.31393688917160034
    2. ' h' → logprob: -1.3139369487762451
    3. ' len' → logprob: -7.563936710357666
    4. 'len' → logprob: -8.813937187194824
    5. '(h' → logprob: -12.563937187194824
    6. '	h' → logprob: -13.188937187194824
    7. '(len' → logprob: -13.813937187194824
    8. ' ' → logprob: -14.438937187194824
    9. '   ' → logprob: -16.063936233520508
    10. '[h' → logprob: -16.563936233520508

Token 169: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00014048899174667895
    2. '(' → logprob: -8.875140190124512
    3. 'h' → logprob: -14.500140190124512
    4. ' (' → logprob: -16.875141143798828
    5. '(heap' → logprob: -17.250141143798828
    6. '(s' → logprob: -17.875141143798828
    7. '(
' → logprob: -18.500141143798828
    8. ')' → logprob: -18.750141143798828
    9. '(ht' → logprob: -18.875141143798828
    10. '(d' → logprob: -19.125141143798828

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004996190313249826
    2. ')>' → logprob: -5.379996299743652
    3. '>' → logprob: -8.254996299743652
    4. '):' → logprob: -9.254996299743652
    5. ' >' → logprob: -11.004996299743652
    6. '):
' → logprob: -14.004996299743652
    7. ' )' → logprob: -14.004996299743652
    8. ':' → logprob: -14.629996299743652
    9. ')!=' → logprob: -15.004996299743652
    10. '   ' → logprob: -15.379996299743652

Token 171: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18029345571994781
    2. ' >' → logprob: -1.8052934408187866
    3. ')' → logprob: -8.680293083190918
    4. ':' → logprob: -8.805293083190918
    5. ')>' → logprob: -8.930293083190918
    6. ' !=' → logprob: -10.305293083190918
    7. '!=' → logprob: -10.430293083190918
    8. '()>' → logprob: -11.055293083190918
    9. '>:' → logprob: -13.180293083190918
    10. '&gt' → logprob: -13.305293083190918

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011808235431089997
    2. ' ' → logprob: -6.751180648803711
    3. '0' → logprob: -11.501180648803711
    4. '   ' → logprob: -14.751180648803711
    5. '```' → logprob: -16.37618064880371
    6. ')' → logprob: -17.06368064880371
    7. '  ' → logprob: -17.50118064880371
    8. '>' → logprob: -17.87618064880371
    9. '(' → logprob: -18.43868064880371
    10. '2' → logprob: -18.50118064880371

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. ' ' → logprob: -10.000049591064453
    3. '0' → logprob: -12.375049591064453
    4. '```' → logprob: -17.250049591064453
    5. '۱' → logprob: -18.500049591064453
    6. '   ' → logprob: -18.750049591064453
    7. '１' → logprob: -18.812549591064453
    8. '2' → logprob: -19.375049591064453
    9. '
' → logprob: -19.500049591064453
    10. ')' → logprob: -19.500049591064453

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008887103176675737
    2. '):' → logprob: -7.250888824462891
    3. ',' → logprob: -9.62588882446289
    4. ':
' → logprob: -9.75088882446289
    5. ')' → logprob: -10.00088882446289
    6. ' :' → logprob: -13.25088882446289
    7. '):
' → logprob: -13.37588882446289
    8. '   ' → logprob: -13.37588882446289
    9. ' and' → logprob: -14.25088882446289
    10. '():' → logprob: -14.37588882446289

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3234175741672516
    2. ',' → logprob: -1.3234175443649292
    3. ' ,' → logprob: -5.198417663574219
    4. '   ' → logprob: -6.698417663574219
    5. ')' → logprob: -6.698417663574219
    6. '```' → logprob: -7.198417663574219
    7. ':' → logprob: -7.448417663574219
    8. '):' → logprob: -8.823417663574219
    9. ' (' → logprob: -10.073417663574219
    10. ',v' → logprob: -10.198417663574219

Token 176: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0903053283691406
    2. 'cost' (adapté à ' cost') → logprob: -1.3403053283691406
    3. 'd' → logprob: -1.4653053283691406
    4. 'distance' → logprob: -3.0903053283691406
    5. 'current' → logprob: -3.3403053283691406
    6. 'cur' → logprob: -3.5903053283691406
    7. ' dist' → logprob: -3.9653053283691406
    8. ' cost' → logprob: -4.840305328369141
    9. '   ' → logprob: -5.215305328369141
    10. ' d' → logprob: -5.340305328369141

Token 177: '_now' (ID: 49444)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ' ,' → logprob: -11.000027656555176
    3. ',current' → logprob: -12.125027656555176
    4. ',c' → logprob: -13.250027656555176
    5. ',
' → logprob: -14.250027656555176
    6. '_,' → logprob: -14.750027656555176
    7. 'cost' → logprob: -15.500027656555176
    8. ',value' → logprob: -15.500027656555176
    9. ',next' → logprob: -15.625027656555176
    10. ',v' → logprob: -15.625027656555176

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.250054359436035
    3. ',c' → logprob: -11.625054359436035
    4. ',current' → logprob: -12.000054359436035
    5. 'cost' → logprob: -13.125054359436035
    6. ',
' → logprob: -14.250054359436035
    7. ',v' → logprob: -15.125054359436035
    8. ',node' → logprob: -16.00005531311035
    9. ',u' → logprob: -16.25005531311035
    10. ',

' → logprob: -16.25005531311035

Token 179: ' top' (ID: 2344)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.27138617634773254
    2. 'v' → logprob: -2.77138614654541
    3. 'top' → logprob: -3.02138614654541
    4. 'now' → logprob: -3.27138614654541
    5. 'pos' → logprob: -3.39638614654541
    6. 'current' → logprob: -4.64638614654541
    7. ' u' → logprob: -4.64638614654541
    8. 'index' → logprob: -4.89638614654541
    9. 'node' → logprob: -4.89638614654541
    10. 'vertex' → logprob: -5.14638614654541

Token 180: '_now' (ID: 49444)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26368895173072815
    2. '_now' → logprob: -2.1386890411376953
    3. '=' → logprob: -2.3886890411376953
    4. '_current' → logprob: -4.638689041137695
    5. '_' → logprob: -5.513689041137695
    6. '<|end|>' → logprob: -7.013689041137695
    7. 'u' → logprob: -7.138689041137695
    8. ')' → logprob: -7.138689041137695
    9. '=u' → logprob: -7.763689041137695
    10. ')=' → logprob: -7.888689041137695

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931512355804443
    2. ' =' → logprob: -0.6931512355804443
    3. ',' → logprob: -13.068151473999023
    4. ')' → logprob: -14.193151473999023
    5. '   ' → logprob: -14.318151473999023
    6. ')=' → logprob: -15.318151473999023
    7. ' ' → logprob: -16.193151473999023
    8. ' =
' → logprob: -16.693151473999023
    9. '       ' → logprob: -17.568151473999023
    10. ' =)' → logprob: -17.568151473999023

Token 182: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5759410262107849
    2. 'heap' → logprob: -0.8259410262107849
    3. '(heap' → logprob: -14.57594108581543
    4. '   ' → logprob: -14.95094108581543
    5. 'he' → logprob: -15.07594108581543
    6. '.heap' → logprob: -15.32594108581543
    7. ' he' → logprob: -15.70094108581543
    8. '_heap' → logprob: -16.45094108581543
    9. 'Heap' → logprob: -17.45094108581543
    10. '
' → logprob: -17.95094108581543

Token 183: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. 'h' → logprob: -15.000003814697266
    4. ')' → logprob: -15.875003814697266
    5. '
' → logprob: -16.625003814697266
    6. '```' → logprob: -16.625003814697266
    7. '

' → logprob: -17.000003814697266
    8. '.pop' → logprob: -17.250003814697266
    9. 'p' → logprob: -17.250003814697266
    10. ',' → logprob: -17.375003814697266

Token 184: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.4996960461139679
    2. 'op' → logprob: -0.9996960163116455
    3. 'app' → logprob: -4.499696254730225
    4. 'he' → logprob: -4.624696254730225
    5. 'pop' → logprob: -5.874696254730225
    6. 'q' → logprob: -7.124696254730225
    7. 'pp' → logprob: -7.999696254730225
    8. '[' → logprob: -9.124695777893066
    9. 'p' → logprob: -9.249695777893066
    10. '```' → logprob: -9.374695777893066

Token 185: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00023417205375153571
    2. 'pp' → logprob: -8.375234603881836
    3. 'ap' → logprob: -12.625234603881836
    4. 'pop' → logprob: -16.375234603881836
    5. '[' → logprob: -17.000234603881836
    6. 'appe' → logprob: -17.500234603881836
    7. 'App' → logprob: -18.000234603881836
    8. 'p' → logprob: -18.000234603881836
    9. 'op' → logprob: -18.250234603881836
    10. 'q' → logprob: -18.625234603881836

Token 186: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3703462779521942
    2. 'ush' → logprob: -1.2453463077545166
    3. 'app' → logprob: -3.8703463077545166
    4. 'ap' → logprob: -7.8703460693359375
    5. 'pop' → logprob: -8.870346069335938
    6. 'p' → logprob: -8.995346069335938
    7. 'pp' → logprob: -8.995346069335938
    8. '```' → logprob: -11.245346069335938
    9. 'sh' → logprob: -11.620346069335938
    10. 'push' → logprob: -12.245346069335938

Token 187: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.125016212463379
    3. 'h' → logprob: -13.500016212463379
    4. ' (' → logprob: -16.875017166137695
    5. '(
' → logprob: -17.250017166137695
    6. ')' → logprob: -17.625017166137695
    7. ',h' → logprob: -17.750017166137695
    8. '(heap' → logprob: -18.000017166137695
    9. ' h' → logprob: -18.125017166137695
    10. '[h' → logprob: -18.750017166137695

Token 188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ')
' → logprob: -11.750008583068848
    3. ')

' → logprob: -14.625008583068848
    4. ' )' → logprob: -15.125008583068848
    5. ')`' → logprob: -16.250009536743164
    6. '       ' → logprob: -16.500009536743164
    7. '<|end|>' → logprob: -17.625009536743164
    8. ')
' → logprob: -17.750009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '),' → logprob: -18.625009536743164

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6034915447235107
    2. '   ' → logprob: -1.2284915447235107
    3. '
' → logprob: -2.4784915447235107
    4. '<|end|>' → logprob: -3.1034915447235107
    5. '        
' → logprob: -4.97849178314209
    6. '  
' → logprob: -4.97849178314209
    7. '    
' → logprob: -5.22849178314209
    8. ' 
' → logprob: -5.35349178314209
    9. ' if' → logprob: -6.22849178314209
    10. 'if' → logprob: -6.35349178314209

Token 190: ' color' (ID: 3089)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007646375801414251
    2. ' if' → logprob: -5.007646560668945
    3. '   ' → logprob: -7.132646560668945
    4. 'color' (adapté à ' color') → logprob: -9.007646560668945
    5. '```' → logprob: -12.132646560668945
    6. ' color' → logprob: -13.507646560668945
    7. '
' → logprob: -14.007646560668945
    8. ' ' → logprob: -14.132646560668945
    9. '       ' → logprob: -15.007646560668945
    10. '    
' → logprob: -15.132646560668945

Token 191: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.000018119812012
    3. '[to' → logprob: -14.375018119812012
    4. '[temp' → logprob: -15.125018119812012
    5. '[target' → logprob: -15.500018119812012
    6. '[token' → logprob: -15.750018119812012
    7. '[tmp' → logprob: -16.000019073486328
    8. ' [' → logprob: -16.125019073486328
    9. '```' → logprob: -16.875019073486328
    10. '[str' → logprob: -17.250019073486328

Token 192: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -5.200166469876422e-06
    2. 'now' → logprob: -12.875004768371582
    3. '_NOW' → logprob: -13.250004768371582
    4. '[now' → logprob: -14.750004768371582
    5. 'Now' → logprob: -15.500004768371582
    6. '_' → logprob: -15.875004768371582
    7. ')_' → logprob: -17.3750057220459
    8. '```' → logprob: -17.8750057220459
    9. ']_' → logprob: -18.2500057220459
    10. '_to' → logprob: -18.5000057220459

Token 193: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016679229447618127
    2. '=' → logprob: -7.0016679763793945
    3. ']=' → logprob: -7.7516679763793945
    4. ')' → logprob: -8.626667976379395
    5. ' ]' → logprob: -9.001667976379395
    6. ' =' → logprob: -10.876667976379395
    7. '[' → logprob: -13.001667976379395
    8. ']==' → logprob: -13.751667976379395
    9. '<|end|>' → logprob: -14.876667976379395
    10. ')=' → logprob: -15.001667976379395

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -17.288042068481445
    4. '＝' → logprob: -17.788042068481445
    5. '[' → logprob: -18.038042068481445
    6. '=

' → logprob: -18.163042068481445
    7. ')' → logprob: -18.538042068481445
    8. '=}' → logprob: -18.663042068481445
    9. ']=' → logprob: -19.038042068481445
    10. ' ' → logprob: -19.038042068481445

Token 195: ' BLACK' (ID: 71730)
  Prédit: 'GRAY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GRAY' → logprob: -0.06321968138217926
    2. 'BLACK' → logprob: -2.8132197856903076
    3. ' BLACK' → logprob: -7.0632195472717285
    4. 'GR' → logprob: -8.313220024108887
    5. ' GR' → logprob: -8.813220024108887
    6. 'GRE' → logprob: -14.688220024108887
    7. '.GRAY' → logprob: -14.688220024108887
    8. '.BLACK' → logprob: -15.938220024108887
    9. '_GRAY' → logprob: -16.43821907043457
    10. 'GRAM' → logprob: -16.68821907043457

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0952429547905922
    2. '<|end|>' → logprob: -2.970242977142334
    3. '       ' → logprob: -3.345242977142334
    4. '        
' → logprob: -6.095242977142334
    5. ' 
' → logprob: -7.470242977142334
    6. '  
' → logprob: -7.470242977142334
    7. '    
' → logprob: -7.970242977142334
    8. '   ' → logprob: -8.470242500305176
    9. ' if' → logprob: -9.470242500305176
    10. 'if' → logprob: -9.845242500305176

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2606567442417145
    2. '   ' → logprob: -2.5106568336486816
    3. '<|end|>' → logprob: -2.5106568336486816
    4. '
' → logprob: -3.2606568336486816
    5. ' for' → logprob: -4.260656833648682
    6. 'for' → logprob: -5.010656833648682
    7. '        
' → logprob: -5.385656833648682
    8. '    
' → logprob: -6.635656833648682
    9. '  
' → logprob: -7.135656833648682
    10. ' 
' → logprob: -8.135656356811523

Token 198: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011875491589307785
    2. 'if' (adapté à ' if') → logprob: -4.511875629425049
    3. 'neighbors' → logprob: -7.261875629425049
    4. 'u' → logprob: -10.13687515258789
    5. 'adj' → logprob: -10.63687515258789
    6. '   ' → logprob: -10.76187515258789
    7. ' for' → logprob: -10.88687515258789
    8. 'neighbor' → logprob: -11.63687515258789
    9. 'try' → logprob: -12.76187515258789
    10. 'top' → logprob: -13.01187515258789

Token 199: ' d' (ID: 272)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.24228538572788239
    2. ' color' → logprob: -2.2422854900360107
    3. 'cost' → logprob: -2.4922854900360107
    4. ' cost' → logprob: -3.9922854900360107
    5. 'd' → logprob: -5.742285251617432
    6. 'top' → logprob: -5.867285251617432
    7. ' d' → logprob: -6.742285251617432
    8. ' top' → logprob: -7.617285251617432
    9. '   ' → logprob: -11.24228572845459
    10. 'len' → logprob: -11.86728572845459

Token 200: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -3.4121114822482923e-06
    2. 'top' → logprob: -13.875003814697266
    3. '[now' → logprob: -14.250003814697266
    4. '[next' → logprob: -15.000003814697266
    5. '[temp' → logprob: -15.000003814697266
    6. ' [' → logprob: -15.375003814697266
    7. '[' → logprob: -15.375003814697266
    8. '[to' → logprob: -15.500003814697266
    9. '[tmp' → logprob: -15.625003814697266
    10. 'cost' → logprob: -16.125003814697266

Token 201: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -8.061054359131958e-06
    2. '[now' → logprob: -12.000007629394531
    3. 'now' → logprob: -13.625007629394531
    4. '_NOW' → logprob: -15.750007629394531
    5. '```' → logprob: -16.12500762939453
    6. 'Now' → logprob: -16.12500762939453
    7. '_' → logprob: -16.87500762939453
    8. '_top' → logprob: -17.00000762939453
    9. '_next' → logprob: -17.12500762939453
    10. '[' → logprob: -17.75000762939453

Token 202: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5245975852012634
    2. '<' → logprob: -0.8995975852012634
    3. ' !=' → logprob: -7.649597644805908
    4. '!=' → logprob: -7.649597644805908
    5. '>' → logprob: -9.02459716796875
    6. '<int' → logprob: -9.52459716796875
    7. '<const' → logprob: -10.64959716796875
    8. '==' → logprob: -10.64959716796875
    9. ' >' → logprob: -10.64959716796875
    10. ' <=' → logprob: -10.77459716796875

Token 203: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11300726234912872
    2. ' <' → logprob: -2.2380073070526123
    3. '<int' → logprob: -10.363007545471191
    4. '<=' → logprob: -10.738007545471191
    5. '!=' → logprob: -10.738007545471191
    6. '<const' → logprob: -11.488007545471191
    7. ' !=' → logprob: -11.613007545471191
    8. '>' → logprob: -11.863007545471191
    9. '<ll' → logprob: -11.988007545471191
    10. '>=' → logprob: -11.988007545471191

Token 204: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.005241344682872295
    2. ' cost' → logprob: -5.255241394042969
    3. 'color' → logprob: -11.880241394042969
    4. 'IN' → logprob: -15.130241394042969
    5. ' ' → logprob: -15.630241394042969
    6. '(cost' → logprob: -16.00524139404297
    7. '   ' → logprob: -17.25524139404297
    8. 'cos' → logprob: -17.63024139404297
    9. 'c' → logprob: -17.75524139404297
    10. ' color' → logprob: -18.38024139404297

Token 205: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.62500286102295
    3. 's' → logprob: -14.50000286102295
    4. '_NOW' → logprob: -15.37500286102295
    5. '_cost' → logprob: -16.000001907348633
    6. 'now' → logprob: -16.000001907348633
    7. '[now' → logprob: -16.500001907348633
    8. '_then' → logprob: -17.125001907348633
    9. '_s' → logprob: -17.375001907348633
    10. '_than' → logprob: -17.500001907348633

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006835318170487881
    2. ':
' → logprob: -5.006835460662842
    3. '       ' → logprob: -10.006834983825684
    4. 'continue' → logprob: -10.131834983825684
    5. ' continue' → logprob: -10.756834983825684
    6. '	continue' → logprob: -12.381834983825684
    7. '           ' → logprob: -13.006834983825684
    8. '   ' → logprob: -13.256834983825684
    9. '_continue' → logprob: -13.506834983825684
    10. '):' → logprob: -13.756834983825684

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0613243393599987
    2. ' continue' → logprob: -2.93632435798645
    3. 'continue' → logprob: -5.186324119567871
    4. '       ' → logprob: -7.561324119567871
    5. '	continue' → logprob: -8.436324119567871
    6. '   ' → logprob: -10.311324119567871
    7. '	       ' → logprob: -11.061324119567871
    8. '		' → logprob: -11.061324119567871
    9. '_continue' → logprob: -11.686324119567871
    10. '               ' → logprob: -11.811324119567871

Token 208: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10926906019449234
    2. ' continue' → logprob: -2.609269142150879
    3. '       ' → logprob: -3.609269142150879
    4. '   ' → logprob: -6.609269142150879
    5. '           ' → logprob: -6.609269142150879
    6. '	continue' → logprob: -8.859269142150879
    7. '_continue' → logprob: -12.234269142150879
    8. 'contin' → logprob: -12.609269142150879
    9. '               ' → logprob: -12.734269142150879
    10. 'continu' → logprob: -14.734269142150879

Token 209: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01050603948533535
    2. ' for' → logprob: -5.7605061531066895
    3. '        
' → logprob: -6.1355061531066895
    4. '<|end|>' → logprob: -6.2605061531066895
    5. 'for' → logprob: -6.5105061531066895
    6. '
' → logprob: -6.8855061531066895
    7. '   ' → logprob: -7.8855061531066895
    8. ',' → logprob: -9.635505676269531
    9. '```' → logprob: -9.635505676269531
    10. '    
' → logprob: -10.135505676269531

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026817813515663147
    2. ' for' → logprob: -4.151817798614502
    3. 'for' → logprob: -5.401817798614502
    4. '   ' → logprob: -5.651817798614502
    5. '        
' → logprob: -6.151817798614502
    6. '    
' → logprob: -8.65181827545166
    7. '
' → logprob: -8.77681827545166
    8. '<|end|>' → logprob: -10.15181827545166
    9. '```' → logprob: -10.15181827545166
    10. ' 
' → logprob: -10.52681827545166

Token 211: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0737079307436943
    2. 'u' → logprob: -3.6987078189849854
    3. 'top' → logprob: -3.8237078189849854
    4. 'neighbors' → logprob: -4.1987080574035645
    5. 'adj' → logprob: -5.3237080574035645
    6. 'key' → logprob: -6.5737080574035645
    7. 'if' → logprob: -6.9487080574035645
    8. 'neighbor' → logprob: -7.1987080574035645
    9. '   ' → logprob: -7.3237080574035645
    10. 'current' → logprob: -7.6987080574035645

Token 212: ' top' (ID: 2344)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5392925143241882
    2. 'neighbor' → logprob: -2.289292573928833
    3. 'to' → logprob: -3.039292573928833
    4. 'next' → logprob: -3.164292573928833
    5. 'key' → logprob: -3.164292573928833
    6. 'top' → logprob: -3.164292573928833
    7. ' v' → logprob: -3.289292573928833
    8. 'w' → logprob: -3.664292573928833
    9. 'str' → logprob: -4.039292335510254
    10. 'adj' → logprob: -4.289292335510254

Token 213: '_next' (ID: 25436)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.715732753276825
    2. ' in' → logprob: -1.9657328128814697
    3. '_now' → logprob: -2.0907328128814697
    4. '_neighbors' → logprob: -2.2157328128814697
    5. '_str' → logprob: -2.3407328128814697
    6. '_' → logprob: -3.8407328128814697
    7. '_ne' → logprob: -5.090732574462891
    8. '_adj' → logprob: -5.215732574462891
    9. '_next' → logprob: -5.715732574462891
    10. '_id' → logprob: -6.465732574462891

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2523530125617981
    2. 'in' → logprob: -1.5023529529571533
    3. ',' → logprob: -8.377352714538574
    4. ' ' → logprob: -9.377352714538574
    5. 'str' → logprob: -10.252352714538574
    6. '_str' → logprob: -10.502352714538574
    7. '	in' → logprob: -11.002352714538574
    8. '_in' → logprob: -11.252352714538574
    9. '   ' → logprob: -12.127352714538574
    10. '  ' → logprob: -12.752352714538574

Token 215: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.02055053412914276
    2. ' dict' → logprob: -3.895550489425659
    3. 'list' → logprob: -12.645550727844238
    4. '(dict' → logprob: -13.270550727844238
    5. 'range' → logprob: -13.520550727844238
    6. 'str' → logprob: -13.895550727844238
    7. ' ' → logprob: -15.020550727844238
    8. ' range' → logprob: -15.145550727844238
    9. 'd' → logprob: -15.270550727844238
    10. '   ' → logprob: -15.520550727844238

Token 216: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.320199877838604e-07
    2. '_adj' → logprob: -15.0
    3. 'd' → logprob: -18.25
    4. 'adj' → logprob: -18.375
    5. '[str' → logprob: -18.75
    6. '_d' → logprob: -18.875
    7. '_ac' → logprob: -18.875
    8. ''ad' → logprob: -19.625
    9. '"_' → logprob: -19.625
    10. '_top' → logprob: -19.625

Token 217: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0010088731069117785
    2. 'acency' → logprob: -7.251008987426758
    3. 'j' → logprob: -8.126008987426758
    4. 'jc' → logprob: -13.501008987426758
    5. 'js' → logprob: -14.251008987426758
    6. ' adjacency' → logprob: -14.626008987426758
    7. 'dic' → logprob: -15.751008987426758
    8. 'jec' → logprob: -15.876008987426758
    9. 'dict' → logprob: -16.126008987426758
    10. 'yac' → logprob: -17.001008987426758

Token 218: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.034397415816783905
    2. 'acency' → logprob: -3.4093973636627197
    3. 'acy' → logprob: -7.909397602081299
    4. 'ac' → logprob: -8.90939712524414
    5. 'acity' → logprob: -10.15939712524414
    6. 'ancy' → logprob: -10.28439712524414
    7. 'ent' → logprob: -10.90939712524414
    8. '{' → logprob: -11.03439712524414
    9. '_dict' → logprob: -11.03439712524414
    10. 'ENCY' → logprob: -11.15939712524414

Token 219: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. 'str' → logprob: -17.125001907348633
    4. ' [' → logprob: -17.625001907348633
    5. '(str' → logprob: -17.625001907348633
    6. '[s' → logprob: -18.500001907348633
    7. '.get' → logprob: -19.000001907348633
    8. '[f' → logprob: -19.875001907348633
    9. '[
' → logprob: -20.750001907348633
    10. '=str' → logprob: -20.875001907348633

Token 220: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -1.0206720617134124e-05
    2. 'top' → logprob: -11.50001049041748
    3. '[top' → logprob: -16.875009536743164
    4. '	top' → logprob: -19.875009536743164
    5. ' top' → logprob: -20.375009536743164
    6. '(' → logprob: -21.000009536743164
    7. '/top' → logprob: -21.625009536743164
    8. 'Top' → logprob: -21.750009536743164
    9. 'トップ' → logprob: -22.500009536743164
    10. '(t' → logprob: -23.375009536743164

Token 221: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -4.787507714354433e-05
    2. 'now' → logprob: -10.12504768371582
    3. '_next' → logprob: -12.00004768371582
    4. '[now' → logprob: -14.25004768371582
    5. 'Now' → logprob: -14.62504768371582
    6. '(now' → logprob: -16.25004768371582
    7. '_NOW' → logprob: -16.37504768371582
    8. ')_' → logprob: -16.50004768371582
    9. '_top' → logprob: -16.87504768371582
    10. ')' → logprob: -17.50004768371582

Token 222: ')].' (ID: 58800)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4346372187137604
    2. ')]' → logprob: -1.059637188911438
    3. ')].' → logprob: -5.934637069702148
    4. '):' → logprob: -6.684637069702148
    5. ']:' → logprob: -6.934637069702148
    6. ']' → logprob: -7.059637069702148
    7. ']):' → logprob: -9.559637069702148
    8. '])' → logprob: -10.559637069702148
    9. '].' → logprob: -11.184637069702148
    10. '}' → logprob: -11.184637069702148

Token 223: 'keys' (ID: 20817)
  Prédit: 'keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -2.7968066206085496e-05
    2. 'items' → logprob: -10.875027656555176
    3. ' keys' → logprob: -12.000027656555176
    4. '.keys' → logprob: -13.750027656555176
    5. '	keys' → logprob: -13.750027656555176
    6. '_keys' → logprob: -14.500027656555176
    7. '```' → logprob: -16.625028610229492
    8. 'values' → logprob: -17.125028610229492
    9. '<|end|>' → logprob: -17.875028610229492
    10. 'copy' → logprob: -18.625028610229492

Token 224: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012987985974177718
    2. ' ():' → logprob: -9.000129699707031
    3. '()' → logprob: -12.500129699707031
    4. '():
' → logprob: -13.000129699707031
    5. ':' → logprob: -15.375129699707031
    6. '(' → logprob: -15.875129699707031
    7. ' ()' → logprob: -17.62512969970703
    8. '):' → logprob: -17.75012969970703
    9. '():
' → logprob: -18.75012969970703
    10. '():

' → logprob: -19.00012969970703

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06125090271234512
    2. '       ' → logprob: -3.311250925064087
    3. ' ' → logprob: -5.186250686645508
    4. ',' → logprob: -5.436250686645508
    5. ':' → logprob: -5.811250686645508
    6. ' :' → logprob: -6.061250686645508
    7. '        ' → logprob: -6.311250686645508
    8. ' if' → logprob: -6.686250686645508
    9. '               ' → logprob: -7.061250686645508
    10. '<|end|>' → logprob: -7.061250686645508

Token 226: ' top' (ID: 2344)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7759589552879333
    2. ' if' → logprob: -0.7759589552879333
    3. '               ' → logprob: -3.150959014892578
    4. '       ' → logprob: -4.025959014892578
    5. ' new' → logprob: -5.275959014892578
    6. 'if' → logprob: -5.900959014892578
    7. ' cost' → logprob: -6.150959014892578
    8. ' next' → logprob: -6.150959014892578
    9. '0' → logprob: -6.775959014892578
    10. '   ' → logprob: -6.900959014892578

Token 227: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.10731526464223862
    2. '_now' → logprob: -2.7323153018951416
    3. '_num' → logprob: -3.4823153018951416
    4. ' =' → logprob: -6.1073150634765625
    5. '=_' → logprob: -6.4823150634765625
    6. '_' → logprob: -7.6073150634765625
    7. '_int' → logprob: -7.9823150634765625
    8. '=' → logprob: -7.9823150634765625
    9. ' _' → logprob: -8.982315063476562
    10. '_prev' → logprob: -9.107315063476562

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4460700750350952
    2. '=' → logprob: -1.1960700750350952
    3. '_int' → logprob: -2.9460701942443848
    4. '_' → logprob: -6.696070194244385
    5. '_num' → logprob: -6.946070194244385
    6. 'int' → logprob: -7.071070194244385
    7. '=int' → logprob: -7.071070194244385
    8. '_cost' → logprob: -7.946070194244385
    9. ',' → logprob: -8.821069717407227
    10. ' ' → logprob: -8.821069717407227

Token 229: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. '[int' → logprob: -18.251171112060547
    4. '(int' → logprob: -18.501171112060547
    5. '	int' → logprob: -19.126171112060547
    6. '=int' → logprob: -19.251171112060547
    7. '           ' → logprob: -19.876171112060547
    8. '<int' → logprob: -20.126171112060547
    9. '   ' → logprob: -20.376171112060547
    10. ':int' → logprob: -20.501171112060547

Token 230: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. '(
' → logprob: -15.750011444091797
    4. 'top' → logprob: -16.000011444091797
    5. ' (' → logprob: -17.250011444091797
    6. '(next' → logprob: -18.250011444091797
    7. '(str' → logprob: -18.250011444091797
    8. '()' → logprob: -19.125011444091797
    9. '(bottom' → logprob: -19.250011444091797
    10. '[top' → logprob: -19.250011444091797

Token 231: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -6.968934758333489e-05
    2. 'next' → logprob: -9.875069618225098
    3. ')_' → logprob: -12.000069618225098
    4. ')' → logprob: -12.625069618225098
    5. '[next' → logprob: -13.375069618225098
    6. '(next' → logprob: -13.625069618225098
    7. '_now' → logprob: -13.750069618225098
    8. ')]' → logprob: -13.875069618225098
    9. '```' → logprob: -14.875069618225098
    10. ' next' → logprob: -14.875069618225098

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35410276055336
    2. ')
' → logprob: -1.2291027307510376
    3. '           ' → logprob: -5.229102611541748
    4. ')
' → logprob: -9.104103088378906
    5. ' )
' → logprob: -9.854103088378906
    6. ' )' → logprob: -10.104103088378906
    7. ')

' → logprob: -10.479103088378906
    8. '               ' → logprob: -10.479103088378906
    9. '       ' → logprob: -11.479103088378906
    10. '          ' → logprob: -12.854103088378906

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032039734069257975
    2. '            
' → logprob: -6.253203868865967
    3. '       ' → logprob: -8.003204345703125
    4. '
' → logprob: -8.628204345703125
    5. ' if' → logprob: -8.628204345703125
    6. ',' → logprob: -8.628204345703125
    7. '               ' → logprob: -9.253204345703125
    8. 'if' → logprob: -10.003204345703125
    9. ' 
' → logprob: -10.128204345703125
    10. '  
' → logprob: -10.503204345703125

Token 234: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.057535309344530106
    2. '           ' → logprob: -2.932535409927368
    3. ' if' → logprob: -7.057535171508789
    4. 'cost' → logprob: -7.182535171508789
    5. 'new' → logprob: -7.682535171508789
    6. '               ' → logprob: -8.307535171508789
    7. 'weight' → logprob: -8.807535171508789
    8. '       ' → logprob: -10.057535171508789
    9. 'distance' → logprob: -10.307535171508789
    10. '   ' → logprob: -10.432535171508789

Token 235: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.2519756853580475
    2. ' color' → logprob: -1.501975655555725
    3. '   ' → logprob: -10.376976013183594
    4. ' ' → logprob: -12.501976013183594
    5. '(color' → logprob: -12.626976013183594
    6. ' not' → logprob: -12.876976013183594
    7. 'not' → logprob: -13.501976013183594
    8. '	color' → logprob: -13.751976013183594
    9. '    ' → logprob: -14.376976013183594
    10. ' d' → logprob: -14.876976013183594

Token 236: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -2.2200749754119897e-06
    2. ' [' → logprob: -14.125001907348633
    3. '[' → logprob: -14.500001907348633
    4. 'top' → logprob: -14.750001907348633
    5. '[temp' → logprob: -15.750001907348633
    6. '[tmp' → logprob: -16.500001907348633
    7. ' top' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[target' → logprob: -17.375001907348633
    10. '[
' → logprob: -17.625001907348633

Token 237: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.004231785424053669
    2. '_now' → logprob: -5.504231929779053
    3. 'next' → logprob: -8.879231452941895
    4. 'Next' → logprob: -11.754231452941895
    5. '[next' → logprob: -13.004231452941895
    6. '_' → logprob: -13.754231452941895
    7. 'now' → logprob: -14.629231452941895
    8. '_NEXT' → logprob: -14.629231452941895
    9. '```' → logprob: -14.754231452941895
    10. ' next' → logprob: -14.879231452941895

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15816189348697662
    2. '==' → logprob: -2.5331618785858154
    3. ' ==' → logprob: -3.1581618785858154
    4. ']==' → logprob: -4.1581621170043945
    5. '!=' → logprob: -5.7831621170043945
    6. ' !=' → logprob: -5.9081621170043945
    7. ' ]' → logprob: -6.1581621170043945
    8. ']!=' → logprob: -7.4081621170043945
    9. ' ' → logprob: -9.533162117004395
    10. ')' → logprob: -10.158162117004395

Token 239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07277044653892517
    2. '!=' → logprob: -2.822770357131958
    3. ' ==' → logprob: -4.697770595550537
    4. ' !=' → logprob: -6.447770595550537
    5. '=' → logprob: -11.197770118713379
    6. ' ' → logprob: -11.697770118713379
    7. '==
' → logprob: -12.197770118713379
    8. '```' → logprob: -12.572770118713379
    9. 'in' → logprob: -12.822770118713379
    10. ']==' → logprob: -12.822770118713379

Token 240: ' BLACK' (ID: 71730)
  Prédit: 'BLACK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLACK' → logprob: -0.07917486876249313
    2. 'WHITE' → logprob: -2.579174757003784
    3. ' BLACK' → logprob: -8.329174995422363
    4. ' WHITE' → logprob: -10.329174995422363
    5. 'GRAY' → logprob: -11.829174995422363
    6. '_BLACK' → logprob: -13.454174995422363
    7. '.BLACK' → logprob: -14.329174995422363
    8. ' ' → logprob: -14.954174995422363
    9. 'Black' → logprob: -14.954174995422363
    10. 'black' → logprob: -15.454174995422363

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11043936759233475
    2. ':
' → logprob: -2.7354393005371094
    3. ' or' → logprob: -3.3604393005371094
    4. '               ' → logprob: -5.610439300537109
    5. ' and' → logprob: -6.985439300537109
    6. '           ' → logprob: -8.86043930053711
    7. ' continue' → logprob: -9.61043930053711
    8. ':return' → logprob: -10.36043930053711
    9. ' :' → logprob: -10.61043930053711
    10. 'continue' → logprob: -10.86043930053711

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03473217040300369
    2. ' continue' → logprob: -3.4097321033477783
    3. 'continue' → logprob: -8.1597318649292
    4. '           ' → logprob: -8.5347318649292
    5. ':
' → logprob: -8.5347318649292
    6. ':' → logprob: -8.7847318649292
    7. ' continues' → logprob: -10.1597318649292
    8. '   ' → logprob: -10.7847318649292
    9. '<|end|>' → logprob: -10.7847318649292
    10. ',' → logprob: -11.1597318649292

Token 243: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.18553172051906586
    2. '               ' → logprob: -2.3105316162109375
    3. 'continue' (adapté à ' continue') → logprob: -2.8105316162109375
    4. '                   ' → logprob: -4.6855316162109375
    5. '	continue' → logprob: -8.060531616210938
    6. '           ' → logprob: -8.185531616210938
    7. '   ' → logprob: -10.060531616210938
    8. '                       ' → logprob: -10.560531616210938
    9. '_continue' → logprob: -10.560531616210938
    10. '       ' → logprob: -11.060531616210938

Token 244: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09586585313081741
    2. '            
' → logprob: -2.5958659648895264
    3. ' 
' → logprob: -4.970865726470947
    4. '  
' → logprob: -5.595865726470947
    5. '<|end|>' → logprob: -6.595865726470947
    6. '
' → logprob: -7.095865726470947
    7. '           
' → logprob: -7.345865726470947
    8. '       ' → logprob: -7.595865726470947
    9. '        
' → logprob: -7.845865726470947
    10. '   
' → logprob: -7.845865726470947

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022105619311332703
    2. '            
' → logprob: -4.272105693817139
    3. '
' → logprob: -5.272105693817139
    4. '       ' → logprob: -6.272105693817139
    5. '          ' → logprob: -8.77210521697998
    6. '        
' → logprob: -9.02210521697998
    7. '               ' → logprob: -9.27210521697998
    8. '    
' → logprob: -9.39710521697998
    9. '```' → logprob: -9.39710521697998
    10. 'if' → logprob: -9.52210521697998

Token 246: ' cost' (ID: 3097)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.30575281381607056
    2. 'cost' (adapté à ' cost') → logprob: -1.9307527542114258
    3. 'if' → logprob: -3.055752754211426
    4. 'next' → logprob: -4.055752754211426
    5. 'weight' → logprob: -4.055752754211426
    6. 'distance' → logprob: -5.055752754211426
    7. 'nd' → logprob: -5.555752754211426
    8. 'dist' → logprob: -5.680752754211426
    9. '           ' → logprob: -5.805752754211426
    10. 'tent' → logprob: -5.930752754211426

Token 247: '_next' (ID: 25436)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4020249545574188
    2. '_now' → logprob: -1.7770249843597412
    3. '_next' → logprob: -2.152024984359741
    4. '=' → logprob: -3.402024984359741
    5. '_new' → logprob: -4.527024745941162
    6. '   ' → logprob: -8.40202522277832
    7. '_' → logprob: -9.02702522277832
    8. ',' → logprob: -9.02702522277832
    9. '_current' → logprob: -9.02702522277832
    10. 's' → logprob: -9.15202522277832

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490778014063835
    2. '=' → logprob: -2.92990779876709
    3. ',' → logprob: -10.80490779876709
    4. '            ' → logprob: -13.55490779876709
    5. ' ' → logprob: -14.30490779876709
    6. '           ' → logprob: -14.42990779876709
    7. '    ' → logprob: -14.42990779876709
    8. '                ' → logprob: -15.05490779876709
    9. ')' → logprob: -15.17990779876709
    10. '   ' → logprob: -15.30490779876709

Token 249: ' d' (ID: 272)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5711494088172913
    2. 'd' → logprob: -0.9461494088172913
    3. ' cost' → logprob: -3.3211493492126465
    4. ' d' → logprob: -4.5711493492126465
    5. '   ' → logprob: -8.196149826049805
    6. 'dict' → logprob: -10.071149826049805
    7. '           ' → logprob: -10.571149826049805
    8. '    ' → logprob: -10.946149826049805
    9. '               ' → logprob: -11.571149826049805
    10. ' ' → logprob: -11.571149826049805

Token 250: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.375001907348633
    3. 'top' → logprob: -15.375001907348633
    4. ' [' → logprob: -16.625001907348633
    5. '[target' → logprob: -17.250001907348633
    6. '(top' → logprob: -17.375001907348633
    7. '	top' → logprob: -17.875001907348633
    8. '[
' → logprob: -18.125001907348633
    9. '[tmp' → logprob: -18.125001907348633
    10. ' top' → logprob: -19.000001907348633

Token 251: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.06996822357177734
    2. '_next' → logprob: -2.6949682235717773
    3. 'now' → logprob: -11.194968223571777
    4. 'Now' → logprob: -12.194968223571777
    5. '_top' → logprob: -12.444968223571777
    6. '_' → logprob: -13.194968223571777
    7. 'next' → logprob: -13.694968223571777
    8. '_cost' → logprob: -13.819968223571777
    9. '```' → logprob: -13.819968223571777
    10. ']' → logprob: -14.694968223571777

Token 252: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519943118095398
    2. '+' → logprob: -1.5019943714141846
    3. ')' → logprob: -10.376994132995605
    4. ']' → logprob: -11.001994132995605
    5. ']+' → logprob: -12.251994132995605
    6. ')+' → logprob: -12.376994132995605
    7. ' ' → logprob: -13.376994132995605
    8. ' plus' → logprob: -13.626994132995605
    9. ' +
' → logprob: -14.001994132995605
    10. ',' → logprob: -14.251994132995605

Token 253: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022716462612152
    2. ' +' → logprob: -1.9102271795272827
    3. '+
' → logprob: -13.785226821899414
    4. '+d' → logprob: -14.035226821899414
    5. '+c' → logprob: -14.910226821899414
    6. ' +
' → logprob: -15.660226821899414
    7. ' plus' → logprob: -16.035226821899414
    8. '+self' → logprob: -16.035226821899414
    9. '＋' → logprob: -16.285226821899414
    10. '+r' → logprob: -17.035226821899414

Token 254: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.05703064799308777
    2. ' dict' → logprob: -2.93203067779541
    3. 'int' → logprob: -6.18203067779541
    4. ' int' → logprob: -9.55703067779541
    5. '           ' → logprob: -12.30703067779541
    6. 'd' → logprob: -13.68203067779541
    7. '               ' → logprob: -13.80703067779541
    8. '   ' → logprob: -14.30703067779541
    9. '(dict' → logprob: -14.80703067779541
    10. '                   ' → logprob: -15.30703067779541

Token 255: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.9361264946837764e-07
    2. 'dict' → logprob: -16.5
    3. '_adj' → logprob: -16.5
    4. 'd' → logprob: -17.0
    5. 'ad' → logprob: -18.0
    6. 'adj' → logprob: -19.375
    7. '[' → logprob: -19.75
    8. '-ad' → logprob: -20.125
    9. 'import' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 256: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00019066639652010053
    2. 'j' → logprob: -8.875190734863281
    3. 'acency' → logprob: -10.125190734863281
    4. 'adj' → logprob: -11.750190734863281
    5. 'jc' → logprob: -14.250190734863281
    6. 'dict' → logprob: -14.500190734863281
    7. 'ac' → logprob: -15.000190734863281
    8. '[' → logprob: -15.375190734863281
    9. 'js' → logprob: -15.625190734863281
    10. 'd' → logprob: -16.00019073486328

Token 257: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.6342331767082214
    2. 'acency' → logprob: -0.7592331767082214
    3. 'cy' → logprob: -7.509232997894287
    4. 'ac' → logprob: -8.009233474731445
    5. 'd' → logprob: -8.509233474731445
    6. 'acy' → logprob: -8.759233474731445
    7. 'c' → logprob: -9.259233474731445
    8. 'ancy' → logprob: -9.384233474731445
    9. 'n' → logprob: -10.259233474731445
    10. 't' → logprob: -10.384233474731445

Token 258: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. 'str' → logprob: -16.0
    3. '[' → logprob: -16.25
    4. ' [' → logprob: -18.0
    5. '[s' → logprob: -18.625
    6. '[
' → logprob: -19.125
    7. '$str' → logprob: -20.625
    8. '[string' → logprob: -20.625
    9. '[f' → logprob: -20.625
    10. '(str' → logprob: -20.75

Token 259: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.004082909319549799
    2. 'top' → logprob: -5.504082679748535
    3. '[top' → logprob: -12.379082679748535
    4. ' top' → logprob: -15.879082679748535
    5. '	top' → logprob: -16.25408363342285
    6. '(' → logprob: -17.12908363342285
    7. '/top' → logprob: -18.12908363342285
    8. '(
' → logprob: -18.87908363342285
    9. '   ' → logprob: -19.75408363342285
    10. '(str' → logprob: -20.37908363342285

Token 260: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0017668125219643116
    2. '_next' → logprob: -6.501766681671143
    3. 'now' → logprob: -8.2517671585083
    4. 'Now' → logprob: -13.1267671585083
    5. 'next' → logprob: -13.5017671585083
    6. '[now' → logprob: -16.001766204833984
    7. '_NOW' → logprob: -16.876766204833984
    8. '```' → logprob: -17.251766204833984
    9. '.now' → logprob: -17.501766204833984
    10. '	now' → logprob: -17.751766204833984

Token 261: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013969031861051917
    2. ')][' → logprob: -7.126397132873535
    3. '[str' → logprob: -8.126397132873535
    4. ')[' → logprob: -9.376397132873535
    5. '"][' → logprob: -9.751397132873535
    6. '[' → logprob: -9.876397132873535
    7. ''][' → logprob: -10.001397132873535
    8. ']' → logprob: -10.251397132873535
    9. ' ][' → logprob: -11.376397132873535
    10. ']][' → logprob: -12.626397132873535

Token 262: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0001443035143893212
    2. 'top' → logprob: -9.375144004821777
    3. ' str' → logprob: -9.750144004821777
    4. '[str' → logprob: -14.500144004821777
    5. '(str' → logprob: -14.875144004821777
    6. 'st' → logprob: -15.625144004821777
    7. '	str' → logprob: -17.375144958496094
    8. 's' → logprob: -17.625144958496094
    9. 'tr' → logprob: -18.000144958496094
    10. ' top' → logprob: -18.125144958496094

Token 263: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.2014150768518448
    2. 'top' → logprob: -1.7014150619506836
    3. ' top' → logprob: -13.576415061950684
    4. '[top' → logprob: -14.951415061950684
    5. '	top' → logprob: -15.326415061950684
    6. '_top' → logprob: -18.576416015625
    7. 'Top' → logprob: -19.076416015625
    8. '(next' → logprob: -19.826416015625
    9. 'トップ' → logprob: -20.826416015625
    10. '(' → logprob: -21.201416015625

Token 264: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0002108118060277775
    2. 'next' → logprob: -8.500210762023926
    3. 'Next' → logprob: -12.250210762023926
    4. '_now' → logprob: -13.500210762023926
    5. '(next' → logprob: -14.750210762023926
    6. '[next' → logprob: -14.750210762023926
    7. ' next' → logprob: -16.375211715698242
    8. '```' → logprob: -16.500211715698242
    9. '	next' → logprob: -16.750211715698242
    10. ')_' → logprob: -17.000211715698242

Token 265: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.205179825425148
    2. '])' → logprob: -1.7051798105239868
    3. ')])' → logprob: -5.705179691314697
    4. ')' → logprob: -8.580180168151855
    5. ']' → logprob: -9.580180168151855
    6. ')]
' → logprob: -9.705180168151855
    7. '])]' → logprob: -9.955180168151855
    8. '])
' → logprob: -10.080180168151855
    9. ' ])' → logprob: -11.455180168151855
    10. ')])
' → logprob: -12.455180168151855

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02245292440056801
    2. '
' → logprob: -4.7724528312683105
    3. '            
' → logprob: -5.0224528312683105
    4. '<|end|>' → logprob: -5.6474528312683105
    5. '       ' → logprob: -7.0224528312683105
    6. '  
' → logprob: -7.1474528312683105
    7. ' 
' → logprob: -8.147453308105469
    8. '               ' → logprob: -8.272453308105469
    9. '    
' → logprob: -8.397453308105469
    10. '   ' → logprob: -8.397453308105469

Token 267: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43286818265914917
    2. ' if' → logprob: -1.682868242263794
    3. 'if' (adapté à ' if') → logprob: -1.807868242263794
    4. '       ' → logprob: -7.557868003845215
    5. '   ' → logprob: -8.307868003845215
    6. ' ' → logprob: -8.432868003845215
    7. '            
' → logprob: -8.557868003845215
    8. '               ' → logprob: -9.182868003845215
    9. '	if' → logprob: -9.682868003845215
    10. '          ' → logprob: -10.307868003845215

Token 268: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.0756470188498497
    2. 'cost' → logprob: -2.7006471157073975
    3. ' d' → logprob: -5.450646877288818
    4. 'd' → logprob: -6.575646877288818
    5. '(cost' → logprob: -12.950647354125977
    6. '   ' → logprob: -14.325647354125977
    7. '_cost' → logprob: -14.575647354125977
    8. '               ' → logprob: -14.700647354125977
    9. ' ' → logprob: -14.700647354125977
    10. '    ' → logprob: -14.825647354125977

Token 269: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.005237906239926815
    2. '[next' → logprob: -5.255238056182861
    3. 'next' → logprob: -13.755237579345703
    4. '_now' → logprob: -13.880237579345703
    5. '[top' → logprob: -14.505237579345703
    6. ' next' → logprob: -14.630237579345703
    7. '[' → logprob: -14.755237579345703
    8. '_NEXT' → logprob: -15.755237579345703
    9. 'Next' → logprob: -15.755237579345703
    10. '```' → logprob: -16.255237579345703

Token 270: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01611049845814705
    2. '<' → logprob: -4.141110420227051
    3. '<|end|>' → logprob: -10.01611042022705
    4. ' ' → logprob: -12.14111042022705
    5. '[' → logprob: -12.51611042022705
    6. ' <",' → logprob: -12.76611042022705
    7. '<int' → logprob: -13.01611042022705
    8. ')' → logprob: -13.14111042022705
    9. '   ' → logprob: -13.14111042022705
    10. ' >=' → logprob: -13.26611042022705

Token 271: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47407761216163635
    2. ' d' → logprob: -0.974077582359314
    3. '	d' → logprob: -16.099077224731445
    4. '   ' → logprob: -16.599077224731445
    5. '
' → logprob: -16.599077224731445
    6. ' ' → logprob: -16.724077224731445
    7. ' ' → logprob: -16.724077224731445
    8. '           ' → logprob: -16.724077224731445
    9. ')d' → logprob: -16.849077224731445
    10. '=' → logprob: -17.599077224731445

Token 272: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.9361264946837764e-07
    2. 'top' → logprob: -16.375
    3. '[next' → logprob: -16.625
    4. '[' → logprob: -18.5
    5. '[tmp' → logprob: -18.625
    6. '[target' → logprob: -18.875
    7. '(top' → logprob: -18.875
    8. '[
' → logprob: -19.5
    9. ' [' → logprob: -19.5
    10. ' top' → logprob: -19.75

Token 273: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0015510482480749488
    2. 'next' → logprob: -6.501551151275635
    3. '[next' → logprob: -10.126550674438477
    4. 'Next' → logprob: -11.876550674438477
    5. ' next' → logprob: -13.751550674438477
    6. '(next' → logprob: -14.876550674438477
    7. '```' → logprob: -16.376550674438477
    8. '	next' → logprob: -16.376550674438477
    9. '.next' → logprob: -16.501550674438477
    10. '_NEXT' → logprob: -17.501550674438477

Token 274: ']:
' (ID: 22152)
  Prédit: '[top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -0.008225536905229092
    2. ':' → logprob: -5.133225440979004
    3. '[next' → logprob: -6.508225440979004
    4. ']:' → logprob: -7.883225440979004
    5. ':
' → logprob: -8.633225440979004
    6. ']:
' → logprob: -9.258225440979004
    7. '):' → logprob: -9.633225440979004
    8. '):
' → logprob: -10.008225440979004
    9. '[' → logprob: -11.008225440979004
    10. '       ' → logprob: -12.133225440979004

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010229245526716113
    2. ' d' → logprob: -8.126023292541504
    3. ':
' → logprob: -8.251023292541504
    4. '           ' → logprob: -9.251023292541504
    5. ':' → logprob: -9.501023292541504
    6. '                
' → logprob: -9.501023292541504
    7. '):
' → logprob: -9.626023292541504
    8. '                   ' → logprob: -10.376023292541504
    9. '                               ' → logprob: -11.376023292541504
    10. '                       ' → logprob: -11.376023292541504

Token 276: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0060651907697319984
    2. '               ' → logprob: -5.381065368652344
    3. 'd' (adapté à ' d') → logprob: -6.631065368652344
    4. '                   ' → logprob: -9.631065368652344
    5. '                ' → logprob: -10.006065368652344
    6. '                
' → logprob: -12.756065368652344
    7. '           ' → logprob: -13.256065368652344
    8. ' cost' → logprob: -13.506065368652344
    9. '   ' → logprob: -13.631065368652344
    10. ' ' → logprob: -13.881065368652344

Token 277: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.9027791495318525e-05
    2. '[next' → logprob: -11.000019073486328
    3. '[' → logprob: -13.500019073486328
    4. '[tmp' → logprob: -15.500019073486328
    5. '[to' → logprob: -15.875019073486328
    6. '[target' → logprob: -15.875019073486328
    7. 'top' → logprob: -16.375019073486328
    8. '_top' → logprob: -16.500019073486328
    9. '[token' → logprob: -16.625019073486328
    10. '[temp' → logprob: -16.750019073486328

Token 278: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00028648413717746735
    2. '[next' → logprob: -8.500286102294922
    3. 'next' → logprob: -9.500286102294922
    4. 'Next' → logprob: -12.250286102294922
    5. '```' → logprob: -14.500286102294922
    6. '	next' → logprob: -15.000286102294922
    7. '(next' → logprob: -15.000286102294922
    8. '               ' → logprob: -15.125286102294922
    9. ' next' → logprob: -15.125286102294922
    10. '_NEXT' → logprob: -15.125286102294922

Token 279: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20545418560504913
    2. '=' → logprob: -1.7054542303085327
    3. ']' → logprob: -5.580454349517822
    4. ')' → logprob: -8.580453872680664
    5. ']=' → logprob: -9.830453872680664
    6. ',' → logprob: -11.830453872680664
    7. ' =
' → logprob: -12.580453872680664
    8. '[' → logprob: -13.080453872680664
    9. ')=' → logprob: -13.205453872680664
    10. '<|end|>' → logprob: -13.330453872680664

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759398937225342
    2. '=' → logprob: -0.8259398937225342
    3. '＝' → logprob: -15.075940132141113
    4. '.=' → logprob: -16.825939178466797
    5. ' =
' → logprob: -17.075939178466797
    6. ',' → logprob: -17.075939178466797
    7. '=
' → logprob: -17.200939178466797
    8. '=

' → logprob: -17.325939178466797
    9. '=cut' → logprob: -19.075939178466797
    10. ' =
' → logprob: -19.075939178466797

Token 281: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.07888989895582199
    2. 'cost' → logprob: -2.578889846801758
    3. '(cost' → logprob: -16.703889846801758
    4. '               ' → logprob: -18.703889846801758
    5. 'Cost' → logprob: -18.953889846801758
    6. '_cost' → logprob: -19.328889846801758
    7. '.cost' → logprob: -19.578889846801758
    8. ' kost' → logprob: -19.578889846801758
    9. '                   ' → logprob: -19.953889846801758
    10. ' ' → logprob: -20.328889846801758

Token 282: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -2.9040898880339228e-05
    2. 'next' → logprob: -11.500028610229492
    3. '[next' → logprob: -11.625028610229492
    4. '_cost' → logprob: -12.375028610229492
    5. 'Next' → logprob: -12.875028610229492
    6. 'cost' → logprob: -12.875028610229492
    7. '_NEXT' → logprob: -15.375028610229492
    8. ' next' → logprob: -16.000028610229492
    9. '```' → logprob: -16.750028610229492
    10. '               ' → logprob: -17.125028610229492

Token 283: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.790129555156454e-05
    2. '			' → logprob: -10.750067710876465
    3. '<|end|>' → logprob: -10.875067710876465
    4. '                
' → logprob: -11.375067710876465
    5. '       ' → logprob: -12.750067710876465
    6. '              ' → logprob: -13.125067710876465
    7. '		       ' → logprob: -13.125067710876465
    8. 'heap' → logprob: -13.375067710876465
    9. '(heap' → logprob: -13.500067710876465
    10. '           ' → logprob: -13.625067710876465

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017505438881926239
    2. 'heap' → logprob: -9.625175476074219
    3. '(heap' → logprob: -10.250175476074219
    4. ' heap' → logprob: -10.375175476074219
    5. '```' → logprob: -11.500175476074219
    6. '              ' → logprob: -11.500175476074219
    7. '           ' → logprob: -12.125175476074219
    8. '                
' → logprob: -12.750175476074219
    9. '       ' → logprob: -12.750175476074219
    10. '<|end|>' → logprob: -13.000175476074219

Token 285: ' color' (ID: 3089)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.15105247497558594
    2. 'color' (adapté à ' color') → logprob: -2.526052474975586
    3. ' heap' → logprob: -3.026052474975586
    4. '               ' → logprob: -5.151052474975586
    5. ' color' → logprob: -5.151052474975586
    6. '           ' → logprob: -10.026052474975586
    7. '                   ' → logprob: -10.026052474975586
    8. '   ' → logprob: -11.276052474975586
    9. '(heap' → logprob: -12.151052474975586
    10. '```' → logprob: -12.276052474975586

Token 286: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.375001907348633
    3. '[temp' → logprob: -14.625001907348633
    4. '[tmp' → logprob: -15.375001907348633
    5. '[target' → logprob: -16.125001907348633
    6. '[next' → logprob: -16.375001907348633
    7. ' [' → logprob: -16.375001907348633
    8. '[token' → logprob: -17.000001907348633
    9. '[to' → logprob: -17.125001907348633
    10. '[parent' → logprob: -18.000001907348633

Token 287: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.01720185950398445
    2. '[next' → logprob: -4.142201900482178
    3. 'next' → logprob: -6.767201900482178
    4. 'Next' → logprob: -12.39220142364502
    5. ' next' → logprob: -12.64220142364502
    6. '[top' → logprob: -13.01720142364502
    7. '               ' → logprob: -13.39220142364502
    8. '```' → logprob: -13.64220142364502
    9. '                   ' → logprob: -14.39220142364502
    10. '[' → logprob: -14.39220142364502

Token 288: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4050882160663605
    2. '=' → logprob: -1.280088186264038
    3. ']' → logprob: -2.905088186264038
    4. ']=' → logprob: -8.155088424682617
    5. ')' → logprob: -11.155088424682617
    6. ' ]' → logprob: -11.905088424682617
    7. '<|end|>' → logprob: -12.030088424682617
    8. ' ' → logprob: -12.280088424682617
    9. '[' → logprob: -12.780088424682617
    10. '}' → logprob: -14.530088424682617

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -16.578889846801758
    4. ' ' → logprob: -16.828889846801758
    5. '=

' → logprob: -17.328889846801758
    6. '=
' → logprob: -17.578889846801758
    7. '[' → logprob: -18.203889846801758
    8. '```' → logprob: -18.703889846801758
    9. '<|end|>' → logprob: -19.328889846801758
    10. '=}' → logprob: -19.703889846801758

Token 290: ' GR' (ID: 19142)
  Prédit: 'GRAY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GRAY' → logprob: -7.815280696377158e-05
    2. 'GR' → logprob: -9.500078201293945
    3. ' GR' → logprob: -12.875078201293945
    4. '.GRAY' → logprob: -14.625078201293945
    5. '_GRAY' → logprob: -15.500078201293945
    6. ' ' → logprob: -17.500078201293945
    7. 'GRE' → logprob: -18.000078201293945
    8. 'WHITE' → logprob: -18.000078201293945
    9. 'Gray' → logprob: -18.125078201293945
    10. 'GRAM' → logprob: -18.250078201293945

Token 291: 'AY' (ID: 4751)
  Prédit: 'AY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -3.128163257315464e-07
    2. 'EY' → logprob: -15.25
    3. 'ay' → logprob: -17.75
    4. 'Ay' → logprob: -18.25
    5. 'A' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. ' AY' → logprob: -19.125
    8. '
' → logprob: -19.625
    9. 'AYS' → logprob: -20.0
    10. 'GRAY' → logprob: -20.875

Token 292: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022290023043751717
    2. '                
' → logprob: -6.6272292137146
    3. '                   ' → logprob: -8.502228736877441
    4. '                ' → logprob: -9.002228736877441
    5. '
' → logprob: -9.377228736877441
    6. '           ' → logprob: -9.627228736877441
    7. '       ' → logprob: -9.752228736877441
    8. '              ' → logprob: -10.127228736877441
    9. '(heap' → logprob: -10.127228736877441
    10. 'heap' → logprob: -10.377228736877441

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016230528708547354
    2. ' heap' → logprob: -7.126623153686523
    3. '(heap' → logprob: -7.751623153686523
    4. 'heap' → logprob: -8.751623153686523
    5. '                
' → logprob: -9.501623153686523
    6. '              ' → logprob: -10.251623153686523
    7. ',' → logprob: -10.501623153686523
    8. '                   ' → logprob: -10.751623153686523
    9. '           ' → logprob: -10.876623153686523
    10. '       ' → logprob: -11.126623153686523

Token 294: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0031953046564012766
    2. ' heap' → logprob: -5.753195285797119
    3. '               ' → logprob: -11.003195762634277
    4. '```' → logprob: -14.628195762634277
    5. '(heap' → logprob: -15.378195762634277
    6. '                   ' → logprob: -15.878195762634277
    7. '           ' → logprob: -16.50319480895996
    8. '   ' → logprob: -17.12819480895996
    9. '.heap' → logprob: -18.25319480895996
    10. '``' → logprob: -19.00319480895996

Token 295: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. 'h' → logprob: -17.625
    4. '[' → logprob: -17.75
    5. '               ' → logprob: -18.25
    6. '.push' → logprob: -18.25
    7. 'p' → logprob: -18.25
    8. '.he' → logprob: -18.75
    9. '[q' → logprob: -18.75
    10. 'he' → logprob: -19.125

Token 296: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.68022444692906e-05
    2. 'q' → logprob: -11.125046730041504
    3. '.' → logprob: -11.500046730041504
    4. 'he' → logprob: -12.000046730041504
    5. '.heap' → logprob: -12.000046730041504
    6. ' .' → logprob: -13.000046730041504
    7. 'app' → logprob: -13.375046730041504
    8. '```' → logprob: -13.500046730041504
    9. ').' → logprob: -14.125046730041504
    10. 'ush' → logprob: -14.125046730041504

Token 297: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.2200749754119897e-06
    2. 'ap' → logprob: -13.750001907348633
    3. 'pp' → logprob: -13.875001907348633
    4. 'push' → logprob: -16.000001907348633
    5. '```' → logprob: -17.500001907348633
    6. 'a' → logprob: -17.625001907348633
    7. 'appe' → logprob: -18.500001907348633
    8. '_app' → logprob: -18.500001907348633
    9. '...' → logprob: -18.625001907348633
    10. '[' → logprob: -18.875001907348633

Token 298: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0024894531816244125
    2. 'push' → logprob: -6.0024895668029785
    3. 'app' → logprob: -11.62748908996582
    4. 'sh' → logprob: -13.25248908996582
    5. 'pp' → logprob: -13.62748908996582
    6. 'p' → logprob: -13.87748908996582
    7. 'he' → logprob: -14.62748908996582
    8. 'h' → logprob: -15.50248908996582
    9. '```' → logprob: -15.87748908996582
    10. 's' → logprob: -17.50248908996582

Token 299: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '	h' → logprob: -16.375001907348633
    4. 'h' → logprob: -17.875001907348633
    5. ' h' → logprob: -18.500001907348633
    6. ',h' → logprob: -18.625001907348633
    7. ' (' → logprob: -18.875001907348633
    8. '(
' → logprob: -18.875001907348633
    9. '/h' → logprob: -20.125001907348633
    10. '```' → logprob: -20.375001907348633

Token 300: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.12910844385623932
    2. ',' → logprob: -2.379108428955078
    3. '(' → logprob: -3.879108428955078
    4. ' (' → logprob: -4.879108428955078
    5. ',(' → logprob: -10.004108428955078
    6. ' ,' → logprob: -10.004108428955078
    7. ')' → logprob: -10.129108428955078
    8. '(heap' → logprob: -10.629108428955078
    9. '               ' → logprob: -11.504108428955078
    10. ',h' → logprob: -11.629108428955078

Token 301: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12700413167476654
    2. '(cost' → logprob: -2.1270041465759277
    3. '(c' → logprob: -10.25200366973877
    4. '(d' → logprob: -10.75200366973877
    5. '(' → logprob: -10.87700366973877
    6. '   ' → logprob: -15.50200366973877
    7. ' ' → logprob: -15.87700366973877
    8. '(C' → logprob: -17.252004623413086
    9. '(dist' → logprob: -17.502004623413086
    10. ' ' → logprob: -17.627004623413086

Token 302: 'd' (ID: 67)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0003241414960939437
    2. ' cost' → logprob: -8.500324249267578
    3. 'd' → logprob: -9.125324249267578
    4. '(cost' → logprob: -11.375324249267578
    5. ' d' → logprob: -15.500324249267578
    6. 'co' → logprob: -16.375324249267578
    7. '   ' → logprob: -17.500324249267578
    8. 'cos' → logprob: -17.500324249267578
    9. '
' → logprob: -19.125324249267578
    10. '_cost' → logprob: -19.375324249267578

Token 303: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -0.003235344309359789
    2. '[next' → logprob: -5.753235340118408
    3. '_cost' → logprob: -10.503235816955566
    4. '_next' → logprob: -11.128235816955566
    5. '_top' → logprob: -11.503235816955566
    6. '[c' → logprob: -13.003235816955566
    7. 'cost' → logprob: -13.753235816955566
    8. '[' → logprob: -15.003235816955566
    9. '(top' → logprob: -15.128235816955566
    10. ' [' → logprob: -15.128235816955566

Token 304: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0001017551330733113
    2. '[next' → logprob: -9.375102043151855
    3. 'next' → logprob: -11.125102043151855
    4. 'Next' → logprob: -13.500102043151855
    5. '               ' → logprob: -15.500102043151855
    6. '_now' → logprob: -16.12510108947754
    7. ' next' → logprob: -16.25010108947754
    8. '```' → logprob: -16.37510108947754
    9. '_NEXT' → logprob: -16.62510108947754
    10. '                   ' → logprob: -17.12510108947754

Token 305: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. '],' → logprob: -10.75003433227539
    3. '[top' → logprob: -12.00003433227539
    4. ' ,' → logprob: -12.50003433227539
    5. '),' → logprob: -13.25003433227539
    6. '[' → logprob: -15.00003433227539
    7. '‌,' → logprob: -16.00003433227539
    8. ',
' → logprob: -16.00003433227539
    9. '},' → logprob: -16.87503433227539
    10. ']' → logprob: -17.00003433227539

Token 306: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.31326326727867126
    2. 'top' → logprob: -1.3132632970809937
    3. '[top' → logprob: -14.188262939453125
    4. '	top' → logprob: -14.688262939453125
    5. '(top' → logprob: -14.938262939453125
    6. '_top' → logprob: -17.688262939453125
    7. ' ' → logprob: -17.688262939453125
    8. ' топ' → logprob: -17.938262939453125
    9. 'Top' → logprob: -18.313262939453125
    10. ' 
' → logprob: -18.813262939453125

Token 307: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.0280383548888494e-06
    2. 'next' → logprob: -14.375000953674316
    3. '_' → logprob: -16.125001907348633
    4. 'Next' → logprob: -16.375001907348633
    5. '[next' → logprob: -16.625001907348633
    6. '_NEXT' → logprob: -17.125001907348633
    7. ' next' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. '_n' → logprob: -18.125001907348633
    10. '(next' → logprob: -19.375001907348633

Token 308: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011152864433825016
    2. ')' → logprob: -4.511152744293213
    3. '))
' → logprob: -9.261153221130371
    4. '               ' → logprob: -12.511153221130371
    5. ')))' → logprob: -13.011153221130371
    6. '           ' → logprob: -13.261153221130371
    7. ')
' → logprob: -13.886153221130371
    8. '       ' → logprob: -14.261153221130371
    9. ' ))' → logprob: -15.011153221130371
    10. '   ' → logprob: -15.636153221130371

Token 309: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31078478693962097
    2. ')' → logprob: -2.3107848167419434
    3. 'for' → logprob: -2.6857848167419434
    4. '#' → logprob: -3.4357848167419434
    5. '<|end|>' → logprob: -3.5607848167419434
    6. 'return' → logprob: -4.060784816741943
    7. 'n' → logprob: -5.185784816741943
    8. '   ' → logprob: -5.935784816741943
    9. ' for' → logprob: -6.060784816741943
    10. ' ' → logprob: -6.560784816741943

Token 310: 'ijkstra' (ID: 124290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '(top' (ID: 42605)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001887591351987794
    2. '0' → logprob: -9.250188827514648
    3. '(n' → logprob: -10.250188827514648
    4. ' (' → logprob: -10.500188827514648
    5. '(int' → logprob: -11.250188827514648
    6. '(
' → logprob: -11.500188827514648
    7. '(top' → logprob: -13.500188827514648
    8. ')' → logprob: -14.125188827514648
    9. '(

' → logprob: -14.125188827514648
    10. '<|end|>' → logprob: -14.250188827514648

Token 312: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00010509284038562328
    2. '_' → logprob: -9.500104904174805
    3. 'start' → logprob: -10.875104904174805
    4. '0' → logprob: -12.375104904174805
    5. '(' → logprob: -13.500104904174805
    6. '_START' → logprob: -13.750104904174805
    7. '_s' → logprob: -14.250104904174805
    8. 'Start' → logprob: -14.375104904174805
    9. '(start' → logprob: -14.625104904174805
    10. ')' → logprob: -14.625104904174805

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07701202481985092
    2. ')' → logprob: -3.077012062072754
    3. '(' → logprob: -3.702012062072754
    4. ' =' → logprob: -6.077012062072754
    5. '0' → logprob: -7.327012062072754
    6. '[' → logprob: -9.077012062072754
    7. ' )' → logprob: -9.952012062072754
    8. ')
' → logprob: -10.202012062072754
    9. '(
' → logprob: -10.327012062072754
    10. ',' → logprob: -10.702012062072754

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.721228368813172e-05
    2. ' ' → logprob: -9.375086784362793
    3. ')' → logprob: -13.625086784362793
    4. '   ' → logprob: -14.562586784362793
    5. '1' → logprob: -16.18758773803711
    6. 'int' → logprob: -16.62508773803711
    7. 's' → logprob: -16.81258773803711
    8. '۰' → logprob: -16.81258773803711
    9. '<|end|>' → logprob: -17.31258773803711
    10. '(' → logprob: -17.50008773803711

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.187524795532227
    4. 's' → logprob: -17.250024795532227
    5. 'int' → logprob: -17.375024795532227
    6. '00' → logprob: -17.437524795532227
    7. ')' → logprob: -17.437524795532227
    8. '０' → logprob: -17.625024795532227
    9. '۰' → logprob: -17.625024795532227
    10. '
' → logprob: -18.125024795532227

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.375001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '))' → logprob: -15.375001907348633
    5. ')`' → logprob: -17.375001907348633
    6. ')}' → logprob: -17.750001907348633
    7. ')

' → logprob: -18.125001907348633
    8. '),' → logprob: -19.625001907348633
    9. ')#' → logprob: -19.625001907348633
    10. '())' → logprob: -19.750001907348633

Token 317: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.625
    3. '```' → logprob: -19.25
    4. 'print' → logprob: -22.75
    5. '``' → logprob: -23.0
    6. '
' → logprob: -24.0
    7. '	for' → logprob: -25.125
    8. '    
' → logprob: -25.25
    9. '0' → logprob: -26.125
    10. '   ' → logprob: -26.5

Token 318: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023141352459788322
    2. 'dist' → logprob: -4.273141384124756
    3. ' i' → logprob: -5.648141384124756
    4. 'distance' → logprob: -6.148141384124756
    5. 'u' → logprob: -7.148141384124756
    6. 'cost' → logprob: -7.148141384124756
    7. 'top' → logprob: -7.398141384124756
    8. 'v' → logprob: -8.023140907287598
    9. 'ans' → logprob: -8.398140907287598
    10. 'item' → logprob: -9.523140907287598

Token 319: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02336171269416809
    2. 'in' → logprob: -3.7733616828918457
    3. ',' → logprob: -10.023362159729004
    4. ' ' → logprob: -10.023362159729004
    5. 'range' → logprob: -11.398362159729004
    6. '	in' → logprob: -12.898362159729004
    7. ')' → logprob: -13.273362159729004
    8. 'd' → logprob: -13.398362159729004
    9. 'n' → logprob: -13.398362159729004
    10. ' range' → logprob: -13.523362159729004

Token 320: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.045083701610565186
    2. 'cost' → logprob: -3.67008376121521
    3. 'distance' → logprob: -4.170083522796631
    4. ' dist' → logprob: -6.295083522796631
    5. 'di' → logprob: -7.920083522796631
    6. 'd' → logprob: -8.170083999633789
    7. '_dist' → logprob: -9.045083999633789
    8. 'val' → logprob: -9.545083999633789
    9. 'dis' → logprob: -9.545083999633789
    10. 'value' → logprob: -9.795083999633789

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5780221819877625
    2. 'in' → logprob: -0.8280221819877625
    3. ',' → logprob: -6.203022003173828
    4. ' ' → logprob: -10.078022003173828
    5. '	in' → logprob: -12.328022003173828
    6. ',in' → logprob: -12.578022003173828
    7. ' ,' → logprob: -13.203022003173828
    8. '_in' → logprob: -13.453022003173828
    9. ' i' → logprob: -13.828022003173828
    10. '  ' → logprob: -14.203022003173828

Token 322: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06196925416588783
    2. ' enumerate' → logprob: -2.81196928024292
    3. 'range' → logprob: -13.811968803405762
    4. '   ' → logprob: -15.561968803405762
    5. '```' → logprob: -15.811968803405762
    6. 'enum' → logprob: -16.686969757080078
    7. 'en' → logprob: -16.811969757080078
    8. ' ' → logprob: -16.936969757080078
    9. '(en' → logprob: -17.436969757080078
    10. '  ' → logprob: -18.686969757080078

Token 323: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.000122608442325145
    2. '(' → logprob: -9.500123023986816
    3. '(range' → logprob: -10.000123023986816
    4. ' (' → logprob: -13.250123023986816
    5. 'd' → logprob: -15.000123023986816
    6. '(D' → logprob: -17.3751220703125
    7. 'range' → logprob: -17.3751220703125
    8. ' d' → logprob: -17.6251220703125
    9. '(
' → logprob: -17.7501220703125
    10. ')' → logprob: -17.8751220703125

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09113498032093048
    2. '):
' → logprob: -2.466135025024414
    3. ':' → logprob: -6.716135025024414
    4. ')' → logprob: -6.966135025024414
    5. ':
' → logprob: -10.966135025024414
    6. '):
' → logprob: -11.341135025024414
    7. '):

' → logprob: -13.216135025024414
    8. '():
' → logprob: -13.216135025024414
    9. ',' → logprob: -13.841135025024414
    10. '   ' → logprob: -14.091135025024414

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023522067815065384
    2. ' print' → logprob: -3.898522138595581
    3. 'print' → logprob: -5.898521900177002
    4. ':' → logprob: -9.02352237701416
    5. '	print' → logprob: -10.39852237701416
    6. ':
' → logprob: -10.64852237701416
    7. ' if' → logprob: -11.02352237701416
    8. '    
' → logprob: -11.02352237701416
    9. '):
' → logprob: -11.52352237701416
    10. '<|end|>' → logprob: -12.64852237701416

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.15643885731697083
    2. ' print' → logprob: -2.4064388275146484
    3. '   ' → logprob: -2.9064388275146484
    4. 'if' → logprob: -12.531438827514648
    5. '```' → logprob: -12.906438827514648
    6. ' if' → logprob: -13.156438827514648
    7. '	print' → logprob: -13.656438827514648
    8. ' ' → logprob: -14.656438827514648
    9. '    
' → logprob: -15.656438827514648
    10. '    ' → logprob: -15.906438827514648

Token 327: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007923588855192065
    2. '(cost' → logprob: -7.500792503356934
    3. '(f' → logprob: -8.375792503356934
    4. 'i' → logprob: -12.500792503356934
    5. '(' → logprob: -12.625792503356934
    6. 'cost' → logprob: -13.375792503356934
    7. '("{}' → logprob: -16.375791549682617
    8. '((' → logprob: -16.500791549682617
    9. 'f' → logprob: -17.125791549682617
    10. '('{}' → logprob: -17.250791549682617

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044830769184045494
    2. ',c' → logprob: -8.000448226928711
    3. ' ,' → logprob: -9.125448226928711
    4. ',end' → logprob: -13.000448226928711
    5. ',
' → logprob: -14.750448226928711
    6. ',d' → logprob: -15.250448226928711
    7. ')' → logprob: -15.250448226928711
    8. '   ' → logprob: -15.500448226928711
    9. ',f' → logprob: -15.500448226928711
    10. '+' → logprob: -15.750448226928711

Token 329: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11402280628681183
    2. ' cost' → logprob: -2.239022731781006
    3. '"' → logprob: -7.364022731781006
    4. ''' → logprob: -8.114023208618164
    5. '(cost' → logprob: -9.114023208618164
    6. ' "' → logprob: -9.739023208618164
    7. ' '' → logprob: -9.864023208618164
    8. 'end' → logprob: -11.614023208618164
    9. '""' → logprob: -11.614023208618164
    10. ' ' → logprob: -11.739023208618164

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.625
    3. ')
' → logprob: -17.0
    4. ')`' → logprob: -17.625
    5. '())' → logprob: -18.25
    6. '))' → logprob: -18.25
    7. '   ' → logprob: -18.5
    8. '),' → logprob: -18.625
    9. '()' → logprob: -18.875
    10. ')}' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 51.22%
Précision adaptée (1ère position): 53.96%
Précision (top 10): 86.28%
================================================================================
