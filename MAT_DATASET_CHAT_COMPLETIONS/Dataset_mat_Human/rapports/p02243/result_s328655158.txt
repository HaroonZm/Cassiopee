================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from heapq import*
I=float("inf")
def m():
 n=int(input())
 A=[]
 for _ in range(n):
  e=list(map(int,input().split()))
  A+=[zip(e[2::2],e[3::2])]
 d=[0]+[I]*n
 H=[(0,0)]
 while H:
  u=heappop(H)[1]
  for v,c in A[u]:
   t=d[u]+c
   if d[v]>t:
    d[v]=t
    heappush(H,(t,v))
 print('\n'.join(f'{i} {d[i]}'for i in range(n)))
m()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6117029786109924
    2. 'import' → logprob: -0.9867029786109924
    3. ' import' → logprob: -2.4867029190063477
    4. ' ' → logprob: -7.236702919006348
    5. '.import' → logprob: -8.111702919006348
    6. 'space' → logprob: -8.486702919006348
    7. ' .' → logprob: -8.736702919006348
    8. 'i' → logprob: -10.361702919006348
    9. '```' → logprob: -10.361702919006348
    10. '(' → logprob: -11.111702919006348

Token 4: '*
' (ID: 6658)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.06585428863763809
    2. 'heap' → logprob: -2.81585431098938
    3. ' he' → logprob: -5.690854072570801
    4. 'nl' → logprob: -8.1908540725708
    5. 'merge' → logprob: -8.9408540725708
    6. 'import' → logprob: -10.3158540725708
    7. '```' → logprob: -10.3158540725708
    8. '`' → logprob: -11.1908540725708
    9. ' heap' → logprob: -12.4408540725708
    10. '.he' → logprob: -12.5658540725708

Token 5: 'I' (ID: 40)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6418476104736328
    2. '(' → logprob: -0.7668476104736328
    3. 'he' → logprob: -6.141847610473633
    4. ' (' → logprob: -6.516847610473633
    5. 'i' → logprob: -7.391847610473633
    6. '.he' → logprob: -7.391847610473633
    7. ' ' → logprob: -7.641847610473633
    8. ',' → logprob: -7.766847610473633
    9. 'a' → logprob: -8.016847610473633
    10. '```' → logprob: -8.141847610473633

Token 6: '=float' (ID: 80332)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.315955251455307
    2. 'n' → logprob: -1.3159552812576294
    3. 's' → logprob: -6.69095516204834
    4. 'mp' → logprob: -7.06595516204834
    5. 'ns' → logprob: -8.06595516204834
    6. 'nl' → logprob: -9.19095516204834
    7. 'nv' → logprob: -9.81595516204834
    8. 'nst' → logprob: -10.44095516204834
    9. 'p' → logprob: -11.19095516204834
    10. 'np' → logprob: -11.44095516204834

Token 7: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014802191406488419
    2. '.' → logprob: -4.639801979064941
    3. ' (' → logprob: -5.389801979064941
    4. '('' → logprob: -8.764801979064941
    5. '.(' → logprob: -9.514801979064941
    6. ''' → logprob: -9.639801979064941
    7. ''s' → logprob: -10.264801979064941
    8. ')' → logprob: -11.264801979064941
    9. ' .' → logprob: -11.389801979064941
    10. ',' → logprob: -11.514801979064941

Token 8: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.015305552864447e-05
    2. 'Inf' → logprob: -11.000060081481934
    3. '-inf' → logprob: -11.000060081481934
    4. 'INF' → logprob: -11.750060081481934
    5. '+' → logprob: -12.625060081481934
    6. 'in' → logprob: -12.750060081481934
    7. '1' → logprob: -12.875060081481934
    8. 'nan' → logprob: -12.875060081481934
    9. 'Infinity' → logprob: -13.750060081481934
    10. ' inf' → logprob: -14.000060081481934

Token 9: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.027780720964074135
    2. ')")' → logprob: -3.777780771255493
    3. ')' → logprob: -5.402780532836914
    4. '"' → logprob: -11.527780532836914
    5. ')"' → logprob: -12.402780532836914
    6. ' ")' → logprob: -12.777780532836914
    7. '}")' → logprob: -14.027780532836914
    8. '"))' → logprob: -14.152780532836914
    9. ' )' → logprob: -14.902780532836914
    10. '\")' → logprob: -15.027780532836914

Token 10: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6241884231567383
    2. 'dist' → logprob: -0.9991884231567383
    3. 'q' → logprob: -3.6241884231567383
    4. 'n' → logprob: -4.249188423156738
    5. ')' → logprob: -4.374188423156738
    6. ' d' → logprob: -4.624188423156738
    7. ',' → logprob: -5.124188423156738
    8. 'def' → logprob: -5.374188423156738
    9. 'heap' → logprob: -5.624188423156738
    10. 'D' → logprob: -5.624188423156738

Token 11: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21193881332874298
    2. ' d' → logprob: -1.8369388580322266
    3. ' he' → logprob: -4.711938858032227
    4. ' heap' → logprob: -4.836938858032227
    5. ' find' → logprob: -5.586938858032227
    6. ' push' → logprob: -5.711938858032227
    7. 'd' → logprob: -6.461938858032227
    8. ' a' → logprob: -6.961938858032227
    9. ' f' → logprob: -7.211938858032227
    10. ' h' → logprob: -7.336938858032227

Token 12: '():
' (ID: 8595)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7297186255455017
    2. 'e' → logprob: -1.7297186851501465
    3. 'i' → logprob: -1.9797186851501465
    4. 'a' → logprob: -1.9797186851501465
    5. 'ax' → logprob: -3.7297186851501465
    6. 'erge' → logprob: -3.9797186851501465
    7. 'ean' → logprob: -5.2297186851501465
    8. 'atch' → logprob: -5.6047186851501465
    9. '(i' → logprob: -5.8547186851501465
    10. '(a' → logprob: -6.4797186851501465

Token 13: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006361489649862051
    2. '    ' → logprob: -6.256361484527588
    3. 'r' → logprob: -6.506361484527588
    4. ' :' → logprob: -7.756361484527588
    5. '   ' → logprob: -7.756361484527588
    6. '  ' → logprob: -7.881361484527588
    7. 'n' → logprob: -8.131361961364746
    8. ':' → logprob: -8.881361961364746
    9. ' pass' → logprob: -8.881361961364746
    10. ' return' → logprob: -9.006361961364746

Token 14: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6475272178649902
    2. ' =' → logprob: -0.8975272178649902
    3. ' ' → logprob: -3.2725272178649902
    4. '   ' → logprob: -5.14752721786499
    5. '.' → logprob: -5.77252721786499
    6. '  ' → logprob: -6.02252721786499
    7. '    ' → logprob: -6.02252721786499
    8. ',' → logprob: -6.14752721786499
    9. 'ext' → logprob: -6.64752721786499
    10. 'um' → logprob: -6.64752721786499

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12705294787883759
    2. '(' → logprob: -2.1270530223846436
    3. 'input' → logprob: -9.377053260803223
    4. '()' → logprob: -11.252053260803223
    5. '('' → logprob: -11.502053260803223
    6. ' input' → logprob: -12.752053260803223
    7. ' (' → logprob: -12.752053260803223
    8. '((' → logprob: -13.627053260803223
    9. '(I' → logprob: -13.627053260803223
    10. '(
' → logprob: -13.752053260803223

Token 16: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8027963042259216
    2. '())' → logprob: -1.0527963638305664
    3. ')' → logprob: -1.9277963638305664
    4. '(' → logprob: -3.0527963638305664
    5. '('' → logprob: -4.802796363830566
    6. '')' → logprob: -7.802796363830566
    7. '")' → logprob: -7.927796363830566
    8. '("("' → logprob: -8.427796363830566
    9. ' )' → logprob: -8.927796363830566
    10. '))' → logprob: -8.927796363830566

Token 17: ' A' (ID: 355)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7822970747947693
    2. ' d' → logprob: -1.907297134399414
    3. ' dp' → logprob: -2.657297134399414
    4. ' a' → logprob: -3.032297134399414
    5. '```' → logprob: -3.532297134399414
    6. ' s' → logprob: -3.657297134399414
    7. 'c' → logprob: -3.657297134399414
    8. ' c' → logprob: -3.657297134399414
    9. ' ' → logprob: -3.907297134399414
    10. 'a' → logprob: -3.907297134399414

Token 18: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21566800773143768
    2. '.' → logprob: -2.590667963027954
    3. '[' → logprob: -2.715667963027954
    4. ' =' → logprob: -3.465667963027954
    5. '=[]' → logprob: -4.465668201446533
    6. '=[' → logprob: -5.340668201446533
    7. '[:]' → logprob: -6.590668201446533
    8. '.append' → logprob: -6.715668201446533
    9. ',' → logprob: -7.090668201446533
    10. '=input' → logprob: -7.965668201446533

Token 19: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5712810754776001
    2. ' for' → logprob: -1.4462810754776
    3. 'for' → logprob: -1.6962810754776
    4. '<|end|>' → logprob: -4.3212809562683105
    5. ' 
' → logprob: -6.3212809562683105
    6. ')' → logprob: -8.071281433105469
    7. '	for' → logprob: -8.446281433105469
    8. '[' → logprob: -8.696281433105469
    9. ' f' → logprob: -9.196281433105469
    10. '<|end|>' → logprob: -9.446281433105469

Token 20: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7982587814331055
    2. ' _' → logprob: -0.9232587814331055
    3. ' i' → logprob: -1.9232587814331055
    4. '_' → logprob: -5.0482587814331055
    5. ' ‌' → logprob: -9.798258781433105
    6. 'i' → logprob: -10.798258781433105
    7. ' range' → logprob: -11.673258781433105
    8. ' ' → logprob: -11.673258781433105
    9. ' I' → logprob: -11.798258781433105
    10. ' ▁' → logprob: -12.298258781433105

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03824276104569435
    2. 'in' → logprob: -3.288242816925049
    3. 'import' → logprob: -9.03824234008789
    4. ' ' → logprob: -10.16324234008789
    5. 'n' → logprob: -10.91324234008789
    6. '	in' → logprob: -12.41324234008789
    7. 'In' → logprob: -12.53824234008789
    8. 'range' → logprob: -13.16324234008789
    9. '  ' → logprob: -13.28824234008789
    10. ' n' → logprob: -13.53824234008789

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28121641278266907
    2. ' range' → logprob: -1.4062163829803467
    3. 'A' → logprob: -10.281216621398926
    4. ' A' → logprob: -11.406216621398926
    5. 'n' → logprob: -12.406216621398926
    6. 'input' → logprob: -12.531216621398926
    7. ' ' → logprob: -12.656216621398926
    8. '(range' → logprob: -12.906216621398926
    9. '	range' → logprob: -14.031216621398926
    10. 'ran' → logprob: -14.156216621398926

Token 23: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009889130480587482
    2. '(' → logprob: -4.759889125823975
    3. ' (' → logprob: -6.759889125823975
    4. ' n' → logprob: -9.134889602661133
    5. 'n' → logprob: -12.259889602661133
    6. ' ' → logprob: -13.759889602661133
    7. '(range' → logprob: -15.009889602661133
    8. '(int' → logprob: -15.134889602661133
    9. '(
' → logprob: -16.884889602661133
    10. '()' → logprob: -17.384889602661133

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.137911856174469
    2. ' ):' → logprob: -2.512911796569824
    3. ')' → logprob: -3.387911796569824
    4. ' )' → logprob: -4.387911796569824
    5. '):
' → logprob: -7.137911796569824
    6. ':' → logprob: -7.762911796569824
    7. ' ):
' → logprob: -8.512911796569824
    8. '   ' → logprob: -9.887911796569824
    9. ' :' → logprob: -9.887911796569824
    10. ' ' → logprob: -10.512911796569824

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5613797903060913
    2. ' A' → logprob: -1.1863797903060913
    3. ' a' → logprob: -2.686379909515381
    4. ' x' → logprob: -3.436379909515381
    5. '   ' → logprob: -4.936379909515381
    6. ' s' → logprob: -5.311379909515381
    7. 'A' → logprob: -5.311379909515381
    8. 'a' → logprob: -6.061379909515381
    9. 'x' → logprob: -6.311379909515381
    10. '    ' → logprob: -7.061379909515381

Token 26: ' e' (ID: 319)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.027663230895996
    2. ' a' → logprob: -1.152663230895996
    3. 'x' → logprob: -1.902663230895996
    4. ' x' → logprob: -3.152663230895996
    5. 'A' → logprob: -3.652663230895996
    6. ' t' → logprob: -3.777663230895996
    7. 't' → logprob: -3.902663230895996
    8. 's' → logprob: -4.152663230895996
    9. ' A' → logprob: -4.152663230895996
    10. ' s' → logprob: -4.527663230895996

Token 27: '=list' (ID: 93413)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.6525992751121521
    2. '=' → logprob: -1.4025993347167969
    3. '=input' → logprob: -1.7775993347167969
    4. ' =' → logprob: -2.777599334716797
    5. '=float' → logprob: -6.527599334716797
    6. ' ' → logprob: -9.152599334716797
    7. '=e' → logprob: -9.527599334716797
    8. ',' → logprob: -10.027599334716797
    9. '=list' → logprob: -10.027599334716797
    10. '=a' → logprob: -10.277599334716797

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00016897499153856188
    2. '(' → logprob: -9.125168800354004
    3. '(input' → logprob: -9.875168800354004
    4. ' map' → logprob: -12.250168800354004
    5. '(int' → logprob: -12.875168800354004
    6. 'map' → logprob: -14.250168800354004
    7. '	map' → logprob: -15.625168800354004
    8. '(eval' → logprob: -16.25016975402832
    9. ',map' → logprob: -16.62516975402832
    10. '(
' → logprob: -16.62516975402832

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019647935405373573
    2. '(' → logprob: -6.876964569091797
    3. '<int' → logprob: -8.001964569091797
    4. '[int' → logprob: -8.376964569091797
    5. 'int' → logprob: -9.001964569091797
    6. '(input' → logprob: -9.126964569091797
    7. ' (' → logprob: -10.001964569091797
    8. ',int' → logprob: -10.376964569091797
    9. '=int' → logprob: -11.251964569091797
    10. '(eval' → logprob: -11.251964569091797

Token 30: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.004266439005732536
    2. '(input' → logprob: -6.004266262054443
    3. ',' → logprob: -6.504266262054443
    4. 'input' → logprob: -8.254266738891602
    5. ' ,' → logprob: -10.754266738891602
    6. '(' → logprob: -12.504266738891602
    7. ' input' → logprob: -12.504266738891602
    8. ',int' → logprob: -14.129266738891602
    9. '<input' → logprob: -14.629266738891602
    10. '	input' → logprob: -15.129266738891602

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.825890159234405e-05
    2. '()' → logprob: -10.000068664550781
    3. ')' → logprob: -11.625068664550781
    4. ' ' → logprob: -12.875068664550781
    5. ' ().' → logprob: -13.000068664550781
    6. '()))' → logprob: -13.250068664550781
    7. '(' → logprob: -13.375068664550781
    8. '))' → logprob: -13.625068664550781
    9. 'split' → logprob: -13.750068664550781
    10. '.' → logprob: -14.000068664550781

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011870148591697216
    2. 'strip' → logprob: -6.751186847686768
    3. ' split' → logprob: -11.626187324523926
    4. 'rstrip' → logprob: -12.126187324523926
    5. '(split' → logprob: -13.376187324523926
    6. 's' → logprob: -14.876187324523926
    7. 'plit' → logprob: -15.626187324523926
    8. ')' → logprob: -15.751187324523926
    9. 'spl' → logprob: -15.751187324523926
    10. ' strip' → logprob: -17.62618637084961

Token 33: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.051209911704063416
    2. '())' → logprob: -3.8012099266052246
    3. '()' → logprob: -4.176209926605225
    4. '(' → logprob: -5.051209926605225
    5. '))' → logprob: -5.301209926605225
    6. ')' → logprob: -8.301209449768066
    7. '()))
' → logprob: -8.301209449768066
    8. '())))' → logprob: -8.801209449768066
    9. '('' → logprob: -10.176209449768066
    10. '()));' → logprob: -10.301209449768066

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1037028506398201
    2. ' A' → logprob: -2.3537027835845947
    3. 'A' → logprob: -6.853703022003174
    4. '  
' → logprob: -7.478703022003174
    5. ' 
' → logprob: -7.603703022003174
    6. '<|end|>' → logprob: -7.978703022003174
    7. '   ' → logprob: -8.478702545166016
    8. '  ' → logprob: -8.728702545166016
    9. '```' → logprob: -9.603702545166016
    10. ' for' → logprob: -9.978702545166016

Token 35: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.73331218957901
    2. ' he' → logprob: -0.85831218957901
    3. ' heap' → logprob: -2.9833121299743652
    4. 'he' → logprob: -4.108312129974365
    5. ' push' → logprob: -4.858312129974365
    6. ' e' → logprob: -4.983312129974365
    7. ' A' → logprob: -5.733312129974365
    8. ' for' → logprob: -5.733312129974365
    9. 'heap' → logprob: -6.483312129974365
    10. '```' → logprob: -6.858312129974365

Token 36: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1030302420258522
    2. '.' → logprob: -2.353030204772949
    3. 'append' → logprob: -6.603030204772949
    4. '.push' → logprob: -7.603030204772949
    5. '>.' → logprob: -8.97803020477295
    6. ').' → logprob: -9.10303020477295
    7. '​.' → logprob: -9.10303020477295
    8. '.p' → logprob: -9.35303020477295
    9. '.he' → logprob: -9.72803020477295
    10. '.ap' → logprob: -9.85303020477295

Token 37: '=[' (ID: 13370)
  Prédit: '=e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=e' → logprob: -0.25625231862068176
    2. '=' → logprob: -1.5062522888183594
    3. '=A' → logprob: -5.881252288818359
    4. '=[' → logprob: -7.006252288818359
    5. 'e' → logprob: -7.631252288818359
    6. '+=' → logprob: -10.00625228881836
    7. '=s' → logprob: -10.75625228881836
    8. '-e' → logprob: -10.88125228881836
    9. ' e' → logprob: -11.75625228881836
    10. '=list' → logprob: -12.13125228881836

Token 38: 'zip' (ID: 15571)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15772877633571625
    2. '(e' → logprob: -2.532728672027588
    3. '(-' → logprob: -3.782728672027588
    4. '(' → logprob: -3.907728672027588
    5. 'tuple' → logprob: -4.407728672027588
    6. ' e' → logprob: -5.407728672027588
    7. ' (' → logprob: -6.282728672027588
    8. '(*' → logprob: -6.907728672027588
    9. '-e' → logprob: -7.032728672027588
    10. '-' → logprob: -7.032728672027588

Token 39: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.014821574091911316
    2. '(' → logprob: -4.264821529388428
    3. '(*' → logprob: -7.764821529388428
    4. ' (' → logprob: -9.139822006225586
    5. '(E' → logprob: -9.514822006225586
    6. '(
' → logprob: -11.139822006225586
    7. '(s' → logprob: -11.639822006225586
    8. '((' → logprob: -12.139822006225586
    9. '(en' → logprob: -12.889822006225586
    10. ')(' → logprob: -13.264822006225586

Token 40: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2456154227256775
    2. ')]' → logprob: -2.2456154823303223
    3. '(e' → logprob: -2.4956154823303223
    4. '(A' → logprob: -5.120615482330322
    5. ' (' → logprob: -5.245615482330322
    6. '())' → logprob: -5.995615482330322
    7. ')])' → logprob: -5.995615482330322
    8. '(...' → logprob: -6.370615482330322
    9. '()]' → logprob: -6.370615482330322
    10. '(n' → logprob: -6.495615482330322

Token 41: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.658196210861206
    2. '2' → logprob: -0.783196210861206
    3. '::' → logprob: -4.408196449279785
    4. ' ' → logprob: -5.158196449279785
    5. '(' → logprob: -6.658196449279785
    6. ':' → logprob: -6.783196449279785
    7. '::-' → logprob: -6.783196449279785
    8. '3' → logprob: -6.908196449279785
    9. '0' → logprob: -6.908196449279785
    10. '4' → logprob: -7.408196449279785

Token 42: '::' (ID: 742)
  Prédit: ':],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.04560078680515289
    2. '],' → logprob: -3.2956008911132812
    3. ':' → logprob: -5.170600891113281
    4. '::' → logprob: -7.545600891113281
    5. ':]' → logprob: -7.670600891113281
    6. '-' → logprob: -7.795600891113281
    7. '+' → logprob: -9.670600891113281
    8. ' ],' → logprob: -9.670600891113281
    9. ' :' → logprob: -10.045600891113281
    10. ']' → logprob: -10.295600891113281

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04991995915770531
    2. ' ' → logprob: -3.549919843673706
    3. '3' → logprob: -4.049920082092285
    4. '4' → logprob: -6.674920082092285
    5. '1' → logprob: -7.299920082092285
    6. '])' → logprob: -8.424920082092285
    7. '5' → logprob: -9.424920082092285
    8. '6' → logprob: -10.299920082092285
    9. ' e' → logprob: -10.424920082092285
    10. ' ])' → logprob: -10.612420082092285

Token 44: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4569437801837921
    2. ',' → logprob: -1.2069437503814697
    3. ' ],' → logprob: -3.9569437503814697
    4. ' ,' → logprob: -3.9569437503814697
    5. ',e' → logprob: -4.331943988800049
    6. '),' → logprob: -4.581943988800049
    7. ' ' → logprob: -6.331943988800049
    8. '],[' → logprob: -6.831943988800049
    9. ')])' → logprob: -7.081943988800049
    10. ']' → logprob: -7.831943988800049

Token 45: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6327311992645264
    2. ' e' → logprob: -0.7577311992645264
    3. ' ' → logprob: -9.382731437683105
    4. '[' → logprob: -10.507731437683105
    5. '	e' → logprob: -11.507731437683105
    6. ' [' → logprob: -13.132731437683105
    7. '  ' → logprob: -13.132731437683105
    8. '   ' → logprob: -13.257731437683105
    9. ' ' → logprob: -13.820231437683105
    10. '[e' → logprob: -13.945231437683105

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009410003549419343
    2. '1' → logprob: -7.000940799713135
    3. '3' → logprob: -11.375941276550293
    4. '-' → logprob: -11.625941276550293
    5. ' [' → logprob: -12.000941276550293
    6. ' ' → logprob: -14.000941276550293
    7. '(' → logprob: -14.375941276550293
    8. '```' → logprob: -15.375941276550293
    9. '[
' → logprob: -15.500941276550293
    10. '
' → logprob: -16.125940322875977

Token 47: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017337289173156023
    2. '1' → logprob: -6.376733779907227
    3. ' ' → logprob: -10.501733779907227
    4. '4' → logprob: -13.626733779907227
    5. '0' → logprob: -14.126733779907227
    6. '::' → logprob: -14.626733779907227
    7. '   ' → logprob: -14.876733779907227
    8. '5' → logprob: -15.126733779907227
    9. '  ' → logprob: -15.376733779907227
    10. '2' → logprob: -15.751733779907227

Token 48: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -5.438573680294212e-06
    2. ':' → logprob: -13.875005722045898
    3. '::-' → logprob: -13.875005722045898
    4. ']' → logprob: -14.250005722045898
    5. '::_' → logprob: -14.375005722045898
    6. ':::' → logprob: -14.625005722045898
    7. ' ::' → logprob: -15.125005722045898
    8. '1' → logprob: -15.125005722045898
    9. '[' → logprob: -15.250005722045898
    10. ')::' → logprob: -15.500005722045898

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.250016212463379
    3. '])' → logprob: -13.625016212463379
    4. ']))' → logprob: -15.000016212463379
    5. '```' → logprob: -15.375016212463379
    6. '1' → logprob: -15.625016212463379
    7. '  ' → logprob: -15.875016212463379
    8. '+' → logprob: -16.000015258789062
    9. '3' → logprob: -16.062515258789062
    10. '   ' → logprob: -16.562515258789062

Token 50: '])]
' (ID: 187535)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.7311211824417114
    2. ')' → logprob: -1.3561211824417114
    3. ')]' → logprob: -1.3561211824417114
    4. '))' → logprob: -6.231121063232422
    5. ' )' → logprob: -7.231121063232422
    6. '])]' → logprob: -7.856121063232422
    7. '])' → logprob: -9.731121063232422
    8. ')))' → logprob: -9.856121063232422
    9. ' ' → logprob: -10.231121063232422
    10. ')])
' → logprob: -10.731121063232422

Token 51: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06491261720657349
    2. ' ' → logprob: -4.189912796020508
    3. '' → logprob: -4.564912796020508
    4. '
' → logprob: -4.689912796020508
    5. '<|end|>' → logprob: -5.189912796020508
    6. '(' → logprob: -5.439912796020508
    7. '\n' → logprob: -5.814912796020508
    8. ',' → logprob: -5.814912796020508
    9. ']' → logprob: -5.814912796020508
    10. '[' → logprob: -6.439912796020508

Token 52: '=[' (ID: 13370)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.6656810641288757
    2. '=' → logprob: -1.5406811237335205
    3. 'ists' → logprob: -3.0406811237335205
    4. 'is' → logprob: -3.0406811237335205
    5. 'e' → logprob: -3.1656811237335205
    6. ' =' → logprob: -3.2906811237335205
    7. 'istance' → logprob: -3.7906811237335205
    8. '=[]' → logprob: -3.7906811237335205
    9. 'ef' → logprob: -3.7906811237335205
    10. 'i' → logprob: -4.665680885314941

Token 53: '0' (ID: 15)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.004376955330371857
    2. ' I' → logprob: -6.1293768882751465
    3. '0' → logprob: -6.5043768882751465
    4. ']' → logprob: -8.629377365112305
    5. '(I' → logprob: -9.129377365112305
    6. ')' → logprob: -9.504377365112305
    7. ' (' → logprob: -9.504377365112305
    8. '(' → logprob: -9.754377365112305
    9. ' ' → logprob: -9.879377365112305
    10. '[I' → logprob: -11.004377365112305

Token 54: ']+' (ID: 15344)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.7467820644378662
    2. ']+' → logprob: -1.1217820644378662
    3. ']' → logprob: -1.6217820644378662
    4. ']*(' → logprob: -6.121782302856445
    5. ' ]' → logprob: -8.746782302856445
    6. ',' → logprob: -9.246782302856445
    7. 'for' → logprob: -9.246782302856445
    8. ' for' → logprob: -9.371782302856445
    9. 'I' → logprob: -9.871782302856445
    10. '+' → logprob: -10.621782302856445

Token 55: '[' (ID: 58)
  Prédit: '[I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.0014035640051588416
    2. '[' → logprob: -6.751403331756592
    3. ' [' → logprob: -8.50140380859375
    4. '[i' → logprob: -10.87640380859375
    5. 'I' → logprob: -12.75140380859375
    6. '[A' → logprob: -13.37640380859375
    7. '[n' → logprob: -13.62640380859375
    8. ' ' → logprob: -13.87640380859375
    9. '(I' → logprob: -14.12640380859375
    10. '[(' → logprob: -14.62640380859375

Token 56: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00884595699608326
    2. ' I' → logprob: -4.758845806121826
    3. ' ' → logprob: -8.508846282958984
    4. '   ' → logprob: -11.258846282958984
    5. '  ' → logprob: -12.008846282958984
    6. '	I' → logprob: -12.883846282958984
    7. '    ' → logprob: -13.508846282958984
    8. '```' → logprob: -14.008846282958984
    9. ' ' → logprob: -14.008846282958984
    10. '
' → logprob: -14.508846282958984

Token 57: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0211318451911211
    2. ']' → logprob: -4.021131992340088
    3. ']*(' → logprob: -6.271131992340088
    4. ' for' → logprob: -7.146131992340088
    5. 'for' → logprob: -8.64613151550293
    6. ' ]' → logprob: -9.64613151550293
    7. ',' → logprob: -10.39613151550293
    8. '*' → logprob: -11.39613151550293
    9. ']+' → logprob: -11.64613151550293
    10. 'nd' → logprob: -14.02113151550293

Token 58: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004329352639615536
    2. ' (' → logprob: -5.879329204559326
    3. 'n' → logprob: -6.629329204559326
    4. '(' → logprob: -9.129329681396484
    5. ' n' → logprob: -9.754329681396484
    6. ' ' → logprob: -11.379329681396484
    7. '(I' → logprob: -12.004329681396484
    8. '(_' → logprob: -12.379329681396484
    9. '((' → logprob: -13.004329681396484
    10. '[n' → logprob: -13.129329681396484

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' H' (ID: 487)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9519898891448975
    2. 'h' → logprob: -1.8269898891448975
    3. 'pq' → logprob: -2.2019898891448975
    4. 'p' → logprob: -2.9519898891448975
    5. 'd' → logprob: -3.0769898891448975
    6. 'hq' → logprob: -3.2019898891448975
    7. 'from' → logprob: -3.7019898891448975
    8. ' h' → logprob: -3.9519898891448975
    9. 'heap' → logprob: -3.9519898891448975
    10. 'import' → logprob: -4.201990127563477

Token 61: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3620924949645996
    2. '=' → logprob: -1.7370924949645996
    3. '=[]' → logprob: -2.3620924949645996
    4. '=[' → logprob: -3.4870924949645996
    5. ' =[' → logprob: -6.2370924949646
    6. '=[
' → logprob: -8.112092971801758
    7. '=[]
' → logprob: -8.737092971801758
    8. '=create' → logprob: -9.112092971801758
    9. '=[[' → logprob: -9.362092971801758
    10. '<|end|>' → logprob: -9.987092971801758

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00215930282138288
    2. ' (' → logprob: -6.252159118652344
    3. '[(' → logprob: -9.002159118652344
    4. '0' → logprob: -9.252159118652344
    5. ' ' → logprob: -12.502159118652344
    6. ']' → logprob: -12.627159118652344
    7. '[' → logprob: -13.627159118652344
    8. ' [(' → logprob: -14.002159118652344
    9. '((' → logprob: -14.502159118652344
    10. '(n' → logprob: -14.752159118652344

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004192330234218389
    2. ' ' → logprob: -7.8754191398620605
    3. 'd' → logprob: -10.250419616699219
    4. '(' → logprob: -13.125419616699219
    5. ' d' → logprob: -14.000419616699219
    6. ')' → logprob: -14.500419616699219
    7. '  ' → logprob: -15.500419616699219
    8. '   ' → logprob: -16.62541961669922
    9. '```' → logprob: -16.87541961669922
    10. ' (' → logprob: -17.12541961669922

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025883622583933175
    2. ' ,' → logprob: -8.750258445739746
    3. '0' → logprob: -9.750258445739746
    4. ' ' → logprob: -11.250258445739746
    5. ',n' → logprob: -11.250258445739746
    6. ',i' → logprob: -11.250258445739746
    7. ',node' → logprob: -14.125258445739746
    8. ',index' → logprob: -14.500258445739746
    9. ',x' → logprob: -15.000258445739746
    10. ',int' → logprob: -15.250258445739746

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032441432122141123
    2. ' ' → logprob: -5.753243923187256
    3. '1' → logprob: -9.628244400024414
    4. ')' → logprob: -15.003244400024414
    5. ',' → logprob: -16.753244400024414
    6. '  ' → logprob: -17.128244400024414
    7. 's' → logprob: -17.128244400024414
    8. '(' → logprob: -17.190744400024414
    9. 'i' → logprob: -17.190744400024414
    10. '   ' → logprob: -17.753244400024414

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000777707842644304
    2. ')' → logprob: -7.250777721405029
    3. ')]
' → logprob: -10.625777244567871
    4. ')])' → logprob: -10.875777244567871
    5. ' )' → logprob: -11.125777244567871
    6. ')]
' → logprob: -12.875777244567871
    7. ')]

' → logprob: -13.375777244567871
    8. '))' → logprob: -13.500777244567871
    9. ']' → logprob: -13.500777244567871
    10. '),' → logprob: -13.750777244567871

Token 67: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21599683165550232
    2. ' while' → logprob: -1.7159968614578247
    3. ')' → logprob: -4.590996742248535
    4. '<|end|>' → logprob: -5.590996742248535
    5. ' ' → logprob: -8.965996742248535
    6. '```' → logprob: -9.215996742248535
    7. 'While' → logprob: -9.465996742248535
    8. '	while' → logprob: -9.465996742248535
    9. ' While' → logprob: -9.840996742248535
    10. 'd' → logprob: -9.965996742248535

Token 68: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00317783304490149
    2. ' H' → logprob: -5.753177642822266
    3. 'len' → logprob: -16.753177642822266
    4. ' len' → logprob: -16.753177642822266
    5. '	H' → logprob: -17.253177642822266
    6. ' ' → logprob: -17.253177642822266
    7. 'h' → logprob: -18.503177642822266
    8. '(H' → logprob: -19.003177642822266
    9. ',H' → logprob: -19.753177642822266
    10. '  ' → logprob: -20.128177642822266

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01852915994822979
    2. '):' → logprob: -4.268528938293457
    3. '>:' → logprob: -5.643528938293457
    4. ']:' → logprob: -8.518528938293457
    5. '<|end|>' → logprob: -9.018528938293457
    6. ':
' → logprob: -9.393528938293457
    7. ':not' → logprob: -9.518528938293457
    8. '>' → logprob: -9.643528938293457
    9. ')' → logprob: -10.018528938293457
    10. '):
' → logprob: -10.518528938293457

Token 70: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8290010690689087
    2. ' d' → logprob: -1.4540010690689087
    3. 'c' → logprob: -1.8290010690689087
    4. ' c' → logprob: -2.454000949859619
    5. ',' → logprob: -3.829000949859619
    6. 'u' → logprob: -4.704000949859619
    7. 't' → logprob: -4.704000949859619
    8. ' t' → logprob: -4.829000949859619
    9. ' ,' → logprob: -5.204000949859619
    10. 'dist' → logprob: -5.329000949859619

Token 71: ' u' (ID: 337)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43203142285346985
    2. 'c' → logprob: -1.1820313930511475
    3. 't' → logprob: -3.6820313930511475
    4. ' d' → logprob: -4.682031631469727
    5. ' c' → logprob: -5.432031631469727
    6. ' t' → logprob: -6.807031631469727
    7. 'dist' → logprob: -7.057031631469727
    8. ' ' → logprob: -7.557031631469727
    9. 'w' → logprob: -7.557031631469727
    10. 'u' → logprob: -7.932031631469727

Token 72: '=' (ID: 28)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.9115198254585266
    2. ',c' → logprob: -1.2865197658538818
    3. ',' → logprob: -2.036519765853882
    4. ',d' → logprob: -2.286519765853882
    5. ',u' → logprob: -3.411519765853882
    6. ',t' → logprob: -3.911519765853882
    7. ',w' → logprob: -4.036520004272461
    8. ',q' → logprob: -5.036520004272461
    9. ',p' → logprob: -5.911520004272461
    10. '=' → logprob: -6.036520004272461

Token 73: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.04613306745886803
    2. 'heap' → logprob: -3.296133041381836
    3. ' he' → logprob: -5.046133041381836
    4. 'q' → logprob: -7.421133041381836
    5. '0' → logprob: -7.671133041381836
    6. '<|end|>' → logprob: -8.796133041381836
    7. ' heap' → logprob: -8.921133041381836
    8. 'h' → logprob: -9.171133041381836
    9. '.he' → logprob: -9.921133041381836
    10. 'import' → logprob: -10.796133041381836

Token 74: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.723973582556937e-05
    2. 'ap' → logprob: -11.000017166137695
    3. ' app' → logprob: -15.375017166137695
    4. 'a' → logprob: -15.875017166137695
    5. 'pp' → logprob: -16.250017166137695
    6. 'q' → logprob: -17.375017166137695
    7. '[' → logprob: -17.375017166137695
    8. 'qp' → logprob: -18.625017166137695
    9. '```' → logprob: -18.750017166137695
    10. 'ап' → logprob: -18.750017166137695

Token 75: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0002371521550230682
    2. 'ush' → logprob: -8.375237464904785
    3. '[' → logprob: -13.000237464904785
    4. ' op' → logprob: -13.625237464904785
    5. '	op' → logprob: -14.250237464904785
    6. 'opleft' → logprob: -14.375237464904785
    7. 'o' → logprob: -14.875237464904785
    8. '```' → logprob: -14.875237464904785
    9. '(op' → logprob: -15.000237464904785
    10. 'pop' → logprob: -15.750237464904785

Token 76: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.625011444091797
    3. ',H' → logprob: -14.375011444091797
    4. 'H' → logprob: -14.625011444091797
    5. ' (' → logprob: -14.750011444091797
    6. ')' → logprob: -15.375011444091797
    7. ',' → logprob: -15.750011444091797
    8. '```' → logprob: -16.000011444091797
    9. '<|end|>' → logprob: -16.250011444091797
    10. '(
' → logprob: -16.750011444091797

Token 77: ')[' (ID: 13637)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.29052892327308655
    2. ')' → logprob: -1.4155288934707642
    3. ')
' → logprob: -4.790528774261475
    4. ')[' → logprob: -7.790528774261475
    5. ' )
' → logprob: -8.040529251098633
    6. ')`
' → logprob: -9.290529251098633
    7. ')d' → logprob: -9.915529251098633
    8. '())
' → logprob: -10.165529251098633
    9. ' )' → logprob: -10.665529251098633
    10. ' ' → logprob: -10.790529251098633

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. ' ' → logprob: -9.875056266784668
    3. '0' → logprob: -12.625056266784668
    4. '```' → logprob: -14.875056266784668
    5. ' ' → logprob: -15.562556266784668
    6. '   ' → logprob: -15.750056266784668
    7. '  ' → logprob: -16.25005531311035
    8. '`' → logprob: -16.50005531311035
    9. '-' → logprob: -17.12505531311035
    10. '' → logprob: -17.18755531311035

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052692852914333344
    2. ']
' → logprob: -3.5526928901672363
    3. ')' → logprob: -4.552692890167236
    4. ' ]' → logprob: -5.427692890167236
    5. ' ' → logprob: -5.927692890167236
    6. ',' → logprob: -6.552692890167236
    7. '<|end|>' → logprob: -7.052692890167236
    8. ')
' → logprob: -7.177692890167236
    9. ' for' → logprob: -7.177692890167236
    10. ' ]
' → logprob: -8.177692413330078

Token 80: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2672428488731384
    2. ' if' → logprob: -1.7672429084777832
    3. 'for' → logprob: -3.892242908477783
    4. ' ' → logprob: -4.142242908477783
    5. ':' → logprob: -4.892242908477783
    6. '<|end|>' → logprob: -4.892242908477783
    7. 'if' → logprob: -5.517242908477783
    8. ' 
' → logprob: -5.892242908477783
    9. ',' → logprob: -6.267242908477783
    10. ')' → logprob: -7.267242908477783

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33672571182250977
    2. ' if' → logprob: -1.7117257118225098
    3. 'for' → logprob: -2.5867257118225098
    4. 'if' → logprob: -3.7117257118225098
    5. ' ' → logprob: -5.58672571182251
    6. 'f' → logprob: -7.71172571182251
    7. ':' → logprob: -7.96172571182251
    8. ',' → logprob: -8.211725234985352
    9. 's' → logprob: -8.836725234985352
    10. ' f' → logprob: -9.086725234985352

Token 82: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1514337956905365
    2. 'v' → logprob: -2.4014337062835693
    3. ' w' → logprob: -3.2764337062835693
    4. 'w' → logprob: -5.151433944702148
    5. ' c' → logprob: -6.026433944702148
    6. ' ' → logprob: -7.526433944702148
    7. '(v' → logprob: -7.776433944702148
    8. ' x' → logprob: -8.213933944702148
    9. ' e' → logprob: -8.338933944702148
    10. 'c' → logprob: -8.463933944702148

Token 83: ',c' (ID: 22261)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.12691624462604523
    2. ',' → logprob: -2.5019161701202393
    3. ',c' → logprob: -3.3769161701202393
    4. ' ,' → logprob: -7.251916408538818
    5. ',d' → logprob: -7.376916408538818
    6. ',t' → logprob: -8.12691593170166
    7. 'w' → logprob: -8.25191593170166
    8. ',x' → logprob: -8.37691593170166
    9. ',u' → logprob: -8.50191593170166
    10. ',e' → logprob: -8.75191593170166

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07475946843624115
    2. ',' → logprob: -3.0747594833374023
    3. ',w' → logprob: -4.574759483337402
    4. ',v' → logprob: -5.324759483337402
    5. 'in' → logprob: -5.824759483337402
    6. ',d' → logprob: -6.324759483337402
    7. ',c' → logprob: -6.574759483337402
    8. ',in' → logprob: -6.699759483337402
    9. ',count' → logprob: -7.574759483337402
    10. ',u' → logprob: -7.574759483337402

Token 85: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34863996505737305
    2. ' A' → logprob: -1.223639965057373
    3. ' ' → logprob: -8.723640441894531
    4. 'd' → logprob: -11.473640441894531
    5. ' d' → logprob: -11.848640441894531
    6. 'list' → logprob: -12.348640441894531
    7. 'a' → logprob: -13.348640441894531
    8. ' list' → logprob: -13.786140441894531
    9. 's' → logprob: -14.036140441894531
    10. '	A' → logprob: -14.286140441894531

Token 86: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.889424836728722e-05
    2. 'u' → logprob: -9.750099182128906
    3. '[' → logprob: -10.500099182128906
    4. '[v' → logprob: -12.750099182128906
    5. ' [' → logprob: -13.125099182128906
    6. '```' → logprob: -13.375099182128906
    7. '][' → logprob: -13.625099182128906
    8. ' u' → logprob: -13.750099182128906
    9. '[s' → logprob: -13.875099182128906
    10. '[I' → logprob: -14.875099182128906

Token 87: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.025298412889242172
    2. ']:
' → logprob: -3.7752983570098877
    3. ']' → logprob: -6.775298595428467
    4. ']:

' → logprob: -8.025298118591309
    5. ' ]' → logprob: -8.525298118591309
    6. ':' → logprob: -8.775298118591309
    7. '[' → logprob: -9.400298118591309
    8. ']:
' → logprob: -9.525298118591309
    9. ']:


' → logprob: -11.525298118591309
    10. '):' → logprob: -11.775298118591309

Token 88: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5605812668800354
    2. '<|end|>' → logprob: -1.1855812072753906
    3. ' if' → logprob: -2.8105812072753906
    4. ':' → logprob: -3.0605812072753906
    5. '  ' → logprob: -5.560581207275391
    6. ',' → logprob: -5.685581207275391
    7. ' :' → logprob: -6.185581207275391
    8. ' 
' → logprob: -6.310581207275391
    9. '   ' → logprob: -6.560581207275391
    10. '<|end|>' → logprob: -7.060581207275391

Token 89: ' t' (ID: 260)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '=d' (ID: 56413)
  Prédit: '=d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=d' → logprob: -1.0804405212402344
    2. '=' → logprob: -1.7054405212402344
    3. ' =' → logprob: -1.7054405212402344
    4. ' d' → logprob: -2.0804405212402344
    5. 'mp' → logprob: -2.2054405212402344
    6. 'd' → logprob: -4.705440521240234
    7. ' ' → logprob: -4.830440521240234
    8. ' if' → logprob: -5.080440521240234
    9. '=p' → logprob: -5.705440521240234
    10. '=f' → logprob: -5.705440521240234

Token 91: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.032558634877204895
    2. '[v' → logprob: -3.6575586795806885
    3. 'u' → logprob: -5.282558441162109
    4. 'v' → logprob: -7.407558441162109
    5. '[' → logprob: -7.657558441162109
    6. '<u' → logprob: -10.40755844116211
    7. '	u' → logprob: -11.53255844116211
    8. ' u' → logprob: -11.78255844116211
    9. ' [' → logprob: -12.40755844116211
    10. ']' → logprob: -12.65755844116211

Token 92: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.09998179227113724
    2. '+c' → logprob: -3.0999817848205566
    3. ']' → logprob: -3.5999817848205566
    4. '+' → logprob: -4.224981784820557
    5. ')+' → logprob: -5.349981784820557
    6. ' ]' → logprob: -6.474981784820557
    7. ' +' → logprob: -6.724981784820557
    8. '>' → logprob: -8.474982261657715
    9. ')' → logprob: -8.974982261657715
    10. '+]' → logprob: -9.349982261657715

Token 93: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01105359848588705
    2. ' c' → logprob: -4.511053562164307
    3. ' ' → logprob: -12.761054039001465
    4. '  ' → logprob: -13.386054039001465
    5. '*c' → logprob: -14.511054039001465
    6. ')c' → logprob: -15.261054039001465
    7. '<|end|>' → logprob: -16.13605308532715
    8. '   ' → logprob: -16.26105308532715
    9. '	c' → logprob: -16.38605308532715
    10. '%c' → logprob: -16.51105308532715

Token 94: '
' (ID: 198)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6085693836212158
    2. ' <' → logprob: -1.6085693836212158
    3. '<|end|>' → logprob: -1.7335693836212158
    4. ' ' → logprob: -3.483569383621216
    5. ' if' → logprob: -4.233569145202637
    6. '<int' → logprob: -4.483569145202637
    7. '<v' → logprob: -5.608569145202637
    8. '<len' → logprob: -6.108569145202637
    9. ',' → logprob: -6.108569145202637
    10. 'if' → logprob: -6.233569145202637

Token 95: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5371585488319397
    2. 'if' (adapté à ' if') → logprob: -0.9121585488319397
    3. ' ' → logprob: -4.662158489227295
    4. '>' → logprob: -5.912158489227295
    5. '<|end|>' → logprob: -7.662158489227295
    6. ' <' → logprob: -8.037158966064453
    7. '  ' → logprob: -8.287158966064453
    8. ' >' → logprob: -8.787158966064453
    9. '<' → logprob: -8.787158966064453
    10. 'If' → logprob: -10.162158966064453

Token 97: ' d' (ID: 272)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5763192176818848
    2. 't' → logprob: -0.8263192176818848
    3. ' d' → logprob: -8.326318740844727
    4. 'd' → logprob: -8.951318740844727
    5. ' ' → logprob: -12.326318740844727
    6. '<t' → logprob: -13.451318740844727
    7. '`t' → logprob: -13.826318740844727
    8. ' ' → logprob: -14.451318740844727
    9. '  ' → logprob: -15.826318740844727
    10. '	t' → logprob: -15.951318740844727

Token 98: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.874882430769503e-05
    2. 'v' → logprob: -10.000079154968262
    3. '[u' → logprob: -10.750079154968262
    4. ' v' → logprob: -11.625079154968262
    5. '[' → logprob: -13.250079154968262
    6. '<v' → logprob: -14.625079154968262
    7. ' [' → logprob: -15.625079154968262
    8. '	v' → logprob: -15.875079154968262
    9. '[t' → logprob: -16.250078201293945
    10. ',v' → logprob: -16.875078201293945

Token 99: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.042568374425172806
    2. ' >' → logprob: -3.2925684452056885
    3. ']>' → logprob: -5.667568206787109
    4. ' ' → logprob: -8.04256820678711
    5. '">' → logprob: -8.29256820678711
    6. ']' → logprob: -8.29256820678711
    7. ' ]' → logprob: -10.41756820678711
    8. '>tag' → logprob: -10.54256820678711
    9. '[' → logprob: -10.79256820678711
    10. '  ' → logprob: -11.29256820678711

Token 100: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.020543057471513748
    2. ' t' → logprob: -3.895543098449707
    3. ' ' → logprob: -14.145543098449707
    4. '  ' → logprob: -15.145543098449707
    5. '`t' → logprob: -16.39554214477539
    6. '   ' → logprob: -16.52054214477539
    7. '	t' → logprob: -17.02054214477539
    8. '    ' → logprob: -18.14554214477539
    9. ' ' → logprob: -18.52054214477539
    10. '<|end|>' → logprob: -18.52054214477539

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14390674233436584
    2. ':
' → logprob: -2.018906831741333
    3. ' :
' → logprob: -7.643906593322754
    4. ' :' → logprob: -8.018906593322754
    5. '=' → logprob: -9.518906593322754
    6. ':d' → logprob: -9.768906593322754
    7. ' d' → logprob: -10.268906593322754
    8. ' ' → logprob: -10.393906593322754
    9. '):
' → logprob: -10.393906593322754
    10. '<|end|>' → logprob: -10.518906593322754

Token 102: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6836220026016235
    2. 'd' → logprob: -1.3086220026016235
    3. '   ' → logprob: -1.5586220026016235
    4. '  ' → logprob: -4.683621883392334
    5. ' ' → logprob: -6.558621883392334
    6. '    ' → logprob: -6.933621883392334
    7. '```' → logprob: -7.683621883392334
    8. '   
' → logprob: -8.183622360229492
    9. '<|end|>' → logprob: -8.183622360229492
    10. ' 
' → logprob: -8.433622360229492

Token 103: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4479824900627136
    2. 'd' (adapté à ' d') → logprob: -1.0729825496673584
    3. '   ' → logprob: -4.572982311248779
    4. '    ' → logprob: -4.822982311248779
    5. '  ' → logprob: -8.572982788085938
    6. ' ' → logprob: -8.947982788085938
    7. '     ' → logprob: -9.072982788085938
    8. '```' → logprob: -9.572982788085938
    9. '      ' → logprob: -10.197982788085938
    10. '	d' → logprob: -10.322982788085938

Token 104: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.8193366486229934e-05
    2. 'v' → logprob: -11.750018119812012
    3. '=v' → logprob: -12.500018119812012
    4. '[' → logprob: -12.625018119812012
    5. '[u' → logprob: -13.625018119812012
    6. ' v' → logprob: -14.750018119812012
    7. ',v' → logprob: -14.875018119812012
    8. ' [' → logprob: -15.250018119812012
    9. '	v' → logprob: -15.500018119812012
    10. '<v' → logprob: -15.625018119812012

Token 105: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4007520377635956
    2. '=t' → logprob: -1.775752067565918
    3. '=v' → logprob: -2.150752067565918
    4. ']=' → logprob: -3.275752067565918
    5. ' =' → logprob: -5.150752067565918
    6. '=c' → logprob: -7.775752067565918
    7. '=u' → logprob: -8.525752067565918
    8. ')=' → logprob: -10.150752067565918
    9. ']' → logprob: -10.150752067565918
    10. '=d' → logprob: -10.900752067565918

Token 106: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0036014977376908064
    2. ' t' → logprob: -5.628601551055908
    3. '   ' → logprob: -15.00360107421875
    4. '`t' → logprob: -15.00360107421875
    5. '<|end|>' → logprob: -15.00360107421875
    6. '	t' → logprob: -15.37860107421875
    7. '  ' → logprob: -15.75360107421875
    8. '<t' → logprob: -16.37860107421875
    9. ' ' → logprob: -16.75360107421875
    10. '*t' → logprob: -17.50360107421875

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031624820083379745
    2. ' he' → logprob: -3.5316247940063477
    3. 'he' → logprob: -6.406624794006348
    4. '    ' → logprob: -9.531624794006348
    5. '[' → logprob: -10.156624794006348
    6. '  ' → logprob: -10.156624794006348
    7. '       ' → logprob: -11.031624794006348
    8. '```' → logprob: -11.281624794006348
    9. '     ' → logprob: -11.531624794006348
    10. '           ' → logprob: -11.781624794006348

Token 108: '   ' (ID: 271)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.6432388424873352
    2. '   ' → logprob: -0.8932388424873352
    3. 'he' → logprob: -2.7682387828826904
    4. '[' → logprob: -7.0182390213012695
    5. '  ' → logprob: -7.2682390213012695
    6. '```' → logprob: -8.01823902130127
    7. ' heap' → logprob: -9.64323902130127
    8. '       ' → logprob: -9.89323902130127
    9. '           ' → logprob: -10.26823902130127
    10. ' ' → logprob: -10.26823902130127

Token 109: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.005308585241436958
    2. ' he' → logprob: -5.255308628082275
    3. 'heap' → logprob: -9.505308151245117
    4. ' ' → logprob: -15.755308151245117
    5. ' heap' → logprob: -16.255308151245117
    6. 'e' → logprob: -17.130308151245117
    7. '_he' → logprob: -17.630308151245117
    8. 'push' → logprob: -18.755308151245117
    9. '.he' → logprob: -18.880308151245117
    10. '  ' → logprob: -19.005308151245117

Token 110: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0683535037969705e-05
    2. 'ap' → logprob: -11.50001049041748
    3. ' app' → logprob: -14.87501049041748
    4. 'a' → logprob: -16.500011444091797
    5. 'App' → logprob: -18.250011444091797
    6. 'appen' → logprob: -18.750011444091797
    7. 'appt' → logprob: -19.000011444091797
    8. '_app' → logprob: -19.250011444091797
    9. '```' → logprob: -19.250011444091797
    10. 'pp' → logprob: -19.625011444091797

Token 111: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.3856492842023727e-06
    2. 'op' → logprob: -13.625000953674316
    3. 'push' → logprob: -15.875000953674316
    4. 'sh' → logprob: -19.125001907348633
    5. 'USH' → logprob: -19.125001907348633
    6. 'us' → logprob: -19.750001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '[' → logprob: -20.500001907348633
    9. 'p' → logprob: -20.625001907348633
    10. 'u' → logprob: -20.750001907348633

Token 112: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.371605948312208e-05
    2. '(' → logprob: -9.875053405761719
    3. '<|end|>' → logprob: -13.500053405761719
    4. ' (' → logprob: -15.250053405761719
    5. '(A' → logprob: -16.12505340576172
    6. '(S' → logprob: -16.25005340576172
    7. '(I' → logprob: -16.25005340576172
    8. ',H' → logprob: -16.87505340576172
    9. '(Q' → logprob: -16.87505340576172
    10. '(B' → logprob: -17.62505340576172

Token 113: ',(' (ID: 27243)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -4.811348480870947e-05
    2. ',' → logprob: -11.12504768371582
    3. ' (' → logprob: -11.12504768371582
    4. ',H' → logprob: -11.37504768371582
    5. '(' → logprob: -12.50004768371582
    6. ',(' → logprob: -12.75004768371582
    7. ' ,' → logprob: -15.50004768371582
    8. '((' → logprob: -15.75004768371582
    9. ' ' → logprob: -16.62504768371582
    10. ' H' → logprob: -17.87504768371582

Token 114: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0029684302862733603
    2. 'd' → logprob: -6.0029683113098145
    3. ' t' → logprob: -7.6279683113098145
    4. ' d' → logprob: -12.877968788146973
    5. '   ' → logprob: -13.377968788146973
    6. '  ' → logprob: -14.127968788146973
    7. ' ' → logprob: -14.502968788146973
    8. '    ' → logprob: -15.377968788146973
    9. '(t' → logprob: -15.502968788146973
    10. '```' → logprob: -16.002967834472656

Token 115: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.004708276130259037
    2. ',' → logprob: -5.379708290100098
    3. ' ,' → logprob: -9.379708290100098
    4. ' v' → logprob: -13.004708290100098
    5. 'v' → logprob: -13.629708290100098
    6. ' ' → logprob: -17.75470733642578
    7. '?v' → logprob: -17.87970733642578
    8. '[v' → logprob: -18.25470733642578
    9. ',d' → logprob: -18.37970733642578
    10. '<v' → logprob: -18.37970733642578

Token 116: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133169710636139
    2. ')' → logprob: -1.3133169412612915
    3. ')))' → logprob: -10.93831729888916
    4. ' )' → logprob: -11.06331729888916
    5. ' ))' → logprob: -11.56331729888916
    6. '))
' → logprob: -11.81331729888916
    7. ')
' → logprob: -12.56331729888916
    8. ')#' → logprob: -15.18831729888916
    9. ')}' → logprob: -15.93831729888916
    10. '));' → logprob: -16.063316345214844

Token 117: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6819841265678406
    2. ' ' → logprob: -0.9319841265678406
    3. '<|end|>' → logprob: -3.3069841861724854
    4. 'return' → logprob: -4.181983947753906
    5. 'd' → logprob: -4.306983947753906
    6. 'r' → logprob: -4.931983947753906
    7. ' 
' → logprob: -5.181983947753906
    8. '   ' → logprob: -5.681983947753906
    9. ' d' → logprob: -5.931983947753906
    10. '	return' → logprob: -6.056983947753906

Token 118: '('\' (ID: 24345)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0036833323538303375
    2. '(min' → logprob: -5.628683567047119
    3. '(max' → logprob: -10.253683090209961
    4. '(' → logprob: -10.378683090209961
    5. 'd' → logprob: -11.753683090209961
    6. ' (' → logprob: -12.753683090209961
    7. '(sum' → logprob: -12.878683090209961
    8. 'min' → logprob: -13.503683090209961
    9. '(D' → logprob: -13.628683090209961
    10. '(dist' → logprob: -15.253683090209961

Token 119: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5875229239463806
    2. 'n' → logprob: -0.8375229239463806
    3. ' d' → logprob: -4.712522983551025
    4. '0' → logprob: -7.587522983551025
    5. ' n' → logprob: -7.712522983551025
    6. ''' → logprob: -8.587522506713867
    7. 'max' → logprob: -8.837522506713867
    8. '1' → logprob: -8.837522506713867
    9. 'min' → logprob: -8.962522506713867
    10. '9' → logprob: -9.212522506713867

Token 120: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.047607939690351486
    2. 'join' → logprob: -3.172607898712158
    3. '0' → logprob: -6.922607898712158
    4. ''' → logprob: -7.297607898712158
    5. '')' → logprob: -7.297607898712158
    6. ')' → logprob: -7.297607898712158
    7. '.join' → logprob: -7.422607898712158
    8. ' '.' → logprob: -7.672607898712158
    9. '.' → logprob: -8.047608375549316
    10. '".' → logprob: -9.422608375549316

Token 121: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.857719275401905e-05
    2. ' join' → logprob: -10.625038146972656
    3. 'strip' → logprob: -11.625038146972656
    4. 'jo' → logprob: -12.875038146972656
    5. 'sep' → logprob: -14.500038146972656
    6. 'j' → logprob: -14.625038146972656
    7. ')' → logprob: -14.625038146972656
    8. 'print' → logprob: -14.750038146972656
    9. ' ' → logprob: -15.125038146972656
    10. 'rstrip' → logprob: -15.875038146972656

Token 122: '(f' (ID: 1526)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00556468591094017
    2. 'map' → logprob: -5.2555646896362305
    3. '(str' → logprob: -8.13056468963623
    4. ' map' → logprob: -10.75556468963623
    5. '(' → logprob: -12.00556468963623
    6. 'str' → logprob: -13.00556468963623
    7. '([' → logprob: -13.13056468963623
    8. ' (' → logprob: -13.25556468963623
    9. '(list' → logprob: -13.63056468963623
    10. ',map' → logprob: -14.00556468963623

Token 123: ''{' (ID: 47735)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.3267308473587036
    2. '(map' → logprob: -1.4517308473587036
    3. 'map' → logprob: -1.9517308473587036
    4. '"{' → logprob: -2.326730728149414
    5. '(str' → logprob: -2.701730728149414
    6. ''{' → logprob: -2.826730728149414
    7. '({' → logprob: -3.201730728149414
    8. 'str' → logprob: -3.701730728149414
    9. '(f' → logprob: -3.826730728149414
    10. 'ormat' → logprob: -4.576730728149414

Token 124: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21189993619918823
    2. 'x' → logprob: -1.711899995803833
    3. 'd' → logprob: -4.711899757385254
    4. 'v' → logprob: -7.086899757385254
    5. 'u' → logprob: -8.711899757385254
    6. 'int' → logprob: -9.211899757385254
    7. 'a' → logprob: -9.586899757385254
    8. ' i' → logprob: -9.586899757385254
    9. 'dist' → logprob: -10.336899757385254
    10. 'k' → logprob: -10.461899757385254

Token 125: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0017513417406007648
    2. '}:' → logprob: -6.75175142288208
    3. '}:{' → logprob: -8.126750946044922
    4. '},{' → logprob: -9.251750946044922
    5. '}'' → logprob: -9.251750946044922
    6. ' }' → logprob: -10.626750946044922
    7. ' d' → logprob: -10.876750946044922
    8. '+' → logprob: -11.376750946044922
    9. 'd' → logprob: -11.751750946044922
    10. ':d' → logprob: -12.126750946044922

Token 126: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.2407934665679932
    2. '}' → logprob: -1.3657934665679932
    3. ' d' → logprob: -1.6157934665679932
    4. ' i' → logprob: -1.6157934665679932
    5. ':' → logprob: -4.240793228149414
    6. ' }' → logprob: -4.615793228149414
    7. ' ' → logprob: -4.740793228149414
    8. ',' → logprob: -5.865793228149414
    9. ' :' → logprob: -5.990793228149414
    10. '}:' → logprob: -5.990793228149414

Token 127: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010164948180317879
    2. 'i' → logprob: -7.751016616821289
    3. ' d' → logprob: -8.626016616821289
    4. 'int' → logprob: -8.751016616821289
    5. 'j' → logprob: -8.876016616821289
    6. 'x' → logprob: -9.751016616821289
    7. 'v' → logprob: -11.501016616821289
    8. ' ' → logprob: -12.376016616821289
    9. 'c' → logprob: -12.626016616821289
    10. '(d' → logprob: -12.626016616821289

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005054924986325204
    2. '[v' → logprob: -7.875505447387695
    3. 'i' → logprob: -9.125505447387695
    4. '[j' → logprob: -11.750505447387695
    5. '[x' → logprob: -12.750505447387695
    6. 'v' → logprob: -13.125505447387695
    7. '[u' → logprob: -13.625505447387695
    8. '[' → logprob: -14.125505447387695
    9. ' i' → logprob: -14.625505447387695
    10. '(i' → logprob: -15.125505447387695

Token 129: ']' (ID: 60)
  Prédit: '}''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.004549507517367601
    2. ']' → logprob: -5.754549503326416
    3. ']'' → logprob: -7.129549503326416
    4. '}')' → logprob: -8.379549980163574
    5. '}' → logprob: -8.504549980163574
    6. ' }' → logprob: -9.629549980163574
    7. '})' → logprob: -10.129549980163574
    8. ']}' → logprob: -11.879549980163574
    9. '])' → logprob: -11.879549980163574
    10. ')}' → logprob: -12.254549980163574

Token 130: '}'' (ID: 24321)
  Prédit: '}''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.022525886073708534
    2. ''' → logprob: -4.522525787353516
    3. ')'' → logprob: -4.897525787353516
    4. '}')' → logprob: -5.897525787353516
    5. '')' → logprob: -7.272525787353516
    6. 'for' → logprob: -8.397525787353516
    7. ' for' → logprob: -9.272525787353516
    8. '})' → logprob: -9.897525787353516
    9. ']'' → logprob: -10.147525787353516
    10. ')' → logprob: -10.272525787353516

Token 131: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10022532939910889
    2. 'for' → logprob: -2.3502254486083984
    3. ')' → logprob: -11.600225448608398
    4. 'range' → logprob: -12.725225448608398
    5. ' ' → logprob: -12.975225448608398
    6. '(range' → logprob: -13.100225448608398
    7. ',' → logprob: -13.975225448608398
    8. ' range' → logprob: -14.725225448608398
    9. '(i' → logprob: -15.225225448608398
    10. '	for' → logprob: -15.725225448608398

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07915250211954117
    2. ' i' → logprob: -2.5791525840759277
    3. 'range' → logprob: -8.70415210723877
    4. ' range' → logprob: -9.32915210723877
    5. ' in' → logprob: -11.82915210723877
    6. 'in' → logprob: -14.20415210723877
    7. 'x' → logprob: -18.204153060913086
    8. ' ' → logprob: -18.579153060913086
    9. '_i' → logprob: -18.579153060913086
    10. '(i' → logprob: -18.704153060913086

Token 133: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2217598855495453
    2. 'range' → logprob: -1.7217599153518677
    3. '(range' → logprob: -4.221759796142578
    4. ' in' → logprob: -5.221759796142578
    5. 'in' → logprob: -9.596759796142578
    6. ' xrange' → logprob: -13.596759796142578
    7. '	range' → logprob: -14.346759796142578
    8. '(' → logprob: -15.471759796142578
    9. '_range' → logprob: -16.096759796142578
    10. ' ' → logprob: -16.846759796142578

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -19.504077911376953
    4. ' ' → logprob: -19.629077911376953
    5. 'r' → logprob: -20.129077911376953
    6. 'rang' → logprob: -22.004077911376953
    7. 'Range' → logprob: -22.629077911376953
    8. '  ' → logprob: -23.004077911376953
    9. '```' → logprob: -23.379077911376953
    10. '	range' → logprob: -23.504077911376953

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3134114146232605
    2. '(' → logprob: -1.3134114742279053
    3. '(len' → logprob: -9.063411712646484
    4. ' (' → logprob: -10.563411712646484
    5. '1' → logprob: -12.813411712646484
    6. ' n' → logprob: -13.313411712646484
    7. 'n' → logprob: -13.313411712646484
    8. ' ' → logprob: -13.438411712646484
    9. 'len' → logprob: -15.063411712646484
    10. '(
' → logprob: -16.688411712646484

Token 136: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06378430873155594
    2. ')' → logprob: -3.43878436088562
    3. '+' → logprob: -3.81378436088562
    4. ')))' → logprob: -5.438784122467041
    5. ',' → logprob: -6.313784122467041
    6. ' ))' → logprob: -7.438784122467041
    7. ' )' → logprob: -8.0637845993042
    8. ')}' → logprob: -9.1887845993042
    9. '))
' → logprob: -9.8137845993042
    10. ''))' → logprob: -9.9387845993042

Token 137: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.395664244890213
    2. '<|end|>' → logprob: -1.1456642150878906
    3. ' )' → logprob: -5.895664215087891
    4. ' ' → logprob: -6.020664215087891
    5. ':' → logprob: -6.270664215087891
    6. ',' → logprob: -7.895664215087891
    7. '<|end|>' → logprob: -8.14566421508789
    8. '(' → logprob: -8.52066421508789
    9. '[' → logprob: -8.89566421508789
    10. '```' → logprob: -9.14566421508789

Token 138: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00045807508286088705
    2. '(' → logprob: -7.750458240509033
    3. ']()' → logprob: -12.125457763671875
    4. '()
' → logprob: -12.625457763671875
    5. ' ()' → logprob: -12.625457763671875
    6. '`()' → logprob: -12.750457763671875
    7. '#' → logprob: -13.125457763671875
    8. '()`' → logprob: -13.250457763671875
    9. '()]' → logprob: -13.500457763671875
    10. '()

' → logprob: -13.500457763671875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 136
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 43.38%
Précision adaptée (1ère position): 44.12%
Précision (top 10): 76.47%
================================================================================
