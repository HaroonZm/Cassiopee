================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from heapq import *

MAX_INT= 10 ** 10

n = int(input())
adj_list = []

for _ in range(n):
  commands = sys.stdin.readline().split()
  lst = [ commands[i:i+2] for i in range(2, len(commands), 2)]
  adj_list.append(lst)

def dijkstra():
  # initialization
  visited = [False] * n
  dist_arr = [MAX_INT] * n
  pq = []
  prev = [None] * n

  # append 0 to pqs
  pq = [(0, 0)]
  dist_arr[0] = 0

  while len(pq) > 0:
    dist, idx = heappop(pq)
    visited[idx] = True

    # updating current values in dist
    for edge in adj_list[idx]:
      cur_idx, cur_dist = [ int(e) for e in edge]
      if visited[cur_idx]: continue

      new_dist = dist + cur_dist

      if new_dist < dist_arr[cur_idx]:
        dist_arr[cur_idx] = new_dist
        heappush(pq, (dist_arr[cur_idx], cur_idx))

  return dist_arr

distArr = dijkstra()
for i in range(n):
  print(i, distArr[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.082895273109898e-05
    2. 'import' → logprob: -10.500030517578125
    3. 'queue' → logprob: -12.750030517578125
    4. ' import' → logprob: -15.500030517578125
    5. 'ify' → logprob: -17.250030517578125
    6. 'i' → logprob: -17.875030517578125
    7. ' queue' → logprob: -18.625030517578125
    8. 'ql' → logprob: -18.750030517578125
    9. 'dict' → logprob: -18.750030517578125
    10. 'lib' → logprob: -19.250030517578125

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.005964226555079222
    2. 'import' → logprob: -5.130964279174805
    3. ' ' → logprob: -10.380964279174805
    4. ' im' → logprob: -13.005964279174805
    5. '	import' → logprob: -14.005964279174805
    6. ' impor' → logprob: -15.130964279174805
    7. '_import' → logprob: -15.255964279174805
    8. '.' → logprob: -16.255964279174805
    9. ' export' → logprob: -16.255964279174805
    10. ' importar' → logprob: -16.505964279174805

Token 7: ' *

' (ID: 40558)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2552620470523834
    2. ' he' → logprob: -1.505262017250061
    3. 'heap' → logprob: -5.7552618980407715
    4. 'import' → logprob: -9.75526237487793
    5. ' n' → logprob: -10.75526237487793
    6. 'n' → logprob: -10.88026237487793
    7. ' heap' → logprob: -10.88026237487793
    8. 'nl' → logprob: -10.88026237487793
    9. 'merge' → logprob: -11.63026237487793
    10. ' ' → logprob: -12.13026237487793

Token 8: 'MAX' (ID: 21911)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42030975222587585
    2. 'import' → logprob: -1.5453097820281982
    3. 'd' → logprob: -3.0453097820281982
    4. 'he' → logprob: -3.7953097820281982
    5. '(' → logprob: -4.420309543609619
    6. 'heap' → logprob: -4.545309543609619
    7. '' → logprob: -4.920309543609619
    8. ' ' → logprob: -5.170309543609619
    9. 'q' → logprob: -5.420309543609619
    10. 'n' → logprob: -5.920309543609619

Token 9: '_INT' (ID: 20388)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.6879534125328064
    2. '_' → logprob: -0.8129534125328064
    3. 'SIZE' → logprob: -3.687953472137451
    4. ' _' → logprob: -4.687953472137451
    5. '_DEPTH' → logprob: -4.937953472137451
    6. ' =' → logprob: -5.937953472137451
    7. '_VALUE' → logprob: -6.062953472137451
    8. '_INT' → logprob: -6.312953472137451
    9. '_VAL' → logprob: -6.562953472137451
    10. '_SPACE' → logprob: -7.312953472137451

Token 10: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40486136078834534
    2. '=' → logprob: -1.529861330986023
    3. '_' → logprob: -2.9048614501953125
    4. ')' → logprob: -3.0298614501953125
    5. ' ' → logprob: -5.4048614501953125
    6. ' )' → logprob: -6.0298614501953125
    7. ',' → logprob: -6.5298614501953125
    8. '<|end|>' → logprob: -6.7798614501953125
    9. '```' → logprob: -7.9048614501953125
    10. '>' → logprob: -7.9048614501953125

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013813918456435204
    2. '214' → logprob: -4.6388139724731445
    3. '10' → logprob: -6.2638139724731445
    4. '922' → logprob: -7.0138139724731445
    5. '1' → logprob: -7.7638139724731445
    6. ' sys' → logprob: -8.138813972473145
    7. '2' → logprob: -9.013813972473145
    8. 'sys' → logprob: -9.138813972473145
    9. '100' → logprob: -9.513813972473145
    10. '9' → logprob: -9.513813972473145

Token 12: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7125741243362427
    2. '214' → logprob: -0.8375741243362427
    3. '922' → logprob: -2.837574005126953
    4. 'sys' → logprob: -4.837574005126953
    5. '10' → logprob: -5.462574005126953
    6. '2' → logprob: -6.212574005126953
    7. '100' → logprob: -6.712574005126953
    8. '999' → logprob: -6.962574005126953
    9. ' sys' → logprob: -7.087574005126953
    10. '1' → logprob: -7.587574005126953

Token 13: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005002511315979064
    2. '7' → logprob: -8.875500679016113
    3. '00' → logprob: -9.000500679016113
    4. ' ' → logprob: -9.250500679016113
    5. '**' → logprob: -9.750500679016113
    6. ' **' → logprob: -10.375500679016113
    7. '000' → logprob: -11.000500679016113
    8. '8' → logprob: -11.125500679016113
    9. '6' → logprob: -11.625500679016113
    10. ')' → logprob: -12.750500679016113

Token 14: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002456046058796346
    2. '10' → logprob: -9.000246047973633
    3. '18' → logprob: -9.125246047973633
    4. '12' → logprob: -11.375246047973633
    5. ' ' → logprob: -14.625246047973633
    6. '15' → logprob: -14.625246047973633
    7. '8' → logprob: -15.625246047973633
    8. '19' → logprob: -15.750246047973633
    9. '7' → logprob: -15.750246047973633
    10. '20' → logprob: -15.750246047973633

Token 15: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00023858259373810142
    2. '18' → logprob: -8.750238418579102
    3. '10' → logprob: -9.625238418579102
    4. '7' → logprob: -12.000238418579102
    5. '12' → logprob: -12.500238418579102
    6. '8' → logprob: -13.000238418579102
    7. '15' → logprob: -13.750238418579102
    8. '```' → logprob: -15.500238418579102
    9. ' ' → logprob: -15.625238418579102
    10. '11' → logprob: -16.1252384185791

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5982237458229065
    2. '\n' → logprob: -1.7232236862182617
    3. '' → logprob: -2.2232236862182617
    4. '\' → logprob: -2.5982236862182617
    5. '

' → logprob: -3.3482236862182617
    6. '
' → logprob: -4.223223686218262
    7. ' 

' → logprob: -4.973223686218262
    8. 'newline' → logprob: -5.098223686218262
    9. ' 
' → logprob: -5.223223686218262
    10. 'n' → logprob: -5.348223686218262

Token 17: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11928146332502365
    2. 'def' → logprob: -3.369281530380249
    3. '

' → logprob: -3.369281530380249
    4. '' → logprob: -4.24428129196167
    5. ' 
' → logprob: -4.86928129196167
    6. '
' → logprob: -4.99428129196167
    7. 'd' → logprob: -5.36928129196167
    8. ' 

' → logprob: -5.74428129196167
    9. 'class' → logprob: -6.11928129196167
    10. '#' → logprob: -6.74428129196167

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4575951397418976
    2. ' ' → logprob: -1.4575951099395752
    3. '=' → logprob: -2.207595109939575
    4. ',' → logprob: -3.957595109939575
    5. '  ' → logprob: -5.832595348358154
    6. ' ,' → logprob: -7.332595348358154
    7. 'u' → logprob: -7.582595348358154
    8. '.' → logprob: -7.707595348358154
    9. '_' → logprob: -8.332594871520996
    10. ')' → logprob: -8.707594871520996

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.046844493597745895
    2. 'int' → logprob: -3.671844482421875
    3. ' ' → logprob: -3.921844482421875
    4. '0' → logprob: -7.796844482421875
    5. ' input' → logprob: -10.046844482421875
    6. '10' → logprob: -10.296844482421875
    7. 'input' → logprob: -11.421844482421875
    8. '1' → logprob: -11.921844482421875
    9. '[int' → logprob: -12.421844482421875
    10. '=int' → logprob: -12.546844482421875

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003337969828862697
    2. '(sys' → logprob: -8.875333786010742
    3. '('' → logprob: -9.750333786010742
    4. '(input' → logprob: -10.125333786010742
    5. ' (' → logprob: -10.625333786010742
    6. '(n' → logprob: -10.750333786010742
    7. '()' → logprob: -11.250333786010742
    8. '(
' → logprob: -11.625333786010742
    9. ''' → logprob: -12.875333786010742
    10. '(space' → logprob: -12.875333786010742

Token 21: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5821343660354614
    2. '())' → logprob: -0.8321343660354614
    3. '(' → logprob: -5.457134246826172
    4. ')' → logprob: -6.332134246826172
    5. '().' → logprob: -10.207134246826172
    6. '()))' → logprob: -10.832134246826172
    7. ' ())' → logprob: -10.957134246826172
    8. '()
' → logprob: -11.957134246826172
    9. '()

' → logprob: -11.957134246826172
    10. '(

' → logprob: -12.332134246826172

Token 22: 'adj' (ID: 57001)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22480431199073792
    2. ' 
' → logprob: -2.849804401397705
    3. 'a' → logprob: -3.599804401397705
    4. 'data' → logprob: -3.724804401397705
    5. 'graph' → logprob: -3.724804401397705
    6. 'n' → logprob: -4.599804401397705
    7. '' → logprob: -4.849804401397705
    8. 'for' → logprob: -5.224804401397705
    9. ' ' → logprob: -5.224804401397705
    10. 's' → logprob: -5.474804401397705

Token 23: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010151614435017109
    2. '=' → logprob: -5.010151386260986
    3. '[]' → logprob: -6.510151386260986
    4. 'acency' → logprob: -7.260151386260986
    5. ' =' → logprob: -7.885151386260986
    6. '[u' → logprob: -8.260151863098145
    7. '=[]' → logprob: -9.135151863098145
    8. '[:]' → logprob: -9.385151863098145
    9. '\[' → logprob: -9.760151863098145
    10. ']' → logprob: -10.010151863098145

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5134335160255432
    2. ' =' → logprob: -1.0134334564208984
    3. '[' → logprob: -3.2634334564208984
    4. '[:]' → logprob: -9.638433456420898
    5. '=[]' → logprob: -9.888433456420898
    6. ',' → logprob: -10.388433456420898
    7. ' ' → logprob: -10.388433456420898
    8. '[]' → logprob: -10.513433456420898
    9. '.setdefault' → logprob: -10.638433456420898
    10. ' =[' → logprob: -10.638433456420898

Token 25: ' []

' (ID: 32833)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08878764510154724
    2. '{}' → logprob: -2.83878755569458
    3. '[]' → logprob: -3.83878755569458
    4. ' [[]' → logprob: -6.08878755569458
    5. ' []' → logprob: -6.83878755569458
    6. ' [' → logprob: -7.08878755569458
    7. ' {}' → logprob: -7.83878755569458
    8. '{' → logprob: -8.338788032531738
    9. 'default' → logprob: -9.713788032531738
    10. ' [{}' → logprob: -10.588788032531738

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1163095235824585
    2. ' for' → logprob: -2.366309642791748
    3. '[' → logprob: -4.741309642791748
    4. '<|end|>' → logprob: -5.616309642791748
    5. ' ' → logprob: -6.991309642791748
    6. '[]' → logprob: -7.366309642791748
    7. '
' → logprob: -7.616309642791748
    8. '[n' → logprob: -8.24130916595459
    9. '\' → logprob: -8.61630916595459
    10. '' → logprob: -8.86630916595459

Token 27: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5026283860206604
    2. ' _' → logprob: -1.0026283264160156
    3. ' i' → logprob: -3.7526283264160156
    4. '_' → logprob: -5.377628326416016
    5. ' ' → logprob: -10.752628326416016
    6. '  ' → logprob: -10.877628326416016
    7. ' ‌' → logprob: -11.377628326416016
    8. 'i' → logprob: -11.627628326416016
    9. ' ▁' → logprob: -12.627628326416016
    10. ' range' → logprob: -12.752628326416016

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14299923181533813
    2. 'in' → logprob: -2.0179991722106934
    3. ' ' → logprob: -8.642999649047852
    4. 'import' → logprob: -9.517999649047852
    5. 'n' → logprob: -10.267999649047852
    6. 'i' → logprob: -11.142999649047852
    7. '  ' → logprob: -11.892999649047852
    8. '	in' → logprob: -12.392999649047852
    9. 'range' → logprob: -12.892999649047852
    10. ' i' → logprob: -13.642999649047852

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028074870351701975
    2. ' range' → logprob: -5.8778076171875
    3. 'ran' → logprob: -14.1278076171875
    4. 'rang' → logprob: -14.7528076171875
    5. ' ' → logprob: -15.1278076171875
    6. 'r' → logprob: -15.2528076171875
    7. 'n' → logprob: -15.5028076171875
    8. '	range' → logprob: -15.7528076171875
    9. 'ra' → logprob: -15.8778076171875
    10. '```' → logprob: -15.8778076171875

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09573771059513092
    2. '(' → logprob: -2.5957376956939697
    3. ' (' → logprob: -4.095737934112549
    4. ' n' → logprob: -9.84573745727539
    5. '(range' → logprob: -12.59573745727539
    6. '(int' → logprob: -12.72073745727539
    7. 'n' → logprob: -13.22073745727539
    8. '(
' → logprob: -14.09573745727539
    9. ' ' → logprob: -14.59573745727539
    10. '(num' → logprob: -15.59573745727539

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006580250803381205
    2. ')' → logprob: -5.131580352783203
    3. ' ):' → logprob: -8.006580352783203
    4. '):
' → logprob: -8.756580352783203
    5. '+' → logprob: -9.256580352783203
    6. ':' → logprob: -10.506580352783203
    7. ',' → logprob: -10.881580352783203
    8. ' )' → logprob: -12.131580352783203
    9. '-' → logprob: -12.881580352783203
    10. '*' → logprob: -13.756580352783203

Token 32: ' ' (ID: 220)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.4170679748058319
    2. ' []' → logprob: -1.9170680046081543
    3. '   ' → logprob: -2.1670680046081543
    4. '    ' → logprob: -3.2920680046081543
    5. ' ' → logprob: -4.167068004608154
    6. 'adj' → logprob: -4.292068004608154
    7. '[]' → logprob: -5.167068004608154
    8. '[' → logprob: -6.417068004608154
    9. ' [' → logprob: -6.667068004608154
    10. '<|end|>' → logprob: -7.417068004608154

Token 33: ' commands' (ID: 23877)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.07304064184427261
    2. 'adj' → logprob: -2.698040723800659
    3. ' ' → logprob: -6.07304048538208
    4. '   ' → logprob: -8.323040962219238
    5. ' []' → logprob: -8.698040962219238
    6. ' adjacency' → logprob: -8.698040962219238
    7. ' adjacent' → logprob: -9.573040962219238
    8. '[' → logprob: -10.573040962219238
    9. '[]' → logprob: -10.698040962219238
    10. '_adj' → logprob: -11.698040962219238

Token 34: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.543553352355957
    2. '.' → logprob: -1.043553352355957
    3. ' =' → logprob: -2.793553352355957
    4. '=' → logprob: -5.543553352355957
    5. ' .' → logprob: -7.418553352355957
    6. ' ' → logprob: -7.543553352355957
    7. '.=' → logprob: -8.293553352355957
    8. '=[]' → logprob: -9.168553352355957
    9. '.extend' → logprob: -9.668553352355957
    10. '.readline' → logprob: -9.793553352355957

Token 35: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8754472136497498
    2. 'list' → logprob: -1.0004472732543945
    3. ' input' → logprob: -1.8754472732543945
    4. ' list' → logprob: -2.8754472732543945
    5. '[]' → logprob: -5.3754472732543945
    6. ' []' → logprob: -7.6254472732543945
    7. '[input' → logprob: -8.125447273254395
    8. '[' → logprob: -8.375447273254395
    9. ' sys' → logprob: -9.500447273254395
    10. ' [' → logprob: -9.875447273254395

Token 36: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00392095698043704
    2. '.' → logprob: -5.628921031951904
    3. '.stdout' → logprob: -9.128920555114746
    4. '.readline' → logprob: -9.253920555114746
    5. '.argv' → logprob: -9.253920555114746
    6. '.input' → logprob: -12.128920555114746
    7. '.std' → logprob: -12.878920555114746
    8. '.st' → logprob: -13.128920555114746
    9. '.stderr' → logprob: -13.128920555114746
    10. '.setdefault' → logprob: -13.378920555114746

Token 37: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0019919206388294697
    2. '.' → logprob: -6.2519917488098145
    3. '.readlines' → logprob: -9.751992225646973
    4. ' readline' → logprob: -12.376992225646973
    5. '.read' → logprob: -14.876992225646973
    6. ' .' → logprob: -16.001991271972656
    7. 'read' → logprob: -16.251991271972656
    8. '.buffer' → logprob: -16.751991271972656
    9. '().' → logprob: -16.876991271972656
    10. '<|end|>' → logprob: -17.251991271972656

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03366195037961006
    2. '()' → logprob: -3.4086618423461914
    3. '(' → logprob: -11.908661842346191
    4. '.strip' → logprob: -12.908661842346191
    5. '())' → logprob: -13.158661842346191
    6. '.rstrip' → logprob: -13.533661842346191
    7. ' ().' → logprob: -13.783661842346191
    8. '()).' → logprob: -14.783661842346191
    9. ')' → logprob: -15.033661842346191
    10. ' ()' → logprob: -15.158661842346191

Token 39: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.022657830268144608
    2. 'split' → logprob: -4.272657871246338
    3. 'rstrip' → logprob: -4.772657871246338
    4. ' strip' → logprob: -14.89765739440918
    5. ' split' → logprob: -16.77265739440918
    6. 'rs' → logprob: -16.77265739440918
    7. ' ' → logprob: -17.77265739440918
    8. 'str' → logprob: -18.52265739440918
    9. 'replace' → logprob: -19.52265739440918
    10. '```' → logprob: -19.64765739440918

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043989863246679306
    2. '(' → logprob: -3.168989896774292
    3. '('' → logprob: -7.418989658355713
    4. '()
' → logprob: -9.418990135192871
    5. ' ()' → logprob: -9.418990135192871
    6. '()\' → logprob: -9.418990135192871
    7. '[' → logprob: -10.418990135192871
    8. '()[' → logprob: -10.543990135192871
    9. '('\' → logprob: -10.668990135192871
    10. ' (' → logprob: -10.918990135192871

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16421528160572052
    2. '[' → logprob: -3.289215326309204
    3. '\' → logprob: -3.539215326309204
    4. '<|end|>' → logprob: -3.664215326309204
    5. ' 
' → logprob: -4.164215087890625
    6. '  
' → logprob: -4.414215087890625
    7. '\n' → logprob: -4.539215087890625
    8. '   ' → logprob: -5.789215087890625
    9. '.' → logprob: -5.789215087890625
    10. '  ' → logprob: -5.914215087890625

Token 42: ' lst' (ID: 33384)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4875052869319916
    2. '[' → logprob: -1.237505316734314
    3. ' if' → logprob: -3.2375051975250244
    4. '<|end|>' → logprob: -3.6125051975250244
    5. 'if' → logprob: -4.2375054359436035
    6. 'adj' → logprob: -5.8625054359436035
    7. '  ' → logprob: -6.2375054359436035
    8. ')' → logprob: -6.7375054359436035
    9. '[
' → logprob: -6.9875054359436035
    10. ',' → logprob: -7.2375054359436035

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40903887152671814
    2. '=' → logprob: -1.1590389013290405
    3. '.append' → logprob: -4.03403902053833
    4. '.extend' → logprob: -6.78403902053833
    5. '=[]' → logprob: -6.90903902053833
    6. '.' → logprob: -7.40903902053833
    7. '(' → logprob: -8.284038543701172
    8. ' ' → logprob: -8.659038543701172
    9. '_tokens' → logprob: -8.909038543701172
    10. ')' → logprob: -9.034038543701172

Token 44: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7977821826934814
    2. '[' → logprob: -1.6727821826934814
    3. 'list' → logprob: -2.1727821826934814
    4. ' list' → logprob: -2.5477821826934814
    5. ' [' → logprob: -2.6727821826934814
    6. '[]' → logprob: -3.1727821826934814
    7. '[int' → logprob: -3.2977821826934814
    8. ' []' → logprob: -3.9227821826934814
    9. '[len' → logprob: -6.922781944274902
    10. '[str' → logprob: -8.422781944274902

Token 45: ' commands' (ID: 23877)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.040568187832832336
    2. '0' → logprob: -3.7905681133270264
    3. ' int' → logprob: -4.5405683517456055
    4. '(int' → logprob: -6.4155683517456055
    5. 'commands' → logprob: -6.4155683517456055
    6. 'float' → logprob: -6.9155683517456055
    7. ' ' → logprob: -7.4155683517456055
    8. 'MAX' → logprob: -7.7905683517456055
    9. ']' → logprob: -7.9155683517456055
    10. 'max' → logprob: -9.540568351745605

Token 46: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005379484035074711
    2. '[-' → logprob: -5.380379676818848
    3. ']' → logprob: -8.255379676818848
    4. '0' → logprob: -8.255379676818848
    5. ' ' → logprob: -9.005379676818848
    6. '1' → logprob: -10.130379676818848
    7. '-' → logprob: -10.255379676818848
    8. ' [' → logprob: -11.130379676818848
    9. '])' → logprob: -11.630379676818848
    10. '2' → logprob: -12.505379676818848

Token 47: ':i' (ID: 34041)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3074380159378052
    2. '+' → logprob: -1.4324380159378052
    3. ' for' → logprob: -4.557437896728516
    4. 'for' → logprob: -5.182437896728516
    5. ' +' → logprob: -5.932437896728516
    6. ' ]' → logprob: -6.182437896728516
    7. '+i' → logprob: -6.557437896728516
    8. ' ' → logprob: -6.932437896728516
    9. ']==' → logprob: -7.557437896728516
    10. '][' → logprob: -7.682437896728516

Token 48: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00278419628739357
    2. ' ' → logprob: -6.127784252166748
    3. '3' → logprob: -8.00278377532959
    4. '=' → logprob: -8.62778377532959
    5. '+' → logprob: -9.87778377532959
    6. '4' → logprob: -10.87778377532959
    7. '1' → logprob: -11.37778377532959
    8. '6' → logprob: -13.62778377532959
    9. '  ' → logprob: -14.37778377532959
    10. '-' → logprob: -15.25278377532959

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04444435238838196
    2. '3' → logprob: -3.1694443225860596
    3. '4' → logprob: -6.794444561004639
    4. ' ' → logprob: -8.66944408416748
    5. '1' → logprob: -9.41944408416748
    6. '5' → logprob: -10.04444408416748
    7. '6' → logprob: -11.04444408416748
    8. '  ' → logprob: -12.35694408416748
    9. '7' → logprob: -12.66944408416748
    10. '   ' → logprob: -14.23194408416748

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1273452788591385
    2. ' ]' → logprob: -2.127345323562622
    3. ' ' → logprob: -7.877345085144043
    4. ' for' → logprob: -10.502345085144043
    5. 'for' → logprob: -12.877345085144043
    6. ')' → logprob: -13.502345085144043
    7. '2' → logprob: -13.502345085144043
    8. ']
' → logprob: -14.502345085144043
    9. '1' → logprob: -14.752345085144043
    10. '  ' → logprob: -15.002345085144043

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11959458887577057
    2. ']' → logprob: -3.1195945739746094
    3. ' ]' → logprob: -3.4945945739746094
    4. ' ' → logprob: -3.7445945739746094
    5. 'for' → logprob: -4.244594573974609
    6. ')' → logprob: -10.24459457397461
    7. '  ' → logprob: -10.36959457397461
    8. '()' → logprob: -10.49459457397461
    9. '	for' → logprob: -10.99459457397461
    10. '()]' → logprob: -11.24459457397461

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2521711587905884
    2. 'i' → logprob: -1.5021711587905884
    3. ' range' → logprob: -8.627171516418457
    4. 'range' → logprob: -9.752171516418457
    5. ' ' → logprob: -12.377171516418457
    6. '	i' → logprob: -14.752171516418457
    7. '  ' → logprob: -16.87717056274414
    8. ' in' → logprob: -17.25217056274414
    9. '(i' → logprob: -17.37717056274414
    10. '```' → logprob: -18.37717056274414

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012675396166741848
    2. 'in' → logprob: -4.3876752853393555
    3. ' ' → logprob: -8.762675285339355
    4. 'range' → logprob: -12.512675285339355
    5. ' range' → logprob: -12.762675285339355
    6. '<|end|>' → logprob: -13.762675285339355
    7. '  ' → logprob: -14.387675285339355
    8. '0' → logprob: -15.387675285339355
    9. ' i' → logprob: -15.637675285339355
    10. '1' → logprob: -15.887675285339355

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061969030648469925
    2. ' range' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.061968803405762
    4. '	range' → logprob: -15.186968803405762
    5. '[' → logprob: -15.686968803405762
    6. '(range' → logprob: -15.936968803405762
    7. '2' → logprob: -17.936969757080078
    8. '(' → logprob: -18.186969757080078
    9. ' xrange' → logprob: -18.186969757080078
    10. '0' → logprob: -18.436969757080078

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003890854713972658
    2. '(len' → logprob: -8.500389099121094
    3. '1' → logprob: -9.500389099121094
    4. ' (' → logprob: -9.625389099121094
    5. '0' → logprob: -10.250389099121094
    6. ' ' → logprob: -12.500389099121094
    7. 'len' → logprob: -12.875389099121094
    8. '2' → logprob: -13.125389099121094
    9. '((' → logprob: -15.000389099121094
    10. '(
' → logprob: -15.500389099121094

Token 56: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02049003541469574
    2. '1' → logprob: -4.3954901695251465
    3. ' ' → logprob: -5.2704901695251465
    4. '2' → logprob: -6.0204901695251465
    5. 'len' → logprob: -8.020489692687988
    6. ' len' → logprob: -10.770489692687988
    7. '(' → logprob: -11.270489692687988
    8. '(len' → logprob: -11.395489692687988
    9. '4' → logprob: -13.020489692687988
    10. '  ' → logprob: -14.145489692687988

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03505301848053932
    2. ',len' → logprob: -3.910053014755249
    3. ' ' → logprob: -4.910053253173828
    4. ' ,' → logprob: -5.160053253173828
    5. '(len' → logprob: -7.035053253173828
    6. ' len' → logprob: -8.785053253173828
    7. 'len' → logprob: -9.410053253173828
    8. '0' → logprob: -9.660053253173828
    9. ',n' → logprob: -9.910053253173828
    10. '*' → logprob: -11.410053253173828

Token 58: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11333226412534714
    2. ' len' → logprob: -2.2383322715759277
    3. ' ' → logprob: -8.11333179473877
    4. '4' → logprob: -10.23833179473877
    5. '0' → logprob: -10.23833179473877
    6. '2' → logprob: -10.48833179473877
    7. '6' → logprob: -10.73833179473877
    8. 'n' → logprob: -10.73833179473877
    9. '(len' → logprob: -11.11333179473877
    10. '12' → logprob: -11.48833179473877

Token 59: '(commands' (ID: 167381)
  Prédit: '(commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(commands' → logprob: -0.0010379294399172068
    2. '(' → logprob: -6.876038074493408
    3. '(lst' → logprob: -13.12603759765625
    4. '(command' → logprob: -13.87603759765625
    5. 'commands' → logprob: -14.25103759765625
    6. '(tokens' → logprob: -15.12603759765625
    7. '(cmd' → logprob: -15.37603759765625
    8. '(

' → logprob: -15.62603759765625
    9. '(`' → logprob: -15.62603759765625
    10. ' (' → logprob: -16.00103759765625

Token 60: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015014137607067823
    2. '(),' → logprob: -7.001501560211182
    3. ' ,' → logprob: -7.626501560211182
    4. ' ' → logprob: -9.751501083374023
    5. '-' → logprob: -10.876501083374023
    6. ')' → logprob: -11.251501083374023
    7. '),' → logprob: -12.001501083374023
    8. '()' → logprob: -13.251501083374023
    9. ' -' → logprob: -13.376501083374023
    10. '()-' → logprob: -14.501501083374023

Token 61: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '  ' → logprob: -16.629619598388672
    4. '1' → logprob: -17.004619598388672
    5. '3' → logprob: -17.004619598388672
    6. '```' → logprob: -17.754619598388672
    7. ' ' → logprob: -17.754619598388672
    8. '   ' → logprob: -18.442119598388672
    9. ')' → logprob: -18.504619598388672
    10. '２' → logprob: -19.129619598388672

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000628683075774461
    2. ' ' → logprob: -7.375628471374512
    3. '1' → logprob: -13.625628471374512
    4. '3' → logprob: -14.625628471374512
    5. '```' → logprob: -16.188129425048828
    6. '4' → logprob: -16.688129425048828
    7. '  ' → logprob: -16.813129425048828
    8. ')' → logprob: -16.813129425048828
    9. '0' → logprob: -17.563129425048828
    10. '6' → logprob: -17.625629425048828

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.15707693994045258
    2. ']' → logprob: -2.157076835632324
    3. ')' → logprob: -3.532076835632324
    4. ' ]' → logprob: -8.407076835632324
    5. ' ' → logprob: -9.032076835632324
    6. ' )' → logprob: -9.157076835632324
    7. '])' → logprob: -13.657076835632324
    8. '   ' → logprob: -14.532076835632324
    9. ')])' → logprob: -14.532076835632324
    10. '`]' → logprob: -14.782076835632324

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044188905507326126
    2. '  
' → logprob: -3.794188976287842
    3. ')' → logprob: -4.544188976287842
    4. '
' → logprob: -5.044188976287842
    5. '   ' → logprob: -7.544188976287842
    6. '<|end|>' → logprob: -7.544188976287842
    7. ']' → logprob: -7.669188976287842
    8. ' 
' → logprob: -7.794188976287842
    9. '  ' → logprob: -8.044188499450684
    10. '\n' → logprob: -8.169188499450684

Token 65: ' adj' (ID: 20251)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11061453074216843
    2. '  
' → logprob: -2.985614538192749
    3. ')' → logprob: -3.610614538192749
    4. '<|end|>' → logprob: -4.36061429977417
    5. '
' → logprob: -5.48561429977417
    6. ' 
' → logprob: -6.11061429977417
    7. '  ' → logprob: -6.48561429977417
    8. '\n' → logprob: -6.73561429977417
    9. '.' → logprob: -7.11061429977417
    10. '   ' → logprob: -7.48561429977417

Token 66: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00013953536108601838
    2. '_' → logprob: -9.000139236450195
    3. '_lst' → logprob: -11.625139236450195
    4. '_lists' → logprob: -12.500139236450195
    5. ' _' → logprob: -14.125139236450195
    6. '_lista' → logprob: -14.500139236450195
    7. 's' → logprob: -15.250139236450195
    8. ')_' → logprob: -15.625139236450195
    9. '[' → logprob: -15.875139236450195
    10. '[_' → logprob: -16.000139236450195

Token 67: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008713730610907078
    2. '.' → logprob: -4.758713722229004
    3. '.setdefault' → logprob: -9.633713722229004
    4. '.extend' → logprob: -11.008713722229004
    5. '[' → logprob: -12.883713722229004
    6. '.ap' → logprob: -13.008713722229004
    7. '.app' → logprob: -13.133713722229004
    8. '.add' → logprob: -13.258713722229004
    9. ' .' → logprob: -13.633713722229004
    10. '.push' → logprob: -13.758713722229004

Token 68: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.033739980310201645
    2. '(' → logprob: -4.158740043640137
    3. '([]' → logprob: -5.033740043640137
    4. '([' → logprob: -5.533740043640137
    5. '((' → logprob: -5.533740043640137
    6. '(list' → logprob: -6.033740043640137
    7. '(commands' → logprob: -7.783740043640137
    8. '({' → logprob: -9.783740043640137
    9. '(l' → logprob: -9.908740043640137
    10. '(ls' → logprob: -10.033740043640137

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.000000953674316
    3. '))' → logprob: -15.125000953674316
    4. ')
' → logprob: -16.500001907348633
    5. '`)' → logprob: -17.250001907348633
    6. ' ' → logprob: -17.750001907348633
    7. ')`' → logprob: -18.125001907348633
    8. '）' → logprob: -18.500001907348633
    9. ')))' → logprob: -18.750001907348633
    10. ']' → logprob: -19.875001907348633

Token 70: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07468833029270172
    2. '\n' → logprob: -4.07468843460083
    3. '<|end|>' → logprob: -4.32468843460083
    4. '  
' → logprob: -4.82468843460083
    5. ' 
' → logprob: -4.82468843460083
    6. '```' → logprob: -5.32468843460083
    7. ' ' → logprob: -5.44968843460083
    8. ')' → logprob: -5.82468843460083
    9. '#' → logprob: -6.07468843460083
    10. 'n' → logprob: -6.32468843460083

Token 71: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5201393961906433
    2. ' shortest' → logprob: -1.520139455795288
    3. ' d' → logprob: -1.770139455795288
    4. ' find' → logprob: -5.520139217376709
    5. ' dist' → logprob: -5.520139217376709
    6. ' space' → logprob: -6.020139217376709
    7. ' dfs' → logprob: -6.895139217376709
    8. ' calculate' → logprob: -6.895139217376709
    9. ' get' → logprob: -7.020139217376709
    10. ' distances' → logprob: -7.395139217376709

Token 72: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.005645405501127243
    2. 'ijk' → logprob: -5.630645275115967
    3. 'e' → logprob: -6.880645275115967
    4. 'ij' → logprob: -7.755645275115967
    5. 'i' → logprob: -7.880645275115967
    6. '```' → logprob: -9.755645751953125
    7. 'jik' → logprob: -10.130645751953125
    8. '_' → logprob: -10.255645751953125
    9. 'ijek' → logprob: -10.880645751953125
    10. 'ijkl' → logprob: -11.630645751953125

Token 73: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008090290939435363
    2. '(node' → logprob: -7.500809192657471
    3. '(n' → logprob: -8.875808715820312
    4. ' (' → logprob: -11.375808715820312
    5. '(_' → logprob: -11.375808715820312
    6. '(root' → logprob: -11.500808715820312
    7. '(nodes' → logprob: -11.875808715820312
    8. '((' → logprob: -12.000808715820312
    9. '(p' → logprob: -12.250808715820312
    10. '_' → logprob: -12.250808715820312

Token 74: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6719253659248352
    2. ' ' → logprob: -1.5469253063201904
    3. '(n' → logprob: -1.7969253063201904
    4. '   ' → logprob: -3.4219253063201904
    5. 'dist' → logprob: -4.0469255447387695
    6. 'n' → logprob: -4.5469255447387695
    7. ' distances' → logprob: -5.0469255447387695
    8. '(distance' → logprob: -5.1719255447387695
    9. ' 
' → logprob: -5.2969255447387695
    10. '(dist' → logprob: -5.4219255447387695

Token 75: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12623487412929535
    2. ' dist' → logprob: -2.251234769821167
    3. ' distances' → logprob: -5.126235008239746
    4. ' ' → logprob: -5.251235008239746
    5. '   ' → logprob: -7.251235008239746
    6. 'distance' → logprob: -7.626235008239746
    7. 'import' → logprob: -8.376235008239746
    8. ' distance' → logprob: -9.251235008239746
    9. 'd' → logprob: -9.376235008239746
    10. ' import' → logprob: -9.626235008239746

Token 76: ' initialization' (ID: 41684)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.40843120217323303
    2. 'dist' → logprob: -1.5334311723709106
    3. ' distances' → logprob: -2.6584312915802
    4. ' ' → logprob: -3.6584312915802
    5. 'distance' → logprob: -4.408431053161621
    6. ' distance' → logprob: -5.158431053161621
    7. ' pass' → logprob: -6.908431053161621
    8. ' n' → logprob: -7.033431053161621
    9. ' visited' → logprob: -7.158431053161621
    10. 'n' → logprob: -7.283431053161621

Token 77: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04878663271665573
    2. ' distances' → logprob: -3.7987866401672363
    3. 'distance' → logprob: -4.548786640167236
    4. ' ' → logprob: -5.048786640167236
    5. ' dist' → logprob: -5.048786640167236
    6. '(dist' → logprob: -7.173786640167236
    7. '(distance' → logprob: -8.423786163330078
    8. ' distance' → logprob: -9.048786163330078
    9. '	dist' → logprob: -9.173786163330078
    10. ':' → logprob: -9.423786163330078

Token 78: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5223016142845154
    2. ' ' → logprob: -1.1473016738891602
    3. ' dist' → logprob: -3.27230167388916
    4. ' distances' → logprob: -3.52230167388916
    5. 'distance' → logprob: -4.89730167388916
    6. 'd' → logprob: -5.14730167388916
    7. '   ' → logprob: -5.39730167388916
    8. ' d' → logprob: -6.89730167388916
    9. '  ' → logprob: -7.52230167388916
    10. '	dist' → logprob: -7.89730167388916

Token 79: ' visited' (ID: 18416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15094555914402008
    2. ' dist' → logprob: -2.1509456634521484
    3. ' distances' → logprob: -4.025945663452148
    4. ' ' → logprob: -5.400945663452148
    5. 'distance' → logprob: -7.400945663452148
    6. ' distance' → logprob: -8.650945663452148
    7. '   ' → logprob: -9.025945663452148
    8. ' d' → logprob: -9.025945663452148
    9. 'd' → logprob: -9.650945663452148
    10. 'dis' → logprob: -9.900945663452148

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04333553835749626
    2. '=' → logprob: -3.168335437774658
    3. ' ' → logprob: -8.043335914611816
    4. ',' → logprob: -11.668335914611816
    5. '[' → logprob: -12.793335914611816
    6. '  ' → logprob: -13.668335914611816
    7. '[]' → logprob: -14.668335914611816
    8. ' =[' → logprob: -14.668335914611816
    9. ' ,' → logprob: -15.168335914611816
    10. ')' → logprob: -15.293335914611816

Token 81: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5872541666030884
    2. '[' → logprob: -0.8372541666030884
    3. ' set' → logprob: -5.212254047393799
    4. 'set' → logprob: -5.337254047393799
    5. '{}' → logprob: -7.212254047393799
    6. ' {}' → logprob: -9.462254524230957
    7. ' ' → logprob: -9.587254524230957
    8. '{' → logprob: -10.337254524230957
    9. '[]' → logprob: -10.462254524230957
    10. '[n' → logprob: -10.712254524230957

Token 82: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.023257357999682426
    2. ' False' → logprob: -3.773257255554199
    3. '0' → logprob: -11.3982572555542
    4. ' ' → logprob: -14.5232572555542
    5. '(False' → logprob: -15.8982572555542
    6. '   ' → logprob: -17.523258209228516
    7. '  ' → logprob: -18.898258209228516
    8. '=False' → logprob: -19.398258209228516
    9. 'True' → logprob: -19.398258209228516
    10. ' ' → logprob: -19.523258209228516

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017130204942077398
    2. ']*' → logprob: -7.001712799072266
    3. ' for' → logprob: -7.751712799072266
    4. ' ]' → logprob: -8.001712799072266
    5. ' ' → logprob: -11.001712799072266
    6. ')' → logprob: -11.876712799072266
    7. ',' → logprob: -12.001712799072266
    8. 'for' → logprob: -12.501712799072266
    9. ']*(' → logprob: -13.001712799072266
    10. ']+' → logprob: -15.626712799072266

Token 84: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3557533621788025
    2. ']' → logprob: -2.1057534217834473
    3. ' for' → logprob: -2.1057534217834473
    4. ' ' → logprob: -3.8557534217834473
    5. ' ,' → logprob: -3.8557534217834473
    6. ' ]' → logprob: -4.605753421783447
    7. ')' → logprob: -6.605753421783447
    8. 'for' → logprob: -7.230753421783447
    9. '[' → logprob: -7.480753421783447
    10. ']*' → logprob: -8.480752944946289

Token 85: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023252349346876144
    2. ' n' → logprob: -3.773252248764038
    3. '(n' → logprob: -12.398252487182617
    4. ' (' → logprob: -13.523252487182617
    5. ' ' → logprob: -13.648252487182617
    6. '(' → logprob: -15.773252487182617
    7. 'len' → logprob: -16.648252487182617
    8. '	n' → logprob: -17.523252487182617
    9. ')n' → logprob: -18.648252487182617
    10. '  ' → logprob: -18.648252487182617

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2580890953540802
    2. '  
' → logprob: -2.758089065551758
    3. 'distance' → logprob: -2.883089065551758
    4. ',' → logprob: -3.508089065551758
    5. ' distances' → logprob: -3.508089065551758
    6. ' ' → logprob: -4.383089065551758
    7. '<|end|>' → logprob: -4.383089065551758
    8. 'dist' → logprob: -5.133089065551758
    9. ',
' → logprob: -5.258089065551758
    10. ' 
' → logprob: -5.633089065551758

Token 87: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16933085024356842
    2. ' ' → logprob: -2.6693308353424072
    3. 'distance' → logprob: -3.5443308353424072
    4. ' dist' → logprob: -3.6693308353424072
    5. ' distances' → logprob: -3.6693308353424072
    6. '  
' → logprob: -5.544331073760986
    7. ' distance' → logprob: -7.294331073760986
    8. '  ' → logprob: -8.294330596923828
    9. '
' → logprob: -8.419330596923828
    10. ',' → logprob: -8.419330596923828

Token 88: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023805202916264534
    2. ' dist' → logprob: -4.398805141448975
    3. 'distance' → logprob: -5.398805141448975
    4. ' ' → logprob: -5.773805141448975
    5. ' distances' → logprob: -6.148805141448975
    6. 'd' → logprob: -7.273805141448975
    7. 'import' → logprob: -8.523805618286133
    8. 'start' → logprob: -9.523805618286133
    9. ' distance' → logprob: -9.523805618286133
    10. '```' → logprob: -9.898805618286133

Token 89: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056842587888240814
    2. '=' → logprob: -2.931842565536499
    3. '[' → logprob: -6.556842803955078
    4. ' ' → logprob: -7.806842803955078
    5. '[]' → logprob: -9.431842803955078
    6. '[:]' → logprob: -11.306842803955078
    7. ' =[' → logprob: -11.431842803955078
    8. ',' → logprob: -11.681842803955078
    9. '  ' → logprob: -12.181842803955078
    10. 's' → logprob: -12.181842803955078

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762919783592224
    2. ' =' → logprob: -0.8262919783592224
    3. 'ay' → logprob: -8.201292037963867
    4. ' ' → logprob: -10.576292037963867
    5. '[' → logprob: -10.951292037963867
    6. '=[]' → logprob: -11.201292037963867
    7. '[:]' → logprob: -12.076292037963867
    8. 'ays' → logprob: -12.576292037963867
    9. ' =[' → logprob: -13.326292037963867
    10. '[]' → logprob: -13.326292037963867

Token 91: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.027226243168115616
    2. '[' → logprob: -3.652226209640503
    3. '[MAX' → logprob: -7.027226448059082
    4. ' ' → logprob: -10.902226448059082
    5. '[max' → logprob: -11.277226448059082
    6. '[n' → logprob: -12.402226448059082
    7. '[node' → logprob: -14.652226448059082
    8. '[len' → logprob: -15.027226448059082
    9. '[int' → logprob: -15.152226448059082
    10. ' ' → logprob: -15.527226448059082

Token 92: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0009331366163678467
    2. ' MAX' → logprob: -7.0009331703186035
    3. 'float' → logprob: -11.625932693481445
    4. 'max' → logprob: -11.750932693481445
    5. ' ' → logprob: -13.125932693481445
    6. 'int' → logprob: -14.125932693481445
    7. '(MAX' → logprob: -14.625932693481445
    8. '10' → logprob: -14.625932693481445
    9. '0' → logprob: -14.750932693481445
    10. '100' → logprob: -16.125932693481445

Token 93: '_INT' (ID: 20388)
  Prédit: '_INT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.00019734179659280926
    2. '_int' → logprob: -8.625197410583496
    3. '_Int' → logprob: -12.625197410583496
    4. '_UINT' → logprob: -12.625197410583496
    5. '_IN' → logprob: -12.750197410583496
    6. '_' → logprob: -12.875197410583496
    7. '_INTEGER' → logprob: -13.250197410583496
    8. '_INF' → logprob: -13.375197410583496
    9. '_I' → logprob: -14.500197410583496
    10. 'int' → logprob: -14.500197410583496

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014490410685539246
    2. ' ]' → logprob: -6.626449108123779
    3. ' for' → logprob: -9.626448631286621
    4. ']*' → logprob: -9.876448631286621
    5. ')' → logprob: -13.001448631286621
    6. ' ' → logprob: -13.501448631286621
    7. ')]' → logprob: -14.001448631286621
    8. 'for' → logprob: -14.626448631286621
    9. ',' → logprob: -15.501448631286621
    10. '()]' → logprob: -16.001449584960938

Token 95: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0303133726119995
    2. '*' → logprob: -1.2803133726119995
    3. ']' → logprob: -1.9053133726119995
    4. ' for' → logprob: -2.280313491821289
    5. ')' → logprob: -3.155313491821289
    6. ' ' → logprob: -3.780313491821289
    7. '*n' → logprob: -4.530313491821289
    8. 'for' → logprob: -4.780313491821289
    9. ']*' → logprob: -5.155313491821289
    10. 'n' → logprob: -5.155313491821289

Token 96: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12693682312965393
    2. ' n' → logprob: -2.126936912536621
    3. '(n' → logprob: -12.126936912536621
    4. ' ' → logprob: -12.751936912536621
    5. '(' → logprob: -15.626936912536621
    6. ' (' → logprob: -15.626936912536621
    7. '	n' → logprob: -17.626935958862305
    8. ')n' → logprob: -18.376935958862305
    9. '  ' → logprob: -18.751935958862305
    10. '_n' → logprob: -20.126935958862305

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17812404036521912
    2. 'dist' → logprob: -2.803123950958252
    3. '  
' → logprob: -2.928123950958252
    4. ' ' → logprob: -3.428123950958252
    5. '<|end|>' → logprob: -4.428123950958252
    6. ' dist' → logprob: -5.928123950958252
    7. ' 
' → logprob: -7.053123950958252
    8. '  ' → logprob: -8.67812442779541
    9. '	dist' → logprob: -8.92812442779541
    10. '(dist' → logprob: -9.55312442779541

Token 98: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5240228772163391
    2. '
' → logprob: -1.2740228176116943
    3. '  
' → logprob: -2.5240228176116943
    4. ' ' → logprob: -3.8990228176116943
    5. ' dist' → logprob: -4.149023056030273
    6. ' 
' → logprob: -5.024023056030273
    7. '<|end|>' → logprob: -5.524023056030273
    8. '	dist' → logprob: -7.524023056030273
    9. '0' → logprob: -8.399023056030273
    10. '
' → logprob: -9.274023056030273

Token 99: ' pq' (ID: 65424)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07424119114875793
    2. ' dist' → logprob: -2.6992411613464355
    3. '
' → logprob: -5.6992411613464355
    4. '  
' → logprob: -7.9492411613464355
    5. ' ' → logprob: -8.324241638183594
    6. ' 
' → logprob: -8.449241638183594
    7. '0' → logprob: -9.824241638183594
    8. '	dist' → logprob: -10.449241638183594
    9. '<|end|>' → logprob: -10.699241638183594
    10. 'd' → logprob: -12.324241638183594

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699697807431221
    2. '=' → logprob: -2.694969892501831
    3. ' ' → logprob: -10.56997013092041
    4. '=[]' → logprob: -12.31997013092041
    5. '<|end|>' → logprob: -13.44497013092041
    6. '  ' → logprob: -14.56997013092041
    7. ',' → logprob: -14.94497013092041
    8. '.' → logprob: -14.94497013092041
    9. ')' → logprob: -15.69497013092041
    10. 'import' → logprob: -16.319969177246094

Token 101: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20883290469646454
    2. '[(' → logprob: -1.958832859992981
    3. ' []' → logprob: -3.2088329792022705
    4. ' [(' → logprob: -4.958832740783691
    5. '[' → logprob: -11.083832740783691
    6. '[]
' → logprob: -13.083832740783691
    7. ' ' → logprob: -13.333832740783691
    8. ' [' → logprob: -14.333832740783691
    9. '[((' → logprob: -14.583832740783691
    10. '[]}' → logprob: -14.958832740783691

Token 102: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6257317066192627
    2. ' ' → logprob: -0.8757317066192627
    3. '  
' → logprob: -3.6257317066192627
    4. '<|end|>' → logprob: -4.375731468200684
    5. ' dist' → logprob: -5.750731468200684
    6. '
' → logprob: -5.750731468200684
    7. ' 
' → logprob: -6.500731468200684
    8. '	dist' → logprob: -8.250731468200684
    9. 'def' → logprob: -8.375731468200684
    10. '  ' → logprob: -8.875731468200684

Token 103: ' prev' (ID: 10258)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030636340379714966
    2. ' ' → logprob: -4.280636310577393
    3. ' dist' → logprob: -4.655636310577393
    4. 'heap' → logprob: -5.405636310577393
    5. '  
' → logprob: -7.155636310577393
    6. 'he' → logprob: -7.405636310577393
    7. '
' → logprob: -8.53063678741455
    8. ' 
' → logprob: -8.53063678741455
    9. '<|end|>' → logprob: -8.65563678741455
    10. '0' → logprob: -9.40563678741455

Token 104: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2736208736896515
    2. ' =' → logprob: -1.773620843887329
    3. '=' → logprob: -2.773620843887329
    4. '[]' → logprob: -6.398621082305908
    5. '_node' → logprob: -7.023621082305908
    6. '_dist' → logprob: -7.148621082305908
    7. '[' → logprob: -7.148621082305908
    8. '_=' → logprob: -7.148621082305908
    9. '_token' → logprob: -7.898621082305908
    10. '=[]' → logprob: -8.14862060546875

Token 105: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4887017607688904
    2. ' [' → logprob: -0.9887017607688904
    3. '[-' → logprob: -4.613701820373535
    4. ' [-' → logprob: -5.863701820373535
    5. '[n' → logprob: -6.363701820373535
    6. ' ' → logprob: -10.363701820373535
    7. '[node' → logprob: -13.363701820373535
    8. 'None' → logprob: -14.113701820373535
    9. '[N' → logprob: -14.363701820373535
    10. '[MAX' → logprob: -14.363701820373535

Token 106: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05099821090698242
    2. 'None' → logprob: -3.0509982109069824
    3. ' -' → logprob: -6.175998210906982
    4. ' None' → logprob: -8.17599868774414
    5. '-n' → logprob: -10.30099868774414
    6. '-none' → logprob: -11.92599868774414
    7. '-N' → logprob: -13.42599868774414
    8. ' ' → logprob: -13.55099868774414
    9. '-s' → logprob: -13.92599868774414
    10. ')' → logprob: -14.67599868774414

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003710646415129304
    2. ' ]' → logprob: -5.628710746765137
    3. ' for' → logprob: -9.503710746765137
    4. ']*' → logprob: -10.503710746765137
    5. ')' → logprob: -13.003710746765137
    6. 'for' → logprob: -13.003710746765137
    7. ' ' → logprob: -13.878710746765137
    8. ')]' → logprob: -14.128710746765137
    9. ',' → logprob: -14.253710746765137
    10. ']*(' → logprob: -15.003710746765137

Token 108: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24997980892658234
    2. ' ' → logprob: -1.749979853630066
    3. ' for' → logprob: -3.8749797344207764
    4. '*' → logprob: -4.8749799728393555
    5. ']' → logprob: -5.2499799728393555
    6. ' n' → logprob: -5.4999799728393555
    7. ' ]' → logprob: -5.7499799728393555
    8. 'n' → logprob: -6.1249799728393555
    9. '*n' → logprob: -6.8749799728393555
    10. ')' → logprob: -6.9999799728393555

Token 109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019287518225610256
    2. ' n' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.251928329467773
    4. '```' → logprob: -19.001928329467773
    5. '(n' → logprob: -20.001928329467773
    6. '	n' → logprob: -20.001928329467773
    7. '  ' → logprob: -20.376928329467773
    8. '(' → logprob: -20.626928329467773
    9. '`' → logprob: -21.126928329467773
    10. '  
' → logprob: -21.626928329467773

Token 110: '

' (ID: 279)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.8209209442138672
    2. ' ' → logprob: -1.0709209442138672
    3. '
' → logprob: -1.6959209442138672
    4. ' 
' → logprob: -4.195920944213867
    5. 'dist' → logprob: -4.695920944213867
    6. '<|end|>' → logprob: -5.070920944213867
    7. '  ' → logprob: -6.695920944213867
    8. ' dist' → logprob: -7.695920944213867
    9. ',' → logprob: -8.195920944213867
    10. '   
' → logprob: -8.695920944213867

Token 111: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6924347877502441
    2. ' ' → logprob: -1.0674347877502441
    3. '  
' → logprob: -1.9424347877502441
    4. '
' → logprob: -4.567434787750244
    5. ' dist' → logprob: -6.817434787750244
    6. ' 
' → logprob: -7.942434787750244
    7. 'def' → logprob: -9.067434310913086
    8. '    
' → logprob: -9.317434310913086
    9. '  ' → logprob: -9.567434310913086
    10. '```' → logprob: -10.067434310913086

Token 112: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.041747454553842545
    2. ' dist' → logprob: -3.666747570037842
    3. ' ' → logprob: -4.416747570037842
    4. '  
' → logprob: -6.166747570037842
    5. '
' → logprob: -6.916747570037842
    6. ' 
' → logprob: -9.916747093200684
    7. '  ' → logprob: -10.541747093200684
    8. 'for' → logprob: -10.916747093200684
    9. '	dist' → logprob: -10.916747093200684
    10. '```' → logprob: -11.041747093200684

Token 113: ' append' (ID: 17147)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.602207601070404
    2. ' dist' → logprob: -0.852207601070404
    3. ' he' → logprob: -4.852207660675049
    4. 'heap' → logprob: -4.852207660675049
    5. ' heap' → logprob: -5.227207660675049
    6. 'he' → logprob: -5.727207660675049
    7. 'import' → logprob: -7.727207660675049
    8. ' ' → logprob: -7.852207660675049
    9. '```' → logprob: -8.47720718383789
    10. ' for' → logprob: -8.60220718383789

Token 114: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.287432998418808
    2. ' (' → logprob: -1.4124330282211304
    3. ' ' → logprob: -5.41243314743042
    4. ' pq' → logprob: -7.41243314743042
    5. '(p' → logprob: -7.53743314743042
    6. 'pq' → logprob: -7.66243314743042
    7. '(heap' → logprob: -10.162432670593262
    8. '(q' → logprob: -10.662432670593262
    9. '0' → logprob: -10.912432670593262
    10. ',' → logprob: -11.162432670593262

Token 115: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006635877070948482
    2. ' (' → logprob: -7.375663757324219
    3. '(p' → logprob: -10.875663757324219
    4. 'pq' → logprob: -11.875663757324219
    5. ' ' → logprob: -12.000663757324219
    6. '0' → logprob: -13.875663757324219
    7. '(heap' → logprob: -13.875663757324219
    8. '(q' → logprob: -14.000663757324219
    9. 'heap' → logprob: -14.375663757324219
    10. '(push' → logprob: -14.625663757324219

Token 116: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22009138762950897
    2. ' ,' → logprob: -2.3450913429260254
    3. ' (' → logprob: -3.4700913429260254
    4. ' ' → logprob: -3.8450913429260254
    5. ',(' → logprob: -3.8450913429260254
    6. '(' → logprob: -3.9700913429260254
    7. '.push' → logprob: -5.220091342926025
    8. 'dist' → logprob: -7.345091342926025
    9. '.append' → logprob: -7.970091342926025
    10. ',
' → logprob: -7.970091342926025

Token 117: ' p' (ID: 275)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.5589626431465149
    2. ' pq' → logprob: -0.9339626431465149
    3. 'dist' → logprob: -4.433962821960449
    4. ' the' → logprob: -4.683962821960449
    5. 'the' → logprob: -5.058962821960449
    6. ' ' → logprob: -5.558962821960449
    7. 'heap' → logprob: -6.683962821960449
    8. 'queue' → logprob: -7.558962821960449
    9. 'q' → logprob: -7.683962821960449
    10. 'p' → logprob: -7.808962821960449

Token 118: 'qs' (ID: 31847)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00012999906903132796
    2. 'ush' → logprob: -9.375129699707031
    3. 'riority' → logprob: -10.500129699707031
    4. ' q' → logprob: -12.000129699707031
    5. 'Q' → logprob: -13.625129699707031
    6. '```' → logprob: -13.625129699707031
    7. '	q' → logprob: -14.000129699707031
    8. 'queue' → logprob: -14.062629699707031
    9. 'r' → logprob: -14.250129699707031
    10. '
' → logprob: -14.500129699707031

Token 119: '
' (ID: 198)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.001977526117116213
    2. '.push' → logprob: -6.751977443695068
    3. '.append' → logprob: -8.126977920532227
    4. ' (' → logprob: -8.626977920532227
    5. ',' → logprob: -9.376977920532227
    6. 'q' → logprob: -10.001977920532227
    7. 'ushing' → logprob: -10.626977920532227
    8. 'USH' → logprob: -10.626977920532227
    9. '(heap' → logprob: -11.001977920532227
    10. 'u' → logprob: -11.001977920532227

Token 120: ' ' (ID: 220)
  Prédit: '.push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.9266541004180908
    2. 'he' → logprob: -1.6766541004180908
    3. ' (' → logprob: -2.676654100418091
    4. '.append' → logprob: -2.801654100418091
    5. '(heap' → logprob: -2.926654100418091
    6. ' ' → logprob: -3.176654100418091
    7. ' he' → logprob: -3.301654100418091
    8. 'ush' → logprob: -3.301654100418091
    9. 'heap' → logprob: -3.801654100418091
    10. '(' → logprob: -4.176653861999512

Token 121: ' pq' (ID: 65424)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.44609159231185913
    2. 'he' → logprob: -1.196091651916504
    3. ' (' → logprob: -4.071091651916504
    4. 'heap' → logprob: -4.321091651916504
    5. '(heap' → logprob: -4.571091651916504
    6. ' heap' → logprob: -5.196091651916504
    7. '(' → logprob: -5.696091651916504
    8. ' ' → logprob: -6.196091651916504
    9. 'dist' → logprob: -6.446091651916504
    10. '.he' → logprob: -6.446091651916504

Token 122: ' =' (ID: 314)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.18664894998073578
    2. '.append' → logprob: -1.936648964881897
    3. '.' → logprob: -3.8116488456726074
    4. '.push' → logprob: -6.311648845672607
    5. '.he' → logprob: -6.436648845672607
    6. ' .' → logprob: -8.436649322509766
    7. 'append' → logprob: -9.311649322509766
    8. 'ushing' → logprob: -9.811649322509766
    9. 'push' → logprob: -10.186649322509766
    10. '.p' → logprob: -10.936649322509766

Token 123: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.003193874144926667
    2. ' [(' → logprob: -5.7531938552856445
    3. '[]' → logprob: -11.128193855285645
    4. '[' → logprob: -13.753193855285645
    5. ' ' → logprob: -15.753193855285645
    6. '[((' → logprob: -15.878193855285645
    7. '([(' → logprob: -15.878193855285645
    8. ' []' → logprob: -16.62819480895996
    9. '[[' → logprob: -17.75319480895996
    10. '(' → logprob: -18.62819480895996

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.721228368813172e-05
    2. ' ' → logprob: -9.375086784362793
    3. '(' → logprob: -13.125086784362793
    4. 'dist' → logprob: -15.625086784362793
    5. ')' → logprob: -16.12508773803711
    6. ',' → logprob: -16.25008773803711
    7. ' (' → logprob: -18.50008773803711
    8. '1' → logprob: -18.75008773803711
    9. '(dist' → logprob: -18.87508773803711
    10. '  ' → logprob: -19.50008773803711

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5928495486150496e-05
    2. ' ,' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '0' → logprob: -14.250016212463379
    5. '<|end|>' → logprob: -14.375016212463379
    6. ',n' → logprob: -14.625016212463379
    7. ')' → logprob: -15.375016212463379
    8. 'import' → logprob: -15.875016212463379
    9. ',)' → logprob: -16.125015258789062
    10. ',
' → logprob: -16.125015258789062

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488273501396179
    2. ' ' → logprob: -2.929882764816284
    3. ')' → logprob: -15.554883003234863
    4. '<|end|>' → logprob: -16.554882049560547
    5. '  ' → logprob: -16.804882049560547
    6. ' 
' → logprob: -17.617382049560547
    7. '1' → logprob: -17.929882049560547
    8. '  
' → logprob: -17.992382049560547
    9. ',' → logprob: -18.242382049560547
    10. '00' → logprob: -18.617382049560547

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029875844484195113
    2. ' ' → logprob: -8.125298500061035
    3. ')' → logprob: -13.375298500061035
    4. '1' → logprob: -16.00029945373535
    5. ',' → logprob: -16.43779945373535
    6. 'n' → logprob: -16.43779945373535
    7. 'start' → logprob: -16.75029945373535
    8. '(' → logprob: -16.87529945373535
    9. '"' → logprob: -16.93779945373535
    10. ''' → logprob: -17.06279945373535

Token 128: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026623390149325132
    2. ')' → logprob: -6.002662181854248
    3. ' )' → logprob: -9.002662658691406
    4. '),' → logprob: -10.377662658691406
    5. ')]
' → logprob: -11.377662658691406
    6. ',' → logprob: -11.502662658691406
    7. ' ' → logprob: -12.252662658691406
    8. ')]

' → logprob: -13.377662658691406
    9. ')
' → logprob: -13.752662658691406
    10. '))' → logprob: -14.252662658691406

Token 129: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27024760842323303
    2. '
' → logprob: -2.1452476978302
    3. '<|end|>' → logprob: -2.5202476978302
    4. '  
' → logprob: -3.3952476978302
    5. ',' → logprob: -5.895247459411621
    6. 'dist' → logprob: -6.895247459411621
    7. '  ' → logprob: -7.520247459411621
    8. ',
' → logprob: -7.645247459411621
    9. ')' → logprob: -8.270247459411621
    10. ' 
' → logprob: -8.520247459411621

Token 130: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14026924967765808
    2. ' ' → logprob: -2.2652692794799805
    3. ' dist' → logprob: -3.7652692794799805
    4. '
' → logprob: -6.3902692794799805
    5. '  
' → logprob: -6.8902692794799805
    6. 'while' → logprob: -7.3902692794799805
    7. ' while' → logprob: -8.26526927947998
    8. '	dist' → logprob: -8.89026927947998
    9. ' 
' → logprob: -9.89026927947998
    10. '  ' → logprob: -10.14026927947998

Token 131: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.7432603272027336e-06
    2. 'arr' → logprob: -13.750001907348633
    3. '[' → logprob: -15.500001907348633
    4. '	arr' → logprob: -16.125001907348633
    5. '_' → logprob: -16.375001907348633
    6. 'Arr' → logprob: -17.000001907348633
    7. '[_' → logprob: -17.125001907348633
    8. '[arr' → logprob: -17.500001907348633
    9. ' _' → logprob: -17.875001907348633
    10. '_ans' → logprob: -18.000001907348633

Token 132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. ' [' → logprob: -13.250001907348633
    3. '][' → logprob: -16.375001907348633
    4. '\[' → logprob: -17.250001907348633
    5. '0' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.500001907348633
    8. '=' → logprob: -18.875001907348633
    9. ']' → logprob: -18.875001907348633
    10. '[
' → logprob: -19.625001907348633

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '[' → logprob: -16.75007438659668
    4. ']' → logprob: -17.25007438659668
    5. ')' → logprob: -19.00007438659668
    6. '```' → logprob: -19.93757438659668
    7. '۰' → logprob: -20.18757438659668
    8. '  ' → logprob: -20.18757438659668
    9. '00' → logprob: -20.50007438659668
    10. '   ' → logprob: -20.56257438659668

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002916618948802352
    2. ' ]' → logprob: -6.2529168128967285
    3. ']=' → logprob: -7.2529168128967285
    4. ')' → logprob: -8.25291633605957
    5. ')]' → logprob: -11.62791633605957
    6. '=' → logprob: -12.12791633605957
    7. ' )' → logprob: -13.00291633605957
    8. ')=' → logprob: -13.50291633605957
    9. ' ' → logprob: -14.75291633605957
    10. '[' → logprob: -15.50291633605957

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.85020637512207
    4. '[' → logprob: -17.35020637512207
    5. ' =
' → logprob: -17.47520637512207
    6. '=
' → logprob: -17.47520637512207
    7. '＝' → logprob: -17.72520637512207
    8. ']=' → logprob: -17.85020637512207
    9. '=

' → logprob: -17.85020637512207
    10. '.=' → logprob: -18.35020637512207

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '000' → logprob: -20.12523078918457
    4. '00' → logprob: -20.37523078918457
    5. '   ' → logprob: -20.50023078918457
    6. '۰' → logprob: -20.87523078918457
    7. '1' → logprob: -21.00023078918457
    8. ' ' → logprob: -21.12523078918457
    9. '  ' → logprob: -21.25023078918457
    10. '=' → logprob: -22.12523078918457

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -20.6250057220459
    4. '00' → logprob: -20.7500057220459
    5. '000' → logprob: -21.3750057220459
    6. '  ' → logprob: -21.3750057220459
    7. '۰' → logprob: -21.7500057220459
    8. '```' → logprob: -21.8750057220459
    9. '=' → logprob: -22.0000057220459
    10. ' ' → logprob: -22.3750057220459

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1862454116344452
    2. ' ' → logprob: -2.4362454414367676
    3. '  
' → logprob: -2.9362454414367676
    4. ' while' → logprob: -4.561245441436768
    5. '<|end|>' → logprob: -4.561245441436768
    6. 'while' → logprob: -5.436245441436768
    7. ',' → logprob: -6.061245441436768
    8. ',
' → logprob: -7.436245441436768
    9. ' 
' → logprob: -7.936245441436768
    10. ')' → logprob: -8.56124496459961

Token 139: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26197031140327454
    2. ' while' → logprob: -2.011970281600952
    3. 'while' → logprob: -2.886970281600952
    4. '  
' → logprob: -3.261970281600952
    5. '
' → logprob: -6.761970520019531
    6. '	while' → logprob: -7.261970520019531
    7. '<|end|>' → logprob: -8.261970520019531
    8. ' 
' → logprob: -8.636970520019531
    9. ')' → logprob: -8.636970520019531
    10. '  ' → logprob: -9.386970520019531

Token 140: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004211124498397112
    2. ' ' → logprob: -5.754210948944092
    3. ' while' → logprob: -7.254210948944092
    4. '  
' → logprob: -8.25421142578125
    5. '
' → logprob: -9.75421142578125
    6. '	while' → logprob: -12.62921142578125
    7. ' 
' → logprob: -13.25421142578125
    8. '```' → logprob: -13.75421142578125
    9. 'While' → logprob: -14.62921142578125
    10. '  ' → logprob: -15.25421142578125

Token 141: ' len' (ID: 4631)
  Prédit: ' pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pq' → logprob: -0.31366249918937683
    2. 'pq' → logprob: -1.3136625289916992
    3. ' len' → logprob: -8.3136625289917
    4. 'len' → logprob: -9.0636625289917
    5. ' ' → logprob: -10.5636625289917
    6. '(p' → logprob: -11.6886625289917
    7. 'p' → logprob: -12.6886625289917
    8. '(len' → logprob: -14.5636625289917
    9. '   ' → logprob: -14.5636625289917
    10. '	p' → logprob: -14.6886625289917

Token 142: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00086834846297279
    2. '(' → logprob: -7.125868320465088
    3. 'pq' → logprob: -9.875868797302246
    4. 'p' → logprob: -12.250868797302246
    5. ' (' → logprob: -12.375868797302246
    6. '(q' → logprob: -13.750868797302246
    7. '(
' → logprob: -13.875868797302246
    8. ' pq' → logprob: -15.125868797302246
    9. '(

' → logprob: -15.375868797302246
    10. ' ' → logprob: -15.375868797302246

Token 143: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2113979209971149e-05
    2. '
' → logprob: -13.125012397766113
    3. 'r' → logprob: -13.937512397766113
    4. ')' → logprob: -14.062512397766113
    5. '(q' → logprob: -14.187512397766113
    6. ' q' → logprob: -14.187512397766113
    7. '

' → logprob: -14.250012397766113
    8. '[' → logprob: -14.687512397766113
    9. '	q' → logprob: -14.687512397766113
    10. '   ' → logprob: -14.875012397766113

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019234318286180496
    2. ')>' → logprob: -4.0192341804504395
    3. '>' → logprob: -7.2692341804504395
    4. '):' → logprob: -8.519234657287598
    5. ' >' → logprob: -8.644234657287598
    6. ' )' → logprob: -12.394234657287598
    7. '):
' → logprob: -12.769234657287598
    8. ':' → logprob: -14.144234657287598
    9. ')>
' → logprob: -14.144234657287598
    10. ' ' → logprob: -14.394234657287598

Token 145: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09482518583536148
    2. ' >' → logprob: -2.469825267791748
    3. ' and' → logprob: -5.469825267791748
    4. ':' → logprob: -6.719825267791748
    5. ')>' → logprob: -8.71982479095459
    6. 'and' → logprob: -8.96982479095459
    7. ')' → logprob: -9.84482479095459
    8. '>:' → logprob: -10.59482479095459
    9. '()>' → logprob: -10.96982479095459
    10. '[' → logprob: -11.71982479095459

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '  ' → logprob: -16.262510299682617
    4. '<|end|>' → logprob: -17.762510299682617
    5. '>' → logprob: -17.825010299682617
    6. '=' → logprob: -18.012510299682617
    7. '۰' → logprob: -18.137510299682617
    8. '   ' → logprob: -18.200010299682617
    9. ')' → logprob: -18.262510299682617
    10. ' ' → logprob: -18.325010299682617

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '  ' → logprob: -17.000335693359375
    4. '   ' → logprob: -18.312835693359375
    5. '۰' → logprob: -18.437835693359375
    6. '```' → logprob: -18.687835693359375
    7. '[' → logprob: -18.750335693359375
    8. '=' → logprob: -18.750335693359375
    9. '1' → logprob: -19.500335693359375
    10. '  ' → logprob: -19.625335693359375

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03567277267575264
    2. ',' → logprob: -4.035672664642334
    3. ':
' → logprob: -4.535672664642334
    4. '):' → logprob: -5.785672664642334
    5. ' ' → logprob: -6.285672664642334
    6. '):
' → logprob: -6.785672664642334
    7. ')' → logprob: -8.035673141479492
    8. ' :' → logprob: -9.160673141479492
    9. ',
' → logprob: -10.285673141479492
    10. ' :
' → logprob: -10.535673141479492

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10633663088083267
    2. ',' → logprob: -2.7313365936279297
    3. ' ' → logprob: -3.6063365936279297
    4. ' ,' → logprob: -4.98133659362793
    5. '  ' → logprob: -7.35633659362793
    6. '  
' → logprob: -8.35633659362793
    7. ' (' → logprob: -8.60633659362793
    8. ' pop' → logprob: -9.23133659362793
    9. '```' → logprob: -9.60633659362793
    10. '    
' → logprob: -9.98133659362793

Token 150: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6422612071037292
    2. ' cost' → logprob: -1.892261266708374
    3. 'cost' → logprob: -2.017261266708374
    4. ' dist' → logprob: -2.517261266708374
    5. 'dist' (adapté à ' dist') → logprob: -3.517261266708374
    6. 'cur' → logprob: -4.017261028289795
    7. ' current' → logprob: -4.142261028289795
    8. 'curr' → logprob: -4.517261028289795
    9. ' cur' → logprob: -4.767261028289795
    10. 'current' → logprob: -4.892261028289795

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025883622583933175
    2. ' ,' → logprob: -9.750258445739746
    3. '_,' → logprob: -9.875258445739746
    4. ',node' → logprob: -10.125258445739746
    5. ',current' → logprob: -10.375258445739746
    6. ',u' → logprob: -10.500258445739746
    7. ',_' → logprob: -11.750258445739746
    8. ',p' → logprob: -12.125258445739746
    9. ',n' → logprob: -12.625258445739746
    10. ',t' → logprob: -12.625258445739746

Token 152: ' idx' (ID: 14016)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.88259357213974
    2. 'node' → logprob: -1.0075936317443848
    3. 'u' → logprob: -2.2575936317443848
    4. ' u' → logprob: -2.3825936317443848
    5. 'cur' → logprob: -5.507593631744385
    6. ' current' → logprob: -5.757593631744385
    7. 'curr' → logprob: -5.882593631744385
    8. ' curr' → logprob: -6.132593631744385
    9. ' vertex' → logprob: -6.132593631744385
    10. 'current' → logprob: -6.132593631744385

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08916553854942322
    2. '=' → logprob: -2.464165449142456
    3. ' ' → logprob: -8.589165687561035
    4. '   ' → logprob: -10.214165687561035
    5. '  ' → logprob: -13.464165687561035
    6. ',' → logprob: -14.214165687561035
    7. ')' → logprob: -14.714165687561035
    8. ')=' → logprob: -15.089165687561035
    9. '    ' → logprob: -15.714165687561035
    10. '	' → logprob: -16.58916473388672

Token 154: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.048974405974149704
    2. 'he' → logprob: -3.0489745140075684
    3. '   ' → logprob: -8.54897403717041
    4. ' ' → logprob: -8.67397403717041
    5. '.he' → logprob: -11.42397403717041
    6. '  ' → logprob: -12.17397403717041
    7. 'heap' → logprob: -12.42397403717041
    8. ' heap' → logprob: -13.67397403717041
    9. '    ' → logprob: -14.79897403717041
    10. '```' → logprob: -15.29897403717041

Token 155: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.45848218582978e-06
    2. 'ap' → logprob: -13.00000286102295
    3. 'a' → logprob: -16.125001907348633
    4. 'pp' → logprob: -17.000001907348633
    5. '[' → logprob: -17.750001907348633
    6. '```' → logprob: -18.625001907348633
    7. ' app' → logprob: -19.250001907348633
    8. 'q' → logprob: -19.625001907348633
    9. 'appen' → logprob: -19.750001907348633
    10. 'appe' → logprob: -20.625001907348633

Token 156: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.006302619352936745
    2. 'pop' → logprob: -5.131302833557129
    3. 'app' → logprob: -8.006302833557129
    4. 'p' → logprob: -10.631302833557129
    5. 'pp' → logprob: -11.756302833557129
    6. 'q' → logprob: -13.256302833557129
    7. '[' → logprob: -13.506302833557129
    8. 'ush' → logprob: -13.631302833557129
    9. 'ap' → logprob: -14.131302833557129
    10. '```' → logprob: -14.506302833557129

Token 157: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003023345780093223
    2. '(' → logprob: -8.1253023147583
    3. ' ' → logprob: -12.8753023147583
    4. ' (' → logprob: -13.0003023147583
    5. '(q' → logprob: -13.6253023147583
    6. '(
' → logprob: -16.250303268432617
    7. '(P' → logprob: -17.375303268432617
    8. ')' → logprob: -17.500303268432617
    9. '(n' → logprob: -17.625303268432617
    10. '(py' → logprob: -17.625303268432617

Token 158: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8087270038668066e-05
    2. ')' → logprob: -11.625027656555176
    3. '(q' → logprob: -12.875027656555176
    4. ' q' → logprob: -13.187527656555176
    5. '	q' → logprob: -13.312527656555176
    6. ')
' → logprob: -13.437527656555176
    7. '(p' → logprob: -13.750027656555176
    8. 'Q' → logprob: -13.937527656555176
    9. 'riority' → logprob: -14.187527656555176
    10. '
' → logprob: -14.250027656555176

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005239616730250418
    2. ')
' → logprob: -7.625524044036865
    3. '   ' → logprob: -10.375523567199707
    4. ' )' → logprob: -12.875523567199707
    5. ' ' → logprob: -13.875523567199707
    6. ')

' → logprob: -14.750523567199707
    7. ')
' → logprob: -14.875523567199707
    8. ')`' → logprob: -15.500523567199707
    9. '())' → logprob: -17.000524520874023
    10. '()' → logprob: -17.375524520874023

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034976734314113855
    2. '    
' → logprob: -5.87849760055542
    3. '  
' → logprob: -8.128498077392578
    4. '<|end|>' → logprob: -8.503498077392578
    5. '
' → logprob: -9.503498077392578
    6. ' for' → logprob: -10.503498077392578
    7. '   
' → logprob: -10.753498077392578
    8. 'for' → logprob: -11.378498077392578
    9. '    ' → logprob: -11.503498077392578
    10. 'if' → logprob: -11.628498077392578

Token 161: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42002299427986145
    2. 'if' → logprob: -1.420022964477539
    3. ' if' → logprob: -2.295022964477539
    4. '    
' → logprob: -8.545022964477539
    5. '
' → logprob: -9.045022964477539
    6. ' ' → logprob: -9.295022964477539
    7. '  
' → logprob: -10.545022964477539
    8. ' 
' → logprob: -10.920022964477539
    9. '  ' → logprob: -11.045022964477539
    10. '```' → logprob: -11.420022964477539

Token 162: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0008124859305098653
    2. '[' → logprob: -7.125812530517578
    3. ' [' → logprob: -12.625812530517578
    4. 'idx' → logprob: -13.375812530517578
    5. '[index' → logprob: -13.500812530517578
    6. '[ind' → logprob: -14.750812530517578
    7. '[id' → logprob: -15.500812530517578
    8. '```' → logprob: -15.625812530517578
    9. ' idx' → logprob: -15.875812530517578
    10. '	idx' → logprob: -15.875812530517578

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009463535388931632
    2. ']=' → logprob: -7.375946521759033
    3. ' ]' → logprob: -8.625946044921875
    4. ']==' → logprob: -9.250946044921875
    5. ']:' → logprob: -10.250946044921875
    6. ' ' → logprob: -12.500946044921875
    7. '=' → logprob: -13.375946044921875
    8. ')' → logprob: -13.625946044921875
    9. ':' → logprob: -14.125946044921875
    10. '==' → logprob: -14.500946044921875

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024768433067947626
    2. ' =' → logprob: -6.002476692199707
    3. '=True' → logprob: -14.502476692199707
    4. ' ' → logprob: -15.002476692199707
    5. '[' → logprob: -15.752476692199707
    6. ']' → logprob: -15.877476692199707
    7. ']=' → logprob: -17.502477645874023
    8. ')' → logprob: -18.627477645874023
    9. 'if' → logprob: -18.877477645874023
    10. '|' → logprob: -18.877477645874023

Token 165: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868713676929474
    2. ' True' → logprob: -1.136871337890625
    3. ' ' → logprob: -14.886871337890625
    4. '(True' → logprob: -17.761871337890625
    5. '=True' → logprob: -19.761871337890625
    6. '1' → logprob: -20.136871337890625
    7. 'False' → logprob: -20.261871337890625
    8. 'true' → logprob: -22.011871337890625
    9. ' Tru' → logprob: -22.136871337890625
    10. ' ' → logprob: -22.136871337890625

Token 166: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5740359425544739
    2. '
' → logprob: -0.9490359425544739
    3. '<|end|>' → logprob: -3.324035882949829
    4. '  
' → logprob: -4.949036121368408
    5. '    
' → logprob: -6.074036121368408
    6. ' ' → logprob: -6.199036121368408
    7. ' if' → logprob: -7.199036121368408
    8. 'if' → logprob: -7.574036121368408
    9. ' 
' → logprob: -8.07403564453125
    10. '  ' → logprob: -8.32403564453125

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007014083210378885
    2. '
' → logprob: -5.507014274597168
    3. '  
' → logprob: -6.882014274597168
    4. '    
' → logprob: -7.007014274597168
    5. ' for' → logprob: -8.132014274597168
    6. '<|end|>' → logprob: -8.132014274597168
    7. 'for' → logprob: -8.632014274597168
    8. ' ' → logprob: -9.382014274597168
    9. ' 
' → logprob: -10.007014274597168
    10. ' if' → logprob: -10.507014274597168

Token 168: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5133434534072876
    2. '   ' → logprob: -1.3883434534072876
    3. ' for' → logprob: -1.8883434534072876
    4. ' ' → logprob: -7.888343334197998
    5. '    
' → logprob: -8.888343811035156
    6. 'if' → logprob: -9.138343811035156
    7. '	for' → logprob: -10.513343811035156
    8. '  
' → logprob: -11.013343811035156
    9. '
' → logprob: -11.263343811035156
    10. ' if' → logprob: -11.888343811035156

Token 169: ' updating' (ID: 34543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4813551604747772
    2. ' for' → logprob: -0.9813551902770996
    3. '   ' → logprob: -5.2313551902771
    4. 'if' → logprob: -6.7313551902771
    5. ' if' → logprob: -7.8563551902771
    6. ' ' → logprob: -8.106354713439941
    7. '  ' → logprob: -11.981354713439941
    8. '    
' → logprob: -12.106354713439941
    9. '  
' → logprob: -13.231354713439941
    10. '	for' → logprob: -13.356354713439941

Token 170: ' current' (ID: 2208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6950207948684692
    2. '   ' → logprob: -0.8200207948684692
    3. 'for' → logprob: -2.8200206756591797
    4. ' ' → logprob: -7.32002067565918
    5. '  ' → logprob: -9.19502067565918
    6. '    
' → logprob: -9.94502067565918
    7. '  
' → logprob: -10.57002067565918
    8. '    ' → logprob: -11.07002067565918
    9. '	for' → logprob: -11.57002067565918
    10. ' if' → logprob: -11.57002067565918

Token 171: ' values' (ID: 4824)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.5263367295265198
    2. 'neighbors' → logprob: -1.901336669921875
    3. ' for' → logprob: -2.026336669921875
    4. '_neighbors' → logprob: -3.026336669921875
    5. 'for' → logprob: -3.651336669921875
    6. ' ' → logprob: -4.526336669921875
    7. 'neighbor' → logprob: -5.151336669921875
    8. '   ' → logprob: -5.401336669921875
    9. ' nodes' → logprob: -5.526336669921875
    10. ' node' → logprob: -5.526336669921875

Token 172: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007615968119353056
    2. '<|end|>' → logprob: -6.13261604309082
    3. '    
' → logprob: -6.38261604309082
    4. '
' → logprob: -6.50761604309082
    5. ' for' → logprob: -6.63261604309082
    6. 'for' → logprob: -7.75761604309082
    7. '  
' → logprob: -7.88261604309082
    8. '<|end|>' → logprob: -10.63261604309082
    9. ' ' → logprob: -11.00761604309082
    10. '   
' → logprob: -11.63261604309082

Token 173: ' dist' (ID: 3601)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.084929920732975
    2. ' adj' → logprob: -3.209929943084717
    3. 'for' → logprob: -3.709929943084717
    4. 'range' → logprob: -4.709929943084717
    5. ' for' → logprob: -5.709929943084717
    6. ' range' → logprob: -6.334929943084717
    7. ' ' → logprob: -7.584929943084717
    8. ' adjacency' → logprob: -7.709929943084717
    9. 'neighbors' → logprob: -8.209929466247559
    10. '   ' → logprob: -8.334929466247559

Token 174: '
' (ID: 198)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.001507601235061884
    2. ' ' → logprob: -7.626507759094238
    3. 'arr' → logprob: -8.001507759094238
    4. '   ' → logprob: -8.251507759094238
    5. 'for' → logprob: -9.001507759094238
    6. 'ances' → logprob: -9.251507759094238
    7. ',' → logprob: -9.626507759094238
    8. '  ' → logprob: -10.751507759094238
    9. ' for' → logprob: -11.001507759094238
    10. 'anc' → logprob: -11.251507759094238

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001058890949934721
    2. '    
' → logprob: -8.001058578491211
    3. ' for' → logprob: -8.001058578491211
    4. 'for' → logprob: -8.251058578491211
    5. '<|end|>' → logprob: -9.626058578491211
    6. '  
' → logprob: -10.251058578491211
    7. '
' → logprob: -11.876058578491211
    8. ',' → logprob: -12.501058578491211
    9. ' ' → logprob: -13.126058578491211
    10. '  ' → logprob: -13.501058578491211

Token 176: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08413943648338318
    2. ' for' → logprob: -2.834139347076416
    3. 'for' (adapté à ' for') → logprob: -3.834139347076416
    4. '    
' → logprob: -8.709139823913574
    5. ' ' → logprob: -9.834139823913574
    6. '  
' → logprob: -10.584139823913574
    7. '	for' → logprob: -10.959139823913574
    8. 'if' → logprob: -11.584139823913574
    9. '  ' → logprob: -11.834139823913574
    10. '
' → logprob: -11.834139823913574

Token 177: ' edge' (ID: 11165)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6617252826690674
    2. 'ne' → logprob: -3.0367252826690674
    3. 'node' → logprob: -3.1617252826690674
    4. 'to' → logprob: -3.1617252826690674
    5. 'nbr' → logprob: -3.1617252826690674
    6. 'nei' → logprob: -3.1617252826690674
    7. 'dest' → logprob: -3.2867252826690674
    8. ' neighbor' → logprob: -3.4117252826690674
    9. 'next' → logprob: -3.5367252826690674
    10. ' nxt' → logprob: -3.6617252826690674

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35351505875587463
    2. ',' → logprob: -1.9785150289535522
    3. '_idx' → logprob: -2.103515148162842
    4. ' ' → logprob: -4.478515148162842
    5. 'in' → logprob: -4.728515148162842
    6. 'idx' → logprob: -5.603515148162842
    7. ' ,' → logprob: -5.853515148162842
    8. '_index' → logprob: -6.228515148162842
    9. 's' → logprob: -6.353515148162842
    10. 'to' → logprob: -6.478515148162842

Token 179: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.20169389247894287
    2. ' adj' → logprob: -1.7016938924789429
    3. ' ' → logprob: -8.576693534851074
    4. 'range' → logprob: -10.576693534851074
    5. ' range' → logprob: -10.701693534851074
    6. '(adj' → logprob: -10.951693534851074
    7. '   ' → logprob: -11.451693534851074
    8. 'ad' → logprob: -12.201693534851074
    9. '  ' → logprob: -12.326693534851074
    10. ' adjacency' → logprob: -12.951693534851074

Token 180: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.625001907348633
    3. '[_' → logprob: -14.875001907348633
    4. '[' → logprob: -15.125001907348633
    5. '[idx' → logprob: -15.125001907348633
    6. 'list' → logprob: -16.250001907348633
    7. '_lst' → logprob: -17.125001907348633
    8. '_LIST' → logprob: -17.125001907348633
    9. '_List' → logprob: -17.625001907348633
    10. 'acency' → logprob: -17.750001907348633

Token 181: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.64970643306151e-05
    2. '[' → logprob: -9.875086784362793
    3. ' [' → logprob: -11.500086784362793
    4. '[id' → logprob: -11.625086784362793
    5. '[index' → logprob: -12.625086784362793
    6. ' ' → logprob: -12.750086784362793
    7. 'idx' → logprob: -13.000086784362793
    8. '   ' → logprob: -13.250086784362793
    9. '[int' → logprob: -13.625086784362793
    10. '(idx' → logprob: -14.125086784362793

Token 182: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.010442347265779972
    2. ']:
' → logprob: -4.63544225692749
    3. ':' → logprob: -7.76044225692749
    4. ' ' → logprob: -9.885442733764648
    5. ']' → logprob: -10.260442733764648
    6. '[' → logprob: -10.260442733764648
    7. ']:
' → logprob: -10.260442733764648
    8. '):' → logprob: -10.510442733764648
    9. ' ]' → logprob: -10.635442733764648
    10. '   ' → logprob: -11.010442733764648

Token 183: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.383133202791214
    2. '     ' → logprob: -1.3831331729888916
    3. '    
' → logprob: -4.133133411407471
    4. '      
' → logprob: -4.383133411407471
    5. '       ' → logprob: -4.508133411407471
    6. '    ' → logprob: -4.633133411407471
    7. ',' → logprob: -5.008133411407471
    8. '  
' → logprob: -5.383133411407471
    9. ':' → logprob: -6.508133411407471
    10. '        
' → logprob: -6.758133411407471

Token 184: ' cur' (ID: 4396)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9873649477958679
    2. ' node' → logprob: -1.4873650074005127
    3. '     ' → logprob: -1.4873650074005127
    4. 'u' → logprob: -3.4873650074005127
    5. ' u' → logprob: -3.8623650074005127
    6. 'next' → logprob: -3.8623650074005127
    7. 'v' → logprob: -4.612364768981934
    8. 'cur' (adapté à ' cur') → logprob: -4.737364768981934
    9. ' next' → logprob: -4.737364768981934
    10. 'to' → logprob: -4.737364768981934

Token 185: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.4192642867565155
    2. '_dist' → logprob: -1.669264316558838
    3. '_node' → logprob: -2.794264316558838
    4. '[' → logprob: -3.544264316558838
    5. '_distance' → logprob: -4.419264316558838
    6. '_id' → logprob: -4.794264316558838
    7. '_name' → logprob: -4.919264316558838
    8. 'dist' → logprob: -5.044264316558838
    9. ',' → logprob: -5.294264316558838
    10. '_' → logprob: -5.544264316558838

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34648075699806213
    2. '=' → logprob: -1.5964807271957397
    3. ' =' → logprob: -2.5964808464050293
    4. ' ,' → logprob: -4.221480846405029
    5. ' ' → logprob: -6.971480846405029
    6. '=int' → logprob: -10.346480369567871
    7. '  ' → logprob: -11.346480369567871
    8. '   ' → logprob: -12.346480369567871
    9. ',int' → logprob: -12.471480369567871
    10. '     ' → logprob: -12.596480369567871

Token 187: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.8081787824630737
    2. ' cur' → logprob: -1.6831787824630737
    3. 'weight' → logprob: -1.8081787824630737
    4. 'int' → logprob: -2.6831789016723633
    5. ' weight' → logprob: -3.1831789016723633
    6. 'w' → logprob: -3.5581789016723633
    7. 'cost' → logprob: -4.058178901672363
    8. ' int' → logprob: -4.183178901672363
    9. ' =' → logprob: -4.558178901672363
    10. ' cost' → logprob: -5.183178901672363

Token 188: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5151335000991821
    2. '_distance' → logprob: -1.8901335000991821
    3. 'dist' → logprob: -2.3901333808898926
    4. '_cost' → logprob: -3.3901333808898926
    5. ' =' → logprob: -3.6401333808898926
    6. '_weight' → logprob: -3.8901333808898926
    7. '_idx' → logprob: -4.015133380889893
    8. '_val' → logprob: -4.140133380889893
    9. '[' → logprob: -4.390133380889893
    10. '_edge' → logprob: -5.140133380889893

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6939420104026794
    2. ' =' → logprob: -0.6939420104026794
    3. ' ' → logprob: -7.193942070007324
    4. '=int' → logprob: -10.568942070007324
    5. '  ' → logprob: -11.693942070007324
    6. ',' → logprob: -11.693942070007324
    7. 'int' → logprob: -15.068942070007324
    8. '   ' → logprob: -15.443942070007324
    9. ' ,' → logprob: -16.193941116333008
    10. '    ' → logprob: -16.318941116333008

Token 190: ' [' (ID: 723)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3876354396343231
    2. 'int' → logprob: -1.1376354694366455
    3. ' edge' → logprob: -7.887635231018066
    4. ' map' → logprob: -8.762635231018066
    5. ' ' → logprob: -9.387635231018066
    6. 'edge' → logprob: -9.512635231018066
    7. 'map' → logprob: -10.262635231018066
    8. '(int' → logprob: -10.637635231018066
    9. '[int' → logprob: -11.887635231018066
    10. '  ' → logprob: -12.887635231018066

Token 191: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.612634362885728e-05
    2. ' int' → logprob: -9.500076293945312
    3. ' ' → logprob: -14.250076293945312
    4. '  ' → logprob: -16.000076293945312
    5. '(int' → logprob: -16.125076293945312
    6. 'edge' → logprob: -16.500076293945312
    7. '   ' → logprob: -16.500076293945312
    8. '[int' → logprob: -16.500076293945312
    9. ']int' → logprob: -17.000076293945312
    10. '0' → logprob: -17.750076293945312

Token 192: '(e' (ID: 3454)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.007722556125372648
    2. '(x' → logprob: -5.0077223777771
    3. '(i' → logprob: -7.7577223777771
    4. 'edge' → logprob: -7.8827223777771
    5. '(e' → logprob: -9.007722854614258
    6. '(v' → logprob: -10.882722854614258
    7. '(s' → logprob: -11.257722854614258
    8. '(' → logprob: -11.882722854614258
    9. 'x' → logprob: -12.257722854614258
    10. '(c' → logprob: -12.382722854614258

Token 193: ')' (ID: 8)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.022366657853126526
    2. 'edge' → logprob: -3.897366762161255
    3. '(x' → logprob: -7.522366523742676
    4. '(e' → logprob: -7.897366523742676
    5. ')' → logprob: -8.022366523742676
    6. 'x' → logprob: -8.397366523742676
    7. '=edge' → logprob: -8.397366523742676
    8. 'e' → logprob: -10.147366523742676
    9. ' edge' → logprob: -10.397366523742676
    10. ']' → logprob: -11.022366523742676

Token 194: ' for' (ID: 395)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.1525174379348755
    2. ' for' → logprob: -2.777517318725586
    3. ']' → logprob: -3.027517318725586
    4. 'for' → logprob: -4.152517318725586
    5. ',' → logprob: -5.402517318725586
    6. '()' → logprob: -5.527517318725586
    7. '(e' → logprob: -6.277517318725586
    8. 'edge' → logprob: -6.277517318725586
    9. '()]' → logprob: -7.402517318725586
    10. ')' → logprob: -7.527517318725586

Token 195: ' e' (ID: 319)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.038069259375333786
    2. 'edge' → logprob: -3.288069248199463
    3. '(edge' → logprob: -10.663069725036621
    4. 'e' → logprob: -13.288069725036621
    5. ' ' → logprob: -13.288069725036621
    6. ' e' → logprob: -14.663069725036621
    7. '=edge' → logprob: -14.913069725036621
    8. '  ' → logprob: -16.663068771362305
    9. '.edge' → logprob: -17.663068771362305
    10. '_edge' → logprob: -17.788068771362305

Token 196: ' in' (ID: 306)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.06997033953666687
    2. 'edge' → logprob: -2.6949703693389893
    3. ' in' → logprob: -11.19497013092041
    4. 'e' → logprob: -11.94497013092041
    5. '(edge' → logprob: -12.19497013092041
    6. ' ' → logprob: -12.69497013092041
    7. ' e' → logprob: -13.06997013092041
    8. '=edge' → logprob: -13.44497013092041
    9. 'in' → logprob: -14.19497013092041
    10. ' range' → logprob: -14.69497013092041

Token 197: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.03805939108133316
    2. ' edge' → logprob: -3.2880594730377197
    3. '(edge' → logprob: -11.16305923461914
    4. ' ' → logprob: -13.03805923461914
    5. 'range' → logprob: -14.28805923461914
    6. '  ' → logprob: -15.66305923461914
    7. '=edge' → logprob: -15.91305923461914
    8. '
' → logprob: -16.16305923461914
    9. ' range' → logprob: -16.16305923461914
    10. '   ' → logprob: -16.16305923461914

Token 198: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004238550551235676
    2. ' ]' → logprob: -5.504238605499268
    3. ' ' → logprob: -9.00423812866211
    4. '[' → logprob: -11.50423812866211
    5. ']
' → logprob: -11.87923812866211
    6. '()]' → logprob: -12.12923812866211
    7. '     ' → logprob: -12.25423812866211
    8. '  ' → logprob: -13.12923812866211
    9. '   ' → logprob: -13.50423812866211
    10. ']==' → logprob: -14.12923812866211

Token 199: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.002113501075655222
    2. '      
' → logprob: -7.127113342285156
    3. '
' → logprob: -7.252113342285156
    4. '<|end|>' → logprob: -8.502113342285156
    5. ' ' → logprob: -9.127113342285156
    6. ',' → logprob: -9.627113342285156
    7. '  
' → logprob: -9.877113342285156
    8. '   ' → logprob: -10.252113342285156
    9. ' if' → logprob: -10.502113342285156
    10. '    ' → logprob: -11.002113342285156

Token 200: ' if' (ID: 538)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.3602365255355835
    2. 'if' (adapté à ' if') → logprob: -1.6102365255355835
    3. ' if' → logprob: -2.360236644744873
    4. '   ' → logprob: -5.735236644744873
    5. ' ' → logprob: -6.110236644744873
    6. '      
' → logprob: -6.735236644744873
    7. '
' → logprob: -7.235236644744873
    8. '       ' → logprob: -7.985236644744873
    9. '    ' → logprob: -8.110236167907715
    10. '  ' → logprob: -9.985236167907715

Token 201: ' visited' (ID: 18416)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11801695078611374
    2. 'not' → logprob: -2.4930169582366943
    3. '(not' → logprob: -4.368016719818115
    4. ' (' → logprob: -5.368016719818115
    5. 'visited' → logprob: -5.618016719818115
    6. ' visited' → logprob: -5.993016719818115
    7. ' dist' → logprob: -5.993016719818115
    8. ' ' → logprob: -6.743016719818115
    9. 'dist' → logprob: -7.243016719818115
    10. '(' → logprob: -7.743016719818115

Token 202: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.1160349458805285e-05
    2. 'cur' → logprob: -12.125011444091797
    3. '[' → logprob: -12.250011444091797
    4. ' ' → logprob: -15.250011444091797
    5. ' [' → logprob: -15.375011444091797
    6. '(cur' → logprob: -16.500011444091797
    7. '	cur' → logprob: -16.875011444091797
    8. ' cur' → logprob: -17.000011444091797
    9. '```' → logprob: -17.250011444091797
    10. '   ' → logprob: -17.375011444091797

Token 203: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00025942857610061765
    2. '[idx' → logprob: -8.750259399414062
    3. 'idx' → logprob: -10.125259399414062
    4. '[cur' → logprob: -10.875259399414062
    5. '[' → logprob: -11.250259399414062
    6. 'x' → logprob: -11.500259399414062
    7. 'Idx' → logprob: -11.750259399414062
    8. '][' → logprob: -12.750259399414062
    9. ' ' → logprob: -13.500259399414062
    10. ']' → logprob: -13.750259399414062

Token 204: ']:' (ID: 12433)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.057571291923523
    2. '==' → logprob: -1.307571291923523
    3. ']' → logprob: -1.432571291923523
    4. ']==' → logprob: -2.4325714111328125
    5. ' ' → logprob: -3.6825714111328125
    6. 'or' → logprob: -4.1825714111328125
    7. ' ==' → logprob: -4.8075714111328125
    8. ':' → logprob: -6.0575714111328125
    9. ')' → logprob: -6.5575714111328125
    10. ']:' → logprob: -6.6825714111328125

Token 205: ' continue' (ID: 4901)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.09605224430561066
    2. ' continue' → logprob: -3.0960521697998047
    3. '       ' → logprob: -3.2210521697998047
    4. 'continue' → logprob: -5.346052169799805
    5. '   ' → logprob: -6.971052169799805
    6. '	continue' → logprob: -7.971052169799805
    7. ' ' → logprob: -8.721052169799805
    8. '
' → logprob: -10.221052169799805
    9. '<|end|>' → logprob: -10.346052169799805
    10. '           ' → logprob: -10.471052169799805

Token 206: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4844346046447754
    2. '     ' → logprob: -1.1094346046447754
    3. '      
' → logprob: -3.1094346046447754
    4. '  
' → logprob: -5.484434604644775
    5. '    
' → logprob: -6.484434604644775
    6. ' 
' → logprob: -6.609434604644775
    7. '<|end|>' → logprob: -6.859434604644775
    8. '
' → logprob: -7.609434604644775
    9. '     
' → logprob: -7.734434604644775
    10. ' if' → logprob: -9.359434127807617

Token 207: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.13112381100654602
    2. '
' → logprob: -2.5061237812042236
    3. '      
' → logprob: -3.2561237812042236
    4. ' if' → logprob: -7.131124019622803
    5. '<|end|>' → logprob: -8.006123542785645
    6. ' 
' → logprob: -8.131123542785645
    7. '     
' → logprob: -8.131123542785645
    8. '  
' → logprob: -8.256123542785645
    9. 'if' → logprob: -8.381123542785645
    10. '    
' → logprob: -8.631123542785645

Token 208: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.18291692435741425
    2. 'if' → logprob: -2.5579168796539307
    3. ' new' → logprob: -2.6829168796539307
    4. '     ' → logprob: -4.55791711807251
    5. ' if' → logprob: -4.68291711807251
    6. ' ' → logprob: -6.80791711807251
    7. 'next' → logprob: -9.182916641235352
    8. '   ' → logprob: -9.432916641235352
    9. '      
' → logprob: -9.807916641235352
    10. 'cur' → logprob: -10.182916641235352

Token 209: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0003778840182349086
    2. '_distance' → logprob: -8.375377655029297
    3. 'dist' → logprob: -9.750377655029297
    4. '_' → logprob: -10.125377655029297
    5. '_d' → logprob: -10.750377655029297
    6. 'Dist' → logprob: -10.875377655029297
    7. '_dis' → logprob: -12.625377655029297
    8. '_cost' → logprob: -13.000377655029297
    9. ' _' → logprob: -13.625377655029297
    10. ' =' → logprob: -14.375377655029297

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. ' ' → logprob: -14.886871337890625
    4. ',' → logprob: -17.886871337890625
    5. ' =)' → logprob: -17.886871337890625
    6. '  ' → logprob: -18.261871337890625
    7. ')' → logprob: -18.261871337890625
    8. '＝' → logprob: -18.511871337890625
    9. '=int' → logprob: -18.511871337890625
    10. ' ' → logprob: -18.886871337890625

Token 211: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.25194817781448364
    2. 'dist' → logprob: -1.5019481182098389
    3. ' ' → logprob: -11.376948356628418
    4. '	dist' → logprob: -12.751948356628418
    5. '(dist' → logprob: -13.751948356628418
    6. '   ' → logprob: -13.876948356628418
    7. '  ' → logprob: -14.126948356628418
    8. ' new' → logprob: -14.876948356628418
    9. 'd' → logprob: -15.001948356628418
    10. '    ' → logprob: -15.626948356628418

Token 212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478381156921
    2. ' +' → logprob: -0.6931478381156921
    3. ' ' → logprob: -14.818147659301758
    4. ' ' → logprob: -15.943147659301758
    5. '<|end|>' → logprob: -17.068147659301758
    6. ' plus' → logprob: -17.443147659301758
    7. '[' → logprob: -17.568147659301758
    8. '[cur' → logprob: -17.943147659301758
    9. '＋' → logprob: -17.943147659301758
    10. ' +
' → logprob: -18.193147659301758

Token 213: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0889722928404808
    2. ' cur' → logprob: -2.463972330093384
    3. 'int' → logprob: -10.838972091674805
    4. ' ' → logprob: -11.588972091674805
    5. ' int' → logprob: -12.963972091674805
    6. '	cur' → logprob: -14.588972091674805
    7. '   ' → logprob: -14.963972091674805
    8. '(cur' → logprob: -15.463972091674805
    9. '[cur' → logprob: -15.463972091674805
    10. ' ' → logprob: -16.088972091674805

Token 214: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.375001907348633
    3. 'dist' → logprob: -14.500001907348633
    4. '_d' → logprob: -15.750001907348633
    5. '_val' → logprob: -17.250001907348633
    6. '	dist' → logprob: -17.625001907348633
    7. '_DIST' → logprob: -17.875001907348633
    8. '_distance' → logprob: -18.000001907348633
    9. '_cost' → logprob: -18.250001907348633
    10. ' _' → logprob: -18.250001907348633

Token 215: '

' (ID: 279)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.015135243535041809
    2. '
' → logprob: -4.265135288238525
    3. '<|end|>' → logprob: -7.890135288238525
    4. ' if' → logprob: -8.640134811401367
    5. '      
' → logprob: -8.640134811401367
    6. '  
' → logprob: -9.140134811401367
    7. ' ' → logprob: -9.640134811401367
    8. 'if' → logprob: -10.890134811401367
    9. ' 
' → logprob: -11.140134811401367
    10. '<|end|>' → logprob: -11.890134811401367

Token 216: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.010162943974137306
    2. '<|end|>' → logprob: -5.510162830352783
    3. '
' → logprob: -5.760162830352783
    4. ' ' → logprob: -6.885162830352783
    5. ' if' → logprob: -7.260162830352783
    6. '      
' → logprob: -7.885162830352783
    7. '  
' → logprob: -8.135163307189941
    8. '   ' → logprob: -8.385163307189941
    9. ' 
' → logprob: -10.135163307189941
    10. '    ' → logprob: -10.135163307189941

Token 217: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4835142493247986
    2. ' if' → logprob: -0.9835142493247986
    3. '     ' → logprob: -4.983514308929443
    4. ' ' → logprob: -6.108514308929443
    5. '
' → logprob: -9.108513832092285
    6. '  ' → logprob: -10.108513832092285
    7. ' 
' → logprob: -10.358513832092285
    8. '      
' → logprob: -10.483513832092285
    9. 'If' → logprob: -10.608513832092285
    10. '   ' → logprob: -10.733513832092285

Token 218: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.17571844160556793
    2. ' dist' → logprob: -2.4257185459136963
    3. 'new' → logprob: -2.6757185459136963
    4. 'dist' → logprob: -5.675718307495117
    5. ' ' → logprob: -7.800718307495117
    6. '(new' → logprob: -11.550718307495117
    7. '(dist' → logprob: -11.800718307495117
    8. '	new' → logprob: -12.175718307495117
    9. '   ' → logprob: -12.800718307495117
    10. '  ' → logprob: -12.925718307495117

Token 219: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -5.3120038501219824e-05
    2. 'dist' → logprob: -10.125053405761719
    3. 'Dist' → logprob: -12.625053405761719
    4. '_' → logprob: -12.750053405761719
    5. '_distance' → logprob: -13.250053405761719
    6. '_DIST' → logprob: -13.625053405761719
    7. 'ist' → logprob: -14.125053405761719
    8. '	dist' → logprob: -14.375053405761719
    9. 'ew' → logprob: -15.000053405761719
    10. '<|end|>' → logprob: -15.125053405761719

Token 220: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008986209519207478
    2. '<' → logprob: -4.758985996246338
    3. ' ' → logprob: -8.133986473083496
    4. '<|end|>' → logprob: -9.758986473083496
    5. ' >=' → logprob: -11.883986473083496
    6. ' ' → logprob: -12.508986473083496
    7. '  ' → logprob: -12.883986473083496
    8. ' <=' → logprob: -13.383986473083496
    9. ' <",' → logprob: -13.633986473083496
    10. ' less' → logprob: -14.008986473083496

Token 221: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3868732452392578
    2. 'dist' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.761873245239258
    4. '	dist' → logprob: -13.761873245239258
    5. '(dist' → logprob: -16.636873245239258
    6. '_dist' → logprob: -17.511873245239258
    7. '   ' → logprob: -19.011873245239258
    8. '.dist' → logprob: -19.261873245239258
    9. 'Dist' → logprob: -19.386873245239258
    10. '  ' → logprob: -19.511873245239258

Token 222: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: 0.0
    2. 'arr' → logprob: -17.25
    3. '[_' → logprob: -18.125
    4. '_' → logprob: -19.0
    5. ' _' → logprob: -19.375
    6. '_array' → logprob: -20.0
    7. '	arr' → logprob: -20.0
    8. 'Arr' → logprob: -20.125
    9. ' ' → logprob: -20.375
    10. '[arr' → logprob: -20.375

Token 223: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'cur' → logprob: -18.125
    4. ' ' → logprob: -19.0
    5. ' [' → logprob: -19.5
    6. '(cur' → logprob: -20.75
    7. ' cur' → logprob: -21.125
    8. '[current' → logprob: -21.375
    9. '[next' → logprob: -21.375
    10. '[curr' → logprob: -21.5

Token 224: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.726595241460018e-05
    2. '_arr' → logprob: -10.62503719329834
    3. 'idx' → logprob: -11.37503719329834
    4. ']' → logprob: -15.25003719329834
    5. 'Idx' → logprob: -15.25003719329834
    6. '[idx' → logprob: -15.50003719329834
    7. '_' → logprob: -15.87503719329834
    8. '	idx' → logprob: -16.125038146972656
    9. 'x' → logprob: -16.375038146972656
    10. '])' → logprob: -16.625038146972656

Token 225: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03940403088927269
    2. ']:
' → logprob: -3.2894039154052734
    3. ']' → logprob: -7.289403915405273
    4. ':' → logprob: -7.914403915405273
    5. '):' → logprob: -9.539403915405273
    6. ' ]' → logprob: -9.664403915405273
    7. ' ' → logprob: -9.664403915405273
    8. ']:
' → logprob: -10.164403915405273
    9. '     ' → logprob: -10.664403915405273
    10. '):
' → logprob: -11.414403915405273

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010923543013632298
    2. ':' → logprob: -7.251092433929443
    3. '     ' → logprob: -9.501091957092285
    4. ' dist' → logprob: -9.751091957092285
    5. ',' → logprob: -10.126091957092285
    6. '):
' → logprob: -10.501091957092285
    7. '        
' → logprob: -10.626091957092285
    8. ':
' → logprob: -10.626091957092285
    9. '):' → logprob: -10.626091957092285
    10. 'dist' → logprob: -10.751091957092285

Token 227: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.45631641149520874
    2. '       ' → logprob: -1.2063164710998535
    3. 'dist' (adapté à ' dist') → logprob: -2.7063164710998535
    4. '	dist' → logprob: -8.956315994262695
    5. ' prev' → logprob: -9.831315994262695
    6. 'prev' → logprob: -10.206315994262695
    7. '         ' → logprob: -10.581315994262695
    8. ' ' → logprob: -11.081315994262695
    9. '_dist' → logprob: -11.456315994262695
    10. '
' → logprob: -11.956315994262695

Token 228: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.320199877838604e-07
    2. 'arr' → logprob: -15.0
    3. ' _' → logprob: -17.5
    4. '	arr' → logprob: -17.625
    5. 'Arr' → logprob: -18.5
    6. '_array' → logprob: -18.5
    7. '[_' → logprob: -18.75
    8. '_' → logprob: -19.25
    9. '_ar' → logprob: -19.5
    10. '._' → logprob: -19.75

Token 229: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. '[curr' → logprob: -17.750001907348633
    4. '	cur' → logprob: -17.875001907348633
    5. 'cur' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '[current' → logprob: -18.500001907348633
    8. '(cur' → logprob: -19.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.500001907348633

Token 230: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.458980300929397e-05
    2. 'idx' → logprob: -10.00008487701416
    3. '_arr' → logprob: -10.37508487701416
    4. '[idx' → logprob: -13.00008487701416
    5. '_dist' → logprob: -13.12508487701416
    6. '_cur' → logprob: -14.37508487701416
    7. 'Idx' → logprob: -14.50008487701416
    8. '_index' → logprob: -14.87508487701416
    9. '   ' → logprob: -15.00008487701416
    10. '_' → logprob: -15.37508487701416

Token 231: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2106810063123703
    2. ']' → logprob: -2.0856809616088867
    3. ' =' → logprob: -2.8356809616088867
    4. ']=' → logprob: -4.960680961608887
    5. ')' → logprob: -10.710680961608887
    6. ' ]' → logprob: -10.710680961608887
    7. ' ' → logprob: -12.085680961608887
    8. ')=' → logprob: -12.460680961608887
    9. ',' → logprob: -13.085680961608887
    10. '"]=' → logprob: -14.460680961608887

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ',' → logprob: -17.561967849731445
    4. '.=' → logprob: -18.311967849731445
    5. ']=' → logprob: -19.186967849731445
    6. '=

' → logprob: -19.311967849731445
    7. '=
' → logprob: -19.686967849731445
    8. '＝' → logprob: -19.686967849731445
    9. ' ' → logprob: -19.811967849731445
    10. '<|end|>' → logprob: -19.936967849731445

Token 233: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.16022412478923798
    2. 'new' → logprob: -1.9102240800857544
    3. '	new' → logprob: -17.78522491455078
    4. ' ' → logprob: -18.53522491455078
    5. ' ' → logprob: -18.53522491455078
    6. '新' → logprob: -19.53522491455078
    7. '_new' → logprob: -19.78522491455078
    8. '(new' → logprob: -20.16022491455078
    9. ')new' → logprob: -20.16022491455078
    10. '[new' → logprob: -20.41022491455078

Token 234: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -8.542423165636137e-05
    2. 'dist' → logprob: -9.375085830688477
    3. '_DIST' → logprob: -16.375085830688477
    4. '	dist' → logprob: -16.375085830688477
    5. '_' → logprob: -16.500085830688477
    6. 'new' → logprob: -16.750085830688477
    7. 'Dist' → logprob: -16.875085830688477
    8. '.dist' → logprob: -17.375085830688477
    9. ' _' → logprob: -17.625085830688477
    10. ' dist' → logprob: -18.000085830688477

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002202120842412114
    2. '
' → logprob: -6.627202033996582
    3. 'prev' → logprob: -8.002202033996582
    4. '<|end|>' → logprob: -8.252202033996582
    5. ',' → logprob: -8.752202033996582
    6. '        
' → logprob: -9.877202033996582
    7. ',
' → logprob: -10.627202033996582
    8. ' prev' → logprob: -10.877202033996582
    9. '```' → logprob: -11.877202033996582
    10. '(prev' → logprob: -12.252202033996582

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035052767489105463
    2. 'prev' → logprob: -6.128505229949951
    3. '
' → logprob: -7.128505229949951
    4. ' prev' → logprob: -8.37850570678711
    5. '        
' → logprob: -8.75350570678711
    6. '<|end|>' → logprob: -10.00350570678711
    7. '```' → logprob: -10.12850570678711
    8. ',' → logprob: -11.62850570678711
    9. '	prev' → logprob: -11.62850570678711
    10. '(prev' → logprob: -12.00350570678711

Token 237: ' he' (ID: 501)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5080366134643555
    2. '       ' → logprob: -1.1330366134643555
    3. 'he' (adapté à ' he') → logprob: -3.1330366134643555
    4. ' prev' → logprob: -3.8830366134643555
    5. ' he' → logprob: -4.5080366134643555
    6. 'heap' → logprob: -7.6330366134643555
    7. 'push' → logprob: -7.7580366134643555
    8. '(prev' → logprob: -10.133036613464355
    9. '	prev' → logprob: -10.258036613464355
    10. ' heap' → logprob: -10.758036613464355

Token 238: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.935296834039036e-06
    2. 'ap' → logprob: -12.75000286102295
    3. 'a' → logprob: -17.500003814697266
    4. 'pp' → logprob: -17.625003814697266
    5. 'appen' → logprob: -19.500003814697266
    6. ' app' → logprob: -19.750003814697266
    7. 'append' → logprob: -19.750003814697266
    8. '```' → logprob: -20.000003814697266
    9. 'push' → logprob: -20.250003814697266
    10. 'App' → logprob: -20.375003814697266

Token 239: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.128163257315464e-07
    2. 'push' → logprob: -15.125
    3. 'op' → logprob: -18.25
    4. 'ut' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. 'sh' → logprob: -19.75
    7. 'u' → logprob: -20.0
    8. 'us' → logprob: -20.25
    9. 'Push' → logprob: -20.375
    10. '.push' → logprob: -20.5

Token 240: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.500008583068848
    3. ' (' → logprob: -12.625008583068848
    4. ' ' → logprob: -14.000008583068848
    5. '<|end|>' → logprob: -14.875008583068848
    6. ',p' → logprob: -15.625008583068848
    7. '(q' → logprob: -15.750008583068848
    8. 'p' → logprob: -16.250009536743164
    9. '(
' → logprob: -17.125009536743164
    10. '(py' → logprob: -17.500009536743164

Token 241: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9266199160483666e-05
    2. '(p' → logprob: -11.500019073486328
    3. '(q' → logprob: -12.125019073486328
    4. 'Q' → logprob: -14.000019073486328
    5. 'sq' → logprob: -14.375019073486328
    6. 'pq' → logprob: -14.625019073486328
    7. '[q' → logprob: -14.875019073486328
    8. '[p' → logprob: -15.750019073486328
    9. ' ' → logprob: -15.875019073486328
    10. ')' → logprob: -16.000019073486328

Token 242: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06724535673856735
    2. ',' → logprob: -3.1922452449798584
    3. ' (' → logprob: -4.0672454833984375
    4. '(' → logprob: -5.1922454833984375
    5. '((' → logprob: -7.5672454833984375
    6. ',(' → logprob: -8.192245483398438
    7. ' ' → logprob: -8.817245483398438
    8. '(q' → logprob: -9.192245483398438
    9. ')' → logprob: -9.442245483398438
    10. ' ,' → logprob: -9.567245483398438

Token 243: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31345200538635254
    2. ' (' → logprob: -1.3134520053863525
    3. '(new' → logprob: -9.563451766967773
    4. '(cur' → logprob: -9.688451766967773
    5. ' ' → logprob: -9.938451766967773
    6. '(dist' → logprob: -12.188451766967773
    7. '((' → logprob: -13.813451766967773
    8. '(next' → logprob: -14.313451766967773
    9. '(prev' → logprob: -14.813451766967773
    10. '   ' → logprob: -14.813451766967773

Token 244: 'dist' (ID: 24126)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00033558503491804004
    2. ' new' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.875335693359375
    4. '   ' → logprob: -17.250335693359375
    5. '_new' → logprob: -17.750335693359375
    6. '	new' → logprob: -18.125335693359375
    7. ')new' → logprob: -18.875335693359375
    8. '```' → logprob: -19.000335693359375
    9. '(new' → logprob: -19.250335693359375
    10. 'New' → logprob: -19.500335693359375

Token 245: '_arr' (ID: 25121)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9116794466972351
    2. '+' → logprob: -1.0366795063018799
    3. '_arr' → logprob: -1.6616795063018799
    4. ',' → logprob: -3.78667950630188
    5. ' new' → logprob: -4.786679267883301
    6. '_new' → logprob: -5.161679267883301
    7. '[cur' → logprob: -5.661679267883301
    8. ',new' → logprob: -5.786679267883301
    9. 'cur' → logprob: -6.161679267883301
    10. ' +' → logprob: -6.161679267883301

Token 246: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -6.704273118884885e-07
    2. 'cur' → logprob: -14.625000953674316
    3. ',' → logprob: -16.625
    4. '(cur' → logprob: -17.625
    5. '	cur' → logprob: -17.75
    6. ' cur' → logprob: -17.75
    7. ' ' → logprob: -17.75
    8. '```' → logprob: -18.25
    9. '[' → logprob: -18.75
    10. '[curr' → logprob: -19.25

Token 247: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.11676796525716782
    2. 'cur' → logprob: -3.2417678833007812
    3. '[cur' → logprob: -3.3667678833007812
    4. '_cur' → logprob: -3.7417678833007812
    5. 'idx' → logprob: -4.491767883300781
    6. '_arr' → logprob: -6.616767883300781
    7. 'arr' → logprob: -8.741767883300781
    8. '```' → logprob: -10.241767883300781
    9. ' cur' → logprob: -10.491767883300781
    10. '(cur' → logprob: -10.491767883300781

Token 248: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',
' → logprob: -14.37502384185791
    4. '),' → logprob: -14.87502384185791
    5. '<|end|>' → logprob: -15.12502384185791
    6. ')' → logprob: -15.50002384185791
    7. '[cur' → logprob: -16.125022888183594
    8. '],' → logprob: -16.375022888183594
    9. ',

' → logprob: -16.375022888183594
    10. ',index' → logprob: -16.500022888183594

Token 249: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.02324792370200157
    2. ' cur' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.648247718811035
    4. '     ' → logprob: -14.773247718811035
    5. '   ' → logprob: -15.398247718811035
    6. '	cur' → logprob: -15.648247718811035
    7. '       ' → logprob: -16.02324867248535
    8. '[cur' → logprob: -16.14824867248535
    9. '         ' → logprob: -16.64824867248535
    10. '      ' → logprob: -17.02324867248535

Token 250: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.848420551046729e-05
    2. 'idx' → logprob: -9.7500581741333
    3. '_index' → logprob: -17.250059127807617
    4. '_ix' → logprob: -17.750059127807617
    5. ' idx' → logprob: -18.500059127807617
    6. '	idx' → logprob: -19.000059127807617
    7. 'Idx' → logprob: -19.250059127807617
    8. '_cur' → logprob: -19.500059127807617
    9. '```' → logprob: -19.500059127807617
    10. '.idx' → logprob: -19.875059127807617

Token 251: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010516269830986857
    2. '))
' → logprob: -7.251051425933838
    3. ')' → logprob: -8.001051902770996
    4. ' ))' → logprob: -13.126051902770996
    5. '       ' → logprob: -13.376051902770996
    6. ')
' → logprob: -13.376051902770996
    7. ')))' → logprob: -14.376051902770996
    8. ' ' → logprob: -15.001051902770996
    9. '))

' → logprob: -16.00105094909668
    10. '));' → logprob: -16.12605094909668

Token 252: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.075069360435009
    2. '<|end|>' → logprob: -3.0750694274902344
    3. 'prev' → logprob: -4.825069427490234
    4. '     ' → logprob: -5.325069427490234
    5. '   ' → logprob: -5.700069427490234
    6. '```' → logprob: -5.950069427490234
    7. ' ' → logprob: -6.325069427490234
    8. ')' → logprob: -6.575069427490234
    9. '	prev' → logprob: -7.200069427490234
    10. '(prev' → logprob: -7.450069427490234

Token 253: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06525687128305435
    2. 'prev' → logprob: -3.6902568340301514
    3. '<|end|>' → logprob: -4.1902570724487305
    4. ' return' → logprob: -4.6902570724487305
    5. ' ' → logprob: -4.9402570724487305
    6. '       ' → logprob: -5.1902570724487305
    7. '```' → logprob: -7.9402570724487305
    8. '   ' → logprob: -8.06525707244873
    9. '         ' → logprob: -9.19025707244873
    10. '  ' → logprob: -9.31525707244873

Token 254: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02063893899321556
    2. ' dist' → logprob: -3.895638942718506
    3. '(dist' → logprob: -10.145638465881348
    4. ' ' → logprob: -10.520638465881348
    5. 'prev' → logprob: -10.645638465881348
    6. '[' → logprob: -12.645638465881348
    7. '	dist' → logprob: -13.895638465881348
    8. ' prev' → logprob: -14.520638465881348
    9. 'distance' → logprob: -14.520638465881348
    10. '(' → logprob: -15.270638465881348

Token 255: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.004897496663033962
    2. ',' → logprob: -6.004897594451904
    3. '_dist' → logprob: -6.379897594451904
    4. '_' → logprob: -8.254897117614746
    5. ',_' → logprob: -8.629897117614746
    6. '_,' → logprob: -9.254897117614746
    7. 'arr' → logprob: -9.504897117614746
    8. ' _' → logprob: -10.754897117614746
    9. 'dist' → logprob: -10.879897117614746
    10. ' ' → logprob: -11.129897117614746

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: 'dist' (ID: 24126)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.667413592338562
    2. 'dist' → logprob: -1.792413592338562
    3. '<|end|>' → logprob: -2.0424137115478516
    4. 'result' → logprob: -2.2924137115478516
    5. 'distance' → logprob: -3.5424137115478516
    6. '```' → logprob: -4.042413711547852
    7. '#' → logprob: -4.542413711547852
    8. 'path' → logprob: -4.667413711547852
    9. 'answer' → logprob: -4.917413711547852
    10. 'short' → logprob: -5.792413711547852

Token 258: 'Arr' (ID: 8977)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.763666947837919e-05
    2. '_' → logprob: -10.12504768371582
    3. 'ances' → logprob: -12.50004768371582
    4. '_array' → logprob: -13.12504768371582
    5. 'ance' → logprob: -14.37504768371582
    6. '_ans' → logprob: -15.37504768371582
    7. ' =' → logprob: -15.50004768371582
    8. '_ar' → logprob: -16.00004768371582
    9. ' _' → logprob: -16.37504768371582
    10. '_r' → logprob: -16.50004768371582

Token 259: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11197597533464432
    2. '_' → logprob: -2.611975908279419
    3. '[]' → logprob: -3.986975908279419
    4. '[_' → logprob: -4.986976146697998
    5. '[:]' → logprob: -5.736976146697998
    6. '=' → logprob: -7.111976146697998
    7. '_arr' → logprob: -7.486976146697998
    8. '_[' → logprob: -7.736976146697998
    9. '_=' → logprob: -7.861976146697998
    10. ' =' → logprob: -7.986976146697998

Token 260: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02975141443312168
    2. ' d' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.404751777648926
    4. '(d' → logprob: -15.029751777648926
    5. '	d' → logprob: -17.65475082397461
    6. '(' → logprob: -18.27975082397461
    7. 'dist' → logprob: -19.02975082397461
    8. '   ' → logprob: -19.40475082397461
    9. '[d' → logprob: -19.77975082397461
    10. '  ' → logprob: -20.02975082397461

Token 261: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0002135534887202084
    2. 'ijk' → logprob: -9.000213623046875
    3. 'ij' → logprob: -9.875213623046875
    4. 'ist' → logprob: -10.250213623046875
    5. 'ijst' → logprob: -14.250213623046875
    6. 'ijkl' → logprob: -14.250213623046875
    7. 'ijks' → logprob: -14.500213623046875
    8. '```' → logprob: -14.875213623046875
    9. 'ijkt' → logprob: -15.625213623046875
    10. 'isti' → logprob: -16.000213623046875

Token 262: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.625033378601074
    3. '()
' → logprob: -12.500033378601074
    4. '()

' → logprob: -13.625033378601074
    5. '()<' → logprob: -14.000033378601074
    6. '()]' → logprob: -14.000033378601074
    7. ' ()' → logprob: -14.125033378601074
    8. '()`' → logprob: -14.625033378601074
    9. '();' → logprob: -15.000033378601074
    10. '(),' → logprob: -16.00003433227539

Token 263: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03806157782673836
    2. 'for' → logprob: -3.2880616188049316
    3. ' for' → logprob: -11.413061141967773
    4. '```' → logprob: -13.413061141967773
    5. '#print' → logprob: -13.663061141967773
    6. 'if' → logprob: -13.663061141967773
    7. ' print' → logprob: -13.788061141967773
    8. 'dist' → logprob: -14.413061141967773
    9. '<|end|>' → logprob: -14.413061141967773
    10. ' ' → logprob: -14.538061141967773

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3236100375652313
    2. ' i' → logprob: -1.3236100673675537
    3. 'dist' → logprob: -5.573609828948975
    4. ' dist' → logprob: -6.323609828948975
    5. 'd' → logprob: -6.323609828948975
    6. 'x' → logprob: -7.073609828948975
    7. ' d' → logprob: -7.573609828948975
    8. 'idx' → logprob: -8.198610305786133
    9. ' idx' → logprob: -8.323610305786133
    10. 'val' → logprob: -8.698610305786133

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09107522666454315
    2. 'in' → logprob: -2.4660751819610596
    3. ' ' → logprob: -6.591075420379639
    4. ',' → logprob: -7.216075420379639
    5. 'range' → logprob: -11.84107494354248
    6. '	in' → logprob: -12.09107494354248
    7. ' ,' → logprob: -12.96607494354248
    8. ')' → logprob: -13.21607494354248
    9. 'n' → logprob: -13.71607494354248
    10. ' i' → logprob: -13.96607494354248

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011129290796816349
    2. ' range' → logprob: -4.511129379272461
    3. 'dist' → logprob: -9.511129379272461
    4. ' ' → logprob: -12.261129379272461
    5. ' dist' → logprob: -14.011129379272461
    6. '(range' → logprob: -14.511129379272461
    7. '  ' → logprob: -15.011129379272461
    8. 'rang' → logprob: -15.011129379272461
    9. 'ran' → logprob: -15.511129379272461
    10. 'r' → logprob: -15.511129379272461

Token 267: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31334754824638367
    2. '(' → logprob: -1.313347578048706
    3. 'n' → logprob: -9.938347816467285
    4. '(len' → logprob: -10.688347816467285
    5. '1' → logprob: -11.188347816467285
    6. '(
' → logprob: -14.563347816467285
    7. ' (' → logprob: -15.563347816467285
    8. ' n' → logprob: -16.56334686279297
    9. 'len' → logprob: -17.31334686279297
    10. '(N' → logprob: -17.81334686279297

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10047397017478943
    2. '):
' → logprob: -2.3504738807678223
    3. ':' → logprob: -9.22547435760498
    4. '+' → logprob: -9.35047435760498
    5. ')' → logprob: -9.97547435760498
    6. ' ' → logprob: -11.35047435760498
    7. '-' → logprob: -12.10047435760498
    8. ' ):' → logprob: -12.10047435760498
    9. ':
' → logprob: -12.35047435760498
    10. '):
' → logprob: -12.60047435760498

Token 269: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.602432370185852
    2. ' print' → logprob: -0.852432370185852
    3. 'print' → logprob: -3.8524322509765625
    4. '   ' → logprob: -5.3524322509765625
    5. '```' → logprob: -9.352432250976562
    6. ' if' → logprob: -9.727432250976562
    7. '	print' → logprob: -10.977432250976562
    8. ' ' → logprob: -11.977432250976562
    9. '.print' → logprob: -12.352432250976562
    10. 'if' → logprob: -13.477432250976562

Token 270: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008144311606884003
    2. ' ' → logprob: -5.758144378662109
    3. 'if' → logprob: -6.008144378662109
    4. ' print' → logprob: -6.008144378662109
    5. ' if' → logprob: -10.38314437866211
    6. 'sys' → logprob: -12.75814437866211
    7. '   ' → logprob: -13.63314437866211
    8. '```' → logprob: -14.25814437866211
    9. 'printf' → logprob: -14.38314437866211
    10. '	print' → logprob: -14.88314437866211

Token 271: '(i' (ID: 3649)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.007273775525391102
    2. 'dist' → logprob: -5.2572736740112305
    3. '(' → logprob: -6.2572736740112305
    4. '(f' → logprob: -9.50727367401123
    5. '("' → logprob: -10.88227367401123
    6. '(i' → logprob: -11.50727367401123
    7. ' dist' → logprob: -11.88227367401123
    8. ' (' → logprob: -13.00727367401123
    9. '('' → logprob: -13.13227367401123
    10. 'f' → logprob: -13.50727367401123

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001416069339029491
    2. ' ,' → logprob: -6.751416206359863
    3. ',end' → logprob: -8.626416206359863
    4. ',d' → logprob: -10.501416206359863
    5. ')' → logprob: -11.001416206359863
    6. ',",' → logprob: -12.251416206359863
    7. ',len' → logprob: -12.626416206359863
    8. '(dist' → logprob: -13.126416206359863
    9. '+' → logprob: -13.376416206359863
    10. ' ' → logprob: -13.501416206359863

Token 273: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04911242797970772
    2. ' dist' → logprob: -3.049112319946289
    3. '"' → logprob: -7.799112319946289
    4. ''' → logprob: -9.424112319946289
    5. ' "' → logprob: -11.674112319946289
    6. '(dist' → logprob: -11.674112319946289
    7. ' '' → logprob: -12.549112319946289
    8. 'end' → logprob: -12.924112319946289
    9. '""' → logprob: -13.299112319946289
    10. ' ' → logprob: -13.299112319946289

Token 274: 'Arr' (ID: 8977)
  Prédit: 'Arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arr' → logprob: -0.003607317106798291
    2. '_arr' → logprob: -5.628607273101807
    3. 'Ar' → logprob: -12.253607749938965
    4. ' Arr' → logprob: -14.628607749938965
    5. 'arr' → logprob: -14.878607749938965
    6. '_A' → logprob: -15.128607749938965
    7. 'Array' → logprob: -15.253607749938965
    8. ')' → logprob: -15.753607749938965
    9. '\' → logprob: -16.12860679626465
    10. '_' → logprob: -16.25360679626465

Token 275: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000781634240411222
    2. '[' → logprob: -7.250781536102295
    3. ')' → logprob: -9.875782012939453
    4. ' [' → logprob: -12.000782012939453
    5. ')[' → logprob: -12.125782012939453
    6. ' ' → logprob: -12.750782012939453
    7. '[n' → logprob: -13.125782012939453
    8. ']' → logprob: -14.250782012939453
    9. '[
' → logprob: -14.250782012939453
    10. '[I' → logprob: -15.125782012939453

Token 276: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.000003814697266
    3. '))' → logprob: -14.125003814697266
    4. ')`' → logprob: -15.125003814697266
    5. ')")' → logprob: -17.000003814697266
    6. ')
' → logprob: -17.000003814697266
    7. '})' → logprob: -17.125003814697266
    8. ',' → logprob: -17.750003814697266
    9. ')#' → logprob: -17.875003814697266
    10. ' ' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 41.24%
Précision adaptée (1ère position): 41.97%
Précision (top 10): 79.56%
================================================================================
