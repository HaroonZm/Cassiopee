================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
G = [[0 for i in range(N)] for j in range(N)]

for i in range(N):
    ls = list(map(int,input().split()))
    u = ls[0] - 1
    for v in ls[2:]:
        G[u][v-1] = 1

for row in G:
    print(' '.join(map(str,row)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'G' (ID: 38)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7158713936805725
    2. 'if' → logprob: -1.2158713340759277
    3. '\n' → logprob: -2.5908713340759277
    4. 's' → logprob: -3.7158713340759277
    5. 'i' → logprob: -3.8408713340759277
    6. 'x' → logprob: -4.215871334075928
    7. '```' → logprob: -4.340871334075928
    8. '`' → logprob: -4.715871334075928
    9. 'a' → logprob: -4.715871334075928
    10. ')' → logprob: -4.965871334075928

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.052412454038858414
    2. '.' → logprob: -3.052412509918213
    3. '=' → logprob: -6.927412509918213
    4. '[]' → logprob: -7.552412509918213
    5. ' =' → logprob: -7.552412509918213
    6. '[r' → logprob: -7.677412509918213
    7. '\[' → logprob: -7.927412509918213
    8. 'raph' → logprob: -8.927412033081055
    9. '[:]' → logprob: -9.177412033081055
    10. ',' → logprob: -9.177412033081055

Token 7: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6878681182861328
    2. '[]' → logprob: -1.3128681182861328
    3. ' [[]' → logprob: -2.562868118286133
    4. ' [' → logprob: -2.687868118286133
    5. ' {}' → logprob: -3.187868118286133
    6. '[' → logprob: -4.062868118286133
    7. '{}' → logprob: -4.562868118286133
    8. 'list' → logprob: -5.562868118286133
    9. '[int' → logprob: -6.187868118286133
    10. '[input' → logprob: -6.187868118286133

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005600620643235743
    2. 'False' → logprob: -8.12555980682373
    3. 'int' → logprob: -8.62555980682373
    4. ' ' → logprob: -10.25055980682373
    5. ']' → logprob: -10.25055980682373
    6. '[]' → logprob: -12.37555980682373
    7. '*' → logprob: -13.12555980682373
    8. 'input' → logprob: -13.37555980682373
    9. '-' → logprob: -14.00055980682373
    10. ' False' → logprob: -14.25055980682373

Token 9: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46808990836143494
    2. ']' → logprob: -1.5930899381637573
    3. ']*' → logprob: -2.0930898189544678
    4. 'for' → logprob: -3.3430898189544678
    5. ',' → logprob: -5.218090057373047
    6. ' ]' → logprob: -5.343090057373047
    7. ' ' → logprob: -7.093090057373047
    8. ']*(' → logprob: -7.343090057373047
    9. '	for' → logprob: -9.468090057373047
    10. ')' → logprob: -10.468090057373047

Token 10: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6393510103225708
    2. '_' → logprob: -0.8893510103225708
    3. ' j' → logprob: -3.1393508911132812
    4. ' range' → logprob: -4.639350891113281
    5. 'range' → logprob: -5.514350891113281
    6. ' in' → logprob: -6.139350891113281
    7. ' ' → logprob: -7.014350891113281
    8. '_range' → logprob: -7.514350891113281
    9. '_j' → logprob: -7.889350891113281
    10. ' i' → logprob: -8.639350891113281

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011071168817579746
    2. 'in' → logprob: -4.51107120513916
    3. 'range' → logprob: -11.51107120513916
    4. ' ' → logprob: -11.76107120513916
    5. ')' → logprob: -13.26107120513916
    6. ' range' → logprob: -13.38607120513916
    7. ' )' → logprob: -14.76107120513916
    8. ' ]' → logprob: -14.88607120513916
    9. '```' → logprob: -14.88607120513916
    10. ']' → logprob: -15.51107120513916

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024758970830589533
    2. 'range' → logprob: -6.002475738525391
    3. '	range' → logprob: -16.25247573852539
    4. ' ' → logprob: -16.87747573852539
    5. ' xrange' → logprob: -17.00247573852539
    6. '(range' → logprob: -17.25247573852539
    7. '_range' → logprob: -18.00247573852539
    8. 'Range' → logprob: -19.25247573852539
    9. ' rango' → logprob: -20.00247573852539
    10. '-range' → logprob: -20.25247573852539

Token 13: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014808655716478825
    2. '(' → logprob: -4.389808654785156
    3. ' (' → logprob: -6.264808654785156
    4. 'N' → logprob: -8.389808654785156
    5. ' N' → logprob: -8.889808654785156
    6. '(n' → logprob: -11.139808654785156
    7. ')' → logprob: -11.889808654785156
    8. ' ' → logprob: -13.139808654785156
    9. ' )' → logprob: -13.514808654785156
    10. '(
' → logprob: -13.889808654785156

Token 14: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001261845463886857
    2. ')' → logprob: -9.125125885009766
    3. ' )' → logprob: -11.500125885009766
    4. ']' → logprob: -12.625125885009766
    5. '])]' → logprob: -13.750125885009766
    6. ')])' → logprob: -14.000125885009766
    7. ' ]' → logprob: -14.875125885009766
    8. ')]
' → logprob: -15.500125885009766
    9. '])' → logprob: -15.500125885009766
    10. ')}' → logprob: -15.625125885009766

Token 15: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004722395446151495
    2. ' ]' → logprob: -6.129722595214844
    3. ' for' → logprob: -6.254722595214844
    4. 'for' → logprob: -7.504722595214844
    5. ')]' → logprob: -10.379722595214844
    6. ']]' → logprob: -11.879722595214844
    7. ')' → logprob: -12.504722595214844
    8. '   ' → logprob: -12.754722595214844
    9. '][' → logprob: -12.754722595214844
    10. '`]' → logprob: -13.004722595214844

Token 16: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005965176969766617
    2. 'range' → logprob: -5.130965232849121
    3. '(range' → logprob: -10.255965232849121
    4. '	range' → logprob: -14.255965232849121
    5. ' ' → logprob: -15.380965232849121
    6. '_range' → logprob: -15.880965232849121
    7. ' xrange' → logprob: -16.255964279174805
    8. '(' → logprob: -16.755964279174805
    9. ' i' → logprob: -17.005964279174805
    10. '```' → logprob: -17.005964279174805

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006577054038643837
    2. 'in' → logprob: -5.131577014923096
    3. ' range' → logprob: -8.256577491760254
    4. '(range' → logprob: -9.006577491760254
    5. 'range' → logprob: -9.256577491760254
    6. '(' → logprob: -9.256577491760254
    7. ' ' → logprob: -10.506577491760254
    8. ' (' → logprob: -11.131577491760254
    9. '(N' → logprob: -11.381577491760254
    10. '	in' → logprob: -11.756577491760254

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740777611732483
    2. ' range' → logprob: -0.9740777611732483
    3. '(range' → logprob: -14.099078178405762
    4. '	range' → logprob: -19.099077224731445
    5. ' ' → logprob: -19.724077224731445
    6. 'N' → logprob: -19.724077224731445
    7. 'Range' → logprob: -20.099077224731445
    8. '   ' → logprob: -20.724077224731445
    9. '_range' → logprob: -21.224077224731445
    10. '(' → logprob: -21.224077224731445

Token 19: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00013846253568772227
    2. '(' → logprob: -9.500138282775879
    3. 'N' → logprob: -10.000138282775879
    4. ' (' → logprob: -11.250138282775879
    5. ' range' → logprob: -13.500138282775879
    6. 'range' → logprob: -13.625138282775879
    7. ' N' → logprob: -14.000138282775879
    8. '(n' → logprob: -14.125138282775879
    9. '(range' → logprob: -14.500138282775879
    10. 'Range' → logprob: -15.500138282775879

Token 20: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.7385154428193346e-05
    2. ')' → logprob: -11.25003719329834
    3. '])]' → logprob: -11.25003719329834
    4. ']' → logprob: -12.25003719329834
    5. ')])' → logprob: -12.25003719329834
    6. ' )' → logprob: -14.50003719329834
    7. '')]' → logprob: -14.50003719329834
    8. '])' → logprob: -15.00003719329834
    9. ')],' → logprob: -15.75003719329834
    10. ')][' → logprob: -16.625038146972656

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005294414004310966
    2. ' for' → logprob: -8.000529289245605
    3. 'i' → logprob: -9.750529289245605
    4. 'f' → logprob: -10.625529289245605
    5. 'F' → logprob: -10.750529289245605
    6. 'n' → logprob: -11.250529289245605
    7. 'r' → logprob: -11.500529289245605
    8. 'N' → logprob: -11.625529289245605
    9. 'G' → logprob: -11.750529289245605
    10. '
' → logprob: -12.250529289245605

Token 22: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11714401096105576
    2. ' i' → logprob: -2.2421441078186035
    3. '  ' → logprob: -5.6171441078186035
    4. 'i' → logprob: -7.7421441078186035
    5. ' ‌' → logprob: -9.617143630981445
    6. '_' → logprob: -10.367143630981445
    7. ' j' → logprob: -10.617143630981445
    8. ' _' → logprob: -10.992143630981445
    9. ' row' → logprob: -11.367143630981445
    10. ' )' → logprob: -11.742143630981445

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06515289098024368
    2. 'in' → logprob: -2.815152883529663
    3. ' ' → logprob: -5.815153121948242
    4. '<|end|>' → logprob: -9.440153121948242
    5. '  ' → logprob: -9.940153121948242
    6. '	in' → logprob: -11.065153121948242
    7. ' i' → logprob: -11.190153121948242
    8. 'space' → logprob: -12.190153121948242
    9. ')' → logprob: -12.377653121948242
    10. '_' → logprob: -13.002653121948242

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015218837652355433
    2. 'range' → logprob: -6.501522064208984
    3. ' ' → logprob: -10.876522064208984
    4. ' xrange' → logprob: -14.876522064208984
    5. '	range' → logprob: -15.626522064208984
    6. '(range' → logprob: -17.251522064208984
    7. '  ' → logprob: -17.751522064208984
    8. ' ' → logprob: -18.001522064208984
    9. ')' → logprob: -18.001522064208984
    10. '_range' → logprob: -18.626522064208984

Token 25: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015006667003035545
    2. '(N' → logprob: -4.6400065422058105
    3. ' (' → logprob: -5.2650065422058105
    4. ' ' → logprob: -10.390007019042969
    5. '(
' → logprob: -11.265007019042969
    6. '(n' → logprob: -11.640007019042969
    7. ')' → logprob: -12.515007019042969
    8. '(space' → logprob: -12.640007019042969
    9. '(range' → logprob: -13.140007019042969
    10. '(len' → logprob: -14.015007019042969

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008497443050146103
    2. ')' → logprob: -4.88349723815918
    3. '+' → logprob: -8.13349723815918
    4. ' ):' → logprob: -8.25849723815918
    5. '):
' → logprob: -8.38349723815918
    6. ':' → logprob: -9.88349723815918
    7. ')]' → logprob: -10.75849723815918
    8. ']:' → logprob: -11.75849723815918
    9. '<|end|>' → logprob: -12.00849723815918
    10. ' ' → logprob: -12.13349723815918

Token 27: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.31828856468200684
    2. ' ' → logprob: -1.4432885646820068
    3. '   ' → logprob: -3.943288564682007
    4. '<|end|>' → logprob: -4.943288803100586
    5. ' for' → logprob: -5.068288803100586
    6. '     
' → logprob: -6.568288803100586
    7. '  ' → logprob: -7.568288803100586
    8. 'for' → logprob: -7.943288803100586
    9. '```' → logprob: -8.693288803100586
    10. ' G' → logprob: -8.693288803100586

Token 28: ' ls' (ID: 41498)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11054482311010361
    2. 'for' → logprob: -2.3605449199676514
    3. '   ' → logprob: -4.860544681549072
    4. ' range' → logprob: -6.860544681549072
    5. '    ' → logprob: -7.110544681549072
    6. ' G' → logprob: -8.23554515838623
    7. '```' → logprob: -9.48554515838623
    8. ' ```' → logprob: -9.73554515838623
    9. ' print' → logprob: -9.86054515838623
    10. 'range' → logprob: -10.23554515838623

Token 29: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.19827286899089813
    2. '[' → logprob: -2.823272943496704
    3. 'st' → logprob: -3.198272943496704
    4. ' =' → logprob: -3.573272943496704
    5. '[i' → logprob: -4.573272705078125
    6. '[t' → logprob: -4.573272705078125
    7. 's' → logprob: -4.698272705078125
    8. '   ' → logprob: -5.323272705078125
    9. '=' → logprob: -5.823272705078125
    10. 'input' → logprob: -6.073272705078125

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2865600287914276
    2. 'list' → logprob: -1.41156005859375
    3. 'input' → logprob: -6.28656005859375
    4. ' input' → logprob: -6.53656005859375
    5. ' map' → logprob: -6.91156005859375
    6. 'map' → logprob: -7.03656005859375
    7. ' [' → logprob: -9.16156005859375
    8. '[' → logprob: -9.53656005859375
    9. '   ' → logprob: -11.41156005859375
    10. '[]' → logprob: -12.16156005859375

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08359155803918839
    2. '(input' → logprob: -2.5835914611816406
    3. '(map' → logprob: -5.708591461181641
    4. '(int' → logprob: -6.833591461181641
    5. '()' → logprob: -8.95859146118164
    6. '(range' → logprob: -9.95859146118164
    7. '(str' → logprob: -11.20859146118164
    8. '(
' → logprob: -11.58359146118164
    9. '(data' → logprob: -11.70859146118164
    10. '(eval' → logprob: -11.70859146118164

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000539093220140785
    2. '(' → logprob: -7.750539302825928
    3. '(input' → logprob: -9.87553882598877
    4. 'int' → logprob: -10.37553882598877
    5. '(lambda' → logprob: -11.87553882598877
    6. '<int' → logprob: -12.00053882598877
    7. '(str' → logprob: -12.12553882598877
    8. ',int' → logprob: -13.00053882598877
    9. '```' → logprob: -13.62553882598877
    10. '=int' → logprob: -14.00053882598877

Token 33: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015574743738397956
    2. ',input' → logprob: -7.126557350158691
    3. '(' → logprob: -7.501557350158691
    4. 'input' → logprob: -9.001557350158691
    5. ')' → logprob: -10.001557350158691
    6. ',' → logprob: -11.501557350158691
    7. ' input' → logprob: -11.751557350158691
    8. '=input' → logprob: -12.001557350158691
    9. ' (' → logprob: -12.876557350158691
    10. '(
' → logprob: -13.876557350158691

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.7159857786027715e-05
    2. '()' → logprob: -10.000046730041504
    3. '()))' → logprob: -14.250046730041504
    4. '())' → logprob: -14.625046730041504
    5. '(' → logprob: -15.625046730041504
    6. ' ().' → logprob: -16.00004768371582
    7. ')' → logprob: -16.37504768371582
    8. '()
' → logprob: -17.12504768371582
    9. '()));' → logprob: -17.37504768371582
    10. '())))' → logprob: -17.50004768371582

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.146429223008454e-05
    2. 'strip' → logprob: -9.87506103515625
    3. ' split' → logprob: -11.87506103515625
    4. '(split' → logprob: -13.12506103515625
    5. 'rstrip' → logprob: -14.25006103515625
    6. ')' → logprob: -16.37506103515625
    7. 'spl' → logprob: -16.50006103515625
    8. ' ' → logprob: -17.00006103515625
    9. 's' → logprob: -17.75006103515625
    10. '   ' → logprob: -19.25006103515625

Token 36: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03780012205243111
    2. '())' → logprob: -3.5378000736236572
    3. '()' → logprob: -4.912800312042236
    4. '))' → logprob: -7.787800312042236
    5. '())))' → logprob: -9.287799835205078
    6. '(' → logprob: -9.412799835205078
    7. '()))
' → logprob: -10.787799835205078
    8. '()));' → logprob: -10.912799835205078
    9. ')' → logprob: -11.162799835205078
    10. '()))

' → logprob: -12.537799835205078

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030088428407907486
    2. '    
' → logprob: -4.530088424682617
    3. '<|end|>' → logprob: -4.655088424682617
    4. ' for' → logprob: -5.280088424682617
    5. 'for' → logprob: -6.905088424682617
    6. '       ' → logprob: -7.655088424682617
    7. '[' → logprob: -7.780088424682617
    8. '    ' → logprob: -8.030088424682617
    9. ')' → logprob: -8.155088424682617
    10. ' ' → logprob: -8.405088424682617

Token 38: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.043035864830017
    2. 'for' → logprob: -1.043035864830017
    3. ' for' → logprob: -1.293035864830017
    4. '<|end|>' → logprob: -4.293035984039307
    5. ' ' → logprob: -6.043035984039307
    6. '	for' → logprob: -6.543035984039307
    7. '    
' → logprob: -7.043035984039307
    8. '       ' → logprob: -7.293035984039307
    9. '    ' → logprob: -7.418035984039307
    10. ')' → logprob: -7.793035984039307

Token 39: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.46149903535842896
    2. ' =' → logprob: -1.8364989757537842
    3. 'se' → logprob: -2.461498975753784
    4. 'n' → logprob: -3.336498975753784
    5. 's' → logprob: -3.336498975753784
    6. 'for' → logprob: -4.211499214172363
    7. '=' → logprob: -4.711499214172363
    8. '[' → logprob: -5.211499214172363
    9. 'ser' → logprob: -5.336499214172363
    10. '[n' → logprob: -5.961499214172363

Token 40: ' ls' (ID: 41498)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4373871386051178
    2. 'ls' → logprob: -1.3123871088027954
    3. 'i' → logprob: -3.312387228012085
    4. ' ls' → logprob: -3.437387228012085
    5. ' i' → logprob: -4.437386989593506
    6. ' ' → logprob: -5.437386989593506
    7. 'u' → logprob: -8.812387466430664
    8. ' u' → logprob: -10.062387466430664
    9. '1' → logprob: -10.562387466430664
    10. '   ' → logprob: -10.687387466430664

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017664365470409393
    2. '[i' → logprob: -4.142664432525635
    3. '0' → logprob: -6.517664432525635
    4. ' [' → logprob: -9.392663955688477
    5. ' ' → logprob: -10.392663955688477
    6. '[u' → logprob: -11.392663955688477
    7. '[-' → logprob: -11.517663955688477
    8. ' i' → logprob: -12.392663955688477
    9. '   ' → logprob: -12.517663955688477
    10. 'i' → logprob: -13.017663955688477

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. '1' → logprob: -10.5000581741333
    3. ' ' → logprob: -10.5000581741333
    4. '   ' → logprob: -14.0000581741333
    5. '-' → logprob: -14.6875581741333
    6. ')' → logprob: -15.1250581741333
    7. ':' → logprob: -15.1875581741333
    8. '[' → logprob: -15.5625581741333
    9. ']' → logprob: -15.6875581741333
    10. 'i' → logprob: -16.250059127807617

Token 43: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12904755771160126
    2. '-' → logprob: -2.3790476322174072
    3. ']' → logprob: -4.379047393798828
    4. '])' → logprob: -4.879047393798828
    5. ' )' → logprob: -6.004047393798828
    6. ')-' → logprob: -6.504047393798828
    7. ')]' → logprob: -6.879047393798828
    8. ' -' → logprob: -7.004047393798828
    9. '-)' → logprob: -7.379047393798828
    10. '   ' → logprob: -7.754047393798828

Token 44: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5350390076637268
    2. ' for' → logprob: -1.535038948059082
    3. '<|end|>' → logprob: -2.035038948059082
    4. '   ' → logprob: -3.285038948059082
    5. '-' → logprob: -4.160038948059082
    6. '<|end|>' → logprob: -5.660038948059082
    7. 'u' → logprob: -6.285038948059082
    8. '[' → logprob: -6.535038948059082
    9. ' -' → logprob: -6.660038948059082
    10. '  ' → logprob: -6.785038948059082

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '１' → logprob: -16.50004005432129
    4. '   ' → logprob: -17.12504005432129
    5. '<|end|>' → logprob: -17.50004005432129
    6. '2' → logprob: -17.75004005432129
    7. '۱' → logprob: -18.93754005432129
    8. '```' → logprob: -18.93754005432129
    9. '...' → logprob: -19.00004005432129
    10. '১' → logprob: -19.12504005432129

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '１' → logprob: -15.625027656555176
    4. '2' → logprob: -16.750028610229492
    5. '   ' → logprob: -17.187528610229492
    6. '  ' → logprob: -18.062528610229492
    7. '```' → logprob: -18.562528610229492
    8. '۱' → logprob: -18.625028610229492
    9. '<|end|>' → logprob: -18.687528610229492
    10. '-' → logprob: -18.875028610229492

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019771684892475605
    2. 'v' → logprob: -6.87697696685791
    3. ' for' → logprob: -7.37697696685791
    4. '   ' → logprob: -8.50197696685791
    5. 'u' → logprob: -9.75197696685791
    6. '```' → logprob: -10.62697696685791
    7. 'm' → logprob: -12.12697696685791
    8. 'V' → logprob: -12.50197696685791
    9. 'd' → logprob: -12.62697696685791
    10. '	for' → logprob: -13.25197696685791

Token 50: ' v' (ID: 323)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10663241147994995
    2. 'j' → logprob: -2.6066324710845947
    3. ' v' → logprob: -4.231632232666016
    4. ' k' → logprob: -4.981632232666016
    5. 'k' → logprob: -6.106632232666016
    6. 'v' → logprob: -6.481632232666016
    7. '_j' → logprob: -7.606632232666016
    8. ' _' → logprob: -7.731632232666016
    9. ' idx' → logprob: -7.981632232666016
    10. ' x' → logprob: -8.356632232666016

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00918006245046854
    2. 'in' → logprob: -4.759180068969727
    3. ' ' → logprob: -7.509180068969727
    4. '	in' → logprob: -12.009180068969727
    5. '  ' → logprob: -13.384180068969727
    6. ',' → logprob: -13.384180068969727
    7. '   ' → logprob: -13.634180068969727
    8. ' ,' → logprob: -14.009180068969727
    9. '_in' → logprob: -14.134180068969727
    10. '    ' → logprob: -14.134180068969727

Token 52: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.0020972066558897495
    2. ' ls' → logprob: -6.377097129821777
    3. 'range' → logprob: -8.002097129821777
    4. ' range' → logprob: -10.502097129821777
    5. '   ' → logprob: -11.502097129821777
    6. ' ' → logprob: -12.127097129821777
    7. '(ls' → logprob: -12.377097129821777
    8. '  ' → logprob: -13.002097129821777
    9. 'lst' → logprob: -13.002097129821777
    10. '[' → logprob: -13.627097129821777

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021456200629472733
    2. ':' → logprob: -6.752145767211914
    3. '(' → logprob: -7.002145767211914
    4. '   ' → logprob: -11.377145767211914
    5. '1' → logprob: -11.627145767211914
    6. ' in' → logprob: -12.377145767211914
    7. '[:' → logprob: -12.627145767211914
    8. ')' → logprob: -12.627145767211914
    9. ':
' → logprob: -12.627145767211914
    10. '()[' → logprob: -12.752145767211914

Token 54: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '2' → logprob: -11.875020980834961
    3. ' ' → logprob: -11.875020980834961
    4. 'range' → logprob: -13.250020980834961
    5. 'v' → logprob: -13.875020980834961
    6. '[' → logprob: -14.000020980834961
    7. ':' → logprob: -14.375020980834961
    8. '   ' → logprob: -14.500020980834961
    9. '0' → logprob: -15.000020980834961
    10. ' :' → logprob: -15.437520980834961

Token 55: ':' (ID: 25)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5175238251686096
    2. ':]' → logprob: -1.2675237655639648
    3. ':' → logprob: -2.517523765563965
    4. ']' → logprob: -3.642523765563965
    5. ' -' → logprob: -5.017523765563965
    6. ']:' → logprob: -5.642523765563965
    7. '():' → logprob: -6.517523765563965
    8. ']-' → logprob: -7.142523765563965
    9. '()]' → logprob: -7.517523765563965
    10. '(' → logprob: -7.517523765563965

Token 56: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004050382878631353
    2. '):' → logprob: -6.504050254821777
    3. '():' → logprob: -7.254050254821777
    4. ':' → logprob: -7.379050254821777
    5. ']):' → logprob: -7.504050254821777
    6. ']' → logprob: -7.629050254821777
    7. ' ]' → logprob: -9.504050254821777
    8. ' ):' → logprob: -10.004050254821777
    9. ' ' → logprob: -11.629050254821777
    10. '(' → logprob: -12.004050254821777

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08307792991399765
    2. '    ' → logprob: -3.583077907562256
    3. ' ' → logprob: -3.708077907562256
    4. '        ' → logprob: -4.458077907562256
    5. '   ' → logprob: -5.333077907562256
    6. '        
' → logprob: -5.458077907562256
    7. '<|end|>' → logprob: -5.708077907562256
    8. '0' → logprob: -7.458077907562256
    9. ' 
' → logprob: -7.833077907562256
    10. ' G' → logprob: -8.333078384399414

Token 58: ' G' (ID: 499)
  Prédit: ' G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.26891258358955383
    2. 'G' (adapté à ' G') → logprob: -1.5189125537872314
    3. ' ' → logprob: -4.5189127922058105
    4. '    ' → logprob: -6.3939127922058105
    5. '   ' → logprob: -6.3939127922058105
    6. '1' → logprob: -6.7689127922058105
    7. '       ' → logprob: -7.7689127922058105
    8. ' 
' → logprob: -7.8939127922058105
    9. '  ' → logprob: -9.018912315368652
    10. '0' → logprob: -9.643912315368652

Token 59: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.931863051955588e-05
    2. '[' → logprob: -9.750059127807617
    3. '[v' → logprob: -14.625059127807617
    4. '[G' → logprob: -15.875059127807617
    5. '[i' → logprob: -16.125059127807617
    6. '[user' → logprob: -16.875059127807617
    7. ' [' → logprob: -17.250059127807617
    8. '[g' → logprob: -17.375059127807617
    9. '[s' → logprob: -18.375059127807617
    10. '[I' → logprob: -18.625059127807617

Token 60: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015699513256549835
    2. '[v' → logprob: -4.26569938659668
    3. '[u' → logprob: -6.76569938659668
    4. ']' → logprob: -8.26569938659668
    5. '[' → logprob: -9.51569938659668
    6. ' ][' → logprob: -10.14069938659668
    7. ']][' → logprob: -13.26569938659668
    8. 'v' → logprob: -13.51569938659668
    9. '[G' → logprob: -13.51569938659668
    10. '"][' → logprob: -14.01569938659668

Token 61: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -15.75
    3. '(v' → logprob: -18.75
    4. '	v' → logprob: -19.625
    5. ')v' → logprob: -20.125
    6. '[v' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. 'vj' → logprob: -21.875
    9. ']' → logprob: -22.0
    10. ' ' → logprob: -22.25

Token 62: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20152531564235687
    2. ' -' → logprob: -1.701525330543518
    3. ']' → logprob: -9.826525688171387
    4. ' ' → logprob: -10.451525688171387
    5. '[' → logprob: -11.451525688171387
    6. '1' → logprob: -12.576525688171387
    7. ')' → logprob: -12.576525688171387
    8. ' ]' → logprob: -13.201525688171387
    9. ' -=' → logprob: -13.576525688171387
    10. '   ' → logprob: -13.576525688171387

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.875003814697266
    4. '<|end|>' → logprob: -15.875003814697266
    5. ']' → logprob: -16.250003814697266
    6. '2' → logprob: -17.187503814697266
    7. '0' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ')' → logprob: -17.562503814697266
    10. '１' → logprob: -17.562503814697266

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006582385394722223
    2. ']=' → logprob: -5.506582260131836
    3. '=' → logprob: -6.256582260131836
    4. ' ]' → logprob: -7.631582260131836
    5. ' =' → logprob: -9.256582260131836
    6. ')' → logprob: -14.506582260131836
    7. ']+=' → logprob: -14.506582260131836
    8. '1' → logprob: -14.631582260131836
    9. '[' → logprob: -15.131582260131836
    10. ']]' → logprob: -15.506582260131836

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132634460926056
    2. ' =' → logprob: -1.3132634162902832
    3. ' ' → logprob: -14.188263893127441
    4. '<|end|>' → logprob: -14.938263893127441
    5. '＝' → logprob: -15.563263893127441
    6. '=True' → logprob: -15.813263893127441
    7. ']' → logprob: -16.563262939453125
    8. ' |=' → logprob: -17.188262939453125
    9. ']=' → logprob: -17.313262939453125
    10. ' =
' → logprob: -17.313262939453125

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. '  ' → logprob: -16.75004005432129
    5. ' ' → logprob: -18.25004005432129
    6. '    ' → logprob: -18.50004005432129
    7. '１' → logprob: -18.68754005432129
    8. '' → logprob: -18.81254005432129
    9. '	' → logprob: -19.25004005432129
    10. '`' → logprob: -19.25004005432129

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.000003814697266
    4. '  ' → logprob: -17.250003814697266
    5. '    ' → logprob: -18.625003814697266
    6. '１' → logprob: -18.812503814697266
    7. '`' → logprob: -18.875003814697266
    8. '           ' → logprob: -18.937503814697266
    9. '' → logprob: -19.125003814697266
    10. '     ' → logprob: -19.437503814697266

Token 68: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06597226113080978
    2. '
' → logprob: -2.815972328186035
    3. '<|end|>' → logprob: -5.690972328186035
    4. '```' → logprob: -7.690972328186035
    5. 'newline' → logprob: -10.315972328186035
    6. '
' → logprob: -10.565972328186035
    7. '\' → logprob: -10.815972328186035
    8. '<|end|>' → logprob: -11.065972328186035
    9. '' → logprob: -11.440972328186035
    10. '\
' → logprob: -11.690972328186035

Token 69: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.007597992196679115
    2. '<|end|>' → logprob: -5.632597923278809
    3. '
' → logprob: -5.882597923278809
    4. '```' → logprob: -7.132597923278809
    5. '\' → logprob: -8.757597923278809
    6. '#' → logprob: -9.507597923278809
    7. ')' → logprob: -10.132597923278809
    8. '\r' → logprob: -10.382597923278809
    9. 'newline' → logprob: -11.007597923278809
    10. '\u' → logprob: -11.507597923278809

Token 70: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011610999703407288
    2. 'i' → logprob: -4.636610984802246
    3. ' _' → logprob: -7.011610984802246
    4. ' ' → logprob: -7.761610984802246
    5. ' v' → logprob: -8.261610984802246
    6. '_' → logprob: -9.011610984802246
    7. ' node' → logprob: -10.136610984802246
    8. ' j' → logprob: -10.636610984802246
    9. ' u' → logprob: -11.011610984802246
    10. '_i' → logprob: -11.136610984802246

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254738062620163
    2. 'in' → logprob: -1.6004737615585327
    3. ' ' → logprob: -10.975473403930664
    4. '<|end|>' → logprob: -11.475473403930664
    5. '	in' → logprob: -11.600473403930664
    6. '  ' → logprob: -11.850473403930664
    7. ',' → logprob: -12.850473403930664
    8. '_in' → logprob: -12.975473403930664
    9. '   ' → logprob: -13.100473403930664
    10. 's' → logprob: -13.350473403930664

Token 72: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.10020678490400314
    2. ' G' → logprob: -2.3502068519592285
    3. ' range' → logprob: -16.85020637512207
    4. 'range' → logprob: -17.47520637512207
    5. '(G' → logprob: -17.85020637512207
    6. ' ' → logprob: -18.22520637512207
    7. '	G' → logprob: -18.72520637512207
    8. ' ' → logprob: -20.10020637512207
    9. ')' → logprob: -20.22520637512207
    10. '   ' → logprob: -20.60020637512207

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002165299083571881
    2. '):' → logprob: -8.750216484069824
    3. ' :' → logprob: -11.250216484069824
    4. '[' → logprob: -11.750216484069824
    5. ')' → logprob: -11.750216484069824
    6. ':**' → logprob: -11.875216484069824
    7. 'print' → logprob: -12.125216484069824
    8. ':
' → logprob: -12.125216484069824
    9. '[:]' → logprob: -12.125216484069824
    10. ']:' → logprob: -13.375216484069824

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011952287517488003
    2. ' print' → logprob: -4.6369524002075195
    3. 'print' → logprob: -7.1369524002075195
    4. ' ' → logprob: -7.3869524002075195
    5. '    ' → logprob: -7.8869524002075195
    6. '    
' → logprob: -8.76195240020752
    7. '  ' → logprob: -9.51195240020752
    8. '<|end|>' → logprob: -9.63695240020752
    9. '[' → logprob: -10.51195240020752
    10. ' 
' → logprob: -11.01195240020752

Token 75: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029770735651254654
    2. ' print' → logprob: -3.529770851135254
    3. '   ' → logprob: -11.279770851135254
    4. 'for' → logprob: -12.154770851135254
    5. ' for' → logprob: -13.529770851135254
    6. '    ' → logprob: -15.154770851135254
    7. 'pr' → logprob: -15.654770851135254
    8. '```' → logprob: -15.904770851135254
    9. '	print' → logprob: -16.029769897460938
    10. 'prin' → logprob: -16.654769897460938

Token 76: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10486917942762375
    2. '(*' → logprob: -2.3548691272735596
    3. '('' → logprob: -5.979869365692139
    4. '(row' → logprob: -6.479869365692139
    5. '("' → logprob: -7.604869365692139
    6. '()' → logprob: -10.22986888885498
    7. '(sum' → logprob: -10.47986888885498
    8. '(*)' → logprob: -11.97986888885498
    9. '(len' → logprob: -12.22986888885498
    10. '(tuple' → logprob: -12.47986888885498

Token 77: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10729321092367172
    2. ''.' → logprob: -2.732293128967285
    3. ' '.' → logprob: -3.482293128967285
    4. '''.' → logprob: -5.482293128967285
    5. ' ' → logprob: -7.107293128967285
    6. '"' → logprob: -7.732293128967285
    7. ' ''.' → logprob: -8.607293128967285
    8. ' '' → logprob: -9.357293128967285
    9. '".' → logprob: -9.982293128967285
    10. '*' → logprob: -10.107293128967285

Token 78: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.6240566083070007e-06
    2. 'jo' → logprob: -13.875001907348633
    3. 'print' → logprob: -14.375001907348633
    4. ' join' → logprob: -17.250001907348633
    5. 'strip' → logprob: -17.500001907348633
    6. 'j' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '1' → logprob: -20.250001907348633
    9. 'joint' → logprob: -20.625001907348633
    10. 'start' → logprob: -20.625001907348633

Token 79: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002930366899818182
    2. '(str' → logprob: -8.250292778015137
    3. 'map' → logprob: -10.500292778015137
    4. '(list' → logprob: -12.625292778015137
    5. '(' → logprob: -14.750292778015137
    6. '([' → logprob: -14.875292778015137
    7. ' map' → logprob: -16.250293731689453
    8. ')' → logprob: -16.375293731689453
    9. '	map' → logprob: -16.875293731689453
    10. ',map' → logprob: -17.375293731689453

Token 80: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004101077560335398
    2. 'str' → logprob: -5.504101276397705
    3. ' str' → logprob: -11.129100799560547
    4. ',str' → logprob: -12.629100799560547
    5. '```' → logprob: -13.754100799560547
    6. ')' → logprob: -13.754100799560547
    7. '(' → logprob: -14.004100799560547
    8. '(int' → logprob: -14.254100799560547
    9. '=str' → logprob: -14.629100799560547
    10. '	str' → logprob: -14.879100799560547

Token 81: ',row' (ID: 136650)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.611336350440979
    2. ',row' → logprob: -0.861336350440979
    3. ',' → logprob: -3.3613362312316895
    4. 'row' → logprob: -10.111336708068848
    5. ' ,' → logprob: -10.236336708068848
    6. ' row' → logprob: -12.361336708068848
    7. '(' → logprob: -12.861336708068848
    8. '[row' → logprob: -13.611336708068848
    9. ',(' → logprob: -13.986336708068848
    10. '	row' → logprob: -14.111336708068848

Token 82: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007468560361303389
    2. ')))' → logprob: -7.250746726989746
    3. ')' → logprob: -10.250746726989746
    4. '))
' → logprob: -13.375746726989746
    5. '))))' → logprob: -17.375747680664062
    6. ' ))' → logprob: -18.000747680664062
    7. ''))' → logprob: -19.250747680664062
    8. '()))' → logprob: -19.375747680664062
    9. '))
' → logprob: -20.250747680664062
    10. '))

' → logprob: -20.250747680664062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 46.25%
Précision (top 10): 82.50%
================================================================================
