================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
l = []
tmp = 0 
for _ in range(n):
    a = list(map(int,input().split()))
    l.append(a)
    if a[len(a)-1] > tmp:
        tmp = a[len(a)-1]

ans = [[0 for i in range(tmp)] for j in range(n)]
for i in range(n):
    if l[i][1] > 0:
        for j in range(2,len(l[i])):
            tmp1 = l[i][j]
            ans[i][tmp1-1] = 1

for i in range(n):
    print(" ".join(map(str,ans[i])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1369263231754303
    2. ')' → logprob: -2.2619264125823975
    3. '()' → logprob: -4.011926174163818
    4. '())' → logprob: -5.511926174163818
    5. '(
' → logprob: -7.636926174163818
    6. '('' → logprob: -8.636926651000977
    7. '```' → logprob: -8.636926651000977
    8. '(()' → logprob: -9.011926651000977
    9. '("("' → logprob: -9.261926651000977
    10. '(

' → logprob: -9.636926651000977

Token 5: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32522544264793396
    2. 'ist' → logprob: -2.450225353240967
    3. 'i' → logprob: -2.575225353240967
    4. 's' → logprob: -2.950225353240967
    5. 'e' → logprob: -3.950225353240967
    6. '.' → logprob: -4.200225353240967
    7. '[i' → logprob: -4.950225353240967
    8. 'is' → logprob: -5.200225353240967
    9. '=' → logprob: -5.700225353240967
    10. 'en' → logprob: -5.950225353240967

Token 7: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7592352032661438
    2. ' []' → logprob: -0.7592352032661438
    3. 'list' → logprob: -3.384235143661499
    4. ' list' → logprob: -4.384235382080078
    5. ' [' → logprob: -4.759235382080078
    6. '[input' → logprob: -5.384235382080078
    7. '[' → logprob: -6.134235382080078
    8. '[list' → logprob: -6.509235382080078
    9. '[int' → logprob: -7.634235382080078
    10. 'input' → logprob: -8.884235382080078

Token 8: 'tmp' (ID: 11669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022828539833426476
    2. ' for' → logprob: -3.8978285789489746
    3. ' ' → logprob: -7.022828578948975
    4. 'i' → logprob: -8.272828102111816
    5. ' 
' → logprob: -8.272828102111816
    6. '\n' → logprob: -8.272828102111816
    7. '
' → logprob: -8.647828102111816
    8. '```' → logprob: -9.022828102111816
    9. '\' → logprob: -9.647828102111816
    10. '<|end|>' → logprob: -10.272828102111816

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6745742559432983
    2. '=' → logprob: -1.6745742559432983
    3. ' =' → logprob: -2.049574375152588
    4. '.' → logprob: -2.549574375152588
    5. '[' → logprob: -2.799574375152588
    6. '.append' → logprob: -3.924574375152588
    7. ' ' → logprob: -5.674574375152588
    8. 's' → logprob: -5.924574375152588
    9. '[:]' → logprob: -6.299574375152588
    10. '"' → logprob: -6.299574375152588

Token 10: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5641968250274658
    2. ' ' → logprob: -1.3141968250274658
    3. '[]' → logprob: -2.564196825027466
    4. '0' → logprob: -2.689196825027466
    5. '"' → logprob: -5.814196586608887
    6. ' ""' → logprob: -5.939196586608887
    7. 'n' → logprob: -5.939196586608887
    8. ' n' → logprob: -6.189196586608887
    9. ' ''' → logprob: -6.189196586608887
    10. ' "' → logprob: -6.314196586608887

Token 11: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5712724924087524
    2. '0' → logprob: -0.9462724924087524
    3. 'n' → logprob: -3.821272373199463
    4. '""' → logprob: -4.321272373199463
    5. '''' → logprob: -5.196272373199463
    6. 'int' → logprob: -5.946272373199463
    7. 'input' → logprob: -6.571272373199463
    8. '"' → logprob: -7.321272373199463
    9. '[' → logprob: -7.946272373199463
    10. 'list' → logprob: -8.321272850036621

Token 12: ' 
' (ID: 793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5355716943740845
    2. ' for' → logprob: -1.4105716943740845
    3. '
' → logprob: -2.410571575164795
    4. '<|end|>' → logprob: -2.785571575164795
    5. '' → logprob: -5.035571575164795
    6. ' 
' → logprob: -5.660571575164795
    7. '\n' → logprob: -5.910571575164795
    8. ' ' → logprob: -6.285571575164795
    9. '```' → logprob: -6.785571575164795
    10. 'i' → logprob: -7.160571575164795

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014442839892581105
    2. 'f' → logprob: -6.876444339752197
    3. ' for' → logprob: -7.876444339752197
    4. 'i' → logprob: -10.876443862915039
    5. '
' → logprob: -12.501443862915039
    6. '' → logprob: -13.626443862915039
    7. ' ' → logprob: -13.876443862915039
    8. '>' → logprob: -13.876443862915039
    9. 'r' → logprob: -14.126443862915039
    10. 'n' → logprob: -14.126443862915039

Token 14: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08169862627983093
    2. ' i' → logprob: -2.7066986560821533
    3. '  ' → logprob: -4.581698417663574
    4. ' ‌' → logprob: -7.456698417663574
    5. ' n' → logprob: -7.831698417663574
    6. 'i' → logprob: -8.956698417663574
    7. ' _' → logprob: -9.206698417663574
    8. ' )' → logprob: -9.331698417663574
    9. '_' → logprob: -9.956698417663574
    10. ')' → logprob: -10.456698417663574

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0070808446034789085
    2. 'in' → logprob: -5.007081031799316
    3. ' ' → logprob: -8.007081031799316
    4. ' i' → logprob: -11.757081031799316
    5. 'n' → logprob: -12.132081031799316
    6. ',' → logprob: -12.507081031799316
    7. 'range' → logprob: -12.507081031799316
    8. ' n' → logprob: -13.007081031799316
    9. 'space' → logprob: -13.007081031799316
    10. ' ,' → logprob: -13.132081031799316

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759521722793579
    2. ' range' → logprob: -0.8259521722793579
    3. 'n' → logprob: -11.700952529907227
    4. '	range' → logprob: -13.950952529907227
    5. 'rang' → logprob: -14.200952529907227
    6. 'r' → logprob: -14.700952529907227
    7. 'ran' → logprob: -14.825952529907227
    8. ' ' → logprob: -15.075952529907227
    9. 'l' → logprob: -15.075952529907227
    10. 'in' → logprob: -15.075952529907227

Token 17: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10373134166002274
    2. '(n' → logprob: -2.603731393814087
    3. ' (' → logprob: -3.728731393814087
    4. ' n' → logprob: -7.853731155395508
    5. ' ' → logprob: -9.728731155395508
    6. 'n' → logprob: -10.603731155395508
    7. '(len' → logprob: -11.103731155395508
    8. '(
' → logprob: -12.353731155395508
    9. '(space' → logprob: -12.603731155395508
    10. '(range' → logprob: -12.603731155395508

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07015460729598999
    2. ')' → logprob: -2.6951546669006348
    3. ':' → logprob: -8.820154190063477
    4. '):
' → logprob: -10.445154190063477
    5. '+' → logprob: -11.320154190063477
    6. ' ):' → logprob: -11.320154190063477
    7. ' )' → logprob: -12.695154190063477
    8. '```' → logprob: -12.695154190063477
    9. '   ' → logprob: -13.570154190063477
    10. ' ' → logprob: -13.695154190063477

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15815353393554688
    2. ' s' → logprob: -3.158153533935547
    3. '    ' → logprob: -3.533153533935547
    4. ' l' → logprob: -4.158153533935547
    5. ' input' → logprob: -4.158153533935547
    6. ' line' → logprob: -4.533153533935547
    7. ' ' → logprob: -4.783153533935547
    8. '    
' → logprob: -5.158153533935547
    9. ' x' → logprob: -6.283153533935547
    10. '```' → logprob: -6.408153533935547

Token 20: ' a' (ID: 261)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.5942517518997192
    2. 'x' → logprob: -1.8442517518997192
    3. 's' → logprob: -2.2192516326904297
    4. ' x' → logprob: -2.4692516326904297
    5. '   ' → logprob: -2.5942516326904297
    6. ' num' → logprob: -2.8442516326904297
    7. ' val' → logprob: -3.0942516326904297
    8. ' line' → logprob: -3.3442516326904297
    9. 'a' (adapté à ' a') → logprob: -3.5942516326904297
    10. 'data' → logprob: -3.7192516326904297

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7964432239532471
    2. ',' → logprob: -0.9214432239532471
    3. ' ' → logprob: -2.671443223953247
    4. ' ,' → logprob: -2.796443223953247
    5. '=' → logprob: -4.421442985534668
    6. ',b' → logprob: -5.796442985534668
    7. ' +=' → logprob: -6.796442985534668
    8. ',p' → logprob: -6.921442985534668
    9. '.append' → logprob: -7.046442985534668
    10. ',a' → logprob: -7.671442985534668

Token 22: ' list' (ID: 1562)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6328135132789612
    2. 'int' → logprob: -0.7578135132789612
    3. ' input' → logprob: -9.007813453674316
    4. 'input' → logprob: -10.132813453674316
    5. ' ' → logprob: -11.257813453674316
    6. ' list' → logprob: -11.757813453674316
    7. '=int' → logprob: -12.007813453674316
    8. '(int' → logprob: -12.132813453674316
    9. 'list' → logprob: -12.632813453674316
    10. '   ' → logprob: -12.882813453674316

Token 23: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8393296599388123
    2. '(map' → logprob: -0.8393296599388123
    3. '(' → logprob: -2.089329719543457
    4. '(int' → logprob: -4.464329719543457
    5. '()' → logprob: -7.964329719543457
    6. '(range' → logprob: -9.214329719543457
    7. '(eval' → logprob: -9.339329719543457
    8. '(str' → logprob: -9.714329719543457
    9. '(list' → logprob: -10.714329719543457
    10. ' (' → logprob: -11.214329719543457

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00021402664424385875
    2. '(' → logprob: -9.125213623046875
    3. 'int' → logprob: -9.500213623046875
    4. '<int' → logprob: -11.250213623046875
    5. '(str' → logprob: -12.125213623046875
    6. '(lambda' → logprob: -12.500213623046875
    7. '(input' → logprob: -12.875213623046875
    8. '=int' → logprob: -13.000213623046875
    9. '[int' → logprob: -13.625213623046875
    10. '<|end|>' → logprob: -14.625213623046875

Token 25: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0012618985492736101
    2. '(' → logprob: -7.5012617111206055
    3. 'input' → logprob: -7.8762617111206055
    4. ',input' → logprob: -8.251261711120605
    5. ')' → logprob: -10.626261711120605
    6. '<|end|>' → logprob: -11.126261711120605
    7. ' input' → logprob: -11.251261711120605
    8. '=input' → logprob: -11.501261711120605
    9. '<input' → logprob: -13.501261711120605
    10. '(
' → logprob: -14.251261711120605

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.500004768371582
    3. '()))' → logprob: -15.125004768371582
    4. ' ().' → logprob: -16.250003814697266
    5. '()));' → logprob: -16.500003814697266
    6. '())' → logprob: -17.375003814697266
    7. '()
' → logprob: -17.750003814697266
    8. ')' → logprob: -17.875003814697266
    9. '('').' → logprob: -17.875003814697266
    10. '(' → logprob: -17.875003814697266

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016837897419463843
    2. 'strip' → logprob: -8.875168800354004
    3. 'rstrip' → logprob: -11.125168800354004
    4. ' split' → logprob: -11.625168800354004
    5. '(split' → logprob: -12.375168800354004
    6. ')' → logprob: -15.000168800354004
    7. 'spl' → logprob: -15.625168800354004
    8. 's' → logprob: -17.500167846679688
    9. ' strip' → logprob: -18.000167846679688
    10. ' ' → logprob: -18.125167846679688

Token 28: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.061530280858278275
    2. '())' → logprob: -3.311530351638794
    3. '()' → logprob: -4.061530113220215
    4. '))' → logprob: -5.311530113220215
    5. '())))' → logprob: -7.436530113220215
    6. ')' → logprob: -8.311530113220215
    7. '(' → logprob: -9.311530113220215
    8. '()))
' → logprob: -9.561530113220215
    9. '()));' → logprob: -11.061530113220215
    10. ')))' → logprob: -11.186530113220215

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4333803355693817
    2. ' ' → logprob: -1.933380365371704
    3. '<|end|>' → logprob: -2.808380365371704
    4. '+' → logprob: -3.308380365371704
    5. '    ' → logprob: -3.683380365371704
    6. '    
' → logprob: -3.683380365371704
    7. ' 
' → logprob: -4.058380126953125
    8. '[' → logprob: -4.558380126953125
    9. ')' → logprob: -5.558380126953125
    10. '
' → logprob: -5.683380126953125

Token 30: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.778989315032959
    2. '   ' → logprob: -1.278989315032959
    3. '    ' → logprob: -2.403989315032959
    4. ' 
' → logprob: -3.403989315032959
    5. ' l' → logprob: -3.528989315032959
    6. '[' → logprob: -4.028989315032959
    7. '<|end|>' → logprob: -4.028989315032959
    8. ' if' → logprob: -4.278989315032959
    9. '+' → logprob: -4.903989315032959
    10. '    
' → logprob: -5.028989315032959

Token 31: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.6692078113555908
    2. '.append' → logprob: -0.9192078113555908
    3. '.' → logprob: -2.419207811355591
    4. ' .' → logprob: -11.044207572937012
    5. '.app' → logprob: -11.794207572937012
    6. ' +=' → logprob: -12.044207572937012
    7. '.ext' → logprob: -12.044207572937012
    8. '​.' → logprob: -12.419207572937012
    9. '+.' → logprob: -12.794207572937012
    10. '+' → logprob: -13.169207572937012

Token 32: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. '((' → logprob: -14.500097274780273
    4. '(
' → logprob: -16.125097274780273
    5. '(A' → logprob: -16.375097274780273
    6. ' (' → logprob: -17.125097274780273
    7. '(l' → logprob: -17.500097274780273
    8. '(len' → logprob: -17.750097274780273
    9. '(ai' → logprob: -18.750097274780273
    10. '(x' → logprob: -19.000097274780273

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005239683669060469
    2. '))' → logprob: -5.255239486694336
    3. ')))' → logprob: -13.130239486694336
    4. '   ' → logprob: -13.380239486694336
    5. ')
' → logprob: -14.380239486694336
    6. '`)' → logprob: -14.630239486694336
    7. ' )' → logprob: -14.880239486694336
    8. '[' → logprob: -15.380239486694336
    9. ')")' → logprob: -16.005239486694336
    10. ')`' → logprob: -16.505239486694336

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7877554297447205
    2. ' 
' → logprob: -2.1627554893493652
    3. ' ' → logprob: -2.4127554893493652
    4. '    
' → logprob: -2.7877554893493652
    5. '
' → logprob: -2.9127554893493652
    6. '[' → logprob: -3.0377554893493652
    7. '<|end|>' → logprob: -3.1627554893493652
    8. 'for' → logprob: -3.2877554893493652
    9. ' for' → logprob: -4.037755489349365
    10. '  
' → logprob: -4.162755489349365

Token 35: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9573323130607605
    2. '
' → logprob: -1.7073323726654053
    3. '   ' → logprob: -2.0823323726654053
    4. '    
' → logprob: -2.4573323726654053
    5. ' ' → logprob: -2.5823323726654053
    6. ' if' → logprob: -3.2073323726654053
    7. 'if' (adapté à ' if') → logprob: -3.9573323726654053
    8. '[' → logprob: -3.9573323726654053
    9. '  
' → logprob: -4.082332134246826
    10. '     
' → logprob: -5.082332134246826

Token 36: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12370151281356812
    2. ' tmp' → logprob: -2.998701572418213
    3. ' l' → logprob: -3.373701572418213
    4. 'a' → logprob: -4.248701572418213
    5. ' len' → logprob: -4.248701572418213
    6. 'tmp' → logprob: -6.373701572418213
    7. ' not' → logprob: -7.248701572418213
    8. ' ' → logprob: -7.248701572418213
    9. ' ' → logprob: -9.498701095581055
    10. '(a' → logprob: -9.748701095581055

Token 37: '[len' (ID: 57582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003056854009628296
    2. '[-' → logprob: -6.25305700302124
    3. ':' → logprob: -7.12805700302124
    4. '>' → logprob: -8.878056526184082
    5. ' [' → logprob: -10.253056526184082
    6. '==' → logprob: -10.378056526184082
    7. ' and' → logprob: -10.378056526184082
    8. '[len' → logprob: -10.753056526184082
    9. '!=' → logprob: -11.128056526184082
    10. '>[' → logprob: -12.253056526184082

Token 38: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0018091757083311677
    2. '(l' → logprob: -7.126809120178223
    3. 'a' → logprob: -7.626809120178223
    4. '(tmp' → logprob: -8.001809120178223
    5. '(' → logprob: -8.876809120178223
    6. '-' → logprob: -11.876809120178223
    7. 'tmp' → logprob: -12.251809120178223
    8. 'l' → logprob: -12.876809120178223
    9. ' (' → logprob: -13.001809120178223
    10. '>' → logprob: -13.126809120178223

Token 39: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3522537648677826
    2. ')-' → logprob: -1.227253794670105
    3. ' )' → logprob: -6.6022539138793945
    4. '-' → logprob: -6.6022539138793945
    5. 'a' → logprob: -7.9772539138793945
    6. ')>' → logprob: -8.852253913879395
    7. ')]' → logprob: -9.102253913879395
    8. '[' → logprob: -9.102253913879395
    9. ' ' → logprob: -9.477253913879395
    10. ' -' → logprob: -10.102253913879395

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009882282465696335
    2. ' ' → logprob: -4.63488245010376
    3. '2' → logprob: -9.259881973266602
    4. '-' → logprob: -11.634881973266602
    5. '  ' → logprob: -12.134881973266602
    6. '   ' → logprob: -12.134881973266602
    7. ')' → logprob: -13.009881973266602
    8. '<|end|>' → logprob: -13.759881973266602
    9. '

' → logprob: -13.822381973266602
    10. '0' → logprob: -14.072381973266602

Token 41: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5846107602119446
    2. '>' → logprob: -0.8346107602119446
    3. ')' → logprob: -6.209610939025879
    4. ' ' → logprob: -6.584610939025879
    5. ' <' → logprob: -6.584610939025879
    6. ' !=' → logprob: -7.084610939025879
    7. ')>' → logprob: -7.084610939025879
    8. '<' → logprob: -7.209610939025879
    9. '!=' → logprob: -7.709610939025879
    10. '==' → logprob: -8.584610939025879

Token 42: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7225946187973022
    2. ' >' → logprob: -0.7225946187973022
    3. '==' → logprob: -5.097594738006592
    4. ' ==' → logprob: -5.222594738006592
    5. ' !=' → logprob: -5.222594738006592
    6. '!=' → logprob: -5.472594738006592
    7. ' <' → logprob: -5.847594738006592
    8. '<' → logprob: -5.847594738006592
    9. ' ' → logprob: -6.597594738006592
    10. ':' → logprob: -8.097594261169434

Token 43: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.281926691532135
    2. ' tmp' → logprob: -1.4069266319274902
    3. ' ' → logprob: -7.78192663192749
    4. '0' → logprob: -8.656927108764648
    5. 'a' → logprob: -9.156927108764648
    6. ' a' → logprob: -10.656927108764648
    7. '	tmp' → logprob: -10.906927108764648
    8. '=' → logprob: -11.781927108764648
    9. 'temp' → logprob: -12.156927108764648
    10. '(tmp' → logprob: -12.531927108764648

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014924811199307442
    2. ' :' → logprob: -4.264925003051758
    3. ' ' → logprob: -8.514925003051758
    4. '):' → logprob: -8.764925003051758
    5. '=' → logprob: -8.889925003051758
    6. ' =' → logprob: -9.639925003051758
    7. ':
' → logprob: -9.889925003051758
    8. '<|end|>' → logprob: -10.139925003051758
    9. '>' → logprob: -10.514925003051758
    10. '>:' → logprob: -11.264925003051758

Token 45: '       ' (ID: 309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42849454283714294
    2. 'a' → logprob: -1.1784945726394653
    3. ' ' → logprob: -4.053494453430176
    4. '    ' → logprob: -4.303494453430176
    5. ':' → logprob: -6.303494453430176
    6. ' :' → logprob: -6.803494453430176
    7. '0' → logprob: -7.178494453430176
    8. ' )' → logprob: -7.178494453430176
    9. '   ' → logprob: -7.303494453430176
    10. '=' → logprob: -7.553494453430176

Token 46: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5886296629905701
    2. ' a' → logprob: -1.2136297225952148
    3. 'tmp' (adapté à ' tmp') → logprob: -2.463629722595215
    4. 'a' → logprob: -2.838629722595215
    5. ' ' → logprob: -5.963629722595215
    6. ' l' → logprob: -7.213629722595215
    7. '    ' → logprob: -7.838629722595215
    8. ' ' → logprob: -9.713629722595215
    9. ' )' → logprob: -10.088629722595215
    10. 'l' → logprob: -10.338629722595215

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164221473038197
    2. '=' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.639163970947266
    4. '=a' → logprob: -16.264163970947266
    5. ' =
' → logprob: -17.764163970947266
    6. ' +=' → logprob: -17.889163970947266
    7. '<|end|>' → logprob: -18.014163970947266
    8. ' =)' → logprob: -18.139163970947266
    9. '_' → logprob: -18.264163970947266
    10. '＝' → logprob: -18.389163970947266

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759410262107849
    2. ' a' → logprob: -0.8259410262107849
    3. ' ' → logprob: -14.20094108581543
    4. '	a' → logprob: -15.07594108581543
    5. '_a' → logprob: -16.07594108581543
    6. ' ' → logprob: -16.20094108581543
    7. '    ' → logprob: -16.45094108581543
    8. '>a' → logprob: -16.45094108581543
    9. '   ' → logprob: -16.57594108581543
    10. 'l' → logprob: -16.70094108581543

Token 49: '[len' (ID: 57582)
  Prédit: '[len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.03474956005811691
    2. '[' → logprob: -3.4097495079040527
    3. '[-' → logprob: -7.034749507904053
    4. '[
' → logprob: -9.659749984741211
    5. '[length' → logprob: -9.909749984741211
    6. '[last' → logprob: -10.534749984741211
    7. '[tmp' → logprob: -11.159749984741211
    8. '[count' → logprob: -11.784749984741211
    9. '[size' → logprob: -12.159749984741211
    10. '[max' → logprob: -12.284749984741211

Token 50: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011391390580683947
    2. '(' → logprob: -9.750113487243652
    3. 'a' → logprob: -9.875113487243652
    4. '-' → logprob: -13.875113487243652
    5. ')' → logprob: -14.125113487243652
    6. '<|end|>' → logprob: -14.500113487243652
    7. '```' → logprob: -15.000113487243652
    8. ')a' → logprob: -15.250113487243652
    9. '	a' → logprob: -15.750113487243652
    10. '   ' → logprob: -16.00011444091797

Token 51: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.03121473453938961
    2. ')' → logprob: -3.531214714050293
    3. 'a' → logprob: -7.531214714050293
    4. '-' → logprob: -7.781214714050293
    5. ' )' → logprob: -7.906214714050293
    6. '   ' → logprob: -10.406214714050293
    7. ')a' → logprob: -10.781214714050293
    8. ' -' → logprob: -11.281214714050293
    9. '1' → logprob: -11.281214714050293
    10. ' ' → logprob: -11.656214714050293

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.750036239624023
    4. '-' → logprob: -15.125036239624023
    5. ')' → logprob: -15.375036239624023
    6. '```' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.687536239624023
    8. '１' → logprob: -16.875036239624023
    9. '

' → logprob: -17.187536239624023
    10. '۱' → logprob: -18.000036239624023

Token 53: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015788905147928745
    2. '])' → logprob: -9.875158309936523
    3. ']' → logprob: -10.000158309936523
    4. ' )' → logprob: -10.250158309936523
    5. '）' → logprob: -11.625158309936523
    6. '   ' → logprob: -12.375158309936523
    7. ')])' → logprob: -12.375158309936523
    8. '[' → logprob: -13.750158309936523
    9. ')
' → logprob: -14.000158309936523
    10. ')]' → logprob: -14.375158309936523

Token 54: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10712004452943802
    2. '=' → logprob: -2.3571200370788574
    3. '_' → logprob: -5.232120037078857
    4. 's' → logprob: -6.857120037078857
    5. '[' → logprob: -8.482120513916016
    6. '[:]' → logprob: -10.107120513916016
    7. '=[]' → logprob: -10.107120513916016
    8. ' +=' → logprob: -10.232120513916016
    9. '.append' → logprob: -10.482120513916016
    10. '.' → logprob: -10.607120513916016

Token 56: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.911339521408081
    2. ' []' → logprob: -1.411339521408081
    3. 'tmp' → logprob: -1.661339521408081
    4. '0' → logprob: -2.536339521408081
    5. ' tmp' → logprob: -3.036339521408081
    6. '[' → logprob: -4.03633975982666
    7. '[tmp' → logprob: -4.53633975982666
    8. ' [' → logprob: -5.53633975982666
    9. ' ' → logprob: -5.53633975982666
    10. '[max' → logprob: -8.28633975982666

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008957617916166782
    2. 'tmp' → logprob: -4.883957386016846
    3. ' ' → logprob: -7.633957386016846
    4. 'False' → logprob: -7.883957386016846
    5. '-' → logprob: -8.633957862854004
    6. ' tmp' → logprob: -9.133957862854004
    7. 'float' → logprob: -10.133957862854004
    8. '1' → logprob: -10.508957862854004
    9. ''' → logprob: -10.883957862854004
    10. 'max' → logprob: -11.008957862854004

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7619183659553528
    2. ']*' → logprob: -1.136918306350708
    3. ']' → logprob: -1.886918306350708
    4. ']*(' → logprob: -3.136918306350708
    5. 'for' → logprob: -4.136918544769287
    6. ' ]' → logprob: -6.636918544769287
    7. ' ' → logprob: -9.761918067932129
    8. ')' → logprob: -10.136918067932129
    9. ']+' → logprob: -10.386918067932129
    10. '	for' → logprob: -10.511918067932129

Token 59: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.029130881652235985
    2. ' j' → logprob: -4.154130935668945
    3. '_' → logprob: -4.404130935668945
    4. ' i' → logprob: -7.404130935668945
    5. '_j' → logprob: -9.404130935668945
    6. ' ' → logprob: -9.654130935668945
    7. ' in' → logprob: -11.279130935668945
    8. 'j' → logprob: -12.029130935668945
    9. ' y' → logprob: -12.654130935668945
    10. 'i' → logprob: -13.654130935668945

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030039697885513306
    2. 'in' → logprob: -5.87800407409668
    3. ' ' → logprob: -9.00300407409668
    4. ' range' → logprob: -10.25300407409668
    5. 'range' → logprob: -10.50300407409668
    6. '<|end|>' → logprob: -12.00300407409668
    7. '	in' → logprob: -13.12800407409668
    8. '(range' → logprob: -13.50300407409668
    9. ')' → logprob: -13.87800407409668
    10. ' i' → logprob: -14.87800407409668

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759541988372803
    2. ' range' → logprob: -0.8259541988372803
    3. 'l' → logprob: -12.20095443725586
    4. ' l' → logprob: -12.57595443725586
    5. '(range' → logprob: -13.70095443725586
    6. 'r' → logprob: -13.82595443725586
    7. '	range' → logprob: -13.95095443725586
    8. 'a' → logprob: -14.07595443725586
    9. 'tmp' → logprob: -14.57595443725586
    10. 'ran' → logprob: -14.70095443725586

Token 62: '(tmp' (ID: 22623)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.688340425491333
    2. '(n' → logprob: -0.938340425491333
    3. '(tmp' → logprob: -2.313340425491333
    4. '(' → logprob: -5.063340187072754
    5. '(max' → logprob: -7.813340187072754
    6. ' (' → logprob: -7.938340187072754
    7. '(m' → logprob: -9.688340187072754
    8. 'len' → logprob: -9.813340187072754
    9. '(l' → logprob: -9.813340187072754
    10. 'tmp' → logprob: -9.938340187072754

Token 63: ')]' (ID: 15710)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0122543815523386
    2. ')]' → logprob: -4.637254238128662
    3. ' +' → logprob: -6.012254238128662
    4. ')' → logprob: -10.13725471496582
    5. ' )' → logprob: -12.63725471496582
    6. ']' → logprob: -13.63725471496582
    7. '+n' → logprob: -15.13725471496582
    8. ' ' → logprob: -15.26225471496582
    9. '```' → logprob: -15.26225471496582
    10. '*' → logprob: -15.38725471496582

Token 64: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007374477107077837
    2. ' ]' → logprob: -5.007374286651611
    3. ' for' → logprob: -7.382374286651611
    4. 'for' → logprob: -10.50737476348877
    5. ')]' → logprob: -12.00737476348877
    6. '   ' → logprob: -13.63237476348877
    7. ' ' → logprob: -14.63237476348877
    8. ']]' → logprob: -15.00737476348877
    9. ')' → logprob: -15.13237476348877
    10. '`]' → logprob: -15.88237476348877

Token 65: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12837037444114685
    2. 'range' → logprob: -2.5033702850341797
    3. '_' → logprob: -3.5033702850341797
    4. ' j' → logprob: -5.00337028503418
    5. ' _' → logprob: -6.87837028503418
    6. 'j' → logprob: -7.75337028503418
    7. '_range' → logprob: -9.25337028503418
    8. 'i' → logprob: -9.37837028503418
    9. ' i' → logprob: -9.37837028503418
    10. ' l' → logprob: -10.37837028503418

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.291232705116272
    2. ' range' → logprob: -1.916232705116272
    3. '(range' → logprob: -2.2912325859069824
    4. '(' → logprob: -6.541232585906982
    5. 'range' → logprob: -6.541232585906982
    6. ' (' → logprob: -6.916232585906982
    7. '<|end|>' → logprob: -8.29123306274414
    8. 'in' → logprob: -9.29123306274414
    9. ' ' → logprob: -10.41623306274414
    10. ' xrange' → logprob: -10.66623306274414

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31328243017196655
    2. 'range' → logprob: -1.3132824897766113
    3. ' l' → logprob: -11.438282012939453
    4. '(range' → logprob: -11.938282012939453
    5. 'l' → logprob: -12.688282012939453
    6. '	range' → logprob: -16.188282012939453
    7. ' ' → logprob: -17.188282012939453
    8. ' xrange' → logprob: -17.438282012939453
    9. 'Range' → logprob: -17.688282012939453
    10. 's' → logprob: -17.813282012939453

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09321104735136032
    2. '(l' → logprob: -2.7182109355926514
    3. '(range' → logprob: -4.5932111740112305
    4. '(len' → logprob: -5.0932111740112305
    5. '(tmp' → logprob: -5.4682111740112305
    6. '(' → logprob: -6.0932111740112305
    7. ' range' → logprob: -9.59321117401123
    8. ' (' → logprob: -9.84321117401123
    9. '((' → logprob: -10.46821117401123
    10. '(s' → logprob: -10.84321117401123

Token 69: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011772842844948173
    2. ']' → logprob: -9.125117301940918
    3. ')' → logprob: -12.000117301940918
    4. '])]' → logprob: -14.625117301940918
    5. ')]
' → logprob: -14.750117301940918
    6. ' )' → logprob: -14.750117301940918
    7. '])' → logprob: -15.375117301940918
    8. ']]' → logprob: -15.375117301940918
    9. ' ]' → logprob: -15.875117301940918
    10. ')],' → logprob: -16.250118255615234

Token 70: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28787970542907715
    2. ']' → logprob: -1.9128797054290771
    3. ' for' → logprob: -2.662879705429077
    4. ')' → logprob: -4.412879943847656
    5. '<|end|>' → logprob: -5.037879943847656
    6. 'i' → logprob: -5.412879943847656
    7. '   ' → logprob: -5.787879943847656
    8. ' ' → logprob: -6.537879943847656
    9. '0' → logprob: -6.537879943847656
    10. '[i' → logprob: -7.287879943847656

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002780511975288391
    2. 'i' → logprob: -6.252780437469482
    3. ' j' → logprob: -7.877780437469482
    4. ' _' → logprob: -8.00278091430664
    5. ' ' → logprob: -9.75278091430664
    6. '_' → logprob: -9.87778091430664
    7. '_i' → logprob: -11.25278091430664
    8. 'j' → logprob: -12.25278091430664
    9. ' ' → logprob: -13.50278091430664
    10. '	i' → logprob: -13.62778091430664

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008662905544042587
    2. 'in' → logprob: -4.758662700653076
    3. ' ' → logprob: -10.133663177490234
    4. 'n' → logprob: -13.258663177490234
    5. '	in' → logprob: -13.383663177490234
    6. ',' → logprob: -13.758663177490234
    7. 'range' → logprob: -14.008663177490234
    8. 'import' → logprob: -14.383663177490234
    9. '_' → logprob: -14.633663177490234
    10. '0' → logprob: -14.758663177490234

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234594456851482
    2. ' range' → logprob: -5.255234718322754
    3. 'l' → logprob: -14.880234718322754
    4. '(range' → logprob: -15.755234718322754
    5. ')' → logprob: -16.505233764648438
    6. 'in' → logprob: -16.630233764648438
    7. '	range' → logprob: -17.005233764648438
    8. ' ' → logprob: -17.130233764648438
    9. '  ' → logprob: -17.130233764648438
    10. 'ran' → logprob: -17.505233764648438

Token 74: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015383612480945885
    2. '(' → logprob: -9.500153541564941
    3. '(len' → logprob: -10.375153541564941
    4. 'n' → logprob: -10.625153541564941
    5. '(range' → logprob: -11.375153541564941
    6. ' (' → logprob: -12.250153541564941
    7. 'range' → logprob: -12.625153541564941
    8. '(l' → logprob: -13.000153541564941
    9. ' range' → logprob: -14.250153541564941
    10. 'l' → logprob: -15.000153541564941

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007575734634883702
    2. ')' → logprob: -8.000757217407227
    3. ']:' → logprob: -8.250757217407227
    4. '):
' → logprob: -9.875757217407227
    5. ')]' → logprob: -10.000757217407227
    6. ':' → logprob: -10.500757217407227
    7. ' ):' → logprob: -10.500757217407227
    8. '+' → logprob: -12.500757217407227
    9. '   ' → logprob: -13.125757217407227
    10. ' ' → logprob: -14.875757217407227

Token 76: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7444724440574646
    2. '   ' → logprob: -0.8694724440574646
    3. ':' → logprob: -2.4944725036621094
    4. 'for' → logprob: -3.8694725036621094
    5. ':
' → logprob: -7.119472503662109
    6. ' ' → logprob: -7.994472503662109
    7. '       ' → logprob: -8.24447250366211
    8. '<|end|>' → logprob: -8.36947250366211
    9. '	for' → logprob: -8.61947250366211
    10. '  ' → logprob: -9.49447250366211

Token 77: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43300551176071167
    2. 'for' → logprob: -1.0580055713653564
    3. '   ' → logprob: -5.808005332946777
    4. ' k' → logprob: -8.058005332946777
    5. 'j' → logprob: -8.183005332946777
    6. 'k' → logprob: -8.308005332946777
    7. ' j' → logprob: -8.558005332946777
    8. ' ans' → logprob: -9.933005332946777
    9. 'range' → logprob: -9.933005332946777
    10. ' range' → logprob: -10.183005332946777

Token 78: ' l' (ID: 305)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9711448550224304
    2. ' len' → logprob: -1.2211449146270752
    3. 'l' → logprob: -1.8461449146270752
    4. ' l' → logprob: -1.8461449146270752
    5. ' i' → logprob: -5.971144676208496
    6. 'i' → logprob: -6.471144676208496
    7. 'a' → logprob: -6.971144676208496
    8. 'max' → logprob: -6.971144676208496
    9. ' max' → logprob: -7.221144676208496
    10. ' ans' → logprob: -7.471144676208496

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.93579563125968e-05
    2. '[' → logprob: -9.625089645385742
    3. ' [' → logprob: -11.500089645385742
    4. '[len' → logprob: -12.500089645385742
    5. '[I' → logprob: -12.625089645385742
    6. '[j' → logprob: -13.125089645385742
    7. '[n' → logprob: -13.750089645385742
    8. '\[' → logprob: -14.750089645385742
    9. '```' → logprob: -14.750089645385742
    10. '[
' → logprob: -15.250089645385742

Token 80: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14214932918548584
    2. '[' → logprob: -2.8921494483947754
    3. '][-' → logprob: -3.2671494483947754
    4. ']:' → logprob: -4.392149448394775
    5. ']' → logprob: -4.642149448394775
    6. '[-' → logprob: -5.267149448394775
    7. ']):' → logprob: -5.642149448394775
    8. ']==' → logprob: -6.017149448394775
    9. ']!=' → logprob: -6.142149448394775
    10. '[len' → logprob: -6.642149448394775

Token 81: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.327926367521286
    2. '-' → logprob: -1.3279263973236084
    3. 'len' → logprob: -4.952926158905029
    4. '1' → logprob: -5.327926158905029
    5. ' ' → logprob: -6.577926158905029
    6. ' -' → logprob: -7.452926158905029
    7. '2' → logprob: -8.952926635742188
    8. ']' → logprob: -9.077926635742188
    9. '   ' → logprob: -9.577926635742188
    10. ' len' → logprob: -9.827926635742188

Token 82: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9322260618209839
    2. ' >' → logprob: -1.0572260618209839
    3. ']' → logprob: -2.0572261810302734
    4. ']>' → logprob: -2.4322261810302734
    5. '==' → logprob: -4.682226181030273
    6. '-' → logprob: -4.682226181030273
    7. ' ==' → logprob: -4.932226181030273
    8. ']==' → logprob: -5.057226181030273
    9. ' -' → logprob: -6.432226181030273
    10. ']>=' → logprob: -6.557226181030273

Token 83: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5364588499069214
    2. ' >' → logprob: -0.9114588499069214
    3. '==' → logprob: -5.036458969116211
    4. ' ==' → logprob: -5.786458969116211
    5. '>=' → logprob: -7.536458969116211
    6. '<' → logprob: -7.786458969116211
    7. '!=' → logprob: -7.786458969116211
    8. '-' → logprob: -7.786458969116211
    9. ' !=' → logprob: -7.911458969116211
    10. '<=' → logprob: -8.036458969116211

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.059838395565748215
    2. 'ans' → logprob: -3.80983829498291
    3. 'l' → logprob: -4.43483829498291
    4. ' ' → logprob: -4.43483829498291
    5. '1' → logprob: -5.55983829498291
    6. 'tmp' → logprob: -5.55983829498291
    7. ' ans' → logprob: -6.05983829498291
    8. ' l' → logprob: -7.43483829498291
    9. '=' → logprob: -8.05983829498291
    10. '2' → logprob: -8.18483829498291

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3347886800765991
    2. 'ans' → logprob: -1.7097886800765991
    3. 'l' → logprob: -2.9597887992858887
    4. 'tmp' → logprob: -3.3347887992858887
    5. '1' → logprob: -4.584788799285889
    6. ' ans' → logprob: -6.709788799285889
    7. ' ' → logprob: -6.709788799285889
    8. '2' → logprob: -7.584788799285889
    9. 'len' → logprob: -7.584788799285889
    10. 'n' → logprob: -7.834788799285889

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001843324746005237
    2. ' :' → logprob: -6.501843452453613
    3. ':
' → logprob: -9.126843452453613
    4. '):' → logprob: -9.376843452453613
    5. ' and' → logprob: -9.501843452453613
    6. '   ' → logprob: -10.626843452453613
    7. '<|end|>' → logprob: -11.001843452453613
    8. '       ' → logprob: -11.501843452453613
    9. ')' → logprob: -12.251843452453613
    10. ' :
' → logprob: -12.626843452453613

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08531420677900314
    2. '    ' → logprob: -3.8353142738342285
    3. ' ' → logprob: -3.9603142738342285
    4. '<|end|>' → logprob: -4.0853142738342285
    5. '   ' → logprob: -4.2103142738342285
    6. '        ' → logprob: -5.7103142738342285
    7. ' for' → logprob: -5.8353142738342285
    8. ':' → logprob: -8.08531379699707
    9. '<|end|>' → logprob: -8.33531379699707
    10. '        
' → logprob: -8.46031379699707

Token 88: ' for' (ID: 395)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.330829918384552
    2. ' for' → logprob: -1.3308298587799072
    3. 'for' (adapté à ' for') → logprob: -4.455830097198486
    4. 'ans' → logprob: -5.580830097198486
    5. '    ' → logprob: -7.455830097198486
    6. '   ' → logprob: -7.455830097198486
    7. '	ans' → logprob: -8.705829620361328
    8. ' ' → logprob: -9.080829620361328
    9. '(ans' → logprob: -9.455829620361328
    10. ' if' → logprob: -9.580829620361328

Token 89: ' j' (ID: 441)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7397474050521851
    2. 'k' → logprob: -1.239747405052185
    3. ' j' → logprob: -1.864747405052185
    4. 'j' → logprob: -2.6147475242614746
    5. ' x' → logprob: -6.489747524261475
    6. 'x' → logprob: -6.739747524261475
    7. ' range' → logprob: -6.989747524261475
    8. ' _' → logprob: -7.864747524261475
    9. '_' → logprob: -8.114747047424316
    10. ' ' → logprob: -8.489747047424316

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0053895688615739346
    2. 'in' → logprob: -5.63038969039917
    3. ' ' → logprob: -6.75538969039917
    4. 'range' → logprob: -7.88038969039917
    5. ' range' → logprob: -8.880389213562012
    6. '(' → logprob: -11.005389213562012
    7. '   ' → logprob: -11.005389213562012
    8. '0' → logprob: -11.380389213562012
    9. '    ' → logprob: -11.380389213562012
    10. '  ' → logprob: -11.630389213562012

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07000556588172913
    2. 'range' → logprob: -2.6950056552886963
    3. '(range' → logprob: -10.445005416870117
    4. ' ' → logprob: -11.445005416870117
    5. ' l' → logprob: -11.820005416870117
    6. '[' → logprob: -12.320005416870117
    7. '	range' → logprob: -12.445005416870117
    8. '(' → logprob: -13.195005416870117
    9. '   ' → logprob: -13.195005416870117
    10. '0' → logprob: -13.382505416870117

Token 92: '(' (ID: 7)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07404495030641556
    2. '(' → logprob: -2.699044942855835
    3. '(tmp' → logprob: -6.574045181274414
    4. '(len' → logprob: -6.824045181274414
    5. ' l' → logprob: -7.074045181274414
    6. 'l' → logprob: -8.324045181274414
    7. '1' → logprob: -8.699045181274414
    8. ' (' → logprob: -8.949045181274414
    9. 'tmp' → logprob: -9.949045181274414
    10. '(range' → logprob: -10.449045181274414

Token 93: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.023875515908002853
    2. '1' → logprob: -4.148875713348389
    3. ' l' → logprob: -5.148875713348389
    4. 'len' → logprob: -6.773875713348389
    5. 'tmp' → logprob: -8.02387523651123
    6. '0' → logprob: -8.89887523651123
    7. '2' → logprob: -9.27387523651123
    8. '   ' → logprob: -9.39887523651123
    9. ' ' → logprob: -9.64887523651123
    10. '       ' → logprob: -10.89887523651123

Token 94: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8200056552886963
    2. ',l' → logprob: -0.9450056552886963
    3. ' ,' → logprob: -2.1950056552886963
    4. ',len' → logprob: -3.0700056552886963
    5. '   ' → logprob: -5.570005416870117
    6. ' l' → logprob: -6.070005416870117
    7. '):' → logprob: -6.070005416870117
    8. '       ' → logprob: -7.195005416870117
    9. '           ' → logprob: -7.445005416870117
    10. '    ' → logprob: -7.570005416870117

Token 95: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. 'l' → logprob: -16.125
    4. '[l' → logprob: -17.375
    5. '(a' → logprob: -17.5
    6. '(n' → logprob: -17.75
    7. '	l' → logprob: -18.375
    8. '(i' → logprob: -19.0
    9. ' (' → logprob: -19.125
    10. '(s' → logprob: -19.5

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[j' → logprob: -13.750001907348633
    3. '[' → logprob: -14.500001907348633
    4. '[l' → logprob: -14.875001907348633
    5. ')' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.750001907348633
    7. '[u' → logprob: -18.875001907348633
    8. '[I' → logprob: -18.875001907348633
    9. '[n' → logprob: -19.125001907348633
    10. ')[' → logprob: -19.250001907348633

Token 97: '])):
' (ID: 145266)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00022165567497722805
    2. '[' → logprob: -8.750221252441406
    3. '[j' → logprob: -9.875221252441406
    4. ' [' → logprob: -12.375221252441406
    5. ')' → logprob: -12.875221252441406
    6. ')])' → logprob: -14.250221252441406
    7. '][' → logprob: -14.375221252441406
    8. 'i' → logprob: -14.625221252441406
    9. '(i' → logprob: -14.875221252441406
    10. ' ' → logprob: -14.875221252441406

Token 98: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7238174676895142
    2. ':' → logprob: -1.4738174676895142
    3. '           ' → logprob: -1.8488174676895142
    4. '):' → logprob: -2.5988173484802246
    5. '   ' → logprob: -4.473817348480225
    6. '+' → logprob: -4.973817348480225
    7. ' :' → logprob: -5.223817348480225
    8. '<|end|>' → logprob: -5.348817348480225
    9. '):
' → logprob: -5.598817348480225
    10. '        ' → logprob: -5.723817348480225

Token 99: ' tmp' (ID: 8919)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11628299951553345
    2. ' ' → logprob: -2.9912829399108887
    3. ' if' → logprob: -3.4912829399108887
    4. 'ans' → logprob: -4.366282939910889
    5. ' 
' → logprob: -4.616282939910889
    6. '(ans' → logprob: -6.491282939910889
    7. ' ' → logprob: -7.116282939910889
    8. 'if' → logprob: -7.241282939910889
    9. '	ans' → logprob: -7.366282939910889
    10. '_ans' → logprob: -7.491282939910889

Token 100: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5553208589553833
    2. ' =' → logprob: -2.3053207397460938
    3. '][' → logprob: -2.3053207397460938
    4. 's' → logprob: -2.6803207397460938
    5. '-' → logprob: -3.0553207397460938
    6. 'ans' → logprob: -3.1803207397460938
    7. ' -' → logprob: -4.305320739746094
    8. '_ans' → logprob: -4.930320739746094
    9. ' ]' → logprob: -5.055320739746094
    10. '	ans' → logprob: -5.180320739746094

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1839260756969452
    2. ']' → logprob: -2.1839261054992676
    3. '=' → logprob: -3.0589261054992676
    4. '][' → logprob: -5.433926105499268
    5. ',' → logprob: -7.058926105499268
    6. ' ]' → logprob: -7.308926105499268
    7. '[' → logprob: -7.308926105499268
    8. ']=' → logprob: -7.433926105499268
    9. ' ' → logprob: -7.683926105499268
    10. '   ' → logprob: -8.43392562866211

Token 102: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2820233404636383
    2. 'l' → logprob: -1.407023310661316
    3. ' ans' → logprob: -8.032023429870605
    4. 'ans' → logprob: -9.032023429870605
    5. ' ' → logprob: -9.282023429870605
    6. 'tmp' → logprob: -9.657023429870605
    7. ' tmp' → logprob: -9.907023429870605
    8. '0' → logprob: -10.282023429870605
    9. '1' → logprob: -10.657023429870605
    10. '(l' → logprob: -10.782023429870605

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '[j' → logprob: -17.625
    4. '[l' → logprob: -18.5
    5. '[user' → logprob: -18.625
    6. 'i' → logprob: -19.0
    7. '<|end|>' → logprob: -19.5
    8. '[I' → logprob: -19.75
    9. '[s' → logprob: -20.125
    10. '[u' → logprob: -20.125

Token 104: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34945207834243774
    2. '][' → logprob: -1.224452018737793
    3. '[j' → logprob: -7.599452018737793
    4. '[' → logprob: -7.849452018737793
    5. 'i' → logprob: -10.099452018737793
    6. ']' → logprob: -10.599452018737793
    7. ' ][' → logprob: -11.224452018737793
    8. '-' → logprob: -12.224452018737793
    9. '"][' → logprob: -12.349452018737793
    10. '```' → logprob: -12.599452018737793

Token 105: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007341049495153129
    2. '[j' → logprob: -7.375734329223633
    3. 'i' → logprob: -9.625734329223633
    4. ' j' → logprob: -10.875734329223633
    5. ']' → logprob: -12.125734329223633
    6. '][' → logprob: -12.375734329223633
    7. '```' → logprob: -12.500734329223633
    8. '0' → logprob: -13.125734329223633
    9. '	j' → logprob: -13.500734329223633
    10. '[i' → logprob: -13.875734329223633

Token 106: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0126447677612305
    2. ']-' → logprob: -1.0126447677612305
    3. ']' → logprob: -1.3876447677612305
    4. ' -' → logprob: -3.8876447677612305
    5. ' ]' → logprob: -6.7626447677612305
    6. ')-' → logprob: -6.8876447677612305
    7. ')' → logprob: -8.01264476776123
    8. '])-' → logprob: -8.13764476776123
    9. '[' → logprob: -8.63764476776123
    10. ')]' → logprob: -9.51264476776123

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26279017329216003
    2. '-' → logprob: -2.1377902030944824
    3. ' ans' → logprob: -2.3877902030944824
    4. ' -' → logprob: -4.887790203094482
    5. 'ans' → logprob: -5.387790203094482
    6. '       ' → logprob: -6.512790203094482
    7. '            
' → logprob: -6.637790203094482
    8. '   ' → logprob: -6.762790203094482
    9. ']' → logprob: -7.012790203094482
    10. ' 
' → logprob: -7.387790203094482

Token 108: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22963063418865204
    2. 'ans' (adapté à ' ans') → logprob: -1.7296305894851685
    3. '-' → logprob: -4.354630470275879
    4. ' if' → logprob: -5.104630470275879
    5. 'if' → logprob: -5.604630470275879
    6. '           ' → logprob: -6.229630470275879
    7. ' -' → logprob: -6.729630470275879
    8. '(ans' → logprob: -7.604630470275879
    9. ' for' → logprob: -7.729630470275879
    10. '	ans' → logprob: -8.104630470275879

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009415811859071255
    2. '[' → logprob: -4.759415626525879
    3. '[tmp' → logprob: -8.009415626525879
    4. '[l' → logprob: -8.259415626525879
    5. '[I' → logprob: -9.384415626525879
    6. '[int' → logprob: -10.259415626525879
    7. '[j' → logprob: -11.009415626525879
    8. '[n' → logprob: -11.009415626525879
    9. '[a' → logprob: -11.384415626525879
    10. '[t' → logprob: -11.759415626525879

Token 110: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41281190514564514
    2. '[' → logprob: -1.9128118753433228
    3. '][' → logprob: -1.9128118753433228
    4. '[tmp' → logprob: -3.1628119945526123
    5. ' -' → logprob: -8.287812232971191
    6. '[temp' → logprob: -8.662812232971191
    7. 'tmp' → logprob: -10.287812232971191
    8. '[-' → logprob: -10.662812232971191
    9. '1' → logprob: -11.037812232971191
    10. ']' → logprob: -11.412812232971191

Token 111: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.676292231422849e-05
    2. ' tmp' → logprob: -11.250017166137695
    3. '(tmp' → logprob: -12.875017166137695
    4. '[tmp' → logprob: -14.125017166137695
    5. '$tmp' → logprob: -15.500017166137695
    6. 'temp' → logprob: -15.625017166137695
    7. '	tmp' → logprob: -16.750017166137695
    8. 't' → logprob: -17.625017166137695
    9. '_tmp' → logprob: -17.875017166137695
    10. '/tmp' → logprob: -18.125017166137695

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.847109812544659e-05
    2. '-' → logprob: -10.000048637390137
    3. ' -' → logprob: -13.750048637390137
    4. 'tmp' → logprob: -15.125048637390137
    5. ' ' → logprob: -15.250048637390137
    6. ']' → logprob: -15.375048637390137
    7. '[tmp' → logprob: -15.437548637390137
    8. '' → logprob: -16.06254768371582
    9. '
' → logprob: -16.18754768371582
    10. '...' → logprob: -16.43754768371582

Token 113: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.055010125041007996
    2. ' -' → logprob: -2.9300100803375244
    3. ']' → logprob: -9.055009841918945
    4. ']-' → logprob: -11.680009841918945
    5. ' ]' → logprob: -13.805009841918945
    6. ' ' → logprob: -14.680009841918945
    7. '1' → logprob: -15.680009841918945
    8. '[' → logprob: -16.055009841918945
    9. ')' → logprob: -16.180009841918945
    10. ''-' → logprob: -16.617509841918945

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '<|end|>' → logprob: -15.312525749206543
    4. '```' → logprob: -15.500025749206543
    5. '0' → logprob: -15.562525749206543
    6. ']' → logprob: -15.812525749206543
    7. '2' → logprob: -15.937525749206543
    8. '   ' → logprob: -16.50002670288086
    9. ')' → logprob: -16.56252670288086
    10. '">' → logprob: -16.68752670288086

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02709873579442501
    2. ']+=' → logprob: -3.9020986557006836
    3. ']=' → logprob: -5.277098655700684
    4. ' ]' → logprob: -7.027098655700684
    5. '=' → logprob: -8.402098655700684
    6. '+=' → logprob: -8.527098655700684
    7. ' +=' → logprob: -9.777098655700684
    8. '+' → logprob: -10.902098655700684
    9. ']+' → logprob: -11.402098655700684
    10. ' =' → logprob: -11.527098655700684

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0415797084569931
    2. ' =' → logprob: -3.2915797233581543
    3. '+=' → logprob: -5.791579723358154
    4. ' +=' → logprob: -7.666579723358154
    5. ']+=' → logprob: -12.291579246520996
    6. '=True' → logprob: -13.041579246520996
    7. ']' → logprob: -13.291579246520996
    8. ']=' → logprob: -13.916579246520996
    9. ' ' → logprob: -14.916579246520996
    10. '+' → logprob: -14.916579246520996

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008100315928459167
    2. 'i' → logprob: -5.633100509643555
    3. 'l' → logprob: -5.758100509643555
    4. 'ans' → logprob: -7.883100509643555
    5. ' ' → logprob: -8.133100509643555
    6. 'tmp' → logprob: -8.508100509643555
    7. 'j' → logprob: -8.758100509643555
    8. '   ' → logprob: -9.633100509643555
    9. 'int' → logprob: -10.133100509643555
    10. '(' → logprob: -10.508100509643555

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003923449199646711
    2. 'l' → logprob: -6.128923416137695
    3. 'i' → logprob: -6.753923416137695
    4. 'ans' → logprob: -8.378923416137695
    5. ' ' → logprob: -9.628923416137695
    6. 'tmp' → logprob: -9.878923416137695
    7. 'int' → logprob: -10.003923416137695
    8. 'j' → logprob: -10.128923416137695
    9. '(' → logprob: -10.753923416137695
    10. 'a' → logprob: -11.003923416137695

Token 119: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.58469557762146
    2. '<|end|>' → logprob: -0.95969557762146
    3. '
' → logprob: -3.70969557762146
    4. ')' → logprob: -4.209695816040039
    5. ' ' → logprob: -5.084695816040039
    6. '```' → logprob: -5.584695816040039
    7. '#' → logprob: -6.084695816040039
    8. '[' → logprob: -6.709695816040039
    9. ']' → logprob: -6.709695816040039
    10. 'n' → logprob: -6.834695816040039

Token 120: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7117037773132324
    2. '<|end|>' → logprob: -0.9617037773132324
    3. '\n' → logprob: -3.2117037773132324
    4. ' ' → logprob: -3.5867037773132324
    5. '#' → logprob: -4.711703777313232
    6. '[' → logprob: -4.836703777313232
    7. 'n' → logprob: -4.836703777313232
    8. ']' → logprob: -4.961703777313232
    9. '
' → logprob: -5.211703777313232
    10. '   ' → logprob: -5.461703777313232

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11317355930805206
    2. 'i' → logprob: -2.238173484802246
    3. ' _' → logprob: -8.738173484802246
    4. '_' → logprob: -8.738173484802246
    5. ' j' → logprob: -11.613173484802246
    6. '_i' → logprob: -11.863173484802246
    7. ' ' → logprob: -11.988173484802246
    8. ' ' → logprob: -13.113173484802246
    9. 'j' → logprob: -13.113173484802246
    10. '	i' → logprob: -14.238173484802246

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007792463526129723
    2. 'in' → logprob: -4.8827924728393555
    3. ' ' → logprob: -8.757792472839355
    4. ' range' → logprob: -11.382792472839355
    5. 'range' → logprob: -11.632792472839355
    6. ' ' → logprob: -13.257792472839355
    7. ' n' → logprob: -13.382792472839355
    8. 'n' → logprob: -13.382792472839355
    9. ' i' → logprob: -13.757792472839355
    10. '	in' → logprob: -13.882792472839355

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008797862567007542
    2. ' range' → logprob: -4.758797645568848
    3. 'ans' → logprob: -8.633797645568848
    4. ' ans' → logprob: -13.258797645568848
    5. 'ran' → logprob: -13.633797645568848
    6. '(range' → logprob: -14.633797645568848
    7. 'in' → logprob: -14.883797645568848
    8. ' ' → logprob: -15.758797645568848
    9. '(ans' → logprob: -15.758797645568848
    10. ')' → logprob: -16.133798599243164

Token 124: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009091986576095223
    2. '(range' → logprob: -7.375909328460693
    3. '(' → logprob: -8.500908851623535
    4. '(len' → logprob: -10.125908851623535
    5. 'range' → logprob: -10.750908851623535
    6. ' range' → logprob: -11.000908851623535
    7. 'n' → logprob: -14.875908851623535
    8. ' (' → logprob: -15.125908851623535
    9. '(
' → logprob: -16.12590980529785
    10. '(s' → logprob: -16.37590980529785

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014346949756145477
    2. ')' → logprob: -4.264347076416016
    3. '):
' → logprob: -8.889347076416016
    4. ' ):' → logprob: -11.264347076416016
    5. ':' → logprob: -11.389347076416016
    6. ')n' → logprob: -11.389347076416016
    7. ']:' → logprob: -12.889347076416016
    8. ',n' → logprob: -13.764347076416016
    9. 'n' → logprob: -14.139347076416016
    10. '+' → logprob: -14.264347076416016

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15793532133102417
    2. 'print' → logprob: -2.532935380935669
    3. 'for' → logprob: -3.407935380935669
    4. ' for' → logprob: -3.782935380935669
    5. ' print' → logprob: -4.53293514251709
    6. '	print' → logprob: -10.90793514251709
    7. '```' → logprob: -12.15793514251709
    8. '	for' → logprob: -12.28293514251709
    9. '       ' → logprob: -12.40793514251709
    10. ' ' → logprob: -12.65793514251709

Token 127: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3933090567588806
    2. 'print' (adapté à ' print') → logprob: -1.1433091163635254
    3. ' for' → logprob: -5.268309116363525
    4. '   ' → logprob: -7.393309116363525
    5. ' print' → logprob: -7.393309116363525
    6. 'ans' → logprob: -11.143308639526367
    7. 'pr' → logprob: -12.518308639526367
    8. 'j' → logprob: -12.768308639526367
    9. 'count' → logprob: -13.393308639526367
    10. 'prin' → logprob: -13.393308639526367

Token 128: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.06488345563411713
    2. '(' → logprob: -3.6898834705352783
    3. '('' → logprob: -3.6898834705352783
    4. '("' → logprob: -4.439883232116699
    5. '(sum' → logprob: -6.939883232116699
    6. '()' → logprob: -10.1898832321167
    7. '(ans' → logprob: -10.3148832321167
    8. '(*)' → logprob: -11.1898832321167
    9. '(
' → logprob: -12.0648832321167
    10. '(*(' → logprob: -12.3148832321167

Token 129: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35972949862480164
    2. '*' → logprob: -1.234729528427124
    3. ''' → logprob: -5.109729290008545
    4. '(*' → logprob: -6.109729290008545
    5. '".' → logprob: -7.109729290008545
    6. ' *' → logprob: -7.609729290008545
    7. '('' → logprob: -7.859729290008545
    8. '''.' → logprob: -8.109729766845703
    9. '""' → logprob: -8.359729766845703
    10. '"*' → logprob: -8.859729766845703

Token 130: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.2200749754119897e-06
    2. 'print' → logprob: -14.000001907348633
    3. 'jo' → logprob: -14.125001907348633
    4. ' join' → logprob: -14.500001907348633
    5. 'j' → logprob: -15.625001907348633
    6. '```' → logprob: -18.125001907348633
    7. '(join' → logprob: -18.875001907348633
    8. 'strip' → logprob: -19.000001907348633
    9. ').' → logprob: -19.250001907348633
    10. '.' → logprob: -19.375001907348633

Token 131: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00021212305000517517
    2. '(str' → logprob: -9.000211715698242
    3. 'map' → logprob: -9.625211715698242
    4. '(list' → logprob: -10.750211715698242
    5. '(' → logprob: -14.250211715698242
    6. ')' → logprob: -15.250211715698242
    7. ' map' → logprob: -16.125211715698242
    8. '```' → logprob: -16.250211715698242
    9. '([' → logprob: -16.750211715698242
    10. 'list' → logprob: -17.250211715698242

Token 132: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005707867676392198
    2. 'str' → logprob: -7.500570774078369
    3. ' str' → logprob: -11.875571250915527
    4. '(' → logprob: -11.875571250915527
    5. '[str' → logprob: -13.500571250915527
    6. '=str' → logprob: -14.250571250915527
    7. ')' → logprob: -14.250571250915527
    8. ',str' → logprob: -14.625571250915527
    9. '	str' → logprob: -15.000571250915527
    10. '```' → logprob: -15.375571250915527

Token 133: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.37501049041748
    4. 'ans' → logprob: -15.50001049041748
    5. '(answer' → logprob: -15.75001049041748
    6. ',' → logprob: -15.87501049041748
    7. '	ans' → logprob: -16.500009536743164
    8. '(
' → logprob: -16.875009536743164
    9. ')' → logprob: -17.500009536743164
    10. ')(' → logprob: -17.750009536743164

Token 134: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008690561167895794
    2. '(ans' → logprob: -4.758690357208252
    3. ' ans' → logprob: -9.50869083404541
    4. '	ans' → logprob: -13.25869083404541
    5. '_ans' → logprob: -17.633689880371094
    6. 'answer' → logprob: -18.133689880371094
    7. '   ' → logprob: -19.383689880371094
    8. 'Ans' → logprob: -19.758689880371094
    9. '(' → logprob: -20.508689880371094
    10. ')' → logprob: -21.008689880371094

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. '(i' → logprob: -18.0
    4. ' [' → logprob: -18.375
    5. ')[' → logprob: -19.625
    6. '[n' → logprob: -19.625
    7. '[[' → logprob: -20.5
    8. '[
' → logprob: -20.75
    9. '))' → logprob: -21.5
    10. '[I' → logprob: -21.625

Token 136: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00017159747949335724
    2. '))))' → logprob: -9.125171661376953
    3. '))' → logprob: -9.875171661376953
    4. ')' → logprob: -12.375171661376953
    5. '[' → logprob: -12.750171661376953
    6. ' ' → logprob: -13.375171661376953
    7. ')))
' → logprob: -14.375171661376953
    8. '[i' → logprob: -14.750171661376953
    9. '])))' → logprob: -14.875171661376953
    10. ')));' → logprob: -15.125171661376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 134
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 44.78%
Précision adaptée (1ère position): 44.78%
Précision (top 10): 85.82%
================================================================================
