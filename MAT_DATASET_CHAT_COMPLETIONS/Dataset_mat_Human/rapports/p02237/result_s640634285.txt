================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
if __name__ == '__main__':
    n = int(input())
    for i in range(n):
        u, k, *v = map(int, input().split())
        a = [0] * n
        for i_v in v:
            index_v = i_v -1
            a[index_v] = 1
        print(*a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'if' (ID: 366)
  → Token d'amorce (pas de prédiction)

Token 1: ' __' (ID: 2516)
  → Token d'amorce (pas de prédiction)

Token 2: 'name' (ID: 897)
  → Token d'amorce (pas de prédiction)

Token 3: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8670179997570813e-05
    2. '_' → logprob: -11.375019073486328
    3. '__
' → logprob: -13.000019073486328
    4. '==' → logprob: -13.500019073486328
    5. '___' → logprob: -13.750019073486328
    6. '__

' → logprob: -14.125019073486328
    7. '____' → logprob: -14.125019073486328
    8. ' __' → logprob: -15.500019073486328
    9. 'space' → logprob: -15.750019073486328
    10. '__
' → logprob: -16.000019073486328

Token 4: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2292335480451584
    2. '==' → logprob: -2.229233503341675
    3. ' ==' → logprob: -2.354233503341675
    4. '=' → logprob: -6.604233741760254
    5. '_' → logprob: -7.229233741760254
    6. ' ' → logprob: -9.979233741760254
    7. '"' → logprob: -10.604233741760254
    8. '[' → logprob: -10.729233741760254
    9. ' __' → logprob: -10.854233741760254
    10. ' =' → logprob: -11.104233741760254

Token 5: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47415226697921753
    2. '"' → logprob: -0.9741522669792175
    3. ' "' → logprob: -10.849152565002441
    4. ' "__' → logprob: -11.099152565002441
    5. ' '' → logprob: -11.224152565002441
    6. '__' → logprob: -11.474152565002441
    7. ' '__' → logprob: -11.474152565002441
    8. '`' → logprob: -13.099152565002441
    9. ' ' → logprob: -13.099152565002441
    10. ' __' → logprob: -14.349152565002441

Token 6: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.676981345459353e-06
    2. 'm' → logprob: -13.250005722045898
    3. 'name' → logprob: -13.250005722045898
    4. '_main' → logprob: -13.625005722045898
    5. 'ma' → logprob: -14.875005722045898
    6. 'maine' → logprob: -15.250005722045898
    7. 'mai' → logprob: -16.2500057220459
    8. 'init' → logprob: -16.6250057220459
    9. ' main' → logprob: -17.0000057220459
    10. 'mp' → logprob: -18.0000057220459

Token 7: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024855269584804773
    2. '__':
' → logprob: -6.002485752105713
    3. '__:' → logprob: -11.627485275268555
    4. '_' → logprob: -14.377485275268555
    5. '__('' → logprob: -15.627485275268555
    6. '__":
' → logprob: -16.752485275268555
    7. '___' → logprob: -17.127485275268555
    8. '__)' → logprob: -17.127485275268555
    9. '__.' → logprob: -17.877485275268555
    10. '____' → logprob: -18.127485275268555

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05020366236567497
    2. '   ' → logprob: -3.175203561782837
    3. ' :' → logprob: -6.175203800201416
    4. '\' → logprob: -6.425203800201416
    5. ':
' → logprob: -6.800203800201416
    6. '    
' → logprob: -7.550203800201416
    7. '    ' → logprob: -7.800203800201416
    8. ' ' → logprob: -8.175203323364258
    9. '():' → logprob: -8.425203323364258
    10. '\n' → logprob: -8.675203323364258

Token 9: ' n' (ID: 297)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5384373664855957
    2. ' ' → logprob: -1.1634373664855957
    3. '   ' → logprob: -2.7884373664855957
    4. '\' → logprob: -4.913437366485596
    5. '\n' → logprob: -4.913437366485596
    6. 'print' → logprob: -5.663437366485596
    7. '     
' → logprob: -5.663437366485596
    8. '    
' → logprob: -5.788437366485596
    9. '(' → logprob: -6.038437366485596
    10. ' 
' → logprob: -6.288437366485596

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5630402565002441
    2. '=' → logprob: -1.0630402565002441
    3. ' ' → logprob: -3.563040256500244
    4. '   ' → logprob: -3.938040256500244
    5. '.' → logprob: -4.688040256500244
    6. 'u' → logprob: -5.063040256500244
    7. '_' → logprob: -5.563040256500244
    8. ':' → logprob: -5.688040256500244
    9. '  ' → logprob: -5.813040256500244
    10. '    ' → logprob: -6.188040256500244

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.104759581387043
    2. ' ' → logprob: -2.479759693145752
    3. 'int' → logprob: -4.479759693145752
    4. '10' → logprob: -6.354759693145752
    5. ' input' → logprob: -6.479759693145752
    6. '5' → logprob: -7.979759693145752
    7. '20' → logprob: -8.354759216308594
    8. 'input' → logprob: -8.479759216308594
    9. '=int' → logprob: -9.479759216308594
    10. '0' → logprob: -9.604759216308594

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '('' → logprob: -10.500067710876465
    3. '()' → logprob: -11.875067710876465
    4. ' (' → logprob: -12.000067710876465
    5. ''' → logprob: -12.250067710876465
    6. '(n' → logprob: -12.500067710876465
    7. '```' → logprob: -12.500067710876465
    8. '(input' → logprob: -13.125067710876465
    9. '(
' → logprob: -13.250067710876465
    10. '("("' → logprob: -13.500067710876465

Token 13: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.539996862411499
    2. ')' → logprob: -1.164996862411499
    3. '()' → logprob: -2.414996862411499
    4. '())' → logprob: -4.289997100830078
    5. '('' → logprob: -6.539997100830078
    6. '(
' → logprob: -8.414997100830078
    7. '')' → logprob: -8.789997100830078
    8. '))' → logprob: -9.289997100830078
    9. '(

' → logprob: -9.664997100830078
    10. '(""))' → logprob: -10.164997100830078

Token 14: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8499798774719238
    2. '   ' → logprob: -1.8499798774719238
    3. 'for' → logprob: -2.349979877471924
    4. '\' → logprob: -2.599979877471924
    5. ''' → logprob: -2.974979877471924
    6. '\n' → logprob: -2.974979877471924
    7. ' ' → logprob: -4.099979877471924
    8. '<|end|>' → logprob: -4.224979877471924
    9. '[' → logprob: -4.349979877471924
    10. '```' → logprob: -4.599979877471924

Token 15: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1171247959136963
    2. '   ' → logprob: -1.4921247959136963
    3. ')' → logprob: -1.9921247959136963
    4. 's' → logprob: -2.8671247959136963
    5. ''' → logprob: -3.3671247959136963
    6. ' for' → logprob: -3.4921247959136963
    7. '[' → logprob: -3.4921247959136963
    8. ' ' → logprob: -3.4921247959136963
    9. '\' → logprob: -3.8671247959136963
    10. 'if' → logprob: -4.242124557495117

Token 16: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11395664513111115
    2. ' i' → logprob: -2.2389566898345947
    3. '  ' → logprob: -7.238956451416016
    4. ' n' → logprob: -8.113956451416016
    5. ' space' → logprob: -9.988956451416016
    6. ' range' → logprob: -9.988956451416016
    7. 'i' → logprob: -12.113956451416016
    8. ' ‌' → logprob: -12.988956451416016
    9. ' I' → logprob: -13.113956451416016
    10. ' a' → logprob: -13.238956451416016

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.044331345707178116
    2. 'in' → logprob: -3.5443313121795654
    3. 'n' → logprob: -4.7943315505981445
    4. ' ' → logprob: -5.6693315505981445
    5. ' n' → logprob: -6.6693315505981445
    6. '  ' → logprob: -6.7943315505981445
    7. ' i' → logprob: -9.169331550598145
    8. '_' → logprob: -9.544331550598145
    9. '   ' → logprob: -10.169331550598145
    10. ')' → logprob: -10.669331550598145

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038053084164857864
    2. 'range' → logprob: -3.288053035736084
    3. ' ' → logprob: -11.663053512573242
    4. '	range' → logprob: -13.288053512573242
    5. '(range' → logprob: -15.288053512573242
    6. '```' → logprob: -15.413053512573242
    7. '_range' → logprob: -15.913053512573242
    8. '_' → logprob: -15.913053512573242
    9. ' xrange' → logprob: -16.163053512573242
    10. ' in' → logprob: -16.538053512573242

Token 19: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005341081880033016
    2. '(n' → logprob: -5.255341053009033
    3. ' (' → logprob: -9.255341529846191
    4. '(i' → logprob: -12.005341529846191
    5. '(range' → logprob: -12.880341529846191
    6. '(len' → logprob: -13.380341529846191
    7. '((' → logprob: -14.630341529846191
    8. ' ' → logprob: -15.255341529846191
    9. '(
' → logprob: -15.380341529846191
    10. '(`' → logprob: -16.630340576171875

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010562312789261341
    2. ')' → logprob: -4.635562419891357
    3. '+' → logprob: -7.635562419891357
    4. ' ):' → logprob: -9.0105619430542
    5. ':' → logprob: -9.7605619430542
    6. '   ' → logprob: -10.1355619430542
    7. ',' → logprob: -10.2605619430542
    8. '**' → logprob: -11.0105619430542
    9. '):
' → logprob: -11.3855619430542
    10. ' ' → logprob: -11.5105619430542

Token 21: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9860312938690186
    2. '   ' → logprob: -0.9860312938690186
    3. '       ' → logprob: -1.7360312938690186
    4. ''' → logprob: -4.236031532287598
    5. '     
' → logprob: -4.486031532287598
    6. '    
' → logprob: -4.611031532287598
    7. ' ' → logprob: -4.736031532287598
    8. '\' → logprob: -4.986031532287598
    9. '"' → logprob: -5.611031532287598
    10. '(' → logprob: -5.736031532287598

Token 22: ' u' (ID: 337)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8077597618103027
    2. '   ' → logprob: -1.4327597618103027
    3. ' input' → logprob: -2.5577597618103027
    4. ' ' → logprob: -2.9327597618103027
    5. 'print' → logprob: -3.0577597618103027
    6. '    ' → logprob: -3.0577597618103027
    7. ' line' → logprob: -3.5577597618103027
    8. 'input' → logprob: -4.182759761810303
    9. 'line' → logprob: -4.557759761810303
    10. ' lines' → logprob: -5.807759761810303

Token 23: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.734393298625946
    2. 'p' → logprob: -0.859393298625946
    3. 'ser' → logprob: -3.609393358230591
    4. ' =' → logprob: -3.859393358230591
    5. '   ' → logprob: -4.109393119812012
    6. 'input' → logprob: -4.484393119812012
    7. 'sr' → logprob: -4.984393119812012
    8. 'r' → logprob: -5.484393119812012
    9. '=' → logprob: -6.609393119812012
    10. 'n' → logprob: -6.734393119812012

Token 24: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5788230299949646
    2. ' ' → logprob: -1.4538230895996094
    3. ' v' → logprob: -1.7038230895996094
    4. '"' → logprob: -4.828823089599609
    5. 's' → logprob: -5.203823089599609
    6. ' =' → logprob: -6.578823089599609
    7. 'p' → logprob: -6.703823089599609
    8. 'm' → logprob: -6.703823089599609
    9. ''' → logprob: -6.828823089599609
    10. 'u' → logprob: -7.203823089599609

Token 25: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14632084965705872
    2. '=' → logprob: -2.0213208198547363
    3. ',' → logprob: -5.646320819854736
    4. ')' → logprob: -10.021321296691895
    5. ' ' → logprob: -10.396321296691895
    6. ' ,' → logprob: -10.896321296691895
    7. '   ' → logprob: -12.646321296691895
    8. '  ' → logprob: -12.771321296691895
    9. '    ' → logprob: -13.146321296691895
    10. '=input' → logprob: -14.021321296691895

Token 26: ' *' (ID: 425)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0084229707717896
    2. 'm' → logprob: -2.2584228515625
    3. ' ' → logprob: -2.3834228515625
    4. ' =' → logprob: -2.5084228515625
    5. 's' → logprob: -2.6334228515625
    6. '=' → logprob: -3.0084228515625
    7. ' v' → logprob: -3.3834228515625
    8. 'p' → logprob: -3.5084228515625
    9. 'l' → logprob: -3.8834228515625
    10. 'b' → logprob: -3.8834228515625

Token 27: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1988183706998825
    2. 'a' → logprob: -3.0738184452056885
    3. 's' → logprob: -3.1988184452056885
    4. 'm' → logprob: -4.198818206787109
    5. 'l' → logprob: -4.573818206787109
    6. 'p' → logprob: -4.698818206787109
    7. '_' → logprob: -4.698818206787109
    8. 'd' → logprob: -4.823818206787109
    9. 'r' → logprob: -4.948818206787109
    10. 'c' → logprob: -5.073818206787109

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133096396923065
    2. '=' → logprob: -1.313309669494629
    3. ',' → logprob: -10.813309669494629
    4. ' ' → logprob: -11.313309669494629
    5. 's' → logprob: -11.688309669494629
    6. ')' → logprob: -13.688309669494629
    7. '  ' → logprob: -13.813309669494629
    8. '   ' → logprob: -13.938309669494629
    9. '=input' → logprob: -14.063309669494629
    10. ' =
' → logprob: -14.438309669494629

Token 29: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5925455093383789
    2. ' map' → logprob: -0.8425455093383789
    3. 'input' → logprob: -4.342545509338379
    4. ' input' → logprob: -5.717545509338379
    5. ' ' → logprob: -8.967545509338379
    6. '   ' → logprob: -10.842545509338379
    7. '  ' → logprob: -12.092545509338379
    8. 'list' → logprob: -12.342545509338379
    9. '(map' → logprob: -12.467545509338379
    10. '	map' → logprob: -12.467545509338379

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05468015745282173
    2. '(' → logprob: -3.429680109024048
    3. '(str' → logprob: -4.554680347442627
    4. '<|end|>' → logprob: -5.429680347442627
    5. '(lambda' → logprob: -5.554680347442627
    6. '(input' → logprob: -6.804680347442627
    7. '()' → logprob: -8.679679870605469
    8. '(eval' → logprob: -8.679679870605469
    9. '[int' → logprob: -9.429679870605469
    10. '<int' → logprob: -9.804679870605469

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08272801339626312
    2. ',input' → logprob: -2.7077279090881348
    3. ',' → logprob: -4.457727909088135
    4. '(' → logprob: -7.832727909088135
    5. ')' → logprob: -8.082728385925293
    6. 'input' → logprob: -8.207728385925293
    7. ' input' → logprob: -10.332728385925293
    8. ' (' → logprob: -10.582728385925293
    9. ' ,' → logprob: -10.832728385925293
    10. '   ' → logprob: -10.957728385925293

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023267842829227448
    2. ' input' → logprob: -3.7732677459716797
    3. '   ' → logprob: -10.89826774597168
    4. ')' → logprob: -13.39826774597168
    5. ',input' → logprob: -13.77326774597168
    6. '(input' → logprob: -14.77326774597168
    7. '	input' → logprob: -15.27326774597168
    8. '=input' → logprob: -15.64826774597168
    9. '_input' → logprob: -15.77326774597168
    10. '[input' → logprob: -16.14826774597168

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.692145012086257e-05
    2. '()' → logprob: -10.000046730041504
    3. ' ().' → logprob: -14.500046730041504
    4. '())' → logprob: -14.625046730041504
    5. ')' → logprob: -14.750046730041504
    6. '()
' → logprob: -17.25004768371582
    7. '().__' → logprob: -17.62504768371582
    8. '(' → logprob: -18.37504768371582
    9. '.' → logprob: -19.00004768371582
    10. '()[' → logprob: -19.12504768371582

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0017359900521114469
    2. 'strip' → logprob: -6.376736164093018
    3. 'rstrip' → logprob: -11.00173568725586
    4. ' split' → logprob: -11.50173568725586
    5. ')' → logprob: -12.37673568725586
    6. '(split' → logprob: -14.37673568725586
    7. 'spl' → logprob: -14.50173568725586
    8. ' ' → logprob: -14.62673568725586
    9. 's' → logprob: -15.12673568725586
    10. 'read' → logprob: -15.25173568725586

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003624308155849576
    2. '()' → logprob: -6.503624439239502
    3. '()))' → logprob: -6.878624439239502
    4. ')' → logprob: -7.003624439239502
    5. '())
' → logprob: -9.003623962402344
    6. '(' → logprob: -11.003623962402344
    7. '('' → logprob: -11.253623962402344
    8. '))' → logprob: -11.503623962402344
    9. ' ())' → logprob: -11.753623962402344
    10. '())

' → logprob: -13.503623962402344

Token 36: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26008957624435425
    2. '   ' → logprob: -2.385089635848999
    3. ')' → logprob: -3.135089635848999
    4. '       ' → logprob: -3.260089635848999
    5. '<|end|>' → logprob: -4.26008939743042
    6. '[' → logprob: -4.38508939743042
    7. ',' → logprob: -4.76008939743042
    8. '.' → logprob: -5.51008939743042
    9. '#' → logprob: -6.26008939743042
    10. '[]' → logprob: -6.51008939743042

Token 37: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7059434652328491
    2. ' if' → logprob: -1.8309434652328491
    3. 'if' → logprob: -2.2059435844421387
    4. '   ' → logprob: -2.4559435844421387
    5. 'u' → logprob: -3.8309435844421387
    6. 'v' → logprob: -4.205943584442139
    7. ':' → logprob: -4.455943584442139
    8. '        ' → logprob: -4.455943584442139
    9. '[' → logprob: -4.455943584442139
    10. ' ' → logprob: -4.580943584442139

Token 38: ' =' (ID: 314)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.09133279323577881
    2. 'pp' → logprob: -3.7163329124450684
    3. '[' → logprob: -3.8413329124450684
    4. 'rray' → logprob: -4.341332912445068
    5. '[v' → logprob: -5.591332912445068
    6. 'p' → logprob: -5.966332912445068
    7. '[p' → logprob: -6.091332912445068
    8. 'rr' → logprob: -6.091332912445068
    9. ' =' → logprob: -6.091332912445068
    10. 'dd' → logprob: -6.216332912445068

Token 39: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2200045585632324
    2. '[u' → logprob: -1.7200045585632324
    3. '[v' → logprob: -1.7200045585632324
    4. '[' → logprob: -2.2200045585632324
    5. '[k' → logprob: -2.7200045585632324
    6. 'v' → logprob: -2.8450045585632324
    7. '[]' → logprob: -2.9700045585632324
    8. ' v' → logprob: -3.7200045585632324
    9. 'u' → logprob: -4.095004558563232
    10. ' u' → logprob: -4.970004558563232

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003240578342229128
    2. 'u' → logprob: -6.878240585327148
    3. ' ' → logprob: -7.878240585327148
    4. '[u' → logprob: -8.003240585327148
    5. '[' → logprob: -8.128240585327148
    6. '1' → logprob: -8.378240585327148
    7. 'k' → logprob: -8.503240585327148
    8. 'int' → logprob: -9.128240585327148
    9. '   ' → logprob: -9.128240585327148
    10. 'v' → logprob: -9.253240585327148

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02197815664112568
    2. ']*' → logprob: -3.8969781398773193
    3. ']*(' → logprob: -6.646978378295898
    4. ',' → logprob: -9.521978378295898
    5. ' ]' → logprob: -10.896978378295898
    6. ' for' → logprob: -11.021978378295898
    7. ']+' → logprob: -11.021978378295898
    8. 'for' → logprob: -12.021978378295898
    9. ')]' → logprob: -12.896978378295898
    10. '   ' → logprob: -13.896978378295898

Token 42: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1893091201782227
    2. ',' → logprob: -2.0643091201782227
    3. ' *' → logprob: -2.3143091201782227
    4. '*' → logprob: -2.3143091201782227
    5. ' for' → logprob: -2.3143091201782227
    6. '+' → logprob: -2.8143091201782227
    7. '0' → logprob: -3.3143091201782227
    8. '[' → logprob: -3.3143091201782227
    9. '<|end|>' → logprob: -3.5643091201782227
    10. 'for' → logprob: -3.6893091201782227

Token 43: ' n' (ID: 297)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6574281454086304
    2. '(' → logprob: -1.7824281454086304
    3. '(u' → logprob: -1.7824281454086304
    4. '100' → logprob: -2.53242826461792
    5. 'k' → logprob: -3.65742826461792
    6. '101' → logprob: -4.40742826461792
    7. '10' → logprob: -5.40742826461792
    8. '51' → logprob: -5.65742826461792
    9. 'u' → logprob: -5.65742826461792
    10. '(v' → logprob: -6.28242826461792

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09180913120508194
    2. '   ' → logprob: -3.091809034347534
    3. '       ' → logprob: -4.216809272766113
    4. 'u' → logprob: -4.216809272766113
    5. 'v' → logprob: -5.841809272766113
    6. ' a' → logprob: -6.216809272766113
    7. 'if' → logprob: -6.466809272766113
    8. '```' → logprob: -6.841809272766113
    9. '<|end|>' → logprob: -7.091809272766113
    10. ' ' → logprob: -7.216809272766113

Token 47: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.19451270997524261
    2. 'j' → logprob: -2.1945126056671143
    3. ' _' → logprob: -3.4445126056671143
    4. '_' → logprob: -3.6945126056671143
    5. ' k' → logprob: -6.069512844085693
    6. ' v' → logprob: -6.319512844085693
    7. ' ' → logprob: -6.819512844085693
    8. '_j' → logprob: -7.194512844085693
    9. ' u' → logprob: -7.319512844085693
    10. 'v' → logprob: -7.819512844085693

Token 48: '_v' (ID: 5390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022100020200014114
    2. 'in' → logprob: -3.8970999717712402
    3. ' ' → logprob: -6.77209997177124
    4. '+' → logprob: -9.772100448608398
    5. ')' → logprob: -9.897100448608398
    6. '[' → logprob: -10.147100448608398
    7. '<|end|>' → logprob: -10.397100448608398
    8. ',' → logprob: -10.522100448608398
    9. 'u' → logprob: -10.647100448608398
    10. '_' → logprob: -10.772100448608398

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12008408457040787
    2. 'in' → logprob: -2.870084047317505
    3. 'n' → logprob: -2.995084047317505
    4. ')' → logprob: -6.370084285736084
    5. '_' → logprob: -6.745084285736084
    6. ',' → logprob: -7.245084285736084
    7. ']' → logprob: -7.245084285736084
    8. '[' → logprob: -7.495084285736084
    9. ' ' → logprob: -7.870084285736084
    10. 'v' → logprob: -7.995084285736084

Token 50: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9717108607292175
    2. ' range' → logprob: -1.0967109203338623
    3. ' v' → logprob: -1.3467109203338623
    4. 'range' → logprob: -3.5967109203338623
    5. 'k' → logprob: -10.221711158752441
    6. ' k' → logprob: -10.721711158752441
    7. ' ' → logprob: -11.846711158752441
    8. '	v' → logprob: -12.346711158752441
    9. '(range' → logprob: -12.346711158752441
    10. '	range' → logprob: -12.971711158752441

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005349259357899427
    2. ' in' → logprob: -6.005349159240723
    3. ':
' → logprob: -7.130349159240723
    4. 'in' → logprob: -7.255349159240723
    5. ' :' → logprob: -7.505349159240723
    6. '   ' → logprob: -8.630349159240723
    7. '):' → logprob: -8.755349159240723
    8. '       ' → logprob: -9.380349159240723
    9. '[' → logprob: -9.505349159240723
    10. '<|end|>' → logprob: -9.755349159240723

Token 52: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6001847386360168
    2. '       ' → logprob: -1.850184679031372
    3. '   ' → logprob: -2.975184679031372
    4. '[' → logprob: -2.975184679031372
    5. '           ' → logprob: -3.100184679031372
    6. '<|end|>' → logprob: -3.350184679031372
    7. ' ' → logprob: -3.475184679031372
    8. '    ' → logprob: -3.600184679031372
    9. ' :' → logprob: -4.475184917449951
    10. ' 
' → logprob: -5.350184917449951

Token 53: ' index' (ID: 3472)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.35614529252052307
    2. 'a' → logprob: -1.2311452627182007
    3. '           ' → logprob: -5.85614538192749
    4. '   ' → logprob: -5.98114538192749
    5. '       ' → logprob: -6.85614538192749
    6. ' if' → logprob: -7.60614538192749
    7. ' ' → logprob: -8.481144905090332
    8. '    ' → logprob: -8.606144905090332
    9. 'u' → logprob: -9.731144905090332
    10. 's' → logprob: -10.106144905090332

Token 54: '_v' (ID: 5390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2640959322452545
    2. '[' → logprob: -2.3890960216522217
    3. '=' → logprob: -2.6390960216522217
    4. ' ' → logprob: -3.7640960216522217
    5. '[a' → logprob: -4.139095783233643
    6. ']' → logprob: -4.639095783233643
    7. ' +=' → logprob: -5.264095783233643
    8. 'a' → logprob: -5.889095783233643
    9. '[index' → logprob: -6.264095783233643
    10. '   ' → logprob: -6.389095783233643

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15673089027404785
    2. '=' → logprob: -2.656730890274048
    3. ' +=' → logprob: -3.281730890274048
    4. ']' → logprob: -4.281730651855469
    5. ' ' → logprob: -4.656730651855469
    6. '+=' → logprob: -5.531730651855469
    7. '+' → logprob: -5.656730651855469
    8. '[' → logprob: -5.781730651855469
    9. ',' → logprob: -7.281730651855469
    10. ' +' → logprob: -7.531730651855469

Token 56: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4320885241031647
    2. ' i' → logprob: -1.0570884943008423
    3. 'u' → logprob: -6.432088375091553
    4. ' u' → logprob: -6.807088375091553
    5. 'k' → logprob: -9.057088851928711
    6. '   ' → logprob: -9.057088851928711
    7. 'a' → logprob: -9.182088851928711
    8. 'n' → logprob: -9.432088851928711
    9. ' a' → logprob: -10.307088851928711
    10. 'v' → logprob: -10.307088851928711

Token 57: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0020134560763835907
    2. 'v' → logprob: -6.502013683319092
    3. '-' → logprob: -8.502013206481934
    4. '-v' → logprob: -9.377013206481934
    5. '_' → logprob: -10.002013206481934
    6. '+' → logprob: -10.627013206481934
    7. 'n' → logprob: -11.127013206481934
    8. ' -' → logprob: -11.314513206481934
    9. ' _' → logprob: -11.439513206481934
    10. ' +' → logprob: -11.439513206481934

Token 58: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31842711567878723
    2. '-' → logprob: -1.3184270858764648
    3. ' ' → logprob: -5.443427085876465
    4. '   ' → logprob: -8.443427085876465
    5. '       ' → logprob: -8.568427085876465
    6. '<|end|>' → logprob: -9.193427085876465
    7. '[' → logprob: -9.318427085876465
    8. '  ' → logprob: -10.193427085876465
    9. '1' → logprob: -10.568427085876465
    10. '           ' → logprob: -10.818427085876465

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018149138486478478
    2. ' ' → logprob: -8.625181198120117
    3. '2' → logprob: -14.937681198120117
    4. '   ' → logprob: -15.125181198120117
    5. '<|end|>' → logprob: -15.375181198120117
    6. '>' → logprob: -16.187681198120117
    7. 'a' → logprob: -16.625181198120117
    8. '```' → logprob: -16.812681198120117
    9. '  ' → logprob: -16.875181198120117
    10. '...' → logprob: -17.062681198120117

Token 60: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018929407000541687
    2. ' ]' → logprob: -4.393929481506348
    3. ']
' → logprob: -5.643929481506348
    4. '<|end|>' → logprob: -6.518929481506348
    5. '
' → logprob: -7.143929481506348
    6. ' ' → logprob: -8.268929481506348
    7. '       ' → logprob: -9.393929481506348
    8. ' ]
' → logprob: -9.768929481506348
    9. ')' → logprob: -10.143929481506348
    10. ' 
' → logprob: -10.518929481506348

Token 61: '           ' (ID: 352)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008957026526331902
    2. ']
' → logprob: -5.6339569091796875
    3. ' ]' → logprob: -6.2589569091796875
    4. '       ' → logprob: -6.2589569091796875
    5. '<|end|>' → logprob: -6.8839569091796875
    6. '           ' → logprob: -9.133956909179688
    7. '
' → logprob: -9.383956909179688
    8. ' ' → logprob: -9.383956909179688
    9. '   ' → logprob: -10.383956909179688
    10. ')' → logprob: -10.633956909179688

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5994443893432617
    2. ']' → logprob: -1.5994443893432617
    3. ' a' → logprob: -1.5994443893432617
    4. ' ' → logprob: -3.5994443893432617
    5. ' ]' → logprob: -4.849444389343262
    6. '           ' → logprob: -4.974444389343262
    7. '   ' → logprob: -6.599444389343262
    8. '       ' → logprob: -6.974444389343262
    9. '>' → logprob: -7.974444389343262
    10. '<|end|>' → logprob: -7.974444389343262

Token 63: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0010457895696163177
    2. '[' → logprob: -6.8760457038879395
    3. '[ind' → logprob: -12.751046180725098
    4. ' [' → logprob: -12.876046180725098
    5. '```' → logprob: -13.626046180725098
    6. '[Index' → logprob: -13.751046180725098
    7. 'index' → logprob: -14.001046180725098
    8. '[int' → logprob: -14.501046180725098
    9. '[idx' → logprob: -14.626046180725098
    10. '[i' → logprob: -15.001046180725098

Token 64: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -8.566264295950532e-05
    2. '_' → logprob: -10.125085830688477
    3. ']' → logprob: -10.375085830688477
    4. '_u' → logprob: -13.000085830688477
    5. ']_' → logprob: -13.250085830688477
    6. ' _' → logprob: -13.625085830688477
    7. '_]' → logprob: -13.625085830688477
    8. 'v' → logprob: -13.750085830688477
    9. 's' → logprob: -13.750085830688477
    10. '_a' → logprob: -13.875085830688477

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009555147960782051
    2. ']+=' → logprob: -4.759555339813232
    3. ' ]' → logprob: -8.009554862976074
    4. ']=' → logprob: -8.134554862976074
    5. '=' → logprob: -8.884554862976074
    6. '+=' → logprob: -9.509554862976074
    7. ' +=' → logprob: -9.884554862976074
    8. ')' → logprob: -10.509554862976074
    9. '+' → logprob: -11.509554862976074
    10. ' =' → logprob: -12.384554862976074

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12219202518463135
    2. '+=' → logprob: -2.247191905975342
    3. ' +=' → logprob: -5.372191905975342
    4. ' =' → logprob: -5.372191905975342
    5. ']+=' → logprob: -11.1221923828125
    6. '+' → logprob: -11.3721923828125
    7. ' ^=' → logprob: -12.9971923828125
    8. '=True' → logprob: -13.1221923828125
    9. ' |=' → logprob: -13.3721923828125
    10. ' ' → logprob: -13.4971923828125

Token 67: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4040677547454834
    2. '1' → logprob: -1.1540677547454834
    3. ' k' → logprob: -4.4040679931640625
    4. ' ' → logprob: -5.7790679931640625
    5. 'u' → logprob: -6.6540679931640625
    6. ' u' → logprob: -8.904067993164062
    7. '   ' → logprob: -9.654067993164062
    8. '-' → logprob: -10.654067993164062
    9. '0' → logprob: -10.716567993164062
    10. 'a' → logprob: -10.779067993164062

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5810635685920715
    2. 'k' → logprob: -0.8310635685920715
    3. 'u' → logprob: -5.331063747406006
    4. 'i' → logprob: -9.581063270568848
    5. ' ' → logprob: -9.956063270568848
    6. ' k' → logprob: -10.081063270568848
    7. '-' → logprob: -10.831063270568848
    8. '(' → logprob: -11.206063270568848
    9. '2' → logprob: -11.581063270568848
    10. 'max' → logprob: -11.706063270568848

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18136318027973175
    2. '<|end|>' → logprob: -2.556363105773926
    3. '   ' → logprob: -2.931363105773926
    4. ' ' → logprob: -4.806363105773926
    5. '
' → logprob: -4.931363105773926
    6. ' if' → logprob: -5.056363105773926
    7. 'print' (adapté à ' print') → logprob: -5.556363105773926
    8. ')' → logprob: -6.181363105773926
    9. '  ' → logprob: -7.181363105773926
    10. '        
' → logprob: -7.181363105773926

Token 72: '(*' (ID: 9000)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.8244232535362244
    2. '(a' → logprob: -1.0744233131408691
    3. '(' → logprob: -1.6994233131408691
    4. '('' → logprob: -3.949423313140869
    5. '(*' → logprob: -5.199423313140869
    6. '(max' → logprob: -5.449423313140869
    7. '(len' → logprob: -5.824423313140869
    8. '()' → logprob: -6.449423313140869
    9. '("' → logprob: -6.824423313140869
    10. '(u' → logprob: -6.949423313140869

Token 73: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.060365608893335e-05
    2. ' a' → logprob: -10.125041007995605
    3. '[a' → logprob: -15.125041007995605
    4. '(a' → logprob: -15.750041007995605
    5. ')a' → logprob: -17.12504005432129
    6. ')' → logprob: -17.12504005432129
    7. '	a' → logprob: -18.62504005432129
    8. '[' → logprob: -18.75004005432129
    9. '   ' → logprob: -19.50004005432129
    10. 'u' → logprob: -19.62504005432129

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -14.125001907348633
    3. ')`' → logprob: -14.125001907348633
    4. '`)' → logprob: -14.625001907348633
    5. ')
' → logprob: -15.375001907348633
    6. ' )' → logprob: -17.000001907348633
    7. '')' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.750001907348633
    9. ')**' → logprob: -18.250001907348633
    10. '")' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 34.72%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 76.39%
================================================================================
