================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input()
print(sum([int(x) for x in input().split()]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 2: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 3: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.196732960641384e-05
    2. '()' → logprob: -10.250082015991211
    3. ')' → logprob: -11.375082015991211
    4. '.' → logprob: -11.750082015991211
    5. '```' → logprob: -12.125082015991211
    6. '(
' → logprob: -12.375082015991211
    7. ' (' → logprob: -12.375082015991211
    8. '('' → logprob: -12.500082015991211
    9. '("("' → logprob: -13.000082015991211
    10. '(`' → logprob: -13.125082015991211

Token 4: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00473022973164916
    2. '()' → logprob: -5.504730224609375
    3. ')' → logprob: -8.129730224609375
    4. '(
' → logprob: -9.254730224609375
    5. '(int' → logprob: -10.004730224609375
    6. '(range' → logprob: -10.379730224609375
    7. '(input' → logprob: -10.504730224609375
    8. '())' → logprob: -10.504730224609375
    9. '(data' → logprob: -10.879730224609375
    10. '((' → logprob: -11.004730224609375

Token 5: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01846678927540779
    2. ' int' → logprob: -4.018466949462891
    3. 'map' → logprob: -9.39346694946289
    4. '1' → logprob: -9.51846694946289
    5. '(int' → logprob: -9.51846694946289
    6. ' map' → logprob: -10.76846694946289
    7. '[int' → logprob: -11.14346694946289
    8. 'i' → logprob: -11.26846694946289
    9. '   ' → logprob: -12.14346694946289
    10. ' ' → logprob: -12.14346694946289

Token 6: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0713891983032227
    2. '(x' → logprob: -1.0713891983032227
    3. '(input' → logprob: -1.6963891983032227
    4. '(i' → logprob: -2.0713891983032227
    5. '(num' → logprob: -5.946389198303223
    6. '(a' → logprob: -6.446389198303223
    7. '(s' → logprob: -8.071389198303223
    8. '(n' → logprob: -8.446389198303223
    9. '(char' → logprob: -8.446389198303223
    10. '(token' → logprob: -8.821389198303223

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025363059248775244
    2. ')])' → logprob: -6.627536296844482
    3. '(x' → logprob: -6.877536296844482
    4. ')x' → logprob: -10.00253677368164
    5. '')' → logprob: -10.50253677368164
    6. ' )' → logprob: -11.00253677368164
    7. 'for' → logprob: -11.37753677368164
    8. ')**' → logprob: -11.75253677368164
    9. '(input' → logprob: -11.75253677368164
    10. 'input' → logprob: -12.00253677368164

Token 8: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.45101532340049744
    2. ')' → logprob: -1.3260153532028198
    3. 'for' → logprob: -2.9510152339935303
    4. ' for' → logprob: -3.7010152339935303
    5. ')])' → logprob: -4.826015472412109
    6. '(' → logprob: -5.451015472412109
    7. '))' → logprob: -5.826015472412109
    8. '(input' → logprob: -5.951015472412109
    9. '])' → logprob: -7.451015472412109
    10. 'x' → logprob: -7.701015472412109

Token 9: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04395129904150963
    2. 'input' → logprob: -3.1689512729644775
    3. ' ' → logprob: -7.418951511383057
    4. ' x' → logprob: -8.293951034545898
    5. ' user' → logprob: -9.918951034545898
    6. '(input' → logprob: -10.793951034545898
    7. 'x' → logprob: -11.918951034545898
    8. ' range' → logprob: -12.668951034545898
    9. 'user' → logprob: -12.918951034545898
    10. '=input' → logprob: -13.043951034545898

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08508015424013138
    2. 'in' → logprob: -3.585080146789551
    3. '(input' → logprob: -3.710080146789551
    4. 'input' → logprob: -3.960080146789551
    5. ' input' → logprob: -5.335080146789551
    6. '(' → logprob: -5.585080146789551
    7. '=input' → logprob: -7.210080146789551
    8. ' ' → logprob: -8.58508014678955
    9. ')' → logprob: -8.83508014678955
    10. '(x' → logprob: -9.21008014678955

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.034042250365018845
    2. ' input' → logprob: -3.4090423583984375
    3. 'list' → logprob: -8.284042358398438
    4. '(input' → logprob: -9.659042358398438
    5. 'str' → logprob: -10.534042358398438
    6. ' list' → logprob: -10.784042358398438
    7. ' ' → logprob: -11.909042358398438
    8. ' str' → logprob: -12.409042358398438
    9. '_' → logprob: -12.784042358398438
    10. 'user' → logprob: -13.034042358398438

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.47582030296325684
    2. '()' → logprob: -0.9758203029632568
    3. '())' → logprob: -6.975820541381836
    4. '()))' → logprob: -8.725820541381836
    5. ']))' → logprob: -8.975820541381836
    6. '())))' → logprob: -9.475820541381836
    7. '()][' → logprob: -9.475820541381836
    8. '().' → logprob: -9.600820541381836
    9. ']()' → logprob: -9.850820541381836
    10. '(' → logprob: -9.975820541381836

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011855880729854107
    2. 'strip' → logprob: -6.751185417175293
    3. 'rstrip' → logprob: -11.126185417175293
    4. ' split' → logprob: -14.251185417175293
    5. 'spl' → logprob: -18.00118637084961
    6. '(split' → logprob: -18.00118637084961
    7. '.split' → logprob: -18.25118637084961
    8. 'replace' → logprob: -18.25118637084961
    9. 's' → logprob: -18.37618637084961
    10. 'plit' → logprob: -18.50118637084961

Token 14: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6690919399261475
    2. '()]' → logprob: -0.9190919399261475
    3. ']))' → logprob: -2.5440919399261475
    4. '(' → logprob: -6.044092178344727
    5. '()))' → logprob: -6.169092178344727
    6. '])' → logprob: -6.294092178344727
    7. ']' → logprob: -6.794092178344727
    8. '']))' → logprob: -7.044092178344727
    9. '())' → logprob: -7.419092178344727
    10. ')])' → logprob: -7.669092178344727

Token 15: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.013526875525712967
    2. '])' → logprob: -4.388526916503906
    3. ']' → logprob: -7.888526916503906
    4. '))' → logprob: -8.013526916503906
    5. ')])' → logprob: -8.888526916503906
    6. ')' → logprob: -9.388526916503906
    7. ')]' → logprob: -10.263526916503906
    8. '']))' → logprob: -10.638526916503906
    9. ']))
' → logprob: -11.388526916503906
    10. '])))' → logprob: -12.013526916503906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 13
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 11
Précision stricte (1ère position): 46.15%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 84.62%
================================================================================
