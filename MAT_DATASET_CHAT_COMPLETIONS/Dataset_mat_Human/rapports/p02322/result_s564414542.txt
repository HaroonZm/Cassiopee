================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!python3

iim = lambda: map(int, input().rstrip().split())
from heapq import heappush, heappop

def resolve():
    N, W = iim()
    S = [list(iim()) for i in range(N)]

    def f1(v, w, m):
        mm = []
        i = 1
        while i <= m:
            yield i
            m -= i
            i <<= 1

        if m:
            yield m
    SS = list(sorted(((v*i, w*i) for v, w, m in S for i in f1(v, w, m)), key=lambda x: (x[0]/x[1], x[1]), reverse=True))
    NN = len(SS)

    def ubound(v, w, i):
        for j in range(i, NN):
            vj, wj = SS[j]

            if w + wj > W:
                return (-v, -v - (W - w) * vj / wj)

            w += wj
            v += vj

        return (-v, -v)

    u0, u1 =  ubound(0, 0, 0)
    um = u0
    ans = 0

    q = []
    heappush(q, (u1, u0, 0, 0, 0))

    #print(S, NN)
    #print(W, SS)
    while q:
        #print(q)
        uq0, uq1, vq, wq, i = heappop(q)

        if uq0 > um:
            break

        if i >= NN: continue

        vi, wi = SS[i]
        if wq + wi < W:
            heappush(q, (uq0, uq1, vq+vi, wq+wi, i + 1))

        u0, u1 = ubound(vq, wq, i + 1)
        if u1 <= um:
            if u0 < um:
                um = u0
            heappush(q, (u1, u0, vq, wq, i + 1))

    print(-um)

if __name__ == "__main__":
    resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'python' (ID: 29010)
  → Token d'amorce (pas de prédiction)

Token 2: '3' (ID: 18)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5037606954574585
    2. '```' → logprob: -1.7537606954574585
    3. '\n' → logprob: -2.003760814666748
    4. '\' → logprob: -3.503760814666748
    5. ' 
' → logprob: -3.628760814666748
    6. '#!/' → logprob: -4.878760814666748
    7. '  
' → logprob: -5.253760814666748
    8. ' import' → logprob: -5.503760814666748
    9. '
' → logprob: -5.878760814666748
    10. '' → logprob: -6.253760814666748

Token 4: 'i' (ID: 72)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3777025043964386
    2. 'import' → logprob: -1.6277024745941162
    3. ' 
' → logprob: -2.752702474594116
    4. '\' → logprob: -4.002702713012695
    5. '
' → logprob: -4.502702713012695
    6. '' → logprob: -4.877702713012695
    7. '```' → logprob: -5.377702713012695
    8. '  
' → logprob: -5.502702713012695
    9. '#!/' → logprob: -6.127702713012695
    10. ' import' → logprob: -6.127702713012695

Token 5: 'im' (ID: 321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32875359058380127
    2. 'n' → logprob: -1.3287535905838013
    3. '=' → logprob: -4.328753471374512
    4. 'f' → logprob: -6.453753471374512
    5. ' =' → logprob: -8.078753471374512
    6. 'nt' → logprob: -9.078753471374512
    7. 't' → logprob: -10.078753471374512
    8. '#' → logprob: -10.203753471374512
    9. 'mp' → logprob: -10.328753471374512
    10. ' n' → logprob: -10.703753471374512

Token 6: ' =' (ID: 314)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.5427388548851013
    2. '.' → logprob: -0.9177388548851013
    3. 'p' → logprob: -4.792738914489746
    4. 't' → logprob: -5.292738914489746
    5. ' .' → logprob: -6.792738914489746
    6. '=' → logprob: -7.042738914489746
    7. 'plement' → logprob: -7.417738914489746
    8. 'porter' → logprob: -7.667738914489746
    9. 'l' → logprob: -8.292738914489746
    10. ' =' → logprob: -8.292738914489746

Token 7: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7532325983047485
    2. ' []' → logprob: -1.8782325983047485
    3. ' __' → logprob: -2.128232479095459
    4. ' input' → logprob: -2.128232479095459
    5. 'input' → logprob: -2.753232479095459
    6. ' iim' → logprob: -4.128232479095459
    7. '__' → logprob: -4.253232479095459
    8. '[]' → logprob: -4.628232479095459
    9. '1' → logprob: -4.753232479095459
    10. ' [' → logprob: -5.628232479095459

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0027413968928158283
    2. ' ' → logprob: -6.50274133682251
    3. 'x' → logprob: -7.62774133682251
    4. ' s' → logprob: -8.002741813659668
    5. ' i' → logprob: -9.127741813659668
    6. '  ' → logprob: -9.252741813659668
    7. ':' → logprob: -9.752741813659668
    8. ' :' → logprob: -9.752741813659668
    9. ' a' → logprob: -10.127741813659668
    10. ' n' → logprob: -11.002741813659668

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1204919815063477
    2. ' input' → logprob: -1.1204919815063477
    3. 'int' → logprob: -1.4954919815063477
    4. ' int' → logprob: -2.1204919815063477
    5. ' iter' → logprob: -6.495491981506348
    6. '[]' → logprob: -7.870491981506348
    7. ' list' → logprob: -8.245491981506348
    8. '__' → logprob: -8.245491981506348
    9. ' []' → logprob: -8.495491981506348
    10. ' map' → logprob: -8.745491981506348

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07190851122140884
    2. '(' → logprob: -2.821908473968506
    3. '(str' → logprob: -4.696908473968506
    4. '(lambda' → logprob: -7.446908473968506
    5. '(input' → logprob: -9.946908950805664
    6. '(list' → logprob: -10.071908950805664
    7. '<int' → logprob: -10.696908950805664
    8. '(
' → logprob: -10.946908950805664
    9. '<|end|>' → logprob: -11.571908950805664
    10. '[int' → logprob: -11.821908950805664

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018727611750364304
    2. '(' → logprob: -4.268727779388428
    3. 'input' → logprob: -5.893727779388428
    4. ')' → logprob: -6.768727779388428
    5. ' input' → logprob: -9.26872730255127
    6. '<|end|>' → logprob: -9.26872730255127
    7. ',input' → logprob: -9.64372730255127
    8. ' (' → logprob: -10.01872730255127
    9. '(stdin' → logprob: -10.01872730255127
    10. '(open' → logprob: -10.14372730255127

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01604856364428997
    2. ' input' → logprob: -4.141048431396484
    3. '(input' → logprob: -11.891048431396484
    4. 'open' → logprob: -12.766048431396484
    5. ')' → logprob: -13.266048431396484
    6. ' ' → logprob: -14.516048431396484
    7. '=input' → logprob: -14.516048431396484
    8. '	input' → logprob: -14.766048431396484
    9. 'raw' → logprob: -15.016048431396484
    10. '<input' → logprob: -15.141048431396484

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7022971510887146
    2. '())' → logprob: -0.7022971510887146
    3. '(' → logprob: -5.577297210693359
    4. '().' → logprob: -6.577297210693359
    5. '(()' → logprob: -6.827297210693359
    6. '());' → logprob: -6.952297210693359
    7. '();)' → logprob: -7.077297210693359
    8. '()]' → logprob: -8.70229721069336
    9. '('' → logprob: -9.20229721069336
    10. '()`' → logprob: -9.45229721069336

Token 14: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044377794256433845
    2. 'strip' → logprob: -7.750443935394287
    3. ' split' → logprob: -11.875443458557129
    4. 'rstrip' → logprob: -12.250443458557129
    5. '(split' → logprob: -14.000443458557129
    6. ')' → logprob: -15.125443458557129
    7. 'spl' → logprob: -15.625443458557129
    8. 'read' → logprob: -17.625444412231445
    9. 's' → logprob: -18.750444412231445
    10. ' strip' → logprob: -19.000444412231445

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28035449981689453
    2. '('' → logprob: -1.6553544998168945
    3. '()' → logprob: -3.6553544998168945
    4. '())' → logprob: -4.2803544998168945
    5. '(' → logprob: -4.4053544998168945
    6. '("' → logprob: -7.6553544998168945
    7. ' ().' → logprob: -8.530354499816895
    8. ' ()' → logprob: -9.155354499816895
    9. '(()' → logprob: -9.280354499816895
    10. ' ())' → logprob: -9.280354499816895

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. ' split' → logprob: -13.125003814697266
    3. 'rstrip' → logprob: -14.500003814697266
    4. 'spl' → logprob: -15.250003814697266
    5. 'strip' → logprob: -15.375003814697266
    6. ')' → logprob: -15.625003814697266
    7. '(split' → logprob: -16.750003814697266
    8. ' ' → logprob: -17.250003814697266
    9. 's' → logprob: -18.125003814697266
    10. 'plit' → logprob: -18.125003814697266

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010451061651110649
    2. '()' → logprob: -5.385450839996338
    3. ')' → logprob: -6.010450839996338
    4. '()))' → logprob: -6.010450839996338
    5. '(' → logprob: -7.260450839996338
    6. '))' → logprob: -8.885451316833496
    7. ' ())' → logprob: -10.135451316833496
    8. '();)' → logprob: -12.260451316833496
    9. '()]' → logprob: -12.760451316833496
    10. '());' → logprob: -12.885451316833496

Token 18: 'from' (ID: 2845)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03836597502231598
    2. 'n' → logprob: -3.7883660793304443
    3. '(' → logprob: -5.538365840911865
    4. 'for' → logprob: -5.538365840911865
    5. 'x' → logprob: -5.788365840911865
    6. '()' → logprob: -6.913365840911865
    7. '(a' → logprob: -7.413365840911865
    8. '(
' → logprob: -7.663365840911865
    9. 'i' → logprob: -8.288366317749023
    10. 'def' → logprob: -8.538366317749023

Token 19: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00634869234636426
    2. ' collections' → logprob: -5.631348609924316
    3. 'sys' → logprob: -6.006348609924316
    4. ' itertools' → logprob: -9.131348609924316
    5. ' math' → logprob: -9.381348609924316
    6. 'collections' → logprob: -9.631348609924316
    7. ' typing' → logprob: -11.131348609924316
    8. ' functools' → logprob: -12.506348609924316
    9. ' ' → logprob: -13.881348609924316
    10. ' system' → logprob: -13.881348609924316

Token 20: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.017927029868588e-05
    2. 'queue' → logprob: -9.500080108642578
    3. 'import' → logprob: -12.250080108642578
    4. 'ql' → logprob: -16.125080108642578
    5. 'que' → logprob: -16.500080108642578
    6. 'ify' → logprob: -16.625080108642578
    7. 'from' → logprob: -16.750080108642578
    8. 'lib' → logprob: -17.500080108642578
    9. 'qu' → logprob: -17.875080108642578
    10. 'iq' → logprob: -18.000080108642578

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02631562203168869
    2. 'import' → logprob: -3.651315689086914
    3. '	import' → logprob: -11.776315689086914
    4. ' ' → logprob: -12.651315689086914
    5. '_import' → logprob: -12.901315689086914
    6. ' importar' → logprob: -14.526315689086914
    7. '<|end|>' → logprob: -14.651315689086914
    8. ' impor' → logprob: -15.276315689086914
    9. '-import' → logprob: -15.276315689086914
    10. ' imports' → logprob: -15.901315689086914

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0701117143034935
    2. 'heap' → logprob: -2.8201117515563965
    3. ' he' → logprob: -4.8201117515563965
    4. ' heap' → logprob: -10.945111274719238
    5. 'merge' → logprob: -11.445111274719238
    6. 'import' → logprob: -11.695111274719238
    7. 'n' → logprob: -12.445111274719238
    8. '.he' → logprob: -13.320111274719238
    9. 'h' → logprob: -13.820111274719238
    10. 'head' → logprob: -15.320111274719238

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.029753033071756363
    2. 'ap' → logprob: -3.5297529697418213
    3. 'a' → logprob: -13.029752731323242
    4. 'ап' → logprob: -15.279752731323242
    5. 'appen' → logprob: -16.529752731323242
    6. 'aps' → logprob: -17.904752731323242
    7. 'apput' → logprob: -17.904752731323242
    8. '```' → logprob: -17.904752731323242
    9. 'appt' → logprob: -18.529752731323242
    10. 'append' → logprob: -18.529752731323242

Token 24: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -8.494741632603109e-05
    2. 'op' → logprob: -9.37508487701416
    3. 'u' → logprob: -17.625085830688477
    4. 'ut' → logprob: -18.000085830688477
    5. '```' → logprob: -18.625085830688477
    6. 'push' → logprob: -18.750085830688477
    7. 'us' → logprob: -18.875085830688477
    8. '

' → logprob: -19.750085830688477
    9. '[' → logprob: -20.375085830688477
    10. 'USH' → logprob: -20.375085830688477

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002971160924062133
    2. 'he' → logprob: -6.502971172332764
    3. ' ,' → logprob: -6.877971172332764
    4. ' he' → logprob: -8.252970695495605
    5. '<|end|>' → logprob: -9.377970695495605
    6. ' ' → logprob: -9.752970695495605
    7. 'import' → logprob: -11.877970695495605
    8. '<|end|>' → logprob: -12.127970695495605
    9. ' and' → logprob: -12.752970695495605
    10. '_he' → logprob: -13.252970695495605

Token 26: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2814244329929352
    2. ' he' → logprob: -1.4064244031906128
    3. 'heap' → logprob: -8.406424522399902
    4. ' heap' → logprob: -11.156424522399902
    5. ' ' → logprob: -11.406424522399902
    6. 'heme' → logprob: -12.531424522399902
    7. 'hep' → logprob: -12.906424522399902
    8. '.he' → logprob: -13.093924522399902
    9. '_he' → logprob: -13.156424522399902
    10. 'heem' → logprob: -13.468924522399902

Token 27: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.6312321753939614e-05
    2. 'ap' → logprob: -10.250036239624023
    3. 'pp' → logprob: -14.375036239624023
    4. ' app' → logprob: -16.250036239624023
    5. 'appen' → logprob: -16.625036239624023
    6. '_app' → logprob: -17.500036239624023
    7. 'App' → logprob: -17.750036239624023
    8. '.app' → logprob: -18.000036239624023
    9. 'a' → logprob: -18.125036239624023
    10. '	app' → logprob: -18.125036239624023

Token 28: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.002479581395164132
    2. 'ush' → logprob: -6.002479553222656
    3. 'o' → logprob: -12.877479553222656
    4. '   ' → logprob: -15.377479553222656
    5. ' op' → logprob: -15.627479553222656
    6. 'opleft' → logprob: -15.627479553222656
    7. '

' → logprob: -16.002479553222656
    8. '```' → logprob: -16.252479553222656
    9. 'p' → logprob: -16.627479553222656
    10. 'opp' → logprob: -16.752479553222656

Token 29: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16263803839683533
    2. '

' → logprob: -2.162637948989868
    3. '
' → logprob: -4.412638187408447
    4. '' → logprob: -4.537638187408447
    5. '(' → logprob: -6.037638187408447
    6. 'def' → logprob: -6.037638187408447
    7. '


' → logprob: -6.412638187408447
    8. 'n' → logprob: -6.662638187408447
    9. 'd' → logprob: -7.662638187408447
    10. '(
' → logprob: -7.662638187408447

Token 30: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27253440022468567
    2. 'n' → logprob: -1.6475343704223633
    3. 'def' → logprob: -3.8975343704223633
    4. 'q' → logprob: -5.022534370422363
    5. 'a' → logprob: -5.022534370422363
    6. '(' → logprob: -6.272534370422363
    7. 'h' → logprob: -6.272534370422363
    8. '#' → logprob: -6.647534370422363
    9. 't' → logprob: -6.897534370422363
    10. 'de' → logprob: -7.147534370422363

Token 31: ' resolve' (ID: 14062)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15244106948375702
    2. ' main' → logprob: -2.6524410247802734
    3. ' solve' → logprob: -3.1524410247802734
    4. ' d' → logprob: -4.402441024780273
    5. ' a' → logprob: -5.777441024780273
    6. ' find' → logprob: -5.777441024780273
    7. ' solution' → logprob: -5.902441024780273
    8. ' shortest' → logprob: -5.902441024780273
    9. ' D' → logprob: -6.527441024780273
    10. ' process' → logprob: -7.402441024780273

Token 32: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07091380655765533
    2. '(' → logprob: -2.695913791656494
    3. '(:' → logprob: -8.070914268493652
    4. ' ():' → logprob: -8.195914268493652
    5. '(":' → logprob: -8.945914268493652
    6. '(line' → logprob: -9.195914268493652
    7. '()' → logprob: -10.070914268493652
    8. '(a' → logprob: -10.570914268493652
    9. '(args' → logprob: -11.445914268493652
    10. '(i' → logprob: -11.445914268493652

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28509554266929626
    2. ' ' → logprob: -1.9100955724716187
    3. '<|end|>' → logprob: -3.285095453262329
    4. 'n' → logprob: -3.785095453262329
    5. '    ' → logprob: -4.035095691680908
    6. ' 
' → logprob: -5.160095691680908
    7. '    
' → logprob: -5.410095691680908
    8. '
' → logprob: -5.910095691680908
    9. '\n' → logprob: -6.785095691680908
    10. '(n' → logprob: -6.910095691680908

Token 34: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28397244215011597
    2. ' n' → logprob: -1.6589725017547607
    3. 'n' → logprob: -3.2839725017547607
    4. ' h' → logprob: -5.533972263336182
    5. ' heap' → logprob: -5.658972263336182
    6. '    ' → logprob: -5.783972263336182
    7. ' q' → logprob: -6.658972263336182
    8. '   ' → logprob: -6.783972263336182
    9. 'q' → logprob: -6.783972263336182
    10. 'heap' → logprob: -7.033972263336182

Token 35: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27709606289863586
    2. ',' → logprob: -1.5270960330963135
    3. '=' → logprob: -4.152096271514893
    4. ' ,' → logprob: -4.902096271514893
    5. ' ' → logprob: -6.652096271514893
    6. '=int' → logprob: -8.152095794677734
    7. ',int' → logprob: -10.777095794677734
    8. '  ' → logprob: -11.652095794677734
    9. ',a' → logprob: -11.652095794677734
    10. '    ' → logprob: -12.152095794677734

Token 36: ' W' (ID: 486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.41898056864738464
    2. 'M' → logprob: -1.293980598449707
    3. 'Q' → logprob: -3.418980598449707
    4. ' K' → logprob: -3.793980598449707
    5. ' M' → logprob: -4.668980598449707
    6. ' Q' → logprob: -7.668980598449707
    7. 'X' → logprob: -7.793980598449707
    8. 'A' → logprob: -8.168980598449707
    9. 'T' → logprob: -8.168980598449707
    10. 'D' → logprob: -8.293980598449707

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894819766283035
    2. ' =' → logprob: -2.4639482498168945
    3. ',' → logprob: -11.963948249816895
    4. '=input' → logprob: -13.838948249816895
    5. ' ' → logprob: -15.088948249816895
    6. '=int' → logprob: -15.463948249816895
    7. '=i' → logprob: -15.588948249816895
    8. '＝' → logprob: -16.088947296142578
    9. '=

' → logprob: -16.338947296142578
    10. '=}' → logprob: -16.713947296142578

Token 38: ' iim' (ID: 182704)
  Prédit: ' iim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iim' → logprob: -0.10949614644050598
    2. 'i' → logprob: -2.9844961166381836
    3. ' map' → logprob: -3.6094961166381836
    4. ' i' → logprob: -3.9844961166381836
    5. ' next' → logprob: -5.109496116638184
    6. 'map' → logprob: -7.609496116638184
    7. ' ' → logprob: -8.484496116638184
    8. 'im' → logprob: -8.859496116638184
    9. 'iin' → logprob: -9.109496116638184
    10. 'imap' → logprob: -9.484496116638184

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.6656825866666622e-05
    2. ' ()' → logprob: -11.25002670288086
    3. '(' → logprob: -12.25002670288086
    4. ')' → logprob: -12.50002670288086
    5. '()
' → logprob: -13.00002670288086
    6. '();' → logprob: -13.50002670288086
    7. '())' → logprob: -14.37502670288086
    8. '().' → logprob: -15.50002670288086
    9. '（）' → logprob: -15.50002670288086
    10. '()`' → logprob: -15.62502670288086

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.02980375289917
    2. '   ' → logprob: -1.02980375289917
    3. '    
' → logprob: -3.15480375289917
    4. '```' → logprob: -3.15480375289917
    5. '<|end|>' → logprob: -3.27980375289917
    6. 'n' → logprob: -3.52980375289917
    7. 'dp' → logprob: -3.77980375289917
    8. '' → logprob: -4.27980375289917
    9. 'd' → logprob: -5.02980375289917
    10. '\' → logprob: -5.02980375289917

Token 41: ' S' (ID: 336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7793941497802734
    2. '   ' → logprob: -2.2793941497802734
    3. 'a' → logprob: -2.6543941497802734
    4. 'H' → logprob: -2.9043941497802734
    5. ' heap' → logprob: -2.9043941497802734
    6. 'heap' → logprob: -2.9043941497802734
    7. '    
' → logprob: -3.4043941497802734
    8. 'w' → logprob: -3.4043941497802734
    9. ' items' → logprob: -3.5293941497802734
    10. 'dp' → logprob: -3.6543941497802734

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26034659147262573
    2. '=' → logprob: -1.5103466510772705
    3. ',' → logprob: -4.885346412658691
    4. '=[]' → logprob: -9.010346412658691
    5. 'izes' → logprob: -9.635346412658691
    6. 'weights' → logprob: -9.635346412658691
    7. 'IZES' → logprob: -9.635346412658691
    8. 'um' → logprob: -9.885346412658691
    9. 'w' → logprob: -9.885346412658691
    10. '   ' → logprob: -10.385346412658691

Token 43: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17221906781196594
    2. ' input' → logprob: -2.6722190380096436
    3. '[input' → logprob: -2.6722190380096436
    4. 'list' → logprob: -4.547219276428223
    5. ' [' → logprob: -5.672219276428223
    6. '[' → logprob: -5.922219276428223
    7. ' list' → logprob: -6.297219276428223
    8. '[i' → logprob: -7.547219276428223
    9. '[]' → logprob: -8.422219276428223
    10. '[in' → logprob: -8.672219276428223

Token 44: 'list' (ID: 2641)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014583817683160305
    2. 'int' → logprob: -4.389583587646484
    3. 'he' → logprob: -7.389583587646484
    4. 'i' → logprob: -7.889583587646484
    5. ' input' → logprob: -7.889583587646484
    6. 'tuple' → logprob: -8.264583587646484
    7. 'list' → logprob: -8.764583587646484
    8. '(input' → logprob: -8.889583587646484
    9. '0' → logprob: -10.014583587646484
    10. 'str' → logprob: -10.639583587646484

Token 45: '(i' (ID: 3649)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16884766519069672
    2. '(input' → logprob: -1.918847680091858
    3. '(' → logprob: -5.043847560882568
    4. '(i' → logprob: -6.793847560882568
    5. '()' → logprob: -8.043848037719727
    6. 'map' → logprob: -8.418848037719727
    7. '(range' → logprob: -8.418848037719727
    8. '()]' → logprob: -9.043848037719727
    9. ']' → logprob: -9.668848037719727
    10. 'input' → logprob: -10.168848037719727

Token 46: 'im' (ID: 321)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.49033695459365845
    2. '(map' → logprob: -1.9903368949890137
    3. '(input' → logprob: -2.2403368949890137
    4. '(i' → logprob: -2.9903368949890137
    5. 'im' → logprob: -3.2403368949890137
    6. 'm' → logprob: -4.240336894989014
    7. 'input' → logprob: -4.365336894989014
    8. 'n' → logprob: -4.990336894989014
    9. '(m' → logprob: -5.115336894989014
    10. 'mp' → logprob: -5.990336894989014

Token 47: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00014597235713154078
    2. '()' → logprob: -9.75014591217041
    3. '()]' → logprob: -10.50014591217041
    4. '()),' → logprob: -10.75014591217041
    5. '()))' → logprob: -11.00014591217041
    6. ')' → logprob: -11.75014591217041
    7. '())
' → logprob: -12.12514591217041
    8. ' ())' → logprob: -12.62514591217041
    9. '());' → logprob: -13.00014591217041
    10. ')]' → logprob: -13.75014591217041

Token 48: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010200592689216137
    2. ')' → logprob: -5.010200500488281
    3. 'for' → logprob: -6.385200500488281
    4. '()]' → logprob: -7.010200500488281
    5. ' for' → logprob: -7.635200500488281
    6. '())' → logprob: -8.760200500488281
    7. '(W' → logprob: -9.510200500488281
    8. ']' → logprob: -9.510200500488281
    9. '(N' → logprob: -10.635200500488281
    10. ')]' → logprob: -10.760200500488281

Token 49: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34148338437080383
    2. ' range' → logprob: -1.3414833545684814
    3. 'range' → logprob: -3.7164833545684814
    4. ' _' → logprob: -6.4664835929870605
    5. '_range' → logprob: -7.0914835929870605
    6. ' in' → logprob: -7.2164835929870605
    7. '(range' → logprob: -8.466483116149902
    8. '	range' → logprob: -9.591483116149902
    9. '_in' → logprob: -10.466483116149902
    10. 'in' → logprob: -10.591483116149902

Token 50: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09126108884811401
    2. ' in' → logprob: -2.466261148452759
    3. 'range' → logprob: -6.21626091003418
    4. '_' → logprob: -8.96626091003418
    5. ' range' → logprob: -9.59126091003418
    6. 'n' → logprob: -9.84126091003418
    7. '(range' → logprob: -10.96626091003418
    8. '  ' → logprob: -11.59126091003418
    9. '   ' → logprob: -11.71626091003418
    10. ' ' → logprob: -11.96626091003418

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061997272074222565
    2. ' range' → logprob: -2.811997175216675
    3. ' ' → logprob: -11.686997413635254
    4. '(range' → logprob: -11.936997413635254
    5. '   ' → logprob: -12.061997413635254
    6. '	range' → logprob: -12.561997413635254
    7. '  ' → logprob: -12.936997413635254
    8. 'rang' → logprob: -13.686997413635254
    9. '[' → logprob: -14.061997413635254
    10. 'r' → logprob: -15.061997413635254

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001097417771234177
    2. '(' → logprob: -9.125109672546387
    3. 'N' → logprob: -14.875109672546387
    4. '(n' → logprob: -15.000109672546387
    5. '(
' → logprob: -16.375110626220703
    6. ' (' → logprob: -18.375110626220703
    7. '	N' → logprob: -18.375110626220703
    8. '   ' → logprob: -18.750110626220703
    9. '(W' → logprob: -18.750110626220703
    10. '(I' → logprob: -18.875110626220703

Token 53: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.302704761968926e-05
    2. ')' → logprob: -9.750073432922363
    3. ']' → logprob: -11.625073432922363
    4. ' )' → logprob: -13.375073432922363
    5. '   ' → logprob: -13.875073432922363
    6. ')]
' → logprob: -14.125073432922363
    7. ')])' → logprob: -14.250073432922363
    8. ')],' → logprob: -14.625073432922363
    9. '])]' → logprob: -15.125073432922363
    10. '))' → logprob: -15.375073432922363

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1664929836988449
    2. '    
' → logprob: -2.5414929389953613
    3. '
' → logprob: -2.7914929389953613
    4. '<|end|>' → logprob: -5.291492938995361
    5. 'heap' → logprob: -6.416492938995361
    6. ' 
' → logprob: -6.791492938995361
    7. '    ' → logprob: -7.166492938995361
    8. ')' → logprob: -7.291492938995361
    9. '```' → logprob: -7.541492938995361
    10. '#' → logprob: -7.916492938995361

Token 55: ' def' (ID: 1056)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.129968523979187
    2. 'heap' → logprob: -1.254968523979187
    3. 'pq' → logprob: -2.3799686431884766
    4. 'q' → logprob: -2.6299686431884766
    5. 'h' → logprob: -3.1299686431884766
    6. 'hq' → logprob: -3.1299686431884766
    7. 'S' → logprob: -3.6299686431884766
    8. 'queue' → logprob: -4.379968643188477
    9. 'que' → logprob: -4.379968643188477
    10. 'ans' → logprob: -4.504968643188477

Token 56: ' f' (ID: 285)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.9153096675872803
    2. ' main' → logprob: -2.0403096675872803
    3. ' solve' → logprob: -2.1653096675872803
    4. ' calc' → logprob: -2.4153096675872803
    5. ' cost' → logprob: -2.7903096675872803
    6. ' calculate' → logprob: -3.2903096675872803
    7. ' score' → logprob: -3.2903096675872803
    8. ' ' → logprob: -3.5403096675872803
    9. ' get' → logprob: -3.5403096675872803
    10. ' dp' → logprob: -3.6653096675872803

Token 57: '1' (ID: 16)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.194197177886963
    2. '(w' → logprob: -1.569197177886963
    3. '(k' → logprob: -1.694197177886963
    4. '(i' → logprob: -1.819197177886963
    5. '(' → logprob: -3.319197177886963
    6. '(s' → logprob: -4.444197177886963
    7. '(W' → logprob: -4.569197177886963
    8. '(pos' → logprob: -4.694197177886963
    9. '(a' → logprob: -4.694197177886963
    10. '(n' → logprob: -5.194197177886963

Token 58: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8172781467437744
    2. '(i' → logprob: -1.8172781467437744
    3. '():' → logprob: -2.1922781467437744
    4. '(x' → logprob: -2.4422781467437744
    5. '(w' → logprob: -3.1922781467437744
    6. '(k' → logprob: -3.4422781467437744
    7. '(s' → logprob: -3.8172781467437744
    8. '(:' → logprob: -4.442277908325195
    9. '(idx' → logprob: -4.442277908325195
    10. '(a' → logprob: -4.567277908325195

Token 59: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20667971670627594
    2. ',' → logprob: -1.7066797018051147
    3. ')' → logprob: -6.706679821014404
    4. ' ,' → logprob: -7.081679821014404
    5. ' ):' → logprob: -7.081679821014404
    6. ',v' → logprob: -7.206679821014404
    7. ':' → logprob: -7.831679821014404
    8. '):
' → logprob: -8.706679344177246
    9. ',n' → logprob: -8.956679344177246
    10. '=' → logprob: -9.331679344177246

Token 60: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8253284692764282
    2. ' w' → logprob: -1.9503284692764282
    3. 'k' → logprob: -2.8253283500671387
    4. 'i' → logprob: -3.2003283500671387
    5. 'x' → logprob: -3.4503283500671387
    6. ' k' → logprob: -3.8253283500671387
    7. 'l' → logprob: -3.9503283500671387
    8. ' i' → logprob: -4.325328350067139
    9. 'K' → logprob: -4.450328350067139
    10. ' x' → logprob: -4.450328350067139

Token 61: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03515280783176422
    2. ',' → logprob: -3.4101529121398926
    3. ')' → logprob: -6.660152912139893
    4. ' ):' → logprob: -9.035152435302734
    5. ':' → logprob: -10.785152435302734
    6. '):
' → logprob: -11.285152435302734
    7. '=' → logprob: -11.410152435302734
    8. ' ,' → logprob: -11.410152435302734
    9. '   ' → logprob: -11.785152435302734
    10. ')):' → logprob: -11.910152435302734

Token 62: ' m' (ID: 284)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.4255622625350952
    2. 'idx' → logprob: -1.5505622625350952
    3. ' c' → logprob: -2.4255623817443848
    4. 'i' → logprob: -2.6755623817443848
    5. 'c' → logprob: -2.8005623817443848
    6. ' i' → logprob: -3.0505623817443848
    7. ')' → logprob: -3.9255623817443848
    8. ' p' → logprob: -3.9255623817443848
    9. 'p' → logprob: -4.238062381744385
    10. ' val' → logprob: -4.300562381744385

Token 63: '):
' (ID: 1883)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.09061291068792343
    2. '):' → logprob: -3.0906128883361816
    3. 'a' → logprob: -4.340612888336182
    4. 'ap' → logprob: -4.590612888336182
    5. 'ask' → logprob: -5.840612888336182
    6. ',' → logprob: -6.090612888336182
    7. ')' → logprob: -6.340612888336182
    8. 'p' → logprob: -6.340612888336182
    9. 'u' → logprob: -6.465612888336182
    10. 'e' → logprob: -7.090612888336182

Token 64: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21018074452877045
    2. '):' → logprob: -2.3351807594299316
    3. ' :' → logprob: -3.0851807594299316
    4. '   ' → logprob: -3.4601807594299316
    5. '       ' → logprob: -4.710180759429932
    6. ')' → logprob: -6.085180759429932
    7. ',' → logprob: -6.710180759429932
    8. '    ' → logprob: -6.710180759429932
    9. ' ' → logprob: -7.085180759429932
    10. '  ' → logprob: -8.460180282592773

Token 65: ' mm' (ID: 8957)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9123151302337646
    2. '   ' → logprob: -1.1623151302337646
    3. ' ' → logprob: -1.5373151302337646
    4. ' if' → logprob: -3.2873151302337646
    5. '       ' → logprob: -5.162315368652344
    6. '        ' → logprob: -5.537315368652344
    7. ')' → logprob: -5.912315368652344
    8. 'if' → logprob: -5.912315368652344
    9. '  ' → logprob: -6.287315368652344
    10. ',' → logprob: -6.287315368652344

Token 66: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -1.0003199577331543
    2. ' =' → logprob: -1.3753199577331543
    3. 'a' → logprob: -1.5003199577331543
    4. '=' → logprob: -2.1253199577331543
    5. '=a' → logprob: -4.500319957733154
    6. 'in' → logprob: -5.000319957733154
    7. '=max' → logprob: -5.250319957733154
    8. '=[]' → logprob: -5.875319957733154
    9. 'v' → logprob: -6.125319957733154
    10. '   ' → logprob: -6.750319957733154

Token 67: ' []
' (ID: 8911)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.103467583656311
    2. 'max' → logprob: -1.978467583656311
    3. ' m' → logprob: -2.1034674644470215
    4. 'm' → logprob: -2.3534674644470215
    5. ' w' → logprob: -3.1034674644470215
    6. ' min' → logprob: -3.2284674644470215
    7. 'w' → logprob: -3.6034674644470215
    8. ' ' → logprob: -3.8534674644470215
    9. ' v' → logprob: -3.8534674644470215
    10. ' float' → logprob: -3.9784674644470215

Token 68: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9228689670562744
    2. '   ' → logprob: -1.1728689670562744
    3. ' for' → logprob: -2.2978689670562744
    4. '    ' → logprob: -2.2978689670562744
    5. '       ' → logprob: -3.5478689670562744
    6. '<|end|>' → logprob: -3.9228689670562744
    7. '        ' → logprob: -4.922868728637695
    8. 'for' → logprob: -5.047868728637695
    9. ',' → logprob: -5.047868728637695
    10. ')' → logprob: -5.547868728637695

Token 69: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3932369649410248
    2. 'for' → logprob: -1.1432369947433472
    3. '   ' → logprob: -5.518237113952637
    4. ' he' → logprob: -8.143237113952637
    5. 'v' → logprob: -8.393237113952637
    6. '    ' → logprob: -8.518237113952637
    7. ' v' → logprob: -8.768237113952637
    8. 'he' → logprob: -8.893237113952637
    9. '[]' → logprob: -8.893237113952637
    10. 'w' → logprob: -9.143237113952637

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7452051639556885
    2. 'n' → logprob: -1.4952051639556885
    3. ' =' → logprob: -1.4952051639556885
    4. 'nd' → logprob: -2.8702051639556885
    5. 'f' → logprob: -4.245204925537109
    6. ',' → logprob: -6.745204925537109
    7. 'd' → logprob: -6.870204925537109
    8. ' ' → logprob: -6.995204925537109
    9. '   ' → logprob: -7.745204925537109
    10. ' n' → logprob: -7.870204925537109

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029952269047498703
    2. ' ' → logprob: -3.52995228767395
    3. 'w' → logprob: -9.404952049255371
    4. '1' → logprob: -10.279952049255371
    5. 'm' → logprob: -10.529952049255371
    6. ' w' → logprob: -10.779952049255371
    7. 'v' → logprob: -11.529952049255371
    8. ' m' → logprob: -11.654952049255371
    9. ' v' → logprob: -12.529952049255371
    10. 'len' → logprob: -12.654952049255371

Token 72: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005244385101832449
    2. ' ' → logprob: -8.125524520874023
    3. 'w' → logprob: -9.250524520874023
    4. 'v' → logprob: -10.000524520874023
    5. 'len' → logprob: -10.375524520874023
    6. 'm' → logprob: -10.875524520874023
    7. '1' → logprob: -10.875524520874023
    8. '-' → logprob: -11.375524520874023
    9. '2' → logprob: -14.563024520874023
    10. ' -' → logprob: -14.938024520874023

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3878321051597595
    2. 'while' (adapté à ' while') → logprob: -1.5128321647644043
    3. '0' → logprob: -3.2628321647644043
    4. ' ' → logprob: -3.7628321647644043
    5. ',' → logprob: -4.512832164764404
    6. '    ' → logprob: -4.762832164764404
    7. '   ' → logprob: -5.637832164764404
    8. '  ' → logprob: -5.887832164764404
    9. '	while' → logprob: -5.887832164764404
    10. '2' → logprob: -6.512832164764404

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3480721116065979
    2. 'w' → logprob: -2.098072052001953
    3. ' i' → logprob: -2.348072052001953
    4. 'm' → logprob: -3.598072052001953
    5. 'v' → logprob: -3.598072052001953
    6. ' w' → logprob: -4.348072052001953
    7. ' v' → logprob: -5.848072052001953
    8. ' m' → logprob: -5.973072052001953
    9. 'True' → logprob: -7.723072052001953
    10. '(i' → logprob: -7.848072052001953

Token 77: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3327316641807556
    2. '<=' → logprob: -1.3327317237854004
    3. ' *' → logprob: -4.7077317237854
    4. '*' → logprob: -5.2077317237854
    5. ' <' → logprob: -5.9577317237854
    6. '<' → logprob: -6.5827317237854
    7. '*i' → logprob: -8.207731246948242
    8. '0' → logprob: -9.332731246948242
    9. ' ' → logprob: -9.457731246948242
    10. '<<' → logprob: -10.082731246948242

Token 78: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7382968664169312
    2. ' m' → logprob: -1.1132968664169312
    3. ' w' → logprob: -2.8632969856262207
    4. 'w' → logprob: -2.9882969856262207
    5. 'v' → logprob: -2.9882969856262207
    6. ' v' → logprob: -3.3632969856262207
    7. ' ' → logprob: -7.613296985626221
    8. 'N' → logprob: -8.738296508789062
    9. 'W' → logprob: -9.363296508789062
    10. ' N' → logprob: -9.488296508789062

Token 79: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07392960041761398
    2. ':' → logprob: -2.82392954826355
    3. 'and' → logprob: -4.448929786682129
    4. ' :' → logprob: -9.323929786682129
    5. ':
' → logprob: -9.823929786682129
    6. ' ' → logprob: -10.823929786682129
    7. '   ' → logprob: -11.323929786682129
    8. '    ' → logprob: -12.823929786682129
    9. ',' → logprob: -12.948929786682129
    10. '	and' → logprob: -12.948929786682129

Token 80: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21114911139011383
    2. ' :' → logprob: -2.086149215698242
    3. ',' → logprob: -3.836149215698242
    4. ' and' → logprob: -3.961149215698242
    5. ':
' → logprob: -5.086149215698242
    6. ' ' → logprob: -5.211149215698242
    7. ' :
' → logprob: -5.836149215698242
    8. ' ,' → logprob: -6.211149215698242
    9. '<|end|>' → logprob: -6.211149215698242
    10. '       ' → logprob: -6.461149215698242

Token 81: ' yield' (ID: 14376)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4600946307182312
    2. ' ' → logprob: -1.960094690322876
    3. ' w' → logprob: -3.085094690322876
    4. ' i' → logprob: -3.085094690322876
    5. '    ' → logprob: -3.460094690322876
    6. 'if' → logprob: -3.835094690322876
    7. ' mm' → logprob: -4.085094451904297
    8. 'w' → logprob: -4.585094451904297
    9. ' he' → logprob: -4.960094451904297
    10. ' and' → logprob: -5.085094451904297

Token 82: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6960561275482178
    2. '(i' → logprob: -1.9460561275482178
    3. '(v' → logprob: -2.1960561275482178
    4. 'v' → logprob: -2.5710561275482178
    5. ' v' → logprob: -2.5710561275482178
    6. 'i' → logprob: -3.6960561275482178
    7. '(' → logprob: -3.6960561275482178
    8. ' i' → logprob: -3.8210561275482178
    9. 'w' → logprob: -5.196056365966797
    10. ' w' → logprob: -5.571056365966797

Token 83: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7637609243392944
    2. ' <<=' → logprob: -2.013761043548584
    3. '
' → logprob: -2.138761043548584
    4. '<<' → logprob: -2.763761043548584
    5. ',i' → logprob: -2.763761043548584
    6. '*i' → logprob: -3.263761043548584
    7. '*' → logprob: -3.513761043548584
    8. ',
' → logprob: -3.638761043548584
    9. '           ' → logprob: -4.638761043548584
    10. '<|end|>' → logprob: -4.888761043548584

Token 84: '           ' (ID: 352)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.390952706336975
    2. ' *' → logprob: -1.390952706336975
    3. ',' → logprob: -1.890952706336975
    4. '*i' → logprob: -2.2659525871276855
    5. '<<' → logprob: -2.3909525871276855
    6. ' <<=' → logprob: -3.0159525871276855
    7. ' <<' → logprob: -3.1409525871276855
    8. ',i' → logprob: -4.5159525871276855
    9. ' ' → logprob: -4.8909525871276855
    10. ' ,' → logprob: -4.8909525871276855

Token 85: ' m' (ID: 284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7934511303901672
    2. ' <<=' → logprob: -0.9184511303901672
    3. 'i' → logprob: -2.4184510707855225
    4. ' *=' → logprob: -3.7934510707855225
    5. ',' → logprob: -4.043451309204102
    6. ',i' → logprob: -5.043451309204102
    7. ' =' → logprob: -5.793451309204102
    8. '*=' → logprob: -6.043451309204102
    9. ' ,' → logprob: -6.668451309204102
    10. ' ' → logprob: -6.668451309204102

Token 86: ' -=' (ID: 12583)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -1.0517627000808716
    2. '=' → logprob: -1.1767627000808716
    3. '-=' → logprob: -1.5517627000808716
    4. ' >>=' → logprob: -3.176762580871582
    5. '>>' → logprob: -3.301762580871582
    6. ' -=' → logprob: -4.301762580871582
    7. '/=' → logprob: -4.676762580871582
    8. ' =' → logprob: -4.676762580871582
    9. '//' → logprob: -5.051762580871582
    10. ' //' → logprob: -5.301762580871582

Token 87: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029782891273498535
    2. ' i' → logprob: -3.529782772064209
    3. '1' → logprob: -11.029783248901367
    4. '<|end|>' → logprob: -11.654783248901367
    5. ' ' → logprob: -12.404783248901367
    6. '2' → logprob: -13.904783248901367
    7. '	i' → logprob: -14.029783248901367
    8. '<|end|>' → logprob: -14.779783248901367
    9. '*i' → logprob: -15.779783248901367
    10. '0' → logprob: -16.154783248901367

Token 88: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41380560398101807
    2. '
' → logprob: -2.1638054847717285
    3. ' ' → logprob: -2.7888054847717285
    4. '       ' → logprob: -3.4138054847717285
    5. '   ' → logprob: -3.5388054847717285
    6. ' 
' → logprob: -3.6638054847717285
    7. 'i' → logprob: -3.9138054847717285
    8. '<|end|>' → logprob: -4.5388054847717285
    9. ' i' → logprob: -5.2888054847717285
    10. '    ' → logprob: -5.5388054847717285

Token 89: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1990654468536377
    2. ' ' → logprob: -2.0740654468536377
    3. '           ' → logprob: -2.1990654468536377
    4. 'i' → logprob: -2.5740654468536377
    5. '
' → logprob: -2.6990654468536377
    6. '\n' → logprob: -2.9490654468536377
    7. '    
' → logprob: -3.1990654468536377
    8. ' i' → logprob: -3.4490654468536377
    9. '     
' → logprob: -3.8240654468536377
    10. '<|end|>' → logprob: -4.199065208435059

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.638617753982544
    2. 'i' (adapté à ' i') → logprob: -0.763617753982544
    3. '           ' → logprob: -6.138617515563965
    4. '1' → logprob: -7.263617515563965
    5. '	i' → logprob: -7.388617515563965
    6. '   ' → logprob: -7.763617515563965
    7. ' ' → logprob: -7.763617515563965
    8. ',i' → logprob: -8.138617515563965
    9. 's' → logprob: -8.388617515563965
    10. '       ' → logprob: -8.763617515563965

Token 91: ' <<=' (ID: 134025)
  Prédit: ' <<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.6716667413711548
    2. '*=' → logprob: -1.0466667413711548
    3. '<<' → logprob: -2.0466666221618652
    4. ' *=' → logprob: -5.546666622161865
    5. '*' → logprob: -5.796666622161865
    6. '=' → logprob: -7.046666622161865
    7. '2' → logprob: -7.171666622161865
    8. ' ' → logprob: -9.421667098999023
    9. ' =' → logprob: -10.296667098999023
    10. '<|end|>' → logprob: -10.296667098999023

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008059371029958129
    2. ' ' → logprob: -7.125805854797363
    3. '0' → logprob: -14.813305854797363
    4. '   ' → logprob: -15.188305854797363
    5. '2' → logprob: -15.438305854797363
    6. '```' → logprob: -15.500805854797363
    7. ' ' → logprob: -16.25080680847168
    8. '<|end|>' → logprob: -16.43830680847168
    9. '`' → logprob: -16.87580680847168
    10. '3' → logprob: -17.56330680847168

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -9.875053405761719
    3. '0' → logprob: -13.625053405761719
    4. '```' → logprob: -14.750053405761719
    5. '`' → logprob: -15.250053405761719
    6. '   ' → logprob: -16.37505340576172
    7. '2' → logprob: -16.50005340576172
    8. '<|end|>' → logprob: -16.87505340576172
    9. '#' → logprob: -17.31255340576172
    10. '>' → logprob: -17.81255340576172

Token 94: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.489098459482193
    2. '<|end|>' → logprob: -1.4890984296798706
    3. ' 
' → logprob: -2.86409854888916
    4. '       ' → logprob: -3.61409854888916
    5. '
' → logprob: -3.61409854888916
    6. '        ' → logprob: -4.23909854888916
    7. '<|end|>' → logprob: -4.86409854888916
    8. '           ' → logprob: -5.11409854888916
    9. '        
' → logprob: -6.11409854888916
    10. '   ' → logprob: -6.11409854888916

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.734625518321991
    2. ' ' → logprob: -1.4846255779266357
    3. '        ' → logprob: -2.4846255779266357
    4. '<|end|>' → logprob: -2.4846255779266357
    5. '           ' → logprob: -3.3596255779266357
    6. '   ' → logprob: -3.7346255779266357
    7. '    ' → logprob: -4.359625339508057
    8. '+' → logprob: -4.484625339508057
    9. '  ' → logprob: -4.734625339508057
    10. ',' → logprob: -5.359625339508057

Token 96: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26439276337623596
    2. '<|end|>' → logprob: -2.139392852783203
    3. '   ' → logprob: -2.389392852783203
    4. 'if' (adapté à ' if') → logprob: -5.639392852783203
    5. 'while' → logprob: -5.639392852783203
    6. 'for' → logprob: -6.139392852783203
    7. '           ' → logprob: -6.639392852783203
    8. '<|end|>' → logprob: -6.639392852783203
    9. '    ' → logprob: -6.764392852783203
    10. ' if' → logprob: -6.764392852783203

Token 97: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.026305755600333214
    2. 'm' → logprob: -3.651305675506592
    3. ' ' → logprob: -12.40130615234375
    4. '   ' → logprob: -14.90130615234375
    5. '0' → logprob: -15.02630615234375
    6. '	m' → logprob: -15.77630615234375
    7. '>' → logprob: -15.90130615234375
    8. '    ' → logprob: -15.96380615234375
    9. '  ' → logprob: -16.52630615234375
    10. ' ' → logprob: -16.71380615234375

Token 98: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5269618630409241
    2. ' >' → logprob: -0.9019618630409241
    3. ':' → logprob: -6.151961803436279
    4. '">' → logprob: -7.276961803436279
    5. ' !=' → logprob: -7.651961803436279
    6. '!=' → logprob: -9.151962280273438
    7. '<|end|>' → logprob: -9.276962280273438
    8. '>:' → logprob: -9.901962280273438
    9. '0' → logprob: -10.026962280273438
    10. ' ' → logprob: -10.151962280273438

Token 99: '           ' (ID: 352)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.03847920149564743
    2. 'yield' → logprob: -3.4134790897369385
    3. '           ' → logprob: -5.788479328155518
    4. '	yield' → logprob: -6.413479328155518
    5. 'Yield' → logprob: -10.53847885131836
    6. '        ' → logprob: -10.66347885131836
    7. ' yields' → logprob: -10.91347885131836
    8. ' ' → logprob: -11.16347885131836
    9. '            ' → logprob: -11.66347885131836
    10. '       ' → logprob: -12.16347885131836

Token 100: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.2523116171360016
    2. ' yield' → logprob: -1.5023115873336792
    3. '	yield' → logprob: -8.377311706542969
    4. '           ' → logprob: -8.877311706542969
    5. '       ' → logprob: -12.627311706542969
    6. '   ' → logprob: -13.002311706542969
    7. ' ' → logprob: -13.377311706542969
    8. 'Yield' → logprob: -13.877311706542969
    9. '        ' → logprob: -14.002311706542969
    10. '  ' → logprob: -14.252311706542969

Token 101: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12692904472351074
    2. 'm' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.37692928314209
    4. '	m' → logprob: -15.37692928314209
    5. ' ' → logprob: -16.501928329467773
    6. '<|end|>' → logprob: -17.251928329467773
    7. '    ' → logprob: -17.751928329467773
    8. '(m' → logprob: -18.251928329467773
    9. ' м' → logprob: -18.751928329467773
    10. '7' → logprob: -18.876928329467773

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' SS' (ID: 30354)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3345462679862976
    2. '<|end|>' → logprob: -1.7095463275909424
    3. '   ' → logprob: -3.5845463275909424
    4. ' 
' → logprob: -3.8345463275909424
    5. '    
' → logprob: -4.584546089172363
    6. ' ' → logprob: -4.834546089172363
    7. ')' → logprob: -5.334546089172363
    8. ' for' → logprob: -5.459546089172363
    9. '  
' → logprob: -5.459546089172363
    10. 'def' → logprob: -5.834546089172363

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8447628021240234
    2. '.append' → logprob: -1.2197628021240234
    3. '=' → logprob: -2.3447628021240234
    4. '.' → logprob: -2.4697628021240234
    5. 'S' → logprob: -2.9697628021240234
    6. '_' → logprob: -4.594762802124023
    7. '.extend' → logprob: -4.594762802124023
    8. '[:]' → logprob: -4.844762802124023
    9. '=[]' → logprob: -5.344762802124023
    10. '[' → logprob: -6.094762802124023

Token 106: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4788566529750824
    2. ' []' → logprob: -1.2288566827774048
    3. ' [' → logprob: -3.4788565635681152
    4. ' [[]' → logprob: -3.6038565635681152
    5. '[' → logprob: -3.9788565635681152
    6. '[S' → logprob: -5.603856563568115
    7. ' sorted' → logprob: -6.353856563568115
    8. 'sorted' → logprob: -6.478856563568115
    9. '[[' → logprob: -7.603856563568115
    10. ' ' → logprob: -7.978856563568115

Token 107: '(sorted' (ID: 92488)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.054599687457084656
    2. '(S' → logprob: -3.3045997619628906
    3. '(' → logprob: -4.429599761962891
    4. '()' → logprob: -6.554599761962891
    5. '(map' → logprob: -6.554599761962891
    6. '(i' → logprob: -7.554599761962891
    7. '((' → logprob: -7.679599761962891
    8. '(range' → logprob: -8.80459976196289
    9. '(filter' → logprob: -8.80459976196289
    10. '(sum' → logprob: -9.05459976196289

Token 108: '(((' (ID: 13163)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.005291630979627371
    2. '(' → logprob: -5.50529146194458
    3. '((' → logprob: -7.38029146194458
    4. '(sum' → logprob: -8.880291938781738
    5. '(lambda' → logprob: -8.880291938781738
    6. '(range' → logprob: -9.130291938781738
    7. '(s' → logprob: -10.380291938781738
    8. '([' → logprob: -10.505291938781738
    9. '(en' → logprob: -10.505291938781738
    10. '(((' → logprob: -10.755291938781738

Token 109: 'v' (ID: 85)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5972968935966492
    2. 's' → logprob: -1.597296953201294
    3. 'v' → logprob: -2.472296953201294
    4. 'S' → logprob: -2.722296953201294
    5. '-w' → logprob: -3.722296953201294
    6. 'x' → logprob: -4.222296714782715
    7. '-s' → logprob: -4.222296714782715
    8. 'W' → logprob: -4.972296714782715
    9. '-v' → logprob: -5.347296714782715
    10. 'c' → logprob: -5.972296714782715

Token 110: '*i' (ID: 51147)
  Prédit: '/w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/w' → logprob: -0.7209828495979309
    2. ',' → logprob: -1.8459827899932861
    3. ' /' → logprob: -2.595982789993286
    4. '[' → logprob: -2.845982789993286
    5. '//' → logprob: -2.845982789993286
    6. '+w' → logprob: -3.345982789993286
    7. '+' → logprob: -3.470982789993286
    8. ' //' → logprob: -3.595982789993286
    9. '*' → logprob: -4.220983028411865
    10. ' +' → logprob: -4.345983028411865

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006843181326985359
    2. ' ,' → logprob: -7.7506842613220215
    3. ',w' → logprob: -8.50068473815918
    4. ',i' → logprob: -10.37568473815918
    5. 'w' → logprob: -11.75068473815918
    6. '),' → logprob: -12.87568473815918
    7. '[i' → logprob: -13.50068473815918
    8. 's' → logprob: -13.75068473815918
    9. '   ' → logprob: -14.25068473815918
    10. ')' → logprob: -14.25068473815918

Token 112: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2874067723751068
    2. ' w' → logprob: -1.4124068021774292
    3. 'i' → logprob: -5.537406921386719
    4. ' i' → logprob: -6.412406921386719
    5. ' ' → logprob: -8.662406921386719
    6. '   ' → logprob: -9.037406921386719
    7. '1' → logprob: -9.287406921386719
    8. '    ' → logprob: -9.662406921386719
    9. '  ' → logprob: -10.099906921386719
    10. 'v' → logprob: -10.412406921386719

Token 113: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0018495087279006839
    2. '*' → logprob: -6.37684965133667
    3. ' *' → logprob: -8.876849174499512
    4. 'i' → logprob: -12.876849174499512
    5. ')' → logprob: -13.876849174499512
    6. ',' → logprob: -13.876849174499512
    7. ',i' → logprob: -14.126849174499512
    8. ' ' → logprob: -14.751849174499512
    9. ')*' → logprob: -14.876849174499512
    10. '*(' → logprob: -15.501849174499512

Token 114: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009525622241199017
    2. ')' → logprob: -4.759525775909424
    3. ' ,' → logprob: -7.134525775909424
    4. ',i' → logprob: -9.759525299072266
    5. ' )' → logprob: -10.884525299072266
    6. ' ' → logprob: -11.884525299072266
    7. ',w' → logprob: -11.884525299072266
    8. ',)' → logprob: -12.259525299072266
    9. '   ' → logprob: -12.384525299072266
    10. '  ' → logprob: -13.134525299072266

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6915138959884644
    2. ' for' → logprob: -0.9415138959884644
    3. ',' → logprob: -2.316514015197754
    4. ')' → logprob: -4.691514015197754
    5. '   ' → logprob: -7.066514015197754
    6. ' ,' → logprob: -8.066514015197754
    7. ' ' → logprob: -9.816514015197754
    8. ',i' → logprob: -10.441514015197754
    9. ' )' → logprob: -10.816514015197754
    10. '  ' → logprob: -10.816514015197754

Token 116: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6728277206420898
    2. ' v' → logprob: -1.6728277206420898
    3. 'i' → logprob: -1.7978277206420898
    4. ' i' → logprob: -2.04782772064209
    5. ' ' → logprob: -6.04782772064209
    6. ',' → logprob: -7.29782772064209
    7. ' (' → logprob: -7.42282772064209
    8. '(v' → logprob: -7.79782772064209
    9. '(i' → logprob: -8.04782772064209
    10. ' S' → logprob: -8.04782772064209

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01971680298447609
    2. ',w' → logprob: -4.144716739654541
    3. ' ,' → logprob: -6.144716739654541
    4. 'w' → logprob: -6.769716739654541
    5. ',i' → logprob: -8.5197172164917
    6. '_,' → logprob: -10.1447172164917
    7. ' in' → logprob: -10.3947172164917
    8. ' w' → logprob: -10.8947172164917
    9. 'i' → logprob: -10.8947172164917
    10. ' ' → logprob: -11.8947172164917

Token 118: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.39466920495033264
    2. ' w' → logprob: -1.2696691751480103
    3. 'S' → logprob: -4.019669055938721
    4. ' S' → logprob: -4.144669055938721
    5. ' ' → logprob: -6.144669055938721
    6. ',' → logprob: -6.519669055938721
    7. 's' → logprob: -6.519669055938721
    8. ' s' → logprob: -7.144669055938721
    9. 'W' → logprob: -7.269669055938721
    10. ' (' → logprob: -7.394669055938721

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03133084252476692
    2. ' in' → logprob: -3.6563308238983154
    3. 'S' → logprob: -6.4063310623168945
    4. ',S' → logprob: -6.5313310623168945
    5. 'in' → logprob: -7.1563310623168945
    6. ' ,' → logprob: -7.2813310623168945
    7. ' S' → logprob: -8.406331062316895
    8. ',s' → logprob: -9.906331062316895
    9. ' ' → logprob: -10.031331062316895
    10. '  ' → logprob: -11.281331062316895

Token 120: ' m' (ID: 284)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5692925453186035
    2. ' S' → logprob: -1.0692925453186035
    3. 'm' → logprob: -3.1942925453186035
    4. ' m' → logprob: -3.8192925453186035
    5. ' s' → logprob: -4.5692925453186035
    6. 's' → logprob: -4.9442925453186035
    7. '_' → logprob: -5.8192925453186035
    8. 'i' → logprob: -6.8192925453186035
    9. ' in' → logprob: -6.8192925453186035
    10. ' ' → logprob: -6.8192925453186035

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020945891737937927
    2. 'in' → logprob: -3.8959457874298096
    3. 'S' → logprob: -8.89594554901123
    4. ' ' → logprob: -9.52094554901123
    5. ',' → logprob: -10.02094554901123
    6. ' S' → logprob: -10.02094554901123
    7. ')' → logprob: -10.14594554901123
    8. '<|end|>' → logprob: -10.39594554901123
    9. 's' → logprob: -11.14594554901123
    10. '  ' → logprob: -11.89594554901123

Token 122: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07037440687417984
    2. ' S' → logprob: -2.6953744888305664
    3. ' ' → logprob: -9.195374488830566
    4. '[S' → logprob: -9.570374488830566
    5. 'SS' → logprob: -9.695374488830566
    6. '[' → logprob: -9.820374488830566
    7. '(S' → logprob: -10.320374488830566
    8. ')' → logprob: -10.945374488830566
    9. 's' → logprob: -10.945374488830566
    10. ' [' → logprob: -11.507874488830566

Token 123: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15741267800331116
    2. 'for' → logprob: -2.0324127674102783
    3. '),' → logprob: -5.032412528991699
    4. ')' → logprob: -5.657412528991699
    5. '   ' → logprob: -7.032412528991699
    6. ')))' → logprob: -7.032412528991699
    7. '[' → logprob: -7.157412528991699
    8. '))' → logprob: -7.157412528991699
    9. '  ' → logprob: -8.0324125289917
    10. ' ' → logprob: -8.0324125289917

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6978104710578918
    2. ' i' → logprob: -0.6978104710578918
    3. 'm' → logprob: -6.072810649871826
    4. ' m' → logprob: -6.697810649871826
    5. ' f' → logprob: -7.822810649871826
    6. 'f' → logprob: -7.947810649871826
    7. ' ' → logprob: -9.072810173034668
    8. '_i' → logprob: -9.947810173034668
    9. '  ' → logprob: -10.322810173034668
    10. 'x' → logprob: -10.697810173034668

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0073141236789524555
    2. 'in' → logprob: -5.007314205169678
    3. ' f' → logprob: -7.507314205169678
    4. 'f' → logprob: -10.00731372833252
    5. '<|end|>' → logprob: -13.13231372833252
    6. ' ' → logprob: -13.63231372833252
    7. '<|end|>' → logprob: -15.13231372833252
    8. ' next' → logprob: -15.63231372833252
    9. 'from' → logprob: -16.007314682006836
    10. 'In' → logprob: -16.507314682006836

Token 126: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019297054968774319
    2. ' f' → logprob: -6.251929759979248
    3. ' ' → logprob: -14.25192928314209
    4. '	f' → logprob: -15.50192928314209
    5. '   ' → logprob: -15.62692928314209
    6. '  ' → logprob: -17.376930236816406
    7. '(f' → logprob: -17.626930236816406
    8. '    ' → logprob: -18.001930236816406
    9. '
' → logprob: -18.626930236816406
    10. 'list' → logprob: -19.126930236816406

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '(v' → logprob: -11.87501049041748
    3. '(' → logprob: -14.25001049041748
    4. ' ' → logprob: -14.62501049041748
    5. '(m' → logprob: -15.00001049041748
    6. 'irst' → logprob: -15.12501049041748
    7. ')' → logprob: -15.25001049041748
    8. 'unction' → logprob: -15.37501049041748
    9. ')(' → logprob: -16.000011444091797
    10. '
' → logprob: -16.125011444091797

Token 128: '(v' (ID: 6932)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.03511713072657585
    2. '(m' → logprob: -3.9101171493530273
    3. '(v' → logprob: -4.285117149353027
    4. '(' → logprob: -7.785117149353027
    5. 'w' → logprob: -9.285117149353027
    6. '(*' → logprob: -9.910117149353027
    7. ')(' → logprob: -10.035117149353027
    8. '(s' → logprob: -10.285117149353027
    9. '(i' → logprob: -11.035117149353027
    10. '((' → logprob: -11.535117149353027

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029346467927098274
    2. ',w' → logprob: -3.904346466064453
    3. ',m' → logprob: -5.779346466064453
    4. ' ,' → logprob: -5.904346466064453
    5. 'w' → logprob: -6.154346466064453
    6. 'm' → logprob: -8.029346466064453
    7. '(' → logprob: -8.654346466064453
    8. ',i' → logprob: -9.029346466064453
    9. ' ' → logprob: -9.904346466064453
    10. ' w' → logprob: -10.779346466064453

Token 130: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009364311583340168
    2. ' w' → logprob: -5.509364128112793
    3. '1' → logprob: -5.759364128112793
    4. 'm' → logprob: -6.259364128112793
    5. ' ' → logprob: -9.259364128112793
    6. '   ' → logprob: -10.134364128112793
    7. ' m' → logprob: -10.759364128112793
    8. '    ' → logprob: -11.634364128112793
    9. '  ' → logprob: -11.884364128112793
    10. 'W' → logprob: -12.134364128112793

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5662020444869995
    2. ',m' → logprob: -1.0662020444869995
    3. 'm' → logprob: -2.441202163696289
    4. ' ,' → logprob: -7.566202163696289
    5. ' m' → logprob: -7.816202163696289
    6. ',i' → logprob: -12.441202163696289
    7. '(m' → logprob: -12.691202163696289
    8. '   ' → logprob: -13.253702163696289
    9. '[m' → logprob: -13.253702163696289
    10. ',
' → logprob: -13.628702163696289

Token 132: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026309119537472725
    2. ' m' → logprob: -3.651309013366699
    3. ' ' → logprob: -12.1513090133667
    4. '   ' → logprob: -13.2763090133667
    5. '  ' → logprob: -14.1513090133667
    6. '    ' → logprob: -14.5263090133667
    7. '	m' → logprob: -16.026309967041016
    8. '     ' → logprob: -16.651309967041016
    9. '       ' → logprob: -16.713809967041016
    10. '
' → logprob: -16.713809967041016

Token 133: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4323079288005829
    2. ')),' → logprob: -1.4323079586029053
    3. '))))' → logprob: -2.4323079586029053
    4. ')' → logprob: -4.682307720184326
    5. '))),' → logprob: -5.057307720184326
    6. '))' → logprob: -5.432307720184326
    7. '),' → logprob: -6.682307720184326
    8. ')));' → logprob: -7.182307720184326
    9. '))))
' → logprob: -7.432307720184326
    10. ')))
' → logprob: -7.807307720184326

Token 134: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.47944405674934387
    2. ' key' → logprob: -0.9794440269470215
    3. 'reverse' → logprob: -5.4794440269470215
    4. ' reverse' → logprob: -6.8544440269470215
    5. ' ' → logprob: -9.72944450378418
    6. '   ' → logprob: -10.35444450378418
    7. '  ' → logprob: -11.22944450378418
    8. ',key' → logprob: -12.35444450378418
    9. '(key' → logprob: -12.47944450378418
    10. '	key' → logprob: -12.85444450378418

Token 135: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0001584850688232109
    2. '=' → logprob: -8.750158309936523
    3. ' =' → logprob: -17.625158309936523
    4. '=l' → logprob: -19.375158309936523
    5. '=len' → logprob: -19.875158309936523
    6. 'lambda' → logprob: -20.375158309936523
    7. '=item' → logprob: -20.500158309936523
    8. '=_' → logprob: -20.500158309936523
    9. '=None' → logprob: -21.250158309936523
    10. '=int' → logprob: -21.375158309936523

Token 136: ' x' (ID: 1215)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00041970983147621155
    2. 'lambda' → logprob: -8.500419616699219
    3. '=' → logprob: -8.875419616699219
    4. ':' → logprob: -9.625419616699219
    5. ' lambda' → logprob: -11.625419616699219
    6. '(lambda' → logprob: -14.750419616699219
    7. '=len' → logprob: -15.500419616699219
    8. '   ' → logprob: -15.750419616699219
    9. ' =' → logprob: -15.875419616699219
    10. ':=' → logprob: -16.25041961669922

Token 137: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04868365824222565
    2. ':x' → logprob: -3.0486836433410645
    3. ' :' → logprob: -9.673684120178223
    4. ':(' → logprob: -10.798684120178223
    5. '=lambda' → logprob: -12.173684120178223
    6. ':-' → logprob: -12.923684120178223
    7. ':_' → logprob: -13.548684120178223
    8. ':int' → logprob: -13.923684120178223
    9. ':
' → logprob: -14.548684120178223
    10. ':item' → logprob: -14.798684120178223

Token 138: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35096874833106995
    2. '-' → logprob: -2.100968837738037
    3. ' x' → logprob: -2.100968837738037
    4. '-x' → logprob: -3.600968837738037
    5. ' -' → logprob: -4.350968837738037
    6. 'lambda' → logprob: -5.475968837738037
    7. ' lambda' → logprob: -6.100968837738037
    8. '-l' → logprob: -6.475968837738037
    9. '0' → logprob: -6.600968837738037
    10. ' ' → logprob: -7.225968837738037

Token 139: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09793055057525635
    2. '-x' → logprob: -2.847930431365967
    3. ' x' → logprob: -4.097930431365967
    4. '-' → logprob: -4.097930431365967
    5. ' -' → logprob: -6.347930431365967
    6. '_' → logprob: -9.347930908203125
    7. '-_' → logprob: -9.347930908203125
    8. '_x' → logprob: -10.222930908203125
    9. '0' → logprob: -10.472930908203125
    10. 'lambda' → logprob: -10.597930908203125

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000647029432002455
    2. ':' → logprob: -7.625647068023682
    3. '))' → logprob: -9.375646591186523
    4. ')))' → logprob: -11.250646591186523
    5. ')' → logprob: -11.375646591186523
    6. ' [' → logprob: -11.625646591186523
    7. '
' → logprob: -11.750646591186523
    8. ',' → logprob: -11.750646591186523
    9. ')[' → logprob: -12.500646591186523
    10. '0' → logprob: -12.875646591186523

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033725351095199585
    2. '1' → logprob: -3.4087252616882324
    3. ' ' → logprob: -10.15872573852539
    4. '[' → logprob: -10.40872573852539
    5. '-' → logprob: -12.40872573852539
    6. 'x' → logprob: -13.09622573852539
    7. ' -' → logprob: -14.22122573852539
    8. '
' → logprob: -14.40872573852539
    9. ')' → logprob: -14.84622573852539
    10. '(' → logprob: -14.90872573852539

Token 142: ']/' (ID: 18500)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07055916637182236
    2. ')))' → logprob: -3.07055926322937
    3. '[' → logprob: -3.94555926322937
    4. ',x' → logprob: -6.820559024810791
    5. ']))' → logprob: -7.445559024810791
    6. ' ,' → logprob: -7.945559024810791
    7. ')' → logprob: -9.44555950164795
    8. '))' → logprob: -9.44555950164795
    9. ')));' → logprob: -10.32055950164795
    10. '   ' → logprob: -10.44555950164795

Token 143: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012517772847786546
    2. ' x' → logprob: -6.751251697540283
    3. '(x' → logprob: -10.126252174377441
    4. '(' → logprob: -10.626252174377441
    5. ' (' → logprob: -11.251252174377441
    6. 'max' → logprob: -13.376252174377441
    7. '1' → logprob: -13.376252174377441
    8. '(max' → logprob: -14.751252174377441
    9. ' ' → logprob: -15.376252174377441
    10. '   ' → logprob: -15.501252174377441

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003180094063282013
    2. '1' → logprob: -5.753180027008057
    3. '```' → logprob: -14.253180503845215
    4. '[
' → logprob: -14.628180503845215
    5. ' ' → logprob: -15.378180503845215
    6. ' [' → logprob: -15.378180503845215
    7. ',' → logprob: -15.503180503845215
    8. '
' → logprob: -15.503180503845215
    9. '-' → logprob: -16.6281795501709
    10. ')' → logprob: -16.7531795501709

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.50000286102295
    3. '[' → logprob: -14.25000286102295
    4. '
' → logprob: -14.37500286102295
    5. ' ' → logprob: -15.75000286102295
    6. '

' → logprob: -16.750003814697266
    7. '```' → logprob: -17.062503814697266
    8. '
' → logprob: -17.375003814697266
    9. '۱' → logprob: -17.375003814697266
    10. '-' → logprob: -17.437503814697266

Token 146: '],' (ID: 2155)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.093290314078331
    2. ',' → logprob: -2.718290328979492
    3. ')' → logprob: -4.093290328979492
    4. '))' → logprob: -5.718290328979492
    5. '),' → logprob: -6.593290328979492
    6. '))))' → logprob: -6.718290328979492
    7. ')));' → logprob: -8.468290328979492
    8. ' ,' → logprob: -9.718290328979492
    9. ' ' → logprob: -10.093290328979492
    10. '):' → logprob: -10.343290328979492

Token 147: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03559259697794914
    2. '-x' → logprob: -3.660592555999756
    3. ' x' → logprob: -5.410592555999756
    4. '-' → logprob: -5.410592555999756
    5. ' -' → logprob: -8.285593032836914
    6. '1' → logprob: -10.285593032836914
    7. '   ' → logprob: -12.285593032836914
    8. ' ' → logprob: -12.285593032836914
    9. ')x' → logprob: -12.660593032836914
    10. '+x' → logprob: -13.035593032836914

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021887190639972687
    2. ')))' → logprob: -3.8968873023986816
    3. '1' → logprob: -7.646887302398682
    4. '))' → logprob: -8.271886825561523
    5. ')' → logprob: -8.521886825561523
    6. '0' → logprob: -9.021886825561523
    7. ' ' → logprob: -9.021886825561523
    8. ']))' → logprob: -10.646886825561523
    9. ')));' → logprob: -11.146886825561523
    10. '[::-' → logprob: -11.146886825561523

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3492574393749237
    2. '0' → logprob: -1.224257469177246
    3. ' ' → logprob: -7.974257469177246
    4. '-' → logprob: -8.724257469177246
    5. ')' → logprob: -9.349257469177246
    6. '[' → logprob: -9.474257469177246
    7. '
' → logprob: -9.724257469177246
    8. '   ' → logprob: -10.724257469177246
    9. ' -' → logprob: -11.536757469177246
    10. '  ' → logprob: -12.224257469177246

Token 150: ']),' (ID: 19560)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.042883969843387604
    2. '),' → logprob: -3.29288387298584
    3. '))' → logprob: -5.66788387298584
    4. ')' → logprob: -7.54288387298584
    5. ')))
' → logprob: -7.79288387298584
    6. '))))' → logprob: -8.41788387298584
    7. ' ' → logprob: -9.54288387298584
    8. ')));' → logprob: -10.16788387298584
    9. ',' → logprob: -10.29288387298584
    10. ')),' → logprob: -11.16788387298584

Token 151: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.014164102263748646
    2. ' reverse' → logprob: -4.264163970947266
    3. ')' → logprob: -15.389163970947266
    4. '_reverse' → logprob: -16.389163970947266
    5. ' ' → logprob: -16.639163970947266
    6. '  ' → logprob: -16.639163970947266
    7. '.reverse' → logprob: -17.014163970947266
    8. '   ' → logprob: -17.014163970947266
    9. '(reverse' → logprob: -17.139163970947266
    10. '0' → logprob: -18.014163970947266

Token 152: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -9.805981972021982e-05
    2. '=' → logprob: -9.25009822845459
    3. 'True' → logprob: -13.87509822845459
    4. '=False' → logprob: -14.12509822845459
    5. '=
' → logprob: -17.125097274780273
    6. ' True' → logprob: -17.375097274780273
    7. ')' → logprob: -17.500097274780273
    8. '(True' → logprob: -17.625097274780273
    9. '=T' → logprob: -18.375097274780273
    10. ' =' → logprob: -18.750097274780273

Token 153: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01119176484644413
    2. ')' → logprob: -4.5111918449401855
    3. ')))' → logprob: -8.886191368103027
    4. ' ))' → logprob: -13.261191368103027
    5. '),' → logprob: -14.011191368103027
    6. '))
' → logprob: -14.011191368103027
    7. '   ' → logprob: -14.011191368103027
    8. ')
' → logprob: -15.011191368103027
    9. ' ' → logprob: -15.886191368103027
    10. '))))' → logprob: -16.011192321777344

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5080448985099792
    2. '[' → logprob: -1.758044958114624
    3. '<|end|>' → logprob: -2.383044958114624
    4. ')' → logprob: -2.883044958114624
    5. ':' → logprob: -3.133044958114624
    6. ',' → logprob: -4.758044719696045
    7. '[
' → logprob: -5.258044719696045
    8. '#' → logprob: -5.758044719696045
    9. '   ' → logprob: -6.133044719696045
    10. '\n' → logprob: -6.258044719696045

Token 155: ' NN' (ID: 98746)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.08516263961792
    2. ')' → logprob: -1.33516263961792
    3. '[' → logprob: -2.08516263961792
    4. ':' → logprob: -2.21016263961792
    5. '<|end|>' → logprob: -3.21016263961792
    6. ' ' → logprob: -3.33516263961792
    7. '   ' → logprob: -3.96016263961792
    8. '#' → logprob: -3.96016263961792
    9. ' 
' → logprob: -5.21016263961792
    10. ',' → logprob: -5.33516263961792

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873540163040161
    2. '=' → logprob: -1.1373540163040161
    3. ',' → logprob: -8.012353897094727
    4. '=len' → logprob: -8.887353897094727
    5. ' ' → logprob: -11.887353897094727
    6. ')' → logprob: -13.762353897094727
    7. ' =)' → logprob: -13.887353897094727
    8. '＝' → logprob: -14.262353897094727
    9. ' ,' → logprob: -14.512353897094727
    10. '   ' → logprob: -14.512353897094727

Token 157: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03472434729337692
    2. ' len' → logprob: -3.409724235534668
    3. '[len' → logprob: -7.534724235534668
    4. 'W' → logprob: -9.159724235534668
    5. 'N' → logprob: -9.409724235534668
    6. '[' → logprob: -9.659724235534668
    7. '[]' → logprob: -9.784724235534668
    8. ' W' → logprob: -10.284724235534668
    9. '(len' → logprob: -10.284724235534668
    10. '0' → logprob: -10.409724235534668

Token 158: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.722539834911004e-05
    2. '(S' → logprob: -9.250097274780273
    3. '(ss' → logprob: -14.000097274780273
    4. 'SS' → logprob: -16.000097274780273
    5. ' (' → logprob: -16.625097274780273
    6. '(
' → logprob: -17.375097274780273
    7. 'S' → logprob: -17.750097274780273
    8. '((' → logprob: -18.500097274780273
    9. '```' → logprob: -19.000097274780273
    10. '(s' → logprob: -19.125097274780273

Token 159: 'SS' (ID: 3642)
  Prédit: 'SS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SS' → logprob: -0.00012725738633889705
    2. 'S' → logprob: -9.000126838684082
    3. ' SS' → logprob: -12.625126838684082
    4. '(S' → logprob: -15.000126838684082
    5. '(' → logprob: -16.2501277923584
    6. ')' → logprob: -18.3751277923584
    7. 'ss' → logprob: -19.3751277923584
    8. '_SS' → logprob: -20.0001277923584
    9. ' ' → logprob: -20.3751277923584
    10. '   ' → logprob: -20.3751277923584

Token 160: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028482675552368164
    2. ')
' → logprob: -5.877848148345947
    3. '   ' → logprob: -10.627848625183105
    4. ' )' → logprob: -11.627848625183105
    5. ')

' → logprob: -12.502848625183105
    6. '),' → logprob: -14.502848625183105
    7. ',' → logprob: -14.502848625183105
    8. '
' → logprob: -14.752848625183105
    9. ')+' → logprob: -14.877848625183105
    10. '))' → logprob: -14.877848625183105

Token 161: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30611881613731384
    2. ' dp' → logprob: -1.4311188459396362
    3. '   ' → logprob: -4.306118965148926
    4. '
' → logprob: -6.056118965148926
    5. 'DP' → logprob: -6.306118965148926
    6. ' DP' → logprob: -6.556118965148926
    7. '    
' → logprob: -6.681118965148926
    8. 'd' → logprob: -8.243618965148926
    9. '	dp' → logprob: -8.368618965148926
    10. 'INF' → logprob: -8.493618965148926

Token 162: ' def' (ID: 1056)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005612457636743784
    2. 'ans' → logprob: -6.880612373352051
    3. ' dp' → logprob: -7.130612373352051
    4. 'DP' → logprob: -7.755612373352051
    5. 'def' (adapté à ' def') → logprob: -8.00561237335205
    6. 'd' → logprob: -8.50561237335205
    7. 'res' → logprob: -8.63061237335205
    8. 'import' → logprob: -8.88061237335205
    9. 'INF' → logprob: -8.88061237335205
    10. 'best' → logprob: -8.88061237335205

Token 163: ' ub' (ID: 11590)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7931129336357117
    2. ' dfs' → logprob: -0.7931129336357117
    3. ' solve' → logprob: -3.4181129932403564
    4. ' kn' → logprob: -3.9181129932403564
    5. ' calc' → logprob: -4.418112754821777
    6. ' rec' → logprob: -4.668112754821777
    7. ' f' → logprob: -5.293112754821777
    8. ' best' → logprob: -6.043112754821777
    9. ' ' → logprob: -6.668112754821777
    10. ' check' → logprob: -6.668112754821777

Token 164: 'ound' (ID: 895)
  Prédit: 'ound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ound' → logprob: -0.14661645889282227
    2. '(v' → logprob: -3.2716164588928223
    3. '(x' → logprob: -3.5216164588928223
    4. '(N' → logprob: -3.6466164588928223
    5. '(W' → logprob: -4.521616458892822
    6. '(i' → logprob: -4.646616458892822
    7. '(n' → logprob: -5.646616458892822
    8. '(w' → logprob: -5.896616458892822
    9. 'b' → logprob: -6.146616458892822
    10. '_(' → logprob: -6.271616458892822

Token 165: '(v' (ID: 6932)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9234190583229065
    2. '(i' → logprob: -1.7984189987182617
    3. '(w' → logprob: -2.0484189987182617
    4. '(v' → logprob: -2.5484189987182617
    5. '(s' → logprob: -3.4234189987182617
    6. '(k' → logprob: -4.048418998718262
    7. '(t' → logprob: -4.048418998718262
    8. '(idx' → logprob: -4.173418998718262
    9. '(d' → logprob: -4.423418998718262
    10. '(p' → logprob: -4.548418998718262

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013414669781923294
    2. '):' → logprob: -4.5134148597717285
    3. '):
' → logprob: -6.7634148597717285
    4. ' ,' → logprob: -7.6384148597717285
    5. ',w' → logprob: -8.13841438293457
    6. ',v' → logprob: -8.63841438293457
    7. '   ' → logprob: -9.88841438293457
    8. ',k' → logprob: -10.01341438293457
    9. ')' → logprob: -10.88841438293457
    10. ',n' → logprob: -10.88841438293457

Token 167: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.31558215618133545
    2. 'i' → logprob: -2.065582275390625
    3. ' w' → logprob: -2.315582275390625
    4. 'idx' → logprob: -4.440582275390625
    5. ' i' → logprob: -4.565582275390625
    6. ' idx' → logprob: -5.690582275390625
    7. 'pos' → logprob: -6.190582275390625
    8. 'W' → logprob: -6.315582275390625
    9. 'c' → logprob: -6.440582275390625
    10. 'k' → logprob: -6.565582275390625

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26073122024536133
    2. '):' → logprob: -1.5107312202453613
    3. '):
' → logprob: -4.760731220245361
    4. ')' → logprob: -9.635730743408203
    5. '):
' → logprob: -9.760730743408203
    6. ' ,' → logprob: -10.260730743408203
    7. '):

' → logprob: -11.510730743408203
    8. ' ):' → logprob: -11.510730743408203
    9. '   ' → logprob: -12.135730743408203
    10. ':' → logprob: -13.073230743408203

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7049396634101868
    2. 'idx' → logprob: -1.204939603805542
    3. ' idx' → logprob: -2.829939603805542
    4. 'k' → logprob: -3.829939603805542
    5. ' i' → logprob: -3.954939603805542
    6. 'pos' → logprob: -3.954939603805542
    7. 'x' → logprob: -4.329939842224121
    8. 'l' → logprob: -4.829939842224121
    9. 'n' → logprob: -5.329939842224121
    10. 'start' → logprob: -5.329939842224121

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07503817975521088
    2. '):
' → logprob: -2.700038194656372
    3. ',' → logprob: -5.450037956237793
    4. '):
' → logprob: -7.450037956237793
    5. ')' → logprob: -9.075037956237793
    6. ' ):' → logprob: -10.075037956237793
    7. '=' → logprob: -11.200037956237793
    8. '   ' → logprob: -11.200037956237793
    9. '):

' → logprob: -11.700037956237793
    10. ':' → logprob: -11.700037956237793

Token 171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004833565093576908
    2. ':' → logprob: -6.629833698272705
    3. ' if' → logprob: -6.629833698272705
    4. '       ' → logprob: -7.004833698272705
    5. ',' → logprob: -7.379833698272705
    6. '    ' → logprob: -8.879833221435547
    7. '    
' → logprob: -9.004833221435547
    8. '  ' → logprob: -10.004833221435547
    9. '<|end|>' → logprob: -10.004833221435547
    10. 'if' → logprob: -10.129833221435547

Token 172: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10588806867599487
    2. '   ' → logprob: -2.9808881282806396
    3. ' if' → logprob: -3.1058881282806396
    4. 'return' → logprob: -6.7308878898620605
    5. 'j' → logprob: -7.1058878898620605
    6. 'while' → logprob: -7.7308878898620605
    7. 'r' → logprob: -7.9808878898620605
    8. 's' → logprob: -8.105888366699219
    9. 'res' → logprob: -8.230888366699219
    10. 'ret' → logprob: -8.605888366699219

Token 173: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3718843460083008
    2. ' j' → logprob: -1.2468843460083008
    3. 'x' → logprob: -5.246884346008301
    4. 'v' → logprob: -5.871884346008301
    5. 'idx' → logprob: -6.121884346008301
    6. 'k' → logprob: -6.371884346008301
    7. ' idx' → logprob: -6.621884346008301
    8. ' v' → logprob: -6.746884346008301
    9. 'i' → logprob: -6.871884346008301
    10. ';' → logprob: -7.246884346008301

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12706124782562256
    2. 'in' → logprob: -2.127061367034912
    3. ' ' → logprob: -10.127060890197754
    4. 'n' → logprob: -10.752060890197754
    5. 'range' → logprob: -11.002060890197754
    6. 'i' → logprob: -11.377060890197754
    7. ')' → logprob: -11.627060890197754
    8. '   ' → logprob: -11.752060890197754
    9. ',' → logprob: -11.877060890197754
    10. '  ' → logprob: -13.002060890197754

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005937328562140465
    2. ' range' → logprob: -5.130937099456787
    3. '   ' → logprob: -12.755937576293945
    4. '(range' → logprob: -13.380937576293945
    5. ' ' → logprob: -13.505937576293945
    6. '  ' → logprob: -14.380937576293945
    7. 'rang' → logprob: -14.630937576293945
    8. '	range' → logprob: -14.630937576293945
    9. '
' → logprob: -14.755937576293945
    10. ' xrange' → logprob: -14.880937576293945

Token 176: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039760615676641464
    2. '(i' → logprob: -3.2897605895996094
    3. ' i' → logprob: -6.664760589599609
    4. '   ' → logprob: -9.03976058959961
    5. '(N' → logprob: -9.16476058959961
    6. 'NN' → logprob: -9.53976058959961
    7. ',i' → logprob: -10.03976058959961
    8. 'j' → logprob: -10.53976058959961
    9. '(' → logprob: -11.03976058959961
    10. ',' → logprob: -11.41476058959961

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00311984121799469
    2. ' ,' → logprob: -6.253119945526123
    3. '+' → logprob: -7.003119945526123
    4. ',N' → logprob: -8.628119468688965
    5. ' +' → logprob: -9.628119468688965
    6. '   ' → logprob: -11.378119468688965
    7. '+,' → logprob: -12.003119468688965
    8. ',len' → logprob: -12.753119468688965
    9. ',
' → logprob: -12.878119468688965
    10. ' ' → logprob: -13.128119468688965

Token 178: ' NN' (ID: 98746)
  Prédit: 'NN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NN' → logprob: -3.0590548703912646e-05
    2. ' NN' → logprob: -11.000030517578125
    3. ' ' → logprob: -11.875030517578125
    4. 'N' → logprob: -12.625030517578125
    5. 'len' → logprob: -13.250030517578125
    6. '   ' → logprob: -14.000030517578125
    7. '  ' → logprob: -15.000030517578125
    8. 'j' → logprob: -15.250030517578125
    9. '
' → logprob: -16.375030517578125
    10. '>NN' → logprob: -16.625030517578125

Token 179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.033723849803209305
    2. '):' → logprob: -3.408723831176758
    3. '   ' → logprob: -10.658723831176758
    4. '       ' → logprob: -11.158723831176758
    5. ' ):
' → logprob: -11.408723831176758
    6. ',' → logprob: -11.783723831176758
    7. '):
' → logprob: -12.158723831176758
    8. ')' → logprob: -12.408723831176758
    9. '):

' → logprob: -12.533723831176758
    10. ':
' → logprob: -12.783723831176758

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09339901804924011
    2. ' if' → logprob: -2.5933990478515625
    3. 'if' → logprob: -5.2183990478515625
    4. '       ' → logprob: -5.2183990478515625
    5. ',' → logprob: -6.4683990478515625
    6. '<|end|>' → logprob: -7.8433990478515625
    7. '        ' → logprob: -8.093399047851562
    8. ':' → logprob: -8.218399047851562
    9. ' /' → logprob: -9.218399047851562
    10. ' v' → logprob: -9.218399047851562

Token 181: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.4885821044445038
    2. 'if' → logprob: -1.8635821342468262
    3. ' if' → logprob: -2.363582134246826
    4. '           ' → logprob: -2.613582134246826
    5. ' v' → logprob: -2.863582134246826
    6. 'vw' → logprob: -5.988582134246826
    7. 'vv' → logprob: -7.113582134246826
    8. '               ' → logprob: -7.238582134246826
    9. 'wv' → logprob: -7.488582134246826
    10. 'w' → logprob: -7.988582134246826

Token 182: 'j' (ID: 73)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2959286868572235
    2. ',' → logprob: -2.045928716659546
    3. '+=' → logprob: -2.170928716659546
    4. '+' → logprob: -5.170928478240967
    5. 'w' → logprob: -6.545928478240967
    6. ' +' → logprob: -7.045928478240967
    7. '   ' → logprob: -7.420928478240967
    8. 'v' → logprob: -7.420928478240967
    9. ' ,' → logprob: -7.545928478240967
    10. ',v' → logprob: -7.545928478240967

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0803329274058342
    2. ',v' → logprob: -3.4553329944610596
    3. '+=' → logprob: -3.7053329944610596
    4. ' +=' → logprob: -4.4553327560424805
    5. '=' → logprob: -5.7053327560424805
    6. '+' → logprob: -6.5803327560424805
    7. ',w' → logprob: -7.4553327560424805
    8. 'v' → logprob: -7.7053327560424805
    9. '/v' → logprob: -7.7053327560424805
    10. ' ,' → logprob: -7.7053327560424805

Token 184: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.007094577420502901
    2. ' w' → logprob: -5.007094383239746
    3. 'w' → logprob: -7.882094383239746
    4. '   ' → logprob: -14.507094383239746
    5. '	w' → logprob: -15.007094383239746
    6. 'vj' → logprob: -15.257094383239746
    7. '_w' → logprob: -15.632094383239746
    8. ' ' → logprob: -16.007095336914062
    9. 'wij' → logprob: -16.632095336914062
    10. '    ' → logprob: -16.757095336914062

Token 185: 'j' (ID: 73)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023418734781444073
    2. ' =' → logprob: -6.1273417472839355
    3. 'j' → logprob: -8.877342224121094
    4. '=j' → logprob: -11.502342224121094
    5. ' ' → logprob: -13.502342224121094
    6. '_j' → logprob: -13.752342224121094
    7. ')' → logprob: -13.752342224121094
    8. 'vj' → logprob: -13.752342224121094
    9. '_=' → logprob: -14.627342224121094
    10. ',' → logprob: -14.627342224121094

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029775718227028847
    2. ' =' → logprob: -3.529775619506836
    3. ',' → logprob: -10.904775619506836
    4. '=w' → logprob: -12.904775619506836
    5. '=v' → logprob: -13.154775619506836
    6. '=j' → logprob: -14.029775619506836
    7. ' ' → logprob: -14.404775619506836
    8. ')' → logprob: -15.529775619506836
    9. 'w' → logprob: -15.904775619506836
    10. '    ' → logprob: -16.529775619506836

Token 187: ' SS' (ID: 30354)
  Prédit: 'SS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SS' → logprob: -0.0004324573092162609
    2. ' SS' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.125432014465332
    4. 'ss' → logprob: -14.250432014465332
    5. '_SS' → logprob: -15.750432014465332
    6. 'S' → logprob: -16.87543296813965
    7. 'v' → logprob: -17.00043296813965
    8. ' ' → logprob: -17.00043296813965
    9. 'Ss' → logprob: -17.62543296813965
    10. '       ' → logprob: -18.25043296813965

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.625011444091797
    3. 'j' → logprob: -13.125011444091797
    4. '[i' → logprob: -16.125011444091797
    5. '
' → logprob: -16.500011444091797
    6. '[v' → logprob: -16.750011444091797
    7. ' [' → logprob: -17.000011444091797
    8. '[js' → logprob: -17.750011444091797
    9. '   ' → logprob: -18.125011444091797
    10. ' j' → logprob: -18.500011444091797

Token 189: ']

' (ID: 3144)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16159382462501526
    2. ']' → logprob: -1.9115937948226929
    3. ']
' → logprob: -6.661593914031982
    4. ']

' → logprob: -9.911593437194824
    5. ' ]
' → logprob: -10.786593437194824
    6. ')
' → logprob: -12.161593437194824
    7. '];' → logprob: -12.536593437194824
    8. ')' → logprob: -13.036593437194824
    9. ' ]' → logprob: -13.036593437194824
    10. '][' → logprob: -13.161593437194824

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030837293714284897
    2. ' if' → logprob: -4.155837059020996
    3. '       ' → logprob: -5.030837059020996
    4. '
' → logprob: -6.030837059020996
    5. 'if' → logprob: -6.405837059020996
    6. ',' → logprob: -7.030837059020996
    7. '<|end|>' → logprob: -7.030837059020996
    8. ' /' → logprob: -7.780837059020996
    9. '            
' → logprob: -8.155837059020996
    10. ' 
' → logprob: -8.530837059020996

Token 191: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47978177666664124
    2. 'if' (adapté à ' if') → logprob: -1.3547817468643188
    3. ' if' → logprob: -2.1047818660736084
    4. 'If' → logprob: -7.604781627655029
    5. '<|end|>' → logprob: -9.229782104492188
    6. ';if' → logprob: -9.479782104492188
    7. ',' → logprob: -9.729782104492188
    8. 'w' → logprob: -9.729782104492188
    9. 's' → logprob: -10.104782104492188
    10. '```' → logprob: -10.354782104492188

Token 192: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20150232315063477
    2. 'wj' → logprob: -2.5765023231506348
    3. 'W' → logprob: -2.7015023231506348
    4. 'vj' → logprob: -4.201502323150635
    5. ' w' → logprob: -4.326502323150635
    6. 'v' → logprob: -4.826502323150635
    7. ' W' → logprob: -6.701502323150635
    8. '   ' → logprob: -7.076502323150635
    9. 'wv' → logprob: -7.826502323150635
    10. '       ' → logprob: -8.951501846313477

Token 193: ' +' (ID: 659)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003558612195774913
    2. '[j' → logprob: -6.00355863571167
    3. '+' → logprob: -8.503558158874512
    4. ' +' → logprob: -8.628558158874512
    5. '[' → logprob: -8.878558158874512
    6. ' <=' → logprob: -9.128558158874512
    7. '<=' → logprob: -9.128558158874512
    8. '_j' → logprob: -9.253558158874512
    9. '>=' → logprob: -9.628558158874512
    10. ' >=' → logprob: -10.003558158874512

Token 194: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.003894614754244685
    2. ' w' → logprob: -6.253894805908203
    3. 'W' → logprob: -7.128894805908203
    4. ' W' → logprob: -7.378894805908203
    5. 'vj' → logprob: -8.003894805908203
    6. 'SS' → logprob: -9.003894805908203
    7. ' SS' → logprob: -10.878894805908203
    8. '1' → logprob: -11.253894805908203
    9. '+' → logprob: -11.253894805908203
    10. '0' → logprob: -11.628894805908203

Token 195: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00019662656995933503
    2. '[j' → logprob: -8.62519645690918
    3. ' j' → logprob: -11.87519645690918
    4. 'i' → logprob: -13.00019645690918
    5. '[' → logprob: -13.25019645690918
    6. '+' → logprob: -13.62519645690918
    7. '_j' → logprob: -14.12519645690918
    8. '
' → logprob: -14.62519645690918
    9. '{' → logprob: -14.87519645690918
    10. '>' → logprob: -15.00019645690918

Token 196: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11640216410160065
    2. ' >' → logprob: -2.2414021492004395
    3. '<=' → logprob: -5.8664021492004395
    4. ' <=' → logprob: -7.3664021492004395
    5. '>=' → logprob: -9.366402626037598
    6. ' ' → logprob: -11.491402626037598
    7. ' >=' → logprob: -12.241402626037598
    8. '<' → logprob: -12.616402626037598
    9. '()>' → logprob: -13.991402626037598
    10. '">' → logprob: -14.366402626037598

Token 197: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00865097250789404
    2. ' W' → logprob: -4.758650779724121
    3. ' ' → logprob: -10.758650779724121
    4. '   ' → logprob: -11.758650779724121
    5. '  ' → logprob: -12.883650779724121
    6. '	W' → logprob: -13.633650779724121
    7. ' ' → logprob: -13.883650779724121
    8. 'w' → logprob: -14.258650779724121
    9. '    ' → logprob: -14.633650779724121
    10. '```' → logprob: -14.883650779724121

Token 198: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6346024870872498
    2. ':' → logprob: -0.7596024870872498
    3. ':return' → logprob: -7.0096025466918945
    4. '               ' → logprob: -7.3846025466918945
    5. '           ' → logprob: -8.009602546691895
    6. ':

' → logprob: -10.009602546691895
    7. ' :
' → logprob: -10.259602546691895
    8. ':
' → logprob: -10.509602546691895
    9. '):
' → logprob: -11.259602546691895
    10. ' :' → logprob: -12.259602546691895

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03890010342001915
    2. 'return' → logprob: -3.913900136947632
    3. ' return' → logprob: -4.038899898529053
    4. '           ' → logprob: -8.163900375366211
    5. '                   ' → logprob: -9.788900375366211
    6. '
' → logprob: -10.038900375366211
    7. 'v' → logprob: -10.163900375366211
    8. ',' → logprob: -10.288900375366211
    9. ':return' → logprob: -10.663900375366211
    10. '	return' → logprob: -11.288900375366211

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12920062243938446
    2. ' return' → logprob: -2.1292006969451904
    3. '               ' → logprob: -6.504200458526611
    4. '                   ' → logprob: -8.12920093536377
    5. '
' → logprob: -8.50420093536377
    6. ':return' → logprob: -9.50420093536377
    7. 'eturn' → logprob: -10.00420093536377
    8. 'v' → logprob: -10.25420093536377
    9. '	return' → logprob: -10.25420093536377
    10. '           ' → logprob: -10.75420093536377

Token 201: ' (-' (ID: 21382)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01712030917406082
    2. ' v' → logprob: -4.767120361328125
    3. 'vj' → logprob: -5.017120361328125
    4. '(v' → logprob: -6.517120361328125
    5. 'w' → logprob: -8.517120361328125
    6. '   ' → logprob: -9.892120361328125
    7. ' (' → logprob: -10.142120361328125
    8. ' ' → logprob: -11.142120361328125
    9. '           ' → logprob: -11.392120361328125
    10. '(' → logprob: -11.517120361328125

Token 202: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.8949130177497864
    2. '(' → logprob: -1.0199129581451416
    3. 'vj' → logprob: -2.1449129581451416
    4. '1' → logprob: -3.1449129581451416
    5. 'v' → logprob: -3.5199129581451416
    6. '(-' → logprob: -4.519913196563721
    7. ' (' → logprob: -4.644913196563721
    8. '(w' → logprob: -4.894913196563721
    9. '((' → logprob: -4.894913196563721
    10. 'wj' → logprob: -6.519913196563721

Token 203: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.70425546169281
    2. '/w' → logprob: -1.70425546169281
    3. ' *' → logprob: -1.70425546169281
    4. '/' → logprob: -2.0792555809020996
    5. '*w' → logprob: -2.4542555809020996
    6. ' /' → logprob: -2.5792555809020996
    7. 'w' → logprob: -2.9542555809020996
    8. ')' → logprob: -3.2042555809020996
    9. '+' → logprob: -3.9542555809020996
    10. ' +' → logprob: -4.0792555809021

Token 204: ' -' (ID: 533)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.6071181297302246
    2. '-(' → logprob: -1.7321181297302246
    3. '-w' → logprob: -1.7321181297302246
    4. '0' → logprob: -2.7321181297302246
    5. '-W' → logprob: -2.8571181297302246
    6. '(w' → logprob: -2.8571181297302246
    7. '-' → logprob: -2.9821181297302246
    8. '-v' → logprob: -3.2321181297302246
    9. 'W' → logprob: -3.3571181297302246
    10. ' (' → logprob: -3.6071181297302246

Token 205: 'v' (ID: 85)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.7448477745056152
    2. 'w' → logprob: -1.1198477745056152
    3. '(v' → logprob: -2.1198477745056152
    4. '((' → logprob: -3.6198477745056152
    5. 'wj' → logprob: -4.494847774505615
    6. 'v' → logprob: -4.619847774505615
    7. '(' → logprob: -4.619847774505615
    8. 'vj' → logprob: -4.744847774505615
    9. ' (' → logprob: -5.119847774505615
    10. ' w' → logprob: -6.244847774505615

Token 206: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9069775342941284
    2. ' +' → logprob: -1.2819775342941284
    3. '+' → logprob: -1.5319775342941284
    4. '*w' → logprob: -3.531977653503418
    5. '*' → logprob: -3.656977653503418
    6. '+w' → logprob: -3.906977653503418
    7. ' *' → logprob: -4.656977653503418
    8. '/w' → logprob: -6.281977653503418
    9. 'w' → logprob: -6.406977653503418
    10. ' -' → logprob: -6.531977653503418

Token 207: ' (' (ID: 350)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.3135489821434021
    2. '(v' → logprob: -1.5635490417480469
    3. '(' → logprob: -4.313549041748047
    4. '(int' → logprob: -4.438549041748047
    5. 'wj' → logprob: -4.438549041748047
    6. '((' → logprob: -4.813549041748047
    7. 'int' → logprob: -5.563549041748047
    8. '(S' → logprob: -5.813549041748047
    9. ' (' → logprob: -6.188549041748047
    10. '(w' → logprob: -6.188549041748047

Token 208: 'W' (ID: 54)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3970772325992584
    2. 'vj' → logprob: -1.147077202796936
    3. ' (' → logprob: -5.6470770835876465
    4. '(' → logprob: -6.2720770835876465
    5. '(S' → logprob: -6.3970770835876465
    6. 'v' → logprob: -7.2720770835876465
    7. '((' → logprob: -7.2720770835876465
    8. '(w' → logprob: -7.7720770835876465
    9. 'wj' → logprob: -8.147077560424805
    10. '(int' → logprob: -8.397077560424805

Token 209: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4127271771430969
    2. '-' → logprob: -1.2877271175384521
    3. '-w' → logprob: -2.787727117538452
    4. '   ' → logprob: -7.662727355957031
    5. ' ' → logprob: -9.537727355957031
    6. 'w' → logprob: -9.662727355957031
    7. '
' → logprob: -10.787727355957031
    8. '           ' → logprob: -11.287727355957031
    9. '  ' → logprob: -11.787727355957031
    10. '          ' → logprob: -12.162727355957031

Token 210: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.20211774110794067
    2. 'w' → logprob: -1.827117681503296
    3. ' w' → logprob: -3.827117681503296
    4. '(w' → logprob: -8.452117919921875
    5. '   ' → logprob: -9.452117919921875
    6. 'wi' → logprob: -10.452117919921875
    7. ' (' → logprob: -11.577117919921875
    8. '(' → logprob: -12.077117919921875
    9. ' ' → logprob: -12.327117919921875
    10. '       ' → logprob: -12.827117919921875

Token 211: ')' (ID: 8)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010821188800036907
    2. 'wj' → logprob: -4.760821342468262
    3. ')' → logprob: -7.010821342468262
    4. 'w' → logprob: -7.135821342468262
    5. 'vj' → logprob: -8.010821342468262
    6. ')/(' → logprob: -9.135821342468262
    7. ')/' → logprob: -10.260821342468262
    8. '_j' → logprob: -11.760821342468262
    9. 'jw' → logprob: -12.010821342468262
    10. '/w' → logprob: -12.260821342468262

Token 212: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22955776751041412
    2. ')' → logprob: -2.354557752609253
    3. ' *' → logprob: -2.979557752609253
    4. '*w' → logprob: -3.854557752609253
    5. '*v' → logprob: -4.354557991027832
    6. '*j' → logprob: -4.604557991027832
    7. '/' → logprob: -5.479557991027832
    8. '/w' → logprob: -5.729557991027832
    9. ' ' → logprob: -6.354557991027832
    10. ')*' → logprob: -6.604557991027832

Token 213: ' v' (ID: 323)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.6381259560585022
    2. '(v' → logprob: -1.0131258964538574
    3. 'v' → logprob: -2.3881258964538574
    4. '-v' → logprob: -5.513125896453857
    5. '(' → logprob: -5.513125896453857
    6. ' v' → logprob: -5.763125896453857
    7. '(-' → logprob: -6.263125896453857
    8. ' (' → logprob: -6.388125896453857
    9. 'vv' → logprob: -7.763125896453857
    10. '(S' → logprob: -7.888125896453857

Token 214: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16678209602832794
    2. '/' → logprob: -2.2917821407318115
    3. '/w' → logprob: -3.7917821407318115
    4. 'x' → logprob: -4.291781902313232
    5. ' /' → logprob: -4.541781902313232
    6. '/v' → logprob: -6.291781902313232
    7. '/W' → logprob: -6.916781902313232
    8. '[j' → logprob: -7.416781902313232
    9. 'vj' → logprob: -7.666781902313232
    10. 'wj' → logprob: -8.29178237915039

Token 215: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7832943797111511
    2. '/w' → logprob: -1.908294439315796
    3. 'wj' → logprob: -2.158294439315796
    4. ')' → logprob: -2.158294439315796
    5. ' /' → logprob: -2.283294439315796
    6. '               ' → logprob: -3.283294439315796
    7. '       ' → logprob: -4.658294200897217
    8. '           ' → logprob: -5.158294200897217
    9. '                   ' → logprob: -5.783294200897217
    10. ')/' → logprob: -6.283294200897217

Token 216: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.0001991298486245796
    2. ' w' → logprob: -8.625199317932129
    3. 'w' → logprob: -11.000199317932129
    4. '   ' → logprob: -13.875199317932129
    5. '(w' → logprob: -14.625199317932129
    6. 'wij' → logprob: -15.125199317932129
    7. '(' → logprob: -15.375199317932129
    8. 'wi' → logprob: -15.750199317932129
    9. ' ' → logprob: -15.750199317932129
    10. '
' → logprob: -16.375198364257812

Token 217: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004131711088120937
    2. ')' → logprob: -5.50413179397583
    3. 'i' → logprob: -10.754131317138672
    4. ']' → logprob: -12.129131317138672
    5. '1' → logprob: -12.254131317138672
    6. '_j' → logprob: -12.254131317138672
    7. '[j' → logprob: -12.504131317138672
    8. '[' → logprob: -13.129131317138672
    9. 's' → logprob: -13.254131317138672
    10. ' j' → logprob: -13.254131317138672

Token 218: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012603526702150702
    2. ')
' → logprob: -6.876260280609131
    3. '           ' → logprob: -9.626260757446289
    4. ' )' → logprob: -9.876260757446289
    5. '               ' → logprob: -9.876260757446289
    6. '       ' → logprob: -10.126260757446289
    7. '   ' → logprob: -11.501260757446289
    8. '))' → logprob: -12.751260757446289
    9. ' ' → logprob: -13.751260757446289
    10. ')

' → logprob: -14.376260757446289

Token 219: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04423714801669121
    2. '        
' → logprob: -3.6692371368408203
    3. '
' → logprob: -4.91923713684082
    4. '   ' → logprob: -6.16923713684082
    5. '<|end|>' → logprob: -6.54423713684082
    6. '    
' → logprob: -6.66923713684082
    7. '\n' → logprob: -6.79423713684082
    8. ')' → logprob: -7.29423713684082
    9. ' return' → logprob: -7.41923713684082
    10. 'return' → logprob: -7.54423713684082

Token 220: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.22647307813167572
    2. 'v' → logprob: -1.851473093032837
    3. '       ' → logprob: -3.726473093032837
    4. ' w' → logprob: -4.601472854614258
    5. ' v' → logprob: -5.601472854614258
    6. 'return' → logprob: -5.851472854614258
    7. 'vj' → logprob: -6.101472854614258
    8. '   ' → logprob: -6.726472854614258
    9. 'continue' → logprob: -7.351472854614258
    10. 'wj' → logprob: -7.851472854614258

Token 221: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4332481026649475
    2. ' +=' → logprob: -1.0582480430603027
    3. '+' → logprob: -5.558248043060303
    4. '=' → logprob: -8.058248519897461
    5. ' +' → logprob: -8.058248519897461
    6. ' =' → logprob: -10.933248519897461
    7. '   ' → logprob: -11.433248519897461
    8. ' ' → logprob: -12.308248519897461
    9. 'plus' → logprob: -12.933248519897461
    10. '+=(' → logprob: -13.183248519897461

Token 222: ' w' (ID: 286)
  Prédit: 'wj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wj' → logprob: -0.0008064138819463551
    2. ' w' → logprob: -7.1258063316345215
    3. 'vj' → logprob: -14.37580680847168
    4. 'w' → logprob: -15.00080680847168
    5. ' ' → logprob: -15.25080680847168
    6. 'wv' → logprob: -15.62580680847168
    7. 'wij' → logprob: -15.62580680847168
    8. '   ' → logprob: -16.00080680847168
    9. '       ' → logprob: -16.75080680847168
    10. '	w' → logprob: -17.00080680847168

Token 223: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015955790877342224
    2. 'wj' → logprob: -9.12515926361084
    3. '_j' → logprob: -10.62515926361084
    4. ' j' → logprob: -10.87515926361084
    5. 'vj' → logprob: -13.25015926361084
    6. 'w' → logprob: -13.37515926361084
    7. '+j' → logprob: -13.75015926361084
    8. '[j' → logprob: -14.62515926361084
    9. 'tj' → logprob: -14.62515926361084
    10. '+' → logprob: -14.75015926361084

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4279923737049103
    2. 'v' → logprob: -2.177992343902588
    3. '
' → logprob: -2.177992343902588
    4. '<|end|>' → logprob: -2.927992343902588
    5. 'return' → logprob: -3.052992343902588
    6. '   ' → logprob: -5.302992343902588
    7. 'else' → logprob: -5.552992343902588
    8. ',' → logprob: -5.927992343902588
    9. ',v' → logprob: -6.302992343902588
    10. ' return' → logprob: -6.677992343902588

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016696956008672714
    2. '   ' → logprob: -4.766696929931641
    3. 'v' → logprob: -5.516696929931641
    4. ' return' → logprob: -6.391696929931641
    5. 'return' → logprob: -7.016696929931641
    6. ')' → logprob: -7.641696929931641
    7. '<|end|>' → logprob: -7.641696929931641
    8. ',' → logprob: -8.39169692993164
    9. '0' → logprob: -10.51669692993164
    10. 'u' → logprob: -10.76669692993164

Token 226: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0005536287208087742
    2. ' v' → logprob: -7.500553607940674
    3. 'vj' → logprob: -14.500554084777832
    4. '	v' → logprob: -16.375553131103516
    5. '   ' → logprob: -17.125553131103516
    6. '       ' → logprob: -17.375553131103516
    7. '
' → logprob: -18.125553131103516
    8. '           ' → logprob: -18.500553131103516
    9. ' ' → logprob: -18.750553131103516
    10. 'w' → logprob: -18.875553131103516

Token 227: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2523726522922516
    2. ' +=' → logprob: -1.5023726224899292
    3. '+' → logprob: -7.752372741699219
    4. '=' → logprob: -11.877372741699219
    5. ' +' → logprob: -13.252372741699219
    6. '   ' → logprob: -13.502372741699219
    7. ']+=' → logprob: -13.502372741699219
    8. ' -=' → logprob: -14.127372741699219
    9. '+=(' → logprob: -14.502372741699219
    10. ' ' → logprob: -15.002372741699219

Token 228: ' v' (ID: 323)
  Prédit: 'vj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vj' → logprob: -0.00132976402528584
    2. ' v' → logprob: -6.6263298988342285
    3. 'wj' → logprob: -14.12632942199707
    4. ' ' → logprob: -14.37632942199707
    5. '   ' → logprob: -14.50132942199707
    6. 'v' → logprob: -14.50132942199707
    7. '	v' → logprob: -14.75132942199707
    8. 'vi' → logprob: -15.25132942199707
    9. '
' → logprob: -16.00132942199707
    10. '(v' → logprob: -16.62632942199707

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016539888747502118
    2. 'vj' → logprob: -9.125164985656738
    3. 'wj' → logprob: -10.125164985656738
    4. ' j' → logprob: -12.000164985656738
    5. '_j' → logprob: -12.000164985656738
    6. '<|end|>' → logprob: -13.125164985656738
    7. 'w' → logprob: -14.250164985656738
    8. 'v' → logprob: -14.750164985656738
    9. 'bj' → logprob: -15.750164985656738
    10. '[j' → logprob: -15.750164985656738

Token 230: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2199946790933609
    2. 'return' → logprob: -2.2199947834014893
    3. '   ' → logprob: -2.9699947834014893
    4. ' return' → logprob: -3.3449947834014893
    5. '
' → logprob: -7.09499454498291
    6. '<|end|>' → logprob: -7.21999454498291
    7. ')' → logprob: -8.59499454498291
    8. '	return' → logprob: -8.84499454498291
    9. 'eturn' → logprob: -9.59499454498291
    10. ' ' → logprob: -10.21999454498291

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.466943621635437
    2. 'return' → logprob: -1.341943621635437
    3. ' return' → logprob: -2.8419437408447266
    4. '   ' → logprob: -2.9669437408447266
    5. '<|end|>' → logprob: -6.591943740844727
    6. '
' → logprob: -8.466943740844727
    7. '	return' → logprob: -9.841943740844727
    8. ' ' → logprob: -10.091943740844727
    9. 'None' → logprob: -10.591943740844727
    10. '```' → logprob: -10.716943740844727

Token 232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00912997405976057
    2. ' return' → logprob: -5.009130001068115
    3. '   ' → logprob: -6.259130001068115
    4. '       ' → logprob: -8.259129524230957
    5. '
' → logprob: -8.384129524230957
    6. '	return' → logprob: -12.134129524230957
    7. '        
' → logprob: -13.384129524230957
    8. ' ' → logprob: -14.009129524230957
    9. 'eturn' → logprob: -14.134129524230957
    10. '  ' → logprob: -14.509129524230957

Token 233: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.7401324510574341
    2. '-v' → logprob: -0.7401324510574341
    3. ' (-' → logprob: -4.1151323318481445
    4. ' -' → logprob: -4.2401323318481445
    5. 'v' → logprob: -4.9901323318481445
    6. '(v' → logprob: -5.6151323318481445
    7. ' (' → logprob: -6.2401323318481445
    8. ' v' → logprob: -7.1151323318481445
    9. '(' → logprob: -7.3651323318481445
    10. '-' → logprob: -7.6151323318481445

Token 234: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.153795766294934e-06
    2. ' v' → logprob: -12.125005722045898
    3. 'w' → logprob: -15.000005722045898
    4. '   ' → logprob: -16.1250057220459
    5. '0' → logprob: -16.6250057220459
    6. ')v' → logprob: -16.8750057220459
    7. ')' → logprob: -17.5000057220459
    8. 'value' → logprob: -17.6250057220459
    9. '
' → logprob: -18.0000057220459
    10. ' ' → logprob: -18.5000057220459

Token 235: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022837184369564056
    2. ',' → logprob: -6.127283573150635
    3. ')
' → logprob: -9.752284049987793
    4. ',)' → logprob: -11.002284049987793
    5. ' )' → logprob: -11.002284049987793
    6. '   ' → logprob: -13.377284049987793
    7. ' ,' → logprob: -13.752284049987793
    8. '<|end|>' → logprob: -14.377284049987793
    9. '),' → logprob: -14.502284049987793
    10. ')return' → logprob: -14.502284049987793

Token 236: ' -' (ID: 533)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.0015771172475069761
    2. ' -' → logprob: -7.376576900482178
    3. '0' → logprob: -7.876576900482178
    4. '-V' → logprob: -8.376577377319336
    5. '-w' → logprob: -8.626577377319336
    6. '-' → logprob: -9.376577377319336
    7. '(-' → logprob: -10.876577377319336
    8. '-W' → logprob: -11.376577377319336
    9. '-inf' → logprob: -11.376577377319336
    10. ' ' → logprob: -11.751577377319336

Token 237: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.372294698550832e-06
    2. ' v' → logprob: -12.500009536743164
    3. '0' → logprob: -13.750009536743164
    4. 'w' → logprob: -13.875009536743164
    5. '   ' → logprob: -14.000009536743164
    6. 'float' → logprob: -14.125009536743164
    7. '1' → logprob: -14.500009536743164
    8. ')' → logprob: -15.125009536743164
    9. '
' → logprob: -15.875009536743164
    10. '100' → logprob: -16.000009536743164

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013500562636181712
    2. ' )' → logprob: -9.12513542175293
    3. ')
' → logprob: -10.87513542175293
    4. '   ' → logprob: -12.75013542175293
    5. '       ' → logprob: -14.00013542175293
    6. ')return' → logprob: -14.37513542175293
    7. '))' → logprob: -14.50013542175293
    8. ')`' → logprob: -14.75013542175293
    9. ')

' → logprob: -15.00013542175293
    10. 'w' → logprob: -15.25013542175293

Token 239: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45530185103416443
    2. '<|end|>' → logprob: -1.4553018808364868
    3. '   ' → logprob: -2.2053017616271973
    4. '
' → logprob: -3.9553017616271973
    5. ' ' → logprob: -7.205301761627197
    6. 'def' → logprob: -7.580301761627197
    7. '<|end|>' → logprob: -8.080302238464355
    8. ')
' → logprob: -8.830302238464355
    9. ' )' → logprob: -8.955302238464355
    10. '    
' → logprob: -9.205302238464355

Token 240: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26533791422843933
    2. 'def' → logprob: -2.6403379440307617
    3. 'dp' → logprob: -2.6403379440307617
    4. 'v' → logprob: -3.5153379440307617
    5. 'for' → logprob: -4.765337944030762
    6. 'stack' → logprob: -5.015337944030762
    7. 'q' → logprob: -5.265337944030762
    8. 'import' → logprob: -5.390337944030762
    9. '#' → logprob: -5.765337944030762
    10. 'p' → logprob: -5.890337944030762

Token 241: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018725620582699776
    2. ',' → logprob: -4.768725395202637
    3. 'pper' → logprob: -6.018725395202637
    4. ' =' → logprob: -6.518725395202637
    5. 's' → logprob: -6.643725395202637
    6. 'n' → logprob: -6.893725395202637
    7. 'pp' → logprob: -7.643725395202637
    8. '=' → logprob: -7.643725395202637
    9. 'pd' → logprob: -7.893725395202637
    10. 'cb' → logprob: -8.143725395202637

Token 242: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.26538464426994324
    2. ',' → logprob: -2.1403846740722656
    3. ' =' → logprob: -2.8903846740722656
    4. '0' → logprob: -3.1403846740722656
    5. 'pper' → logprob: -5.140384674072266
    6. '=' → logprob: -6.390384674072266
    7. 's' → logprob: -6.765384674072266
    8. 'pb' → logprob: -7.140384674072266
    9. '1' → logprob: -7.265384674072266
    10. 'pd' → logprob: -7.390384674072266

Token 243: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029969044029712677
    2. 'ub' → logprob: -4.154969215393066
    3. ' u' → logprob: -5.154969215393066
    4. 'v' → logprob: -5.279969215393066
    5. '0' → logprob: -7.154969215393066
    6. ' ub' → logprob: -7.154969215393066
    7. '_' → logprob: -8.404969215393066
    8. 'l' → logprob: -8.779969215393066
    9. 'uu' → logprob: -8.904969215393066
    10. 'inf' → logprob: -9.404969215393066

Token 244: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21312741935253143
    2. '0' → logprob: -2.463127374649048
    3. ' =' → logprob: -2.838127374649048
    4. 'p' → logprob: -3.088127374649048
    5. ',' → logprob: -6.213127613067627
    6. '_' → logprob: -8.088127136230469
    7. '   ' → logprob: -9.588127136230469
    8. 'c' → logprob: -9.588127136230469
    9. ' ' → logprob: -9.963127136230469
    10. 'u' → logprob: -10.463127136230469

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859282076358795
    2. ' =' → logprob: -3.0485928058624268
    3. '=u' → logprob: -12.673592567443848
    4. ',' → logprob: -14.048592567443848
    5. '=f' → logprob: -15.298592567443848
    6. '=v' → logprob: -15.798592567443848
    7. ' ' → logprob: -15.923592567443848
    8. '=user' → logprob: -16.298593521118164
    9. ')' → logprob: -16.673593521118164
    10. '=w' → logprob: -16.798593521118164

Token 246: ' ' (ID: 220)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.03767705336213112
    2. ' ub' → logprob: -3.787677049636841
    3. '0' → logprob: -4.41267728805542
    4. '-' → logprob: -7.16267728805542
    5. '(' → logprob: -7.66267728805542
    6. ' ' → logprob: -8.037676811218262
    7. '(-' → logprob: -8.287676811218262
    8. '   ' → logprob: -10.037676811218262
    9. '1' → logprob: -10.350176811218262
    10. ' (' → logprob: -10.600176811218262

Token 247: ' ub' (ID: 11590)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.03163278475403786
    2. '0' → logprob: -3.531632900238037
    3. '(' → logprob: -7.406632900238037
    4. ' ub' → logprob: -7.656632900238037
    5. '-' → logprob: -8.156632423400879
    6. 'float' → logprob: -8.531632423400879
    7. '(-' → logprob: -9.531632423400879
    8. '1' → logprob: -9.906632423400879
    9. '100' → logprob: -10.906632423400879
    10. ' ' → logprob: -11.094132423400879

Token 248: 'ound' (ID: 895)
  Prédit: 'ound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ound' → logprob: -1.5048530030981055e-06
    2. 'ount' → logprob: -13.500001907348633
    3. 'oun' → logprob: -17.750001907348633
    4. 'o' → logprob: -18.000001907348633
    5. 'OUND' → logprob: -19.000001907348633
    6. 'ounds' → logprob: -19.125001907348633
    7. 'ounding' → logprob: -19.125001907348633
    8. 'ond' → logprob: -19.625001907348633
    9. '(' → logprob: -20.375001907348633
    10. 'ounded' → logprob: -21.250001907348633

Token 249: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003993296413682401
    2. '0' → logprob: -8.000399589538574
    3. ' (' → logprob: -9.875399589538574
    4. '   ' → logprob: -12.000399589538574
    5. '(-' → logprob: -13.750399589538574
    6. '(N' → logprob: -13.750399589538574
    7. ' ' → logprob: -14.000399589538574
    8. '((' → logprob: -14.375399589538574
    9. '(
' → logprob: -14.625399589538574
    10. '
' → logprob: -14.625399589538574

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016718693950679153
    2. ' ' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.250166893005371
    4. ',' → logprob: -13.875166893005371
    5. '  ' → logprob: -14.375166893005371
    6. '    ' → logprob: -14.937666893005371
    7. ')' → logprob: -15.187666893005371
    8. '-' → logprob: -15.250166893005371
    9. '00' → logprob: -15.250166893005371
    10. '     ' → logprob: -15.625166893005371

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002581209992058575
    2. '0' → logprob: -8.625258445739746
    3. ' ,' → logprob: -9.500258445739746
    4. ')' → logprob: -14.000258445739746
    5. ',
' → logprob: -14.125258445739746
    6. ' ' → logprob: -14.125258445739746
    7. '   ' → logprob: -15.125258445739746
    8. '`,' → logprob: -15.375258445739746
    9. '),' → logprob: -15.750258445739746
    10. '```' → logprob: -16.37525749206543

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. ',' → logprob: -14.875059127807617
    4. ')' → logprob: -16.625059127807617
    5. '   ' → logprob: -16.625059127807617
    6. '  ' → logprob: -17.250059127807617
    7. '<|end|>' → logprob: -17.875059127807617
    8. '00' → logprob: -18.750059127807617
    9. '    ' → logprob: -19.250059127807617
    10. '۰' → logprob: -19.750059127807617

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. ',' → logprob: -15.875019073486328
    4. ')' → logprob: -17.000019073486328
    5. '   ' → logprob: -17.250019073486328
    6. '  ' → logprob: -17.750019073486328
    7. '00' → logprob: -17.875019073486328
    8. '۰' → logprob: -18.812519073486328
    9. '<|end|>' → logprob: -19.250019073486328
    10. '000' → logprob: -19.375019073486328

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.183501293184236e-05
    2. '0' → logprob: -10.25007152557373
    3. ' ,' → logprob: -10.37507152557373
    4. '   ' → logprob: -12.50007152557373
    5. '1' → logprob: -13.87507152557373
    6. ' ' → logprob: -16.250072479248047
    7. ',
' → logprob: -16.625072479248047
    8. '  ' → logprob: -16.625072479248047
    9. '2' → logprob: -16.625072479248047
    10. '4' → logprob: -17.625072479248047

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016706773021724075
    2. ' ' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.625166893005371
    4. '1' → logprob: -12.750166893005371
    5. ')' → logprob: -13.875166893005371
    6. '  ' → logprob: -14.750166893005371
    7. '    ' → logprob: -15.562666893005371
    8. '00' → logprob: -15.750166893005371
    9. '2' → logprob: -16.187667846679688
    10. '       ' → logprob: -16.312667846679688

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.875060081481934
    3. '1' → logprob: -12.750060081481934
    4. '   ' → logprob: -12.875060081481934
    5. ')' → logprob: -13.375060081481934
    6. '00' → logprob: -14.937560081481934
    7. '  ' → logprob: -15.000060081481934
    8. '    ' → logprob: -15.937560081481934
    9. '2' → logprob: -16.62506103515625
    10. '     ' → logprob: -16.75006103515625

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.908022285439074e-05
    2. ')
' → logprob: -10.000059127807617
    3. ' )' → logprob: -11.875059127807617
    4. '   ' → logprob: -12.125059127807617
    5. ',' → logprob: -15.250059127807617
    6. ')
' → logprob: -15.625059127807617
    7. '))' → logprob: -16.125059127807617
    8. ',)' → logprob: -16.125059127807617
    9. ')

' → logprob: -16.375059127807617
    10. ' ' → logprob: -16.375059127807617

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055945608764886856
    2. '<|end|>' → logprob: -3.180945634841919
    3. '    
' → logprob: -5.18094539642334
    4. '
' → logprob: -5.55594539642334
    5. ')' → logprob: -6.68094539642334
    6. ',' → logprob: -6.93094539642334
    7. '<|end|>' → logprob: -8.18094539642334
    8. '    ' → logprob: -8.68094539642334
    9. ' 
' → logprob: -9.05594539642334
    10. '  
' → logprob: -10.05594539642334

Token 259: ' um' (ID: 1713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1957279443740845
    2. 'stack' → logprob: -1.1957279443740845
    3. 'import' → logprob: -2.195727825164795
    4. 'from' → logprob: -2.695727825164795
    5. 'q' → logprob: -2.820727825164795
    6. 'heap' → logprob: -2.945727825164795
    7. 'pq' → logprob: -3.570727825164795
    8. 'u' → logprob: -3.945727825164795
    9. ')' → logprob: -4.695727825164795
    10. 'dp' → logprob: -5.445727825164795

Token 260: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.26120835542678833
    2. '=' → logprob: -2.6362082958221436
    3. 'a' → logprob: -2.7612082958221436
    4. '0' → logprob: -3.7612082958221436
    5. ',' → logprob: -3.8862082958221436
    6. 'in' → logprob: -4.386208534240723
    7. 'p' → logprob: -4.636208534240723
    8. 'x' → logprob: -4.636208534240723
    9. ' =' → logprob: -5.136208534240723
    10. '   ' → logprob: -5.761208534240723

Token 261: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0476714372634888
    2. 'float' → logprob: -1.0476714372634888
    3. '0' → logprob: -2.547671318054199
    4. '10' → logprob: -2.672671318054199
    5. '1' → logprob: -3.547671318054199
    6. '(' → logprob: -3.672671318054199
    7. ' float' → logprob: -3.797671318054199
    8. '-' → logprob: -4.047671318054199
    9. '100' → logprob: -4.797671318054199
    10. ' u' → logprob: -4.797671318054199

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006796844303607941
    2. '1' → logprob: -5.006796836853027
    3. '=' → logprob: -10.381796836853027
    4. ' =' → logprob: -11.006796836853027
    5. ',' → logprob: -11.631796836853027
    6. 'x' → logprob: -12.506796836853027
    7. 'n' → logprob: -12.881796836853027
    8. ' ' → logprob: -13.006796836853027
    9. 'u' → logprob: -13.006796836853027
    10. '_' → logprob: -13.569296836853027

Token 263: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09213098138570786
    2. '<|end|>' → logprob: -2.4671308994293213
    3. ')' → logprob: -7.0921311378479
    4. '
' → logprob: -7.7171311378479
    5. '    ' → logprob: -7.9671311378479
    6. ',' → logprob: -8.342130661010742
    7. ' for' → logprob: -8.467130661010742
    8. '    
' → logprob: -8.717130661010742
    9. '<|end|>' → logprob: -8.842130661010742
    10. 'import' → logprob: -8.967130661010742

Token 265: ' ans' (ID: 3345)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2001692056655884
    2. 'stack' → logprob: -1.8251692056655884
    3. 'q' → logprob: -2.200169086456299
    4. 'from' → logprob: -2.325169086456299
    5. '   ' → logprob: -2.450169086456299
    6. 'pq' → logprob: -2.825169086456299
    7. 'dp' → logprob: -2.825169086456299
    8. 'heap' → logprob: -3.075169086456299
    9. 'que' → logprob: -4.700169086456299
    10. 'for' → logprob: -4.700169086456299

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026352092623710632
    2. '=' → logprob: -3.6513521671295166
    3. ' ' → logprob: -10.276351928710938
    4. ',' → logprob: -11.651351928710938
    5. '_' → logprob: -12.901351928710938
    6. '  ' → logprob: -13.401351928710938
    7. ' ,' → logprob: -13.901351928710938
    8. ' =
' → logprob: -14.026351928710938
    9. '   ' → logprob: -14.401351928710938
    10. ')' → logprob: -14.526351928710938

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009946145117282867
    2. ' ' → logprob: -4.634946346282959
    3. '-' → logprob: -9.0099458694458
    4. '[]' → logprob: -10.8849458694458
    5. ' -' → logprob: -11.6349458694458
    6. '[' → logprob: -11.6349458694458
    7. '1' → logprob: -12.3224458694458
    8. 'float' → logprob: -12.3224458694458
    9. '   ' → logprob: -12.6974458694458
    10. ' ' → logprob: -13.2599458694458

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023524489370174706
    2. ' ' → logprob: -8.625235557556152
    3. '-' → logprob: -10.000235557556152
    4. '[' → logprob: -12.875235557556152
    5. '[]' → logprob: -13.125235557556152
    6. 'float' → logprob: -13.500235557556152
    7. '1' → logprob: -14.187735557556152
    8. '"' → logprob: -14.562735557556152
    9. 'None' → logprob: -15.000235557556152
    10. ' -' → logprob: -15.125235557556152

Token 269: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18623334169387817
    2. ' for' → logprob: -3.1862332820892334
    3. '    
' → logprob: -3.1862332820892334
    4. ' 
' → logprob: -3.9362332820892334
    5. ' stack' → logprob: -4.1862335205078125
    6. '
' → logprob: -4.6862335205078125
    7. '    ' → logprob: -4.8112335205078125
    8. ' ' → logprob: -4.9362335205078125
    9. ',' → logprob: -5.1862335205078125
    10. '	stack' → logprob: -5.5612335205078125

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21517314016819
    2. ' stack' → logprob: -1.8401731252670288
    3. 'stack' → logprob: -3.8401732444763184
    4. '	stack' → logprob: -6.215173244476318
    5. ' i' → logprob: -6.340173244476318
    6. ' for' → logprob: -6.340173244476318
    7. '    
' → logprob: -6.465173244476318
    8. ' idx' → logprob: -6.590173244476318
    9. '    ' → logprob: -6.965173244476318
    10. ' def' → logprob: -7.590173244476318

Token 271: ' q' (ID: 2335)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.3674474954605103
    2. 'q' (adapté à ' q') → logprob: -1.6174474954605103
    3. 'import' → logprob: -1.8674474954605103
    4. 'heap' → logprob: -2.4924473762512207
    5. 'pq' → logprob: -2.6174473762512207
    6. 'hq' → logprob: -2.7424473762512207
    7. 'h' → logprob: -2.8674473762512207
    8. 'que' → logprob: -3.2424473762512207
    9. 'from' → logprob: -3.7424473762512207
    10. '   ' → logprob: -4.242447376251221

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133622705936432
    2. '=' → logprob: -1.3133622407913208
    3. '=[]' → logprob: -10.063362121582031
    4. '   ' → logprob: -11.063362121582031
    5. 'import' → logprob: -11.188362121582031
    6. ',' → logprob: -11.313362121582031
    7. '  ' → logprob: -12.438362121582031
    8. ' ' → logprob: -12.563362121582031
    9. 'u' → logprob: -12.938362121582031
    10. '=[]
' → logprob: -13.313362121582031

Token 273: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.013769344426691532
    2. '[' → logprob: -4.513769149780273
    3. '[]' → logprob: -6.013769149780273
    4. '[]
' → logprob: -9.138769149780273
    5. '[((' → logprob: -9.388769149780273
    6. ' [(' → logprob: -9.513769149780273
    7. ' [' → logprob: -13.013769149780273
    8. '[u' → logprob: -13.388769149780273
    9. '[-' → logprob: -13.513769149780273
    10. '[[' → logprob: -13.888769149780273

Token 274: '   ' (ID: 271)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.002036775927990675
    2. ' he' → logprob: -6.6270365715026855
    3. '   ' → logprob: -7.2520365715026855
    4. '_he' → logprob: -15.002037048339844
    5. '    
' → logprob: -15.127037048339844
    6. 'q' → logprob: -15.252037048339844
    7. 'u' → logprob: -15.502037048339844
    8. '-he' → logprob: -15.752037048339844
    9. '.he' → logprob: -16.002037048339844
    10. '
' → logprob: -16.002037048339844

Token 275: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0017906129360198975
    2. 'q' → logprob: -6.501790523529053
    3. 'u' → logprob: -8.876791000366211
    4. ' he' → logprob: -9.251791000366211
    5. '   ' → logprob: -10.251791000366211
    6. '(-' → logprob: -12.626791000366211
    7. '(' → logprob: -12.876791000366211
    8. 'import' → logprob: -13.501791000366211
    9. '
' → logprob: -13.626791000366211
    10. ' q' → logprob: -13.876791000366211

Token 276: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.584861744660884e-05
    2. 'ap' → logprob: -10.000045776367188
    3. ' app' → logprob: -15.625045776367188
    4. '   ' → logprob: -16.750045776367188
    5. '	app' → logprob: -17.500045776367188
    6. '```' → logprob: -17.625045776367188
    7. 'a' → logprob: -17.875045776367188
    8. '  ' → logprob: -18.000045776367188
    9. 'pp' → logprob: -18.250045776367188
    10. 'ап' → logprob: -18.375045776367188

Token 277: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -6.2729995988775045e-06
    2. 'push' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. 'op' → logprob: -18.1250057220459
    5. '```' → logprob: -18.1250057220459
    6. 'u' → logprob: -18.7500057220459
    7. 'Push' → logprob: -19.3750057220459
    8. 'USH' → logprob: -20.0000057220459
    9. 'p' → logprob: -20.2500057220459
    10. 'app' → logprob: -20.3750057220459

Token 278: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -14.75000286102295
    4. 'q' → logprob: -15.25000286102295
    5. '(
' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '[q' → logprob: -17.875001907348633
    8. '((' → logprob: -18.250001907348633
    9. '```' → logprob: -18.500001907348633
    10. ',q' → logprob: -18.625001907348633

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2656407952308655
    2. '((' → logprob: -1.8906407356262207
    3. '(' → logprob: -3.1406407356262207
    4. '(u' → logprob: -4.015640735626221
    5. '   ' → logprob: -4.265640735626221
    6. ',(' → logprob: -5.515640735626221
    7. ' ,' → logprob: -6.890640735626221
    8. ' (' → logprob: -7.390640735626221
    9. '((-' → logprob: -7.640640735626221
    10. ' ' → logprob: -8.390641212463379

Token 280: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.02736254595220089
    2. '(' → logprob: -4.27736234664917
    3. ' (' → logprob: -4.40236234664917
    4. '(-' → logprob: -7.52736234664917
    5. '[u' → logprob: -8.402362823486328
    6. '   ' → logprob: -10.152362823486328
    7. '((' → logprob: -11.027362823486328
    8. ')' → logprob: -11.652362823486328
    9. ' (-' → logprob: -12.152362823486328
    10. ' ' → logprob: -12.277362823486328

Token 281: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005609253887087107
    2. ' u' → logprob: -6.130609035491943
    3. '-u' → logprob: -6.255609035491943
    4. '(u' → logprob: -7.630609035491943
    5. 'um' → logprob: -7.630609035491943
    6. '-' → logprob: -8.505609512329102
    7. '0' → logprob: -9.380609512329102
    8. '(' → logprob: -9.505609512329102
    9. '   ' → logprob: -10.380609512329102
    10. ' (' → logprob: -10.880609512329102

Token 282: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14310544729232788
    2. '1' → logprob: -2.0181055068969727
    3. 'm' → logprob: -8.018105506896973
    4. ',' → logprob: -10.018105506896973
    5. 'u' → logprob: -10.518105506896973
    6. '(' → logprob: -11.768105506896973
    7. ' ' → logprob: -12.518105506896973
    8. '(m' → logprob: -12.768105506896973
    9. '[' → logprob: -13.018105506896973
    10. '(u' → logprob: -13.018105506896973

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035238542477600276
    2. ' ,' → logprob: -8.00035285949707
    3. '0' → logprob: -11.50035285949707
    4. '   ' → logprob: -12.75035285949707
    5. ',
' → logprob: -12.87535285949707
    6. ',,' → logprob: -15.00035285949707
    7. '
' → logprob: -15.50035285949707
    8. '_,' → logprob: -15.62535285949707
    9. ' ' → logprob: -15.75035285949707
    10. '```' → logprob: -16.37535285949707

Token 284: ' u' (ID: 337)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012199865654110909
    2. ' ' → logprob: -4.887199878692627
    3. '-' → logprob: -5.762199878692627
    4. ' -' → logprob: -8.012199401855469
    5. '-v' → logprob: -8.512199401855469
    6. 'ans' → logprob: -8.637199401855469
    7. '(' → logprob: -8.887199401855469
    8. 'u' → logprob: -8.887199401855469
    9. '   ' → logprob: -9.012199401855469
    10. '-u' → logprob: -9.512199401855469

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22049106657505035
    2. '1' → logprob: -1.9704910516738892
    3. ',' → logprob: -3.2204911708831787
    4. ',v' → logprob: -5.2204909324646
    5. 'q' → logprob: -6.2204909324646
    6. 'ans' → logprob: -6.3454909324646
    7. 'm' → logprob: -6.5954909324646
    8. 'v' → logprob: -6.7204909324646
    9. ' ' → logprob: -6.8454909324646
    10. 'n' → logprob: -7.0954909324646

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ' ,' → logprob: -9.375110626220703
    3. '   ' → logprob: -11.125110626220703
    4. '0' → logprob: -12.625110626220703
    5. '(' → logprob: -12.750110626220703
    6. '))' → logprob: -13.375110626220703
    7. ',(' → logprob: -13.625110626220703
    8. ')' → logprob: -14.375110626220703
    9. ' (' → logprob: -15.500110626220703
    10. ',
' → logprob: -15.500110626220703

Token 287: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029063932597637177
    2. ' ' → logprob: -5.877906322479248
    3. 'ans' → logprob: -10.002906799316406
    4. '   ' → logprob: -10.252906799316406
    5. '  ' → logprob: -12.127906799316406
    6. '1' → logprob: -12.877906799316406
    7. '    ' → logprob: -13.002906799316406
    8. ')' → logprob: -13.502906799316406
    9. ' ans' → logprob: -13.502906799316406
    10. ',' → logprob: -13.627906799316406

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00286039337515831
    2. 'ans' → logprob: -6.1278605461120605
    3. ' ' → logprob: -7.3778605461120605
    4. 'u' → logprob: -11.502860069274902
    5. ' ans' → logprob: -11.752860069274902
    6. '1' → logprob: -11.752860069274902
    7. '   ' → logprob: -12.002860069274902
    8. '  ' → logprob: -12.502860069274902
    9. ')' → logprob: -13.377860069274902
    10. 'w' → logprob: -13.377860069274902

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013417120499070734
    2. ' ,' → logprob: -9.250134468078613
    3. '))' → logprob: -10.250134468078613
    4. '0' → logprob: -13.250134468078613
    5. ')' → logprob: -15.375134468078613
    6. '   ' → logprob: -15.500134468078613
    7. ' ' → logprob: -15.750134468078613
    8. ',
' → logprob: -16.250133514404297
    9. ' ))' → logprob: -16.500133514404297
    10. '  ' → logprob: -17.250133514404297

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015614043222740293
    2. ' ' → logprob: -6.501561641693115
    3. 'ans' → logprob: -10.251561164855957
    4. '   ' → logprob: -11.251561164855957
    5. ')' → logprob: -12.876561164855957
    6. '  ' → logprob: -13.001561164855957
    7. ',' → logprob: -13.626561164855957
    8. ' ans' → logprob: -13.939061164855957
    9. '    ' → logprob: -14.376561164855957
    10. '1' → logprob: -14.814061164855957

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.741137283621356e-05
    2. ' ' → logprob: -10.125057220458984
    3. 'ans' → logprob: -11.250057220458984
    4. ')' → logprob: -13.500057220458984
    5. '   ' → logprob: -14.375057220458984
    6. 'w' → logprob: -14.500057220458984
    7. ',' → logprob: -14.500057220458984
    8. '1' → logprob: -15.250057220458984
    9. '  ' → logprob: -15.500057220458984
    10. 'v' → logprob: -16.437557220458984

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0626513734459877
    2. '))' → logprob: -2.8126513957977295
    3. ')' → logprob: -7.43765115737915
    4. '0' → logprob: -9.687651634216309
    5. ' ,' → logprob: -11.812651634216309
    6. '))
' → logprob: -11.812651634216309
    7. ')))' → logprob: -12.062651634216309
    8. '   ' → logprob: -12.687651634216309
    9. ' ))' → logprob: -12.812651634216309
    10. ',))
' → logprob: -13.312651634216309

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001977999461814761
    2. 'ans' → logprob: -6.501977920532227
    3. ' ' → logprob: -8.251977920532227
    4. ')' → logprob: -8.751977920532227
    5. '))' → logprob: -11.376977920532227
    6. '1' → logprob: -11.501977920532227
    7. ' ans' → logprob: -12.001977920532227
    8. '-' → logprob: -12.814477920532227
    9. '   ' → logprob: -12.939477920532227
    10. '  ' → logprob: -13.126977920532227

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002625278721097857
    2. 'ans' → logprob: -9.000262260437012
    3. ' ' → logprob: -10.000262260437012
    4. ')' → logprob: -10.250262260437012
    5. '1' → logprob: -11.125262260437012
    6. '-' → logprob: -11.375262260437012
    7. '[]' → logprob: -11.875262260437012
    8. '))' → logprob: -12.000262260437012
    9. 'W' → logprob: -12.750262260437012
    10. 'None' → logprob: -13.125262260437012

Token 295: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006139091565273702
    2. '))
' → logprob: -7.875613689422607
    3. ')' → logprob: -8.375614166259766
    4. '))

' → logprob: -13.750614166259766
    5. ',' → logprob: -14.125614166259766
    6. ' ))' → logprob: -14.250614166259766
    7. '   ' → logprob: -14.750614166259766
    8. '))
' → logprob: -15.250614166259766
    9. ')))' → logprob: -15.375614166259766
    10. ')
' → logprob: -16.375614166259766

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35857802629470825
    2. 'while' → logprob: -2.1085779666900635
    3. ')' → logprob: -2.3585779666900635
    4. ' while' → logprob: -2.7335779666900635
    5. '	while' → logprob: -5.233578205108643
    6. '<|end|>' → logprob: -5.233578205108643
    7. ',' → logprob: -6.108578205108643
    8. ' ' → logprob: -6.358578205108643
    9. ':' → logprob: -6.983578205108643
    10. 'While' → logprob: -6.983578205108643

Token 297: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03199145197868347
    2. ')' → logprob: -3.656991481781006
    3. ' while' → logprob: -5.906991481781006
    4. '_' → logprob: -6.406991481781006
    5. '   ' → logprob: -7.031991481781006
    6. ',' → logprob: -9.406991004943848
    7. '_,' → logprob: -9.531991004943848
    8. 'w' → logprob: -9.656991004943848
    9. ')_' → logprob: -10.531991004943848
    10. '    
' → logprob: -10.656991004943848

Token 298: 'print' (ID: 1598)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005550591740757227
    2. ' while' → logprob: -7.625555038452148
    3. 'w' → logprob: -10.875555038452148
    4. '   ' → logprob: -11.500555038452148
    5. 'u' → logprob: -11.625555038452148
    6. '_' → logprob: -11.625555038452148
    7. ')' → logprob: -12.000555038452148
    8. 'wh' → logprob: -12.250555038452148
    9. 'q' → logprob: -13.375555038452148
    10. 'While' → logprob: -13.500555038452148

Token 299: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18885403871536255
    2. '()' → logprob: -2.6888539791107178
    3. '(q' → logprob: -2.8138539791107178
    4. '(u' → logprob: -4.188854217529297
    5. '(len' → logprob: -4.563854217529297
    6. '('' → logprob: -4.688854217529297
    7. '("' → logprob: -5.813854217529297
    8. '("")' → logprob: -6.438854217529297
    9. '(
' → logprob: -6.938854217529297
    10. '(#' → logprob: -7.313854217529297

Token 300: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000825229799374938
    2. '))' → logprob: -7.62582540512085
    3. 'S' → logprob: -9.000824928283691
    4. ')
' → logprob: -9.500824928283691
    5. '[' → logprob: -9.750824928283691
    6. '1' → logprob: -10.625824928283691
    7. ',' → logprob: -11.750824928283691
    8. ')")' → logprob: -12.125824928283691
    9. 'q' → logprob: -12.250824928283691
    10. 's' → logprob: -12.250824928283691

Token 301: ' NN' (ID: 98746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2818625569343567
    2. 'q' → logprob: -2.031862497329712
    3. ' )' → logprob: -4.156862735748291
    4. ' q' → logprob: -4.156862735748291
    5. 'SS' → logprob: -4.281862735748291
    6. 'u' → logprob: -4.531862735748291
    7. '")' → logprob: -4.781862735748291
    8. 'ans' → logprob: -5.031862735748291
    9. 'len' → logprob: -5.281862735748291
    10. '   ' → logprob: -5.406862735748291

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. ')
' → logprob: -10.750053405761719
    3. '   ' → logprob: -10.875053405761719
    4. ',' → logprob: -11.750053405761719
    5. '))' → logprob: -12.875053405761719
    6. ' )' → logprob: -14.125053405761719
    7. ')#' → logprob: -14.875053405761719
    8. '#' → logprob: -15.250053405761719
    9. ')

' → logprob: -16.00005340576172
    10. ')")' → logprob: -16.12505340576172

Token 303: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8844369053840637
    2. 'while' → logprob: -1.259436845779419
    3. '   ' → logprob: -1.634436845779419
    4. ' while' → logprob: -2.384436845779419
    5. '<|end|>' → logprob: -5.634437084197998
    6. ',' → logprob: -6.134437084197998
    7. ' ' → logprob: -6.259437084197998
    8. '    ' → logprob: -6.259437084197998
    9. '(' → logprob: -6.509437084197998
    10. '	while' → logprob: -6.884437084197998

Token 304: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030979108065366745
    2. ')' → logprob: -3.6559791564941406
    3. '   ' → logprob: -5.905979156494141
    4. ' while' → logprob: -6.780979156494141
    5. '_' → logprob: -7.530979156494141
    6. 'q' → logprob: -9.65597915649414
    7. '```' → logprob: -10.53097915649414
    8. '_,' → logprob: -10.90597915649414
    9. ',' → logprob: -11.03097915649414
    10. 'w' → logprob: -11.15597915649414

Token 305: 'print' (ID: 1598)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.016110969707369804
    2. ' while' → logprob: -4.141110897064209
    3. ')' → logprob: -10.391111373901367
    4. '   ' → logprob: -10.641111373901367
    5. 'While' → logprob: -11.641111373901367
    6. '```' → logprob: -12.516111373901367
    7. 'import' → logprob: -13.516111373901367
    8. 'def' → logprob: -13.766111373901367
    9. '
' → logprob: -13.891111373901367
    10. 'w' → logprob: -14.016111373901367

Token 306: '(W' (ID: 26031)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.350542277097702
    2. '(u' → logprob: -1.3505423069000244
    3. '(' → logprob: -4.225542068481445
    4. '(len' → logprob: -4.475542068481445
    5. '(ans' → logprob: -5.350542068481445
    6. '()' → logprob: -6.225542068481445
    7. '(S' → logprob: -6.850542068481445
    8. '(*' → logprob: -7.100542068481445
    9. '('' → logprob: -7.475542068481445
    10. '(f' → logprob: -7.600542068481445

Token 307: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00259539601393044
    2. ',' → logprob: -6.5025954246521
    3. '   ' → logprob: -7.0025954246521
    4. ')
' → logprob: -8.752594947814941
    5. 'q' → logprob: -12.002594947814941
    6. ' )' → logprob: -12.627594947814941
    7. ',q' → logprob: -13.252594947814941
    8. '))' → logprob: -13.252594947814941
    9. '#' → logprob: -14.002594947814941
    10. '```' → logprob: -14.002594947814941

Token 308: ' SS' (ID: 30354)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.222375750541687
    2. 'q' → logprob: -1.472375750541687
    3. 'ans' → logprob: -1.472375750541687
    4. '0' → logprob: -2.2223758697509766
    5. 'u' → logprob: -3.0973758697509766
    6. 'i' → logprob: -4.597375869750977
    7. 'N' → logprob: -4.722375869750977
    8. ' q' → logprob: -4.847375869750977
    9. 'end' → logprob: -4.847375869750977
    10. 'len' → logprob: -4.847375869750977

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01481405459344387
    2. '   ' → logprob: -4.2648138999938965
    3. ')
' → logprob: -7.5148138999938965
    4. ',' → logprob: -9.264814376831055
    5. ' ' → logprob: -13.639814376831055
    6. ' )' → logprob: -13.764814376831055
    7. ')

' → logprob: -13.764814376831055
    8. ')
' → logprob: -14.014814376831055
    9. '```' → logprob: -14.139814376831055
    10. '))' → logprob: -14.389814376831055

Token 310: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3091064393520355
    2. '   ' → logprob: -1.684106469154358
    3. '<|end|>' → logprob: -3.3091063499450684
    4. 'while' → logprob: -3.6841063499450684
    5. ' while' → logprob: -5.184106349945068
    6. ' ' → logprob: -5.934106349945068
    7. ',' → logprob: -6.184106349945068
    8. '_' → logprob: -6.934106349945068
    9. '```' → logprob: -6.934106349945068
    10. '  ' → logprob: -7.059106349945068

Token 311: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11980748176574707
    2. ')' → logprob: -2.869807481765747
    3. '   ' → logprob: -3.369807481765747
    4. ' while' → logprob: -3.994807481765747
    5. '_' → logprob: -6.119807243347168
    6. '	while' → logprob: -7.744807243347168
    7. '```' → logprob: -8.619807243347168
    8. 'While' → logprob: -8.869807243347168
    9. ',' → logprob: -9.244807243347168
    10. '    
' → logprob: -9.494807243347168

Token 312: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019549215212464333
    2. ' q' → logprob: -6.251955032348633
    3. 'len' → logprob: -10.876955032348633
    4. '   ' → logprob: -12.626955032348633
    5. ' len' → logprob: -13.626955032348633
    6. '	q' → logprob: -13.751955032348633
    7. ' ' → logprob: -14.751955032348633
    8. '(q' → logprob: -15.126955032348633
    9. 'True' → logprob: -15.501955032348633
    10. 'u' → logprob: -15.626955032348633

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011559739708900452
    2. ':
' → logprob: -4.511559963226318
    3. ' and' → logprob: -8.88655948638916
    4. '):
' → logprob: -9.26155948638916
    5. 'and' → logprob: -9.26155948638916
    6. '):' → logprob: -9.38655948638916
    7. '.pop' → logprob: -10.38655948638916
    8. '[' → logprob: -11.13655948638916
    9. '>:' → logprob: -11.26155948638916
    10. '!=' → logprob: -11.88655948638916

Token 314: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.37433743476867676
    2. '   ' → logprob: -1.7493374347686768
    3. '(u' → logprob: -2.8743374347686768
    4. '0' → logprob: -3.8743374347686768
    5. ',' → logprob: -4.499337196350098
    6. ')' → logprob: -4.499337196350098
    7. ' u' → logprob: -4.874337196350098
    8. 'q' → logprob: -4.999337196350098
    9. '       ' → logprob: -4.999337196350098
    10. 'v' → logprob: -5.999337196350098

Token 315: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09768050163984299
    2. '_,' → logprob: -2.7226805686950684
    3. '   ' → logprob: -4.222680568695068
    4. 'c' → logprob: -6.722680568695068
    5. '_u' → logprob: -6.722680568695068
    6. 'uu' → logprob: -6.847680568695068
    7. 'ub' → logprob: -7.097680568695068
    8. 'uv' → logprob: -7.347680568695068
    9. '(u' → logprob: -7.472680568695068
    10. 'p' → logprob: -7.597680568695068

Token 316: 'print' (ID: 1598)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.25550776720046997
    2. '_,' → logprob: -1.6305077075958252
    3. '   ' → logprob: -5.255507946014404
    4. '_u' → logprob: -5.380507946014404
    5. 'uu' → logprob: -5.505507946014404
    6. 'ub' → logprob: -6.130507946014404
    7. '(u' → logprob: -6.880507946014404
    8. '_' → logprob: -7.005507946014404
    9. 'c' → logprob: -7.005507946014404
    10. 'p' → logprob: -7.130507946014404

Token 317: '(q' (ID: 21479)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18170595169067383
    2. '_,' → logprob: -2.681705951690674
    3. '(u' → logprob: -3.056705951690674
    4. '_' → logprob: -4.181705951690674
    5. 'q' → logprob: -4.431705951690674
    6. '_u' → logprob: -4.931705951690674
    7. ' u' → logprob: -5.806705951690674
    8. '   ' → logprob: -6.056705951690674
    9. ')' → logprob: -6.181705951690674
    10. '()' → logprob: -6.681705951690674

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6158463954925537
    2. '.pop' → logprob: -1.3658463954925537
    3. '[' → logprob: -2.1158463954925537
    4. ')
' → logprob: -3.2408463954925537
    5. ',' → logprob: -3.4908463954925537
    6. '   ' → logprob: -4.490846633911133
    7. 'pop' → logprob: -6.490846633911133
    8. '       ' → logprob: -7.490846633911133
    9. '):
' → logprob: -8.615846633911133
    10. '[-' → logprob: -8.740846633911133

Token 319: '       ' (ID: 309)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6845714449882507
    2. 'u' → logprob: -0.9345714449882507
    3. '   ' → logprob: -2.6845715045928955
    4. ',' → logprob: -4.809571266174316
    5. ' u' → logprob: -5.059571266174316
    6. ')' → logprob: -5.684571266174316
    7. 'w' → logprob: -5.809571266174316
    8. '(u' → logprob: -5.934571266174316
    9. 'q' → logprob: -6.184571266174316
    10. 'v' → logprob: -6.434571266174316

Token 320: ' uq' (ID: 112908)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1315077692270279
    2. '_,' → logprob: -2.2565078735351562
    3. '   ' → logprob: -5.631507873535156
    4. 'c' → logprob: -5.631507873535156
    5. '_u' → logprob: -5.631507873535156
    6. '_' → logprob: -6.631507873535156
    7. 'v' → logprob: -6.881507873535156
    8. 'uv' → logprob: -7.131507873535156
    9. '(u' → logprob: -7.131507873535156
    10. 'uw' → logprob: -7.506507873535156

Token 321: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004004024958703667
    2. ' ,' → logprob: -8.37540054321289
    3. ',u' → logprob: -9.25040054321289
    4. '=' → logprob: -10.37540054321289
    5. 'u' → logprob: -10.75040054321289
    6. '[' → logprob: -11.62540054321289
    7. '1' → logprob: -13.37540054321289
    8. ' =' → logprob: -13.50040054321289
    9. ',user' → logprob: -13.50040054321289
    10. ',
' → logprob: -13.75040054321289

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001963881659321487
    2. ',u' → logprob: -9.25019645690918
    3. ' ,' → logprob: -9.87519645690918
    4. ',q' → logprob: -10.50019645690918
    5. '=' → logprob: -11.12519645690918
    6. 'u' → logprob: -13.62519645690918
    7. ',user' → logprob: -13.75019645690918
    8. '<|end|>' → logprob: -14.00019645690918
    9. '_,' → logprob: -14.37519645690918
    10. ' =' → logprob: -14.75019645690918

Token 323: ' uq' (ID: 112908)
  Prédit: 'uq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uq' → logprob: -0.0031068921089172363
    2. 'u' → logprob: -6.253107070922852
    3. ' uq' → logprob: -6.753107070922852
    4. 'q' → logprob: -12.878107070922852
    5. 'uu' → logprob: -13.003107070922852
    6. '-u' → logprob: -14.003107070922852
    7. 'uv' → logprob: -14.628107070922852
    8. ' ' → logprob: -14.878107070922852
    9. 'vq' → logprob: -15.003107070922852
    10. 'oq' → logprob: -15.128107070922852

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006697488483041525
    2. '0' → logprob: -5.381697654724121
    3. ',' → logprob: -6.256697654724121
    4. 'q' → logprob: -9.256697654724121
    5. 'u' → logprob: -11.131697654724121
    6. '[' → logprob: -11.256697654724121
    7. ' ,' → logprob: -11.506697654724121
    8. '_,' → logprob: -12.381697654724121
    9. ' ' → logprob: -12.631697654724121
    10. '   ' → logprob: -12.756697654724121

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013165470445528626
    2. '=' → logprob: -6.751316547393799
    3. ',u' → logprob: -10.00131607055664
    4. ',q' → logprob: -10.00131607055664
    5. ' =' → logprob: -10.50131607055664
    6. ' ,' → logprob: -10.75131607055664
    7. '   ' → logprob: -13.25131607055664
    8. '       ' → logprob: -13.75131607055664
    9. ',v' → logprob: -14.25131607055664
    10. ',n' → logprob: -14.50131607055664

Token 326: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.28056588768959045
    2. 'vq' → logprob: -1.530565857887268
    3. 'i' → logprob: -4.4055657386779785
    4. 'uq' → logprob: -5.2805657386779785
    5. 'w' → logprob: -6.0305657386779785
    6. 'vw' → logprob: -6.5305657386779785
    7. 'u' → logprob: -6.6555657386779785
    8. 'vi' → logprob: -6.7805657386779785
    9. 'uv' → logprob: -7.2805657386779785
    10. 'iq' → logprob: -7.2805657386779785

Token 327: 'q' (ID: 80)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4356890916824341
    2. 'w' → logprob: -1.060689091682434
    3. ',w' → logprob: -5.0606889724731445
    4. 'q' → logprob: -7.6856889724731445
    5. ' ,' → logprob: -9.810688972473145
    6. 'u' → logprob: -10.560688972473145
    7. '_,' → logprob: -10.810688972473145
    8. 'i' → logprob: -11.310688972473145
    9. '_w' → logprob: -11.685688972473145
    10. ' w' → logprob: -11.810688972473145

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015990104293450713
    2. 'q' → logprob: -7.376598834991455
    3. 'w' → logprob: -7.751598834991455
    4. ' ,' → logprob: -7.751598834991455
    5. ',w' → logprob: -9.501599311828613
    6. ',q' → logprob: -10.376599311828613
    7. ' ' → logprob: -14.001599311828613
    8. ',v' → logprob: -14.251599311828613
    9. 'i' → logprob: -14.376599311828613
    10. '_,' → logprob: -14.626599311828613

Token 329: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00678038876503706
    2. 'vq' → logprob: -5.631780624389648
    3. ' w' → logprob: -5.756780624389648
    4. '   ' → logprob: -12.756780624389648
    5. 'iq' → logprob: -13.006780624389648
    6. ' ' → logprob: -13.381780624389648
    7. '	w' → logprob: -13.381780624389648
    8. 'wv' → logprob: -13.881780624389648
    9. '
' → logprob: -14.131780624389648
    10. 'q' → logprob: -14.381780624389648

Token 330: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004083624575287104
    2. ',' → logprob: -5.504083633422852
    3. ',q' → logprob: -12.254083633422852
    4. ' ,' → logprob: -15.254083633422852
    5. ' ' → logprob: -17.00408363342285
    6. '_q' → logprob: -17.00408363342285
    7. ' q' → logprob: -17.25408363342285
    8. '	q' → logprob: -17.50408363342285
    9. ' =' → logprob: -17.62908363342285
    10. ',
' → logprob: -17.75408363342285

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ' ,' → logprob: -12.625005722045898
    3. ',q' → logprob: -13.500005722045898
    4. ',i' → logprob: -14.500005722045898
    5. 'q' → logprob: -15.750005722045898
    6. '=' → logprob: -17.5000057220459
    7. ',v' → logprob: -18.0000057220459
    8. 'i' → logprob: -18.2500057220459
    9. '_,' → logprob: -18.3750057220459
    10. 'vq' → logprob: -18.5000057220459

Token 332: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08447866886854172
    2. 'iq' → logprob: -2.5844786167144775
    3. 'idx' → logprob: -5.834478855133057
    4. ' i' → logprob: -6.584478855133057
    5. 'q' → logprob: -7.209478855133057
    6. 'qi' → logprob: -8.334478378295898
    7. ' iq' → logprob: -9.334478378295898
    8. 'k' → logprob: -9.459478378295898
    9. 'ii' → logprob: -10.334478378295898
    10. ' idx' → logprob: -10.834478378295898

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049585416913033
    2. ' =' → logprob: -4.511049747467041
    3. ')' → logprob: -14.011049270629883
    4. ' ' → logprob: -15.261049270629883
    5. ')=' → logprob: -15.386049270629883
    6. 'q' → logprob: -15.386049270629883
    7. 'x' → logprob: -16.011049270629883
    8. '＝' → logprob: -17.011049270629883
    9. '=
' → logprob: -17.511049270629883
    10. '=}' → logprob: -17.511049270629883

Token 334: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.01604011468589306
    2. ' he' → logprob: -4.141040325164795
    3. '   ' → logprob: -12.141039848327637
    4. ' ' → logprob: -15.641039848327637
    5. '    ' → logprob: -16.016040802001953
    6. '       ' → logprob: -16.266040802001953
    7. 'h' → logprob: -17.141040802001953
    8. '  ' → logprob: -17.141040802001953
    9. '     ' → logprob: -17.891040802001953
    10. '	' → logprob: -18.391040802001953

Token 335: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006288402248173952
    2. 'pp' → logprob: -5.256288528442383
    3. 'q' → logprob: -7.506288528442383
    4. 'op' → logprob: -8.256288528442383
    5. 'ap' → logprob: -8.631288528442383
    6. 'p' → logprob: -10.006288528442383
    7. 'pop' → logprob: -11.256288528442383
    8. 'he' → logprob: -13.006288528442383
    9. '```' → logprob: -13.506288528442383
    10. 'a' → logprob: -14.006288528442383

Token 336: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00029923528200015426
    2. 'ush' → logprob: -8.125299453735352
    3. 'p' → logprob: -13.875299453735352
    4. 'pop' → logprob: -13.875299453735352
    5. 'q' → logprob: -15.500299453735352
    6. '```' → logprob: -15.500299453735352
    7. 'оп' → logprob: -15.750299453735352
    8. '[' → logprob: -15.875299453735352
    9. '...' → logprob: -16.00029945373535
    10. '0' → logprob: -16.25029945373535

Token 337: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -7.896309739408025e-07
    2. 'q' → logprob: -14.750000953674316
    3. '(' → logprob: -14.875000953674316
    4. ',q' → logprob: -18.0
    5. '(queue' → logprob: -18.375
    6. '(
' → logprob: -18.75
    7. '	q' → logprob: -19.0
    8. ' q' → logprob: -19.75
    9. '[q' → logprob: -20.25
    10. ' (' → logprob: -20.375

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013325021136552095
    2. ')
' → logprob: -6.6263322830200195
    3. ')
' → logprob: -12.12633228302002
    4. ')

' → logprob: -14.37633228302002
    5. ' )' → logprob: -15.50133228302002
    6. '   ' → logprob: -16.126333236694336
    7. ')`' → logprob: -16.876333236694336
    8. '),' → logprob: -17.251333236694336
    9. ')}' → logprob: -18.126333236694336
    10. ')`
' → logprob: -18.126333236694336

Token 339: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9337777495384216
    2. ' if' → logprob: -1.6837778091430664
    3. ':' → logprob: -1.8087778091430664
    4. ' )' → logprob: -2.1837778091430664
    5. '   ' → logprob: -2.9337778091430664
    6. ' 
' → logprob: -3.0587778091430664
    7. ' ' → logprob: -5.058777809143066
    8. '       ' → logprob: -5.183777809143066
    9. '):' → logprob: -5.308777809143066
    10. '    ' → logprob: -5.558777809143066

Token 340: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020869774743914604
    2. 'i' → logprob: -4.645869731903076
    3. 'v' → logprob: -5.020869731903076
    4. ')' → logprob: -6.145869731903076
    5. ' if' → logprob: -6.645869731903076
    6. '#' → logprob: -8.270870208740234
    7. '   ' → logprob: -8.645870208740234
    8. 'for' → logprob: -9.145870208740234
    9. 'u' → logprob: -9.770870208740234
    10. ',' → logprob: -9.770870208740234

Token 341: ' uq' (ID: 112908)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7317712306976318
    2. '-' → logprob: -1.9817712306976318
    3. 'v' → logprob: -2.606771230697632
    4. '-v' → logprob: -2.731771230697632
    5. 'uq' → logprob: -2.981771230697632
    6. ' i' → logprob: -2.981771230697632
    7. ' uq' → logprob: -3.356771230697632
    8. 'vq' → logprob: -3.481771230697632
    9. '-i' → logprob: -3.856771230697632
    10. 'w' → logprob: -4.106771469116211

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003147280658595264
    2. '[' → logprob: -8.875314712524414
    3. '1' → logprob: -8.875314712524414
    4. 'q' → logprob: -11.250314712524414
    5. ' ' → logprob: -11.625314712524414
    6. '==' → logprob: -12.375314712524414
    7. '   ' → logprob: -13.125314712524414
    8. '```' → logprob: -13.375314712524414
    9. '
' → logprob: -13.500314712524414
    10. ' ==' → logprob: -14.375314712524414

Token 343: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.608592689037323
    2. ' >=' → logprob: -1.8585927486419678
    3. ' >' → logprob: -1.8585927486419678
    4. '>=' → logprob: -1.9835927486419678
    5. '<' → logprob: -5.983592510223389
    6. ' <' → logprob: -6.108592510223389
    7. '<=' → logprob: -7.483592510223389
    8. ' <=' → logprob: -7.608592510223389
    9. ')' → logprob: -8.483592987060547
    10. '==' → logprob: -8.608592987060547

Token 344: ' um' (ID: 1713)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6057100296020508
    2. 'um' → logprob: -1.2307100296020508
    3. 'ans' → logprob: -1.8557100296020508
    4. ' -' → logprob: -6.105710029602051
    5. '-u' → logprob: -6.355710029602051
    6. ' um' → logprob: -7.105710029602051
    7. ' ans' → logprob: -7.980710029602051
    8. '-answer' → logprob: -8.73071002960205
    9. 'u' → logprob: -9.48071002960205
    10. 'umb' → logprob: -9.73071002960205

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26541316509246826
    2. ':
' → logprob: -2.265413284301758
    3. '           ' → logprob: -2.515413284301758
    4. ' or' → logprob: -3.140413284301758
    5. 'continue' → logprob: -6.515413284301758
    6. ':return' → logprob: -6.640413284301758
    7. ' continue' → logprob: -7.015413284301758
    8. '       ' → logprob: -7.140413284301758
    9. ' and' → logprob: -7.515413284301758
    10. ' :' → logprob: -10.515413284301758

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024899067357182503
    2. 'continue' → logprob: -3.7748990058898926
    3. ' continue' → logprob: -6.524899005889893
    4. '       ' → logprob: -8.77489948272705
    5. 'break' → logprob: -11.39989948272705
    6. '   ' → logprob: -11.89989948272705
    7. 'return' → logprob: -12.02489948272705
    8. '	continue' → logprob: -12.64989948272705
    9. '               ' → logprob: -13.64989948272705
    10. '_continue' → logprob: -14.27489948272705

Token 347: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.004611218813806772
    2. ' continue' → logprob: -6.004611015319824
    3. '           ' → logprob: -6.504611015319824
    4. 'break' (adapté à ' break') → logprob: -8.129611015319824
    5. '               ' → logprob: -8.379611015319824
    6. '       ' → logprob: -9.504611015319824
    7. '   ' → logprob: -10.379611015319824
    8. '	continue' → logprob: -12.629611015319824
    9. 'return' → logprob: -13.254611015319824
    10. ' break' → logprob: -14.504611015319824

Token 348: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015511675737798214
    2. 'if' → logprob: -7.001551151275635
    3. '<|end|>' → logprob: -8.501551628112793
    4. 'continue' → logprob: -8.626551628112793
    5. '        
' → logprob: -9.251551628112793
    6. ' if' → logprob: -9.251551628112793
    7. '
' → logprob: -11.376551628112793
    8. 'for' → logprob: -11.751551628112793
    9. 'v' → logprob: -12.001551628112793
    10. '```' → logprob: -12.126551628112793

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014420046471059322
    2. 'if' → logprob: -4.514420032501221
    3. ' if' → logprob: -6.639420032501221
    4. 'v' → logprob: -7.014420032501221
    5. '        
' → logprob: -8.264420509338379
    6. '   ' → logprob: -8.389420509338379
    7. ')' → logprob: -9.014420509338379
    8. 'i' → logprob: -9.514420509338379
    9. '<|end|>' → logprob: -9.639420509338379
    10. 'q' → logprob: -9.889420509338379

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19271573424339294
    2. 'vj' → logprob: -2.192715644836426
    3. 'v' → logprob: -3.442715644836426
    4. 'for' → logprob: -3.692715644836426
    5. '   ' → logprob: -5.817715644836426
    6. 'vv' → logprob: -6.817715644836426
    7. 'while' → logprob: -7.192715644836426
    8. 'vq' → logprob: -7.567715644836426
    9. 'u' → logprob: -7.942715644836426
    10. '       ' → logprob: -8.192715644836426

Token 351: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007722675800323486
    2. ' i' → logprob: -4.882722854614258
    3. 'w' → logprob: -9.757722854614258
    4. 'vq' → logprob: -11.007722854614258
    5. '   ' → logprob: -11.507722854614258
    6. ' ' → logprob: -11.882722854614258
    7. 'v' → logprob: -11.882722854614258
    8. 'q' → logprob: -12.257722854614258
    9. ' uq' → logprob: -12.757722854614258
    10. 'uq' → logprob: -13.007722854614258

Token 352: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1697416752576828
    2. '==' → logprob: -1.9197416305541992
    3. ' >=' → logprob: -4.919741630554199
    4. ' ' → logprob: -7.044741630554199
    5. ' <' → logprob: -7.544741630554199
    6. '>=' → logprob: -7.669741630554199
    7. '<' → logprob: -9.2947416305542
    8. '<|end|>' → logprob: -9.9197416305542
    9. '<N' → logprob: -10.0447416305542
    10. ' ' → logprob: -10.6697416305542

Token 353: ' NN' (ID: 98746)
  Prédit: 'NN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NN' → logprob: -7.350386295001954e-05
    2. ' NN' → logprob: -10.000073432922363
    3. 'N' → logprob: -10.625073432922363
    4. ' ' → logprob: -13.125073432922363
    5. '   ' → logprob: -13.750073432922363
    6. '  ' → logprob: -14.625073432922363
    7. 'len' → logprob: -16.25007438659668
    8. '>NN' → logprob: -16.87507438659668
    9. '
' → logprob: -17.75007438659668
    10. 'nn' → logprob: -18.12507438659668

Token 354: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5210772156715393
    2. ':' → logprob: -1.0210771560668945
    3. ' or' → logprob: -3.1460771560668945
    4. '       ' → logprob: -6.1460771560668945
    5. 'or' → logprob: -8.146077156066895
    6. ':return' → logprob: -8.146077156066895
    7. '   ' → logprob: -9.396077156066895
    8. ' and' → logprob: -10.271077156066895
    9. '           ' → logprob: -11.021077156066895
    10. ':

' → logprob: -11.646077156066895

Token 355: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010414140298962593
    2. 'continue' → logprob: -5.260414123535156
    3. 'if' → logprob: -6.260414123535156
    4. '       ' → logprob: -6.885414123535156
    5. 'ans' → logprob: -6.885414123535156
    6. ' continue' → logprob: -7.760414123535156
    7. ' if' → logprob: -7.885414123535156
    8. '   ' → logprob: -8.010414123535156
    9. ' ans' → logprob: -10.510414123535156
    10. '
' → logprob: -11.010414123535156

Token 356: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008996364660561085
    2. 'v' → logprob: -5.133996486663818
    3. 'if' → logprob: -6.008996486663818
    4. '
' → logprob: -8.13399600982666
    5. '        
' → logprob: -9.13399600982666
    6. '```' → logprob: -10.00899600982666
    7. 'continue' → logprob: -10.38399600982666
    8. '   ' → logprob: -10.63399600982666
    9. 'vq' → logprob: -10.63399600982666
    10. 'ans' → logprob: -11.00899600982666

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17729689180850983
    2. 'v' → logprob: -1.9272968769073486
    3. 'vq' → logprob: -4.302297115325928
    4. 'vj' → logprob: -6.302297115325928
    5. '        
' → logprob: -7.302297115325928
    6. ',v' → logprob: -8.05229663848877
    7. 'u' → logprob: -8.67729663848877
    8. ',' → logprob: -9.30229663848877
    9. ' v' → logprob: -9.80229663848877
    10. '   ' → logprob: -9.92729663848877

Token 358: ' vi' (ID: 2640)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.7463089227676392
    2. 'v' → logprob: -1.3713089227676392
    3. 'he' → logprob: -2.3713088035583496
    4. 'u' → logprob: -2.4963088035583496
    5. '       ' → logprob: -2.9963088035583496
    6. 'vj' → logprob: -3.9963088035583496
    7. '#' → logprob: -5.24630880355835
    8. 'uq' → logprob: -5.37130880355835
    9. 'uv' → logprob: -5.74630880355835
    10. 'w' → logprob: -5.99630880355835

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.371605948312208e-05
    2. ' ,' → logprob: -10.250053405761719
    3. ',w' → logprob: -11.875053405761719
    4. 'q' → logprob: -12.625053405761719
    5. 'w' → logprob: -12.875053405761719
    6. '=' → logprob: -13.000053405761719
    7. ',v' → logprob: -13.875053405761719
    8. ',q' → logprob: -13.875053405761719
    9. '_,' → logprob: -14.750053405761719
    10. ' =' → logprob: -15.125053405761719

Token 360: ' wi' (ID: 20219)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.14493758976459503
    2. 'wj' → logprob: -2.144937515258789
    3. 'w' → logprob: -4.644937515258789
    4. ' wi' → logprob: -5.269937515258789
    5. 'vj' → logprob: -6.019937515258789
    6. '   ' → logprob: -8.394937515258789
    7. ' w' → logprob: -8.644937515258789
    8. 'vq' → logprob: -9.019937515258789
    9. 'v' → logprob: -10.144937515258789
    10. 'wij' → logprob: -10.644937515258789

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029752805829048157
    2. ' =' → logprob: -3.529752731323242
    3. ',' → logprob: -13.029752731323242
    4. '＝' → logprob: -16.404752731323242
    5. '=}' → logprob: -17.029752731323242
    6. ' ' → logprob: -17.529752731323242
    7. '=
' → logprob: -18.404752731323242
    8. '=v' → logprob: -18.779752731323242
    9. '=*/' → logprob: -19.279752731323242
    10. '=i' → logprob: -19.404752731323242

Token 362: ' SS' (ID: 30354)
  Prédit: 'SS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SS' → logprob: -4.620622712536715e-05
    2. ' SS' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.250045776367188
    4. 'S' → logprob: -18.250045776367188
    5. ' ' → logprob: -18.750045776367188
    6. '_SS' → logprob: -19.250045776367188
    7. '       ' → logprob: -20.000045776367188
    8. '  ' → logprob: -20.250045776367188
    9. 'ss' → logprob: -20.250045776367188
    10. '
' → logprob: -21.000045776367188

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[j' → logprob: -14.000000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[' → logprob: -19.125001907348633
    5. '
' → logprob: -21.750001907348633
    6. '[
' → logprob: -22.000001907348633
    7. '[I' → logprob: -22.375001907348633
    8. ' [' → logprob: -22.625001907348633
    9. '[index' → logprob: -22.750001907348633
    10. '```' → logprob: -23.000001907348633

Token 364: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017069561406970024
    2. ']
' → logprob: -4.517069339752197
    3. ']

' → logprob: -5.767069339752197
    4. '       ' → logprob: -6.267069339752197
    5. ')' → logprob: -7.142069339752197
    6. ']
' → logprob: -9.142069816589355
    7. '<|end|>' → logprob: -10.017069816589355
    8. ']

' → logprob: -11.017069816589355
    9. ' ]' → logprob: -12.517069816589355
    10. ')
' → logprob: -12.892069816589355

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002478508511558175
    2. '
' → logprob: -6.50247859954834
    3. 'he' → logprob: -8.00247859954834
    4. '        
' → logprob: -8.00247859954834
    5. ',' → logprob: -9.00247859954834
    6. '<|end|>' → logprob: -9.75247859954834
    7. ' he' → logprob: -10.00247859954834
    8. 'if' → logprob: -11.25247859954834
    9. '#' → logprob: -11.50247859954834
    10. '   ' → logprob: -11.62747859954834

Token 366: ' if' (ID: 538)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.008437390439212322
    2. 'if' (adapté à ' if') → logprob: -5.008437156677246
    3. 'u' → logprob: -7.008437156677246
    4. '       ' → logprob: -8.133437156677246
    5. '#' → logprob: -9.008437156677246
    6. '   ' → logprob: -9.258437156677246
    7. ' he' → logprob: -9.508437156677246
    8. 'q' → logprob: -9.758437156677246
    9. 'uq' → logprob: -9.883437156677246
    10. '           ' → logprob: -11.008437156677246

Token 367: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009673923254013062
    2. 'vq' → logprob: -4.759674072265625
    3. 'wi' → logprob: -7.884674072265625
    4. ' w' → logprob: -8.259674072265625
    5. '   ' → logprob: -9.259674072265625
    6. 'v' → logprob: -9.384674072265625
    7. 'i' → logprob: -9.759674072265625
    8. 'wv' → logprob: -10.009674072265625
    9. 'vi' → logprob: -10.384674072265625
    10. '(w' → logprob: -10.384674072265625

Token 368: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.215330409351736e-05
    2. '+' → logprob: -10.750041961669922
    3. ' +' → logprob: -11.000041961669922
    4. 'i' → logprob: -13.625041961669922
    5. '_q' → logprob: -13.750041961669922
    6. ' q' → logprob: -14.500041961669922
    7. '[q' → logprob: -15.250041961669922
    8. '	q' → logprob: -15.500041961669922
    9. '   ' → logprob: -16.125041961669922
    10. '```' → logprob: -16.750041961669922

Token 369: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687753677368164
    2. ' +' → logprob: -1.1368775367736816
    3. '+w' → logprob: -12.511877059936523
    4. '+
' → logprob: -13.761877059936523
    5. ' ' → logprob: -14.761877059936523
    6. ' +
' → logprob: -15.261877059936523
    7. '   ' → logprob: -15.511877059936523
    8. '           ' → logprob: -15.636877059936523
    9. '＋' → logprob: -15.636877059936523
    10. '       ' → logprob: -15.636877059936523

Token 370: ' wi' (ID: 20219)
  Prédit: 'wi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.00014001218369230628
    2. ' wi' → logprob: -8.875140190124512
    3. 'vi' → logprob: -16.625139236450195
    4. '   ' → logprob: -17.250139236450195
    5. 'wj' → logprob: -17.625139236450195
    6. 'w' → logprob: -18.125139236450195
    7. '       ' → logprob: -18.375139236450195
    8. 'Wi' → logprob: -18.500139236450195
    9. ' ' → logprob: -18.750139236450195
    10. 'wij' → logprob: -19.125139236450195

Token 371: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02054504305124283
    2. '<=' → logprob: -3.89554500579834
    3. ' ' → logprob: -13.02054500579834
    4. ' >' → logprob: -15.02054500579834
    5. '   ' → logprob: -15.52054500579834
    6. '>' → logprob: -15.77054500579834
    7. ')' → logprob: -16.520545959472656
    8. ')<=' → logprob: -16.645545959472656
    9. '<' → logprob: -17.020545959472656
    10. '  ' → logprob: -17.395545959472656

Token 372: ' W' (ID: 486)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010901616886258125
    2. '=W' → logprob: -4.63590145111084
    3. 'W' → logprob: -7.13590145111084
    4. ' W' → logprob: -8.01090145111084
    5. ' =' → logprob: -11.38590145111084
    6. '=w' → logprob: -12.51090145111084
    7. '=
' → logprob: -15.13590145111084
    8. '	W' → logprob: -15.26090145111084
    9. '=True' → logprob: -15.51090145111084
    10. 'w' → logprob: -15.63590145111084

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003948744386434555
    2. ':
' → logprob: -5.62894868850708
    3. ' and' → logprob: -8.878949165344238
    4. '       ' → logprob: -9.378949165344238
    5. '):' → logprob: -9.503949165344238
    6. ' :' → logprob: -10.878949165344238
    7. '   ' → logprob: -11.628949165344238
    8. ',' → logprob: -11.878949165344238
    9. ')' → logprob: -13.003949165344238
    10. ' or' → logprob: -13.128949165344238

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025405860505998135
    2. '       ' → logprob: -6.627540588378906
    3. ',' → logprob: -7.127540588378906
    4. '          ' → logprob: -9.252540588378906
    5. '               ' → logprob: -9.752540588378906
    6. '<|end|>' → logprob: -9.752540588378906
    7. ')' → logprob: -10.502540588378906
    8. ' he' → logprob: -10.502540588378906
    9. ':' → logprob: -10.627540588378906
    10. ':
' → logprob: -11.002540588378906

Token 375: ' he' (ID: 501)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6353425979614258
    2. 'v' → logprob: -1.7603425979614258
    3. '               ' → logprob: -1.7603425979614258
    4. ' v' → logprob: -3.385342597961426
    5. 'u' → logprob: -3.885342597961426
    6. ' u' → logprob: -4.010342597961426
    7. ' uv' → logprob: -4.635342597961426
    8. 'nv' → logprob: -4.885342597961426
    9. 'vv' → logprob: -5.260342597961426
    10. 'vq' → logprob: -5.385342597961426

Token 376: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.703443770878948e-06
    2. 'ap' → logprob: -12.000007629394531
    3. 'pp' → logprob: -13.625007629394531
    4. 'push' → logprob: -16.00000762939453
    5. ' app' → logprob: -17.25000762939453
    6. '```' → logprob: -17.50000762939453
    7. '   ' → logprob: -18.62500762939453
    8. 'q' → logprob: -19.12500762939453
    9. 'a' → logprob: -19.12500762939453
    10. 'ап' → logprob: -19.62500762939453

Token 377: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007687712204642594
    2. 'sh' → logprob: -7.250768661499023
    3. 'push' → logprob: -9.750768661499023
    4. 'op' → logprob: -15.625768661499023
    5. 'Push' → logprob: -16.125768661499023
    6. 'p' → logprob: -16.250768661499023
    7. '```' → logprob: -16.375768661499023
    8. '   ' → logprob: -16.750768661499023
    9. 'pp' → logprob: -17.750768661499023
    10. 'h' → logprob: -18.250768661499023

Token 378: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. 'q' → logprob: -17.625
    4. '   ' → logprob: -18.0
    5. ' (' → logprob: -19.25
    6. '(
' → logprob: -19.375
    7. '```' → logprob: -20.375
    8. ',q' → logprob: -21.0
    9. '[q' → logprob: -21.375
    10. ',' → logprob: -22.0

Token 379: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.4182128310203552
    2. ',' → logprob: -1.418212890625
    3. '(' → logprob: -2.418212890625
    4. ' (' → logprob: -5.418212890625
    5. '(u' → logprob: -5.418212890625
    6. ',(' → logprob: -7.168212890625
    7. '   ' → logprob: -8.043212890625
    8. '((' → logprob: -8.043212890625
    9. ',q' → logprob: -9.418212890625
    10. ' ,' → logprob: -9.793212890625

Token 380: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.0632734298706055
    2. '(' → logprob: -1.1882734298706055
    3. ' (' → logprob: -1.4382734298706055
    4. '(-' → logprob: -2.3132734298706055
    5. ' (-' → logprob: -5.0632734298706055
    6. '   ' → logprob: -6.0632734298706055
    7. ' ' → logprob: -6.4382734298706055
    8. '((' → logprob: -7.4382734298706055
    9. '(up' → logprob: -7.5632734298706055
    10. '(
' → logprob: -7.9382734298706055

Token 381: 'uq' (ID: 50985)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.11671492457389832
    2. 'uq' → logprob: -3.2417149543762207
    3. 'u' → logprob: -3.7417149543762207
    4. ' ub' → logprob: -4.241714954376221
    5. '*' → logprob: -4.616714954376221
    6. '-' → logprob: -5.241714954376221
    7. '*u' → logprob: -5.241714954376221
    8. '-u' → logprob: -5.866714954376221
    9. '*(' → logprob: -6.616714954376221
    10. '(' → logprob: -6.866714954376221

Token 382: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994465738534927
    2. '0' → logprob: -2.6949446201324463
    3. ',' → logprob: -12.569944381713867
    4. '[' → logprob: -13.944944381713867
    5. '
' → logprob: -14.007444381713867
    6. '```' → logprob: -15.069944381713867
    7. '   ' → logprob: -15.132444381713867
    8. ' ,' → logprob: -15.194944381713867
    9. ' ' → logprob: -15.319944381713867
    10. 'q' → logprob: -15.819944381713867

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038074489566497505
    2. ' ,' → logprob: -8.125380516052246
    3. ',u' → logprob: -9.875380516052246
    4. ',
' → logprob: -11.250380516052246
    5. '   ' → logprob: -12.125380516052246
    6. '+' → logprob: -13.250380516052246
    7. '  ' → logprob: -13.500380516052246
    8. ',w' → logprob: -13.500380516052246
    9. ',v' → logprob: -13.500380516052246
    10. 'u' → logprob: -13.500380516052246

Token 384: ' uq' (ID: 112908)
  Prédit: 'uq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uq' → logprob: -0.04501088336110115
    2. 'u' → logprob: -3.795010805130005
    3. ' uq' → logprob: -4.045011043548584
    4. '-u' → logprob: -6.170011043548584
    5. '-' → logprob: -7.295011043548584
    6. 'ub' → logprob: -8.045010566711426
    7. ' u' → logprob: -8.170010566711426
    8. ' -' → logprob: -8.545010566711426
    9. ' ' → logprob: -9.295010566711426
    10. '   ' → logprob: -9.420010566711426

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. '0' → logprob: -10.625028610229492
    3. 'q' → logprob: -13.625028610229492
    4. ',' → logprob: -13.750028610229492
    5. '' → logprob: -15.687528610229492
    6. ' ,' → logprob: -16.062528610229492
    7. '
' → logprob: -16.500028610229492
    8. '۱' → logprob: -16.500028610229492
    9. '-' → logprob: -16.562528610229492
    10. '１' → logprob: -16.625028610229492

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000133098365040496
    2. ' ,' → logprob: -9.250133514404297
    3. ',v' → logprob: -10.375133514404297
    4. '   ' → logprob: -12.375133514404297
    5. '+' → logprob: -13.875133514404297
    6. ',
' → logprob: -16.000133514404297
    7. ',w' → logprob: -16.500133514404297
    8. '       ' → logprob: -16.625133514404297
    9. '  ' → logprob: -16.875133514404297
    10. '-' → logprob: -17.000133514404297

Token 387: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.0002901757834479213
    2. ' v' → logprob: -8.250289916992188
    3. 'v' → logprob: -11.250289916992188
    4. '   ' → logprob: -11.375289916992188
    5. ' ' → logprob: -13.875289916992188
    6. '    ' → logprob: -14.000289916992188
    7. 'vj' → logprob: -14.000289916992188
    8. '  ' → logprob: -15.000289916992188
    9. '	v' → logprob: -15.250289916992188
    10. 'vp' → logprob: -15.625289916992188

Token 388: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.988221684878226e-06
    2. '+' → logprob: -12.375006675720215
    3. ' q' → logprob: -13.250006675720215
    4. ' +' → logprob: -14.125006675720215
    5. '   ' → logprob: -16.50000762939453
    6. 'qw' → logprob: -17.25000762939453
    7. '	q' → logprob: -17.87500762939453
    8. '    ' → logprob: -18.00000762939453
    9. 'qi' → logprob: -18.00000762939453
    10. ' ' → logprob: -18.25000762939453

Token 389: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05993126332759857
    2. '+' → logprob: -3.5599312782287598
    3. ' +' → logprob: -3.8099312782287598
    4. ' ,' → logprob: -5.30993127822876
    5. ',w' → logprob: -6.55993127822876
    6. '+w' → logprob: -7.05993127822876
    7. '    ' → logprob: -8.934930801391602
    8. '   ' → logprob: -9.059930801391602
    9. '       ' → logprob: -10.684930801391602
    10. 'w' → logprob: -11.184930801391602

Token 390: 'vi' (ID: 4627)
  Prédit: 'vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vi' → logprob: -0.0001129602751461789
    2. ' vi' → logprob: -9.250112533569336
    3. 'int' → logprob: -11.125112533569336
    4. 'wi' → logprob: -14.125112533569336
    5. ' ' → logprob: -14.500112533569336
    6. ' int' → logprob: -15.375112533569336
    7. '_vi' → logprob: -15.375112533569336
    8. 'vj' → logprob: -16.125112533569336
    9. '.vi' → logprob: -17.125112533569336
    10. '   ' → logprob: -17.500112533569336

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001953133614733815
    2. ' ,' → logprob: -6.251953125
    3. ',w' → logprob: -11.251953125
    4. ',
' → logprob: -11.626953125
    5. 'w' → logprob: -13.126953125
    6. '   ' → logprob: -15.501953125
    7. ',

' → logprob: -16.751953125
    8. ' ' → logprob: -17.001953125
    9. ' w' → logprob: -17.126953125
    10. '    ' → logprob: -17.126953125

Token 392: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.31327617168426514
    2. ' w' → logprob: -1.3132761716842651
    3. 'wj' → logprob: -12.188276290893555
    4. '	w' → logprob: -12.313276290893555
    5. '    ' → logprob: -13.563276290893555
    6. '   ' → logprob: -13.688276290893555
    7. ' ' → logprob: -13.813276290893555
    8. 'wi' → logprob: -15.438276290893555
    9. '       ' → logprob: -15.688276290893555
    10. '     ' → logprob: -16.063276290893555

Token 393: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2056656777858734
    2. 'w' → logprob: -2.2056655883789062
    3. 'i' → logprob: -2.8306655883789062
    4. 'wi' → logprob: -4.455665588378906
    5. 'qi' → logprob: -5.580665588378906
    6. 'qw' → logprob: -7.705665588378906
    7. ' wi' → logprob: -7.955665588378906
    8. 'iw' → logprob: -9.455665588378906
    9. ' w' → logprob: -9.580665588378906
    10. 'iq' → logprob: -9.830665588378906

Token 394: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007547119632363319
    2. '+' → logprob: -5.257546901702881
    3. ' ,' → logprob: -6.132546901702881
    4. ' +' → logprob: -9.257547378540039
    5. 'wi' → logprob: -11.007547378540039
    6. '+,' → logprob: -11.382547378540039
    7. ',w' → logprob: -12.382547378540039
    8. 'w' → logprob: -12.757547378540039
    9. ' wi' → logprob: -13.007547378540039
    10. ',
' → logprob: -13.132547378540039

Token 395: 'wi' (ID: 7491)
  Prédit: 'wi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wi' → logprob: -0.00043126524542458355
    2. ' wi' → logprob: -7.750431060791016
    3. 'w' → logprob: -14.875431060791016
    4. 'wj' → logprob: -17.000431060791016
    5. ' ' → logprob: -17.250431060791016
    6. 'wia' → logprob: -17.750431060791016
    7. 'vi' → logprob: -17.875431060791016
    8. '   ' → logprob: -18.000431060791016
    9. '       ' → logprob: -18.000431060791016
    10. 'wij' → logprob: -18.125431060791016

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025072861462831497
    2. ',i' → logprob: -6.377507209777832
    3. ' ,' → logprob: -7.127507209777832
    4. ',
' → logprob: -14.502507209777832
    5. '   ' → logprob: -15.002507209777832
    6. '	' → logprob: -15.127507209777832
    7. 'i' → logprob: -15.252507209777832
    8. ' ' → logprob: -16.00250816345215
    9. '       ' → logprob: -16.25250816345215
    10. '           ' → logprob: -16.37750816345215

Token 397: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014186662621796131
    2. ' i' → logprob: -4.264186859130859
    3. '   ' → logprob: -10.88918685913086
    4. ' ' → logprob: -13.13918685913086
    5. '  ' → logprob: -13.51418685913086
    6. '    ' → logprob: -14.51418685913086
    7. '     ' → logprob: -15.26418685913086
    8. '       ' → logprob: -15.51418685913086
    9. '      ' → logprob: -16.38918685913086
    10. '	i' → logprob: -16.38918685913086

Token 398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001171652227640152
    2. ' +' → logprob: -6.751171588897705
    3. '+
' → logprob: -13.501172065734863
    4. '1' → logprob: -16.876171112060547
    5. '))' → logprob: -18.126171112060547
    6. '+i' → logprob: -18.626171112060547
    7. '   ' → logprob: -19.001171112060547
    8. ' +
' → logprob: -19.501171112060547
    9. '＋' → logprob: -19.751171112060547
    10. '+)' → logprob: -19.876171112060547

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.375009536743164
    4. '```' → logprob: -17.000009536743164
    5. '+' → logprob: -17.125009536743164
    6. '  ' → logprob: -18.312509536743164
    7. '
' → logprob: -19.437509536743164
    8. '    ' → logprob: -19.812509536743164
    9. '``' → logprob: -19.937509536743164
    10. '       ' → logprob: -19.937509536743164

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.2500057220459
    5. '+' → logprob: -16.8750057220459
    6. '
' → logprob: -18.0625057220459
    7. '  ' → logprob: -18.5625057220459
    8. '۱' → logprob: -18.9375057220459
    9. '``' → logprob: -19.0625057220459
    10. '2' → logprob: -19.5625057220459

Token 401: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011266973800957203
    2. '))
' → logprob: -4.511267185211182
    3. '       ' → logprob: -9.011266708374023
    4. ')' → logprob: -9.636266708374023
    5. '   ' → logprob: -11.261266708374023
    6. '           ' → logprob: -11.761266708374023
    7. '))
' → logprob: -12.511266708374023
    8. ' ))' → logprob: -12.511266708374023
    9. '))

' → logprob: -13.261266708374023
    10. ' ' → logprob: -14.511266708374023

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7045233845710754
    2. ')' → logprob: -1.2045233249664307
    3. '<|end|>' → logprob: -2.0795233249664307
    4. '           ' → logprob: -4.20452356338501
    5. ' )' → logprob: -4.20452356338501
    6. ',' → logprob: -4.57952356338501
    7. ' 
' → logprob: -4.70452356338501
    8. '   ' → logprob: -5.07952356338501
    9. ' ' → logprob: -5.57952356338501
    10. '  
' → logprob: -5.70452356338501

Token 403: ' u' (ID: 337)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.053593218326568604
    2. 'u' (adapté à ' u') → logprob: -3.553593158721924
    3. ' he' → logprob: -4.303593158721924
    4. '       ' → logprob: -5.178593158721924
    5. '   ' → logprob: -6.678593158721924
    6. ')' → logprob: -7.053593158721924
    7. 'h' → logprob: -7.928593158721924
    8. '           ' → logprob: -8.178593635559082
    9. ',' → logprob: -8.303593635559082
    10. ' u' → logprob: -8.428593635559082

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29107895493507385
    2. 'q' → logprob: -1.5410789251327515
    3. '1' → logprob: -3.416079044342041
    4. 'p' → logprob: -5.291079044342041
    5. '2' → logprob: -9.541078567504883
    6. 'c' → logprob: -9.666078567504883
    7. 'l' → logprob: -9.791078567504883
    8. 'b' → logprob: -10.041078567504883
    9. 'i' → logprob: -10.166078567504883
    10. 'v' → logprob: -10.666078567504883

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16595712304115295
    2. '1' → logprob: -1.9159570932388306
    3. ',u' → logprob: -6.165956974029541
    4. '=' → logprob: -6.790956974029541
    5. 'u' → logprob: -7.290956974029541
    6. '0' → logprob: -7.290956974029541
    7. '_,' → logprob: -8.0409574508667
    8. '_new' → logprob: -8.7909574508667
    9. ' =' → logprob: -8.9159574508667
    10. ' ,' → logprob: -9.0409574508667

Token 406: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005382453091442585
    2. 'ub' → logprob: -5.630382537841797
    3. ' u' → logprob: -6.755382537841797
    4. 'uq' → logprob: -7.630382537841797
    5. ' ub' → logprob: -11.380382537841797
    6. '0' → logprob: -11.380382537841797
    7. ' uq' → logprob: -11.380382537841797
    8. '   ' → logprob: -11.630382537841797
    9. 'uw' → logprob: -11.880382537841797
    10. 'uj' → logprob: -11.880382537841797

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ',' → logprob: -12.12501335144043
    3. 'q' → logprob: -12.25001335144043
    4. '0' → logprob: -13.25001335144043
    5. ' =' → logprob: -15.25001335144043
    6. '=' → logprob: -15.50001335144043
    7. '```' → logprob: -16.00001335144043
    8. '_,' → logprob: -16.87501335144043
    9. ' ,' → logprob: -17.12501335144043
    10. '...' → logprob: -17.25001335144043

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014668636955320835
    2. ' =' → logprob: -4.3896684646606445
    3. ',' → logprob: -6.1396684646606445
    4. '=u' → logprob: -15.014668464660645
    5. ' ,' → logprob: -15.264668464660645
    6. ',u' → logprob: -15.764668464660645
    7. '=
' → logprob: -16.51466941833496
    8. '＝' → logprob: -16.63966941833496
    9. '   ' → logprob: -16.76466941833496
    10. '=user' → logprob: -17.26466941833496

Token 409: ' ub' (ID: 11590)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.180795818567276
    2. ' ub' → logprob: -1.8057957887649536
    3. '   ' → logprob: -7.805795669555664
    4. ' ' → logprob: -8.055795669555664
    5. '  ' → logprob: -8.680795669555664
    6. '    ' → logprob: -10.930795669555664
    7. '       ' → logprob: -11.368295669555664
    8. '     ' → logprob: -11.368295669555664
    9. 'u' → logprob: -11.430795669555664
    10. 'b' → logprob: -11.555795669555664

Token 410: 'ound' (ID: 895)
  Prédit: 'ound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ound' → logprob: -1.2664456789934775e-06
    2. 'ount' → logprob: -13.750000953674316
    3. 'o' → logprob: -17.250001907348633
    4. 'bound' → logprob: -17.625001907348633
    5. 'oint' → logprob: -17.750001907348633
    6. 'ond' → logprob: -17.875001907348633
    7. '(' → logprob: -18.000001907348633
    8. '```' → logprob: -19.625001907348633
    9. 'ounds' → logprob: -19.750001907348633
    10. 'oun' → logprob: -19.750001907348633

Token 411: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00017350474081467837
    2. '(' → logprob: -8.750173568725586
    3. '(q' → logprob: -11.375173568725586
    4. '((' → logprob: -13.250173568725586
    5. '(
' → logprob: -13.625173568725586
    6. ' (' → logprob: -15.375173568725586
    7. 'v' → logprob: -15.625173568725586
    8. 'vq' → logprob: -16.500173568725586
    9. '(u' → logprob: -17.000173568725586
    10. '(ans' → logprob: -17.125173568725586

Token 412: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.319370302458992e-06
    2. '+' → logprob: -12.875005722045898
    3. ',' → logprob: -13.500005722045898
    4. ' +' → logprob: -15.250005722045898
    5. '       ' → logprob: -15.500005722045898
    6. '   ' → logprob: -15.500005722045898
    7. ',q' → logprob: -15.500005722045898
    8. '	q' → logprob: -16.2500057220459
    9. '           ' → logprob: -16.7500057220459
    10. '    ' → logprob: -16.8750057220459

Token 413: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.041121046990156174
    2. ',' → logprob: -3.791121006011963
    3. ' +' → logprob: -4.041121006011963
    4. ' ,' → logprob: -9.791121482849121
    5. ',v' → logprob: -10.916121482849121
    6. '+i' → logprob: -11.166121482849121
    7. '       ' → logprob: -11.291121482849121
    8. 'vi' → logprob: -11.541121482849121
    9. '           ' → logprob: -11.666121482849121
    10. '   ' → logprob: -12.416121482849121

Token 414: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.27099974633893e-05
    2. ' w' → logprob: -11.375012397766113
    3. 'wj' → logprob: -14.750012397766113
    4. 'wi' → logprob: -15.000012397766113
    5. '   ' → logprob: -15.750012397766113
    6. ' ' → logprob: -16.25001335144043
    7. '       ' → logprob: -16.37501335144043
    8. '	w' → logprob: -16.50001335144043
    9. '
' → logprob: -17.37501335144043
    10. 'vq' → logprob: -17.50001335144043

Token 415: 'q' (ID: 80)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15512686967849731
    2. ',' → logprob: -2.6551268100738525
    3. 'q' → logprob: -2.7801268100738525
    4. 'qi' → logprob: -5.155127048492432
    5. 'wi' → logprob: -5.405127048492432
    6. ',w' → logprob: -7.030127048492432
    7. 'i' → logprob: -9.530126571655273
    8. '   ' → logprob: -10.155126571655273
    9. 'qw' → logprob: -10.405126571655273
    10. ' ,' → logprob: -11.030126571655273

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05675597861409187
    2. '+' → logprob: -2.931756019592285
    3. ' +' → logprob: -6.806756019592285
    4. ' ,' → logprob: -7.681756019592285
    5. '+i' → logprob: -9.056756019592285
    6. '       ' → logprob: -9.181756019592285
    7. ',i' → logprob: -10.181756019592285
    8. '   ' → logprob: -11.556756019592285
    9. '           ' → logprob: -11.931756019592285
    10. '+,' → logprob: -12.056756019592285

Token 417: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015089125372469425
    2. ' i' → logprob: -6.501508712768555
    3. '   ' → logprob: -12.501508712768555
    4. '       ' → logprob: -13.126508712768555
    5. ' ' → logprob: -15.001508712768555
    6. '           ' → logprob: -15.876508712768555
    7. '  ' → logprob: -16.251508712768555
    8. '    ' → logprob: -16.376508712768555
    9. '     ' → logprob: -16.751508712768555
    10. '      ' → logprob: -17.376508712768555

Token 418: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018210114911198616
    2. ' +' → logprob: -4.018209934234619
    3. '1' → logprob: -9.768210411071777
    4. ',' → logprob: -13.643210411071777
    5. '+
' → logprob: -14.893210411071777
    6. '   ' → logprob: -15.018210411071777
    7. '       ' → logprob: -15.268210411071777
    8. '+,' → logprob: -15.268210411071777
    9. '+i' → logprob: -15.768210411071777
    10. ')' → logprob: -15.768210411071777

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '2' → logprob: -14.375016212463379
    4. '   ' → logprob: -15.500016212463379
    5. '+' → logprob: -16.250015258789062
    6. '```' → logprob: -17.250015258789062
    7. '       ' → logprob: -17.375015258789062
    8. '     ' → logprob: -18.250015258789062
    9. '    ' → logprob: -18.375015258789062
    10. '  ' → logprob: -18.500015258789062

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -14.750000953674316
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.125001907348633
    6. '0' → logprob: -17.312501907348633
    7. '       ' → logprob: -17.375001907348633
    8. '
' → logprob: -17.750001907348633
    9. '+' → logprob: -18.250001907348633
    10. '           ' → logprob: -18.562501907348633

Token 421: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006718571297824383
    2. ')
' → logprob: -5.006718635559082
    3. '   ' → logprob: -13.631718635559082
    4. '       ' → logprob: -14.506718635559082
    5. ',' → logprob: -14.756718635559082
    6. ')
' → logprob: -14.881718635559082
    7. ' )' → logprob: -15.631718635559082
    8. ')

' → logprob: -15.756718635559082
    9. '),' → logprob: -15.881718635559082
    10. '))' → logprob: -16.131717681884766

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0379626527428627
    2. '   ' → logprob: -3.9129626750946045
    3. 'he' → logprob: -5.162962436676025
    4. '```' → logprob: -5.537962436676025
    5. ')' → logprob: -5.787962436676025
    6. ' he' → logprob: -6.162962436676025
    7. '<|end|>' → logprob: -6.662962436676025
    8. '           ' → logprob: -8.162962913513184
    9. ',' → logprob: -8.662962913513184
    10. '        
' → logprob: -8.912962913513184

Token 423: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01892753317952156
    2. 'he' → logprob: -4.018927574157715
    3. ' he' → logprob: -7.518927574157715
    4. '           ' → logprob: -8.643927574157715
    5. '	' → logprob: -11.393927574157715
    6. ' if' → logprob: -11.393927574157715
    7. '   ' → logprob: -11.518927574157715
    8. 'if' (adapté à ' if') → logprob: -12.268927574157715
    9. ',' → logprob: -12.768927574157715
    10. '               ' → logprob: -12.893927574157715

Token 424: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.18045708537101746
    2. 'u' → logprob: -1.8054571151733398
    3. ' uq' → logprob: -8.05545711517334
    4. ' ' → logprob: -9.30545711517334
    5. '   ' → logprob: -9.43045711517334
    6. '(u' → logprob: -10.05545711517334
    7. 'uq' → logprob: -10.18045711517334
    8. ' w' → logprob: -10.80545711517334
    9. 'w' → logprob: -11.18045711517334
    10. '(' → logprob: -11.18045711517334

Token 425: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033718086779117584
    2. '1' → logprob: -3.4087181091308594
    3. '[' → logprob: -10.40871810913086
    4. '_' → logprob: -10.90871810913086
    5. ' ' → logprob: -12.03371810913086
    6. 'u' → logprob: -12.03371810913086
    7. 'q' → logprob: -12.65871810913086
    8. '```' → logprob: -13.47121810913086
    9. 'o' → logprob: -14.28371810913086
    10. '   ' → logprob: -14.34621810913086

Token 426: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3792824149131775
    2. '<' → logprob: -1.3792824745178223
    3. ',' → logprob: -3.2542824745178223
    4. ' <=' → logprob: -4.004282474517822
    5. '<=' → logprob: -5.629282474517822
    6. ' ,' → logprob: -6.504282474517822
    7. ')' → logprob: -6.879282474517822
    8. '[' → logprob: -8.129281997680664
    9. '>' → logprob: -8.629281997680664
    10. ' >' → logprob: -9.004281997680664

Token 427: ' um' (ID: 1713)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.025199368596076965
    2. ' um' → logprob: -3.9001994132995605
    3. 'uq' → logprob: -6.1501994132995605
    4. 'u' → logprob: -6.5251994132995605
    5. ' u' → logprob: -7.1501994132995605
    6. ' ' → logprob: -9.275198936462402
    7. ' uq' → logprob: -9.525198936462402
    8. '   ' → logprob: -10.900198936462402
    9. '  ' → logprob: -10.900198936462402
    10. '-' → logprob: -11.650198936462402

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3139578700065613
    2. ':
' → logprob: -1.313957929611206
    3. ' and' → logprob: -8.688958168029785
    4. '):' → logprob: -9.188958168029785
    5. '):
' → logprob: -9.188958168029785
    6. '           ' → logprob: -9.313958168029785
    7. '       ' → logprob: -9.563958168029785
    8. ':
' → logprob: -9.938958168029785
    9. '   ' → logprob: -10.563958168029785
    10. ' or' → logprob: -10.688958168029785

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052978940308094025
    2. ' continue' → logprob: -3.302978992462158
    3. 'continue' → logprob: -4.302978992462158
    4. ' he' → logprob: -6.927978992462158
    5. 'he' → logprob: -8.677978515625
    6. '               ' → logprob: -9.802978515625
    7. '       ' → logprob: -10.552978515625
    8. '          ' → logprob: -11.177978515625
    9. '            ' → logprob: -11.427978515625
    10. '	continue' → logprob: -12.052978515625

Token 430: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7104403376579285
    2. '           ' → logprob: -0.9604403376579285
    3. ' continue' → logprob: -2.0854403972625732
    4. '       ' → logprob: -6.710440158843994
    5. '	continue' → logprob: -8.835440635681152
    6. '   ' → logprob: -9.210440635681152
    7. '               ' → logprob: -9.460440635681152
    8. '_continue' → logprob: -11.710440635681152
    9. 'contin' → logprob: -12.335440635681152
    10. 'pass' → logprob: -12.335440635681152

Token 431: ' u' (ID: 337)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.6386573314666748
    2. ' uq' → logprob: -1.6386573314666748
    3. ' True' → logprob: -1.8886573314666748
    4. 'False' → logprob: -2.013657331466675
    5. 'uq' → logprob: -2.263657331466675
    6. ' False' → logprob: -2.888657331466675
    7. '0' → logprob: -3.513657331466675
    8. 'vq' → logprob: -3.513657331466675
    9. 'w' → logprob: -3.763657331466675
    10. ' w' → logprob: -4.263657569885254

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04500826075673103
    2. 'q' → logprob: -4.045008182525635
    3. 'm' → logprob: -4.420008182525635
    4. '1' → logprob: -4.420008182525635
    5. ' ' → logprob: -6.420008182525635
    6. ' q' → logprob: -8.170008659362793
    7. '   ' → logprob: -9.045008659362793
    8. ' m' → logprob: -9.670008659362793
    9. '_' → logprob: -9.795008659362793
    10. 'continue' → logprob: -10.545008659362793

Token 433: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43676331639289856
    2. '>' → logprob: -1.1867632865905762
    3. ' <=' → logprob: -3.686763286590576
    4. ' <' → logprob: -5.186763286590576
    5. ' ==' → logprob: -5.436763286590576
    6. '           ' → logprob: -5.936763286590576
    7. '<=' → logprob: -6.061763286590576
    8. '   ' → logprob: -6.186763286590576
    9. ':' → logprob: -6.186763286590576
    10. '==' → logprob: -6.561763286590576

Token 434: ' um' (ID: 1713)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.8635028600692749
    2. 'u' → logprob: -1.363502860069275
    3. ' u' → logprob: -1.488502860069275
    4. ' um' → logprob: -2.3635029792785645
    5. 'ans' → logprob: -6.7385029792785645
    6. ' ans' → logprob: -7.6135029792785645
    7. '   ' → logprob: -8.488502502441406
    8. 'uq' → logprob: -8.613502502441406
    9. ' uq' → logprob: -8.738502502441406
    10. ' ' → logprob: -9.488502502441406

Token 435: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48368531465530396
    2. ':' → logprob: -1.3586852550506592
    3. '               ' → logprob: -2.108685255050659
    4. ' and' → logprob: -6.483685493469238
    5. '           ' → logprob: -6.733685493469238
    6. ' continue' → logprob: -7.233685493469238
    7. '):
' → logprob: -7.733685493469238
    8. 'continue' → logprob: -8.608685493469238
    9. ' or' → logprob: -8.983685493469238
    10. ' :
' → logprob: -8.983685493469238

Token 436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08336498588323593
    2. 'continue' → logprob: -3.708364963531494
    3. ' continue' → logprob: -3.708364963531494
    4. '           ' → logprob: -4.208364963531494
    5. ' um' → logprob: -4.708364963531494
    6. 'um' → logprob: -5.083364963531494
    7. ' break' → logprob: -8.458365440368652
    8. '   ' → logprob: -9.208365440368652
    9. 'ans' → logprob: -9.458365440368652
    10. ' ans' → logprob: -9.458365440368652

Token 437: ' um' (ID: 1713)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' (adapté à ' um') → logprob: -0.35730695724487305
    2. ' um' → logprob: -1.357306957244873
    3. '               ' → logprob: -3.857306957244873
    4. '           ' → logprob: -4.232306957244873
    5. '                   ' → logprob: -5.607306957244873
    6. 'continue' → logprob: -6.732306957244873
    7. '   ' → logprob: -6.982306957244873
    8. 'ans' → logprob: -7.482306957244873
    9. ' continue' → logprob: -7.732306957244873
    10. ' ans' → logprob: -8.857307434082031

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132680654525757
    2. ' =' → logprob: -1.3132680654525757
    3. ',' → logprob: -12.188267707824707
    4. '   ' → logprob: -15.188267707824707
    5. '＝' → logprob: -15.438267707824707
    6. '=u' → logprob: -15.563267707824707
    7. ' ' → logprob: -15.938267707824707
    8. '.=' → logprob: -16.813268661499023
    9. '=

' → logprob: -16.813268661499023
    10. '+=' → logprob: -16.938268661499023

Token 439: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014168208464980125
    2. ' u' → logprob: -4.2641682624816895
    3. '	u' → logprob: -13.014167785644531
    4. '               ' → logprob: -14.014167785644531
    5. '   ' → logprob: -14.139167785644531
    6. '                   ' → logprob: -15.014167785644531
    7. '           ' → logprob: -15.264167785644531
    8. '
' → logprob: -16.01416778564453
    9. '<u' → logprob: -16.38916778564453
    10. '       ' → logprob: -17.01416778564453

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.875
    3. '_' → logprob: -17.75
    4. ' ' → logprob: -18.0
    5. '۰' → logprob: -18.375
    6. '０' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. 'o' → logprob: -20.375
    9. '01' → logprob: -20.5
    10. '[' → logprob: -20.75

Token 441: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012294658459722996
    2. ',' → logprob: -5.387294769287109
    3. '           ' → logprob: -5.387294769287109
    4. ' and' → logprob: -6.262294769287109
    5. '              ' → logprob: -7.637294769287109
    6. '<|end|>' → logprob: -8.13729476928711
    7. '       ' → logprob: -9.38729476928711
    8. '                   ' → logprob: -9.51229476928711
    9. ' he' → logprob: -9.76229476928711
    10. ')' → logprob: -10.26229476928711

Token 442: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06368912756443024
    2. '           ' → logprob: -2.8136892318725586
    3. '              ' → logprob: -7.063689231872559
    4. ',' → logprob: -7.938689231872559
    5. '       ' → logprob: -8.313689231872559
    6. '          ' → logprob: -9.063689231872559
    7. ')' → logprob: -10.563689231872559
    8. '<|end|>' → logprob: -10.688689231872559
    9. ' and' → logprob: -10.938689231872559
    10. '            ' → logprob: -11.188689231872559

Token 443: ' he' (ID: 501)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004223116673529148
    2. '       ' → logprob: -6.004223346710205
    3. '               ' → logprob: -6.879223346710205
    4. 'continue' → logprob: -8.254222869873047
    5. ' continue' → logprob: -8.879222869873047
    6. 'he' (adapté à ' he') → logprob: -9.254222869873047
    7. '          ' → logprob: -9.629222869873047
    8. ' he' → logprob: -9.754222869873047
    9. 'else' → logprob: -10.379222869873047
    10. ' else' → logprob: -10.754222869873047

Token 444: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.339278580620885e-06
    2. 'ap' → logprob: -13.000001907348633
    3. '```' → logprob: -18.125001907348633
    4. 'a' → logprob: -18.625001907348633
    5. ' app' → logprob: -18.750001907348633
    6. 'pp' → logprob: -18.750001907348633
    7. 'push' → logprob: -19.000001907348633
    8. 'append' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.750001907348633
    10. 'ап' → logprob: -20.875001907348633

Token 445: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.3795937522663735e-05
    2. 'push' → logprob: -11.37502384185791
    3. 'op' → logprob: -11.75002384185791
    4. 'sh' → logprob: -13.12502384185791
    5. 'u' → logprob: -14.25002384185791
    6. 'p' → logprob: -15.00002384185791
    7. 'Push' → logprob: -15.12502384185791
    8. '   ' → logprob: -15.12502384185791
    9. 'app' → logprob: -15.25002384185791
    10. 'pp' → logprob: -16.125022888183594

Token 446: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.320199877838604e-07
    2. 'q' → logprob: -15.125
    3. '(' → logprob: -17.125
    4. '```' → logprob: -18.875
    5. ',q' → logprob: -19.0
    6. ' (' → logprob: -19.25
    7. '[q' → logprob: -19.375
    8. '(
' → logprob: -19.625
    9. ',' → logprob: -20.0
    10. '	q' → logprob: -20.875

Token 447: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.000340111117111519
    2. ',' → logprob: -8.500340461730957
    3. ',q' → logprob: -9.125340461730957
    4. 'q' → logprob: -10.750340461730957
    5. ')' → logprob: -12.625340461730957
    6. '(' → logprob: -13.750340461730957
    7. '),' → logprob: -15.000340461730957
    8. '   ' → logprob: -15.250340461730957
    9. ' (' → logprob: -15.250340461730957
    10. '```' → logprob: -15.375340461730957

Token 448: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.019860554486513138
    2. ' (' → logprob: -4.019860744476318
    3. '(' → logprob: -6.394860744476318
    4. '   ' → logprob: -10.89486026763916
    5. '(q' → logprob: -11.89486026763916
    6. ' ' → logprob: -12.51986026763916
    7. '(ui' → logprob: -12.89486026763916
    8. '((' → logprob: -13.51986026763916
    9. '(up' → logprob: -13.64486026763916
    10. '(-' → logprob: -13.76986026763916

Token 449: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003003081073984504
    2. ' u' → logprob: -8.125300407409668
    3. '(u' → logprob: -13.250300407409668
    4. '   ' → logprob: -13.625300407409668
    5. '-u' → logprob: -14.875300407409668
    6. '	u' → logprob: -15.625300407409668
    7. '  ' → logprob: -15.750300407409668
    8. 'uq' → logprob: -16.00029945373535
    9. '
' → logprob: -16.75029945373535
    10. ' ' → logprob: -16.75029945373535

Token 450: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029761025682091713
    2. '1' → logprob: -3.5297610759735107
    3. 'u' → logprob: -12.40476131439209
    4. '```' → logprob: -13.52976131439209
    5. '(u' → logprob: -14.40476131439209
    6. '(' → logprob: -14.40476131439209
    7. ',' → logprob: -14.46726131439209
    8. '[' → logprob: -14.59226131439209
    9. '
' → logprob: -15.46726131439209
    10. 'q' → logprob: -15.46726131439209

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007734165410511196
    2. ',u' → logprob: -7.3757734298706055
    3. ' ,' → logprob: -8.875773429870605
    4. ',
' → logprob: -13.250773429870605
    5. '   ' → logprob: -13.375773429870605
    6. 'u' → logprob: -13.375773429870605
    7. ' u' → logprob: -14.500773429870605
    8. ',v' → logprob: -14.625773429870605
    9. '    ' → logprob: -15.125773429870605
    10. '0' → logprob: -15.500773429870605

Token 452: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03365457430481911
    2. ' u' → logprob: -3.4086546897888184
    3. '<|end|>' → logprob: -13.03365421295166
    4. '	u' → logprob: -13.53365421295166
    5. ')' → logprob: -13.53365421295166
    6. '(u' → logprob: -14.28365421295166
    7. 'ub' → logprob: -15.03365421295166
    8. ' ' → logprob: -15.09615421295166
    9. '-u' → logprob: -15.40865421295166
    10. '   ' → logprob: -15.47115421295166

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.000006675720215
    3. '2' → logprob: -17.7500057220459
    4. ',' → logprob: -18.0000057220459
    5. '۰' → logprob: -19.0000057220459
    6. ' ' → logprob: -19.2500057220459
    7. '```' → logprob: -19.5625057220459
    8. '[' → logprob: -19.8750057220459
    9. ')' → logprob: -19.9375057220459
    10. '_' → logprob: -20.4375057220459

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020771251001860946
    2. ' ,' → logprob: -8.500207901000977
    3. ',v' → logprob: -13.125207901000977
    4. '   ' → logprob: -14.750207901000977
    5. ',i' → logprob: -15.125207901000977
    6. '           ' → logprob: -15.125207901000977
    7. '```' → logprob: -15.250207901000977
    8. '       ' → logprob: -15.875207901000977
    9. ',w' → logprob: -16.000207901000977
    10. ',
' → logprob: -16.250207901000977

Token 455: ' v' (ID: 323)
  Prédit: 'vq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vq' → logprob: -0.0019351851660758257
    2. ' v' → logprob: -6.251935005187988
    3. 'v' → logprob: -12.501935005187988
    4. ' ' → logprob: -13.751935005187988
    5. '   ' → logprob: -14.626935005187988
    6. '	v' → logprob: -15.501935005187988
    7. 'vj' → logprob: -15.876935005187988
    8. '       ' → logprob: -15.876935005187988
    9. ' uq' → logprob: -16.001935958862305
    10. '    ' → logprob: -16.126935958862305

Token 456: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.5577775128767826e-06
    2. '+' → logprob: -12.375005722045898
    3. ' +' → logprob: -15.250005722045898
    4. ' q' → logprob: -15.375005722045898
    5. '   ' → logprob: -15.750005722045898
    6. 'i' → logprob: -15.875005722045898
    7. '       ' → logprob: -16.2500057220459
    8. '```' → logprob: -16.5000057220459
    9. '    ' → logprob: -16.8750057220459
    10. '     ' → logprob: -16.8750057220459

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024277404882013798
    2. ' ,' → logprob: -6.502427577972412
    3. ',w' → logprob: -7.002427577972412
    4. 'w' → logprob: -11.75242805480957
    5. '   ' → logprob: -12.75242805480957
    6. '       ' → logprob: -13.75242805480957
    7. '    ' → logprob: -14.25242805480957
    8. ' ' → logprob: -14.62742805480957
    9. '  ' → logprob: -14.62742805480957
    10. '           ' → logprob: -15.12742805480957

Token 458: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12694260478019714
    2. ' w' → logprob: -2.1269426345825195
    3. ' ' → logprob: -12.00194263458252
    4. '   ' → logprob: -13.25194263458252
    5. ' i' → logprob: -13.50194263458252
    6. 'i' → logprob: -13.62694263458252
    7. '    ' → logprob: -14.12694263458252
    8. 'wi' → logprob: -14.50194263458252
    9. '     ' → logprob: -14.75194263458252
    10. '  ' → logprob: -15.00194263458252

Token 459: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.23917081207037e-05
    2. ',' → logprob: -10.125041961669922
    3. '   ' → logprob: -14.750041961669922
    4. ',q' → logprob: -14.875041961669922
    5. 'w' → logprob: -15.000041961669922
    6. '+' → logprob: -15.625041961669922
    7. 'i' → logprob: -15.875041961669922
    8. '_q' → logprob: -16.000041961669922
    9. '```' → logprob: -16.125041961669922
    10. ')' → logprob: -16.125041961669922

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020246754866093397
    2. ' ,' → logprob: -8.625202178955078
    3. ',i' → logprob: -10.875202178955078
    4. '   ' → logprob: -12.875202178955078
    5. '  ' → logprob: -14.500202178955078
    6. ' ' → logprob: -15.125202178955078
    7. '    ' → logprob: -15.500202178955078
    8. '       ' → logprob: -15.750202178955078
    9. 'i' → logprob: -16.250202178955078
    10. '      ' → logprob: -16.500202178955078

Token 461: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3869006633758545
    2. 'i' → logprob: -1.1369006633758545
    3. ' ' → logprob: -11.011900901794434
    4. '    ' → logprob: -11.761900901794434
    5. '   ' → logprob: -13.261900901794434
    6. '  ' → logprob: -13.511900901794434
    7. '        ' → logprob: -14.386900901794434
    8. '	i' → logprob: -14.636900901794434
    9. '      ' → logprob: -15.511900901794434
    10. '     ' → logprob: -15.636900901794434

Token 462: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269306242465973
    2. ' +' → logprob: -2.1269307136535645
    3. '+
' → logprob: -14.001930236816406
    4. '+)' → logprob: -14.251930236816406
    5. '1' → logprob: -14.876930236816406
    6. '   ' → logprob: -15.376930236816406
    7. ' ' → logprob: -15.751930236816406
    8. ' +
' → logprob: -16.376930236816406
    9. '＋' → logprob: -16.376930236816406
    10. ')' → logprob: -16.501930236816406

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024763107649050653
    2. ' ' → logprob: -8.375247955322266
    3. '+' → logprob: -11.000247955322266
    4. '```' → logprob: -15.750247955322266
    5. ' +' → logprob: -16.125247955322266
    6. '   ' → logprob: -16.250247955322266
    7. '  ' → logprob: -17.250247955322266
    8. ')' → logprob: -18.000247955322266
    9. 'i' → logprob: -18.562747955322266
    10. '2' → logprob: -18.750247955322266

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.875009536743164
    3. '+' → logprob: -13.250009536743164
    4. '   ' → logprob: -15.812509536743164
    5. '```' → logprob: -16.000009536743164
    6. '0' → logprob: -17.875009536743164
    7. '۱' → logprob: -18.062509536743164
    8. '2' → logprob: -18.125009536743164
    9. '  ' → logprob: -18.375009536743164
    10. '11' → logprob: -18.375009536743164

Token 465: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16030535101890564
    2. '))' → logprob: -1.910305380821228
    3. ')
' → logprob: -9.78530502319336
    4. '))
' → logprob: -10.91030502319336
    5. '       ' → logprob: -12.78530502319336
    6. ')))' → logprob: -12.91030502319336
    7. '   ' → logprob: -14.66030502319336
    8. ')}' → logprob: -15.03530502319336
    9. ' )' → logprob: -15.66030502319336
    10. '           ' → logprob: -15.91030502319336

Token 466: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0057529183104634285
    2. 'return' → logprob: -5.755753040313721
    3. '   ' → logprob: -6.130753040313721
    4. ' print' → logprob: -8.255752563476562
    5. 'ans' → logprob: -9.630752563476562
    6. ' return' → logprob: -10.630752563476562
    7. '
' → logprob: -10.755752563476562
    8. ')' → logprob: -11.130752563476562
    9. 'answer' → logprob: -13.005752563476562
    10. ')
' → logprob: -13.505752563476562

Token 468: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.06283353269100189
    2. '(' → logprob: -3.437833547592163
    3. '(int' → logprob: -3.937833547592163
    4. '(ans' → logprob: -5.062833309173584
    5. '(abs' → logprob: -5.937833309173584
    6. '(max' → logprob: -9.187833786010742
    7. '((-' → logprob: -10.062833786010742
    8. '(round' → logprob: -10.437833786010742
    9. ' (-' → logprob: -10.562833786010742
    10. '(-(' → logprob: -10.562833786010742

Token 469: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -7.97024549683556e-05
    2. 'ans' → logprob: -9.750080108642578
    3. 'int' → logprob: -10.875080108642578
    4. ' um' → logprob: -13.500080108642578
    5. '   ' → logprob: -14.750080108642578
    6. 'u' → logprob: -15.000080108642578
    7. '(' → logprob: -16.125080108642578
    8. 'am' → logprob: -16.875080108642578
    9. '  ' → logprob: -17.750080108642578
    10. ' ' → logprob: -17.750080108642578

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.62500286102295
    3. ')
' → logprob: -14.12500286102295
    4. '))' → logprob: -14.50000286102295
    5. ')`' → logprob: -16.500001907348633
    6. '()' → logprob: -17.000001907348633
    7. '())' → logprob: -17.000001907348633
    8. '+' → logprob: -17.000001907348633
    9. '})' → logprob: -17.125001907348633
    10. ')#' → logprob: -17.375001907348633

Token 471: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23886574804782867
    2. '<|end|>' → logprob: -1.9888657331466675
    3. ' ' → logprob: -2.863865852355957
    4. '_' → logprob: -4.988865852355957
    5. '+' → logprob: -5.988865852355957
    6. ':' → logprob: -6.113865852355957
    7. ' )' → logprob: -6.113865852355957
    8. '=' → logprob: -6.988865852355957
    9. 'n' → logprob: -7.738865852355957
    10. '}' → logprob: -7.738865852355957

Token 472: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07889573276042938
    2. '__' → logprob: -2.5788958072662354
    3. '___' → logprob: -12.828895568847656
    4. 'name' → logprob: -13.578895568847656
    5. '_' → logprob: -14.203895568847656
    6. '_name' → logprob: -14.453895568847656
    7. '/__' → logprob: -15.328895568847656
    8. ' ' → logprob: -15.953895568847656
    9. ' "__' → logprob: -16.078895568847656
    10. '  ' → logprob: -16.453895568847656

Token 473: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04510888829827309
    2. ' __' → logprob: -3.2951087951660156
    3. '.__' → logprob: -5.670108795166016
    4. ' ==' → logprob: -5.920108795166016
    5. '==' → logprob: -7.795108795166016
    6. 'name' → logprob: -9.170108795166016
    7. '_' → logprob: -9.295108795166016
    8. '__.__' → logprob: -9.670108795166016
    9. '__.' → logprob: -9.920108795166016
    10. '_name' → logprob: -10.045108795166016

Token 474: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.935296834039036e-06
    2. '==' → logprob: -13.37500286102295
    3. 'name' → logprob: -14.75000286102295
    4. '__.__' → logprob: -14.87500286102295
    5. '__.' → logprob: -15.62500286102295
    6. ' ==' → logprob: -16.000003814697266
    7. '=="' → logprob: -16.875003814697266
    8. 'main' → logprob: -17.250003814697266
    9. '___' → logprob: -17.250003814697266
    10. '_' → logprob: -17.250003814697266

Token 475: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.053453557193279266
    2. '==' → logprob: -3.3034534454345703
    3. ' ==' → logprob: -4.30345344543457
    4. '=="' → logprob: -6.42845344543457
    5. '_' → logprob: -9.42845344543457
    6. '=='' → logprob: -9.67845344543457
    7. '___' → logprob: -12.42845344543457
    8. '=' → logprob: -12.67845344543457
    9. '==
' → logprob: -13.55345344543457
    10. '__.__' → logprob: -13.80345344543457

Token 476: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12717126309871674
    2. ''' → logprob: -2.127171277999878
    3. ' "__' → logprob: -8.627171516418457
    4. '__' → logprob: -10.252171516418457
    5. ' '__' → logprob: -10.502171516418457
    6. '"user' → logprob: -15.502171516418457
    7. ''"' → logprob: -15.627171516418457
    8. '("__' → logprob: -15.627171516418457
    9. '('__' → logprob: -15.752171516418457
    10. '   ' → logprob: -16.62717056274414

Token 477: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5940676331520081
    2. '__' → logprob: -0.8440676331520081
    3. '"' → logprob: -4.219067573547363
    4. ''' → logprob: -6.219067573547363
    5. 'name' → logprob: -6.719067573547363
    6. '_main' → logprob: -11.219067573547363
    7. '__":
' → logprob: -11.844067573547363
    8. '__
' → logprob: -12.219067573547363
    9. '"name' → logprob: -12.594067573547363
    10. '=="' → logprob: -12.719067573547363

Token 478: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0628068819642067
    2. '__' → logprob: -2.8128068447113037
    3. '__':
' → logprob: -7.687807083129883
    4. '__:' → logprob: -8.187807083129883
    5. '__.' → logprob: -9.812807083129883
    6. '():
' → logprob: -11.437807083129883
    7. '()' → logprob: -11.562807083129883
    8. '():' → logprob: -11.687807083129883
    9. '__["' → logprob: -12.187807083129883
    10. '()">' → logprob: -12.437807083129883

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025324562564492226
    2. 'resolve' → logprob: -4.15032434463501
    3. ' resolve' → logprob: -4.90032434463501
    4. '	resolve' → logprob: -6.65032434463501
    5. '(resolve' → logprob: -7.65032434463501
    6. '    
' → logprob: -11.525324821472168
    7. '```' → logprob: -12.150324821472168
    8. ' ' → logprob: -12.150324821472168
    9. '  ' → logprob: -12.525324821472168
    10. '   ' → logprob: -12.775324821472168

Token 480: ' resolve' (ID: 14062)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' (adapté à ' resolve') → logprob: -1.1398757123970427e-05
    2. 'import' → logprob: -12.375011444091797
    3. '   ' → logprob: -12.625011444091797
    4. ' resolve' → logprob: -13.250011444091797
    5. '	resolve' → logprob: -13.250011444091797
    6. 'solve' → logprob: -15.625011444091797
    7. '(resolve' → logprob: -16.625011444091797
    8. 'decode' → logprob: -19.875011444091797
    9. '  ' → logprob: -20.125011444091797
    10. '```' → logprob: -20.375011444091797

Token 481: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 479
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 178
Tokens correctement prédits (top 10): 388
Précision stricte (1ère position): 34.45%
Précision adaptée (1ère position): 37.16%
Précision (top 10): 81.00%
================================================================================
