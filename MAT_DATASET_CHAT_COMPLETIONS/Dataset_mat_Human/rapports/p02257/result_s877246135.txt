================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
n=int(input())

def is_prime(x):
    if x == 1: return False
    for i in range(2,int(math.sqrt(x))+1):
        if x%i==0:
            return False
    return True

c=0
for i in range(n):
    m=int(input())
    if is_prime(m) is True:
        c+=1
    
print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002739016432315111
    2. '<|end|>' → logprob: -6.627738952636719
    3. '```' → logprob: -7.877738952636719
    4. '\n' → logprob: -8.252738952636719
    5. '\' → logprob: -8.252738952636719
    6. 'import' → logprob: -8.627738952636719
    7. '<|end|>' → logprob: -9.752738952636719
    8. '.e' → logprob: -10.377738952636719
    9. '.pi' → logprob: -10.627738952636719
    10. '
' → logprob: -10.877738952636719

Token 4: '=int' (ID: 37431)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.950594425201416
    2. '_' → logprob: -0.950594425201416
    3. '=' → logprob: -1.825594425201416
    4. ' =' → logprob: -4.075594425201416
    5. ')' → logprob: -4.325594425201416
    6. ',' → logprob: -4.450594425201416
    7. ' ' → logprob: -5.325594425201416
    8. 'e' → logprob: -5.325594425201416
    9. 'u' → logprob: -5.450594425201416
    10. 'a' → logprob: -5.825594425201416

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026503115077503026
    2. '('' → logprob: -8.875265121459961
    3. '("("' → logprob: -10.375265121459961
    4. '(n' → logprob: -10.500265121459961
    5. '```' → logprob: -11.250265121459961
    6. '(
' → logprob: -11.500265121459961
    7. ' (' → logprob: -11.625265121459961
    8. '()' → logprob: -11.875265121459961
    9. '[' → logprob: -12.375265121459961
    10. ')' → logprob: -12.500265121459961

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3898009657859802
    2. ')' → logprob: -1.514801025390625
    3. '()' → logprob: -2.389801025390625
    4. '())' → logprob: -4.639801025390625
    5. '(
' → logprob: -7.514801025390625
    6. '('' → logprob: -7.764801025390625
    7. '))' → logprob: -8.639801025390625
    8. '(

' → logprob: -9.264801025390625
    9. '")' → logprob: -9.639801025390625
    10. '')' → logprob: -9.764801025390625

Token 7: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2413874864578247
    2. 'if' → logprob: -1.2413874864578247
    3. 'for' → logprob: -1.4913874864578247
    4. ''' → logprob: -3.491387367248535
    5. 'result' → logprob: -3.491387367248535
    6. '```' → logprob: -3.991387367248535
    7. 'factor' → logprob: -4.241387367248535
    8. '`' → logprob: -4.241387367248535
    9. 'f' → logprob: -4.366387367248535
    10. 'i' → logprob: -4.366387367248535

Token 8: ' is' (ID: 382)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.4670216739177704
    2. ' math' → logprob: -1.7170217037200928
    3. ' f' → logprob: -2.7170217037200928
    4. ' ' → logprob: -2.8420217037200928
    5. ' factor' → logprob: -3.2170217037200928
    6. '_' → logprob: -5.342021465301514
    7. 'factor' → logprob: -5.342021465301514
    8. ' pow' → logprob: -5.342021465301514
    9. ' is' → logprob: -6.342021465301514
    10. ' max' → logprob: -6.592021465301514

Token 9: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.029840858653187752
    2. '_' → logprob: -3.7798409461975098
    3. '_pal' → logprob: -5.27984094619751
    4. 'prime' → logprob: -7.65484094619751
    5. '_pr' → logprob: -8.029840469360352
    6. '_Pr' → logprob: -8.154840469360352
    7. ' _' → logprob: -9.154840469360352
    8. '_p' → logprob: -9.779840469360352
    9. ' ' → logprob: -9.904840469360352
    10. '_per' → logprob: -10.154840469360352

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002814775798469782
    2. '(n' → logprob: -8.50028133392334
    3. '_' → logprob: -10.12528133392334
    4. '(x' → logprob: -11.25028133392334
    5. ' (' → logprob: -11.62528133392334
    6. '("("' → logprob: -12.37528133392334
    7. '(a' → logprob: -13.00028133392334
    8. '_(' → logprob: -13.87528133392334
    9. ')' → logprob: -14.00028133392334
    10. '(num' → logprob: -14.12528133392334

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027909690979868174
    2. ')' → logprob: -6.002790927886963
    3. ' ):' → logprob: -9.377791404724121
    4. '(' → logprob: -9.377791404724121
    5. ':' → logprob: -9.627791404724121
    6. '):
' → logprob: -10.252791404724121
    7. '(x' → logprob: -10.252791404724121
    8. ' ' → logprob: -13.377791404724121
    9. '):

' → logprob: -13.502791404724121
    10. ')):' → logprob: -13.502791404724121

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03397034481167793
    2. '):' → logprob: -4.033970355987549
    3. '():' → logprob: -4.783970355987549
    4. '   ' → logprob: -6.158970355987549
    5. ' :' → logprob: -6.283970355987549
    6. ':
' → logprob: -6.783970355987549
    7. '(' → logprob: -6.908970355987549
    8. ':**' → logprob: -8.03396987915039
    9. ' ' → logprob: -9.03396987915039
    10. '**' → logprob: -9.15896987915039

Token 13: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5350235104560852
    2. '   ' → logprob: -0.9100235104560852
    3. ' ' → logprob: -5.2850236892700195
    4. 'if' (adapté à ' if') → logprob: -5.9100236892700195
    5. ' for' → logprob: -6.0350236892700195
    6. ' 
' → logprob: -7.7850236892700195
    7. ' i' → logprob: -8.28502368927002
    8. ' )' → logprob: -8.41002368927002
    9. ' return' → logprob: -8.91002368927002
    10. ' \' → logprob: -9.28502368927002

Token 14: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02975442260503769
    2. 'x' → logprob: -3.529754400253296
    3. '	x' → logprob: -12.654754638671875
    4. ' ' → logprob: -14.904754638671875
    5. '   ' → logprob: -15.154754638671875
    6. '(x' → logprob: -15.904754638671875
    7. '2' → logprob: -17.904754638671875
    8. 'n' → logprob: -18.904754638671875
    9. '1' → logprob: -19.279754638671875
    10. ' (' → logprob: -19.779754638671875

Token 15: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7578614950180054
    2. ' <' → logprob: -0.8828614950180054
    3. '<=' → logprob: -2.382861614227295
    4. ' <=' → logprob: -3.757861614227295
    5. '==' → logprob: -6.882861614227295
    6. '%' → logprob: -7.632861614227295
    7. ' ' → logprob: -7.632861614227295
    8. ' ==' → logprob: -10.007861137390137
    9. ' %' → logprob: -10.632861137390137
    10. '   ' → logprob: -11.507861137390137

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41006654500961304
    2. '2' → logprob: -1.1600666046142578
    3. '1' → logprob: -4.410066604614258
    4. '0' → logprob: -4.535066604614258
    5. '<' → logprob: -10.035066604614258
    6. '```' → logprob: -13.535066604614258
    7. ' <' → logprob: -13.785066604614258
    8. '   ' → logprob: -15.035066604614258
    9. '<=' → logprob: -15.535066604614258
    10. '	' → logprob: -15.785066604614258

Token 17: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06678370386362076
    2. '0' → logprob: -3.3167836666107178
    3. '1' → logprob: -3.8167836666107178
    4. ' ' → logprob: -5.066783905029297
    5. '<' → logprob: -10.441783905029297
    6. '```' → logprob: -14.316783905029297
    7. '   ' → logprob: -15.066783905029297
    8. '3' → logprob: -15.191783905029297
    9. ' <' → logprob: -15.316783905029297
    10. '(' → logprob: -15.941783905029297

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021092169918119907
    2. ':return' → logprob: -6.377109050750732
    3. ' or' → logprob: -8.87710952758789
    4. ' :' → logprob: -8.87710952758789
    5. ':
' → logprob: -9.00210952758789
    6. '):' → logprob: -13.00210952758789
    7. ':**' → logprob: -14.25210952758789
    8. 'or' → logprob: -14.87710952758789
    9. '():' → logprob: -15.37710952758789
    10. ' :
' → logprob: -15.50210952758789

Token 19: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4713798463344574
    2. ' return' → logprob: -1.2213798761367798
    3. '
' → logprob: -3.7213797569274902
    4. 'return' → logprob: -3.7213797569274902
    5. '    ' → logprob: -4.22137975692749
    6. ' 
' → logprob: -4.59637975692749
    7. '	return' → logprob: -5.84637975692749
    8. ':return' → logprob: -6.59637975692749
    9. '    
' → logprob: -6.72137975692749
    10. '       ' → logprob: -7.22137975692749

Token 20: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16023294627666473
    2. 'False' → logprob: -1.9102329015731812
    3. ' ' → logprob: -11.660232543945312
    4. ' false' → logprob: -16.910232543945312
    5. ' True' → logprob: -17.410232543945312
    6. '0' → logprob: -17.535232543945312
    7. '(False' → logprob: -17.535232543945312
    8. ' F' → logprob: -17.660232543945312
    9. '  ' → logprob: -17.660232543945312
    10. '_false' → logprob: -18.535232543945312

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11948183923959732
    2. '\n' → logprob: -3.4944818019866943
    3. '   ' → logprob: -3.6194818019866943
    4. 'n' → logprob: -3.7444818019866943
    5. '<|end|>' → logprob: -4.744482040405273
    6. '  
' → logprob: -4.869482040405273
    7. '    
' → logprob: -5.119482040405273
    8. '```' → logprob: -5.619482040405273
    9. '\' → logprob: -6.869482040405273
    10. ' 
' → logprob: -7.119482040405273

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4024074375629425
    2. '
' → logprob: -1.5274074077606201
    3. '\n' → logprob: -2.40240740776062
    4. '    
' → logprob: -4.527407646179199
    5. '```' → logprob: -5.777407646179199
    6. '  
' → logprob: -6.402407646179199
    7. '\' → logprob: -6.527407646179199
    8. 'def' → logprob: -6.777407646179199
    9. '
' → logprob: -7.402407646179199
    10. '\r' → logprob: -7.527407646179199

Token 23: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.110373854637146
    2. '   ' → logprob: -1.235373854637146
    3. '\n' → logprob: -1.610373854637146
    4. ' for' → logprob: -3.4853739738464355
    5. '    
' → logprob: -3.7353739738464355
    6. 'n' → logprob: -3.9853739738464355
    7. 'if' → logprob: -3.9853739738464355
    8. 'for' (adapté à ' for') → logprob: -4.1103739738464355
    9. '```' → logprob: -4.1103739738464355
    10. '<|end|>' → logprob: -4.1103739738464355

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0028363727033138275
    2. 'i' → logprob: -5.877836227416992
    3. ' ' → logprob: -10.502836227416992
    4. '	i' → logprob: -12.502836227416992
    5. '   ' → logprob: -17.002836227416992
    6. ' ' → logprob: -17.127836227416992
    7. '  ' → logprob: -17.252836227416992
    8. ' p' → logprob: -17.752836227416992
    9. ' d' → logprob: -18.127836227416992
    10. '2' → logprob: -18.127836227416992

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021972409449517727
    2. 'in' → logprob: -6.252197265625
    3. ' ' → logprob: -8.252197265625
    4. '  ' → logprob: -13.127197265625
    5. '   ' → logprob: -13.502197265625
    6. 'import' → logprob: -13.752197265625
    7. '	in' → logprob: -13.877197265625
    8. ' i' → logprob: -14.502197265625
    9. '2' → logprob: -14.627197265625
    10. '    ' → logprob: -14.627197265625

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015095012495294213
    2. 'range' → logprob: -6.501509666442871
    3. ' ' → logprob: -12.126509666442871
    4. ' math' → logprob: -13.751509666442871
    5. '	range' → logprob: -14.876509666442871
    6. ' xrange' → logprob: -16.626508712768555
    7. '   ' → logprob: -16.876508712768555
    8. '  ' → logprob: -17.376508712768555
    9. '2' → logprob: -17.501508712768555
    10. '(range' → logprob: -17.501508712768555

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022082125360611826
    2. ' (' → logprob: -8.500221252441406
    3. '2' → logprob: -11.250221252441406
    4. ' ' → logprob: -12.375221252441406
    5. '   ' → logprob: -17.375221252441406
    6. '1' → logprob: -18.625221252441406
    7. '(
' → logprob: -18.875221252441406
    8. '  ' → logprob: -18.875221252441406
    9. ')' → logprob: -19.000221252441406
    10. ',' → logprob: -19.625221252441406

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '(' → logprob: -15.00015926361084
    4. '   ' → logprob: -15.00015926361084
    5. ')' → logprob: -16.875158309936523
    6. '```' → logprob: -17.250158309936523
    7. '	' → logprob: -17.875158309936523
    8. '２' → logprob: -18.000158309936523
    9. '    ' → logprob: -18.250158309936523
    10. '  ' → logprob: -18.500158309936523

Token 29: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1037752777338028
    2. ',int' → logprob: -2.8537752628326416
    3. ' ,' → logprob: -3.2287752628326416
    4. '(int' → logprob: -7.478775501251221
    5. ',x' → logprob: -8.228775024414062
    6. '(math' → logprob: -8.853775024414062
    7. ',i' → logprob: -9.603775024414062
    8. 'int' → logprob: -9.603775024414062
    9. '(' → logprob: -9.978775024414062
    10. ',n' → logprob: -10.353775024414062

Token 30: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.07994022965431213
    2. '(' → logprob: -2.5799403190612793
    3. '(x' → logprob: -6.954940319061279
    4. '(s' → logprob: -9.454939842224121
    5. 'math' → logprob: -12.079939842224121
    6. ' (' → logprob: -12.704939842224121
    7. '(Math' → logprob: -12.704939842224121
    8. '(i' → logprob: -12.954939842224121
    9. ' math' → logprob: -14.079939842224121
    10. '(n' → logprob: -14.579939842224121

Token 31: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4742516577243805
    2. '.sqrt' → logprob: -0.9742516279220581
    3. '.Sqrt' → logprob: -9.724251747131348
    4. '.s' → logprob: -9.849251747131348
    5. '.math' → logprob: -10.724251747131348
    6. 'sqrt' → logprob: -11.224251747131348
    7. '.x' → logprob: -12.099251747131348
    8. 's' → logprob: -12.474251747131348
    9. '(math' → logprob: -12.599251747131348
    10. '.square' → logprob: -12.724251747131348

Token 32: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018381712958216667
    2. '(' → logprob: -4.018381595611572
    3. 'x' → logprob: -8.39338207244873
    4. ' (' → logprob: -13.14338207244873
    5. ')' → logprob: -13.51838207244873
    6. '(
' → logprob: -14.26838207244873
    7. ')x' → logprob: -14.26838207244873
    8. '(i' → logprob: -14.76838207244873
    9. ')(' → logprob: -15.89338207244873
    10. '(n' → logprob: -15.89338207244873

Token 33: '))+' (ID: 103968)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22028526663780212
    2. ')+' → logprob: -1.9702852964401245
    3. '(' → logprob: -3.345285177230835
    4. '(x' → logprob: -3.845285177230835
    5. '(n' → logprob: -7.345285415649414
    6. '))+' → logprob: -7.595285415649414
    7. ' )' → logprob: -8.470285415649414
    8. '(i' → logprob: -8.845285415649414
    9. '))' → logprob: -10.220285415649414
    10. ' ' → logprob: -10.470285415649414

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.25020408630371
    4. '2' → logprob: -17.37520408630371
    5. '  ' → logprob: -18.12520408630371
    6. '```' → logprob: -18.62520408630371
    7. ')' → logprob: -19.25020408630371
    8. '+' → logprob: -19.37520408630371
    9. '۱' → logprob: -19.37520408630371
    10. '１' → logprob: -19.62520408630371

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04888392612338066
    2. ':' → logprob: -3.0488839149475098
    3. ')' → logprob: -8.548884391784668
    4. ' ):' → logprob: -10.173884391784668
    5. '+:' → logprob: -10.798884391784668
    6. '+' → logprob: -11.673884391784668
    7. '):
' → logprob: -11.923884391784668
    8. ' :' → logprob: -12.173884391784668
    9. '   ' → logprob: -12.298884391784668
    10. ':)' → logprob: -12.423884391784668

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8539871573448181
    2. '   ' → logprob: -1.603987216949463
    3. '    ' → logprob: -1.728987216949463
    4. ':' → logprob: -2.103987216949463
    5. ' ' → logprob: -3.603987216949463
    6. ' if' → logprob: -3.728987216949463
    7. ' :' → logprob: -4.603987216949463
    8. '<|end|>' → logprob: -5.478987216949463
    9. '        ' → logprob: -6.478987216949463
    10. '  ' → logprob: -6.603987216949463

Token 37: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2762047350406647
    2. 'if' (adapté à ' if') → logprob: -2.276204824447632
    3. ' ' → logprob: -2.401204824447632
    4. '    ' → logprob: -3.401204824447632
    5. '   ' → logprob: -5.276204586029053
    6. '<|end|>' → logprob: -5.401204586029053
    7. '       ' → logprob: -6.401204586029053
    8. ':' → logprob: -6.651204586029053
    9. ' :' → logprob: -7.526204586029053
    10. '  ' → logprob: -7.901204586029053

Token 38: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007606389466673136
    2. 'x' → logprob: -4.882606506347656
    3. '	x' → logprob: -16.007606506347656
    4. '(x' → logprob: -16.757606506347656
    5. ' (' → logprob: -16.882606506347656
    6. ' ' → logprob: -17.007606506347656
    7. ')x' → logprob: -17.757606506347656
    8. ')' → logprob: -18.257606506347656
    9. '```' → logprob: -18.757606506347656
    10. '(' → logprob: -19.132606506347656

Token 39: '%i' (ID: 157265)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08046855032444
    2. ' %' → logprob: -2.5804686546325684
    3. '%i' → logprob: -6.455468654632568
    4. '%x' → logprob: -12.58046817779541
    5. ' ' → logprob: -14.58046817779541
    6. '%e' → logprob: -14.70546817779541
    7. '%s' → logprob: -14.83046817779541
    8. '%d' → logprob: -15.83046817779541
    9. '%c' → logprob: -16.080469131469727
    10. '％' → logprob: -16.080469131469727

Token 40: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759711861610413
    2. ' ==' → logprob: -0.8259711861610413
    3. '=' → logprob: -11.075971603393555
    4. ')==' → logprob: -12.200971603393555
    5. ' ' → logprob: -12.575971603393555
    6. '0' → logprob: -12.700971603393555
    7. '===' → logprob: -13.200971603393555
    8. ']==' → logprob: -13.575971603393555
    9. ' ' → logprob: -14.700971603393555
    10. '()==' → logprob: -15.325971603393555

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '۰' → logprob: -18.75048828125
    4. '   ' → logprob: -19.50048828125
    5. '  ' → logprob: -20.12548828125
    6. '00' → logprob: -20.12548828125
    7. '```' → logprob: -20.68798828125
    8. '=' → logprob: -21.18798828125
    9. ' ' → logprob: -21.25048828125
    10. '٠' → logprob: -21.31298828125

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02296416088938713
    2. ':return' → logprob: -3.8979642391204834
    3. ' :' → logprob: -6.647964000701904
    4. ':
' → logprob: -7.522964000701904
    5. '       ' → logprob: -8.647964477539062
    6. '   ' → logprob: -8.772964477539062
    7. '):' → logprob: -8.897964477539062
    8. '           ' → logprob: -10.147964477539062
    9. ' return' → logprob: -10.522964477539062
    10. ')' → logprob: -10.772964477539062

Token 43: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.59068763256073
    2. ' return' → logprob: -1.21568763256073
    3. '           ' → logprob: -1.96568763256073
    4. 'return' → logprob: -4.8406877517700195
    5. '   ' → logprob: -7.2156877517700195
    6. ' ' → logprob: -8.71568775177002
    7. ' ' → logprob: -8.71568775177002
    8. ' 
' → logprob: -8.84068775177002
    9. ':return' → logprob: -8.96568775177002
    10. '        ' → logprob: -10.09068775177002

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5760151743888855
    2. ' return' → logprob: -0.8260151743888855
    3. '           ' → logprob: -10.20101547241211
    4. '   ' → logprob: -11.07601547241211
    5. '               ' → logprob: -11.32601547241211
    6. ' 
' → logprob: -12.32601547241211
    7. '       ' → logprob: -13.20101547241211
    8. ' ' → logprob: -13.57601547241211
    9. '	return' → logprob: -14.07601547241211
    10. '
' → logprob: -14.07601547241211

Token 45: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.038129162043333054
    2. ' False' → logprob: -3.2881290912628174
    3. 'True' → logprob: -9.413128852844238
    4. ' True' → logprob: -12.038128852844238
    5. '(False' → logprob: -16.913129806518555
    6. ' ' → logprob: -17.663129806518555
    7. '   ' → logprob: -18.163129806518555
    8. 'false' → logprob: -19.288129806518555
    9. '=False' → logprob: -20.913129806518555
    10. 'None' → logprob: -21.038129806518555

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2583259046077728
    2. '   ' → logprob: -1.6333259344100952
    3. '    
' → logprob: -4.008326053619385
    4. '\n' → logprob: -5.758326053619385
    5. '  
' → logprob: -5.883326053619385
    6. ' 
' → logprob: -6.008326053619385
    7. '<|end|>' → logprob: -6.258326053619385
    8. 'newline' → logprob: -6.883326053619385
    9. '   
' → logprob: -7.133326053619385
    10. 'return' → logprob: -7.383326053619385

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022859884425997734
    2. '
' → logprob: -4.272860050201416
    3. '    
' → logprob: -5.522860050201416
    4. 'return' → logprob: -6.272860050201416
    5. ' return' → logprob: -7.022860050201416
    6. ' 
' → logprob: -7.397860050201416
    7. '	return' → logprob: -7.522860050201416
    8. '```' → logprob: -8.897859573364258
    9. '       ' → logprob: -9.022859573364258
    10. '<|end|>' → logprob: -9.522859573364258

Token 48: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7339434623718262
    2. 'return' (adapté à ' return') → logprob: -0.7339434623718262
    3. ' return' → logprob: -3.233943462371826
    4. '	return' → logprob: -8.858943939208984
    5. '    
' → logprob: -8.858943939208984
    6. '```' → logprob: -9.108943939208984
    7. '
' → logprob: -9.233943939208984
    8. ' ' → logprob: -10.483943939208984
    9. ':return' → logprob: -10.983943939208984
    10. '       ' → logprob: -11.733943939208984

Token 49: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '(True' → logprob: -18.13604736328125
    4. '   ' → logprob: -19.13604736328125
    5. 'False' → logprob: -21.88604736328125
    6. '=True' → logprob: -22.01104736328125
    7. 'true' → logprob: -22.26104736328125
    8. ' ' → logprob: -22.88604736328125
    9. 'TRUE' → logprob: -23.76104736328125
    10. '1' → logprob: -24.51104736328125

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9068782925605774
    2. '<|end|>' → logprob: -0.9068782925605774
    3. 'n' → logprob: -2.2818782329559326
    4. '\n' → logprob: -3.5318782329559326
    5. '\' → logprob: -4.156878471374512
    6. '```' → logprob: -4.906878471374512
    7. '    
' → logprob: -5.031878471374512
    8. ' 
' → logprob: -5.281878471374512
    9. '  
' → logprob: -5.781878471374512
    10. '#' → logprob: -5.781878471374512

Token 51: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.618373453617096
    2. 'if' → logprob: -1.1183733940124512
    3. 'i' → logprob: -2.618373394012451
    4. 'p' → logprob: -3.743373394012451
    5. 'n' → logprob: -4.743373394012451
    6. 'f' → logprob: -5.118373394012451
    7. 'count' → logprob: -5.368373394012451
    8. 'pr' → logprob: -5.618373394012451
    9. 'prime' → logprob: -5.743373394012451
    10. 't' → logprob: -6.118373394012451

Token 52: '=' (ID: 28)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.1109568402171135
    2. 'o' → logprob: -2.485956907272339
    3. 'ounter' → logprob: -4.73595666885376
    4. '=' → logprob: -4.86095666885376
    5. ' =' → logprob: -5.86095666885376
    6. 'oun' → logprob: -7.23595666885376
    7. ' ' → logprob: -8.360957145690918
    8. 'ou' → logprob: -8.485957145690918
    9. 'u' → logprob: -8.485957145690918
    10. '   ' → logprob: -8.610957145690918

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003335394663736224
    2. '1' → logprob: -6.253335475921631
    3. '2' → logprob: -7.128335475921631
    4. 'n' → logprob: -7.753335475921631
    5. 'sum' → logprob: -9.128334999084473
    6. ' ' → logprob: -10.503334999084473
    7. '[' → logprob: -11.503334999084473
    8. '[n' → logprob: -11.878334999084473
    9. '3' → logprob: -12.253334999084473
    10. '100' → logprob: -12.503334999084473

Token 54: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012000351212918758
    2. '<|end|>' → logprob: -5.387000560760498
    3. ' for' → logprob: -5.512000560760498
    4. '
' → logprob: -5.887000560760498
    5. '```' → logprob: -9.13700008392334
    6. 'n' → logprob: -9.26200008392334
    7. '\n' → logprob: -9.51200008392334
    8. '\' → logprob: -10.01200008392334
    9. 'i' → logprob: -10.26200008392334
    10. '<|end|>' → logprob: -10.38700008392334

Token 55: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5954712075181305e-05
    2. ' for' → logprob: -10.625036239624023
    3. '
' → logprob: -12.125036239624023
    4. 'i' → logprob: -13.125036239624023
    5. '```' → logprob: -13.375036239624023
    6. 'f' → logprob: -13.750036239624023
    7. '<|end|>' → logprob: -14.500036239624023
    8. 'range' → logprob: -14.625036239624023
    9. 'if' → logprob: -16.250036239624023
    10. 'b' → logprob: -16.750036239624023

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008276846259832382
    2. ' ' → logprob: -5.00827693939209
    3. ' x' → logprob: -7.25827693939209
    4. 'i' → logprob: -7.75827693939209
    5. ' _' → logprob: -8.00827693939209
    6. ' n' → logprob: -9.63327693939209
    7. ' num' → logprob: -11.38327693939209
    8. '_' → logprob: -12.38327693939209
    9. ' range' → logprob: -13.13327693939209
    10. 'x' → logprob: -13.25827693939209

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016274120658636093
    2. 'in' → logprob: -4.1412739753723145
    3. ' ' → logprob: -8.391274452209473
    4. '	in' → logprob: -13.266274452209473
    5. 'space' → logprob: -13.391274452209473
    6. '1' → logprob: -13.391274452209473
    7. 'range' → logprob: -13.516274452209473
    8. ' i' → logprob: -13.516274452209473
    9. '  ' → logprob: -13.516274452209473
    10. '```' → logprob: -13.891274452209473

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004636723082512617
    2. 'range' → logprob: -5.379636764526367
    3. ' ' → logprob: -11.379636764526367
    4. '(range' → logprob: -13.254636764526367
    5. '	range' → logprob: -13.879636764526367
    6. ' xrange' → logprob: -14.504636764526367
    7. ' n' → logprob: -14.754636764526367
    8. '1' → logprob: -15.254636764526367
    9. 'n' → logprob: -15.504636764526367
    10. '2' → logprob: -15.504636764526367

Token 59: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.700132997939363e-05
    2. '(n' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.500017166137695
    4. '(
' → logprob: -14.500017166137695
    5. '(i' → logprob: -16.375017166137695
    6. '1' → logprob: -16.750017166137695
    7. '(

' → logprob: -16.875017166137695
    8. '((' → logprob: -17.125017166137695
    9. '(len' → logprob: -19.250017166137695
    10. 'n' → logprob: -19.375017166137695

Token 60: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12015660107135773
    2. '+' → logprob: -2.4951565265655518
    3. ' ,' → logprob: -4.370156764984131
    4. '):' → logprob: -4.370156764984131
    5. ' ' → logprob: -6.495156764984131
    6. ' +' → logprob: -6.745156764984131
    7. ' ):' → logprob: -6.870156764984131
    8. '1' → logprob: -7.495156764984131
    9. '-' → logprob: -7.870156764984131
    10. '2' → logprob: -7.995156764984131

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49396976828575134
    2. ' ' → logprob: -1.1189697980880737
    3. '    ' → logprob: -3.618969678878784
    4. ' 
' → logprob: -4.118969917297363
    5. '    
' → logprob: -4.743969917297363
    6. '<|end|>' → logprob: -5.118969917297363
    7. ' i' → logprob: -6.618969917297363
    8. '  ' → logprob: -6.868969917297363
    9. ' if' → logprob: -7.243969917297363
    10. '     
' → logprob: -7.368969917297363

Token 62: ' m' (ID: 284)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7807111740112305
    2. 'a' → logprob: -0.9057111740112305
    3. ' x' → logprob: -3.1557111740112305
    4. ' num' → logprob: -3.2807111740112305
    5. 'x' → logprob: -3.6557111740112305
    6. 'num' → logprob: -4.7807111740112305
    7. '   ' → logprob: -5.1557111740112305
    8. ' s' → logprob: -5.7807111740112305
    9. ' t' → logprob: -6.4057111740112305
    10. ' ' → logprob: -6.4057111740112305

Token 63: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.7825286984443665
    2. ' =' → logprob: -0.9075286984443665
    3. '=' → logprob: -2.1575286388397217
    4. '=input' → logprob: -3.7825286388397217
    5. '=i' → logprob: -8.2825288772583
    6. ',' → logprob: -8.9075288772583
    7. ' ' → logprob: -9.5325288772583
    8. 'a' → logprob: -9.5325288772583
    9. '=in' → logprob: -9.6575288772583
    10. '   ' → logprob: -9.6575288772583

Token 64: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. 'input' → logprob: -13.750160217285156
    4. ' (' → logprob: -16.875160217285156
    5. '(
' → logprob: -17.000160217285156
    6. ' input' → logprob: -17.250160217285156
    7. '=input' → logprob: -17.500160217285156
    8. '()' → logprob: -18.000160217285156
    9. '	input' → logprob: -18.750160217285156
    10. ',input' → logprob: -18.875160217285156

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1603192687034607
    2. '()' → logprob: -1.9103193283081055
    3. ')' → logprob: -10.035319328308105
    4. '())
' → logprob: -10.410319328308105
    5. '()
' → logprob: -12.035319328308105
    6. ' ())' → logprob: -12.410319328308105
    7. '(' → logprob: -12.535319328308105
    8. '()))' → logprob: -13.285319328308105
    9. '();)' → logprob: -13.285319328308105
    10. '())

' → logprob: -13.410319328308105

Token 66: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6806395649909973
    2. '<|end|>' → logprob: -1.3056395053863525
    3. '   ' → logprob: -1.9306395053863525
    4. ' 
' → logprob: -3.3056395053863525
    5. ' if' → logprob: -3.6806395053863525
    6. '
' → logprob: -5.055639743804932
    7. '  ' → logprob: -6.430639743804932
    8. '```' → logprob: -6.555639743804932
    9. '    ' → logprob: -6.680639743804932
    10. '    
' → logprob: -6.680639743804932

Token 67: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2952860891819
    2. ' if' → logprob: -1.4202860593795776
    3. '   ' → logprob: -4.420286178588867
    4. '    ' → logprob: -6.795286178588867
    5. ' ' → logprob: -7.545286178588867
    6. 'c' → logprob: -9.795286178588867
    7. '```' → logprob: -9.795286178588867
    8. '    
' → logprob: -10.045286178588867
    9. 'for' → logprob: -10.170286178588867
    10. '	if' → logprob: -10.295286178588867

Token 68: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003255907678976655
    2. 'is' → logprob: -5.753255844116211
    3. ' m' → logprob: -9.753255844116211
    4. 'm' → logprob: -11.253255844116211
    5. ' ' → logprob: -12.128255844116211
    6. '	is' → logprob: -14.378255844116211
    7. ' not' → logprob: -14.628255844116211
    8. '  ' → logprob: -16.12825584411621
    9. ' c' → logprob: -16.12825584411621
    10. ' ' → logprob: -16.12825584411621

Token 69: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00031067515374161303
    2. '_' → logprob: -8.125310897827148
    3. '_pr' → logprob: -12.250310897827148
    4. ' _' → logprob: -12.875310897827148
    5. '_pal' → logprob: -13.250310897827148
    6. ''_' → logprob: -13.500310897827148
    7. '_p' → logprob: -13.750310897827148
    8. '"_' → logprob: -14.500310897827148
    9. '```' → logprob: -14.500310897827148
    10. '_pi' → logprob: -15.000310897827148

Token 70: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0015177152818068862
    2. '(' → logprob: -6.5015177726745605
    3. ' (' → logprob: -11.126517295837402
    4. '(i' → logprob: -15.001517295837402
    5. '(s' → logprob: -15.376517295837402
    6. '(n' → logprob: -16.37651824951172
    7. '(
' → logprob: -16.50151824951172
    8. '(mc' → logprob: -17.00151824951172
    9. '((' → logprob: -18.37651824951172
    10. '(ma' → logprob: -18.37651824951172

Token 71: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012334455968812108
    2. ' ):' → logprob: -7.2512335777282715
    3. '):
' → logprob: -8.126233100891113
    4. ')' → logprob: -8.501233100891113
    5. '   ' → logprob: -11.376233100891113
    6. ')==' → logprob: -12.251233100891113
    7. ':' → logprob: -12.751233100891113
    8. '==' → logprob: -13.251233100891113
    9. ' and' → logprob: -14.126233100891113
    10. ' ' → logprob: -14.251233100891113

Token 72: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000252160825766623
    2. ':
' → logprob: -9.125251770019531
    3. '==' → logprob: -9.750251770019531
    4. '):' → logprob: -10.375251770019531
    5. '       ' → logprob: -10.750251770019531
    6. '   ' → logprob: -11.500251770019531
    7. ':c' → logprob: -11.500251770019531
    8. ' :' → logprob: -12.500251770019531
    9. '():' → logprob: -12.750251770019531
    10. ' ==' → logprob: -13.250251770019531

Token 73: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00865392666310072
    2. 'True' → logprob: -4.7586541175842285
    3. '(True' → logprob: -10.50865364074707
    4. ' ' → logprob: -12.00865364074707
    5. ' False' → logprob: -13.13365364074707
    6. ' not' → logprob: -13.25865364074707
    7. '=True' → logprob: -13.38365364074707
    8. ' Tru' → logprob: -14.63365364074707
    9. '  ' → logprob: -15.88365364074707
    10. '   ' → logprob: -16.25865364074707

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003986144147347659
    2. '       ' → logprob: -8.625398635864258
    3. ':
' → logprob: -8.625398635864258
    4. '   ' → logprob: -11.250398635864258
    5. '):' → logprob: -11.375398635864258
    6. ' :' → logprob: -11.750398635864258
    7. ':c' → logprob: -12.500398635864258
    8. ' and' → logprob: -13.375398635864258
    9. ',' → logprob: -15.625398635864258
    10. '    ' → logprob: -15.625398635864258

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008800225332379341
    2. ':' → logprob: -5.133800029754639
    3. ' ' → logprob: -7.008800029754639
    4. '<|end|>' → logprob: -7.758800029754639
    5. '        
' → logprob: -7.883800029754639
    6. ' c' → logprob: -7.883800029754639
    7. '   ' → logprob: -8.758800506591797
    8. '      ' → logprob: -8.758800506591797
    9. '    ' → logprob: -9.133800506591797
    10. '
' → logprob: -10.008800506591797

Token 76: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.38983988761901855
    2. '   ' → logprob: -1.2648398876190186
    3. '       ' → logprob: -3.6398398876190186
    4. ' c' → logprob: -4.264840126037598
    5. '	c' → logprob: -8.514840126037598
    6. ' ' → logprob: -11.639840126037598
    7. '   ' → logprob: -12.014840126037598
    8. '    
' → logprob: -12.389840126037598
    9. '    ' → logprob: -12.764840126037598
    10. '           ' → logprob: -12.889840126037598

Token 77: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02382289431989193
    2. '+' → logprob: -4.273822784423828
    3. ' +=' → logprob: -4.648822784423828
    4. '=' → logprob: -10.523822784423828
    5. '+c' → logprob: -12.273822784423828
    6. '+="' → logprob: -12.648822784423828
    7. '+='' → logprob: -12.898822784423828
    8. ']+=' → logprob: -13.648822784423828
    9. '<|end|>' → logprob: -14.523822784423828
    10. '+=(' → logprob: -14.523822784423828

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '１' → logprob: -21.375
    4. '   ' → logprob: -22.0
    5. '<|end|>' → logprob: -22.25
    6. '```' → logprob: -22.875
    7. '۱' → logprob: -23.0
    8. '  ' → logprob: -23.25
    9. '+' → logprob: -23.5
    10. '100' → logprob: -23.625

Token 79: '
    
' (ID: 15698)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033851660788059235
    2. '
' → logprob: -3.4088516235351562
    3. '<|end|>' → logprob: -9.033851623535156
    4. ' print' → logprob: -9.908851623535156
    5. '```' → logprob: -11.283851623535156
    6. ' 
' → logprob: -11.908851623535156
    7. '
' → logprob: -12.283851623535156
    8. '\n' → logprob: -12.533851623535156
    9. '  
' → logprob: -12.783851623535156
    10. '    
' → logprob: -13.408851623535156

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. ' print' → logprob: -13.00000286102295
    3. '```' → logprob: -14.62500286102295
    4. '    
' → logprob: -15.62500286102295
    5. 'pr' → logprob: -16.250003814697266
    6. 'p' → logprob: -16.750003814697266
    7. ')' → logprob: -16.875003814697266
    8. '
' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '  
' → logprob: -17.625003814697266

Token 81: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3152581453323364
    2. '(c' → logprob: -1.3152581453323364
    3. '('' → logprob: -6.440258026123047
    4. '()' → logprob: -8.190258026123047
    5. '("("' → logprob: -10.065258026123047
    6. '((' → logprob: -10.315258026123047
    7. '("' → logprob: -11.190258026123047
    8. '(len' → logprob: -11.815258026123047
    9. ' (' → logprob: -12.065258026123047
    10. '(s' → logprob: -13.190258026123047

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -16.25
    4. ')`' → logprob: -16.625
    5. ')
' → logprob: -18.25
    6. ')#' → logprob: -19.5
    7. ')}' → logprob: -19.75
    8. ')**' → logprob: -20.125
    9. '),' → logprob: -20.25
    10. '`)' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 53.75%
Précision (top 10): 86.25%
================================================================================
