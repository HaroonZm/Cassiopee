================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def IsPrime(x):
    if x == 1:
        return False
    p = int(pow(x, 0.5)) + 1
    i = 2
    while i <= p and i < x:
        if x % i == 0:
            return False
        else:
            i += 1
    return True

n = int(input())
c = 0
i = 0
while i < n:
    x = int(input())
    if IsPrime(x) == True:
        c += 1
    i += 1
print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Is' (ID: 2763)
  → Token d'amorce (pas de prédiction)

Token 2: 'Prime' (ID: 43017)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004473540757317096
    2. '```' → logprob: -8.250447273254395
    3. ' (' → logprob: -9.500447273254395
    4. '_' → logprob: -10.500447273254395
    5. '("("' → logprob: -11.250447273254395
    6. '(a' → logprob: -11.875447273254395
    7. '(:' → logprob: -12.000447273254395
    8. ':' → logprob: -12.375447273254395
    9. '(`' → logprob: -12.500447273254395
    10. '`' → logprob: -12.500447273254395

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47480496764183044
    2. ')' → logprob: -0.9748049974441528
    3. ':' → logprob: -7.474804878234863
    4. '```' → logprob: -9.849804878234863
    5. '(' → logprob: -10.099804878234863
    6. '):
' → logprob: -10.474804878234863
    7. ')：' → logprob: -12.224804878234863
    8. '(x' → logprob: -12.349804878234863
    9. ')**' → logprob: -12.849804878234863
    10. '**' → logprob: -12.849804878234863

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007143110036849976
    2. '```' → logprob: -5.507143020629883
    3. '():' → logprob: -6.757143020629883
    4. ':
' → logprob: -7.382143020629883
    5. '   ' → logprob: -8.007143020629883
    6. '':' → logprob: -8.382143020629883
    7. '":' → logprob: -8.507143020629883
    8. '):' → logprob: -9.132143020629883
    9. '(' → logprob: -9.507143020629883
    10. '`:' → logprob: -9.632143020629883

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405162811279297
    2. ' if' → logprob: -1.2655162811279297
    3. ' i' → logprob: -2.2655162811279297
    4. '```' → logprob: -3.0155162811279297
    5. ' ' → logprob: -4.26551628112793
    6. 'i' → logprob: -4.76551628112793
    7. ' 
' → logprob: -5.14051628112793
    8. ' ```' → logprob: -5.76551628112793
    9. '    ' → logprob: -6.26551628112793
    10. ' for' → logprob: -7.26551628112793

Token 7: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3499055802822113
    2. ' ' → logprob: -1.2249056100845337
    3. 'x' → logprob: -6.724905490875244
    4. ' not' → logprob: -8.349905967712402
    5. '  ' → logprob: -11.474905967712402
    6. ' (' → logprob: -12.474905967712402
    7. ' n' → logprob: -13.099905967712402
    8. ' ' → logprob: -13.599905967712402
    9. ' a' → logprob: -13.974905967712402
    10. ')' → logprob: -13.974905967712402

Token 8: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.24563182890415192
    2. ' <' → logprob: -2.1206319332122803
    3. ' ' → logprob: -2.4956319332122803
    4. ' %' → logprob: -4.995631694793701
    5. ' ==' → logprob: -5.370631694793701
    6. ' >' → logprob: -6.245631694793701
    7. '<' → logprob: -6.995631694793701
    8. '<=' → logprob: -7.745631694793701
    9. '%' → logprob: -8.99563217163086
    10. '   ' → logprob: -9.24563217163086

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007857873104512691
    2. '2' → logprob: -5.257857799530029
    3. '0' → logprob: -6.257857799530029
    4. '1' → logprob: -7.257857799530029
    5. '   ' → logprob: -15.382858276367188
    6. '<' → logprob: -15.882858276367188
    7. '```' → logprob: -15.882858276367188
    8. ' ' → logprob: -17.132858276367188
    9. '    ' → logprob: -17.257858276367188
    10. '  ' → logprob: -17.382858276367188

Token 10: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36354970932006836
    2. '2' → logprob: -1.3635497093200684
    3. ' ' → logprob: -3.3635497093200684
    4. '1' → logprob: -4.238549709320068
    5. '<' → logprob: -12.988550186157227
    6. '   ' → logprob: -14.363550186157227
    7. '```' → logprob: -14.488550186157227
    8. '(' → logprob: -16.613550186157227
    9. '  ' → logprob: -16.863550186157227
    10. ' <' → logprob: -16.988550186157227

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028648413717746735
    2. ':return' → logprob: -8.750286102294922
    3. ' :' → logprob: -9.375286102294922
    4. ':
' → logprob: -10.375286102294922
    5. ' or' → logprob: -12.625286102294922
    6. '   ' → logprob: -13.375286102294922
    7. ' return' → logprob: -13.750286102294922
    8. '.' → logprob: -13.875286102294922
    9. '):' → logprob: -13.875286102294922
    10. ':**' → logprob: -14.125286102294922

Token 12: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9408713579177856
    2. ' return' → logprob: -1.0658713579177856
    3. '    ' → logprob: -1.6908713579177856
    4. '       ' → logprob: -3.815871238708496
    5. ':' → logprob: -4.065871238708496
    6. 'return' → logprob: -4.440871238708496
    7. ':return' → logprob: -5.190871238708496
    8. '\n' → logprob: -5.565871238708496
    9. ' 
' → logprob: -5.690871238708496
    10. '
' → logprob: -5.940871238708496

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23153164982795715
    2. '   ' → logprob: -2.1065316200256348
    3. 'return' (adapté à ' return') → logprob: -2.6065316200256348
    4. '    ' → logprob: -4.731531620025635
    5. '       ' → logprob: -7.356531620025635
    6. ' 
' → logprob: -7.981531620025635
    7. '\n' → logprob: -8.106532096862793
    8. '```' → logprob: -8.231532096862793
    9. ' False' → logprob: -8.731532096862793
    10. ' ' → logprob: -8.731532096862793

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.04862074553966522
    2. 'False' → logprob: -3.0486207008361816
    3. ' True' → logprob: -10.67362117767334
    4. ' ' → logprob: -11.54862117767334
    5. 'True' → logprob: -14.54862117767334
    6. '(False' → logprob: -16.048620223999023
    7. ' None' → logprob: -17.673620223999023
    8. ' false' → logprob: -18.548620223999023
    9. ' ' → logprob: -18.548620223999023
    10. '=False' → logprob: -18.923620223999023

Token 15: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8359635472297668
    2. '
' → logprob: -1.585963487625122
    3. '   ' → logprob: -1.960963487625122
    4. '    
' → logprob: -2.210963487625122
    5. '```' → logprob: -2.835963487625122
    6. '\' → logprob: -4.085963726043701
    7. '  
' → logprob: -4.210963726043701
    8. '   
' → logprob: -4.960963726043701
    9. '\r' → logprob: -5.460963726043701
    10. '' → logprob: -6.085963726043701

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9309725761413574
    2. '
' → logprob: -1.3059725761413574
    3. '\n' → logprob: -2.0559725761413574
    4. '    
' → logprob: -2.4309725761413574
    5. '```' → logprob: -3.0559725761413574
    6. '\' → logprob: -4.055972576141357
    7. ':' → logprob: -4.555972576141357
    8. '  
' → logprob: -4.930972576141357
    9. '   
' → logprob: -5.055972576141357
    10. '' → logprob: -5.180972576141357

Token 17: ' p' (ID: 275)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5481668710708618
    2. '\' → logprob: -2.1731667518615723
    3. '
' → logprob: -2.1731667518615723
    4. '   ' → logprob: -2.6731667518615723
    5. '    
' → logprob: -3.1731667518615723
    6. '```' → logprob: -3.4231667518615723
    7. '  
' → logprob: -4.423166751861572
    8. '\r' → logprob: -4.548166751861572
    9. '' → logprob: -5.048166751861572
    10. '   
' → logprob: -5.423166751861572

Token 18: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005572979338467121
    2. '   ' → logprob: -5.88057279586792
    3. 'ass' → logprob: -6.63057279586792
    4. ':' → logprob: -7.75557279586792
    5. ' r' → logprob: -7.88057279586792
    6. 'i' → logprob: -8.630573272705078
    7. ' ' → logprob: -9.630573272705078
    8. '%' → logprob: -10.255573272705078
    9. '       ' → logprob: -10.255573272705078
    10. '```' → logprob: -10.255573272705078

Token 19: ' int' (ID: 677)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34848204255104065
    2. ' ' → logprob: -1.2234820127487183
    3. '   ' → logprob: -10.848482131958008
    4. '0' → logprob: -12.723482131958008
    5. '  ' → logprob: -12.973482131958008
    6. 'int' → logprob: -13.473482131958008
    7. '    ' → logprob: -13.535982131958008
    8. '1' → logprob: -13.848482131958008
    9. 'x' → logprob: -13.848482131958008
    10. ' True' → logprob: -14.035982131958008

Token 20: '(pow' (ID: 189160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5850188732147217
    2. '(x' → logprob: -0.8350188732147217
    3. '(s' → logprob: -4.710019111633301
    4. '(pow' → logprob: -11.7100191116333
    5. '(
' → logprob: -11.8350191116333
    6. '(square' → logprob: -11.9600191116333
    7. '(n' → logprob: -12.9600191116333
    8. 'x' → logprob: -13.2100191116333
    9. '((' → logprob: -13.5850191116333
    10. '(len' → logprob: -13.9600191116333

Token 21: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10021723806858063
    2. '(' → logprob: -2.350217342376709
    3. ')' → logprob: -11.97521686553955
    4. '(
' → logprob: -13.10021686553955
    5. '(i' → logprob: -14.60021686553955
    6. 'x' → logprob: -14.72521686553955
    7. '(s' → logprob: -15.35021686553955
    8. ')(' → logprob: -15.72521686553955
    9. '(a' → logprob: -15.85021686553955
    10. '2' → logprob: -16.100217819213867

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25546491146087646
    2. '(' → logprob: -1.5054649114608765
    3. '0' → logprob: -6.380465030670166
    4. ' ,' → logprob: -6.630465030670166
    5. '**' → logprob: -8.630464553833008
    6. ' ' → logprob: -8.630464553833008
    7. '1' → logprob: -10.630464553833008
    8. '(.' → logprob: -10.755464553833008
    9. '```' → logprob: -11.130464553833008
    10. ' (' → logprob: -11.130464553833008

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019341122824698687
    2. ' ' → logprob: -6.251934051513672
    3. '.' → logprob: -13.376934051513672
    4. '1' → logprob: -13.626934051513672
    5. ')' → logprob: -14.126934051513672
    6. '   ' → logprob: -14.376934051513672
    7. '    ' → logprob: -14.376934051513672
    8. '(' → logprob: -14.501934051513672
    9. '  ' → logprob: -15.376934051513672
    10. '2' → logprob: -17.126934051513672

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010650822659954429
    2. ' ' → logprob: -6.876065254211426
    3. '.' → logprob: -10.501065254211426
    4. '1' → logprob: -13.251065254211426
    5. '   ' → logprob: -13.626065254211426
    6. '(' → logprob: -13.876065254211426
    7. '  ' → logprob: -15.376065254211426
    8. '    ' → logprob: -15.501065254211426
    9. '-' → logprob: -15.751065254211426
    10. ')' → logprob: -16.00106430053711

Token 25: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.1008713702030946e-06
    2. '5' → logprob: -13.375001907348633
    3. '0' → logprob: -15.250001907348633
    4. '2' → logprob: -17.000001907348633
    5. ' .' → logprob: -17.000001907348633
    6. '1' → logprob: -17.250001907348633
    7. '.
' → logprob: -17.750001907348633
    8. ' ' → logprob: -17.875001907348633
    9. '50' → logprob: -18.000001907348633
    10. '3' → logprob: -18.375001907348633

Token 26: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.625005722045898
    3. '```' → logprob: -15.187505722045898
    4. '0' → logprob: -15.812505722045898
    5. '   ' → logprob: -16.0000057220459
    6. '4' → logprob: -16.1250057220459
    7. '25' → logprob: -16.2500057220459
    8. '**' → logprob: -16.5000057220459
    9. '53' → logprob: -16.7500057220459
    10. '``' → logprob: -16.9375057220459

Token 27: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018362393602728844
    2. '))' → logprob: -4.018362522125244
    3. ')+' → logprob: -8.768362045288086
    4. '))+' → logprob: -10.018362045288086
    5. ' )' → logprob: -11.893362045288086
    6. ')))' → logprob: -12.768362045288086
    7. ' ))' → logprob: -14.518362045288086
    8. '(' → logprob: -14.768362045288086
    9. ' ' → logprob: -15.143362045288086
    10. '2' → logprob: -15.393362045288086

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027330880984663963
    2. ' +' → logprob: -3.6523308753967285
    3. ')' → logprob: -8.152331352233887
    4. '   ' → logprob: -8.277331352233887
    5. '+
' → logprob: -8.277331352233887
    6. ')+' → logprob: -8.527331352233887
    7. ' +
' → logprob: -11.402331352233887
    8. '+)' → logprob: -11.652331352233887
    9. ' ' → logprob: -12.652331352233887
    10. '+i' → logprob: -13.027331352233887

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '2' → logprob: -15.250296592712402
    4. '   ' → logprob: -16.250295639038086
    5. '```' → logprob: -16.750295639038086
    6. '  ' → logprob: -18.000295639038086
    7. '۱' → logprob: -18.375295639038086
    8. ' ' → logprob: -18.625295639038086
    9. '	' → logprob: -18.625295639038086
    10. '    ' → logprob: -18.875295639038086

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -15.00001335144043
    4. '```' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.25001335144043
    6. '<|end|>' → logprob: -17.25001335144043
    7. '  ' → logprob: -17.62501335144043
    8. '    ' → logprob: -17.93751335144043
    9. '۱' → logprob: -18.56251335144043
    10. '१' → logprob: -19.31251335144043

Token 31: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07505034655332565
    2. '   ' → logprob: -2.8250503540039062
    3. '<|end|>' → logprob: -4.700050354003906
    4. ')' → logprob: -6.575050354003906
    5. ':
' → logprob: -7.075050354003906
    6. '
' → logprob: -7.575050354003906
    7. '):' → logprob: -8.450050354003906
    8. ' ' → logprob: -8.575050354003906
    9. ' for' → logprob: -8.575050354003906
    10. '<|end|>' → logprob: -9.200050354003906

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038336904253810644
    2. ':
' → logprob: -5.878833770751953
    3. '   ' → logprob: -7.503833770751953
    4. '<|end|>' → logprob: -8.128833770751953
    5. '```' → logprob: -10.003833770751953
    6. '**' → logprob: -10.628833770751953
    7. '):' → logprob: -10.753833770751953
    8. ' for' → logprob: -11.128833770751953
    9. ')' → logprob: -11.503833770751953
    10. ':return' → logprob: -11.503833770751953

Token 33: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40672701597213745
    2. 'for' → logprob: -1.1567270755767822
    3. '   ' → logprob: -4.031726837158203
    4. '<|end|>' → logprob: -7.156726837158203
    5. '
' → logprob: -7.781726837158203
    6. '	for' → logprob: -8.531726837158203
    7. ' ' → logprob: -8.781726837158203
    8. ')' → logprob: -9.531726837158203
    9. ':' → logprob: -9.656726837158203
    10. '```' → logprob: -9.781726837158203

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5152356624603271
    2. '=' → logprob: -1.0152356624603271
    3. ' ' → logprob: -3.765235662460327
    4. ' in' → logprob: -4.265235900878906
    5. '<|end|>' → logprob: -7.390235900878906
    6. ' n' → logprob: -7.515235900878906
    7. 'n' → logprob: -7.765235900878906
    8. '  ' → logprob: -7.890235900878906
    9. 'in' → logprob: -8.140235900878906
    10. '2' → logprob: -9.265235900878906

Token 35: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021861877758055925
    2. ' ' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.252185821533203
    4. '1' → logprob: -15.502185821533203
    5. '  ' → logprob: -16.252185821533203
    6. '    ' → logprob: -16.377185821533203
    7. '```' → logprob: -17.127185821533203
    8. '۲' → logprob: -17.502185821533203
    9. '２' → logprob: -17.752185821533203
    10. '3' → logprob: -17.939685821533203

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.375008583068848
    4. '   ' → logprob: -16.25000762939453
    5. '２' → logprob: -17.87500762939453
    6. '  ' → logprob: -18.00000762939453
    7. '```' → logprob: -18.00000762939453
    8. '(' → logprob: -18.25000762939453
    9. '    ' → logprob: -18.31250762939453
    10. '۲' → logprob: -18.75000762939453

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3915044069290161
    2. '<|end|>' → logprob: -1.3915044069290161
    3. '
' → logprob: -3.3915042877197266
    4. '   ' → logprob: -3.6415042877197266
    5. ' ' → logprob: -5.266504287719727
    6. ':
' → logprob: -5.891504287719727
    7. '<|end|>' → logprob: -5.891504287719727
    8. '  ' → logprob: -7.391504287719727
    9. ' 
' → logprob: -7.516504287719727
    10. ')' → logprob: -7.641504287719727

Token 39: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000915039679966867
    2. 'i' → logprob: -7.000915050506592
    3. ' ' → logprob: -13.250914573669434
    4. '	i' → logprob: -14.250914573669434
    5. '(i' → logprob: -14.625914573669434
    6. ' ' → logprob: -15.250914573669434
    7. ' (' → logprob: -15.375914573669434
    8. '    ' → logprob: -16.87591552734375
    9. '(' → logprob: -17.12591552734375
    10. '<' → logprob: -17.87591552734375

Token 41: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.008968012407422066
    2. ' *' → logprob: -5.508967876434326
    3. '<=' → logprob: -5.758967876434326
    4. ' <' → logprob: -6.758967876434326
    5. '*' → logprob: -8.258968353271484
    6. ' ' → logprob: -8.633968353271484
    7. '**' → logprob: -10.133968353271484
    8. '*i' → logprob: -10.258968353271484
    9. ' **' → logprob: -10.508968353271484
    10. '<' → logprob: -10.883968353271484

Token 42: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0788901224732399
    2. ' p' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. '	p' → logprob: -16.578889846801758
    5. '<p' → logprob: -17.703889846801758
    6. 'pow' → logprob: -18.203889846801758
    7. '(p' → logprob: -18.453889846801758
    8. ' ' → logprob: -18.828889846801758
    9. '*p' → logprob: -19.328889846801758
    10. '  ' → logprob: -19.953889846801758

Token 43: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003613256849348545
    2. ' :' → logprob: -8.125361442565918
    3. ':
' → logprob: -10.125361442565918
    4. ':**' → logprob: -11.250361442565918
    5. ' and' → logprob: -12.500361442565918
    6. '):' → logprob: -12.875361442565918
    7. ':return' → logprob: -13.375361442565918
    8. '   ' → logprob: -13.625361442565918
    9. '+:' → logprob: -14.000361442565918
    10. '**' → logprob: -14.750361442565918

Token 44: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05496782064437866
    2. 'x' → logprob: -2.9299678802490234
    3. ' ' → logprob: -10.054967880249023
    4. ' (' → logprob: -10.804967880249023
    5. '(x' → logprob: -11.304967880249023
    6. '   ' → logprob: -13.554967880249023
    7. ' True' → logprob: -13.679967880249023
    8. '	x' → logprob: -13.679967880249023
    9. '(' → logprob: -13.804967880249023
    10. 'pow' → logprob: -13.929967880249023

Token 45: ' <' (ID: 464)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6169136166572571
    2. '*' → logprob: -1.1169135570526123
    3. ' <=' → logprob: -2.4919135570526123
    4. '*i' → logprob: -3.2419135570526123
    5. '<=' → logprob: -5.241913795471191
    6. '**' → logprob: -5.366913795471191
    7. ' ' → logprob: -7.366913795471191
    8. ' <' → logprob: -8.991913795471191
    9. ' **' → logprob: -9.366913795471191
    10. '<' → logprob: -9.491913795471191

Token 46: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5313529372215271
    2. 'x' → logprob: -0.9063529372215271
    3. '=' → logprob: -5.031352996826172
    4. 'int' → logprob: -7.781352996826172
    5. ' =' → logprob: -8.281352996826172
    6. ' int' → logprob: -8.281352996826172
    7. ' ' → logprob: -8.406352996826172
    8. 'pow' → logprob: -8.781352996826172
    9. '10' → logprob: -9.781352996826172
    10. '=x' → logprob: -9.906352996826172

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007815150311216712
    2. ':
' → logprob: -7.250781536102295
    3. ' :' → logprob: -10.125781059265137
    4. ' and' → logprob: -11.125781059265137
    5. '):' → logprob: -12.125781059265137
    6. ':**' → logprob: -12.375781059265137
    7. ':return' → logprob: -13.375781059265137
    8. ':

' → logprob: -13.750781059265137
    9. '   ' → logprob: -13.875781059265137
    10. 'and' → logprob: -14.375781059265137

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003145754337310791
    2. ' :' → logprob: -6.378145694732666
    3. ':
' → logprob: -6.878145694732666
    4. '       ' → logprob: -8.628146171569824
    5. '   ' → logprob: -9.253146171569824
    6. '):' → logprob: -10.003146171569824
    7. ':return' → logprob: -11.253146171569824
    8. ':**' → logprob: -11.378146171569824
    9. ' :
' → logprob: -11.378146171569824
    10. ' and' → logprob: -11.378146171569824

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6060459613800049
    2. 'if' (adapté à ' if') → logprob: -2.231045961380005
    3. ':' → logprob: -2.606045961380005
    4. '       ' → logprob: -2.606045961380005
    5. '   ' → logprob: -2.731045961380005
    6. ' ' → logprob: -2.981045961380005
    7. '<|end|>' → logprob: -3.106045961380005
    8. '    ' → logprob: -4.356045722961426
    9. ' :' → logprob: -4.481045722961426
    10. '<|end|>' → logprob: -5.356045722961426

Token 50: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0009327789884991944
    2. 'x' → logprob: -7.125932693481445
    3. ' ' → logprob: -9.125932693481445
    4. ' (' → logprob: -11.000932693481445
    5. '(x' → logprob: -13.875932693481445
    6. '(' → logprob: -14.375932693481445
    7. ' ' → logprob: -14.625932693481445
    8. '	x' → logprob: -14.875932693481445
    9. '<|end|>' → logprob: -14.875932693481445
    10. ')' → logprob: -17.250932693481445

Token 51: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1602993607521057
    2. '%' → logprob: -1.910299301147461
    3. ' ' → logprob: -10.035299301147461
    4. '%i' → logprob: -10.410299301147461
    5. ' ' → logprob: -14.410299301147461
    6. '%x' → logprob: -14.785299301147461
    7. '   ' → logprob: -16.78529930114746
    8. '%e' → logprob: -16.78529930114746
    9. '%s' → logprob: -17.28529930114746
    10. '％' → logprob: -17.53529930114746

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014501839876175
    2. ' i' → logprob: -1.701450228691101
    3. ' ' → logprob: -10.57645034790039
    4. '	i' → logprob: -11.95145034790039
    5. '<|end|>' → logprob: -13.07645034790039
    6. '   ' → logprob: -13.57645034790039
    7. '2' → logprob: -14.45145034790039
    8. '  ' → logprob: -14.45145034790039
    9. '<|end|>' → logprob: -15.20145034790039
    10. ' ' → logprob: -15.57645034790039

Token 53: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741075932979584
    2. ' ==' → logprob: -0.9741076231002808
    3. '=' → logprob: -10.97410774230957
    4. ' ' → logprob: -12.22410774230957
    5. ')==' → logprob: -12.97410774230957
    6. '===' → logprob: -13.84910774230957
    7. ':' → logprob: -14.09910774230957
    8. ' !=' → logprob: -14.22410774230957
    9. ')' → logprob: -14.34910774230957
    10. ' ' → logprob: -14.47410774230957

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141352713108063
    2. ' ' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.201414108276367
    4. '```' → logprob: -16.826414108276367
    5. '<|end|>' → logprob: -17.201414108276367
    6. '  ' → logprob: -17.826414108276367
    7. '   ' → logprob: -17.826414108276367
    8. '۰' → logprob: -18.013914108276367
    9. '	' → logprob: -18.388914108276367
    10. ' ' → logprob: -18.513914108276367

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.875627517700195
    4. '  ' → logprob: -18.250627517700195
    5. '۰' → logprob: -18.625627517700195
    6. '```' → logprob: -19.063127517700195
    7. '    ' → logprob: -19.438127517700195
    8. '٠' → logprob: -19.625627517700195
    9. '00' → logprob: -19.688127517700195
    10. '<|end|>' → logprob: -19.750627517700195

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008283290662802756
    2. ':return' → logprob: -7.250828266143799
    3. ':
' → logprob: -9.125828742980957
    4. ' :' → logprob: -11.875828742980957
    5. '       ' → logprob: -13.625828742980957
    6. '):' → logprob: -14.750828742980957
    7. '   ' → logprob: -15.125828742980957
    8. ':**' → logprob: -15.875828742980957
    9. '<|end|>' → logprob: -16.25082778930664
    10. ' and' → logprob: -16.50082778930664

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32291656732559204
    2. '       ' → logprob: -1.4479165077209473
    3. ' return' → logprob: -3.5729165077209473
    4. 'return' → logprob: -4.947916507720947
    5. ' 
' → logprob: -6.572916507720947
    6. '   ' → logprob: -6.572916507720947
    7. ':return' → logprob: -7.197916507720947
    8. ' ' → logprob: -7.697916507720947
    9. '
' → logprob: -8.072916984558105
    10. '        
' → logprob: -8.447916984558105

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13098275661468506
    2. 'return' (adapté à ' return') → logprob: -2.2559828758239746
    3. '           ' → logprob: -4.505982875823975
    4. '               ' → logprob: -5.505982875823975
    5. '       ' → logprob: -6.630982875823975
    6. ' ' → logprob: -6.880982875823975
    7. '   ' → logprob: -8.630982398986816
    8. ' ' → logprob: -8.630982398986816
    9. ' 
' → logprob: -9.380982398986816
    10. ':return' → logprob: -10.005982398986816

Token 59: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04858771339058876
    2. ' False' → logprob: -3.0485877990722656
    3. 'True' → logprob: -14.923587799072266
    4. ' True' → logprob: -16.923587799072266
    5. '(False' → logprob: -17.923587799072266
    6. ' ' → logprob: -19.423587799072266
    7. '.False' → logprob: -21.048587799072266
    8. '=False' → logprob: -21.298587799072266
    9. 'F' → logprob: -21.423587799072266
    10. ' ' → logprob: -21.798587799072266

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20582279562950134
    2. '
' → logprob: -2.205822706222534
    3. '   ' → logprob: -2.955822706222534
    4. '    
' → logprob: -5.080822944641113
    5. '<|end|>' → logprob: -5.080822944641113
    6. '        
' → logprob: -5.705822944641113
    7. '\n' → logprob: -6.455822944641113
    8. 'i' → logprob: -6.455822944641113
    9. ')' → logprob: -7.205822944641113
    10. '```' → logprob: -7.330822944641113

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023214608430862427
    2. '
' → logprob: -4.523214817047119
    3. '   ' → logprob: -4.648214817047119
    4. 'i' → logprob: -6.648214817047119
    5. '	' → logprob: -8.023214340209961
    6. '        
' → logprob: -8.648214340209961
    7. '    
' → logprob: -8.773214340209961
    8. ' i' → logprob: -9.523214340209961
    9. '  
' → logprob: -9.648214340209961
    10. '\n' → logprob: -9.648214340209961

Token 62: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6872673630714417
    2. ' i' → logprob: -1.3122673034667969
    3. '   ' → logprob: -2.062267303466797
    4. 'i' → logprob: -2.437267303466797
    5. ' ' → logprob: -5.187267303466797
    6. '    ' → logprob: -5.687267303466797
    7. '	i' → logprob: -6.687267303466797
    8. '  ' → logprob: -7.187267303466797
    9. '	' → logprob: -7.312267303466797
    10. '    
' → logprob: -7.687267303466797

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03539850190281868
    2. '           ' → logprob: -4.535398483276367
    3. ':
' → logprob: -4.660398483276367
    4. '   ' → logprob: -4.785398483276367
    5. '       ' → logprob: -5.660398483276367
    6. ' i' → logprob: -7.785398483276367
    7. '
' → logprob: -7.910398483276367
    8. ',' → logprob: -7.910398483276367
    9. ' :' → logprob: -8.285398483276367
    10. ' ' → logprob: -8.535398483276367

Token 64: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.682239830493927
    2. ' i' → logprob: -0.807239830493927
    3. '       ' → logprob: -3.8072397708892822
    4. '   ' → logprob: -4.557240009307861
    5. ' 
' → logprob: -4.557240009307861
    6. ' ' → logprob: -6.557240009307861
    7. '    ' → logprob: -7.307240009307861
    8. '    
' → logprob: -7.557240009307861
    9. '        
' → logprob: -7.807240009307861
    10. '1' → logprob: -8.057239532470703

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00025228000595234334
    2. ' i' → logprob: -8.375252723693848
    3. '   ' → logprob: -10.875252723693848
    4. '```' → logprob: -14.000252723693848
    5. '	i' → logprob: -14.125252723693848
    6. '       ' → logprob: -14.750252723693848
    7. ' 
' → logprob: -14.875252723693848
    8. '           ' → logprob: -15.000252723693848
    9. '  ' → logprob: -16.62525177001953
    10. ' ' → logprob: -16.75025177001953

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6001982688903809
    2. '+' → logprob: -1.2251982688903809
    3. ' +=' → logprob: -1.8501982688903809
    4. ' +' → logprob: -8.350198745727539
    5. '=' → logprob: -9.975198745727539
    6. ' ' → logprob: -10.225198745727539
    7. '+='' → logprob: -10.850198745727539
    8. '+="' → logprob: -11.100198745727539
    9. '<|end|>' → logprob: -11.100198745727539
    10. '++' → logprob: -11.100198745727539

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -15.751702308654785
    4. '  ' → logprob: -17.0017032623291
    5. '    ' → logprob: -17.3767032623291
    6. '2' → logprob: -17.7517032623291
    7. '```' → logprob: -17.8767032623291
    8. ' ' → logprob: -19.0642032623291
    9. '１' → logprob: -19.5642032623291
    10. '	' → logprob: -19.9392032623291

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.750011444091797
    4. '  ' → logprob: -17.250011444091797
    5. '2' → logprob: -17.375011444091797
    6. '```' → logprob: -18.500011444091797
    7. '１' → logprob: -18.812511444091797
    8. '    ' → logprob: -19.312511444091797
    9. '۱' → logprob: -19.312511444091797
    10. '+' → logprob: -19.625011444091797

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446685940027237
    2. 'return' → logprob: -2.0196685791015625
    3. '
' → logprob: -6.8946685791015625
    4. ' return' → logprob: -7.7696685791015625
    5. '```' → logprob: -8.144668579101562
    6. '    
' → logprob: -9.394668579101562
    7. ':return' → logprob: -9.519668579101562
    8. 'r' → logprob: -9.894668579101562
    9. '       ' → logprob: -11.019668579101562
    10. '	return' → logprob: -11.144668579101562

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006887053605169058
    2. 'return' → logprob: -5.006886959075928
    3. '
' → logprob: -9.381887435913086
    4. ' return' → logprob: -9.756887435913086
    5. '```' → logprob: -10.881887435913086
    6. '       ' → logprob: -12.131887435913086
    7. '    
' → logprob: -13.131887435913086
    8. '	return' → logprob: -13.881887435913086
    9. ':return' → logprob: -14.256887435913086
    10. ' ' → logprob: -14.631887435913086

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019165199249982834
    2. '   ' → logprob: -4.0191650390625
    3. ' return' → logprob: -7.3941650390625
    4. '```' → logprob: -8.0191650390625
    5. 'r' → logprob: -10.3941650390625
    6. '    
' → logprob: -11.3941650390625
    7. '	return' → logprob: -11.6441650390625
    8. ':return' → logprob: -11.7691650390625
    9. ' ' → logprob: -12.3941650390625
    10. 'Return' → logprob: -13.0191650390625

Token 72: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011048408225178719
    2. ' True' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.886048316955566
    4. '(True' → logprob: -15.886048316955566
    5. 'False' → logprob: -16.636049270629883
    6. '=True' → logprob: -18.511049270629883
    7. 'Tr' → logprob: -18.761049270629883
    8. ' ' → logprob: -19.386049270629883
    9. '.True' → logprob: -19.636049270629883
    10. 'T' → logprob: -20.136049270629883

Token 73: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8085590600967407
    2. '#' → logprob: -1.4335590600967407
    3. '<|end|>' → logprob: -2.058558940887451
    4. '```' → logprob: -3.058558940887451
    5. '\n' → logprob: -3.058558940887451
    6. '\' → logprob: -3.433558940887451
    7. ')' → logprob: -4.058558940887451
    8. '(' → logprob: -4.183558940887451
    9. ':' → logprob: -4.683558940887451
    10. 'n' → logprob: -5.308558940887451

Token 74: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41362032294273376
    2. '
' → logprob: -1.6636203527450562
    3. ':' → logprob: -3.1636202335357666
    4. '```' → logprob: -3.6636202335357666
    5. '<|end|>' → logprob: -4.288620471954346
    6. ' ' → logprob: -4.413620471954346
    7. '(' → logprob: -4.538620471954346
    8. '\' → logprob: -4.788620471954346
    9. '\n' → logprob: -4.788620471954346
    10. ')' → logprob: -5.038620471954346

Token 75: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07932330667972565
    2. ' =' → logprob: -3.2043232917785645
    3. '=' → logprob: -4.4543232917785645
    4. '<|end|>' → logprob: -4.9543232917785645
    5. ' >' → logprob: -5.0793232917785645
    6. '  ' → logprob: -5.8293232917785645
    7. 'u' → logprob: -5.9543232917785645
    8. ' ==' → logprob: -6.4543232917785645
    9. ' ,' → logprob: -7.4543232917785645
    10. '>' → logprob: -7.7043232917785645

Token 76: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5814156532287598
    2. ' ' → logprob: -1.0814156532287598
    3. 'int' → logprob: -2.9564156532287598
    4. '10' → logprob: -3.0814156532287598
    5. '20' → logprob: -5.95641565322876
    6. '5' → logprob: -7.95641565322876
    7. '1' → logprob: -8.456415176391602
    8. '100' → logprob: -8.456415176391602
    9. '50' → logprob: -9.206415176391602
    10. '25' → logprob: -9.706415176391602

Token 77: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.64708495605737e-05
    2. '(input' → logprob: -10.125066757202148
    3. '()' → logprob: -11.875066757202148
    4. '<|end|>' → logprob: -12.125066757202148
    5. '(
' → logprob: -12.375066757202148
    6. ' (' → logprob: -12.500066757202148
    7. '(n' → logprob: -13.125066757202148
    8. '('' → logprob: -13.875066757202148
    9. '(">' → logprob: -14.625066757202148
    10. '(

' → logprob: -14.625066757202148

Token 78: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5852622985839844
    2. '()' → logprob: -1.0852622985839844
    3. '('' → logprob: -2.8352622985839844
    4. '())' → logprob: -3.2102622985839844
    5. '("("' → logprob: -5.460262298583984
    6. ')' → logprob: -7.210262298583984
    7. '("' → logprob: -7.710262298583984
    8. '("")' → logprob: -8.585262298583984
    9. '(""))' → logprob: -8.835262298583984
    10. '(()' → logprob: -9.085262298583984

Token 79: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10562339425086975
    2. 'if' → logprob: -3.605623483657837
    3. 'f' → logprob: -3.855623483657837
    4. 'result' → logprob: -4.230623245239258
    5. 'count' → logprob: -4.605623245239258
    6. 'i' → logprob: -4.980623245239258
    7. 'num' → logprob: -5.730623245239258
    8. 'print' → logprob: -5.980623245239258
    9. 'a' → logprob: -6.355623245239258
    10. ' for' → logprob: -6.730623245239258

Token 80: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7216247916221619
    2. 'ount' → logprob: -0.9716247916221619
    3. '=' → logprob: -2.3466248512268066
    4. ' =' → logprob: -3.4716248512268066
    5. 'ou' → logprob: -6.221624851226807
    6. 'ounter' → logprob: -6.346624851226807
    7. ' ' → logprob: -6.721624851226807
    8. 'r' → logprob: -7.346624851226807
    9. 'urrent' → logprob: -7.471624851226807
    10. '   ' → logprob: -7.596624851226807

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004793464671820402
    2. ' ' → logprob: -5.879793643951416
    3. '1' → logprob: -6.254793643951416
    4. '2' → logprob: -10.004793167114258
    5. 'n' → logprob: -11.504793167114258
    6. ' n' → logprob: -13.254793167114258
    7. '100' → logprob: -13.379793167114258
    8. '[' → logprob: -13.504793167114258
    9. '10' → logprob: -13.754793167114258
    10. '20' → logprob: -14.004793167114258

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04632769525051117
    2. '2' → logprob: -3.921327590942383
    3. '1' → logprob: -3.921327590942383
    4. 'n' → logprob: -5.421327590942383
    5. '100' → logprob: -8.296327590942383
    6. 'int' → logprob: -8.296327590942383
    7. '[]' → logprob: -8.796327590942383
    8. '3' → logprob: -8.796327590942383
    9. '[' → logprob: -9.421327590942383
    10. '5' → logprob: -10.296327590942383

Token 83: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9686922430992126
    2. '<|end|>' → logprob: -0.9686922430992126
    3. 'while' → logprob: -1.9686923027038574
    4. '
' → logprob: -2.5936923027038574
    5. ' for' → logprob: -4.843692302703857
    6. ' while' → logprob: -5.218692302703857
    7. 'n' → logprob: -5.968692302703857
    8. '\n' → logprob: -6.093692302703857
    9. 'i' → logprob: -6.343692302703857
    10. '<|end|>' → logprob: -6.968692302703857

Token 84: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1007305234670639
    2. '<|end|>' → logprob: -2.8507304191589355
    3. ' for' → logprob: -4.3507304191589355
    4. ' ' → logprob: -4.8507304191589355
    5. 'while' → logprob: -5.2257304191589355
    6. '
' → logprob: -5.4757304191589355
    7. 'f' → logprob: -6.3507304191589355
    8. ' 
' → logprob: -6.7257304191589355
    9. 'i' → logprob: -6.8507304191589355
    10. 'w' → logprob: -6.8507304191589355

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16210728883743286
    2. '=' → logprob: -1.912107229232788
    3. ' ' → logprob: -6.287107467651367
    4. 'n' → logprob: -12.287107467651367
    5. '  ' → logprob: -12.412107467651367
    6. '<|end|>' → logprob: -12.412107467651367
    7. ' +=' → logprob: -13.037107467651367
    8. '.' → logprob: -13.662107467651367
    9. '_' → logprob: -14.662107467651367
    10. '1' → logprob: -14.787107467651367

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12182926386594772
    2. '1' → logprob: -2.2468292713165283
    3. ' ' → logprob: -5.246829032897949
    4. '0' → logprob: -5.621829032897949
    5. '3' → logprob: -10.24682903289795
    6. '10' → logprob: -11.55932903289795
    7. '   ' → logprob: -11.74682903289795
    8. '  ' → logprob: -11.99682903289795
    9. '11' → logprob: -12.24682903289795
    10. 'n' → logprob: -12.62182903289795

Token 87: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16404461860656738
    2. '1' → logprob: -1.9140446186065674
    3. '0' → logprob: -5.664044380187988
    4. '3' → logprob: -8.789044380187988
    5. ' ' → logprob: -9.664044380187988
    6. '11' → logprob: -10.289044380187988
    7. '10' → logprob: -10.289044380187988
    8. 'n' → logprob: -11.164044380187988
    9. '4' → logprob: -11.976544380187988
    10. '100' → logprob: -12.164044380187988

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1975516974925995
    2. ' c' → logprob: -2.197551727294922
    3. ' n' → logprob: -2.947551727294922
    4. 'i' → logprob: -4.572551727294922
    5. 'c' → logprob: -5.822551727294922
    6. ' ' → logprob: -6.572551727294922
    7. 'n' → logprob: -6.947551727294922
    8. ' True' → logprob: -10.322551727294922
    9. 'True' → logprob: -12.072551727294922
    10. ' ' → logprob: -12.572551727294922

Token 91: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6463367342948914
    2. '<=' → logprob: -1.0213367938995361
    3. '<' → logprob: -2.896336793899536
    4. ' <' → logprob: -2.896336793899536
    5. '<n' → logprob: -5.521336555480957
    6. ' ' → logprob: -6.771336555480957
    7. ' n' → logprob: -8.521336555480957
    8. '<len' → logprob: -10.521336555480957
    9. 'n' → logprob: -10.646336555480957
    10. '<num' → logprob: -11.396336555480957

Token 92: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3134014904499054
    2. 'n' → logprob: -1.313401460647583
    3. ' ' → logprob: -9.063401222229004
    4. '	n' → logprob: -11.688401222229004
    5. '2' → logprob: -12.563401222229004
    6. '100' → logprob: -13.063401222229004
    7. '20' → logprob: -13.188401222229004
    8. '10' → logprob: -13.313401222229004
    9. '<n' → logprob: -13.688401222229004
    10. '=' → logprob: -14.063401222229004

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10097290575504303
    2. ' :' → logprob: -2.350972890853882
    3. ':
' → logprob: -8.225973129272461
    4. '+' → logprob: -8.600973129272461
    5. ' :
' → logprob: -8.850973129272461
    6. '+:' → logprob: -8.850973129272461
    7. '1' → logprob: -11.850973129272461
    8. ' +' → logprob: -12.600973129272461
    9. ' and' → logprob: -12.600973129272461
    10. '   ' → logprob: -13.475973129272461

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008680520579218864
    2. ' 
' → logprob: -6.25868034362793
    3. '    
' → logprob: -6.50868034362793
    4. ' ' → logprob: -6.63368034362793
    5. '<|end|>' → logprob: -6.63368034362793
    6. ' if' → logprob: -7.38368034362793
    7. ' i' → logprob: -7.63368034362793
    8. '    ' → logprob: -7.63368034362793
    9. '
' → logprob: -8.75868034362793
    10. '<|end|>' → logprob: -9.25868034362793

Token 95: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5914068818092346
    2. ' ' → logprob: -2.21640682220459
    3. ' 
' → logprob: -2.59140682220459
    4. ' x' → logprob: -2.96640682220459
    5. ' n' → logprob: -2.96640682220459
    6. 'i' → logprob: -3.34140682220459
    7. '    ' → logprob: -3.59140682220459
    8. '   ' → logprob: -3.59140682220459
    9. 'n' → logprob: -3.84140682220459
    10. 'x' (adapté à ' x') → logprob: -4.09140682220459

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02775869332253933
    2. ' +=' → logprob: -3.9027585983276367
    3. '=' → logprob: -5.402758598327637
    4. '+=' → logprob: -6.527758598327637
    5. ' ' → logprob: -7.527758598327637
    6. '=int' → logprob: -7.652758598327637
    7. ',' → logprob: -10.152758598327637
    8. '   ' → logprob: -10.152758598327637
    9. '+' → logprob: -10.277758598327637
    10. '=input' → logprob: -11.152758598327637

Token 97: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6939698457717896
    2. ' int' → logprob: -0.6939698457717896
    3. ' ' → logprob: -8.1939697265625
    4. ' i' → logprob: -8.6939697265625
    5. '   ' → logprob: -9.4439697265625
    6. 'i' → logprob: -9.5689697265625
    7. ' input' → logprob: -9.5689697265625
    8. 'input' → logprob: -10.3189697265625
    9. '	int' → logprob: -10.5689697265625
    10. '  ' → logprob: -10.6939697265625

Token 98: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006429764907807112
    2. '(' → logprob: -7.375642776489258
    3. '()' → logprob: -11.250642776489258
    4. 'input' → logprob: -13.000642776489258
    5. '(
' → logprob: -14.125642776489258
    6. ' (' → logprob: -16.500642776489258
    7. '=input' → logprob: -16.750642776489258
    8. '(

' → logprob: -16.875642776489258
    9. ' input' → logprob: -17.125642776489258
    10. '	input' → logprob: -17.875642776489258

Token 99: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004215639550238848
    2. '()' → logprob: -5.504215717315674
    3. '())
' → logprob: -9.004215240478516
    4. ')' → logprob: -11.879215240478516
    5. '()
' → logprob: -13.129215240478516
    6. '()))' → logprob: -13.379215240478516
    7. '())

' → logprob: -13.504215240478516
    8. ' ())' → logprob: -13.754215240478516
    9. '(' → logprob: -14.129215240478516
    10. '();)' → logprob: -15.254215240478516

Token 100: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7344170808792114
    2. '
' → logprob: -1.4844170808792114
    3. '   ' → logprob: -1.8594170808792114
    4. '<|end|>' → logprob: -2.609416961669922
    5. '  
' → logprob: -3.609416961669922
    6. ' ' → logprob: -4.359416961669922
    7. '   
' → logprob: -4.734416961669922
    8. '    
' → logprob: -4.734416961669922
    9. ' if' → logprob: -5.609416961669922
    10. '  ' → logprob: -7.234416961669922

Token 101: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09853921830654144
    2. ' ' → logprob: -2.973539113998413
    3. ' 
' → logprob: -3.348539113998413
    4. 'if' (adapté à ' if') → logprob: -5.848539352416992
    5. ' c' → logprob: -5.973539352416992
    6. ' i' → logprob: -7.098539352416992
    7. '   ' → logprob: -7.348539352416992
    8. '<|end|>' → logprob: -8.723539352416992
    9. '    ' → logprob: -9.098539352416992
    10. '```' → logprob: -9.473539352416992

Token 102: ' Is' (ID: 2763)
  Prédit: ' Is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Is' → logprob: -0.005964226555079222
    2. 'Is' → logprob: -5.130964279174805
    3. ' ' → logprob: -10.380964279174805
    4. ' ' → logprob: -13.505964279174805
    5. '	Is' → logprob: -13.505964279174805
    6. ' not' → logprob: -14.005964279174805
    7. ' x' → logprob: -14.880964279174805
    8. ' Not' → logprob: -14.880964279174805
    9. 'x' → logprob: -16.755964279174805
    10. '  ' → logprob: -17.130964279174805

Token 103: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -9.372294698550832e-06
    2. 'Pr' → logprob: -12.750009536743164
    3. 'prime' → logprob: -13.000009536743164
    4. 'Prim' → logprob: -13.000009536743164
    5. '_prime' → logprob: -14.250009536743164
    6. ' Prime' → logprob: -14.750009536743164
    7. 'Prima' → logprob: -14.875009536743164
    8. ' prime' → logprob: -15.500009536743164
    9. 'Pri' → logprob: -16.000009536743164
    10. 'P' → logprob: -16.375009536743164

Token 104: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015272404998540878
    2. '(' → logprob: -6.501527309417725
    3. ' (' → logprob: -10.626526832580566
    4. '(i' → logprob: -15.126526832580566
    5. '(
' → logprob: -15.251526832580566
    6. ')' → logprob: -17.376527786254883
    7. ' ' → logprob: -17.876527786254883
    8. '(s' → logprob: -17.876527786254883
    9. '```' → logprob: -17.876527786254883
    10. '((' → logprob: -18.001527786254883

Token 105: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011912238784134388
    2. ')' → logprob: -4.5119123458862305
    3. ' ):' → logprob: -7.2619123458862305
    4. '):
' → logprob: -9.26191234588623
    5. ')==' → logprob: -10.38691234588623
    6. '   ' → logprob: -11.88691234588623
    7. ':' → logprob: -12.01191234588623
    8. ' )' → logprob: -12.13691234588623
    9. '():' → logprob: -12.26191234588623
    10. ' ' → logprob: -12.88691234588623

Token 106: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023572170175611973
    2. ':
' → logprob: -8.500235557556152
    3. '==' → logprob: -10.750235557556152
    4. ' :' → logprob: -13.125235557556152
    5. '       ' → logprob: -13.125235557556152
    6. '=' → logprob: -13.375235557556152
    7. ':c' → logprob: -13.375235557556152
    8. '):' → logprob: -13.625235557556152
    9. '   ' → logprob: -13.750235557556152
    10. ' ==' → logprob: -14.250235557556152

Token 107: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16023163497447968
    2. 'True' → logprob: -1.910231590270996
    3. ' ' → logprob: -12.535231590270996
    4. ' False' → logprob: -13.160231590270996
    5. 'False' → logprob: -13.535231590270996
    6. '(True' → logprob: -14.535231590270996
    7. ' Tru' → logprob: -16.035232543945312
    8. '=True' → logprob: -16.535232543945312
    9. '  ' → logprob: -18.910232543945312
    10. '1' → logprob: -19.035232543945312

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00118856446351856
    2. ':
' → logprob: -6.7511887550354
    3. '       ' → logprob: -12.126188278198242
    4. ':c' → logprob: -12.376188278198242
    5. '):' → logprob: -12.751188278198242
    6. ' :' → logprob: -13.001188278198242
    7. '   ' → logprob: -13.626188278198242
    8. ' and' → logprob: -14.251188278198242
    9. '):
' → logprob: -14.751188278198242
    10. ':

' → logprob: -14.876188278198242

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00875037256628275
    2. ' ' → logprob: -6.1337504386901855
    3. ' c' → logprob: -6.1337504386901855
    4. '   ' → logprob: -6.6337504386901855
    5. ' 
' → logprob: -7.5087504386901855
    6. '	c' → logprob: -7.6337504386901855
    7. '<|end|>' → logprob: -8.008749961853027
    8. '
' → logprob: -8.008749961853027
    9. '        
' → logprob: -8.258749961853027
    10. '    ' → logprob: -8.383749961853027

Token 110: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12586840987205505
    2. ' 
' → logprob: -3.125868320465088
    3. 'c' (adapté à ' c') → logprob: -3.375868320465088
    4. '       ' → logprob: -3.750868320465088
    5. '	c' → logprob: -5.000868320465088
    6. ' ' → logprob: -5.125868320465088
    7. '    ' → logprob: -6.500868320465088
    8. '   ' → logprob: -6.750868320465088
    9. ' 	' → logprob: -8.375868797302246
    10. '
' → logprob: -8.625868797302246

Token 111: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03539297729730606
    2. '+=' → logprob: -3.410392999649048
    3. '+' → logprob: -6.410392761230469
    4. ' +' → logprob: -9.910392761230469
    5. '<|end|>' → logprob: -11.035392761230469
    6. '=' → logprob: -11.285392761230469
    7. ' ' → logprob: -11.535392761230469
    8. ' =' → logprob: -11.785392761230469
    9. '+='' → logprob: -13.535392761230469
    10. '+="' → logprob: -13.910392761230469

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.268150329589844
    4. '<|end|>' → logprob: -18.768150329589844
    5. '  ' → logprob: -19.393150329589844
    6. ' ' → logprob: -19.518150329589844
    7. '```' → logprob: -19.643150329589844
    8. '    ' → logprob: -20.518150329589844
    9. '１' → logprob: -21.268150329589844
    10. '۱' → logprob: -21.268150329589844

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. 'x' → logprob: -18.5000057220459
    5. '  ' → logprob: -18.8750057220459
    6. '<|end|>' → logprob: -19.3750057220459
    7. '```' → logprob: -19.6250057220459
    8. 'i' → logprob: -19.8750057220459
    9. '۱' → logprob: -21.0625057220459
    10. '１' → logprob: -21.2500057220459

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041339205927215517
    2. '
' → logprob: -7.875413417816162
    3. '    
' → logprob: -10.500412940979004
    4. ' i' → logprob: -13.375412940979004
    5. '<|end|>' → logprob: -13.375412940979004
    6. '  
' → logprob: -14.000412940979004
    7. 'i' → logprob: -14.500412940979004
    8. ' 
' → logprob: -14.875412940979004
    9. ' ' → logprob: -15.125412940979004
    10. '        
' → logprob: -15.625412940979004

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015068775974214077
    2. '
' → logprob: -4.265069007873535
    3. ' i' → logprob: -8.140069007873535
    4. '    
' → logprob: -8.390069007873535
    5. ' 
' → logprob: -8.640069007873535
    6. 'i' → logprob: -8.765069007873535
    7. '<|end|>' → logprob: -11.140069007873535
    8. '  
' → logprob: -11.265069007873535
    9. '```' → logprob: -11.640069007873535
    10. '   
' → logprob: -12.515069007873535

Token 116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05234197899699211
    2. ' i' → logprob: -3.552341938018799
    3. '   ' → logprob: -3.802341938018799
    4. ' 
' → logprob: -11.927342414855957
    5. '
' → logprob: -12.427342414855957
    6. ' ' → logprob: -12.427342414855957
    7. '    
' → logprob: -12.927342414855957
    8. '	i' → logprob: -13.427342414855957
    9. '  
' → logprob: -14.927342414855957
    10. '  ' → logprob: -15.552342414855957

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.49061670899391174
    2. '+=' → logprob: -0.9906166791915894
    3. '+' → logprob: -4.115616798400879
    4. ' ' → logprob: -10.615616798400879
    5. '++' → logprob: -10.615616798400879
    6. '<|end|>' → logprob: -10.990616798400879
    7. '+="' → logprob: -12.115616798400879
    8. ' +' → logprob: -12.240616798400879
    9. '+='' → logprob: -12.365616798400879
    10. '=' → logprob: -12.615616798400879

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020752996206284
    2. ' ' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.725207328796387
    4. '<|end|>' → logprob: -15.475207328796387
    5. '```' → logprob: -15.975207328796387
    6. '   ' → logprob: -17.162708282470703
    7. '	' → logprob: -18.225208282470703
    8. '۱' → logprob: -18.287708282470703
    9. '１' → logprob: -18.412708282470703
    10. '0' → logprob: -18.475208282470703

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.250024795532227
    4. '```' → logprob: -17.250024795532227
    5. '<|end|>' → logprob: -17.875024795532227
    6. '  ' → logprob: -18.500024795532227
    7. '１' → logprob: -20.562524795532227
    8. '۱' → logprob: -20.687524795532227
    9. '    ' → logprob: -20.812524795532227
    10. 'c' → logprob: -20.875024795532227

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5762076377868652
    2. 'print' → logprob: -0.8262076377868652
    3. '  
' → logprob: -9.951208114624023
    4. ' print' → logprob: -10.201208114624023
    5. '\n' → logprob: -10.201208114624023
    6. '
' → logprob: -10.326208114624023
    7. ' 
' → logprob: -10.451208114624023
    8. '<|end|>' → logprob: -10.826208114624023
    9. '```' → logprob: -10.826208114624023
    10. '    
' → logprob: -11.201208114624023

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -13.00000286102295
    3. '```' → logprob: -15.62500286102295
    4. '    
' → logprob: -16.125001907348633
    5. '  
' → logprob: -16.375001907348633
    6. ' print' → logprob: -18.125001907348633
    7. '#print' → logprob: -18.750001907348633
    8. 'if' → logprob: -19.625001907348633
    9. '``' → logprob: -20.125001907348633
    10. '   
' → logprob: -20.125001907348633

Token 122: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.694674015045166
    2. '(c' → logprob: -0.694674015045166
    3. '('' → logprob: -6.694674015045166
    4. '((' → logprob: -9.194673538208008
    5. '("("' → logprob: -9.569673538208008
    6. '("' → logprob: -9.944673538208008
    7. '()' → logprob: -10.069673538208008
    8. '(len' → logprob: -11.569673538208008
    9. ' (' → logprob: -12.444673538208008
    10. '(f' → logprob: -13.194673538208008

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ')`' → logprob: -17.25
    3. ' )' → logprob: -18.0
    4. ')
' → logprob: -18.25
    5. '))' → logprob: -19.0
    6. ')#' → logprob: -19.75
    7. ')}' → logprob: -20.625
    8. ')**' → logprob: -20.75
    9. '),' → logprob: -20.875
    10. '#' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 39.67%
Précision adaptée (1ère position): 42.15%
Précision (top 10): 86.78%
================================================================================
