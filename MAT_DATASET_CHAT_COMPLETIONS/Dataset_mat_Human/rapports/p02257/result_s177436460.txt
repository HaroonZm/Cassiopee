================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def judge_prime(x):
    is_prime=True
    for i in range(2,int(x**0.5)+1):
        if x%i==0:
            is_prime=False
    return is_prime

n=int(input())
ans=0
for i in range(n):
    x=int(input())
    if judge_prime(x):
        ans+=1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' judge' (ID: 23319)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2074371874332428
    2. '_' → logprob: -1.7074371576309204
    3. '(_:' → logprob: -6.082437038421631
    4. '(_' → logprob: -6.707437038421631
    5. 's' → logprob: -7.207437038421631
    6. '_(' → logprob: -7.832437038421631
    7. '_:' → logprob: -7.957437038421631
    8. '(:' → logprob: -8.457437515258789
    9. '_s' → logprob: -8.582437515258789
    10. '(s' → logprob: -8.957437515258789

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023457668721675873
    2. ')' → logprob: -3.7734577655792236
    3. ':' → logprob: -8.648457527160645
    4. '):
' → logprob: -10.648457527160645
    5. '```' → logprob: -13.023457527160645
    6. ')：' → logprob: -13.148457527160645
    7. ''):' → logprob: -14.023457527160645
    8. ',' → logprob: -14.148457527160645
    9. ' ):' → logprob: -14.398457527160645
    10. '>' → logprob: -14.398457527160645

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010170499794185162
    2. '```' → logprob: -5.6351704597473145
    3. '():' → logprob: -6.0101704597473145
    4. '   ' → logprob: -6.1351704597473145
    5. ':
' → logprob: -6.8851704597473145
    6. '):' → logprob: -8.635170936584473
    7. '":' → logprob: -8.760170936584473
    8. '':' → logprob: -9.010170936584473
    9. '(' → logprob: -9.260170936584473
    10. '``' → logprob: -9.760170936584473

Token 6: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2793513238430023
    2. ' if' → logprob: -2.404351234436035
    3. '```' → logprob: -2.654351234436035
    4. ' i' → logprob: -3.279351234436035
    5. ' ' → logprob: -3.779351234436035
    6. 'i' → logprob: -5.154351234436035
    7. ' 
' → logprob: -5.279351234436035
    8. '    ' → logprob: -5.904351234436035
    9. ' ```' → logprob: -6.029351234436035
    10. ':' → logprob: -7.029351234436035

Token 7: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002235186053439975
    2. ' _' → logprob: -6.377235412597656
    3. '_prime' → logprob: -8.002235412597656
    4. '_space' → logprob: -9.377235412597656
    5. ' ' → logprob: -9.502235412597656
    6. 'space' → logprob: -11.002235412597656
    7. 's' → logprob: -11.502235412597656
    8. '_s' → logprob: -13.002235412597656
    9. '_pal' → logprob: -13.627235412597656
    10. '   ' → logprob: -14.127235412597656

Token 8: '=True' (ID: 7827)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6113955974578857
    2. '=' → logprob: -1.2363955974578857
    3. ' =' → logprob: -1.8613955974578857
    4. '(' → logprob: -5.236395835876465
    5. '_=' → logprob: -5.986395835876465
    6. ')' → logprob: -6.111395835876465
    7. ' ' → logprob: -8.111395835876465
    8. '```' → logprob: -8.611395835876465
    9. '(x' → logprob: -8.861395835876465
    10. ' _' → logprob: -8.986395835876465

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6113050580024719
    2. '\' → logprob: -1.9863049983978271
    3. '\n' → logprob: -2.236304998397827
    4. '<|end|>' → logprob: -2.486304998397827
    5. ',' → logprob: -3.611304998397827
    6. ':' → logprob: -3.611304998397827
    7. '  
' → logprob: -4.486305236816406
    8. ' ' → logprob: -4.486305236816406
    9. '    
' → logprob: -4.611305236816406
    10. '' → logprob: -4.736305236816406

Token 10: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33057349920272827
    2. 'for' → logprob: -2.955573558807373
    3. '    
' → logprob: -3.205573558807373
    4. '\n' → logprob: -3.455573558807373
    5. '<|end|>' → logprob: -3.705573558807373
    6. '   ' → logprob: -4.080573558807373
    7. ' for' → logprob: -4.080573558807373
    8. '\' → logprob: -4.080573558807373
    9. ' ' → logprob: -4.205573558807373
    10. ',' → logprob: -4.330573558807373

Token 11: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4513962268829346
    2. 'for' (adapté à ' for') → logprob: -1.4513962268829346
    3. '\n' → logprob: -1.7013962268829346
    4. '
' → logprob: -1.9513962268829346
    5. '   ' → logprob: -2.2013962268829346
    6. ' ' → logprob: -3.4513962268829346
    7. '    
' → logprob: -3.8263962268829346
    8. '   
' → logprob: -4.9513959884643555
    9. '  
' → logprob: -4.9513959884643555
    10. ' 
' → logprob: -5.2013959884643555

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.044731080532073975
    2. ' ' → logprob: -3.1697311401367188
    3. 'i' → logprob: -6.544731140136719
    4. '_' → logprob: -8.919731140136719
    5. ' range' → logprob: -9.919731140136719
    6. ' _' → logprob: -10.294731140136719
    7. ' in' → logprob: -10.669731140136719
    8. ' n' → logprob: -10.919731140136719
    9. ' ' → logprob: -11.669731140136719
    10. ' num' → logprob: -12.294731140136719

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002564122434705496
    2. ' ' → logprob: -6.252563953399658
    3. 'in' → logprob: -7.752563953399658
    4. '  ' → logprob: -9.627564430236816
    5. ' range' → logprob: -10.127564430236816
    6. '<|end|>' → logprob: -10.127564430236816
    7. '   ' → logprob: -11.127564430236816
    8. ' i' → logprob: -11.127564430236816
    9. 'range' → logprob: -12.377564430236816
    10. ' n' → logprob: -12.377564430236816

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5253443717956543
    2. ' ' → logprob: -0.9003443717956543
    3. 'range' → logprob: -6.275344371795654
    4. ' space' → logprob: -8.525344848632812
    5. ' in' → logprob: -10.150344848632812
    6. '	range' → logprob: -10.650344848632812
    7. ' xrange' → logprob: -10.650344848632812
    8. '(range' → logprob: -11.025344848632812
    9. '  ' → logprob: -11.775344848632812
    10. ' ' → logprob: -12.275344848632812

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2007883671903983e-05
    2. ' (' → logprob: -10.750021934509277
    3. ' ' → logprob: -16.250022888183594
    4. '((' → logprob: -16.250022888183594
    5. '(i' → logprob: -16.875022888183594
    6. '(
' → logprob: -17.125022888183594
    7. '(range' → logprob: -17.500022888183594
    8. '(x' → logprob: -17.750022888183594
    9. '2' → logprob: -17.750022888183594
    10. '(len' → logprob: -18.125022888183594

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036155125126242638
    2. ' ' → logprob: -5.628615379333496
    3. '(' → logprob: -11.253615379333496
    4. '   ' → logprob: -13.378615379333496
    5. ')' → logprob: -14.128615379333496
    6. '```' → logprob: -16.253616333007812
    7. '  ' → logprob: -16.753616333007812
    8. '    ' → logprob: -16.878616333007812
    9. ' )' → logprob: -17.503616333007812
    10. '۲' → logprob: -17.816116333007812

Token 17: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006166728213429451
    2. ' ,' → logprob: -5.131166934967041
    3. ',x' → logprob: -8.631166458129883
    4. ',i' → logprob: -10.631166458129883
    5. ',int' → logprob: -11.256166458129883
    6. ',len' → logprob: -12.006166458129883
    7. ',length' → logprob: -12.006166458129883
    8. ' ' → logprob: -12.756166458129883
    9. '   ' → logprob: -14.006166458129883
    10. ',
' → logprob: -14.256166458129883

Token 18: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522011995315552
    2. '(x' → logprob: -1.5022011995315552
    3. '(s' → logprob: -8.752201080322266
    4. ' (' → logprob: -9.377201080322266
    5. '(math' → logprob: -11.752201080322266
    6. ')' → logprob: -11.877201080322266
    7. 'x' → logprob: -12.627201080322266
    8. '((' → logprob: -13.127201080322266
    9. '```' → logprob: -13.127201080322266
    10. '(
' → logprob: -13.252201080322266

Token 19: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07555074244737625
    2. '(' → logprob: -2.8255507946014404
    3. '(x' → logprob: -4.700550556182861
    4. ' **' → logprob: -5.825550556182861
    5. ')**' → logprob: -7.575550556182861
    6. ' (' → logprob: -8.32555103302002
    7. '```' → logprob: -8.32555103302002
    8. ')' → logprob: -9.07555103302002
    9. '(**' → logprob: -9.57555103302002
    10. '.sqrt' → logprob: -10.07555103302002

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004599823441822082
    2. '.' → logprob: -8.000459671020508
    3. ' ' → logprob: -9.625459671020508
    4. '(' → logprob: -9.750459671020508
    5. ' .' → logprob: -16.875459671020508
    6. ' (' → logprob: -17.375459671020508
    7. ')' → logprob: -17.375459671020508
    8. '   ' → logprob: -17.750459671020508
    9. '2' → logprob: -18.000459671020508
    10. ' ' → logprob: -18.625459671020508

Token 21: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.36574100604048e-06
    2. ' .' → logprob: -13.500004768371582
    3. '0' → logprob: -14.375004768371582
    4. '5' → logprob: -14.750004768371582
    5. '```' → logprob: -15.250004768371582
    6. '.)' → logprob: -15.875004768371582
    7. '.<' → logprob: -15.875004768371582
    8. '​.' → logprob: -16.000003814697266
    9. '`.' → logprob: -16.125003814697266
    10. '‌.' → logprob: -16.125003814697266

Token 22: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.500004768371582
    3. '.' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.125004768371582
    5. '``' → logprob: -15.312504768371582
    6. '4' → logprob: -15.437504768371582
    7. '0' → logprob: -15.875004768371582
    8. '05' → logprob: -16.125003814697266
    9. ' ' → logprob: -16.437503814697266
    10. '6' → logprob: -16.687503814697266

Token 23: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.020691128447651863
    2. ')' → logprob: -3.895691156387329
    3. '+' → logprob: -9.39569091796875
    4. ' )' → logprob: -9.89569091796875
    5. '")+' → logprob: -11.77069091796875
    6. ')+(' → logprob: -13.02069091796875
    7. '(' → logprob: -13.39569091796875
    8. '}+' → logprob: -13.64569091796875
    9. ']+' → logprob: -14.14569091796875
    10. '()+' → logprob: -14.27069091796875

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013284528395161033
    2. ' ' → logprob: -6.626328468322754
    3. '2' → logprob: -13.126328468322754
    4. '```' → logprob: -15.001328468322754
    5. ')' → logprob: -16.751327514648438
    6. '  ' → logprob: -16.876327514648438
    7. '   ' → logprob: -17.001327514648438
    8. ' ' → logprob: -17.626327514648438
    9. '(' → logprob: -17.751327514648438
    10. '۱' → logprob: -18.438827514648438

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014232965186238289
    2. ':' → logprob: -4.514233112335205
    3. ')' → logprob: -5.764233112335205
    4. ' ):' → logprob: -10.639232635498047
    5. ':)' → logprob: -11.764232635498047
    6. '):
' → logprob: -12.514232635498047
    7. ':**' → logprob: -13.514232635498047
    8. ' ' → logprob: -13.639232635498047
    9. ',' → logprob: -13.639232635498047
    10. ')：' → logprob: -14.764232635498047

Token 26: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017414625035598874
    2. ' :' → logprob: -7.251741409301758
    3. '       ' → logprob: -7.876741409301758
    4. '):' → logprob: -8.501741409301758
    5. '    ' → logprob: -8.751741409301758
    6. '   ' → logprob: -8.876741409301758
    7. ':
' → logprob: -9.251741409301758
    8. ':**' → logprob: -11.501741409301758
    9. '():' → logprob: -11.751741409301758
    10. ' ' → logprob: -12.126741409301758

Token 27: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7982639074325562
    2. ' if' → logprob: -1.0482639074325562
    3. 'if' (adapté à ' if') → logprob: -2.1732640266418457
    4. '       ' → logprob: -3.1732640266418457
    5. ':' → logprob: -3.7982640266418457
    6. '    ' → logprob: -4.548264026641846
    7. ' :' → logprob: -4.673264026641846
    8. ' ' → logprob: -7.923264026641846
    9. '  ' → logprob: -8.673263549804688
    10. '        ' → logprob: -9.298263549804688

Token 28: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0010681778658181429
    2. 'x' → logprob: -7.126068115234375
    3. ' ' → logprob: -8.251068115234375
    4. ' (' → logprob: -13.501068115234375
    5. '	x' → logprob: -14.626068115234375
    6. ' ' → logprob: -15.251068115234375
    7. ' ‌' → logprob: -15.626068115234375
    8. '<|end|>' → logprob: -15.876068115234375
    9. ')' → logprob: -16.501068115234375
    10. '(x' → logprob: -16.501068115234375

Token 29: '%i' (ID: 157265)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06220822036266327
    2. '%' → logprob: -2.8122081756591797
    3. ' ' → logprob: -8.43720817565918
    4. '%i' → logprob: -10.68720817565918
    5. ' %
' → logprob: -15.56220817565918
    6. ' %)' → logprob: -15.68720817565918
    7. ' %

' → logprob: -15.81220817565918
    8. '%x' → logprob: -16.31220817565918
    9. ' ' → logprob: -16.43720817565918
    10. ' %#' → logprob: -16.93720817565918

Token 30: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16171766817569733
    2. ' ==' → logprob: -1.9117176532745361
    3. '=' → logprob: -6.536717891693115
    4. ' =' → logprob: -10.661717414855957
    5. ' ' → logprob: -11.411717414855957
    6. '===' → logprob: -12.536717414855957
    7. '```' → logprob: -13.536717414855957
    8. ')==' → logprob: -13.661717414855957
    9. ' ' → logprob: -13.911717414855957
    10. ']==' → logprob: -14.161717414855957

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '00' → logprob: -18.877185821533203
    4. '```' → logprob: -19.127185821533203
    5. '   ' → logprob: -19.377185821533203
    6. '۰' → logprob: -19.502185821533203
    7. '=' → logprob: -20.002185821533203
    8. '  ' → logprob: -20.127185821533203
    9. ' ' → logprob: -20.252185821533203
    10. '000' → logprob: -20.502185821533203

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001732663222355768
    2. ':return' → logprob: -8.750173568725586
    3. ':**' → logprob: -12.250173568725586
    4. ':
' → logprob: -12.375173568725586
    5. ' :' → logprob: -12.750173568725586
    6. '):' → logprob: -13.750173568725586
    7. ' and' → logprob: -14.500173568725586
    8. '<|end|>' → logprob: -14.875173568725586
    9. ' or' → logprob: -15.375173568725586
    10. '       ' → logprob: -15.750173568725586

Token 33: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006709447130560875
    2. '       ' → logprob: -5.256709575653076
    3. '   ' → logprob: -8.381709098815918
    4. 'return' → logprob: -8.631709098815918
    5. '
' → logprob: -8.756709098815918
    6. '<|end|>' → logprob: -8.756709098815918
    7. '            
' → logprob: -8.756709098815918
    8. ' return' → logprob: -9.006709098815918
    9. ' ' → logprob: -9.131709098815918
    10. '```' → logprob: -9.756709098815918

Token 34: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8218398094177246
    2. '           ' → logprob: -1.5718398094177246
    3. ' is' → logprob: -1.8218398094177246
    4. 'is' (adapté à ' is') → logprob: -1.8218398094177246
    5. '       ' → logprob: -4.321839809417725
    6. '   ' → logprob: -4.696839809417725
    7. '
' → logprob: -6.321839809417725
    8. ' 
' → logprob: -6.571839809417725
    9. ' ' → logprob: -7.196839809417725
    10. 'return' → logprob: -7.321839809417725

Token 35: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.5804471969604492
    2. '_' → logprob: -0.8304471969604492
    3. '_p' → logprob: -5.830447196960449
    4. '_pr' → logprob: -7.455447196960449
    5. '_false' → logprob: -7.955447196960449
    6. ' _' → logprob: -8.58044719696045
    7. '_pi' → logprob: -9.33044719696045
    8. ''_' → logprob: -9.70544719696045
    9. '_prior' → logprob: -9.95544719696045
    10. '__' → logprob: -10.58044719696045

Token 36: '=False' (ID: 12148)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2547394335269928
    2. ' =' → logprob: -1.5047394037246704
    3. '=False' → logprob: -5.879739284515381
    4. '=True' → logprob: -12.004739761352539
    5. '=

' → logprob: -13.754739761352539
    6. '=false' → logprob: -14.004739761352539
    7. ' False' → logprob: -14.129739761352539
    8. 'False' → logprob: -14.879739761352539
    9. '＝' → logprob: -14.879739761352539
    10. '<|end|>' → logprob: -14.879739761352539

Token 37: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.73314929776825e-05
    2. '       ' → logprob: -10.75008773803711
    3. '               ' → logprob: -11.00008773803711
    4. '            
' → logprob: -11.00008773803711
    5. '<|end|>' → logprob: -11.50008773803711
    6. '            ' → logprob: -11.87508773803711
    7. '		' → logprob: -11.87508773803711
    8. '          ' → logprob: -13.00008773803711
    9. '   ' → logprob: -13.37508773803711
    10. '```' → logprob: -14.25008773803711

Token 38: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001474748714827001
    2. '       ' → logprob: -7.376474857330322
    3. '            
' → logprob: -8.126474380493164
    4. '               ' → logprob: -9.001474380493164
    5. '<|end|>' → logprob: -9.251474380493164
    6. '
' → logprob: -9.501474380493164
    7. '   ' → logprob: -9.876474380493164
    8. '    
' → logprob: -10.001474380493164
    9. '		' → logprob: -10.001474380493164
    10. '            ' → logprob: -10.876474380493164

Token 39: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012476573698222637
    2. '       ' → logprob: -4.512476444244385
    3. '   ' → logprob: -7.512476444244385
    4. '               ' → logprob: -8.637476921081543
    5. '            
' → logprob: -8.762476921081543
    6. 'return' (adapté à ' return') → logprob: -9.637476921081543
    7. '            ' → logprob: -9.762476921081543
    8. '		' → logprob: -9.762476921081543
    9. '    ' → logprob: -9.762476921081543
    10. '    
' → logprob: -10.012476921081543

Token 40: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0009220616775564849
    2. 'is' → logprob: -7.000922203063965
    3. ' ' → logprob: -12.750922203063965
    4. ' x' → logprob: -12.750922203063965
    5. ' ' → logprob: -12.875922203063965
    6. 'x' → logprob: -13.500922203063965
    7. ' True' → logprob: -14.500922203063965
    8. 'space' → logprob: -15.875922203063965
    9. '	is' → logprob: -16.37592124938965
    10. 'True' → logprob: -17.12592124938965

Token 41: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00012023169983876869
    2. '_' → logprob: -9.125120162963867
    3. ' _' → logprob: -12.125120162963867
    4. '_pr' → logprob: -12.250120162963867
    5. '_p' → logprob: -14.625120162963867
    6. '_prior' → logprob: -15.750120162963867
    7. '_pi' → logprob: -16.125120162963867
    8. 'prime' → logprob: -16.125120162963867
    9. '_Pr' → logprob: -17.250120162963867
    10. '_primary' → logprob: -17.500120162963867

Token 42: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5890005230903625
    2. ' ' → logprob: -0.9640005230903625
    3. '=' → logprob: -2.8390004634857178
    4. '  ' → logprob: -6.464000701904297
    5. '<|end|>' → logprob: -6.464000701904297
    6. 'u' → logprob: -7.839000701904297
    7. ' ==' → logprob: -7.964000701904297
    8. ' >' → logprob: -8.214000701904297
    9. ')' → logprob: -8.714000701904297
    10. ' )' → logprob: -8.964000701904297

Token 45: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002448893792461604
    2. '(input' → logprob: -9.375245094299316
    3. '<|end|>' → logprob: -9.500245094299316
    4. ' (' → logprob: -10.125245094299316
    5. '('' → logprob: -11.000245094299316
    6. '()' → logprob: -11.250245094299316
    7. '(n' → logprob: -12.750245094299316
    8. '(
' → logprob: -13.125245094299316
    9. ' ' → logprob: -13.250245094299316
    10. '(

' → logprob: -13.750245094299316

Token 46: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5017321705818176
    2. '(' → logprob: -1.0017321109771729
    3. '())' → logprob: -3.876732110977173
    4. '('' → logprob: -5.751732349395752
    5. '("("' → logprob: -6.626732349395752
    6. '(()' → logprob: -7.751732349395752
    7. '()>' → logprob: -8.126731872558594
    8. '("")' → logprob: -8.126731872558594
    9. ')' → logprob: -8.376731872558594
    10. ' ())' → logprob: -9.001731872558594

Token 47: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5223825573921204
    2. 'for' → logprob: -1.0223824977874756
    3. 'print' → logprob: -4.022382736206055
    4. 'i' → logprob: -4.397382736206055
    5. ' 
' → logprob: -4.647382736206055
    6. ' for' → logprob: -6.522382736206055
    7. '
' → logprob: -6.772382736206055
    8. ' if' → logprob: -6.772382736206055
    9. '\n' → logprob: -7.397382736206055
    10. '' → logprob: -7.772382736206055

Token 48: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5772019028663635
    2. ' =' → logprob: -0.8272019028663635
    3. ' +=' → logprob: -7.827201843261719
    4. '_' → logprob: -8.327201843261719
    5. ' ' → logprob: -8.827201843261719
    6. '(' → logprob: -9.202201843261719
    7. '=[]' → logprob: -9.577201843261719
    8. '+=' → logprob: -10.202201843261719
    9. '[' → logprob: -10.827201843261719
    10. ',' → logprob: -10.952201843261719

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004834038205444813
    2. 'n' → logprob: -6.129834175109863
    3. '1' → logprob: -6.504834175109863
    4. 'sum' → logprob: -8.004834175109863
    5. '"' → logprob: -8.129834175109863
    6. '[]' → logprob: -8.254834175109863
    7. '""' → logprob: -8.879834175109863
    8. '2' → logprob: -10.254834175109863
    9. '''' → logprob: -11.129834175109863
    10. 'False' → logprob: -11.379834175109863

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037480611354112625
    2. '<|end|>' → logprob: -3.912480592727661
    3. ' 
' → logprob: -4.66248083114624
    4. 'for' → logprob: -6.03748083114624
    5. ' for' → logprob: -6.28748083114624
    6. '' → logprob: -6.78748083114624
    7. '\n' → logprob: -7.03748083114624
    8. '  
' → logprob: -7.91248083114624
    9. '
' → logprob: -8.412480354309082
    10. '```' → logprob: -8.787480354309082

Token 51: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4272993803024292
    2. ' for' → logprob: -1.9272993803024292
    3. '<|end|>' → logprob: -2.1772994995117188
    4. '
' → logprob: -2.5522994995117188
    5. ' 
' → logprob: -5.302299499511719
    6. '\n' → logprob: -5.927299499511719
    7. '```' → logprob: -6.552299499511719
    8. ' ' → logprob: -7.177299499511719
    9. '\' → logprob: -8.177299499511719
    10. '' → logprob: -8.177299499511719

Token 52: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3214634954929352
    2. ' i' → logprob: -1.3214634656906128
    3. ' _' → logprob: -5.446463584899902
    4. '_' → logprob: -5.696463584899902
    5. ' range' → logprob: -8.196463584899902
    6. 'i' → logprob: -9.071463584899902
    7. ' ‌' → logprob: -10.196463584899902
    8. ' n' → logprob: -11.071463584899902
    9. ' x' → logprob: -11.196463584899902
    10. ' ' → logprob: -11.571463584899902

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007945395074784756
    2. 'in' → logprob: -4.882945537567139
    3. ' ' → logprob: -8.00794506072998
    4. 'range' → logprob: -13.50794506072998
    5. ' range' → logprob: -14.00794506072998
    6. '	in' → logprob: -14.13294506072998
    7. ' i' → logprob: -14.25794506072998
    8. '  ' → logprob: -14.50794506072998
    9. '```' → logprob: -14.75794506072998
    10. 'space' → logprob: -15.13294506072998

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005395968910306692
    2. 'range' → logprob: -5.255395889282227
    3. ' ' → logprob: -8.755395889282227
    4. '1' → logprob: -13.630395889282227
    5. '2' → logprob: -14.005395889282227
    6. ' n' → logprob: -14.005395889282227
    7. '	range' → logprob: -14.380395889282227
    8. ' in' → logprob: -14.755395889282227
    9. ' xrange' → logprob: -15.130395889282227
    10. '(range' → logprob: -15.755395889282227

Token 55: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6656825866666622e-05
    2. '(n' → logprob: -11.37502670288086
    3. ' (' → logprob: -11.50002670288086
    4. '(
' → logprob: -12.50002670288086
    5. ' ' → logprob: -14.75002670288086
    6. '1' → logprob: -14.87502670288086
    7. '(

' → logprob: -15.37502670288086
    8. '2' → logprob: -16.50002670288086
    9. '()' → logprob: -17.25002670288086
    10. '<|end|>' → logprob: -17.37502670288086

Token 56: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6716786026954651
    2. '+' → logprob: -1.0466785430908203
    3. ' ,' → logprob: -3.0466785430908203
    4. '):' → logprob: -3.0466785430908203
    5. '2' → logprob: -4.54667854309082
    6. ' ):' → logprob: -4.54667854309082
    7. ' ' → logprob: -4.67167854309082
    8. ' +' → logprob: -5.54667854309082
    9. '1' → logprob: -5.54667854309082
    10. ')' → logprob: -6.17167854309082

Token 57: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5996218323707581
    2. ' ' → logprob: -1.0996217727661133
    3. '   ' → logprob: -3.3496217727661133
    4. '    
' → logprob: -3.7246217727661133
    5. '    ' → logprob: -3.8496217727661133
    6. '     
' → logprob: -4.099621772766113
    7. ' i' → logprob: -4.599621772766113
    8. '<|end|>' → logprob: -5.724621772766113
    9. ' input' → logprob: -6.474621772766113
    10. ' if' → logprob: -6.974621772766113

Token 58: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.374264121055603
    2. ' x' → logprob: -1.874264121055603
    3. ' i' → logprob: -2.7492642402648926
    4. ' s' → logprob: -3.8742642402648926
    5. ' a' → logprob: -3.8742642402648926
    6. ' 
' → logprob: -3.9992642402648926
    7. ' input' → logprob: -4.999264240264893
    8. ' n' → logprob: -5.624264240264893
    9. '    ' → logprob: -5.749264240264893
    10. ' t' → logprob: -6.249264240264893

Token 59: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09466730058193207
    2. '=' → logprob: -2.4696671962738037
    3. '=int' → logprob: -5.219667434692383
    4. '=input' → logprob: -8.594667434692383
    5. ',' → logprob: -9.844667434692383
    6. ' ' → logprob: -9.844667434692383
    7. ' ,' → logprob: -12.344667434692383
    8. '＝' → logprob: -13.844667434692383
    9. '_' → logprob: -14.219667434692383
    10. ')' → logprob: -14.469667434692383

Token 60: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001261845463886857
    2. '(' → logprob: -9.000125885009766
    3. 'input' → logprob: -13.000125885009766
    4. '()' → logprob: -15.250125885009766
    5. '=input' → logprob: -16.000125885009766
    6. '(
' → logprob: -16.625125885009766
    7. ' input' → logprob: -17.000125885009766
    8. '<input' → logprob: -17.000125885009766
    9. '	input' → logprob: -17.625125885009766
    10. ',input' → logprob: -17.875125885009766

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3877049386501312
    2. '()' → logprob: -1.1377049684524536
    3. ')' → logprob: -7.137704849243164
    4. '()
' → logprob: -11.012704849243164
    5. '();)' → logprob: -12.012704849243164
    6. '())
' → logprob: -12.387704849243164
    7. '(' → logprob: -12.512704849243164
    8. '()))' → logprob: -13.387704849243164
    9. ' ())' → logprob: -13.637704849243164
    10. '()]' → logprob: -13.762704849243164

Token 62: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7436560988426208
    2. ' if' → logprob: -1.2436561584472656
    3. ' ' → logprob: -2.3686561584472656
    4. '<|end|>' → logprob: -2.9936561584472656
    5. '   ' → logprob: -3.2436561584472656
    6. '
' → logprob: -3.9936561584472656
    7. 'if' → logprob: -4.493656158447266
    8. '   
' → logprob: -4.993656158447266
    9. '```' → logprob: -5.368656158447266
    10. '    
' → logprob: -5.368656158447266

Token 63: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.037499893456697464
    2. 'if' (adapté à ' if') → logprob: -3.5374999046325684
    3. ' ' → logprob: -5.287499904632568
    4. ' 
' → logprob: -6.537499904632568
    5. '<|end|>' → logprob: -7.412499904632568
    6. '```' → logprob: -7.787499904632568
    7. '    ' → logprob: -9.91249942779541
    8. ' ```' → logprob: -9.91249942779541
    9. ' i' → logprob: -10.28749942779541
    10. '   ' → logprob: -10.53749942779541

Token 64: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.00013810492237098515
    2. 'judge' → logprob: -9.375138282775879
    3. ' x' → logprob: -10.750138282775879
    4. ' ' → logprob: -10.750138282775879
    5. ' juge' → logprob: -12.500138282775879
    6. ' Judge' → logprob: -13.000138282775879
    7. ' ' → logprob: -13.625138282775879
    8. ' juez' → logprob: -14.375138282775879
    9. ' judges' → logprob: -14.625138282775879
    10. ' guess' → logprob: -14.750138282775879

Token 65: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0006384541047737002
    2. '_' → logprob: -7.375638484954834
    3. '_pr' → logprob: -12.250638008117676
    4. ' _' → logprob: -13.250638008117676
    5. '_pi' → logprob: -13.625638008117676
    6. '_Pr' → logprob: -14.375638008117676
    7. '_p' → logprob: -14.500638008117676
    8. '```' → logprob: -14.500638008117676
    9. ''_' → logprob: -14.750638008117676
    10. '_primary' → logprob: -14.875638008117676

Token 66: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12712852656841278
    2. '(' → logprob: -2.1271286010742188
    3. '(i' → logprob: -8.752128601074219
    4. ' (' → logprob: -10.752128601074219
    5. '(
' → logprob: -11.002128601074219
    6. '(

' → logprob: -12.877128601074219
    7. ')' → logprob: -15.377128601074219
    8. '(n' → logprob: -15.752128601074219
    9. '(X' → logprob: -15.752128601074219
    10. '(xs' → logprob: -15.877128601074219

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032881323248147964
    2. ')' → logprob: -3.532881259918213
    3. ' ):' → logprob: -5.907881259918213
    4. ')==' → logprob: -8.907881736755371
    5. ' )' → logprob: -9.282881736755371
    6. ' and' → logprob: -9.282881736755371
    7. '==' → logprob: -10.032881736755371
    8. 'and' → logprob: -10.782881736755371
    9. '):
' → logprob: -11.907881736755371
    10. ':' → logprob: -12.407881736755371

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018448634073138237
    2. '   ' → logprob: -7.376844882965088
    3. ' ans' → logprob: -7.501844882965088
    4. ' 
' → logprob: -8.50184440612793
    5. '        
' → logprob: -9.00184440612793
    6. '	ans' → logprob: -9.50184440612793
    7. 'ans' → logprob: -9.75184440612793
    8. '    
' → logprob: -9.87684440612793
    9. '+' → logprob: -10.50184440612793
    10. '
' → logprob: -10.62684440612793

Token 69: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7274563312530518
    2. 'ans' (adapté à ' ans') → logprob: -1.2274563312530518
    3. ' ans' → logprob: -1.6024563312530518
    4. '   ' → logprob: -4.102456092834473
    5. '	ans' → logprob: -5.227456092834473
    6. ' 
' → logprob: -9.227456092834473
    7. '           ' → logprob: -9.352456092834473
    8. ' ' → logprob: -9.602456092834473
    9. '(ans' → logprob: -9.727456092834473
    10. '
' → logprob: -10.102456092834473

Token 70: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06538674235343933
    2. ' +=' → logprob: -2.9403867721557617
    3. '+' → logprob: -4.565386772155762
    4. '+='' → logprob: -10.815386772155762
    5. '+="' → logprob: -11.440386772155762
    6. ']+=' → logprob: -11.940386772155762
    7. '=' → logprob: -12.690386772155762
    8. '+=(' → logprob: -13.565386772155762
    9. '<|end|>' → logprob: -14.315386772155762
    10. '++' → logprob: -14.690386772155762

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07893870770931244
    2. 'x' → logprob: -2.5789387226104736
    3. ' x' → logprob: -10.453938484191895
    4. ' ' → logprob: -10.828938484191895
    5. '+' → logprob: -16.70393943786621
    6. '2' → logprob: -17.20393943786621
    7. '10' → logprob: -17.32893943786621
    8. '   ' → logprob: -17.57893943786621
    9. '(x' → logprob: -17.70393943786621
    10. '0' → logprob: -17.70393943786621

Token 72: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.084206375409849e-05
    2. '
' → logprob: -10.875041007995605
    3. ' print' → logprob: -10.875041007995605
    4. '```' → logprob: -14.375041007995605
    5. '<|end|>' → logprob: -14.625041007995605
    6. '\n' → logprob: -14.875041007995605
    7. 'p' → logprob: -15.000041007995605
    8. 'pr' → logprob: -15.125041007995605
    9. '(print' → logprob: -15.500041007995605
    10. '#print' → logprob: -16.12504005432129

Token 73: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7835754988482222e-05
    2. ' print' → logprob: -11.500018119812012
    3. '
' → logprob: -12.125018119812012
    4. '```' → logprob: -13.750018119812012
    5. '<|end|>' → logprob: -14.500018119812012
    6. 'pr' → logprob: -15.375018119812012
    7. 'p' → logprob: -16.500017166137695
    8. '\n' → logprob: -16.625017166137695
    9. '(print' → logprob: -16.750017166137695
    10. 'prin' → logprob: -16.875017166137695

Token 74: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021895181853324175
    2. '('' → logprob: -6.627189636230469
    3. '(ans' → logprob: -7.502189636230469
    4. '("("' → logprob: -8.127189636230469
    5. ' (' → logprob: -12.377189636230469
    6. '(
' → logprob: -12.877189636230469
    7. '()' → logprob: -13.377189636230469
    8. '((' → logprob: -13.627189636230469
    9. '(`' → logprob: -14.002189636230469
    10. '(

' → logprob: -14.127189636230469

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.5
    3. '))' → logprob: -18.25
    4. ')`' → logprob: -18.5
    5. ')
' → logprob: -19.125
    6. '()' → logprob: -20.125
    7. '）' → logprob: -20.25
    8. '(' → logprob: -20.25
    9. ')#' → logprob: -20.25
    10. ')**' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 49.32%
Précision adaptée (1ère position): 49.32%
Précision (top 10): 86.30%
================================================================================
