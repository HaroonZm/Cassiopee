================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
tree = [{'parent': -1, 'left': -1, 'right': -1, 'sibling': -1} for _ in range(N)]
parent = set(n for n in range(N))

for _ in range(N):
    inp = [int(n) for n in input().split()]
    tree[inp[0]]['left'] = inp[1]
    tree[inp[0]]['right'] = inp[2]

    if inp[1] != -1:
        tree[inp[1]]['parent'] = inp[0]
        tree[inp[1]]['sibling'] = inp[2]
    if inp[2] != -1:
        tree[inp[2]]['parent'] = inp[0]
        tree[inp[2]]['sibling'] = inp[1]
    parent = parent.difference(inp[1:])

root = parent.pop()

def preParse(u):
    if u == -1:
        return 
    print(f' {u}', end = '')
    preParse(tree[u]['left'])
    preParse(tree[u]['right'])

def inParse(u):
    if u == -1:
        return 
    inParse(tree[u]['left'])
    print(f' {u}', end = '')
    inParse(tree[u]['right'])

def postParse(u):
    if u == -1:
        return 
    postParse(tree[u]['left'])
    postParse(tree[u]['right'])
    print(f' {u}', end = '')

print('Preorder')
preParse(root)
print()

print('Inorder')
inParse(root)
print()

print('Postorder')
postParse(root)
print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'tree' (ID: 19816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7168143391609192
    2. 'if' → logprob: -1.2168142795562744
    3. '\n' → logprob: -2.5918142795562744
    4. 's' → logprob: -3.7168142795562744
    5. 'i' → logprob: -3.8418142795562744
    6. 'x' → logprob: -4.2168145179748535
    7. '```' → logprob: -4.3418145179748535
    8. '`' → logprob: -4.7168145179748535
    9. 'a' → logprob: -4.7168145179748535
    10. '\' → logprob: -4.9668145179748535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02192532643675804
    2. ' =' → logprob: -4.771925449371338
    3. '_' → logprob: -5.646925449371338
    4. '[]' → logprob: -5.646925449371338
    5. '.' → logprob: -5.771925449371338
    6. '=' → logprob: -6.896925449371338
    7. 's' → logprob: -7.021925449371338
    8. ')' → logprob: -7.771925449371338
    9. '[node' → logprob: -9.02192497253418
    10. '\[' → logprob: -9.39692497253418

Token 7: ' [{'' (ID: 167455)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.21967221796512604
    2. ' {}' → logprob: -2.219672203063965
    3. '[]' → logprob: -2.719672203063965
    4. ' []' → logprob: -3.844672203063965
    5. '[' → logprob: -7.594672203063965
    6. 'dict' → logprob: -7.969672203063965
    7. 'set' → logprob: -9.094672203063965
    8. ' [' → logprob: -9.469672203063965
    9. 'list' → logprob: -9.719672203063965
    10. ' ' → logprob: -10.094672203063965

Token 8: 'parent' (ID: 4903)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -1.2386908531188965
    2. '':' → logprob: -1.3636908531188965
    3. ''' → logprob: -2.2386908531188965
    4. 'left' → logprob: -2.6136908531188965
    5. 'value' → logprob: -3.2386908531188965
    6. 'children' → logprob: -3.4886908531188965
    7. 'val' → logprob: -3.4886908531188965
    8. 'parent' → logprob: -3.4886908531188965
    9. 'l' → logprob: -3.6136908531188965
    10. 'v' → logprob: -3.8636908531188965

Token 9: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.007053268142044544
    2. ':' → logprob: -5.007053375244141
    3. ''' → logprob: -8.75705337524414
    4. '':'' → logprob: -10.25705337524414
    5. ',' → logprob: -10.50705337524414
    6. '":' → logprob: -10.50705337524414
    7. ''}' → logprob: -11.00705337524414
    8. ''s' → logprob: -11.25705337524414
    9. ' :' → logprob: -11.50705337524414
    10. '=None' → logprob: -12.25705337524414

Token 10: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014452704228460789
    2. ' -' → logprob: -4.764452934265137
    3. 'None' → logprob: -5.264452934265137
    4. '0' → logprob: -8.139452934265137
    5. ' None' → logprob: -8.514452934265137
    6. ' ' → logprob: -9.889452934265137
    7. '[]' → logprob: -10.139452934265137
    8. '   ' → logprob: -11.639452934265137
    9. ')' → logprob: -11.889452934265137
    10. ''' → logprob: -12.264452934265137

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '2' → logprob: -15.312552452087402
    4. '   ' → logprob: -16.25005340576172
    5. ',' → logprob: -16.56255340576172
    6. '```' → logprob: -16.68755340576172
    7. '-' → logprob: -16.87505340576172
    8. '１' → logprob: -17.06255340576172
    9. '  ' → logprob: -17.18755340576172
    10. 'i' → logprob: -17.25005340576172

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005594918038696051
    2. '}' → logprob: -5.380594730377197
    3. '}]' → logprob: -7.255594730377197
    4. ','' → logprob: -9.130595207214355
    5. ' ,' → logprob: -9.255595207214355
    6. '},' → logprob: -10.880595207214355
    7. ',
' → logprob: -11.630595207214355
    8. '   ' → logprob: -11.755595207214355
    9. ' }]' → logprob: -12.130595207214355
    10. '',' → logprob: -12.255595207214355

Token 13: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14620375633239746
    2. ' '' → logprob: -2.1462037563323975
    3. ''s' → logprob: -4.896203994750977
    4. ''d' → logprob: -5.521203994750977
    5. ''value' → logprob: -5.771203994750977
    6. ''type' → logprob: -6.896203994750977
    7. '   ' → logprob: -7.771203994750977
    8. ''t' → logprob: -8.021203994750977
    9. ''n' → logprob: -8.646203994750977
    10. ''ll' → logprob: -8.646203994750977

Token 14: 'left' (ID: 4530)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.2817113697528839
    2. 'left' → logprob: -1.5317113399505615
    3. 'depth' → logprob: -4.031711578369141
    4. 'value' → logprob: -5.281711578369141
    5. 'key' → logprob: -5.406711578369141
    6. 'right' → logprob: -6.781711578369141
    7. ''' → logprob: -8.40671157836914
    8. ' children' → logprob: -8.78171157836914
    9. 'keys' → logprob: -9.03171157836914
    10. 'index' → logprob: -10.03171157836914

Token 15: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0005650650127790868
    2. ''' → logprob: -8.000565528869629
    3. ':' → logprob: -9.125565528869629
    4. 'child' → logprob: -9.625565528869629
    5. '_child' → logprob: -10.500565528869629
    6. '":' → logprob: -11.750565528869629
    7. '':'' → logprob: -12.750565528869629
    8. '-child' → logprob: -13.000565528869629
    9. '':''' → logprob: -13.125565528869629
    10. ' ':' → logprob: -13.375565528869629

Token 16: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.622458279132843
    2. '-' → logprob: -1.1224582195281982
    3. 'None' → logprob: -2.3724582195281982
    4. ' None' → logprob: -3.1224582195281982
    5. ' ' → logprob: -7.747458457946777
    6. ',' → logprob: -10.122458457946777
    7. ''' → logprob: -10.247458457946777
    8. '0' → logprob: -10.497458457946777
    9. ' '' → logprob: -10.747458457946777
    10. ' ,' → logprob: -11.747458457946777

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002327244495972991
    2. ' ' → logprob: -6.1273274421691895
    3. '2' → logprob: -8.877326965332031
    4. '   ' → logprob: -13.877326965332031
    5. '```' → logprob: -15.189826965332031
    6. '0' → logprob: -15.314826965332031
    7. '  ' → logprob: -15.439826965332031
    8. '    ' → logprob: -16.12732696533203
    9. ':' → logprob: -16.18982696533203
    10. '     ' → logprob: -16.25232696533203

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017839208885561675
    2. ' ,' → logprob: -8.750178337097168
    3. ','' → logprob: -11.750178337097168
    4. ',
' → logprob: -12.250178337097168
    5. ',

' → logprob: -12.625178337097168
    6. '',' → logprob: -13.250178337097168
    7. '}' → logprob: -13.625178337097168
    8. '},' → logprob: -14.875178337097168
    9. '<|end|>' → logprob: -16.000179290771484
    10. '```' → logprob: -16.125179290771484

Token 19: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0701523870229721
    2. ' '' → logprob: -2.6951522827148438
    3. ''s' → logprob: -9.445152282714844
    4. ' ' → logprob: -9.570152282714844
    5. ''r' → logprob: -11.820152282714844
    6. ''type' → logprob: -12.195152282714844
    7. ' ' → logprob: -12.195152282714844
    8. ''user' → logprob: -12.695152282714844
    9. ''label' → logprob: -12.695152282714844
    10. '	' → logprob: -12.820152282714844

Token 20: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001333455671556294
    2. ''' → logprob: -7.126333236694336
    3. ' right' → logprob: -7.751333236694336
    4. ''r' → logprob: -10.751333236694336
    5. ''value' → logprob: -10.751333236694336
    6. ''re' → logprob: -11.376333236694336
    7. ' '' → logprob: -11.501333236694336
    8. '   ' → logprob: -11.751333236694336
    9. '	right' → logprob: -11.876333236694336
    10. 'key' → logprob: -12.001333236694336

Token 21: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.012587346136569977
    2. ':' → logprob: -4.387587547302246
    3. '":' → logprob: -9.887587547302246
    4. '}:' → logprob: -12.012587547302246
    5. ''}' → logprob: -12.387587547302246
    6. ' :' → logprob: -12.512587547302246
    7. ' ':' → logprob: -13.387587547302246
    8. '`:' → logprob: -13.387587547302246
    9. '```' → logprob: -13.512587547302246
    10. '':'' → logprob: -13.512587547302246

Token 22: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07890840619802475
    2. ' -' → logprob: -2.5789084434509277
    3. '1' → logprob: -11.45390796661377
    4. ' ' → logprob: -11.82890796661377
    5. '```' → logprob: -15.32890796661377
    6. '   ' → logprob: -16.203908920288086
    7. ' ' → logprob: -16.578908920288086
    8. '2' → logprob: -17.078908920288086
    9. '  ' → logprob: -17.328908920288086
    10. '}' → logprob: -17.328908920288086

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.375086784362793
    3. '-' → logprob: -14.562586784362793
    4. ' -' → logprob: -14.687586784362793
    5. '2' → logprob: -14.937586784362793
    6. '```' → logprob: -15.625086784362793
    7. '   ' → logprob: -16.50008773803711
    8. '１' → logprob: -16.81258773803711
    9. '  ' → logprob: -16.87508773803711
    10. '`' → logprob: -17.62508773803711

Token 24: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3604890704154968
    2. '}]' → logprob: -1.2354891300201416
    3. '},' → logprob: -4.9854888916015625
    4. ',' → logprob: -5.9854888916015625
    5. ' }]' → logprob: -7.1104888916015625
    6. '}],' → logprob: -7.2354888916015625
    7. '   ' → logprob: -7.7354888916015625
    8. ''}' → logprob: -8.110488891601562
    9. ' }' → logprob: -8.860488891601562
    10. ' ' → logprob: -9.985488891601562

Token 25: ' '' (ID: 461)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5026074051856995
    2. ''' → logprob: -1.2526073455810547
    3. ' '' → logprob: -2.6276073455810547
    4. '}]' → logprob: -4.752607345581055
    5. ''s' → logprob: -5.252607345581055
    6. ''t' → logprob: -5.377607345581055
    7. ''type' → logprob: -5.627607345581055
    8. ''}' → logprob: -6.002607345581055
    9. ''value' → logprob: -6.252607345581055
    10. ''id' → logprob: -6.502607345581055

Token 26: 's' (ID: 82)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.024088973179459572
    2. 'value' → logprob: -4.6490888595581055
    3. ''' → logprob: -5.0240888595581055
    4. ''value' → logprob: -5.5240888595581055
    5. 'size' → logprob: -6.8990888595581055
    6. 'depth' → logprob: -7.0240888595581055
    7. 'parent' → logprob: -7.8990888595581055
    8. ''s' → logprob: -8.149088859558105
    9. 'data' → logprob: -8.899088859558105
    10. ' key' → logprob: -9.149088859558105

Token 27: 'ibling' (ID: 47701)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.005630824714899063
    2. 'size' → logprob: -6.255630970001221
    3. 'iz' → logprob: -6.380630970001221
    4. 'um' → logprob: -7.255630970001221
    5. 'z' → logprob: -7.505630970001221
    6. 't' → logprob: -7.630630970001221
    7. 'ub' → logprob: -9.505630493164062
    8. '}' → logprob: -10.130630493164062
    9. 'e' → logprob: -10.630630493164062
    10. 'i' → logprob: -11.130630493164062

Token 28: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16086526215076447
    2. ':' → logprob: -1.910865306854248
    3. 's' → logprob: -8.53586483001709
    4. ''}' → logprob: -9.03586483001709
    5. ''s' → logprob: -9.41086483001709
    6. '":' → logprob: -9.41086483001709
    7. '}:' → logprob: -10.16086483001709
    8. ''' → logprob: -10.28586483001709
    9. '':'' → logprob: -10.41086483001709
    10. '}' → logprob: -10.41086483001709

Token 29: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02054760977625847
    2. ' -' → logprob: -3.89554762840271
    3. ' ' → logprob: -12.145547866821289
    4. '   ' → logprob: -16.14554786682129
    5. 'None' → logprob: -16.39554786682129
    6. '0' → logprob: -16.52054786682129
    7. ' ' → logprob: -17.27054786682129
    8. ' None' → logprob: -18.02054786682129
    9. '  ' → logprob: -18.14554786682129
    10. '−' → logprob: -18.14554786682129

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '-' → logprob: -12.250012397766113
    3. ' ' → logprob: -12.500012397766113
    4. ' -' → logprob: -12.625012397766113
    5. '```' → logprob: -15.937512397766113
    6. ')' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.06251335144043
    8. '2' → logprob: -17.12501335144043
    9. '  ' → logprob: -17.62501335144043
    10. '１' → logprob: -17.68751335144043

Token 31: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.554038941860199
    2. '}]' → logprob: -0.929038941860199
    3. '},' → logprob: -3.9290390014648438
    4. ' }]' → logprob: -5.179039001464844
    5. ',' → logprob: -6.429039001464844
    6. '}],' → logprob: -6.554039001464844
    7. ' }' → logprob: -6.804039001464844
    8. '})' → logprob: -7.929039001464844
    9. '   ' → logprob: -8.679039001464844
    10. ' ' → logprob: -9.304039001464844

Token 32: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.454043984413147
    2. ' for' → logprob: -1.204043984413147
    3. 'for' → logprob: -2.8290438652038574
    4. '}' → logprob: -6.079043865203857
    5. ',' → logprob: -6.204043865203857
    6. ')' → logprob: -7.579043865203857
    7. ' ]' → logprob: -8.704044342041016
    8. ',
' → logprob: -8.704044342041016
    9. ']
' → logprob: -9.079044342041016
    10. '```' → logprob: -9.079044342041016

Token 33: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3411334156990051
    2. '_' → logprob: -2.0911333560943604
    3. ' _' → logprob: -2.0911333560943604
    4. ' i' → logprob: -3.5911333560943604
    5. 'range' → logprob: -4.3411335945129395
    6. '_range' → logprob: -7.2161335945129395
    7. ' ' → logprob: -7.4661335945129395
    8. ' xrange' → logprob: -11.341133117675781
    9. ' in' → logprob: -11.466133117675781
    10. 'i' → logprob: -11.591133117675781

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006758709903806448
    2. 'in' → logprob: -5.006758689880371
    3. 'range' → logprob: -10.881758689880371
    4. ' ' → logprob: -11.131758689880371
    5. ' range' → logprob: -13.131758689880371
    6. '_' → logprob: -13.256758689880371
    7. ' _' → logprob: -13.256758689880371
    8. '<|end|>' → logprob: -13.381758689880371
    9. ' i' → logprob: -13.631758689880371
    10. 'i' → logprob: -14.381758689880371

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020678490400314
    2. ' range' → logprob: -2.3502068519592285
    3. '(range' → logprob: -16.97520637512207
    4. '	range' → logprob: -17.10020637512207
    5. ' ' → logprob: -17.60020637512207
    6. 'rang' → logprob: -19.22520637512207
    7. '```' → logprob: -19.22520637512207
    8. ')' → logprob: -19.85020637512207
    9. '_range' → logprob: -20.10020637512207
    10. '   ' → logprob: -20.22520637512207

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00043341092532500625
    2. '(' → logprob: -7.750433444976807
    3. 'N' → logprob: -13.375432968139648
    4. '(n' → logprob: -14.375432968139648
    5. '(
' → logprob: -15.000432968139648
    6. ' (' → logprob: -16.62543296813965
    7. ')' → logprob: -17.00043296813965
    8. '(len' → logprob: -17.87543296813965
    9. '((' → logprob: -18.37543296813965
    10. ']' → logprob: -18.87543296813965

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.980854959692806e-05
    2. ')])' → logprob: -10.500069618225098
    3. ')' → logprob: -10.625069618225098
    4. '')]' → logprob: -12.000069618225098
    5. '])]' → logprob: -12.500069618225098
    6. ']' → logprob: -13.125069618225098
    7. '])' → logprob: -13.250069618225098
    8. ')]
' → logprob: -13.250069618225098
    9. ')],' → logprob: -14.250069618225098
    10. ' )' → logprob: -14.375069618225098

Token 38: 'parent' (ID: 4903)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5800727605819702
    2. '
' → logprob: -0.8300727605819702
    3. ' for' → logprob: -5.58007287979126
    4. '
' → logprob: -8.580072402954102
    5. '```' → logprob: -9.580072402954102
    6. '<|end|>' → logprob: -10.455072402954102
    7. '

' → logprob: -11.080072402954102
    8. '' → logprob: -11.080072402954102
    9. ' 
' → logprob: -11.705072402954102
    10. '\n' → logprob: -11.830072402954102

Token 39: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2948783040046692
    2. '_' → logprob: -1.4198782444000244
    3. '[' → logprob: -5.5448784828186035
    4. ']' → logprob: -6.1698784828186035
    5. '_ids' → logprob: -6.6698784828186035
    6. ')' → logprob: -7.0448784828186035
    7. ' =' → logprob: -7.0448784828186035
    8. '[]' → logprob: -7.1698784828186035
    9. '_id' → logprob: -7.1698784828186035
    10. '_index' → logprob: -7.1698784828186035

Token 40: ' set' (ID: 920)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0797767639160156
    2. '[' → logprob: -1.2047767639160156
    3. '{}' → logprob: -1.4547767639160156
    4. ' [' → logprob: -2.2047767639160156
    5. ' [-' → logprob: -4.204776763916016
    6. ' {}' → logprob: -6.454776763916016
    7. '[]' → logprob: -8.829776763916016
    8. '{' → logprob: -9.329776763916016
    9. '[int' → logprob: -9.954776763916016
    10. ' []' → logprob: -10.954776763916016

Token 41: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.179569077678025e-05
    2. '()
' → logprob: -11.125041961669922
    3. '(' → logprob: -11.750041961669922
    4. '()]' → logprob: -11.750041961669922
    5. '([]' → logprob: -13.000041961669922
    6. ' ()' → logprob: -13.125041961669922
    7. '(),' → logprob: -13.625041961669922
    8. '()

' → logprob: -13.625041961669922
    9. '()<' → logprob: -14.000041961669922
    10. '()>' → logprob: -14.125041961669922

Token 42: ' for' (ID: 395)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7327833771705627
    2. '())' → logprob: -0.9827833771705627
    3. '()' → logprob: -2.857783317565918
    4. '(' → logprob: -3.107783317565918
    5. ')' → logprob: -3.857783317565918
    6. ')]' → logprob: -5.482783317565918
    7. 's' → logprob: -5.732783317565918
    8. 'range' → logprob: -5.857783317565918
    9. '([' → logprob: -6.607783317565918
    10. '])' → logprob: -6.732783317565918

Token 43: ' n' (ID: 297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005304669961333275
    2. 'range' → logprob: -5.25530481338501
    3. '(range' → logprob: -10.630304336547852
    4. '_' → logprob: -10.755304336547852
    5. '_range' → logprob: -11.505304336547852
    6. ' n' → logprob: -12.380304336547852
    7. ' _' → logprob: -12.505304336547852
    8. '	range' → logprob: -12.880304336547852
    9. ')' → logprob: -13.505304336547852
    10. ' xrange' → logprob: -14.005304336547852

Token 44: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08911601454019547
    2. ' in' → logprob: -2.839116096496582
    3. '(range' → logprob: -3.964116096496582
    4. 'range' → logprob: -4.964116096496582
    5. '_' → logprob: -8.089116096496582
    6. ')' → logprob: -8.964116096496582
    7. 'ot' → logprob: -9.339116096496582
    8. '_range' → logprob: -9.714116096496582
    9. 'in' → logprob: -9.839116096496582
    10. '(' → logprob: -9.964116096496582

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20151382684707642
    2. ' range' → logprob: -1.7015137672424316
    3. ')' → logprob: -9.70151424407959
    4. '(range' → logprob: -10.82651424407959
    5. '	range' → logprob: -11.57651424407959
    6. 'rang' → logprob: -12.82651424407959
    7. 'r' → logprob: -13.57651424407959
    8. 'ran' → logprob: -13.70151424407959
    9. '[' → logprob: -13.95151424407959
    10. '.range' → logprob: -14.07651424407959

Token 46: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006718571297824383
    2. '(' → logprob: -5.006718635559082
    3. ')' → logprob: -13.506718635559082
    4. '(n' → logprob: -14.006718635559082
    5. '(
' → logprob: -14.881718635559082
    6. ' (' → logprob: -15.631718635559082
    7. 'N' → logprob: -15.756718635559082
    8. '(

' → logprob: -15.881718635559082
    9. '(len' → logprob: -16.631717681884766
    10. '```' → logprob: -17.131717681884766

Token 47: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3247315585613251
    2. ')]' → logprob: -1.4497315883636475
    3. '))' → logprob: -3.3247315883636475
    4. ')}' → logprob: -5.949731349945068
    5. ')])' → logprob: -6.324731349945068
    6. ' )' → logprob: -6.449731349945068
    7. '])' → logprob: -7.574731349945068
    8. '())' → logprob: -10.324731826782227
    9. 'if' → logprob: -10.449731826782227
    10. '})' → logprob: -10.699731826782227

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029100200161337852
    2. ' for' → logprob: -4.02910041809082
    3. '
' → logprob: -4.52910041809082
    4. '<|end|>' → logprob: -10.40410041809082
    5. '```' → logprob: -10.52910041809082
    6. '\n' → logprob: -10.77910041809082
    7. '	for' → logprob: -12.15410041809082
    8. ')' → logprob: -12.77910041809082
    9. '
' → logprob: -12.77910041809082
    10. '<|end|>' → logprob: -13.27910041809082

Token 49: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.538892388343811
    2. ' _' → logprob: -0.913892388343811
    3. ' ' → logprob: -4.7888922691345215
    4. '_' → logprob: -5.1638922691345215
    5. ' n' → logprob: -6.9138922691345215
    6. ' range' → logprob: -8.66389274597168
    7. 'i' → logprob: -8.66389274597168
    8. ' node' → logprob: -9.03889274597168
    9. '  ' → logprob: -10.16389274597168
    10. ' ‌' → logprob: -10.66389274597168

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22978326678276062
    2. 'in' → logprob: -1.729783296585083
    3. ' ' → logprob: -4.104783058166504
    4. ' i' → logprob: -5.729783058166504
    5. 'n' → logprob: -5.854783058166504
    6. '_' → logprob: -6.229783058166504
    7. ' n' → logprob: -6.354783058166504
    8. '  ' → logprob: -6.729783058166504
    9. ' _' → logprob: -9.229783058166504
    10. 'i' → logprob: -9.604783058166504

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759466886520386
    2. 'range' → logprob: -0.8259466886520386
    3. '(range' → logprob: -12.575946807861328
    4. '	range' → logprob: -14.075946807861328
    5. '_range' → logprob: -14.325946807861328
    6. ' ran' → logprob: -14.450946807861328
    7. ' ' → logprob: -14.575946807861328
    8. 'ran' → logprob: -14.700946807861328
    9. 'r' → logprob: -15.325946807861328
    10. 'rang' → logprob: -15.575946807861328

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06201843544840813
    2. '(' → logprob: -2.812018394470215
    3. ' (' → logprob: -10.187018394470215
    4. '(
' → logprob: -11.812018394470215
    5. '(n' → logprob: -12.437018394470215
    6. 'N' → logprob: -14.562018394470215
    7. '(int' → logprob: -15.312018394470215
    8. '(

' → logprob: -15.437018394470215
    9. ' N' → logprob: -15.812018394470215
    10. '()' → logprob: -15.812018394470215

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011211648816242814
    2. ' ):' → logprob: -7.7511210441589355
    3. '):
' → logprob: -7.8761210441589355
    4. ')' → logprob: -8.126121520996094
    5. ':' → logprob: -11.751121520996094
    6. '-' → logprob: -12.876121520996094
    7. '():' → logprob: -13.501121520996094
    8. '):
' → logprob: -13.626121520996094
    9. ' )' → logprob: -14.876121520996094
    10. ''):' → logprob: -15.626121520996094

Token 54: '   ' (ID: 271)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.37830132246017456
    2. ' v' → logprob: -2.2533013820648193
    3. ' u' → logprob: -2.3783013820648193
    4. '   ' → logprob: -3.6283013820648193
    5. 'node' → logprob: -3.8783013820648193
    6. 'u' → logprob: -4.12830114364624
    7. 'v' → logprob: -4.25330114364624
    8. ' line' → logprob: -4.25330114364624
    9. 'a' → logprob: -5.75330114364624
    10. ' i' → logprob: -6.12830114364624

Token 55: ' inp' (ID: 64450)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9623785018920898
    2. ' node' → logprob: -0.9623785018920898
    3. 'node' → logprob: -2.58737850189209
    4. 'v' → logprob: -2.83737850189209
    5. ' u' → logprob: -2.96237850189209
    6. 'u' → logprob: -4.46237850189209
    7. ' a' → logprob: -4.83737850189209
    8. 'a' → logprob: -5.08737850189209
    9. ' id' → logprob: -5.33737850189209
    10. ' index' → logprob: -5.33737850189209

Token 56: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.5031682848930359
    2. 'u' → logprob: -1.2531683444976807
    3. ' =' → logprob: -2.6281683444976807
    4. '=' → logprob: -3.5031683444976807
    5. 's' → logprob: -6.378168106079102
    6. ' ut' → logprob: -7.253168106079102
    7. 'uts' → logprob: -7.503168106079102
    8. '_ut' → logprob: -7.503168106079102
    9. 'p' → logprob: -7.628168106079102
    10. '_' → logprob: -7.753168106079102

Token 57: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.05239786207675934
    2. 'list' → logprob: -3.0523979663848877
    3. ' input' → logprob: -5.802397727966309
    4. 'input' → logprob: -7.677397727966309
    5. ' tuple' → logprob: -8.302397727966309
    6. ' map' → logprob: -9.927397727966309
    7. 'map' → logprob: -11.677397727966309
    8. 'tuple' → logprob: -11.802397727966309
    9. ' [' → logprob: -13.302397727966309
    10. '=list' → logprob: -13.677397727966309

Token 58: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.676292231422849e-05
    2. ']int' → logprob: -11.875017166137695
    3. '*' → logprob: -12.000017166137695
    4. ' int' → logprob: -13.000017166137695
    5. '[int' → logprob: -14.750017166137695
    6. '(int' → logprob: -14.875017166137695
    7. 'input' → logprob: -15.625017166137695
    8. ')' → logprob: -16.250017166137695
    9. ']' → logprob: -16.375017166137695
    10. '```' → logprob: -16.625017166137695

Token 59: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.330326646566391
    2. '(i' → logprob: -1.3303266763687134
    3. '(input' → logprob: -4.580326557159424
    4. '(' → logprob: -5.330326557159424
    5. '(a' → logprob: -7.080326557159424
    6. '(s' → logprob: -8.705327033996582
    7. '(_)' → logprob: -8.705327033996582
    8. '(n' → logprob: -9.205327033996582
    9. '(inp' → logprob: -9.580327033996582
    10. '()]' → logprob: -9.580327033996582

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05338495969772339
    2. '()' → logprob: -3.678385019302368
    3. ' for' → logprob: -4.303384780883789
    4. 'for' → logprob: -4.428384780883789
    5. '(n' → logprob: -8.553384780883789
    6. '())' → logprob: -8.803384780883789
    7. 'input' → logprob: -8.928384780883789
    8. 'i' → logprob: -8.928384780883789
    9. 'n' → logprob: -9.303384780883789
    10. '(x' → logprob: -9.678384780883789

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6955580115318298
    2. '()' → logprob: -1.3205580711364746
    3. 'for' → logprob: -1.9455580711364746
    4. ')' → logprob: -2.4455580711364746
    5. ']' → logprob: -6.695558071136475
    6. '(n' → logprob: -7.070558071136475
    7. 'i' → logprob: -7.695558071136475
    8. 'x' → logprob: -7.820558071136475
    9. 'n' → logprob: -8.445557594299316
    10. 'input' → logprob: -8.695557594299316

Token 62: ' n' (ID: 297)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01815837249159813
    2. 'input' → logprob: -4.018158435821533
    3. '(input' → logprob: -11.768157958984375
    4. '=input' → logprob: -14.518157958984375
    5. '_input' → logprob: -15.893157958984375
    6. '	input' → logprob: -17.018157958984375
    7. ' raw' → logprob: -17.768157958984375
    8. ',input' → logprob: -17.893157958984375
    9. ' range' → logprob: -18.018157958984375
    10. ' ' → logprob: -18.143157958984375

Token 63: ' in' (ID: 306)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.312881737947464
    2. 'input' → logprob: -1.8128817081451416
    3. '=input' → logprob: -2.4378817081451416
    4. '(' → logprob: -4.562881946563721
    5. ' input' → logprob: -5.062881946563721
    6. '()' → logprob: -7.562881946563721
    7. '=' → logprob: -8.687881469726562
    8. ')' → logprob: -9.187881469726562
    9. '_' → logprob: -9.562881469726562
    10. '().' → logprob: -9.687881469726562

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804183006286621
    2. ' input' → logprob: -3.288041830062866
    3. '(input' → logprob: -15.038042068481445
    4. '=input' → logprob: -17.163042068481445
    5. 'range' → logprob: -17.788042068481445
    6. ' ' → logprob: -17.913042068481445
    7. '_input' → logprob: -18.913042068481445
    8. '	input' → logprob: -19.038042068481445
    9. ',input' → logprob: -19.038042068481445
    10. '<input' → logprob: -19.413042068481445

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002055927412584424
    2. '()' → logprob: -6.252056121826172
    3. '()]' → logprob: -9.127056121826172
    4. '())' → logprob: -11.002056121826172
    5. '()].' → logprob: -13.377056121826172
    6. '(' → logprob: -16.002056121826172
    7. '()
' → logprob: -16.002056121826172
    8. '()-' → logprob: -17.252056121826172
    9. '()][' → logprob: -17.502056121826172
    10. '()).' → logprob: -17.877056121826172

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015899618156254292
    2. 'strip' → logprob: -6.501589775085449
    3. 'rstrip' → logprob: -9.37658977508545
    4. ' split' → logprob: -13.25158977508545
    5. '(split' → logprob: -14.12658977508545
    6. 'spl' → logprob: -15.75158977508545
    7. ' ' → logprob: -16.126590728759766
    8. ')' → logprob: -16.126590728759766
    9. 's' → logprob: -16.376590728759766
    10. 'read' → logprob: -17.376590728759766

Token 67: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.020213661715388298
    2. '()' → logprob: -4.520213603973389
    3. '())' → logprob: -4.770213603973389
    4. '(' → logprob: -7.520213603973389
    5. '('' → logprob: -9.520214080810547
    6. ')]' → logprob: -11.145214080810547
    7. '()]
' → logprob: -11.645214080810547
    8. '(),' → logprob: -13.145214080810547
    9. ']' → logprob: -13.395214080810547
    10. '()],' → logprob: -14.145214080810547

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1831817775964737
    2. '[' → logprob: -3.3081817626953125
    3. ',' → logprob: -3.4331817626953125
    4. '	tree' → logprob: -4.3081817626953125
    5. ' ' → logprob: -4.6831817626953125
    6. '[node' → logprob: -4.8081817626953125
    7. 'id' → logprob: -4.9331817626953125
    8. 'i' → logprob: -5.1831817626953125
    9. ' node' → logprob: -5.1831817626953125
    10. '	node' → logprob: -5.4331817626953125

Token 69: ' tree' (ID: 8165)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.9394837617874146
    2. 'node' → logprob: -1.1894837617874146
    3. 'u' → logprob: -2.564483642578125
    4. 'i' → logprob: -3.064483642578125
    5. 'index' → logprob: -3.314483642578125
    6. ' i' → logprob: -3.439483642578125
    7. 'id' → logprob: -4.064483642578125
    8. ' u' → logprob: -4.064483642578125
    9. ' index' → logprob: -4.439483642578125
    10. ' tree' → logprob: -4.689483642578125

Token 70: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.03861534968018532
    2. '[' → logprob: -3.2886154651641846
    3. '[input' → logprob: -8.163615226745605
    4. '[
' → logprob: -9.788615226745605
    5. '[]' → logprob: -9.913615226745605
    6. '[int' → logprob: -10.038615226745605
    7. '```' → logprob: -10.038615226745605
    8. '[node' → logprob: -10.913615226745605
    9. '[ip' → logprob: -11.288615226745605
    10. '[token' → logprob: -11.413615226745605

Token 71: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.596781946020201e-05
    2. 'put' → logprob: -10.375045776367188
    3. '[' → logprob: -12.375045776367188
    4. 'п' → logprob: -12.625045776367188
    5. '[p' → logprob: -13.000045776367188
    6. ']' → logprob: -14.375045776367188
    7. '(inp' → logprob: -14.625045776367188
    8. 't' → logprob: -14.750045776367188
    9. 'puts' → logprob: -14.750045776367188
    10. '```' → logprob: -14.875045776367188

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035250463406555355
    2. ']' → logprob: -9.37535285949707
    3. '][' → logprob: -9.50035285949707
    4. '1' → logprob: -9.62535285949707
    5. ' [' → logprob: -10.37535285949707
    6. '2' → logprob: -10.87535285949707
    7. '```' → logprob: -11.50035285949707
    8. '(' → logprob: -11.75035285949707
    9. '['' → logprob: -11.87535285949707
    10. '0' → logprob: -11.87535285949707

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032286944333463907
    2. '1' → logprob: -5.753228664398193
    3. ' ' → logprob: -10.628229141235352
    4. ']' → logprob: -11.503229141235352
    5. '[' → logprob: -12.628229141235352
    6. '2' → logprob: -12.628229141235352
    7. '   ' → logprob: -12.878229141235352
    8. '```' → logprob: -13.440729141235352
    9. '][' → logprob: -13.565729141235352
    10. ']]' → logprob: -14.878229141235352

Token 74: ']]' (ID: 8928)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.5401267409324646
    2. ']]' → logprob: -0.9151267409324646
    3. ']' → logprob: -4.290126800537109
    4. ']][' → logprob: -6.540126800537109
    5. '']]['' → logprob: -6.915126800537109
    6. '['' → logprob: -8.66512680053711
    7. ']]=' → logprob: -8.79012680053711
    8. ' ]' → logprob: -9.04012680053711
    9. ')]' → logprob: -9.91512680053711
    10. ')['' → logprob: -9.91512680053711

Token 75: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0011239065788686275
    2. '.update' → logprob: -7.126123905181885
    3. 'update' → logprob: -8.376124382019043
    4. ']['' → logprob: -10.626124382019043
    5. ''s' → logprob: -11.126124382019043
    6. ''' → logprob: -11.251124382019043
    7. '[' → logprob: -11.501124382019043
    8. ' ['' → logprob: -11.751124382019043
    9. '=' → logprob: -12.626124382019043
    10. ' update' → logprob: -12.751124382019043

Token 76: 'left' (ID: 4530)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004696645773947239
    2. 'left' → logprob: -5.379696846008301
    3. 'value' → logprob: -9.8796968460083
    4. 'key' → logprob: -11.0046968460083
    5. 'right' → logprob: -13.5046968460083
    6. ' parent' → logprob: -13.5046968460083
    7. 'index' → logprob: -13.7546968460083
    8. 'id' → logprob: -13.8796968460083
    9. 'p' → logprob: -14.3796968460083
    10. ''' → logprob: -14.3796968460083

Token 77: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20312605798244476
    2. '']' → logprob: -1.703126072883606
    3. ' ]' → logprob: -7.453125953674316
    4. '']=' → logprob: -7.703125953674316
    5. ']=' → logprob: -7.703125953674316
    6. '=' → logprob: -9.578125953674316
    7. '"]' → logprob: -9.703125953674316
    8. ' ']' → logprob: -10.203125953674316
    9. ' =' → logprob: -10.328125953674316
    10. '`]' → logprob: -10.953125953674316

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931619644165039
    2. ' =' → logprob: -0.6931619644165039
    3. ',' → logprob: -11.568161964416504
    4. ' ' → logprob: -13.318161964416504
    5. ' =
' → logprob: -13.318161964416504
    6. '=
' → logprob: -14.318161964416504
    7. '=input' → logprob: -15.193161964416504
    8. '=int' → logprob: -15.193161964416504
    9. '＝' → logprob: -15.693161964416504
    10. '=

' → logprob: -15.818161964416504

Token 79: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.22541937232017517
    2. ' inp' → logprob: -1.6004194021224976
    3. '(inp' → logprob: -12.100419044494629
    4. 'Inp' → logprob: -15.100419044494629
    5. 'input' → logprob: -15.850419044494629
    6. ' ' → logprob: -16.225419998168945
    7. 'int' → logprob: -16.350419998168945
    8. '   ' → logprob: -16.600419998168945
    9. ' in' → logprob: -16.725419998168945
    10. '[in' → logprob: -16.850419998168945

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3876481354236603
    2. '1' → logprob: -1.137648105621338
    3. '   ' → logprob: -7.762648105621338
    4. '2' → logprob: -8.637648582458496
    5. ' ' → logprob: -9.137648582458496
    6. '```' → logprob: -10.387648582458496
    7. '(' → logprob: -11.512648582458496
    8. ' [' → logprob: -12.137648582458496
    9. '[
' → logprob: -12.387648582458496
    10. '()[' → logprob: -12.512648582458496

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. '2' → logprob: -11.500019073486328
    3. ' ' → logprob: -11.750019073486328
    4. '１' → logprob: -15.062519073486328
    5. ']' → logprob: -15.625019073486328
    6. '   ' → logprob: -15.812519073486328
    7. '```' → logprob: -16.437519073486328
    8. '  ' → logprob: -16.937519073486328
    9. '۱' → logprob: -16.937519073486328
    10. '[' → logprob: -17.187519073486328

Token 82: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7484444975852966
    2. '<|end|>' → logprob: -0.7484444975852966
    3. ']' → logprob: -3.4984445571899414
    4. '<|end|>' → logprob: -4.623444557189941
    5. '}' → logprob: -5.498444557189941
    6. ' ]' → logprob: -5.748444557189941
    7. ' )' → logprob: -5.998444557189941
    8. ' ' → logprob: -6.123444557189941
    9. ',' → logprob: -7.123444557189941
    10. '   ' → logprob: -8.748444557189941

Token 83: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0008583390736021101
    2. ' tree' → logprob: -7.375858306884766
    3. 'if' → logprob: -9.125858306884766
    4. '	tree' → logprob: -10.250858306884766
    5. '<|end|>' → logprob: -10.750858306884766
    6. '   ' → logprob: -11.000858306884766
    7. ' ' → logprob: -11.875858306884766
    8. ' if' → logprob: -12.000858306884766
    9. '```' → logprob: -12.125858306884766
    10. '(tree' → logprob: -12.125858306884766

Token 85: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.6074491143226624
    2. '[' → logprob: -0.8574491143226624
    3. '['' → logprob: -3.4824490547180176
    4. '[input' → logprob: -9.482449531555176
    5. '```' → logprob: -10.732449531555176
    6. '[]' → logprob: -10.732449531555176
    7. '[int' → logprob: -10.982449531555176
    8. 'in' → logprob: -10.982449531555176
    9. '[ind' → logprob: -11.107449531555176
    10. 'inp' → logprob: -11.232449531555176

Token 86: 'p' (ID: 79)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02082376927137375
    2. '[' → logprob: -4.520823955535889
    3. '0' → logprob: -5.020823955535889
    4. '1' → logprob: -5.895823955535889
    5. ' ' → logprob: -8.89582347869873
    6. '3' → logprob: -9.39582347869873
    7. '```' → logprob: -9.89582347869873
    8. ']' → logprob: -10.52082347869873
    9. '][' → logprob: -10.52082347869873
    10. '4' → logprob: -11.52082347869873

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047511752927675843
    2. '1' → logprob: -8.00047492980957
    3. '][' → logprob: -9.75047492980957
    4. '2' → logprob: -10.37547492980957
    5. '[
' → logprob: -10.87547492980957
    6. '```' → logprob: -10.87547492980957
    7. ']' → logprob: -12.37547492980957
    8. '3' → logprob: -13.62547492980957
    9. '0' → logprob: -13.75047492980957
    10. '`' → logprob: -14.25047492980957

Token 88: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020771251001860946
    2. ' ' → logprob: -8.875207901000977
    3. '1' → logprob: -10.625207901000977
    4. '3' → logprob: -10.875207901000977
    5. '```' → logprob: -11.875207901000977
    6. '   ' → logprob: -12.312707901000977
    7. '  ' → logprob: -13.187707901000977
    8. '-' → logprob: -13.312707901000977
    9. '0' → logprob: -13.375207901000977
    10. ']' → logprob: -13.687707901000977

Token 89: ']]' (ID: 8928)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.003136247396469116
    2. ']' → logprob: -6.128136157989502
    3. '][' → logprob: -7.253136157989502
    4. ']]' → logprob: -9.25313663482666
    5. '['' → logprob: -10.50313663482666
    6. ']'' → logprob: -10.62813663482666
    7. '']['' → logprob: -10.75313663482666
    8. ')['' → logprob: -11.25313663482666
    9. '   ' → logprob: -11.37813663482666
    10. '[' → logprob: -11.62813663482666

Token 90: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.03697007894515991
    2. ']['' → logprob: -3.4119701385498047
    3. ''' → logprob: -6.661970138549805
    4. ''s' → logprob: -6.786970138549805
    5. '[' → logprob: -7.411970138549805
    6. ']' → logprob: -9.661970138549805
    7. '   ' → logprob: -9.786970138549805
    8. '']['' → logprob: -9.911970138549805
    9. ')['' → logprob: -9.911970138549805
    10. ' ' → logprob: -10.661970138549805

Token 91: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.018526704981923103
    2. 'r' → logprob: -4.018526554107666
    3. 'rig' → logprob: -8.018527030944824
    4. 'ri' → logprob: -10.893527030944824
    5. '2' → logprob: -11.518527030944824
    6. ' right' → logprob: -11.893527030944824
    7. '1' → logprob: -12.768527030944824
    8. ''' → logprob: -13.893527030944824
    9. 'left' → logprob: -14.143527030944824
    10. '[right' → logprob: -14.143527030944824

Token 92: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47493723034858704
    2. '']' → logprob: -0.9749372005462646
    3. ' ]' → logprob: -8.099937438964844
    4. '']=' → logprob: -8.474937438964844
    5. ']=' → logprob: -9.099937438964844
    6. '=' → logprob: -9.474937438964844
    7. '"]' → logprob: -9.474937438964844
    8. ' ']' → logprob: -10.474937438964844
    9. '`]' → logprob: -10.849937438964844
    10. '<|end|>' → logprob: -10.974937438964844

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327372789382935
    2. '=' → logprob: -1.3132736682891846
    3. ' ' → logprob: -11.438273429870605
    4. ' =
' → logprob: -14.563273429870605
    5. '=
' → logprob: -15.563273429870605
    6. '=input' → logprob: -16.063274383544922
    7. ',' → logprob: -16.813274383544922
    8. ' ==' → logprob: -17.063274383544922
    9. '=

' → logprob: -17.063274383544922
    10. '<|end|>' → logprob: -17.188274383544922

Token 94: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.009910850785672665
    2. ' ' → logprob: -5.009911060333252
    3. 'inp' → logprob: -5.759911060333252
    4. '(inp' → logprob: -11.134910583496094
    5. ' ' → logprob: -11.384910583496094
    6. ' in' → logprob: -12.009910583496094
    7. ' 
' → logprob: -13.134910583496094
    8. 's' → logprob: -14.384910583496094
    9. ''' → logprob: -14.509910583496094
    10. 'Inp' → logprob: -14.759910583496094

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007236333331093192
    2. '2' → logprob: -7.250723838806152
    3. '```' → logprob: -11.625723838806152
    4. ' ' → logprob: -14.000723838806152
    5. ' [' → logprob: -14.000723838806152
    6. '[
' → logprob: -14.125723838806152
    7. '3' → logprob: -14.375723838806152
    8. '`' → logprob: -15.000723838806152
    9. 's' → logprob: -15.125723838806152
    10. '   ' → logprob: -15.250723838806152

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -15.562511444091797
    4. '  ' → logprob: -16.000011444091797
    5. '２' → logprob: -16.312511444091797
    6. '۲' → logprob: -16.500011444091797
    7. '```' → logprob: -16.625011444091797
    8. '-' → logprob: -17.187511444091797
    9. '3' → logprob: -17.312511444091797
    10. '[' → logprob: -17.312511444091797

Token 97: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16594672203063965
    2. ']' → logprob: -2.9159467220306396
    3. '<|end|>' → logprob: -2.9159467220306396
    4. '}' → logprob: -3.1659467220306396
    5. '
' → logprob: -6.790946960449219
    6. '']' → logprob: -7.915946960449219
    7. ')
' → logprob: -8.040946960449219
    8. '<|end|>' → logprob: -8.290946960449219
    9. '```' → logprob: -8.790946960449219
    10. '）' → logprob: -10.165946960449219

Token 98: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7077137231826782
    2. 'for' → logprob: -1.5827137231826782
    3. 'parent' → logprob: -1.9577137231826782
    4. '   ' → logprob: -2.4577136039733887
    5. '
' → logprob: -3.5827136039733887
    6. '    
' → logprob: -4.457713603973389
    7. ' if' → logprob: -4.707713603973389
    8. ' ' → logprob: -4.832713603973389
    9. ' 
' → logprob: -4.832713603973389
    10. '  
' → logprob: -6.082713603973389

Token 99: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09289824217557907
    2. 'parent' → logprob: -2.71789813041687
    3. 'for' → logprob: -3.84289813041687
    4. '   ' → logprob: -7.217898368835449
    5. ' if' → logprob: -7.717898368835449
    6. ' parent' → logprob: -10.21789836883545
    7. '```' → logprob: -10.71789836883545
    8. ' for' → logprob: -11.34289836883545
    9. 'If' → logprob: -12.84289836883545
    10. ' ' → logprob: -13.09289836883545

Token 100: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.006742254365235567
    2. 'inp' → logprob: -5.256742477416992
    3. ' tree' → logprob: -6.881742477416992
    4. '(inp' → logprob: -8.256742477416992
    5. ' in' → logprob: -9.256742477416992
    6. ' ' → logprob: -9.631742477416992
    7. 'tree' → logprob: -11.131742477416992
    8. ' ' → logprob: -11.506742477416992
    9. ' i' → logprob: -11.631742477416992
    10. '  ' → logprob: -12.256742477416992

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008364312816411257
    2. '1' → logprob: -7.125836372375488
    3. '```' → logprob: -10.875836372375488
    4. '[
' → logprob: -12.000836372375488
    5. ' [' → logprob: -13.625836372375488
    6. '``' → logprob: -13.875836372375488
    7. '`' → logprob: -14.250836372375488
    8. '][' → logprob: -14.625836372375488
    9. '   ' → logprob: -14.750836372375488
    10. '(' → logprob: -15.125836372375488

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.625045776367188
    3. '[' → logprob: -11.125045776367188
    4. '   ' → logprob: -12.875045776367188
    5. '0' → logprob: -13.437545776367188
    6. '2' → logprob: -14.250045776367188
    7. '```' → logprob: -14.812545776367188
    8. '
' → logprob: -15.312545776367188
    9. '`' → logprob: -15.562545776367188
    10. '>' → logprob: -15.812545776367188

Token 103: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5775009393692017
    2. '!=' → logprob: -1.2025009393692017
    3. ' ' → logprob: -2.327500820159912
    4. ']' → logprob: -4.327500820159912
    5. '!=-' → logprob: -4.327500820159912
    6. ')' → logprob: -4.827500820159912
    7. '>' → logprob: -6.077500820159912
    8. ']!=' → logprob: -6.702500820159912
    9. ')!=' → logprob: -7.452500820159912
    10. '}' → logprob: -7.577500820159912

Token 104: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11873156577348709
    2. ' !=' → logprob: -2.2437314987182617
    3. '!=-' → logprob: -5.868731498718262
    4. '>' → logprob: -6.493731498718262
    5. ' ' → logprob: -7.618731498718262
    6. '=' → logprob: -8.118731498718262
    7. '>=' → logprob: -8.118731498718262
    8. '!==' → logprob: -8.993731498718262
    9. '!' → logprob: -9.368731498718262
    10. ']!=' → logprob: -9.868731498718262

Token 105: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011052536778151989
    2. ' -' → logprob: -4.51105260848999
    3. ' ' → logprob: -12.386052131652832
    4. '−' → logprob: -14.886052131652832
    5. '   ' → logprob: -15.886052131652832
    6. '  ' → logprob: -17.01105308532715
    7. '```' → logprob: -17.26105308532715
    8. '‌' → logprob: -17.57355308532715
    9. '	' → logprob: -17.63605308532715
    10. '
' → logprob: -18.13605308532715

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.250008583068848
    3. '-' → logprob: -12.875008583068848
    4. ' -' → logprob: -14.625008583068848
    5. '```' → logprob: -14.750008583068848
    6. '   ' → logprob: -16.50000762939453
    7. '2' → logprob: -16.93750762939453
    8. '<|end|>' → logprob: -17.31250762939453
    9. '  ' → logprob: -17.81250762939453
    10. '１' → logprob: -18.00000762939453

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02080882340669632
    2. ':
' → logprob: -3.8958089351654053
    3. ' :' → logprob: -8.770809173583984
    4. '):' → logprob: -10.145809173583984
    5. ' :
' → logprob: -10.645809173583984
    6. '):
' → logprob: -11.395809173583984
    7. ')' → logprob: -11.520809173583984
    8. '   ' → logprob: -12.145809173583984
    9. ':
' → logprob: -12.145809173583984
    10. 'parent' → logprob: -12.270809173583984

Token 108: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8257924318313599
    2. ' parent' → logprob: -1.2007924318313599
    3. 'parent' → logprob: -1.5757924318313599
    4. '
' → logprob: -3.4507923126220703
    5. '       ' → logprob: -4.57579231262207
    6. '	parent' → logprob: -4.70079231262207
    7. ' ' → logprob: -7.32579231262207
    8. '    
' → logprob: -7.45079231262207
    9. '```' → logprob: -7.57579231262207
    10. ' 
' → logprob: -8.20079231262207

Token 109: ' tree' (ID: 8165)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6326585412025452
    2. 'parent' → logprob: -0.7576585412025452
    3. '   ' → logprob: -10.507658958435059
    4. '	parent' → logprob: -11.882658958435059
    5. 'p' → logprob: -12.132658958435059
    6. 'paren' → logprob: -12.132658958435059
    7. '
' → logprob: -13.382658958435059
    8. '(parent' → logprob: -13.632658958435059
    9. ' parents' → logprob: -13.757658958435059
    10. '       ' → logprob: -14.007658958435059

Token 110: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.06710758060216904
    2. '[' → logprob: -2.817107677459717
    3. '['' → logprob: -5.692107677459717
    4. 'inp' → logprob: -6.692107677459717
    5. '[i' → logprob: -9.567107200622559
    6. '[input' → logprob: -9.567107200622559
    7. '[parent' → logprob: -9.817107200622559
    8. 'in' → logprob: -10.192107200622559
    9. '][' → logprob: -10.317107200622559
    10. '[int' → logprob: -10.442107200622559

Token 111: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13071607053279877
    2. '[' → logprob: -2.13071608543396
    3. 'put' → logprob: -6.255715847015381
    4. 'inp' → logprob: -7.505715847015381
    5. '1' → logprob: -7.630715847015381
    6. 'п' → logprob: -9.255716323852539
    7. 'pt' → logprob: -9.255716323852539
    8. ']' → logprob: -9.630716323852539
    9. '[p' → logprob: -9.630716323852539
    10. '[in' → logprob: -9.755716323852539

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005317362025380135
    2. '0' → logprob: -5.505317211151123
    3. '1' → logprob: -7.255317211151123
    4. '][' → logprob: -7.630317211151123
    5. '```' → logprob: -11.005317687988281
    6. '   ' → logprob: -12.255317687988281
    7. '[
' → logprob: -12.255317687988281
    8. ']' → logprob: -12.380317687988281
    9. ' [' → logprob: -12.880317687988281
    10. ' ' → logprob: -13.005317687988281

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003444024478085339
    2. '0' → logprob: -8.000344276428223
    3. ' ' → logprob: -12.625344276428223
    4. '2' → logprob: -12.937844276428223
    5. '[' → logprob: -14.375344276428223
    6. ']' → logprob: -14.625344276428223
    7. '   ' → logprob: -14.687844276428223
    8. '```' → logprob: -15.187844276428223
    9. '-' → logprob: -15.250344276428223
    10. '' → logprob: -15.375344276428223

Token 114: ']]' (ID: 8928)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.007236378733068705
    2. ''' → logprob: -5.507236480712891
    3. '']['' → logprob: -7.007236480712891
    4. ']'' → logprob: -7.132236480712891
    5. ''s' → logprob: -7.757236480712891
    6. ']' → logprob: -7.757236480712891
    7. ' ]' → logprob: -8.88223648071289
    8. ''t' → logprob: -9.00723648071289
    9. '']' → logprob: -9.13223648071289
    10. '][' → logprob: -9.38223648071289

Token 115: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0020063186530023813
    2. ''s' → logprob: -6.752006530761719
    3. ']['' → logprob: -7.752006530761719
    4. ''' → logprob: -7.877006530761719
    5. ''t' → logprob: -12.377006530761719
    6. '[' → logprob: -12.377006530761719
    7. '
' → logprob: -12.752006530761719
    8. ''d' → logprob: -13.002006530761719
    9. '`' → logprob: -13.377006530761719
    10. '{'' → logprob: -13.377006530761719

Token 116: 'parent' (ID: 4903)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.07395540177822113
    2. 's' → logprob: -2.8239552974700928
    3. 'parent' → logprob: -4.448955535888672
    4. ''' → logprob: -8.823955535888672
    5. '['' → logprob: -9.698955535888672
    6. ' '' → logprob: -11.823955535888672
    7. 'siblings' → logprob: -12.948955535888672
    8. '‘s' → logprob: -13.823955535888672
    9. ' ' → logprob: -14.198955535888672
    10. '[parent' → logprob: -14.573955535888672

Token 117: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.12863151729106903
    2. ']' → logprob: -2.253631591796875
    3. '']=' → logprob: -4.378631591796875
    4. '=' → logprob: -6.628631591796875
    5. ' ]' → logprob: -7.128631591796875
    6. ']=' → logprob: -7.253631591796875
    7. ' =' → logprob: -9.503631591796875
    8. ''' → logprob: -9.753631591796875
    9. '"]' → logprob: -9.753631591796875
    10. '']='' → logprob: -9.878631591796875

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326403021812439
    2. ' =' → logprob: -0.7576403021812439
    3. ']' → logprob: -10.63263988494873
    4. ' ' → logprob: -12.13263988494873
    5. ']=' → logprob: -12.13263988494873
    6. ' ]' → logprob: -13.63263988494873
    7. ',' → logprob: -14.38263988494873
    8. ')' → logprob: -14.38263988494873
    9. '=

' → logprob: -14.38263988494873
    10. '<|end|>' → logprob: -14.75763988494873

Token 119: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.0232801903039217
    2. ' inp' → logprob: -3.773280143737793
    3. '(inp' → logprob: -11.148280143737793
    4. 'Inp' → logprob: -12.148280143737793
    5. '[in' → logprob: -12.273280143737793
    6. '0' → logprob: -13.148280143737793
    7. 'input' → logprob: -13.148280143737793
    8. '   ' → logprob: -13.523280143737793
    9. ' ' → logprob: -14.148280143737793
    10. 'in' → logprob: -14.148280143737793

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07894575595855713
    2. '0' → logprob: -2.5789456367492676
    3. '```' → logprob: -11.078946113586426
    4. ' ' → logprob: -11.203946113586426
    5. '`' → logprob: -11.578946113586426
    6. '(' → logprob: -11.703946113586426
    7. '[
' → logprob: -13.703946113586426
    8. ' [' → logprob: -13.953946113586426
    9. '\[' → logprob: -14.203946113586426
    10. '.' → logprob: -14.453946113586426

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '۰' → logprob: -18.125001907348633
    5. '{' → logprob: -19.312501907348633
    6. '```' → logprob: -19.312501907348633
    7. '０' → logprob: -19.437501907348633
    8. '০' → logprob: -19.500001907348633
    9. '
' → logprob: -19.750001907348633
    10. '<|end|>' → logprob: -19.812501907348633

Token 122: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6518332362174988
    2. ')' → logprob: -0.7768332362174988
    3. ')
' → logprob: -4.4018330574035645
    4. ']' → logprob: -5.9018330574035645
    5. '
' → logprob: -5.9018330574035645
    6. '<|end|>' → logprob: -7.5268330574035645
    7. '   ' → logprob: -8.401833534240723
    8. ',' → logprob: -9.026833534240723
    9. '           ' → logprob: -9.401833534240723
    10. ']
' → logprob: -9.651833534240723

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026874210685491562
    2. '
' → logprob: -3.651874303817749
    3. '   ' → logprob: -8.651874542236328
    4. ' ' → logprob: -9.276874542236328
    5. '        
' → logprob: -9.651874542236328
    6. '<|end|>' → logprob: -10.151874542236328
    7. ' and' → logprob: -10.651874542236328
    8. 'and' → logprob: -10.901874542236328
    9. '      ' → logprob: -11.151874542236328
    10. '
' → logprob: -11.151874542236328

Token 124: ' tree' (ID: 8165)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004118769429624081
    2. ' parent' → logprob: -5.504118919372559
    3. '   ' → logprob: -10.629118919372559
    4. '
' → logprob: -12.754118919372559
    5. '       ' → logprob: -12.754118919372559
    6. 'if' → logprob: -12.754118919372559
    7. 'paren' → logprob: -12.754118919372559
    8. '(parent' → logprob: -14.254118919372559
    9. '	parent' → logprob: -14.254118919372559
    10. '.parent' → logprob: -14.379118919372559

Token 125: '[in' (ID: 37498)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2856541574001312
    2. 'parent' → logprob: -2.285654067993164
    3. '[parent' → logprob: -3.160654067993164
    4. '[in' → logprob: -3.285654067993164
    5. '1' → logprob: -4.410654067993164
    6. '['' → logprob: -4.535654067993164
    7. '.' → logprob: -4.910654067993164
    8. '_parent' → logprob: -5.035654067993164
    9. 'inp' → logprob: -5.660654067993164
    10. '.pop' → logprob: -5.785654067993164

Token 126: 'p' (ID: 79)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5595664381980896
    2. 'p' → logprob: -0.9345664381980896
    3. '1' → logprob: -3.6845664978027344
    4. 'put' → logprob: -5.184566497802734
    5. '(' → logprob: -6.059566497802734
    6. 's' → logprob: -7.434566497802734
    7. 'pt' → logprob: -8.059566497802734
    8. '2' → logprob: -8.434566497802734
    9. 'ption' → logprob: -8.934566497802734
    10. '][' → logprob: -9.059566497802734

Token 127: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48989975452423096
    2. '[' → logprob: -0.989899754524231
    3. '(' → logprob: -4.364899635314941
    4. '0' → logprob: -6.739899635314941
    5. '2' → logprob: -7.614899635314941
    6. ']' → logprob: -7.989899635314941
    7. '][' → logprob: -7.989899635314941
    8. '
' → logprob: -9.239899635314941
    9. '{' → logprob: -9.489899635314941
    10. 's' → logprob: -9.489899635314941

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006121210753917694
    2. ' ' → logprob: -8.250612258911133
    3. '0' → logprob: -8.500612258911133
    4. '2' → logprob: -9.375612258911133
    5. '-' → logprob: -11.375612258911133
    6. ']' → logprob: -11.750612258911133
    7. 'parent' → logprob: -11.875612258911133
    8. '```' → logprob: -12.063112258911133
    9. '   ' → logprob: -12.438112258911133
    10. 'remove' → logprob: -12.500612258911133

Token 129: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1675332933664322
    2. '']' → logprob: -2.5425333976745605
    3. ''s' → logprob: -3.1675333976745605
    4. 's' → logprob: -5.0425333976745605
    5. ']'' → logprob: -5.2925333976745605
    6. ''' → logprob: -5.4175333976745605
    7. ']
' → logprob: -5.4175333976745605
    8. '].' → logprob: -6.4175333976745605
    9. 'in' → logprob: -6.7925333976745605
    10. ']['' → logprob: -6.9175333976745605

Token 130: '['' (ID: 1181)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.04988457262516022
    2. ''' → logprob: -3.549884557723999
    3. ' in' → logprob: -4.924884796142578
    4. 's' → logprob: -5.549884796142578
    5. ' '' → logprob: -5.674884796142578
    6. 'in' → logprob: -6.424884796142578
    7. ' ' → logprob: -6.924884796142578
    8. ''d' → logprob: -7.674884796142578
    9. ''in' → logprob: -8.549884796142578
    10. '-' → logprob: -8.674884796142578

Token 131: 's' (ID: 82)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.06214413791894913
    2. 's' → logprob: -2.8121440410614014
    3. '['' → logprob: -9.18714427947998
    4. ''' → logprob: -10.31214427947998
    5. ' '' → logprob: -10.81214427947998
    6. '   ' → logprob: -12.56214427947998
    7. '‘s' → logprob: -13.31214427947998
    8. ' ' → logprob: -13.43714427947998
    9. '']' → logprob: -13.56214427947998
    10. '('' → logprob: -13.56214427947998

Token 132: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.008772573433816433
    2. 'ib' → logprob: -6.258772373199463
    3. 'ibl' → logprob: -6.383772373199463
    4. 'b' → logprob: -6.508772373199463
    5. 'ibli' → logprob: -6.758772373199463
    6. 'iblings' → logprob: -7.383772373199463
    7. 'ibil' → logprob: -7.383772373199463
    8. ' ' → logprob: -8.008772850036621
    9. 'i' → logprob: -8.383772850036621
    10. ' sibling' → logprob: -9.008772850036621

Token 133: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.07934599369764328
    2. ']' → logprob: -2.579345941543579
    3. ''' → logprob: -8.704345703125
    4. ' ']' → logprob: -8.829345703125
    5. ' ]' → logprob: -9.829345703125
    6. '']=' → logprob: -9.829345703125
    7. '"]' → logprob: -11.329345703125
    8. '=' → logprob: -11.704345703125
    9. ' =' → logprob: -11.954345703125
    10. 's' → logprob: -12.704345703125

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760440826416016
    2. '=' → logprob: -0.8260440826416016
    3. ' ' → logprob: -9.576044082641602
    4. ']' → logprob: -10.826044082641602
    5. ')' → logprob: -12.451044082641602
    6. 's' → logprob: -12.576044082641602
    7. ' =
' → logprob: -13.201044082641602
    8. ']=' → logprob: -14.201044082641602
    9. ',' → logprob: -14.451044082641602
    10. 'space' → logprob: -14.701044082641602

Token 135: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.016047507524490356
    2. ' inp' → logprob: -4.141047477722168
    3. '2' → logprob: -11.891047477722168
    4. '(inp' → logprob: -13.016047477722168
    5. '3' → logprob: -13.641047477722168
    6. '1' → logprob: -14.391047477722168
    7. 'in' → logprob: -14.766047477722168
    8. ' ' → logprob: -14.766047477722168
    9. '0' → logprob: -15.266047477722168
    10. '[in' → logprob: -15.516047477722168

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04424718767404556
    2. '2' → logprob: -3.4192471504211426
    3. '0' → logprob: -4.669247150421143
    4. '```' → logprob: -7.419247150421143
    5. ' ' → logprob: -9.0442476272583
    6. '`' → logprob: -9.1692476272583
    7. ''[' → logprob: -9.7942476272583
    8. '1' → logprob: -9.7942476272583
    9. '``' → logprob: -10.1692476272583
    10. ''' → logprob: -10.5442476272583

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -10.125096321105957
    3. '1' → logprob: -10.250096321105957
    4. '[' → logprob: -11.875096321105957
    5. '
' → logprob: -11.875096321105957
    6. '0' → logprob: -13.187596321105957
    7. '```' → logprob: -13.875096321105957
    8. '   ' → logprob: -14.062596321105957
    9. 'inp' → logprob: -14.687596321105957
    10. '

' → logprob: -14.937596321105957

Token 138: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19627507030963898
    2. '<|end|>' → logprob: -2.571274995803833
    3. ' ' → logprob: -3.071274995803833
    4. '    
' → logprob: -3.696274995803833
    5. ' 
' → logprob: -4.446275234222412
    6. '  
' → logprob: -5.071275234222412
    7. '
' → logprob: -5.446275234222412
    8. '    ' → logprob: -5.946275234222412
    9. '  ' → logprob: -6.196275234222412
    10. '   
' → logprob: -6.571275234222412

Token 140: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001762286527082324
    2. 'if' (adapté à ' if') → logprob: -7.376762390136719
    3. ' ' → logprob: -8.251762390136719
    4. ' if' → logprob: -8.251762390136719
    5. '<|end|>' → logprob: -8.251762390136719
    6. '    
' → logprob: -8.626762390136719
    7. ' 
' → logprob: -10.001762390136719
    8. '  
' → logprob: -10.376762390136719
    9. '   
' → logprob: -10.626762390136719
    10. '  ' → logprob: -10.751762390136719

Token 141: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.0001931696751853451
    2. 'inp' → logprob: -8.75019359588623
    3. ' ' → logprob: -11.00019359588623
    4. '(inp' → logprob: -11.25019359588623
    5. ' ' → logprob: -12.75019359588623
    6. ' in' → logprob: -13.87519359588623
    7. ' (' → logprob: -15.75019359588623
    8. ' instr' → logprob: -16.125192642211914
    9. '  ' → logprob: -16.125192642211914
    10. '[in' → logprob: -16.375192642211914

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.5649528298527e-05
    2. '1' → logprob: -10.125075340270996
    3. '[
' → logprob: -10.500075340270996
    4. ' [' → logprob: -12.500075340270996
    5. '```' → logprob: -13.375075340270996
    6. '3' → logprob: -14.000075340270996
    7. '`' → logprob: -14.125075340270996
    8. '2' → logprob: -14.750075340270996
    9. ' ' → logprob: -15.000075340270996
    10. ']' → logprob: -16.125076293945312

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002529952325858176
    2. ' ' → logprob: -8.375252723693848
    3. '
' → logprob: -11.875252723693848
    4. '   ' → logprob: -12.250252723693848
    5. '```' → logprob: -12.375252723693848
    6. '[' → logprob: -13.250252723693848
    7. '1' → logprob: -13.250252723693848
    8. '  ' → logprob: -14.000252723693848
    9. '``' → logprob: -15.375252723693848
    10. '0' → logprob: -15.562752723693848

Token 144: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.011590481735765934
    2. '!=' → logprob: -5.386590480804443
    3. ' ]' → logprob: -5.886590480804443
    4. ' ' → logprob: -6.011590480804443
    5. ']' → logprob: -6.636590480804443
    6. ']!=' → logprob: -8.511590957641602
    7. '!=-' → logprob: -9.136590957641602
    8. ' ' → logprob: -9.886590957641602
    9. ')' → logprob: -11.136590957641602
    10. ')!=' → logprob: -11.636590957641602

Token 145: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.003053765743970871
    2. '!=' → logprob: -5.878053665161133
    3. ' ' → logprob: -8.503053665161133
    4. '!=-' → logprob: -10.253053665161133
    5. ' ' → logprob: -11.878053665161133
    6. ')!=' → logprob: -13.253053665161133
    7. ' !' → logprob: -14.753053665161133
    8. ']!=' → logprob: -14.878053665161133
    9. ')' → logprob: -15.003053665161133
    10. '()!=' → logprob: -15.503053665161133

Token 146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010327188298106194
    2. ' ' → logprob: -5.010327339172363
    3. '-' → logprob: -5.635327339172363
    4. '1' → logprob: -11.260327339172363
    5. '<|end|>' → logprob: -11.385327339172363
    6. ' '' → logprob: -12.885327339172363
    7. ' ' → logprob: -13.260327339172363
    8. ''' → logprob: -13.635327339172363
    9. ')' → logprob: -14.010327339172363
    10. ' (-' → logprob: -14.260327339172363

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013786651834379882
    2. '-' → logprob: -9.000138282775879
    3. ' ' → logprob: -11.625138282775879
    4. ' -' → logprob: -12.500138282775879
    5. '```' → logprob: -14.437638282775879
    6. '<|end|>' → logprob: -15.312638282775879
    7. '2' → logprob: -15.875138282775879
    8. '   ' → logprob: -16.562637329101562
    9. '
' → logprob: -16.875137329101562
    10. '!' → logprob: -16.875137329101562

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001455832039937377
    2. ':
' → logprob: -6.626455783843994
    3. '       ' → logprob: -9.501456260681152
    4. ' :' → logprob: -10.626456260681152
    5. '   ' → logprob: -11.626456260681152
    6. '):' → logprob: -11.751456260681152
    7. ',' → logprob: -12.626456260681152
    8. ')' → logprob: -12.626456260681152
    9. ' :
' → logprob: -14.001456260681152
    10. ':

' → logprob: -14.001456260681152

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011858646757900715
    2. '   ' → logprob: -5.3868584632873535
    3. ' ' → logprob: -5.6368584632873535
    4. '<|end|>' → logprob: -6.7618584632873535
    5. '        
' → logprob: -7.3868584632873535
    6. '    ' → logprob: -8.511858940124512
    7. '  ' → logprob: -8.511858940124512
    8. '	' → logprob: -8.636858940124512
    9. ' 
' → logprob: -8.761858940124512
    10. '      ' → logprob: -8.886858940124512

Token 150: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.013018688187003136
    2. ' tree' → logprob: -4.513018608093262
    3. 't' → logprob: -7.138018608093262
    4. 'tre' → logprob: -7.388018608093262
    5. '	tree' → logprob: -8.638018608093262
    6. '   ' → logprob: -9.263018608093262
    7. '
' → logprob: -9.638018608093262
    8. 'tr' → logprob: -10.013018608093262
    9. '```' → logprob: -10.263018608093262
    10. '       ' → logprob: -10.263018608093262

Token 151: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.0004979863297194242
    2. '[' → logprob: -7.625497817993164
    3. 'inp' → logprob: -12.500497817993164
    4. '[int' → logprob: -13.500497817993164
    5. '[i' → logprob: -13.625497817993164
    6. '[input' → logprob: -13.750497817993164
    7. '[out' → logprob: -14.250497817993164
    8. '[
' → logprob: -15.250497817993164
    9. '```' → logprob: -15.375497817993164
    10. 'in' → logprob: -15.500497817993164

Token 152: 'p' (ID: 79)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013065485982224345
    2. 'inp' → logprob: -7.251306533813477
    3. 'p' → logprob: -7.751306533813477
    4. '2' → logprob: -8.876306533813477
    5. '[in' → logprob: -11.376306533813477
    6. 'put' → logprob: -12.251306533813477
    7. '1' → logprob: -13.376306533813477
    8. ' inp' → logprob: -13.876306533813477
    9. '[
' → logprob: -14.001306533813477
    10. 'out' → logprob: -14.376306533813477

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006562498398125172
    2. '2' → logprob: -5.25656270980835
    3. '[in' → logprob: -7.00656270980835
    4. ']' → logprob: -9.131562232971191
    5. '[
' → logprob: -9.506562232971191
    6. '[int' → logprob: -9.756562232971191
    7. '[]' → logprob: -10.131562232971191
    8. '1' → logprob: -10.256562232971191
    9. '][' → logprob: -10.506562232971191
    10. 'inp' → logprob: -10.881562232971191

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00118856446351856
    2. '0' → logprob: -6.8761887550354
    3. '1' → logprob: -9.001188278198242
    4. ' ' → logprob: -10.876188278198242
    5. '[' → logprob: -12.251188278198242
    6. '```' → logprob: -13.001188278198242
    7. ']' → logprob: -13.438688278198242
    8. '   ' → logprob: -13.501188278198242
    9. '(' → logprob: -14.751188278198242
    10. '  ' → logprob: -14.938688278198242

Token 155: ']]' (ID: 8928)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.0009100330644287169
    2. ']' → logprob: -7.250909805297852
    3. ' ]' → logprob: -9.000909805297852
    4. '['' → logprob: -10.375909805297852
    5. '']['' → logprob: -10.875909805297852
    6. ']'' → logprob: -11.625909805297852
    7. '][' → logprob: -11.875909805297852
    8. ')['' → logprob: -12.625909805297852
    9. ']["' → logprob: -12.875909805297852
    10. '']' → logprob: -13.125909805297852

Token 156: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.002710011089220643
    2. ']['' → logprob: -6.002709865570068
    3. ''s' → logprob: -8.877710342407227
    4. '[' → logprob: -10.127710342407227
    5. ''' → logprob: -10.502710342407227
    6. ' ['' → logprob: -11.627710342407227
    7. ']' → logprob: -12.252710342407227
    8. ')['' → logprob: -12.377710342407227
    9. '	' → logprob: -13.377710342407227
    10. ' ' → logprob: -13.502710342407227

Token 157: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.017378317192196846
    2. ''' → logprob: -4.267378330230713
    3. ''s' → logprob: -5.767378330230713
    4. '[parent' → logprob: -10.017377853393555
    5. ''p' → logprob: -11.517377853393555
    6. '['' → logprob: -11.642377853393555
    7. ''in' → logprob: -12.392377853393555
    8. 's' → logprob: -13.392377853393555
    9. 'paren' → logprob: -13.642377853393555
    10. ' '' → logprob: -13.767377853393555

Token 158: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49991166591644287
    2. '']' → logprob: -0.9999116659164429
    3. '=' → logprob: -4.374911785125732
    4. '']=' → logprob: -5.499911785125732
    5. ']=' → logprob: -5.624911785125732
    6. ' ]' → logprob: -5.999911785125732
    7. ' =' → logprob: -5.999911785125732
    8. '"]' → logprob: -8.999911308288574
    9. '`]' → logprob: -10.374911308288574
    10. ''' → logprob: -10.624911308288574

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759887099266052
    2. ' =' → logprob: -0.8259887099266052
    3. ']' → logprob: -11.07598876953125
    4. ')' → logprob: -11.20098876953125
    5. ' ' → logprob: -11.32598876953125
    6. ']=' → logprob: -12.57598876953125
    7. '<|end|>' → logprob: -13.82598876953125
    8. ')=' → logprob: -14.07598876953125
    9. ' ]' → logprob: -14.32598876953125
    10. ',' → logprob: -14.82598876953125

Token 160: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.2014276683330536
    2. 'inp' → logprob: -1.701427698135376
    3. '(inp' → logprob: -11.576427459716797
    4. 'Inp' → logprob: -13.201427459716797
    5. ' input' → logprob: -14.076427459716797
    6. 'input' → logprob: -14.201427459716797
    7. 'in' → logprob: -14.576427459716797
    8. ' ' → logprob: -14.701427459716797
    9. ' in' → logprob: -14.951427459716797
    10. 'int' → logprob: -15.826427459716797

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008203497272916138
    2. '0' → logprob: -7.125820159912109
    3. '[
' → logprob: -11.50082015991211
    4. ' [' → logprob: -13.50082015991211
    5. '```' → logprob: -13.50082015991211
    6. ' ' → logprob: -13.87582015991211
    7. '2' → logprob: -14.87582015991211
    8. '.' → logprob: -15.50082015991211
    9. '][' → logprob: -15.50082015991211
    10. '(' → logprob: -15.75082015991211

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -14.75000286102295
    4. '2' → logprob: -15.12500286102295
    5. '[' → logprob: -15.37500286102295
    6. '   ' → logprob: -18.125003814697266
    7. '۰' → logprob: -18.312503814697266
    8. '```' → logprob: -18.937503814697266
    9. '-' → logprob: -19.062503814697266
    10. '  ' → logprob: -19.125003814697266

Token 163: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2159944325685501
    2. ']' → logprob: -1.7159944772720337
    3. '   ' → logprob: -5.590994358062744
    4. ')' → logprob: -5.590994358062744
    5. ']
' → logprob: -6.215994358062744
    6. '<|end|>' → logprob: -6.215994358062744
    7. '
' → logprob: -7.215994358062744
    8. ' ]' → logprob: -7.340994358062744
    9. '']' → logprob: -7.465994358062744
    10. '}' → logprob: -8.215994834899902

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014226273633539677
    2. 'tree' → logprob: -4.51422643661499
    3. '	' → logprob: -6.88922643661499
    4. '   ' → logprob: -7.01422643661499
    5. ' tree' → logprob: -7.13922643661499
    6. '	tree' → logprob: -8.639225959777832
    7. '           ' → logprob: -9.764225959777832
    8. '     ' → logprob: -9.889225959777832
    9. '      ' → logprob: -10.639225959777832
    10. '    ' → logprob: -10.889225959777832

Token 165: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.0010150644229725003
    2. ' tree' → logprob: -7.0010151863098145
    3. '	tree' → logprob: -9.376014709472656
    4. 'ree' → logprob: -12.626014709472656
    5. '/tree' → logprob: -13.001014709472656
    6. '(tree' → logprob: -13.126014709472656
    7. 'tre' → logprob: -13.251014709472656
    8. '[' → logprob: -13.251014709472656
    9. ' ' → logprob: -13.876014709472656
    10. 'trees' → logprob: -13.876014709472656

Token 166: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.0003647826088126749
    2. '[' → logprob: -8.000365257263184
    3. 'inp' → logprob: -10.750365257263184
    4. '[i' → logprob: -12.250365257263184
    5. '```' → logprob: -14.000365257263184
    6. '[input' → logprob: -14.750365257263184
    7. ' inp' → logprob: -15.125365257263184
    8. '[int' → logprob: -15.625365257263184
    9. '[
' → logprob: -15.875365257263184
    10. '[ip' → logprob: -15.875365257263184

Token 167: 'p' (ID: 79)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008188173174858093
    2. '1' → logprob: -4.883188247680664
    3. '2' → logprob: -8.383188247680664
    4. 'p' → logprob: -8.508188247680664
    5. ']' → logprob: -9.508188247680664
    6. '3' → logprob: -10.508188247680664
    7. '][' → logprob: -10.508188247680664
    8. '[
' → logprob: -11.508188247680664
    9. 'inp' → logprob: -13.508188247680664
    10. '
' → logprob: -13.508188247680664

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018375257786829025
    2. '1' → logprob: -9.125184059143066
    3. '2' → logprob: -10.750184059143066
    4. '```' → logprob: -10.875184059143066
    5. '[
' → logprob: -11.625184059143066
    6. '][' → logprob: -12.250184059143066
    7. ']' → logprob: -12.375184059143066
    8. '['' → logprob: -12.750184059143066
    9. '`' → logprob: -12.875184059143066
    10. '[in' → logprob: -13.000184059143066

Token 169: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '2' → logprob: -13.375003814697266
    3. ']' → logprob: -14.125003814697266
    4. ' ' → logprob: -14.250003814697266
    5. '0' → logprob: -15.625003814697266
    6. '```' → logprob: -16.437503814697266
    7. '
' → logprob: -16.562503814697266
    8. '   ' → logprob: -17.187503814697266
    9. '``' → logprob: -17.562503814697266
    10. '１' → logprob: -17.687503814697266

Token 170: ']]' (ID: 8928)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.07749510556459427
    2. ']' → logprob: -2.7024950981140137
    3. ']]' → logprob: -5.577495098114014
    4. ']'' → logprob: -6.577495098114014
    5. ' ]' → logprob: -6.702495098114014
    6. '']' → logprob: -7.077495098114014
    7. '']['' → logprob: -8.952495574951172
    8. '][' → logprob: -10.327495574951172
    9. ''s' → logprob: -10.452495574951172
    10. '']]['' → logprob: -10.827495574951172

Token 171: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.020904095843434334
    2. ']['' → logprob: -3.895904064178467
    3. ''' → logprob: -8.770904541015625
    4. ''s' → logprob: -8.895904541015625
    5. '[' → logprob: -10.520904541015625
    6. ']' → logprob: -11.145904541015625
    7. '']['' → logprob: -11.895904541015625
    8. ' ['' → logprob: -12.020904541015625
    9. '=' → logprob: -12.270904541015625
    10. ')['' → logprob: -12.520904541015625

Token 172: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5313134789466858
    2. 's' → logprob: -0.9063134789466858
    3. ''s' → logprob: -4.906313419342041
    4. ''' → logprob: -7.656313419342041
    5. 'left' → logprob: -8.4063138961792
    6. ']' → logprob: -10.9063138961792
    7. 'siblings' → logprob: -11.4063138961792
    8. '
' → logprob: -11.6563138961792
    9. '-' → logprob: -12.6563138961792
    10. ' ' → logprob: -13.4063138961792

Token 173: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.00579345878213644
    2. 'ib' → logprob: -5.505793571472168
    3. 'ibl' → logprob: -6.880793571472168
    4. 'ibli' → logprob: -8.130793571472168
    5. '2' → logprob: -8.880793571472168
    6. '1' → logprob: -9.005793571472168
    7. 'iblings' → logprob: -10.130793571472168
    8. 'ibil' → logprob: -10.255793571472168
    9. '[' → logprob: -10.630793571472168
    10. 'lib' → logprob: -11.255793571472168

Token 174: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006082022096961737
    2. '']' → logprob: -5.881082057952881
    3. ']=' → logprob: -5.881082057952881
    4. ' ]' → logprob: -8.006081581115723
    5. '=' → logprob: -9.506081581115723
    6. '']=' → logprob: -9.881081581115723
    7. ''' → logprob: -11.381081581115723
    8. ' =' → logprob: -12.631081581115723
    9. ']='' → logprob: -13.131081581115723
    10. '"]' → logprob: -13.756081581115723

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132789433002472
    2. ' =' → logprob: -1.3132789134979248
    3. ''' → logprob: -12.438279151916504
    4. ')' → logprob: -12.813279151916504
    5. ' ' → logprob: -13.313279151916504
    6. ' ='' → logprob: -13.438279151916504
    7. '='' → logprob: -13.563279151916504
    8. ']' → logprob: -13.688279151916504
    9. ' =
' → logprob: -14.563279151916504
    10. ']=' → logprob: -14.563279151916504

Token 176: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.6328896284103394
    2. 'inp' → logprob: -0.7578896284103394
    3. '(inp' → logprob: -9.257889747619629
    4. ' str' → logprob: -9.945389747619629
    5. ' ' → logprob: -10.695389747619629
    6. 'str' → logprob: -10.757889747619629
    7. 'in' → logprob: -11.007889747619629
    8. 'Inp' → logprob: -11.257889747619629
    9. ' in' → logprob: -11.320389747619629
    10. '[in' → logprob: -12.007889747619629

Token 177: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000498701527249068
    2. '1' → logprob: -7.6254987716674805
    3. ''[' → logprob: -12.87549877166748
    4. ''' → logprob: -13.25049877166748
    5. '[
' → logprob: -13.25049877166748
    6. '`' → logprob: -13.87549877166748
    7. '```' → logprob: -14.25049877166748
    8. 's' → logprob: -14.50049877166748
    9. '
' → logprob: -15.56299877166748
    10. '"' → logprob: -15.68799877166748

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '' → logprob: -16.25
    4. '[' → logprob: -16.25
    5. ']' → logprob: -16.375
    6. '0' → logprob: -17.0
    7. '2' → logprob: -17.375
    8. '
' → logprob: -17.9375
    9. '-' → logprob: -18.3125
    10. '１' → logprob: -18.625

Token 179: ']
' (ID: 1592)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.23342961072921753
    2. ']' → logprob: -1.6084296703338623
    3. ')' → logprob: -5.608429431915283
    4. '']' → logprob: -5.983429431915283
    5. '<|end|>' → logprob: -6.608429431915283
    6. ' }' → logprob: -8.483429908752441
    7. '   ' → logprob: -9.733429908752441
    8. '}
' → logprob: -9.858429908752441
    9. ' ]' → logprob: -10.108429908752441
    10. '```' → logprob: -11.233429908752441

Token 180: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8440572023391724
    2. 'parent' → logprob: -1.3440572023391724
    3. '   ' → logprob: -2.344057083129883
    4. ' for' → logprob: -2.344057083129883
    5. ')' → logprob: -3.219057083129883
    6. ')
' → logprob: -4.844057083129883
    7. '
' → logprob: -4.844057083129883
    8. '#' → logprob: -4.844057083129883
    9. '    
' → logprob: -5.219057083129883
    10. 'tree' → logprob: -5.219057083129883

Token 181: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.44684186577796936
    2. 'for' → logprob: -1.696841835975647
    3. '   ' → logprob: -1.821841835975647
    4. 'if' → logprob: -5.321841716766357
    5. ' for' → logprob: -5.821841716766357
    6. 'print' → logprob: -6.071841716766357
    7. '
' → logprob: -6.321841716766357
    8. 'root' → logprob: -6.696841716766357
    9. ' parent' → logprob: -7.696841716766357
    10. '#' → logprob: -8.321842193603516

Token 182: ' =' (ID: 314)
  Prédit: '.dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.139547660946846
    2. '.d' → logprob: -2.51454758644104
    3. '-=' → logprob: -3.51454758644104
    4. '.' → logprob: -4.764547824859619
    5. ' -=' → logprob: -5.264547824859619
    6. '=' → logprob: -5.514547824859619
    7. '.remove' → logprob: -7.139547824859619
    8. ' =' → logprob: -7.514547824859619
    9. '-' → logprob: -8.139547348022461
    10. 'discard' → logprob: -9.139547348022461

Token 183: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2887653410434723
    2. '{' → logprob: -1.66376531124115
    3. 'set' → logprob: -3.5387654304504395
    4. ' parent' → logprob: -4.2887654304504395
    5. ' {' → logprob: -5.0387654304504395
    6. '{s' → logprob: -5.5387654304504395
    7. ' set' → logprob: -6.1637654304504395
    8. 'p' → logprob: -6.2887654304504395
    9. '[parent' → logprob: -7.1637654304504395
    10. 'n' → logprob: -7.4137654304504395

Token 184: '.d' (ID: 1380)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06854977458715439
    2. ' -' → logprob: -2.818549871444702
    3. '.d' → logprob: -5.318549633026123
    4. '.inter' → logprob: -6.443549633026123
    5. '&' → logprob: -10.443550109863281
    6. '-inter' → logprob: -11.443550109863281
    7. ' &' → logprob: -11.443550109863281
    8. '.' → logprob: -12.443550109863281
    9. '-{' → logprob: -12.443550109863281
    10. '-d' → logprob: -13.193550109863281

Token 185: 'ifference' (ID: 30083)
  Prédit: 'iscard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iscard' → logprob: -0.0911622866988182
    2. 'is' → logprob: -2.7161622047424316
    3. 'ifference' → logprob: -4.216162204742432
    4. 'isc' → logprob: -5.216162204742432
    5. 'iffer' → logprob: -8.21616268157959
    6. 'i' → logprob: -8.71616268157959
    7. 'if' → logprob: -9.21616268157959
    8. 'ifferent' → logprob: -9.84116268157959
    9. 'ifer' → logprob: -10.09116268157959
    10. '(is' → logprob: -10.59116268157959

Token 186: '(inp' (ID: 141645)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '({' → logprob: -0.005623954813927412
    2. '{' → logprob: -5.255623817443848
    3. '(set' → logprob: -8.255623817443848
    4. '([' → logprob: -9.380623817443848
    5. '(' → logprob: -10.755623817443848
    6. '({_' → logprob: -11.505623817443848
    7. '{s' → logprob: -12.255623817443848
    8. ' ({' → logprob: -12.880623817443848
    9. '({'' → logprob: -13.255623817443848
    10. ' {' → logprob: -13.380623817443848

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07338830828666687
    2. ')' → logprob: -3.3233883380889893
    3. '{' → logprob: -3.4483883380889893
    4. '[:' → logprob: -6.57338809967041
    5. 'set' → logprob: -7.82338809967041
    6. '([' → logprob: -8.44838809967041
    7. '[:-' → logprob: -8.82338809967041
    8. '[_' → logprob: -8.94838809967041
    9. '[{' → logprob: -9.07338809967041
    10. '_set' → logprob: -9.57338809967041

Token 188: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14667771756649017
    2. '{' → logprob: -2.6466777324676514
    3. '[:' → logprob: -4.021677494049072
    4. '1' → logprob: -4.021677494049072
    5. ')' → logprob: -4.146677494049072
    6. '0' → logprob: -5.271677494049072
    7. ')]' → logprob: -5.771677494049072
    8. '])' → logprob: -6.271677494049072
    9. ']' → logprob: -6.896677494049072
    10. '(' → logprob: -7.396677494049072

Token 189: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019405843690037727
    2. ' ,' → logprob: -4.769405841827393
    3. ',
' → logprob: -5.894405841827393
    4. ' if' → logprob: -6.019405841827393
    5. ',)' → logprob: -6.394405841827393
    6. ' !=' → logprob: -6.894405841827393
    7. ')' → logprob: -7.269405841827393
    8. '{' → logprob: -8.14440631866455
    9. 'if' → logprob: -8.14440631866455
    10. '!=' → logprob: -8.14440631866455

Token 190: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16362953186035156
    2. '3' → logprob: -1.9136295318603516
    3. ']' → logprob: -6.038629531860352
    4. ')' → logprob: -7.663629531860352
    5. ' ' → logprob: -8.788629531860352
    6. '])]' → logprob: -9.288629531860352
    7. '4' → logprob: -9.788629531860352
    8. ']))' → logprob: -9.913629531860352
    9. ' ])' → logprob: -9.913629531860352
    10. '])
' → logprob: -10.538629531860352

Token 191: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2060541957616806
    2. '
' → logprob: -2.581054210662842
    3. 'parent' → logprob: -3.331054210662842
    4. 'node' → logprob: -3.831054210662842
    5. 'print' → logprob: -4.206054210662842
    6. 'for' → logprob: -4.956054210662842
    7. '[' → logprob: -4.956054210662842
    8. '[root' → logprob: -5.456054210662842
    9. '0' → logprob: -5.956054210662842
    10. ')
' → logprob: -6.081054210662842

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142318308353424
    2. '=' → logprob: -1.701423168182373
    3. '=root' → logprob: -12.701423645019531
    4. ' ' → logprob: -12.826423645019531
    5. '=list' → logprob: -13.576423645019531
    6. '=int' → logprob: -13.826423645019531
    7. 's' → logprob: -15.076423645019531
    8. ',' → logprob: -15.576423645019531
    9. ' ' → logprob: -15.701423645019531
    10. '=len' → logprob: -15.826423645019531

Token 193: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7393160462379456
    2. ' parent' → logprob: -1.1143159866333008
    3. 'list' → logprob: -2.364315986633301
    4. ' list' → logprob: -2.489315986633301
    5. ' next' → logprob: -4.489315986633301
    6. 'next' → logprob: -5.239315986633301
    7. ' min' → logprob: -8.2393159866333
    8. 'min' → logprob: -8.3643159866333
    9. '(parent' → logprob: -8.3643159866333
    10. ' (' → logprob: -10.8643159866333

Token 194: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.000297685619443655
    2. 'pop' → logprob: -8.250297546386719
    3. '.' → logprob: -10.250297546386719
    4. '.copy' → logprob: -14.500297546386719
    5. ' .' → logprob: -15.000297546386719
    6. ' pop' → logprob: -16.37529754638672
    7. '	pop' → logprob: -16.62529754638672
    8. '_pop' → logprob: -17.12529754638672
    9. '().' → logprob: -17.37529754638672
    10. '.clear' → logprob: -17.50029754638672

Token 195: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004632572643458843
    2. '(' → logprob: -5.379632472991943
    3. '()
' → logprob: -11.754632949829102
    4. ' ()' → logprob: -13.879632949829102
    5. '(),' → logprob: -14.504632949829102
    6. '();' → logprob: -14.629632949829102
    7. '()</' → logprob: -15.004632949829102
    8. '(
' → logprob: -15.129632949829102
    9. '()`' → logprob: -15.254632949829102
    10. '()(' → logprob: -15.379632949829102

Token 196: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055239032953977585
    2. 'depth' → logprob: -3.305238962173462
    3. 'print' → logprob: -4.430239200592041
    4. 'for' → logprob: -6.180239200592041
    5. 'd' → logprob: -7.055239200592041
    6. '#' → logprob: -7.555239200592041
    7. 'stack' → logprob: -8.180238723754883
    8. 'height' → logprob: -8.180238723754883
    9. 'from' → logprob: -8.430238723754883
    10. 'import' → logprob: -8.430238723754883

Token 197: ' pre' (ID: 876)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2874738574028015
    2. ' get' → logprob: -2.1624739170074463
    3. ' depth' → logprob: -2.6624739170074463
    4. 'set' → logprob: -3.5374739170074463
    5. 'depth' → logprob: -4.787473678588867
    6. ' pre' → logprob: -5.412473678588867
    7. ' calculate' → logprob: -5.412473678588867
    8. 'get' → logprob: -5.412473678588867
    9. ' node' → logprob: -5.912473678588867
    10. ' calc' → logprob: -6.037473678588867

Token 198: 'Parse' (ID: 11432)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0034922081977128983
    2. '_order' → logprob: -5.75349235534668
    3. 'r' → logprob: -9.12849235534668
    4. 'or' → logprob: -10.37849235534668
    5. 'oder' → logprob: -10.50349235534668
    6. '```' → logprob: -10.50349235534668
    7. 'd' → logprob: -10.62849235534668
    8. 'orde' → logprob: -10.87849235534668
    9. '_' → logprob: -10.87849235534668
    10. 'def' → logprob: -11.37849235534668

Token 199: '(u' (ID: 17057)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.594542384147644
    2. '(' → logprob: -1.719542384147644
    3. '(root' → logprob: -1.844542384147644
    4. '(tree' → logprob: -2.7195425033569336
    5. '(r' → logprob: -3.3445425033569336
    6. '(n' → logprob: -6.094542503356934
    7. '(t' → logprob: -6.219542503356934
    8. '(u' → logprob: -6.469542503356934
    9. '(x' → logprob: -6.844542503356934
    10. 'r' → logprob: -7.094542503356934

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012351537123322487
    2. ')' → logprob: -4.6373515129089355
    3. ',' → logprob: -6.3873515129089355
    4. '):
' → logprob: -7.7623515129089355
    5. 'nt' → logprob: -8.012351989746094
    6. ':' → logprob: -10.137351989746094
    7. 't' → logprob: -10.637351989746094
    8. 'd' → logprob: -11.387351989746094
    9. 'u' → logprob: -11.512351989746094
    10. ' ):' → logprob: -11.762351989746094

Token 201: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.688686192035675
    2. '   ' → logprob: -1.1886861324310303
    3. ' if' → logprob: -1.6886861324310303
    4. 'print' → logprob: -4.813686370849609
    5. ' print' → logprob: -8.93868637084961
    6. '	if' → logprob: -9.43868637084961
    7. '
' → logprob: -10.81368637084961
    8. ' ' → logprob: -11.18868637084961
    9. '    
' → logprob: -11.81368637084961
    10. '  ' → logprob: -12.18868637084961

Token 202: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17236676812171936
    2. 'print' → logprob: -2.0473668575286865
    3. ' if' → logprob: -3.5473668575286865
    4. ' print' → logprob: -8.547367095947266
    5. '   ' → logprob: -8.922367095947266
    6. 'i' → logprob: -10.422367095947266
    7. '
' → logprob: -10.422367095947266
    8. 'stack' → logprob: -11.172367095947266
    9. '	if' → logprob: -11.797367095947266
    10. 'p' → logprob: -12.047367095947266

Token 203: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4288058578968048
    2. ' u' → logprob: -1.0538058280944824
    3. ' tree' → logprob: -10.55380630493164
    4. '   ' → logprob: -10.55380630493164
    5. '	u' → logprob: -10.55380630493164
    6. 'tree' → logprob: -11.05380630493164
    7. ' ' → logprob: -12.05380630493164
    8. '    ' → logprob: -13.55380630493164
    9. ' ' → logprob: -13.80380630493164
    10. '  ' → logprob: -14.30380630493164

Token 204: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6391782760620117
    2. ' ==' → logprob: -0.7641782760620117
    3. '=' → logprob: -5.514178276062012
    4. '!=' → logprob: -7.014178276062012
    5. '==-' → logprob: -7.139178276062012
    6. ' !=' → logprob: -7.514178276062012
    7. 'is' → logprob: -8.514178276062012
    8. ' =' → logprob: -10.889178276062012
    9. ' is' → logprob: -11.139178276062012
    10. '[' → logprob: -11.389178276062012

Token 205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033546582562848926
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. ' ' → logprob: -17.750335693359375
    5. '−' → logprob: -20.875335693359375
    6. '	' → logprob: -21.000335693359375
    7. '  ' → logprob: -21.125335693359375
    8. '```' → logprob: -21.250335693359375
    9. '-
' → logprob: -21.375335693359375
    10. '
' → logprob: -21.875335693359375

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003839597338810563
    2. '-' → logprob: -7.8753838539123535
    3. ' -' → logprob: -13.625384330749512
    4. ' ' → logprob: -14.000384330749512
    5. '   ' → logprob: -14.250384330749512
    6. '```' → logprob: -14.250384330749512
    7. 'def' → logprob: -16.375383377075195
    8. '`' → logprob: -17.187883377075195
    9. '<|end|>' → logprob: -17.375383377075195
    10. '.' → logprob: -17.562883377075195

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009336678311228752
    2. ':
' → logprob: -5.134336471557617
    3. ':return' → logprob: -5.759336471557617
    4. '   ' → logprob: -8.759336471557617
    5. '):' → logprob: -10.134336471557617
    6. ')' → logprob: -11.009336471557617
    7. ' :' → logprob: -11.134336471557617
    8. ' or' → logprob: -11.634336471557617
    9. '       ' → logprob: -11.759336471557617
    10. '):
' → logprob: -13.634336471557617

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7592571973800659
    2. ' return' → logprob: -1.009257197380066
    3. '   ' → logprob: -1.884257197380066
    4. 'return' → logprob: -4.2592573165893555
    5. '	return' → logprob: -7.2592573165893555
    6. ' ' → logprob: -8.634257316589355
    7. ':return' → logprob: -8.634257316589355
    8. '
' → logprob: -9.134257316589355
    9. '    
' → logprob: -9.884257316589355
    10. '    ' → logprob: -9.884257316589355

Token 209: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5777819156646729
    2. ' return' → logprob: -0.8277819156646729
    3. '   ' → logprob: -6.577781677246094
    4. '       ' → logprob: -8.077781677246094
    5. '
' → logprob: -9.327781677246094
    6. '	return' → logprob: -10.577781677246094
    7. ':return' → logprob: -11.452781677246094
    8. ' ' → logprob: -11.952781677246094
    9. ' 
' → logprob: -12.827781677246094
    10. '    
' → logprob: -13.702781677246094

Token 210: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5470557808876038
    2. ' print' → logprob: -1.172055721282959
    3. '
' → logprob: -3.672055721282959
    4. ' tree' → logprob: -3.797055721282959
    5. ' 
' → logprob: -3.922055721282959
    6. 'print' → logprob: -4.047055721282959
    7. '    
' → logprob: -4.297055721282959
    8. ' ' → logprob: -5.547055721282959
    9. '\n' → logprob: -5.547055721282959
    10. '  
' → logprob: -6.422055721282959

Token 211: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7359013557434082
    2. '   ' → logprob: -1.2359013557434082
    3. ' print' → logprob: -1.4859013557434082
    4. '    
' → logprob: -6.985901355743408
    5. ' tree' → logprob: -7.110901355743408
    6. 'tree' → logprob: -7.485901355743408
    7. '
' → logprob: -7.610901355743408
    8. ' ' → logprob: -7.985901355743408
    9. '	print' → logprob: -8.11090087890625
    10. ' 
' → logprob: -8.61090087890625

Token 212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00807039625942707
    2. ' print' → logprob: -4.883070468902588
    3. '   ' → logprob: -7.758070468902588
    4. 'pr' → logprob: -11.75806999206543
    5. '    
' → logprob: -12.25806999206543
    6. 'pre' → logprob: -12.38306999206543
    7. ' ' → logprob: -12.50806999206543
    8. '
' → logprob: -12.88306999206543
    9. ' 
' → logprob: -12.88306999206543
    10. '    ' → logprob: -13.63306999206543

Token 213: '(f' (ID: 1526)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.9623372554779053
    2. '('' → logprob: -1.2123372554779053
    3. '(' → logprob: -1.8373372554779053
    4. '(tree' → logprob: -2.3373372554779053
    5. '(f' → logprob: -2.9623372554779053
    6. '("' → logprob: -4.962337493896484
    7. '("("' → logprob: -5.337337493896484
    8. '(chr' → logprob: -7.837337493896484
    9. '('(' → logprob: -8.462337493896484
    10. 'tree' → logprob: -8.837337493896484

Token 214: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5169887542724609
    2. '"' → logprob: -1.266988754272461
    3. '("("' → logprob: -4.016988754272461
    4. '(u' → logprob: -4.141988754272461
    5. '"(' → logprob: -4.141988754272461
    6. '('' → logprob: -4.266988754272461
    7. ''(' → logprob: -4.266988754272461
    8. ''{' → logprob: -4.391988754272461
    9. '"{' → logprob: -4.516988754272461
    10. '(node' → logprob: -5.266988754272461

Token 215: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1082654744386673
    2. 'node' → logprob: -3.1082653999328613
    3. ' {' → logprob: -3.2332653999328613
    4. 'Node' → logprob: -4.483265399932861
    5. '({' → logprob: -6.358265399932861
    6. 'u' → logprob: -6.608265399932861
    7. '"{' → logprob: -7.233265399932861
    8. '(u' → logprob: -7.358265399932861
    9. ' node' → logprob: -7.983265399932861
    10. ' ' → logprob: -7.983265399932861

Token 216: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0022191302850842476
    2. 'tree' → logprob: -6.127219200134277
    3. ' u' → logprob: -10.752219200134277
    4. '   ' → logprob: -12.752219200134277
    5. ' ' → logprob: -13.877219200134277
    6. '	u' → logprob: -13.877219200134277
    7. 't' → logprob: -14.002219200134277
    8. ''u' → logprob: -14.314719200134277
    9. 'str' → logprob: -14.377219200134277
    10. '
' → logprob: -14.502219200134277

Token 217: '}',' (ID: 36898)
  Prédit: '}','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}',' → logprob: -0.18602947890758514
    2. '',' → logprob: -1.8110294342041016
    3. '}' → logprob: -5.311029434204102
    4. 'end' → logprob: -7.561029434204102
    5. '}')' → logprob: -7.561029434204102
    6. ' ',' → logprob: -9.561029434204102
    7. ''}' → logprob: -10.061029434204102
    8. '')' → logprob: -10.061029434204102
    9. '}','' → logprob: -10.186029434204102
    10. '},' → logprob: -10.936029434204102

Token 218: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.014173032715916634
    2. ' end' → logprob: -4.2641730308532715
    3. '   ' → logprob: -12.76417350769043
    4. ',' → logprob: -13.13917350769043
    5. ',end' → logprob: -13.13917350769043
    6. 'sep' → logprob: -13.38917350769043
    7. ')' → logprob: -14.88917350769043
    8. ' ' → logprob: -15.38917350769043
    9. '
' → logprob: -16.13917350769043
    10. '(end' → logprob: -16.26417350769043

Token 219: ' =' (ID: 314)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.007182041183114052
    2. '=''' → logprob: -5.6321821212768555
    3. '=' → logprob: -5.8821821212768555
    4. ''' → logprob: -7.2571821212768555
    5. '''' → logprob: -10.007182121276855
    6. '='')
' → logprob: -11.257182121276855
    7. '="' → logprob: -11.382182121276855
    8. '"' → logprob: -12.632182121276855
    9. ''=' → logprob: -12.632182121276855
    10. '='',' → logprob: -13.257182121276855

Token 220: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5823099613189697
    2. '''' → logprob: -0.8323099613189697
    3. '"' → logprob: -5.457309722900391
    4. '""' → logprob: -6.582309722900391
    5. ' '')' → logprob: -7.582309722900391
    6. ' ''' → logprob: -9.08230972290039
    7. ' '' → logprob: -10.45730972290039
    8. ''',' → logprob: -11.33230972290039
    9. ''''' → logprob: -11.45730972290039
    10. '''
' → logprob: -12.08230972290039

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26972222328186035
    2. 'pre' → logprob: -1.7697222232818604
    3. ' pre' → logprob: -3.2697222232818604
    4. '
' → logprob: -4.394721984863281
    5. '    
' → logprob: -5.019721984863281
    6. '	pre' → logprob: -5.269721984863281
    7. '  
' → logprob: -6.644721984863281
    8. ' 
' → logprob: -7.394721984863281
    9. ' ' → logprob: -7.519721984863281
    10. '   
' → logprob: -7.644721984863281

Token 222: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.0014239257434383035
    2. ' pre' → logprob: -6.6264238357543945
    3. 'if' → logprob: -10.001423835754395
    4. '   ' → logprob: -10.126423835754395
    5. '
' → logprob: -11.751423835754395
    6. ' if' → logprob: -14.001423835754395
    7. ' ' → logprob: -14.126423835754395
    8. 'p' → logprob: -14.376423835754395
    9. 'print' → logprob: -14.376423835754395
    10. '    
' → logprob: -14.626423835754395

Token 223: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -5.319370302458992e-06
    2. 'parse' → logprob: -12.375005722045898
    3. '(Parse' → logprob: -14.750005722045898
    4. 'tree' → logprob: -14.875005722045898
    5. ' Parse' → logprob: -16.1250057220459
    6. '_parse' → logprob: -16.6250057220459
    7. 'Parser' → logprob: -17.3750057220459
    8. '.Parse' → logprob: -17.6250057220459
    9. 'pre' → logprob: -17.8750057220459
    10. 'left' → logprob: -18.2500057220459

Token 224: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0005812693270854652
    2. '(' → logprob: -7.50058126449585
    3. '(u' → logprob: -11.250581741333008
    4. ' (' → logprob: -12.125581741333008
    5. 'tree' → logprob: -12.375581741333008
    6. '(t' → logprob: -12.625581741333008
    7. '((' → logprob: -13.875581741333008
    8. '('' → logprob: -15.000581741333008
    9. '(
' → logprob: -15.250581741333008
    10. '(tr' → logprob: -15.500581741333008

Token 225: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -15.625
    3. '[' → logprob: -16.25
    4. '
' → logprob: -19.375
    5. '	u' → logprob: -19.75
    6. '(u' → logprob: -20.0
    7. '[root' → logprob: -20.0
    8. '[
' → logprob: -20.125
    9. '```' → logprob: -20.25
    10. '<u' → logprob: -20.375

Token 226: ']['' (ID: 12019)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.13309545814990997
    2. ']['' → logprob: -2.1330955028533936
    3. '[u' → logprob: -5.1330952644348145
    4. '[' → logprob: -9.508095741271973
    5. ')['' → logprob: -9.758095741271973
    6. ''' → logprob: -10.508095741271973
    7. ']' → logprob: -10.758095741271973
    8. ' ['' → logprob: -10.883095741271973
    9. 'u' → logprob: -10.883095741271973
    10. ''s' → logprob: -11.383095741271973

Token 227: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -13.875000953674316
    3. ' left' → logprob: -16.125001907348633
    4. '[left' → logprob: -17.000001907348633
    5. 'lef' → logprob: -17.500001907348633
    6. '['' → logprob: -17.750001907348633
    7. ''s' → logprob: -18.500001907348633
    8. '.left' → logprob: -19.125001907348633
    9. 'le' → logprob: -20.125001907348633
    10. '	left' → logprob: -20.250001907348633

Token 228: ''])
' (ID: 16733)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.24237418174743652
    2. '])' → logprob: -1.6173741817474365
    3. ')' → logprob: -4.492374420166016
    4. ''])
' → logprob: -5.742374420166016
    5. '])
' → logprob: -7.242374420166016
    6. '   ' → logprob: -7.617374420166016
    7. ']' → logprob: -7.867374420166016
    8. '']' → logprob: -8.492374420166016
    9. ' ' → logprob: -8.992374420166016
    10. 'u' → logprob: -9.117374420166016

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16336196660995483
    2. 'pre' → logprob: -1.9133620262145996
    3. ' pre' → logprob: -5.7883620262146
    4. '	pre' → logprob: -9.788361549377441
    5. ' ' → logprob: -12.913361549377441
    6. '
' → logprob: -13.163361549377441
    7. '```' → logprob: -13.288361549377441
    8. '(pre' → logprob: -13.288361549377441
    9. '    
' → logprob: -13.413361549377441
    10. '  ' → logprob: -13.913361549377441

Token 230: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.004135153256356716
    2. ' pre' → logprob: -5.5041351318359375
    3. 'tree' → logprob: -10.254135131835938
    4. '   ' → logprob: -10.879135131835938
    5. '	pre' → logprob: -13.754135131835938
    6. ' tree' → logprob: -14.754135131835938
    7. '(pre' → logprob: -14.879135131835938
    8. '
' → logprob: -14.879135131835938
    9. 'print' → logprob: -15.879135131835938
    10. ' ' → logprob: -16.504135131835938

Token 231: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -2.1008713702030946e-06
    2. 'parse' → logprob: -14.000001907348633
    3. 'tree' → logprob: -14.250001907348633
    4. '(tree' → logprob: -15.375001907348633
    5. '(Parse' → logprob: -16.500001907348633
    6. ' Parse' → logprob: -16.625001907348633
    7. 'Parser' → logprob: -16.875001907348633
    8. 'Tree' → logprob: -18.250001907348633
    9. 'Par' → logprob: -18.250001907348633
    10. '_parse' → logprob: -18.375001907348633

Token 232: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -9.750059127807617
    3. 'tree' → logprob: -15.000059127807617
    4. '(tr' → logprob: -15.875059127807617
    5. '(t' → logprob: -16.125059127807617
    6. '(
' → logprob: -16.375059127807617
    7. ' (' → logprob: -16.375059127807617
    8. '((' → logprob: -16.750059127807617
    9. '(u' → logprob: -17.000059127807617
    10. '	tree' → logprob: -19.375059127807617

Token 233: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00026264708139933646
    2. 'u' → logprob: -8.250262260437012
    3. '[' → logprob: -13.750262260437012
    4. '
' → logprob: -16.000263214111328
    5. '	u' → logprob: -16.750263214111328
    6. ' [' → logprob: -17.000263214111328
    7. '[
' → logprob: -17.625263214111328
    8. '```' → logprob: -18.000263214111328
    9. ' u' → logprob: -18.125263214111328
    10. ' ' → logprob: -18.625263214111328

Token 234: ']['' (ID: 12019)
  Prédit: '][''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.2568708062171936
    2. '['' → logprob: -1.5068707466125488
    3. 'u' → logprob: -6.256870746612549
    4. '[u' → logprob: -6.381870746612549
    5. ''' → logprob: -7.631870746612549
    6. ''u' → logprob: -8.131871223449707
    7. ''s' → logprob: -8.256871223449707
    8. ']' → logprob: -9.131871223449707
    9. '']['' → logprob: -9.631871223449707
    10. ' ]' → logprob: -10.756871223449707

Token 235: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.2352385965641588e-05
    2. ' right' → logprob: -12.625012397766113
    3. 'left' → logprob: -13.000012397766113
    4. ''' → logprob: -13.125012397766113
    5. '[right' → logprob: -13.250012397766113
    6. 'rig' → logprob: -14.000012397766113
    7. ')' → logprob: -14.750012397766113
    8. '')' → logprob: -14.875012397766113
    9. 'r' → logprob: -15.375012397766113
    10. '['' → logprob: -15.625012397766113

Token 236: ''])

' (ID: 57615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004067202680744231
    2. '')' → logprob: -8.125406265258789
    3. ')
' → logprob: -10.000406265258789
    4. ' )' → logprob: -10.625406265258789
    5. ''])' → logprob: -11.250406265258789
    6. '   ' → logprob: -11.500406265258789
    7. '))' → logprob: -12.125406265258789
    8. '])' → logprob: -12.625406265258789
    9. '`)' → logprob: -12.875406265258789
    10. '})' → logprob: -13.250406265258789

Token 237: 'def' (ID: 1314)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.3719010353088379
    2. 'def' → logprob: -1.746901035308838
    3. 'print' → logprob: -1.996901035308838
    4. 'in' → logprob: -7.996901035308838
    5. 'post' → logprob: -9.37190055847168
    6. ' pre' → logprob: -10.49690055847168
    7. '#' → logprob: -11.12190055847168
    8. '
' → logprob: -11.62190055847168
    9. 'for' → logprob: -11.99690055847168
    10. '```' → logprob: -12.24690055847168

Token 238: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0009130131802521646
    2. 'post' → logprob: -8.2509126663208
    3. ' in' → logprob: -8.6259126663208
    4. '	in' → logprob: -9.7509126663208
    5. 'In' → logprob: -9.8759126663208
    6. 'ino' → logprob: -10.2509126663208
    7. '   ' → logprob: -10.2509126663208
    8. 'print' → logprob: -10.5009126663208
    9. '```' → logprob: -10.6259126663208
    10. '[in' → logprob: -10.8759126663208

Token 239: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -0.05479990318417549
    2. 'order' → logprob: -3.179799795150757
    3. 'Order' → logprob: -4.679800033569336
    4. 'o' → logprob: -6.304800033569336
    5. 'or' → logprob: -8.929800033569336
    6. 'Pre' → logprob: -9.429800033569336
    7. '
' → logprob: -9.554800033569336
    8. 'orde' → logprob: -9.679800033569336
    9. 'Or' → logprob: -9.804800033569336
    10. 'O' → logprob: -10.304800033569336

Token 240: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0004396095173433423
    2. '(' → logprob: -7.750439643859863
    3. ' (' → logprob: -12.250439643859863
    4. '(t' → logprob: -13.375439643859863
    5. '(root' → logprob: -14.000439643859863
    6. 'u' → logprob: -14.500439643859863
    7. '(tree' → logprob: -15.125439643859863
    8. '(n' → logprob: -15.625439643859863
    9. 'def' → logprob: -15.625439643859863
    10. '(s' → logprob: -16.000438690185547

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003610878484323621
    2. ')' → logprob: -5.753611087799072
    3. '):
' → logprob: -7.878611087799072
    4. ':' → logprob: -10.878610610961914
    5. 'u' → logprob: -10.878610610961914
    6. ' ):' → logprob: -11.753610610961914
    7. '   ' → logprob: -12.128610610961914
    8. '):
' → logprob: -14.378610610961914
    9. '(u' → logprob: -14.753610610961914
    10. ' u' → logprob: -15.003610610961914

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002981863683089614
    2. ' if' → logprob: -6.002981662750244
    3. 'if' → logprob: -7.627981662750244
    4. '	if' → logprob: -10.877982139587402
    5. ' ' → logprob: -14.627982139587402
    6. '       ' → logprob: -17.002981185913086
    7. '
' → logprob: -17.502981185913086
    8. '  ' → logprob: -17.752981185913086
    9. '    
' → logprob: -17.752981185913086
    10. '   ' → logprob: -17.877981185913086

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015274486504495144
    2. ' if' → logprob: -4.765274524688721
    3. '   ' → logprob: -5.015274524688721
    4. '	if' → logprob: -13.265274047851562
    5. ' ' → logprob: -15.140274047851562
    6. '
' → logprob: -16.515274047851562
    7. '  ' → logprob: -16.765274047851562
    8. 'def' → logprob: -17.515274047851562
    9. '```' → logprob: -18.640274047851562
    10. 'If' → logprob: -18.890274047851562

Token 244: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.04859963804483414
    2. 'u' → logprob: -3.0485997200012207
    3. '   ' → logprob: -12.298599243164062
    4. '	u' → logprob: -12.923599243164062
    5. '(u' → logprob: -13.423599243164062
    6. ' ' → logprob: -13.673599243164062
    7. '[u' → logprob: -14.173599243164062
    8. ' ' → logprob: -15.173599243164062
    9. '_u' → logprob: -15.298599243164062
    10. '    ' → logprob: -15.673599243164062

Token 245: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030162576586008072
    2. '==' → logprob: -3.5301625728607178
    3. ' !=' → logprob: -7.905162811279297
    4. ' ' → logprob: -11.280162811279297
    5. '!=' → logprob: -11.405162811279297
    6. '==-' → logprob: -11.405162811279297
    7. '=' → logprob: -12.155162811279297
    8. ' =' → logprob: -13.905162811279297
    9. ' ==
' → logprob: -14.655162811279297
    10. ')' → logprob: -14.655162811279297

Token 246: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024756586644798517
    2. ' -' → logprob: -6.002475738525391
    3. '-int' → logprob: -19.62747573852539
    4. '   ' → logprob: -20.00247573852539
    5. ' ' → logprob: -20.12747573852539
    6. '-u' → logprob: -20.25247573852539
    7. '1' → logprob: -21.62747573852539
    8. '−' → logprob: -21.87747573852539
    9. '-in' → logprob: -22.62747573852539
    10. '–' → logprob: -22.75247573852539

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011060434393584728
    2. '-' → logprob: -4.5110602378845215
    3. ' -' → logprob: -11.88606071472168
    4. ' ' → logprob: -12.51106071472168
    5. '   ' → logprob: -14.13606071472168
    6. '```' → logprob: -14.13606071472168
    7. '  ' → logprob: -16.82356071472168
    8. 'def' → logprob: -16.88606071472168
    9. '
' → logprob: -17.01106071472168
    10. '2' → logprob: -17.19856071472168

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01707155629992485
    2. ':
' → logprob: -4.517071723937988
    3. '       ' → logprob: -5.767071723937988
    4. '   ' → logprob: -6.392071723937988
    5. '):' → logprob: -7.392071723937988
    6. ')' → logprob: -8.017071723937988
    7. '<|end|>' → logprob: -8.767071723937988
    8. '):
' → logprob: -9.767071723937988
    9. ':return' → logprob: -11.767071723937988
    10. ' ' → logprob: -12.142071723937988

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12736427783966064
    2. '   ' → logprob: -2.127364158630371
    3. ' ' → logprob: -9.252364158630371
    4. '<|end|>' → logprob: -9.252364158630371
    5. '    ' → logprob: -9.377364158630371
    6. '  ' → logprob: -10.127364158630371
    7. '     ' → logprob: -10.252364158630371
    8. '      ' → logprob: -10.752364158630371
    9. ' return' → logprob: -11.627364158630371
    10. '    
' → logprob: -11.752364158630371

Token 250: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2521442174911499
    2. ' return' → logprob: -1.50214421749115
    3. '   ' → logprob: -8.502143859863281
    4. '       ' → logprob: -11.752143859863281
    5. '	return' → logprob: -13.627143859863281
    6. ' ' → logprob: -13.877143859863281
    7. ':return' → logprob: -13.877143859863281
    8. 'eturn' → logprob: -14.877143859863281
    9. '  ' → logprob: -15.127143859863281
    10. '
' → logprob: -15.627143859863281

Token 251: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024778012186288834
    2. ' print' → logprob: -4.399777889251709
    3. 'print' → logprob: -4.899777889251709
    4. '
' → logprob: -5.399777889251709
    5. ' 
' → logprob: -9.649778366088867
    6. '    
' → logprob: -10.149778366088867
    7. '	print' → logprob: -10.774778366088867
    8. 'in' → logprob: -10.899778366088867
    9. ' in' → logprob: -11.274778366088867
    10. '  ' → logprob: -11.649778366088867

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08337880671024323
    2. 'print' → logprob: -2.833378791809082
    3. ' print' → logprob: -4.083378791809082
    4. '
' → logprob: -5.458378791809082
    5. ' ' → logprob: -10.458378791809082
    6. '    
' → logprob: -10.708378791809082
    7. '	print' → logprob: -12.083378791809082
    8. '  
' → logprob: -12.708378791809082
    9. '```' → logprob: -12.958378791809082
    10. '  ' → logprob: -13.083378791809082

Token 253: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.38725173473358154
    2. ' in' → logprob: -1.1372517347335815
    3. '   ' → logprob: -8.012251853942871
    4. ' ' → logprob: -11.012251853942871
    5. ' pre' → logprob: -11.637251853942871
    6. '	in' → logprob: -11.637251853942871
    7. 'pre' → logprob: -12.762251853942871
    8. '  ' → logprob: -13.012251853942871
    9. 'print' → logprob: -13.137251853942871
    10. '    
' → logprob: -13.262251853942871

Token 254: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -2.2200749754119897e-06
    2. ' Parse' → logprob: -13.875001907348633
    3. 'Print' → logprob: -14.500001907348633
    4. 'P' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.000001907348633
    6. 'Par' → logprob: -16.375001907348633
    7. '.Parse' → logprob: -16.500001907348633
    8. 'parse' → logprob: -16.500001907348633
    9. 'Pars' → logprob: -16.500001907348633
    10. '(Parse' → logprob: -16.625001907348633

Token 255: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. 'tree' → logprob: -14.000001907348633
    4. ' (' → logprob: -18.875001907348633
    5. '	tree' → logprob: -19.375001907348633
    6. ' tree' → logprob: -19.875001907348633
    7. '(t' → logprob: -20.375001907348633
    8. '(Tree' → logprob: -20.875001907348633
    9. '(
' → logprob: -21.375001907348633
    10. '(tr' → logprob: -21.500001907348633

Token 256: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -15.875
    3. '[' → logprob: -16.625
    4. '[user' → logprob: -19.625
    5. '	u' → logprob: -20.75
    6. ' [' → logprob: -20.75
    7. '<u' → logprob: -21.375
    8. '[
' → logprob: -21.625
    9. '[s' → logprob: -22.0
    10. '
' → logprob: -22.0

Token 257: ']['' (ID: 12019)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.7372048862162046e-05
    2. 'u' → logprob: -10.750027656555176
    3. '[' → logprob: -12.250027656555176
    4. '['' → logprob: -14.750027656555176
    5. '
' → logprob: -15.875027656555176
    6. '	u' → logprob: -16.25002670288086
    7. ' ' → logprob: -16.25002670288086
    8. '][' → logprob: -16.25002670288086
    9. ' [' → logprob: -16.75002670288086
    10. '   ' → logprob: -17.12502670288086

Token 258: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0006422612932510674
    2. 'u' → logprob: -7.8756422996521
    3. '[u' → logprob: -8.500641822814941
    4. '['' → logprob: -10.375641822814941
    5. '[left' → logprob: -10.875641822814941
    6. ' left' → logprob: -12.375641822814941
    7. ''' → logprob: -13.000641822814941
    8. ''u' → logprob: -15.125641822814941
    9. 'right' → logprob: -15.125641822814941
    10. '.left' → logprob: -15.125641822814941

Token 259: ''])
' (ID: 16733)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2749485671520233
    2. ']' → logprob: -2.3999485969543457
    3. '])
' → logprob: -2.6499485969543457
    4. '[u' → logprob: -2.8999485969543457
    5. '   ' → logprob: -4.774948596954346
    6. ''])' → logprob: -5.149948596954346
    7. 'u' → logprob: -5.649948596954346
    8. '][' → logprob: -6.399948596954346
    9. ''u' → logprob: -7.149948596954346
    10. ']['' → logprob: -7.274948596954346

Token 260: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3181949257850647
    2. ' print' → logprob: -1.31819486618042
    3. '   ' → logprob: -5.31819486618042
    4. ' ' → logprob: -11.818195343017578
    5. '```' → logprob: -11.943195343017578
    6. '
' → logprob: -12.568195343017578
    7. '	print' → logprob: -14.568195343017578
    8. '  ' → logprob: -14.693195343017578
    9. '.print' → logprob: -15.318195343017578
    10. '    
' → logprob: -15.318195343017578

Token 261: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004080420359969139
    2. ' print' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.379080772399902
    4. ' ' → logprob: -15.629080772399902
    5. '
' → logprob: -16.004079818725586
    6. '.print' → logprob: -16.879079818725586
    7. '```' → logprob: -17.004079818725586
    8. '	print' → logprob: -17.629079818725586
    9. 'printf' → logprob: -18.129079818725586
    10. '_print' → logprob: -19.129079818725586

Token 262: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001508674118667841
    2. '(' → logprob: -6.501508712768555
    3. 'f' → logprob: -12.126508712768555
    4. '('' → logprob: -14.126508712768555
    5. '(F' → logprob: -16.251508712768555
    6. '(
' → logprob: -16.751508712768555
    7. '(end' → logprob: -17.251508712768555
    8. '()' → logprob: -17.626508712768555
    9. ' (' → logprob: -18.001508712768555
    10. '((' → logprob: -18.126508712768555

Token 263: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017183588352054358
    2. ' f' → logprob: -8.875171661376953
    3. 'f' → logprob: -10.875171661376953
    4. '{' → logprob: -12.625171661376953
    5. '('' → logprob: -12.625171661376953
    6. ' ' → logprob: -12.750171661376953
    7. ' '' → logprob: -13.250171661376953
    8. '`' → logprob: -13.750171661376953
    9. '"' → logprob: -15.250171661376953
    10. ' {' → logprob: -15.750171661376953

Token 264: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0021111206151545048
    2. '{' → logprob: -6.252110958099365
    3. ''' → logprob: -8.752111434936523
    4. ' ' → logprob: -10.877111434936523
    5. ' f' → logprob: -13.127111434936523
    6. ' u' → logprob: -13.502111434936523
    7. ' '' → logprob: -13.877111434936523
    8. ' ' → logprob: -14.252111434936523
    9. '`' → logprob: -15.502111434936523
    10. ' `' → logprob: -16.252111434936523

Token 265: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.6240566083070007e-06
    2. ' u' → logprob: -13.375001907348633
    3. '
' → logprob: -18.625001907348633
    4. '	u' → logprob: -18.750001907348633
    5. ''u' → logprob: -20.375001907348633
    6. '   ' → logprob: -20.625001907348633
    7. ' ' → logprob: -21.000001907348633
    8. '<u' → logprob: -21.250001907348633
    9. '{' → logprob: -21.375001907348633
    10. '[u' → logprob: -21.875001907348633

Token 266: '}',' (ID: 36898)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0028709694743156433
    2. '}',' → logprob: -6.252871036529541
    3. '')' → logprob: -7.002871036529541
    4. '}' → logprob: -12.002870559692383
    5. ''),' → logprob: -12.002870559692383
    6. '','' → logprob: -12.127870559692383
    7. ''}' → logprob: -12.377870559692383
    8. ''' → logprob: -12.627870559692383
    9. ' ',' → logprob: -12.877870559692383
    10. '   ' → logprob: -13.752870559692383

Token 267: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.25192946195602417
    2. 'end' → logprob: -1.501929521560669
    3. ',end' → logprob: -16.126930236816406
    4. '=end' → logprob: -17.001930236816406
    5. ''end' → logprob: -17.126930236816406
    6. '	end' → logprob: -17.126930236816406
    7. '(end' → logprob: -17.376930236816406
    8. '[end' → logprob: -17.876930236816406
    9. ' ' → logprob: -18.876930236816406
    10. ':end' → logprob: -19.376930236816406

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7374674677848816
    2. '='' → logprob: -0.7374674677848816
    3. '=' → logprob: -3.2374675273895264
    4. ' ='' → logprob: -5.862467288970947
    5. '=''' → logprob: -7.237467288970947
    6. '='')
' → logprob: -7.737467288970947
    7. ' '')' → logprob: -9.987467765808105
    8. ')' → logprob: -10.612467765808105
    9. ' =)' → logprob: -11.862467765808105
    10. '('' → logprob: -12.487467765808105

Token 269: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028581321239471436
    2. '''' → logprob: -6.2528581619262695
    3. ' '')' → logprob: -7.0028581619262695
    4. '''
' → logprob: -11.62785816192627
    5. ')' → logprob: -12.37785816192627
    6. ' '')
' → logprob: -13.12785816192627
    7. ''',' → logprob: -13.12785816192627
    8. '"' → logprob: -13.62785816192627
    9. ''''' → logprob: -14.00285816192627
    10. '')' → logprob: -14.87785816192627

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20860108733177185
    2. 'in' → logprob: -1.7086011171340942
    3. ' in' → logprob: -4.958600997924805
    4. '
' → logprob: -9.208600997924805
    5. '	in' → logprob: -11.333600997924805
    6. '    
' → logprob: -11.583600997924805
    7. ' ' → logprob: -12.083600997924805
    8. '  ' → logprob: -13.208600997924805
    9. '[in' → logprob: -13.208600997924805
    10. 'def' → logprob: -13.583600997924805

Token 271: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.016737978905439377
    2. ' in' → logprob: -4.141737937927246
    3. '   ' → logprob: -7.266737937927246
    4. '
' → logprob: -13.391737937927246
    5. '	in' → logprob: -13.641737937927246
    6. ' ' → logprob: -14.391737937927246
    7. '  ' → logprob: -14.516737937927246
    8. '    
' → logprob: -14.641737937927246
    9. '[in' → logprob: -16.141738891601562
    10. '```' → logprob: -16.391738891601562

Token 272: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -4.320199877838604e-07
    2. '(Parse' → logprob: -16.125
    3. '_parse' → logprob: -16.125
    4. '_Parse' → logprob: -16.5
    5. '(tree' → logprob: -17.25
    6. 'parse' → logprob: -17.375
    7. '(u' → logprob: -18.0
    8. ' Parse' → logprob: -18.25
    9. 'tree' → logprob: -18.375
    10. 'Par' → logprob: -18.875

Token 273: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. 'tree' → logprob: -15.375000953674316
    4. ' (' → logprob: -16.500001907348633
    5. '(t' → logprob: -18.000001907348633
    6. '(tr' → logprob: -18.500001907348633
    7. '(
' → logprob: -18.750001907348633
    8. '	tree' → logprob: -19.250001907348633
    9. '(table' → logprob: -20.375001907348633
    10. '((' → logprob: -20.750001907348633

Token 274: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.750003814697266
    3. 'u' → logprob: -14.000003814697266
    4. 'tree' → logprob: -15.875003814697266
    5. '[t' → logprob: -17.875003814697266
    6. ' [' → logprob: -18.500003814697266
    7. '(u' → logprob: -19.250003814697266
    8. '<u' → logprob: -19.500003814697266
    9. '[
' → logprob: -19.875003814697266
    10. '
' → logprob: -19.875003814697266

Token 275: ']['' (ID: 12019)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.006884334143251181
    2. '['' → logprob: -5.0068840980529785
    3. 'u' → logprob: -8.881884574890137
    4. ']['' → logprob: -11.006884574890137
    5. '[' → logprob: -11.881884574890137
    6. ''u' → logprob: -13.381884574890137
    7. '{'' → logprob: -13.631884574890137
    8. '][' → logprob: -14.006884574890137
    9. '
' → logprob: -14.006884574890137
    10. ']' → logprob: -14.756884574890137

Token 276: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.362307223957032e-05
    2. 'left' → logprob: -10.250073432922363
    3. 'u' → logprob: -10.875073432922363
    4. ' right' → logprob: -11.750073432922363
    5. '[right' → logprob: -11.875073432922363
    6. '[u' → logprob: -13.500073432922363
    7. '	right' → logprob: -14.375073432922363
    8. '.right' → logprob: -15.250073432922363
    9. ''' → logprob: -15.500073432922363
    10. '
' → logprob: -15.625073432922363

Token 277: ''])

' (ID: 57615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005632608663290739
    2. '])' → logprob: -5.505632400512695
    3. '[u' → logprob: -7.755632400512695
    4. '})' → logprob: -7.880632400512695
    5. '   ' → logprob: -8.380632400512695
    6. ')
' → logprob: -8.755632400512695
    7. '')' → logprob: -8.755632400512695
    8. ''])' → logprob: -9.755632400512695
    9. ')")' → logprob: -10.255632400512695
    10. '))' → logprob: -11.005632400512695

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '
' → logprob: -17.0
    3. ' def' → logprob: -18.375
    4. '  
' → logprob: -19.75
    5. '```' → logprob: -20.375
    6. '    
' → logprob: -20.625
    7. '	def' → logprob: -21.625
    8. 'd' → logprob: -21.75
    9. ' 
' → logprob: -22.875
    10. '   
' → logprob: -23.0

Token 279: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.048605985939502716
    2. ' post' → logprob: -3.0486059188842773
    3. 'pos' → logprob: -11.548605918884277
    4. 'pre' → logprob: -12.298605918884277
    5. ' pos' → logprob: -13.298605918884277
    6. '	post' → logprob: -13.673605918884277
    7. ''post' → logprob: -15.173605918884277
    8. '_post' → logprob: -15.298605918884277
    9. '   ' → logprob: -15.423605918884277
    10. 'level' → logprob: -15.548605918884277

Token 280: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -1.981667537620524e-06
    2. 'P' → logprob: -13.875001907348633
    3. '(Parse' → logprob: -14.500001907348633
    4. ' Parse' → logprob: -16.250001907348633
    5. 'parse' → logprob: -16.500001907348633
    6. 'Pars' → logprob: -16.500001907348633
    7. 'Par' → logprob: -16.500001907348633
    8. 'Parser' → logprob: -16.875001907348633
    9. 'Parsing' → logprob: -17.375001907348633
    10. 'Print' → logprob: -17.625001907348633

Token 281: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -8.506661833962426e-05
    2. '(' → logprob: -9.37508487701416
    3. '(tree' → logprob: -16.500085830688477
    4. '(root' → logprob: -16.625085830688477
    5. ' (' → logprob: -17.000085830688477
    6. 'u' → logprob: -17.500085830688477
    7. '(s' → logprob: -17.875085830688477
    8. '(
' → logprob: -18.375085830688477
    9. '(n' → logprob: -18.500085830688477
    10. '(user' → logprob: -18.625085830688477

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011133303865790367
    2. '):
' → logprob: -4.511133193969727
    3. ')' → logprob: -10.386133193969727
    4. ':' → logprob: -10.886133193969727
    5. 'u' → logprob: -11.011133193969727
    6. '(u' → logprob: -11.136133193969727
    7. ' ):' → logprob: -13.511133193969727
    8. '   ' → logprob: -13.636133193969727
    9. '):
' → logprob: -13.886133193969727
    10. '):

' → logprob: -15.011133193969727

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.41129949549213e-05
    2. ' if' → logprob: -9.500083923339844
    3. ' ' → logprob: -13.000083923339844
    4. '  ' → logprob: -13.000083923339844
    5. '<|end|>' → logprob: -13.250083923339844
    6. '    ' → logprob: -13.625083923339844
    7. '
' → logprob: -15.125083923339844
    8. 'if' → logprob: -15.500083923339844
    9. '       ' → logprob: -15.750083923339844
    10. ')' → logprob: -15.875083923339844

Token 284: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4760606288909912
    2. ' if' → logprob: -0.9760606288909912
    3. '   ' → logprob: -6.22606086730957
    4. '
' → logprob: -12.97606086730957
    5. ' ' → logprob: -13.60106086730957
    6. '	if' → logprob: -14.22606086730957
    7. '  ' → logprob: -16.35106086730957
    8. 'If' → logprob: -16.35106086730957
    9. 'def' → logprob: -17.10106086730957
    10. '```' → logprob: -17.22606086730957

Token 285: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.08894437551498413
    2. 'u' → logprob: -2.463944435119629
    3. ' ' → logprob: -13.463944435119629
    4. '   ' → logprob: -13.463944435119629
    5. '(u' → logprob: -14.213944435119629
    6. '	u' → logprob: -14.713944435119629
    7. 'tree' → logprob: -15.588944435119629
    8. '[u' → logprob: -15.963944435119629
    9. ' ' → logprob: -16.088943481445312
    10. '    ' → logprob: -16.588943481445312

Token 286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519432604312897
    2. '==' → logprob: -1.5019432306289673
    3. '=='' → logprob: -12.251943588256836
    4. ' ' → logprob: -12.876943588256836
    5. '==-' → logprob: -12.876943588256836
    6. '   ' → logprob: -14.251943588256836
    7. '=' → logprob: -14.251943588256836
    8. '==
' → logprob: -14.501943588256836
    9. ')' → logprob: -15.001943588256836
    10. ' =='' → logprob: -15.376943588256836

Token 287: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014163628220558167
    2. ' -' → logprob: -4.264163494110107
    3. '   ' → logprob: -16.764163970947266
    4. '-u' → logprob: -16.764163970947266
    5. ' ' → logprob: -16.889163970947266
    6. 'u' → logprob: -17.389163970947266
    7. ' u' → logprob: -18.639163970947266
    8. '  ' → logprob: -19.014163970947266
    9. '-tree' → logprob: -19.264163970947266
    10. '1' → logprob: -19.264163970947266

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021920178551226854
    2. '-' → logprob: -6.12719202041626
    3. ' -' → logprob: -12.627191543579102
    4. ' ' → logprob: -13.252191543579102
    5. '```' → logprob: -14.377191543579102
    6. '   ' → logprob: -15.439691543579102
    7. 'def' → logprob: -15.939691543579102
    8. '
' → logprob: -16.2521915435791
    9. '2' → logprob: -16.7521915435791
    10. ''-' → logprob: -16.8146915435791

Token 289: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3859398663043976
    2. ':' → logprob: -1.5109398365020752
    3. '       ' → logprob: -2.885939836502075
    4. '   ' → logprob: -3.135939836502075
    5. '):
' → logprob: -9.260939598083496
    6. ':return' → logprob: -9.885939598083496
    7. '):' → logprob: -11.260939598083496
    8. ' ' → logprob: -11.635939598083496
    9. '     ' → logprob: -11.635939598083496
    10. '  ' → logprob: -11.635939598083496

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3873918950557709
    2. '   ' → logprob: -1.1373919248580933
    3. ' return' → logprob: -8.012392044067383
    4. '
' → logprob: -9.512392044067383
    5. 'return' → logprob: -9.887392044067383
    6. '	return' → logprob: -11.012392044067383
    7. '     ' → logprob: -11.262392044067383
    8. ' ' → logprob: -11.637392044067383
    9. '    
' → logprob: -12.012392044067383
    10. '    ' → logprob: -12.137392044067383

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10497695207595825
    2. ' return' → logprob: -2.3549768924713135
    3. '   ' → logprob: -5.354977130889893
    4. '       ' → logprob: -11.479976654052734
    5. '	return' → logprob: -11.854976654052734
    6. ' ' → logprob: -11.979976654052734
    7. '  ' → logprob: -12.229976654052734
    8. '
' → logprob: -12.979976654052734
    9. ':return' → logprob: -12.979976654052734
    10. '    ' → logprob: -14.229976654052734

Token 292: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018953735008835793
    2. '
' → logprob: -4.393953800201416
    3. ' post' → logprob: -5.393953800201416
    4. ' 
' → logprob: -6.768953800201416
    5. 'post' → logprob: -7.768953800201416
    6. '	post' → logprob: -9.018953323364258
    7. '(post' → logprob: -9.393953323364258
    8. ''post' → logprob: -10.018953323364258
    9. '    
' → logprob: -11.143953323364258
    10. ' ' → logprob: -11.393953323364258

Token 293: '   ' (ID: 271)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.01828327216207981
    2. '   ' → logprob: -4.268283367156982
    3. ' post' → logprob: -5.518283367156982
    4. '	post' → logprob: -9.268282890319824
    5. ''post' → logprob: -13.018282890319824
    6. '(post' → logprob: -13.768282890319824
    7. '$post' → logprob: -15.518282890319824
    8. '.post' → logprob: -15.518282890319824
    9. '
' → logprob: -16.01828384399414
    10. '_post' → logprob: -16.26828384399414

Token 294: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' (adapté à ' post') → logprob: -0.00033546582562848926
    2. ' post' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. '	post' → logprob: -18.750335693359375
    5. ''post' → logprob: -19.625335693359375
    6. '(post' → logprob: -20.125335693359375
    7. '$post' → logprob: -22.125335693359375
    8. '.post' → logprob: -22.500335693359375
    9. 'pre' → logprob: -23.000335693359375
    10. ' ' → logprob: -23.375335693359375

Token 295: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: 0.0
    2. 'Post' → logprob: -18.0
    3. 'parse' → logprob: -18.0
    4. 'Parser' → logprob: -18.125
    5. '(Parse' → logprob: -18.625
    6. 'Pars' → logprob: -19.375
    7. 'P' → logprob: -20.0
    8. 'Par' → logprob: -20.125
    9. 'Parce' → logprob: -20.125
    10. 'Parsing' → logprob: -20.5

Token 296: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. 'tree' → logprob: -14.750003814697266
    4. '(t' → logprob: -17.125003814697266
    5. '(tr' → logprob: -18.750003814697266
    6. ' (' → logprob: -19.000003814697266
    7. '	tree' → logprob: -19.500003814697266
    8. '(
' → logprob: -19.500003814697266
    9. '(Tree' → logprob: -19.500003814697266
    10. '(table' → logprob: -21.000003814697266

Token 297: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.292907877039397e-06
    2. 'u' → logprob: -12.75000286102295
    3. '[' → logprob: -14.87500286102295
    4. '[user' → logprob: -19.125003814697266
    5. '[
' → logprob: -19.625003814697266
    6. '<u' → logprob: -19.875003814697266
    7. '```' → logprob: -20.125003814697266
    8. '
' → logprob: -20.500003814697266
    9. '	u' → logprob: -20.500003814697266
    10. '[t' → logprob: -20.625003814697266

Token 298: ']['' (ID: 12019)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0006718054646626115
    2. 'u' → logprob: -7.625671863555908
    3. '['' → logprob: -8.62567138671875
    4. '[' → logprob: -13.37567138671875
    5. '][' → logprob: -14.12567138671875
    6. ''u' → logprob: -14.37567138671875
    7. ']['' → logprob: -14.50067138671875
    8. ' u' → logprob: -15.87567138671875
    9. '   ' → logprob: -16.12567138671875
    10. '	u' → logprob: -16.37567138671875

Token 299: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.015924684703350067
    2. 'u' → logprob: -4.265924453735352
    3. '[u' → logprob: -6.640924453735352
    4. 'right' → logprob: -7.890924453735352
    5. '[left' → logprob: -10.390924453735352
    6. ' left' → logprob: -11.015924453735352
    7. '['' → logprob: -11.390924453735352
    8. ''u' → logprob: -12.140924453735352
    9. ''' → logprob: -12.265924453735352
    10. '`' → logprob: -13.765924453735352

Token 300: ''])
' (ID: 16733)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.34052833914756775
    2. '])' → logprob: -1.3405283689498901
    3. ''])
' → logprob: -4.09052848815918
    4. ''])' → logprob: -5.09052848815918
    5. ']' → logprob: -6.46552848815918
    6. '[u' → logprob: -6.46552848815918
    7. '   ' → logprob: -8.21552848815918
    8. ')
' → logprob: -8.84052848815918
    9. '])
' → logprob: -9.21552848815918
    10. ')' → logprob: -9.34052848815918

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20339301228523254
    2. 'post' → logprob: -1.7033929824829102
    3. ' post' → logprob: -6.32839298248291
    4. '
' → logprob: -8.95339298248291
    5. '(post' → logprob: -10.82839298248291
    6. ''post' → logprob: -11.07839298248291
    7. '	post' → logprob: -11.32839298248291
    8. '    
' → logprob: -12.45339298248291
    9. ' ' → logprob: -12.57839298248291
    10. '```' → logprob: -12.95339298248291

Token 302: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' (adapté à ' post') → logprob: -0.00861456897109747
    2. ' post' → logprob: -4.758614540100098
    3. ''post' → logprob: -20.508615493774414
    4. '.post' → logprob: -20.758615493774414
    5. '	post' → logprob: -20.883615493774414
    6. '_post' → logprob: -21.008615493774414
    7. 'Post' → logprob: -21.133615493774414
    8. '(post' → logprob: -21.508615493774414
    9. '
' → logprob: -22.008615493774414
    10. '   ' → logprob: -23.008615493774414

Token 303: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: 0.0
    2. '(Parse' → logprob: -18.125
    3. '(tree' → logprob: -18.25
    4. 'parse' → logprob: -18.875
    5. 'Parser' → logprob: -19.0
    6. ' Parse' → logprob: -19.0
    7. 'tree' → logprob: -20.0
    8. '_parse' → logprob: -20.375
    9. 'Post' → logprob: -20.5
    10. 'Parsed' → logprob: -20.5

Token 304: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -6.802049756515771e-05
    2. 'tree' → logprob: -10.000067710876465
    3. '(u' → logprob: -10.875067710876465
    4. '(' → logprob: -13.125067710876465
    5. ' (' → logprob: -14.125067710876465
    6. '[' → logprob: -14.875067710876465
    7. '(t' → logprob: -15.500067710876465
    8. '[u' → logprob: -16.50006866455078
    9. ' tree' → logprob: -16.50006866455078
    10. '(
' → logprob: -17.00006866455078

Token 305: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.176947600673884e-05
    2. 'u' → logprob: -10.750021934509277
    3. '[' → logprob: -15.000021934509277
    4. '(u' → logprob: -19.25002098083496
    5. '	u' → logprob: -19.37502098083496
    6. '[
' → logprob: -19.62502098083496
    7. '
' → logprob: -20.50002098083496
    8. '['' → logprob: -20.50002098083496
    9. '[t' → logprob: -20.50002098083496
    10. ' u' → logprob: -20.62502098083496

Token 306: ']['' (ID: 12019)
  Prédit: '][''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.014451303519308567
    2. '['' → logprob: -4.264451503753662
    3. 'u' → logprob: -8.889451026916504
    4. '[u' → logprob: -9.139451026916504
    5. ''' → logprob: -11.389451026916504
    6. '']['' → logprob: -11.389451026916504
    7. ']' → logprob: -11.889451026916504
    8. '][' → logprob: -12.389451026916504
    9. ''u' → logprob: -12.514451026916504
    10. ''s' → logprob: -12.764451026916504

Token 307: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.080963092041202e-06
    2. '[right' → logprob: -12.875004768371582
    3. ''' → logprob: -13.500004768371582
    4. ' right' → logprob: -14.250004768371582
    5. '['' → logprob: -15.125004768371582
    6. 'u' → logprob: -16.7500057220459
    7. '   ' → logprob: -17.5000057220459
    8. ''r' → logprob: -17.5000057220459
    9. '	right' → logprob: -17.5000057220459
    10. ''s' → logprob: -17.7500057220459

Token 308: ''])
' (ID: 16733)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.28283196687698364
    2. '])
' → logprob: -2.282831907272339
    3. ')
' → logprob: -2.657831907272339
    4. ')' → logprob: -3.657831907272339
    5. '])' → logprob: -4.157832145690918
    6. '   ' → logprob: -4.157832145690918
    7. ']' → logprob: -4.282832145690918
    8. '')
' → logprob: -7.157832145690918
    9. ']
' → logprob: -7.407832145690918
    10. ']')
' → logprob: -8.157832145690918

Token 309: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34901583194732666
    2. '   ' → logprob: -1.3490158319473267
    3. ' print' → logprob: -3.349015712738037
    4. '
' → logprob: -13.849016189575195
    5. '```' → logprob: -13.849016189575195
    6. '	print' → logprob: -14.349016189575195
    7. ' ' → logprob: -15.099016189575195
    8. '.print' → logprob: -15.099016189575195
    9. '    
' → logprob: -16.474016189575195
    10. '  ' → logprob: -16.474016189575195

Token 310: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005247156601399183
    2. ' print' → logprob: -5.255247116088867
    3. '   ' → logprob: -11.255247116088867
    4. '```' → logprob: -15.755247116088867
    5. '
' → logprob: -15.880247116088867
    6. ' ' → logprob: -17.755247116088867
    7. '.print' → logprob: -18.130247116088867
    8. '	print' → logprob: -18.255247116088867
    9. '`' → logprob: -18.880247116088867
    10. 'printf' → logprob: -19.005247116088867

Token 311: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.841743303695694e-05
    2. '(' → logprob: -9.25009822845459
    3. 'f' → logprob: -13.12509822845459
    4. ' (' → logprob: -16.625099182128906
    5. '(
' → logprob: -17.000099182128906
    6. '(F' → logprob: -17.875099182128906
    7. '('' → logprob: -18.125099182128906
    8. '(end' → logprob: -19.500099182128906
    9. '()' → logprob: -19.625099182128906
    10. '((' → logprob: -19.750099182128906

Token 312: ''' (ID: 6)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1814490705728531
    2. '(f' → logprob: -1.931449055671692
    3. ''' → logprob: -4.056448936462402
    4. ' f' → logprob: -5.681448936462402
    5. '(' → logprob: -9.056448936462402
    6. '('' → logprob: -9.056448936462402
    7. ''f' → logprob: -10.806448936462402
    8. '[f' → logprob: -11.931448936462402
    9. '{' → logprob: -12.431448936462402
    10. '`' → logprob: -12.681448936462402

Token 313: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.002533925464376807
    2. '{' → logprob: -6.002533912658691
    3. ' u' → logprob: -10.752533912658691
    4. ''' → logprob: -11.002533912658691
    5. ' ' → logprob: -11.127533912658691
    6. ' f' → logprob: -12.502533912658691
    7. ' ' → logprob: -14.377533912658691
    8. ' {}' → logprob: -15.127533912658691
    9. '`' → logprob: -15.377533912658691
    10. 'u' → logprob: -15.502533912658691

Token 314: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.061054359131958e-06
    2. ' u' → logprob: -11.750007629394531
    3. '
' → logprob: -16.62500762939453
    4. ''u' → logprob: -18.12500762939453
    5. '   ' → logprob: -18.25000762939453
    6. ' ' → logprob: -18.50000762939453
    7. '	u' → logprob: -18.62500762939453
    8. ''' → logprob: -20.00000762939453
    9. '[u' → logprob: -20.00000762939453
    10. '

' → logprob: -20.37500762939453

Token 315: '}',' (ID: 36898)
  Prédit: '}','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}',' → logprob: -9.913265239447355e-05
    2. '',' → logprob: -9.750099182128906
    3. '}' → logprob: -10.500099182128906
    4. '}'' → logprob: -12.125099182128906
    5. '}')' → logprob: -12.500099182128906
    6. ' }' → logprob: -13.000099182128906
    7. '},' → logprob: -14.500099182128906
    8. ''}' → logprob: -14.750099182128906
    9. '}','' → logprob: -15.125099182128906
    10. '   ' → logprob: -15.125099182128906

Token 316: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.014163628220558167
    2. ' end' → logprob: -4.264163494110107
    3. ''end' → logprob: -16.889163970947266
    4. '   ' → logprob: -18.389163970947266
    5. '	end' → logprob: -18.514163970947266
    6. ' ' → logprob: -18.889163970947266
    7. '(end' → logprob: -19.389163970947266
    8. ',end' → logprob: -20.014163970947266
    9. '=end' → logprob: -20.139163970947266
    10. '[end' → logprob: -20.639163970947266

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7903279066085815
    2. '='' → logprob: -1.0403279066085815
    3. '=' → logprob: -1.6653279066085815
    4. '=''' → logprob: -5.790328025817871
    5. ' ='' → logprob: -7.540328025817871
    6. '='')
' → logprob: -9.540328025817871
    7. '('' → logprob: -9.915328025817871
    8. ' '')' → logprob: -10.040328025817871
    9. '   ' → logprob: -10.165328025817871
    10. ')' → logprob: -11.290328025817871

Token 318: ' ''' (ID: 8686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007324361358769238
    2. '''' → logprob: -7.250732421875
    3. ' '')' → logprob: -10.750732421875
    4. '''
' → logprob: -14.750732421875
    5. '')' → logprob: -15.375732421875
    6. ')' → logprob: -15.875732421875
    7. ''',' → logprob: -16.000732421875
    8. '"' → logprob: -16.000732421875
    9. ''''' → logprob: -16.625732421875
    10. ''S' → logprob: -18.375732421875

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005597044946625829
    2. ')
' → logprob: -7.5005598068237305
    3. ')

' → logprob: -12.25055980682373
    4. '')' → logprob: -13.50055980682373
    5. ' )' → logprob: -15.87555980682373
    6. ')`' → logprob: -16.250558853149414
    7. ')\' → logprob: -16.750558853149414
    8. ')
' → logprob: -16.875558853149414
    9. '```' → logprob: -17.250558853149414
    10. '")' → logprob: -17.500558853149414

Token 320: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004638149403035641
    2. 'pre' → logprob: -5.379638195037842
    3. '
' → logprob: -11.504637718200684
    4. 'root' → logprob: -12.754637718200684
    5. 'pr' → logprob: -13.629637718200684
    6. 'def' → logprob: -13.754637718200684
    7. 'if' → logprob: -14.379637718200684
    8. '```' → logprob: -14.379637718200684
    9. 'post' → logprob: -15.004637718200684
    10. 'for' → logprob: -15.754637718200684

Token 321: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04708823561668396
    2. '(' → logprob: -4.422088146209717
    3. '(f' → logprob: -4.547088146209717
    4. '("("' → logprob: -4.547088146209717
    5. '('(' → logprob: -5.172088146209717
    6. '("' → logprob: -5.422088146209717
    7. '()' → logprob: -6.547088146209717
    8. '("(' → logprob: -7.172088146209717
    9. 'f' → logprob: -8.172088623046875
    10. '('_' → logprob: -9.672088623046875

Token 322: 'Pre' (ID: 4319)
  Prédit: 'Pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pre' → logprob: -0.0026590123306959867
    2. 'pre' → logprob: -6.127658843994141
    3. 'Root' → logprob: -8.37765884399414
    4. 'root' → logprob: -9.25265884399414
    5. '0' → logprob: -10.37765884399414
    6. 'Node' → logprob: -10.50265884399414
    7. '')' → logprob: -11.25265884399414
    8. ''' → logprob: -11.25265884399414
    9. 'Prefix' → logprob: -11.62765884399414
    10. ' preorder' → logprob: -11.62765884399414

Token 323: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0004860842600464821
    2. 'Order' → logprob: -8.125486373901367
    3. 'orde' → logprob: -10.125486373901367
    4. 'ore' → logprob: -10.250486373901367
    5. '')' → logprob: -10.375486373901367
    6. '')
' → logprob: -10.875486373901367
    7. '-order' → logprob: -11.250486373901367
    8. ' order' → logprob: -11.375486373901367
    9. ''' → logprob: -11.625486373901367
    10. 'or' → logprob: -12.000486373901367

Token 324: '')
' (ID: 2515)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04917030781507492
    2. ' :' → logprob: -3.2991702556610107
    3. ':',' → logprob: -5.29917049407959
    4. ':')
' → logprob: -5.29917049407959
    5. ':'' → logprob: -7.04917049407959
    6. '')' → logprob: -9.79917049407959
    7. ' traversal' → logprob: -9.92417049407959
    8. ' :'' → logprob: -10.17417049407959
    9. ':u' → logprob: -11.42417049407959
    10. '：' → logprob: -11.92417049407959

Token 325: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.004096093121916056
    2. ' pre' → logprob: -5.504096031188965
    3. 'print' → logprob: -11.629096031188965
    4. '(pre' → logprob: -11.754096031188965
    5. ')' → logprob: -15.004096031188965
    6. ' preorder' → logprob: -16.00409698486328
    7. '	pre' → logprob: -16.12909698486328
    8. ':' → logprob: -16.25409698486328
    9. 'post' → logprob: -16.50409698486328
    10. '_pre' → logprob: -16.87909698486328

Token 326: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -4.127333340875339e-06
    2. 'pre' → logprob: -13.000003814697266
    3. 'Pre' → logprob: -13.625003814697266
    4. 'parse' → logprob: -14.500003814697266
    5. '(Parse' → logprob: -17.500003814697266
    6. ' Parse' → logprob: -18.375003814697266
    7. 'Pars' → logprob: -18.500003814697266
    8. 'Parser' → logprob: -18.625003814697266
    9. 'Print' → logprob: -19.250003814697266
    10. '_parse' → logprob: -19.375003814697266

Token 327: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -8.995397365652025e-05
    2. '(' → logprob: -9.750089645385742
    3. '(tree' → logprob: -10.375089645385742
    4. '(ROOT' → logprob: -15.625089645385742
    5. ' (' → logprob: -17.000089645385742
    6. '(start' → logprob: -17.750089645385742
    7. '(
' → logprob: -18.250089645385742
    8. '(raw' → logprob: -18.375089645385742
    9. '[root' → logprob: -18.625089645385742
    10. '(depth' → logprob: -18.750089645385742

Token 328: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10022111982107162
    2. ')' → logprob: -2.3502211570739746
    3. ')
' → logprob: -11.350220680236816
    4. ')`
' → logprob: -13.850220680236816
    5. '')' → logprob: -14.725220680236816
    6. ')

' → logprob: -14.975220680236816
    7. ' )
' → logprob: -15.100220680236816
    8. '')
' → logprob: -15.475220680236816
    9. 'print' → logprob: -15.850220680236816
    10. '())
' → logprob: -15.975220680236816

Token 329: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '
' → logprob: -16.5
    4. '\n' → logprob: -18.875
    5. '```' → logprob: -20.0
    6. '\' → logprob: -20.75
    7. 'prints' → logprob: -21.0
    8. ' 
' → logprob: -21.625
    9. '``' → logprob: -21.625
    10. '    
' → logprob: -21.75

Token 330: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20233452320098877
    2. '()
' → logprob: -1.7023345232009888
    3. '('' → logprob: -7.077334403991699
    4. '('\' → logprob: -10.7023344039917
    5. '('')
' → logprob: -10.9523344039917
    6. '(' → logprob: -11.0773344039917
    7. '()

' → logprob: -11.3273344039917
    8. '()
' → logprob: -12.4523344039917
    9. ' ()' → logprob: -13.0773344039917
    10. '("")' → logprob: -13.7023344039917

Token 331: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. 'Print' → logprob: -19.0
    4. 'in' → logprob: -19.125
    5. 'In' → logprob: -19.5
    6. '```' → logprob: -20.375
    7. '('' → logprob: -20.5
    8. '(print' → logprob: -21.125
    9. '
' → logprob: -21.625
    10. '.print' → logprob: -21.625

Token 332: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.50001049041748
    3. '("' → logprob: -15.50001049041748
    4. '(f' → logprob: -15.87501049041748
    5. ' ('' → logprob: -16.000011444091797
    6. '()' → logprob: -17.500011444091797
    7. '('(' → logprob: -17.750011444091797
    8. '(('' → logprob: -18.250011444091797
    9. ''' → logprob: -18.500011444091797
    10. 'f' → logprob: -19.000011444091797

Token 333: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.0006651374278590083
    2. ''' → logprob: -7.500665187835693
    3. 'in' → logprob: -9.625664710998535
    4. '('' → logprob: -10.500664710998535
    5. ''in' → logprob: -11.875664710998535
    6. 'Post' → logprob: -12.000664710998535
    7. ' inorder' → logprob: -13.500664710998535
    8. '"In' → logprob: -13.625664710998535
    9. 'IN' → logprob: -13.875664710998535
    10. '(In' → logprob: -14.625664710998535

Token 334: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.690834273584187e-05
    2. 'Order' → logprob: -10.25003719329834
    3. 'orde' → logprob: -14.75003719329834
    4. 'oder' → logprob: -15.00003719329834
    5. 'or' → logprob: -15.25003719329834
    6. 'o' → logprob: -15.37503719329834
    7. 'print' → logprob: -16.250036239624023
    8. 'ordre' → logprob: -17.125036239624023
    9. 'ordering' → logprob: -17.125036239624023
    10. '```' → logprob: -17.125036239624023

Token 335: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.12696443498134613
    2. '')' → logprob: -2.1269643306732178
    3. '')
' → logprob: -10.376964569091797
    4. ''' → logprob: -13.876964569091797
    5. '()' → logprob: -14.126964569091797
    6. '('' → logprob: -14.501964569091797
    7. '")
' → logprob: -14.501964569091797
    8. '(root' → logprob: -14.626964569091797
    9. '')

' → logprob: -14.876964569091797
    10. ':')
' → logprob: -15.001964569091797

Token 336: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.9361264946837764e-07
    2. '(in' → logprob: -16.125
    3. ' in' → logprob: -17.75
    4. '(' → logprob: -21.5
    5. 'print' → logprob: -22.875
    6. 'for' → logprob: -22.875
    7. '[in' → logprob: -23.875
    8. '	in' → logprob: -24.25
    9. '```' → logprob: -24.375
    10. '
' → logprob: -24.875

Token 337: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -4.320199877838604e-07
    2. 'Print' → logprob: -15.25
    3. 'Parser' → logprob: -16.75
    4. '(Parse' → logprob: -16.75
    5. 'parse' → logprob: -17.125
    6. ' Parse' → logprob: -19.125
    7. '_parse' → logprob: -19.625
    8. 'in' → logprob: -20.0
    9. 'Par' → logprob: -20.125
    10. 'In' → logprob: -20.25

Token 338: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'root' → logprob: -15.250008583068848
    4. '(tree' → logprob: -16.37500762939453
    5. '(
' → logprob: -18.00000762939453
    6. '[root' → logprob: -18.25000762939453
    7. ' root' → logprob: -18.75000762939453
    8. '(ROOT' → logprob: -18.87500762939453
    9. '(ro' → logprob: -19.87500762939453
    10. ' (' → logprob: -20.50000762939453

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024762547109276056
    2. ')
' → logprob: -6.002476215362549
    3. ')
' → logprob: -14.877476692199707
    4. ' )' → logprob: -16.25247573852539
    5. '')' → logprob: -16.62747573852539
    6. '()' → logprob: -18.00247573852539
    7. ')`' → logprob: -18.12747573852539
    8. '())' → logprob: -18.50247573852539
    9. ')

' → logprob: -18.62747573852539
    10. '))' → logprob: -18.87747573852539

Token 340: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2723104848410003e-05
    2. '()
' → logprob: -10.750022888183594
    3. '
' → logprob: -13.875022888183594
    4. '()' → logprob: -15.750022888183594
    5. '(print' → logprob: -16.250022888183594
    6. ' print' → logprob: -16.500022888183594
    7. '```' → logprob: -17.500022888183594
    8. '``' → logprob: -18.625022888183594
    9. '.print' → logprob: -18.750022888183594
    10. 'println' → logprob: -19.000022888183594

Token 341: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6240566083070007e-06
    2. '()
' → logprob: -14.500001907348633
    3. ' ()' → logprob: -14.500001907348633
    4. '(' → logprob: -14.625001907348633
    5. '()

' → logprob: -16.250001907348633
    6. '()`' → logprob: -17.250001907348633
    7. '())' → logprob: -18.250001907348633
    8. '()>' → logprob: -18.500001907348633
    9. '（）' → logprob: -18.500001907348633
    10. '();' → logprob: -18.750001907348633

Token 342: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. 'post' → logprob: -11.000017166137695
    3. 'Post' → logprob: -17.375017166137695
    4. ' print' → logprob: -18.500017166137695
    5. 'Print' → logprob: -19.875017166137695
    6. '```' → logprob: -20.750017166137695
    7. ''' → logprob: -21.125017166137695
    8. ''post' → logprob: -21.250017166137695
    9. '(print' → logprob: -21.500017166137695
    10. '('' → logprob: -21.625017166137695

Token 343: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00033832306507974863
    2. '(' → logprob: -8.000338554382324
    3. ''' → logprob: -13.000338554382324
    4. '("' → logprob: -14.875338554382324
    5. '()' → logprob: -15.875338554382324
    6. ''S' → logprob: -17.375337600708008
    7. ''s' → logprob: -17.625337600708008
    8. '(
' → logprob: -17.750337600708008
    9. '(`' → logprob: -18.125337600708008
    10. ' ('' → logprob: -18.375337600708008

Token 344: 'Post' (ID: 4606)
  Prédit: 'Post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Post' → logprob: -0.014107799157500267
    2. ''' → logprob: -4.514107704162598
    3. 'post' → logprob: -5.889107704162598
    4. ''post' → logprob: -8.889107704162598
    5. '('' → logprob: -9.014107704162598
    6. 'POST' → logprob: -11.889107704162598
    7. '(Post' → logprob: -12.889107704162598
    8. 'Pre' → logprob: -12.889107704162598
    9. 'In' → logprob: -12.889107704162598
    10. '`' → logprob: -13.139107704162598

Token 345: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.759734732331708e-05
    2. 'Order' → logprob: -11.000017166137695
    3. 'oder' → logprob: -15.250017166137695
    4. 'print' → logprob: -16.000017166137695
    5. ' order' → logprob: -16.875017166137695
    6. 'r' → logprob: -16.875017166137695
    7. '```' → logprob: -16.875017166137695
    8. 'orde' → logprob: -17.125017166137695
    9. 'ordre' → logprob: -17.500017166137695
    10. '
' → logprob: -17.625017166137695

Token 346: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.0019382734317332506
    2. '')' → logprob: -6.251938343048096
    3. '')
' → logprob: -12.376937866210938
    4. ''
' → logprob: -13.501937866210938
    5. '")
' → logprob: -13.626937866210938
    6. ''' → logprob: -13.626937866210938
    7. 'post' → logprob: -14.001937866210938
    8. ')
' → logprob: -15.126937866210938
    9. ' ')
' → logprob: -15.626937866210938
    10. '')

' → logprob: -15.751937866210938

Token 347: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: 0.0
    2. ' post' → logprob: -23.75
    3. ''post' → logprob: -25.5
    4. '(post' → logprob: -27.0
    5. 'print' → logprob: -27.5
    6. '	post' → logprob: -28.625
    7. '$post' → logprob: -28.75
    8. 'posts' → logprob: -29.375
    9. 'Post' → logprob: -29.625
    10. 'pre' → logprob: -30.0

Token 348: 'Parse' (ID: 11432)
  Prédit: 'Parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -1.2664456789934775e-06
    2. 'Post' → logprob: -14.000000953674316
    3. 'post' → logprob: -15.125000953674316
    4. 'parse' → logprob: -16.375001907348633
    5. '(Parse' → logprob: -17.125001907348633
    6. 'Traverse' → logprob: -17.875001907348633
    7. 'Print' → logprob: -18.500001907348633
    8. ' Parse' → logprob: -19.375001907348633
    9. 'Parser' → logprob: -20.375001907348633
    10. '_Parse' → logprob: -21.000001907348633

Token 349: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.0024826733861118555
    2. '(' → logprob: -6.002482891082764
    3. '(tree' → logprob: -12.002482414245605
    4. '(
' → logprob: -14.752482414245605
    5. '(ROOT' → logprob: -15.502482414245605
    6. ' (' → logprob: -16.877483367919922
    7. 'root' → logprob: -17.002483367919922
    8. '(rest' → logprob: -17.127483367919922
    9. '(parent' → logprob: -18.002483367919922
    10. '[root' → logprob: -18.127483367919922

Token 350: ')
' (ID: 446)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.10063783079385757
    2. ')' → logprob: -2.600637912750244
    3. 'root' → logprob: -3.850637912750244
    4. ')
' → logprob: -8.975637435913086
    5. '(' → logprob: -9.350637435913086
    6. ' root' → logprob: -10.725637435913086
    7. '[root' → logprob: -11.725637435913086
    8. '(
' → logprob: -13.225637435913086
    9. '	root' → logprob: -14.600637435913086
    10. '.root' → logprob: -15.100637435913086

Token 351: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -16.0
    3. 'root' → logprob: -16.125
    4. '(print' → logprob: -16.5
    5. '()' → logprob: -18.5
    6. '(root' → logprob: -19.25
    7. '.print' → logprob: -20.25
    8. '```' → logprob: -20.625
    9. 'println' → logprob: -21.5
    10. 'printf' → logprob: -22.125

Token 352: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -10.875020980834961
    3. ' ()' → logprob: -14.000020980834961
    4. '()
' → logprob: -15.250020980834961
    5. '()`' → logprob: -15.750020980834961
    6. '()

' → logprob: -16.37502098083496
    7. '()<' → logprob: -16.87502098083496
    8. '())' → logprob: -17.00002098083496
    9. '()}' → logprob: -17.50002098083496
    10. '();' → logprob: -17.62502098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 350
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 200
Tokens correctement prédits (top 10): 310
Précision stricte (1ère position): 51.43%
Précision adaptée (1ère position): 57.14%
Précision (top 10): 88.57%
================================================================================
