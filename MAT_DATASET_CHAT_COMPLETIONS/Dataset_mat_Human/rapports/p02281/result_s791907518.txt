================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python

"""
input:
9
0 1 4
1 2 3
2 -1 -1
3 -1 -1
4 5 8
5 6 7
6 -1 -1
7 -1 -1
8 -1 -1

output:
Preorder
 0 1 2 3 4 5 6 7 8
Inorder
 2 1 3 0 6 5 7 4 8
Postorder
 2 3 1 6 7 5 8 4 0
"""

import sys

class Node(object):
    def __init__(self):
        # init node as a single leaf node.
        self.parent = -1
        self.children = []
        self.index = -1

def pre_parse(v):
    print(' ' + str(v.index), end='')

    left_child_idx = v.children[0]
    right_child_idx = v.children[1]

    if left_child_idx != -1:
        pre_parse(node_list[left_child_idx])

    if right_child_idx != -1:
        pre_parse(node_list[right_child_idx])

    return v.index

def in_parse(v):
    left_child_idx = v.children[0]
    right_child_idx = v.children[1]

    if left_child_idx != -1:
        in_parse(node_list[left_child_idx])

    print(' ' + str(v.index), end='')

    if right_child_idx != -1:
        in_parse(node_list[right_child_idx])

    return v.index

def post_parse(v):
    left_child_idx = v.children[0]
    right_child_idx = v.children[1]

    if left_child_idx != -1:
        post_parse(node_list[left_child_idx])

    if right_child_idx != -1:
        post_parse(node_list[right_child_idx])

    print(' ' + str(v.index), end='')

    return v.index

def generate_tree(_array):
    # add info of each node of a ordered tree
    for each in _array:
        idx, *children = [int(x) for x in each]
        # assert len(children) == 2 and idx >= 0
        node_list[idx].index = idx
        node_list[idx].children = children

        for child_idx in children:
            # non-existent node: no parent
            if child_idx == -1:
                continue
            node_list[child_idx].parent = idx

    # find root node
    root_idx = [x.index for x in node_list if x.parent == -1][0]
    root_node = node_list[root_idx]

    # tree walk in 3 ways
    print('Preorder')
    pre_parse(root_node)
    print('\n' + 'Inorder')
    in_parse(root_node)
    print('\n' + 'Postorder')
    post_parse(root_node)
    print('')

    return node_list

if __name__ == '__main__':
    _input = sys.stdin.readlines()
    array_length = int(_input[0])
    array = list(map(lambda x: x.split(), _input[1:]))
    # assert len(array) == array_length

    node_list = [Node() for _ in range(array_length)]
    ans = generate_tree(_array=array)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815128743648529
    2. '/env' → logprob: -1.2315129041671753
    3. '/python' → logprob: -2.4815127849578857
    4. '/bash' → logprob: -5.231513023376465
    5. '/bin' → logprob: -6.731513023376465
    6. 'python' → logprob: -9.356513023376465
    7. '#!/' → logprob: -11.106513023376465
    8. 'env' → logprob: -11.481513023376465
    9. '/b' → logprob: -11.481513023376465
    10. '/per' → logprob: -12.481513023376465

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16474248468875885
    2. '\' → logprob: -2.2897424697875977
    3. '```' → logprob: -3.6647424697875977
    4. 'import' → logprob: -4.164742469787598
    5. '  
' → logprob: -5.914742469787598
    6. '3' → logprob: -5.914742469787598
    7. ' 
' → logprob: -7.164742469787598
    8. '#' → logprob: -7.539742469787598
    9. '\r' → logprob: -7.539742469787598
    10. '' → logprob: -7.789742469787598

Token 6: '"""
' (ID: 15611)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07767083495855331
    2. '-' → logprob: -2.9526708126068115
    3. '```' → logprob: -4.702671051025391
    4. '-import' → logprob: -4.952671051025391
    5. '3' → logprob: -6.327671051025391
    6. '\n' → logprob: -6.452671051025391
    7. '#' → logprob: -6.577671051025391
    8. 'im' → logprob: -8.20267105102539
    9. ' import' → logprob: -8.32767105102539
    10. 'print' → logprob: -8.57767105102539

Token 7: 'input' (ID: 2586)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2963423728942871
    2. 'import' → logprob: -1.921342372894287
    3. '#' → logprob: -2.671342372894287
    4. 'from' → logprob: -3.796342372894287
    5. 'u' → logprob: -6.046342372894287
    6. 'This' → logprob: -6.296342372894287
    7. 'python' → logprob: -6.546342372894287
    8. 'f' → logprob: -6.546342372894287
    9. '#!/' → logprob: -6.671342372894287
    10. '"""
' → logprob: -6.796342372894287

Token 8: ':
' (ID: 734)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4077683985233307
    2. ')' → logprob: -2.032768487930298
    3. '```' → logprob: -3.282768487930298
    4. ':' → logprob: -3.782768487930298
    5. '_' → logprob: -3.907768487930298
    6. '("""' → logprob: -4.282768249511719
    7. 'text' → logprob: -4.282768249511719
    8. '_file' → logprob: -4.657768249511719
    9. '_data' → logprob: -4.782768249511719
    10. '_string' → logprob: -4.907768249511719

Token 9: '9' (ID: 24)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17423094809055328
    2. '```' → logprob: -2.1742310523986816
    3. '#' → logprob: -4.299231052398682
    4. '``' → logprob: -5.049231052398682
    5. '"""
' → logprob: -5.549231052398682
    6. 'def' → logprob: -5.799231052398682
    7. 'a' → logprob: -5.924231052398682
    8. '""' → logprob: -6.299231052398682
    9. '"' → logprob: -6.549231052398682
    10. 'text' → logprob: -6.674231052398682

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.026734834536910057
    2. '```' → logprob: -4.651734828948975
    3. '+' → logprob: -5.151734828948975
    4. '
' → logprob: -6.151734828948975
    5. '"""' → logprob: -6.651734828948975
    6. '*' → logprob: -6.651734828948975
    7. 'n' → logprob: -6.776734828948975
    8. '\' → logprob: -7.151734828948975
    9. '0' → logprob: -7.526734828948975
    10. '\r' → logprob: -7.526734828948975

Token 11: '0' (ID: 15)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03024897351861
    2. '```' → logprob: -5.155249118804932
    3. '\' → logprob: -5.405249118804932
    4. '1' → logprob: -5.530249118804932
    5. '0' → logprob: -5.655249118804932
    6. ' ' → logprob: -6.280249118804932
    7. '3' → logprob: -6.530249118804932
    8. '
' → logprob: -6.530249118804932
    9. '9' → logprob: -6.530249118804932
    10. '\r' → logprob: -7.280249118804932

Token 12: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11171533912420273
    2. '
' → logprob: -2.361715316772461
    3. '9' → logprob: -5.611715316772461
    4. '<|end|>' → logprob: -6.111715316772461
    5. '```' → logprob: -6.361715316772461
    6. '0' → logprob: -6.611715316772461
    7. '\' → logprob: -7.361715316772461
    8. ' ' → logprob: -7.611715316772461
    9. ' 
' → logprob: -8.236715316772461
    10. '

' → logprob: -8.611715316772461

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7994465231895447
    2. '9' → logprob: -1.1744465827941895
    3. '4' → logprob: -2.9244465827941895
    4. '0' → logprob: -2.9244465827941895
    5. ' ' → logprob: -2.9244465827941895
    6. '2' → logprob: -3.6744465827941895
    7. '3' → logprob: -4.2994465827941895
    8. '\n' → logprob: -4.5494465827941895
    9. '5' → logprob: -4.6744465827941895
    10. '<|end|>' → logprob: -4.9244465827941895

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.594758927822113
    2. '0' → logprob: -1.9697589874267578
    3. '2' → logprob: -1.9697589874267578
    4. '\n' → logprob: -3.219758987426758
    5. '9' → logprob: -3.344758987426758
    6. '3' → logprob: -3.469758987426758
    7. '<|end|>' → logprob: -3.844758987426758
    8. '
' → logprob: -4.219758987426758
    9. '1' → logprob: -4.969758987426758
    10. '4' → logprob: -5.344758987426758

Token 15: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15357138216495514
    2. '0' → logprob: -2.403571367263794
    3. ' ' → logprob: -3.028571367263794
    4. '1' → logprob: -6.028571605682373
    5. '9' → logprob: -7.278571605682373
    6. '3' → logprob: -8.278571128845215
    7. '4' → logprob: -10.028571128845215
    8. '7' → logprob: -10.278571128845215
    9. '8' → logprob: -10.278571128845215
    10. '```' → logprob: -10.278571128845215

Token 16: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9381195306777954
    2. '\n' → logprob: -1.8131195306777954
    3. '0' → logprob: -2.563119411468506
    4. '
' → logprob: -2.563119411468506
    5. '2' → logprob: -2.813119411468506
    6. '3' → logprob: -3.188119411468506
    7. '<|end|>' → logprob: -3.188119411468506
    8. '```' → logprob: -3.563119411468506
    9. '4' → logprob: -3.813119411468506
    10. ' 
' → logprob: -3.938119411468506

Token 17: '1' (ID: 16)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8448712825775146
    2. '3' → logprob: -2.0948712825775146
    3. ' ' → logprob: -2.0948712825775146
    4. '0' → logprob: -2.7198712825775146
    5. '9' → logprob: -2.8448712825775146
    6. '2' → logprob: -2.9698712825775146
    7. '4' → logprob: -3.2198712825775146
    8. '7' → logprob: -3.7198712825775146
    9. '
' → logprob: -3.9698712825775146
    10. '<|end|>' → logprob: -3.9698712825775146

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25142210721969604
    2. '<|end|>' → logprob: -1.7514221668243408
    3. '0' → logprob: -3.501422166824341
    4. '<|end|>' → logprob: -5.626421928405762
    5. '2' → logprob: -5.751421928405762
    6. '4' → logprob: -5.876421928405762
    7. '+' → logprob: -6.126421928405762
    8. '3' → logprob: -6.626421928405762
    9. '  ' → logprob: -7.126421928405762
    10. ' 
' → logprob: -7.501421928405762

Token 19: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22530251741409302
    2. '2' → logprob: -1.8503024578094482
    3. '4' → logprob: -3.9753024578094482
    4. '0' → logprob: -3.9753024578094482
    5. '3' → logprob: -5.725302696228027
    6. '1' → logprob: -6.600302696228027
    7. '5' → logprob: -6.725302696228027
    8. '7' → logprob: -7.475302696228027
    9. '9' → logprob: -8.600302696228027
    10. '8' → logprob: -8.600302696228027

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015598355792462826
    2. '<|end|>' → logprob: -4.765598297119141
    3. '4' → logprob: -6.015598297119141
    4. '3' → logprob: -6.015598297119141
    5. '0' → logprob: -7.015598297119141
    6. ' 
' → logprob: -8.01559829711914
    7. '  ' → logprob: -8.64059829711914
    8. '```' → logprob: -9.01559829711914
    9. '  
' → logprob: -9.26559829711914
    10. '2' → logprob: -9.39059829711914

Token 21: '3' (ID: 18)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0061655044555664
    2. '3' → logprob: -1.5061655044555664
    3. ' ' → logprob: -2.0061655044555664
    4. '2' → logprob: -2.1311655044555664
    5. '5' → logprob: -2.6311655044555664
    6. '6' → logprob: -3.3811655044555664
    7. '4' → logprob: -3.5061655044555664
    8. '1' → logprob: -4.756165504455566
    9. '8' → logprob: -5.256165504455566
    10. '0' → logprob: -5.381165504455566

Token 22: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023795073851943016
    2. ' 
' → logprob: -4.898795127868652
    3. '<|end|>' → logprob: -5.273795127868652
    4. '\n' → logprob: -5.648795127868652
    5. '0' → logprob: -6.273795127868652
    6. '2' → logprob: -6.773795127868652
    7. '4' → logprob: -6.898795127868652
    8. '```' → logprob: -7.398795127868652
    9. '
' → logprob: -7.648795127868652
    10. '3' → logprob: -7.648795127868652

Token 23: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12095704674720764
    2. '3' → logprob: -2.745957136154175
    3. '0' → logprob: -4.370956897735596
    4. '2' → logprob: -4.495956897735596
    5. '\n' → logprob: -4.495956897735596
    6. '```' → logprob: -5.245956897735596
    7. '4' → logprob: -5.495956897735596
    8. ' 
' → logprob: -5.745956897735596
    9. '
' → logprob: -7.870956897735596
    10. ' ```' → logprob: -7.995956897735596

Token 24: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004247573669999838
    2. '4' → logprob: -6.254247665405273
    3. '3' → logprob: -6.504247665405273
    4. '<|end|>' → logprob: -7.504247665405273
    5. '0' → logprob: -8.754247665405273
    6. '2' → logprob: -10.504247665405273
    7. '  ' → logprob: -10.754247665405273
    8. '<|end|>' → logprob: -11.754247665405273
    9. '1' → logprob: -12.004247665405273
    10. ' ,' → logprob: -12.129247665405273

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11528326570987701
    2. ' ' → logprob: -2.990283250808716
    3. '2' → logprob: -3.490283250808716
    4. '4' → logprob: -3.990283250808716
    5. '5' → logprob: -5.365283489227295
    6. '3' → logprob: -6.365283489227295
    7. '7' → logprob: -6.865283489227295
    8. '-' → logprob: -7.240283489227295
    9. '6' → logprob: -7.615283489227295
    10. '<|end|>' → logprob: -8.240283012390137

Token 26: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5399088859558105
    2. '<|end|>' → logprob: -1.2899088859558105
    3. ' 
' → logprob: -2.7899088859558105
    4. '0' → logprob: -4.0399088859558105
    5. '4' → logprob: -4.1649088859558105
    6. ' 

' → logprob: -4.6649088859558105
    7. '\n' → logprob: -4.6649088859558105
    8. '```' → logprob: -4.7899088859558105
    9. '  
' → logprob: -5.6649088859558105
    10. '
' → logprob: -5.6649088859558105

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013738033594563603
    2. ' ' → logprob: -7.126373767852783
    3. '<|end|>' → logprob: -8.501374244689941
    4. '2' → logprob: -9.251374244689941
    5. '<|end|>' → logprob: -9.751374244689941
    6. '4' → logprob: -9.876374244689941
    7. ' -' → logprob: -10.438874244689941
    8. '```' → logprob: -10.563874244689941
    9. '3' → logprob: -10.626374244689941
    10. '-' → logprob: -10.876374244689941

Token 28: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.028929514810442924
    2. '```' → logprob: -4.403929710388184
    3. '<|end|>' → logprob: -5.653929710388184
    4. '
' → logprob: -5.778929710388184
    5. '"""' → logprob: -6.028929710388184
    6. '0' → logprob: -6.528929710388184
    7. '\' → logprob: -6.778929710388184
    8. '"""
' → logprob: -6.778929710388184
    9. '' → logprob: -7.528929710388184
    10. '4' → logprob: -7.653929710388184

Token 29: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5808010697364807
    2. '2' → logprob: -1.205801010131836
    3. '\n' → logprob: -3.080801010131836
    4. '0' → logprob: -3.330801010131836
    5. '"""' → logprob: -3.580801010131836
    6. '4' → logprob: -4.580801010131836
    7. '```' → logprob: -4.580801010131836
    8. '1' → logprob: -6.205801010131836
    9. ' ' → logprob: -6.205801010131836
    10. '7' → logprob: -6.330801010131836

Token 30: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10141602158546448
    2. '<|end|>' → logprob: -2.4764161109924316
    3. ' ```' → logprob: -5.101416110992432
    4. '4' → logprob: -6.226416110992432
    5. '```' → logprob: -6.601416110992432
    6. ')' → logprob: -7.351416110992432
    7. '<|end|>' → logprob: -7.726416110992432
    8. ' )' → logprob: -7.976416110992432
    9. '0' → logprob: -8.101415634155273
    10. '  ' → logprob: -8.101415634155273

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.019237768370658e-05
    2. ' ' → logprob: -9.750090599060059
    3. '2' → logprob: -11.125090599060059
    4. '<|end|>' → logprob: -12.125090599060059
    5. '```' → logprob: -12.812590599060059
    6. '<|end|>' → logprob: -13.062590599060059
    7. '3' → logprob: -14.125090599060059
    8. '...' → logprob: -14.562590599060059
    9. '0' → logprob: -14.625090599060059
    10. '4' → logprob: -14.687590599060059

Token 32: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04729939252138138
    2. '<|end|>' → logprob: -3.172299385070801
    3. ' ```' → logprob: -7.047299385070801
    4. '4' → logprob: -7.297299385070801
    5. '0' → logprob: -7.422299385070801
    6. ')' → logprob: -7.547299385070801
    7. ' -' → logprob: -7.547299385070801
    8. '```' → logprob: -7.672299385070801
    9. '<|end|>' → logprob: -8.9222993850708
    10. '1' → logprob: -8.9222993850708

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '-' → logprob: -12.750006675720215
    3. ' ' → logprob: -13.625006675720215
    4. '```' → logprob: -13.875006675720215
    5. '9' → logprob: -15.375006675720215
    6. '<|end|>' → logprob: -15.500006675720215
    7. '<|end|>' → logprob: -15.937506675720215
    8. '2' → logprob: -16.1250057220459
    9. '0' → logprob: -16.8125057220459
    10. ')' → logprob: -16.8750057220459

Token 34: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3192863166332245
    2. '
' → logprob: -2.319286346435547
    3. '```' → logprob: -2.444286346435547
    4. '4' → logprob: -3.944286346435547
    5. '"""' → logprob: -4.194286346435547
    6. '0' → logprob: -4.194286346435547
    7. ' ' → logprob: -4.319286346435547
    8. '3' → logprob: -5.444286346435547
    9. '#' → logprob: -5.569286346435547
    10. '"""
' → logprob: -5.944286346435547

Token 35: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2657957673072815
    2. '4' → logprob: -2.0157957077026367
    3. '0' → logprob: -3.0157957077026367
    4. '3' → logprob: -3.7657957077026367
    5. '7' → logprob: -5.015795707702637
    6. '6' → logprob: -5.140795707702637
    7. '1' → logprob: -5.515795707702637
    8. ' ' → logprob: -5.640795707702637
    9. '5' → logprob: -5.640795707702637
    10. '```' → logprob: -6.265795707702637

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15152959525585175
    2. '<|end|>' → logprob: -2.026529550552368
    3. '```' → logprob: -5.776529788970947
    4. ' ```' → logprob: -6.026529788970947
    5. '0' → logprob: -6.776529788970947
    6. '<|end|>' → logprob: -7.401529788970947
    7. ')' → logprob: -8.276529312133789
    8. '3' → logprob: -8.776529312133789
    9. '  ' → logprob: -8.901529312133789
    10. '4' → logprob: -9.026529312133789

Token 37: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0775339603424072
    2. '5' → logprob: -1.2025339603424072
    3. '-' → logprob: -1.5775339603424072
    4. ' ' → logprob: -2.5775339603424072
    5. '2' → logprob: -3.0775339603424072
    6. '3' → logprob: -3.9525339603424072
    7. '1' → logprob: -5.202533721923828
    8. ' -' → logprob: -5.702533721923828
    9. '4' → logprob: -6.077533721923828
    10. '```' → logprob: -9.577533721923828

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039939090609550476
    2. '6' → logprob: -3.4149391651153564
    3. '<|end|>' → logprob: -6.164938926696777
    4. '0' → logprob: -6.414938926696777
    5. '```' → logprob: -6.914938926696777
    6. '3' → logprob: -7.539938926696777
    7. ' ```' → logprob: -8.539938926696777
    8. ' -' → logprob: -8.914938926696777
    9. '7' → logprob: -8.914938926696777
    10. '4' → logprob: -9.039938926696777

Token 39: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.09756243228912354
    2. '-' → logprob: -2.722562313079834
    3. ' ' → logprob: -4.347562313079834
    4. '4' → logprob: -4.972562313079834
    5. '7' → logprob: -5.472562313079834
    6. ' -' → logprob: -7.222562313079834
    7. '8' → logprob: -7.472562313079834
    8. '9' → logprob: -7.597562313079834
    9. '2' → logprob: -7.722562313079834
    10. '3' → logprob: -8.097562789916992

Token 40: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4667747914791107
    2. '```' → logprob: -1.341774821281433
    3. '<|end|>' → logprob: -2.3417747020721436
    4. '6' → logprob: -4.841774940490723
    5. '``' → logprob: -6.591774940490723
    6. '0' → logprob: -6.716774940490723
    7. '
' → logprob: -6.716774940490723
    8. '"""' → logprob: -7.591774940490723
    9. '4' → logprob: -7.716774940490723
    10. '<|end|>' → logprob: -7.841774940490723

Token 41: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4450097680091858
    2. '6' → logprob: -1.820009708404541
    3. '2' → logprob: -2.195009708404541
    4. '3' → logprob: -3.570009708404541
    5. '7' → logprob: -3.820009708404541
    6. '0' → logprob: -4.070009708404541
    7. '4' → logprob: -5.445009708404541
    8. '```' → logprob: -5.445009708404541
    9. '-' → logprob: -5.695009708404541
    10. '8' → logprob: -5.945009708404541

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06957999616861343
    2. '6' → logprob: -3.694580078125
    3. '```' → logprob: -3.944580078125
    4. '  ' → logprob: -5.319580078125
    5. ' ```' → logprob: -5.694580078125
    6. '<|end|>' → logprob: -5.819580078125
    7. '0' → logprob: -6.069580078125
    8. '   ' → logprob: -6.319580078125
    9. '4' → logprob: -6.944580078125
    10. ''' → logprob: -7.069580078125

Token 43: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.049207642674446106
    2. '-' → logprob: -3.0492076873779297
    3. '7' → logprob: -8.42420768737793
    4. ' -' → logprob: -8.42420768737793
    5. '9' → logprob: -9.17420768737793
    6. '3' → logprob: -10.67420768737793
    7. ' ' → logprob: -10.92420768737793
    8. '1' → logprob: -11.04920768737793
    9. '2' → logprob: -11.67420768737793
    10. '8' → logprob: -12.29920768737793

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007623080164194107
    2. '<|end|>' → logprob: -5.257623195648193
    3. '6' → logprob: -7.507623195648193
    4. '7' → logprob: -7.632623195648193
    5. '```' → logprob: -7.757623195648193
    6. '3' → logprob: -8.257622718811035
    7. '  ' → logprob: -8.507622718811035
    8. ' ```' → logprob: -8.757622718811035
    9. '0' → logprob: -9.632622718811035
    10. ' ' → logprob: -10.132622718811035

Token 45: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.11544270068407059
    2. ' ' → logprob: -2.3654427528381348
    3. '-' → logprob: -4.490442752838135
    4. ' -' → logprob: -6.115442752838135
    5. '9' → logprob: -7.490442752838135
    6. '8' → logprob: -7.865442752838135
    7. '6' → logprob: -8.240442276000977
    8. '<|end|>' → logprob: -8.240442276000977
    9. '```' → logprob: -9.240442276000977
    10. '4' → logprob: -9.990442276000977

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '6' (ID: 21)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.71551913022995
    2. '```' → logprob: -1.5905191898345947
    3. '6' → logprob: -1.7155191898345947
    4. '7' → logprob: -2.7155191898345947
    5. '-' → logprob: -3.7155191898345947
    6. '0' → logprob: -4.215518951416016
    7. ' ' → logprob: -4.590518951416016
    8. '<|end|>' → logprob: -5.590518951416016
    9. '3' → logprob: -6.340518951416016
    10. '8' → logprob: -6.715518951416016

Token 48: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19224068522453308
    2. ' ' → logprob: -1.8172407150268555
    3. '7' → logprob: -5.0672407150268555
    4. '-' → logprob: -5.6922407150268555
    5. '<|end|>' → logprob: -6.4422407150268555
    6. ' ```' → logprob: -7.9422407150268555
    7. '  ' → logprob: -8.442240715026855
    8. '0' → logprob: -8.817240715026855
    9. '```' → logprob: -9.067240715026855
    10. '6' → logprob: -9.692240715026855

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -14.31250286102295
    3. '```' → logprob: -14.31250286102295
    4. '7' → logprob: -14.81250286102295
    5. '2' → logprob: -15.56250286102295
    6. '`' → logprob: -15.81250286102295
    7. '<|end|>' → logprob: -16.125001907348633
    8. '१' → logprob: -16.250001907348633
    9. ''' → logprob: -16.750001907348633
    10. '<|end|>' → logprob: -16.875001907348633

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06439858675003052
    2. ' ' → logprob: -2.9393985271453857
    3. '7' → logprob: -4.939398765563965
    4. '-' → logprob: -6.314398765563965
    5. '<|end|>' → logprob: -8.189398765563965
    6. '```' → logprob: -9.314398765563965
    7. '6' → logprob: -9.939398765563965
    8. '  ' → logprob: -10.564398765563965
    9. ' ```' → logprob: -11.064398765563965
    10. ')' → logprob: -11.189398765563965

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -13.687503814697266
    3. '9' → logprob: -13.750003814697266
    4. '-' → logprob: -14.687503814697266
    5. ' ' → logprob: -15.375003814697266
    6. '' → logprob: -15.687503814697266
    7. '.py' → logprob: -15.750003814697266
    8. '１' → logprob: -16.437503814697266
    9. '6' → logprob: -16.437503814697266
    10. '`' → logprob: -16.687503814697266

Token 52: '
' (ID: 198)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.33989080786705017
    2. '```' → logprob: -1.8398908376693726
    3. '8' → logprob: -2.839890718460083
    4. '"""' → logprob: -3.339890718460083
    5. '-' → logprob: -4.089890956878662
    6. '\n' → logprob: -4.839890956878662
    7. ' ' → logprob: -5.214890956878662
    8. '4' → logprob: -6.339890956878662
    9. '``' → logprob: -7.214890956878662
    10. '3' → logprob: -7.339890956878662

Token 53: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004671257454901934
    2. '```' → logprob: -6.004671096801758
    3. '8' → logprob: -6.629671096801758
    4. '-' → logprob: -7.754671096801758
    5. '4' → logprob: -9.004671096801758
    6. '3' → logprob: -9.379671096801758
    7. '"""' → logprob: -9.504671096801758
    8. ' ' → logprob: -9.629671096801758
    9. ')' → logprob: -10.504671096801758
    10. '9' → logprob: -10.754671096801758

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.057118020951747894
    2. ' ' → logprob: -3.4321179389953613
    3. '-' → logprob: -3.9321179389953613
    4. '8' → logprob: -6.057117938995361
    5. '```' → logprob: -7.932117938995361
    6. ' ```' → logprob: -8.30711841583252
    7. '9' → logprob: -9.05711841583252
    8. '<|end|>' → logprob: -9.30711841583252
    9. '[' → logprob: -9.55711841583252
    10. '0' → logprob: -9.68211841583252

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -13.125004768371582
    3. '-' → logprob: -13.500004768371582
    4. ' ' → logprob: -13.750004768371582
    5. ' -' → logprob: -15.000004768371582
    6. '``' → logprob: -17.3125057220459
    7. '2' → logprob: -17.3750057220459
    8. '`' → logprob: -17.3750057220459
    9. '' → logprob: -17.5625057220459
    10. ''' → logprob: -17.6875057220459

Token 56: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2847667634487152
    2. '-' → logprob: -1.4097667932510376
    3. ' ' → logprob: -5.784766674041748
    4. '1' → logprob: -8.409767150878906
    5. '```' → logprob: -8.784767150878906
    6. '8' → logprob: -9.034767150878906
    7. '7' → logprob: -11.034767150878906
    8. '9' → logprob: -11.784767150878906
    9. '``' → logprob: -12.534767150878906
    10. '<|end|>' → logprob: -12.909767150878906

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -15.500000953674316
    4. '```' → logprob: -16.5
    5. '<|end|>' → logprob: -16.75
    6. '9' → logprob: -17.0
    7. '7' → logprob: -18.125
    8. '<|end|>' → logprob: -18.375
    9. '' → logprob: -18.75
    10. ' -' → logprob: -19.0

Token 58: '
' (ID: 198)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0050539602525532246
    2. '```' → logprob: -6.130053997039795
    3. '-' → logprob: -6.380053997039795
    4. ' ' → logprob: -7.880053997039795
    5. '"""' → logprob: -8.130053520202637
    6. '4' → logprob: -8.630053520202637
    7. '9' → logprob: -9.005053520202637
    8. ')' → logprob: -9.880053520202637
    9. '"""
' → logprob: -10.130053520202637
    10. ' -' → logprob: -10.380053520202637

Token 59: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0005928283790126443
    2. '-' → logprob: -8.375593185424805
    3. '```' → logprob: -8.625593185424805
    4. ' ' → logprob: -9.000593185424805
    5. ')' → logprob: -10.625593185424805
    6. '9' → logprob: -11.500593185424805
    7. '4' → logprob: -12.000593185424805
    8. ' -' → logprob: -12.125593185424805
    9. '"""' → logprob: -12.250593185424805
    10. '0' → logprob: -13.250593185424805

Token 60: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.500361979007721
    2. '<|end|>' → logprob: -1.3753619194030762
    3. ')' → logprob: -2.750361919403076
    4. '```' → logprob: -3.125361919403076
    5. '<|end|>' → logprob: -4.875361919403076
    6. ':' → logprob: -5.375361919403076
    7. '[' → logprob: -5.750361919403076
    8. '9' → logprob: -6.000361919403076
    9. ' ```' → logprob: -6.250361919403076
    10. 'def' → logprob: -6.375361919403076

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009792207274585962
    2. '-' → logprob: -7.000979423522949
    3. ' -' → logprob: -10.12597942352295
    4. '9' → logprob: -11.62597942352295
    5. '```' → logprob: -11.62597942352295
    6. ' ' → logprob: -12.00097942352295
    7. '`' → logprob: -14.31347942352295
    8. '4' → logprob: -14.81347942352295
    9. '``' → logprob: -15.25097942352295
    10. '2' → logprob: -15.25097942352295

Token 62: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0249862689524889
    2. '<|end|>' → logprob: -4.649986267089844
    3. ' -' → logprob: -4.899986267089844
    4. '```' → logprob: -5.899986267089844
    5. '4' → logprob: -6.649986267089844
    6. ' ```' → logprob: -7.024986267089844
    7. '  ' → logprob: -7.149986267089844
    8. '-' → logprob: -7.524986267089844
    9. '0' → logprob: -7.649986267089844
    10. ')' → logprob: -8.899986267089844

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. '9' → logprob: -10.75007152557373
    3. '-' → logprob: -10.87507152557373
    4. ' ' → logprob: -11.12507152557373
    5. '```' → logprob: -12.00007152557373
    6. '2' → logprob: -12.50007152557373
    7. '8' → logprob: -13.56257152557373
    8. ' -' → logprob: -14.31257152557373
    9. '``' → logprob: -14.37507152557373
    10. '29' → logprob: -14.50007152557373

Token 64: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7986054420471191
    2. 'def' → logprob: -1.7986054420471191
    3. 'from' → logprob: -2.548605442047119
    4. '```' → logprob: -2.548605442047119
    5. 'd' → logprob: -2.798605442047119
    6. 'import' → logprob: -3.048605442047119
    7. '#' → logprob: -3.298605442047119
    8. 'class' → logprob: -4.048605442047119
    9. '9' → logprob: -4.298605442047119
    10. '\n' → logprob: -4.423605442047119

Token 65: 'output' (ID: 6130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46393629908561707
    2. 'from' → logprob: -1.7139363288879395
    3. 'class' → logprob: -2.5889363288879395
    4. 'import' → logprob: -2.8389363288879395
    5. '```' → logprob: -3.3389363288879395
    6. 'n' → logprob: -4.7139363288879395
    7. '9' → logprob: -5.5889363288879395
    8. '7' → logprob: -6.3389363288879395
    9. '2' → logprob: -6.4639363288879395
    10. '3' → logprob: -6.8389363288879395

Token 66: ':
' (ID: 734)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7193986177444458
    2. '4' → logprob: -1.8443986177444458
    3. '```' → logprob: -2.3443984985351562
    4. '0' → logprob: -2.5943984985351562
    5. ' ' → logprob: -2.8443984985351562
    6. '7' → logprob: -3.4693984985351562
    7. '3' → logprob: -3.7193984985351562
    8. '8' → logprob: -4.344398498535156
    9. '6' → logprob: -4.344398498535156
    10. '1' → logprob: -4.344398498535156

Token 67: 'Pre' (ID: 4319)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -1.6675200462341309
    2. '3' → logprob: -1.9175200462341309
    3. '2' → logprob: -2.167520046234131
    4. '1' → logprob: -2.417520046234131
    5. '0' → logprob: -2.542520046234131
    6. '5' → logprob: -2.542520046234131
    7. '9' → logprob: -2.542520046234131
    8. '7' → logprob: -2.917520046234131
    9. '6' → logprob: -3.042520046234131
    10. '8' → logprob: -3.292520046234131

Token 68: 'order' (ID: 2143)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47767454385757446
    2. 'o' → logprob: -1.2276744842529297
    3. '```' → logprob: -3.3526744842529297
    4. 'order' → logprob: -3.7276744842529297
    5. '-' → logprob: -4.47767448425293
    6. 'i' → logprob: -5.97767448425293
    7. ' ```' → logprob: -6.10267448425293
    8. '#' → logprob: -6.35267448425293
    9. '``' → logprob: -7.22767448425293
    10. 'r' → logprob: -7.35267448425293

Token 69: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2512255311012268
    2. '```' → logprob: -2.376225471496582
    3. '\n' → logprob: -3.126225471496582
    4. '_' → logprob: -3.501225471496582
    5. '\' → logprob: -4.126225471496582
    6. '<|end|>' → logprob: -4.751225471496582
    7. '#' → logprob: -5.001225471496582
    8. 'def' → logprob: -5.751225471496582
    9. ':
' → logprob: -6.251225471496582
    10. ' traversal' → logprob: -6.376225471496582

Token 70: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48170071840286255
    2. '```' → logprob: -1.2317006587982178
    3. '#' → logprob: -3.8567006587982178
    4. '\n' → logprob: -4.106700897216797
    5. 'T' → logprob: -4.481700897216797
    6. '-' → logprob: -4.606700897216797
    7. 'def' → logprob: -5.231700897216797
    8. 'Traversal' → logprob: -5.731700897216797
    9. '\' → logprob: -5.856700897216797
    10. 't' → logprob: -5.856700897216797

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04107367992401123
    2. '9' → logprob: -3.291073799133301
    3. '4' → logprob: -6.791073799133301
    4. '1' → logprob: -7.291073799133301
    5. '[' → logprob: -8.1660737991333
    6. '012' → logprob: -8.5410737991333
    7. '3' → logprob: -8.9160737991333
    8. '2' → logprob: -9.0410737991333
    9. '014' → logprob: -9.9160737991333
    10. 'A' → logprob: -9.9160737991333

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14626502990722656
    2. '0' → logprob: -3.3962650299072266
    3. '\n' → logprob: -3.3962650299072266
    4. ' 
' → logprob: -4.521265029907227
    5. ',' → logprob: -4.896265029907227
    6. '\' → logprob: -5.021265029907227
    7. '  
' → logprob: -5.271265029907227
    8. '<|end|>' → logprob: -5.271265029907227
    9. '1' → logprob: -5.396265029907227
    10. ')' → logprob: -5.396265029907227

Token 73: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2977430522441864
    2. '1' → logprob: -1.4227430820465088
    3. '0' → logprob: -4.67274284362793
    4. '9' → logprob: -5.29774284362793
    5. '4' → logprob: -6.42274284362793
    6. '2' → logprob: -9.04774284362793
    7. '7' → logprob: -9.67274284362793
    8. ' 
' → logprob: -9.79774284362793
    9. ' )' → logprob: -10.17274284362793
    10. '<|end|>' → logprob: -10.29774284362793

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10650403052568436
    2. '2' → logprob: -3.106503963470459
    3. '0' → logprob: -3.606503963470459
    4. '<|end|>' → logprob: -5.106503963470459
    5. ')' → logprob: -5.231503963470459
    6. '3' → logprob: -5.481503963470459
    7. ' 
' → logprob: -6.481503963470459
    8. '  ' → logprob: -6.606503963470459
    9. '  
' → logprob: -6.731503963470459
    10. '4' → logprob: -6.731503963470459

Token 75: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7521146535873413
    2. '2' → logprob: -0.8771146535873413
    3. '4' → logprob: -2.252114772796631
    4. '0' → logprob: -5.627114772796631
    5. '7' → logprob: -6.502114772796631
    6. '3' → logprob: -6.877114772796631
    7. '9' → logprob: -7.502114772796631
    8. '1' → logprob: -8.627114295959473
    9. '  ' → logprob: -8.877114295959473
    10. ')' → logprob: -9.252114295959473

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9556547403335571
    2. '
' → logprob: -1.7056547403335571
    3. '<|end|>' → logprob: -2.4556546211242676
    4. '\n' → logprob: -2.5806546211242676
    5. 'def' → logprob: -3.2056546211242676
    6. ')' → logprob: -3.3306546211242676
    7. '#' → logprob: -3.4556546211242676
    8. '```' → logprob: -3.7056546211242676
    9. ',' → logprob: -4.330654621124268
    10. '\' → logprob: -4.330654621124268

Token 77: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.315540075302124
    2. '3' → logprob: -1.315540075302124
    3. '4' → logprob: -6.440540313720703
    4. '<|end|>' → logprob: -7.565540313720703
    5. '  ' → logprob: -10.190540313720703
    6. '7' → logprob: -10.315540313720703
    7. ' )' → logprob: -10.940540313720703
    8. ')' → logprob: -11.190540313720703
    9. ' "' → logprob: -11.690540313720703
    10. '<|end|>' → logprob: -11.940540313720703

Token 78: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7460851669311523
    2. 'def' → logprob: -2.4960851669311523
    3. '```' → logprob: -2.4960851669311523
    4. ' ' → logprob: -2.6210851669311523
    5. 'p' → logprob: -3.1210851669311523
    6. '#' → logprob: -3.1210851669311523
    7. '\n' → logprob: -3.3710851669311523
    8. '0' → logprob: -3.7460851669311523
    9. 'd' → logprob: -3.8710851669311523
    10. ' 
' → logprob: -4.871085166931152

Token 79: '4' (ID: 19)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9919779896736145
    2. '4' → logprob: -1.6169779300689697
    3. 'P' → logprob: -1.9919779300689697
    4. '```' → logprob: -2.8669779300689697
    5. 'In' → logprob: -3.3669779300689697
    6. '6' → logprob: -3.8669779300689697
    7. 'def' → logprob: -3.9919779300689697
    8. '7' → logprob: -4.116978168487549
    9. '<|end|>' → logprob: -4.241978168487549
    10. 'in' → logprob: -4.366978168487549

Token 80: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '5' (ID: 20)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '6' (ID: 21)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6406052708625793
    2. '6' → logprob: -1.0156052112579346
    3. '<|end|>' → logprob: -2.6406052112579346
    4. '7' → logprob: -3.3906052112579346
    5. '<|end|>' → logprob: -5.890605449676514
    6. '4' → logprob: -7.140605449676514
    7. '  ' → logprob: -7.890605449676514
    8. '8' → logprob: -8.015604972839355
    9. '```' → logprob: -8.640604972839355
    10. '...' → logprob: -8.890604972839355

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5984644889831543
    2. '<|end|>' → logprob: -0.8484644889831543
    3. '7' → logprob: -4.848464488983154
    4. '```' → logprob: -5.098464488983154
    5. '<|end|>' → logprob: -6.098464488983154
    6. ' ```' → logprob: -6.223464488983154
    7. ')' → logprob: -7.348464488983154
    8. 'def' → logprob: -7.473464488983154
    9. '
' → logprob: -7.473464488983154
    10. ' 
' → logprob: -7.973464488983154

Token 85: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.1428813338279724
    2. ' ' → logprob: -2.017881393432617
    3. '<|end|>' → logprob: -8.642881393432617
    4. '8' → logprob: -11.517881393432617
    5. '```' → logprob: -12.142881393432617
    6. '4' → logprob: -12.767881393432617
    7. '  ' → logprob: -12.767881393432617
    8. ' ```' → logprob: -13.142881393432617
    9. ')' → logprob: -13.517881393432617
    10. ' )' → logprob: -13.767881393432617

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10567004978656769
    2. '<|end|>' → logprob: -2.3556699752807617
    3. '8' → logprob: -5.980669975280762
    4. '9' → logprob: -7.355669975280762
    5. '4' → logprob: -7.355669975280762
    6. ' ```' → logprob: -7.855669975280762
    7. '```' → logprob: -8.105669975280762
    8. '<|end|>' → logprob: -8.855669975280762
    9. ')' → logprob: -9.230669975280762
    10. '3' → logprob: -9.230669975280762

Token 87: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.006015183869749308
    2. ' ' → logprob: -5.131015300750732
    3. '<|end|>' → logprob: -9.881014823913574
    4. '```' → logprob: -11.006014823913574
    5. '3' → logprob: -12.256014823913574
    6. '4' → logprob: -12.631014823913574
    7. '9' → logprob: -12.881014823913574
    8. ')' → logprob: -13.006014823913574
    9. '  ' → logprob: -13.256014823913574
    10. ' ```' → logprob: -14.631014823913574

Token 88: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4019031822681427
    2. ' ' → logprob: -1.7769031524658203
    3. 'n' → logprob: -3.0269031524658203
    4. '#' → logprob: -3.1519031524658203
    5. 'def' → logprob: -3.6519031524658203
    6. ' 
' → logprob: -4.90190315246582
    7. '\n' → logprob: -5.02690315246582
    8. '
' → logprob: -5.27690315246582
    9. '' → logprob: -5.40190315246582
    10. 't' → logprob: -5.52690315246582

Token 89: 'In' (ID: 637)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6372698545455933
    2. '#' → logprob: -1.5122698545455933
    3. 'n' → logprob: -2.137269973754883
    4. 'def' → logprob: -3.012269973754883
    5. '```' → logprob: -3.512269973754883
    6. 'class' → logprob: -4.262269973754883
    7. 'from' → logprob: -4.887269973754883
    8. 't' → logprob: -5.262269973754883
    9. 'import' → logprob: -5.637269973754883
    10. '0' → logprob: -5.762269973754883

Token 90: 'order' (ID: 2143)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.02351950667798519
    2. 'order' → logprob: -3.898519515991211
    3. ' ' → logprob: -6.398519515991211
    4. 'p' → logprob: -7.398519515991211
    5. ' o' → logprob: -9.023519515991211
    6. '```' → logprob: -9.023519515991211
    7. ' ```' → logprob: -9.148519515991211
    8. '   ' → logprob: -9.648519515991211
    9. 'orde' → logprob: -9.773519515991211
    10. '  ' → logprob: -10.023519515991211

Token 91: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18623679876327515
    2. '<|end|>' → logprob: -2.56123685836792
    3. '
' → logprob: -3.18623685836792
    4. '\n' → logprob: -3.31123685836792
    5. ' 
' → logprob: -4.81123685836792
    6. '  
' → logprob: -6.68623685836792
    7. '\' → logprob: -7.18623685836792
    8. ' \' → logprob: -7.31123685836792
    9. '```' → logprob: -7.31123685836792
    10. '0' → logprob: -7.68623685836792

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006288022268563509
    2. '0' → logprob: -7.50062894821167
    3. ' ' → logprob: -9.875628471374512
    4. ' 
' → logprob: -11.875628471374512
    5. '4' → logprob: -12.500628471374512
    6. ''' → logprob: -12.875628471374512
    7. '`' → logprob: -13.000628471374512
    8. '[' → logprob: -13.500628471374512
    9. '<|end|>' → logprob: -13.750628471374512
    10. '1' → logprob: -14.125628471374512

Token 93: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09053363651037216
    2. '2' → logprob: -2.46553373336792
    3. '4' → logprob: -7.59053373336792
    4. ' ' → logprob: -7.84053373336792
    5. '1' → logprob: -7.96553373336792
    6. '[' → logprob: -8.840533256530762
    7. '3' → logprob: -9.090533256530762
    8. '6' → logprob: -9.465533256530762
    9. '9' → logprob: -12.090533256530762
    10. '```' → logprob: -13.090533256530762

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09659647941589355
    2. '<|end|>' → logprob: -2.4715964794158936
    3. '0' → logprob: -6.721596717834473
    4. '4' → logprob: -6.846596717834473
    5. '7' → logprob: -6.846596717834473
    6. '3' → logprob: -7.471596717834473
    7. '  ' → logprob: -7.596596717834473
    8. '2' → logprob: -7.596596717834473
    9. '<|end|>' → logprob: -7.971596717834473
    10. '9' → logprob: -8.096596717834473

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5614127516746521
    2. '4' → logprob: -1.5614128112792969
    3. '3' → logprob: -2.061412811279297
    4. '0' → logprob: -3.436412811279297
    5. '-' → logprob: -3.936412811279297
    6. ' ' → logprob: -3.936412811279297
    7. '9' → logprob: -4.561412811279297
    8. '2' → logprob: -5.061412811279297
    9. '7' → logprob: -6.436412811279297
    10. '5' → logprob: -6.936412811279297

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04991225153207779
    2. '<|end|>' → logprob: -3.549912214279175
    3. '9' → logprob: -5.174912452697754
    4. '4' → logprob: -5.299912452697754
    5. '2' → logprob: -5.674912452697754
    6. '3' → logprob: -5.799912452697754
    7. '0' → logprob: -7.049912452697754
    8. '  ' → logprob: -7.674912452697754
    9. '7' → logprob: -7.924912452697754
    10. '...' → logprob: -8.174912452697754

Token 97: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3856735825538635
    2. '9' → logprob: -2.1356735229492188
    3. '2' → logprob: -2.6356735229492188
    4. ' ' → logprob: -3.1356735229492188
    5. '3' → logprob: -3.3856735229492188
    6. '0' → logprob: -4.385673522949219
    7. '1' → logprob: -4.760673522949219
    8. '8' → logprob: -5.010673522949219
    9. 'n' → logprob: -5.385673522949219
    10. '7' → logprob: -5.385673522949219

Token 98: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30751174688339233
    2. '<|end|>' → logprob: -1.557511806488037
    3. '4' → logprob: -4.307511806488037
    4. ')' → logprob: -4.432511806488037
    5. '#' → logprob: -4.807511806488037
    6. '9' → logprob: -5.682511806488037
    7. '  ' → logprob: -6.057511806488037
    8. '0' → logprob: -6.182511806488037
    9. '...' → logprob: -6.682511806488037
    10. ' )' → logprob: -6.807511806488037

Token 99: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18388640880584717
    2. ' ' → logprob: -2.3088865280151367
    3. '9' → logprob: -3.3088865280151367
    4. '2' → logprob: -4.058886528015137
    5. '8' → logprob: -4.683886528015137
    6. '7' → logprob: -6.808886528015137
    7. '3' → logprob: -7.058886528015137
    8. '```' → logprob: -7.433886528015137
    9. '...' → logprob: -7.683886528015137
    10. '5' → logprob: -7.683886528015137

Token 100: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20195168256759644
    2. ')' → logprob: -2.826951742172241
    3. '<|end|>' → logprob: -2.826951742172241
    4. '#' → logprob: -4.326951503753662
    5. '9' → logprob: -4.451951503753662
    6. '4' → logprob: -4.951951503753662
    7. '[' → logprob: -5.076951503753662
    8. '```' → logprob: -5.701951503753662
    9. '0' → logprob: -5.951951503753662
    10. ' )' → logprob: -6.201951503753662

Token 101: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1453520655632019
    2. '5' → logprob: -2.0203521251678467
    3. '6' → logprob: -6.395351886749268
    4. '9' → logprob: -7.145351886749268
    5. '2' → logprob: -9.145352363586426
    6. ' ' → logprob: -9.770352363586426
    7. '```' → logprob: -11.270352363586426
    8. '8' → logprob: -11.832852363586426
    9. '-' → logprob: -12.270352363586426
    10. '#' → logprob: -12.520352363586426

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46199458837509155
    2. '4' → logprob: -2.2119946479797363
    3. '7' → logprob: -2.4619946479797363
    4. '9' → logprob: -2.5869946479797363
    5. '5' → logprob: -3.2119946479797363
    6. '2' → logprob: -3.4619946479797363
    7. '8' → logprob: -4.461994647979736
    8. '0' → logprob: -5.086994647979736
    9. '1' → logprob: -5.461994647979736
    10. '  ' → logprob: -6.336994647979736

Token 103: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03089022822678089
    2. ' ' → logprob: -3.9058902263641357
    3. '5' → logprob: -4.780890464782715
    4. '7' → logprob: -6.280890464782715
    5. '```' → logprob: -11.405890464782715
    6. 'In' → logprob: -11.655890464782715
    7. '-' → logprob: -12.405890464782715
    8. '2' → logprob: -13.030890464782715
    9. ' -' → logprob: -13.655890464782715
    10. '
' → logprob: -13.655890464782715

Token 104: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6521740555763245
    2. ' ' → logprob: -1.4021739959716797
    3. '9' → logprob: -1.6521739959716797
    4. '8' → logprob: -3.9021739959716797
    5. '<|end|>' → logprob: -5.15217399597168
    6. '7' → logprob: -5.77717399597168
    7. '5' → logprob: -6.27717399597168
    8. '2' → logprob: -6.27717399597168
    9. '```' → logprob: -6.46467399597168
    10. '0' → logprob: -6.46467399597168

Token 105: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6374754309654236
    2. '4' → logprob: -0.7624754309654236
    3. '8' → logprob: -5.512475490570068
    4. ' ' → logprob: -7.512475490570068
    5. '```' → logprob: -8.76247501373291
    6. 'None' → logprob: -10.13747501373291
    7. '9' → logprob: -11.13747501373291
    8. '-' → logprob: -11.13747501373291
    9. '#' → logprob: -11.63747501373291
    10. '2' → logprob: -11.76247501373291

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4348224401473999
    2. '8' → logprob: -1.0598224401474
    3. '4' → logprob: -5.3098225593566895
    4. '9' → logprob: -8.059822082519531
    5. '6' → logprob: -8.559822082519531
    6. '5' → logprob: -8.809822082519531
    7. '```' → logprob: -8.934822082519531
    8. '<|end|>' → logprob: -8.934822082519531
    9. '...' → logprob: -10.622322082519531
    10. ' 
' → logprob: -10.747322082519531

Token 107: '4' (ID: 19)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.26231974363327026
    2. ' ' → logprob: -1.887319803237915
    3. '4' → logprob: -2.637319803237915
    4. '5' → logprob: -5.137319564819336
    5. '```' → logprob: -6.887319564819336
    6. '9' → logprob: -7.887319564819336
    7. '6' → logprob: -9.137319564819336
    8. '``' → logprob: -9.762319564819336
    9. '0' → logprob: -10.137319564819336
    10. '3' → logprob: -10.449819564819336

Token 108: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.584628164768219
    2. '9' → logprob: -1.0846281051635742
    3. '8' → logprob: -2.334628105163574
    4. '6' → logprob: -5.834628105163574
    5. '2' → logprob: -6.334628105163574
    6. '<|end|>' → logprob: -7.209628105163574
    7. '4' → logprob: -7.459628105163574
    8. '0' → logprob: -7.959628105163574
    9. '```' → logprob: -7.959628105163574
    10. '1' → logprob: -8.959628105163574

Token 109: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.024724630638957024
    2. ' ' → logprob: -4.64972448348999
    3. '9' → logprob: -4.64972448348999
    4. '```' → logprob: -5.39972448348999
    5. '``' → logprob: -8.024724960327148
    6. 'in' → logprob: -9.149724960327148
    7. '#' → logprob: -9.899724960327148
    8. '2' → logprob: -10.024724960327148
    9. '-' → logprob: -10.149724960327148
    10. 'def' → logprob: -10.399724960327148

Token 110: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2109613418579102
    2. 'd' → logprob: -1.5859613418579102
    3. '```' → logprob: -2.08596134185791
    4. 'n' → logprob: -2.21096134185791
    5. '#' → logprob: -2.46096134185791
    6. 'class' → logprob: -2.58596134185791
    7. 'from' → logprob: -3.58596134185791
    8. 'import' → logprob: -4.08596134185791
    9. ' ' → logprob: -5.08596134185791
    10. '3' → logprob: -5.21096134185791

Token 111: 'Post' (ID: 4606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.12386953830719
    2. 'def' → logprob: -1.87386953830719
    3. 'n' → logprob: -1.99886953830719
    4. 'class' → logprob: -2.1238694190979004
    5. '```' → logprob: -2.2488694190979004
    6. 'd' → logprob: -2.2488694190979004
    7. 'from' → logprob: -4.4988694190979
    8. '3' → logprob: -5.1238694190979
    9. 'import' → logprob: -5.3738694190979
    10. '[' → logprob: -5.8738694190979

Token 112: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.005337643437087536
    2. 'o' → logprob: -5.255337715148926
    3. 'r' → logprob: -9.380337715148926
    4. 'orde' → logprob: -11.630337715148926
    5. '```' → logprob: -12.630337715148926
    6. 'ord' → logprob: -13.005337715148926
    7. 'ordre' → logprob: -13.505337715148926
    8. ' ' → logprob: -13.755337715148926
    9. 'or' → logprob: -14.130337715148926
    10. ' order' → logprob: -14.255337715148926

Token 113: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -5.514650183613412e-05
    2. '4' → logprob: -10.625055313110352
    3. ' ' → logprob: -12.000055313110352
    4. '9' → logprob: -12.250055313110352
    5. '`' → logprob: -12.500055313110352
    6. '6' → logprob: -12.625055313110352
    7. '0' → logprob: -13.250055313110352
    8. '8' → logprob: -13.375055313110352
    9. '3' → logprob: -13.500055313110352
    10. '7' → logprob: -13.500055313110352

Token 114: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003579634241759777
    2. '6' → logprob: -5.753579616546631
    3. '4' → logprob: -8.628580093383789
    4. '2' → logprob: -9.253580093383789
    5. '5' → logprob: -10.628580093383789
    6. '7' → logprob: -10.628580093383789
    7. '3' → logprob: -10.878580093383789
    8. '"' → logprob: -10.878580093383789
    9. '0' → logprob: -10.878580093383789
    10. ''' → logprob: -11.378580093383789

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12967151403427124
    2. '6' → logprob: -2.129671573638916
    3. ' ' → logprob: -6.004671573638916
    4. '0' → logprob: -8.879671096801758
    5. '3' → logprob: -9.379671096801758
    6. '1' → logprob: -11.004671096801758
    7. '7' → logprob: -11.254671096801758
    8. '5' → logprob: -12.004671096801758
    9. '```' → logprob: -12.254671096801758
    10. '"' → logprob: -13.629671096801758

Token 116: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014289027079939842
    2. '<|end|>' → logprob: -4.389288902282715
    3. '3' → logprob: -7.014288902282715
    4. '  ' → logprob: -8.389288902282715
    5. '7' → logprob: -8.764288902282715
    6. '4' → logprob: -9.139288902282715
    7. '0' → logprob: -9.264288902282715
    8. '9' → logprob: -9.639288902282715
    9. ' ```' → logprob: -10.764288902282715
    10. '<|end|>' → logprob: -10.764288902282715

Token 117: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6897735595703125
    2. '3' → logprob: -0.8147735595703125
    3. ' ' → logprob: -3.3147735595703125
    4. '4' → logprob: -5.0647735595703125
    5. '-' → logprob: -5.3147735595703125
    6. '9' → logprob: -6.0647735595703125
    7. '2' → logprob: -6.6897735595703125
    8. '```' → logprob: -6.6897735595703125
    9. '...' → logprob: -6.6897735595703125
    10. '7' → logprob: -7.8147735595703125

Token 118: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.045767731964588165
    2. '4' → logprob: -3.4207677841186523
    3. '<|end|>' → logprob: -4.795767784118652
    4. '0' → logprob: -5.795767784118652
    5. '7' → logprob: -9.170767784118652
    6. '2' → logprob: -9.295767784118652
    7. '9' → logprob: -9.295767784118652
    8. '6' → logprob: -9.795767784118652
    9. ')' → logprob: -9.795767784118652
    10. '1' → logprob: -9.920767784118652

Token 119: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.23144878447055817
    2. '0' → logprob: -1.731448769569397
    3. '5' → logprob: -3.8564488887786865
    4. '1' → logprob: -5.231448650360107
    5. ' ' → logprob: -6.606448650360107
    6. '<|end|>' → logprob: -6.856448650360107
    7. '6' → logprob: -8.731449127197266
    8. '9' → logprob: -8.981449127197266
    9. '7' → logprob: -9.106449127197266
    10. '```' → logprob: -9.231449127197266

Token 120: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35215315222740173
    2. '4' → logprob: -1.3521531820297241
    3. '9' → logprob: -3.7271530628204346
    4. '0' → logprob: -5.102153301239014
    5. '8' → logprob: -5.977153301239014
    6. '2' → logprob: -6.352153301239014
    7. '<|end|>' → logprob: -6.727153301239014
    8. ')' → logprob: -6.977153301239014
    9. '```' → logprob: -7.477153301239014
    10. ' )' → logprob: -9.477152824401855

Token 121: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001887591351987794
    2. '0' → logprob: -8.750188827514648
    3. ' ' → logprob: -10.750188827514648
    4. '7' → logprob: -12.750188827514648
    5. '<|end|>' → logprob: -13.125188827514648
    6. '```' → logprob: -14.375188827514648
    7. '678' → logprob: -14.750188827514648
    8. '687' → logprob: -14.875188827514648
    9. '۶' → logprob: -15.000188827514648
    10. '5' → logprob: -15.125188827514648

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07310312986373901
    2. '<|end|>' → logprob: -2.948103189468384
    3. '4' → logprob: -4.573102951049805
    4. '7' → logprob: -6.198102951049805
    5. ')' → logprob: -6.448102951049805
    6. '9' → logprob: -6.823102951049805
    7. '5' → logprob: -6.823102951049805
    8. '```' → logprob: -7.698102951049805
    9. '8' → logprob: -7.948102951049805
    10. '  ' → logprob: -8.698102951049805

Token 123: '7' (ID: 22)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25850579142570496
    2. '5' → logprob: -1.6335058212280273
    3. ' ' → logprob: -4.008505821228027
    4. '7' → logprob: -4.508505821228027
    5. '9' → logprob: -6.383505821228027
    6. '<|end|>' → logprob: -7.508505821228027
    7. '```' → logprob: -7.508505821228027
    8. '8' → logprob: -7.883505821228027
    9. '0' → logprob: -8.633505821228027
    10. '-' → logprob: -12.383505821228027

Token 124: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035780441015958786
    2. '4' → logprob: -3.660780429840088
    3. '8' → logprob: -5.785780429840088
    4. '9' → logprob: -6.160780429840088
    5. '```' → logprob: -6.160780429840088
    6. '<|end|>' → logprob: -6.535780429840088
    7. ')' → logprob: -8.035780906677246
    8. '0' → logprob: -8.910780906677246
    9. '...' → logprob: -9.785780906677246
    10. ' ```' → logprob: -10.285780906677246

Token 125: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008713372983038425
    2. '5' → logprob: -4.758713245391846
    3. '8' → logprob: -9.633713722229004
    4. ' ' → logprob: -10.508713722229004
    5. '0' → logprob: -12.258713722229004
    6. '```' → logprob: -14.508713722229004
    7. '-' → logprob: -15.633713722229004
    8. '
' → logprob: -16.383712768554688
    9. '４' → logprob: -16.508712768554688
    10. '[' → logprob: -16.696212768554688

Token 126: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5259367227554321
    2. '4' → logprob: -1.2759367227554321
    3. '<|end|>' → logprob: -2.2759366035461426
    4. ')' → logprob: -4.775936603546143
    5. '8' → logprob: -4.900936603546143
    6. '0' → logprob: -5.650936603546143
    7. '```' → logprob: -5.650936603546143
    8. '7' → logprob: -6.650936603546143
    9. '9' → logprob: -7.525936603546143
    10. '2' → logprob: -8.0259370803833

Token 127: '8' (ID: 23)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009407619945704937
    2. '8' → logprob: -7.125940799713135
    3. ' ' → logprob: -9.250940322875977
    4. '0' → logprob: -10.125940322875977
    5. ' four' → logprob: -16.250940322875977
    6. 'Python' → logprob: -17.625940322875977
    7. '```' → logprob: -17.750940322875977
    8. ' fourth' → logprob: -18.000940322875977
    9. 'python' → logprob: -18.125940322875977
    10. '
' → logprob: -18.125940322875977

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3033050298690796
    2. '<|end|>' → logprob: -1.9283050298690796
    3. '9' → logprob: -3.053305149078369
    4. '```' → logprob: -3.553305149078369
    5. ')' → logprob: -3.678305149078369
    6. ' ```' → logprob: -6.303305149078369
    7. '4' → logprob: -6.303305149078369
    8. '
' → logprob: -6.678305149078369
    9. '8' → logprob: -6.678305149078369
    10. ' 
' → logprob: -6.678305149078369

Token 129: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0008728709071874619
    2. '0' → logprob: -7.12587308883667
    3. ' ' → logprob: -9.625872611999512
    4. '```' → logprob: -13.750872611999512
    5. '9' → logprob: -14.125872611999512
    6. '<|end|>' → logprob: -15.000872611999512
    7. '1' → logprob: -15.500872611999512
    8. 'python' → logprob: -17.000873565673828
    9. 'Python' → logprob: -17.625873565673828
    10. '-' → logprob: -18.000873565673828

Token 130: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0709506273269653
    2. ')' → logprob: -1.6959506273269653
    3. 'def' → logprob: -2.070950508117676
    4. '#' → logprob: -2.570950508117676
    5. 'class' → logprob: -2.695950508117676
    6. '
' → logprob: -3.195950508117676
    7. '[' → logprob: -3.445950508117676
    8. '(' → logprob: -3.445950508117676
    9. ':' → logprob: -3.820950508117676
    10. ']' → logprob: -4.070950508117676

Token 131: '0' (ID: 15)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07572602480649948
    2. '#' → logprob: -3.95072603225708
    3. '\n' → logprob: -3.95072603225708
    4. '"""' → logprob: -4.32572603225708
    5. ')' → logprob: -5.07572603225708
    6. '\' → logprob: -6.07572603225708
    7. '[' → logprob: -6.20072603225708
    8. '0' → logprob: -6.32572603225708
    9. 'def' → logprob: -6.45072603225708
    10. '<|end|>' → logprob: -6.82572603225708

Token 132: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.345049113035202
    2. 'class' → logprob: -2.2200491428375244
    3. 'def' → logprob: -2.9700491428375244
    4. ' ' → logprob: -3.3450491428375244
    5. 'import' → logprob: -3.5950491428375244
    6. 'from' → logprob: -4.345048904418945
    7. 'd' → logprob: -4.470048904418945
    8. '#' → logprob: -4.470048904418945
    9. ' 
' → logprob: -5.220048904418945
    10. '[' → logprob: -5.595048904418945

Token 133: '"""

' (ID: 34508)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16162820160388947
    2. 'n' → logprob: -2.286628246307373
    3. 'def' → logprob: -3.411628246307373
    4. 'import' → logprob: -5.411628246307373
    5. 'from' → logprob: -5.536628246307373
    6. '#' → logprob: -6.036628246307373
    7. '```' → logprob: -6.411628246307373
    8. 'd' → logprob: -7.036628246307373
    9. ' class' → logprob: -7.286628246307373
    10. '[' → logprob: -8.286627769470215

Token 134: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7293727993965149
    2. 'class' → logprob: -0.7293727993965149
    3. 'import' → logprob: -4.104372978210449
    4. 'from' → logprob: -4.229372978210449
    5. 'def' → logprob: -5.979372978210449
    6. '9' → logprob: -6.854372978210449
    7. ' class' → logprob: -7.854372978210449
    8. '#' → logprob: -7.979372978210449
    9. '```' → logprob: -9.60437297821045
    10. 'N' → logprob: -9.72937297821045

Token 135: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.6405310816480778e-05
    2. ' sys' → logprob: -11.500016212463379
    3. 'collections' → logprob: -12.000016212463379
    4. 'typing' → logprob: -19.000017166137695
    5. 'heap' → logprob: -19.625017166137695
    6. 'queue' → logprob: -20.375017166137695
    7. 'math' → logprob: -20.625017166137695
    8. 'dat' → logprob: -21.375017166137695
    9. 'sy' → logprob: -21.500017166137695
    10. 'json' → logprob: -21.875017166137695

Token 136: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07233874499797821
    2. 'input' → logprob: -3.322338819503784
    3. 'sys' → logprob: -3.572338819503784
    4. 'import' → logprob: -5.572338581085205
    5. 'from' → logprob: -6.447338581085205
    6. 'data' → logprob: -9.197339057922363
    7. 'def' → logprob: -9.447339057922363
    8. '
' → logprob: -10.322339057922363
    9. ' class' → logprob: -11.447339057922363
    10. 'read' → logprob: -13.072339057922363

Token 137: 'class' (ID: 1444)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12630033493041992
    2. 'class' → logprob: -2.37630033493042
    3. 'input' → logprob: -4.12630033493042
    4. 'n' → logprob: -5.37630033493042
    5. 'from' → logprob: -5.50130033493042
    6. 'def' → logprob: -7.12630033493042
    7. 'data' → logprob: -9.751300811767578
    8. 'import' → logprob: -10.626300811767578
    9. ' sys' → logprob: -11.751300811767578
    10. '#' → logprob: -12.001300811767578

Token 138: ' Node' (ID: 10882)
  Prédit: ' Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.02198527194559574
    2. 'Node' → logprob: -4.521985054016113
    3. ' Tree' → logprob: -4.521985054016113
    4. 'Tree' → logprob: -11.896985054016113
    5. '.Node' → logprob: -14.271985054016113
    6. '_Node' → logprob: -14.396985054016113
    7. '	Node' → logprob: -14.396985054016113
    8. ' Nodo' → logprob: -14.396985054016113
    9. ' node' → logprob: -14.521985054016113
    10. 'node' → logprob: -14.771985054016113

Token 139: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016194197814911604
    2. ':
' → logprob: -8.750162124633789
    3. '(object' → logprob: -13.375162124633789
    4. ' :' → logprob: -14.250162124633789
    5. '():' → logprob: -14.625162124633789
    6. '):' → logprob: -14.875162124633789
    7. ':def' → logprob: -15.625162124633789
    8. ':

' → logprob: -16.50016212463379
    9. ':**' → logprob: -16.62516212463379
    10. '>:' → logprob: -16.75016212463379

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001961224712431431
    2. '):
' → logprob: -6.2519612312316895
    3. ':' → logprob: -10.376960754394531
    4. ' ):' → logprob: -13.751960754394531
    5. ')' → logprob: -15.876960754394531
    6. '):
' → logprob: -15.876960754394531
    7. '):

' → logprob: -16.12696075439453
    8. ':
' → logprob: -17.12696075439453
    9. '}:' → logprob: -17.37696075439453
    10. ']:' → logprob: -17.62696075439453

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.394928514957428
    2. ' def' → logprob: -1.1449284553527832
    3. 'def' → logprob: -4.894928455352783
    4. '	def' → logprob: -7.644928455352783
    5. '   ' → logprob: -10.394928932189941
    6. ' __' → logprob: -11.144928932189941
    7. '    
' → logprob: -11.769928932189941
    8. ' ' → logprob: -12.519928932189941
    9. '    ' → logprob: -12.894928932189941
    10. '   ' → logprob: -13.644928932189941

Token 142: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5791406631469727
    2. 'def' (adapté à ' def') → logprob: -0.8291406631469727
    3. ' __' → logprob: -5.829140663146973
    4. '__' → logprob: -8.329140663146973
    5. '   ' → logprob: -12.204140663146973
    6. ' ' → logprob: -12.204140663146973
    7. '	def' → logprob: -12.454140663146973
    8. ':def' → logprob: -16.954139709472656
    9. '  ' → logprob: -17.079139709472656
    10. '_def' → logprob: -17.329139709472656

Token 143: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04866378381848335
    2. '__' → logprob: -3.048663854598999
    3. ' __' → logprob: -10.298664093017578
    4. 'def' → logprob: -11.048664093017578
    5. '_init' → logprob: -11.798664093017578
    6. '```' → logprob: -12.048664093017578
    7. 'it' → logprob: -12.173664093017578
    8. 'int' → logprob: -12.673664093017578
    9. 'nit' → logprob: -13.298664093017578
    10. '`' → logprob: -13.673664093017578

Token 144: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'inite' → logprob: -17.375
    3. 'nit' → logprob: -17.5
    4. 'int' → logprob: -17.875
    5. ' init' → logprob: -18.125
    6. 'new' → logprob: -18.5
    7. 'ini' → logprob: -18.875
    8. '	init' → logprob: -19.25
    9. '```' → logprob: -19.375
    10. '(init' → logprob: -20.125

Token 145: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025802976451814175
    2. '__' → logprob: -6.002580165863037
    3. '(self' → logprob: -9.252580642700195
    4. '__(
' → logprob: -12.627580642700195
    5. '__((' → logprob: -12.877580642700195
    6. '__('' → logprob: -13.127580642700195
    7. '(' → logprob: -14.752580642700195
    8. '__("' → logprob: -15.752580642700195
    9. '_(' → logprob: -15.877580642700195
    10. '__(*' → logprob: -17.252580642700195

Token 146: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043221889063715935
    2. ' self' → logprob: -7.750432014465332
    3. '	self' → logprob: -14.875432014465332
    4. ',self' → logprob: -14.875432014465332
    5. ',' → logprob: -15.250432014465332
    6. '(self' → logprob: -15.750432014465332
    7. 'value' → logprob: -15.875432014465332
    8. 'data' → logprob: -16.00043296813965
    9. 'val' → logprob: -16.37543296813965
    10. ')' → logprob: -16.37543296813965

Token 147: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016557788476347923
    2. ' ,' → logprob: -7.501655578613281
    3. 'data' → logprob: -8.251655578613281
    4. ',value' → logprob: -8.501655578613281
    5. ',data' → logprob: -8.501655578613281
    6. 'self' → logprob: -8.626655578613281
    7. 'value' → logprob: -9.001655578613281
    8. ',val' → logprob: -9.251655578613281
    9. ',key' → logprob: -11.626655578613281
    10. ' data' → logprob: -11.876655578613281

Token 148: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7201502919197083
    2. ' self' → logprob: -1.4701502323150635
    3. ' val' → logprob: -1.7201502323150635
    4. 'val' → logprob: -3.0951502323150635
    5. ' key' → logprob: -3.2201502323150635
    6. 'key' → logprob: -4.845150470733643
    7. 'data' → logprob: -5.095150470733643
    8. ' data' → logprob: -6.095150470733643
    9. 'value' → logprob: -6.845150470733643
    10. '   ' → logprob: -7.470150470733643

Token 149: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20879845321178436
    2. 'key' → logprob: -1.7087984085083008
    3. 'left' → logprob: -6.083798408508301
    4. ' self' → logprob: -6.333798408508301
    5. 'val' → logprob: -6.333798408508301
    6. ' key' → logprob: -6.583798408508301
    7. 'data' → logprob: -10.2087984085083
    8. 'value' → logprob: -10.2087984085083
    9. ' val' → logprob: -10.3337984085083
    10. ' left' → logprob: -10.9587984085083

Token 150: ' init' (ID: 6327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3598199784755707
    2. 'key' → logprob: -1.234820008277893
    3. 'left' → logprob: -5.4848198890686035
    4. 'val' → logprob: -5.9848198890686035
    5. ' key' → logprob: -6.1098198890686035
    6. 'value' → logprob: -7.2348198890686035
    7. ' self' → logprob: -7.2348198890686035
    8. 'data' → logprob: -8.109820365905762
    9. 'def' → logprob: -8.484820365905762
    10. 'idx' → logprob: -9.234820365905762

Token 151: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023681452497839928
    2. ' self' → logprob: -3.773681402206421
    3. '       ' → logprob: -8.523681640625
    4. 'def' → logprob: -8.773681640625
    5. '   ' → logprob: -9.898681640625
    6. ' ' → logprob: -11.148681640625
    7. '	self' → logprob: -11.273681640625
    8. ' def' → logprob: -13.773681640625
    9. '  ' → logprob: -14.023681640625
    10. 'left' → logprob: -14.148681640625

Token 152: ' as' (ID: 472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2629033625125885
    2. '       ' → logprob: -2.1379034519195557
    3. ' self' → logprob: -2.2629034519195557
    4. '   ' → logprob: -6.012903213500977
    5. 'def' → logprob: -6.262903213500977
    6. ' =' → logprob: -6.512903213500977
    7. ',' → logprob: -6.887903213500977
    8. ' ' → logprob: -7.637903213500977
    9. '	self' → logprob: -8.012903213500977
    10. '(self' → logprob: -8.262903213500977

Token 153: ' a' (ID: 261)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02179878205060959
    2. ' None' → logprob: -4.521798610687256
    3. 'self' → logprob: -5.021798610687256
    4. '-' → logprob: -5.771798610687256
    5. 'int' → logprob: -7.396798610687256
    6. '0' → logprob: -8.771799087524414
    7. 'value' → logprob: -9.646799087524414
    8. ' self' → logprob: -10.271799087524414
    9. 'val' → logprob: -10.396799087524414
    10. ' -' → logprob: -10.771799087524414

Token 154: ' single' (ID: 4590)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.7821823358535767
    2. ' leaf' → logprob: -1.7821823358535767
    3. 'value' → logprob: -2.032182216644287
    4. ' node' → logprob: -2.157182216644287
    5. 'node' → logprob: -2.657182216644287
    6. ' value' → logprob: -2.782182216644287
    7. ' root' → logprob: -3.032182216644287
    8. ' dict' → logprob: -3.032182216644287
    9. ' dictionary' → logprob: -3.407182216644287
    10. 'n' → logprob: -3.532182216644287

Token 155: ' leaf' (ID: 25882)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.19510410726070404
    2. 'node' → logprob: -2.0701041221618652
    3. ' None' → logprob: -4.695104122161865
    4. '   ' → logprob: -5.195104122161865
    5. '-node' → logprob: -5.195104122161865
    6. 'self' → logprob: -5.320104122161865
    7. 'def' → logprob: -5.445104122161865
    8. 'None' → logprob: -5.445104122161865
    9. ' ' → logprob: -5.445104122161865
    10. ' self' → logprob: -5.570104122161865

Token 156: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29939520359039307
    2. ' self' → logprob: -2.0493950843811035
    3. 'self' → logprob: -2.7993950843811035
    4. ',' → logprob: -3.6743950843811035
    5. ' with' → logprob: -3.6743950843811035
    6. ' ' → logprob: -5.2993950843811035
    7. ' node' → logprob: -5.5493950843811035
    8. '   ' → logprob: -5.5493950843811035
    9. 'node' → logprob: -7.1743950843811035
    10. '
' → logprob: -7.4243950843811035

Token 157: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007345958612859249
    2. 'self' → logprob: -5.132346153259277
    3. ' self' → logprob: -6.757346153259277
    4. ',' → logprob: -9.132346153259277
    5. ' with' → logprob: -10.257346153259277
    6. '
' → logprob: -10.382346153259277
    7. '   ' → logprob: -10.757346153259277
    8. '<|end|>' → logprob: -11.007346153259277
    9. '(self' → logprob: -11.257346153259277
    10. ' ' → logprob: -12.257346153259277

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45646438002586365
    2. 'self' → logprob: -1.206464409828186
    3. ' self' → logprob: -2.7064642906188965
    4. '   ' → logprob: -8.206464767456055
    5. ' ' → logprob: -9.206464767456055
    6. '	self' → logprob: -9.831464767456055
    7. '	' → logprob: -11.331464767456055
    8. '     ' → logprob: -12.956464767456055
    9. '    ' → logprob: -13.081464767456055
    10. '           ' → logprob: -13.206464767456055

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008141548605635762
    2. ' self' → logprob: -7.375813961029053
    3. 'key' → logprob: -8.750814437866211
    4. '   ' → logprob: -11.750814437866211
    5. ' ' → logprob: -11.875814437866211
    6. 'left' → logprob: -12.000814437866211
    7. '       ' → logprob: -13.125814437866211
    8. 'def' → logprob: -13.250814437866211
    9. 'val' → logprob: -13.250814437866211
    10. '	self' → logprob: -13.750814437866211

Token 160: '.parent' (ID: 17454)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.025278883054852486
    2. 'key' → logprob: -4.0252790451049805
    3. '.val' → logprob: -5.6502790451049805
    4. '.value' → logprob: -7.0252790451049805
    5. '.left' → logprob: -7.2752790451049805
    6. '_key' → logprob: -7.7752790451049805
    7. '.idx' → logprob: -8.02527904510498
    8. '.id' → logprob: -8.27527904510498
    9. '.data' → logprob: -8.40027904510498
    10. '.parent' → logprob: -8.52527904510498

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018215499818325043
    2. ' =' → logprob: -4.018215656280518
    3. '=None' → logprob: -9.64321517944336
    4. '   ' → logprob: -15.14321517944336
    5. 'None' → logprob: -15.39321517944336
    6. ' ' → logprob: -16.39321517944336
    7. ' None' → logprob: -16.64321517944336
    8. '=-' → logprob: -17.89321517944336
    9. '    ' → logprob: -18.26821517944336
    10. '=
' → logprob: -18.64321517944336

Token 162: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.007708250544965267
    2. ' None' → logprob: -5.2577080726623535
    3. '-' → logprob: -6.0077080726623535
    4. ' -' → logprob: -11.507708549499512
    5. ' ' → logprob: -14.382708549499512
    6. '   ' → logprob: -14.757708549499512
    7. 'self' → logprob: -15.007708549499512
    8. '  ' → logprob: -16.632707595825195
    9. '_None' → logprob: -16.882707595825195
    10. '0' → logprob: -17.382707595825195

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '１' → logprob: -15.375008583068848
    4. '2' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.00000762939453
    6. '۱' → logprob: -17.75000762939453
    7. '     ' → logprob: -18.31250762939453
    8. ' -' → logprob: -18.50000762939453
    9. '```' → logprob: -18.62500762939453
    10. '       ' → logprob: -18.87500762939453

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039188552647829056
    2. 'self' → logprob: -3.2891886234283447
    3. ' self' → logprob: -6.914188385009766
    4. ' ' → logprob: -10.164188385009766
    5. '   ' → logprob: -10.289188385009766
    6. '	self' → logprob: -10.289188385009766
    7. ',' → logprob: -11.039188385009766
    8. '	' → logprob: -11.539188385009766
    9. '<|end|>' → logprob: -12.039188385009766
    10. ',self' → logprob: -12.164188385009766

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010918840765953064
    2. 'self' → logprob: -4.635918617248535
    3. ' self' → logprob: -6.885918617248535
    4. ' ' → logprob: -9.510918617248535
    5. '   ' → logprob: -10.510918617248535
    6. '	' → logprob: -11.510918617248535
    7. ',' → logprob: -11.635918617248535
    8. '	self' → logprob: -11.760918617248535
    9. '<|end|>' → logprob: -12.510918617248535
    10. '
' → logprob: -12.760918617248535

Token 166: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0036706142127513885
    2. '       ' → logprob: -5.628670692443848
    3. ' self' → logprob: -9.628670692443848
    4. '   ' → logprob: -12.753670692443848
    5. ' ' → logprob: -14.753670692443848
    6. '	self' → logprob: -14.753670692443848
    7. 'left' → logprob: -14.878670692443848
    8. '[self' → logprob: -16.25366973876953
    9. '(self' → logprob: -16.37866973876953
    10. ',self' → logprob: -16.62866973876953

Token 167: '.children' (ID: 26331)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5338829755783081
    2. '=' → logprob: -1.658882975578308
    3. 'val' → logprob: -2.5338830947875977
    4. 'value' → logprob: -2.5338830947875977
    5. 'id' → logprob: -4.408883094787598
    6. 'self' → logprob: -4.658883094787598
    7. 'left' → logprob: -4.783883094787598
    8. '.val' → logprob: -4.908883094787598
    9. 'data' → logprob: -5.033883094787598
    10. '_val' → logprob: -5.658883094787598

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002451702952385
    2. '=' → logprob: -2.350245237350464
    3. '[' → logprob: -10.350245475769043
    4. '=[]' → logprob: -12.600245475769043
    5. '[]' → logprob: -14.100245475769043
    6. ' ' → logprob: -14.225245475769043
    7. ' =[' → logprob: -14.600245475769043
    8. 's' → logprob: -14.850245475769043
    9. '=[' → logprob: -14.975245475769043
    10. ' [' → logprob: -15.600245475769043

Token 169: ' []
' (ID: 8911)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16187381744384766
    2. '[]' → logprob: -1.9118738174438477
    3. '[' → logprob: -6.411873817443848
    4. '[],' → logprob: -13.036873817443848
    5. ' []' → logprob: -14.036873817443848
    6. '[:]' → logprob: -14.161873817443848
    7. '[]
' → logprob: -14.286873817443848
    8. ' [-' → logprob: -14.411873817443848
    9. '[]}' → logprob: -14.786873817443848
    10. '(-' → logprob: -14.911873817443848

Token 170: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05287039279937744
    2. ' self' → logprob: -3.927870273590088
    3. '0' → logprob: -4.177870273590088
    4. '       ' → logprob: -4.677870273590088
    5. 'def' → logprob: -6.177870273590088
    6. ' ' → logprob: -6.302870273590088
    7. '   ' → logprob: -6.677870273590088
    8. 'None' → logprob: -7.177870273590088
    9. '	self' → logprob: -8.552870750427246
    10. '[]' → logprob: -9.177870750427246

Token 172: '.index' (ID: 9736)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4347964525222778
    2. 'value' → logprob: -1.4347964525222778
    3. '.val' → logprob: -1.6847964525222778
    4. '.value' → logprob: -1.8097964525222778
    5. 'val' → logprob: -2.9347963333129883
    6. '.key' → logprob: -3.9347963333129883
    7. '=' → logprob: -3.9347963333129883
    8. '.left' → logprob: -4.059796333312988
    9. '_val' → logprob: -4.184796333312988
    10. 'data' → logprob: -4.684796333312988

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519359588623047
    2. '=' → logprob: -1.5019359588623047
    3. ' ' → logprob: -12.751935958862305
    4. '=None' → logprob: -13.001935958862305
    5. '   ' → logprob: -13.751935958862305
    6. ' =
' → logprob: -15.251935958862305
    7. '0' → logprob: -16.126935958862305
    8. '  ' → logprob: -16.501935958862305
    9. '=-' → logprob: -17.126935958862305
    10. '=
' → logprob: -17.126935958862305

Token 174: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0116597414016724
    2. '-' → logprob: -1.2616597414016724
    3. ' None' → logprob: -1.8866597414016724
    4. '0' → logprob: -1.8866597414016724
    5. ' -' → logprob: -3.011659622192383
    6. ' ' → logprob: -7.136659622192383
    7. '   ' → logprob: -10.636659622192383
    8. '_None' → logprob: -12.261659622192383
    9. '  ' → logprob: -13.636659622192383
    10. 'int' → logprob: -13.761659622192383

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -16.250017166137695
    4. '   ' → logprob: -17.375017166137695
    5. '0' → logprob: -18.250017166137695
    6. '  ' → logprob: -18.875017166137695
    7. '       ' → logprob: -19.000017166137695
    8. '```' → logprob: -19.187517166137695
    9. '１' → logprob: -19.625017166137695
    10. '`' → logprob: -19.750017166137695

Token 176: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20066092908382416
    2. '   ' → logprob: -1.9506609439849854
    3. '<|end|>' → logprob: -3.9506609439849854
    4. '
' → logprob: -4.325660705566406
    5. ' def' → logprob: -5.575660705566406
    6. '<|end|>' → logprob: -7.200660705566406
    7. '    
' → logprob: -7.325660705566406
    8. '       ' → logprob: -7.450660705566406
    9. 'class' → logprob: -8.200660705566406
    10. '	def' → logprob: -8.200660705566406

Token 178: ' pre' (ID: 876)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.46307772397994995
    2. ' build' → logprob: -1.8380777835845947
    3. 'main' → logprob: -1.9630777835845947
    4. 'build' → logprob: -3.5880777835845947
    5. ' read' → logprob: -3.7130777835845947
    6. 'read' → logprob: -4.088077545166016
    7. ' parse' → logprob: -6.963077545166016
    8. 'parse' → logprob: -6.963077545166016
    9. 'def' → logprob: -9.588077545166016
    10. '__' → logprob: -9.588077545166016

Token 179: '_parse' (ID: 51194)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -2.4034345187828876e-05
    2. '_order' → logprob: -10.75002384185791
    3. 'oder' → logprob: -14.50002384185791
    4. 'or' → logprob: -14.50002384185791
    5. 'fix' → logprob: -15.00002384185791
    6. 'def' → logprob: -15.00002384185791
    7. 'r' → logprob: -15.12502384185791
    8. 'Order' → logprob: -15.37502384185791
    9. 'print' → logprob: -16.750024795532227
    10. ' order' → logprob: -17.125024795532227

Token 180: '(v' (ID: 6932)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.6228541135787964
    2. '_order' → logprob: -1.3728541135787964
    3. 'fix' → logprob: -2.747854232788086
    4. '(root' → logprob: -3.122854232788086
    5. '(node' → logprob: -3.622854232788086
    6. 'f' → logprob: -3.747854232788086
    7. '(self' → logprob: -4.372854232788086
    8. '(' → logprob: -4.872854232788086
    9. 'r' → logprob: -4.872854232788086
    10. '(tree' → logprob: -5.747854232788086

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23407870531082153
    2. '):
' → logprob: -1.6090786457061768
    3. 'al' → logprob: -5.609078884124756
    4. 'tx' → logprob: -6.234078884124756
    5. 'alue' → logprob: -6.984078884124756
    6. ',' → logprob: -7.734078884124756
    7. 'x' → logprob: -7.734078884124756
    8. 'r' → logprob: -7.859078884124756
    9. ')' → logprob: -8.734078407287598
    10. 'l' → logprob: -9.484078407287598

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008285674848593771
    2. ' if' → logprob: -7.125828742980957
    3. 'if' → logprob: -11.375828742980957
    4. '	if' → logprob: -12.625828742980957
    5. ' global' → logprob: -12.750828742980957
    6. '   ' → logprob: -13.250828742980957
    7. '    ' → logprob: -13.500828742980957
    8. 'global' → logprob: -13.750828742980957
    9. ' print' → logprob: -14.125828742980957
    10. 'print' → logprob: -14.750828742980957

Token 183: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1126399040222168
    2. 'print' (adapté à ' print') → logprob: -1.1126399040222168
    3. ' if' → logprob: -1.3626399040222168
    4. '   ' → logprob: -2.987639904022217
    5. ' print' → logprob: -3.737639904022217
    6. ' res' → logprob: -4.862639904022217
    7. 'stack' → logprob: -6.612639904022217
    8. 'res' → logprob: -6.862639904022217
    9. 'sys' → logprob: -7.362639904022217
    10. ' sys' → logprob: -7.487639904022217

Token 184: '('' (ID: 706)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4720688760280609
    2. '('' → logprob: -1.7220689058303833
    3. '("' → logprob: -2.2220687866210938
    4. '(' → logprob: -2.4720687866210938
    5. '(f' → logprob: -5.722068786621094
    6. '("("' → logprob: -6.722068786621094
    7. '()' → logprob: -9.097068786621094
    8. '(node' → logprob: -9.597068786621094
    9. '("(' → logprob: -10.347068786621094
    10. '((' → logprob: -10.472068786621094

Token 185: ' '' (ID: 461)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.30160191655158997
    2. 'v' → logprob: -1.4266018867492676
    3. ' ',' → logprob: -4.551601886749268
    4. '(v' → logprob: -4.801601886749268
    5. ''' → logprob: -7.801601886749268
    6. '{' → logprob: -7.926601886749268
    7. ' v' → logprob: -8.676602363586426
    8. '(',' → logprob: -8.676602363586426
    9. 'end' → logprob: -9.176602363586426
    10. '{}'.' → logprob: -9.551602363586426

Token 186: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29310595989227295
    2. 'end' → logprob: -2.2931060791015625
    3. ',end' → logprob: -2.2931060791015625
    4. ',v' → logprob: -3.0431060791015625
    5. 'v' → logprob: -6.2931060791015625
    6. ')' → logprob: -6.2931060791015625
    7. ' end' → logprob: -8.043106079101562
    8. ' ,' → logprob: -8.043106079101562
    9. '(end' → logprob: -10.043106079101562
    10. '),' → logprob: -10.668106079101562

Token 187: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.337155355140567e-05
    2. 'v' → logprob: -10.250062942504883
    3. ' str' → logprob: -10.500062942504883
    4. 'nodes' → logprob: -15.375062942504883
    5. '(str' → logprob: -16.250062942504883
    6. 'node' → logprob: -17.500062942504883
    7. '	str' → logprob: -17.625062942504883
    8. '[str' → logprob: -18.000062942504883
    9. 'repr' → logprob: -18.875062942504883
    10. 'f' → logprob: -19.125062942504883

Token 188: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00023560250701848418
    2. '(nodes' → logprob: -8.625235557556152
    3. '(tree' → logprob: -10.250235557556152
    4. '(node' → logprob: -12.000235557556152
    5. 'v' → logprob: -12.250235557556152
    6. 'nodes' → logprob: -12.500235557556152
    7. 'tree' → logprob: -13.125235557556152
    8. '(' → logprob: -13.750235557556152
    9. '(root' → logprob: -14.250235557556152
    10. '(vertices' → logprob: -14.375235557556152

Token 189: '.index' (ID: 9736)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000765552744269371
    2. '))' → logprob: -7.625765323638916
    3. ')' → logprob: -8.250765800476074
    4. ')),' → logprob: -11.375765800476074
    5. ')+' → logprob: -13.375765800476074
    6. ' ),' → logprob: -13.625765800476074
    7. '[' → logprob: -14.250765800476074
    8. '),'' → logprob: -14.375765800476074
    9. ',' → logprob: -14.625765800476074
    10. ')+'' → logprob: -16.250764846801758

Token 190: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.225939872208983e-05
    2. ')' → logprob: -10.625032424926758
    3. ' ),' → logprob: -12.625032424926758
    4. ',' → logprob: -13.125032424926758
    5. '))' → logprob: -13.250032424926758
    6. ')),' → logprob: -14.875032424926758
    7. ',end' → logprob: -16.125032424926758
    8. ')+' → logprob: -16.250032424926758
    9. '   ' → logprob: -17.000032424926758
    10. '),
' → logprob: -17.250032424926758

Token 191: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002477081725373864
    2. ' end' → logprob: -6.002477169036865
    3. ',end' → logprob: -13.877476692199707
    4. '   ' → logprob: -15.127476692199707
    5. '	end' → logprob: -16.252477645874023
    6. '(end' → logprob: -16.877477645874023
    7. ''end' → logprob: -17.252477645874023
    8. ')' → logprob: -18.002477645874023
    9. ',' → logprob: -18.252477645874023
    10. '    ' → logprob: -18.627477645874023

Token 192: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -9.436450636712834e-05
    2. '=' → logprob: -9.750094413757324
    3. '=''' → logprob: -11.625094413757324
    4. '="' → logprob: -11.875094413757324
    5. '('' → logprob: -12.000094413757324
    6. '='')
' → logprob: -12.000094413757324
    7. '=',' → logprob: -12.375094413757324
    8. ''' → logprob: -13.000094413757324
    9. ' ='' → logprob: -14.625094413757324
    10. '='',' → logprob: -14.875094413757324

Token 193: '')

' (ID: 9735)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7116391062736511
    2. ')' → logprob: -0.9616391062736511
    3. '')' → logprob: -2.961639165878296
    4. ' '')' → logprob: -3.211639165878296
    5. ' )' → logprob: -3.586639165878296
    6. ' '' → logprob: -5.836638927459717
    7. ' ')' → logprob: -6.336638927459717
    8. '''' → logprob: -6.461638927459717
    9. '"' → logprob: -7.336638927459717
    10. ' ' → logprob: -9.836639404296875

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034770287573337555
    2. 'if' → logprob: -3.6597702503204346
    3. ' if' → logprob: -4.784770488739014
    4. '	if' → logprob: -10.284770011901855
    5. 'for' → logprob: -10.784770011901855
    6. 'def' → logprob: -11.534770011901855
    7. ' for' → logprob: -12.159770011901855
    8. '
' → logprob: -12.784770011901855
    9. '    
' → logprob: -13.409770011901855
    10. '   ' → logprob: -13.659770011901855

Token 195: ' left' (ID: 3561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02367260679602623
    2. 'if' → logprob: -3.773672580718994
    3. '   ' → logprob: -7.773672580718994
    4. ' for' → logprob: -12.023673057556152
    5. ' if' → logprob: -15.773673057556152
    6. '	for' → logprob: -16.148672103881836
    7. '    
' → logprob: -16.898672103881836
    8. ' ' → logprob: -17.023672103881836
    9. '  ' → logprob: -17.148672103881836
    10. '
' → logprob: -17.273672103881836

Token 196: '_child' (ID: 40474)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047285180538892746
    2. ',' → logprob: -3.6722850799560547
    3. '=' → logprob: -4.422285079956055
    4. 'if' → logprob: -5.797285079956055
    5. '_child' → logprob: -6.172285079956055
    6. '_index' → logprob: -6.297285079956055
    7. ' if' → logprob: -7.297285079956055
    8. '_idx' → logprob: -7.297285079956055
    9. 'child' → logprob: -9.047285079956055
    10. ' ' → logprob: -9.547285079956055

Token 197: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022589290514588356
    2. '=' → logprob: -3.8975892066955566
    3. ',' → logprob: -6.522589206695557
    4. 'if' → logprob: -8.147589683532715
    5. ' if' → logprob: -9.272589683532715
    6. ' ' → logprob: -9.897589683532715
    7. '_index' → logprob: -10.272589683532715
    8. '_idx' → logprob: -10.272589683532715
    9. ',v' → logprob: -10.647589683532715
    10. '=v' → logprob: -11.272589683532715

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10082590579986572
    2. '=' → logprob: -2.350825786590576
    3. 'if' → logprob: -8.350826263427734
    4. ',' → logprob: -8.725826263427734
    5. ' if' → logprob: -8.850826263427734
    6. ' ' → logprob: -9.975826263427734
    7. '   ' → logprob: -11.600826263427734
    8. '=v' → logprob: -12.725826263427734
    9. ')' → logprob: -12.975826263427734
    10. ':' → logprob: -13.100826263427734

Token 199: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06086399406194687
    2. ' v' → logprob: -2.935863971710205
    3. '-' → logprob: -6.060863971710205
    4. '-v' → logprob: -6.935863971710205
    5. 'None' → logprob: -7.185863971710205
    6. ' -' → logprob: -7.435863971710205
    7. ' None' → logprob: -7.810863971710205
    8. '   ' → logprob: -7.935863971710205
    9. '0' → logprob: -9.185864448547363
    10. 'node' → logprob: -9.435864448547363

Token 200: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -2.141186450899113e-05
    2. ' .' → logprob: -11.750020980834961
    3. '.index' → logprob: -12.250020980834961
    4. '.' → logprob: -13.000020980834961
    5. 'children' → logprob: -13.000020980834961
    6. '.left' → logprob: -13.000020980834961
    7. '.parent' → logprob: -13.875020980834961
    8. '.child' → logprob: -15.000020980834961
    9. '.indices' → logprob: -15.375020980834961
    10. '   ' → logprob: -16.00002098083496

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.176947600673884e-05
    2. '0' → logprob: -11.625021934509277
    3. ' ' → logprob: -12.375021934509277
    4. ' [' → logprob: -13.125021934509277
    5. '   ' → logprob: -13.250021934509277
    6. '1' → logprob: -13.625021934509277
    7. 'and' → logprob: -14.250021934509277
    8. '
' → logprob: -14.500021934509277
    9. '```' → logprob: -14.750021934509277
    10. 's' → logprob: -14.750021934509277

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8590300139039755e-05
    2. ' ' → logprob: -10.000048637390137
    3. '[' → logprob: -13.375048637390137
    4. '   ' → logprob: -14.625048637390137
    5. ':' → logprob: -15.937548637390137
    6. ')' → logprob: -15.937548637390137
    7. ']' → logprob: -16.06254768371582
    8. ',' → logprob: -16.12504768371582
    9. '][' → logprob: -16.18754768371582
    10. '1' → logprob: -16.81254768371582

Token 203: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03105572797358036
    2. ')' → logprob: -4.031055927276611
    3. ']
' → logprob: -5.156055927276611
    4. ' if' → logprob: -5.906055927276611
    5. 'if' → logprob: -6.531055927276611
    6. '])' → logprob: -6.656055927276611
    7. ' ]' → logprob: -7.406055927276611
    8. ')]' → logprob: -7.781055927276611
    9. '<|end|>' → logprob: -8.781055450439453
    10. '   ' → logprob: -8.906055450439453

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11755935102701187
    2. 'if' → logprob: -2.2425594329833984
    3. ' if' → logprob: -5.367559432983398
    4. '	if' → logprob: -10.242559432983398
    5. '    
' → logprob: -11.867559432983398
    6. '
' → logprob: -11.992559432983398
    7. 'def' → logprob: -12.992559432983398
    8. '  ' → logprob: -13.367559432983398
    9. ')' → logprob: -13.742559432983398
    10. ',' → logprob: -13.867559432983398

Token 205: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0034250891767442226
    2. '   ' → logprob: -5.753425121307373
    3. ' if' → logprob: -8.628424644470215
    4. 'right' (adapté à ' right') → logprob: -9.628424644470215
    5. '	if' → logprob: -13.253424644470215
    6. '    
' → logprob: -15.753424644470215
    7. '  ' → logprob: -16.25342559814453
    8. '
' → logprob: -16.25342559814453
    9. ' ' → logprob: -16.50342559814453
    10. ' right' → logprob: -16.62842559814453

Token 206: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.001145337475463748
    2. '_children' → logprob: -7.126145362854004
    3. '_' → logprob: -9.251145362854004
    4. ' =' → logprob: -9.251145362854004
    5. 'child' → logprob: -9.876145362854004
    6. '<|end|>' → logprob: -10.751145362854004
    7. '_token' → logprob: -10.876145362854004
    8. '_CHILD' → logprob: -11.001145362854004
    9. 'Child' → logprob: -12.001145362854004
    10. '=' → logprob: -12.126145362854004

Token 207: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0005985465249978006
    2. 'idx' → logprob: -7.750598430633545
    3. ' =' → logprob: -9.000598907470703
    4. '=' → logprob: -10.500598907470703
    5. '_index' → logprob: -12.250598907470703
    6. 'index' → logprob: -12.875598907470703
    7. '_' → logprob: -12.875598907470703
    8. 'x' → logprob: -13.625598907470703
    9. 's' → logprob: -14.000598907470703
    10. '_idxs' → logprob: -14.000598907470703

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. '=v' → logprob: -14.974078178405762
    4. ' ' → logprob: -15.474078178405762
    5. 'if' → logprob: -16.974077224731445
    6. '   ' → logprob: -17.349077224731445
    7. ')' → logprob: -17.349077224731445
    8. ' =
' → logprob: -17.349077224731445
    9. '=
' → logprob: -17.474077224731445
    10. ',' → logprob: -17.599077224731445

Token 209: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14270202815532684
    2. ' v' → logprob: -2.017702102661133
    3. '   ' → logprob: -11.392702102661133
    4. 'None' → logprob: -12.142702102661133
    5. ' None' → logprob: -12.142702102661133
    6. '0' → logprob: -13.767702102661133
    7. '	v' → logprob: -13.892702102661133
    8. '  ' → logprob: -14.142702102661133
    9. ' ' → logprob: -14.142702102661133
    10. '(v' → logprob: -14.517702102661133

Token 210: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.250008583068848
    3. 'children' → logprob: -13.250008583068848
    4. ' .' → logprob: -13.500008583068848
    5. '	children' → logprob: -16.87500762939453
    6. '.Children' → logprob: -17.12500762939453
    7. '[' → logprob: -17.50000762939453
    8. '.characters' → logprob: -17.62500762939453
    9. '.child' → logprob: -18.37500762939453
    10. '.indices' → logprob: -18.75000762939453

Token 211: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.500017166137695
    3. ' [' → logprob: -13.000017166137695
    4. '=' → logprob: -13.125017166137695
    5. ' =' → logprob: -13.625017166137695
    6. '```' → logprob: -15.000017166137695
    7. '1' → logprob: -15.125017166137695
    8. 'def' → logprob: -15.125017166137695
    9. ' ' → logprob: -15.375017166137695
    10. 's' → logprob: -15.750017166137695

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '   ' → logprob: -15.00001049041748
    4. '-' → logprob: -15.12501049041748
    5. '
' → logprob: -15.81251049041748
    6. '0' → logprob: -16.062509536743164
    7. ']' → logprob: -16.187509536743164
    8. '```' → logprob: -16.625009536743164
    9. '...' → logprob: -16.687509536743164
    10. '[' → logprob: -16.812509536743164

Token 213: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32307571172714233
    2. ']' → logprob: -1.948075771331787
    3. '   ' → logprob: -2.073075771331787
    4. ')
' → logprob: -6.448075771331787
    5. 'if' → logprob: -6.448075771331787
    6. '
' → logprob: -6.573075771331787
    7. ' if' → logprob: -6.573075771331787
    8. 'def' → logprob: -7.073075771331787
    9. '<|end|>' → logprob: -8.323075294494629
    10. ']
' → logprob: -8.448075294494629

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38707295060157776
    2. 'if' → logprob: -1.1370729207992554
    3. ' if' → logprob: -8.512072563171387
    4. '	if' → logprob: -14.637072563171387
    5. '    
' → logprob: -15.387072563171387
    6. 'def' → logprob: -16.387073516845703
    7. '
' → logprob: -17.262073516845703
    8. '  ' → logprob: -17.387073516845703
    9. 'If' → logprob: -18.137073516845703
    10. ' ' → logprob: -18.262073516845703

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032052809838205576
    2. '   ' → logprob: -5.753205299377441
    3. ' if' → logprob: -10.503205299377441
    4. '	if' → logprob: -16.878204345703125
    5. '
' → logprob: -17.628204345703125
    6. '    
' → logprob: -18.128204345703125
    7. '  ' → logprob: -18.503204345703125
    8. ' ' → logprob: -19.128204345703125
    9. 'for' → logprob: -19.378204345703125
    10. 'If' → logprob: -19.878204345703125

Token 216: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03810552507638931
    2. ' left' → logprob: -3.2881054878234863
    3. '   ' → logprob: -9.913105964660645
    4. ' ' → logprob: -12.163105964660645
    5. '	left' → logprob: -12.163105964660645
    6. '  ' → logprob: -13.288105964660645
    7. '(left' → logprob: -13.913105964660645
    8. '[left' → logprob: -14.538105964660645
    9. '0' → logprob: -14.913105964660645
    10. '    ' → logprob: -15.538105964660645

Token 217: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -2.5776860184123507e-06
    2. 'child' → logprob: -13.00000286102295
    3. 'Child' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '_children' → logprob: -17.750001907348633
    6. '_CHILD' → logprob: -18.000001907348633
    7. '	child' → logprob: -18.125001907348633
    8. ' child' → logprob: -18.375001907348633
    9. '
' → logprob: -18.375001907348633
    10. '  ' → logprob: -19.500001907348633

Token 218: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00024358915106859058
    2. 'idx' → logprob: -9.250243186950684
    3. ' !=' → logprob: -9.750243186950684
    4. '!=' → logprob: -9.750243186950684
    5. '!=-' → logprob: -11.250243186950684
    6. 's' → logprob: -12.500243186950684
    7. '   ' → logprob: -13.125243186950684
    8. '_idxs' → logprob: -13.375243186950684
    9. '[idx' → logprob: -13.625243186950684
    10. 'Idx' → logprob: -14.000243186950684

Token 219: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25476595759391785
    2. ' !=' → logprob: -1.5047659873962402
    3. '!=-' → logprob: -5.87976598739624
    4. '>' → logprob: -11.629765510559082
    5. 'is' → logprob: -11.754765510559082
    6. ' is' → logprob: -12.754765510559082
    7. ' ' → logprob: -13.004765510559082
    8. '>=' → logprob: -13.004765510559082
    9. '()!=' → logprob: -13.004765510559082
    10. ')!=' → logprob: -13.004765510559082

Token 220: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. ' ' → logprob: -17.500261306762695
    4. '   ' → logprob: -17.750261306762695
    5. '  ' → logprob: -21.125261306762695
    6. '	' → logprob: -21.500261306762695
    7. '−' → logprob: -21.875261306762695
    8. '-n' → logprob: -22.250261306762695
    9. 'None' → logprob: -23.125261306762695
    10. '    ' → logprob: -23.250261306762695

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -9.500081062316895
    3. '   ' → logprob: -12.875081062316895
    4. '```' → logprob: -14.250081062316895
    5. '-' → logprob: -15.125081062316895
    6. ',' → logprob: -15.375081062316895
    7. '
' → logprob: -15.562581062316895
    8. ' -' → logprob: -15.562581062316895
    9. '...' → logprob: -15.687581062316895
    10. ':' → logprob: -15.750081062316895

Token 222: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08867103606462479
    2. ':' → logprob: -2.9636709690093994
    3. ' and' → logprob: -3.8386709690093994
    4. '       ' → logprob: -5.2136712074279785
    5. '   ' → logprob: -5.4636712074279785
    6. 'and' → logprob: -6.7136712074279785
    7. '):
' → logprob: -7.4636712074279785
    8. ' :
' → logprob: -8.71367073059082
    9. ' ' → logprob: -11.46367073059082
    10. ':
' → logprob: -11.46367073059082

Token 223: '       ' (ID: 309)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -1.1108417510986328
    2. 'pre' → logprob: -1.1108417510986328
    3. '       ' → logprob: -1.2358417510986328
    4. '   ' → logprob: -2.985841751098633
    5. '	pre' → logprob: -8.360841751098633
    6. '    ' → logprob: -10.485841751098633
    7. '     ' → logprob: -10.610841751098633
    8. 'def' → logprob: -11.235841751098633
    9. ' ' → logprob: -11.360841751098633
    10. '      ' → logprob: -11.860841751098633

Token 224: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.18653163313865662
    2. ' pre' → logprob: -2.0615315437316895
    3. '   ' → logprob: -3.1865315437316895
    4. '       ' → logprob: -6.5615315437316895
    5. '	pre' → logprob: -8.936532020568848
    6. '  ' → logprob: -10.936532020568848
    7. ' ' → logprob: -11.436532020568848
    8. '    ' → logprob: -12.186532020568848
    9. '     ' → logprob: -12.936532020568848
    10. '           ' → logprob: -13.061532020568848

Token 225: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.00018911674851551652
    2. 'parse' → logprob: -8.625188827514648
    3. '_pre' → logprob: -12.125188827514648
    4. 'Parse' → logprob: -14.000188827514648
    5. '_print' → logprob: -14.000188827514648
    6. '_parser' → logprob: -14.500188827514648
    7. 'order' → logprob: -14.500188827514648
    8. 'pre' → logprob: -15.250188827514648
    9. '(parse' → logprob: -15.875188827514648
    10. '_order' → logprob: -16.00018882751465

Token 226: '(node' (ID: 13356)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.20353683829307556
    2. '(v' → logprob: -2.5785367488861084
    3. '(tree' → logprob: -2.7035367488861084
    4. 'nodes' → logprob: -4.0785369873046875
    5. '(node' → logprob: -4.2035369873046875
    6. '(t' → logprob: -5.9535369873046875
    7. 'tree' → logprob: -6.0785369873046875
    8. '(n' → logprob: -7.2035369873046875
    9. 'node' → logprob: -7.4535369873046875
    10. '(N' → logprob: -7.4535369873046875

Token 227: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.254658043384552
    2. '[left' → logprob: -1.5046579837799072
    3. 'left' → logprob: -6.879658222198486
    4. 'nodes' → logprob: -7.629658222198486
    5. '[node' → logprob: -7.879658222198486
    6. '[right' → logprob: -8.129657745361328
    7. 'node' → logprob: -8.754657745361328
    8. 'list' → logprob: -9.504657745361328
    9. 'children' → logprob: -9.629657745361328
    10. '(left' → logprob: -10.504657745361328

Token 228: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.625006675720215
    3. '[node' → logprob: -13.125006675720215
    4. 'left' → logprob: -14.625006675720215
    5. '[right' → logprob: -14.750006675720215
    6. ')[' → logprob: -15.375006675720215
    7. '[
' → logprob: -17.5000057220459
    8. ' [' → logprob: -17.6250057220459
    9. '(left' → logprob: -18.2500057220459
    10. ')' → logprob: -18.7500057220459

Token 229: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.0049430509097874165
    2. 'child' → logprob: -5.379942893981934
    3. 'left' → logprob: -8.879942893981934
    4. '.child' → logprob: -10.129942893981934
    5. '_left' → logprob: -10.254942893981934
    6. 'Child' → logprob: -10.504942893981934
    7. '_children' → logprob: -11.129942893981934
    8. 'ild' → logprob: -11.254942893981934
    9. '.left' → logprob: -11.254942893981934
    10. '   ' → logprob: -11.879942893981934

Token 230: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.12157046049833298
    2. 'idx' → logprob: -2.621570348739624
    3. 'left' → logprob: -4.121570587158203
    4. 'x' → logprob: -4.371570587158203
    5. '].' → logprob: -5.496570587158203
    6. 'index' → logprob: -6.246570587158203
    7. '   ' → logprob: -6.621570587158203
    8. '.left' → logprob: -6.996570587158203
    9. 's' → logprob: -7.371570587158203
    10. 'child' → logprob: -7.496570587158203

Token 231: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0024528263602405787
    2. ')' → logprob: -6.127452850341797
    3. '])
' → logprob: -8.377452850341797
    4. ' ])' → logprob: -11.252452850341797
    5. ')
' → logprob: -11.752452850341797
    6. '))' → logprob: -11.877452850341797
    7. ')])' → logprob: -13.002452850341797
    8. ' )' → logprob: -13.252452850341797
    9. '])
' → logprob: -13.627452850341797
    10. '   ' → logprob: -13.752452850341797

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.706686690449715e-05
    2. '
' → logprob: -10.250066757202148
    3. '    
' → logprob: -10.750066757202148
    4. 'if' → logprob: -11.875066757202148
    5. '        
' → logprob: -13.875066757202148
    6. '  
' → logprob: -14.000066757202148
    7. ' 
' → logprob: -14.375066757202148
    8. ' if' → logprob: -14.750066757202148
    9. '       ' → logprob: -15.625066757202148
    10. ' ' → logprob: -16.00006675720215

Token 233: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47605839371681213
    2. 'if' (adapté à ' if') → logprob: -0.9760583639144897
    3. ' if' → logprob: -6.226058483123779
    4. '
' → logprob: -13.976058006286621
    5. '    
' → logprob: -14.226058006286621
    6. '	if' → logprob: -15.601058006286621
    7. ' ' → logprob: -15.726058006286621
    8. '       ' → logprob: -15.851058006286621
    9. '  ' → logprob: -15.976058006286621
    10. '```' → logprob: -16.226058959960938

Token 234: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3868740200996399
    2. 'right' → logprob: -1.1368739604949951
    3. ' ' → logprob: -14.011874198913574
    4. '(right' → logprob: -14.011874198913574
    5. '	right' → logprob: -14.261874198913574
    6. '   ' → logprob: -14.636874198913574
    7. '[right' → logprob: -15.886874198913574
    8. '  ' → logprob: -16.636873245239258
    9. '.right' → logprob: -16.761873245239258
    10. 'Right' → logprob: -17.261873245239258

Token 235: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -2.165027217415627e-05
    2. 'child' → logprob: -10.875021934509277
    3. 'Child' → logprob: -13.750021934509277
    4. '_children' → logprob: -14.000021934509277
    5. '_CHILD' → logprob: -15.000021934509277
    6. ' child' → logprob: -16.37502098083496
    7. '```' → logprob: -16.75002098083496
    8. '   ' → logprob: -17.37502098083496
    9. '-child' → logprob: -17.62502098083496
    10. '	child' → logprob: -17.62502098083496

Token 236: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.673547563375905e-05
    2. 'idx' → logprob: -9.375086784362793
    3. '!=' → logprob: -14.875086784362793
    4. '_index' → logprob: -15.125086784362793
    5. 'index' → logprob: -15.625086784362793
    6. '_idxs' → logprob: -16.125085830688477
    7. '_list' → logprob: -16.250085830688477
    8. '[' → logprob: -16.375085830688477
    9. '-' → logprob: -16.625085830688477
    10. '   ' → logprob: -16.625085830688477

Token 237: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.020568516105413437
    2. '!=' → logprob: -3.895568609237671
    3. ')!=' → logprob: -11.52056884765625
    4. '!=-' → logprob: -11.64556884765625
    5. ' ' → logprob: -12.64556884765625
    6. '   ' → logprob: -13.52056884765625
    7. '()!=' → logprob: -14.14556884765625
    8. ' ' → logprob: -14.14556884765625
    9. ')' → logprob: -14.14556884765625
    10. ']!=' → logprob: -14.89556884765625

Token 238: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. ' ' → logprob: -18.500709533691406
    4. 'not' → logprob: -19.375709533691406
    5. '   ' → logprob: -20.000709533691406
    6. ' not' → logprob: -20.500709533691406
    7. '-not' → logprob: -21.250709533691406
    8. '```' → logprob: -21.250709533691406
    9. '  ' → logprob: -22.125709533691406
    10. '!=-' → logprob: -22.500709533691406

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. '-' → logprob: -10.750029563903809
    3. ' ' → logprob: -12.000029563903809
    4. '```' → logprob: -14.000029563903809
    5. ' -' → logprob: -14.500029563903809
    6. '<|end|>' → logprob: -15.937529563903809
    7. '   ' → logprob: -16.000030517578125
    8. '...' → logprob: -16.812530517578125
    9. 'def' → logprob: -17.375030517578125
    10. '<|end|>' → logprob: -17.437530517578125

Token 240: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5712346434593201
    2. ':
' → logprob: -1.1962347030639648
    3. ':' → logprob: -2.071234703063965
    4. '):
' → logprob: -5.071234703063965
    5. '):' → logprob: -7.946234703063965
    6. '   ' → logprob: -8.821234703063965
    7. ')' → logprob: -11.196234703063965
    8. ',' → logprob: -12.321234703063965
    9. '      ' → logprob: -12.571234703063965
    10. ':

' → logprob: -12.571234703063965

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011105302110081539
    2. 'pre' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.500110626220703
    4. ' pre' → logprob: -15.000110626220703
    5. '	' → logprob: -16.000110626220703
    6. '           ' → logprob: -16.500110626220703
    7. '	pre' → logprob: -16.750110626220703
    8. '      ' → logprob: -17.875110626220703
    9. '     ' → logprob: -18.000110626220703
    10. 'post' → logprob: -19.125110626220703

Token 242: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.000553151941858232
    2. ' pre' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. '	pre' → logprob: -16.875553131103516
    5. '       ' → logprob: -17.750553131103516
    6. 'post' → logprob: -18.000553131103516
    7. '(pre' → logprob: -20.250553131103516
    8. '  ' → logprob: -20.625553131103516
    9. '           ' → logprob: -20.875553131103516
    10. ' ' → logprob: -20.875553131103516

Token 243: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -2.935296834039036e-06
    2. 'parse' → logprob: -12.75000286102295
    3. '_PARSE' → logprob: -19.250003814697266
    4. 'Parse' → logprob: -19.875003814697266
    5. '_parser' → logprob: -20.875003814697266
    6. '_' → logprob: -21.000003814697266
    7. '_append' → logprob: -21.125003814697266
    8. '_process' → logprob: -21.625003814697266
    9. '_Parse' → logprob: -21.750003814697266
    10. ' parse' → logprob: -22.000003814697266

Token 244: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -15.75
    3. '(' → logprob: -18.375
    4. '[node' → logprob: -19.0
    5. ' node' → logprob: -21.25
    6. '=node' → logprob: -22.125
    7. ' (' → logprob: -22.25
    8. '(Node' → logprob: -23.0
    9. '(
' → logprob: -23.125
    10. ',node' → logprob: -23.625

Token 245: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.085517113911919e-05
    2. 'list' → logprob: -10.62505054473877
    3. '[right' → logprob: -11.00005054473877
    4. '[left' → logprob: -11.87505054473877
    5. '[node' → logprob: -13.37505054473877
    6. 'List' → logprob: -14.37505054473877
    7. '[_' → logprob: -15.75005054473877
    8. 'right' → logprob: -16.125051498413086
    9. 'left' → logprob: -16.375051498413086
    10. '[' → logprob: -16.500051498413086

Token 246: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -7.896309739408025e-07
    2. '[left' → logprob: -14.750000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'right' → logprob: -16.375
    5. '[root' → logprob: -16.625
    6. ')[' → logprob: -18.125
    7. '(right' → logprob: -18.625
    8. ' [' → logprob: -18.875
    9. ')' → logprob: -19.125
    10. '[
' → logprob: -19.25

Token 247: '_child' (ID: 40474)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016841251403093338
    2. '_child' → logprob: -4.516841411590576
    3. 'child' → logprob: -5.266841411590576
    4. '[right' → logprob: -7.766841411590576
    5. 'idx' → logprob: -9.766840934753418
    6. '   ' → logprob: -10.266840934753418
    7. '_right' → logprob: -10.516840934753418
    8. 'left' → logprob: -10.641840934753418
    9. '_idx' → logprob: -10.891840934753418
    10. ' right' → logprob: -11.641840934753418

Token 248: '_idx' (ID: 15257)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03596216440200806
    2. '[right' → logprob: -3.9109621047973633
    3. '_idx' → logprob: -4.285962104797363
    4. 'idx' → logprob: -7.035962104797363
    5. 'child' → logprob: -8.035962104797363
    6. '_right' → logprob: -9.285962104797363
    7. ' right' → logprob: -9.410962104797363
    8. ')' → logprob: -10.785962104797363
    9. '   ' → logprob: -10.785962104797363
    10. 'left' → logprob: -10.910962104797363

Token 249: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. '))' → logprob: -11.250022888183594
    3. '])' → logprob: -12.500022888183594
    4. ')
' → logprob: -12.625022888183594
    5. '   ' → logprob: -13.250022888183594
    6. ' )' → logprob: -14.625022888183594
    7. '<|end|>' → logprob: -15.500022888183594
    8. '})' → logprob: -15.625022888183594
    9. ')])' → logprob: -17.125022888183594
    10. ')]' → logprob: -17.250022888183594

Token 250: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' v' (ID: 323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22967033088207245
    2. '<|end|>' → logprob: -1.6046702861785889
    3. '
' → logprob: -5.604670524597168
    4. '```' → logprob: -8.604670524597168
    5. ' def' → logprob: -8.854670524597168
    6. '<|end|>' → logprob: -8.979670524597168
    7. ')' → logprob: -10.729670524597168
    8. '  
' → logprob: -10.979670524597168
    9. ' 
' → logprob: -11.229670524597168
    10. '    
' → logprob: -11.479670524597168

Token 253: '.index' (ID: 9736)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03146519884467125
    2. '<|end|>' → logprob: -3.5314652919769287
    3. '
' → logprob: -6.40646505355835
    4. ' def' → logprob: -10.906465530395508
    5. '<|end|>' → logprob: -11.031465530395508
    6. '```' → logprob: -11.406465530395508
    7. '  
' → logprob: -12.406465530395508
    8. '

' → logprob: -12.656465530395508
    9. ')' → logprob: -13.156465530395508
    10. '    
' → logprob: -13.156465530395508

Token 254: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11843499541282654
    2. '<|end|>' → logprob: -2.2434349060058594
    3. '
' → logprob: -5.243434906005859
    4. '<|end|>' → logprob: -8.99343490600586
    5. ' def' → logprob: -9.49343490600586
    6. ')' → logprob: -10.74343490600586
    7. '```' → logprob: -10.86843490600586
    8. ' 
' → logprob: -10.99343490600586
    9. '    
' → logprob: -11.24343490600586
    10. '  
' → logprob: -11.24343490600586

Token 256: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.000494533043820411
    2. ' in' → logprob: -7.875494480133057
    3. 'post' → logprob: -10.625494956970215
    4. 'pre' → logprob: -10.750494956970215
    5. 'ino' → logprob: -11.375494956970215
    6. 'print' → logprob: -12.000494956970215
    7. 'main' → logprob: -12.000494956970215
    8. 'def' → logprob: -12.250494956970215
    9. ' inorder' → logprob: -12.250494956970215
    10. '_in' → logprob: -12.500494956970215

Token 257: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.5044857859611511
    2. '_order' → logprob: -1.504485845565796
    3. 'order' → logprob: -1.754485845565796
    4. '_' → logprob: -7.004485607147217
    5. 'def' → logprob: -10.004486083984375
    6. 'parse' → logprob: -10.504486083984375
    7. '_parser' → logprob: -11.004486083984375
    8. 'o' → logprob: -11.129486083984375
    9. '_fix' → logprob: -11.254486083984375
    10. 'orden' → logprob: -12.879486083984375

Token 258: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -12.000014305114746
    3. 'def' → logprob: -12.375014305114746
    4. '(node' → logprob: -13.125014305114746
    5. '(root' → logprob: -13.875014305114746
    6. 'order' → logprob: -16.37501335144043
    7. 'v' → logprob: -16.37501335144043
    8. 't' → logprob: -16.62501335144043
    9. '((' → logprob: -17.37501335144043
    10. ' (' → logprob: -17.50001335144043

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07891280949115753
    2. '):
' → logprob: -2.5789127349853516
    3. '):
' → logprob: -11.453912734985352
    4. ')' → logprob: -11.578912734985352
    5. ' ):' → logprob: -13.578912734985352
    6. ':' → logprob: -13.828912734985352
    7. '):

' → logprob: -14.328912734985352
    8. '   ' → logprob: -15.328912734985352
    9. ' ):
' → logprob: -17.32891273498535
    10. ')：' → logprob: -18.82891273498535

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0096964780241251
    2. 'print' → logprob: -4.7596964836120605
    3. 'def' → logprob: -7.3846964836120605
    4. 'if' → logprob: -7.7596964836120605
    5. ' print' → logprob: -11.259696006774902
    6. '
' → logprob: -11.384696006774902
    7. ' if' → logprob: -12.134696006774902
    8. '```' → logprob: -14.134696006774902
    9. '    
' → logprob: -14.259696006774902
    10. '       ' → logprob: -14.634696006774902

Token 261: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.3881790339946747
    2. 'if' → logprob: -1.138179063796997
    3. '   ' → logprob: -7.138178825378418
    4. ' left' → logprob: -8.263178825378418
    5. 'def' → logprob: -9.013178825378418
    6. ' if' → logprob: -9.138178825378418
    7. '
' → logprob: -11.138178825378418
    8. '	left' → logprob: -12.263178825378418
    9. 'global' → logprob: -13.388178825378418
    10. '.left' → logprob: -13.638178825378418

Token 262: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00010950337309623137
    2. 'child' → logprob: -9.375109672546387
    3. 'def' → logprob: -11.500109672546387
    4. '_children' → logprob: -11.875109672546387
    5. 'Child' → logprob: -13.125109672546387
    6. ' =' → logprob: -13.500109672546387
    7. '   ' → logprob: -14.000109672546387
    8. '_CHILD' → logprob: -14.250109672546387
    9. '_index' → logprob: -14.750109672546387
    10. '	child' → logprob: -14.875109672546387

Token 263: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00016110755677800626
    2. 'idx' → logprob: -8.875161170959473
    3. ' =' → logprob: -11.500161170959473
    4. '=' → logprob: -12.000161170959473
    5. '_index' → logprob: -13.750161170959473
    6. 'def' → logprob: -13.875161170959473
    7. '   ' → logprob: -13.875161170959473
    8. 'index' → logprob: -14.000161170959473
    9. 'v' → logprob: -14.750161170959473
    10. 'Idx' → logprob: -15.375161170959473

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25199615955352783
    2. ' =' → logprob: -1.5019961595535278
    3. '=v' → logprob: -9.626996040344238
    4. '   ' → logprob: -14.251996040344238
    5. ' v' → logprob: -15.876996040344238
    6. 'v' → logprob: -16.126996994018555
    7. ' ' → logprob: -16.501996994018555
    8. '=
' → logprob: -17.126996994018555
    9. '=node' → logprob: -17.126996994018555
    10. '＝' → logprob: -18.626996994018555

Token 265: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47409334778785706
    2. ' v' → logprob: -0.9740933179855347
    3. '   ' → logprob: -11.099093437194824
    4. '	v' → logprob: -14.099093437194824
    5. '(v' → logprob: -16.224092483520508
    6. ' ' → logprob: -16.349092483520508
    7. '[v' → logprob: -16.474092483520508
    8. '0' → logprob: -16.849092483520508
    9. '  ' → logprob: -17.849092483520508
    10. '_v' → logprob: -18.099092483520508

Token 266: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -9.253090865968261e-06
    2. 'children' → logprob: -11.625009536743164
    3. '.' → logprob: -16.625009536743164
    4. ' .' → logprob: -16.875009536743164
    5. '	children' → logprob: -17.375009536743164
    6. '   ' → logprob: -18.375009536743164
    7. '(children' → logprob: -18.500009536743164
    8. '.Children' → logprob: -18.750009536743164
    9. '[' → logprob: -19.250009536743164
    10. '.characters' → logprob: -19.250009536743164

Token 267: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1782583391759545e-05
    2. '   ' → logprob: -10.750031471252441
    3. '0' → logprob: -11.875031471252441
    4. 'def' → logprob: -12.875031471252441
    5. '=' → logprob: -15.875031471252441
    6. 'if' → logprob: -16.125032424926758
    7. ' [' → logprob: -16.250032424926758
    8. '```' → logprob: -16.250032424926758
    9. 'import' → logprob: -17.125032424926758
    10. ' ' → logprob: -17.125032424926758

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013834332639817148
    2. '[' → logprob: -9.125138282775879
    3. ' ' → logprob: -10.625138282775879
    4. '   ' → logprob: -12.875138282775879
    5. 'def' → logprob: -13.375138282775879
    6. '       ' → logprob: -15.937638282775879
    7. 'import' → logprob: -16.062639236450195
    8. '(' → logprob: -16.187639236450195
    9. '1' → logprob: -16.312639236450195
    10. '```' → logprob: -16.562639236450195

Token 269: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5550987124443054
    2. '   ' → logprob: -0.9300987124443054
    3. ']' → logprob: -4.180098533630371
    4. ')
' → logprob: -4.305098533630371
    5. 'if' → logprob: -6.430098533630371
    6. '
' → logprob: -7.930098533630371
    7. ']
' → logprob: -8.055098533630371
    8. ' if' → logprob: -8.680098533630371
    9. 'def' → logprob: -10.055098533630371
    10. '  ' → logprob: -10.430098533630371

Token 270: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31354767084121704
    2. '   ' → logprob: -1.3135476112365723
    3. ' if' → logprob: -8.31354808807373
    4. '```' → logprob: -10.31354808807373
    5. 'print' → logprob: -12.68854808807373
    6. 'def' → logprob: -13.43854808807373
    7. '
' → logprob: -13.56354808807373
    8. '    
' → logprob: -14.31354808807373
    9. '	if' → logprob: -14.81354808807373
    10. '``' → logprob: -15.56354808807373

Token 271: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006504826596938074
    2. '   ' → logprob: -7.500650405883789
    3. ' if' → logprob: -9.250650405883789
    4. '
' → logprob: -14.500650405883789
    5. 'def' → logprob: -15.125650405883789
    6. '```' → logprob: -15.500650405883789
    7. '	if' → logprob: -15.750650405883789
    8. '       ' → logprob: -15.875650405883789
    9. 'right' (adapté à ' right') → logprob: -16.25065040588379
    10. 'left' → logprob: -16.37565040588379

Token 272: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00011737081513274461
    2. 'child' → logprob: -9.750117301940918
    3. '   ' → logprob: -10.500117301940918
    4. '_children' → logprob: -10.750117301940918
    5. 'def' → logprob: -12.250117301940918
    6. '_CHILD' → logprob: -13.250117301940918
    7. '```' → logprob: -13.875117301940918
    8. '_left' → logprob: -14.125117301940918
    9. 'Child' → logprob: -14.250117301940918
    10. '=' → logprob: -16.125118255615234

Token 273: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0011740362970158458
    2. 'idx' → logprob: -6.751173973083496
    3. 'v' → logprob: -13.751173973083496
    4. 'Idx' → logprob: -13.876173973083496
    5. '=' → logprob: -14.126173973083496
    6. '   ' → logprob: -15.251173973083496
    7. '[v' → logprob: -15.376173973083496
    8. '_idxs' → logprob: -15.501173973083496
    9. ' =' → logprob: -16.126174926757812
    10. 'parse' → logprob: -16.376174926757812

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474229633808136
    2. ' =' → logprob: -0.974229633808136
    3. '=v' → logprob: -9.34922981262207
    4. '   ' → logprob: -9.84922981262207
    5. 'if' → logprob: -12.34922981262207
    6. ' ' → logprob: -12.97422981262207
    7. ' v' → logprob: -13.22422981262207
    8. ' if' → logprob: -13.34922981262207
    9. 'v' → logprob: -14.47422981262207
    10. 'def' → logprob: -14.72422981262207

Token 275: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47408637404441833
    2. ' v' → logprob: -0.9740864038467407
    3. '   ' → logprob: -12.97408676147461
    4. '-' → logprob: -12.97408676147461
    5. '(v' → logprob: -13.22408676147461
    6. '[v' → logprob: -14.22408676147461
    7. '	v' → logprob: -14.22408676147461
    8. ' ' → logprob: -15.22408676147461
    9. ' -' → logprob: -15.22408676147461
    10. '$v' → logprob: -15.59908676147461

Token 276: '.children' (ID: 26331)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02497011050581932
    2. '.children' → logprob: -3.774970054626465
    3. 'children' → logprob: -6.649970054626465
    4. '1' → logprob: -8.024970054626465
    5. '   ' → logprob: -9.899970054626465
    6. '```' → logprob: -11.149970054626465
    7. '.' → logprob: -11.524970054626465
    8. '	children' → logprob: -12.274970054626465
    9. 'if' → logprob: -12.399970054626465
    10. '(children' → logprob: -12.524970054626465

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017147827020380646
    2. '1' → logprob: -8.750171661376953
    3. '   ' → logprob: -12.500171661376953
    4. '```' → logprob: -12.625171661376953
    5. '=' → logprob: -13.250171661376953
    6. '-' → logprob: -14.500171661376953
    7. '#' → logprob: -14.750171661376953
    8. '...' → logprob: -14.875171661376953
    9. ']' → logprob: -14.875171661376953
    10. 'if' → logprob: -15.000171661376953

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -11.625021934509277
    3. '0' → logprob: -12.250021934509277
    4. '[' → logprob: -12.625021934509277
    5. '-' → logprob: -12.750021934509277
    6. '   ' → logprob: -13.500021934509277
    7. ']' → logprob: -15.375021934509277
    8. '```' → logprob: -15.375021934509277
    9. '  ' → logprob: -16.937522888183594
    10. '
' → logprob: -17.000022888183594

Token 279: ']

' (ID: 3144)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20655511319637299
    2. ')' → logprob: -2.831555128097534
    3. ']' → logprob: -2.956555128097534
    4. '
' → logprob: -3.081555128097534
    5. '<|end|>' → logprob: -4.581554889678955
    6. 'if' → logprob: -4.706554889678955
    7. '

' → logprob: -5.331554889678955
    8. ' if' → logprob: -6.581554889678955
    9. 'def' → logprob: -6.831554889678955
    10. '    
' → logprob: -7.081554889678955

Token 280: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07961607724428177
    2. '   ' → logprob: -2.579616069793701
    3. 'def' → logprob: -7.829616069793701
    4. ' if' → logprob: -8.07961654663086
    5. '
' → logprob: -10.95461654663086
    6. '```' → logprob: -14.95461654663086
    7. '	if' → logprob: -15.32961654663086
    8. '    
' → logprob: -15.32961654663086
    9. ' ' → logprob: -16.45461654663086
    10. '  ' → logprob: -16.45461654663086

Token 281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.512236498361744e-07
    2. ' if' → logprob: -15.500000953674316
    3. '
' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.25
    5. 'def' → logprob: -20.625
    6. '    
' → logprob: -21.0
    7. '	if' → logprob: -21.25
    8. '#' → logprob: -21.25
    9. '```' → logprob: -22.125
    10. '

' → logprob: -22.5

Token 282: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.386884480714798
    2. 'left' → logprob: -1.1368844509124756
    3. '   ' → logprob: -12.011884689331055
    4. '(left' → logprob: -12.636884689331055
    5. '	left' → logprob: -13.011884689331055
    6. ' ' → logprob: -14.136884689331055
    7. '[left' → logprob: -14.511884689331055
    8. ' lef' → logprob: -15.386884689331055
    9. '.left' → logprob: -16.011884689331055
    10. '  ' → logprob: -16.386884689331055

Token 283: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -3.130576806142926e-05
    2. 'child' → logprob: -10.500031471252441
    3. '_children' → logprob: -13.875031471252441
    4. 'Child' → logprob: -14.000031471252441
    5. '_left' → logprob: -14.375031471252441
    6. 'def' → logprob: -14.625031471252441
    7. '   ' → logprob: -14.875031471252441
    8. '_CHILD' → logprob: -15.750031471252441
    9. 'left' → logprob: -16.250030517578125
    10. '#' → logprob: -16.250030517578125

Token 284: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00039373442996293306
    2. 'idx' → logprob: -7.875393867492676
    3. '!=' → logprob: -12.250393867492676
    4. '   ' → logprob: -13.000393867492676
    5. 'v' → logprob: -13.125393867492676
    6. 'Idx' → logprob: -13.250393867492676
    7. '[' → logprob: -13.375393867492676
    8. '[v' → logprob: -14.625393867492676
    9. ' !=' → logprob: -15.750393867492676
    10. '[idx' → logprob: -16.12539291381836

Token 285: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3914582431316376
    2. ' !=' → logprob: -1.14145827293396
    3. '!=-' → logprob: -5.391458034515381
    4. '   ' → logprob: -11.266458511352539
    5. '!=(' → logprob: -13.141458511352539
    6. ')!=' → logprob: -13.266458511352539
    7. '()!=' → logprob: -13.641458511352539
    8. 'import' → logprob: -13.766458511352539
    9. '!="' → logprob: -14.141458511352539
    10. '!='' → logprob: -14.266458511352539

Token 286: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033546582562848926
    2. ' -' → logprob: -8.000335693359375
    3. '=' → logprob: -19.750335693359375
    4. 'not' → logprob: -20.125335693359375
    5. '```' → logprob: -20.250335693359375
    6. ' ' → logprob: -20.625335693359375
    7. '   ' → logprob: -20.750335693359375
    8. '-not' → logprob: -21.000335693359375
    9. '1' → logprob: -21.500335693359375
    10. '!=-' → logprob: -22.000335693359375

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010362643515691161
    2. '-' → logprob: -6.876036167144775
    3. ' ' → logprob: -13.376036643981934
    4. ' -' → logprob: -13.501036643981934
    5. '```' → logprob: -15.626036643981934
    6. '#' → logprob: -17.001035690307617
    7. '   ' → logprob: -17.251035690307617
    8. '=' → logprob: -17.313535690307617
    9. '(-' → logprob: -17.376035690307617
    10. '=-' → logprob: -17.688535690307617

Token 288: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4214574694633484
    2. '       ' → logprob: -1.2964575290679932
    3. ':' → logprob: -2.671457529067993
    4. '   ' → logprob: -7.046457290649414
    5. '):
' → logprob: -7.921457290649414
    6. '():
' → logprob: -12.296457290649414
    7. '      ' → logprob: -12.421457290649414
    8. ':

' → logprob: -12.421457290649414
    9. '):' → logprob: -12.671457290649414
    10. ' :
' → logprob: -12.921457290649414

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.135819760151207e-05
    2. 'in' → logprob: -10.00007152557373
    3. '   ' → logprob: -11.00007152557373
    4. ' in' → logprob: -11.62507152557373
    5. '     ' → logprob: -15.37507152557373
    6. '      ' → logprob: -17.250070571899414
    7. '           ' → logprob: -17.500070571899414
    8. ' ' → logprob: -17.625070571899414
    9. '[in' → logprob: -17.875070571899414
    10. '	in' → logprob: -18.000070571899414

Token 290: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.00024215869780164212
    2. ' in' → logprob: -8.375242233276367
    3. '   ' → logprob: -11.375242233276367
    4. '	in' → logprob: -15.625242233276367
    5. '
' → logprob: -17.625242233276367
    6. ' ' → logprob: -17.750242233276367
    7. '[in' → logprob: -18.250242233276367
    8. '  ' → logprob: -18.625242233276367
    9. '       ' → logprob: -19.375242233276367
    10. ' ' → logprob: -20.875242233276367

Token 291: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -5.5577775128767826e-06
    2. 'parse' → logprob: -12.125005722045898
    3. '_parser' → logprob: -17.5000057220459
    4. '_' → logprob: -17.5000057220459
    5. 'Parse' → logprob: -17.7500057220459
    6. '_print' → logprob: -18.5000057220459
    7. '_par' → logprob: -19.3750057220459
    8. '_PARSE' → logprob: -19.3750057220459
    9. 'in' → logprob: -19.5000057220459
    10. '_Parse' → logprob: -19.8750057220459

Token 292: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. ' (' → logprob: -15.75
    4. 'node' → logprob: -17.75
    5. '[node' → logprob: -18.0
    6. ' node' → logprob: -20.25
    7. '=node' → logprob: -20.625
    8. ',node' → logprob: -20.875
    9. '(
' → logprob: -21.0
    10. '(Node' → logprob: -21.375

Token 293: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.018432261422276497
    2. '[left' → logprob: -4.018432140350342
    3. '[node' → logprob: -8.8934326171875
    4. 'list' → logprob: -9.3934326171875
    5. 'left' → logprob: -10.0184326171875
    6. '[right' → logprob: -11.5184326171875
    7. 'List' → logprob: -13.0184326171875
    8. '[' → logprob: -13.5184326171875
    9. '[List' → logprob: -14.0184326171875
    10. '_left' → logprob: -14.7684326171875

Token 294: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -9.491498531133402e-06
    2. 'left' → logprob: -11.625009536743164
    3. '[' → logprob: -15.125009536743164
    4. '[node' → logprob: -16.500009536743164
    5. '(left' → logprob: -18.000009536743164
    6. '[
' → logprob: -18.375009536743164
    7. '[right' → logprob: -18.625009536743164
    8. '   ' → logprob: -19.000009536743164
    9. ' [' → logprob: -19.000009536743164
    10. '       ' → logprob: -19.375009536743164

Token 295: '_child' (ID: 40474)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07673913985490799
    2. '_child' → logprob: -3.3267390727996826
    3. 'child' → logprob: -3.7017390727996826
    4. '[left' → logprob: -4.326739311218262
    5. '_left' → logprob: -10.826739311218262
    6. '[' → logprob: -11.451739311218262
    7. '(left' → logprob: -11.576739311218262
    8. 'right' → logprob: -12.076739311218262
    9. '	left' → logprob: -12.701739311218262
    10. 'idx' → logprob: -12.951739311218262

Token 296: '_idx' (ID: 15257)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4812861382961273
    2. 'child' → logprob: -1.3562861680984497
    3. '_child' → logprob: -2.10628604888916
    4. 'idx' → logprob: -6.60628604888916
    5. '[left' → logprob: -7.35628604888916
    6. 'right' → logprob: -7.73128604888916
    7. '_idx' → logprob: -9.85628604888916
    8. '   ' → logprob: -9.98128604888916
    9. ']' → logprob: -10.73128604888916
    10. '_left' → logprob: -10.85628604888916

Token 297: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018750304356217384
    2. ')

' → logprob: -4.018750190734863
    3. ')
' → logprob: -7.893750190734863
    4. '   ' → logprob: -8.393750190734863
    5. ')

' → logprob: -14.893750190734863
    6. ' )' → logprob: -15.768750190734863
    7. ')
' → logprob: -15.768750190734863
    8. '())' → logprob: -16.89375114440918
    9. '])' → logprob: -17.14375114440918
    10. 'def' → logprob: -17.26875114440918

Token 298: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0059442054480314255
    2. '   ' → logprob: -5.25594425201416
    3. ' print' → logprob: -7.25594425201416
    4. '
' → logprob: -13.00594425201416
    5. ' ' → logprob: -14.38094425201416
    6. 'def' → logprob: -15.00594425201416
    7. '```' → logprob: -15.13094425201416
    8. '	print' → logprob: -15.38094425201416
    9. '    
' → logprob: -15.63094425201416
    10. '.print' → logprob: -16.005943298339844

Token 299: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0206720617134124e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' print' → logprob: -13.00001049041748
    4. '
' → logprob: -20.125009536743164
    5. ' ' → logprob: -20.375009536743164
    6. '	print' → logprob: -20.750009536743164
    7. '    
' → logprob: -21.375009536743164
    8. '.print' → logprob: -21.500009536743164
    9. 'def' → logprob: -21.750009536743164
    10. '  ' → logprob: -22.500009536743164

Token 300: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. '("' → logprob: -14.875000953674316
    4. ''' → logprob: -17.625001907348633
    5. '(f' → logprob: -19.750001907348633
    6. ' ('' → logprob: -20.625001907348633
    7. 'f' → logprob: -21.125001907348633
    8. '(('' → logprob: -21.250001907348633
    9. '(
' → logprob: -21.500001907348633
    10. 'v' → logprob: -21.500001907348633

Token 301: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012516127899289131
    2. ' '' → logprob: -4.387516021728516
    3. '',' → logprob: -12.762516021728516
    4. ' ' → logprob: -13.637516021728516
    5. '('' → logprob: -13.762516021728516
    6. '"' → logprob: -14.387516021728516
    7. ''+' → logprob: -15.262516021728516
    8. ' str' → logprob: -15.762516021728516
    9. ' ' → logprob: -16.137516021728516
    10. ''s' → logprob: -16.387516021728516

Token 302: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.451116051815916e-05
    2. ' +' → logprob: -10.625024795532227
    3. ')' → logprob: -15.625024795532227
    4. 'str' → logprob: -19.125024795532227
    5. ')+' → logprob: -19.375024795532227
    6. '=' → logprob: -19.500024795532227
    7. '+=' → logprob: -19.625024795532227
    8. ' ' → logprob: -19.625024795532227
    9. '[str' → logprob: -20.125024795532227
    10. '+
' → logprob: -20.250024795532227

Token 303: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.088346359931165e-07
    2. ' str' → logprob: -14.000000953674316
    3. '(str' → logprob: -18.625
    4. '	str' → logprob: -21.125
    5. '[str' → logprob: -22.125
    6. '=str' → logprob: -22.75
    7. '   ' → logprob: -23.0
    8. ' ' → logprob: -24.125
    9. '```' → logprob: -24.25
    10. '  ' → logprob: -24.625

Token 304: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.226628895296017e-06
    2. 'v' → logprob: -11.875007629394531
    3. '(' → logprob: -15.750007629394531
    4. '   ' → logprob: -19.50000762939453
    5. ' (' → logprob: -20.00000762939453
    6. '	v' → logprob: -20.50000762939453
    7. '(
' → logprob: -20.50000762939453
    8. ')v' → logprob: -20.50000762939453
    9. ' v' → logprob: -21.37500762939453
    10. '[v' → logprob: -21.50000762939453

Token 305: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00010127831774298102
    2. '.' → logprob: -9.750101089477539
    3. ' .' → logprob: -10.125101089477539
    4. 'index' → logprob: -12.875101089477539
    5. '.idx' → logprob: -15.750101089477539
    6. '#index' → logprob: -17.37510108947754
    7. '[index' → logprob: -17.62510108947754
    8. '.code' → logprob: -17.75010108947754
    9. '   ' → logprob: -17.75010108947754
    10. '.value' → logprob: -18.25010108947754

Token 306: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10028073936700821
    2. ',' → logprob: -2.35028076171875
    3. ',end' → logprob: -10.10028076171875
    4. '   ' → logprob: -11.22528076171875
    5. ')' → logprob: -11.97528076171875
    6. ' ,' → logprob: -12.10028076171875
    7. 'end' → logprob: -12.22528076171875
    8. ',),' → logprob: -13.97528076171875
    9. '',' → logprob: -14.47528076171875
    10. ' ),' → logprob: -14.60028076171875

Token 307: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3868710398674011
    2. ' end' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.261871337890625
    4. '	end' → logprob: -18.011871337890625
    5. ',end' → logprob: -18.761871337890625
    6. ' ' → logprob: -19.261871337890625
    7. '(end' → logprob: -19.386871337890625
    8. '[end' → logprob: -19.511871337890625
    9. '=end' → logprob: -19.511871337890625
    10. ''end' → logprob: -20.011871337890625

Token 308: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -4.60414821645827e-06
    2. '=' → logprob: -12.750004768371582
    3. '='')
' → logprob: -13.750004768371582
    4. ''' → logprob: -15.125004768371582
    5. ')' → logprob: -15.750004768371582
    6. '('' → logprob: -16.125003814697266
    7. '=''' → logprob: -17.500003814697266
    8. '''' → logprob: -19.500003814697266
    9. '="' → logprob: -20.625003814697266
    10. ' '')' → logprob: -20.875003814697266

Token 309: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4936142861843109
    2. ')' → logprob: -0.9936143159866333
    3. '')

' → logprob: -4.243614196777344
    4. ')

' → logprob: -5.618614196777344
    5. '''' → logprob: -6.743614196777344
    6. ''' → logprob: -9.493614196777344
    7. '   ' → logprob: -10.243614196777344
    8. '')
' → logprob: -10.368614196777344
    9. ')
' → logprob: -11.118614196777344
    10. '")' → logprob: -11.618614196777344

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872433304786682
    2. 'if' → logprob: -1.1372432708740234
    3. '
' → logprob: -8.512243270874023
    4. ' if' → logprob: -8.887243270874023
    5. 'def' → logprob: -10.762243270874023
    6. '    
' → logprob: -11.887243270874023
    7. '```' → logprob: -12.512243270874023
    8. 'If' → logprob: -14.887243270874023
    9. '	if' → logprob: -14.887243270874023
    10. '  
' → logprob: -15.512243270874023

Token 311: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06199255958199501
    2. '   ' → logprob: -2.811992645263672
    3. ' if' → logprob: -10.686992645263672
    4. '
' → logprob: -13.686992645263672
    5. 'def' → logprob: -14.561992645263672
    6. '    
' → logprob: -14.936992645263672
    7. '	if' → logprob: -16.686992645263672
    8. 'If' → logprob: -17.686992645263672
    9. '```' → logprob: -17.686992645263672
    10. '  ' → logprob: -19.186992645263672

Token 312: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.1269606500864029
    2. 'right' → logprob: -2.1269607543945312
    3. '(right' → logprob: -10.501960754394531
    4. '	right' → logprob: -13.001960754394531
    5. ' ' → logprob: -13.751960754394531
    6. '   ' → logprob: -13.876960754394531
    7. '[right' → logprob: -14.501960754394531
    8. '.right' → logprob: -16.87696075439453
    9. '  ' → logprob: -17.00196075439453
    10. 'Right' → logprob: -17.12696075439453

Token 313: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -1.1875571544806007e-05
    2. 'child' → logprob: -11.375011444091797
    3. 'Child' → logprob: -15.250011444091797
    4. '   ' → logprob: -16.125011444091797
    5. '_CHILD' → logprob: -17.000011444091797
    6. '_children' → logprob: -18.125011444091797
    7. '	child' → logprob: -19.125011444091797
    8. '-child' → logprob: -19.500011444091797
    9. '.child' → logprob: -19.750011444091797
    10. ' Child' → logprob: -19.750011444091797

Token 314: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.167648876318708e-05
    2. 'idx' → logprob: -10.250041961669922
    3. 'right' → logprob: -12.500041961669922
    4. 'v' → logprob: -14.250041961669922
    5. '!=' → logprob: -14.250041961669922
    6. '_right' → logprob: -15.000041961669922
    7. '   ' → logprob: -15.625041961669922
    8. '[v' → logprob: -16.375041961669922
    9. '       ' → logprob: -16.750041961669922
    10. 'left' → logprob: -16.875041961669922

Token 315: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.00672211404889822
    2. '!=' → logprob: -5.0067219734191895
    3. '   ' → logprob: -12.756722450256348
    4. '!=-' → logprob: -13.131722450256348
    5. ' ' → logprob: -13.381722450256348
    6. ' ' → logprob: -16.13172149658203
    7. '  ' → logprob: -16.63172149658203
    8. ')!=' → logprob: -16.75672149658203
    9. '	' → logprob: -17.25672149658203
    10. '    ' → logprob: -17.75672149658203

Token 316: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. 'not' → logprob: -19.250911712646484
    4. ' ' → logprob: -19.625911712646484
    5. ' not' → logprob: -20.125911712646484
    6. '```' → logprob: -20.500911712646484
    7. '-not' → logprob: -20.625911712646484
    8. '   ' → logprob: -20.750911712646484
    9. '1' → logprob: -21.500911712646484
    10. '!=-' → logprob: -22.125911712646484

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043817906407639384
    2. '-' → logprob: -7.750438213348389
    3. ' ' → logprob: -12.25043773651123
    4. ' -' → logprob: -13.00043773651123
    5. '   ' → logprob: -15.50043773651123
    6. '```' → logprob: -16.250438690185547
    7. '=' → logprob: -17.750438690185547
    8. '  ' → logprob: -17.937938690185547
    9. ''' → logprob: -18.562938690185547
    10. '
' → logprob: -18.750438690185547

Token 318: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043539050966501236
    2. ':
' → logprob: -3.418539047241211
    3. ':' → logprob: -4.668539047241211
    4. '   ' → logprob: -7.918539047241211
    5. 'in' → logprob: -10.543539047241211
    6. ' in' → logprob: -10.543539047241211
    7. '):
' → logprob: -10.543539047241211
    8. '      ' → logprob: -12.168539047241211
    9. '```' → logprob: -13.668539047241211
    10. '):' → logprob: -13.793539047241211

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003221921855583787
    2. 'in' → logprob: -5.7532219886779785
    3. '   ' → logprob: -10.62822151184082
    4. ' in' → logprob: -10.87822151184082
    5. '      ' → logprob: -14.87822151184082
    6. '           ' → logprob: -15.25322151184082
    7. '     ' → logprob: -15.25322151184082
    8. '	in' → logprob: -15.37822151184082
    9. '    ' → logprob: -16.75322151184082
    10. '        ' → logprob: -17.87822151184082

Token 320: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.004081247374415398
    2. ' in' → logprob: -5.5040812492370605
    3. '   ' → logprob: -13.254080772399902
    4. '       ' → logprob: -14.504080772399902
    5. '	in' → logprob: -15.004080772399902
    6. ' ' → logprob: -17.12908172607422
    7. '  ' → logprob: -17.62908172607422
    8. '    ' → logprob: -17.75408172607422
    9. '[in' → logprob: -18.00408172607422
    10. '           ' → logprob: -18.37908172607422

Token 321: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.00012368128227535635
    2. 'parse' → logprob: -9.000123977661133
    3. 'in' → logprob: -16.125123977661133
    4. 'Parse' → logprob: -16.375123977661133
    5. '_' → logprob: -16.875123977661133
    6. '_PARSE' → logprob: -18.750123977661133
    7. '_print' → logprob: -19.875123977661133
    8. ' parse' → logprob: -20.125123977661133
    9. 'par' → logprob: -20.500123977661133
    10. '.parse' → logprob: -20.750123977661133

Token 322: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -14.500000953674316
    3. '[node' → logprob: -17.5
    4. '(' → logprob: -19.375
    5. ' node' → logprob: -21.0
    6. ' (' → logprob: -21.25
    7. '(
' → logprob: -22.375
    8. '=node' → logprob: -22.625
    9. '	node' → logprob: -22.875
    10. ',node' → logprob: -23.625

Token 323: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015752100152894855
    2. '[node' → logprob: -6.876574993133545
    3. 'list' → logprob: -8.126575469970703
    4. '[right' → logprob: -8.501575469970703
    5. 'right' → logprob: -11.001575469970703
    6. '[left' → logprob: -11.501575469970703
    7. 'List' → logprob: -11.626575469970703
    8. '[v' → logprob: -13.251575469970703
    9. 'node' → logprob: -13.376575469970703
    10. '[root' → logprob: -13.751575469970703

Token 324: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.004099058452993631
    2. '[node' → logprob: -5.504098892211914
    3. '[root' → logprob: -11.004098892211914
    4. '[left' → logprob: -13.379098892211914
    5. 'right' → logprob: -13.629098892211914
    6. '[
' → logprob: -14.629098892211914
    7. '[' → logprob: -15.129098892211914
    8. 'node' → logprob: -16.254098892211914
    9. '[row' → logprob: -16.379098892211914
    10. '
' → logprob: -17.629098892211914

Token 325: '_child' (ID: 40474)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.72874516248703
    2. '[right' → logprob: -0.72874516248703
    3. '_child' → logprob: -4.353744983673096
    4. 'child' → logprob: -4.478744983673096
    5. '_right' → logprob: -4.603744983673096
    6. '_list' → logprob: -8.228745460510254
    7. '(right' → logprob: -9.478745460510254
    8. 'idx' → logprob: -9.603745460510254
    9. '	right' → logprob: -9.853745460510254
    10. '   ' → logprob: -10.103745460510254

Token 326: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04047946631908417
    2. '[right' → logprob: -3.7904794216156006
    3. 'right' → logprob: -4.16547966003418
    4. 'idx' → logprob: -7.04047966003418
    5. '_right' → logprob: -7.79047966003418
    6. ')' → logprob: -9.29047966003418
    7. ']' → logprob: -10.16547966003418
    8. 'child' → logprob: -10.54047966003418
    9. 'Idx' → logprob: -10.91547966003418
    10. '.right' → logprob: -11.16547966003418

Token 327: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16200236976146698
    2. '])' → logprob: -1.9120023250579834
    3. ')]' → logprob: -7.1620025634765625
    4. '[node' → logprob: -7.4120025634765625
    5. ')])' → logprob: -8.662002563476562
    6. ')
' → logprob: -8.787002563476562
    7. ']' → logprob: -10.787002563476562
    8. '])
' → logprob: -11.162002563476562
    9. '   ' → logprob: -11.787002563476562
    10. '[' → logprob: -12.162002563476562

Token 328: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.703443770878948e-06
    2. '
' → logprob: -12.625007629394531
    3. 'return' → logprob: -12.625007629394531
    4. '<|end|>' → logprob: -14.875007629394531
    5. '   ' → logprob: -15.000007629394531
    6. ' def' → logprob: -15.250007629394531
    7. '    
' → logprob: -16.00000762939453
    8. '```' → logprob: -17.12500762939453
    9. '  
' → logprob: -17.75000762939453
    10. ' 
' → logprob: -18.75000762939453

Token 329: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003981754649430513
    2. 'def' → logprob: -6.003981590270996
    3. '   ' → logprob: -6.753981590270996
    4. ' return' → logprob: -8.128981590270996
    5. '
' → logprob: -10.503981590270996
    6. '	return' → logprob: -11.753981590270996
    7. '<|end|>' → logprob: -12.128981590270996
    8. ')return' → logprob: -13.628981590270996
    9. '    
' → logprob: -14.003981590270996
    10. ':return' → logprob: -14.878981590270996

Token 330: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007531032431870699
    2. ' v' → logprob: -5.00753116607666
    3. 'None' → logprob: -7.25753116607666
    4. ' None' → logprob: -9.25753116607666
    5. ' ' → logprob: -12.00753116607666
    6. '0' → logprob: -12.75753116607666
    7. 'def' → logprob: -13.25753116607666
    8. 'void' → logprob: -14.38253116607666
    9. '```' → logprob: -14.38253116607666
    10. '	v' → logprob: -14.50753116607666

Token 331: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.014195004478096962
    2. 'index' → logprob: -4.264194965362549
    3. 'def' → logprob: -11.264195442199707
    4. ' index' → logprob: -11.639195442199707
    5. '.' → logprob: -11.889195442199707
    6. '_index' → logprob: -14.264195442199707
    7. 'Index' → logprob: -14.889195442199707
    8. '
' → logprob: -14.889195442199707
    9. '.
' → logprob: -15.014195442199707
    10. '.idx' → logprob: -15.389195442199707

Token 332: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.967624019831419e-05
    2. '
' → logprob: -9.875060081481934
    3. '<|end|>' → logprob: -11.875060081481934
    4. '```' → logprob: -14.750060081481934
    5. '    
' → logprob: -15.250060081481934
    6. '  
' → logprob: -15.375060081481934
    7. ' def' → logprob: -16.125059127807617
    8. '#' → logprob: -16.875059127807617
    9. ' 
' → logprob: -17.500059127807617
    10. '

' → logprob: -17.750059127807617

Token 333: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.000000953674316
    3. ' def' → logprob: -18.5
    4. '    
' → logprob: -19.0
    5. '  
' → logprob: -19.375
    6. '```' → logprob: -20.125
    7. '#' → logprob: -21.125
    8. '        
' → logprob: -22.25
    9. '	def' → logprob: -22.375
    10. '

' → logprob: -22.625

Token 334: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -2.7610454708337784e-05
    2. ' post' → logprob: -10.500027656555176
    3. 'pos' → logprob: -19.12502670288086
    4. '_post' → logprob: -21.00002670288086
    5. 'po' → logprob: -21.12502670288086
    6. '	post' → logprob: -21.75002670288086
    7. ''post' → logprob: -21.87502670288086
    8. 'Post' → logprob: -21.87502670288086
    9. 'main' → logprob: -23.25002670288086
    10. '
' → logprob: -23.50002670288086

Token 335: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -2.2200749754119897e-06
    2. 'parse' → logprob: -13.375001907348633
    3. 'def' → logprob: -15.500001907348633
    4. '_' → logprob: -15.625001907348633
    5. '_parser' → logprob: -16.000001907348633
    6. '_Parse' → logprob: -17.375001907348633
    7. '_PARSE' → logprob: -17.625001907348633
    8. 'Parse' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. '_par' → logprob: -18.500001907348633

Token 336: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. ' (' → logprob: -16.250011444091797
    4. 'def' → logprob: -17.625011444091797
    5. '(node' → logprob: -18.000011444091797
    6. '(root' → logprob: -18.000011444091797
    7. '(
' → logprob: -19.125011444091797
    8. '(V' → logprob: -19.375011444091797
    9. '   ' → logprob: -20.625011444091797
    10. '[v' → logprob: -20.750011444091797

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029780801385641098
    2. '):
' → logprob: -3.529780864715576
    3. ':' → logprob: -11.029780387878418
    4. '):
' → logprob: -11.779780387878418
    5. ')' → logprob: -12.779780387878418
    6. '   ' → logprob: -12.904780387878418
    7. ' ):' → logprob: -14.404780387878418
    8. '):

' → logprob: -14.779780387878418
    9. '}:' → logprob: -16.654781341552734
    10. ' ' → logprob: -17.404781341552734

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016510180430486798
    2. 'left' → logprob: -6.751650810241699
    3. 'right' → logprob: -8.3766508102417
    4. ' left' → logprob: -8.5016508102417
    5. ' right' → logprob: -10.1266508102417
    6. '	left' → logprob: -12.7516508102417
    7. 'def' → logprob: -12.7516508102417
    8. '	right' → logprob: -13.7516508102417
    9. 'print' → logprob: -14.7516508102417
    10. '```' → logprob: -17.001651763916016

Token 339: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -9.913265239447355e-05
    2. ' left' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.750099182128906
    4. '	left' → logprob: -16.000099182128906
    5. '.left' → logprob: -18.750099182128906
    6. '左' → logprob: -19.500099182128906
    7. '[left' → logprob: -19.500099182128906
    8. ' ' → logprob: -20.375099182128906
    9. '_left' → logprob: -21.250099182128906
    10. '(left' → logprob: -21.250099182128906

Token 340: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -2.129266067640856e-05
    2. '_children' → logprob: -11.125020980834961
    3. 'child' → logprob: -12.250020980834961
    4. '_CHILD' → logprob: -14.500020980834961
    5. 'Child' → logprob: -14.875020980834961
    6. 'def' → logprob: -15.125020980834961
    7. '   ' → logprob: -15.875020980834961
    8. '	child' → logprob: -16.25002098083496
    9. '_token' → logprob: -16.62502098083496
    10. '_left' → logprob: -16.75002098083496

Token 341: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.8351892473874614e-05
    2. 'idx' → logprob: -10.000048637390137
    3. '=' → logprob: -13.500048637390137
    4. ' =' → logprob: -14.625048637390137
    5. '   ' → logprob: -15.500048637390137
    6. '=_' → logprob: -15.750048637390137
    7. 'v' → logprob: -16.00004768371582
    8. 'Idx' → logprob: -16.12504768371582
    9. '_index' → logprob: -16.12504768371582
    10. 'index' → logprob: -16.25004768371582

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687169551849365
    2. ' =' → logprob: -1.1368716955184937
    3. '=v' → logprob: -14.386871337890625
    4. '   ' → logprob: -16.636871337890625
    5. ' ' → logprob: -18.136871337890625
    6. '=
' → logprob: -19.761871337890625
    7. '＝' → logprob: -19.886871337890625
    8. 'v' → logprob: -20.261871337890625
    9. ' =
' → logprob: -20.886871337890625
    10. ',' → logprob: -21.261871337890625

Token 343: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029750952497124672
    2. ' v' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.02975082397461
    4. '	v' → logprob: -16.15475082397461
    5. '(v' → logprob: -18.02975082397461
    6. ' ' → logprob: -18.90475082397461
    7. '[v' → logprob: -19.02975082397461
    8. '$v' → logprob: -19.40475082397461
    9. '_v' → logprob: -19.65475082397461
    10. 'def' → logprob: -20.15475082397461

Token 344: '.children' (ID: 26331)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.063487209379673
    2. '.children' → logprob: -2.8134872913360596
    3. ' v' → logprob: -6.5634870529174805
    4. 'children' → logprob: -9.81348705291748
    5. '.v' → logprob: -9.93848705291748
    6. '   ' → logprob: -12.93848705291748
    7. ' children' → logprob: -13.81348705291748
    8. '[v' → logprob: -15.06348705291748
    9. ' ' → logprob: -15.18848705291748
    10. ' .' → logprob: -15.81348705291748

Token 345: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. 'def' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.375004768371582
    4. '0' → logprob: -14.250004768371582
    5. '=' → logprob: -14.750004768371582
    6. ' [' → logprob: -15.875004768371582
    7. '#' → logprob: -17.500003814697266
    8. ' =' → logprob: -17.625003814697266
    9. '```' → logprob: -17.875003814697266
    10. 's' → logprob: -18.000003814697266

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05520733445882797
    2. '[' → logprob: -2.9302072525024414
    3. ' ' → logprob: -8.055207252502441
    4. 'v' → logprob: -12.680207252502441
    5. '   ' → logprob: -12.680207252502441
    6. ' [' → logprob: -14.180207252502441
    7. 'def' → logprob: -15.680207252502441
    8. '[v' → logprob: -16.180208206176758
    9. ' v' → logprob: -16.430208206176758
    10. '  ' → logprob: -16.930208206176758

Token 347: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15119627118110657
    2. ']
' → logprob: -2.026196241378784
    3. '   ' → logprob: -4.776196479797363
    4. ' ]' → logprob: -10.901196479797363
    5. '
' → logprob: -11.526196479797363
    6. ']
' → logprob: -11.901196479797363
    7. 'def' → logprob: -12.276196479797363
    8. ']

' → logprob: -12.526196479797363
    9. ' ]
' → logprob: -13.151196479797363
    10. '  ' → logprob: -13.151196479797363

Token 348: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3133802115917206
    2. '   ' → logprob: -1.313380241394043
    3. ' right' → logprob: -9.188380241394043
    4. 'if' → logprob: -11.563380241394043
    5. '	right' → logprob: -12.563380241394043
    6. '
' → logprob: -13.063380241394043
    7. ',right' → logprob: -14.938380241394043
    8. '```' → logprob: -15.313380241394043
    9. '    
' → logprob: -15.438380241394043
    10. '.right' → logprob: -16.313379287719727

Token 349: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0044136205688118935
    2. '   ' → logprob: -5.504413604736328
    3. ' right' → logprob: -8.004413604736328
    4. 'v' → logprob: -14.129413604736328
    5. '	right' → logprob: -15.504413604736328
    6. 'if' → logprob: -16.004413604736328
    7. ' ' → logprob: -17.629413604736328
    8. '[right' → logprob: -17.629413604736328
    9. ',right' → logprob: -18.129413604736328
    10. ' v' → logprob: -18.129413604736328

Token 350: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -7.684157026233152e-05
    2. '   ' → logprob: -9.875077247619629
    3. '_children' → logprob: -11.000077247619629
    4. 'child' → logprob: -12.000077247619629
    5. '_CHILD' → logprob: -13.875077247619629
    6. 'Child' → logprob: -14.000077247619629
    7. '	child' → logprob: -15.500077247619629
    8. '```' → logprob: -16.000076293945312
    9. '_char' → logprob: -17.125076293945312
    10. '[' → logprob: -17.250076293945312

Token 351: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00023917861108202487
    2. 'idx' → logprob: -8.375239372253418
    3. 'v' → logprob: -12.625239372253418
    4. 'Idx' → logprob: -13.250239372253418
    5. '=' → logprob: -13.875239372253418
    6. '   ' → logprob: -14.000239372253418
    7. '[' → logprob: -14.750239372253418
    8. '_idxs' → logprob: -15.000239372253418
    9. '[idx' → logprob: -15.500239372253418
    10. '[v' → logprob: -15.500239372253418

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868873119354248
    2. '=' → logprob: -1.1368873119354248
    3. '   ' → logprob: -11.386887550354004
    4. '=v' → logprob: -12.261887550354004
    5. ' ' → logprob: -15.511887550354004
    6. 'v' → logprob: -17.511886596679688
    7. '  ' → logprob: -17.761886596679688
    8. ' v' → logprob: -17.761886596679688
    9. '    ' → logprob: -18.136886596679688
    10. ':' → logprob: -18.136886596679688

Token 353: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002475777640938759
    2. ' v' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.75247573852539
    4. 'node' → logprob: -17.87747573852539
    5. '	v' → logprob: -18.25247573852539
    6. ' ' → logprob: -19.62747573852539
    7. '$v' → logprob: -20.00247573852539
    8. ' node' → logprob: -20.00247573852539
    9. '[v' → logprob: -20.12747573852539
    10. '(v' → logprob: -20.25247573852539

Token 354: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.0005433809128589928
    2. 'children' → logprob: -7.625543594360352
    3. '[' → logprob: -10.250543594360352
    4. '[v' → logprob: -11.250543594360352
    5. ' .' → logprob: -13.000543594360352
    6. '   ' → logprob: -13.750543594360352
    7. 'v' → logprob: -13.750543594360352
    8. '	children' → logprob: -14.250543594360352
    9. '(children' → logprob: -15.125543594360352
    10. '```' → logprob: -15.250543594360352

Token 355: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.463036435074173e-05
    2. '   ' → logprob: -11.250024795532227
    3. '=' → logprob: -12.625024795532227
    4. ']' → logprob: -13.250024795532227
    5. 'if' → logprob: -13.625024795532227
    6. ' [' → logprob: -14.000024795532227
    7. '[v' → logprob: -14.375024795532227
    8. '```' → logprob: -14.375024795532227
    9. '0' → logprob: -14.500024795532227
    10. '][' → logprob: -14.750024795532227

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006707399734295905
    2. '[' → logprob: -7.375670909881592
    3. 'v' → logprob: -10.750670433044434
    4. '0' → logprob: -11.500670433044434
    5. ' ' → logprob: -11.750670433044434
    6. '[v' → logprob: -13.250670433044434
    7. '   ' → logprob: -13.500670433044434
    8. ']' → logprob: -15.250670433044434
    9. '-' → logprob: -15.375670433044434
    10. '
' → logprob: -15.750670433044434

Token 357: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03135475888848305
    2. '   ' → logprob: -3.7813546657562256
    3. ']
' → logprob: -5.031354904174805
    4. ']

' → logprob: -6.656354904174805
    5. ')' → logprob: -8.656354904174805
    6. ' ]' → logprob: -11.031354904174805
    7. ']
' → logprob: -11.281354904174805
    8. '<|end|>' → logprob: -11.281354904174805
    9. 'if' → logprob: -11.531354904174805
    10. '  ' → logprob: -11.906354904174805

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25786980986595154
    2. 'if' → logprob: -1.507869839668274
    3. '
' → logprob: -5.507869720458984
    4. 'def' → logprob: -6.632869720458984
    5. ' if' → logprob: -7.757869720458984
    6. '    
' → logprob: -9.507869720458984
    7. '```' → logprob: -10.257869720458984
    8. '  
' → logprob: -11.632869720458984
    9. '  ' → logprob: -13.507869720458984
    10. ' ' → logprob: -13.882869720458984

Token 359: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.9292415749514475e-05
    2. '   ' → logprob: -10.250039100646973
    3. ' if' → logprob: -12.500039100646973
    4. '
' → logprob: -16.75004005432129
    5. 'def' → logprob: -17.12504005432129
    6. '    
' → logprob: -18.75004005432129
    7. '```' → logprob: -19.25004005432129
    8. '	if' → logprob: -19.37504005432129
    9. 'for' → logprob: -21.50004005432129
    10. '  ' → logprob: -22.00004005432129

Token 360: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.048589304089546204
    2. ' left' → logprob: -3.0485892295837402
    3. '   ' → logprob: -14.173589706420898
    4. '(left' → logprob: -14.798589706420898
    5. '	left' → logprob: -14.923589706420898
    6. '[left' → logprob: -15.298589706420898
    7. ' ' → logprob: -15.423589706420898
    8. 'right' → logprob: -16.6735897064209
    9. '.left' → logprob: -17.4235897064209
    10. '左' → logprob: -18.1735897064209

Token 361: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -7.941850526549388e-06
    2. 'child' → logprob: -12.000007629394531
    3. '_children' → logprob: -14.125007629394531
    4. '_left' → logprob: -14.125007629394531
    5. '   ' → logprob: -16.12500762939453
    6. 'Child' → logprob: -16.50000762939453
    7. 'left' → logprob: -16.75000762939453
    8. '_CHILD' → logprob: -17.25000762939453
    9. '```' → logprob: -17.37500762939453
    10. 'def' → logprob: -17.75000762939453

Token 362: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.000558512459974736
    2. 'idx' → logprob: -7.500558376312256
    3. '!=' → logprob: -13.500558853149414
    4. '   ' → logprob: -13.750558853149414
    5. 'if' → logprob: -14.500558853149414
    6. 'left' → logprob: -14.625558853149414
    7. 'Idx' → logprob: -14.875558853149414
    8. '```' → logprob: -15.250558853149414
    9. '       ' → logprob: -15.500558853149414
    10. ' !=' → logprob: -16.000558853149414

Token 363: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.033824462443590164
    2. '!=' → logprob: -3.4088244438171387
    3. '!=-' → logprob: -8.658824920654297
    4. '   ' → logprob: -13.658824920654297
    5. ' ' → logprob: -14.283824920654297
    6. ' ' → logprob: -14.658824920654297
    7. 'import' → logprob: -14.783824920654297
    8. ')!=' → logprob: -14.783824920654297
    9. '!='' → logprob: -14.908824920654297
    10. '!="' → logprob: -15.033824920654297

Token 364: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '-node' → logprob: -20.12502098083496
    4. '-not' → logprob: -20.25002098083496
    5. 'not' → logprob: -20.37502098083496
    6. '```' → logprob: -21.00002098083496
    7. '   ' → logprob: -22.00002098083496
    8. ' ' → logprob: -22.50002098083496
    9. '-post' → logprob: -22.62502098083496
    10. '-ex' → logprob: -22.75002098083496

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.829823102336377e-05
    2. '-' → logprob: -9.62509822845459
    3. ' ' → logprob: -10.50009822845459
    4. '```' → logprob: -13.25009822845459
    5. ' -' → logprob: -13.37509822845459
    6. '   ' → logprob: -15.56259822845459
    7. '<|end|>' → logprob: -15.62509822845459
    8. '
' → logprob: -16.312599182128906
    9. '...' → logprob: -16.375099182128906
    10. '`' → logprob: -16.500099182128906

Token 366: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5574543476104736
    2. ':' → logprob: -1.3074543476104736
    3. ':
' → logprob: -2.4324543476104736
    4. '   ' → logprob: -2.6824543476104736
    5. '):
' → logprob: -7.9324541091918945
    6. '):' → logprob: -8.807454109191895
    7. '  ' → logprob: -10.432454109191895
    8. ' ' → logprob: -11.182454109191895
    9. ')' → logprob: -11.182454109191895
    10. '      ' → logprob: -11.557454109191895

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04909107834100723
    2. 'post' → logprob: -3.049091100692749
    3. ' post' → logprob: -8.174091339111328
    4. '   ' → logprob: -8.424091339111328
    5. '	post' → logprob: -13.799091339111328
    6. '           ' → logprob: -15.174091339111328
    7. '     ' → logprob: -15.424091339111328
    8. '      ' → logprob: -16.174091339111328
    9. ''post' → logprob: -16.174091339111328
    10. '(post' → logprob: -16.674091339111328

Token 368: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' (adapté à ' post') → logprob: -0.0002036595979006961
    2. ' post' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '	post' → logprob: -17.87520408630371
    5. '       ' → logprob: -19.50020408630371
    6. 'pre' → logprob: -20.00020408630371
    7. ''post' → logprob: -22.12520408630371
    8. '(post' → logprob: -22.37520408630371
    9. ' ' → logprob: -22.50020408630371
    10. '  ' → logprob: -23.62520408630371

Token 369: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -5.9153885558771435e-06
    2. 'parse' → logprob: -12.125005722045898
    3. 'Parse' → logprob: -15.125005722045898
    4. '_Parse' → logprob: -16.2500057220459
    5. '_PARSE' → logprob: -17.0000057220459
    6. '_parser' → logprob: -17.3750057220459
    7. '```' → logprob: -17.7500057220459
    8. '_' → logprob: -18.0000057220459
    9. '(Parse' → logprob: -19.6250057220459
    10. '_par' → logprob: -20.1250057220459

Token 370: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00043257648940198123
    2. 'node' → logprob: -7.75043249130249
    3. '[node' → logprob: -13.375432968139648
    4. ' node' → logprob: -15.875432968139648
    5. '=node' → logprob: -16.62543296813965
    6. '(
' → logprob: -18.50043296813965
    7. ',node' → logprob: -18.87543296813965
    8. '	node' → logprob: -18.87543296813965
    9. ')' → logprob: -19.25043296813965
    10. '```' → logprob: -19.75043296813965

Token 371: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003473198041319847
    2. 'list' → logprob: -6.378473281860352
    3. '[node' → logprob: -6.378473281860352
    4. '[left' → logprob: -9.878473281860352
    5. 'List' → logprob: -11.753473281860352
    6. '[v' → logprob: -12.503473281860352
    7. 'node' → logprob: -12.878473281860352
    8. 'left' → logprob: -13.128473281860352
    9. '[right' → logprob: -13.128473281860352
    10. '[' → logprob: -14.003473281860352

Token 372: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -2.7968066206085496e-05
    2. 'left' → logprob: -10.500027656555176
    3. '[right' → logprob: -15.375027656555176
    4. '[' → logprob: -16.250028610229492
    5. '[node' → logprob: -18.250028610229492
    6. '[parent' → logprob: -19.125028610229492
    7. '(left' → logprob: -19.500028610229492
    8. '[root' → logprob: -20.625028610229492
    9. '[
' → logprob: -20.750028610229492
    10. ' left' → logprob: -20.750028610229492

Token 373: '_child' (ID: 40474)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.013105755671858788
    2. '[left' → logprob: -4.888105869293213
    3. 'right' → logprob: -5.388105869293213
    4. 'child' → logprob: -7.138105869293213
    5. '[right' → logprob: -9.388105392456055
    6. '_child' → logprob: -10.638105392456055
    7. '(left' → logprob: -12.638105392456055
    8. '	left' → logprob: -12.888105392456055
    9. '_left' → logprob: -13.513105392456055
    10. '[' → logprob: -14.013105392456055

Token 374: '_idx' (ID: 15257)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5015085339546204
    2. 'left' → logprob: -1.2515084743499756
    3. '_idx' → logprob: -3.0015084743499756
    4. '[right' → logprob: -3.7515084743499756
    5. '[left' → logprob: -3.8765084743499756
    6. 'idx' → logprob: -4.876508712768555
    7. 'child' → logprob: -5.126508712768555
    8. 'ight' → logprob: -8.626508712768555
    9. 'index' → logprob: -8.876508712768555
    10. '(right' → logprob: -9.876508712768555

Token 375: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006421420839615166
    2. ')

' → logprob: -7.5006422996521
    3. '   ' → logprob: -9.375641822814941
    4. ')
' → logprob: -12.375641822814941
    5. ']' → logprob: -17.250642776489258
    6. ')

' → logprob: -17.250642776489258
    7. ')


' → logprob: -17.875642776489258
    8. ')`' → logprob: -18.125642776489258
    9. '       ' → logprob: -18.250642776489258
    10. ' )' → logprob: -18.375642776489258

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051753293722867966
    2. '
' → logprob: -3.051753282546997
    3. 'if' → logprob: -5.801753520965576
    4. '    
' → logprob: -9.801753044128418
    5. ' if' → logprob: -9.801753044128418
    6. '```' → logprob: -10.676753044128418
    7. '  
' → logprob: -13.551753044128418
    8. '
' → logprob: -13.801753044128418
    9. ' 
' → logprob: -14.176753044128418
    10. '        
' → logprob: -14.926753044128418

Token 377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018221933394670486
    2. '   ' → logprob: -4.018221855163574
    3. ' if' → logprob: -9.768221855163574
    4. '
' → logprob: -11.143221855163574
    5. '    
' → logprob: -16.14322280883789
    6. 'If' → logprob: -16.26822280883789
    7. '	if' → logprob: -17.01822280883789
    8. '  ' → logprob: -17.51822280883789
    9. '```' → logprob: -17.76822280883789
    10. ' ' → logprob: -18.14322280883789

Token 378: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.25193020701408386
    2. ' right' → logprob: -1.5019302368164062
    3. '(right' → logprob: -14.001930236816406
    4. '	right' → logprob: -15.751930236816406
    5. '[right' → logprob: -16.001930236816406
    6. ' ' → logprob: -17.626930236816406
    7. '   ' → logprob: -17.876930236816406
    8. 'Right' → logprob: -18.126930236816406
    9. '.right' → logprob: -18.876930236816406
    10. '右' → logprob: -19.501930236816406

Token 379: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00023798657639417797
    2. 'child' → logprob: -8.375238418579102
    3. '   ' → logprob: -12.875238418579102
    4. 'Child' → logprob: -13.000238418579102
    5. '_children' → logprob: -14.250238418579102
    6. '_CHILD' → logprob: -15.000238418579102
    7. '.child' → logprob: -15.125238418579102
    8. ' ' → logprob: -15.500238418579102
    9. ' child' → logprob: -15.625238418579102
    10. '_parse' → logprob: -15.750238418579102

Token 380: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.491498531133402e-06
    2. 'right' → logprob: -12.500009536743164
    3. 'idx' → logprob: -12.500009536743164
    4. 'child' → logprob: -13.875009536743164
    5. '_right' → logprob: -14.750009536743164
    6. '_child' → logprob: -15.500009536743164
    7. '[right' → logprob: -16.250009536743164
    8. '[' → logprob: -16.375009536743164
    9. 'Idx' → logprob: -16.500009536743164
    10. '```' → logprob: -16.750009536743164

Token 381: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.001565449871122837
    2. '!=' → logprob: -6.501565456390381
    3. '!=-' → logprob: -9.751564979553223
    4. '   ' → logprob: -12.751564979553223
    5. ' ' → logprob: -14.001564979553223
    6. ' ' → logprob: -14.001564979553223
    7. '       ' → logprob: -16.12656593322754
    8. '  ' → logprob: -16.37656593322754
    9. ')!=' → logprob: -17.00156593322754
    10. '    ' → logprob: -17.00156593322754

Token 382: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001584850688232109
    2. ' -' → logprob: -8.750158309936523
    3. ' not' → logprob: -19.375158309936523
    4. ' ' → logprob: -19.375158309936523
    5. 'not' → logprob: -19.500158309936523
    6. '   ' → logprob: -20.125158309936523
    7. '```' → logprob: -20.500158309936523
    8. '-post' → logprob: -20.625158309936523
    9. '-not' → logprob: -21.000158309936523
    10. '  ' → logprob: -21.750158309936523

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019245444855187088
    2. '-' → logprob: -8.625192642211914
    3. ' ' → logprob: -11.500192642211914
    4. ' -' → logprob: -13.750192642211914
    5. '```' → logprob: -13.875192642211914
    6. '   ' → logprob: -15.125192642211914
    7. '<|end|>' → logprob: -16.250192642211914
    8. '...' → logprob: -17.062692642211914
    9. '  ' → logprob: -17.312692642211914
    10. '#' → logprob: -17.500192642211914

Token 384: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021209961269050837
    2. 'post' → logprob: -6.5021209716796875
    3. ' post' → logprob: -8.127120971679688
    4. ':
' → logprob: -8.752120971679688
    5. ':' → logprob: -9.127120971679688
    6. '   ' → logprob: -10.002120971679688
    7. '(post' → logprob: -12.377120971679688
    8. '):
' → logprob: -13.127120971679688
    9. '	post' → logprob: -13.252120971679688
    10. '      ' → logprob: -13.502120971679688

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01837972365319729
    2. 'post' → logprob: -4.0183796882629395
    3. ' post' → logprob: -8.393380165100098
    4. '   ' → logprob: -12.893380165100098
    5. '	post' → logprob: -14.143380165100098
    6. '(post' → logprob: -16.14337921142578
    7. ''post' → logprob: -16.64337921142578
    8. '     ' → logprob: -17.01837921142578
    9. '      ' → logprob: -17.01837921142578
    10. '           ' → logprob: -17.14337921142578

Token 386: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' (adapté à ' post') → logprob: -0.0001584850688232109
    2. ' post' → logprob: -8.750158309936523
    3. '	post' → logprob: -20.500158309936523
    4. '   ' → logprob: -22.375158309936523
    5. '       ' → logprob: -22.875158309936523
    6. '(post' → logprob: -23.000158309936523
    7. ''post' → logprob: -23.250158309936523
    8. ' ' → logprob: -24.000158309936523
    9. ' пост' → logprob: -24.125158309936523
    10. '
' → logprob: -24.375158309936523

Token 387: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.00043138445471413434
    2. 'parse' → logprob: -7.750431537628174
    3. 'post' → logprob: -14.625431060791016
    4. 'Parse' → logprob: -15.500431060791016
    5. '_post' → logprob: -18.000431060791016
    6. '_PARSE' → logprob: -19.375431060791016
    7. '.parse' → logprob: -20.625431060791016
    8. 'par' → logprob: -20.875431060791016
    9. '```' → logprob: -20.875431060791016
    10. '(parse' → logprob: -21.000431060791016

Token 388: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.576873758807778e-05
    2. 'node' → logprob: -9.500075340270996
    3. '[node' → logprob: -14.000075340270996
    4. '=node' → logprob: -17.000076293945312
    5. ' node' → logprob: -17.750076293945312
    6. '	node' → logprob: -20.250076293945312
    7. ',node' → logprob: -20.500076293945312
    8. 'post' → logprob: -21.250076293945312
    9. '(
' → logprob: -21.375076293945312
    10. '```' → logprob: -21.375076293945312

Token 389: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0006915858830325305
    2. 'list' → logprob: -7.8756914138793945
    3. '[node' → logprob: -8.125691413879395
    4. 'List' → logprob: -11.625691413879395
    5. '(node' → logprob: -12.375691413879395
    6. '-list' → logprob: -13.875691413879395
    7. '_lists' → logprob: -15.625691413879395
    8. '[idx' → logprob: -15.750691413879395
    9. 'node' → logprob: -15.750691413879395
    10. '_LIST' → logprob: -15.875691413879395

Token 390: '[right' (ID: 112866)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.008669880218803883
    2. '[right' → logprob: -4.758669853210449
    3. 'node' → logprob: -10.13366985321045
    4. '[root' → logprob: -12.00866985321045
    5. '[' → logprob: -12.13366985321045
    6. '[left' → logprob: -12.88366985321045
    7. 'right' → logprob: -15.00866985321045
    8. '[-' → logprob: -15.00866985321045
    9. '(node' → logprob: -15.13366985321045
    10. '[
' → logprob: -15.88366985321045

Token 391: '_child' (ID: 40474)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.1193978786468506
    2. '[right' → logprob: -1.4943978786468506
    3. '_list' → logprob: -1.7443978786468506
    4. 'child' → logprob: -2.2443978786468506
    5. '_child' → logprob: -2.4943978786468506
    6. '_idx' → logprob: -3.2443978786468506
    7. '_right' → logprob: -3.3693978786468506
    8. 'idx' → logprob: -5.24439811706543
    9. '[' → logprob: -5.86939811706543
    10. '_children' → logprob: -6.24439811706543

Token 392: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.020140180364251137
    2. 'idx' → logprob: -4.270140171051025
    3. 'right' → logprob: -5.645140171051025
    4. '[right' → logprob: -6.395140171051025
    5. 'child' → logprob: -7.770140171051025
    6. '_right' → logprob: -10.020140647888184
    7. 'Idx' → logprob: -10.020140647888184
    8. '   ' → logprob: -10.020140647888184
    9. '_index' → logprob: -10.395140647888184
    10. '[idx' → logprob: -10.645140647888184

Token 393: '])

' (ID: 21045)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.583550642360933e-05
    2. ')' → logprob: -10.750036239624023
    3. '(node' → logprob: -12.125036239624023
    4. ')]' → logprob: -12.250036239624023
    5. 'post' → logprob: -13.750036239624023
    6. 'node' → logprob: -13.750036239624023
    7. '[' → logprob: -14.250036239624023
    8. '[left' → logprob: -14.375036239624023
    9. '[right' → logprob: -16.000036239624023
    10. ']' → logprob: -16.125036239624023

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1611699014902115
    2. 'print' → logprob: -1.9111698865890503
    3. '
' → logprob: -7.03617000579834
    4. ' print' → logprob: -10.28617000579834
    5. '```' → logprob: -10.41117000579834
    6. '    
' → logprob: -14.16117000579834
    7. '``' → logprob: -15.03617000579834
    8. '

' → logprob: -15.91117000579834
    9. '  ' → logprob: -16.036169052124023
    10. ' ' → logprob: -16.161169052124023

Token 395: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1994775377388578e-05
    2. '   ' → logprob: -12.000012397766113
    3. '
' → logprob: -12.375012397766113
    4. ' print' → logprob: -13.500012397766113
    5. 'post' → logprob: -16.375011444091797
    6. '```' → logprob: -16.875011444091797
    7. ' ' → logprob: -18.625011444091797
    8. '    
' → logprob: -19.375011444091797
    9. '	print' → logprob: -20.125011444091797
    10. '

' → logprob: -20.125011444091797

Token 396: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '("' → logprob: -16.250001907348633
    4. ''' → logprob: -18.625001907348633
    5. '(('' → logprob: -19.375001907348633
    6. ' ('' → logprob: -19.875001907348633
    7. '(
' → logprob: -20.875001907348633
    8. '   ' → logprob: -21.500001907348633
    9. '(f' → logprob: -21.500001907348633
    10. 'f' → logprob: -21.875001907348633

Token 397: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00026729601086117327
    2. ' '' → logprob: -8.250267028808594
    3. '('' → logprob: -12.750267028808594
    4. '"' → logprob: -13.250267028808594
    5. ' ' → logprob: -14.375267028808594
    6. '''' → logprob: -14.875267028808594
    7. '`' → logprob: -15.125267028808594
    8. ''s' → logprob: -16.625267028808594
    9. '```' → logprob: -17.500267028808594
    10. '
' → logprob: -17.625267028808594

Token 398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.0126840758603066e-05
    2. ' +' → logprob: -10.250040054321289
    3. '+'' → logprob: -12.875040054321289
    4. ''' → logprob: -13.250040054321289
    5. ')' → logprob: -15.625040054321289
    6. '+
' → logprob: -16.75004005432129
    7. ''+' → logprob: -18.25004005432129
    8. 'str' → logprob: -18.37504005432129
    9. ' ' → logprob: -18.75004005432129
    10. ''s' → logprob: -18.75004005432129

Token 399: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00033546582562848926
    2. ' str' → logprob: -8.000335693359375
    3. '(str' → logprob: -18.000335693359375
    4. ''' → logprob: -19.125335693359375
    5. '	str' → logprob: -22.000335693359375
    6. 'Str' → logprob: -22.375335693359375
    7. 'stri' → logprob: -22.500335693359375
    8. ' ' → logprob: -23.000335693359375
    9. '_str' → logprob: -23.375335693359375
    10. 'string' → logprob: -23.500335693359375

Token 400: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.625000953674316
    3. 'v' → logprob: -14.750000953674316
    4. ' (' → logprob: -16.625001907348633
    5. ')v' → logprob: -19.375001907348633
    6. '(
' → logprob: -19.500001907348633
    7. '```' → logprob: -19.875001907348633
    8. ')' → logprob: -20.250001907348633
    9. '	v' → logprob: -20.625001907348633
    10. '((' → logprob: -20.625001907348633

Token 401: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -2.6060808522743173e-05
    2. 'index' → logprob: -10.875025749206543
    3. '.' → logprob: -12.500025749206543
    4. ' .' → logprob: -12.625025749206543
    5. ' index' → logprob: -17.37502670288086
    6. '#index' → logprob: -17.50002670288086
    7. '.idx' → logprob: -18.37502670288086
    8. ' ' → logprob: -18.50002670288086
    9. ').' → logprob: -18.50002670288086
    10. '_index' → logprob: -19.12502670288086

Token 402: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1756367712223437e-05
    2. ')' → logprob: -11.625011444091797
    3. '))' → logprob: -13.875011444091797
    4. '   ' → logprob: -13.875011444091797
    5. ''),' → logprob: -15.000011444091797
    6. ' ),' → logprob: -15.250011444091797
    7. 'end' → logprob: -16.250011444091797
    8. ',' → logprob: -16.375011444091797
    9. '},' → logprob: -17.125011444091797
    10. '       ' → logprob: -18.000011444091797

Token 403: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0007099286303855479
    2. ' end' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.875709533691406
    4. '(end' → logprob: -19.750709533691406
    5. '	end' → logprob: -20.125709533691406
    6. ''end' → logprob: -20.125709533691406
    7. ' ' → logprob: -21.000709533691406
    8. '[end' → logprob: -21.125709533691406
    9. '=end' → logprob: -21.125709533691406
    10. ',end' → logprob: -21.250709533691406

Token 404: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.006772919092327356
    2. '('' → logprob: -5.006772994995117
    3. '=' → logprob: -10.256772994995117
    4. ''' → logprob: -11.756772994995117
    5. '=''' → logprob: -12.131772994995117
    6. '='')
' → logprob: -12.131772994995117
    7. '=('' → logprob: -13.006772994995117
    8. ')' → logprob: -13.881772994995117
    9. '''' → logprob: -14.631772994995117
    10. '=='' → logprob: -17.381772994995117

Token 405: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006739881355315447
    2. ')' → logprob: -5.006740093231201
    3. '')
' → logprob: -11.506739616394043
    4. '')

' → logprob: -12.256739616394043
    5. ''' → logprob: -12.381739616394043
    6. '")' → logprob: -12.881739616394043
    7. '''' → logprob: -13.131739616394043
    8. '')"' → logprob: -15.131739616394043
    9. ''''' → logprob: -15.881739616394043
    10. ')
' → logprob: -16.38174057006836

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06253089010715485
    2. 'return' → logprob: -2.812530994415283
    3. '
' → logprob: -8.062530517578125
    4. ' return' → logprob: -9.062530517578125
    5. 'def' → logprob: -9.062530517578125
    6. '    
' → logprob: -11.812530517578125
    7. '  ' → logprob: -12.187530517578125
    8. '	return' → logprob: -13.437530517578125
    9. ' ' → logprob: -14.437530517578125
    10. '```' → logprob: -15.062530517578125

Token 407: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007053864188492298
    2. '   ' → logprob: -5.007053852081299
    3. ' return' → logprob: -8.007054328918457
    4. '
' → logprob: -12.382054328918457
    5. '	return' → logprob: -14.382054328918457
    6. '    
' → logprob: -15.507054328918457
    7. 'def' → logprob: -15.757054328918457
    8. '  ' → logprob: -16.38205337524414
    9. ' ' → logprob: -17.25705337524414
    10. 'eturn' → logprob: -17.75705337524414

Token 408: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -19.501171112060547
    4. '(v' → logprob: -20.501171112060547
    5. '$v' → logprob: -21.751171112060547
    6. ' ' → logprob: -22.001171112060547
    7. '[v' → logprob: -22.251171112060547
    8. ' ' → logprob: -23.001171112060547
    9. '_v' → logprob: -23.001171112060547
    10. ')v' → logprob: -23.126171112060547

Token 409: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.003249127883464098
    2. '.' → logprob: -5.878249168395996
    3. 'index' → logprob: -7.753249168395996
    4. '[index' → logprob: -12.503249168395996
    5. ' .' → logprob: -12.628249168395996
    6. ' index' → logprob: -13.753249168395996
    7. '<|end|>' → logprob: -13.753249168395996
    8. '_index' → logprob: -13.878249168395996
    9. '#index' → logprob: -14.378249168395996
    10. '	index' → logprob: -14.378249168395996

Token 410: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6957166194915771
    2. 'def' → logprob: -0.9457166194915771
    3. 'n' → logprob: -2.195716619491577
    4. 'N' → logprob: -7.070716857910156
    5. '
' → logprob: -7.320716857910156
    6. '    
' → logprob: -10.445716857910156
    7. 'num' → logprob: -10.695716857910156
    8. '#' → logprob: -11.445716857910156
    9. ' if' → logprob: -11.570716857910156
    10. '  
' → logprob: -12.570716857910156

Token 411: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026634544134140015
    2. 'def' → logprob: -4.026634693145752
    3. 'n' → logprob: -4.776634693145752
    4. 'N' → logprob: -11.276634216308594
    5. ' if' → logprob: -11.901634216308594
    6. '    
' → logprob: -13.526634216308594
    7. '#' → logprob: -13.776634216308594
    8. 'num' → logprob: -13.901634216308594
    9. '
' → logprob: -14.026634216308594
    10. 'root' → logprob: -15.776634216308594

Token 412: ' generate' (ID: 10419)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009387354948557913
    2. ' main' → logprob: -7.125938892364502
    3. 'find' → logprob: -10.125938415527344
    4. 'read' → logprob: -10.250938415527344
    5. 'root' → logprob: -10.375938415527344
    6. 'solve' → logprob: -11.625938415527344
    7. 'build' → logprob: -11.750938415527344
    8. '_main' → logprob: -12.375938415527344
    9. 'get' → logprob: -13.000938415527344
    10. 'resolve' → logprob: -13.875938415527344

Token 413: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.053590402007102966
    2. '():' → logprob: -3.6785902976989746
    3. 'tree' → logprob: -5.303590297698975
    4. '(node' → logprob: -5.428590297698975
    5. '_input' → logprob: -5.553590297698975
    6. '_nodes' → logprob: -5.678590297698975
    7. '_node' → logprob: -5.803590297698975
    8. '_binary' → logprob: -6.428590297698975
    9. '():
' → logprob: -6.553590297698975
    10. '_code' → logprob: -6.928590297698975

Token 414: '(_' (ID: 4963)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33251798152923584
    2. '():' → logprob: -1.4575179815292358
    3. '(N' → logprob: -3.7075181007385254
    4. '(num' → logprob: -4.457518100738525
    5. '(node' → logprob: -4.582518100738525
    6. '(nodes' → logprob: -5.957518100738525
    7. '(size' → logprob: -7.582518100738525
    8. '():
' → logprob: -9.207517623901367
    9. '(number' → logprob: -9.457517623901367
    10. '(input' → logprob: -9.707517623901367

Token 415: 'array' (ID: 3361)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5405118465423584
    2. '):' → logprob: -2.0405118465423584
    3. 'list' → logprob: -2.7905118465423584
    4. 'input' → logprob: -2.9155118465423584
    5. 'node' → logprob: -3.2905118465423584
    6. 'size' → logprob: -3.6655118465423584
    7. 'count' → logprob: -3.6655118465423584
    8. 'num' → logprob: -3.7905118465423584
    9. 'nodes' → logprob: -3.9155118465423584
    10. 'N' → logprob: -4.5405120849609375

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023803342133760452
    2. '):
' → logprob: -3.773803234100342
    3. ',' → logprob: -7.898803234100342
    4. ',array' → logprob: -9.7738037109375
    5. '_array' → logprob: -10.0238037109375
    6. '   ' → logprob: -11.2738037109375
    7. '(array' → logprob: -11.5238037109375
    8. '_nodes' → logprob: -11.5238037109375
    9. '):
' → logprob: -11.6488037109375
    10. '(arr' → logprob: -11.7738037109375

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01189692597836256
    2. 'global' → logprob: -4.511897087097168
    3. 'n' → logprob: -7.261897087097168
    4. ' global' → logprob: -9.511897087097168
    5. 'node' → logprob: -10.386897087097168
    6. '    
' → logprob: -11.636897087097168
    7. ':' → logprob: -11.636897087097168
    8. '	global' → logprob: -12.261897087097168
    9. 'nodes' → logprob: -12.386897087097168
    10. ' n' → logprob: -12.511897087097168

Token 418: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36132752895355225
    2. 'global' → logprob: -1.4863275289535522
    3. '   ' → logprob: -3.236327648162842
    4. 'node' → logprob: -3.611327648162842
    5. 'nodes' → logprob: -5.486327648162842
    6. ' n' → logprob: -6.236327648162842
    7. 'N' → logprob: -6.736327648162842
    8. 'size' → logprob: -7.361327648162842
    9. ' global' → logprob: -7.486327648162842
    10. 'root' → logprob: -7.486327648162842

Token 419: ' add' (ID: 1147)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13691239058971405
    2. 'node' → logprob: -3.1369123458862305
    3. '   ' → logprob: -3.3869123458862305
    4. ' n' → logprob: -3.8869123458862305
    5. 'N' → logprob: -3.8869123458862305
    6. 'global' → logprob: -5.3869123458862305
    7. 'num' → logprob: -6.3869123458862305
    8. 'nodes' → logprob: -6.8869123458862305
    9. ' node' → logprob: -7.1369123458862305
    10. ' ' → logprob: -8.01191234588623

Token 420: ' info' (ID: 5377)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3281893730163574
    2. 'node' → logprob: -1.7031893730163574
    3. '_nodes' → logprob: -2.2031893730163574
    4. 'n' → logprob: -2.3281893730163574
    5. ' node' → logprob: -2.7031893730163574
    6. 'nodes' → logprob: -3.2031893730163574
    7. ' nodes' → logprob: -3.3281893730163574
    8. '_node' → logprob: -3.7031893730163574
    9. 'for' → logprob: -3.8281893730163574
    10. 'num' → logprob: -3.9531893730163574

Token 421: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4682404398918152
    2. 'global' → logprob: -2.09324049949646
    3. '   ' → logprob: -2.46824049949646
    4. ' for' → logprob: -2.46824049949646
    5. ' =' → logprob: -3.84324049949646
    6. ' global' → logprob: -4.468240261077881
    7. 'def' → logprob: -4.593240261077881
    8. 'node' → logprob: -5.343240261077881
    9. ',' → logprob: -5.843240261077881
    10. '
' → logprob: -5.843240261077881

Token 422: ' each' (ID: 2454)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.3693174123764038
    2. '_array' → logprob: -2.1193175315856934
    3. 'parent' → logprob: -2.2443175315856934
    4. 'nodes' → logprob: -2.2443175315856934
    5. 'n' → logprob: -2.6193175315856934
    6. '_nodes' → logprob: -2.7443175315856934
    7. '_node' → logprob: -3.2443175315856934
    8. ' node' → logprob: -3.4943175315856934
    9. 'len' → logprob: -3.7443175315856934
    10. ' parent' → logprob: -3.9943175315856934

Token 423: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.08403246849775314
    2. ' node' → logprob: -2.9590325355529785
    3. '_node' → logprob: -4.0840325355529785
    4. 'index' → logprob: -5.0840325355529785
    5. 'Node' → logprob: -6.3340325355529785
    6. 'element' → logprob: -6.5840325355529785
    7. 'line' → logprob: -8.20903205871582
    8. 'idx' → logprob: -8.20903205871582
    9. ' index' → logprob: -8.33403205871582
    10. 'item' → logprob: -8.58403205871582

Token 424: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.495095819234848
    2. '   ' → logprob: -1.1200958490371704
    3. ' for' → logprob: -2.995095729827881
    4. 'node' → logprob: -4.995095729827881
    5. 'global' → logprob: -6.370095729827881
    6. 'nodes' → logprob: -6.995095729827881
    7. '[node' → logprob: -7.120095729827881
    8. 'n' → logprob: -7.370095729827881
    9. 'def' → logprob: -7.495095729827881
    10. ',' → logprob: -7.495095729827881

Token 425: ' a' (ID: 261)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.02272588014602661
    2. 'node' → logprob: -4.897726058959961
    3. 'children' → logprob: -5.897726058959961
    4. 'range' → logprob: -6.022726058959961
    5. 'array' → logprob: -6.397726058959961
    6. 'nodes' → logprob: -6.772726058959961
    7. 'len' → logprob: -7.022726058959961
    8. 'the' → logprob: -7.147726058959961
    9. 'tree' → logprob: -7.147726058959961
    10. 'def' → logprob: -7.647726058959961

Token 426: ' ordered' (ID: 17889)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.049704670906067
    2. 'll' → logprob: -1.674704670906067
    3. 'node' → logprob: -2.1747045516967773
    4. 'rray' → logprob: -2.6747045516967773
    5. 'tree' → logprob: -3.2997045516967773
    6. '_node' → logprob: -3.4247045516967773
    7. 'Node' → logprob: -3.5497045516967773
    8. 'for' → logprob: -3.7997045516967773
    9. 'def' → logprob: -3.7997045516967773
    10. 'n' → logprob: -4.049704551696777

Token 427: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.7516963481903076
    2. 'array' → logprob: -1.8766963481903076
    3. '_nodes' → logprob: -2.1266963481903076
    4. '_array' → logprob: -2.8766963481903076
    5. 'node' → logprob: -3.0016963481903076
    6. '_tree' → logprob: -3.2516963481903076
    7. 'list' → logprob: -3.7516963481903076
    8. '_node' → logprob: -4.126696586608887
    9. 'for' → logprob: -4.251696586608887
    10. 'nodes' → logprob: -4.251696586608887

Token 428: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06973867118358612
    2. 'node' → logprob: -3.1947386264801025
    3. 'nodes' → logprob: -5.069738864898682
    4. 'for' → logprob: -5.694738864898682
    5. 'global' → logprob: -5.819738864898682
    6. 'n' → logprob: -5.819738864898682
    7. 'def' → logprob: -6.069738864898682
    8. ' for' → logprob: -6.444738864898682
    9. '
' → logprob: -6.569738864898682
    10. ' node' → logprob: -6.944738864898682

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023482587188482285
    2. 'n' → logprob: -4.523482799530029
    3. 'node' → logprob: -5.398482799530029
    4. 'for' → logprob: -5.898482799530029
    5. 'nodes' → logprob: -6.023482799530029
    6. 'global' → logprob: -6.273482799530029
    7. ' for' → logprob: -8.523482322692871
    8. ' n' → logprob: -8.523482322692871
    9. 'num' → logprob: -9.273482322692871
    10. 'size' → logprob: -10.273482322692871

Token 430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5440191626548767
    2. 'n' → logprob: -1.2940192222595215
    3. 'global' → logprob: -2.7940192222595215
    4. '   ' → logprob: -3.0440192222595215
    5. 'node' → logprob: -3.7940192222595215
    6. ' for' → logprob: -5.4190192222595215
    7. ' n' → logprob: -5.4190192222595215
    8. 'N' → logprob: -6.0440192222595215
    9. 'nodes' → logprob: -6.9190192222595215
    10. ' global' → logprob: -7.5440192222595215

Token 431: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012544380500912666
    2. ' i' → logprob: -5.13754415512085
    3. 'idx' → logprob: -5.63754415512085
    4. 'index' → logprob: -7.01254415512085
    5. '_i' → logprob: -7.38754415512085
    6. '(i' → logprob: -8.012544631958008
    7. '_' → logprob: -9.012544631958008
    8. 'node' → logprob: -9.012544631958008
    9. ' idx' → logprob: -9.137544631958008
    10. 'v' → logprob: -9.137544631958008

Token 432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35129421949386597
    2. '_idx' → logprob: -2.8512942790985107
    3. '_index' → logprob: -3.2262942790985107
    4. 'i' → logprob: -3.2262942790985107
    5. 'idx' → logprob: -3.9762942790985107
    6. '_node' → logprob: -3.9762942790985107
    7. 'in' → logprob: -3.9762942790985107
    8. ' i' → logprob: -4.101294040679932
    9. 'node' → logprob: -4.351294040679932
    10. '_i' → logprob: -4.726294040679932

Token 433: ' _' (ID: 1175)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0001855406299000606
    2. 'range' → logprob: -8.7501859664917
    3. ' _' → logprob: -12.0001859664917
    4. ' range' → logprob: -12.0001859664917
    5. '_range' → logprob: -12.2501859664917
    6. 'array' → logprob: -12.3751859664917
    7. '_node' → logprob: -13.5001859664917
    8. '   ' → logprob: -13.5001859664917
    9. ' ' → logprob: -13.8751859664917
    10. 'enumer' → logprob: -14.2501859664917

Token 434: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.00317783304490149
    2. '_array' → logprob: -5.753177642822266
    3. 'Array' → logprob: -16.878177642822266
    4. ' array' → logprob: -17.253177642822266
    5. 'index' → logprob: -17.753177642822266
    6. 'rray' → logprob: -17.878177642822266
    7. '$array' → logprob: -18.628177642822266
    8. 'arr' → logprob: -19.003177642822266
    9. 'arrays' → logprob: -19.128177642822266
    10. '
' → logprob: -19.128177642822266

Token 435: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30910736322402954
    2. ':' → logprob: -1.4341073036193848
    3. '   ' → logprob: -3.9341073036193848
    4. 'index' → logprob: -5.934107303619385
    5. '       ' → logprob: -6.184107303619385
    6. ',' → logprob: -6.809107303619385
    7. ' in' → logprob: -7.809107303619385
    8. ',index' → logprob: -7.809107303619385
    9. ':index' → logprob: -8.184107780456543
    10. '):
' → logprob: -8.934107780456543

Token 436: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3611499071121216
    2. '       ' → logprob: -1.2361499071121216
    3. 'node' → logprob: -4.736149787902832
    4. ' node' → logprob: -5.861149787902832
    5. 'index' → logprob: -7.611149787902832
    6. '[node' → logprob: -8.986149787902832
    7. ' index' → logprob: -9.361149787902832
    8. '	node' → logprob: -9.361149787902832
    9. '    
' → logprob: -10.111149787902832
    10. ',node' → logprob: -10.486149787902832

Token 437: ' idx' (ID: 14016)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.36884409189224243
    2. 'idx' (adapté à ' idx') → logprob: -1.9938440322875977
    3. 'index' → logprob: -2.4938440322875977
    4. 'parent' → logprob: -3.1188440322875977
    5. 'i' → logprob: -3.6188440322875977
    6. 'v' → logprob: -4.618844032287598
    7. '       ' → logprob: -5.993844032287598
    8. '   ' → logprob: -6.243844032287598
    9. 'root' → logprob: -6.368844032287598
    10. 'n' → logprob: -7.118844032287598

Token 438: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0874718502163887
    2. ',' → logprob: -2.7124719619750977
    3. '=' → logprob: -4.087471961975098
    4. ',node' → logprob: -8.712471961975098
    5. '       ' → logprob: -9.212471961975098
    6. '   ' → logprob: -9.212471961975098
    7. ' ,' → logprob: -9.837471961975098
    8. ',index' → logprob: -9.962471961975098
    9. '=node' → logprob: -10.462471961975098
    10. '=index' → logprob: -10.837471961975098

Token 439: ' *' (ID: 425)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.05043243244290352
    2. 'l' → logprob: -3.1754324436187744
    3. 'lc' → logprob: -5.300432205200195
    4. ' left' → logprob: -6.175432205200195
    5. 'child' → logprob: -9.675432205200195
    6. ' l' → logprob: -10.050432205200195
    7. 'c' → logprob: -10.175432205200195
    8. 'children' → logprob: -10.300432205200195
    9. 'L' → logprob: -10.550432205200195
    10. 'lhs' → logprob: -10.800432205200195

Token 440: 'children' (ID: 10961)
  Prédit: 'children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.003036774694919586
    2. 'rest' → logprob: -6.878036975860596
    3. 'child' → logprob: -7.003036975860596
    4. 'ch' → logprob: -7.503036975860596
    5. ' children' → logprob: -8.628036499023438
    6. '(children' → logprob: -9.003036499023438
    7. 'chs' → logprob: -9.253036499023438
    8. 'kids' → logprob: -9.753036499023438
    9. '_children' → logprob: -9.878036499023438
    10. ' childs' → logprob: -12.128036499023438

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715728435665369
    2. ' =' → logprob: -5.006715774536133
    3. '=int' → logprob: -17.006715774536133
    4. '   ' → logprob: -17.131715774536133
    5. '＝' → logprob: -17.131715774536133
    6. '=_' → logprob: -17.381715774536133
    7. ' ' → logprob: -17.506715774536133
    8. '_=' → logprob: -17.506715774536133
    9. '=array' → logprob: -17.631715774536133
    10. '=line' → logprob: -18.006715774536133

Token 442: ' [' (ID: 723)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0003418991982471198
    2. 'map' → logprob: -8.62534236907959
    3. ' each' → logprob: -8.75034236907959
    4. '(each' → logprob: -13.12534236907959
    5. ' map' → logprob: -13.62534236907959
    6. 'Each' → logprob: -15.12534236907959
    7. 'list' → logprob: -16.000341415405273
    8. '[' → logprob: -16.125341415405273
    9. '_each' → logprob: -16.125341415405273
    10. '.each' → logprob: -17.125341415405273

Token 443: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07969335466623306
    2. 'each' → logprob: -2.70469331741333
    3. 'int' → logprob: -4.70469331741333
    4. ' map' → logprob: -7.45469331741333
    5. '(map' → logprob: -10.829693794250488
    6. ' each' → logprob: -10.829693794250488
    7. '(each' → logprob: -11.204693794250488
    8. '[int' → logprob: -11.329693794250488
    9. 'list' → logprob: -12.079693794250488
    10. '[' → logprob: -13.079693794250488

Token 444: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09521304816007614
    2. '(i' → logprob: -2.595212936401367
    3. '(e' → logprob: -4.595212936401367
    4. 'x' → logprob: -6.720212936401367
    5. '(v' → logprob: -6.970212936401367
    6. '(n' → logprob: -7.345212936401367
    7. '(_)' → logprob: -7.345212936401367
    8. '(num' → logprob: -7.470212936401367
    9. '(a' → logprob: -7.720212936401367
    10. '(ele' → logprob: -7.970212936401367

Token 445: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3603724539279938
    2. '(i' → logprob: -1.6103724241256714
    3. '(each' → logprob: -2.985372543334961
    4. '(e' → logprob: -3.485372543334961
    5. '(s' → logprob: -5.110372543334961
    6. '(v' → logprob: -5.735372543334961
    7. '(y' → logprob: -5.735372543334961
    8. '(c' → logprob: -6.110372543334961
    9. '(item' → logprob: -6.485372543334961
    10. '(val' → logprob: -6.860372543334961

Token 446: ' for' (ID: 395)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.0674846172332764
    2. '(each' → logprob: -1.0674846172332764
    3. '(x' → logprob: -1.3174846172332764
    4. 'for' → logprob: -4.3174848556518555
    5. '(i' → logprob: -4.4424848556518555
    6. 'each' → logprob: -5.3174848556518555
    7. '(s' → logprob: -5.6924848556518555
    8. '(y' → logprob: -5.8174848556518555
    9. ' for' → logprob: -6.0674848556518555
    10. '(v' → logprob: -6.9424848556518555

Token 447: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16280174255371094
    2. 'each' → logprob: -1.912801742553711
    3. ' x' → logprob: -6.537801742553711
    4. ' each' → logprob: -6.912801742553711
    5. 'e' → logprob: -10.162801742553711
    6. '(x' → logprob: -10.662801742553711
    7. '(each' → logprob: -10.912801742553711
    8. 'str' → logprob: -11.037801742553711
    9. 'in' → logprob: -11.037801742553711
    10. ' in' → logprob: -11.662801742553711

Token 448: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22824032604694366
    2. 'in' → logprob: -2.2282402515411377
    3. 'each' → logprob: -2.3532402515411377
    4. ' each' → logprob: -6.728240489959717
    5. 'x' → logprob: -9.728240013122559
    6. '(each' → logprob: -10.603240013122559
    7. ' x' → logprob: -13.103240013122559
    8. '_each' → logprob: -13.603240013122559
    9. 'e' → logprob: -13.978240013122559
    10. ' ' → logprob: -14.103240013122559

Token 449: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0013332172529771924
    2. ' each' → logprob: -6.626333236694336
    3. 'str' → logprob: -12.001333236694336
    4. '(each' → logprob: -14.251333236694336
    5. ' str' → logprob: -14.626333236694336
    6. 'sys' → logprob: -18.126333236694336
    7. '.each' → logprob: -18.376333236694336
    8. 'Each' → logprob: -18.501333236694336
    9. '
' → logprob: -18.751333236694336
    10. 'map' → logprob: -19.126333236694336

Token 450: ']
' (ID: 1592)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.04912331700325012
    2. '.strip' → logprob: -3.0491232872009277
    3. '.rstrip' → logprob: -7.924123287200928
    4. ']' → logprob: -9.174123764038086
    5. '.' → logprob: -9.799123764038086
    6. 'split' → logprob: -11.549123764038086
    7. '().' → logprob: -13.049123764038086
    8. '.readline' → logprob: -13.424123764038086
    9. 'strip' → logprob: -15.049123764038086
    10. '.s' → logprob: -15.174123764038086

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035539329051971436
    2. 'node' → logprob: -3.910539388656616
    3. '   ' → logprob: -4.785539150238037
    4. '[node' → logprob: -6.410539150238037
    5. ' node' → logprob: -6.785539150238037
    6. '<|end|>' → logprob: -6.910539150238037
    7. ',node' → logprob: -7.035539150238037
    8. '
' → logprob: -7.285539150238037
    9. '        
' → logprob: -7.660539150238037
    10. '	node' → logprob: -8.785539627075195

Token 452: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002038083504885435
    2. '       ' → logprob: -6.37703800201416
    3. 'if' → logprob: -8.87703800201416
    4. '   ' → logprob: -9.25203800201416
    5. ' node' → logprob: -10.12703800201416
    6. '
' → logprob: -10.25203800201416
    7. 'for' → logprob: -11.25203800201416
    8. '        
' → logprob: -12.50203800201416
    9. '           ' → logprob: -13.00203800201416
    10. 'while' → logprob: -13.62703800201416

Token 453: ' assert' (ID: 3696)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0004362718027550727
    2. 'if' → logprob: -8.375435829162598
    3. '       ' → logprob: -9.000435829162598
    4. 'for' → logprob: -10.125435829162598
    5. '   ' → logprob: -10.875435829162598
    6. ' node' → logprob: -11.125435829162598
    7. 'n' → logprob: -13.250435829162598
    8. 'v' → logprob: -13.500435829162598
    9. '           ' → logprob: -13.625435829162598
    10. 'child' → logprob: -13.750435829162598

Token 454: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3394221067428589
    2. 'idx' → logprob: -2.2144222259521484
    3. ' idx' → logprob: -2.9644222259521484
    4. ' ' → logprob: -3.0894222259521484
    5. 'len' → logprob: -3.0894222259521484
    6. ' len' → logprob: -4.214422225952148
    7. 'node' → logprob: -4.839422225952148
    8. '1' → logprob: -5.214422225952148
    9. '(idx' → logprob: -5.964422225952148
    10. ' node' → logprob: -6.589422225952148

Token 455: '(children' (ID: 93953)
  Prédit: '(children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(children' → logprob: -0.0006073639378882945
    2. 'children' → logprob: -7.500607490539551
    3. '(each' → logprob: -10.00060749053955
    4. ' children' → logprob: -12.75060749053955
    5. '(child' → logprob: -13.00060749053955
    6. 'each' → logprob: -13.37560749053955
    7. '(_' → logprob: -13.75060749053955
    8. '(node' → logprob: -14.50060749053955
    9. '(' → logprob: -15.12560749053955
    10. '	children' → logprob: -15.37560749053955

Token 456: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07322435081005096
    2. ' ==' → logprob: -2.6982243061065674
    3. ')' → logprob: -6.0732245445251465
    4. ')==' → logprob: -7.3232245445251465
    5. '<=' → logprob: -8.323224067687988
    6. ' <=' → logprob: -10.448224067687988
    7. '===' → logprob: -11.198224067687988
    8. '=' → logprob: -11.823224067687988
    9. ']==' → logprob: -11.823224067687988
    10. '>=' → logprob: -12.323224067687988

Token 457: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20148758590221405
    2. ' ==' → logprob: -1.7014875411987305
    3. '>=' → logprob: -10.07648754119873
    4. ' >=' → logprob: -11.45148754119873
    5. '<=' → logprob: -12.07648754119873
    6. '===' → logprob: -12.20148754119873
    7. '       ' → logprob: -13.07648754119873
    8. '=' → logprob: -13.07648754119873
    9. ')==' → logprob: -13.20148754119873
    10. ' <=' → logprob: -13.32648754119873

Token 458: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.62548828125
    4. '3' → logprob: -17.75048828125
    5. '۲' → logprob: -17.75048828125
    6. '  ' → logprob: -18.00048828125
    7. '２' → logprob: -18.06298828125
    8. '```' → logprob: -18.68798828125
    9. ' two' → logprob: -18.81298828125
    10. '=' → logprob: -19.12548828125

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '۲' → logprob: -18.750009536743164
    5. '```' → logprob: -18.875009536743164
    6. '２' → logprob: -18.875009536743164
    7. '3' → logprob: -19.375009536743164
    8. '  ' → logprob: -20.062509536743164
    9. 'exact' → logprob: -20.187509536743164
    10. '२' → logprob: -20.312509536743164

Token 460: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16858099400997162
    2. '
' → logprob: -1.9185810089111328
    3. '<|end|>' → logprob: -5.918581008911133
    4. 'node' → logprob: -6.043581008911133
    5. '        
' → logprob: -6.293581008911133
    6. ',' → logprob: -7.793581008911133
    7. '[node' → logprob: -8.418581008911133
    8. '   ' → logprob: -8.918581008911133
    9. ',node' → logprob: -8.918581008911133
    10. ' node' → logprob: -9.293581008911133

Token 461: ' idx' (ID: 14016)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.674238920211792
    2. 'all' → logprob: -0.799238920211792
    3. 'children' → logprob: -4.049239158630371
    4. 'idx' → logprob: -4.674239158630371
    5. ' all' → logprob: -5.049239158630371
    6. ' len' → logprob: -6.049239158630371
    7. '0' → logprob: -6.799239158630371
    8. 'set' → logprob: -7.424239158630371
    9. '(len' → logprob: -7.549239158630371
    10. 'node' → logprob: -7.799239158630371

Token 462: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1632436066865921
    2. ' >=' → logprob: -2.038243532180786
    3. '==' → logprob: -5.163243770599365
    4. '!=' → logprob: -5.163243770599365
    5. ' !=' → logprob: -5.788243770599365
    6. ' not' → logprob: -6.163243770599365
    7. ' in' → logprob: -6.788243770599365
    8. ' ==' → logprob: -7.038243770599365
    9. '<=' → logprob: -7.663243770599365
    10. 'not' → logprob: -8.038243293762207

Token 463: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016041994094848633
    2. ' ' → logprob: -4.1410417556762695
    3. '   ' → logprob: -12.01604175567627
    4. '  ' → logprob: -14.26604175567627
    5. '       ' → logprob: -15.14104175567627
    6. '
' → logprob: -15.64104175567627
    7. '1' → logprob: -16.266042709350586
    8. '```' → logprob: -16.453542709350586
    9. '           ' → logprob: -16.578542709350586
    10. ' ' → logprob: -16.891042709350586

Token 464: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019297054968774319
    2. ' ' → logprob: -6.251929759979248
    3. '   ' → logprob: -15.12692928314209
    4. '1' → logprob: -15.37692928314209
    5. '<|end|>' → logprob: -15.50192928314209
    6. '-' → logprob: -16.439430236816406
    7. '```' → logprob: -16.626930236816406
    8. '  ' → logprob: -16.689430236816406
    9. '
' → logprob: -17.064430236816406
    10. '=' → logprob: -17.501930236816406

Token 465: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019821181893348694
    2. '
' → logprob: -4.1448211669921875
    3. '<|end|>' → logprob: -6.2698211669921875
    4. '        
' → logprob: -7.3948211669921875
    5. 'node' → logprob: -7.5198211669921875
    6. ',' → logprob: -7.7698211669921875
    7. ',node' → logprob: -9.144821166992188
    8. '[node' → logprob: -10.019821166992188
    9. ' node' → logprob: -10.394821166992188
    10. 'nodes' → logprob: -11.019821166992188

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007410577964037657
    2. 'node' → logprob: -5.132410526275635
    3. '
' → logprob: -7.132410526275635
    4. '        
' → logprob: -8.632411003112793
    5. '<|end|>' → logprob: -8.757411003112793
    6. ' node' → logprob: -8.882411003112793
    7. '   ' → logprob: -9.757411003112793
    8. '[node' → logprob: -9.882411003112793
    9. ',node' → logprob: -10.632411003112793
    10. 'nodes' → logprob: -10.757411003112793

Token 467: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.03642722964286804
    2. '       ' → logprob: -3.5364272594451904
    3. 'if' → logprob: -5.161427021026611
    4. ' node' → logprob: -8.16142749786377
    5. 'v' → logprob: -9.03642749786377
    6. 'while' → logprob: -9.03642749786377
    7. 'for' → logprob: -9.28642749786377
    8. '   ' → logprob: -9.41142749786377
    9. '
' → logprob: -9.41142749786377
    10. 'n' → logprob: -9.53642749786377

Token 468: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7293348908424377
    2. '_list' → logprob: -0.7293348908424377
    3. '=' → logprob: -3.354334831237793
    4. '=node' → logprob: -8.104334831237793
    5. 'list' → logprob: -9.104334831237793
    6. 's' → logprob: -9.979334831237793
    7. '       ' → logprob: -10.354334831237793
    8. '   ' → logprob: -10.854334831237793
    9. '[node' → logprob: -10.979334831237793
    10. '           ' → logprob: -11.104334831237793

Token 469: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9981420336989686e-05
    2. '[int' → logprob: -11.125020027160645
    3. '.append' → logprob: -12.625020027160645
    4. '[' → logprob: -14.375020027160645
    5. 'idx' → logprob: -14.500020027160645
    6. '[node' → logprob: -14.750020027160645
    7. '
' → logprob: -15.500020027160645
    8. ' =' → logprob: -16.250019073486328
    9. '=' → logprob: -17.250019073486328
    10. '[i' → logprob: -17.750019073486328

Token 470: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5937466621398926
    2. '.index' → logprob: -0.8437466621398926
    3. '=index' → logprob: -4.718746662139893
    4. '=' → logprob: -5.468746662139893
    5. ']' → logprob: -6.093746662139893
    6. '.idx' → logprob: -7.218746662139893
    7. ' =' → logprob: -7.468746662139893
    8. ').' → logprob: -7.843746662139893
    9. '.' → logprob: -8.718746185302734
    10. ']=' → logprob: -9.093746185302734

Token 471: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5231820344924927
    2. 'children' → logprob: -0.8981820344924927
    3. 'parent' → logprob: -10.398181915283203
    4. 'child' → logprob: -11.523181915283203
    5. ' index' → logprob: -12.148181915283203
    6. ' children' → logprob: -12.398181915283203
    7. '.children' → logprob: -13.648181915283203
    8. 'Children' → logprob: -13.898181915283203
    9. '   ' → logprob: -14.023181915283203
    10. '	children' → logprob: -14.023181915283203

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740805923938751
    2. ' =' → logprob: -0.9740805625915527
    3. '=index' → logprob: -13.224081039428711
    4. ' ' → logprob: -14.724081039428711
    5. ',' → logprob: -14.724081039428711
    6. '=int' → logprob: -15.599081039428711
    7. ')' → logprob: -15.974081039428711
    8. '＝' → logprob: -16.22408103942871
    9. '.=' → logprob: -16.47408103942871
    10. '=}' → logprob: -16.59908103942871

Token 473: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00020354038861114532
    2. ' idx' → logprob: -8.500203132629395
    3. '	idx' → logprob: -17.50020408630371
    4. 'int' → logprob: -18.50020408630371
    5. '(idx' → logprob: -18.87520408630371
    6. '[idx' → logprob: -19.25020408630371
    7. '   ' → logprob: -20.50020408630371
    8. 'index' → logprob: -20.62520408630371
    9. 'id' → logprob: -21.37520408630371
    10. '.idx' → logprob: -22.00020408630371

Token 474: '
' (ID: 198)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2876701354980469
    2. '       ' → logprob: -1.7876701354980469
    3. '   ' → logprob: -2.537670135498047
    4. ' node' → logprob: -6.037670135498047
    5. '
' → logprob: -8.162670135498047
    6. '<|end|>' → logprob: -8.162670135498047
    7. '[node' → logprob: -8.912670135498047
    8. ',node' → logprob: -8.912670135498047
    9. '	node' → logprob: -9.287670135498047
    10. '        
' → logprob: -9.912670135498047

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11681697517633438
    2. 'node' → logprob: -2.241816997528076
    3. '   ' → logprob: -5.866816997528076
    4. ' node' → logprob: -7.491816997528076
    5. 'for' → logprob: -8.491816520690918
    6. '<|end|>' → logprob: -8.741816520690918
    7. ' for' → logprob: -9.616816520690918
    8. '[node' → logprob: -10.241816520690918
    9. ' ' → logprob: -10.491816520690918
    10. '	node' → logprob: -10.741816520690918

Token 476: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.00016742534353397787
    2. ' node' → logprob: -9.250167846679688
    3. '       ' → logprob: -9.750167846679688
    4. '   ' → logprob: -11.375167846679688
    5. 'for' → logprob: -14.125167846679688
    6. '
' → logprob: -15.500167846679688
    7. '	node' → logprob: -15.875167846679688
    8. '        
' → logprob: -16.000167846679688
    9. 'if' → logprob: -16.000167846679688
    10. ' ' → logprob: -16.500167846679688

Token 477: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.538490950129926e-05
    2. 'list' → logprob: -9.875055313110352
    3. 'List' → logprob: -13.125055313110352
    4. '[node' → logprob: -15.250055313110352
    5. '.' → logprob: -15.375055313110352
    6. 's' → logprob: -15.750055313110352
    7. '._' → logprob: -15.750055313110352
    8. '_LIST' → logprob: -15.875055313110352
    9. '_lists' → logprob: -16.00005531311035
    10. '-list' → logprob: -16.37505531311035

Token 478: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00024001303245313466
    2. '[node' → logprob: -8.375240325927734
    3. '[' → logprob: -12.500240325927734
    4. 'idx' → logprob: -13.625240325927734
    5. '[index' → logprob: -14.625240325927734
    6. '   ' → logprob: -14.750240325927734
    7. ' [' → logprob: -15.000240325927734
    8. '       ' → logprob: -15.000240325927734
    9. '[int' → logprob: -15.000240325927734
    10. '```' → logprob: -15.000240325927734

Token 479: '].' (ID: 1651)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.11535102874040604
    2. '].' → logprob: -2.2403509616851807
    3. ').' → logprob: -6.86535120010376
    4. '.' → logprob: -6.99035120010376
    5. ' .' → logprob: -8.865350723266602
    6. '}.' → logprob: -9.865350723266602
    7. '.Children' → logprob: -9.990350723266602
    8. '.contents' → logprob: -10.365350723266602
    9. '.parents' → logprob: -10.490350723266602
    10. ' ].' → logprob: -10.490350723266602

Token 480: 'children' (ID: 10961)
  Prédit: 'children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -6.511406809295295e-06
    2. ' children' → logprob: -12.375006675720215
    3. '.children' → logprob: -13.500006675720215
    4. '	children' → logprob: -15.000006675720215
    5. 'child' → logprob: -15.500006675720215
    6. '   ' → logprob: -16.3750057220459
    7. '_children' → logprob: -16.8750057220459
    8. '(children' → logprob: -16.8750057220459
    9. ' ' → logprob: -17.0000057220459
    10. '=' → logprob: -17.6250057220459

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014241199940443039
    2. ' =' → logprob: -4.2642412185668945
    3. '.extend' → logprob: -9.514241218566895
    4. '[:]' → logprob: -13.389241218566895
    5. '.=' → logprob: -13.889241218566895
    6. '.append' → logprob: -14.514241218566895
    7. '.clear' → logprob: -14.764241218566895
    8. '＝' → logprob: -16.014240264892578
    9. '=list' → logprob: -16.139240264892578
    10. '+=' → logprob: -16.514240264892578

Token 482: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.0001422770437784493
    2. ' children' → logprob: -9.625142097473145
    3. '[' → logprob: -9.750142097473145
    4. '(children' → logprob: -11.375142097473145
    5. '	children' → logprob: -13.125142097473145
    6. '.children' → logprob: -13.375142097473145
    7. 'list' → logprob: -13.500142097473145
    8. 'child' → logprob: -14.750142097473145
    9. '[ch' → logprob: -15.000142097473145
    10. '[int' → logprob: -16.12514305114746

Token 483: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003997903782874346
    2. 'for' → logprob: -5.753997802734375
    3. ' for' → logprob: -8.128997802734375
    4. 'def' → logprob: -8.253997802734375
    5. '<|end|>' → logprob: -9.128997802734375
    6. '   ' → logprob: -9.378997802734375
    7. '
' → logprob: -9.878997802734375
    8. '        
' → logprob: -12.253997802734375
    9. '[' → logprob: -13.003997802734375
    10. '<|end|>' → logprob: -13.128997802734375

Token 484: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15385432541370392
    2. '       ' → logprob: -2.9038543701171875
    3. 'def' → logprob: -3.1538543701171875
    4. 'root' → logprob: -4.2788543701171875
    5. 'if' → logprob: -4.5288543701171875
    6. '   ' → logprob: -4.9038543701171875
    7. ' for' → logprob: -5.2788543701171875
    8. 'n' → logprob: -5.6538543701171875
    9. '
' → logprob: -6.2788543701171875
    10. '#' → logprob: -7.5288543701171875

Token 485: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014835550682619214
    2. 'if' → logprob: -6.62648344039917
    3. '   ' → logprob: -9.251483917236328
    4. '       ' → logprob: -10.251483917236328
    5. 'node' → logprob: -11.001483917236328
    6. ' for' → logprob: -12.126483917236328
    7. '#' → logprob: -13.751483917236328
    8. '	for' → logprob: -14.376483917236328
    9. '        
' → logprob: -14.626483917236328
    10. 'children' → logprob: -14.751483917236328

Token 486: ' child' (ID: 2320)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6968721151351929
    2. 'child' → logprob: -0.8218721151351929
    3. 'ch' → logprob: -3.3218722343444824
    4. ' child' → logprob: -4.571872234344482
    5. ' c' → logprob: -5.071872234344482
    6. 'i' → logprob: -5.196872234344482
    7. 'x' → logprob: -7.071872234344482
    8. ' ch' → logprob: -7.446872234344482
    9. 'ci' → logprob: -8.071871757507324
    10. 'chi' → logprob: -8.071871757507324

Token 487: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05318140611052513
    2. '_idx' → logprob: -3.5531814098358154
    3. 'in' → logprob: -3.8031814098358154
    4. 'idx' → logprob: -7.178181171417236
    5. '_index' → logprob: -9.428181648254395
    6. 'index' → logprob: -11.928181648254395
    7. ' ' → logprob: -13.428181648254395
    8. 's' → logprob: -13.428181648254395
    9. '_in' → logprob: -13.553181648254395
    10. 'Idx' → logprob: -13.678181648254395

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994788348674774
    2. 'in' → logprob: -2.6949479579925537
    3. ' ' → logprob: -11.944948196411133
    4. '	in' → logprob: -13.194948196411133
    5. 's' → logprob: -13.444948196411133
    6. '_in' → logprob: -15.194948196411133
    7. ',' → logprob: -15.319948196411133
    8. 'n' → logprob: -15.444948196411133
    9. '   ' → logprob: -15.694948196411133
    10. '  ' → logprob: -15.944948196411133

Token 489: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.006782743148505688
    2. ' children' → logprob: -5.006782531738281
    3. 'child' → logprob: -10.131782531738281
    4. 'node' → logprob: -11.131782531738281
    5. 'each' → logprob: -12.631782531738281
    6. '(children' → logprob: -12.631782531738281
    7. '	children' → logprob: -13.006782531738281
    8. '[' → logprob: -13.006782531738281
    9. '   ' → logprob: -14.006782531738281
    10. '.children' → logprob: -15.006782531738281

Token 490: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2247469127178192
    2. ':' → logprob: -1.9747469425201416
    3. '           ' → logprob: -3.5997469425201416
    4. 'if' → logprob: -3.8497469425201416
    5. '       ' → logprob: -4.7247467041015625
    6. ' if' → logprob: -6.0997467041015625
    7. '   ' → logprob: -6.2247467041015625
    8. '):
' → logprob: -8.224746704101562
    9. '<|end|>' → logprob: -8.474746704101562
    10. '():
' → logprob: -9.599746704101562

Token 491: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25259751081466675
    2. '           ' → logprob: -1.5025975704193115
    3. ' if' → logprob: -7.627597332000732
    4. '   ' → logprob: -8.62759780883789
    5. '       ' → logprob: -13.25259780883789
    6. '	if' → logprob: -15.25259780883789
    7. '               ' → logprob: -16.62759780883789
    8. ' ' → logprob: -17.00259780883789
    9. '	       ' → logprob: -17.50259780883789
    10. '          ' → logprob: -17.62759780883789

Token 492: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02073550596833229
    2. 'node' → logprob: -4.145735740661621
    3. '           ' → logprob: -5.520735740661621
    4. '   ' → logprob: -7.895735740661621
    5. ' if' → logprob: -8.395735740661621
    6. '       ' → logprob: -9.520735740661621
    7. ' node' → logprob: -12.395735740661621
    8. '               ' → logprob: -12.520735740661621
    9. ' ' → logprob: -12.895735740661621
    10. '            
' → logprob: -14.020735740661621

Token 493: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4747936427593231
    2. 'node' → logprob: -0.9747936725616455
    3. '           ' → logprob: -7.974793434143066
    4. '   ' → logprob: -8.724793434143066
    5. ' if' → logprob: -9.099793434143066
    6. '       ' → logprob: -9.974793434143066
    7. ' node' → logprob: -10.099793434143066
    8. '               ' → logprob: -13.099793434143066
    9. ' ' → logprob: -13.349793434143066
    10. '
' → logprob: -13.974793434143066

Token 494: '-existent' (ID: 130142)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08989055454730988
    2. 'if' → logprob: -2.714890480041504
    3. ' -' → logprob: -4.339890480041504
    4. 'node' → logprob: -5.964890480041504
    5. ' if' → logprob: -6.089890480041504
    6. '-node' → logprob: -7.464890480041504
    7. '   ' → logprob: -7.964890480041504
    8. '-child' → logprob: -8.589890480041504
    9. '-root' → logprob: -9.339890480041504
    10. '-negative' → logprob: -9.339890480041504

Token 495: ' node' (ID: 4596)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4766071140766144
    2. 'if' → logprob: -0.976607084274292
    3. ' child' → logprob: -7.101607322692871
    4. 'child' → logprob: -7.476607322692871
    5. '           ' → logprob: -7.601607322692871
    6. ' node' → logprob: -8.476607322692871
    7. ' or' → logprob: -8.726607322692871
    8. 'node' → logprob: -8.851607322692871
    9. '   ' → logprob: -11.101607322692871
    10. ' nodes' → logprob: -11.226607322692871

Token 496: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12203440070152283
    2. ' if' → logprob: -2.2470343112945557
    3. '           ' → logprob: -5.247034549713135
    4. '=' → logprob: -7.372034549713135
    5. ' =' → logprob: -7.372034549713135
    6. 'node' → logprob: -7.622034549713135
    7. ' !=' → logprob: -8.247034072875977
    8. '   ' → logprob: -8.497034072875977
    9. '[node' → logprob: -8.622034072875977
    10. ' ==' → logprob: -8.872034072875977

Token 497: ' no' (ID: 860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40097182989120483
    2. 'if' → logprob: -1.1509718894958496
    3. '           ' → logprob: -4.27597188949585
    4. 'node' → logprob: -10.650971412658691
    5. '   ' → logprob: -10.900971412658691
    6. ' node' → logprob: -10.900971412658691
    7. '               ' → logprob: -11.150971412658691
    8. ' ' → logprob: -11.650971412658691
    9. '       ' → logprob: -12.775971412658691
    10. '
' → logprob: -13.150971412658691

Token 498: ' parent' (ID: 5980)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3600995540618896
    2. ' if' → logprob: -1.4850995540618896
    3. 'child' → logprob: -1.4850995540618896
    4. 'parent' → logprob: -2.4850995540618896
    5. ' child' → logprob: -2.6100995540618896
    6. 'node' → logprob: -3.8600995540618896
    7. ' parent' → logprob: -3.9850995540618896
    8. ' node' → logprob: -4.110099792480469
    9. 'continue' → logprob: -4.110099792480469
    10. '-' → logprob: -4.610099792480469

Token 499: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0406533479690552
    2. ' if' → logprob: -1.0406533479690552
    3. '           ' → logprob: -1.2906533479690552
    4. ' =' → logprob: -4.790653228759766
    5. '=' → logprob: -5.165653228759766
    6. ' or' → logprob: -6.165653228759766
    7. 'node' → logprob: -7.040653228759766
    8. '[node' → logprob: -8.165653228759766
    9. ',' → logprob: -8.915653228759766
    10. '=node' → logprob: -8.915653228759766

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23695848882198334
    2. ' if' → logprob: -1.9869585037231445
    3. 'if' → logprob: -2.6119585037231445
    4. '   ' → logprob: -9.236958503723145
    5. ',' → logprob: -9.361958503723145
    6. ' =' → logprob: -9.861958503723145
    7. '       ' → logprob: -9.861958503723145
    8. '
' → logprob: -9.986958503723145
    9. '            
' → logprob: -10.486958503723145
    10. '=' → logprob: -10.486958503723145

Token 501: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008326167589984834
    2. '           ' → logprob: -7.375832557678223
    3. ' if' → logprob: -8.500832557678223
    4. '   ' → logprob: -13.500832557678223
    5. 'node' → logprob: -14.000832557678223
    6. '               ' → logprob: -15.500832557678223
    7. '       ' → logprob: -16.00083351135254
    8. ' ' → logprob: -16.75083351135254
    9. '	if' → logprob: -17.00083351135254
    10. '            
' → logprob: -17.37583351135254

Token 502: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.08899355679750443
    2. ' child' → logprob: -2.463993549346924
    3. '   ' → logprob: -10.588994026184082
    4. '           ' → logprob: -11.213994026184082
    5. 'node' → logprob: -12.213994026184082
    6. '	child' → logprob: -12.213994026184082
    7. ' ' → logprob: -13.088994026184082
    8. '               ' → logprob: -14.213994026184082
    9. '(child' → logprob: -14.463994026184082
    10. ' node' → logprob: -14.463994026184082

Token 503: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0004717834817711264
    2. 'idx' → logprob: -7.750471591949463
    3. 'child' → logprob: -10.500472068786621
    4. '_list' → logprob: -13.000472068786621
    5. '_index' → logprob: -13.125472068786621
    6. ' idx' → logprob: -13.375472068786621
    7. '_child' → logprob: -13.625472068786621
    8. '[idx' → logprob: -14.000472068786621
    9. 'd' → logprob: -14.375472068786621
    10. '   ' → logprob: -14.375472068786621

Token 504: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09644655883312225
    2. ' !=' → logprob: -2.4714465141296387
    3. '!=-' → logprob: -5.096446514129639
    4. '>=' → logprob: -6.846446514129639
    5. '==' → logprob: -8.346446990966797
    6. '=' → logprob: -11.096446990966797
    7. ')!=' → logprob: -11.346446990966797
    8. ' >=' → logprob: -11.971446990966797
    9. ' ==' → logprob: -12.221446990966797
    10. '[' → logprob: -12.346446990966797

Token 505: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017024369444698095
    2. ' -' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.3767032623291
    4. '   ' → logprob: -16.6267032623291
    5. '  ' → logprob: -19.1267032623291
    6. '```' → logprob: -19.1267032623291
    7. '	' → logprob: -20.0017032623291
    8. '
' → logprob: -20.0017032623291
    9. '0' → logprob: -20.1267032623291
    10. '           ' → logprob: -20.3767032623291

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '-' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.25001335144043
    4. ' -' → logprob: -14.37501335144043
    5. '```' → logprob: -15.50001335144043
    6. '<|end|>' → logprob: -15.75001335144043
    7. '   ' → logprob: -17.25001335144043
    8. '
' → logprob: -17.62501335144043
    9. '`' → logprob: -17.87501335144043
    10. '2' → logprob: -17.93751335144043

Token 507: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5435023307800293
    2. ':
' → logprob: -1.4185023307800293
    3. ':' → logprob: -1.7935023307800293
    4. 'continue' → logprob: -4.918502330780029
    5. ' continue' → logprob: -5.793502330780029
    6. '           ' → logprob: -8.418502807617188
    7. ':return' → logprob: -9.543502807617188
    8. ' or' → logprob: -10.168502807617188
    9. ' continues' → logprob: -10.668502807617188
    10. '):
' → logprob: -10.793502807617188

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33512595295906067
    2. 'continue' → logprob: -1.3351259231567383
    3. ' continue' → logprob: -3.8351259231567383
    4. '           ' → logprob: -11.210125923156738
    5. '	continue' → logprob: -12.460125923156738
    6. '_continue' → logprob: -12.710125923156738
    7. '			' → logprob: -13.085125923156738
    8. 'Continue' → logprob: -14.210125923156738
    9. '	           ' → logprob: -14.210125923156738
    10. '   ' → logprob: -14.460125923156738

Token 509: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1723736822605133
    2. ' continue' → logprob: -1.922373652458191
    3. '               ' → logprob: -4.4223737716674805
    4. '	continue' → logprob: -10.04737377166748
    5. '                   ' → logprob: -11.29737377166748
    6. '   ' → logprob: -11.67237377166748
    7. '           ' → logprob: -12.92237377166748
    8. ' ' → logprob: -13.67237377166748
    9. '_continue' → logprob: -14.29737377166748
    10. 'break' → logprob: -14.54737377166748

Token 510: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002960823243483901
    2. 'node' → logprob: -5.877960681915283
    3. '            
' → logprob: -9.502961158752441
    4. '
' → logprob: -10.252961158752441
    5. ' node' → logprob: -10.252961158752441
    6. '[node' → logprob: -13.502961158752441
    7. '<|end|>' → logprob: -13.627961158752441
    8. '               ' → logprob: -13.752961158752441
    9. '       ' → logprob: -13.752961158752441
    10. '   ' → logprob: -14.127961158752441

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017538340762257576
    2. 'node' → logprob: -6.376753807067871
    3. '            
' → logprob: -11.126753807067871
    4. '
' → logprob: -11.126753807067871
    5. ' node' → logprob: -11.126753807067871
    6. '       ' → logprob: -12.751753807067871
    7. '[node' → logprob: -14.126753807067871
    8. '               ' → logprob: -14.501753807067871
    9. '   ' → logprob: -14.626753807067871
    10. '<|end|>' → logprob: -14.626753807067871

Token 512: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.06934556365013123
    2. '           ' → logprob: -2.819345474243164
    3. ' node' → logprob: -4.944345474243164
    4. '       ' → logprob: -8.944345474243164
    5. '   ' → logprob: -9.444345474243164
    6. '	node' → logprob: -12.694345474243164
    7. '
' → logprob: -12.694345474243164
    8. '            
' → logprob: -12.819345474243164
    9. '               ' → logprob: -12.944345474243164
    10. '[node' → logprob: -13.444345474243164

Token 513: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. 'list' → logprob: -12.75000286102295
    3. '_lists' → logprob: -17.000003814697266
    4. 's' → logprob: -17.500003814697266
    5. 'List' → logprob: -18.000003814697266
    6. '_' → logprob: -18.125003814697266
    7. '
' → logprob: -19.000003814697266
    8. '[parent' → logprob: -19.375003814697266
    9. 'parent' → logprob: -19.875003814697266
    10. '_LIST' → logprob: -20.000003814697266

Token 514: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8074162653647363e-05
    2. 'child' → logprob: -11.625018119812012
    3. '           ' → logprob: -12.500018119812012
    4. ' [' → logprob: -13.250018119812012
    5. '[node' → logprob: -13.375018119812012
    6. '   ' → logprob: -14.625018119812012
    7. '[parent' → logprob: -14.875018119812012
    8. '       ' → logprob: -15.000018119812012
    9. '[int' → logprob: -15.625018119812012
    10. '               ' → logprob: -15.875018119812012

Token 515: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -5.796184723294573e-06
    2. ' child' → logprob: -12.125005722045898
    3. '[' → logprob: -15.625005722045898
    4. '	child' → logprob: -16.5000057220459
    5. '(child' → logprob: -16.7500057220459
    6. 'int' → logprob: -17.3750057220459
    7. '.child' → logprob: -17.7500057220459
    8. '   ' → logprob: -17.8750057220459
    9. '_child' → logprob: -18.5000057220459
    10. 'children' → logprob: -18.5000057220459

Token 516: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.010790537111461163
    2. 'idx' → logprob: -4.7607903480529785
    3. 'child' → logprob: -6.6357903480529785
    4. '[' → logprob: -7.3857903480529785
    5. '   ' → logprob: -10.135790824890137
    6. '       ' → logprob: -10.760790824890137
    7. 'x' → logprob: -10.885790824890137
    8. 's' → logprob: -11.010790824890137
    9. 'ist' → logprob: -11.010790824890137
    10. 'list' → logprob: -11.135790824890137

Token 517: '].' (ID: 1651)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.016857661306858063
    2. '].' → logprob: -4.141857624053955
    3. '.index' → logprob: -7.891857624053955
    4. ').' → logprob: -8.391858100891113
    5. '.node' → logprob: -8.891858100891113
    6. '.child' → logprob: -11.266858100891113
    7. ' .' → logprob: -11.266858100891113
    8. '.parents' → logprob: -11.391858100891113
    9. '.idx' → logprob: -12.016858100891113
    10. '.children' → logprob: -12.016858100891113

Token 518: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -3.666993507067673e-05
    2. '.parent' → logprob: -10.250036239624023
    3. ' parent' → logprob: -14.000036239624023
    4. '_parent' → logprob: -15.500036239624023
    5. '[parent' → logprob: -15.875036239624023
    6. 'index' → logprob: -17.000036239624023
    7. ',parent' → logprob: -17.375036239624023
    8. '(parent' → logprob: -18.875036239624023
    9. '	parent' → logprob: -19.000036239624023
    10. '-parent' → logprob: -19.250036239624023

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132745921611786
    2. ' =' → logprob: -1.313274621963501
    3. '=index' → logprob: -11.688274383544922
    4. '=int' → logprob: -13.438274383544922
    5. '=node' → logprob: -13.938274383544922
    6. '<|end|>' → logprob: -15.063274383544922
    7. '=
' → logprob: -15.188274383544922
    8. ')' → logprob: -15.563274383544922
    9. ')=' → logprob: -15.938274383544922
    10. 'idx' → logprob: -16.063274383544922

Token 520: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0004307884373702109
    2. ' idx' → logprob: -7.750430583953857
    3. '	idx' → logprob: -17.375431060791016
    4. '[idx' → logprob: -17.750431060791016
    5. 'index' → logprob: -17.875431060791016
    6. '   ' → logprob: -17.875431060791016
    7. '(idx' → logprob: -19.375431060791016
    8. 'int' → logprob: -20.000431060791016
    9. 'id' → logprob: -20.000431060791016
    10. ' ' → logprob: -20.625431060791016

Token 521: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1468915045261383
    2. 'root' → logprob: -2.2718915939331055
    3. '<|end|>' → logprob: -4.5218915939331055
    4. 'return' → logprob: -4.8968915939331055
    5. 'if' → logprob: -5.2718915939331055
    6. 'node' → logprob: -5.3968915939331055
    7. 'n' → logprob: -6.0218915939331055
    8. 'for' → logprob: -7.1468915939331055
    9. 'num' → logprob: -7.5218915939331055
    10. '#' → logprob: -7.5218915939331055

Token 523: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6063068509101868
    2. 'root' → logprob: -0.8563068509101868
    3. 'return' → logprob: -4.356307029724121
    4. '#' (adapté à ' #') → logprob: -4.481307029724121
    5. 'for' → logprob: -5.731307029724121
    6. 'n' → logprob: -6.981307029724121
    7. 'roots' → logprob: -7.356307029724121
    8. 'node' → logprob: -8.356307029724121
    9. 'parent' → logprob: -8.481307029724121
    10. 'if' → logprob: -8.606307029724121

Token 524: ' find' (ID: 1646)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.06970609724521637
    2. 'for' → logprob: -3.8197062015533447
    3. '#' → logprob: -4.069705963134766
    4. ' root' → logprob: -4.069705963134766
    5. 'return' → logprob: -5.444705963134766
    6. 'roots' → logprob: -6.194705963134766
    7. '   ' → logprob: -6.319705963134766
    8. ' for' → logprob: -7.069705963134766
    9. 'def' → logprob: -7.194705963134766
    10. 'parent' → logprob: -7.569705963134766

Token 525: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.03128058463335037
    2. ' root' → logprob: -3.656280517578125
    3. '   ' → logprob: -6.031280517578125
    4. 'node' → logprob: -7.281280517578125
    5. 'for' → logprob: -7.531280517578125
    6. '[root' → logprob: -8.531280517578125
    7. 'next' → logprob: -8.656280517578125
    8. 'parent' → logprob: -8.656280517578125
    9. 'r' → logprob: -8.781280517578125
    10. 'idx' → logprob: -9.281280517578125

Token 526: ' node' (ID: 4596)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5701350569725037
    2. 'for' → logprob: -0.9451350569725037
    3. '   ' → logprob: -3.1951351165771484
    4. 'return' → logprob: -5.570135116577148
    5. ' for' → logprob: -7.445135116577148
    6. ' root' → logprob: -7.945135116577148
    7. '
' → logprob: -10.695135116577148
    8. 'r' → logprob: -10.695135116577148
    9. 'roots' → logprob: -10.695135116577148
    10. 'def' → logprob: -10.820135116577148

Token 527: '
' (ID: 198)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6272364258766174
    2. 'for' → logprob: -1.0022363662719727
    3. '   ' → logprob: -2.3772363662719727
    4. 'return' → logprob: -5.252236366271973
    5. ' for' → logprob: -8.377236366271973
    6. ' root' → logprob: -8.627236366271973
    7. '
' → logprob: -9.877236366271973
    8. 'idx' → logprob: -10.002236366271973
    9. 'roots' → logprob: -10.002236366271973
    10. '_root' → logprob: -10.127236366271973

Token 528: '   ' (ID: 271)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6114721894264221
    2. 'for' → logprob: -0.8614721894264221
    3. '   ' → logprob: -3.4864721298217773
    4. 'return' → logprob: -5.736472129821777
    5. 'def' → logprob: -7.861472129821777
    6. ' root' → logprob: -8.111472129821777
    7. ' for' → logprob: -8.236472129821777
    8. 'roots' → logprob: -10.486472129821777
    9. '
' → logprob: -10.986472129821777
    10. 'global' → logprob: -11.236472129821777

Token 529: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.5805637836456299
    2. 'for' → logprob: -0.8305637836456299
    3. 'return' → logprob: -5.830563545227051
    4. '   ' → logprob: -6.580563545227051
    5. 'roots' → logprob: -9.33056354522705
    6. 'r' → logprob: -9.83056354522705
    7. ' root' → logprob: -9.95556354522705
    8. ' for' → logprob: -10.20556354522705
    9. 'def' → logprob: -10.95556354522705
    10. 'node' → logprob: -11.70556354522705

Token 530: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.519869327545166
    2. '=' → logprob: -1.019869327545166
    3. '_idx' → logprob: -3.144869327545166
    4. '_index' → logprob: -7.144869327545166
    5. 'idx' → logprob: -7.394869327545166
    6. '=-' → logprob: -8.644868850708008
    7. '=node' → logprob: -11.019868850708008
    8. '=[' → logprob: -11.144868850708008
    9. '=None' → logprob: -11.144868850708008
    10. '   ' → logprob: -11.269868850708008

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16081389784812927
    2. ' =' → logprob: -1.9108139276504517
    3. '=-' → logprob: -7.535813808441162
    4. '=root' → logprob: -10.41081428527832
    5. '=node' → logprob: -11.78581428527832
    6. '=[' → logprob: -11.91081428527832
    7. 'for' → logprob: -13.03581428527832
    8. '=None' → logprob: -13.41081428527832
    9. ' =[' → logprob: -13.66081428527832
    10. '=
' → logprob: -13.78581428527832

Token 532: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9311322569847107
    2. 'next' → logprob: -0.9311322569847107
    3. '-' → logprob: -1.6811323165893555
    4. '[' → logprob: -4.1811323165893555
    5. '[next' → logprob: -4.9311323165893555
    6. '[node' → logprob: -7.0561323165893555
    7. 'node' → logprob: -7.4311323165893555
    8. ' next' → logprob: -7.6811323165893555
    9. '-next' → logprob: -8.306132316589355
    10. 'min' → logprob: -8.306132316589355

Token 533: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14813464879989624
    2. 'node' → logprob: -2.398134708404541
    3. 'x' → logprob: -3.773134708404541
    4. 'idx' → logprob: -3.898134708404541
    5. ' i' → logprob: -6.773134708404541
    6. 'n' → logprob: -6.898134708404541
    7. 'v' → logprob: -7.648134708404541
    8. ' node' → logprob: -8.023134231567383
    9. 'index' → logprob: -8.398134231567383
    10. ' idx' → logprob: -8.648134231567383

Token 534: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9924978613853455
    2. '.parent' → logprob: -1.4924979209899902
    3. 'for' → logprob: -1.6174979209899902
    4. ' for' → logprob: -1.6174979209899902
    5. 'node' → logprob: -5.74249792098999
    6. 'parent' → logprob: -6.24249792098999
    7. 'i' → logprob: -6.86749792098999
    8. 'idx' → logprob: -7.36749792098999
    9. '.node' → logprob: -8.117497444152832
    10. '.idx' → logprob: -8.742497444152832

Token 535: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761135816574097
    2. 'for' → logprob: -0.8261135816574097
    3. '   ' → logprob: -8.9511137008667
    4. ' ' → logprob: -10.7011137008667
    5. '    ' → logprob: -11.8261137008667
    6. '
' → logprob: -11.9511137008667
    7. '  ' → logprob: -12.3261137008667
    8. '       ' → logprob: -13.7011137008667
    9. '           ' → logprob: -14.5761137008667
    10. '     ' → logprob: -14.8261137008667

Token 536: ' x' (ID: 1215)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002537847962230444
    2. ' node' → logprob: -6.377537727355957
    3. 'x' → logprob: -7.127537727355957
    4. 'filter' → logprob: -10.627537727355957
    5. 'range' → logprob: -12.752537727355957
    6. 'n' → logprob: -14.002537727355957
    7. '[node' → logprob: -14.127537727355957
    8. '(node' → logprob: -14.127537727355957
    9. ' x' → logprob: -14.252537727355957
    10. 'enumer' → logprob: -14.627537727355957

Token 537: ' in' (ID: 306)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7006138563156128
    2. 'in' → logprob: -0.9506138563156128
    3. ' in' → logprob: -2.4506139755249023
    4. ' node' → logprob: -3.5756139755249023
    5. 'x' → logprob: -5.950613975524902
    6. 'for' → logprob: -8.825613975524902
    7. 'range' → logprob: -9.075613975524902
    8. ',node' → logprob: -10.450613975524902
    9. ' x' → logprob: -10.575613975524902
    10. ' for' → logprob: -11.575613975524902

Token 538: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005424272385425866
    2. ' node' → logprob: -7.625542640686035
    3. 'filter' → logprob: -10.375542640686035
    4. 'range' → logprob: -10.750542640686035
    5. '[node' → logprob: -14.500542640686035
    6. '(node' → logprob: -15.000542640686035
    7. '   ' → logprob: -15.375542640686035
    8. 'enumer' → logprob: -16.00054168701172
    9. '[' → logprob: -16.12554168701172
    10. '
' → logprob: -16.25054168701172

Token 539: '_list' (ID: 4162)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.55394446849823
    2. '_list' → logprob: -1.55394446849823
    3. 'list' → logprob: -1.55394446849823
    4. 'in' → logprob: -7.1789445877075195
    5. 'range' → logprob: -7.3039445877075195
    6. 'List' → logprob: -7.8039445877075195
    7. 'for' → logprob: -7.8039445877075195
    8. ' node' → logprob: -9.17894458770752
    9. 'if' → logprob: -10.05394458770752
    10. ' in' → logprob: -11.05394458770752

Token 540: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07889056205749512
    2. 'if' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.828890800476074
    4. '   ' → logprob: -14.953890800476074
    5. '       ' → logprob: -17.578889846801758
    6. '  ' → logprob: -18.203889846801758
    7. '           ' → logprob: -18.203889846801758
    8. '	if' → logprob: -18.328889846801758
    9. '          ' → logprob: -18.453889846801758
    10. '         ' → logprob: -18.578889846801758

Token 541: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0021861877758055925
    2. ' x' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.627185821533203
    4. ' ' → logprob: -15.877185821533203
    5. 'node' → logprob: -15.877185821533203
    6. '(x' → logprob: -16.502185821533203
    7. '
' → logprob: -16.627185821533203
    8. '  ' → logprob: -16.752185821533203
    9. '    ' → logprob: -16.877185821533203
    10. '     ' → logprob: -18.002185821533203

Token 542: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0052625760436058044
    2. ' .' → logprob: -5.50526237487793
    3. '.' → logprob: -7.38026237487793
    4. 'parent' → logprob: -7.75526237487793
    5. '.x' → logprob: -9.75526237487793
    6. '.parents' → logprob: -10.13026237487793
    7. 'x' → logprob: -11.13026237487793
    8. '.Parent' → logprob: -12.38026237487793
    9. '.user' → logprob: -12.88026237487793
    10. ').' → logprob: -13.38026237487793

Token 543: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.275014728307724
    2. ' ==' → logprob: -1.7750147581100464
    3. '==-' → logprob: -2.650014638900757
    4. ']==' → logprob: -8.775014877319336
    5. '<' → logprob: -9.025014877319336
    6. ')==' → logprob: -11.150014877319336
    7. ')' → logprob: -12.150014877319336
    8. '==
' → logprob: -12.275014877319336
    9. ' ' → logprob: -13.400014877319336
    10. '===' → logprob: -13.400014877319336

Token 544: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. ' ' → logprob: -18.125911712646484
    4. '   ' → logprob: -18.500911712646484
    5. '
' → logprob: -20.750911712646484
    6. '  ' → logprob: -20.875911712646484
    7. '	' → logprob: -21.625911712646484
    8. '−' → logprob: -21.750911712646484
    9. '==-' → logprob: -23.125911712646484
    10. '-
' → logprob: -23.500911712646484

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004636961035430431
    2. '-' → logprob: -5.379636764526367
    3. ' -' → logprob: -11.379636764526367
    4. ' ' → logprob: -12.254636764526367
    5. '   ' → logprob: -15.754636764526367
    6. '```' → logprob: -16.567136764526367
    7. '(-' → logprob: -17.567136764526367
    8. '  ' → logprob: -17.754636764526367
    9. '
' → logprob: -17.817136764526367
    10. '#' → logprob: -18.317136764526367

Token 546: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02701670303940773
    2. ']' → logprob: -4.277016639709473
    3. ']
' → logprob: -4.402016639709473
    4. ']

' → logprob: -7.777016639709473
    5. ' ][' → logprob: -9.902016639709473
    6. ' if' → logprob: -10.902016639709473
    7. '   ' → logprob: -11.902016639709473
    8. '[' → logprob: -11.902016639709473
    9. 'if' → logprob: -12.027016639709473
    10. ' and' → logprob: -12.777016639709473

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.375040054321289
    4. ':' → logprob: -17.25004005432129
    5. '
' → logprob: -18.37504005432129
    6. '  ' → logprob: -19.12504005432129
    7. '       ' → logprob: -19.50004005432129
    8. ' :' → logprob: -19.62504005432129
    9. '۰' → logprob: -19.87504005432129
    10. '    ' → logprob: -20.06254005432129

Token 548: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39380332827568054
    2. ')' → logprob: -1.143803358078003
    3. 'def' → logprob: -5.518803119659424
    4. '
' → logprob: -6.518803119659424
    5. '<|end|>' → logprob: -8.268803596496582
    6. 'return' → logprob: -8.643803596496582
    7. '   ' → logprob: -8.643803596496582
    8. ')
' → logprob: -8.768803596496582
    9. ')return' → logprob: -8.893803596496582
    10. ']
' → logprob: -9.143803596496582

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2533176839351654
    2. 'return' → logprob: -1.5033177137374878
    3. ' return' → logprob: -6.628317832946777
    4. '
' → logprob: -10.253317832946777
    5. '	return' → logprob: -10.878317832946777
    6. 'def' → logprob: -12.003317832946777
    7. '    
' → logprob: -13.003317832946777
    8. 'root' → logprob: -13.253317832946777
    9. '  ' → logprob: -15.378317832946777
    10. 'print' → logprob: -15.753317832946777

Token 550: ' root' (ID: 6577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008395182900130749
    2. '   ' → logprob: -5.008395195007324
    3. ' return' → logprob: -6.508395195007324
    4. 'root' (adapté à ' root') → logprob: -8.758395195007324
    5. 'def' → logprob: -12.008395195007324
    6. '
' → logprob: -12.008395195007324
    7. 'print' → logprob: -12.258395195007324
    8. 'global' → logprob: -12.383395195007324
    9. 'node' → logprob: -12.758395195007324
    10. '	return' → logprob: -13.133395195007324

Token 551: '_node' (ID: 11390)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00864282064139843
    2. ' =' → logprob: -4.758642673492432
    3. '=node' → logprob: -11.00864315032959
    4. '_idx' → logprob: -11.63364315032959
    5. '=
' → logprob: -13.63364315032959
    6. '_=' → logprob: -14.63364315032959
    7. '=_' → logprob: -14.75864315032959
    8. 'idx' → logprob: -15.00864315032959
    9. '_' → logprob: -16.008642196655273
    10. '_index' → logprob: -16.258642196655273

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692904472351074
    2. '=' → logprob: -2.1269290447235107
    3. '=node' → logprob: -14.00192928314209
    4. ' =
' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '=root' → logprob: -17.626928329467773
    7. ',' → logprob: -18.251928329467773
    8. '=
' → logprob: -18.376928329467773
    9. '   ' → logprob: -19.376928329467773
    10. '＝' → logprob: -19.501928329467773

Token 553: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002475777640938759
    2. ' node' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.75247573852539
    4. '	node' → logprob: -18.25247573852539
    5. '(node' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.62747573852539
    7. '[node' → logprob: -20.12747573852539
    8. 'Node' → logprob: -20.87747573852539
    9. '  ' → logprob: -21.50247573852539
    10. '=node' → logprob: -21.87747573852539

Token 554: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.08540493994951248
    2. 'node' → logprob: -2.585404872894287
    3. 'list' → logprob: -5.085404872894287
    4. 'List' → logprob: -8.585405349731445
    5. '[node' → logprob: -10.210405349731445
    6. '_node' → logprob: -10.585405349731445
    7. 'root' → logprob: -10.835405349731445
    8. '(node' → logprob: -10.835405349731445
    9. ' node' → logprob: -11.460405349731445
    10. '=node' → logprob: -12.835405349731445

Token 555: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -6.704273118884885e-07
    2. 'root' → logprob: -14.375000953674316
    3. '[' → logprob: -18.375
    4. ' [' → logprob: -18.625
    5. '(root' → logprob: -20.5
    6. ' root' → logprob: -21.75
    7. '
' → logprob: -22.0
    8. '=root' → logprob: -22.25
    9. '[int' → logprob: -22.875
    10. '[node' → logprob: -23.25

Token 556: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0065251803025603294
    2. 'root' → logprob: -5.756525039672852
    3. 'idx' → logprob: -6.006525039672852
    4. '[root' → logprob: -7.256525039672852
    5. '_root' → logprob: -9.256525039672852
    6. 'Idx' → logprob: -10.756525039672852
    7. 'index' → logprob: -11.631525039672852
    8. '(root' → logprob: -11.756525039672852
    9. '[' → logprob: -12.256525039672852
    10. ']' → logprob: -12.381525039672852

Token 557: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030020661652088165
    2. ']' → logprob: -6.378002166748047
    3. ')
' → logprob: -7.253002166748047
    4. '   ' → logprob: -8.503002166748047
    5. '
' → logprob: -8.628002166748047
    6. 'def' → logprob: -9.003002166748047
    7. ' )' → logprob: -10.503002166748047
    8. '<|end|>' → logprob: -10.878002166748047
    9. ')

' → logprob: -11.003002166748047
    10. ')return' → logprob: -11.878002166748047

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.476815402507782
    2. 'return' → logprob: -0.976815402507782
    3. 'def' → logprob: -6.226815223693848
    4. ' return' → logprob: -7.601815223693848
    5. '	return' → logprob: -8.351815223693848
    6. 'import' → logprob: -11.351815223693848
    7. 'print' → logprob: -13.101815223693848
    8. '  ' → logprob: -13.101815223693848
    9. '#' → logprob: -13.226815223693848
    10. '
' → logprob: -13.601815223693848

Token 559: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0004294771933928132
    2. 'print' → logprob: -8.250429153442383
    3. '   ' → logprob: -8.750429153442383
    4. ' return' → logprob: -11.625429153442383
    5. 'pre' → logprob: -15.375429153442383
    6. '#' (adapté à ' #') → logprob: -16.000429153442383
    7. '
' → logprob: -16.250429153442383
    8. 'for' → logprob: -16.375429153442383
    9. '	return' → logprob: -16.625429153442383
    10. 'def' → logprob: -16.625429153442383

Token 560: ' tree' (ID: 8165)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3513396382331848
    2. 'return' → logprob: -1.22633957862854
    3. ' return' → logprob: -6.851339817047119
    4. ' print' → logprob: -7.351339817047119
    5. 'def' → logprob: -7.476339817047119
    6. '   ' → logprob: -7.476339817047119
    7. '#' → logprob: -10.351339340209961
    8. '#print' → logprob: -11.351339340209961
    9. 'if' → logprob: -12.226339340209961
    10. '
' → logprob: -12.351339340209961

Token 561: ' walk' (ID: 5229)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9582799077033997
    2. 'return' → logprob: -1.3332798480987549
    3. '=' → logprob: -2.083279848098755
    4. ' return' → logprob: -2.833279848098755
    5. '   ' → logprob: -3.208279848098755
    6. ' traversal' → logprob: -3.208279848098755
    7. '_root' → logprob: -3.333279848098755
    8. 'root' → logprob: -4.458280086517334
    9. 'def' → logprob: -4.583280086517334
    10. '
' → logprob: -4.708280086517334

Token 562: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05899795517325401
    2. '   ' → logprob: -3.058997869491577
    3. ' print' → logprob: -5.058998107910156
    4. '
' → logprob: -5.933998107910156
    5. 'return' → logprob: -7.183998107910156
    6. 'pre' → logprob: -8.058998107910156
    7. '    
' → logprob: -9.558998107910156
    8. ' pre' → logprob: -9.808998107910156
    9. 'def' → logprob: -9.933998107910156
    10. ' return' → logprob: -10.433998107910156

Token 563: ' ' (ID: 220)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.037475328892469406
    2. 'root' → logprob: -3.537475347518921
    3. 'order' → logprob: -6.287475109100342
    4. ' preorder' → logprob: -6.662475109100342
    5. '['' → logprob: -6.787475109100342
    6. 'Pre' → logprob: -7.287475109100342
    7. 'print' → logprob: -7.787475109100342
    8. 'depth' → logprob: -7.912475109100342
    9. 'main' → logprob: -8.0374755859375
    10. ''' → logprob: -8.0374755859375

Token 564: '3' (ID: 18)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.025510050356388092
    2. 'root' → logprob: -4.025509834289551
    3. '['' → logprob: -5.900509834289551
    4. 'Pre' → logprob: -6.400509834289551
    5. ''' → logprob: -6.775509834289551
    6. 'order' → logprob: -7.650509834289551
    7. 'print' → logprob: -8.15050983428955
    8. ' preorder' → logprob: -8.40050983428955
    9. 'depth' → logprob: -8.40050983428955
    10. '[root' → logprob: -8.90050983428955

Token 565: ' ways' (ID: 6984)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6488150954246521
    2. 'orders' → logprob: -1.2738151550292969
    3. 'order' → logprob: -2.273815155029297
    4. 'tr' → logprob: -3.523815155029297
    5. '
' → logprob: -3.523815155029297
    6. ' orders' → logprob: -4.523815155029297
    7. 'lines' → logprob: -5.148815155029297
    8. 'ways' → logprob: -5.523815155029297
    9. 'types' → logprob: -6.023815155029297
    10. 'for' → logprob: -6.523815155029297

Token 566: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00766127509996295
    2. 'print' → logprob: -4.88266134262085
    3. ' print' → logprob: -10.757660865783691
    4. '
' → logprob: -11.382660865783691
    5. '    
' → logprob: -11.757660865783691
    6. 'return' → logprob: -11.882660865783691
    7. '```' → logprob: -12.507660865783691
    8. 'def' → logprob: -12.757660865783691
    9. '#print' → logprob: -14.632660865783691
    10. ' return' → logprob: -15.507660865783691

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002368274377658963
    2. 'print' → logprob: -6.127368450164795
    3. '
' → logprob: -8.877367973327637
    4. '    
' → logprob: -10.252367973327637
    5. 'def' → logprob: -12.877367973327637
    6. ' print' → logprob: -13.252367973327637
    7. 'return' → logprob: -13.377367973327637
    8. '```' → logprob: -13.502367973327637
    9. '#print' → logprob: -15.002367973327637
    10. '#' → logprob: -15.502367973327637

Token 568: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.889424836728722e-05
    2. 'return' → logprob: -9.250099182128906
    3. ' print' → logprob: -13.875099182128906
    4. 'def' → logprob: -13.875099182128906
    5. '
' → logprob: -15.125099182128906
    6. '#print' → logprob: -15.625099182128906
    7. 'if' → logprob: -16.125099182128906
    8. 'pre' → logprob: -16.125099182128906
    9. '#' → logprob: -16.375099182128906
    10. '   ' → logprob: -17.000099182128906

Token 569: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2519380748271942
    2. '("' → logprob: -1.5019381046295166
    3. '(' → logprob: -11.626937866210938
    4. '   ' → logprob: -16.876937866210938
    5. ' ("' → logprob: -17.876937866210938
    6. ' ('' → logprob: -18.126937866210938
    7. '(
' → logprob: -18.126937866210938
    8. '("""' → logprob: -18.376937866210938
    9. '(('' → logprob: -18.501937866210938
    10. '(f' → logprob: -18.626937866210938

Token 570: 'Pre' (ID: 4319)
  Prédit: 'Pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pre' → logprob: -0.0004058858612552285
    2. ''' → logprob: -8.375406265258789
    3. '"' → logprob: -8.750406265258789
    4. '('' → logprob: -11.625406265258789
    5. 'pre' → logprob: -13.000406265258789
    6. ' Pre' → logprob: -13.625406265258789
    7. '("' → logprob: -14.000406265258789
    8. 'Post' → logprob: -14.125406265258789
    9. ' preorder' → logprob: -14.875406265258789
    10. ''''' → logprob: -15.250406265258789

Token 571: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: 0.0
    2. ' order' → logprob: -19.25
    3. 'Order' → logprob: -20.625
    4. 'print' → logprob: -21.125
    5. 'oder' → logprob: -21.125
    6. 'ord' → logprob: -21.75
    7. 'ordering' → logprob: -22.25
    8. 'orde' → logprob: -22.375
    9. '
' → logprob: -22.625
    10. ''' → logprob: -23.25

Token 572: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.018267584964632988
    2. '')' → logprob: -4.018267631530762
    3. '')
' → logprob: -9.268267631530762
    4. '')

' → logprob: -11.268267631530762
    5. '\n' → logprob: -11.768267631530762
    6. '")
' → logprob: -13.893267631530762
    7. ':')
' → logprob: -14.393267631530762
    8. ''' → logprob: -14.768267631530762
    9. ' ')
' → logprob: -14.768267631530762
    10. '');
' → logprob: -15.893267631530762

Token 573: '   ' (ID: 271)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.3885722756385803
    2. ' pre' → logprob: -1.1385722160339355
    3. '   ' → logprob: -6.3885722160339355
    4. '(pre' → logprob: -11.388572692871094
    5. '	pre' → logprob: -12.138572692871094
    6. ' preorder' → logprob: -13.388572692871094
    7. '_pre' → logprob: -14.763572692871094
    8. ' ' → logprob: -15.888572692871094
    9. '.pre' → logprob: -16.013572692871094
    10. 'preter' → logprob: -16.513572692871094

Token 574: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -2.15310683415737e-05
    2. ' pre' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.37502098083496
    4. '(pre' → logprob: -19.87502098083496
    5. 'root' → logprob: -20.00002098083496
    6. 'print' → logprob: -20.25002098083496
    7. '	pre' → logprob: -20.25002098083496
    8. '_pre' → logprob: -21.00002098083496
    9. '
' → logprob: -21.75002098083496
    10. 'Pre' → logprob: -22.62502098083496

Token 575: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -4.961759259458631e-06
    2. 'parse' → logprob: -12.250004768371582
    3. '_' → logprob: -17.7500057220459
    4. '_parser' → logprob: -17.8750057220459
    5. '_print' → logprob: -18.1250057220459
    6. 'Parse' → logprob: -18.3750057220459
    7. '_PARSE' → logprob: -18.6250057220459
    8. '_par' → logprob: -18.7500057220459
    9. '_Parse' → logprob: -19.6250057220459
    10. '=parse' → logprob: -20.0000057220459

Token 576: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -6.704273118884885e-07
    2. 'root' → logprob: -14.500000953674316
    3. '(' → logprob: -16.625
    4. '[root' → logprob: -18.75
    5. ' root' → logprob: -20.0
    6. ' (' → logprob: -21.75
    7. '(ROOT' → logprob: -22.0
    8. '(node' → logprob: -22.0
    9. '	root' → logprob: -22.125
    10. '=root' → logprob: -22.125

Token 577: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.384836888173595e-05
    2. 'node' → logprob: -9.7500638961792
    3. ')' → logprob: -12.6250638961792
    4. ')_' → logprob: -14.6250638961792
    5. '(node' → logprob: -14.7500638961792
    6. '_NODE' → logprob: -15.7500638961792
    7. '```' → logprob: -15.7500638961792
    8. 'Node' → logprob: -15.7500638961792
    9. '
' → logprob: -16.000062942504883
    10. 'parse' → logprob: -16.125062942504883

Token 578: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.316135048866272
    2. ')
' → logprob: -1.816135048866272
    3. '   ' → logprob: -2.3161349296569824
    4. '
' → logprob: -4.816134929656982
    5. ')' → logprob: -6.566134929656982
    6. '()
' → logprob: -9.44113540649414
    7. '    
' → logprob: -9.81613540649414
    8. ' print' → logprob: -9.94113540649414
    9. '\n' → logprob: -11.31613540649414
    10. 'println' → logprob: -11.81613540649414

Token 579: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014869150705635548
    2. '   ' → logprob: -4.264869213104248
    3. '
' → logprob: -7.264869213104248
    4. '    
' → logprob: -12.88986873626709
    5. '\n' → logprob: -13.38986873626709
    6. ' print' → logprob: -13.76486873626709
    7. '\' → logprob: -15.01486873626709
    8. '	print' → logprob: -16.389869689941406
    9. '```' → logprob: -16.764869689941406
    10. '
' → logprob: -17.139869689941406

Token 580: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.4378848391061183e-05
    2. '   ' → logprob: -11.250014305114746
    3. '
' → logprob: -14.000014305114746
    4. ' print' → logprob: -14.500014305114746
    5. '\n' → logprob: -18.250015258789062
    6. '    
' → logprob: -18.375015258789062
    7. '	print' → logprob: -18.875015258789062
    8. '```' → logprob: -19.500015258789062
    9. '\' → logprob: -20.125015258789062
    10. 'println' → logprob: -22.000015258789062

Token 581: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014530897140503
    2. '()
' → logprob: -1.7014530897140503
    3. '()

' → logprob: -11.20145320892334
    4. '(' → logprob: -11.57645320892334
    5. '('' → logprob: -12.20145320892334
    6. '('\' → logprob: -12.45145320892334
    7. '()\' → logprob: -12.70145320892334
    8. '('')
' → logprob: -13.32645320892334
    9. ' ()' → logprob: -13.32645320892334
    10. '()
' → logprob: -13.95145320892334

Token 582: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. 'ndef' → logprob: -19.0
    3. 'nt' → logprob: -21.5
    4. ' n' → logprob: -21.875
    5. '\n' → logprob: -22.125
    6. 't' → logprob: -22.125
    7. 'ne' → logprob: -22.625
    8. 'b' → logprob: -23.5
    9. 'x' → logprob: -23.625
    10. 'newline' → logprob: -23.75

Token 583: ''' (ID: 6)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.0002624086628202349
    2. ''' → logprob: -9.250262260437012
    3. '')
' → logprob: -9.250262260437012
    4. '')' → logprob: -10.000262260437012
    5. '')

' → logprob: -10.750262260437012
    6. '\n' → logprob: -13.625262260437012
    7. 'n' → logprob: -14.625262260437012
    8. ' In' → logprob: -15.000262260437012
    9. '"In' → logprob: -15.250262260437012
    10. '''' → logprob: -16.000263214111328

Token 584: ' +' (ID: 659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06597169488668442
    2. 'In' → logprob: -2.815971612930298
    3. ')' → logprob: -6.440971851348877
    4. ')
' → logprob: -6.690971851348877
    5. '('' → logprob: -6.940971851348877
    6. '"In' → logprob: -9.065971374511719
    7. ''in' → logprob: -10.315971374511719
    8. ' '' → logprob: -11.190971374511719
    9. '   ' → logprob: -11.940971374511719
    10. '')' → logprob: -12.190971374511719

Token 585: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.3795937522663735e-05
    2. ' '' → logprob: -11.62502384185791
    3. '"In' → logprob: -11.75002384185791
    4. 'In' → logprob: -12.00002384185791
    5. '   ' → logprob: -14.50002384185791
    6. ' ' → logprob: -16.375022888183594
    7. '('' → logprob: -17.125022888183594
    8. '`' → logprob: -17.625022888183594
    9. '  ' → logprob: -17.750022888183594
    10. '
' → logprob: -17.750022888183594

Token 586: 'In' (ID: 637)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17999267578125
    2. 'In' → logprob: -1.80499267578125
    3. '('' → logprob: -9.42999267578125
    4. '"In' → logprob: -9.67999267578125
    5. 'Post' → logprob: -10.17999267578125
    6. '
' → logprob: -11.30499267578125
    7. ''post' → logprob: -11.30499267578125
    8. ' '' → logprob: -11.42999267578125
    9. ''in' → logprob: -11.55499267578125
    10. 'post' → logprob: -12.55499267578125

Token 587: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: 0.0
    2. 'Order' → logprob: -16.75
    3. ''' → logprob: -18.5
    4. 'orde' → logprob: -19.375
    5. ' order' → logprob: -20.0
    6. 'o' → logprob: -20.125
    7. '
' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. 'oder' → logprob: -21.0
    10. 'ordert' → logprob: -21.25

Token 588: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.003197204554453492
    2. '')' → logprob: -5.753197193145752
    3. '')
' → logprob: -11.37819766998291
    4. '')

' → logprob: -12.75319766998291
    5. ''' → logprob: -13.25319766998291
    6. '")
' → logprob: -13.37819766998291
    7. ')
' → logprob: -13.62819766998291
    8. ''
' → logprob: -15.12819766998291
    9. ' ')
' → logprob: -16.253196716308594
    10. '');
' → logprob: -16.378196716308594

Token 589: '   ' (ID: 271)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12067699432373047
    2. ' in' → logprob: -2.8706769943237305
    3. '   ' → logprob: -2.8706769943237305
    4. ')' → logprob: -8.62067699432373
    5. '
' → logprob: -9.74567699432373
    6. '	in' → logprob: -9.87067699432373
    7. '[in' → logprob: -11.49567699432373
    8. ' ' → logprob: -11.62067699432373
    9. ')
' → logprob: -11.87067699432373
    10. '(in' → logprob: -12.12067699432373

Token 590: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -1.700132997939363e-05
    2. ' in' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '
' → logprob: -17.125017166137695
    5. 'root' → logprob: -17.125017166137695
    6. ')' → logprob: -18.125017166137695
    7. 'node' → logprob: -19.375017166137695
    8. '```' → logprob: -19.750017166137695
    9. 'inode' → logprob: -20.000017166137695
    10. 'for' → logprob: -20.125017166137695

Token 591: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -3.8889261304575484e-06
    2. 'parse' → logprob: -12.500003814697266
    3. '_' → logprob: -17.625003814697266
    4. 'Parse' → logprob: -18.500003814697266
    5. '_print' → logprob: -18.625003814697266
    6. '_parser' → logprob: -18.750003814697266
    7. '_PARSE' → logprob: -18.875003814697266
    8. '_par' → logprob: -19.875003814697266
    9. '(parse' → logprob: -20.125003814697266
    10. '_Parse' → logprob: -20.250003814697266

Token 592: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -1.981667537620524e-06
    2. 'root' → logprob: -13.250001907348633
    3. '(' → logprob: -16.500001907348633
    4. '[root' → logprob: -17.000001907348633
    5. ' root' → logprob: -19.375001907348633
    6. '(
' → logprob: -20.625001907348633
    7. ' (' → logprob: -21.000001907348633
    8. '=root' → logprob: -21.625001907348633
    9. '	root' → logprob: -21.875001907348633
    10. '(ROOT' → logprob: -22.125001907348633

Token 593: '_node' (ID: 11390)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.09677407145500183
    2. 'root' → logprob: -2.846774101257324
    3. '_node' → logprob: -3.596774101257324
    4. 'node' → logprob: -5.471774101257324
    5. '[root' → logprob: -6.721774101257324
    6. ')' → logprob: -7.221774101257324
    7. 'parse' → logprob: -8.346774101257324
    8. '(node' → logprob: -8.721774101257324
    9. ' root' → logprob: -8.846774101257324
    10. 'Node' → logprob: -10.721774101257324

Token 594: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08798384666442871
    2. '   ' → logprob: -3.5879838466644287
    3. 'print' → logprob: -3.5879838466644287
    4. '()
' → logprob: -4.337984085083008
    5. ')' → logprob: -4.462984085083008
    6. '
' → logprob: -5.712984085083008
    7. '()' → logprob: -7.462984085083008
    8. '('\' → logprob: -8.462984085083008
    9. '())
' → logprob: -9.462984085083008
    10. ')\' → logprob: -10.212984085083008

Token 595: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007753237732686102
    2. '   ' → logprob: -7.250775337219238
    3. '
' → logprob: -10.375775337219238
    4. ' print' → logprob: -11.125775337219238
    5. '\n' → logprob: -11.250775337219238
    6. '('\' → logprob: -12.375775337219238
    7. '\' → logprob: -14.125775337219238
    8. ''\' → logprob: -14.875775337219238
    9. '```' → logprob: -15.000775337219238
    10. '+'\' → logprob: -15.375775337219238

Token 596: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00026765360962599516
    2. '\n' → logprob: -9.00026798248291
    3. '   ' → logprob: -9.62526798248291
    4. ' print' → logprob: -10.12526798248291
    5. '
' → logprob: -10.62526798248291
    6. '('\' → logprob: -11.75026798248291
    7. '\' → logprob: -12.50026798248291
    8. ''\' → logprob: -14.25026798248291
    9. '.print' → logprob: -14.50026798248291
    10. '	print' → logprob: -14.75026798248291

Token 597: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.62501335144043
    3. '('' → logprob: -12.37501335144043
    4. '()' → logprob: -15.62501335144043
    5. '("\' → logprob: -16.12501335144043
    6. '()
' → logprob: -16.12501335144043
    7. '(
' → logprob: -16.25001335144043
    8. ''\' → logprob: -17.50001335144043
    9. '(\' → logprob: -18.25001335144043
    10. '('')
' → logprob: -18.50001335144043

Token 598: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35261958837509155
    2. 'Post' → logprob: -1.3526196479797363
    3. 'post' → logprob: -3.9776196479797363
    4. ''' → logprob: -3.9776196479797363
    5. ''post' → logprob: -7.352619647979736
    6. '\n' → logprob: -8.102619171142578
    7. '_post' → logprob: -9.977619171142578
    8. ''\' → logprob: -10.352619171142578
    9. '
' → logprob: -10.352619171142578
    10. 'POST' → logprob: -11.102619171142578

Token 599: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006009971722960472
    2. 'Post' → logprob: -5.131010055541992
    3. ''post' → logprob: -9.881010055541992
    4. 'post' → logprob: -11.381010055541992
    5. '('' → logprob: -12.006010055541992
    6. ' '' → logprob: -12.006010055541992
    7. '@Post' → logprob: -14.006010055541992
    8. '
' → logprob: -14.131010055541992
    9. '<Post' → logprob: -14.131010055541992
    10. '"' → logprob: -14.131010055541992

Token 600: ' +' (ID: 659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18142053484916687
    2. '('' → logprob: -2.1814205646514893
    3. '+' → logprob: -4.05642032623291
    4. 'Post' → logprob: -4.18142032623291
    5. ' +' → logprob: -4.30642032623291
    6. ''post' → logprob: -5.43142032623291
    7. 'post' → logprob: -6.68142032623291
    8. '+'' → logprob: -7.43142032623291
    9. ')' → logprob: -8.80642032623291
    10. '(Post' → logprob: -9.05642032623291

Token 601: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.710618905955926e-05
    2. ' '' → logprob: -9.625097274780273
    3. ''post' → logprob: -10.625097274780273
    4. 'Post' → logprob: -12.500097274780273
    5. '('' → logprob: -13.375097274780273
    6. '"' → logprob: -14.125097274780273
    7. ' ' → logprob: -15.125097274780273
    8. 'post' → logprob: -16.250097274780273
    9. '   ' → logprob: -16.375097274780273
    10. '`' → logprob: -16.750097274780273

Token 602: 'Post' (ID: 4606)
  Prédit: 'Post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Post' → logprob: -7.219262624857947e-05
    2. 'post' → logprob: -9.750072479248047
    3. ''' → logprob: -11.375072479248047
    4. ''post' → logprob: -13.125072479248047
    5. '<Post' → logprob: -16.375072479248047
    6. 'POST' → logprob: -16.750072479248047
    7. 'Pre' → logprob: -17.625072479248047
    8. ' Post' → logprob: -17.625072479248047
    9. '_post' → logprob: -18.000072479248047
    10. '@Post' → logprob: -18.125072479248047

Token 603: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.9361264946837764e-07
    2. 'parse' → logprob: -16.625
    3. '_parse' → logprob: -17.375
    4. 'r' → logprob: -17.625
    5. '_order' → logprob: -17.75
    6. '```' → logprob: -18.25
    7. ' order' → logprob: -19.625
    8. 'Parse' → logprob: -19.625
    9. 'orde' → logprob: -20.375
    10. 'oder' → logprob: -20.375

Token 604: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.005248106550425291
    2. '')' → logprob: -5.255248069763184
    3. '')
' → logprob: -11.755248069763184
    4. ''' → logprob: -12.505248069763184
    5. '")
' → logprob: -14.130248069763184
    6. ''
' → logprob: -14.130248069763184
    7. '')

' → logprob: -14.255248069763184
    8. ')
' → logprob: -15.005248069763184
    9. ' ')
' → logprob: -15.255248069763184
    10. '\n' → logprob: -17.1302490234375

Token 605: '   ' (ID: 271)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.0015542630571871996
    2. '(post' → logprob: -6.501554489135742
    3. ' post' → logprob: -11.126554489135742
    4. '(' → logprob: -11.376554489135742
    5. ''post' → logprob: -11.876554489135742
    6. '
' → logprob: -12.001554489135742
    7. '_post' → logprob: -12.126554489135742
    8. '   ' → logprob: -13.126554489135742
    9. '(root' → logprob: -13.501554489135742
    10. '```' → logprob: -13.751554489135742

Token 606: ' post' (ID: 1926)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' (adapté à ' post') → logprob: 0.0
    2. ' post' → logprob: -19.125
    3. '
' → logprob: -22.875
    4. '```' → logprob: -23.125
    5. '(post' → logprob: -23.25
    6. 'print' → logprob: -23.375
    7. ''post' → logprob: -24.375
    8. '	post' → logprob: -25.0
    9. '$post' → logprob: -26.125
    10. '`' → logprob: -26.25

Token 607: '_parse' (ID: 51194)
  Prédit: '_parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: 0.0
    2. 'parse' → logprob: -17.0
    3. '_' → logprob: -18.75
    4. '_Parse' → logprob: -19.375
    5. '_PARSE' → logprob: -19.5
    6. 'Parse' → logprob: -19.625
    7. '_parser' → logprob: -19.625
    8. '\' → logprob: -20.0
    9. '_print' → logprob: -20.875
    10. ' _' → logprob: -21.25

Token 608: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.0002036595979006961
    2. 'root' → logprob: -8.500204086303711
    3. '[root' → logprob: -16.50020408630371
    4. ' root' → logprob: -18.12520408630371
    5. '(' → logprob: -18.50020408630371
    6. '=root' → logprob: -20.25020408630371
    7. '	root' → logprob: -20.37520408630371
    8. '(node' → logprob: -20.62520408630371
    9. '(ROOT' → logprob: -21.25020408630371
    10. '/root' → logprob: -21.62520408630371

Token 609: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.015146508812904358
    2. '(root' → logprob: -4.265146732330322
    3. 'node' → logprob: -7.765146732330322
    4. ')' → logprob: -8.390146255493164
    5. 'root' → logprob: -8.640146255493164
    6. '(node' → logprob: -9.390146255493164
    7. '[root' → logprob: -9.890146255493164
    8. '_root' → logprob: -11.140146255493164
    9. 'Node' → logprob: -13.015146255493164
    10. '[node' → logprob: -14.140146255493164

Token 610: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16864565014839172
    2. ')
' → logprob: -1.9186456203460693
    3. '(root' → logprob: -4.793645858764648
    4. 'root' → logprob: -10.043645858764648
    5. '(node' → logprob: -10.543645858764648
    6. '[root' → logprob: -11.043645858764648
    7. '   ' → logprob: -12.043645858764648
    8. ')

' → logprob: -12.793645858764648
    9. ')
' → logprob: -13.293645858764648
    10. '))' → logprob: -13.793645858764648

Token 611: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03015042468905449
    2. '<|end|>' → logprob: -4.655150413513184
    3. 'nodes' → logprob: -5.280150413513184
    4. 'input' → logprob: -5.655150413513184
    5. '\n' → logprob: -6.030150413513184
    6. '
' → logprob: -6.655150413513184
    7. ' if' → logprob: -6.780150413513184
    8. '[' → logprob: -6.905150413513184
    9. 'n' → logprob: -7.030150413513184
    10. 'def' → logprob: -7.280150413513184

Token 612: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.9823334813117981
    2. '\n' → logprob: -1.1073334217071533
    3. '<|end|>' → logprob: -1.7323334217071533
    4. 'if' → logprob: -2.9823334217071533
    5. '   ' → logprob: -3.4823334217071533
    6. '
' → logprob: -4.232333660125732
    7. '<|end|>' → logprob: -5.357333660125732
    8. '\' → logprob: -5.607333660125732
    9. '```' → logprob: -5.982333660125732
    10. '#!/' → logprob: -6.357333660125732

Token 613: '('' (ID: 706)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005438066087663174
    2. 'def' → logprob: -5.255437850952148
    3. 'n' → logprob: -9.130437850952148
    4. ' if' → logprob: -10.005437850952148
    5. '
' → logprob: -10.005437850952148
    6. '```' → logprob: -13.630437850952148
    7. '    
' → logprob: -13.880437850952148
    8. '#' → logprob: -14.130437850952148
    9. '  
' → logprob: -14.130437850952148
    10. ' 
' → logprob: -15.005437850952148

Token 614: '')

' (ID: 9735)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006030942313373089
    2. '
' → logprob: -6.131031036376953
    3. 'def' → logprob: -6.131031036376953
    4. ')' → logprob: -7.756031036376953
    5. '\n' → logprob: -8.131031036376953
    6. ' if' → logprob: -8.381031036376953
    7. '<|end|>' → logprob: -8.381031036376953
    8. '

' → logprob: -9.131031036376953
    9. '()' → logprob: -9.256031036376953
    10. ')

' → logprob: -9.881031036376953

Token 615: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010592036880552769
    2. 'n' → logprob: -4.760591983795166
    3. 'def' → logprob: -6.260591983795166
    4. 'N' → logprob: -10.635592460632324
    5. 'num' → logprob: -10.635592460632324
    6. '    
' → logprob: -11.885592460632324
    7. '
' → logprob: -12.385592460632324
    8. ' if' → logprob: -13.010592460632324
    9. 'node' → logprob: -13.010592460632324
    10. 'for' → logprob: -14.135592460632324

Token 616: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5878438353538513
    2. 'if' → logprob: -0.8378438353538513
    3. 'N' → logprob: -5.087843894958496
    4. 'node' → logprob: -6.087843894958496
    5. 'def' → logprob: -6.462843894958496
    6. 'num' → logprob: -6.462843894958496
    7. 'input' → logprob: -9.087843894958496
    8. 'for' → logprob: -9.462843894958496
    9. ' n' → logprob: -10.962843894958496
    10. 'number' → logprob: -11.587843894958496

Token 617: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014054712373763323
    2. 'n' → logprob: -7.251405239105225
    3. 'def' → logprob: -8.001405715942383
    4. 'node' → logprob: -8.001405715942383
    5. 'num' → logprob: -11.501405715942383
    6. 'for' → logprob: -11.501405715942383
    7. '9' → logprob: -13.126405715942383
    8. ' if' → logprob: -14.376405715942383
    9. 'int' → logprob: -14.376405715942383
    10. '
' → logprob: -14.501405715942383

Token 618: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015041481237858534
    2. 'list' → logprob: -6.501503944396973
    3. 's' → logprob: -14.626503944396973
    4. 'List' → logprob: -14.751503944396973
    5. 'array' → logprob: -14.876503944396973
    6. '_nodes' → logprob: -15.376503944396973
    7. '_array' → logprob: -16.12650489807129
    8. 'import' → logprob: -16.75150489807129
    9. 'lst' → logprob: -17.00150489807129
    10. '[]' → logprob: -17.12650489807129

Token 619: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0498841255903244
    2. 'n' → logprob: -3.049884080886841
    3. 'def' → logprob: -7.54988431930542
    4. 'node' → logprob: -7.67488431930542
    5. 'N' → logprob: -8.799883842468262
    6. 'num' → logprob: -9.049883842468262
    7. 'for' → logprob: -10.424883842468262
    8. 'input' → logprob: -12.549883842468262
    9. ' if' → logprob: -13.424883842468262
    10. 'data' → logprob: -14.674883842468262

Token 620: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01196560449898243
    2. 'def' → logprob: -5.011965751647949
    3. 'n' → logprob: -5.261965751647949
    4. 'node' → logprob: -10.63696575164795
    5. 'num' → logprob: -11.13696575164795
    6. 'N' → logprob: -11.51196575164795
    7. 'input' → logprob: -13.51196575164795
    8. ' if' → logprob: -14.26196575164795
    9. 'data' → logprob: -15.26196575164795
    10. 'for' → logprob: -15.38696575164795

Token 621: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16023103892803192
    2. '__' → logprob: -1.9102309942245483
    3. 'name' → logprob: -11.91023063659668
    4. ' ' → logprob: -16.66023063659668
    5. ' "__' → logprob: -17.16023063659668
    6. '_name' → logprob: -17.53523063659668
    7. 'Name' → logprob: -18.28523063659668
    8. '___' → logprob: -18.28523063659668
    9. ' '__' → logprob: -18.28523063659668
    10. '/__' → logprob: -18.41023063659668

Token 622: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25421735644340515
    2. '__' → logprob: -1.5042173862457275
    3. 'name' → logprob: -6.379217147827148
    4. ' ==' → logprob: -7.879217147827148
    5. '.__' → logprob: -9.129217147827148
    6. 'if' → logprob: -10.629217147827148
    7. '_name' → logprob: -10.879217147827148
    8. '==' → logprob: -11.129217147827148
    9. '```' → logprob: -11.629217147827148
    10. ' if' → logprob: -11.754217147827148

Token 623: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.875000953674316
    3. ' ==' → logprob: -15.125000953674316
    4. ' __' → logprob: -15.750000953674316
    5. '__
' → logprob: -15.750000953674316
    6. '__.' → logprob: -15.750000953674316
    7. '__.__' → logprob: -15.875000953674316
    8. 'name' → logprob: -16.500001907348633
    9. '___' → logprob: -17.625001907348633
    10. '____' → logprob: -18.750001907348633

Token 624: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.113290095934644e-05
    2. ' ==' → logprob: -10.125081062316895
    3. '==' → logprob: -10.250081062316895
    4. '__.' → logprob: -13.000081062316895
    5. '__.__' → logprob: -13.375081062316895
    6. ' __' → logprob: -14.750081062316895
    7. '___' → logprob: -14.875081062316895
    8. '.__' → logprob: -15.375081062316895
    9. '__":
' → logprob: -15.375081062316895
    10. '__
' → logprob: -15.500081062316895

Token 625: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6933905482292175
    2. ''' → logprob: -0.6933905482292175
    3. ' "__' → logprob: -9.068390846252441
    4. '__' → logprob: -9.443390846252441
    5. ' '__' → logprob: -9.943390846252441
    6. ''name' → logprob: -15.818390846252441
    7. '   ' → logprob: -15.818390846252441
    8. ''_' → logprob: -15.818390846252441
    9. '"name' → logprob: -16.318389892578125
    10. ' ' → logprob: -16.568389892578125

Token 626: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. '_main' → logprob: -13.875000953674316
    3. 'name' → logprob: -15.125000953674316
    4. '__' → logprob: -17.375001907348633
    5. 'ma' → logprob: -18.125001907348633
    6. ' main' → logprob: -18.125001907348633
    7. 'm' → logprob: -19.375001907348633
    8. '(main' → logprob: -20.125001907348633
    9. 'MAIN' → logprob: -20.250001907348633
    10. '-main' → logprob: -21.125001907348633

Token 627: '__':
' (ID: 39314)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5361390113830566
    2. ':' → logprob: -1.5361390113830566
    3. '__':
' → logprob: -2.2861390113830566
    4. '__' → logprob: -2.7861390113830566
    5. '__:' → logprob: -4.286139011383057
    6. '():
' → logprob: -4.286139011383057
    7. '__":
' → logprob: -4.786139011383057
    8. '):
' → logprob: -8.786138534545898
    9. '__
' → logprob: -9.161138534545898
    10. '   ' → logprob: -9.161138534545898

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022674205247312784
    2. 'n' → logprob: -6.127267360687256
    3. '	n' → logprob: -10.127267837524414
    4. 'input' → logprob: -10.377267837524414
    5. 'num' → logprob: -12.877267837524414
    6. '```' → logprob: -12.877267837524414
    7. ' n' → logprob: -13.127267837524414
    8. 'import' → logprob: -13.752267837524414
    9. '    
' → logprob: -14.127267837524414
    10. 'data' → logprob: -14.752267837524414

Token 629: ' _' (ID: 1175)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07024462521076202
    2. 'N' → logprob: -3.320244550704956
    3. '   ' → logprob: -4.070244789123535
    4. 'num' → logprob: -4.820244789123535
    5. 'node' → logprob: -5.695244789123535
    6. 'input' → logprob: -6.070244789123535
    7. ' n' → logprob: -8.070244789123535
    8. 'size' → logprob: -8.945244789123535
    9. 'data' → logprob: -9.320244789123535
    10. 'import' → logprob: -9.320244789123535

Token 630: 'input' (ID: 2586)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.1253750324249268
    2. '=' → logprob: -1.3753750324249268
    3. ' =' → logprob: -1.7503750324249268
    4. 'n' → logprob: -2.0003750324249268
    5. 'input' → logprob: -3.0003750324249268
    6. 'size' → logprob: -4.000374794006348
    7. 'lines' → logprob: -4.250374794006348
    8. 'import' → logprob: -4.500374794006348
    9. '_array' → logprob: -5.375374794006348
    10. '_lines' → logprob: -6.000374794006348

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04512551799416542
    2. ' =' → logprob: -3.2951254844665527
    3. '_lines' → logprob: -5.170125484466553
    4. '=sys' → logprob: -7.670125484466553
    5. '_=' → logprob: -8.545125961303711
    6. '=[]' → logprob: -8.920125961303711
    7. '_' → logprob: -9.045125961303711
    8. '()' → logprob: -9.170125961303711
    9. '=input' → logprob: -9.795125961303711
    10. 's' → logprob: -9.920125961303711

Token 632: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008394040050916374
    2. ' sys' → logprob: -7.2508392333984375
    3. '[' → logprob: -9.000839233398438
    4. ' [' → logprob: -13.500839233398438
    5. '(sys' → logprob: -13.625839233398438
    6. 'list' → logprob: -14.000839233398438
    7. '[s' → logprob: -14.125839233398438
    8. '[int' → logprob: -14.500839233398438
    9. '[list' → logprob: -14.500839233398438
    10. '"""' → logprob: -15.250839233398438

Token 633: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.380904672667384e-05
    2. '.argv' → logprob: -10.625033378601074
    3. '.stdout' → logprob: -12.125033378601074
    4. 'stdin' → logprob: -13.000033378601074
    5. '.' → logprob: -14.000033378601074
    6. '.std' → logprob: -14.625033378601074
    7. '.stderr' → logprob: -16.00003433227539
    8. ' stdin' → logprob: -17.00003433227539
    9. '.st' → logprob: -17.12503433227539
    10. 'import' → logprob: -17.12503433227539

Token 634: '.readlines' (ID: 92237)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2078571766614914
    2. '.readlines' → logprob: -1.7078571319580078
    3. '.read' → logprob: -6.207857131958008
    4. '_lines' → logprob: -6.207857131958008
    5. 'lines' → logprob: -6.457857131958008
    6. 'read' → logprob: -7.707857131958008
    7. 'input' → logprob: -8.957857131958008
    8. 'buffer' → logprob: -9.707857131958008
    9. '.stdin' → logprob: -10.457857131958008
    10. '_read' → logprob: -10.707857131958008

Token 635: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000241801084484905
    2. '()[' → logprob: -8.750242233276367
    3. '()
' → logprob: -9.500242233276367
    4. '())' → logprob: -13.000242233276367
    5. '()]' → logprob: -13.250242233276367
    6. '(' → logprob: -13.750242233276367
    7. ' ()' → logprob: -13.875242233276367
    8. '()`' → logprob: -14.250242233276367
    9. '()\' → logprob: -15.250242233276367
    10. '()

' → logprob: -15.250242233276367

Token 636: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14749208092689514
    2. '   ' → logprob: -2.1474921703338623
    3. 'N' → logprob: -4.772491931915283
    4. 'node' → logprob: -5.272491931915283
    5. 'num' → logprob: -5.272491931915283
    6. '_n' → logprob: -6.647491931915283
    7. 'size' → logprob: -9.397492408752441
    8. 'count' → logprob: -9.772492408752441
    9. '
' → logprob: -10.022492408752441
    10. ' n' → logprob: -10.022492408752441

Token 637: ' array' (ID: 2644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18603351712226868
    2. 'node' → logprob: -2.4360334873199463
    3. 'N' → logprob: -2.6860334873199463
    4. 'num' → logprob: -4.561033725738525
    5. 'size' → logprob: -6.686033725738525
    6. '_n' → logprob: -7.061033725738525
    7. '   ' → logprob: -7.436033725738525
    8. 'count' → logprob: -8.561033248901367
    9. 'length' → logprob: -8.936033248901367
    10. '_node' → logprob: -8.936033248901367

Token 638: '_length' (ID: 11514)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759578943252563
    2. ' =' → logprob: -0.8259578943252563
    3. '=_' → logprob: -12.075958251953125
    4. '=input' → logprob: -12.200958251953125
    5. '=array' → logprob: -13.075958251953125
    6. '   ' → logprob: -13.575958251953125
    7. '=[]' → logprob: -13.825958251953125
    8. '=line' → logprob: -13.950958251953125
    9. '=int' → logprob: -14.200958251953125
    10. '＝' → logprob: -14.825958251953125

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743819236755371
    2. ' =' → logprob: -0.9743819236755371
    3. '=int' → logprob: -8.099382400512695
    4. '   ' → logprob: -13.974382400512695
    5. '=len' → logprob: -16.099382400512695
    6. ' ' → logprob: -16.099382400512695
    7. '＝' → logprob: -16.349382400512695
    8. '  ' → logprob: -17.724382400512695
    9. '=_' → logprob: -18.599382400512695
    10. '    ' → logprob: -19.099382400512695

Token 640: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7848862373502925e-05
    2. ' int' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.500027656555176
    4. 'len' → logprob: -18.500028610229492
    5. '[int' → logprob: -21.000028610229492
    6. '  ' → logprob: -21.250028610229492
    7. '	int' → logprob: -21.625028610229492
    8. '(int' → logprob: -21.750028610229492
    9. '=int' → logprob: -21.875028610229492
    10. ' ' → logprob: -22.750028610229492

Token 641: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.008661724627017975
    2. '_input' → logprob: -4.75866174697876
    3. '(' → logprob: -10.008661270141602
    4. ' _' → logprob: -14.008661270141602
    5. '_array' → logprob: -14.133661270141602
    6. ' (_' → logprob: -15.758661270141602
    7. '_' → logprob: -16.3836612701416
    8. '('' → logprob: -16.6336612701416
    9. '(
' → logprob: -16.8836612701416
    10. '(Input' → logprob: -17.0086612701416

Token 642: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. '_input' → logprob: -5.753177642822266
    3. ' input' → logprob: -16.128177642822266
    4. '(input' → logprob: -18.003177642822266
    5. 'array' → logprob: -18.628177642822266
    6. 'import' → logprob: -21.003177642822266
    7. '<input' → logprob: -21.378177642822266
    8. '.input' → logprob: -21.628177642822266
    9. 'int' → logprob: -21.878177642822266
    10. 'inp' → logprob: -21.878177642822266

Token 643: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.625000953674316
    3. '()[' → logprob: -18.000001907348633
    4. '0' → logprob: -18.250001907348633
    5. '.pop' → logprob: -18.375001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '```' → logprob: -19.250001907348633
    8. '[
' → logprob: -20.625001907348633
    9. ')' → logprob: -21.625001907348633
    10. '   ' → logprob: -21.750001907348633

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '1' → logprob: -20.75
    4. '   ' → logprob: -20.75
    5. '[' → logprob: -21.25
    6. '
' → logprob: -23.5
    7. '00' → logprob: -24.0
    8. '000' → logprob: -24.5
    9. '۰' → logprob: -24.5
    10. '```' → logprob: -24.75

Token 645: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.010752083733677864
    2. '].' → logprob: -4.635752201080322
    3. '.strip' → logprob: -7.635752201080322
    4. ')' → logprob: -7.760752201080322
    5. ']' → logprob: -9.760751724243164
    6. '])
' → logprob: -11.635751724243164
    7. '[' → logprob: -12.010751724243164
    8. 'strip' → logprob: -12.510751724243164
    9. ').' → logprob: -12.635751724243164
    10. '().' → logprob: -13.385751724243164

Token 646: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.25490012764930725
    2. '   ' → logprob: -1.5049000978469849
    3. '_node' → logprob: -6.004899978637695
    4. '_input' → logprob: -8.629899978637695
    5. 'array' → logprob: -9.379899978637695
    6. 'input' → logprob: -9.754899978637695
    7. ' node' → logprob: -10.129899978637695
    8. 'data' → logprob: -10.254899978637695
    9. 'lines' → logprob: -10.379899978637695
    10. '_lines' → logprob: -10.504899978637695

Token 647: ' array' (ID: 2644)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0033221999183297157
    2. '_input' → logprob: -6.878322124481201
    3. 'input' → logprob: -7.753322124481201
    4. 'lines' → logprob: -7.753322124481201
    5. '_array' → logprob: -7.753322124481201
    6. '_node' → logprob: -7.878322124481201
    7. 'data' → logprob: -8.50332260131836
    8. 'array' (adapté à ' array') → logprob: -8.62832260131836
    9. '_lines' → logprob: -9.75332260131836
    10. 'inputs' → logprob: -10.12832260131836

Token 648: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07950939983129501
    2. ' =' → logprob: -2.5795094966888428
    3. '_lines' → logprob: -7.579509258270264
    4. '_data' → logprob: -9.329509735107422
    5. '=_' → logprob: -11.954509735107422
    6. '_array' → logprob: -13.329509735107422
    7. '_list' → logprob: -13.454509735107422
    8. '_values' → logprob: -13.579509735107422
    9. '_raw' → logprob: -13.704509735107422
    10. '   ' → logprob: -13.954509735107422

Token 649: ' list' (ID: 1562)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00036418659146875143
    2. '[_' → logprob: -8.625364303588867
    3. ' _' → logprob: -9.000364303588867
    4. '[' → logprob: -10.750364303588867
    5. ' [' → logprob: -10.875364303588867
    6. '   ' → logprob: -11.625364303588867
    7. '[input' → logprob: -11.750364303588867
    8. '[i' → logprob: -12.875364303588867
    9. ' ' → logprob: -15.250364303588867
    10. ' [_' → logprob: -15.375364303588867

Token 650: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02980869635939598
    2. 'map' → logprob: -3.529808759689331
    3. '(x' → logprob: -11.02980899810791
    4. '_map' → logprob: -11.15480899810791
    5. '(' → logprob: -11.77980899810791
    6. '(_' → logprob: -12.27980899810791
    7. '(line' → logprob: -12.65480899810791
    8. '_' → logprob: -12.77980899810791
    9. '(zip' → logprob: -12.90480899810791
    10. '(filter' → logprob: -13.65480899810791

Token 651: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.1229708343744278
    2. '(lambda' → logprob: -2.3729708194732666
    3. '(list' → logprob: -3.8729708194732666
    4. '(int' → logprob: -6.372971057891846
    5. '(tuple' → logprob: -13.247970581054688
    6. 'list' → logprob: -14.747970581054688
    7. '(None' → logprob: -14.747970581054688
    8. '(len' → logprob: -15.122970581054688
    9. '(strip' → logprob: -15.497970581054688
    10. '(' → logprob: -15.872970581054688

Token 652: ' x' (ID: 1215)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20503056049346924
    2. 'lambda' → logprob: -1.7050305604934692
    3. 'list' → logprob: -6.20503044128418
    4. 'x' → logprob: -7.33003044128418
    5. '(lambda' → logprob: -7.95503044128418
    6. 'line' → logprob: -8.08003044128418
    7. '(str' → logprob: -8.45503044128418
    8. ' str' → logprob: -10.45503044128418
    9. 's' → logprob: -10.95503044128418
    10. 'l' → logprob: -11.95503044128418

Token 653: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1065104603767395
    2. 'str' → logprob: -3.1065104007720947
    3. 'lambda' → logprob: -3.6065104007720947
    4. ':' → logprob: -3.7315104007720947
    5. ':str' → logprob: -5.981510639190674
    6. ' x' → logprob: -7.231510639190674
    7. 'line' → logprob: -7.356510639190674
    8. '(lambda' → logprob: -7.481510639190674
    9. '(str' → logprob: -8.356510162353516
    10. 'split' → logprob: -8.981510162353516

Token 654: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.145118848304264e-05
    2. 'str' → logprob: -10.500051498413086
    3. 'lambda' → logprob: -10.750051498413086
    4. ' x' → logprob: -13.000051498413086
    5. 'list' → logprob: -15.875051498413086
    6. '(lambda' → logprob: -19.500051498413086
    7. 'tuple' → logprob: -19.750051498413086
    8. '(x' → logprob: -19.750051498413086
    9. ' lambda' → logprob: -20.750051498413086
    10. ' str' → logprob: -20.875051498413086

Token 655: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.3588525056838989
    2. '.split' → logprob: -1.233852505683899
    3. '.rstrip' → logprob: -4.733852386474609
    4. 'x' → logprob: -6.858852386474609
    5. '.' → logprob: -8.73385238647461
    6. ' .' → logprob: -8.98385238647461
    7. 'split' → logprob: -9.23385238647461
    8. '.trim' → logprob: -10.48385238647461
    9. 'strip' → logprob: -10.60885238647461
    10. '(x' → logprob: -11.35885238647461

Token 656: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.013231169432401657
    2. ',' → logprob: -4.63823127746582
    3. ',x' → logprob: -6.38823127746582
    4. '('\' → logprob: -7.13823127746582
    5. '()' → logprob: -7.63823127746582
    6. '('' → logprob: -8.76323127746582
    7. '(),
' → logprob: -9.13823127746582
    8. '(),'' → logprob: -9.26323127746582
    9. '(x' → logprob: -10.01323127746582
    10. '()
' → logprob: -10.26323127746582

Token 657: ' _' (ID: 1175)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0012144023785367608
    2. '   ' → logprob: -6.876214504241943
    3. ' _' → logprob: -8.626214027404785
    4. '    ' → logprob: -14.001214027404785
    5. '  ' → logprob: -14.751214027404785
    6. '_array' → logprob: -15.376214027404785
    7. ' ' → logprob: -15.626214027404785
    8. '<Input' → logprob: -16.0012149810791
    9. '_output' → logprob: -16.3762149810791
    10. '_INPUT' → logprob: -17.0012149810791

Token 658: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.1424973713001236e-05
    2. '_input' → logprob: -10.375031471252441
    3. ' input' → logprob: -16.750030517578125
    4. '.input' → logprob: -18.125030517578125
    5. 'array' → logprob: -18.125030517578125
    6. '(input' → logprob: -19.625030517578125
    7. '<input' → logprob: -19.875030517578125
    8. '	input' → logprob: -20.000030517578125
    9. 'Input' → logprob: -20.125030517578125
    10. '1' → logprob: -20.500030517578125

Token 659: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.052070315927267075
    2. '1' → logprob: -3.052070379257202
    3. '   ' → logprob: -6.552070140838623
    4. '(' → logprob: -6.927070140838623
    5. ',' → logprob: -7.427070140838623
    6. 'range' → logprob: -8.177070617675781
    7. ')[' → logprob: -10.052070617675781
    8. '=' → logprob: -10.552070617675781
    9. ')' → logprob: -10.677070617675781
    10. ' ' → logprob: -11.427070617675781

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. '   ' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.87502384185791
    4. '
' → logprob: -14.37502384185791
    5. 'range' → logprob: -14.75002384185791
    6. '  ' → logprob: -15.50002384185791
    7. '```' → logprob: -16.250022888183594
    8. '       ' → logprob: -16.500022888183594
    9. '    ' → logprob: -16.500022888183594
    10. '(' → logprob: -16.750022888183594

Token 661: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03424305096268654
    2. '))' → logprob: -3.409243106842041
    3. '   ' → logprob: -8.659242630004883
    4. 'array' → logprob: -8.659242630004883
    5. '[array' → logprob: -10.159242630004883
    6. ']))' → logprob: -10.284242630004883
    7. ',array' → logprob: -10.909242630004883
    8. ')))' → logprob: -10.909242630004883
    9. '[:' → logprob: -11.284242630004883
    10. '()))' → logprob: -11.284242630004883

Token 662: ']))
' (ID: 24801)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.06692163646221161
    2. ']))' → logprob: -3.1919217109680176
    3. ':' → logprob: -3.9419217109680176
    4. '1' → logprob: -6.066921710968018
    5. '0' → logprob: -7.316921710968018
    6. ' array' → logprob: -8.19192123413086
    7. ']))
' → logprob: -8.19192123413086
    8. ' :' → logprob: -8.69192123413086
    9. '][:' → logprob: -8.81692123413086
    10. '   ' → logprob: -9.56692123413086

Token 663: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00016516048344783485
    2. '
' → logprob: -9.000164985656738
    3. '   ' → logprob: -10.500164985656738
    4. ' node' → logprob: -11.375164985656738
    5. '    
' → logprob: -13.750164985656738
    6. '```' → logprob: -13.750164985656738
    7. '[node' → logprob: -15.375164985656738
    8. '_node' → logprob: -16.250165939331055
    9. '	node' → logprob: -16.500165939331055
    10. '``' → logprob: -16.875165939331055

Token 664: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.25001049041748
    4. ' node' → logprob: -15.00001049041748
    5. '    
' → logprob: -16.125009536743164
    6. '_node' → logprob: -19.000009536743164
    7. '	node' → logprob: -19.125009536743164
    8. '[node' → logprob: -19.500009536743164
    9. '```' → logprob: -20.000009536743164
    10. '

' → logprob: -20.500009536743164

Token 665: ' assert' (ID: 3696)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.000000953674316
    3. ' node' → logprob: -16.125
    4. '#' → logprob: -16.875
    5. '   ' → logprob: -19.375
    6. '    
' → logprob: -19.625
    7. '```' → logprob: -20.75
    8. '_node' → logprob: -20.875
    9. '	node' → logprob: -20.875
    10. '[node' → logprob: -20.875

Token 666: ' len' (ID: 4631)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6706796884536743
    2. 'len' → logprob: -0.9206796884536743
    3. ' len' → logprob: -2.7956795692443848
    4. ' array' → logprob: -3.5456795692443848
    5. '(len' → logprob: -8.920680046081543
    6. '   ' → logprob: -9.170680046081543
    7. ' ' → logprob: -10.045680046081543
    8. 'all' → logprob: -10.295680046081543
    9. 'node' → logprob: -10.545680046081543
    10. '(array' → logprob: -10.670680046081543

Token 667: '(array' (ID: 13176)
  Prédit: '(array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(array' → logprob: -0.0010719887213781476
    2. '(node' → logprob: -6.876071929931641
    3. 'array' → logprob: -10.50107192993164
    4. '(_' → logprob: -11.62607192993164
    5. '=array' → logprob: -13.12607192993164
    6. '(' → logprob: -15.62607192993164
    7. 'node' → logprob: -16.12607192993164
    8. '[array' → logprob: -16.50107192993164
    9. '(arr' → logprob: -16.62607192993164
    10. '_array' → logprob: -17.00107192993164

Token 668: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10743004828691483
    2. ' ==' → logprob: -2.3574299812316895
    3. ')' → logprob: -5.2324299812316895
    4. ')==' → logprob: -6.3574299812316895
    5. '<=' → logprob: -9.607430458068848
    6. '()==' → logprob: -10.982430458068848
    7. '()' → logprob: -11.482430458068848
    8. '=' → logprob: -11.857430458068848
    9. ']==' → logprob: -11.982430458068848
    10. '>=' → logprob: -12.482430458068848

Token 669: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02334948256611824
    2. ' ==' → logprob: -3.7733495235443115
    3. '<=' → logprob: -9.27334976196289
    4. '>=' → logprob: -12.27334976196289
    5. ' <=' → logprob: -13.27334976196289
    6. '=' → logprob: -13.64834976196289
    7. '===' → logprob: -14.02334976196289
    8. ')==' → logprob: -14.52334976196289
    9. '==
' → logprob: -14.89834976196289
    10. '()==' → logprob: -15.39834976196289

Token 670: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -5.2166411478538066e-05
    2. ' array' → logprob: -9.875052452087402
    3. '9' → logprob: -15.375052452087402
    4. '   ' → logprob: -15.625052452087402
    5. ' ' → logprob: -16.375051498413086
    6. '[array' → logprob: -16.625051498413086
    7. '(array' → logprob: -18.250051498413086
    8. '  ' → logprob: -18.375051498413086
    9. '	array' → logprob: -18.500051498413086
    10. 'int' → logprob: -18.750051498413086

Token 671: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0001354824344161898
    2. 'ength' → logprob: -9.25013542175293
    3. 'length' → logprob: -10.25013542175293
    4. '[' → logprob: -13.25013542175293
    5. '_l' → logprob: -13.87513542175293
    6. '   ' → logprob: -14.12513542175293
    7. '_LENGTH' → logprob: -15.50013542175293
    8. '_lengths' → logprob: -16.37513542175293
    9. '```' → logprob: -17.00013542175293
    10. '_len' → logprob: -17.00013542175293

Token 672: '

' (ID: 279)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0001387009397149086
    2. '
' → logprob: -9.000138282775879
    3. '   ' → logprob: -11.250138282775879
    4. ' node' → logprob: -13.625138282775879
    5. '    
' → logprob: -14.125138282775879
    6. '```' → logprob: -15.250138282775879
    7. '[node' → logprob: -17.375139236450195
    8. '	node' → logprob: -18.000139236450195
    9. '``' → logprob: -18.375139236450195
    10. '_node' → logprob: -18.375139236450195

Token 673: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0002631238894537091
    2. '   ' → logprob: -8.250263214111328
    3. '
' → logprob: -14.000263214111328
    4. ' node' → logprob: -14.250263214111328
    5. '    
' → logprob: -14.875263214111328
    6. '```' → logprob: -17.125263214111328
    7. '	node' → logprob: -19.250263214111328
    8. '_node' → logprob: -20.000263214111328
    9. '``' → logprob: -20.250263214111328
    10. '  ' → logprob: -20.500263214111328

Token 674: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.0
    3. ' node' → logprob: -16.5
    4. '#' → logprob: -20.125
    5. '   ' → logprob: -20.875
    6. '    
' → logprob: -21.125
    7. '```' → logprob: -21.625
    8. '	node' → logprob: -22.125
    9. '[node' → logprob: -23.125
    10. '_node' → logprob: -24.125

Token 675: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.62500286102295
    3. 's' → logprob: -14.87500286102295
    4. '_lst' → logprob: -15.12500286102295
    5. '_lists' → logprob: -15.25000286102295
    6. '_l' → logprob: -15.50000286102295
    7. 'list' → logprob: -16.125003814697266
    8. '_s' → logprob: -16.375003814697266
    9. '_array' → logprob: -16.500003814697266
    10. '_lista' → logprob: -16.750003814697266

Token 676: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ' =[' → logprob: -14.599078178405762
    4. '=[' → logprob: -15.474078178405762
    5. '=[]' → logprob: -16.474077224731445
    6. '＝' → logprob: -18.099077224731445
    7. '   ' → logprob: -18.599077224731445
    8. '[' → logprob: -18.599077224731445
    9. '[:]' → logprob: -18.599077224731445
    10. ' ' → logprob: -18.724077224731445

Token 677: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018311945721507072
    2. '[node' → logprob: -4.018311977386475
    3. '[list' → logprob: -9.018311500549316
    4. '[n' → logprob: -11.018311500549316
    5. ' [' → logprob: -11.518311500549316
    6. '[N' → logprob: -12.143311500549316
    7. '[class' → logprob: -12.893311500549316
    8. '[np' → logprob: -13.268311500549316
    9. '[List' → logprob: -13.268311500549316
    10. '[array' → logprob: -13.518311500549316

Token 678: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.547789674485102e-05
    2. ' Node' → logprob: -10.250035285949707
    3. '	Node' → logprob: -19.125036239624023
    4. '   ' → logprob: -19.750036239624023
    5. '(Node' → logprob: -20.125036239624023
    6. ' ' → logprob: -20.875036239624023
    7. '<Node' → logprob: -21.625036239624023
    8. '_Node' → logprob: -22.250036239624023
    9. '  ' → logprob: -22.375036239624023
    10. '_node' → logprob: -23.125036239624023

Token 679: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.816093228830141e-06
    2. '()]' → logprob: -13.37500286102295
    3. 'for' → logprob: -14.12500286102295
    4. ' ()' → logprob: -15.00000286102295
    5. '(i' → logprob: -16.250001907348633
    6. '(' → logprob: -17.125001907348633
    7. '（）' → logprob: -18.125001907348633
    8. '()
' → logprob: -18.750001907348633
    9. ' for' → logprob: -19.500001907348633
    10. 'i' → logprob: -20.375001907348633

Token 680: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519456744194031
    2. 'for' → logprob: -1.5019457340240479
    3. '	for' → logprob: -11.251945495605469
    4. '   ' → logprob: -12.626945495605469
    5. ' ' → logprob: -15.876945495605469
    6. '()' → logprob: -16.62694549560547
    7. ')' → logprob: -16.75194549560547
    8. ']' → logprob: -16.75194549560547
    9. '<|end|>' → logprob: -18.00194549560547
    10. '    ' → logprob: -18.75194549560547

Token 681: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002559137996286154
    2. ' _' → logprob: -6.752559185028076
    3. ' in' → logprob: -7.627559185028076
    4. 'i' → logprob: -7.752559185028076
    5. ' i' → logprob: -8.002558708190918
    6. '_i' → logprob: -9.627558708190918
    7. 'x' → logprob: -10.502558708190918
    8. 'in' → logprob: -10.877558708190918
    9. '_in' → logprob: -11.752558708190918
    10. ' range' → logprob: -12.127558708190918

Token 682: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08597338199615479
    2. ' in' → logprob: -2.5859732627868652
    3. 'range' → logprob: -4.960973262786865
    4. 'i' → logprob: -10.835973739624023
    5. ' range' → logprob: -10.835973739624023
    6. ' ' → logprob: -12.210973739624023
    7. '_' → logprob: -12.585973739624023
    8. 'x' → logprob: -12.585973739624023
    9. '  ' → logprob: -14.335973739624023
    10. '   ' → logprob: -16.210973739624023

Token 683: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '_' → logprob: -19.000335693359375
    4. '(range' → logprob: -19.125335693359375
    5. '	range' → logprob: -19.625335693359375
    6. ' ' → logprob: -20.375335693359375
    7. '_range' → logprob: -21.000335693359375
    8. '   ' → logprob: -21.125335693359375
    9. 'array' → logprob: -21.125335693359375
    10. '  ' → logprob: -22.250335693359375

Token 684: '(array' (ID: 13176)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.03805767372250557
    2. '(array' → logprob: -3.288057565689087
    3. ' array' → logprob: -11.038057327270508
    4. '(' → logprob: -16.163057327270508
    5. '[array' → logprob: -16.538057327270508
    6. ',array' → logprob: -17.788057327270508
    7. '=array' → logprob: -18.038057327270508
    8. '0' → logprob: -18.663057327270508
    9. ' (' → logprob: -18.788057327270508
    10. '	array' → logprob: -19.288057327270508

Token 685: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00018732868193183094
    2. 'length' → logprob: -8.625186920166016
    3. '_l' → logprob: -12.875186920166016
    4. 'ength' → logprob: -13.125186920166016
    5. '   ' → logprob: -14.250186920166016
    6. '_LENGTH' → logprob: -14.500186920166016
    7. '_array' → logprob: -14.625186920166016
    8. '])' → logprob: -15.250186920166016
    9. ')' → logprob: -15.375186920166016
    10. 'Length' → logprob: -15.500186920166016

Token 686: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.3226136767771095e-05
    2. ')' → logprob: -10.500042915344238
    3. ']' → logprob: -11.125042915344238
    4. ')]
' → logprob: -14.500042915344238
    5. '   ' → logprob: -15.750042915344238
    6. ' )' → logprob: -16.125043869018555
    7. '}]' → logprob: -16.875043869018555
    8. ')],' → logprob: -17.375043869018555
    9. ')])' → logprob: -17.375043869018555
    10. '')]' → logprob: -17.500043869018555

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47273069620132446
    2. 'node' → logprob: -1.0977306365966797
    3. 'generate' → logprob: -3.2227306365966797
    4. '
' → logprob: -6.34773063659668
    5. 'array' → logprob: -7.59773063659668
    6. '    
' → logprob: -8.34773063659668
    7. 'for' → logprob: -8.72273063659668
    8. 'nodes' → logprob: -8.72273063659668
    9. ' node' → logprob: -9.09773063659668
    10. '[node' → logprob: -9.22273063659668

Token 688: ' ans' (ID: 3345)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.386949747800827
    2. 'generate' → logprob: -1.1369497776031494
    3. '   ' → logprob: -10.51194953918457
    4. '_generate' → logprob: -10.76194953918457
    5. ' node' → logprob: -11.76194953918457
    6. ' generate' → logprob: -12.38694953918457
    7. '
' → logprob: -12.63694953918457
    8. '    
' → logprob: -12.76194953918457
    9. 'nodes' → logprob: -12.88694953918457
    10. '_' → logprob: -12.88694953918457

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935588717460632
    2. ' =' → logprob: -0.6935588717460632
    3. '=node' → logprob: -7.818558692932129
    4. '＝' → logprob: -12.693558692932129
    5. '_=' → logprob: -13.068558692932129
    6. '_' → logprob: -13.943558692932129
    7. 'node' → logprob: -14.818558692932129
    8. 's' → logprob: -14.818558692932129
    9. '=[]' → logprob: -15.193558692932129
    10. '(node' → logprob: -15.443558692932129

Token 690: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -9.615255839889869e-05
    2. ' generate' → logprob: -9.250096321105957
    3. '(generate' → logprob: -18.25009536743164
    4. '   ' → logprob: -19.75009536743164
    5. ' ' → logprob: -22.75009536743164
    6. '.generate' → logprob: -23.12509536743164
    7. '  ' → logprob: -23.37509536743164
    8. '_generate' → logprob: -24.12509536743164
    9. 'gener' → logprob: -24.50009536743164
    10. 'generated' → logprob: -24.62509536743164

Token 691: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.002486476907506585
    2. 'tree' → logprob: -6.002486705780029
    3. 'array' → logprob: -11.627486228942871
    4. '_array' → logprob: -13.752486228942871
    5. 'Tree' → logprob: -15.002486228942871
    6. '(array' → logprob: -15.502486228942871
    7. '(node' → logprob: -15.877486228942871
    8. '(tree' → logprob: -16.252487182617188
    9. ' tree' → logprob: -16.502487182617188
    10. 'node' → logprob: -17.127487182617188

Token 692: '(_' (ID: 4963)
  Prédit: '(array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(array' → logprob: -7.493430894101039e-05
    2. 'array' → logprob: -9.500075340270996
    3. '=array' → logprob: -17.37507438659668
    4. '[array' → logprob: -17.62507438659668
    5. ',array' → logprob: -17.62507438659668
    6. '(arr' → logprob: -18.12507438659668
    7. '(node' → logprob: -19.75007438659668
    8. '(' → logprob: -19.75007438659668
    9. ' array' → logprob: -19.75007438659668
    10. '$array' → logprob: -20.50007438659668

Token 693: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.08076395094394684
    2. 'input' → logprob: -2.580764055252075
    3. 'list' → logprob: -6.330763816833496
    4. '_input' → logprob: -9.955763816833496
    5. '_array' → logprob: -11.455763816833496
    6. 'parse' → logprob: -11.705763816833496
    7. 'arr' → logprob: -11.955763816833496
    8. ')' → logprob: -12.330763816833496
    9. ' array' → logprob: -13.455763816833496
    10. '_list' → logprob: -14.080763816833496

Token 694: '=array' (ID: 64814)
  Prédit: '(array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(array' → logprob: -0.06616730988025665
    2. 'array' → logprob: -2.9411673545837402
    3. ')' → logprob: -5.06616735458374
    4. '=array' → logprob: -5.44116735458374
    5. 'rray' → logprob: -8.066166877746582
    6. '[array' → logprob: -8.816166877746582
    7. ',array' → logprob: -9.691166877746582
    8. ' array' → logprob: -10.566166877746582
    9. '=' → logprob: -11.316166877746582
    10. '_array' → logprob: -12.441166877746582

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.625017166137695
    3. ')
' → logprob: -13.125017166137695
    4. '[' → logprob: -13.250017166137695
    5. '_)' → logprob: -13.500017166137695
    6. 'array' → logprob: -14.125017166137695
    7. '[])' → logprob: -15.125017166137695
    8. ' )' → logprob: -15.625017166137695
    9. ')))' → logprob: -15.625017166137695
    10. '[array' → logprob: -15.875017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 693
Tokens correctement prédits (1ère position, stricte): 287
Tokens correctement prédits (1ère position, avec adaptation): 324
Tokens correctement prédits (top 10): 563
Précision stricte (1ère position): 41.41%
Précision adaptée (1ère position): 46.75%
Précision (top 10): 81.24%
================================================================================
