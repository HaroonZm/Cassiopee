================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node():
    def __init__(self, node_id, left, right):
        self.node_id    =   node_id
        self.left       =   left
        self.right      =   right

    def pre_order_search(self):
        l = self.left
        r = self.right
        print("",self.node_id, end="")
        if l != -1:
            tree[l].pre_order_search()
        if r != -1:
            tree[r].pre_order_search()

    def in_order_search(self):
        l = self.left
        r = self.right
        if l != -1:
            tree[l].in_order_search()
        print("",self.node_id, end="")
        if r != -1:
            tree[r].in_order_search()

    def post_order_search(self):
        l = self.left
        r = self.right
        if l != -1:
            tree[l].post_order_search()
        if r != -1:
            tree[r].post_order_search()
        print("",self.node_id, end="")

n = int(input())
tree = [None for i in range(n)]
root_set = set(range(n))

for i in range(n):
    node_id, left, right = map(int, input().split())
    tree[node_id] = Node(node_id, left, right)
    root_set -= set([left, right])
root = root_set.pop()

print("Preorder")
tree[root].pre_order_search()
print("")

print("Inorder")
tree[root].in_order_search()
print("")

print("Postorder")
tree[root].post_order_search()
print("")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04055994749069214
    2. '(' → logprob: -3.290560007095337
    3. '():' → logprob: -7.040559768676758
    4. '.' → logprob: -7.665559768676758
    5. ' :' → logprob: -8.415559768676758
    6. '   ' → logprob: -8.665559768676758
    7. '```' → logprob: -8.665559768676758
    8. '\' → logprob: -8.915559768676758
    9. ' (' → logprob: -9.165559768676758
    10. '(:' → logprob: -9.165559768676758

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09616443514823914
    2. 'def' (adapté à ' def') → logprob: -3.5961644649505615
    3. ':' → logprob: -3.7211644649505615
    4. ' def' → logprob: -4.471164226531982
    5. '    ' → logprob: -4.721164226531982
    6. '```' → logprob: -5.096164226531982
    7. ' pass' → logprob: -5.596164226531982
    8. '\' → logprob: -6.596164226531982
    9. 'pass' → logprob: -6.596164226531982
    10. ' :' → logprob: -6.721164226531982

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06142558157444
    2. ' __' → logprob: -3.5614256858825684
    3. '__' → logprob: -4.936425685882568
    4. ' ' → logprob: -5.186425685882568
    5. '    ' → logprob: -5.311425685882568
    6. ' ```' → logprob: -6.311425685882568
    7. ' a' → logprob: -6.436425685882568
    8. '_' → logprob: -7.186425685882568
    9. ' init' → logprob: -7.186425685882568
    10. ' )' → logprob: -7.186425685882568

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9385402993066236e-05
    2. '_init' → logprob: -11.250019073486328
    3. ' init' → logprob: -12.000019073486328
    4. 'ini' → logprob: -16.250019073486328
    5. '_' → logprob: -16.625019073486328
    6. 'i' → logprob: -17.875019073486328
    7. '_i' → logprob: -17.875019073486328
    8. '	init' → logprob: -18.000019073486328
    9. 'in' → logprob: -19.750019073486328
    10. 'int' → logprob: -20.250019073486328

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.22755445539951324
    2. '__' → logprob: -1.602554440498352
    3. '(' → logprob: -6.9775543212890625
    4. '__(
' → logprob: -7.4775543212890625
    5. '_' → logprob: -7.9775543212890625
    6. '__((' → logprob: -8.727554321289062
    7. '__('' → logprob: -9.727554321289062
    8. '(self' → logprob: -10.602554321289062
    9. '_space' → logprob: -11.852554321289062
    10. '__(*' → logprob: -11.977554321289062

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036509146448224783
    2. ' self' → logprob: -5.628651142120361
    3. ')' → logprob: -10.128650665283203
    4. '(self' → logprob: -11.878650665283203
    5. ',self' → logprob: -13.753650665283203
    6. ' )' → logprob: -14.003650665283203
    7. ' ' → logprob: -14.878650665283203
    8. 'sel' → logprob: -15.128650665283203
    9. '_self' → logprob: -15.628650665283203
    10. '	self' → logprob: -16.003650665283203

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7032200694084167
    2. ' )' → logprob: -1.4532201290130615
    3. ' ' → logprob: -2.4532201290130615
    4. '(' → logprob: -2.9532201290130615
    5. 'self' → logprob: -2.9532201290130615
    6. '<|end|>' → logprob: -3.5782201290130615
    7. ',' → logprob: -3.8282201290130615
    8. ' (' → logprob: -5.453219890594482
    9. '(self' → logprob: -5.453219890594482
    10. ' ,' → logprob: -5.453219890594482

Token 10: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10103616118431091
    2. ' self' → logprob: -2.3510360717773438
    3. 'data' → logprob: -8.101036071777344
    4. ')' → logprob: -8.601036071777344
    5. ' data' → logprob: -9.226036071777344
    6. ' )' → logprob: -9.601036071777344
    7. 'parent' → logprob: -10.601036071777344
    8. 'name' → logprob: -10.726036071777344
    9. 'sel' → logprob: -10.726036071777344
    10. 'node' → logprob: -10.726036071777344

Token 11: '_id' (ID: 1537)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8093665838241577
    2. ')' → logprob: -1.1843665838241577
    3. '_' → logprob: -2.1843667030334473
    4. '_type' → logprob: -3.3093667030334473
    5. '_name' → logprob: -3.5593667030334473
    6. ' _' → logprob: -3.6843667030334473
    7. ':' → logprob: -4.434366703033447
    8. ',' → logprob: -4.684366703033447
    9. 's' → logprob: -5.059366703033447
    10. ' ):' → logprob: -5.434366703033447

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2380591183900833
    2. '):' → logprob: -1.613059163093567
    3. ')' → logprob: -4.488059043884277
    4. ':' → logprob: -6.863059043884277
    5. '=' → logprob: -9.363059043884277
    6. ' ,' → logprob: -9.613059043884277
    7. '):
' → logprob: -10.613059043884277
    8. '   ' → logprob: -10.988059043884277
    9. ',
' → logprob: -11.363059043884277
    10. '_' → logprob: -11.738059043884277

Token 13: ' left' (ID: 3561)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8693227767944336
    2. ' )' → logprob: -1.2443227767944336
    3. ' parent' → logprob: -1.6193227767944336
    4. ')' → logprob: -2.9943227767944336
    5. ' ' → logprob: -3.8693227767944336
    6. ' data' → logprob: -4.619322776794434
    7. 'parent' → logprob: -5.244322776794434
    8. 'data' → logprob: -6.619322776794434
    9. 'node' → logprob: -6.619322776794434
    10. '<|end|>' → logprob: -6.619322776794434

Token 14: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9258155822753906
    2. ',' → logprob: -1.5508155822753906
    3. '_' → logprob: -1.6758155822753906
    4. '=' → logprob: -1.8008155822753906
    5. '):' → logprob: -3.5508155822753906
    6. ' )' → logprob: -5.800815582275391
    7. '_)' → logprob: -5.925815582275391
    8. ')_' → logprob: -6.925815582275391
    9. ' _' → logprob: -7.050815582275391
    10. ')=' → logprob: -7.300815582275391

Token 15: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.046840276569128036
    2. 'right' → logprob: -3.171840190887451
    3. '_right' → logprob: -5.796840190887451
    4. ')' → logprob: -8.17184066772461
    5. ',right' → logprob: -8.92184066772461
    6. ',' → logprob: -9.42184066772461
    7. ' ' → logprob: -9.79684066772461
    8. '=None' → logprob: -10.42184066772461
    9. ' None' → logprob: -10.54684066772461
    10. ' ,' → logprob: -10.54684066772461

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0071005006320774555
    2. ')' → logprob: -5.007100582122803
    3. ':' → logprob: -8.132100105285645
    4. ',' → logprob: -9.632100105285645
    5. '   ' → logprob: -11.757100105285645
    6. ''):' → logprob: -12.132100105285645
    7. '):
' → logprob: -12.632100105285645
    8. ' ):' → logprob: -13.132100105285645
    9. '```' → logprob: -13.507100105285645
    10. '       ' → logprob: -13.882100105285645

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7170752286911011
    2. ' ' → logprob: -2.0920753479003906
    3. '<|end|>' → logprob: -2.2170753479003906
    4. '    ' → logprob: -2.5920753479003906
    5. ')' → logprob: -2.5920753479003906
    6. '   ' → logprob: -2.7170753479003906
    7. ':' → logprob: -3.2170753479003906
    8. ' )' → logprob: -5.342075347900391
    9. ' :' → logprob: -5.842075347900391
    10. '        ' → logprob: -5.967075347900391

Token 18: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1721612215042114
    2. 'self' (adapté à ' self') → logprob: -1.1721612215042114
    3. 's' → logprob: -1.4221612215042114
    4. '_' → logprob: -2.672161102294922
    5. 'n' → logprob: -3.922161102294922
    6. '       ' → logprob: -4.297161102294922
    7. '        ' → logprob: -4.547161102294922
    8. ' self' → logprob: -4.797161102294922
    9. '    ' → logprob: -5.172161102294922
    10. '   ' → logprob: -5.922161102294922

Token 19: '.node' (ID: 23366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001443035143893212
    2. '.node' → logprob: -9.875144004821777
    3. ' .' → logprob: -10.500144004821777
    4. '<|end|>' → logprob: -11.375144004821777
    5. '.id' → logprob: -12.000144004821777
    6. '.next' → logprob: -12.500144004821777
    7. ' ' → logprob: -12.625144004821777
    8. ').' → logprob: -12.625144004821777
    9. '.user' → logprob: -12.875144004821777
    10. '.data' → logprob: -13.125144004821777

Token 20: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00870639830827713
    2. '_' → logprob: -4.883706569671631
    3. '._' → logprob: -7.508706569671631
    4. '.' → logprob: -7.758706569671631
    5. ' _' → logprob: -9.633706092834473
    6. '_i' → logprob: -10.633706092834473
    7. '_ids' → logprob: -11.008706092834473
    8. ')' → logprob: -12.383706092834473
    9. '   ' → logprob: -13.133706092834473
    10. '_s' → logprob: -13.508706092834473

Token 21: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09082510322332382
    2. ' =' → logprob: -2.590825080871582
    3. '<|end|>' → logprob: -5.590825080871582
    4. '_' → logprob: -5.840825080871582
    5. ' ' → logprob: -5.965825080871582
    6. ')' → logprob: -6.340825080871582
    7. '.' → logprob: -8.090825080871582
    8. ',' → logprob: -8.590825080871582
    9. ' )' → logprob: -9.090825080871582
    10. ' =)' → logprob: -10.465825080871582

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' (adapté à ' =') → logprob: -0.007711800746619701
    2. ',' → logprob: -6.132711887359619
    3. ' =' → logprob: -6.132711887359619
    4. '<|end|>' → logprob: -6.257711887359619
    5. ')' → logprob: -7.132711887359619
    6. '.' → logprob: -7.632711887359619
    7. ' ' → logprob: -10.132711410522461
    8. ')=' → logprob: -10.757711410522461
    9. '.=' → logprob: -11.257711410522461
    10. '=}' → logprob: -11.382711410522461

Token 23: '  ' (ID: 256)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.000540762091986835
    2. 'node' → logprob: -8.000540733337402
    3. ' ' → logprob: -8.500540733337402
    4. ' ' → logprob: -13.750540733337402
    5. '	node' → logprob: -15.000540733337402
    6. ' Node' → logprob: -16.37554168701172
    7. ' nod' → logprob: -16.50054168701172
    8. '_node' → logprob: -16.50054168701172
    9. ' nodo' → logprob: -16.75054168701172
    10. '(node' → logprob: -17.00054168701172

Token 24: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.014164102263748646
    2. 'node' (adapté à ' node') → logprob: -4.264163970947266
    3. '	node' → logprob: -15.514163970947266
    4. ' ' → logprob: -15.639163970947266
    5. '(node' → logprob: -16.889163970947266
    6. ' nod' → logprob: -17.764163970947266
    7. 'Node' → logprob: -18.014163970947266
    8. ' None' → logprob: -18.139163970947266
    9. ' Node' → logprob: -18.139163970947266
    10. '    ' → logprob: -18.389163970947266

Token 25: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.2860422730445862
    2. '_' → logprob: -1.4110422134399414
    3. '_d' → logprob: -5.786042213439941
    4. ' _' → logprob: -7.161042213439941
    5. '_i' → logprob: -8.286042213439941
    6. 'd' → logprob: -8.411042213439941
    7. '```' → logprob: -8.786042213439941
    8. '__' → logprob: -9.911042213439941
    9. '._' → logprob: -9.911042213439941
    10. '`' → logprob: -9.911042213439941

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28217166662216187
    2. '.left' → logprob: -1.4071717262268066
    3. '.right' → logprob: -7.282171726226807
    4. ' .' → logprob: -8.907171249389648
    5. '._' → logprob: -9.782171249389648
    6. '.Left' → logprob: -10.407171249389648
    7. '_left' → logprob: -10.782171249389648
    8. '.node' → logprob: -10.907171249389648
    9. '.children' → logprob: -11.532171249389648
    10. ' ' → logprob: -11.782171249389648

Token 30: '      ' (ID: 1699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5130829811096191
    2. '=' → logprob: -1.0130829811096191
    3. '<|end|>' → logprob: -3.763082981109619
    4. ' ' → logprob: -4.638082981109619
    5. '_' → logprob: -5.763082981109619
    6. '    ' → logprob: -7.138082981109619
    7. ')' → logprob: -7.763082981109619
    8. '<|end|>' → logprob: -8.263082504272461
    9. ',' → logprob: -8.638082504272461
    10. '  ' → logprob: -9.263082504272461

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11346658319234848
    2. '=' (adapté à ' =') → logprob: -2.238466501235962
    3. ' ' → logprob: -8.113466262817383
    4. '<|end|>' → logprob: -8.613466262817383
    5. '   ' → logprob: -9.613466262817383
    6. '    ' → logprob: -9.738466262817383
    7. ',' → logprob: -11.363466262817383
    8. '  ' → logprob: -11.863466262817383
    9. '<|end|>' → logprob: -12.238466262817383
    10. ')' → logprob: -12.738466262817383

Token 32: '  ' (ID: 256)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0004360334132798016
    2. 'left' → logprob: -7.750435829162598
    3. ' lef' → logprob: -12.500435829162598
    4. ' ' → logprob: -13.625435829162598
    5. ' ' → logprob: -15.500435829162598
    6. '	left' → logprob: -16.375436782836914
    7. ' None' → logprob: -16.875436782836914
    8. '[left' → logprob: -17.875436782836914
    9. '    ' → logprob: -18.125436782836914
    10. '(left' → logprob: -19.000436782836914

Token 33: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.04859202727675438
    2. 'left' (adapté à ' left') → logprob: -3.0485920906066895
    3. ' lef' → logprob: -12.923591613769531
    4. ' ' → logprob: -13.673591613769531
    5. '	left' → logprob: -14.173591613769531
    6. ' ' → logprob: -16.67359161376953
    7. 'lef' → logprob: -16.67359161376953
    8. '   ' → logprob: -16.79859161376953
    9. '    ' → logprob: -16.92359161376953
    10. '(left' → logprob: -17.54859161376953

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11805890500545502
    2. '<|end|>' → logprob: -2.618058919906616
    3. '        
' → logprob: -4.743058681488037
    4. '
' → logprob: -4.743058681488037
    5. 'newline' → logprob: -5.118058681488037
    6. '\' → logprob: -5.743058681488037
    7. ' ' → logprob: -6.243058681488037
    8. '```' → logprob: -6.243058681488037
    9. '   ' → logprob: -6.368058681488037
    10. 'self' → logprob: -6.618058681488037

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33780473470687866
    2. '<|end|>' → logprob: -1.3378047943115234
    3. 'newline' → logprob: -5.212804794311523
    4. '        
' → logprob: -5.462804794311523
    5. '
' → logprob: -5.587804794311523
    6. '\' → logprob: -6.212804794311523
    7. ' ' → logprob: -6.462804794311523
    8. '```' → logprob: -6.462804794311523
    9. '<|end|>' → logprob: -6.712804794311523
    10. '   ' → logprob: -7.087804794311523

Token 36: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13101893663406372
    2. 'self' (adapté à ' self') → logprob: -3.006018877029419
    3. '
' → logprob: -3.381018877029419
    4. ' ' → logprob: -4.881019115447998
    5. '   ' → logprob: -5.006019115447998
    6. '        
' → logprob: -5.256019115447998
    7. ' 
' → logprob: -5.756019115447998
    8. 'r' → logprob: -5.881019115447998
    9. '```' → logprob: -6.006019115447998
    10. 'right' → logprob: -6.131019115447998

Token 37: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014275270514190197
    2. '.right' → logprob: -4.264275074005127
    3. '.left' → logprob: -9.639275550842285
    4. ' .' → logprob: -10.889275550842285
    5. 'right' → logprob: -11.889275550842285
    6. '.Right' → logprob: -12.764275550842285
    7. '_' → logprob: -12.764275550842285
    8. '.r' → logprob: -12.764275550842285
    9. 'r' → logprob: -13.389275550842285
    10. '_right' → logprob: -13.639275550842285

Token 38: '     ' (ID: 530)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014520975761115551
    2. '<|end|>' → logprob: -4.88952112197876
    3. ' =' → logprob: -5.26452112197876
    4. ')' → logprob: -6.63952112197876
    5. ' ' → logprob: -8.764520645141602
    6. '<|end|>' → logprob: -9.014520645141602
    7. '   ' → logprob: -10.014520645141602
    8. '_' → logprob: -10.139520645141602
    9. '       ' → logprob: -10.889520645141602
    10. '  ' → logprob: -12.264520645141602

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' (adapté à ' =') → logprob: -0.02338162623345852
    2. ' =' → logprob: -3.7733817100524902
    3. ' ' → logprob: -10.148381233215332
    4. '<|end|>' → logprob: -10.148381233215332
    5. ')' → logprob: -10.773381233215332
    6. '_' → logprob: -11.023381233215332
    7. '   ' → logprob: -11.148381233215332
    8. '  ' → logprob: -13.398381233215332
    9. '<|end|>' → logprob: -13.773381233215332
    10. '=
' → logprob: -14.023381233215332

Token 40: '  ' (ID: 256)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.07892250269651413
    2. 'right' → logprob: -2.5789225101470947
    3. '  ' → logprob: -10.828922271728516
    4. ' ' → logprob: -11.703922271728516
    5. '	right' → logprob: -12.828922271728516
    6. '   ' → logprob: -13.828922271728516
    7. ' None' → logprob: -15.203922271728516
    8. 'r' → logprob: -15.578922271728516
    9. '[right' → logprob: -15.828922271728516
    10. ' ' → logprob: -15.953922271728516

Token 41: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.38687822222709656
    2. ' right' → logprob: -1.136878252029419
    3. ' ' → logprob: -12.88687801361084
    4. 'r' → logprob: -13.26187801361084
    5. '	right' → logprob: -13.88687801361084
    6. 'rig' → logprob: -14.01187801361084
    7. '   ' → logprob: -14.88687801361084
    8. '  ' → logprob: -14.88687801361084
    9. ' r' → logprob: -15.38687801361084
    10. ' rig' → logprob: -16.386878967285156

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6190871596336365
    2. '.' → logprob: -1.3690872192382812
    3. '\n' → logprob: -3.4940872192382812
    4. '<|end|>' → logprob: -3.4940872192382812
    5. ' ' → logprob: -3.6190872192382812
    6. '\' → logprob: -3.7440872192382812
    7. '   ' → logprob: -3.7440872192382812
    8. ':' → logprob: -3.9940872192382812
    9. '' → logprob: -4.744087219238281
    10. '#' → logprob: -4.744087219238281

Token 43: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9186273813247681
    2. '.' → logprob: -1.168627381324768
    3. '
' → logprob: -1.543627381324768
    4. '\' → logprob: -4.0436272621154785
    5. '#' → logprob: -4.4186272621154785
    6. '   ' → logprob: -4.7936272621154785
    7. '\n' → logprob: -4.9186272621154785
    8. ',' → logprob: -5.4186272621154785
    9. ' ' → logprob: -5.6686272621154785
    10. 'def' → logprob: -5.7936272621154785

Token 44: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3130948841571808
    2. '   ' → logprob: -2.6880948543548584
    3. '
' → logprob: -2.6880948543548584
    4. 'def' (adapté à ' def') → logprob: -3.0630948543548584
    5. ' 
' → logprob: -4.1880950927734375
    6. ' ' → logprob: -4.1880950927734375
    7. '\' → logprob: -4.4380950927734375
    8. '\n' → logprob: -4.8130950927734375
    9. 'n' → logprob: -4.9380950927734375
    10. ':' → logprob: -5.1880950927734375

Token 45: ' pre' (ID: 876)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024953613057732582
    2. '_' → logprob: -3.774953603744507
    3. ' space' → logprob: -7.399953842163086
    4. 'space' → logprob: -8.024953842163086
    5. '_space' → logprob: -8.899953842163086
    6. ' ```' → logprob: -9.274953842163086
    7. 's' → logprob: -9.399953842163086
    8. ' ‌' → logprob: -9.524953842163086
    9. ' a' → logprob: -10.024953842163086
    10. ' _' → logprob: -10.024953842163086

Token 46: '_order' (ID: 17446)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6662375926971436
    2. '_' → logprob: -1.0412375926971436
    3. 'd' → logprob: -2.1662375926971436
    4. '.' → logprob: -5.416237831115723
    5. 't' → logprob: -5.541237831115723
    6. '_order' → logprob: -5.666237831115723
    7. '_d' → logprob: -6.541237831115723
    8. '_f' → logprob: -6.666237831115723
    9. 'fix' → logprob: -7.416237831115723
    10. 'order' → logprob: -7.541237831115723

Token 47: '_search' (ID: 23642)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009675227105617523
    2. '(self' → logprob: -5.134675025939941
    3. '_' → logprob: -5.634675025939941
    4. '(
' → logprob: -10.134675025939941
    5. '(_' → logprob: -10.634675025939941
    6. ' (' → logprob: -10.884675025939941
    7. '_(' → logprob: -11.009675025939941
    8. '(s' → logprob: -11.259675025939941
    9. 's' → logprob: -12.384675025939941
    10. '_space' → logprob: -12.509675025939941

Token 48: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017994173686020076
    2. '(self' → logprob: -8.8751802444458
    3. '(
' → logprob: -11.0001802444458
    4. ' (' → logprob: -11.1251802444458
    5. '(s' → logprob: -12.3751802444458
    6. '_' → logprob: -13.8751802444458
    7. 's' → logprob: -14.0001802444458
    8. '(

' → logprob: -14.2501802444458
    9. ' ' → logprob: -14.7501802444458
    10. '(`' → logprob: -15.1251802444458

Token 49: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16426415741443634
    2. ')' → logprob: -2.03926420211792
    3. '(' → logprob: -4.78926420211792
    4. '(self' → logprob: -5.28926420211792
    5. 'self' → logprob: -5.28926420211792
    6. '):' → logprob: -6.28926420211792
    7. ',self' → logprob: -8.039263725280762
    8. '_' → logprob: -8.664263725280762
    9. ' ,' → logprob: -9.039263725280762
    10. ' ' → logprob: -9.414263725280762

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6534488201141357
    2. '(' → logprob: -2.4034488201141357
    3. '    ' → logprob: -2.4034488201141357
    4. ' ' → logprob: -2.6534488201141357
    5. '\' → logprob: -2.9034488201141357
    6. '\n' → logprob: -3.0284488201141357
    7. ':' → logprob: -3.2784488201141357
    8. '   ' → logprob: -3.6534488201141357
    9. ' 
' → logprob: -5.153449058532715
    10. '        ' → logprob: -5.278449058532715

Token 51: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32406049966812134
    2. 'if' → logprob: -1.4490604400634766
    3. ' if' → logprob: -4.074060440063477
    4. 'r' → logprob: -4.449060440063477
    5. ' ' → logprob: -5.699060440063477
    6. '       ' → logprob: -5.949060440063477
    7. 'return' → logprob: -6.449060440063477
    8. '#' → logprob: -6.824060440063477
    9. '    ' → logprob: -6.824060440063477
    10. 'p' → logprob: -7.074060440063477

Token 52: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0399843268096447
    2. 'eft' → logprob: -3.9149842262268066
    3. 'i' → logprob: -4.289984226226807
    4. 'ef' → logprob: -6.039984226226807
    5. 'f' → logprob: -6.289984226226807
    6. 'a' → logprob: -7.789984226226807
    7. 'if' → logprob: -8.039984703063965
    8. 'o' → logprob: -8.914984703063965
    9. 'et' → logprob: -9.164984703063965
    10. '   ' → logprob: -9.914984703063965

Token 53: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1435951292514801
    2. ' self' → logprob: -2.1435952186584473
    3. '[]' → logprob: -5.143595218658447
    4. ' []' → logprob: -5.518595218658447
    5. 'f' → logprob: -6.018595218658447
    6. ' None' → logprob: -6.768595218658447
    7. 'None' → logprob: -7.143595218658447
    8. '[' → logprob: -7.518595218658447
    9. 'eft' → logprob: -7.518595218658447
    10. ' ' → logprob: -7.768595218658447

Token 54: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1840604543685913
    2. '.left' → logprob: -2.309060573577881
    3. 'eft' → logprob: -3.059060573577881
    4. '.right' → logprob: -4.809060573577881
    5. '<|end|>' → logprob: -5.809060573577881
    6. 'f' → logprob: -6.184060573577881
    7. '.f' → logprob: -6.559060573577881
    8. '.node' → logprob: -6.684060573577881
    9. 'e' → logprob: -6.684060573577881
    10. ' .' → logprob: -6.934060573577881

Token 55: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009140726178884506
    2. ')' → logprob: -5.884140491485596
    3. ' ' → logprob: -6.009140491485596
    4. '<|end|>' → logprob: -6.509140491485596
    5. ' if' → logprob: -7.634140491485596
    6. ':' → logprob: -7.634140491485596
    7. 'if' → logprob: -7.884140491485596
    8. '.
' → logprob: -8.884140968322754
    9. '?' → logprob: -9.009140968322754
    10. '
' → logprob: -9.009140968322754

Token 56: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6864097118377686
    2. ' ' → logprob: -1.4364097118377686
    3. ' if' → logprob: -2.0614097118377686
    4. 'if' → logprob: -3.3114097118377686
    5. '<|end|>' → logprob: -3.3114097118377686
    6. ')' → logprob: -4.186409950256348
    7. '       ' → logprob: -4.686409950256348
    8. '   ' → logprob: -5.186409950256348
    9. ';' → logprob: -5.686409950256348
    10. '
' → logprob: -5.686409950256348

Token 57: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7330842614173889
    2. 'if' → logprob: -1.3580842018127441
    3. ' if' → logprob: -1.9830842018127441
    4. 'i' → logprob: -2.983084201812744
    5. '       ' → logprob: -3.608084201812744
    6. '.' → logprob: -4.108084201812744
    7. ' i' → logprob: -4.483084201812744
    8. '   ' → logprob: -5.858084201812744
    9. '
' → logprob: -5.983084201812744
    10. '    ' → logprob: -6.358084201812744

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1249619722366333
    2. '.' → logprob: -1.2499619722366333
    3. ' ' → logprob: -1.6249619722366333
    4. '=' → logprob: -1.7499619722366333
    5. ')' → logprob: -5.249961853027344
    6. '  ' → logprob: -5.749961853027344
    7. ' .' → logprob: -6.749961853027344
    8. 'u' → logprob: -6.874961853027344
    9. '         ' → logprob: -6.874961853027344
    10. '        ' → logprob: -6.999961853027344

Token 59: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38689857721328735
    2. ' self' → logprob: -1.1368985176086426
    3. ' ' → logprob: -10.8868989944458
    4. 'elf' → logprob: -12.7618989944458
    5. '   ' → logprob: -13.0118989944458
    6. '  ' → logprob: -13.5118989944458
    7. '       ' → logprob: -14.0118989944458
    8. ' ' → logprob: -14.5118989944458
    9. 's' → logprob: -15.1368989944458
    10. '	self' → logprob: -15.2618989944458

Token 60: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.038404978811740875
    2. '.' → logprob: -3.288404941558838
    3. '.r' → logprob: -8.288405418395996
    4. '.left' → logprob: -9.163405418395996
    5. 'right' → logprob: -13.288405418395996
    6. '.Right' → logprob: -13.788405418395996
    7. 'r' → logprob: -13.788405418395996
    8. ' .' → logprob: -14.038405418395996
    9. '.
' → logprob: -14.538405418395996
    10. '.RIGHT' → logprob: -15.163405418395996

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16660036146640778
    2. '\n' → logprob: -2.791600465774536
    3. '       ' → logprob: -2.916600465774536
    4. ' ' → logprob: -4.791600227355957
    5. '        
' → logprob: -5.166600227355957
    6. ' 
' → logprob: -5.416600227355957
    7. '\' → logprob: -5.666600227355957
    8. 'if' → logprob: -6.166600227355957
    9. '<|end|>' → logprob: -6.166600227355957
    10. '   ' → logprob: -6.291600227355957

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05954305827617645
    2. '       ' → logprob: -3.4345431327819824
    3. '        
' → logprob: -5.059543132781982
    4. ' ' → logprob: -5.559543132781982
    5. '\n' → logprob: -6.059543132781982
    6. ' 
' → logprob: -6.434543132781982
    7. '  
' → logprob: -6.434543132781982
    8. '   ' → logprob: -6.559543132781982
    9. '    ' → logprob: -6.684543132781982
    10. '    
' → logprob: -6.809543132781982

Token 63: ' print' (ID: 2123)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22671258449554443
    2. 'if' → logprob: -1.7267125844955444
    3. ' ' → logprob: -4.851712703704834
    4. ' if' → logprob: -5.101712703704834
    5. '       ' → logprob: -5.476712703704834
    6. ' i' → logprob: -6.101712703704834
    7. '   ' → logprob: -7.101712703704834
    8. '
' → logprob: -7.226712703704834
    9. '#' → logprob: -7.476712703704834
    10. '        
' → logprob: -7.601712703704834

Token 64: '("",' (ID: 40578)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008872655220329762
    2. '(f' → logprob: -5.5088725090026855
    3. '("("' → logprob: -5.8838725090026855
    4. '('' → logprob: -6.2588725090026855
    5. '("' → logprob: -10.133872985839844
    6. '(self' → logprob: -10.633872985839844
    7. '((' → logprob: -12.758872985839844
    8. ' (' → logprob: -12.758872985839844
    9. '(
' → logprob: -13.008872985839844
    10. '"' → logprob: -13.133872985839844

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010094968602061272
    2. ' self' → logprob: -4.635095119476318
    3. 'f' → logprob: -8.38509464263916
    4. ' ' → logprob: -10.26009464263916
    5. 's' → logprob: -10.38509464263916
    6. ' f' → logprob: -11.26009464263916
    7. 'str' → logprob: -11.63509464263916
    8. 'sel' → logprob: -11.76009464263916
    9. 'end' → logprob: -12.76009464263916
    10. ' ' → logprob: -13.01009464263916

Token 66: '.node' (ID: 23366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06568226963281631
    2. '.node' → logprob: -2.8156821727752686
    3. '.' → logprob: -5.815682411193848
    4. '.id' → logprob: -8.565682411193848
    5. '.)' → logprob: -8.690682411193848
    6. ' )' → logprob: -9.565682411193848
    7. ')
' → logprob: -9.815682411193848
    8. '<|end|>' → logprob: -9.815682411193848
    9. ').' → logprob: -10.065682411193848
    10. ',' → logprob: -10.690682411193848

Token 67: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.125009536743164
    3. '_i' → logprob: -12.500009536743164
    4. ' _' → logprob: -15.125009536743164
    5. '._' → logprob: -17.625009536743164
    6. '_ids' → logprob: -17.625009536743164
    7. '__' → logprob: -18.375009536743164
    8. ')' → logprob: -18.750009536743164
    9. '_
' → logprob: -19.125009536743164
    10. '```' → logprob: -19.625009536743164

Token 68: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.627176768844947e-05
    2. ' )' → logprob: -10.125096321105957
    3. ')
' → logprob: -10.250096321105957
    4. '")' → logprob: -11.500096321105957
    5. '   ' → logprob: -12.375096321105957
    6. ',' → logprob: -13.125096321105957
    7. '       ' → logprob: -13.750096321105957
    8. ')")' → logprob: -14.000096321105957
    9. ')`' → logprob: -14.625096321105957
    10. ' ' → logprob: -14.875096321105957

Token 69: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10730906575918198
    2. ')' → logprob: -2.607309103012085
    3. ' end' → logprob: -3.857309103012085
    4. '"' → logprob: -5.482308864593506
    5. 'sep' → logprob: -7.482308864593506
    6. ',end' → logprob: -7.732308864593506
    7. '",' → logprob: -7.857308864593506
    8. ' ' → logprob: -7.857308864593506
    9. ' )' → logprob: -8.107309341430664
    10. '")' → logprob: -8.732309341430664

Token 70: '="")
' (ID: 154840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019158419221639633
    2. '='' → logprob: -4.519158363342285
    3. '=",' → logprob: -5.769158363342285
    4. '="' → logprob: -5.894158363342285
    5. '=',' → logprob: -7.019158363342285
    6. ')' → logprob: -7.269158363342285
    7. '=''' → logprob: -8.019158363342285
    8. '"' → logprob: -9.769158363342285
    9. '=""' → logprob: -9.894158363342285
    10. '=

' → logprob: -10.019158363342285

Token 71: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5211893320083618
    2. '       ' → logprob: -1.6461893320083618
    3. '
' → logprob: -1.7711893320083618
    4. '   ' → logprob: -2.1461892127990723
    5. 'if' → logprob: -3.0211892127990723
    6. '\n' → logprob: -3.1461892127990723
    7. ' if' → logprob: -3.5211892127990723
    8. '  
' → logprob: -3.5211892127990723
    9. '    
' → logprob: -3.7711892127990723
    10. ' 
' → logprob: -3.7711892127990723

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33971360325813293
    2. ' if' → logprob: -1.7147135734558105
    3. ' ' → logprob: -2.7147135734558105
    4. '       ' → logprob: -4.5897135734558105
    5. '
' → logprob: -5.0897135734558105
    6. ' 
' → logprob: -5.2147135734558105
    7. '\t' → logprob: -5.2147135734558105
    8. 'i' → logprob: -5.8397135734558105
    9. '   ' → logprob: -5.9647135734558105
    10. '    
' → logprob: -6.5897135734558105

Token 73: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03548376262187958
    2. ' ' → logprob: -3.4104838371276855
    3. 'l' → logprob: -6.4104838371276855
    4. '  ' → logprob: -9.160483360290527
    5. ' ' → logprob: -11.035483360290527
    6. ' "' → logprob: -11.160483360290527
    7. ' self' → logprob: -11.535483360290527
    8. '	l' → logprob: -11.535483360290527
    9. '   ' → logprob: -11.660483360290527
    10. ' (' → logprob: -12.285483360290527

Token 74: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11377920210361481
    2. ':' → logprob: -2.488779306411743
    3. ' ' → logprob: -4.488779067993164
    4. ' and' → logprob: -4.863779067993164
    5. '.' → logprob: -6.488779067993164
    6. '!' → logprob: -6.488779067993164
    7. ')' → logprob: -7.363779067993164
    8. '!=' → logprob: -7.863779067993164
    9. ' !=' → logprob: -7.988779067993164
    10. '  ' → logprob: -8.238779067993164

Token 75: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.02739803120493889
    2. 'None' → logprob: -3.652398109436035
    3. ' ' → logprob: -7.027398109436035
    4. ' N' → logprob: -8.777398109436035
    5. ' "' → logprob: -11.277398109436035
    6. 'N' → logprob: -11.402398109436035
    7. '"' → logprob: -11.527398109436035
    8. ' ' → logprob: -11.902398109436035
    9. '  ' → logprob: -12.527398109436035
    10. '_None' → logprob: -12.902398109436035

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. '  ' → logprob: -14.750141143798828
    4. '   ' → logprob: -15.125141143798828
    5. '">' → logprob: -16.250141143798828
    6. '    ' → logprob: -16.250141143798828
    7. ' None' → logprob: -16.375141143798828
    8. 'None' → logprob: -16.500141143798828
    9. '-' → logprob: -17.125141143798828
    10. '>' → logprob: -17.250141143798828

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008049938827753067
    2. ' and' → logprob: -5.008049964904785
    3. ':
' → logprob: -7.633049964904785
    4. ' :' → logprob: -8.008049964904785
    5. '):' → logprob: -8.008049964904785
    6. ')' → logprob: -9.383049964904785
    7. 'and' → logprob: -10.383049964904785
    8. '       ' → logprob: -11.133049964904785
    9. '   ' → logprob: -11.633049964904785
    10. ' ' → logprob: -11.758049964904785

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06216183677315712
    2. '.' → logprob: -3.937161922454834
    3. '           ' → logprob: -4.062161922454834
    4. ' ' → logprob: -5.437161922454834
    5. '       ' → logprob: -5.812161922454834
    6. ' and' → logprob: -5.812161922454834
    7. ' :' → logprob: -5.812161922454834
    8. ':
' → logprob: -6.062161922454834
    9. '   ' → logprob: -6.187161922454834
    10. '
' → logprob: -6.437161922454834

Token 79: ' tree' (ID: 8165)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6705152988433838
    2. '           ' → logprob: -1.7955152988433838
    3. ' 
' → logprob: -2.545515298843384
    4. ' ' → logprob: -2.670515298843384
    5. '            ' → logprob: -3.170515298843384
    6. '    ' → logprob: -3.420515298843384
    7. '               ' → logprob: -4.295515060424805
    8. '.' → logprob: -4.420515060424805
    9. '
' → logprob: -4.545515060424805
    10. 'l' → logprob: -4.670515060424805

Token 80: '[l' (ID: 38286)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006579888286069036
    2. '.pre' → logprob: -8.37565803527832
    3. '.left' → logprob: -8.50065803527832
    4. '.l' → logprob: -9.62565803527832
    5. '.
' → logprob: -10.00065803527832
    6. '."' → logprob: -11.00065803527832
    7. '"."' → logprob: -11.37565803527832
    8. ' .' → logprob: -11.62565803527832
    9. ' ' → logprob: -12.00065803527832
    10. '."""' → logprob: -12.12565803527832

Token 81: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4521654546260834
    2. '.' → logprob: -1.7021654844284058
    3. ').' → logprob: -1.8271654844284058
    4. '.pre' → logprob: -4.702165603637695
    5. ']' → logprob: -5.952165603637695
    6. '".' → logprob: -5.952165603637695
    7. ')' → logprob: -6.452165603637695
    8. '"].' → logprob: -6.827165603637695
    9. '   ' → logprob: -7.202165603637695
    10. '").' → logprob: -7.202165603637695

Token 82: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -2.5776860184123507e-06
    2. ' pre' → logprob: -13.37500286102295
    3. 'pr' → logprob: -14.37500286102295
    4. 'p' → logprob: -15.12500286102295
    5. '	pre' → logprob: -17.875001907348633
    6. 'preh' → logprob: -18.000001907348633
    7. 'print' → logprob: -18.125001907348633
    8. 'pread' → logprob: -18.375001907348633
    9. 'prech' → logprob: -18.750001907348633
    10. 'preter' → logprob: -18.750001907348633

Token 83: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.03405976668000221
    2. '_' → logprob: -3.409059762954712
    3. '_ord' → logprob: -8.534059524536133
    4. '_o' → logprob: -8.784059524536133
    5. '_orders' → logprob: -10.909059524536133
    6. ' _' → logprob: -11.659059524536133
    7. '_or' → logprob: -12.284059524536133
    8. '_

' → logprob: -12.534059524536133
    9. '```' → logprob: -12.534059524536133
    10. '_Order' → logprob: -13.159059524536133

Token 84: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0003936152206733823
    2. '_' → logprob: -7.875393390655518
    3. '_se' → logprob: -12.125393867492676
    4. '_s' → logprob: -12.500393867492676
    5. 'search' → logprob: -13.625393867492676
    6. ' _' → logprob: -13.750393867492676
    7. '_print' → logprob: -14.750393867492676
    8. '_visit' → logprob: -15.250393867492676
    9. '_

' → logprob: -15.250393867492676
    10. '_ser' → logprob: -15.750393867492676

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16239990293979645
    2. '(' → logprob: -1.9123998880386353
    3. '()
' → logprob: -6.287399768829346
    4. '(
' → logprob: -8.537400245666504
    5. '()

' → logprob: -9.662400245666504
    6. '(

' → logprob: -10.787400245666504
    7. '()`' → logprob: -11.787400245666504
    8. '()
' → logprob: -12.537400245666504
    9. '()"' → logprob: -12.787400245666504
    10. ' ' → logprob: -13.037400245666504

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1286342442035675
    2. '
' → logprob: -2.503634214401245
    3. '<|end|>' → logprob: -3.378634214401245
    4. '        
' → logprob: -6.003634452819824
    5. ' 
' → logprob: -7.878634452819824
    6. '  
' → logprob: -8.128634452819824
    7. '
' → logprob: -8.253634452819824
    8. '' → logprob: -8.378634452819824
    9. '```' → logprob: -8.503634452819824
    10. '<|end|>' → logprob: -8.878634452819824

Token 87: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03944150730967522
    2. 'if' (adapté à ' if') → logprob: -4.2894415855407715
    3. '        
' → logprob: -5.1644415855407715
    4. ' 
' → logprob: -5.4144415855407715
    5. '```' → logprob: -5.7894415855407715
    6. ' ' → logprob: -5.9144415855407715
    7. '  
' → logprob: -6.4144415855407715
    8. '
' → logprob: -6.4144415855407715
    9. ' if' → logprob: -6.9144415855407715
    10. '   ' → logprob: -6.9144415855407715

Token 88: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.029798392206430435
    2. 'r' → logprob: -3.5297985076904297
    3. ' ' → logprob: -10.40479850769043
    4. '   ' → logprob: -11.90479850769043
    5. '    ' → logprob: -12.40479850769043
    6. '  ' → logprob: -13.15479850769043
    7. ' ' → logprob: -13.15479850769043
    8. '	r' → logprob: -13.65479850769043
    9. '(r' → logprob: -14.65479850769043
    10. '_r' → logprob: -15.77979850769043

Token 89: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.001529620960354805
    2. '!=' → logprob: -6.501529693603516
    3. '!=-' → logprob: -11.001529693603516
    4. ' ' → logprob: -12.126529693603516
    5. '<|end|>' → logprob: -12.876529693603516
    6. '()!=' → logprob: -14.126529693603516
    7. ')!=' → logprob: -14.626529693603516
    8. ' ' → logprob: -15.001529693603516
    9. '   ' → logprob: -15.126529693603516
    10. '  ' → logprob: -15.126529693603516

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004623203072696924
    2. ' -' → logprob: -5.3796234130859375
    3. ' ' → logprob: -13.004623413085938
    4. ' not' → logprob: -15.504623413085938
    5. '  ' → logprob: -16.129623413085938
    6. 'not' → logprob: -16.254623413085938
    7. '-not' → logprob: -16.754623413085938
    8. '-n' → logprob: -16.754623413085938
    9. '   ' → logprob: -16.879623413085938
    10. '1' → logprob: -16.879623413085938

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '<|end|>' → logprob: -15.000001907348633
    4. '-' → logprob: -15.500001907348633
    5. '">' → logprob: -16.687501907348633
    6. '```' → logprob: -16.750001907348633
    7. ' -' → logprob: -17.437501907348633
    8. '   ' → logprob: -17.687501907348633
    9. '<|end|>' → logprob: -17.687501907348633
    10. '>' → logprob: -18.437501907348633

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003959992900490761
    2. ':
' → logprob: -7.875395774841309
    3. '):' → logprob: -11.125395774841309
    4. ')' → logprob: -14.375395774841309
    5. '):
' → logprob: -15.625395774841309
    6. ' :' → logprob: -16.000396728515625
    7. '           ' → logprob: -16.625396728515625
    8. ',' → logprob: -17.625396728515625
    9. ':
' → logprob: -17.625396728515625
    10. '<|end|>' → logprob: -17.750396728515625

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6795324683189392
    2. ':' → logprob: -0.8045324683189392
    3. ')' → logprob: -3.929532527923584
    4. '.' → logprob: -4.054532527923584
    5. ':
' → logprob: -6.304532527923584
    6. '               ' → logprob: -6.429532527923584
    7. '       ' → logprob: -7.304532527923584
    8. '(tree' → logprob: -7.429532527923584
    9. '.tree' → logprob: -7.554532527923584
    10. ' ' → logprob: -7.554532527923584

Token 94: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5762442350387573
    2. 'tree' (adapté à ' tree') → logprob: -0.8262442350387573
    3. '	tree' → logprob: -8.326244354248047
    4. '(tree' → logprob: -10.451244354248047
    5. 'tre' → logprob: -11.201244354248047
    6. '           ' → logprob: -12.201244354248047
    7. ' tre' → logprob: -12.326244354248047
    8. '.tree' → logprob: -12.951244354248047
    9. '/tree' → logprob: -13.201244354248047
    10. '_tree' → logprob: -13.701244354248047

Token 95: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.908022285439074e-05
    2. '[' → logprob: -9.750059127807617
    3. '[right' → logprob: -14.125059127807617
    4. 'r' → logprob: -17.875059127807617
    5. '[R' → logprob: -18.375059127807617
    6. '[
' → logprob: -19.000059127807617
    7. '[root' → logprob: -19.250059127807617
    8. '[l' → logprob: -19.750059127807617
    9. '[t' → logprob: -19.750059127807617
    10. '(r' → logprob: -19.875059127807617

Token 96: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.14702436327934265
    2. '.pre' → logprob: -2.147024393081665
    3. '].' → logprob: -4.522024154663086
    4. '.' → logprob: -4.772024154663086
    5. ')' → logprob: -8.147024154663086
    6. '}.' → logprob: -8.772024154663086
    7. '   ' → logprob: -10.147024154663086
    8. ' .' → logprob: -10.397024154663086
    9. '       ' → logprob: -11.272024154663086
    10. '.).' → logprob: -12.147024154663086

Token 97: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.9361264946837764e-07
    2. ' pre' → logprob: -16.0
    3. 'pr' → logprob: -17.625
    4. '	pre' → logprob: -18.875
    5. 'post' → logprob: -19.25
    6. 'pread' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. 'prem' → logprob: -19.375
    9. 'p' → logprob: -19.875
    10. 'preh' → logprob: -19.875

Token 98: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.03128358721733093
    2. '_' → logprob: -3.6562836170196533
    3. '_o' → logprob: -5.406283378601074
    4. '_ord' → logprob: -7.781283378601074
    5. '_or' → logprob: -10.781283378601074
    6. 'order' → logprob: -11.281283378601074
    7. 'o' → logprob: -11.906283378601074
    8. '_orders' → logprob: -11.906283378601074
    9. ' _' → logprob: -12.156283378601074
    10. '```' → logprob: -12.906283378601074

Token 99: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.00016194197814911604
    2. 'search' → logprob: -8.750162124633789
    3. '_se' → logprob: -13.125162124633789
    4. '_' → logprob: -13.625162124633789
    5. '_order' → logprob: -17.12516212463379
    6. '_s' → logprob: -17.25016212463379
    7. ' search' → logprob: -17.62516212463379
    8. ' _' → logprob: -17.87516212463379
    9. '_ser' → logprob: -18.75016212463379
    10. '_SEARCH' → logprob: -18.87516212463379

Token 100: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004203051794320345
    2. '(' → logprob: -5.504202842712402
    3. '()
' → logprob: -9.129202842712402
    4. '()`' → logprob: -12.254202842712402
    5. '()

' → logprob: -12.629202842712402
    6. '```' → logprob: -13.629202842712402
    7. '(
' → logprob: -13.754202842712402
    8. ' ()' → logprob: -13.754202842712402
    9. '();' → logprob: -14.129202842712402
    10. '`()' → logprob: -14.254202842712402

Token 101: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33118143677711487
    2. '
' → logprob: -2.706181526184082
    3. '#' → logprob: -2.956181526184082
    4. '<|end|>' → logprob: -2.956181526184082
    5. ' ' → logprob: -3.456181526184082
    6. 'n' → logprob: -3.581181526184082
    7. '\' → logprob: -4.206181526184082
    8. ' 
' → logprob: -4.831181526184082
    9. 'r' → logprob: -5.206181526184082
    10. '' → logprob: -5.456181526184082

Token 102: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8427989482879639
    2. '
' → logprob: -1.8427989482879639
    3. '<|end|>' → logprob: -2.217798948287964
    4. '\n' → logprob: -2.342798948287964
    5. 'n' → logprob: -2.592798948287964
    6. '#' → logprob: -3.217798948287964
    7. ' 
' → logprob: -3.717798948287964
    8. '```' → logprob: -4.592799186706543
    9. 't' → logprob: -4.842799186706543
    10. '   ' → logprob: -4.967799186706543

Token 103: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2542949914932251
    2. ' in' → logprob: -1.629294991493225
    3. ' post' → logprob: -4.0042948722839355
    4. 'post' → logprob: -4.7542948722839355
    5. ' ' → logprob: -7.7542948722839355
    6. ' ' → logprob: -8.254295349121094
    7. '	in' → logprob: -8.879295349121094
    8. '```' → logprob: -8.879295349121094
    9. '_in' → logprob: -9.004295349121094
    10. ' inorder' → logprob: -9.129295349121094

Token 104: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.04862438142299652
    2. '_' → logprob: -3.048624277114868
    3. ' _' → logprob: -10.423624038696289
    4. '__' → logprob: -13.048624038696289
    5. 'order' → logprob: -13.298624038696289
    6. '_pre' → logprob: -14.548624038696289
    7. '_or' → logprob: -14.673624038696289
    8. '_place' → logprob: -15.173624038696289
    9. '_Order' → logprob: -15.173624038696289
    10. '```' → logprob: -15.173624038696289

Token 105: '_search' (ID: 23642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38720789551734924
    2. '_search' → logprob: -1.1372078657150269
    3. ' _' → logprob: -8.387207984924316
    4. '```' → logprob: -10.137207984924316
    5. '(' → logprob: -11.012207984924316
    6. '(_' → logprob: -11.387207984924316
    7. '_s' → logprob: -11.887207984924316
    8. '__' → logprob: -13.137207984924316
    9. '_find' → logprob: -13.137207984924316
    10. '##_' → logprob: -13.262207984924316

Token 106: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1429579108953476
    2. '(' → logprob: -2.017957925796509
    3. ' (' → logprob: -8.89295768737793
    4. '(s' → logprob: -9.39295768737793
    5. 'self' → logprob: -10.39295768737793
    6. '(
' → logprob: -11.76795768737793
    7. '(sel' → logprob: -11.89295768737793
    8. '   ' → logprob: -12.14295768737793
    9. '(Self' → logprob: -12.14295768737793
    10. ' ' → logprob: -13.64295768737793

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38327884674072266
    2. '(self' → logprob: -1.6332788467407227
    3. 'self' → logprob: -2.6332788467407227
    4. ')' → logprob: -3.5082788467407227
    5. '   ' → logprob: -4.883278846740723
    6. '):
' → logprob: -5.133278846740723
    7. '       ' → logprob: -5.258278846740723
    8. ':' → logprob: -7.133278846740723
    9. '(' → logprob: -7.883278846740723
    10. ' ' → logprob: -7.883278846740723

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001641738461330533
    2. '
' → logprob: -7.001641750335693
    3. 'print' → logprob: -8.251641273498535
    4. '   ' → logprob: -8.376641273498535
    5. '        
' → logprob: -9.876641273498535
    6. '    ' → logprob: -10.376641273498535
    7. '	' → logprob: -10.501641273498535
    8. '```' → logprob: -10.751641273498535
    9. ' ' → logprob: -11.126641273498535
    10. '     ' → logprob: -11.376641273498535

Token 109: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0006384541047737002
    2. '       ' → logprob: -8.250638008117676
    3. ' l' → logprob: -8.500638008117676
    4. 'if' → logprob: -8.750638008117676
    5. '   ' → logprob: -11.625638008117676
    6. ' if' → logprob: -12.875638008117676
    7. '	l' → logprob: -13.250638008117676
    8. '    ' → logprob: -14.125638008117676
    9. '        ' → logprob: -14.750638008117676
    10. '```' → logprob: -14.875638008117676

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.472134530544281
    2. ' !=' → logprob: -1.3471345901489258
    3. '=' → logprob: -2.222134590148926
    4. ' ' → logprob: -5.347134590148926
    5. '!=' → logprob: -6.472134590148926
    6. ' ==' → logprob: -7.597134590148926
    7. ' if' → logprob: -8.222134590148926
    8. 'if' → logprob: -8.472134590148926
    9. '    ' → logprob: -8.847134590148926
    10. ':' → logprob: -8.972134590148926

Token 111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759527087211609
    2. ' self' → logprob: -0.8259527087211609
    3. ' ' → logprob: -12.200952529907227
    4. '	self' → logprob: -12.450952529907227
    5. '<|end|>' → logprob: -13.825952529907227
    6. '(self' → logprob: -14.200952529907227
    7. '   ' → logprob: -14.450952529907227
    8. '  ' → logprob: -14.700952529907227
    9. 'elf' → logprob: -15.075952529907227
    10. '       ' → logprob: -15.200952529907227

Token 112: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.869017852295656e-06
    2. '.' → logprob: -12.375006675720215
    3. 'left' → logprob: -13.375006675720215
    4. '.right' → logprob: -13.875006675720215
    5. '.le' → logprob: -16.25000762939453
    6. 'eft' → logprob: -16.62500762939453
    7. ' .' → logprob: -17.62500762939453
    8. '.Left' → logprob: -18.12500762939453
    9. '	left' → logprob: -18.87500762939453
    10. '[left' → logprob: -19.00000762939453

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060166314244270325
    2. '<|end|>' → logprob: -3.185166358947754
    3. '
' → logprob: -4.185166358947754
    4. ' if' → logprob: -7.310166358947754
    5. '<|end|>' → logprob: -7.810166358947754
    6. 'if' → logprob: -8.060166358947754
    7. '        
' → logprob: -8.935166358947754
    8. '   ' → logprob: -10.060166358947754
    9. ' ' → logprob: -10.060166358947754
    10. '```' → logprob: -10.185166358947754

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009915098547935486
    2. '<|end|>' → logprob: -5.134914875030518
    3. '
' → logprob: -6.009914875030518
    4. ' if' → logprob: -7.509914875030518
    5. ' ' → logprob: -8.259915351867676
    6. '   ' → logprob: -8.509915351867676
    7. '```' → logprob: -9.259915351867676
    8. 'if' → logprob: -9.259915351867676
    9. '        
' → logprob: -9.634915351867676
    10. '<|end|>' → logprob: -9.634915351867676

Token 115: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7011343836784363
    2. ' if' → logprob: -0.7011343836784363
    3. '       ' → logprob: -5.201134204864502
    4. 'r' (adapté à ' r') → logprob: -6.576134204864502
    5. 'self' → logprob: -7.826134204864502
    6. ' r' → logprob: -8.07613468170166
    7. ' self' → logprob: -8.32613468170166
    8. ' ' → logprob: -10.70113468170166
    9. '```' → logprob: -10.70113468170166
    10. '        ' → logprob: -11.20113468170166

Token 116: ' =' (ID: 314)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7781115174293518
    2. ' =' → logprob: -1.028111457824707
    3. ' ' → logprob: -2.528111457824707
    4. '=' → logprob: -3.278111457824707
    5. '<|end|>' → logprob: -4.028111457824707
    6. ' ==' → logprob: -4.153111457824707
    7. '       ' → logprob: -4.403111457824707
    8. '        ' → logprob: -5.528111457824707
    9. '   ' → logprob: -5.903111457824707
    10. '  ' → logprob: -6.153111457824707

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2812429368495941
    2. ' self' → logprob: -1.4062429666519165
    3. ' ' → logprob: -9.656243324279785
    4. '  ' → logprob: -11.281243324279785
    5. '   ' → logprob: -12.656243324279785
    6. 'elf' → logprob: -12.656243324279785
    7. '	self' → logprob: -12.781243324279785
    8. 's' → logprob: -13.656243324279785
    9. 'sel' → logprob: -14.281243324279785
    10. '    ' → logprob: -14.531243324279785

Token 118: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.10024172812700272
    2. 'right' → logprob: -2.3502416610717773
    3. '.' → logprob: -11.225241661071777
    4. 'r' → logprob: -12.225241661071777
    5. '.left' → logprob: -12.225241661071777
    6. ' right' → logprob: -12.725241661071777
    7. 'ight' → logprob: -12.850241661071777
    8. '	right' → logprob: -13.475241661071777
    9. '   ' → logprob: -13.725241661071777
    10. ',right' → logprob: -13.850241661071777

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016374750062823296
    2. '
' → logprob: -4.266374588012695
    3. '   ' → logprob: -7.016374588012695
    4. '        
' → logprob: -7.641374588012695
    5. 'if' → logprob: -8.016374588012695
    6. '```' → logprob: -8.641374588012695
    7. 'print' → logprob: -8.891374588012695
    8. '    
' → logprob: -9.891374588012695
    9. ' if' → logprob: -10.766374588012695
    10. '\n' → logprob: -10.891374588012695

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01088098343461752
    2. 'if' → logprob: -5.010880947113037
    3. '   ' → logprob: -6.010880947113037
    4. '
' → logprob: -7.135880947113037
    5. 'print' → logprob: -7.385880947113037
    6. ' if' → logprob: -9.010881423950195
    7. '        
' → logprob: -10.135881423950195
    8. '```' → logprob: -10.510881423950195
    9. '     ' → logprob: -10.635881423950195
    10. '    ' → logprob: -11.010881423950195

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22115148603916168
    2. '       ' → logprob: -1.7211514711380005
    3. ' if' → logprob: -3.97115159034729
    4. '   ' → logprob: -7.721151351928711
    5. '```' → logprob: -9.096151351928711
    6. ' ' → logprob: -9.721151351928711
    7. '    ' → logprob: -10.846151351928711
    8. 'i' → logprob: -11.346151351928711
    9. 'print' → logprob: -11.721151351928711
    10. '  ' → logprob: -11.721151351928711

Token 122: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.005940294358879328
    2. 'l' → logprob: -5.1309404373168945
    3. ' ' → logprob: -12.505940437316895
    4. '    ' → logprob: -12.630940437316895
    5. '   ' → logprob: -13.005940437316895
    6. '	l' → logprob: -14.005940437316895
    7. ' self' → logprob: -14.505940437316895
    8. 'self' → logprob: -15.255940437316895
    9. '  ' → logprob: -15.380940437316895
    10. '       ' → logprob: -15.880940437316895

Token 123: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.21461166441440582
    2. '!=' → logprob: -1.7146116495132446
    3. '!=-' → logprob: -4.339611530303955
    4. '   ' → logprob: -10.089612007141113
    5. ' ' → logprob: -11.214612007141113
    6. '  ' → logprob: -12.589612007141113
    7. '!' → logprob: -12.839612007141113
    8. '>' → logprob: -13.589612007141113
    9. '!=(' → logprob: -13.589612007141113
    10. '()!=' → logprob: -13.714612007141113

Token 124: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024800582323223352
    2. ' -' → logprob: -6.0024800300598145
    3. ' ' → logprob: -12.752480506896973
    4. '=' → logprob: -14.252480506896973
    5. '   ' → logprob: -15.002480506896973
    6. '  ' → logprob: -15.002480506896973
    7. '=-' → logprob: -17.127479553222656
    8. '```' → logprob: -17.502479553222656
    9. '-n' → logprob: -18.127479553222656
    10. '−' → logprob: -18.252479553222656

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010628487507347018
    2. '-' → logprob: -9.250105857849121
    3. ' ' → logprob: -12.250105857849121
    4. ' -' → logprob: -12.625105857849121
    5. '```' → logprob: -14.750105857849121
    6. '   ' → logprob: -14.875105857849121
    7. '<|end|>' → logprob: -15.937605857849121
    8. '  ' → logprob: -15.937605857849121
    9. '
' → logprob: -16.187606811523438
    10. '">' → logprob: -16.562606811523438

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07901856303215027
    2. ':
' → logprob: -2.5790185928344727
    3. '           ' → logprob: -9.079018592834473
    4. '       ' → logprob: -12.204018592834473
    5. ' :' → logprob: -13.329018592834473
    6. ':

' → logprob: -13.454018592834473
    7. ':
' → logprob: -13.704018592834473
    8. '):
' → logprob: -13.704018592834473
    9. '):' → logprob: -13.829018592834473
    10. ' :
' → logprob: -14.204018592834473

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002903539687395096
    2. ':
' → logprob: -6.502903461456299
    3. ':' → logprob: -7.127903461456299
    4. 'tree' → logprob: -7.752903461456299
    5. ' tree' → logprob: -9.752903938293457
    6. '          ' → logprob: -10.252903938293457
    7. '               ' → logprob: -10.752903938293457
    8. '       ' → logprob: -11.127903938293457
    9. '   ' → logprob: -11.627903938293457
    10. '	tree' → logprob: -11.877903938293457

Token 128: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.007619637995958328
    2. ' tree' → logprob: -4.882619857788086
    3. '	tree' → logprob: -11.882619857788086
    4. '       ' → logprob: -13.507619857788086
    5. '           ' → logprob: -13.507619857788086
    6. '(tree' → logprob: -13.882619857788086
    7. '
' → logprob: -14.132619857788086
    8. '.tree' → logprob: -14.757619857788086
    9. '   ' → logprob: -14.882619857788086
    10. 'tre' → logprob: -15.007619857788086

Token 129: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -10.875019073486328
    3. '[left' → logprob: -14.750019073486328
    4. '[r' → logprob: -17.250019073486328
    5. ' [' → logprob: -17.250019073486328
    6. '[L' → logprob: -17.375019073486328
    7. '[
' → logprob: -18.250019073486328
    8. '	l' → logprob: -18.375019073486328
    9. '(l' → logprob: -18.875019073486328
    10. '[s' → logprob: -19.125019073486328

Token 130: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3879806697368622
    2. '.in' → logprob: -1.1379806995391846
    3. '.' → logprob: -7.5129804611206055
    4. ').' → logprob: -7.7629804611206055
    5. '   ' → logprob: -9.887980461120605
    6. '}.' → logprob: -10.137980461120605
    7. ']' → logprob: -10.762980461120605
    8. '>.' → logprob: -12.137980461120605
    9. ' ].' → logprob: -12.637980461120605
    10. '.pre' → logprob: -12.887980461120605

Token 131: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -6.988221684878226e-06
    2. ' in' → logprob: -12.000006675720215
    3. 'pre' → logprob: -14.875006675720215
    4. 'i' → logprob: -15.375006675720215
    5. '
' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.12500762939453
    7. '```' → logprob: -17.25000762939453
    8. ' ' → logprob: -17.37500762939453
    9. '  ' → logprob: -17.62500762939453
    10. '

' → logprob: -17.75000762939453

Token 132: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0013386933133006096
    2. '_' → logprob: -6.626338481903076
    3. '_in' → logprob: -12.001338958740234
    4. ' _' → logprob: -12.751338958740234
    5. '   ' → logprob: -14.126338958740234
    6. 'order' → logprob: -14.501338958740234
    7. '_or' → logprob: -14.751338958740234
    8. '_orders' → logprob: -14.876338958740234
    9. '```' → logprob: -15.001338958740234
    10. '_code' → logprob: -15.501338958740234

Token 133: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -9.968312951968983e-06
    2. 'search' → logprob: -11.625009536743164
    3. '_' → logprob: -14.250009536743164
    4. '_se' → logprob: -15.000009536743164
    5. ' _' → logprob: -17.750009536743164
    6. '_s' → logprob: -18.000009536743164
    7. '_print' → logprob: -18.375009536743164
    8. '```' → logprob: -19.500009536743164
    9. '

' → logprob: -19.875009536743164
    10. '
' → logprob: -20.125009536743164

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019310165662318468
    2. '()
' → logprob: -6.251931190490723
    3. '(' → logprob: -13.876931190490723
    4. '()
' → logprob: -14.251931190490723
    5. '()

' → logprob: -14.376931190490723
    6. '(
' → logprob: -16.001930236816406
    7. ')' → logprob: -16.626930236816406
    8. '()`' → logprob: -17.376930236816406
    9. '())' → logprob: -18.126930236816406
    10. '       ' → logprob: -18.626930236816406

Token 135: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.183336079120636
    2. '
' → logprob: -1.9333360195159912
    3. '       ' → logprob: -3.933336019515991
    4. '        
' → logprob: -6.18333625793457
    5. '    
' → logprob: -8.18333625793457
    6. '  
' → logprob: -8.43333625793457
    7. ' 
' → logprob: -8.68333625793457
    8. '```' → logprob: -8.93333625793457
    9. ' print' → logprob: -9.05833625793457
    10. '\n' → logprob: -9.30833625793457

Token 136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12073204666376114
    2. ' print' → logprob: -2.245732069015503
    3. '       ' → logprob: -5.120731830596924
    4. '
' → logprob: -6.495731830596924
    5. '        
' → logprob: -8.995732307434082
    6. '   ' → logprob: -9.245732307434082
    7. ' ' → logprob: -9.995732307434082
    8. '```' → logprob: -10.120732307434082
    9. ' 
' → logprob: -10.245732307434082
    10. '	print' → logprob: -10.870732307434082

Token 137: '("",' (ID: 40578)
  Prédit: '("",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("",' → logprob: -0.8012512922286987
    2. '(' → logprob: -1.3012512922286987
    3. '("' → logprob: -1.3012512922286987
    4. '(""' → logprob: -5.051251411437988
    5. '("")' → logprob: -8.176251411437988
    6. '(
' → logprob: -10.301251411437988
    7. '(self' → logprob: -10.426251411437988
    8. ' ("' → logprob: -10.426251411437988
    9. '(""+' → logprob: -10.926251411437988
    10. '(",' → logprob: -11.426251411437988

Token 138: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.8889261304575484e-06
    2. ' self' → logprob: -12.500003814697266
    3. '(self' → logprob: -16.625003814697266
    4. '   ' → logprob: -19.125003814697266
    5. ',self' → logprob: -19.375003814697266
    6. ' ' → logprob: -19.500003814697266
    7. '	self' → logprob: -19.750003814697266
    8. '*self' → logprob: -21.000003814697266
    9. '$self' → logprob: -21.125003814697266
    10. '[self' → logprob: -21.250003814697266

Token 139: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -3.4285862057004124e-05
    2. '.' → logprob: -10.37503433227539
    3. 'node' → logprob: -12.87503433227539
    4. '.user' → logprob: -15.25003433227539
    5. ' node' → logprob: -15.87503433227539
    6. ' .' → logprob: -16.87503433227539
    7. '	node' → logprob: -17.12503433227539
    8. '.token' → logprob: -17.62503433227539
    9. '.n' → logprob: -17.87503433227539
    10. '.Node' → logprob: -18.37503433227539

Token 140: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.282920129597187e-05
    2. 'id' → logprob: -11.500012397766113
    3. '_' → logprob: -13.250012397766113
    4. '._' → logprob: -14.625012397766113
    5. ' _' → logprob: -15.375012397766113
    6. '_i' → logprob: -16.50001335144043
    7. '```' → logprob: -17.00001335144043
    8. '   ' → logprob: -17.12501335144043
    9. 'self' → logprob: -17.25001335144043
    10. '.id' → logprob: -18.00001335144043

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015192650025710464
    2. ',end' → logprob: -6.501519203186035
    3. 'end' → logprob: -11.626519203186035
    4. ' ,' → logprob: -11.751519203186035
    5. ' end' → logprob: -15.626519203186035
    6. '   ' → logprob: -17.00152015686035
    7. ' ' → logprob: -19.25152015686035
    8. ')' → logprob: -19.37652015686035
    9. '(end' → logprob: -20.00152015686035
    10. ',
' → logprob: -20.12652015686035

Token 142: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.06196824833750725
    2. 'end' → logprob: -2.8119683265686035
    3. ',end' → logprob: -15.061967849731445
    4. ' ' → logprob: -16.436967849731445
    5. ''end' → logprob: -16.436967849731445
    6. '	end' → logprob: -16.561967849731445
    7. '(end' → logprob: -16.936967849731445
    8. '=end' → logprob: -17.811967849731445
    9. ':end' → logprob: -18.311967849731445
    10. ',' → logprob: -18.311967849731445

Token 143: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08878021687269211
    2. '="' → logprob: -2.588780164718628
    3. '""' → logprob: -4.838780403137207
    4. ')' → logprob: -6.588780403137207
    5. '=""' → logprob: -8.213780403137207
    6. '(""))' → logprob: -9.088780403137207
    7. '=' → logprob: -9.463780403137207
    8. ' "")' → logprob: -10.338780403137207
    9. '")' → logprob: -10.463780403137207
    10. '="")
' → logprob: -11.588780403137207

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005069025792181492
    2. '        
' → logprob: -6.130069255828857
    3. 'if' → logprob: -7.005069255828857
    4. '
' → logprob: -7.005069255828857
    5. '  
' → logprob: -8.1300687789917
    6. '   ' → logprob: -8.3800687789917
    7. ' if' → logprob: -9.0050687789917
    8. '    
' → logprob: -9.2550687789917
    9. '\n' → logprob: -9.5050687789917
    10. '```' → logprob: -9.7550687789917

Token 145: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30070772767066956
    2. 'if' (adapté à ' if') → logprob: -1.4257076978683472
    3. ' if' → logprob: -4.175707817077637
    4. '   ' → logprob: -5.925707817077637
    5. '        
' → logprob: -7.675707817077637
    6. ' ' → logprob: -7.800707817077637
    7. '
' → logprob: -9.175707817077637
    8. '```' → logprob: -9.425707817077637
    9. '  ' → logprob: -9.675707817077637
    10. '<|end|>' → logprob: -9.925707817077637

Token 146: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.012562275864183903
    2. 'r' → logprob: -4.387562274932861
    3. ' ' → logprob: -10.13756275177002
    4. '"' → logprob: -12.38756275177002
    5. '(' → logprob: -12.88756275177002
    6. ' l' → logprob: -13.51256275177002
    7. ' ' → logprob: -13.63756275177002
    8. '(r' → logprob: -14.26256275177002
    9. ''' → logprob: -14.26256275177002
    10. ' (' → logprob: -14.63756275177002

Token 147: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0019393461989238858
    2. '!=' → logprob: -6.251939296722412
    3. '!=-' → logprob: -11.62693977355957
    4. ' ' → logprob: -14.25193977355957
    5. ' ' → logprob: -14.50193977355957
    6. '   ' → logprob: -15.75193977355957
    7. ')!=' → logprob: -16.00193977355957
    8. '()!=' → logprob: -16.00193977355957
    9. '!=(' → logprob: -16.62693977355957
    10. ' !' → logprob: -17.12693977355957

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048528365790844
    2. ' -' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.261048316955566
    4. '  ' → logprob: -16.511049270629883
    5. '1' → logprob: -17.886049270629883
    6. '   ' → logprob: -18.011049270629883
    7. '-n' → logprob: -18.636049270629883
    8. '−' → logprob: -18.636049270629883
    9. ' not' → logprob: -18.886049270629883
    10. 'not' → logprob: -20.136049270629883

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043949027894996107
    2. '-' → logprob: -7.750439643859863
    3. ' ' → logprob: -11.875439643859863
    4. ' -' → logprob: -13.500439643859863
    5. '```' → logprob: -15.812939643859863
    6. '  ' → logprob: -16.437938690185547
    7. '   ' → logprob: -16.562938690185547
    8. '>' → logprob: -18.125438690185547
    9. '<|end|>' → logprob: -18.375438690185547
    10. '<' → logprob: -18.437938690185547

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018535124137997627
    2. ':
' → logprob: -4.018535137176514
    3. '           ' → logprob: -7.893535137176514
    4. '):' → logprob: -12.518534660339355
    5. ' :' → logprob: -12.893534660339355
    6. '       ' → logprob: -13.768534660339355
    7. '          ' → logprob: -14.018534660339355
    8. ':

' → logprob: -14.518534660339355
    9. '):
' → logprob: -14.643534660339355
    10. ')' → logprob: -14.643534660339355

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008518831804394722
    2. 'tree' → logprob: -5.258518695831299
    3. ' tree' → logprob: -5.758518695831299
    4. '	tree' → logprob: -9.883519172668457
    5. '          ' → logprob: -10.633519172668457
    6. '               ' → logprob: -11.258519172668457
    7. '   ' → logprob: -11.758519172668457
    8. '(tree' → logprob: -12.008519172668457
    9. '       ' → logprob: -12.258519172668457
    10. ':
' → logprob: -12.383519172668457

Token 152: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.12699949741363525
    2. ' tree' → logprob: -2.1269993782043457
    3. '	tree' → logprob: -10.001999855041504
    4. 'tre' → logprob: -12.251999855041504
    5. '(tree' → logprob: -12.376999855041504
    6. '           ' → logprob: -12.501999855041504
    7. ' ' → logprob: -12.876999855041504
    8. '   ' → logprob: -13.001999855041504
    9. '       ' → logprob: -13.126999855041504
    10. '.tree' → logprob: -13.376999855041504

Token 153: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.750000953674316
    3. 'r' → logprob: -15.375000953674316
    4. '[right' → logprob: -17.750001907348633
    5. '[
' → logprob: -19.625001907348633
    6. '(r' → logprob: -20.000001907348633
    7. ' r' → logprob: -21.000001907348633
    8. ' [' → logprob: -21.250001907348633
    9. '	r' → logprob: -21.375001907348633
    10. '[root' → logprob: -21.500001907348633

Token 154: '].' (ID: 1651)
  Prédit: '.in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.007193054538220167
    2. '].' → logprob: -5.257193088531494
    3. ').' → logprob: -6.382193088531494
    4. '.' → logprob: -8.382192611694336
    5. '}.' → logprob: -11.257192611694336
    6. ' .' → logprob: -11.882192611694336
    7. '>.' → logprob: -12.382192611694336
    8. '.i' → logprob: -12.507192611694336
    9. '   ' → logprob: -13.257192611694336
    10. ']' → logprob: -13.757192611694336

Token 155: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -2.546478935983032e-05
    2. ' in' → logprob: -11.000025749206543
    3. 'i' → logprob: -11.875025749206543
    4. '```' → logprob: -14.500025749206543
    5. '	in' → logprob: -15.500025749206543
    6. '   ' → logprob: -15.625025749206543
    7. ' ' → logprob: -15.875025749206543
    8. 'search' → logprob: -15.875025749206543
    9. '  ' → logprob: -16.000024795532227
    10. '
' → logprob: -17.062524795532227

Token 156: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -5.991464786347933e-05
    2. 'order' → logprob: -10.125060081481934
    3. '_' → logprob: -10.875060081481934
    4. '_or' → logprob: -16.250059127807617
    5. '```' → logprob: -16.250059127807617
    6. '-order' → logprob: -16.500059127807617
    7. '_ord' → logprob: -16.625059127807617
    8. '_o' → logprob: -16.750059127807617
    9. '_in' → logprob: -16.750059127807617
    10. 'Order' → logprob: -16.750059127807617

Token 157: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -2.3438327843905427e-05
    2. 'search' → logprob: -10.87502384185791
    3. '_order' → logprob: -13.12502384185791
    4. '_' → logprob: -13.50002384185791
    5. '_se' → logprob: -14.12502384185791
    6. '_s' → logprob: -16.250022888183594
    7. '()' → logprob: -16.875022888183594
    8. '_SEARCH' → logprob: -17.625022888183594
    9. ' _' → logprob: -18.125022888183594
    10. 'Search' → logprob: -18.625022888183594

Token 158: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.817902173381299e-05
    2. '()
' → logprob: -9.37509822845459
    3. '(' → logprob: -11.37509822845459
    4. '()

' → logprob: -14.37509822845459
    5. '()
' → logprob: -15.12509822845459
    6. '()`' → logprob: -15.87509822845459
    7. '();' → logprob: -16.125097274780273
    8. '()>' → logprob: -16.250097274780273
    9. '()]' → logprob: -16.375097274780273
    10. '```' → logprob: -16.375097274780273

Token 159: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7610885500907898
    2. '   ' → logprob: -0.8860885500907898
    3. 'def' → logprob: -2.2610886096954346
    4. ' def' → logprob: -5.6360883712768555
    5. ' 
' → logprob: -5.6360883712768555
    6. '    
' → logprob: -5.8860883712768555
    7. '  
' → logprob: -6.2610883712768555
    8. '<|end|>' → logprob: -6.3860883712768555
    9. '```' → logprob: -6.8860883712768555
    10. ' ' → logprob: -7.0110883712768555

Token 160: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007555469055660069
    2. ' def' → logprob: -7.375755310058594
    3. '   ' → logprob: -9.125755310058594
    4. ' ' → logprob: -11.750755310058594
    5. '
' → logprob: -12.125755310058594
    6. 'd' → logprob: -12.750755310058594
    7. '	def' → logprob: -13.625755310058594
    8. '    
' → logprob: -14.125755310058594
    9. '  ' → logprob: -14.375755310058594
    10. '  
' → logprob: -14.625755310058594

Token 161: ' post' (ID: 1926)
  Prédit: ' post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' post' → logprob: -0.007634078152477741
    2. 'post' → logprob: -4.882634162902832
    3. '_post' → logprob: -10.632634162902832
    4. ' ' → logprob: -12.882634162902832
    5. '	post' → logprob: -14.507634162902832
    6. ' pos' → logprob: -15.507634162902832
    7. ' pre' → logprob: -16.632633209228516
    8. '_' → logprob: -16.757633209228516
    9. 'Post' → logprob: -16.757633209228516
    10. 'p' → logprob: -16.882633209228516

Token 162: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.048667870461940765
    2. '_' → logprob: -3.0486679077148438
    3. ' _' → logprob: -9.923667907714844
    4. '```' → logprob: -11.298667907714844
    5. '_Order' → logprob: -12.798667907714844
    6. '\' → logprob: -13.048667907714844
    7. '`' → logprob: -13.548667907714844
    8. '_in' → logprob: -13.798667907714844
    9. '__' → logprob: -13.923667907714844
    10. '_line' → logprob: -14.048667907714844

Token 163: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.00038574778591282666
    2. '_' → logprob: -7.875385761260986
    3. ' _' → logprob: -13.000385284423828
    4. '\' → logprob: -13.750385284423828
    5. '```' → logprob: -14.250385284423828
    6. '_s' → logprob: -14.625385284423828
    7. '_se' → logprob: -15.500385284423828
    8. '_Search' → logprob: -16.125385284423828
    9. '##_' → logprob: -16.500385284423828
    10. '(_' → logprob: -16.625385284423828

Token 164: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.048666052520275116
    2. '(' → logprob: -3.048666000366211
    3. '(s' → logprob: -10.048666000366211
    4. '(
' → logprob: -11.173666000366211
    5. ' (' → logprob: -11.923666000366211
    6. 'self' → logprob: -12.298666000366211
    7. '   ' → logprob: -12.298666000366211
    8. '       ' → logprob: -12.798666000366211
    9. '(sel' → logprob: -13.673666000366211
    10. '(Self' → logprob: -14.798666000366211

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12566690146923065
    2. '(self' → logprob: -2.500666856765747
    3. 'self' → logprob: -4.375667095184326
    4. '):
' → logprob: -4.625667095184326
    5. ')' → logprob: -5.375667095184326
    6. '       ' → logprob: -5.500667095184326
    7. '   ' → logprob: -6.000667095184326
    8. ':' → logprob: -6.250667095184326
    9. '(' → logprob: -9.125666618347168
    10. ' ' → logprob: -9.250666618347168

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022407739888876677
    2. '
' → logprob: -6.5022406578063965
    3. '   ' → logprob: -8.252241134643555
    4. 'r' → logprob: -8.252241134643555
    5. 'self' → logprob: -9.752241134643555
    6. ' r' → logprob: -10.377241134643555
    7. '	' → logprob: -10.377241134643555
    8. '```' → logprob: -10.877241134643555
    9. ' l' → logprob: -11.377241134643555
    10. 'l' → logprob: -11.377241134643555

Token 167: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.08542869240045547
    2. ' l' → logprob: -3.0854287147521973
    3. '       ' → logprob: -3.3354287147521973
    4. '   ' → logprob: -8.085428237915039
    5. 'r' → logprob: -8.835428237915039
    6. '	l' → logprob: -9.210428237915039
    7. '    ' → logprob: -12.460428237915039
    8. '	' → logprob: -12.585428237915039
    9. '     ' → logprob: -12.960428237915039
    10. ' ' → logprob: -12.960428237915039

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031840058509260416
    2. '=' → logprob: -5.753183841705322
    3. ' ' → logprob: -12.12818431854248
    4. ' =
' → logprob: -15.87818431854248
    5. '=self' → logprob: -16.128183364868164
    6. ',' → logprob: -16.378183364868164
    7. '   ' → logprob: -16.503183364868164
    8. '       ' → logprob: -16.503183364868164
    9. '_' → logprob: -16.503183364868164
    10. '        ' → logprob: -16.753183364868164

Token 169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759417414665222
    2. ' self' → logprob: -0.8259417414665222
    3. ' ' → logprob: -13.700942039489746
    4. '   ' → logprob: -14.825942039489746
    5. '	self' → logprob: -15.075942039489746
    6. '  ' → logprob: -15.575942039489746
    7. '       ' → logprob: -15.825942039489746
    8. '(self' → logprob: -16.07594108581543
    9. '    ' → logprob: -17.20094108581543
    10. 'elf' → logprob: -17.45094108581543

Token 170: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.265633419388905e-05
    2. 'left' → logprob: -9.750062942504883
    3. '.right' → logprob: -12.375062942504883
    4. '.' → logprob: -17.000062942504883
    5. 'self' → logprob: -17.125062942504883
    6. '[left' → logprob: -19.500062942504883
    7. ' left' → logprob: -19.875062942504883
    8. ' .' → logprob: -20.125062942504883
    9. '.self' → logprob: -20.125062942504883
    10. '	left' → logprob: -20.125062942504883

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09034808725118637
    2. '
' → logprob: -2.4653480052948
    3. '<|end|>' → logprob: -6.840348243713379
    4. 'r' → logprob: -9.465348243713379
    5. '   ' → logprob: -9.590348243713379
    6. '        ' → logprob: -9.840348243713379
    7. '```' → logprob: -10.840348243713379
    8. '        
' → logprob: -10.840348243713379
    9. '\n' → logprob: -11.340348243713379
    10. '           ' → logprob: -11.465348243713379

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016674461076036096
    2. '
' → logprob: -6.626667499542236
    3. 'r' → logprob: -8.251667022705078
    4. 'if' → logprob: -10.501667022705078
    5. '   ' → logprob: -11.126667022705078
    6. ' if' → logprob: -11.251667022705078
    7. ' r' → logprob: -12.126667022705078
    8. '      ' → logprob: -12.876667022705078
    9. '           ' → logprob: -13.251667022705078
    10. 'n' → logprob: -13.501667022705078

Token 173: ' r' (ID: 428)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010389248840510845
    2. ' self' → logprob: -4.63538932800293
    3. '       ' → logprob: -7.38538932800293
    4. 'r' (adapté à ' r') → logprob: -12.51038932800293
    5. '
' → logprob: -12.63538932800293
    6. '   ' → logprob: -12.88538932800293
    7. '	self' → logprob: -13.51038932800293
    8. '(self' → logprob: -14.88538932800293
    9. 's' → logprob: -14.88538932800293
    10. ' ' → logprob: -15.01038932800293

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03391803801059723
    2. '=' → logprob: -3.4089181423187256
    3. '       ' → logprob: -8.533918380737305
    4. ' ' → logprob: -10.283918380737305
    5. '   ' → logprob: -11.283918380737305
    6. '        ' → logprob: -11.533918380737305
    7. '      ' → logprob: -11.908918380737305
    8. '    ' → logprob: -12.783918380737305
    9. '  ' → logprob: -12.908918380737305
    10. '	' → logprob: -13.533918380737305

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020893067121506
    2. ' self' → logprob: -2.3502089977264404
    3. ' ' → logprob: -13.60020923614502
    4. '  ' → logprob: -14.97520923614502
    5. '	self' → logprob: -15.10020923614502
    6. '   ' → logprob: -16.225208282470703
    7. '(self' → logprob: -16.350208282470703
    8. '=self' → logprob: -16.975208282470703
    9. '[self' → logprob: -17.725208282470703
    10. '       ' → logprob: -17.975208282470703

Token 176: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00023357603640761226
    2. 'right' → logprob: -8.37523365020752
    3. '.' → logprob: -13.12523365020752
    4. '.left' → logprob: -14.37523365020752
    5. ' .' → logprob: -16.125232696533203
    6. '	right' → logprob: -16.750232696533203
    7. '.r' → logprob: -16.750232696533203
    8. 'r' → logprob: -17.000232696533203
    9. '[right' → logprob: -17.125232696533203
    10. '.
' → logprob: -17.625232696533203

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020615696907043457
    2. '
' → logprob: -3.895615577697754
    3. 'if' → logprob: -10.520615577697754
    4. '   ' → logprob: -10.895615577697754
    5. ' if' → logprob: -11.895615577697754
    6. '
' → logprob: -12.270615577697754
    7. '<|end|>' → logprob: -12.270615577697754
    8. '        
' → logprob: -12.645615577697754
    9. '```' → logprob: -13.020615577697754
    10. 'print' → logprob: -14.020615577697754

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002713811118155718
    2. 'if' → logprob: -6.127713680267334
    3. ' if' → logprob: -7.877713680267334
    4. '   ' → logprob: -9.252714157104492
    5. '
' → logprob: -10.127714157104492
    6. 'print' → logprob: -12.127714157104492
    7. '```' → logprob: -12.502714157104492
    8. '           ' → logprob: -14.002714157104492
    9. '     ' → logprob: -14.377714157104492
    10. ' ' → logprob: -14.502714157104492

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1442861407995224
    2. ' if' → logprob: -2.3942861557006836
    3. '       ' → logprob: -3.1442861557006836
    4. '   ' → logprob: -10.769286155700684
    5. '
' → logprob: -14.019286155700684
    6. '	if' → logprob: -14.144286155700684
    7. ' ' → logprob: -14.269286155700684
    8. '```' → logprob: -14.519286155700684
    9. '    ' → logprob: -15.894286155700684
    10. '     ' → logprob: -16.019285202026367

Token 180: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.004080897197127342
    2. 'l' → logprob: -5.504080772399902
    3. ' r' → logprob: -13.629080772399902
    4. ' ' → logprob: -14.754080772399902
    5. '   ' → logprob: -15.129080772399902
    6. 'r' → logprob: -15.379080772399902
    7. '	l' → logprob: -15.754080772399902
    8. '    ' → logprob: -17.00408172607422
    9. ' ' → logprob: -17.00408172607422
    10. ' self' → logprob: -17.50408172607422

Token 181: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.005416604224592447
    2. '!=' → logprob: -5.255416393280029
    3. '!=-' → logprob: -8.630416870117188
    4. ' ' → logprob: -13.255416870117188
    5. '   ' → logprob: -13.755416870117188
    6. ' ' → logprob: -15.005416870117188
    7. '!' → logprob: -15.380416870117188
    8. '  ' → logprob: -15.880416870117188
    9. ' !' → logprob: -15.880416870117188
    10. '	' → logprob: -15.880416870117188

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001584850688232109
    2. ' -' → logprob: -8.750158309936523
    3. ' ' → logprob: -18.125158309936523
    4. '   ' → logprob: -18.625158309936523
    5. '  ' → logprob: -19.250158309936523
    6. '1' → logprob: -19.375158309936523
    7. '-not' → logprob: -19.875158309936523
    8. ' not' → logprob: -20.625158309936523
    9. '-n' → logprob: -20.875158309936523
    10. 'not' → logprob: -21.000158309936523

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007345817284658551
    2. '-' → logprob: -7.250734806060791
    3. ' ' → logprob: -10.875734329223633
    4. ' -' → logprob: -12.500734329223633
    5. '   ' → logprob: -13.625734329223633
    6. '  ' → logprob: -15.250734329223633
    7. '           ' → logprob: -16.250734329223633
    8. '```' → logprob: -16.313234329223633
    9. '       ' → logprob: -16.375734329223633
    10. '
' → logprob: -17.313234329223633

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006756932940334082
    2. ':
' → logprob: -5.006756782531738
    3. '           ' → logprob: -10.256756782531738
    4. ' :' → logprob: -12.506756782531738
    5. '):' → logprob: -14.381756782531738
    6. '       ' → logprob: -14.506756782531738
    7. '   ' → logprob: -14.881756782531738
    8. ':
' → logprob: -15.381756782531738
    9. '.' → logprob: -15.506756782531738
    10. ' :
' → logprob: -15.631756782531738

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035095500061288476
    2. 'tree' → logprob: -8.375350952148438
    3. ' tree' → logprob: -9.375350952148438
    4. '               ' → logprob: -11.750350952148438
    5. '   ' → logprob: -11.875350952148438
    6. '          ' → logprob: -12.000350952148438
    7. '       ' → logprob: -12.250350952148438
    8. '	tree' → logprob: -12.375350952148438
    9. '
' → logprob: -12.875350952148438
    10. '         ' → logprob: -14.125350952148438

Token 186: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.04859202727675438
    2. ' tree' → logprob: -3.0485920906066895
    3. '	tree' → logprob: -12.673591613769531
    4. '       ' → logprob: -14.298591613769531
    5. '   ' → logprob: -15.048591613769531
    6. '           ' → logprob: -15.923591613769531
    7. '(tree' → logprob: -15.923591613769531
    8. ' ' → logprob: -16.54859161376953
    9. '.tree' → logprob: -16.67359161376953
    10. 'trees' → logprob: -17.54859161376953

Token 187: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. 'l' → logprob: -16.875
    4. '[left' → logprob: -17.25
    5. '	l' → logprob: -18.75
    6. '[
' → logprob: -19.375
    7. '[L' → logprob: -20.25
    8. '[r' → logprob: -20.25
    9. '(l' → logprob: -21.0
    10. ' [' → logprob: -21.125

Token 188: '].' (ID: 1651)
  Prédit: '.post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.post' → logprob: -0.5849794149398804
    2. '].' → logprob: -0.8349794149398804
    3. '.' → logprob: -4.95997953414917
    4. ').' → logprob: -6.83497953414917
    5. ']' → logprob: -7.83497953414917
    6. '}.' → logprob: -8.584979057312012
    7. '   ' → logprob: -9.334979057312012
    8. '.pre' → logprob: -9.459979057312012
    9. ' .' → logprob: -9.959979057312012
    10. ' ].' → logprob: -10.584979057312012

Token 189: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: 0.0
    2. ' post' → logprob: -16.875
    3. 'pre' → logprob: -17.875
    4. ''post' → logprob: -20.75
    5. '	post' → logprob: -20.875
    6. '_post' → logprob: -21.125
    7. 'pos' → logprob: -21.375
    8. '.post' → logprob: -21.375
    9. '
' → logprob: -21.75
    10. '$post' → logprob: -22.125

Token 190: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.008634896948933601
    2. '_' → logprob: -4.7586350440979
    3. '_post' → logprob: -12.008634567260742
    4. ' _' → logprob: -12.383634567260742
    5. '_orders' → logprob: -12.758634567260742
    6. '```' → logprob: -13.258634567260742
    7. '_
' → logprob: -13.508634567260742
    8. '_or' → logprob: -14.758634567260742
    9. '_ORDER' → logprob: -14.758634567260742
    10. '_code' → logprob: -15.008634567260742

Token 191: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0002627662615850568
    2. 'search' → logprob: -8.250263214111328
    3. '_' → logprob: -13.875263214111328
    4. '_se' → logprob: -15.125263214111328
    5. '_post' → logprob: -16.125263214111328
    6. ' search' → logprob: -17.375263214111328
    7. '_s' → logprob: -17.500263214111328
    8. 's' → logprob: -17.625263214111328
    9. '_SEARCH' → logprob: -17.625263214111328
    10. ' _' → logprob: -18.125263214111328

Token 192: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014169743284583092
    2. '()
' → logprob: -4.264169692993164
    3. '       ' → logprob: -13.014169692993164
    4. '()
' → logprob: -13.014169692993164
    5. '(' → logprob: -14.389169692993164
    6. '()

' → logprob: -14.514169692993164
    7. '   ' → logprob: -14.639169692993164
    8. '(
' → logprob: -16.264169692993164
    9. ')' → logprob: -16.764169692993164
    10. '()\' → logprob: -17.514169692993164

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003392902435734868
    2. '
' → logprob: -5.753392696380615
    3. '        
' → logprob: -9.003393173217773
    4. '`
' → logprob: -10.878393173217773
    5. '   ' → logprob: -11.128393173217773
    6. '```' → logprob: -11.503393173217773
    7. '    
' → logprob: -11.878393173217773
    8. '  
' → logprob: -12.003393173217773
    9. ' 
' → logprob: -12.128393173217773
    10. '\
' → logprob: -12.253393173217773

Token 194: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2695169746875763
    2. 'if' (adapté à ' if') → logprob: -1.894516944885254
    3. 'print' → logprob: -2.894516944885254
    4. ' if' → logprob: -3.519516944885254
    5. '   ' → logprob: -7.769516944885254
    6. ' print' → logprob: -7.894516944885254
    7. ' ' → logprob: -10.019516944885254
    8. '           ' → logprob: -10.269516944885254
    9. '```' → logprob: -11.644516944885254
    10. '  ' → logprob: -12.144516944885254

Token 195: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12693041563034058
    2. 'r' → logprob: -2.1269304752349854
    3. ' ' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.501930236816406
    5. '(r' → logprob: -14.501930236816406
    6. '   ' → logprob: -16.251930236816406
    7. ' (' → logprob: -16.501930236816406
    8. 'right' → logprob: -16.876930236816406
    9. '  ' → logprob: -17.001930236816406
    10. '    ' → logprob: -17.126930236816406

Token 196: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0003391574718989432
    2. '!=' → logprob: -8.00033950805664
    3. '!=-' → logprob: -12.75033950805664
    4. ' ' → logprob: -15.75033950805664
    5. '<|end|>' → logprob: -16.12533950805664
    6. '```' → logprob: -16.25033950805664
    7. ')!=' → logprob: -16.25033950805664
    8. ' ' → logprob: -16.62533950805664
    9. '        ' → logprob: -17.00033950805664
    10. '       ' → logprob: -17.37533950805664

Token 197: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015023599844425917
    2. ' -' → logprob: -6.501502513885498
    3. '1' → logprob: -17.626502990722656
    4. ' ' → logprob: -18.001502990722656
    5. '   ' → logprob: -19.501502990722656
    6. '  ' → logprob: -20.626502990722656
    7. '−' → logprob: -21.501502990722656
    8. '```' → logprob: -21.626502990722656
    9. '–' → logprob: -23.001502990722656
    10. '
' → logprob: -23.001502990722656

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010044389637187123
    2. '-' → logprob: -9.250100135803223
    3. ' ' → logprob: -12.750100135803223
    4. ' -' → logprob: -13.750100135803223
    5. '   ' → logprob: -16.50010108947754
    6. '```' → logprob: -16.56260108947754
    7. '  ' → logprob: -17.00010108947754
    8. '
' → logprob: -19.18760108947754
    9. '<|end|>' → logprob: -19.37510108947754
    10. '' → logprob: -19.50010108947754

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062201499938964844
    2. ':
' → logprob: -3.437201499938965
    3. '           ' → logprob: -3.687201499938965
    4. '.' → logprob: -7.062201499938965
    5. ')' → logprob: -7.312201499938965
    6. '[' → logprob: -7.937201499938965
    7. '):' → logprob: -8.062201499938965
    8. '.tree' → logprob: -8.437201499938965
    9. '       ' → logprob: -9.062201499938965
    10. '):
' → logprob: -9.312201499938965

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49665361642837524
    2. 'tree' → logprob: -1.1216535568237305
    3. ' tree' → logprob: -2.7466535568237305
    4. '	tree' → logprob: -6.8716535568237305
    5. '(tree' → logprob: -8.74665355682373
    6. '               ' → logprob: -8.87165355682373
    7. '       ' → logprob: -9.49665355682373
    8. '          ' → logprob: -10.37165355682373
    9. '   ' → logprob: -10.49665355682373
    10. '.tree' → logprob: -10.62165355682373

Token 201: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.018161412328481674
    2. ' tree' → logprob: -4.018161296844482
    3. '	tree' → logprob: -12.01816177368164
    4. '   ' → logprob: -13.39316177368164
    5. '       ' → logprob: -13.51816177368164
    6. ' ' → logprob: -14.26816177368164
    7. '(tree' → logprob: -14.51816177368164
    8. 'trees' → logprob: -15.39316177368164
    9. 'tre' → logprob: -15.51816177368164
    10. '  ' → logprob: -15.51816177368164

Token 202: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. 'r' → logprob: -16.75
    4. '[right' → logprob: -17.0
    5. '[root' → logprob: -19.875
    6. '(r' → logprob: -20.0
    7. '	r' → logprob: -20.375
    8. '[
' → logprob: -21.375
    9. '[t' → logprob: -21.875
    10. '[R' → logprob: -22.25

Token 203: '].' (ID: 1651)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00015264409012161195
    2. 'r' → logprob: -9.625152587890625
    3. '][' → logprob: -9.750152587890625
    4. '[right' → logprob: -11.250152587890625
    5. '[' → logprob: -11.625152587890625
    6. '
' → logprob: -13.125152587890625
    7. '].' → logprob: -13.750152587890625
    8. '	r' → logprob: -14.125152587890625
    9. '[
' → logprob: -14.500152587890625
    10. '   ' → logprob: -14.750152587890625

Token 204: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -1.5048530030981055e-06
    2. ' post' → logprob: -13.875001907348633
    3. 'search' → logprob: -16.125001907348633
    4. '```' → logprob: -16.125001907348633
    5. ''post' → logprob: -16.875001907348633
    6. '	post' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '
' → logprob: -17.500001907348633
    9. '(post' → logprob: -17.875001907348633
    10. 'pos' → logprob: -18.125001907348633

Token 205: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -3.128163257315464e-07
    2. 'order' → logprob: -15.625
    3. '_' → logprob: -16.5
    4. '_ORDER' → logprob: -17.0
    5. ' _' → logprob: -17.75
    6. '_orders' → logprob: -17.875
    7. '_post' → logprob: -18.25
    8. '-order' → logprob: -19.0
    9. '```' → logprob: -19.25
    10. 'Order' → logprob: -19.5

Token 206: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -6.194110756041482e-05
    2. 'search' → logprob: -9.875061988830566
    3. '_' → logprob: -11.750061988830566
    4. '_se' → logprob: -13.750061988830566
    5. '_s' → logprob: -15.000061988830566
    6. ' _' → logprob: -15.250061988830566
    7. 's' → logprob: -15.625061988830566
    8. '```' → logprob: -15.625061988830566
    9. '   ' → logprob: -16.12506103515625
    10. '_post' → logprob: -16.25006103515625

Token 207: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4741141200065613
    2. '()
' → logprob: -0.9741141200065613
    3. '()
' → logprob: -10.849114418029785
    4. '()

' → logprob: -11.224114418029785
    5. '(' → logprob: -13.349114418029785
    6. '       ' → logprob: -13.349114418029785
    7. '(
' → logprob: -14.349114418029785
    8. '()`' → logprob: -16.09911346435547
    9. 'print' → logprob: -16.59911346435547
    10. '   ' → logprob: -16.59911346435547

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054714977741241455
    2. 'print' → logprob: -5.505471706390381
    3. '
' → logprob: -6.630471706390381
    4. '   ' → logprob: -9.880471229553223
    5. ' print' → logprob: -11.630471229553223
    6. '           ' → logprob: -12.380471229553223
    7. '```' → logprob: -12.880471229553223
    8. '        
' → logprob: -13.505471229553223
    9. '
' → logprob: -14.005471229553223
    10. ' ' → logprob: -14.380471229553223

Token 209: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.019021810963749886
    2. '
' → logprob: -4.519021987915039
    3. '       ' → logprob: -4.894021987915039
    4. ' print' → logprob: -8.894021987915039
    5. 'p' → logprob: -9.019021987915039
    6. '\n' → logprob: -9.519021987915039
    7. '   ' → logprob: -10.644021987915039
    8. '        
' → logprob: -10.769021987915039
    9. '```' → logprob: -10.769021987915039
    10. ' 
' → logprob: -11.519021987915039

Token 210: '("",' (ID: 40578)
  Prédit: '("",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("",' → logprob: -0.18080486357212067
    2. '(' → logprob: -2.055804967880249
    3. '("' → logprob: -3.930804967880249
    4. ' ("' → logprob: -4.80580472946167
    5. '(""' → logprob: -4.93080472946167
    6. ' (' → logprob: -6.30580472946167
    7. '("")' → logprob: -8.055805206298828
    8. '(
' → logprob: -8.805805206298828
    9. ' ' → logprob: -10.305805206298828
    10. '('',' → logprob: -10.680805206298828

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -13.375001907348633
    3. '(self' → logprob: -18.125001907348633
    4. '*self' → logprob: -19.750001907348633
    5. ',self' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.500001907348633
    7. ' ' → logprob: -20.750001907348633
    8. '
' → logprob: -21.000001907348633
    9. '	self' → logprob: -21.000001907348633
    10. '[self' → logprob: -21.250001907348633

Token 212: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -11.500012397766113
    3. 'node' → logprob: -13.375012397766113
    4. ' .' → logprob: -14.750012397766113
    5. '.user' → logprob: -15.125012397766113
    6. '.Node' → logprob: -16.75001335144043
    7. ' node' → logprob: -16.87501335144043
    8. '	node' → logprob: -17.50001335144043
    9. '.n' → logprob: -17.62501335144043
    10. '.token' → logprob: -17.62501335144043

Token 213: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.438573680294212e-06
    2. '._' → logprob: -12.250005722045898
    3. 'd' → logprob: -15.375005722045898
    4. '_' → logprob: -15.625005722045898
    5. ' _' → logprob: -16.1250057220459
    6. 'id' → logprob: -16.5000057220459
    7. '_ids' → logprob: -17.1250057220459
    8. '_d' → logprob: -18.5000057220459
    9. '_i' → logprob: -18.5000057220459
    10. '.id' → logprob: -18.8750057220459

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014619040302932262
    2. ',end' → logprob: -6.626461982727051
    3. ' ,' → logprob: -9.12646198272705
    4. 'end' → logprob: -10.87646198272705
    5. '       ' → logprob: -12.00146198272705
    6. '   ' → logprob: -13.62646198272705
    7. ' end' → logprob: -14.62646198272705
    8. '     ' → logprob: -16.251461029052734
    9. '    ' → logprob: -16.501461029052734
    10. ')' → logprob: -17.126461029052734

Token 215: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.023246178403496742
    2. ' end' → logprob: -3.7732462882995605
    3. ''end' → logprob: -14.773245811462402
    4. '   ' → logprob: -16.14824676513672
    5. ' ' → logprob: -16.14824676513672
    6. '	end' → logprob: -17.14824676513672
    7. '    ' → logprob: -17.27324676513672
    8. '     ' → logprob: -18.02324676513672
    9. '=end' → logprob: -18.14824676513672
    10. '  ' → logprob: -18.39824676513672

Token 216: '="' (ID: 580)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024728354066610336
    2. '="' → logprob: -4.149728298187256
    3. '""' → logprob: -4.774728298187256
    4. ')' → logprob: -9.649728775024414
    5. '=""' → logprob: -9.899728775024414
    6. '(""))' → logprob: -10.149728775024414
    7. ' "")' → logprob: -10.399728775024414
    8. '")' → logprob: -10.774728775024414
    9. '("")' → logprob: -12.399728775024414
    10. '=' → logprob: -12.649728775024414

Token 217: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.453737710718997e-05
    2. '"' → logprob: -10.500044822692871
    3. ')' → logprob: -11.750044822692871
    4. '""' → logprob: -12.000044822692871
    5. ')")' → logprob: -13.000044822692871
    6. '")
' → logprob: -14.375044822692871
    7. ')"' → logprob: -17.125043869018555
    8. '")

' → logprob: -18.375043869018555
    9. ' "")' → logprob: -18.625043869018555
    10. '\"' → logprob: -18.875043869018555

Token 218: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04234340414404869
    2. 'n' → logprob: -3.6673433780670166
    3. 'tree' → logprob: -4.542343616485596
    4. '#' → logprob: -6.542343616485596
    5. 't' → logprob: -7.292343616485596
    6. '

' → logprob: -7.417343616485596
    7. 'class' → logprob: -7.542343616485596
    8. '\n' → logprob: -7.917343616485596
    9. 'def' → logprob: -8.167343139648438
    10. '<|end|>' → logprob: -8.667343139648438

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6706824898719788
    2. '=' → logprob: -0.7956824898719788
    3. 'um' → logprob: -3.795682430267334
    4. '=int' → logprob: -4.920682430267334
    5. 'ode' → logprob: -6.170682430267334
    6. '   ' → logprob: -6.170682430267334
    7. 'odes' → logprob: -7.170682430267334
    8. '_' → logprob: -7.295682430267334
    9. '    ' → logprob: -7.670682430267334
    10. ' ' → logprob: -7.920682430267334

Token 220: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018621186027303338
    2. ' int' → logprob: -7.626862049102783
    3. '10' → logprob: -7.751862049102783
    4. '3' → logprob: -8.001862525939941
    5. '5' → logprob: -8.001862525939941
    6. '7' → logprob: -9.501862525939941
    7. 'Node' → logprob: -9.751862525939941
    8. '4' → logprob: -10.126862525939941
    9. '0' → logprob: -10.626862525939941
    10. '1' → logprob: -11.126862525939941

Token 221: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03836459666490555
    2. '(input' → logprob: -3.2883646488189697
    3. ' (' → logprob: -8.53836441040039
    4. '()' → logprob: -9.66336441040039
    5. '(
' → logprob: -10.53836441040039
    6. '(int' → logprob: -10.78836441040039
    7. 'input' → logprob: -11.66336441040039
    8. '("' → logprob: -13.66336441040039
    9. '(

' → logprob: -13.91336441040039
    10. '(`' → logprob: -14.03836441040039

Token 222: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.47475847601890564
    2. '()' → logprob: -0.974758505821228
    3. ')' → logprob: -7.599758625030518
    4. '(' → logprob: -9.09975814819336
    5. '()
' → logprob: -10.47475814819336
    6. '().' → logprob: -11.84975814819336
    7. '())
' → logprob: -11.84975814819336
    8. '("' → logprob: -12.22475814819336
    9. '();)' → logprob: -12.34975814819336
    10. '());' → logprob: -12.47475814819336

Token 223: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0019401769386604428
    2. '
' → logprob: -6.2519402503967285
    3. '```' → logprob: -12.25193977355957
    4. ' tree' → logprob: -13.00193977355957
    5. 'trees' → logprob: -14.12693977355957
    6. '
' → logprob: -14.25193977355957
    7. 'for' → logprob: -14.37693977355957
    8. '(tree' → logprob: -14.37693977355957
    9. '	tree' → logprob: -14.37693977355957
    10. 'table' → logprob: -15.12693977355957

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10027901083230972
    2. '=' → logprob: -2.3502790927886963
    3. '={}' → logprob: -10.350278854370117
    4. '=[]' → logprob: -10.850278854370117
    5. '[' → logprob: -11.725278854370117
    6. ' ' → logprob: -12.350278854370117
    7. ' =[' → logprob: -13.225278854370117
    8. ',' → logprob: -13.475278854370117
    9. ' ={' → logprob: -13.725278854370117
    10. 's' → logprob: -13.725278854370117

Token 225: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.014734303578734398
    2. '[' → logprob: -4.764734268188477
    3. '[]' → logprob: -5.139734268188477
    4. ' {}' → logprob: -8.639734268188477
    5. 'dict' → logprob: -10.139734268188477
    6. ' [' → logprob: -11.639734268188477
    7. ' []' → logprob: -12.139734268188477
    8. '[n' → logprob: -12.764734268188477
    9. '{' → logprob: -12.889734268188477
    10. '{}
' → logprob: -13.264734268188477

Token 226: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3936406373977661
    2. '-' → logprob: -1.1436406373977661
    3. '0' → logprob: -6.143640518188477
    4. '-node' → logprob: -6.518640518188477
    5. 'Node' → logprob: -6.768640518188477
    6. ' None' → logprob: -7.268640518188477
    7. ']' → logprob: -8.268640518188477
    8. '-n' → logprob: -8.643640518188477
    9. ')' → logprob: -8.643640518188477
    10. ' -' → logprob: -8.768640518188477

Token 227: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021177595481276512
    2. ']*(' → logprob: -4.271177768707275
    3. ' for' → logprob: -5.146177768707275
    4. ' ]' → logprob: -7.646177768707275
    5. 'for' → logprob: -8.021177291870117
    6. ']*' → logprob: -8.521177291870117
    7. ']+' → logprob: -8.771177291870117
    8. '(' → logprob: -13.521177291870117
    9. '](' → logprob: -13.896177291870117
    10. '()]' → logprob: -14.396177291870117

Token 228: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05014844611287117
    2. ' ' → logprob: -3.9251484870910645
    3. ' _' → logprob: -3.9251484870910645
    4. ' in' → logprob: -5.5501484870910645
    5. ' range' → logprob: -6.1751484870910645
    6. 'range' → logprob: -6.1751484870910645
    7. ' i' → logprob: -6.9251484870910645
    8. 'in' → logprob: -8.550148010253906
    9. '_range' → logprob: -9.300148010253906
    10. 'i' → logprob: -9.425148010253906

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11646901816129684
    2. ' range' → logprob: -2.616468906402588
    3. ' ' → logprob: -3.616468906402588
    4. 'in' → logprob: -4.991468906402588
    5. 'range' → logprob: -5.991468906402588
    6. ' i' → logprob: -7.741468906402588
    7. '(range' → logprob: -8.741469383239746
    8. '_' → logprob: -10.241469383239746
    9. '	range' → logprob: -10.616469383239746
    10. '(' → logprob: -10.616469383239746

Token 230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132656216621399
    2. ' range' → logprob: -1.3132655620574951
    3. ' ' → logprob: -13.063265800476074
    4. '	range' → logprob: -14.563265800476074
    5. '  ' → logprob: -14.688265800476074
    6. '(range' → logprob: -14.813265800476074
    7. ' ran' → logprob: -15.438265800476074
    8. 'rang' → logprob: -16.063264846801758
    9. '   ' → logprob: -16.188264846801758
    10. 'r' → logprob: -16.188264846801758

Token 231: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004976287018507719
    2. '(' → logprob: -7.625497817993164
    3. ' (' → logprob: -11.625497817993164
    4. '(range' → logprob: -15.000497817993164
    5. '((' → logprob: -15.375497817993164
    6. 'n' → logprob: -16.500497817993164
    7. '(
' → logprob: -17.500497817993164
    8. ' n' → logprob: -17.750497817993164
    9. '(N' → logprob: -17.875497817993164
    10. ']' → logprob: -18.375497817993164

Token 232: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.983476436696947e-05
    2. ')' → logprob: -10.125089645385742
    3. ' )' → logprob: -10.375089645385742
    4. '+' → logprob: -11.000089645385742
    5. ')]
' → logprob: -13.750089645385742
    6. ']' → logprob: -14.750089645385742
    7. ')])' → logprob: -17.250089645385742
    8. '))' → logprob: -17.375089645385742
    9. ' ]' → logprob: -17.375089645385742
    10. ')]

' → logprob: -17.500089645385742

Token 233: 'root' (ID: 5488)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8444881536415778e-05
    2. ' for' → logprob: -10.500028610229492
    3. '
' → logprob: -14.000028610229492
    4. '	for' → logprob: -18.125028610229492
    5. '<|end|>' → logprob: -18.375028610229492
    6. 'n' → logprob: -19.750028610229492
    7. 'i' → logprob: -21.125028610229492
    8. ' 
' → logprob: -21.250028610229492
    9. '```' → logprob: -21.375028610229492
    10. 'import' → logprob: -21.500028610229492

Token 234: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6899040341377258
    2. '_' → logprob: -0.9399040341377258
    3. '_id' → logprob: -2.689903974533081
    4. '=' → logprob: -3.439903974533081
    5. ' ' → logprob: -5.31490421295166
    6. ' _' → logprob: -6.56490421295166
    7. ',' → logprob: -7.43990421295166
    8. '_=' → logprob: -8.68990421295166
    9. '_idx' → logprob: -9.06490421295166
    10. '_ids' → logprob: -9.18990421295166

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04352935403585434
    2. '=' → logprob: -3.1685292720794678
    3. 's' → logprob: -8.168529510498047
    4. ' ' → logprob: -8.668529510498047
    5. 'ed' → logprob: -11.168529510498047
    6. '=[]' → logprob: -11.543529510498047
    7. '(' → logprob: -11.668529510498047
    8. 'd' → logprob: -11.668529510498047
    9. '  ' → logprob: -12.043529510498047
    10. ',' → logprob: -12.418529510498047

Token 236: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3334963321685791
    2. ' set' → logprob: -1.333496332168579
    3. '{' → logprob: -4.20849609375
    4. ' {' → logprob: -5.33349609375
    5. ' [' → logprob: -8.70849609375
    6. '{}' → logprob: -9.33349609375
    7. '[' → logprob: -10.45849609375
    8. '{s' → logprob: -11.45849609375
    9. '(set' → logprob: -11.70849609375
    10. 's' → logprob: -11.95849609375

Token 237: '(range' (ID: 50017)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0054610674269497395
    2. '(range' → logprob: -5.2554612159729
    3. '(' → logprob: -9.005460739135742
    4. '()
' → logprob: -10.005460739135742
    5. '([]' → logprob: -10.755460739135742
    6. '([' → logprob: -11.630460739135742
    7. ' ()' → logprob: -11.755460739135742
    8. '()

' → logprob: -12.505460739135742
    9. 'range' → logprob: -12.630460739135742
    10. '()]' → logprob: -12.755460739135742

Token 238: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012094692647224292
    2. 'n' → logprob: -9.500121116638184
    3. '(' → logprob: -10.000121116638184
    4. '(
' → logprob: -15.500121116638184
    5. ' n' → logprob: -15.625121116638184
    6. ' (' → logprob: -15.875121116638184
    7. ')n' → logprob: -16.375120162963867
    8. '	n' → logprob: -17.750120162963867
    9. ')' → logprob: -17.875120162963867
    10. ',n' → logprob: -18.625120162963867

Token 239: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005921131814830005
    2. ')' → logprob: -7.625592231750488
    3. '))
' → logprob: -9.625592231750488
    4. ' ))' → logprob: -10.250592231750488
    5. ' )' → logprob: -14.375592231750488
    6. ')))' → logprob: -14.625592231750488
    7. '))

' → logprob: -14.625592231750488
    8. ' ' → logprob: -15.250592231750488
    9. '),' → logprob: -15.375592231750488
    10. ')]' → logprob: -15.750592231750488

Token 240: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.641841820150148e-05
    2. ' for' → logprob: -10.75002670288086
    3. '
' → logprob: -12.25002670288086
    4. '	for' → logprob: -16.62502670288086
    5. '```' → logprob: -17.12502670288086
    6. 'class' → logprob: -17.75002670288086
    7. '<|end|>' → logprob: -19.25002670288086
    8. '    
' → logprob: -19.25002670288086
    9. 'import' → logprob: -19.37502670288086
    10. ' 
' → logprob: -19.87502670288086

Token 241: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2160940170288086
    2. ' i' → logprob: -2.2160940170288086
    3. '_' → logprob: -2.4660940170288086
    4. 'i' → logprob: -8.591094017028809
    5. ' ' → logprob: -8.591094017028809
    6. '_i' → logprob: -10.966094017028809
    7. ' ' → logprob: -13.841094017028809
    8. '	i' → logprob: -14.716094017028809
    9. ' _
' → logprob: -16.341094970703125
    10. ' ‌' → logprob: -16.466094970703125

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.059909019619226456
    2. 'in' → logprob: -2.9349091053009033
    3. ' ' → logprob: -5.434908866882324
    4. '_' → logprob: -7.809908866882324
    5. ' _' → logprob: -8.809908866882324
    6. ' i' → logprob: -10.309908866882324
    7. '  ' → logprob: -11.059908866882324
    8. 'n' → logprob: -11.059908866882324
    9. ' n' → logprob: -12.059908866882324
    10. 'range' → logprob: -12.309908866882324

Token 243: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38689711689949036
    2. 'range' → logprob: -1.136897087097168
    3. 'n' → logprob: -11.136897087097168
    4. ' n' → logprob: -11.761897087097168
    5. '(range' → logprob: -12.761897087097168
    6. ' ' → logprob: -14.511897087097168
    7. '_' → logprob: -16.011898040771484
    8. ' in' → logprob: -16.511898040771484
    9. 'r' → logprob: -17.011898040771484
    10. '(n' → logprob: -17.261898040771484

Token 244: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004402055055834353
    2. ' (' → logprob: -8.12544059753418
    3. '(' → logprob: -8.87544059753418
    4. ' n' → logprob: -12.50044059753418
    5. 'n' → logprob: -14.50044059753418
    6. '(
' → logprob: -16.50044059753418
    7. ' ' → logprob: -18.50044059753418
    8. '	n' → logprob: -19.25044059753418
    9. ')n' → logprob: -19.75044059753418
    10. ')' → logprob: -19.75044059753418

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47531014680862427
    2. '):
' → logprob: -0.9753101468086243
    3. ')' → logprob: -7.350310325622559
    4. ' ):' → logprob: -8.100310325622559
    5. '):
' → logprob: -8.475310325622559
    6. ' ):
' → logprob: -9.725310325622559
    7. '):

' → logprob: -11.850310325622559
    8. ':' → logprob: -11.975310325622559
    9. '
' → logprob: -13.850310325622559
    10. ' )' → logprob: -14.475310325622559

Token 246: '   ' (ID: 271)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.13635960221290588
    2. '   ' → logprob: -2.511359691619873
    3. 'node' → logprob: -3.636359691619873
    4. ' line' → logprob: -5.386359691619873
    5. ' nodes' → logprob: -6.136359691619873
    6. ' data' → logprob: -6.136359691619873
    7. '	node' → logprob: -6.511359691619873
    8. ',node' → logprob: -6.761359691619873
    9. ' ' → logprob: -6.886359691619873
    10. ' input' → logprob: -6.886359691619873

Token 247: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.2303842157125473
    2. 'a' → logprob: -2.355384111404419
    3. ' node' → logprob: -2.480384111404419
    4. 'data' → logprob: -4.355384349822998
    5. 'id' → logprob: -5.980384349822998
    6. 'x' → logprob: -6.230384349822998
    7. 'nid' → logprob: -6.230384349822998
    8. ' a' → logprob: -6.355384349822998
    9. ' data' → logprob: -6.980384349822998
    10. '   ' → logprob: -7.105384349822998

Token 248: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00945135485380888
    2. '_' → logprob: -5.509451389312744
    3. '_info' → logprob: -6.009451389312744
    4. '_input' → logprob: -6.384451389312744
    5. '_data' → logprob: -7.134451389312744
    6. '_i' → logprob: -7.884451389312744
    7. '_ids' → logprob: -11.884450912475586
    8. ' _' → logprob: -12.009450912475586
    9. '_in' → logprob: -12.384450912475586
    10. '_inputs' → logprob: -12.634450912475586

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016301481809932739
    2. ' ,' → logprob: -8.875163078308105
    3. ',node' → logprob: -11.375163078308105
    4. ',input' → logprob: -11.875163078308105
    5. ',left' → logprob: -13.625163078308105
    6. ',n' → logprob: -13.750163078308105
    7. ',num' → logprob: -14.500163078308105
    8. ',line' → logprob: -15.250163078308105
    9. ',s' → logprob: -15.625163078308105
    10. ',data' → logprob: -16.00016212463379

Token 250: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.16960756480693817
    2. ' l' → logprob: -2.294607639312744
    3. 'left' → logprob: -3.169607639312744
    4. 'l' → logprob: -4.419607639312744
    5. ' lef' → logprob: -7.294607639312744
    6. ' le' → logprob: -8.919607162475586
    7. ' lf' → logprob: -9.419607162475586
    8. 'space' → logprob: -10.419607162475586
    9. 'lef' → logprob: -10.544607162475586
    10. 'le' → logprob: -10.544607162475586

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008010497549548745
    2. ',node' → logprob: -7.625801086425781
    3. ' ,' → logprob: -8.250801086425781
    4. ',right' → logprob: -10.375801086425781
    5. ',input' → logprob: -12.000801086425781
    6. '_,' → logprob: -12.625801086425781
    7. ',n' → logprob: -12.625801086425781
    8. ',left' → logprob: -13.125801086425781
    9. ',user' → logprob: -13.625801086425781
    10. '_id' → logprob: -13.750801086425781

Token 252: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.14276941120624542
    2. 'right' → logprob: -2.0177693367004395
    3. ',right' → logprob: -9.517769813537598
    4. '	right' → logprob: -11.517769813537598
    5. ' ' → logprob: -12.642769813537598
    6. '_right' → logprob: -12.767769813537598
    7. '   ' → logprob: -14.017769813537598
    8. 'Right' → logprob: -14.267769813537598
    9. ',' → logprob: -14.267769813537598
    10. 'r' → logprob: -14.392769813537598

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197237730026245
    2. '=' → logprob: -1.5019724369049072
    3. '=input' → logprob: -10.126972198486328
    4. ',' → logprob: -13.001972198486328
    5. ' ' → logprob: -15.126972198486328
    6. '	' → logprob: -15.751972198486328
    7. 'input' → logprob: -15.876972198486328
    8. '   ' → logprob: -16.001972198486328
    9. '=list' → logprob: -16.251972198486328
    10. '    ' → logprob: -16.626972198486328

Token 254: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0801767036318779
    2. 'map' → logprob: -2.830176591873169
    3. ' input' → logprob: -4.080176830291748
    4. 'input' → logprob: -6.830176830291748
    5. ' list' → logprob: -9.83017635345459
    6. 'list' → logprob: -12.58017635345459
    7. '	map' → logprob: -13.95517635345459
    8. ' [' → logprob: -14.95517635345459
    9. ' ' → logprob: -15.33017635345459
    10. '(map' → logprob: -15.95517635345459

Token 255: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005142438691109419
    2. '(' → logprob: -5.3801422119140625
    3. '(input' → logprob: -8.005142211914062
    4. '(str' → logprob: -8.630142211914062
    5. 'int' → logprob: -12.380142211914062
    6. '(lambda' → logprob: -13.255142211914062
    7. '(
' → logprob: -14.005142211914062
    8. '(in' → logprob: -14.130142211914062
    9. '<int' → logprob: -14.505142211914062
    10. ' (' → logprob: -14.755142211914062

Token 256: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.034103769809007645
    2. ',' → logprob: -3.4091038703918457
    3. '(input' → logprob: -8.659103393554688
    4. 'input' → logprob: -8.784103393554688
    5. ' ,' → logprob: -9.159103393554688
    6. ' input' → logprob: -11.409103393554688
    7. '   ' → logprob: -11.659103393554688
    8. '
' → logprob: -13.409103393554688
    9. '=input' → logprob: -13.659103393554688
    10. '  ' → logprob: -14.409103393554688

Token 257: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019294669618830085
    2. ' input' → logprob: -6.25192928314209
    3. '(input' → logprob: -14.75192928314209
    4. ',input' → logprob: -15.62692928314209
    5. ')' → logprob: -16.001930236816406
    6. '=input' → logprob: -16.626930236816406
    7. '_input' → logprob: -17.501930236816406
    8. '	input' → logprob: -18.376930236816406
    9. ' ' → logprob: -19.876930236816406
    10. '<input' → logprob: -19.876930236816406

Token 258: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.250006675720215
    3. '(' → logprob: -14.000006675720215
    4. ' ().' → logprob: -14.250006675720215
    5. '.' → logprob: -16.12500762939453
    6. ' .' → logprob: -16.37500762939453
    7. '.split' → logprob: -16.50000762939453
    8. '   ' → logprob: -17.12500762939453
    9. '()
' → logprob: -17.37500762939453
    10. ')' → logprob: -17.37500762939453

Token 259: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007145775598473847
    2. 'strip' → logprob: -7.2507147789001465
    3. 'rstrip' → logprob: -12.625714302062988
    4. ' split' → logprob: -14.500714302062988
    5. '(split' → logprob: -14.625714302062988
    6. 'spl' → logprob: -15.250714302062988
    7. 's' → logprob: -15.500714302062988
    8. 'sp' → logprob: -17.375715255737305
    9. '.split' → logprob: -18.375715255737305
    10. ')' → logprob: -19.375715255737305

Token 260: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12271378934383392
    2. ')' → logprob: -2.497713804244995
    3. '()' → logprob: -3.497713804244995
    4. '(' → logprob: -5.872713565826416
    5. '())
' → logprob: -9.372714042663574
    6. '(','' → logprob: -11.622714042663574
    7. '('' → logprob: -12.247714042663574
    8. '()
' → logprob: -12.622714042663574
    9. '))' → logprob: -12.622714042663574
    10. '()))' → logprob: -12.747714042663574

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17604097723960876
    2. '
' → logprob: -1.9260410070419312
    3. '    
' → logprob: -4.926041126251221
    4. '  
' → logprob: -5.801041126251221
    5. '	tree' → logprob: -5.926041126251221
    6. '(tree' → logprob: -7.301041126251221
    7. '   
' → logprob: -7.551041126251221
    8. '  ' → logprob: -8.301040649414062
    9. ' tree' → logprob: -8.426040649414062
    10. ' 
' → logprob: -8.426040649414062

Token 262: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.025357449427247047
    2. ' tree' → logprob: -3.775357484817505
    3. '
' → logprob: -6.775357246398926
    4. 'node' → logprob: -7.025357246398926
    5. '   ' → logprob: -10.275357246398926
    6. '	tree' → logprob: -11.275357246398926
    7. 't' → logprob: -11.650357246398926
    8. ' node' → logprob: -11.775357246398926
    9. '(tree' → logprob: -12.275357246398926
    10. 'tre' → logprob: -12.775357246398926

Token 263: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.5201974511146545
    2. '[i' → logprob: -1.0201973915100098
    3. '[' → logprob: -3.1451973915100098
    4. '[n' → logprob: -6.27019739151001
    5. '[id' → logprob: -10.895197868347168
    6. '[user' → logprob: -11.145197868347168
    7. '[int' → logprob: -11.395197868347168
    8. '[input' → logprob: -11.770197868347168
    9. '[item' → logprob: -12.270197868347168
    10. '[data' → logprob: -12.270197868347168

Token 264: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00012809180771000683
    2. 'id' → logprob: -9.500127792358398
    3. '_i' → logprob: -10.750127792358398
    4. '   ' → logprob: -11.375127792358398
    5. 'i' → logprob: -12.625127792358398
    6. ']' → logprob: -12.750127792358398
    7. 's' → logprob: -13.125127792358398
    8. '[i' → logprob: -13.250127792358398
    9. '].' → logprob: -13.750127792358398
    10. '_' → logprob: -13.875127792358398

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05030173063278198
    2. ')' → logprob: -3.0503017902374268
    3. '=' → logprob: -7.800301551818848
    4. ']=' → logprob: -7.800301551818848
    5. ' ]' → logprob: -7.800301551818848
    6. ' =' → logprob: -7.925301551818848
    7. ' )' → logprob: -9.675301551818848
    8. '])' → logprob: -10.050301551818848
    9. ')=' → logprob: -11.425301551818848
    10. ' ' → logprob: -13.675301551818848

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805124759674072
    2. ' =' → logprob: -3.288051128387451
    3. '=node' → logprob: -12.28805160522461
    4. ' ' → logprob: -13.28805160522461
    5. '=create' → logprob: -14.28805160522461
    6. ')' → logprob: -14.78805160522461
    7. '=None' → logprob: -14.91305160522461
    8. '=
' → logprob: -15.03805160522461
    9. ' =
' → logprob: -15.53805160522461
    10. ',' → logprob: -15.66305160522461

Token 267: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0019286326132714748
    2. ' Node' → logprob: -6.251928806304932
    3. '(Node' → logprob: -17.876928329467773
    4. '	Node' → logprob: -18.001928329467773
    5. '   ' → logprob: -18.251928329467773
    6. ' ' → logprob: -19.001928329467773
    7. '  ' → logprob: -19.126928329467773
    8. '_Node' → logprob: -19.751928329467773
    9. '.Node' → logprob: -20.626928329467773
    10. '_node' → logprob: -21.001928329467773

Token 268: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.03806616738438606
    2. '(' → logprob: -3.2880661487579346
    3. '(
' → logprob: -11.288065910339355
    4. '(n' → logprob: -11.538065910339355
    5. ' (' → logprob: -14.413065910339355
    6. '(tree' → logprob: -14.663065910339355
    7. '(Node' → logprob: -15.288065910339355
    8. 'node' → logprob: -15.413065910339355
    9. '(

' → logprob: -15.913065910339355
    10. '(token' → logprob: -16.163066864013672

Token 269: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.60414821645827e-06
    2. 'id' → logprob: -13.375004768371582
    3. '_' → logprob: -13.625004768371582
    4. '_i' → logprob: -13.875004768371582
    5. ',' → logprob: -15.000004768371582
    6. '   ' → logprob: -15.750004768371582
    7. ' _' → logprob: -16.250003814697266
    8. ')' → logprob: -16.625003814697266
    9. 'i' → logprob: -18.125003814697266
    10. ' id' → logprob: -18.125003814697266

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004413975402712822
    2. ',left' → logprob: -7.750441551208496
    3. ' ,' → logprob: -11.500441551208496
    4. ',right' → logprob: -15.500441551208496
    5. '   ' → logprob: -15.750441551208496
    6. 'left' → logprob: -16.62544059753418
    7. ',
' → logprob: -17.25044059753418
    8. '[left' → logprob: -17.37544059753418
    9. '	' → logprob: -18.12544059753418
    10. ')' → logprob: -18.50044059753418

Token 271: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.018155796453356743
    2. 'left' → logprob: -4.018155574798584
    3. ' lef' → logprob: -12.393156051635742
    4. '	left' → logprob: -14.643156051635742
    5. ',left' → logprob: -14.768156051635742
    6. '(left' → logprob: -15.643156051635742
    7. ' ' → logprob: -15.643156051635742
    8. '[left' → logprob: -15.768156051635742
    9. 'lef' → logprob: -16.518156051635742
    10. '_left' → logprob: -16.768156051635742

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004707326181232929
    2. ' ,' → logprob: -5.379707336425781
    3. ',right' → logprob: -9.379707336425781
    4. '   ' → logprob: -13.629707336425781
    5. ',
' → logprob: -14.504707336425781
    6. ',left' → logprob: -14.754707336425781
    7. ',r' → logprob: -15.504707336425781
    8. ' ' → logprob: -16.12970733642578
    9. ')' → logprob: -16.50470733642578
    10. '‌,' → logprob: -17.25470733642578

Token 273: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.1002708226442337
    2. 'right' → logprob: -2.3502707481384277
    3. ' ' → logprob: -11.100271224975586
    4. 'r' → logprob: -11.225271224975586
    5. '	right' → logprob: -11.600271224975586
    6. ')' → logprob: -11.725271224975586
    7. ',right' → logprob: -11.975271224975586
    8. ' r' → logprob: -13.100271224975586
    9. '[right' → logprob: -13.225271224975586
    10. '(right' → logprob: -13.600271224975586

Token 274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.250006675720215
    3. ' )' → logprob: -13.375006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '))' → logprob: -17.12500762939453
    6. ')

' → logprob: -17.87500762939453
    7. '),' → logprob: -18.75000762939453
    8. ')#' → logprob: -18.87500762939453
    9. ')`' → logprob: -19.00000762939453
    10. ',)' → logprob: -19.00000762939453

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09183654189109802
    2. 'if' → logprob: -3.091836452484131
    3. 'for' → logprob: -3.341836452484131
    4. 'root' → logprob: -5.591836452484131
    5. ' if' → logprob: -6.091836452484131
    6. ' for' → logprob: -7.216836452484131
    7. '
' → logprob: -9.466836929321289
    8. ' ' → logprob: -10.466836929321289
    9. '    
' → logprob: -10.841836929321289
    10. '```' → logprob: -10.841836929321289

Token 276: ' root' (ID: 6577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008043314330279827
    2. 'root' (adapté à ' root') → logprob: -5.38304328918457
    3. '   ' → logprob: -5.88304328918457
    4. ' if' → logprob: -7.38304328918457
    5. 'for' → logprob: -12.38304328918457
    6. ' root' → logprob: -13.25804328918457
    7. 'try' → logprob: -13.88304328918457
    8. ' ' → logprob: -14.38304328918457
    9. '
' → logprob: -15.00804328918457
    10. '```' → logprob: -15.13304328918457

Token 277: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.1041145626222715e-05
    2. '_s' → logprob: -12.125011444091797
    3. '_' → logprob: -12.250011444091797
    4. '_sets' → logprob: -14.625011444091797
    5. '_se' → logprob: -15.875011444091797
    6. ' _' → logprob: -16.000011444091797
    7. '_remove' → logprob: -17.375011444091797
    8. '_Set' → logprob: -17.875011444091797
    9. '__' → logprob: -18.000011444091797
    10. '_SET' → logprob: -18.375011444091797

Token 278: ' -=' (ID: 12583)
  Prédit: '.dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.015217899344861507
    2. '.remove' → logprob: -4.5152177810668945
    3. '.' → logprob: -5.5152177810668945
    4. '.d' → logprob: -9.140217781066895
    5. 'discard' → logprob: -11.140217781066895
    6. ' .' → logprob: -11.515217781066895
    7. '.add' → logprob: -13.765217781066895
    8. ' -=' → logprob: -13.890217781066895
    9. '.subtract' → logprob: -14.265217781066895
    10. ' discard' → logprob: -14.890217781066895

Token 279: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0007772310636937618
    2. 'set' → logprob: -7.875777244567871
    3. '{s' → logprob: -8.125777244567871
    4. '{i' → logprob: -9.500777244567871
    5. ' {' → logprob: -10.875777244567871
    6. '{x' → logprob: -13.000777244567871
    7. '{sub' → logprob: -13.000777244567871
    8. '{return' → logprob: -14.625777244567871
    9. '{k' → logprob: -14.625777244567871
    10. '{
' → logprob: -14.625777244567871

Token 280: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00017481597024016082
    2. '({' → logprob: -9.000174522399902
    3. '()' → logprob: -11.250174522399902
    4. '{' → logprob: -11.500174522399902
    5. '[left' → logprob: -11.500174522399902
    6. '((' → logprob: -11.625174522399902
    7. '(' → logprob: -11.875174522399902
    8. '[' → logprob: -14.000174522399902
    9. '(left' → logprob: -14.625174522399902
    10. '([]' → logprob: -14.875174522399902

Token 281: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0005389740690588951
    2. ' left' → logprob: -8.25053882598877
    3. '(left' → logprob: -8.37553882598877
    4. '   ' → logprob: -11.12553882598877
    5. '[left' → logprob: -11.25053882598877
    6. 'l' → logprob: -12.00053882598877
    7. 'lef' → logprob: -12.25053882598877
    8. '	left' → logprob: -12.75053882598877
    9. 'i' → logprob: -13.62553882598877
    10. ' ' → logprob: -14.00053882598877

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014423794113099575
    2. '])' → logprob: -4.264423847198486
    3. ' ,' → logprob: -8.889423370361328
    4. ',right' → logprob: -9.389423370361328
    5. ',
' → logprob: -11.264423370361328
    6. '   ' → logprob: -11.889423370361328
    7. ' ])' → logprob: -12.639423370361328
    8. '])
' → logprob: -12.889423370361328
    9. ')' → logprob: -12.889423370361328
    10. ',r' → logprob: -13.139423370361328

Token 283: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3489074110984802
    2. ' right' → logprob: -1.223907470703125
    3. ',right' → logprob: -8.223907470703125
    4. '   ' → logprob: -9.473907470703125
    5. '	right' → logprob: -10.098907470703125
    6. ' ' → logprob: -10.348907470703125
    7. '(right' → logprob: -10.973907470703125
    8. '    ' → logprob: -12.723907470703125
    9. '[right' → logprob: -12.723907470703125
    10. 'r' → logprob: -12.848907470703125

Token 284: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004014753212686628
    2. '])
' → logprob: -8.000401496887207
    3. ' ])' → logprob: -9.875401496887207
    4. ')' → logprob: -11.875401496887207
    5. '   ' → logprob: -12.750401496887207
    6. ' ' → logprob: -13.500401496887207
    7. ',' → logprob: -14.125401496887207
    8. '])

' → logprob: -14.625401496887207
    9. ']' → logprob: -14.750401496887207
    10. '       ' → logprob: -14.875401496887207

Token 285: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.003956105560064316
    2. 'print' → logprob: -5.878956317901611
    3. '
' → logprob: -7.878956317901611
    4. 'r' → logprob: -8.003955841064453
    5. 'for' → logprob: -8.378955841064453
    6. '(root' → logprob: -9.378955841064453
    7. 'node' → logprob: -10.003955841064453
    8. '[root' → logprob: -10.378955841064453
    9. '```' → logprob: -11.628955841064453
    10. '

' → logprob: -11.753955841064453

Token 286: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5328668355941772
    2. '_set' → logprob: -0.9078668355941772
    3. ' =' → logprob: -4.907866954803467
    4. '_s' → logprob: -6.782866954803467
    5. '_=' → logprob: -8.032866477966309
    6. '=' → logprob: -8.157866477966309
    7. '_index' → logprob: -9.032866477966309
    8. '=_' → logprob: -9.407866477966309
    9. 's' → logprob: -9.657866477966309
    10. ' _' → logprob: -9.907866477966309

Token 287: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.08630455285310745
    2. ' root' → logprob: -2.5863046646118164
    3. 'list' → logprob: -5.086304664611816
    4. ' list' → logprob: -6.961304664611816
    5. 'next' → logprob: -8.711304664611816
    6. ' next' → logprob: -9.836304664611816
    7. '(root' → logprob: -11.586304664611816
    8. 'min' → logprob: -11.586304664611816
    9. 'int' → logprob: -12.086304664611816
    10. '[root' → logprob: -12.086304664611816

Token 288: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00021843716967850924
    2. 'set' → logprob: -8.750218391418457
    3. '_' → logprob: -10.625218391418457
    4. '_list' → logprob: -11.250218391418457
    5. 'root' → logprob: -12.000218391418457
    6. '_id' → logprob: -12.500218391418457
    7. 'list' → logprob: -13.000218391418457
    8. '_root' → logprob: -13.250218391418457
    9. '_.' → logprob: -13.500218391418457
    10. 'Set' → logprob: -13.500218391418457

Token 289: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00010318557906430215
    2. 'pop' → logprob: -9.250102996826172
    3. '.' → logprob: -11.875102996826172
    4. '	pop' → logprob: -17.500102996826172
    5. ' .' → logprob: -18.250102996826172
    6. '_pop' → logprob: -18.875102996826172
    7. 'Pop' → logprob: -19.125102996826172
    8. ' pop' → logprob: -19.125102996826172
    9. '.copy' → logprob: -19.250102996826172
    10. '().' → logprob: -19.500102996826172

Token 290: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001177012687548995
    2. '(' → logprob: -6.751176834106445
    3. '()
' → logprob: -12.376176834106445
    4. '()`' → logprob: -14.251176834106445
    5. ' ()' → logprob: -14.376176834106445
    6. '();' → logprob: -15.376176834106445
    7. '()"' → logprob: -16.126176834106445
    8. '()

' → logprob: -16.126176834106445
    9. '()</' → logprob: -16.126176834106445
    10. '(
' → logprob: -16.251176834106445

Token 291: 'print' (ID: 1598)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00014847563579678535
    2. 'print' → logprob: -9.50014877319336
    3. '(tree' → logprob: -10.25014877319336
    4. '
' → logprob: -10.37514877319336
    5. 'node' → logprob: -13.00014877319336
    6. ' tree' → logprob: -13.25014877319336
    7. '	tree' → logprob: -14.00014877319336
    8. 'tre' → logprob: -14.87514877319336
    9. '<|end|>' → logprob: -15.00014877319336
    10. 't' → logprob: -15.12514877319336

Token 292: '("' (ID: 568)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.018818633630871773
    2. '(' → logprob: -4.5188188552856445
    3. '()' → logprob: -5.2688188552856445
    4. '('' → logprob: -7.2688188552856445
    5. '("")' → logprob: -7.6438188552856445
    6. '(".' → logprob: -7.6438188552856445
    7. '("' → logprob: -8.393818855285645
    8. '("."' → logprob: -8.393818855285645
    9. '(""' → logprob: -9.143818855285645
    10. '("(' → logprob: -9.518818855285645

Token 293: 'Pre' (ID: 4319)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8437139987945557
    2. 'pre' → logprob: -1.0937139987945557
    3. '")
' → logprob: -2.2187139987945557
    4. '"' → logprob: -2.9687139987945557
    5. 'Pre' → logprob: -3.3437139987945557
    6. '",' → logprob: -3.9687139987945557
    7. '1' → logprob: -5.343713760375977
    8. 'post' → logprob: -6.343713760375977
    9. '")

' → logprob: -6.343713760375977
    10. 'P' → logprob: -6.468713760375977

Token 294: 'order' (ID: 2143)
  Prédit: '-order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-order' → logprob: -0.5685250759124756
    2. 'order' → logprob: -1.5685250759124756
    3. '_order' → logprob: -1.5685250759124756
    4. '-' → logprob: -4.193525314331055
    5. 'Order' → logprob: -6.443525314331055
    6. '_Order' → logprob: -8.943525314331055
    7. ' order' → logprob: -9.693525314331055
    8. '_' → logprob: -11.068525314331055
    9. '_ORDER' → logprob: -11.193525314331055
    10. ' -' → logprob: -11.443525314331055

Token 295: '")
' (ID: 1896)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11296158283948898
    2. ' :' → logprob: -2.237961530685425
    3. ' traversal' → logprob: -9.737961769104004
    4. ' ")' → logprob: -11.112961769104004
    5. ' ")
' → logprob: -11.237961769104004
    6. '")' → logprob: -11.487961769104004
    7. 'Traversal' → logprob: -11.612961769104004
    8. ':")
' → logprob: -11.737961769104004
    9. '\n' → logprob: -12.612961769104004
    10. '"' → logprob: -12.612961769104004

Token 296: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.1193426102399826
    2. '()
' → logprob: -2.869342565536499
    3. '(tree' → logprob: -3.244342565536499
    4. '
' → logprob: -4.744342803955078
    5. ' tree' → logprob: -5.619342803955078
    6. '()' → logprob: -5.744342803955078
    7. '.tree' → logprob: -8.369342803955078
    8. '	tree' → logprob: -8.494342803955078
    9. ':' → logprob: -8.994342803955078
    10. ')
' → logprob: -9.119342803955078

Token 297: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.00020389800192788243
    2. '[' → logprob: -8.500204086303711
    3. '[node' → logprob: -16.00020408630371
    4. '[r' → logprob: -16.00020408630371
    5. '[
' → logprob: -16.62520408630371
    6. '[start' → logprob: -17.12520408630371
    7. 'root' → logprob: -17.50020408630371
    8. ' [' → logprob: -18.12520408630371
    9. '[parent' → logprob: -18.50020408630371
    10. '[now' → logprob: -18.50020408630371

Token 298: '].' (ID: 1651)
  Prédit: '.pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -0.002917691832408309
    2. '].' → logprob: -6.127917766571045
    3. ').' → logprob: -7.627917766571045
    4. '.post' → logprob: -8.627917289733887
    5. ' .' → logprob: -10.752917289733887
    6. '.' → logprob: -10.752917289733887
    7. '}.' → logprob: -11.752917289733887
    8. '.print' → logprob: -12.252917289733887
    9. '>.' → logprob: -13.377917289733887
    10. '.p' → logprob: -13.502917289733887

Token 299: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -4.320199877838604e-07
    2. 'post' → logprob: -15.25
    3. ' pre' → logprob: -16.625
    4. '_pre' → logprob: -17.25
    5. 'p' → logprob: -17.625
    6. '	pre' → logprob: -18.75
    7. 'pr' → logprob: -19.5
    8. '```' → logprob: -19.875
    9. '   ' → logprob: -20.0
    10. '.pre' → logprob: -20.125

Token 300: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -4.990154047845863e-05
    2. '_' → logprob: -10.250049591064453
    3. 'order' → logprob: -11.500049591064453
    4. '_or' → logprob: -13.500049591064453
    5. '_ord' → logprob: -13.750049591064453
    6. '_o' → logprob: -14.250049591064453
    7. ' _' → logprob: -15.375049591064453
    8. '__' → logprob: -15.875049591064453
    9. 'Order' → logprob: -16.125049591064453
    10. '```' → logprob: -16.250049591064453

Token 301: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -5.133198283147067e-05
    2. '_' → logprob: -10.125051498413086
    3. 'search' → logprob: -11.875051498413086
    4. '_se' → logprob: -13.125051498413086
    5. '_s' → logprob: -13.250051498413086
    6. ' _' → logprob: -15.375051498413086
    7. '_order' → logprob: -16.625051498413086
    8. '```' → logprob: -17.125051498413086
    9. '_ser' → logprob: -17.125051498413086
    10. '_print' → logprob: -17.375051498413086

Token 302: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008781121578067541
    2. '(' → logprob: -7.50087833404541
    3. '()
' → logprob: -8.12587833404541
    4. '()

' → logprob: -11.62587833404541
    5. '()`' → logprob: -12.75087833404541
    6. ' ()' → logprob: -13.25087833404541
    7. '();' → logprob: -13.37587833404541
    8. '(
' → logprob: -13.50087833404541
    9. '())' → logprob: -13.50087833404541
    10. '()<' → logprob: -13.50087833404541

Token 303: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009159822366200387
    2. '
' → logprob: -7.000916004180908
    3. '\n' → logprob: -12.75091552734375
    4. '
' → logprob: -14.00091552734375
    5. ' print' → logprob: -15.00091552734375
    6. '()
' → logprob: -15.75091552734375
    7. '```' → logprob: -16.62591552734375
    8. ' 
' → logprob: -16.75091552734375
    9. '    
' → logprob: -17.37591552734375
    10. '\' → logprob: -17.50091552734375

Token 304: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005874642520211637
    2. '("")' → logprob: -7.625587463378906
    3. '()
' → logprob: -9.375587463378906
    4. '("' → logprob: -12.375587463378906
    5. '(' → logprob: -12.625587463378906
    6. '("("' → logprob: -12.750587463378906
    7. ' ()' → logprob: -13.000587463378906
    8. '()

' → logprob: -13.500587463378906
    9. '("\' → logprob: -15.250587463378906
    10. '()"' → logprob: -16.125587463378906

Token 305: '")

' (ID: 10822)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0472685769200325
    2. '()
' → logprob: -3.2972686290740967
    3. '("\' → logprob: -4.922268390655518
    4. '("")' → logprob: -7.172268390655518
    5. '()\' → logprob: -7.797268390655518
    6. '")' → logprob: -8.672268867492676
    7. '\n' → logprob: -8.797268867492676
    8. '"\' → logprob: -9.047268867492676
    9. '()

' → logprob: -9.297268867492676
    10. '"' → logprob: -9.422268867492676

Token 306: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'Print' → logprob: -18.125
    3. ' print' → logprob: -18.625
    4. '
' → logprob: -18.75
    5. '#print' → logprob: -21.0
    6. '```' → logprob: -21.125
    7. '.print' → logprob: -21.375
    8. '(print' → logprob: -21.625
    9. '"' → logprob: -22.125
    10. '  
' → logprob: -22.375

Token 307: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0044105323031544685
    2. '("("' → logprob: -6.004410743713379
    3. '(' → logprob: -6.254410743713379
    4. '(""' → logprob: -12.504410743713379
    5. '("")' → logprob: -12.629410743713379
    6. '("(' → logprob: -13.004410743713379
    7. '(
' → logprob: -15.004410743713379
    8. '"' → logprob: -15.004410743713379
    9. ' ("' → logprob: -15.629410743713379
    10. '("\' → logprob: -15.754410743713379

Token 308: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.0017152780201286077
    2. '"In' → logprob: -6.751715183258057
    3. '"' → logprob: -8.751715660095215
    4. '""' → logprob: -9.251715660095215
    5. 'in' → logprob: -9.501715660095215
    6. '\"' → logprob: -9.626715660095215
    7. 'Post' → logprob: -10.126715660095215
    8. '"in' → logprob: -10.501715660095215
    9. '")
' → logprob: -10.876715660095215
    10. '"""' → logprob: -11.501715660095215

Token 309: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.08113511651754379
    2. '_order' → logprob: -3.0811350345611572
    3. 'Order' → logprob: -3.5811350345611572
    4. ' order' → logprob: -5.706135272979736
    5. ' Order' → logprob: -7.831135272979736
    6. '_' → logprob: -8.331134796142578
    7. '   ' → logprob: -10.206134796142578
    8. 'o' → logprob: -10.206134796142578
    9. '_Order' → logprob: -10.581134796142578
    10. '-order' → logprob: -10.706134796142578

Token 310: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.011066683568060398
    2. '")' → logprob: -4.511066913604736
    3. '")
' → logprob: -11.011066436767578
    4. '")

' → logprob: -14.261066436767578
    5. '"' → logprob: -14.386066436767578
    6. '(tree' → logprob: -14.761066436767578
    7. '()' → logprob: -15.386066436767578
    8. 'tree' → logprob: -15.636066436767578
    9. ')
' → logprob: -16.011066436767578
    10. '')
' → logprob: -16.636066436767578

Token 311: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.9361264946837764e-07
    2. '(tree' → logprob: -16.25
    3. ' tree' → logprob: -16.5
    4. '	tree' → logprob: -20.75
    5. '
' → logprob: -22.625
    6. 'tre' → logprob: -22.625
    7. 'trees' → logprob: -22.75
    8. '.tree' → logprob: -22.875
    9. '/tree' → logprob: -23.25
    10. 't' → logprob: -23.875

Token 312: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -3.547789674485102e-05
    2. '[' → logprob: -10.250035285949707
    3. '[r' → logprob: -17.875036239624023
    4. '```' → logprob: -18.500036239624023
    5. '[
' → logprob: -19.375036239624023
    6. '[row' → logprob: -19.500036239624023
    7. '[node' → logprob: -19.750036239624023
    8. 'root' → logprob: -20.000036239624023
    9. ' [' → logprob: -20.125036239624023
    10. '[right' → logprob: -20.375036239624023

Token 313: '].' (ID: 1651)
  Prédit: '.in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.20159703493118286
    2. '].' → logprob: -1.701596975326538
    3. '.' → logprob: -9.451597213745117
    4. ').' → logprob: -9.701597213745117
    5. '.inter' → logprob: -11.076597213745117
    6. '}.' → logprob: -11.826597213745117
    7. ']' → logprob: -12.951597213745117
    8. ' ].' → logprob: -12.951597213745117
    9. '[in' → logprob: -13.201597213745117
    10. '>.' → logprob: -13.326597213745117

Token 314: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -2.5776860184123507e-06
    2. ' in' → logprob: -13.00000286102295
    3. 'pre' → logprob: -15.25000286102295
    4. '   ' → logprob: -17.375001907348633
    5. ' ' → logprob: -18.500001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'i' → logprob: -19.000001907348633
    8. '_in' → logprob: -19.125001907348633
    9. 'post' → logprob: -19.250001907348633
    10. '  ' → logprob: -19.250001907348633

Token 315: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00019901065388694406
    2. 'order' → logprob: -8.625199317932129
    3. '_' → logprob: -10.875199317932129
    4. 'o' → logprob: -15.875199317932129
    5. '_search' → logprob: -16.500198364257812
    6. '_tree' → logprob: -16.875198364257812
    7. ' _' → logprob: -16.875198364257812
    8. '   ' → logprob: -17.000198364257812
    9. '_node' → logprob: -17.625198364257812
    10. '_or' → logprob: -17.875198364257812

Token 316: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.004116153810173273
    2. 'search' → logprob: -5.504116058349609
    3. '_order' → logprob: -10.50411605834961
    4. 'order' → logprob: -11.50411605834961
    5. '_' → logprob: -16.62911605834961
    6. 'tree' → logprob: -17.75411605834961
    7. '_s' → logprob: -17.75411605834961
    8. '```' → logprob: -18.12911605834961
    9. '_tree' → logprob: -18.37911605834961
    10. '   ' → logprob: -18.50411605834961

Token 317: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010567454155534506
    2. '()
' → logprob: -6.876056671142578
    3. '(' → logprob: -11.001056671142578
    4. '()

' → logprob: -12.876056671142578
    5. '()`' → logprob: -13.376056671142578
    6. ' ()' → logprob: -14.251056671142578
    7. '()
' → logprob: -14.376056671142578
    8. '()\' → logprob: -14.876056671142578
    9. '()<' → logprob: -15.251056671142578
    10. '();' → logprob: -15.251056671142578

Token 318: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012535012501757592
    2. '()
' → logprob: -9.00012493133545
    3. '()' → logprob: -13.37512493133545
    4. '
' → logprob: -15.25012493133545
    5. ' print' → logprob: -16.500125885009766
    6. '```' → logprob: -18.250125885009766
    7. '(print' → logprob: -18.875125885009766
    8. '()
' → logprob: -18.875125885009766
    9. '``' → logprob: -19.000125885009766
    10. '()\' → logprob: -19.250125885009766

Token 319: '("' (ID: 568)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.0008476253715343773
    2. '()' → logprob: -7.375847816467285
    3. '(' → logprob: -8.625847816467285
    4. '(""' → logprob: -11.000847816467285
    5. '("")
' → logprob: -11.000847816467285
    6. '("' → logprob: -12.500847816467285
    7. '("("' → logprob: -13.375847816467285
    8. '""' → logprob: -13.625847816467285
    9. '("");' → logprob: -13.875847816467285
    10. '("").' → logprob: -15.125847816467285

Token 320: '")

' (ID: 10822)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3595285415649414
    2. '"' → logprob: -1.3595285415649414
    3. '")' → logprob: -3.1095285415649414
    4. '("")' → logprob: -7.484528541564941
    5. ')' → logprob: -10.734528541564941
    6. '"\' → logprob: -12.609528541564941
    7. '"""' → logprob: -13.734528541564941
    8. '")

' → logprob: -14.484528541564941
    9. '''' → logprob: -14.609528541564941
    10. ''' → logprob: -14.734528541564941

Token 321: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. 'Print' → logprob: -14.875000953674316
    3. 'Post' → logprob: -16.25
    4. ' print' → logprob: -16.875
    5. 'post' → logprob: -17.75
    6. '"' → logprob: -17.875
    7. 'pr' → logprob: -20.0
    8. 'Pr' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '
' → logprob: -20.625

Token 322: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007045102305710316
    2. '(' → logprob: -5.007045269012451
    3. '("("' → logprob: -8.132044792175293
    4. '(""' → logprob: -10.632044792175293
    5. '("")' → logprob: -11.632044792175293
    6. ')("' → logprob: -14.507044792175293
    7. '(
' → logprob: -14.632044792175293
    8. '("(' → logprob: -14.632044792175293
    9. '("""' → logprob: -15.007044792175293
    10. '"' → logprob: -15.007044792175293

Token 323: 'Post' (ID: 4606)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39117851853370667
    2. 'Post' → logprob: -1.1411784887313843
    3. 'post' → logprob: -5.516178607940674
    4. '("' → logprob: -8.641178131103516
    5. ''' → logprob: -10.891178131103516
    6. 'POST' → logprob: -11.516178131103516
    7. 'Pre' → logprob: -11.766178131103516
    8. '")' → logprob: -12.016178131103516
    9. '(Post' → logprob: -12.016178131103516
    10. '```' → logprob: -12.141178131103516

Token 324: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.309382373117842e-05
    2. '_order' → logprob: -10.375033378601074
    3. 'Order' → logprob: -13.500033378601074
    4. ' order' → logprob: -15.625033378601074
    5. '-order' → logprob: -15.875033378601074
    6. 'ordre' → logprob: -16.750032424926758
    7. 'orde' → logprob: -17.125032424926758
    8. 'ORDER' → logprob: -17.500032424926758
    9. 'ordering' → logprob: -17.625032424926758
    10. '
' → logprob: -18.125032424926758

Token 325: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.018160121515393257
    2. '")' → logprob: -4.018160343170166
    3. ')
' → logprob: -12.268159866333008
    4. '")
' → logprob: -13.018159866333008
    5. '")

' → logprob: -14.018159866333008
    6. '"' → logprob: -14.018159866333008
    7. '')
' → logprob: -14.393159866333008
    8. ' ")
' → logprob: -15.143159866333008
    9. '```' → logprob: -15.143159866333008
    10. '"
' → logprob: -15.518159866333008

Token 326: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.9361264946837764e-07
    2. ' tree' → logprob: -16.5
    3. '	tree' → logprob: -18.625
    4. '(tree' → logprob: -19.0
    5. 'trees' → logprob: -22.25
    6. 'tre' → logprob: -22.25
    7. '.tree' → logprob: -22.5
    8. '/tree' → logprob: -22.5
    9. '```' → logprob: -23.125
    10. 'Tree' → logprob: -23.625

Token 327: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.750007629394531
    3. '[node' → logprob: -17.37500762939453
    4. '[
' → logprob: -18.87500762939453
    5. '[r' → logprob: -18.87500762939453
    6. '[row' → logprob: -19.00000762939453
    7. '[right' → logprob: -19.75000762939453
    8. '```' → logprob: -19.75000762939453
    9. 'root' → logprob: -20.00000762939453
    10. '[user' → logprob: -20.12500762939453

Token 328: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.028682466596364975
    2. '.' → logprob: -3.7786824703216553
    3. '[' → logprob: -5.778682231903076
    4. '.post' → logprob: -6.403682231903076
    5. ']' → logprob: -8.403682708740234
    6. ').' → logprob: -8.903682708740234
    7. '[root' → logprob: -8.903682708740234
    8. ' .' → logprob: -9.528682708740234
    9. '}.' → logprob: -10.278682708740234
    10. '[node' → logprob: -10.903682708740234

Token 329: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -1.3663626305060461e-05
    2. 'search' → logprob: -11.25001335144043
    3. '_search' → logprob: -14.50001335144043
    4. '_post' → logprob: -16.62501335144043
    5. ' post' → logprob: -17.12501335144043
    6. 'pre' → logprob: -19.50001335144043
    7. '```' → logprob: -20.00001335144043
    8. '   ' → logprob: -21.62501335144043
    9. '(post' → logprob: -21.75001335144043
    10. '	post' → logprob: -21.87501335144043

Token 330: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.500020027160645
    3. 'order' → logprob: -12.125020027160645
    4. '_search' → logprob: -13.000020027160645
    5. ' _' → logprob: -14.375020027160645
    6. '```' → logprob: -15.000020027160645
    7. '-order' → logprob: -15.375020027160645
    8. '_ord' → logprob: -15.750020027160645
    9. '_ORDER' → logprob: -16.125019073486328
    10. '_orders' → logprob: -16.375019073486328

Token 331: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -2.47495681833243e-05
    2. 'search' → logprob: -10.625024795532227
    3. '_se' → logprob: -14.875024795532227
    4. '_' → logprob: -17.000024795532227
    5. 'Search' → logprob: -18.375024795532227
    6. '_s' → logprob: -19.000024795532227
    7. '_SEARCH' → logprob: -19.500024795532227
    8. '_
' → logprob: -20.250024795532227
    9. '_Search' → logprob: -20.250024795532227
    10. '_visit' → logprob: -20.500024795532227

Token 332: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012773419439326972
    2. '()
' → logprob: -9.375127792358398
    3. '(' → logprob: -10.250127792358398
    4. ' ()' → logprob: -13.250127792358398
    5. '()`' → logprob: -13.375127792358398
    6. '()

' → logprob: -13.625127792358398
    7. '()<' → logprob: -14.125127792358398
    8. '())' → logprob: -14.875127792358398
    9. '();' → logprob: -14.875127792358398
    10. '()]' → logprob: -15.500127792358398

Token 333: 'print' (ID: 1598)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010681328363716602
    2. 'print' → logprob: -4.63568115234375
    3. '()
' → logprob: -8.01068115234375
    4. '(' → logprob: -8.76068115234375
    5. '```' → logprob: -9.26068115234375
    6. ')' → logprob: -9.38568115234375
    7. '()\' → logprob: -9.38568115234375
    8. '())' → logprob: -9.63568115234375
    9. '("")' → logprob: -10.76068115234375
    10. ' ()' → logprob: -10.76068115234375

Token 334: '("")' (ID: 53912)
  Prédit: '("")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.10029885917901993
    2. '()' → logprob: -2.3502988815307617
    3. '(' → logprob: -9.725298881530762
    4. '("")
' → logprob: -11.225298881530762
    5. '""' → logprob: -12.100298881530762
    6. '(""' → logprob: -12.350298881530762
    7. '("' → logprob: -12.475298881530762
    8. '("("' → logprob: -13.350298881530762
    9. '()
' → logprob: -13.725298881530762
    10. '("");' → logprob: -14.600298881530762


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 332
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 185
Tokens correctement prédits (top 10): 301
Précision stricte (1ère position): 50.60%
Précision adaptée (1ère position): 55.72%
Précision (top 10): 90.66%
================================================================================
