================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python
from __future__ import division, print_function
from sys import stdin, maxint

def main():
    num = int(stdin.readline())

    L = []
    for _ in xrange(num):
        it = iter(int(s) for s in stdin.readline().split()[1:])
        L.append([(next(it), next(it)) for _ in xrange(next(it))])

    weight = [maxint] * num
    weight[0] = 0
    V = set(xrange(1, num))
    index = 0

    while V:
        for v, cost in L[index]:
            if v not in V:
                continue
            weight[v] = min(weight[v], cost + weight[index])

        index = min(V, key=lambda i: weight[i])
        V.remove(index)

    for i, d in enumerate(weight):
        print(i, d)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815128743648529
    2. '/env' → logprob: -1.2315129041671753
    3. '/python' → logprob: -2.4815127849578857
    4. '/bash' → logprob: -5.231513023376465
    5. '/bin' → logprob: -6.731513023376465
    6. 'python' → logprob: -9.356513023376465
    7. '#!/' → logprob: -11.106513023376465
    8. 'env' → logprob: -11.481513023376465
    9. '/b' → logprob: -11.481513023376465
    10. '/per' → logprob: -12.481513023376465

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16446582973003387
    2. '\' → logprob: -2.28946590423584
    3. '```' → logprob: -3.66446590423584
    4. 'import' → logprob: -4.16446590423584
    5. '  
' → logprob: -5.91446590423584
    6. '3' → logprob: -6.03946590423584
    7. ' 
' → logprob: -7.16446590423584
    8. '\r' → logprob: -7.53946590423584
    9. '#' → logprob: -7.53946590423584
    10. '' → logprob: -7.66446590423584

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5805937647819519
    2. 'import' → logprob: -0.9555937647819519
    3. '```' → logprob: -3.8305938243865967
    4. '-' → logprob: -4.080593585968018
    5. '-import' → logprob: -5.455593585968018
    6. '\' → logprob: -5.580593585968018
    7. '' → logprob: -6.080593585968018
    8. '  
' → logprob: -6.580593585968018
    9. '3' → logprob: -7.330593585968018
    10. '\r' → logprob: -7.455593585968018

Token 7: ' __' (ID: 2516)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.14748643338680267
    2. ' sys' → logprob: -2.897486448287964
    3. ' ' → logprob: -3.272486448287964
    4. ' flask' → logprob: -4.022486209869385
    5. ' collections' → logprob: -4.522486209869385
    6. ' math' → logprob: -5.147486209869385
    7. ' space' → logprob: -6.772486209869385
    8. ' python' → logprob: -6.897486209869385
    9. ' ' → logprob: -7.022486209869385
    10. ' pathlib' → logprob: -7.272486209869385

Token 8: 'future' (ID: 48758)
  Prédit: 'future'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'future' → logprob: -0.00010115911572938785
    2. 'import' → logprob: -9.250101089477539
    3. 'f' → logprob: -13.125101089477539
    4. ' future' → logprob: -13.500101089477539
    5. '_future' → logprob: -13.750101089477539
    6. 'Future' → logprob: -15.500101089477539
    7. 'main' → logprob: -16.12510108947754
    8. 'fu' → logprob: -17.25010108947754
    9. 'builtin' → logprob: -17.50010108947754
    10. 'init' → logprob: -17.87510108947754

Token 9: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00173158326651901
    2. '_' → logprob: -6.3767313957214355
    3. 'import' → logprob: -11.251731872558594
    4. '____' → logprob: -11.876731872558594
    5. '_import' → logprob: -12.501731872558594
    6. '___' → logprob: -13.376731872558594
    7. '__.__' → logprob: -13.376731872558594
    8. ' import' → logprob: -13.876731872558594
    9. '_____' → logprob: -14.001731872558594
    10. '.' → logprob: -15.626731872558594

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09088540077209473
    2. 'import' → logprob: -2.9658854007720947
    3. ' ' → logprob: -3.8408854007720947
    4. '_' → logprob: -4.465885162353516
    5. '_import' → logprob: -6.965885162353516
    6. '__' → logprob: -7.090885162353516
    7. ' imports' → logprob: -7.840885162353516
    8. '.' → logprob: -10.340885162353516
    9. '  ' → logprob: -10.465885162353516
    10. 'space' → logprob: -10.840885162353516

Token 11: ' division' (ID: 21629)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6653830409049988
    2. ' division' → logprob: -1.1653831005096436
    3. ' absolute' → logprob: -2.2903831005096436
    4. ' space' → logprob: -2.9153831005096436
    5. ' unicode' → logprob: -5.0403828620910645
    6. ' ' → logprob: -5.2903828620910645
    7. ' ' → logprob: -6.1653828620910645
    8. ' __' → logprob: -6.9153828620910645
    9. '_' → logprob: -6.9153828620910645
    10. ' annotations' → logprob: -7.4153828620910645

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3562070429325104
    2. '

' → logprob: -1.731207013130188
    3. '\n' → logprob: -2.7312071323394775
    4. '<|end|>' → logprob: -3.7312071323394775
    5. ' 

' → logprob: -4.606206893920898
    6. 'import' → logprob: -4.856206893920898
    7. '```' → logprob: -5.606206893920898
    8. '' → logprob: -5.731206893920898
    9. '<|end|>' → logprob: -6.731206893920898
    10. 'newline' → logprob: -6.981206893920898

Token 13: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8630322813987732
    2. 'absolute' → logprob: -1.113032341003418
    3. ' print' → logprob: -1.863032341003418
    4. ' absolute' → logprob: -2.363032341003418
    5. 'unicode' → logprob: -8.863032341003418
    6. ' unicode' → logprob: -9.488032341003418
    7. '```' → logprob: -13.988032341003418
    8. '_print' → logprob: -13.988032341003418
    9. '_absolute' → logprob: -13.988032341003418
    10. 'with' → logprob: -14.738032341003418

Token 14: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.007776863873004913
    2. '_' → logprob: -4.882776737213135
    3. '_statement' → logprob: -8.882777214050293
    4. '_line' → logprob: -12.132777214050293
    5. 'function' → logprob: -12.132777214050293
    6. '_f' → logprob: -12.507777214050293
    7. '_token' → logprob: -13.382777214050293
    8. '_factor' → logprob: -13.632777214050293
    9. '_format' → logprob: -14.132777214050293
    10. '_fun' → logprob: -14.257777214050293

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5261962413787842
    2. '

' → logprob: -1.0261962413787842
    3. 'import' → logprob: -3.776196241378784
    4. '<|end|>' → logprob: -4.401196479797363
    5. ' 

' → logprob: -4.526196479797363
    6. '\n' → logprob: -6.401196479797363
    7. ' 
' → logprob: -6.776196479797363
    8. '


' → logprob: -7.776196479797363
    9. '#' → logprob: -8.151196479797363
    10. '
' → logprob: -8.151196479797363

Token 16: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.40613994002342224
    2. '

' → logprob: -1.9061399698257446
    3. '
' → logprob: -2.281139850616455
    4. '<|end|>' → logprob: -3.531139850616455
    5. ' 

' → logprob: -3.906139850616455
    6. '```' → logprob: -4.281139850616455
    7. '\n' → logprob: -4.656139850616455
    8. '#' → logprob: -6.031139850616455
    9. '' → logprob: -6.656139850616455
    10. ' 
' → logprob: -7.281139850616455

Token 17: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.330766886472702
    2. ' sys' → logprob: -2.0807669162750244
    3. ' collections' → logprob: -3.0807669162750244
    4. ' os' → logprob: -3.2057669162750244
    5. ' __' → logprob: -4.205766677856445
    6. '__' → logprob: -4.330766677856445
    7. ' itertools' → logprob: -4.330766677856445
    8. ' future' → logprob: -4.580766677856445
    9. 'collections' → logprob: -5.955766677856445
    10. ' space' → logprob: -6.205766677856445

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0005013240152038634
    2. 'import' → logprob: -7.6255011558532715
    3. ' ' → logprob: -11.37550163269043
    4. '	import' → logprob: -14.37550163269043
    5. ' imports' → logprob: -14.75050163269043
    6. '<|end|>' → logprob: -14.75050163269043
    7. ' im' → logprob: -16.25050163269043
    8. '_import' → logprob: -16.25050163269043
    9. ' importar' → logprob: -16.87550163269043
    10. '-import' → logprob: -17.37550163269043

Token 19: ' stdin' (ID: 75143)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.2839343845844269
    2. ' exit' → logprob: -1.5339343547821045
    3. 'argv' → logprob: -4.283934593200684
    4. ' stdin' → logprob: -5.158934593200684
    5. ' stderr' → logprob: -5.408934593200684
    6. ' stdout' → logprob: -6.033934593200684
    7. 'stderr' → logprob: -6.158934593200684
    8. ' version' → logprob: -6.783934593200684
    9. 'exit' → logprob: -7.283934593200684
    10. 'stdout' → logprob: -7.658934593200684

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8037242293357849
    2. 'import' → logprob: -1.5537242889404297
    3. ',' → logprob: -1.9287242889404297
    4. '<|end|>' → logprob: -2.3037242889404297
    5. '' → logprob: -3.4287242889404297
    6. '

' → logprob: -3.9287242889404297
    7. '\n' → logprob: -4.17872428894043
    8. '```' → logprob: -4.42872428894043
    9. 'newline' → logprob: -5.92872428894043
    10. '<|end|>' → logprob: -6.17872428894043

Token 21: ' max' (ID: 2999)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.16294719278812408
    2. ' stdout' → logprob: -1.912947177886963
    3. 'stderr' → logprob: -6.037947177886963
    4. 'argv' → logprob: -8.912947654724121
    5. ' stderr' → logprob: -9.287947654724121
    6. ' argv' → logprob: -10.037947654724121
    7. '.stdout' → logprob: -10.412947654724121
    8. 'exit' → logprob: -11.662947654724121
    9. '(stdout' → logprob: -11.912947654724121
    10. '_stdout' → logprob: -12.037947654724121

Token 22: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6934458017349243
    2. 'size' → logprob: -0.6934458017349243
    3. 'unicode' → logprob: -8.193446159362793
    4. '_int' → logprob: -11.818446159362793
    5. 'uint' → logprob: -12.693446159362793
    6. 'integer' → logprob: -13.193446159362793
    7. 'imum' → logprob: -13.443446159362793
    8. 'depth' → logprob: -13.568446159362793
    9. '_' → logprob: -13.943446159362793
    10. 'siz' → logprob: -14.068446159362793

Token 23: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9495546817779541
    2. 'import' → logprob: -1.324554681777954
    3. '
' → logprob: -2.074554681777954
    4. '

' → logprob: -2.199554681777954
    5. '' → logprob: -3.449554681777954
    6. '#' → logprob: -3.574554681777954
    7. '<|end|>' → logprob: -3.574554681777954
    8. '```' → logprob: -5.449554443359375
    9. '' → logprob: -6.074554443359375
    10. 'from' → logprob: -6.199554443359375

Token 24: 'def' (ID: 1314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5427297353744507
    2. ',' → logprob: -1.6677297353744507
    3. '

' → logprob: -2.2927298545837402
    4. '
' → logprob: -2.7927298545837402
    5. '<|end|>' → logprob: -3.9177298545837402
    6. 'def' → logprob: -4.16772985458374
    7. '#' → logprob: -4.54272985458374
    8. 'x' → logprob: -5.41772985458374
    9. 'from' → logprob: -5.79272985458374
    10. '' → logprob: -6.04272985458374

Token 25: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16738104820251465
    2. ' main' → logprob: -2.2923810482025146
    3. ' factorial' → logprob: -4.167381286621094
    4. ' foo' → logprob: -4.917381286621094
    5. ' factor' → logprob: -5.292381286621094
    6. ' read' → logprob: -5.417381286621094
    7. ' calculate' → logprob: -5.917381286621094
    8. ' fibonacci' → logprob: -6.042381286621094
    9. ' add' → logprob: -6.167381286621094
    10. ' f' → logprob: -6.292381286621094

Token 26: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3876761496067047
    2. '(' → logprob: -1.1376761198043823
    3. '(:' → logprob: -8.012676239013672
    4. '(
' → logprob: -9.137676239013672
    5. '()' → logprob: -9.137676239013672
    6. ' ():' → logprob: -9.262676239013672
    7. '():
' → logprob: -10.012676239013672
    8. ':' → logprob: -10.262676239013672
    9. '(":' → logprob: -10.512676239013672
    10. ' (' → logprob: -10.637676239013672

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035432104021310806
    2. ':' → logprob: -4.6604323387146
    3. '    ' → logprob: -4.6604323387146
    4. ' ' → logprob: -4.6604323387146
    5. '    
' → logprob: -6.2854323387146
    6. '<|end|>' → logprob: -7.0354323387146
    7. '  ' → logprob: -7.5354323387146
    8. '
' → logprob: -7.6604323387146
    9. ' 
' → logprob: -7.7854323387146
    10. ' :' → logprob: -7.9104323387146

Token 28: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016604211181402206
    2. '    ' → logprob: -5.016604423522949
    3. '   ' → logprob: -5.266604423522949
    4. 'i' → logprob: -7.016604423522949
    5. '  ' → logprob: -7.141604423522949
    6. 'n' → logprob: -7.391604423522949
    7. 'x' → logprob: -8.26660442352295
    8. ' i' → logprob: -8.26660442352295
    9. ' n' → logprob: -8.26660442352295
    10. 'r' → logprob: -8.39160442352295

Token 29: ' =' (ID: 314)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.008745286613702774
    2. 'bers' → logprob: -5.633745193481445
    3. 's' → logprob: -6.133745193481445
    4. ' =' → logprob: -6.633745193481445
    5. '=' → logprob: -8.008745193481445
    6. '_' → logprob: -8.258745193481445
    7. '_items' → logprob: -8.258745193481445
    8. '_tokens' → logprob: -8.633745193481445
    9. '_lines' → logprob: -9.383745193481445
    10. '_users' → logprob: -9.758745193481445

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.009206168353557587
    2. 'int' → logprob: -5.009206295013428
    3. ' ' → logprob: -6.259206295013428
    4. ' max' → logprob: -8.38420581817627
    5. ' stdin' → logprob: -8.88420581817627
    6. ' float' → logprob: -9.50920581817627
    7. ' map' → logprob: -10.13420581817627
    8. ' len' → logprob: -10.88420581817627
    9. ' input' → logprob: -11.13420581817627
    10. '0' → logprob: -11.38420581817627

Token 31: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.16214074194431305
    2. '(' → logprob: -1.9121407270431519
    3. '(st' → logprob: -6.662140846252441
    4. '(input' → logprob: -7.412140846252441
    5. '(raw' → logprob: -11.037140846252441
    6. '('' → logprob: -12.787140846252441
    7. '()' → logprob: -12.912140846252441
    8. ' (' → logprob: -12.912140846252441
    9. '(s' → logprob: -13.537140846252441
    10. '(open' → logprob: -14.037140846252441

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10110199451446533
    2. '().' → logprob: -2.476101875305176
    3. '())' → logprob: -5.101101875305176
    4. '()' → logprob: -5.726101875305176
    5. '.read' → logprob: -5.976101875305176
    6. 'read' → logprob: -9.476101875305176
    7. '.' → logprob: -9.851101875305176
    8. '(' → logprob: -10.476101875305176
    9. ')' → logprob: -11.101101875305176
    10. '(read' → logprob: -12.101101875305176

Token 33: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000871082826051861
    2. '()' → logprob: -7.250871181488037
    3. '().' → logprob: -8.875870704650879
    4. ' ())' → logprob: -11.125870704650879
    5. '()))' → logprob: -12.250870704650879
    6. '())
' → logprob: -14.750870704650879
    7. ')' → logprob: -14.750870704650879
    8. '();)' → logprob: -15.125870704650879
    9. '()]' → logprob: -15.250870704650879
    10. '(' → logprob: -15.500870704650879

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011067868210375309
    2. ' ' → logprob: -5.636067867279053
    3. ' for' → logprob: -6.011067867279053
    4. 'for' → logprob: -6.386067867279053
    5. '
' → logprob: -7.011067867279053
    6. '<|end|>' → logprob: -7.386067867279053
    7. '  ' → logprob: -7.636067867279053
    8. ')' → logprob: -7.886067867279053
    9. '    
' → logprob: -8.011068344116211
    10. '    ' → logprob: -9.011068344116211

Token 35: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11482786387205124
    2. ' for' → logprob: -2.739827871322632
    3. 'result' → logprob: -4.239827632904053
    4. '   ' → logprob: -4.989827632904053
    5. 'total' → logprob: -5.114827632904053
    6. ' ' → logprob: -5.739827632904053
    7. 'sum' → logprob: -6.364827632904053
    8. 'if' → logprob: -6.364827632904053
    9. 'factor' → logprob: -6.489827632904053
    10. 'count' → logprob: -6.614827632904053

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14632785320281982
    2. '=' → logprob: -2.1463279724121094
    3. 'ist' → logprob: -4.646327972412109
    4. 'ine' → logprob: -5.271327972412109
    5. '=[]' → logprob: -6.396327972412109
    6. '_' → logprob: -7.896327972412109
    7. 'IST' → logprob: -8.02132797241211
    8. 'ines' → logprob: -8.27132797241211
    9. 'INE' → logprob: -8.27132797241211
    10. '   ' → logprob: -8.39632797241211

Token 37: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7257283329963684
    2. ' []' → logprob: -0.7257283329963684
    3. '[]' → logprob: -3.9757282733917236
    4. '[' → logprob: -4.850728511810303
    5. '[int' → logprob: -6.350728511810303
    6. '[num' → logprob: -6.725728511810303
    7. ' list' → logprob: -7.350728511810303
    8. '[max' → logprob: -8.100728034973145
    9. 'range' → logprob: -8.100728034973145
    10. ' range' → logprob: -8.225728034973145

Token 38: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14939895272254944
    2. '   ' → logprob: -2.3993990421295166
    3. ' for' → logprob: -3.1493990421295166
    4. '<|end|>' → logprob: -6.0243988037109375
    5. '
' → logprob: -7.0243988037109375
    6. ' ' → logprob: -7.1493988037109375
    7. '    
' → logprob: -8.024398803710938
    8. '    ' → logprob: -8.649398803710938
    9. '	for' → logprob: -8.774398803710938
    10. '<|end|>' → logprob: -9.274398803710938

Token 39: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07160183042287827
    2. ' for' → logprob: -2.6966018676757812
    3. '   ' → logprob: -6.446601867675781
    4. ' ' → logprob: -10.071601867675781
    5. '	for' → logprob: -11.196601867675781
    6. '
' → logprob: -11.946601867675781
    7. '    
' → logprob: -12.321601867675781
    8. '  ' → logprob: -13.071601867675781
    9. ' 
' → logprob: -13.196601867675781
    10. '    ' → logprob: -13.196601867675781

Token 40: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.041551120579242706
    2. ' i' → logprob: -3.666551113128662
    3. ' ' → logprob: -4.541551113128662
    4. '_' → logprob: -5.416551113128662
    5. '  ' → logprob: -11.16655158996582
    6. 'i' → logprob: -11.29155158996582
    7. ' ' → logprob: -12.04155158996582
    8. '_i' → logprob: -14.04155158996582
    9. ' in' → logprob: -14.29155158996582
    10. ' ▁' → logprob: -14.66655158996582

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10278428345918655
    2. 'in' → logprob: -2.3527843952178955
    3. ' ' → logprob: -6.102784156799316
    4. '  ' → logprob: -9.102784156799316
    5. 'i' → logprob: -9.352784156799316
    6. 'num' → logprob: -10.352784156799316
    7. ' i' → logprob: -10.727784156799316
    8. 'count' → logprob: -11.602784156799316
    9. 'range' → logprob: -11.727784156799316
    10. '```' → logprob: -11.852784156799316

Token 42: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009988710517063737
    2. ' range' → logprob: -7.3759989738464355
    3. 'x' → logprob: -8.375998497009277
    4. ' xrange' → logprob: -9.125998497009277
    5. '	range' → logprob: -11.625998497009277
    6. '(range' → logprob: -11.875998497009277
    7. '[' → logprob: -12.500998497009277
    8. '   ' → logprob: -13.375998497009277
    9. '_range' → logprob: -13.500998497009277
    10. ' ' → logprob: -13.875998497009277

Token 43: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.011056549847126007
    2. '(' → logprob: -4.511056423187256
    3. ' (' → logprob: -12.136056900024414
    4. '(n' → logprob: -13.011056900024414
    5. '(number' → logprob: -15.636056900024414
    6. '(s' → logprob: -15.886056900024414
    7. '(
' → logprob: -16.011056900024414
    8. '(int' → logprob: -16.011056900024414
    9. '(nums' → logprob: -16.386056900024414
    10. '(NUM' → logprob: -16.636056900024414

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004224515287205577
    2. '):
' → logprob: -8.625422477722168
    3. ' ):' → logprob: -8.750422477722168
    4. ')' → logprob: -9.875422477722168
    5. '   ' → logprob: -10.875422477722168
    6. ':' → logprob: -12.125422477722168
    7. '():' → logprob: -12.625422477722168
    8. '+' → logprob: -13.500422477722168
    9. '):
' → logprob: -14.250422477722168
    10. ',' → logprob: -14.625422477722168

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10543910413980484
    2. '    ' → logprob: -2.7304391860961914
    3. ' ' → logprob: -3.8554391860961914
    4. '   ' → logprob: -4.605439186096191
    5. '        ' → logprob: -7.230439186096191
    6. ' L' → logprob: -7.605439186096191
    7. ' readline' → logprob: -7.605439186096191
    8. ' line' → logprob: -7.855439186096191
    9. '     ' → logprob: -7.855439186096191
    10. '        
' → logprob: -8.230439186096191

Token 46: ' it' (ID: 480)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4309859573841095
    2. 'line' → logprob: -1.430985927581787
    3. ' L' → logprob: -3.055985927581787
    4. 'L' → logprob: -4.555985927581787
    5. 'data' → logprob: -4.680985927581787
    6. 's' → logprob: -4.680985927581787
    7. '   ' → logprob: -4.930985927581787
    8. ' data' → logprob: -4.930985927581787
    9. ' s' → logprob: -5.180985927581787
    10. ' parts' → logprob: -6.305985927581787

Token 47: ' =' (ID: 314)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.01815345324575901
    2. '=' → logprob: -4.643153667449951
    3. ' =' → logprob: -5.643153667449951
    4. 'er' → logprob: -5.893153667449951
    5. '   ' → logprob: -7.268153667449951
    6. 'e' → logprob: -8.268153190612793
    7. '       ' → logprob: -8.893153190612793
    8. 'm' → logprob: -9.018153190612793
    9. 'ems' → logprob: -9.018153190612793
    10. ' ' → logprob: -9.268153190612793

Token 48: ' iter' (ID: 10621)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -1.242112398147583
    2. 'int' → logprob: -1.367112398147583
    3. 'map' → logprob: -1.617112398147583
    4. ' map' → logprob: -1.867112398147583
    5. '   ' → logprob: -3.492112398147583
    6. ' int' → logprob: -3.617112398147583
    7. ' stdin' → logprob: -3.867112398147583
    8. 'list' → logprob: -5.117112159729004
    9. ' ' → logprob: -5.617112159729004
    10. '(stdin' → logprob: -5.867112159729004

Token 49: '(int' (ID: 2742)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.002481842413544655
    2. '(' → logprob: -7.002481937408447
    3. '(map' → logprob: -7.127481937408447
    4. '(st' → logprob: -8.127481460571289
    5. '(std' → logprob: -8.627481460571289
    6. '(list' → logprob: -9.627481460571289
    7. '(raw' → logprob: -9.877481460571289
    8. '(int' → logprob: -10.002481460571289
    9. ' (' → logprob: -10.127481460571289
    10. '(stdout' → logprob: -10.752481460571289

Token 50: '(s' (ID: 1858)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.00045247984235174954
    2. '(s' → logprob: -8.500452041625977
    3. '(' → logprob: -9.625452041625977
    4. ',' → logprob: -9.750452041625977
    5. '(std' → logprob: -10.500452041625977
    6. '(st' → logprob: -10.625452041625977
    7. ' (' → logprob: -11.000452041625977
    8. '(stdout' → logprob: -11.375452041625977
    9. '(x' → logprob: -11.625452041625977
    10. 's' → logprob: -12.125452041625977

Token 51: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12514667212963104
    2. '(s' → logprob: -3.3751466274261475
    3. '(line' → logprob: -3.6251466274261475
    4. ')' → logprob: -4.375146865844727
    5. '(i' → logprob: -4.500146865844727
    6. '(stdin' → logprob: -4.500146865844727
    7. '(e' → logprob: -5.500146865844727
    8. 'erm' → logprob: -5.750146865844727
    9. '(item' → logprob: -6.250146865844727
    10. 'em' → logprob: -6.375146865844727

Token 52: ' for' (ID: 395)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.009812168776988983
    2. '(x' → logprob: -5.259812355041504
    3. '(line' → logprob: -6.134812355041504
    4. '(s' → logprob: -6.884812355041504
    5. ')' → logprob: -7.759812355041504
    6. '(' → logprob: -8.884812355041504
    7. 'stdin' → logprob: -8.884812355041504
    8. '())' → logprob: -8.884812355041504
    9. '()' → logprob: -9.384812355041504
    10. 's' → logprob: -9.509812355041504

Token 53: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8262603878974915
    2. ' stdin' → logprob: -1.0762603282928467
    3. 'stdin' → logprob: -1.7012603282928467
    4. 's' → logprob: -4.201260566711426
    5. '_' → logprob: -4.951260566711426
    6. ' ' → logprob: -5.326260566711426
    7. ' line' → logprob: -5.701260566711426
    8. '(stdin' → logprob: -5.951260566711426
    9. ' raw' → logprob: -6.076260566711426
    10. ' in' → logprob: -6.826260566711426

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003242716658860445
    2. 'in' → logprob: -5.753242492675781
    3. '(stdin' → logprob: -10.253242492675781
    4. '<|end|>' → logprob: -11.503242492675781
    5. 'stdin' → logprob: -12.128242492675781
    6. ' stdin' → logprob: -12.878242492675781
    7. '	in' → logprob: -13.003242492675781
    8. ' ' → logprob: -13.128242492675781
    9. '.stdin' → logprob: -13.253242492675781
    10. 'import' → logprob: -13.628242492675781

Token 55: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.4779714047908783
    2. ' stdin' → logprob: -0.9779714345932007
    3. '(stdin' → logprob: -5.60297155380249
    4. '.stdin' → logprob: -8.977971076965332
    5. ' ' → logprob: -10.977971076965332
    6. 'stdout' → logprob: -11.227971076965332
    7. '   ' → logprob: -11.352971076965332
    8. '    ' → logprob: -12.477971076965332
    9. '  ' → logprob: -12.665471076965332
    10. 'st' → logprob: -12.727971076965332

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -12.875003814697266
    3. '().' → logprob: -13.625003814697266
    4. '.readlines' → logprob: -15.875003814697266
    5. ' .' → logprob: -16.250003814697266
    6. '.read' → logprob: -17.375003814697266
    7. ' readline' → logprob: -18.125003814697266
    8. ')' → logprob: -19.250003814697266
    9. '```' → logprob: -19.375003814697266
    10. '()' → logprob: -19.875003814697266

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000556012790184468
    2. '()' → logprob: -7.625555992126465
    3. '())' → logprob: -9.625555992126465
    4. ' ().' → logprob: -13.500555992126465
    5. '(' → logprob: -15.750555992126465
    6. '.strip' → logprob: -16.50055694580078
    7. ' ()' → logprob: -16.62555694580078
    8. ' ())' → logprob: -16.75055694580078
    9. '()]' → logprob: -17.00055694580078
    10. 'split' → logprob: -17.25055694580078

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06469329446554184
    2. 'strip' → logprob: -2.8146932125091553
    3. 'rstrip' → logprob: -5.939693450927734
    4. ' split' → logprob: -9.439693450927734
    5. 'spl' → logprob: -12.189693450927734
    6. ' strip' → logprob: -12.814693450927734
    7. '(split' → logprob: -13.814693450927734
    8. ' ' → logprob: -15.314693450927734
    9. '   ' → logprob: -15.814693450927734
    10. '```' → logprob: -16.064693450927734

Token 59: '()[' (ID: 20778)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007016691379249096
    2. '()' → logprob: -5.007016658782959
    3. ')' → logprob: -8.507017135620117
    4. '()))' → logprob: -9.757017135620117
    5. '())
' → logprob: -10.882017135620117
    6. '(' → logprob: -11.257017135620117
    7. ' ())' → logprob: -11.882017135620117
    8. '))' → logprob: -13.882017135620117
    9. '())

' → logprob: -14.382017135620117
    10. '()]' → logprob: -15.382017135620117

Token 60: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25305262207984924
    2. '1' → logprob: -2.2530527114868164
    3. '])' → logprob: -2.7530527114868164
    4. '0' → logprob: -3.5030527114868164
    5. ')' → logprob: -4.378052711486816
    6. '()' → logprob: -5.378052711486816
    7. ')])' → logprob: -5.628052711486816
    8. ':)' → logprob: -7.253052711486816
    9. ':])
' → logprob: -7.628052711486816
    10. ')]' → logprob: -7.628052711486816

Token 61: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026073982007801533
    2. ':]' → logprob: -9.250260353088379
    3. '])' → logprob: -9.625260353088379
    4. ':])
' → logprob: -9.625260353088379
    5. ':],' → logprob: -11.375260353088379
    6. ':)' → logprob: -11.500260353088379
    7. '():' → logprob: -12.875260353088379
    8. ' :' → logprob: -13.375260353088379
    9. '：' → logprob: -13.875260353088379
    10. ']:' → logprob: -13.875260353088379

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6069849133491516
    2. ')' → logprob: -1.2319848537445068
    3. '   ' → logprob: -2.106984853744507
    4. '
' → logprob: -4.356985092163086
    5. ' ' → logprob: -5.356985092163086
    6. ',' → logprob: -5.356985092163086
    7. '<|end|>' → logprob: -5.606985092163086
    8. ':' → logprob: -5.856985092163086
    9. '):' → logprob: -6.356985092163086
    10. '    
' → logprob: -6.481985092163086

Token 63: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49395573139190674
    2. '       ' → logprob: -1.3689557313919067
    3. 'try' → logprob: -3.743955612182617
    4. '    ' → logprob: -3.868955612182617
    5. ' try' → logprob: -3.993955612182617
    6. ' ' → logprob: -4.493955612182617
    7. ' for' → logprob: -4.993955612182617
    8. ')' → logprob: -5.243955612182617
    9. 'for' → logprob: -5.243955612182617
    10. '    
' → logprob: -5.368955612182617

Token 64: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1446526050567627
    2. '.' → logprob: -2.0196526050567627
    3. '.extend' → logprob: -6.269652366638184
    4. ' .' → logprob: -10.394652366638184
    5. '.ap' → logprob: -10.894652366638184
    6. '.app' → logprob: -11.144652366638184
    7. '=' → logprob: -12.144652366638184
    8. '.=' → logprob: -12.394652366638184
    9. 'append' → logprob: -13.019652366638184
    10. ' =' → logprob: -13.644652366638184

Token 65: '([(' (ID: 156282)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.5755061507225037
    2. '(tuple' → logprob: -1.4505062103271484
    3. '(it' → logprob: -3.2005062103271484
    4. '(next' → logprob: -3.4505062103271484
    5. '((' → logprob: -3.4505062103271484
    6. '(' → logprob: -3.5755062103271484
    7. '(max' → logprob: -3.5755062103271484
    8. '(sum' → logprob: -4.075506210327148
    9. '(sorted' → logprob: -4.700506210327148
    10. '(set' → logprob: -4.825506210327148

Token 66: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3534259796142578
    2. 'x' → logprob: -1.8534259796142578
    3. 'it' → logprob: -2.978425979614258
    4. ' next' → logprob: -3.978425979614258
    5. 'i' → logprob: -4.103425979614258
    6. 'a' → logprob: -4.228425979614258
    7. 'max' → logprob: -5.228425979614258
    8. ' x' → logprob: -5.478425979614258
    9. 's' → logprob: -5.728425979614258
    10. '   ' → logprob: -5.853425979614258

Token 67: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -3.190178904333152e-05
    2. 'it' → logprob: -10.750031471252441
    3. '(' → logprob: -12.375031471252441
    4. ' (' → logprob: -13.125031471252441
    5. ')(' → logprob: -13.250031471252441
    6. '(iter' → logprob: -14.000031471252441
    7. ',it' → logprob: -14.375031471252441
    8. '(iterator' → logprob: -15.750031471252441
    9. ')' → logprob: -16.000032424926758
    10. '(It' → logprob: -16.000032424926758

Token 68: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5877376198768616
    2. ')' → logprob: -1.3377375602722168
    3. '))' → logprob: -2.462737560272217
    4. ',' → logprob: -3.087737560272217
    5. '+' → logprob: -4.587737560272217
    6. ')),' → logprob: -4.712737560272217
    7. '-' → logprob: -4.837737560272217
    8. ')+' → logprob: -5.087737560272217
    9. ' ' → logprob: -6.087737560272217
    10. ' -' → logprob: -6.212737560272217

Token 69: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.08756326138973236
    2. 'next' → logprob: -2.5875632762908936
    3. ' max' → logprob: -5.7125630378723145
    4. ' int' → logprob: -6.3375630378723145
    5. '(next' → logprob: -6.9625630378723145
    6. '1' → logprob: -7.3375630378723145
    7. 'int' → logprob: -7.8375630378723145
    8. '[next' → logprob: -8.212563514709473
    9. ' ' → logprob: -8.337563514709473
    10. ')' → logprob: -8.712563514709473

Token 70: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -8.895480277715251e-06
    2. 'it' → logprob: -11.750008583068848
    3. ' (' → logprob: -15.000008583068848
    4. '(' → logprob: -15.750008583068848
    5. ')' → logprob: -16.125009536743164
    6. ' it' → logprob: -16.250009536743164
    7. ',it' → logprob: -16.625009536743164
    8. ' ' → logprob: -16.875009536743164
    9. ')(' → logprob: -17.125009536743164
    10. '(iter' → logprob: -17.250009536743164

Token 71: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005157977342605591
    2. '),' → logprob: -5.880157947540283
    3. ')' → logprob: -6.255157947540283
    4. ' ))' → logprob: -8.630158424377441
    5. ')),' → logprob: -9.005158424377441
    6. '))
' → logprob: -9.755158424377441
    7. ' ' → logprob: -10.630158424377441
    8. ')))' → logprob: -11.380158424377441
    9. '),
' → logprob: -12.380158424377441
    10. ')+' → logprob: -12.505158424377441

Token 72: ' for' (ID: 395)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16887988150119781
    2. ')' → logprob: -2.543879985809326
    3. ',' → logprob: -3.043879985809326
    4. ' ])' → logprob: -4.793879985809326
    5. ')])' → logprob: -4.793879985809326
    6. ' for' → logprob: -5.168879985809326
    7. ']' → logprob: -6.043879985809326
    8. ' )' → logprob: -6.793879985809326
    9. ')]' → logprob: -6.793879985809326
    10. '   ' → logprob: -7.418879985809326

Token 73: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.11566083133220673
    2. '_' → logprob: -2.3656609058380127
    3. ' ' → logprob: -4.990660667419434
    4. ' it' → logprob: -5.115660667419434
    5. 'it' → logprob: -7.115660667419434
    6. '  ' → logprob: -7.740660667419434
    7. ' s' → logprob: -7.990660667419434
    8. ' in' → logprob: -8.740660667419434
    9. ' i' → logprob: -8.865660667419434
    10. '_it' → logprob: -8.990660667419434

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018653334118425846
    2. 'in' → logprob: -6.501865386962891
    3. ' xrange' → logprob: -8.12686538696289
    4. 'range' → logprob: -10.50186538696289
    5. '<|end|>' → logprob: -11.25186538696289
    6. ' ' → logprob: -11.50186538696289
    7. ' range' → logprob: -11.87686538696289
    8. '(' → logprob: -12.12686538696289
    9. 'x' → logprob: -14.25186538696289
    10. '(range' → logprob: -14.25186538696289

Token 75: ' xrange' (ID: 92050)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7478516101837158
    2. ' range' → logprob: -1.9978516101837158
    3. ' xrange' → logprob: -1.9978516101837158
    4. 'range' → logprob: -2.122851610183716
    5. 'x' → logprob: -2.247851610183716
    6. ' it' → logprob: -3.872851610183716
    7. 'iter' → logprob: -5.372851371765137
    8. ' ' → logprob: -7.122851371765137
    9. 'L' → logprob: -7.247851371765137
    10. ' iter' → logprob: -7.747851371765137

Token 76: '(next' (ID: 28757)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.9481868743896484
    2. '(' → logprob: -1.1981868743896484
    3. '(int' → logprob: -1.4481868743896484
    4. '(len' → logprob: -2.9481868743896484
    5. '(it' → logprob: -4.823186874389648
    6. '((' → logprob: -5.073186874389648
    7. ' (' → logprob: -5.823186874389648
    8. '(max' → logprob: -6.448186874389648
    9. ' ' → logprob: -7.198186874389648
    10. '(sum' → logprob: -7.573186874389648

Token 77: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.00027111053350381553
    2. 'it' → logprob: -8.25027084350586
    3. '(num' → logprob: -12.87527084350586
    4. '(' → logprob: -13.00027084350586
    5. 'num' → logprob: -13.00027084350586
    6. ' ' → logprob: -14.50027084350586
    7. ' (' → logprob: -14.87527084350586
    8. ' it' → logprob: -14.87527084350586
    9. '	it' → logprob: -15.12527084350586
    10. 'It' → logprob: -15.62527084350586

Token 78: '))' (ID: 915)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.7878497838973999
    2. '))' → logprob: -1.0378497838974
    3. ')' → logprob: -2.1628499031066895
    4. ')]' → logprob: -2.6628499031066895
    5. ')))' → logprob: -5.4128499031066895
    6. '())' → logprob: -7.0378499031066895
    7. '()))' → logprob: -8.412849426269531
    8. '   ' → logprob: -9.037849426269531
    9. '()' → logprob: -9.287849426269531
    10. ' )' → logprob: -9.287849426269531

Token 79: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0034209280274808407
    2. ')])' → logprob: -6.628420829772949
    3. ']' → logprob: -7.503420829772949
    4. '   ' → logprob: -7.753420829772949
    5. ' ])' → logprob: -8.25342082977295
    6. ')' → logprob: -8.25342082977295
    7. '])
' → logprob: -8.37842082977295
    8. '       ' → logprob: -8.50342082977295
    9. ')]' → logprob: -9.25342082977295
    10. '])]' → logprob: -10.75342082977295

Token 80: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' weight' (ID: 6049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13798464834690094
    2. 'for' → logprob: -3.7629847526550293
    3. 'max' → logprob: -4.387984752655029
    4. ' for' → logprob: -4.512984752655029
    5. ')' → logprob: -4.762984752655029
    6. 'm' → logprob: -4.887984752655029
    7. 'L' → logprob: -5.012984752655029
    8. 's' → logprob: -5.387984752655029
    9. 'n' → logprob: -5.387984752655029
    10. 'd' → logprob: -5.387984752655029

Token 82: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028724513947963715
    2. ' =' → logprob: -4.903724670410156
    3. '_' → logprob: -4.903724670410156
    4. ',' → logprob: -5.403724670410156
    5. '_s' → logprob: -5.903724670410156
    6. '_sum' → logprob: -6.153724670410156
    7. '=' → logprob: -6.653724670410156
    8. '(' → logprob: -7.528724670410156
    9. '_threshold' → logprob: -8.278724670410156
    10. '_diff' → logprob: -8.403724670410156

Token 83: ' [' (ID: 723)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1903609037399292
    2. ' [' → logprob: -1.4403609037399292
    3. '0' → logprob: -1.6903609037399292
    4. 'max' → logprob: -2.4403610229492188
    5. ' ' → logprob: -2.5653610229492188
    6. ' {}' → logprob: -3.9403610229492188
    7. ' []' → logprob: -4.440361022949219
    8. '[' → logprob: -4.440361022949219
    9. '[max' → logprob: -4.440361022949219
    10. ' defaultdict' → logprob: -5.065361022949219

Token 84: 'max' (ID: 3228)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11809248477220535
    2. 'max' → logprob: -2.8680925369262695
    3. ' ' → logprob: -3.9930925369262695
    4. ' max' → logprob: -4.3680925369262695
    5. '1' → logprob: -4.7430925369262695
    6. 'float' → logprob: -5.6180925369262695
    7. ' [' → logprob: -6.4930925369262695
    8. '-' → logprob: -6.6180925369262695
    9. '[' → logprob: -6.9930925369262695
    10. 'int' → logprob: -7.1180925369262695

Token 85: 'int' (ID: 491)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46872639656066895
    2. '(w' → logprob: -2.343726396560669
    3. '(x' → logprob: -2.593726396560669
    4. '([' → logprob: -3.843726396560669
    5. '(l' → logprob: -3.968726396560669
    6. '(s' → logprob: -4.09372615814209
    7. '(map' → logprob: -4.21872615814209
    8. '((' → logprob: -4.21872615814209
    9. '(max' → logprob: -4.46872615814209
    10. '(pair' → logprob: -4.46872615814209

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02435869164764881
    2. ']*' → logprob: -4.524358749389648
    3. ' for' → logprob: -4.774358749389648
    4. ']+' → logprob: -7.024358749389648
    5. 'for' → logprob: -7.024358749389648
    6. ')]' → logprob: -7.399358749389648
    7. '()]' → logprob: -7.399358749389648
    8. '+' → logprob: -7.649358749389648
    9. ' ]' → logprob: -7.774358749389648
    10. ')' → logprob: -8.399358749389648

Token 87: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06904354691505432
    2. ',' → logprob: -3.3190436363220215
    3. ' for' → logprob: -4.6940436363220215
    4. '+' → logprob: -4.8190436363220215
    5. ')' → logprob: -5.6940436363220215
    6. ']*' → logprob: -6.1940436363220215
    7. '<|end|>' → logprob: -6.9440436363220215
    8. ' ]' → logprob: -6.9440436363220215
    9. 'for' → logprob: -7.0690436363220215
    10. ' +' → logprob: -7.5690436363220215

Token 88: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10915128141641617
    2. '(num' → logprob: -2.7341513633728027
    3. 'len' → logprob: -3.7341513633728027
    4. '(' → logprob: -5.234151363372803
    5. '(len' → logprob: -5.359151363372803
    6. ' num' → logprob: -5.859151363372803
    7. '100' → logprob: -7.484151363372803
    8. ' (' → logprob: -7.984151363372803
    9. ' len' → logprob: -8.484150886535645
    10. '(n' → logprob: -9.484150886535645

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04501202702522278
    2. '   ' → logprob: -3.7950119972229004
    3. '' → logprob: -5.0450119972229
    4. '    
' → logprob: -5.0450119972229
    5. '<|end|>' → logprob: -6.0450119972229
    6. '  
' → logprob: -7.0450119972229
    7. ' 
' → logprob: -7.0450119972229
    8. 'newline' → logprob: -7.2950119972229
    9. '
' → logprob: -7.4200119972229
    10. ')' → logprob: -7.7950119972229

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5841866731643677
    2. '   ' → logprob: -1.2091866731643677
    3. 'weight' → logprob: -2.209186553955078
    4. '    
' → logprob: -4.209186553955078
    5. '' → logprob: -5.709186553955078
    6. ' 
' → logprob: -6.209186553955078
    7. '
' → logprob: -6.209186553955078
    8. ' weight' → logprob: -6.584186553955078
    9. 'newline' → logprob: -6.584186553955078
    10. ' ' → logprob: -6.834186553955078

Token 91: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' (adapté à ' weight') → logprob: -0.0049291737377643585
    2. ' weight' → logprob: -6.004929065704346
    3. '   ' → logprob: -6.754929065704346
    4. '
' → logprob: -7.629929065704346
    5. '    
' → logprob: -8.629929542541504
    6. ' 
' → logprob: -8.879929542541504
    7. '0' → logprob: -9.254929542541504
    8. 'import' → logprob: -10.129929542541504
    9. 'distance' → logprob: -10.504929542541504
    10. 'for' → logprob: -10.629929542541504

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018804390856530517
    2. ']' → logprob: -10.250187873840332
    3. '<|end|>' → logprob: -10.250187873840332
    4. ' [' → logprob: -10.875187873840332
    5. ')' → logprob: -11.125187873840332
    6. ',' → logprob: -11.250187873840332
    7. '[
' → logprob: -11.500187873840332
    8. '=' → logprob: -11.875187873840332
    9. '[:]' → logprob: -11.875187873840332
    10. '[]' → logprob: -11.875187873840332

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.625009536743164
    3. '[' → logprob: -12.625009536743164
    4. '-' → logprob: -14.125009536743164
    5. '1' → logprob: -14.500009536743164
    6. '   ' → logprob: -15.000009536743164
    7. '#' → logprob: -15.000009536743164
    8. ']' → logprob: -15.250009536743164
    9. '(' → logprob: -15.687509536743164
    10. 'num' → logprob: -16.062509536743164

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006938508013263345
    2. ' ]' → logprob: -7.5006937980651855
    3. ']=' → logprob: -8.875694274902344
    4. '=' → logprob: -14.250694274902344
    5. ' =' → logprob: -16.000694274902344
    6. '[' → logprob: -16.375694274902344
    7. ']==' → logprob: -16.750694274902344
    8. ']
' → logprob: -17.000694274902344
    9. ')' → logprob: -17.375694274902344
    10. ' ' → logprob: -17.875694274902344

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269301027059555
    2. ' =' → logprob: -2.126929998397827
    3. ',' → logprob: -13.626930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '=int' → logprob: -17.001930236816406
    6. '<|end|>' → logprob: -17.001930236816406
    7. '=False' → logprob: -17.126930236816406
    8. '[' → logprob: -17.126930236816406
    9. '=

' → logprob: -17.501930236816406
    10. '＝' → logprob: -17.501930236816406

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046464535407722
    2. ' ' → logprob: -5.379646301269531
    3. '   ' → logprob: -10.879646301269531
    4. '  ' → logprob: -12.754646301269531
    5. '1' → logprob: -13.504646301269531
    6. '    ' → logprob: -14.004646301269531
    7. '00' → logprob: -14.942146301269531
    8. '     ' → logprob: -15.754646301269531
    9. '(' → logprob: -16.06714630126953
    10. '۰' → logprob: -16.06714630126953

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.951771421066951e-05
    2. ' ' → logprob: -10.500029563903809
    3. '1' → logprob: -13.625029563903809
    4. '   ' → logprob: -15.812529563903809
    5. '00' → logprob: -16.375028610229492
    6. '  ' → logprob: -16.625028610229492
    7. '000' → logprob: -17.187528610229492
    8. '(' → logprob: -17.312528610229492
    9. '2' → logprob: -17.500028610229492
    10. '۰' → logprob: -17.500028610229492

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1226833164691925
    2. '   ' → logprob: -2.24768328666687
    3. '<|end|>' → logprob: -4.997683525085449
    4. '    
' → logprob: -6.497683525085449
    5. '' → logprob: -7.872683525085449
    6. '	
' → logprob: -8.62268352508545
    7. ' for' → logprob: -9.12268352508545
    8. 'for' → logprob: -9.12268352508545
    9. ' 
' → logprob: -9.24768352508545
    10. ' ' → logprob: -9.24768352508545

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1283336877822876
    2. '
' → logprob: -2.503333568572998
    3. '<|end|>' → logprob: -3.753333568572998
    4. ' for' → logprob: -4.753333568572998
    5. 'for' → logprob: -5.628333568572998
    6. '    
' → logprob: -6.503333568572998
    7. '	for' → logprob: -7.378333568572998
    8. ' ' → logprob: -9.003334045410156
    9. '  ' → logprob: -9.128334045410156
    10. '' → logprob: -9.253334045410156

Token 100: ' V' (ID: 631)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33076509833335876
    2. '   ' → logprob: -1.7057651281356812
    3. ' for' → logprob: -2.4557650089263916
    4. '
' → logprob: -5.830765247344971
    5. ' ' → logprob: -5.830765247344971
    6. 'import' → logprob: -6.080765247344971
    7. '    
' → logprob: -6.205765247344971
    8. '  ' → logprob: -6.830765247344971
    9. '<|end|>' → logprob: -7.455765247344971
    10. '	for' → logprob: -7.955765247344971

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3762578070163727
    2. 'is' → logprob: -2.00125789642334
    3. '=' → logprob: -2.12625789642334
    4. 'isted' → logprob: -3.62625789642334
    5. 'isit' → logprob: -3.75125789642334
    6. '=[]' → logprob: -6.12625789642334
    7. '   ' → logprob: -6.50125789642334
    8. 'ist' → logprob: -7.00125789642334
    9. 'isible' → logprob: -7.12625789642334
    10. '=[]
' → logprob: -7.50125789642334

Token 102: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.1346019506454468
    2. ' [' → logprob: -1.5096019506454468
    3. ' set' → logprob: -1.7596019506454468
    4. '[]' → logprob: -2.2596020698547363
    5. 'set' → logprob: -2.3846020698547363
    6. '[' → logprob: -2.5096020698547363
    7. ' {' → logprob: -6.384602069854736
    8. '[num' → logprob: -6.384602069854736
    9. ' ' → logprob: -6.509602069854736
    10. '0' → logprob: -6.759602069854736

Token 103: '(x' (ID: 4061)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000831782293971628
    2. '([]' → logprob: -8.125831604003906
    3. '(range' → logprob: -8.500831604003906
    4. '([' → logprob: -8.500831604003906
    5. '(' → logprob: -9.375831604003906
    6. '()
' → logprob: -11.000831604003906
    7. '()]' → logprob: -11.750831604003906
    8. '()

' → logprob: -12.375831604003906
    9. '()\' → logprob: -12.750831604003906
    10. ' ()' → logprob: -13.125831604003906

Token 104: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011081418953835964
    2. '(range' → logprob: -4.511081218719482
    3. '()' → logprob: -11.01108169555664
    4. '(weight' → logprob: -12.13608169555664
    5. '(' → logprob: -13.01108169555664
    6. ' for' → logprob: -13.13608169555664
    7. 'rang' → logprob: -13.63608169555664
    8. '(x' → logprob: -13.76108169555664
    9. 'ran' → logprob: -13.88608169555664
    10. ' xrange' → logprob: -13.88608169555664

Token 105: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.250045776367188
    3. 'num' → logprob: -11.625045776367188
    4. '(len' → logprob: -14.375045776367188
    5. ' (' → logprob: -15.500045776367188
    6. '(n' → logprob: -16.250045776367188
    7. ',num' → logprob: -16.250045776367188
    8. '   ' → logprob: -16.750045776367188
    9. ' num' → logprob: -17.250045776367188
    10. '	num' → logprob: -17.500045776367188

Token 106: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0003277176001574844
    2. '(num' → logprob: -8.875328063964844
    3. '1' → logprob: -9.000328063964844
    4. ' num' → logprob: -9.875328063964844
    5. '(' → logprob: -12.000328063964844
    6. '   ' → logprob: -12.750328063964844
    7. 'len' → logprob: -13.375328063964844
    8. '0' → logprob: -13.625328063964844
    9. ')' → logprob: -14.500328063964844
    10. ' ' → logprob: -15.375328063964844

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5797014236450195
    2. ',num' → logprob: -0.8297014236450195
    3. '(num' → logprob: -5.9547014236450195
    4. ' ,' → logprob: -7.3297014236450195
    5. 'num' → logprob: -7.8297014236450195
    6. '(' → logprob: -9.95470142364502
    7. '   ' → logprob: -10.57970142364502
    8. ' num' → logprob: -11.07970142364502
    9. '	num' → logprob: -12.32970142364502
    10. '  ' → logprob: -12.45470142364502

Token 108: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014167741872370243
    2. ' num' → logprob: -4.264167785644531
    3. '   ' → logprob: -12.639167785644531
    4. ' ' → logprob: -14.264167785644531
    5. '  ' → logprob: -15.764167785644531
    6. '	num' → logprob: -16.13916778564453
    7. 'len' → logprob: -17.01416778564453
    8. '    ' → logprob: -17.13916778564453
    9. 'n' → logprob: -17.38916778564453
    10. '(num' → logprob: -18.01416778564453

Token 109: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025214420165866613
    2. ')' → logprob: -6.002521514892578
    3. '))
' → logprob: -10.752521514892578
    4. ' ))' → logprob: -11.502521514892578
    5. ')))' → logprob: -11.627521514892578
    6. '()))' → logprob: -13.252521514892578
    7. '))

' → logprob: -14.252521514892578
    8. '})' → logprob: -14.752521514892578
    9. ' )' → logprob: -14.752521514892578
    10. '),' → logprob: -15.127521514892578

Token 110: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2653747797012329
    2. '   ' → logprob: -1.765374779701233
    3. ' while' → logprob: -3.5153746604919434
    4. '<|end|>' → logprob: -4.390374660491943
    5. '	while' → logprob: -4.765374660491943
    6. 'for' → logprob: -5.265374660491943
    7. '
' → logprob: -5.515374660491943
    8. '    
' → logprob: -7.140374660491943
    9. ' for' → logprob: -8.890375137329102
    10. '  ' → logprob: -9.015375137329102

Token 111: ' index' (ID: 3472)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01764199137687683
    2. ' while' → logprob: -4.392642021179199
    3. '   ' → logprob: -5.517642021179199
    4. '	while' → logprob: -7.892642021179199
    5. '<|end|>' → logprob: -8.0176420211792
    6. '
' → logprob: -8.6426420211792
    7. 'for' → logprob: -9.0176420211792
    8. ')' → logprob: -10.6426420211792
    9. '    
' → logprob: -10.6426420211792
    10. ':' → logprob: -12.0176420211792

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13515637814998627
    2. '=' → logprob: -2.1351563930511475
    3. ',' → logprob: -4.885156154632568
    4. 'es' → logprob: -7.885156154632568
    5. 's' → logprob: -9.260156631469727
    6. ' ' → logprob: -9.885156631469727
    7. ')' → logprob: -10.385156631469727
    8. ' ,' → logprob: -10.635156631469727
    9. '_' → logprob: -11.010156631469727
    10. '0' → logprob: -12.135156631469727

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020585445687174797
    2. ' ' → logprob: -3.895585536956787
    3. '1' → logprob: -11.145585060119629
    4. '[' → logprob: -11.145585060119629
    5. '[]' → logprob: -12.895585060119629
    6. '(' → logprob: -13.145585060119629
    7. ' [' → logprob: -13.145585060119629
    8. '  ' → logprob: -13.270585060119629
    9. ' -' → logprob: -13.770585060119629
    10. '   ' → logprob: -13.770585060119629

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.909333023941144e-05
    2. ' ' → logprob: -10.125068664550781
    3. '[]' → logprob: -11.250068664550781
    4. '[' → logprob: -11.500068664550781
    5. 'min' → logprob: -13.375068664550781
    6. 'num' → logprob: -14.000068664550781
    7. '1' → logprob: -14.000068664550781
    8. '-' → logprob: -14.125068664550781
    9. '{}' → logprob: -15.250068664550781
    10. '[]
' → logprob: -15.250068664550781

Token 115: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5484493970870972
    2. '<|end|>' → logprob: -1.4234493970870972
    3. ' ' → logprob: -2.7984495162963867
    4. '   ' → logprob: -3.0484495162963867
    5. '
' → logprob: -3.1734495162963867
    6. 'while' → logprob: -5.173449516296387
    7. ' while' → logprob: -5.548449516296387
    8. ')' → logprob: -5.673449516296387
    9. ':
' → logprob: -5.798449516296387
    10. ' 
' → logprob: -5.923449516296387

Token 117: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1784692406654358
    2. 'for' → logprob: -2.678469181060791
    3. ' while' → logprob: -2.678469181060791
    4. '   ' → logprob: -4.678469181060791
    5. ':' → logprob: -4.803469181060791
    6. '<|end|>' → logprob: -5.803469181060791
    7. ' ' → logprob: -6.178469181060791
    8. ' for' → logprob: -6.803469181060791
    9. '
' → logprob: -7.303469181060791
    10. '	while' → logprob: -8.05346965789795

Token 118: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.08765127509832382
    2. 'V' → logprob: -2.587651252746582
    3. ' len' → logprob: -4.837651252746582
    4. 'len' → logprob: -7.587651252746582
    5. ' ' → logprob: -8.587651252746582
    6. ' True' → logprob: -10.337651252746582
    7. '(len' → logprob: -10.712651252746582
    8. ' weight' → logprob: -10.962651252746582
    9. 'True' → logprob: -11.337651252746582
    10. 'weight' → logprob: -13.025151252746582

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47543707489967346
    2. ' and' → logprob: -1.100437045097351
    3. 'and' → logprob: -3.1004371643066406
    4. '>' → logprob: -8.22543716430664
    5. '>:' → logprob: -8.60043716430664
    6. ':
' → logprob: -9.35043716430664
    7. '):' → logprob: -10.47543716430664
    8. '!=' → logprob: -10.97543716430664
    9. '{' → logprob: -11.72543716430664
    10. ' :' → logprob: -11.72543716430664

Token 120: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13731493055820465
    2. '<|end|>' → logprob: -2.762315034866333
    3. '       ' → logprob: -3.637315034866333
    4. ':' → logprob: -3.762315034866333
    5. '
' → logprob: -5.887314796447754
    6. '    
' → logprob: -6.012314796447754
    7. '    ' → logprob: -6.012314796447754
    8. '  ' → logprob: -6.262314796447754
    9. '<|end|>' → logprob: -6.887314796447754
    10. ' ' → logprob: -7.137314796447754

Token 121: ' for' (ID: 395)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.5004364252090454
    2. '   ' → logprob: -1.7504364252090454
    3. ' u' → logprob: -1.7504364252090454
    4. 'u' → logprob: -2.000436305999756
    5. ' min' → logprob: -3.625436305999756
    6. 'current' → logprob: -3.625436305999756
    7. 'for' (adapté à ' for') → logprob: -3.875436305999756
    8. '       ' → logprob: -4.000436305999756
    9. ' for' → logprob: -4.000436305999756
    10. 'w' → logprob: -4.000436305999756

Token 122: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2145183086395264
    2. 'v' → logprob: -2.2145183086395264
    3. 'j' → logprob: -2.4645183086395264
    4. '(i' → logprob: -2.5895183086395264
    5. 'u' → logprob: -2.8395183086395264
    6. 'w' → logprob: -3.0895183086395264
    7. '(v' → logprob: -3.0895183086395264
    8. '(u' → logprob: -3.5895183086395264
    9. '(j' → logprob: -3.9645183086395264
    10. '(x' → logprob: -3.9645183086395264

Token 123: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017460430040955544
    2. 'in' → logprob: -4.142460346221924
    3. ',' → logprob: -7.517460346221924
    4. 'v' → logprob: -7.517460346221924
    5. ' ' → logprob: -8.767460823059082
    6. '
' → logprob: -11.017460823059082
    7. '	in' → logprob: -11.017460823059082
    8. ',v' → logprob: -11.142460823059082
    9. '   ' → logprob: -11.392460823059082
    10. '_in' → logprob: -11.392460823059082

Token 124: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04030601680278778
    2. ' w' → logprob: -3.6653060913085938
    3. 'dist' → logprob: -5.165306091308594
    4. 'd' → logprob: -5.790306091308594
    5. 'c' → logprob: -6.540306091308594
    6. 'cost' → logprob: -6.665306091308594
    7. ' dist' → logprob: -8.290306091308594
    8. '_w' → logprob: -8.415306091308594
    9. 'l' → logprob: -8.665306091308594
    10. 'wt' → logprob: -8.665306091308594

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34863442182540894
    2. 'in' → logprob: -1.2236344814300537
    3. '<|end|>' → logprob: -9.348634719848633
    4. ',' → logprob: -10.348634719848633
    5. '<|end|>' → logprob: -11.098634719848633
    6. '   ' → logprob: -11.223634719848633
    7. ' ' → logprob: -11.348634719848633
    8. '    ' → logprob: -11.848634719848633
    9. '  ' → logprob: -12.223634719848633
    10. '_in' → logprob: -12.223634719848633

Token 126: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014184189029037952
    2. ' L' → logprob: -4.26418399810791
    3. '   ' → logprob: -11.51418399810791
    4. '	L' → logprob: -12.63918399810791
    5. '(L' → logprob: -12.63918399810791
    6. ' ' → logprob: -13.01418399810791
    7. '[L' → logprob: -14.26418399810791
    8. '    ' → logprob: -15.13918399810791
    9. '  ' → logprob: -15.13918399810791
    10. '       ' → logprob: -15.76418399810791

Token 127: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. 'index' → logprob: -15.250001907348633
    4. '[Index' → logprob: -16.250001907348633
    5. '[ind' → logprob: -17.750001907348633
    6. ' [' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. '[idx' → logprob: -18.125001907348633
    9. '[current' → logprob: -18.375001907348633
    10. '[node' → logprob: -18.625001907348633

Token 128: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04024360701441765
    2. ']:
' → logprob: -3.915243625640869
    3. '[index' → logprob: -4.040243625640869
    4. ']' → logprob: -6.915243625640869
    5. '[' → logprob: -8.290243148803711
    6. ':' → logprob: -8.415243148803711
    7. ']:

' → logprob: -9.290243148803711
    8. ']:
' → logprob: -9.415243148803711
    9. '   ' → logprob: -9.540243148803711
    10. ' ]' → logprob: -10.040243148803711

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7260669469833374
    2. '       ' → logprob: -0.9760669469833374
    3. ' if' → logprob: -2.726067066192627
    4. '   ' → logprob: -3.476067066192627
    5. ':' → logprob: -3.976067066192627
    6. 'if' → logprob: -4.351067066192627
    7. '<|end|>' → logprob: -5.101067066192627
    8. ':
' → logprob: -5.601067066192627
    9. '
' → logprob: -7.976067066192627
    10. '	       ' → logprob: -8.226066589355469

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23043978214263916
    2. ' if' → logprob: -2.3554396629333496
    3. '               ' → logprob: -2.7304396629333496
    4. '           ' → logprob: -3.1054396629333496
    5. '
' → logprob: -7.85543966293335
    6. '       ' → logprob: -8.230440139770508
    7. '   ' → logprob: -8.980440139770508
    8. 'weight' → logprob: -9.605440139770508
    9. '	if' → logprob: -10.980440139770508
    10. '	       ' → logprob: -10.980440139770508

Token 131: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.28753361105918884
    2. ' v' → logprob: -1.5375336408615112
    3. ' cost' → logprob: -4.162533760070801
    4. 'cost' → logprob: -4.537533760070801
    5. ' weight' → logprob: -5.412533760070801
    6. 'weight' → logprob: -5.537533760070801
    7. '   ' → logprob: -9.2875337600708
    8. '    ' → logprob: -9.9125337600708
    9. ' ' → logprob: -10.0375337600708
    10. '           ' → logprob: -10.4125337600708

Token 132: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043303802609443665
    2. 'in' → logprob: -3.1683037281036377
    3. ' ' → logprob: -8.168303489685059
    4. ' not' → logprob: -11.293303489685059
    5. '   ' → logprob: -13.168303489685059
    6. '
' → logprob: -13.418303489685059
    7. 'not' → logprob: -13.793303489685059
    8. ')' → logprob: -14.168303489685059
    9. ' ' → logprob: -14.543303489685059
    10. '  ' → logprob: -14.668303489685059

Token 133: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.08935555815696716
    2. ' V' → logprob: -2.46435546875
    3. '   ' → logprob: -8.33935546875
    4. ' ' → logprob: -9.08935546875
    5. '
' → logprob: -10.58935546875
    6. '	V' → logprob: -10.96435546875
    7. '       ' → logprob: -12.08935546875
    8. '    ' → logprob: -12.08935546875
    9. '  ' → logprob: -12.33935546875
    10. ' ' → logprob: -13.83935546875

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5894971489906311
    2. ' and' → logprob: -1.3394970893859863
    3. ' or' → logprob: -2.0894970893859863
    4. ':
' → logprob: -3.2144970893859863
    5. '           ' → logprob: -4.464497089385986
    6. '               ' → logprob: -5.464497089385986
    7. 'and' → logprob: -5.839497089385986
    8. '       ' → logprob: -8.839497566223145
    9. ')' → logprob: -9.464497566223145
    10. ' :' → logprob: -9.714497566223145

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.634196937084198
    2. ':' → logprob: -0.884196937084198
    3. ' or' → logprob: -4.009196758270264
    4. 'continue' → logprob: -4.009196758270264
    5. ':
' → logprob: -4.634196758270264
    6. ' continue' → logprob: -5.134196758270264
    7. '           ' → logprob: -5.509196758270264
    8. ' and' → logprob: -7.884196758270264
    9. ' :' → logprob: -9.759197235107422
    10. '	continue' → logprob: -10.384197235107422

Token 137: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1319853961467743
    2. '               ' → logprob: -2.6319854259490967
    3. 'continue' (adapté à ' continue') → logprob: -3.0069854259490967
    4. '           ' → logprob: -6.631985187530518
    5. '                   ' → logprob: -7.381985187530518
    6. '	continue' → logprob: -8.631985664367676
    7. '_continue' → logprob: -10.131985664367676
    8. ':' → logprob: -10.381985664367676
    9. ' continues' → logprob: -10.881985664367676
    10. ',' → logprob: -11.631985664367676

Token 138: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1855391263961792
    2. '
' → logprob: -1.8105391263961792
    3. '            
' → logprob: -5.560539245605469
    4. ' 
' → logprob: -7.185539245605469
    5. '    
' → logprob: -8.185539245605469
    6. '            ' → logprob: -8.560539245605469
    7. '
' → logprob: -8.935539245605469
    8. '        
' → logprob: -9.310539245605469
    9. '  
' → logprob: -9.685539245605469
    10. '               ' → logprob: -9.685539245605469

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05892951413989067
    2. '
' → logprob: -3.558929443359375
    3. '            
' → logprob: -4.308929443359375
    4. '       ' → logprob: -5.433929443359375
    5. '        
' → logprob: -5.683929443359375
    6. '    
' → logprob: -6.558929443359375
    7. ' 
' → logprob: -6.558929443359375
    8. '               ' → logprob: -6.683929443359375
    9. '            ' → logprob: -7.058929443359375
    10. ' if' → logprob: -7.808929443359375

Token 140: ' weight' (ID: 6049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08148635923862457
    2. ' if' → logprob: -3.331486463546753
    3. 'if' → logprob: -4.081486225128174
    4. '
' → logprob: -4.706486225128174
    5. ' new' → logprob: -5.081486225128174
    6. 'new' → logprob: -5.581486225128174
    7. 'weight' (adapté à ' weight') → logprob: -6.456486225128174
    8. '            
' → logprob: -6.706486225128174
    9. '               ' → logprob: -7.206486225128174
    10. ' weight' → logprob: -7.456486225128174

Token 141: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.966313281329349e-05
    2. 'v' → logprob: -10.625049591064453
    3. '[' → logprob: -10.875049591064453
    4. '][' → logprob: -14.000049591064453
    5. '[val' → logprob: -14.375049591064453
    6. 'index' → logprob: -14.500049591064453
    7. ' [' → logprob: -14.750049591064453
    8. '[min' → logprob: -14.875049591064453
    9. '[V' → logprob: -14.875049591064453
    10. '[index' → logprob: -15.000049591064453

Token 142: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.780440628528595
    2. ' =' → logprob: -0.905440628528595
    3. ']' → logprob: -2.28044056892395
    4. '>' → logprob: -4.155440807342529
    5. ' >' → logprob: -4.530440807342529
    6. ']=' → logprob: -5.405440807342529
    7. ' ]' → logprob: -6.280440807342529
    8. ')' → logprob: -6.905440807342529
    9. '=min' → logprob: -7.530440807342529
    10. 'min' → logprob: -8.405440330505371

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602751910686493
    2. ' =' → logprob: -1.9102752208709717
    3. '=min' → logprob: -10.28527545928955
    4. '>' → logprob: -11.41027545928955
    5. ',' → logprob: -13.78527545928955
    6. ' ' → logprob: -14.03527545928955
    7. 'min' → logprob: -14.28527545928955
    8. ' >' → logprob: -14.41027545928955
    9. ')' → logprob: -14.53527545928955
    10. '=max' → logprob: -14.78527545928955

Token 144: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4289061725139618
    2. 'min' → logprob: -1.0539062023162842
    3. ' cost' → logprob: -9.053906440734863
    4. 'cost' → logprob: -9.678906440734863
    5. '	min' → logprob: -11.303906440734863
    6. ' weight' → logprob: -12.678906440734863
    7. '[min' → logprob: -13.053906440734863
    8. '(min' → logprob: -13.178906440734863
    9. 'weight' → logprob: -13.303906440734863
    10. '   ' → logprob: -13.553906440734863

Token 145: '(weight' (ID: 121456)
  Prédit: '(weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -0.0011712945997714996
    2. '(' → logprob: -6.751171112060547
    3. '(
' → logprob: -15.126171112060547
    4. ' (' → logprob: -15.126171112060547
    5. '(weights' → logprob: -15.376171112060547
    6. '(cost' → logprob: -15.626171112060547
    7. 'weight' → logprob: -16.626171112060547
    8. ' weight' → logprob: -17.751171112060547
    9. '(

' → logprob: -18.501171112060547
    10. '((' → logprob: -19.001171112060547

Token 146: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.051066520740278e-05
    2. '[' → logprob: -10.500060081481934
    3. 'v' → logprob: -10.750060081481934
    4. '[index' → logprob: -11.875060081481934
    5. '[u' → logprob: -14.250060081481934
    6. ')[' → logprob: -14.625060081481934
    7. ')' → logprob: -14.750060081481934
    8. '[val' → logprob: -14.750060081481934
    9. '[
' → logprob: -15.000060081481934
    10. '```' → logprob: -15.250060081481934

Token 147: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020838597789406776
    2. ' ,' → logprob: -3.895838499069214
    3. '],' → logprob: -8.395838737487793
    4. '),' → logprob: -9.770838737487793
    5. ' ],' → logprob: -12.520838737487793
    6. ',c' → logprob: -13.645838737487793
    7. ' ),' → logprob: -13.645838737487793
    8. ',
' → logprob: -13.895838737487793
    9. ']' → logprob: -14.020838737487793
    10. '+' → logprob: -14.145838737487793

Token 148: ' cost' (ID: 3097)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.20871350169181824
    2. ' weight' → logprob: -1.7087135314941406
    3. 'cost' → logprob: -5.458713531494141
    4. ' cost' → logprob: -5.833713531494141
    5. ')' → logprob: -10.70871353149414
    6. '(weight' → logprob: -10.83371353149414
    7. '   ' → logprob: -11.33371353149414
    8. ' ' → logprob: -11.83371353149414
    9. 'weights' → logprob: -12.45871353149414
    10. '    ' → logprob: -12.77121353149414

Token 149: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02096947282552719
    2. ' )' → logprob: -4.645969390869141
    3. ')
' → logprob: -5.020969390869141
    4. '+' → logprob: -5.770969390869141
    5. ' +' → logprob: -6.770969390869141
    6. ' )
' → logprob: -8.52096939086914
    7. '           ' → logprob: -9.89596939086914
    8. '       ' → logprob: -11.02096939086914
    9. '               ' → logprob: -11.89596939086914
    10. ')

' → logprob: -12.27096939086914

Token 150: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.011063147336244583
    2. ' weight' → logprob: -4.511063098907471
    3. '   ' → logprob: -11.136063575744629
    4. ' ' → logprob: -15.261063575744629
    5. '  ' → logprob: -16.136062622070312
    6. '
' → logprob: -16.636062622070312
    7. '       ' → logprob: -16.636062622070312
    8. '    ' → logprob: -16.886062622070312
    9. '(weight' → logprob: -16.886062622070312
    10. '           ' → logprob: -17.261062622070312

Token 151: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. 'index' → logprob: -15.75
    4. '[Index' → logprob: -17.625
    5. ' [' → logprob: -18.625
    6. '(index' → logprob: -19.125
    7. '[idx' → logprob: -19.25
    8. '[ind' → logprob: -19.625
    9. '```' → logprob: -20.125
    10. '[current' → logprob: -20.125

Token 152: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008463275618851185
    2. ')' → logprob: -5.508463382720947
    3. '])
' → logprob: -5.508463382720947
    4. ']' → logprob: -9.008462905883789
    5. ')
' → logprob: -9.383462905883789
    6. '       ' → logprob: -10.258462905883789
    7. '])

' → logprob: -10.758462905883789
    8. '))' → logprob: -11.133462905883789
    9. '   ' → logprob: -11.508462905883789
    10. ' ])' → logprob: -11.758462905883789

Token 153: '       ' (ID: 309)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.3843401670455933
    2. '   ' → logprob: -1.7593401670455933
    3. '       ' → logprob: -1.8843401670455933
    4. '
' → logprob: -2.134340286254883
    5. '    
' → logprob: -2.509340286254883
    6. ')' → logprob: -2.509340286254883
    7. ' 
' → logprob: -3.134340286254883
    8. '<|end|>' → logprob: -3.759340286254883
    9. '        
' → logprob: -3.759340286254883
    10. 'v' → logprob: -4.634340286254883

Token 154: ' index' (ID: 3472)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.03561042621731758
    2. 'index' (adapté à ' index') → logprob: -3.5356104373931885
    3. 'v' → logprob: -6.285610198974609
    4. 'weight' → logprob: -6.535610198974609
    5. 'u' → logprob: -7.410610198974609
    6. '   ' → logprob: -7.660610198974609
    7. 'min' → logprob: -8.28561019897461
    8. 'idx' → logprob: -8.28561019897461
    9. 'next' → logprob: -8.41061019897461
    10. 'w' → logprob: -9.03561019897461

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12758685648441315
    2. '=' → logprob: -2.127586841583252
    3. ' +=' → logprob: -7.752586841583252
    4. '+=' → logprob: -9.00258731842041
    5. ' ' → logprob: -10.25258731842041
    6. ',' → logprob: -10.37758731842041
    7. ')' → logprob: -11.87758731842041
    8. '_' → logprob: -11.87758731842041
    9. 'x' → logprob: -12.87758731842041
    10. 's' → logprob: -13.00258731842041

Token 156: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004116273485124111
    2. ' min' → logprob: -5.754116058349609
    3. 'weight' → logprob: -7.004116058349609
    4. ' weight' → logprob: -11.25411605834961
    5. '(min' → logprob: -12.25411605834961
    6. '   ' → logprob: -12.62911605834961
    7. 'mini' → logprob: -13.87911605834961
    8. ' ' → logprob: -14.00411605834961
    9. 'mi' → logprob: -14.25411605834961
    10. '```' → logprob: -14.25411605834961

Token 157: '(V' (ID: 16949)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.024341585114598274
    2. '(V' → logprob: -4.149341583251953
    3. '(((' → logprob: -5.149341583251953
    4. '([(' → logprob: -6.649341583251953
    5. '(' → logprob: -7.024341583251953
    6. '(
' → logprob: -8.524341583251953
    7. '(weight' → logprob: -9.899341583251953
    8. '(v' → logprob: -11.024341583251953
    9. '([' → logprob: -11.774341583251953
    10. '(({' → logprob: -13.149341583251953

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009259917424060404
    2. ',key' → logprob: -7.0009260177612305
    3. ' ,' → logprob: -11.37592601776123
    4. 'key' → logprob: -12.75092601776123
    5. '   ' → logprob: -16.375925064086914
    6. ' key' → logprob: -17.500925064086914
    7. ',
' → logprob: -18.625925064086914
    8. '，' → logprob: -18.750925064086914
    9. '```' → logprob: -19.250925064086914
    10. '	key' → logprob: -19.875925064086914

Token 159: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06230130046606064
    2. ' key' → logprob: -2.8123013973236084
    3. 'lambda' → logprob: -8.062301635742188
    4. '   ' → logprob: -11.562301635742188
    5. ' lambda' → logprob: -11.937301635742188
    6. '	key' → logprob: -14.187301635742188
    7. ',key' → logprob: -14.312301635742188
    8. '       ' → logprob: -14.687301635742188
    9. ' ' → logprob: -16.187301635742188
    10. '    ' → logprob: -16.187301635742188

Token 160: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.25220009684562683
    2. '=' → logprob: -1.5022001266479492
    3. 'weight' → logprob: -8.75220012664795
    4. 'lambda' → logprob: -9.12720012664795
    5. ' weight' → logprob: -13.25220012664795
    6. ' =' → logprob: -14.12720012664795
    7. ' lambda' → logprob: -14.62720012664795
    8. '(lambda' → logprob: -15.12720012664795
    9. '(weight' → logprob: -15.62720012664795
    10. 'Weight' → logprob: -15.75220012664795

Token 161: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.3537652492523193
    2. 'v' → logprob: -1.4787652492523193
    3. ' lambda' → logprob: -1.7287652492523193
    4. ' weight' → logprob: -1.9787652492523193
    5. ' v' → logprob: -2.1037652492523193
    6. 'weight' → logprob: -2.6037652492523193
    7. ' ' → logprob: -7.603765487670898
    8. ' i' → logprob: -7.978765487670898
    9. ':' → logprob: -8.103765487670898
    10. 'i' → logprob: -8.853765487670898

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016967225819826126
    2. ' :' → logprob: -6.501696586608887
    3. 'weight' → logprob: -8.751696586608887
    4. ' weight' → logprob: -10.251696586608887
    5. ':
' → logprob: -15.876696586608887
    6. '   ' → logprob: -16.251697540283203
    7. ' ' → logprob: -16.376697540283203
    8. '_weight' → logprob: -16.376697540283203
    9. ':(' → logprob: -17.001697540283203
    10. ':i' → logprob: -17.126697540283203

Token 163: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.02982720173895359
    2. ' weight' → logprob: -3.529827117919922
    3. 'lambda' → logprob: -9.904827117919922
    4. '   ' → logprob: -11.904827117919922
    5. '(weight' → logprob: -11.904827117919922
    6. ' ' → logprob: -12.529827117919922
    7. ' lambda' → logprob: -12.654827117919922
    8. 'weights' → logprob: -12.904827117919922
    9. '  ' → logprob: -14.529827117919922
    10. ')' → logprob: -14.779827117919922

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. ' [' → logprob: -18.125
    4. '[
' → logprob: -18.75
    5. 'i' → logprob: -19.875
    6. '
' → logprob: -21.0
    7. '[I' → logprob: -21.75
    8. '```' → logprob: -21.75
    9. '(i' → logprob: -22.25
    10. ' ' → logprob: -22.875

Token 165: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001636024098843336
    2. '])' → logprob: -6.501636028289795
    3. ' )' → logprob: -9.876635551452637
    4. ')
' → logprob: -9.876635551452637
    5. '})' → logprob: -10.751635551452637
    6. '))' → logprob: -13.001635551452637
    7. ')])' → logprob: -13.001635551452637
    8. ')

' → logprob: -14.126635551452637
    9. '）' → logprob: -14.376635551452637
    10. ')]' → logprob: -14.501635551452637

Token 166: '       ' (ID: 309)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.014830146916210651
    2. '       ' → logprob: -4.639830112457275
    3. ' V' → logprob: -6.014830112457275
    4. '   ' → logprob: -6.014830112457275
    5. '
' → logprob: -9.264830589294434
    6. '<|end|>' → logprob: -10.139830589294434
    7. '        
' → logprob: -11.764830589294434
    8. '	V' → logprob: -12.014830589294434
    9. ')V' → logprob: -12.014830589294434
    10. ')' → logprob: -12.264830589294434

Token 167: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -2.129266067640856e-05
    2. '   ' → logprob: -11.125020980834961
    3. '       ' → logprob: -12.125020980834961
    4. '
' → logprob: -14.375020980834961
    5. ' V' → logprob: -14.500020980834961
    6. '	V' → logprob: -18.00002098083496
    7. '           ' → logprob: -18.62502098083496
    8. '_V' → logprob: -18.62502098083496
    9. ')V' → logprob: -19.50002098083496
    10. 'weight' → logprob: -19.50002098083496

Token 168: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0019857329316437244
    2. '.' → logprob: -6.251985549926758
    3. 'remove' → logprob: -10.251985549926758
    4. '.dis' → logprob: -10.751985549926758
    5. ' remove' → logprob: -15.126985549926758
    6. '.Remove' → logprob: -16.501985549926758
    7. '_remove' → logprob: -17.251985549926758
    8. '	remove' → logprob: -18.376985549926758
    9. '-remove' → logprob: -18.751985549926758
    10. ' .' → logprob: -19.001985549926758

Token 169: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0001617035741219297
    2. '(' → logprob: -8.750162124633789
    3. 'index' → logprob: -12.750162124633789
    4. '(
' → logprob: -15.375162124633789
    5. '(i' → logprob: -17.75016212463379
    6. '(indices' → logprob: -18.25016212463379
    7. ' (' → logprob: -18.50016212463379
    8. '(Index' → logprob: -19.75016212463379
    9. '(

' → logprob: -19.87516212463379
    10. '(ind' → logprob: -19.87516212463379

Token 170: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')
' → logprob: -10.375031471252441
    3. ' )' → logprob: -16.250032424926758
    4. ')

' → logprob: -16.625032424926758
    5. '))' → logprob: -17.125032424926758
    6. ')`' → logprob: -17.125032424926758
    7. ')return' → logprob: -17.250032424926758
    8. ')
' → logprob: -17.500032424926758
    9. '),' → logprob: -17.500032424926758
    10. ')}' → logprob: -18.000032424926758

Token 171: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004564135451801121
    2. '   ' → logprob: -8.500456809997559
    3. 'return' → logprob: -8.625456809997559
    4. 'for' (adapté à ' for') → logprob: -9.875456809997559
    5. '
' → logprob: -11.750456809997559
    6. ' print' → logprob: -12.000456809997559
    7. '    
' → logprob: -12.750456809997559
    8. 'if' → logprob: -12.875456809997559
    9. '```' → logprob: -13.625456809997559
    10. '#print' → logprob: -14.125456809997559

Token 173: ' i' (ID: 575)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0562745332717896
    2. 'i' → logprob: -1.3062745332717896
    3. ' w' → logprob: -1.5562745332717896
    4. ' i' → logprob: -1.8062745332717896
    5. 'v' → logprob: -6.3062744140625
    6. 'x' → logprob: -6.6812744140625
    7. ' v' → logprob: -6.8062744140625
    8. 'd' → logprob: -7.5562744140625
    9. ' x' → logprob: -7.6812744140625
    10. ' d' → logprob: -8.4312744140625

Token 174: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16257844865322113
    2. 'in' → logprob: -1.9125784635543823
    3. ',' → logprob: -6.162578582763672
    4. ' ' → logprob: -8.537578582763672
    5. '	in' → logprob: -11.412578582763672
    6. '  ' → logprob: -11.537578582763672
    7. ' ,' → logprob: -11.662578582763672
    8. 'range' → logprob: -12.037578582763672
    9. 'n' → logprob: -12.412578582763672
    10. ',in' → logprob: -13.037578582763672

Token 175: ' d' (ID: 272)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.011563621461391449
    2. ' w' → logprob: -4.886563777923584
    3. 'd' → logprob: -6.636563777923584
    4. 'weight' → logprob: -7.011563777923584
    5. 'dist' → logprob: -7.261563777923584
    6. 'v' → logprob: -7.761563777923584
    7. 'x' → logprob: -9.136563301086426
    8. 'wt' → logprob: -9.136563301086426
    9. 'cost' → logprob: -9.636563301086426
    10. 'c' → logprob: -10.136563301086426

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04667032137513161
    2. 'istance' → logprob: -3.171670436859131
    3. 'ist' → logprob: -6.046670436859131
    4. 'in' → logprob: -6.921670436859131
    5. ' ' → logprob: -9.796669960021973
    6. ',' → logprob: -9.921669960021973
    7. 'ista' → logprob: -10.046669960021973
    8. 'is' → logprob: -10.171669960021973
    9. 'ef' → logprob: -10.546669960021973
    10. 'e' → logprob: -10.796669960021973

Token 177: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.007610532455146313
    2. ' enumerate' → logprob: -4.882610321044922
    3. 'enum' → logprob: -13.132610321044922
    4. 'en' → logprob: -14.007610321044922
    5. 'weight' → logprob: -14.757610321044922
    6. ' ' → logprob: -14.882610321044922
    7. '(en' → logprob: -15.382610321044922
    8. '```' → logprob: -15.507610321044922
    9. 'x' → logprob: -15.632610321044922
    10. '   ' → logprob: -16.382610321044922

Token 178: '(weight' (ID: 121456)
  Prédit: '(weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -6.704273118884885e-07
    2. '(weights' → logprob: -15.250000953674316
    3. '(' → logprob: -15.500000953674316
    4. 'weight' → logprob: -15.500000953674316
    5. ' weight' → logprob: -17.625
    6. '(distance' → logprob: -19.25
    7. '(range' → logprob: -19.375
    8. ' (' → logprob: -19.625
    9. '(w' → logprob: -19.875
    10. '_weight' → logprob: -21.0

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03065783716738224
    2. '):
' → logprob: -3.5306577682495117
    3. ':' → logprob: -7.280657768249512
    4. ',' → logprob: -9.405657768249512
    5. ')' → logprob: -9.780657768249512
    6. ' ):' → logprob: -10.905657768249512
    7. '):
' → logprob: -11.030657768249512
    8. '):

' → logprob: -11.405657768249512
    9. '():' → logprob: -11.530657768249512
    10. '   ' → logprob: -11.780657768249512

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008077966049313545
    2. '   ' → logprob: -5.008078098297119
    3. '<|end|>' → logprob: -6.758078098297119
    4. 'print' → logprob: -9.133077621459961
    5. '        
' → logprob: -9.758077621459961
    6. '    
' → logprob: -11.258077621459961
    7. ' print' → logprob: -11.508077621459961
    8. '
' → logprob: -13.258077621459961
    9. '<|end|>' → logprob: -13.508077621459961
    10. ' ' → logprob: -13.883077621459961

Token 181: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07512277364730835
    2. '   ' → logprob: -3.325122833251953
    3. ' print' → logprob: -3.325122833251953
    4. '       ' → logprob: -8.075122833251953
    5. 'if' → logprob: -10.200122833251953
    6. '	print' → logprob: -10.325122833251953
    7. ' if' → logprob: -10.950122833251953
    8. '    
' → logprob: -11.450122833251953
    9. '    ' → logprob: -12.325122833251953
    10. ' ' → logprob: -12.325122833251953

Token 182: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.024092108011245728
    2. '(' → logprob: -3.899092197418213
    3. '(d' → logprob: -6.899092197418213
    4. 'i' → logprob: -7.024092197418213
    5. '("' → logprob: -7.024092197418213
    6. ' i' → logprob: -8.399091720581055
    7. 'd' → logprob: -8.899091720581055
    8. '("{}' → logprob: -9.024091720581055
    9. '("{' → logprob: -9.899091720581055
    10. '('' → logprob: -9.899091720581055

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02982720173895359
    2. ',d' → logprob: -3.529827117919922
    3. ' ,' → logprob: -10.029827117919922
    4. ',
' → logprob: -11.154827117919922
    5. ')' → logprob: -12.029827117919922
    6. ',end' → logprob: -12.904827117919922
    7. ',

' → logprob: -13.279827117919922
    8. ',",' → logprob: -13.279827117919922
    9. 'd' → logprob: -13.404827117919922
    10. '   ' → logprob: -13.529827117919922

Token 184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023249903693795204
    2. ' d' → logprob: -3.773249864578247
    3. 'int' → logprob: -13.148249626159668
    4. ')' → logprob: -14.148249626159668
    5. '"d' → logprob: -15.023249626159668
    6. ' ' → logprob: -15.273249626159668
    7. ' 
' → logprob: -15.273249626159668
    8. ')d' → logprob: -15.898249626159668
    9. ' int' → logprob: -16.148250579833984
    10. '(d' → logprob: -16.273250579833984

Token 185: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ' )' → logprob: -12.500008583068848
    3. ')
' → logprob: -12.750008583068848
    4. ')#' → logprob: -14.625008583068848
    5. ',' → logprob: -15.000008583068848
    6. '<|end|>' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.25000762939453
    8. ');' → logprob: -16.25000762939453
    9. ')}' → logprob: -16.37500762939453
    10. '))' → logprob: -16.37500762939453

Token 186: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09519516676664352
    2. '(' → logprob: -2.4701950550079346
    3. '<|end|>' → logprob: -5.720195293426514
    4. '()
' → logprob: -7.095195293426514
    5. '
' → logprob: -7.345195293426514
    6. '(
' → logprob: -7.595195293426514
    7. '```' → logprob: -8.220194816589355
    8. '\n' → logprob: -8.595194816589355
    9. '#' → logprob: -8.720194816589355
    10. ')' → logprob: -9.470194816589355


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 38.38%
Précision adaptée (1ère position): 41.62%
Précision (top 10): 81.62%
================================================================================
