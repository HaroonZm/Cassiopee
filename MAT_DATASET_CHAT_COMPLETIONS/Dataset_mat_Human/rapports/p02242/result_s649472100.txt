================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
from collections import deque
from enum import Enum
import sys
import math
from _heapq import heappush, heappop

#------------------------------------------#

BIG_NUM = 2000000000
HUGE_NUM = 9999999999999999
MOD = 1000000007
EPS = 0.000000001

#------------------------------------------#

class Edge:
    def __init__(self,arg_to,arg_cost):
        self.to = arg_to
        self.cost = arg_cost

class Info:
    def __init__(self,arg_node_id,arg_sum_cost):
        self.node_id = arg_node_id
        self.sum_cost = arg_sum_cost

    def __lt__(self,arg):
        return self.sum_cost < arg.sum_cost

V = int(input())
min_dist = [BIG_NUM]*V
G = [[] for i in range(V)]

for loop in range(V):
    node_id,tmp_num,*table = list(map(int,input().split()))
    for i in range(0,len(table),2):
        G[node_id].append(Edge(table[i],table[i+1]))

min_dist[0] = 0
Q = []

heappush(Q, Info(0,0))

while len(Q) > 0:
    info = heappop(Q)
    if info.sum_cost > min_dist[info.node_id]:
        continue
    for edge in G[info.node_id]:
        if min_dist[edge.to] > info.sum_cost+edge.cost:
            min_dist[edge.to] = info.sum_cost+edge.cost
            heappush(Q, Info(edge.to,min_dist[edge.to]))

for i in range(V):
    print("%d %d"%(i,min_dist[i]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -11.250060081481934
    3. '.\' → logprob: -11.250060081481934
    4. '.
' → logprob: -11.875060081481934
    5. '.​' → logprob: -11.875060081481934
    6. '."""' → logprob: -12.500060081481934
    7. '```' → logprob: -12.750060081481934
    8. '\' → logprob: -12.875060081481934
    9. ' .' → logprob: -13.250060081481934
    10. '.

' → logprob: -13.500060081481934

Token 4: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020509003661572933
    2. '\' → logprob: -9.500205039978027
    3. '.

' → logprob: -10.875205039978027
    4. '(' → logprob: -11.000205039978027
    5. '.
' → logprob: -11.000205039978027
    6. '```' → logprob: -11.250205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. '

' → logprob: -11.750205039978027
    9. '.\' → logprob: -11.750205039978027
    10. '.

' → logprob: -12.000205039978027

Token 5: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.013438556343317032
    2. ' math' → logprob: -5.013438701629639
    3. 'collections' → logprob: -5.638438701629639
    4. ' ' → logprob: -7.013438701629639
    5. ' itertools' → logprob: -7.138438701629639
    6. ' heap' → logprob: -7.388438701629639
    7. ' queue' → logprob: -8.38843822479248
    8. ' sys' → logprob: -8.63843822479248
    9. ' threading' → logprob: -9.26343822479248
    10. '_' → logprob: -9.76343822479248

Token 6: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09024123102426529
    2. ' import' → logprob: -2.4652411937713623
    3. '.' → logprob: -6.840241432189941
    4. '```' → logprob: -9.715241432189941
    5. '.Counter' → logprob: -9.715241432189941
    6. ' ' → logprob: -10.215241432189941
    7. '<|end|>' → logprob: -10.965241432189941
    8. ' defaultdict' → logprob: -11.090241432189941
    9. '.import' → logprob: -12.090241432189941
    10. '_' → logprob: -12.215241432189941

Token 7: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.1995922476053238
    2. ' defaultdict' → logprob: -2.449592351913452
    3. 'deque' → logprob: -2.449592351913452
    4. ' abc' → logprob: -4.949592113494873
    5. 'abc' → logprob: -7.324592113494873
    6. ' import' → logprob: -8.199592590332031
    7. ' named' → logprob: -9.324592590332031
    8. 'import' → logprob: -9.574592590332031
    9. '```' → logprob: -10.699592590332031
    10. ' ' → logprob: -10.699592590332031

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7338704466819763
    2. '\n' → logprob: -1.483870506286621
    3. '\' → logprob: -1.983870506286621
    4. '

' → logprob: -2.108870506286621
    5. '' → logprob: -4.358870506286621
    6. 'import' → logprob: -5.733870506286621
    7. '```' → logprob: -5.858870506286621
    8. '
' → logprob: -5.858870506286621
    9. '#' → logprob: -6.108870506286621
    10. ',' → logprob: -6.608870506286621

Token 9: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4039023816585541
    2. '
' → logprob: -1.4039024114608765
    3. '#' → logprob: -3.528902292251587
    4. '' → logprob: -4.528902530670166
    5. 'def' → logprob: -5.028902530670166
    6. '```' → logprob: -5.028902530670166
    7. '\n' → logprob: -5.153902530670166
    8. '
' → logprob: -5.278902530670166
    9. '\' → logprob: -5.528902530670166
    10. 'd' → logprob: -5.778902530670166

Token 10: ' enum' (ID: 15238)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.31565359234809875
    2. ' itertools' → logprob: -1.5656535625457764
    3. 'typing' → logprob: -3.9406535625457764
    4. ' heap' → logprob: -4.4406538009643555
    5. ' queue' → logprob: -4.4406538009643555
    6. ' math' → logprob: -4.5656538009643555
    7. ' threading' → logprob: -6.3156538009643555
    8. 'heap' → logprob: -6.6906538009643555
    9. ' collections' → logprob: -6.9406538009643555
    10. ' copy' → logprob: -7.3156538009643555

Token 11: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5777449011802673
    2. ' import' → logprob: -0.8277449011802673
    3. '	import' → logprob: -6.952744960784912
    4. ' ' → logprob: -8.202744483947754
    5. '_import' → logprob: -8.327744483947754
    6. '<|end|>' → logprob: -8.702744483947754
    7. ' ' → logprob: -10.077744483947754
    8. ' im' → logprob: -10.202744483947754
    9. '<|end|>' → logprob: -11.202744483947754
    10. '-import' → logprob: -11.452744483947754

Token 12: ' Enum' (ID: 35827)
  Prédit: ' Enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Enum' → logprob: -0.0070536257699131966
    2. ' Int' → logprob: -5.007053852081299
    3. 'Enum' → logprob: -8.00705337524414
    4. 'Int' → logprob: -13.13205337524414
    5. ' enum' → logprob: -13.50705337524414
    6. '.Enum' → logprob: -14.25705337524414
    7. '(Enum' → logprob: -14.88205337524414
    8. ' Flag' → logprob: -15.00705337524414
    9. ' auto' → logprob: -15.50705337524414
    10. '_enum' → logprob: -16.75705337524414

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8282602429389954
    2. '

' → logprob: -0.8282602429389954
    3. 'class' → logprob: -2.8282601833343506
    4. '```' → logprob: -3.2032601833343506
    5. '\n' → logprob: -4.07826042175293
    6. '<|end|>' → logprob: -5.57826042175293
    7. ' class' → logprob: -6.70326042175293
    8. '' → logprob: -7.07826042175293
    9. '
' → logprob: -7.20326042175293
    10. 'import' → logprob: -7.32826042175293

Token 14: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.24554605782032013
    2. '
' → logprob: -2.1205461025238037
    3. '

' → logprob: -3.3705461025238037
    4. '```' → logprob: -3.8705461025238037
    5. '\n' → logprob: -4.245545864105225
    6. '' → logprob: -4.370545864105225
    7. '\' → logprob: -5.745545864105225
    8. ' class' → logprob: -5.995545864105225
    9. '#' → logprob: -6.245545864105225
    10. 'c' → logprob: -6.370545864105225

Token 15: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8924903869628906
    2. ' sys' → logprob: -0.8924903869628906
    3. ' threading' → logprob: -2.7674903869628906
    4. ' heap' → logprob: -3.5174903869628906
    5. ' re' → logprob: -3.5174903869628906
    6. ' itertools' → logprob: -3.7674903869628906
    7. ' typing' → logprob: -4.392490386962891
    8. ' math' → logprob: -4.392490386962891
    9. ' ' → logprob: -5.892490386962891
    10. ' json' → logprob: -6.017490386962891

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3027825653553009
    2. '

' → logprob: -1.5527825355529785
    3. 'class' → logprob: -3.4277825355529785
    4. '' → logprob: -5.5527825355529785
    5. '#' → logprob: -5.8027825355529785
    6. '\n' → logprob: -5.8027825355529785
    7. '```' → logprob: -6.1777825355529785
    8. '
' → logprob: -6.5527825355529785
    9. '.' → logprob: -6.8027825355529785
    10. '\' → logprob: -7.3027825355529785

Token 17: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.813474714756012
    2. 'class' → logprob: -1.1884746551513672
    3. '

' → logprob: -1.5634746551513672
    4. '\n' → logprob: -3.688474655151367
    5. '```' → logprob: -4.563474655151367
    6. '' → logprob: -6.438474655151367
    7. ' class' → logprob: -6.438474655151367
    8. '#' → logprob: -7.063474655151367
    9. '
' → logprob: -7.313474655151367
    10. '\' → logprob: -7.563474655151367

Token 18: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10445015877485275
    2. ' threading' → logprob: -3.354450225830078
    3. ' heap' → logprob: -3.479450225830078
    4. ' math' → logprob: -3.854450225830078
    5. ' io' → logprob: -5.479450225830078
    6. ' itertools' → logprob: -5.604450225830078
    7. ' time' → logprob: -6.104450225830078
    8. 'os' → logprob: -7.104450225830078
    9. ' collections' → logprob: -7.604450225830078
    10. ' re' → logprob: -8.479450225830078

Token 19: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.46639978885650635
    2. '
' → logprob: -1.3413997888565063
    3. '\n' → logprob: -2.966399669647217
    4. '```' → logprob: -3.591399669647217
    5. 'class' → logprob: -3.841399669647217
    6. '' → logprob: -5.591399669647217
    7. '\' → logprob: -6.091399669647217
    8. '#' → logprob: -6.841399669647217
    9. '
' → logprob: -6.966399669647217
    10. '


' → logprob: -7.341399669647217

Token 20: 'from' (ID: 2845)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6002011895179749
    2. '#' → logprob: -1.60020112991333
    3. '
' → logprob: -2.47520112991333
    4. '\n' → logprob: -2.85020112991333
    5. '```' → logprob: -2.97520112991333
    6. '\' → logprob: -3.72520112991333
    7. '' → logprob: -4.60020112991333
    8. '

' → logprob: -4.60020112991333
    9. 'def' → logprob: -5.85020112991333
    10. '`' → logprob: -5.97520112991333

Token 21: ' _' (ID: 1175)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.27140164375305176
    2. ' heap' → logprob: -2.3964016437530518
    3. 'typing' → logprob: -3.0214016437530518
    4. ' itertools' → logprob: -3.1464016437530518
    5. 'heap' → logprob: -4.396401405334473
    6. ' queue' → logprob: -4.646401405334473
    7. ' collections' → logprob: -4.646401405334473
    8. ' functools' → logprob: -5.146401405334473
    9. ' threading' → logprob: -5.896401405334473
    10. 'collections' → logprob: -5.896401405334473

Token 22: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5213063359260559
    2. 'collections' → logprob: -1.0213062763214111
    3. 'thread' → logprob: -3.521306276321411
    4. 'queue' → logprob: -4.39630651473999
    5. '_' → logprob: -6.27130651473999
    6. 'operator' → logprob: -6.77130651473999
    7. 'weak' → logprob: -7.89630651473999
    8. 'bis' → logprob: -8.771306037902832
    9. 'fun' → logprob: -9.521306037902832
    10. 'opcode' → logprob: -9.646306037902832

Token 23: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.282920129597187e-05
    2. 'queue' → logprob: -11.500012397766113
    3. '<|end|>' → logprob: -14.500012397766113
    4. ' ' → logprob: -14.875012397766113
    5. 'op' → logprob: -15.375012397766113
    6. 'ql' → logprob: -15.500012397766113
    7. '_queue' → logprob: -15.875012397766113
    8. 'lib' → logprob: -16.12501335144043
    9. 'heap' → logprob: -16.12501335144043
    10. 'p' → logprob: -16.25001335144043

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.301674485206604
    2. ' ' → logprob: -1.551674485206604
    3. 'import' → logprob: -3.0516743659973145
    4. '<|end|>' → logprob: -7.0516743659973145
    5. '  ' → logprob: -8.676674842834473
    6. '_import' → logprob: -9.801674842834473
    7. '.' → logprob: -10.051674842834473
    8. ' c' → logprob: -10.676674842834473
    9. 'c' → logprob: -11.176674842834473
    10. ' _' → logprob: -11.426674842834473

Token 25: ' he' (ID: 501)
  Prédit: '_merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_merge' → logprob: -0.9637211561203003
    2. '_he' → logprob: -0.9637211561203003
    3. 'he' → logprob: -2.08872127532959
    4. 'heap' → logprob: -3.21372127532959
    5. ' he' → logprob: -3.33872127532959
    6. '_heap' → logprob: -3.96372127532959
    7. 'merge' → logprob: -4.96372127532959
    8. '.he' → logprob: -5.71372127532959
    9. '_' → logprob: -6.33872127532959
    10. ' heap' → logprob: -6.33872127532959

Token 26: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.6328557133674622
    2. 'ap' → logprob: -0.7578557133674622
    3. 'a' → logprob: -8.757855415344238
    4. 'aps' → logprob: -10.382855415344238
    5. 'apl' → logprob: -11.132855415344238
    6. 'ап' → logprob: -11.382855415344238
    7. 'aq' → logprob: -11.757855415344238
    8. 'q' → logprob: -12.382855415344238
    9. 'lp' → logprob: -12.507855415344238
    10. 'p' → logprob: -13.132855415344238

Token 27: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0009288526489399374
    2. 'op' → logprob: -7.00092887878418
    3. 'us' → logprob: -11.75092887878418
    4. 'u' → logprob: -11.87592887878418
    5. 'sh' → logprob: -14.00092887878418
    6. 'p' → logprob: -14.87592887878418
    7. '[' → logprob: -15.12592887878418
    8. '```' → logprob: -16.12592887878418
    9. 'o' → logprob: -16.25092887878418
    10. '   ' → logprob: -16.37592887878418

Token 28: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24601425230503082
    2. 'he' → logprob: -2.246014356613159
    3. ' ' → logprob: -3.246014356613159
    4. '(
' → logprob: -3.496014356613159
    5. ',' → logprob: -3.871014356613159
    6. '<|end|>' → logprob: -5.37101411819458
    7. '' → logprob: -5.62101411819458
    8. ' (' → logprob: -5.74601411819458
    9. ')' → logprob: -5.74601411819458
    10. ' he' → logprob: -7.12101411819458

Token 29: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.6344785094261169
    2. 'he' → logprob: -0.7594785094261169
    3. '_he' → logprob: -7.009478569030762
    4. 'heap' → logprob: -7.134478569030762
    5. ' heap' → logprob: -9.634478569030762
    6. '_heap' → logprob: -10.634478569030762
    7. ' ' → logprob: -10.634478569030762
    8. '_' → logprob: -10.884478569030762
    9. '.he' → logprob: -10.884478569030762
    10. '```' → logprob: -12.259478569030762

Token 30: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0025038402527570724
    2. 'ap' → logprob: -6.002503871917725
    3. 'a' → logprob: -11.002503395080566
    4. 'q' → logprob: -13.377503395080566
    5. 'ап' → logprob: -13.502503395080566
    6. 'appen' → logprob: -13.627503395080566
    7. 'appt' → logprob: -13.752503395080566
    8. '```' → logprob: -14.002503395080566
    9. 'appe' → logprob: -14.252503395080566
    10. 'apput' → logprob: -14.502503395080566

Token 31: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.34870222210884094
    2. 'op' → logprob: -1.2237021923065186
    3. 'us' → logprob: -9.223702430725098
    4. 'o' → logprob: -9.848702430725098
    5. '```' → logprob: -10.348702430725098
    6. '   ' → logprob: -11.098702430725098
    7. 'u' → logprob: -11.348702430725098
    8. '

' → logprob: -11.848702430725098
    9. 'opleft' → logprob: -12.098702430725098
    10. 'opp' → logprob: -12.598702430725098

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30404606461524963
    2. '' → logprob: -2.554046154022217
    3. '

' → logprob: -3.179046154022217
    4. '\n' → logprob: -3.179046154022217
    5. '(' → logprob: -3.679046154022217
    6. '#' → logprob: -4.179046154022217
    7. '.' → logprob: -4.179046154022217
    8. '<|end|>' → logprob: -4.679046154022217
    9. '\' → logprob: -4.804046154022217
    10. ' ' → logprob: -5.179046154022217

Token 33: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1631489247083664
    2. 'class' → logprob: -2.663148880004883
    3. '#' → logprob: -3.288148880004883
    4. 'c' → logprob: -4.038148880004883
    5. '

' → logprob: -4.788148880004883
    6. '' → logprob: -5.038148880004883
    7. 'd' → logprob: -5.163148880004883
    8. '
' → logprob: -6.413148880004883
    9. '\n' → logprob: -7.038148880004883
    10. '\' → logprob: -7.288148880004883

Token 34: '--------------------------------' (ID: 2737)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -9.221884101862088e-05
    2. ' 
' → logprob: -10.375092506408691
    3. 'class' → logprob: -11.000092506408691
    4. ' class' → logprob: -11.000092506408691
    5. '#' → logprob: -12.000092506408691
    6. ' ﻿' → logprob: -12.000092506408691
    7. ' ​' → logprob: -12.500092506408691
    8. ' #' → logprob: -12.750092506408691
    9. ' 

' → logprob: -13.250092506408691
    10. 'c' → logprob: -13.625092506408691

Token 35: '----------' (ID: 26444)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6788974404335022
    2. ' ' → logprob: -1.5538973808288574
    3. '#' → logprob: -1.9288973808288574
    4. ' 
' → logprob: -2.3038973808288574
    5. ' class' → logprob: -4.178897380828857
    6. 'c' → logprob: -4.928897380828857
    7. ' 

' → logprob: -5.553897380828857
    8. '
' → logprob: -5.678897380828857
    9. '-' → logprob: -6.803897380828857
    10. ' #' → logprob: -6.928897380828857

Token 36: '#

' (ID: 61846)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4706871509552002
    2. 'c' → logprob: -1.8456871509552002
    3. '#' → logprob: -2.3456871509552
    4. '
' → logprob: -2.7206871509552
    5. ' 
' → logprob: -3.3456871509552
    6. 'd' → logprob: -5.095686912536621
    7. '' → logprob: -5.595686912536621
    8. ' class' → logprob: -5.720686912536621
    9. ' ' → logprob: -6.095686912536621
    10. 'C' → logprob: -6.095686912536621

Token 37: 'BIG' (ID: 118898)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5275081396102905
    2. 'c' → logprob: -0.9025081396102905
    3. '#' → logprob: -6.52750825881958
    4. 'd' → logprob: -6.90250825881958
    5. 'cla' → logprob: -7.40250825881958
    6. 'cl' → logprob: -7.77750825881958
    7. 'clas' → logprob: -8.027507781982422
    8. '
' → logprob: -8.277507781982422
    9. 'C' → logprob: -9.527507781982422
    10. '' → logprob: -9.777507781982422

Token 38: '_NUM' (ID: 20468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049715474247932434
    2. ' _' → logprob: -4.174715518951416
    3. ' ' → logprob: -4.424715518951416
    4. '_M' → logprob: -4.924715518951416
    5. 'GEST' → logprob: -5.674715518951416
    6. '_O' → logprob: -6.674715518951416
    7. '_SIZE' → logprob: -6.924715518951416
    8. 'GER' → logprob: -7.049715518951416
    9. ' =' → logprob: -7.299715518951416
    10. '_NUMBER' → logprob: -7.424715518951416

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11685643345117569
    2. '=' → logprob: -2.241856336593628
    3. ' ' → logprob: -6.491856575012207
    4. '_' → logprob: -6.741856575012207
    5. 'O' → logprob: -7.741856575012207
    6. ')' → logprob: -8.491856575012207
    7. ',' → logprob: -9.366856575012207
    8. 'ITY' → logprob: -9.616856575012207
    9. 'OR' → logprob: -9.866856575012207
    10. 'S' → logprob: -9.991856575012207

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044167470186948776
    2. ' float' → logprob: -3.5441675186157227
    3. '10' → logprob: -4.544167518615723
    4. 'float' → logprob: -5.794167518615723
    5. '100' → logprob: -8.669167518615723
    6. '1' → logprob: -8.669167518615723
    7. ' math' → logprob: -8.919167518615723
    8. ' int' → logprob: -9.794167518615723
    9. '999' → logprob: -9.919167518615723
    10. 'math' → logprob: -10.919167518615723

Token 41: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.32325562834739685
    2. 'float' → logprob: -1.6982556581497192
    3. '1' → logprob: -3.5732555389404297
    4. '999' → logprob: -3.8232555389404297
    5. '100' → logprob: -3.9482555389404297
    6. ' ' → logprob: -4.44825553894043
    7. 'math' → logprob: -5.32325553894043
    8. 'int' → logprob: -5.57325553894043
    9. ' float' → logprob: -5.69825553894043
    10. ' math' → logprob: -9.32325553894043

Token 42: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0022801498416811228
    2. '00' → logprob: -6.752280235290527
    3. '0' → logprob: -7.252280235290527
    4. '_' → logprob: -7.877280235290527
    5. '**' → logprob: -11.377280235290527
    6. '*' → logprob: -12.752280235290527
    7. '001' → logprob: -13.877280235290527
    8. '<|end|>' → logprob: -13.877280235290527
    9. '"""' → logprob: -13.877280235290527
    10. '003' → logprob: -14.752280235290527

Token 43: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.22934739291667938
    2. '0' → logprob: -1.6043473482131958
    3. '_' → logprob: -6.354347229003906
    4. '00' → logprob: -6.604347229003906
    5. '+' → logprob: -7.229347229003906
    6. ' ' → logprob: -10.354347229003906
    7. '  
' → logprob: -11.104347229003906
    8. ' +' → logprob: -11.229347229003906
    9. '```' → logprob: -11.354347229003906
    10. '  ' → logprob: -11.479347229003906

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06318745017051697
    2. '000' → logprob: -2.93818736076355
    3. '+' → logprob: -5.438187599182129
    4. '00' → logprob: -6.188187599182129
    5. '_' → logprob: -7.063187599182129
    6. '\' → logprob: -8.438187599182129
    7. '
' → logprob: -8.813187599182129
    8. '

' → logprob: -8.938187599182129
    9. '\n' → logprob: -9.063187599182129
    10. '' → logprob: -9.313187599182129

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08840066939592361
    2. '

' → logprob: -3.0884006023406982
    3. ' 
' → logprob: -4.588400840759277
    4. '#' → logprob: -4.588400840759277
    5. ' 

' → logprob: -5.338400840759277
    6. '' → logprob: -5.463400840759277
    7. '\n' → logprob: -5.588400840759277
    8. '<|end|>' → logprob: -5.838400840759277
    9. '
' → logprob: -7.213400840759277
    10. ' ' → logprob: -7.463400840759277

Token 46: 'H' (ID: 39)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41765743494033813
    2. '

' → logprob: -1.7926573753356934
    3. 'class' → logprob: -2.1676573753356934
    4. '#' → logprob: -3.2926573753356934
    5. ' 

' → logprob: -4.667657375335693
    6. '\n' → logprob: -5.917657375335693
    7. '' → logprob: -5.917657375335693
    8. '
' → logprob: -6.417657375335693
    9. '\' → logprob: -6.792657375335693
    10. ' 
' → logprob: -7.042657375335693

Token 47: 'UGE' (ID: 73373)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.114156074821949
    2. 'ASH' → logprob: -3.4891560077667236
    3. 'IGH' → logprob: -3.7391560077667236
    4. 'UGE' → logprob: -4.364156246185303
    5. 'EL' → logprob: -5.239156246185303
    6. 'I' → logprob: -5.864156246185303
    7. 'OME' → logprob: -5.989156246185303
    8. 'AS' → logprob: -6.114156246185303
    9. 'OST' → logprob: -6.239156246185303
    10. 'eight' → logprob: -6.364156246185303

Token 48: '_NUM' (ID: 20468)
  Prédit: '_NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_NUM' → logprob: -0.001031619030982256
    2. ' _' → logprob: -8.001031875610352
    3. '_NUMBER' → logprob: -8.751031875610352
    4. '_SPACE' → logprob: -8.876031875610352
    5. '_' → logprob: -9.501031875610352
    6. '_N' → logprob: -9.876031875610352
    7. '_num' → logprob: -10.001031875610352
    8. '_INT' → logprob: -10.876031875610352
    9. '_M' → logprob: -11.126031875610352
    10. '_VAL' → logprob: -11.251031875610352

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017088521271944046
    2. '=' → logprob: -6.376708984375
    3. ' ' → logprob: -12.376708984375
    4. '_' → logprob: -13.126708984375
    5. ' =
' → logprob: -15.751708984375
    6. ' ' → logprob: -16.751708984375
    7. '_SPACE' → logprob: -16.876708984375
    8. ')' → logprob: -17.626708984375
    9. ' =)' → logprob: -17.626708984375
    10. '0' → logprob: -17.814208984375

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0026853985618799925
    2. '100' → logprob: -6.002685546875
    3. '200' → logprob: -9.127685546875
    4. '10' → logprob: -10.252685546875
    5. '999' → logprob: -10.752685546875
    6. '1' → logprob: -10.877685546875
    7. ' math' → logprob: -12.377685546875
    8. ' ' → logprob: -12.627685546875
    9. '922' → logprob: -13.002685546875
    10. ' BIG' → logprob: -13.252685546875

Token 51: '999' (ID: 9130)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25514188408851624
    2. '200' → logprob: -2.2551419734954834
    3. '999' → logprob: -3.2551419734954834
    4. '10' → logprob: -3.3801419734954834
    5. '400' → logprob: -4.755141735076904
    6. '922' → logprob: -4.755141735076904
    7. '500' → logprob: -4.880141735076904
    8. '300' → logprob: -5.005141735076904
    9. '900' → logprob: -5.130141735076904
    10. '1' → logprob: -5.755141735076904

Token 52: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.0012899977155029774
    2. '99' → logprob: -7.3762898445129395
    3. '_' → logprob: -7.8762898445129395
    4. '9' → logprob: -8.376290321350098
    5. '000' → logprob: -10.376290321350098
    6. '990' → logprob: -11.626290321350098
    7. '```' → logprob: -12.626290321350098
    8. '987' → logprob: -13.001290321350098
    9. '900' → logprob: -13.126290321350098
    10. '998' → logprob: -13.376290321350098

Token 53: '999' (ID: 9130)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5894479751586914
    2. '999' → logprob: -0.8394479751586914
    3. '99' → logprob: -4.339447975158691
    4. '```' → logprob: -9.339447975158691
    5. '+' → logprob: -9.964447975158691
    6. '_' → logprob: -10.089447975158691
    7. '990' → logprob: -10.901947975158691
    8. '0' → logprob: -10.964447975158691
    9. '<|end|>' → logprob: -10.964447975158691
    10. '7' → logprob: -11.026947975158691

Token 54: '999' (ID: 9130)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03579366207122803
    2. '999' → logprob: -3.5357937812805176
    3. '
' → logprob: -6.285793781280518
    4. '99' → logprob: -6.660793781280518
    5. '+' → logprob: -7.160793781280518
    6. '<|end|>' → logprob: -7.285793781280518
    7. '#' → logprob: -8.03579330444336
    8. '0' → logprob: -8.16079330444336
    9. '

' → logprob: -8.53579330444336
    10. '```' → logprob: -9.16079330444336

Token 55: '999' (ID: 9130)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3934902548789978
    2. '<|end|>' → logprob: -1.8934903144836426
    3. '#' → logprob: -2.0184903144836426
    4. '

' → logprob: -4.393490314483643
    5. '9' → logprob: -4.768490314483643
    6. '\n' → logprob: -5.143490314483643
    7. '<|end|>' → logprob: -5.643490314483643
    8. '' → logprob: -5.643490314483643
    9. '0' → logprob: -6.768490314483643
    10. ')' → logprob: -7.018490314483643

Token 56: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1212422102689743
    2. '999' → logprob: -2.6212422847747803
    3. '
' → logprob: -3.4962422847747803
    4. '

' → logprob: -5.746242046356201
    5. '<|end|>' → logprob: -5.996242046356201
    6. '#' → logprob: -6.996242046356201
    7. '+' → logprob: -7.246242046356201
    8. '\n' → logprob: -7.371242046356201
    9. '99' → logprob: -7.371242046356201
    10. '' → logprob: -7.496242046356201

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07907198369503021
    2. '<|end|>' → logprob: -3.2040719985961914
    3. '#' → logprob: -4.079071998596191
    4. '

' → logprob: -5.204071998596191
    5. '\n' → logprob: -5.579071998596191
    6. '' → logprob: -5.579071998596191
    7. ' 
' → logprob: -5.954071998596191
    8. '<|end|>' → logprob: -7.329071998596191
    9. '
' → logprob: -7.579071998596191
    10. '_' → logprob: -8.204071998596191

Token 58: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4291910231113434
    2. '#' → logprob: -1.554190993309021
    3. '

' → logprob: -2.6791911125183105
    4. 'class' → logprob: -2.9291911125183105
    5. '<|end|>' → logprob: -5.8041911125183105
    6. '\n' → logprob: -6.3041911125183105
    7. '
' → logprob: -6.3041911125183105
    8. ' 

' → logprob: -6.3041911125183105
    9. '' → logprob: -6.4291911125183105
    10. ' 
' → logprob: -7.0541911125183105

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02613365836441517
    2. ' ' → logprob: -4.2761335372924805
    3. '_' → logprob: -4.7761335372924805
    4. '=' → logprob: -5.9011335372924805
    5. ' _' → logprob: -7.7761335372924805
    6. '  ' → logprob: -8.90113353729248
    7. '<|end|>' → logprob: -9.65113353729248
    8. '_SPACE' → logprob: -9.77613353729248
    9. '_NUM' → logprob: -11.52613353729248
    10. '.' → logprob: -12.27613353729248

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005007578991353512
    2. '10' → logprob: -5.380007743835449
    3. '100' → logprob: -8.00500774383545
    4. '1' → logprob: -10.25500774383545
    5. '998' → logprob: -12.38000774383545
    6. ' (' → logprob: -12.50500774383545
    7. ' 
' → logprob: -13.00500774383545
    8. ' ' → logprob: -13.50500774383545
    9. '2' → logprob: -13.63000774383545
    10. '0' → logprob: -13.75500774383545

Token 61: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5830536484718323
    2. '10' → logprob: -0.8330536484718323
    3. ' ' → logprob: -4.9580535888671875
    4. '998' → logprob: -10.208053588867188
    5. '1' → logprob: -10.708053588867188
    6. 'int' → logprob: -14.458053588867188
    7. '(' → logprob: -14.458053588867188
    8. '123' → logprob: -14.583053588867188
    9. '```' → logprob: -14.708053588867188
    10. ' (' → logprob: -15.208053588867188

Token 62: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3893108367919922
    2. '9' → logprob: -1.1393108367919922
    3. '+' → logprob: -6.639310836791992
    4. '7' → logprob: -7.389310836791992
    5. '09' → logprob: -8.639310836791992
    6. '07' → logprob: -8.764310836791992
    7. '```' → logprob: -10.014310836791992
    8. '007' → logprob: -10.389310836791992
    9. '_' → logprob: -10.764310836791992
    10. '009' → logprob: -11.014310836791992

Token 63: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03784741833806038
    2. '+' → logprob: -3.6628475189208984
    3. '9' → logprob: -4.912847518920898
    4. '7' → logprob: -5.662847518920898
    5. '0' → logprob: -7.912847518920898
    6. '00' → logprob: -9.412847518920898
    7. ' +' → logprob: -9.787847518920898
    8. '```' → logprob: -9.787847518920898
    9. '6' → logprob: -10.537847518920898
    10. '07' → logprob: -10.787847518920898

Token 64: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -8.637786231702194e-05
    2. '9' → logprob: -9.500086784362793
    3. '+' → logprob: -11.625086784362793
    4. '07' → logprob: -13.750086784362793
    5. '```' → logprob: -14.375086784362793
    6. '0' → logprob: -14.750086784362793
    7. ' ' → logprob: -15.250086784362793
    8. ' +' → logprob: -15.500086784362793
    9. '007' → logprob: -18.375085830688477
    10. '``' → logprob: -18.625085830688477

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06531605869531631
    2. '

' → logprob: -2.8153159618377686
    3. '\n' → logprob: -6.940316200256348
    4. '#' → logprob: -7.190316200256348
    5. '' → logprob: -7.440316200256348
    6. '
' → logprob: -7.815316200256348
    7. '<|end|>' → logprob: -7.815316200256348
    8. '


' → logprob: -9.940316200256348
    9. 'newline' → logprob: -10.315316200256348
    10. '```' → logprob: -10.565316200256348

Token 66: 'EPS' (ID: 82793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1817934215068817
    2. '

' → logprob: -2.306793451309204
    3. '#' → logprob: -3.181793451309204
    4. '\n' → logprob: -4.806793212890625
    5. 'class' → logprob: -4.806793212890625
    6. ' 

' → logprob: -6.431793212890625
    7. '
' → logprob: -6.431793212890625
    8. '<|end|>' → logprob: -6.681793212890625
    9. '\' → logprob: -7.056793212890625
    10. '' → logprob: -7.056793212890625

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03696708753705025
    2. '=' → logprob: -4.2869672775268555
    3. ' ' → logprob: -4.4119672775268555
    4. '_' → logprob: -5.2869672775268555
    5. ' _' → logprob: -5.9119672775268555
    6. '  ' → logprob: -7.4119672775268555
    7. '_SPACE' → logprob: -7.5369672775268555
    8. '<|end|>' → logprob: -7.9119672775268555
    9. '.' → logprob: -8.161967277526855
    10. ',' → logprob: -8.786967277526855

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009782887995243073
    2. '1' → logprob: -4.634782791137695
    3. '0' → logprob: -11.259782791137695
    4. '10' → logprob: -12.134782791137695
    5. ' ' → logprob: -12.384782791137695
    6. '<|end|>' → logprob: -13.009782791137695
    7. '  ' → logprob: -14.384782791137695
    8. '9' → logprob: -15.134782791137695
    9. '6' → logprob: -15.634782791137695
    10. ' )' → logprob: -16.009782791137695

Token 69: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007129086880013347
    2. ' ' → logprob: -7.250712871551514
    3. '-' → logprob: -12.875713348388672
    4. '0' → logprob: -15.500713348388672
    5. '   ' → logprob: -17.125713348388672
    6. '```' → logprob: -17.875713348388672
    7. ' -' → logprob: -18.000713348388672
    8. '=' → logprob: -18.000713348388672
    9. '10' → logprob: -18.000713348388672
    10. '(' → logprob: -19.125713348388672

Token 70: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.3795937522663735e-05
    2. '.
' → logprob: -12.00002384185791
    3. ' .' → logprob: -12.50002384185791
    4. '```' → logprob: -12.50002384185791
    5. '-' → logprob: -12.62502384185791
    6. '**' → logprob: -13.00002384185791
    7. '\.' → logprob: -14.00002384185791
    8. '1' → logprob: -14.62502384185791
    9. '.\' → logprob: -15.12502384185791
    10. 'e' → logprob: -15.25002384185791

Token 71: '000' (ID: 1302)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0062911296263337135
    2. '1' → logprob: -5.256290912628174
    3. '10' → logprob: -7.506290912628174
    4. '12' → logprob: -8.131291389465332
    5. '15' → logprob: -9.381291389465332
    6. '8' → logprob: -10.256291389465332
    7. '-' → logprob: -10.881291389465332
    8. '14' → logprob: -11.256291389465332
    9. '11' → logprob: -11.506291389465332
    10. '0' → logprob: -11.631291389465332

Token 72: '000' (ID: 1302)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2103598564863205
    2. '000' → logprob: -1.710359811782837
    3. '001' → logprob: -4.835360050201416
    4. '01' → logprob: -6.960360050201416
    5. '```' → logprob: -11.835359573364258
    6. '0' → logprob: -13.335359573364258
    7. '' → logprob: -13.835359573364258
    8. '_' → logprob: -13.835359573364258
    9. '00' → logprob: -14.460359573364258
    10. '-' → logprob: -14.522859573364258

Token 73: '001' (ID: 7659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015141464537009597
    2. '01' → logprob: -6.626513957977295
    3. '001' → logprob: -8.626514434814453
    4. '000' → logprob: -11.626514434814453
    5. '2' → logprob: -18.001514434814453
    6. '```' → logprob: -18.001514434814453
    7. '１' → logprob: -18.501514434814453
    8. '05' → logprob: -19.251514434814453
    9. '0' → logprob: -19.751514434814453
    10. '' → logprob: -20.064014434814453

Token 74: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.583465039730072
    2. '#' → logprob: -1.0834650993347168
    3. '\n' → logprob: -3.083465099334717
    4. '' → logprob: -3.708465099334717
    5. '

' → logprob: -4.083465099334717
    6. '\' → logprob: -5.458465099334717
    7. ' ' → logprob: -5.833465099334717
    8. '<|end|>' → logprob: -6.208465099334717
    9. ' 
' → logprob: -6.833465099334717
    10. '_' → logprob: -6.833465099334717

Token 75: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2980165183544159
    2. '#' → logprob: -1.9230165481567383
    3. 'c' → logprob: -2.4230165481567383
    4. 'd' → logprob: -4.423016548156738
    5. '
' → logprob: -5.423016548156738
    6. 'def' → logprob: -6.048016548156738
    7. '' → logprob: -7.048016548156738
    8. 'C' → logprob: -7.423016548156738
    9. '\' → logprob: -7.673016548156738
    10. '

' → logprob: -8.048016548156738

Token 76: '--------------------------------' (ID: 2737)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8718591928482056
    2. 'd' → logprob: -0.9968591928482056
    3. 'class' → logprob: -2.121859073638916
    4. '#' → logprob: -2.496859073638916
    5. 'def' → logprob: -5.746859073638916
    6. 'C' → logprob: -6.121859073638916
    7. '_' → logprob: -6.871859073638916
    8. 'D' → logprob: -7.121859073638916
    9. '\' → logprob: -7.621859073638916
    10. 'a' → logprob: -7.746859073638916

Token 77: '----------' (ID: 26444)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22056229412555695
    2. '#' → logprob: -1.8455623388290405
    3. '\' → logprob: -4.34556245803833
    4. 'def' → logprob: -4.72056245803833
    5. '_CODE' → logprob: -5.97056245803833
    6. '```' → logprob: -5.97056245803833
    7. '_SEPARATOR' → logprob: -7.09556245803833
    8. 'import' → logprob: -7.09556245803833
    9. '_LINE' → logprob: -7.09556245803833
    10. '_##' → logprob: -7.47056245803833

Token 78: '#

' (ID: 61846)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.032739315181970596
    2. '#

' → logprob: -3.9077394008636475
    3. '
' → logprob: -5.157739162445068
    4. '

' → logprob: -6.157739162445068
    5. '#
' → logprob: -6.657739162445068
    6. 'class' → logprob: -6.657739162445068
    7. '\n' → logprob: -7.532739162445068
    8. 'def' → logprob: -7.532739162445068
    9. '<|end|>' → logprob: -8.532739639282227
    10. 'newline' → logprob: -9.532739639282227

Token 79: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00038980069803074
    2. 'def' → logprob: -8.00039005279541
    3. '#' → logprob: -10.87539005279541
    4. 'c' → logprob: -11.12539005279541
    5. ' class' → logprob: -11.87539005279541
    6. 'cla' → logprob: -12.62539005279541
    7. 'clas' → logprob: -12.62539005279541
    8. 'cl' → logprob: -12.75039005279541
    9. 'd' → logprob: -14.25039005279541
    10. '"class' → logprob: -14.37539005279541

Token 80: ' Edge' (ID: 16396)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033602017909288406
    2. ' Priority' → logprob: -4.783602237701416
    3. ' Direction' → logprob: -4.783602237701416
    4. ' Enum' → logprob: -5.283602237701416
    5. ' Node' → logprob: -5.533602237701416
    6. ' My' → logprob: -6.158602237701416
    7. ' Color' → logprob: -6.783602237701416
    8. ' Space' → logprob: -7.408602237701416
    9. ' Basic' → logprob: -7.908602237701416
    10. ' A' → logprob: -8.033601760864258

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004459316376596689
    2. '(' → logprob: -5.629459381103516
    3. ' :' → logprob: -7.129459381103516
    4. ':
' → logprob: -11.379459381103516
    5. '():' → logprob: -11.504459381103516
    6. ':**' → logprob: -11.629459381103516
    7. '(object' → logprob: -12.004459381103516
    8. '(:' → logprob: -12.004459381103516
    9. '):' → logprob: -12.379459381103516
    10. '<|end|>' → logprob: -12.754459381103516

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3353670537471771
    2. ' ' → logprob: -2.21036696434021
    3. '<|end|>' → logprob: -2.96036696434021
    4. '(' → logprob: -3.33536696434021
    5. '   ' → logprob: -3.46036696434021
    6. ' :' → logprob: -3.71036696434021
    7. '(object' → logprob: -4.210367202758789
    8. ' (' → logprob: -4.960367202758789
    9. '    ' → logprob: -5.710367202758789
    10. '  ' → logprob: -6.085367202758789

Token 83: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09142287075519562
    2. 'def' (adapté à ' def') → logprob: -3.2164227962493896
    3. ' ' → logprob: -3.4664227962493896
    4. '   ' → logprob: -4.341423034667969
    5. '    ' → logprob: -6.216423034667969
    6. '  ' → logprob: -8.216423034667969
    7. '	def' → logprob: -8.466423034667969
    8. ' ' → logprob: -9.216423034667969
    9. ' __' → logprob: -9.591423034667969
    10. ' ‌' → logprob: -9.841423034667969

Token 84: ' __' (ID: 2516)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.2813636064529419
    2. ' nit' → logprob: -2.5313634872436523
    3. 'n' → logprob: -2.6563634872436523
    4. ' __' → logprob: -3.4063634872436523
    5. ' def' → logprob: -4.656363487243652
    6. ' ' → logprob: -4.656363487243652
    7. 'it' → logprob: -4.781363487243652
    8. 'f' → logprob: -5.156363487243652
    9. '__' → logprob: -5.281363487243652
    10. 't' → logprob: -5.406363487243652

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.009835069999098778
    2. 'i' → logprob: -5.384835243225098
    3. 'n' → logprob: -5.384835243225098
    4. 'nit' → logprob: -7.884835243225098
    5. 'in' → logprob: -8.884835243225098
    6. 'ini' → logprob: -10.259835243225098
    7. ' i' → logprob: -10.384835243225098
    8. ' init' → logprob: -10.884835243225098
    9. 'ni' → logprob: -12.259835243225098
    10. 'int' → logprob: -13.134835243225098

Token 86: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4428784251213074
    2. '(' → logprob: -1.5678784847259521
    3. '__' → logprob: -2.192878484725952
    4. '_' → logprob: -3.442878484725952
    5. '__(
' → logprob: -6.317878246307373
    6. ' (' → logprob: -6.817878246307373
    7. '<|end|>' → logprob: -6.817878246307373
    8. '_(' → logprob: -7.067878246307373
    9. '__((' → logprob: -7.817878246307373
    10. '__(*' → logprob: -9.192878723144531

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012565569952130318
    2. ' self' → logprob: -4.387565612792969
    3. ')' → logprob: -10.262565612792969
    4. ' ' → logprob: -11.762565612792969
    5. '<|end|>' → logprob: -12.387565612792969
    6. ' )' → logprob: -12.762565612792969
    7. 's' → logprob: -13.387565612792969
    8. '	self' → logprob: -13.387565612792969
    9. '(self' → logprob: -13.512565612792969
    10. '_self' → logprob: -14.012565612792969

Token 88: ',arg' (ID: 177047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1807539314031601
    2. ' ,' → logprob: -1.8057539463043213
    3. '_,' → logprob: -7.680753707885742
    4. '<|end|>' → logprob: -8.555753707885742
    5. '(' → logprob: -9.305753707885742
    6. ')' → logprob: -9.930753707885742
    7. ',self' → logprob: -10.055753707885742
    8. '_' → logprob: -10.555753707885742
    9. ',node' → logprob: -10.680753707885742
    10. ',_' → logprob: -10.805753707885742

Token 89: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.386479139328003
    2. '1' → logprob: -1.761479139328003
    3. 's' → logprob: -1.761479139328003
    4. '):' → logprob: -1.886479139328003
    5. ',' → logprob: -2.136479139328003
    6. ')' → logprob: -2.386479139328003
    7. ' )' → logprob: -4.886479377746582
    8. '(' → logprob: -5.011479377746582
    9. 'u' → logprob: -5.386479377746582
    10. ' ,' → logprob: -5.511479377746582

Token 90: ',arg' (ID: 177047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008000272326171398
    2. ' ,' → logprob: -5.258000373840332
    3. '):' → logprob: -6.633000373840332
    4. ',node' → logprob: -7.633000373840332
    5. '_,' → logprob: -8.383000373840332
    6. ')' → logprob: -8.383000373840332
    7. ' ):' → logprob: -9.133000373840332
    8. ' ' → logprob: -9.258000373840332
    9. '_node' → logprob: -9.633000373840332
    10. '_' → logprob: -9.883000373840332

Token 91: '_cost' (ID: 36820)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2414393424987793
    2. '):' → logprob: -2.4914393424987793
    3. ',' → logprob: -3.2414393424987793
    4. ')' → logprob: -3.2414393424987793
    5. '_,' → logprob: -3.8664393424987793
    6. '_)' → logprob: -4.616439342498779
    7. ',_' → logprob: -4.616439342498779
    8. '_from' → logprob: -5.241439342498779
    9. 's' → logprob: -6.366439342498779
    10. ')_' → logprob: -6.366439342498779

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009923362173140049
    2. ')' → logprob: -4.759923458099365
    3. ',' → logprob: -6.759923458099365
    4. ' ):' → logprob: -9.384922981262207
    5. '=' → logprob: -10.634922981262207
    6. ':' → logprob: -10.759922981262207
    7. ' ' → logprob: -11.884922981262207
    8. '=None' → logprob: -12.634922981262207
    9. '):
' → logprob: -12.759922981262207
    10. '),' → logprob: -14.259922981262207

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45444363355636597
    2. ':' → logprob: -1.3294436931610107
    3. ')' → logprob: -3.0794436931610107
    4. '   ' → logprob: -4.329443454742432
    5. '):' → logprob: -4.329443454742432
    6. '<|end|>' → logprob: -4.579443454742432
    7. '    ' → logprob: -5.454443454742432
    8. ' ' → logprob: -5.579443454742432
    9. ',' → logprob: -5.829443454742432
    10. '        ' → logprob: -6.579443454742432

Token 94: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3010013997554779
    2. 'self' (adapté à ' self') → logprob: -1.5510014295578003
    3. '       ' → logprob: -3.0510013103485107
    4. '   ' → logprob: -8.05100154876709
    5. '	self' → logprob: -8.67600154876709
    6. '_self' → logprob: -10.42600154876709
    7. ' ' → logprob: -10.67600154876709
    8. ' ' → logprob: -11.30100154876709
    9. '        
' → logprob: -12.42600154876709
    10. '        ' → logprob: -12.55100154876709

Token 95: '.to' (ID: 3552)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35983312129974365
    2. '.to' → logprob: -1.2348331212997437
    3. '.arg' → logprob: -5.359833240509033
    4. ' =' → logprob: -6.234833240509033
    5. '_to' → logprob: -6.359833240509033
    6. '=' → logprob: -7.359833240509033
    7. ' .' → logprob: -7.609833240509033
    8. 'to' → logprob: -7.984833240509033
    9. '._' → logprob: -8.234832763671875
    10. '.from' → logprob: -8.359832763671875

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04862120375037193
    2. '=' → logprob: -3.04862117767334
    3. ' ' → logprob: -10.92362117767334
    4. ',' → logprob: -11.42362117767334
    5. '<|end|>' → logprob: -13.42362117767334
    6. ' ,' → logprob: -13.79862117767334
    7. '.' → logprob: -14.17362117767334
    8. ')' → logprob: -15.04862117767334
    9. ' =
' → logprob: -15.54862117767334
    10. '  ' → logprob: -15.67362117767334

Token 97: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.0002342912630410865
    2. 'arg' → logprob: -8.375234603881836
    3. ' ' → logprob: -13.625234603881836
    4. '	arg' → logprob: -13.875234603881836
    5. '[arg' → logprob: -14.625234603881836
    6. ')arg' → logprob: -14.750234603881836
    7. ' ' → logprob: -15.250234603881836
    8. '(arg' → logprob: -15.875234603881836
    9. ',arg' → logprob: -15.875234603881836
    10. '_arg' → logprob: -16.250234603881836

Token 98: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.375011444091797
    3. '_t' → logprob: -15.375011444091797
    4. '_cost' → logprob: -16.000011444091797
    5. 'to' → logprob: -16.875011444091797
    6. '__' → logprob: -20.125011444091797
    7. ' _' → logprob: -20.125011444091797
    8. '_for' → logprob: -20.375011444091797
    9. 'To' → logprob: -20.500011444091797
    10. '_
' → logprob: -20.750011444091797

Token 99: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08977145701646805
    2. 'self' (adapté à ' self') → logprob: -2.5897715091705322
    3. '
' → logprob: -4.964771270751953
    4. ' self' → logprob: -5.714771270751953
    5. '<|end|>' → logprob: -7.839771270751953
    6. '   ' → logprob: -10.589771270751953
    7. '	self' → logprob: -10.589771270751953
    8. '        
' → logprob: -11.089771270751953
    9. '
' → logprob: -11.089771270751953
    10. '               ' → logprob: -11.464771270751953

Token 102: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.05489514768123627
    2. '.' → logprob: -3.1798951625823975
    3. '_cost' → logprob: -4.929894924163818
    4. '._' → logprob: -5.554894924163818
    5. ' .' → logprob: -7.929894924163818
    6. 'cost' → logprob: -8.929895401000977
    7. '.c' → logprob: -10.304895401000977
    8. '_COST' → logprob: -10.429895401000977
    9. 'Cost' → logprob: -10.554895401000977
    10. '.code' → logprob: -11.304895401000977

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054925840348005295
    2. '=' → logprob: -2.9299259185791016
    3. ' ' → logprob: -10.054925918579102
    4. ' ' → logprob: -15.429925918579102
    5. ' =
' → logprob: -15.554925918579102
    6. '<|end|>' → logprob: -16.1799259185791
    7. ')' → logprob: -17.0549259185791
    8. '    ' → logprob: -17.3049259185791
    9. ',' → logprob: -17.4299259185791
    10. '  ' → logprob: -17.5549259185791

Token 104: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.0788901224732399
    2. 'arg' → logprob: -2.578890085220337
    3. '	arg' → logprob: -15.703889846801758
    4. '(arg' → logprob: -16.828889846801758
    5. ')arg' → logprob: -17.078889846801758
    6. '[arg' → logprob: -17.203889846801758
    7. ' ' → logprob: -17.578889846801758
    8. ' ' → logprob: -17.578889846801758
    9. 'argon' → logprob: -18.078889846801758
    10. '_arg' → logprob: -18.078889846801758

Token 105: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.841743303695694e-05
    2. '_' → logprob: -9.25009822845459
    3. 'cost' → logprob: -14.00009822845459
    4. '_COST' → logprob: -14.50009822845459
    5. '_
' → logprob: -15.12509822845459
    6. '_co' → logprob: -15.37509822845459
    7. '_cos' → logprob: -15.75009822845459
    8. '_c' → logprob: -16.000099182128906
    9. ' _' → logprob: -16.375099182128906
    10. ' cost' → logprob: -17.000099182128906

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012542853131890297
    2. '<|end|>' → logprob: -4.637542724609375
    3. '

' → logprob: -6.887542724609375
    4. '\n' → logprob: -7.762542724609375
    5. '' → logprob: -7.887542724609375
    6. ' 
' → logprob: -8.137542724609375
    7. '    
' → logprob: -8.762542724609375
    8. ' ' → logprob: -9.137542724609375
    9. '   ' → logprob: -9.262542724609375
    10. '  
' → logprob: -9.512542724609375

Token 108: ' Info' (ID: 17858)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.44971320033073425
    2. ' Graph' → logprob: -1.0747132301330566
    3. ' Vertex' → logprob: -4.074713230133057
    4. 'Node' → logprob: -6.574713230133057
    5. 'Graph' → logprob: -7.074713230133057
    6. ' ' → logprob: -7.324713230133057
    7. ' Point' → logprob: -8.449712753295898
    8. ' Priority' → logprob: -9.074712753295898
    9. ' Queue' → logprob: -9.324712753295898
    10. ' State' → logprob: -9.324712753295898

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025695946533232927
    2. ' :' → logprob: -6.502569675445557
    3. '<|end|>' → logprob: -7.502569675445557
    4. ':
' → logprob: -7.752569675445557
    5. '(object' → logprob: -10.502569198608398
    6. '):' → logprob: -11.252569198608398
    7. '(' → logprob: -11.252569198608398
    8. '<|end|>' → logprob: -11.377569198608398
    9. ' :
' → logprob: -12.877569198608398
    10. '():' → logprob: -12.877569198608398

Token 110: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.930023729801178
    2. 'def' (adapté à ' def') → logprob: -0.930023729801178
    3. ':' → logprob: -1.9300236701965332
    4. ' def' → logprob: -4.055023670196533
    5. '   ' → logprob: -4.430023670196533
    6. ' ' → logprob: -4.930023670196533
    7. '```' → logprob: -4.930023670196533
    8. ' __' → logprob: -5.055023670196533
    9. '  ' → logprob: -5.555023670196533
    10. '<|end|>' → logprob: -5.805023670196533

Token 112: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.2816615402698517
    2. ' __' → logprob: -1.9066615104675293
    3. '__' → logprob: -2.5316615104675293
    4. ' init' → logprob: -4.531661510467529
    5. '_init' → logprob: -5.031661510467529
    6. 'int' → logprob: -11.406661987304688
    7. '_' → logprob: -11.531661987304688
    8. 'def' → logprob: -11.531661987304688
    9. '(init' → logprob: -11.531661987304688
    10. ' def' → logprob: -11.906661987304688

Token 113: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.8908587662735954e-05
    2. '_init' → logprob: -11.875019073486328
    3. ' init' → logprob: -12.125019073486328
    4. '   ' → logprob: -13.500019073486328
    5. 'int' → logprob: -14.000019073486328
    6. 'def' → logprob: -14.000019073486328
    7. '_' → logprob: -14.250019073486328
    8. 'in' → logprob: -14.500019073486328
    9. '__' → logprob: -15.000019073486328
    10. 'i' → logprob: -15.125019073486328

Token 114: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009202735964208841
    2. '(' → logprob: -7.875920295715332
    3. '(self' → logprob: -8.625920295715332
    4. '__' → logprob: -8.625920295715332
    5. '_(' → logprob: -9.250920295715332
    6. '__(
' → logprob: -9.625920295715332
    7. '__((' → logprob: -11.625920295715332
    8. ' (' → logprob: -12.000920295715332
    9. '_' → logprob: -13.250920295715332
    10. '__('' → logprob: -14.625920295715332

Token 115: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010425841173855588
    2. ' self' → logprob: -9.750103950500488
    3. ')' → logprob: -10.750103950500488
    4. 'arg' → logprob: -10.875103950500488
    5. '):
' → logprob: -13.375103950500488
    6. '(self' → logprob: -13.875103950500488
    7. ',self' → logprob: -14.125103950500488
    8. '	self' → logprob: -14.625103950500488
    9. '       ' → logprob: -15.000103950500488
    10. '
' → logprob: -15.125103950500488

Token 116: ',arg' (ID: 177047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5888903141021729
    2. ',arg' → logprob: -1.3388903141021729
    3. ',self' → logprob: -2.213890314102173
    4. ' ,' → logprob: -3.213890314102173
    5. ',value' → logprob: -5.088890075683594
    6. ',node' → logprob: -5.088890075683594
    7. 'self' → logprob: -5.588890075683594
    8. ',size' → logprob: -5.713890075683594
    9. ',param' → logprob: -6.088890075683594
    10. ',index' → logprob: -6.463890075683594

Token 117: '_node' (ID: 11390)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2434550523757935
    2. '_node' → logprob: -1.6184550523757935
    3. '_dist' → logprob: -1.9934550523757935
    4. '_to' → logprob: -3.368454933166504
    5. '_pos' → logprob: -3.368454933166504
    6. '_val' → logprob: -3.493454933166504
    7. '_v' → logprob: -3.493454933166504
    8. '_num' → logprob: -3.493454933166504
    9. '_vertex' → logprob: -3.868454933166504
    10. '_idx' → logprob: -3.868454933166504

Token 118: '_id' (ID: 1537)
  Prédit: ',arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',arg' → logprob: -0.2536059021949768
    2. ',' → logprob: -1.503605842590332
    3. ' ,' → logprob: -6.878605842590332
    4. ',int' → logprob: -7.628605842590332
    5. ',args' → logprob: -9.753605842590332
    6. ',a' → logprob: -10.753605842590332
    7. ',node' → logprob: -11.503605842590332
    8. ',num' → logprob: -11.753605842590332
    9. ',param' → logprob: -12.378605842590332
    10. ',index' → logprob: -12.378605842590332

Token 119: ',arg' (ID: 177047)
  Prédit: ',arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',arg' → logprob: -0.2524776756763458
    2. ',' → logprob: -1.5024776458740234
    3. ' ,' → logprob: -7.752477645874023
    4. ',int' → logprob: -9.252477645874023
    5. ',args' → logprob: -11.252477645874023
    6. ',param' → logprob: -14.002477645874023
    7. ',num' → logprob: -14.127477645874023
    8. ',a' → logprob: -14.252477645874023
    9. ',
' → logprob: -14.502477645874023
    10. '):' → logprob: -14.627477645874023

Token 120: '_sum' (ID: 29859)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.17691540718078613
    2. '_dist' → logprob: -1.9269154071807861
    3. '_distance' → logprob: -4.676915168762207
    4. 'dist' → logprob: -6.426915168762207
    5. 'cost' → logprob: -6.426915168762207
    6. ',' → logprob: -7.051915168762207
    7. '_prev' → logprob: -7.926915168762207
    8. '_val' → logprob: -8.176915168762207
    9. '_total' → logprob: -8.426915168762207
    10. '_time' → logprob: -8.676915168762207

Token 121: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.1634361892938614
    2. ',arg' → logprob: -2.4134361743927
    3. 'cost' → logprob: -2.9134361743927
    4. ',' → logprob: -5.913436412811279
    5. 'Cost' → logprob: -6.163436412811279
    6. '):' → logprob: -7.788436412811279
    7. ')' → logprob: -7.788436412811279
    8. ',c' → logprob: -8.163435935974121
    9. '-cost' → logprob: -8.663435935974121
    10. ')arg' → logprob: -8.788435935974121

Token 122: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0990580320358276
    2. '):' → logprob: -1.0990580320358276
    3. ',arg' → logprob: -1.0990580320358276
    4. ' ,' → logprob: -8.599058151245117
    5. ',args' → logprob: -9.849058151245117
    6. ' ):' → logprob: -9.974058151245117
    7. ')' → logprob: -10.224058151245117
    8. ',param' → logprob: -10.599058151245117
    9. '):
' → logprob: -11.099058151245117
    10. ',int' → logprob: -11.474058151245117

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030774179846048355
    2. ':' → logprob: -4.155774116516113
    3. '<|end|>' → logprob: -4.780774116516113
    4. ')' → logprob: -5.905774116516113
    5. '):' → logprob: -6.155774116516113
    6. ',' → logprob: -7.780774116516113
    7. '   ' → logprob: -7.905774116516113
    8. ' ' → logprob: -9.155774116516113
    9. '<|end|>' → logprob: -9.280774116516113
    10. '):
' → logprob: -9.405774116516113

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5841164588928223
    2. ' self' → logprob: -0.8341164588928223
    3. '       ' → logprob: -4.834116458892822
    4. '	self' → logprob: -9.084115982055664
    5. ' ' → logprob: -10.709115982055664
    6. ' ' → logprob: -10.834115982055664
    7. '	' → logprob: -11.209115982055664
    8. '        ' → logprob: -11.334115982055664
    9. '   ' → logprob: -12.334115982055664
    10. '  ' → logprob: -13.834115982055664

Token 125: '.node' (ID: 23366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22105975449085236
    2. '.node' → logprob: -1.721059799194336
    3. ' .' → logprob: -4.596059799194336
    4. ' =' → logprob: -5.346059799194336
    5. '.id' → logprob: -6.346059799194336
    6. '=' → logprob: -6.721059799194336
    7. '=node' → logprob: -7.471059799194336
    8. '._' → logprob: -7.971059799194336
    9. '.token' → logprob: -8.846059799194336
    10. '.user' → logprob: -9.096059799194336

Token 126: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0006302326801232994
    2. '_' → logprob: -7.3756303787231445
    3. ' _' → logprob: -13.375630378723145
    4. '_i' → logprob: -13.500630378723145
    5. '_ids' → logprob: -15.125630378723145
    6. 'id' → logprob: -15.750630378723145
    7. '_idx' → logprob: -17.500629425048828
    8. '<|end|>' → logprob: -17.875629425048828
    9. 'Id' → logprob: -18.000629425048828
    10. '__' → logprob: -18.000629425048828

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868734836578369
    2. ' =' → logprob: -1.136873483657837
    3. ',' → logprob: -13.261873245239258
    4. ' =
' → logprob: -14.886873245239258
    5. ' ' → logprob: -16.136873245239258
    6. '=
' → logprob: -16.261873245239258
    7. '=args' → logprob: -17.136873245239258
    8. '=int' → logprob: -17.386873245239258
    9. '=

' → logprob: -17.511873245239258
    10. ' ,' → logprob: -17.636873245239258

Token 128: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.008615872822701931
    2. 'arg' → logprob: -4.758615970611572
    3. ')arg' → logprob: -14.133615493774414
    4. '[arg' → logprob: -15.383615493774414
    5. '	arg' → logprob: -15.508615493774414
    6. ',arg' → logprob: -16.508615493774414
    7. '_arg' → logprob: -16.508615493774414
    8. '(arg' → logprob: -17.133615493774414
    9. 'argin' → logprob: -17.883615493774414
    10. ' args' → logprob: -18.008615493774414

Token 129: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.008736773394048214
    2. '_' → logprob: -4.758736610412598
    3. '_sum' → logprob: -9.633736610412598
    4. '_id' → logprob: -9.883736610412598
    5. 'node' → logprob: -12.883736610412598
    6. '_
' → logprob: -13.633736610412598
    7. '_n' → logprob: -14.008736610412598
    8. '_arg' → logprob: -15.508736610412598
    9. '__' → logprob: -15.633736610412598
    10. '_
' → logprob: -15.758736610412598

Token 130: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.015121737495064735
    2. 'id' → logprob: -4.515121936798096
    3. 'd' → logprob: -5.515121936798096
    4. '_' → logprob: -10.515121459960938
    5. '_d' → logprob: -12.140121459960938
    6. 's' → logprob: -12.890121459960938
    7. ' _' → logprob: -13.890121459960938
    8. 'ed' → logprob: -14.015121459960938
    9. '_
' → logprob: -14.140121459960938
    10. '_i' → logprob: -14.765121459960938

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00028648413717746735
    2. ' self' → logprob: -8.500286102294922
    3. '       ' → logprob: -9.500286102294922
    4. 'arg' → logprob: -11.875286102294922
    5. '   ' → logprob: -15.000286102294922
    6. '	self' → logprob: -15.250286102294922
    7. 'this' → logprob: -15.500286102294922
    8. '
' → logprob: -15.750286102294922
    9. '           ' → logprob: -16.000286102294922
    10. '(self' → logprob: -17.625286102294922

Token 134: '.sum' (ID: 35381)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2052227407693863
    2. '_sum' → logprob: -2.7052228450775146
    3. 'cost' → logprob: -2.9552228450775146
    4. '.cost' → logprob: -4.3302226066589355
    5. '.' → logprob: -4.7052226066589355
    6. '<|end|>' → logprob: -4.8302226066589355
    7. ' =' → logprob: -5.0802226066589355
    8. '_' → logprob: -5.0802226066589355
    9. '._' → logprob: -5.0802226066589355
    10. '=' → logprob: -5.5802226066589355

Token 135: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.277553620748222e-05
    2. '_' → logprob: -10.000062942504883
    3. 'cost' → logprob: -11.500062942504883
    4. '_COST' → logprob: -13.500062942504883
    5. '_c' → logprob: -13.875062942504883
    6. ' _' → logprob: -14.000062942504883
    7. '_cov' → logprob: -14.000062942504883
    8. '<|end|>' → logprob: -14.000062942504883
    9. '_total' → logprob: -14.500062942504883
    10. 'Cost' → logprob: -15.125062942504883

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313264936208725
    2. '=' → logprob: -1.3132649660110474
    3. ' ' → logprob: -12.813264846801758
    4. ' +=' → logprob: -15.938264846801758
    5. ')' → logprob: -16.063264846801758
    6. ' ' → logprob: -16.563264846801758
    7. ',' → logprob: -16.938264846801758
    8. '+' → logprob: -16.938264846801758
    9. '    ' → logprob: -17.563264846801758
    10. '   ' → logprob: -17.813264846801758

Token 137: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.6931489109992981
    2. ' arg' → logprob: -0.6931489109992981
    3. 'ar' → logprob: -15.068148612976074
    4. '	arg' → logprob: -15.068148612976074
    5. ')arg' → logprob: -15.318148612976074
    6. 'argin' → logprob: -15.318148612976074
    7. '[arg' → logprob: -15.443148612976074
    8. '(arg' → logprob: -15.443148612976074
    9. ' ' → logprob: -16.31814956665039
    10. '_arg' → logprob: -16.94314956665039

Token 138: '_sum' (ID: 29859)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.893480243277736e-05
    2. '_' → logprob: -10.500039100646973
    3. 'cost' → logprob: -11.500039100646973
    4. '_COST' → logprob: -15.250039100646973
    5. '_sum' → logprob: -15.500039100646973
    6. 'Cost' → logprob: -15.500039100646973
    7. ' cost' → logprob: -16.000038146972656
    8. '_cos' → logprob: -16.125038146972656
    9. '_
' → logprob: -16.250038146972656
    10. '_co' → logprob: -16.375038146972656

Token 139: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00019448090461082757
    2. 'cost' → logprob: -8.625194549560547
    3. '_' → logprob: -11.750194549560547
    4. '_COST' → logprob: -12.625194549560547
    5. 'Cost' → logprob: -12.875194549560547
    6. ' cost' → logprob: -15.250194549560547
    7. '<|end|>' → logprob: -15.625194549560547
    8. '_code' → logprob: -16.250194549560547
    9. '_
' → logprob: -16.500194549560547
    10. '-cost' → logprob: -16.625194549560547

Token 140: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.086326964199543
    2. '<|end|>' → logprob: -2.586327075958252
    3. '   ' → logprob: -5.836327075958252
    4. '

' → logprob: -6.461327075958252
    5. ' ' → logprob: -7.211327075958252
    6. '<|end|>' → logprob: -7.336327075958252
    7. ' 
' → logprob: -7.461327075958252
    8. '    
' → logprob: -8.336326599121094
    9. '  
' → logprob: -8.836326599121094
    10. ',' → logprob: -9.211326599121094

Token 142: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22755227982997894
    2. '   ' → logprob: -1.6025522947311401
    3. ' def' → logprob: -6.35255241394043
    4. '<|end|>' → logprob: -9.22755241394043
    5. ' ' → logprob: -9.97755241394043
    6. '    
' → logprob: -10.10255241394043
    7. '  ' → logprob: -10.22755241394043
    8. '
' → logprob: -10.35255241394043
    9. '	def' → logprob: -10.47755241394043
    10. '#' → logprob: -10.72755241394043

Token 143: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3941439390182495
    2. ' <' → logprob: -1.1441439390182495
    3. ' ' → logprob: -5.769144058227539
    4. ' lt' → logprob: -6.519144058227539
    5. '__' → logprob: -7.394144058227539
    6. '_lt' → logprob: -7.769144058227539
    7. ' def' → logprob: -8.019144058227539
    8. ' _' → logprob: -8.644144058227539
    9. 'lt' → logprob: -8.644144058227539
    10. '<' → logprob: -8.644144058227539

Token 144: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -5.512236498361744e-07
    2. 'eq' → logprob: -14.625000953674316
    3. ' lt' → logprob: -17.25
    4. 'le' → logprob: -18.375
    5. 'gt' → logprob: -18.75
    6. 'l' → logprob: -21.125
    7. '_lt' → logprob: -21.25
    8. 'init' → logprob: -21.375
    9. 'LT' → logprob: -21.75
    10. 'hash' → logprob: -22.0

Token 145: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014208992011845112
    2. '__' → logprob: -4.264208793640137
    3. '__('' → logprob: -10.764208793640137
    4. '__((' → logprob: -10.889208793640137
    5. '__(
' → logprob: -12.764208793640137
    6. '__("' → logprob: -13.514208793640137
    7. '__(*' → logprob: -14.389208793640137
    8. '___' → logprob: -14.764208793640137
    9. '(' → logprob: -14.889208793640137
    10. '_' → logprob: -16.514209747314453

Token 146: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.0484450437361374e-05
    2. ' self' → logprob: -10.125040054321289
    3. 'other' → logprob: -15.125040054321289
    4. 's' → logprob: -16.75004005432129
    5. '
' → logprob: -17.50004005432129
    6. '(self' → logprob: -18.12504005432129
    7. ',' → logprob: -18.37504005432129
    8. ' ' → logprob: -18.37504005432129
    9. '	self' → logprob: -18.37504005432129
    10. 'o' → logprob: -18.50004005432129

Token 147: ',arg' (ID: 177047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06230510026216507
    2. '__,' → logprob: -2.937305212020874
    3. ' ,' → logprob: -5.187304973602295
    4. ',self' → logprob: -7.437304973602295
    5. '__(' → logprob: -7.687304973602295
    6. '_,' → logprob: -7.937304973602295
    7. '__' → logprob: -8.562305450439453
    8. ',__' → logprob: -9.562305450439453
    9. 'self' → logprob: -9.937305450439453
    10. '<|end|>' → logprob: -10.812305450439453

Token 148: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5500205755233765
    2. '__:' → logprob: -1.1750205755233765
    3. '__(' → logprob: -2.800020694732666
    4. '__,' → logprob: -4.050020694732666
    5. '_:' → logprob: -4.175020694732666
    6. 'self' → logprob: -4.925020694732666
    7. '_' → logprob: -5.050020694732666
    8. '):' → logprob: -6.300020694732666
    9. ',' → logprob: -7.050020694732666
    10. ':' → logprob: -7.300020694732666

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7047219276428223
    2. '(self' → logprob: -1.7047219276428223
    3. ' (' → logprob: -1.8297219276428223
    4. '(' → logprob: -1.9547219276428223
    5. ' self' → logprob: -4.329721927642822
    6. 'self' → logprob: -5.329721927642822
    7. '(
' → logprob: -6.829721927642822
    8. '<|end|>' → logprob: -7.079721927642822
    9. '        ' → logprob: -7.579721927642822
    10. ' return' → logprob: -7.704721927642822

Token 150: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17448389530181885
    2. ' return' → logprob: -2.1744837760925293
    3. 'self' → logprob: -3.1744837760925293
    4. ' self' → logprob: -5.799483776092529
    5. '       ' → logprob: -6.549483776092529
    6. '   ' → logprob: -8.799484252929688
    7. '    ' → logprob: -11.799484252929688
    8. '	return' → logprob: -12.549484252929688
    9. '           ' → logprob: -13.424484252929688
    10. ' ' → logprob: -13.799484252929688

Token 151: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31327372789382935
    2. 'self' → logprob: -1.3132736682891846
    3. '(self' → logprob: -11.813273429870605
    4. '   ' → logprob: -13.813273429870605
    5. ' ' → logprob: -13.813273429870605
    6. '	self' → logprob: -14.188273429870605
    7. 'Self' → logprob: -14.813273429870605
    8. ' ' → logprob: -14.813273429870605
    9. '_self' → logprob: -14.813273429870605
    10. ' (' → logprob: -15.438273429870605

Token 152: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.001563065918162465
    2. '.' → logprob: -6.62656307220459
    3. '.s' → logprob: -8.50156307220459
    4. ' .' → logprob: -10.50156307220459
    5. '.cost' → logprob: -13.00156307220459
    6. '.arg' → logprob: -14.00156307220459
    7. '.sm' → logprob: -15.00156307220459
    8. 'sum' → logprob: -15.50156307220459
    9. '.sem' → logprob: -15.62656307220459
    10. '.ss' → logprob: -15.75156307220459

Token 153: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.2617008400848135e-05
    2. 'cost' → logprob: -10.625032424926758
    3. '_' → logprob: -12.250032424926758
    4. '_co' → logprob: -14.125032424926758
    5. '._' → logprob: -14.375032424926758
    6. '_code' → logprob: -14.625032424926758
    7. ' _' → logprob: -14.625032424926758
    8. '_COST' → logprob: -14.875032424926758
    9. '<' → logprob: -15.750032424926758
    10. '<_' → logprob: -16.125032424926758

Token 154: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759589672088623
    2. '<' → logprob: -0.8259589672088623
    3. '>' → logprob: -11.950959205627441
    4. ' >' → logprob: -12.200959205627441
    5. ' ' → logprob: -12.575959205627441
    6. '<int' → logprob: -13.700959205627441
    7. '   ' → logprob: -14.700959205627441
    8. ' <=' → logprob: -14.825959205627441
    9. 'arg' → logprob: -15.075959205627441
    10. '<=' → logprob: -15.325959205627441

Token 155: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.048598047345876694
    2. 'arg' → logprob: -3.048598051071167
    3. ')arg' → logprob: -12.298598289489746
    4. '	arg' → logprob: -12.423598289489746
    5. '(arg' → logprob: -14.298598289489746
    6. '[arg' → logprob: -14.423598289489746
    7. ',arg' → logprob: -15.548598289489746
    8. 'argin' → logprob: -15.798598289489746
    9. ' ' → logprob: -16.04859733581543
    10. ' ' → logprob: -16.04859733581543

Token 156: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.005594918038696051
    2. '.' → logprob: -5.255594730377197
    3. '.cost' → logprob: -8.005595207214355
    4. 'sum' → logprob: -11.255595207214355
    5. '.s' → logprob: -12.755595207214355
    6. '.
' → logprob: -12.880595207214355
    7. ').' → logprob: -13.880595207214355
    8. ' .' → logprob: -14.005595207214355
    9. '.dot' → logprob: -14.255595207214355
    10. '".' → logprob: -14.255595207214355

Token 157: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.005932236090302467
    2. 'cost' → logprob: -5.130932331085205
    3. '_' → logprob: -13.505931854248047
    4. ' cost' → logprob: -14.630931854248047
    5. '.cost' → logprob: -14.755931854248047
    6. '_COST' → logprob: -15.005931854248047
    7. 'Cost' → logprob: -15.255931854248047
    8. '-cost' → logprob: -15.630931854248047
    9. '_code' → logprob: -15.880931854248047
    10. '._' → logprob: -16.130931854248047

Token 158: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6544268131256104
    2. '<|end|>' → logprob: -0.7794268131256104
    3. '\n' → logprob: -5.154426574707031
    4. 'newline' → logprob: -5.404426574707031
    5. '' → logprob: -6.154426574707031
    6. '#' → logprob: -6.279426574707031
    7. '

' → logprob: -6.404426574707031
    8. '<|end|>' → logprob: -6.404426574707031
    9. '.' → logprob: -7.404426574707031
    10. ')' → logprob: -7.529426574707031

Token 159: 'V' (ID: 53)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.298488587141037
    2. 'class' → logprob: -1.6734886169433594
    3. 'def' → logprob: -3.2984886169433594
    4. '

' → logprob: -3.7984886169433594
    5. '#' → logprob: -4.798488616943359
    6. 'd' → logprob: -7.923488616943359
    7. '' → logprob: -8.04848861694336
    8. '  
' → logprob: -8.42348861694336
    9. ',' → logprob: -8.54848861694336
    10. '    
' → logprob: -8.79848861694336

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7937082052230835
    2. ',' → logprob: -1.0437082052230835
    3. '=' → logprob: -1.6687082052230835
    4. 'ALUE' → logprob: -5.668708324432373
    5. 'al' → logprob: -6.793708324432373
    6. '.' → logprob: -7.918708324432373
    7. '_' → logprob: -8.043707847595215
    8. ' ,' → logprob: -8.168707847595215
    9. ' ' → logprob: -8.293707847595215
    10. ':' → logprob: -8.293707847595215

Token 161: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18056784570217133
    2. 'int' → logprob: -2.180567741394043
    3. ' ' → logprob: -3.180567741394043
    4. '0' → logprob: -4.555567741394043
    5. '10' → logprob: -9.805567741394043
    6. '[int' → logprob: -10.430567741394043
    7. ' []' → logprob: -11.180567741394043
    8. '<int' → logprob: -11.305567741394043
    9. '1' → logprob: -11.805567741394043
    10. '7' → logprob: -12.305567741394043

Token 162: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4881868064403534
    2. '(input' → logprob: -0.9881868362426758
    3. '('' → logprob: -4.363186836242676
    4. '()' → logprob: -7.488186836242676
    5. 'input' → logprob: -7.488186836242676
    6. '("' → logprob: -9.363186836242676
    7. ' (' → logprob: -10.488186836242676
    8. '(sys' → logprob: -11.488186836242676
    9. '(
' → logprob: -11.738186836242676
    10. '(raw' → logprob: -12.113186836242676

Token 163: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1269788295030594
    2. '()' → logprob: -2.126978874206543
    3. ')' → logprob: -11.001978874206543
    4. '(' → logprob: -11.001978874206543
    5. ' ())' → logprob: -11.751978874206543
    6. '().' → logprob: -12.501978874206543
    7. '()`' → logprob: -13.626978874206543
    8. '()]' → logprob: -14.251978874206543
    9. '();)' → logprob: -14.376978874206543
    10. ' ()' → logprob: -14.501978874206543

Token 164: 'min' (ID: 1493)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7299797534942627
    2. ' E' → logprob: -0.9799797534942627
    3. ' 
' → logprob: -3.1049797534942627
    4. '
' → logprob: -3.4799797534942627
    5. '<|end|>' → logprob: -3.8549797534942627
    6. ' ' → logprob: -4.479979515075684
    7. '<|end|>' → logprob: -4.979979515075684
    8. 'V' → logprob: -4.979979515075684
    9. 'K' → logprob: -5.604979515075684
    10. 'Q' → logprob: -6.354979515075684

Token 165: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.09679073095321655
    2. '_dist' → logprob: -2.5967907905578613
    3. '_distance' → logprob: -5.096790790557861
    4. '_' → logprob: -5.846790790557861
    5. '_d' → logprob: -5.846790790557861
    6. 'cost' → logprob: -6.596790790557861
    7. '_dis' → logprob: -7.346790790557861
    8. '_path' → logprob: -7.596790790557861
    9. 'Costs' → logprob: -7.846790790557861
    10. '_sum' → logprob: -7.846790790557861

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14211715757846832
    2. '=' → logprob: -2.1421172618865967
    3. 's' → logprob: -4.267117023468018
    4. 'ances' → logprob: -7.642117023468018
    5. '=[]' → logprob: -8.392117500305176
    6. '[' → logprob: -9.017117500305176
    7. 'ance' → logprob: -9.767117500305176
    8. '=[' → logprob: -9.767117500305176
    9. '[]' → logprob: -10.142117500305176
    10. ' =[' → logprob: -10.517117500305176

Token 167: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8275459408760071
    2. ' [' → logprob: -0.8275459408760071
    3. '[B' → logprob: -2.0775458812713623
    4. '[V' → logprob: -7.702546119689941
    5. '[int' → logprob: -10.702546119689941
    6. '{' → logprob: -10.827546119689941
    7. ' ' → logprob: -12.327546119689941
    8. '   ' → logprob: -12.577546119689941
    9. '[MAX' → logprob: -13.077546119689941
    10. '[Math' → logprob: -13.202546119689941

Token 168: 'BIG' (ID: 118898)
  Prédit: 'BIG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIG' → logprob: -0.0037449754308909178
    2. 'H' → logprob: -5.628745079040527
    3. ' BIG' → logprob: -8.878745079040527
    4. 'INF' → logprob: -13.503745079040527
    5. 'math' → logprob: -13.503745079040527
    6. 'float' → logprob: -14.003745079040527
    7. 'Big' → logprob: -14.378745079040527
    8. '   ' → logprob: -15.628745079040527
    9. 'B' → logprob: -15.628745079040527
    10. '-B' → logprob: -16.12874412536621

Token 169: '_NUM' (ID: 20468)
  Prédit: '_NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_NUM' → logprob: -0.00011367550177965313
    2. '_' → logprob: -9.500113487243652
    3. '_num' → logprob: -10.625113487243652
    4. ' _' → logprob: -13.125113487243652
    5. '_Num' → logprob: -13.375113487243652
    6. '_N' → logprob: -13.750113487243652
    7. '_DIST' → logprob: -13.750113487243652
    8. '##_' → logprob: -13.750113487243652
    9. '_]' → logprob: -14.000113487243652
    10. ']_' → logprob: -14.375113487243652

Token 170: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01434578001499176
    2. ']*' → logprob: -4.514345645904541
    3. ' ]' → logprob: -5.889345645904541
    4. ' for' → logprob: -7.639345645904541
    5. ']*(' → logprob: -10.2643461227417
    6. ',' → logprob: -13.5143461227417
    7. ')' → logprob: -13.6393461227417
    8. ']+' → logprob: -13.7643461227417
    9. 'for' → logprob: -13.8893461227417
    10. ' ' → logprob: -14.0143461227417

Token 171: 'V' (ID: 53)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00879928283393383
    2. 'V' → logprob: -4.758799076080322
    3. '(' → logprob: -8.63379955291748
    4. ' (' → logprob: -12.00879955291748
    5. ' V' → logprob: -15.38379955291748
    6. '(
' → logprob: -16.008798599243164
    7. '_V' → logprob: -16.383798599243164
    8. '((' → logprob: -17.258798599243164
    9. '(v' → logprob: -17.258798599243164
    10. '(N' → logprob: -17.633798599243164

Token 172: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4344698488712311
    2. '<|end|>' → logprob: -1.0594698190689087
    3. ' 
' → logprob: -6.309469699859619
    4. '<|end|>' → logprob: -7.309469699859619
    5. '  
' → logprob: -7.809469699859619
    6. ',' → logprob: -7.809469699859619
    7. '\n' → logprob: -7.934469699859619
    8. '
' → logprob: -7.934469699859619
    9. '[' → logprob: -8.309470176696777
    10. ')' → logprob: -8.309470176696777

Token 173: 'G' (ID: 38)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6164497137069702
    2. 'graph' → logprob: -1.7414497137069702
    3. 'dist' → logprob: -2.4914498329162598
    4. 'start' → logprob: -2.9914498329162598
    5. 'queue' → logprob: -3.2414498329162598
    6. 'adj' → logprob: -3.6164498329162598
    7. 'prev' → logprob: -4.61644983291626
    8. 'G' → logprob: -4.61644983291626
    9. 'Q' → logprob: -4.61644983291626
    10. 'q' → logprob: -4.99144983291626

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22621984779834747
    2. '=' → logprob: -1.601219892501831
    3. '[' → logprob: -7.351219654083252
    4. '=[]' → logprob: -9.60122013092041
    5. ',' → logprob: -10.47622013092041
    6. '[]' → logprob: -10.72622013092041
    7. '.' → logprob: -11.47622013092041
    8. ' ' → logprob: -11.85122013092041
    9. '[:]' → logprob: -12.35122013092041
    10. '=[' → logprob: -12.85122013092041

Token 175: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012690435396507382
    2. ' [[]' → logprob: -6.7512688636779785
    3. '[]' → logprob: -9.251269340515137
    4. '[len' → logprob: -14.501269340515137
    5. '[
' → logprob: -14.876269340515137
    6. '[int' → logprob: -15.001269340515137
    7. '[V' → logprob: -15.001269340515137
    8. '[n' → logprob: -15.751269340515137
    9. '[:]' → logprob: -15.876269340515137
    10. ' [' → logprob: -16.00126838684082

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09008796513080597
    2. ' for' → logprob: -2.465087890625
    3. ')' → logprob: -6.965087890625
    4. ']' → logprob: -8.965087890625
    5. '
' → logprob: -10.840087890625
    6. 'V' → logprob: -11.465087890625
    7. ',' → logprob: -11.590087890625
    8. '	for' → logprob: -11.590087890625
    9. ',V' → logprob: -11.715087890625
    10. ' ' → logprob: -12.340087890625

Token 177: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46805340051651
    2. ' range' → logprob: -1.8430533409118652
    3. ' _' → logprob: -1.8430533409118652
    4. 'range' → logprob: -3.0930533409118652
    5. ' in' → logprob: -5.343053340911865
    6. ' ' → logprob: -5.843053340911865
    7. '(range' → logprob: -6.218053340911865
    8. ' i' → logprob: -6.593053340911865
    9. '_range' → logprob: -8.468053817749023
    10. '(' → logprob: -8.968053817749023

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2622598707675934
    2. 'in' → logprob: -2.2622599601745605
    3. ' ' → logprob: -2.2622599601745605
    4. ' range' → logprob: -4.0122599601745605
    5. 'range' → logprob: -5.5122599601745605
    6. '(range' → logprob: -8.762259483337402
    7. '  ' → logprob: -10.762259483337402
    8. '(' → logprob: -10.887259483337402
    9. '<|end|>' → logprob: -11.012259483337402
    10. ' V' → logprob: -11.012259483337402

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020817816257477
    2. ' range' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.600208282470703
    4. '(range' → logprob: -14.725208282470703
    5. '	range' → logprob: -15.475208282470703
    6. 'rang' → logprob: -15.975208282470703
    7. '   ' → logprob: -16.600208282470703
    8. 'ran' → logprob: -16.725208282470703
    9. 'ra' → logprob: -17.100208282470703
    10. '  ' → logprob: -17.600208282470703

Token 180: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.500035285949707
    3. ' (' → logprob: -11.750035285949707
    4. 'V' → logprob: -15.750035285949707
    5. '(
' → logprob: -16.250036239624023
    6. ' V' → logprob: -17.750036239624023
    7. '	V' → logprob: -19.500036239624023
    8. '](' → logprob: -19.750036239624023
    9. '(B' → logprob: -19.750036239624023
    10. '((' → logprob: -19.750036239624023

Token 181: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010223194840364158
    2. ')' → logprob: -9.500102043151855
    3. ']' → logprob: -10.625102043151855
    4. ' )' → logprob: -13.625102043151855
    5. '])' → logprob: -13.750102043151855
    6. ')])' → logprob: -15.125102043151855
    7. '])]' → logprob: -15.500102043151855
    8. ')],' → logprob: -16.375102996826172
    9. ')]
' → logprob: -16.625102996826172
    10. ' ]' → logprob: -17.125102996826172

Token 182: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.991464786347933e-05
    2. ' for' → logprob: -9.875060081481934
    3. 'Q' → logprob: -13.000060081481934
    4. 's' → logprob: -13.125060081481934
    5. '<|end|>' → logprob: -13.750060081481934
    6. 'n' → logprob: -14.375060081481934
    7. 'u' → logprob: -14.750060081481934
    8. 'S' → logprob: -15.000060081481934
    9. 'N' → logprob: -15.250060081481934
    10. 't' → logprob: -15.375060081481934

Token 183: ' loop' (ID: 11453)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.006932639516890049
    2. '_' → logprob: -5.131932735443115
    3. ' ' → logprob: -7.631932735443115
    4. ' i' → logprob: -7.881932735443115
    5. ' range' → logprob: -9.006932258605957
    6. 'range' → logprob: -11.256932258605957
    7. '  ' → logprob: -12.881932258605957
    8. 'i' → logprob: -14.381932258605957
    9. ' ' → logprob: -14.631932258605957
    10. '_range' → logprob: -14.631932258605957

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051102761179208755
    2. 'in' → logprob: -3.176102876663208
    3. '_' → logprob: -5.051102638244629
    4. ' ' → logprob: -7.301102638244629
    5. '_in' → logprob: -7.801102638244629
    6. ' _' → logprob: -7.926102638244629
    7. ' i' → logprob: -8.926102638244629
    8. '_i' → logprob: -11.051102638244629
    9. '   ' → logprob: -11.176102638244629
    10. 's' → logprob: -11.551102638244629

Token 185: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931641101837158
    2. 'range' → logprob: -0.6931641101837158
    3. ' ' → logprob: -11.443163871765137
    4. '	range' → logprob: -13.193163871765137
    5. '(range' → logprob: -13.193163871765137
    6. '_' → logprob: -14.068163871765137
    7. '_range' → logprob: -14.943163871765137
    8. 'rang' → logprob: -15.443163871765137
    9. 'in' → logprob: -15.568163871765137
    10. 'r' → logprob: -15.693163871765137

Token 186: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00029875844484195113
    2. '(' → logprob: -8.125298500061035
    3. ' (' → logprob: -13.625298500061035
    4. 'V' → logprob: -14.625298500061035
    5. '(
' → logprob: -14.625298500061035
    6. '(int' → logprob: -16.00029945373535
    7. '(Q' → logprob: -16.12529945373535
    8. '(A' → logprob: -16.62529945373535
    9. '()' → logprob: -16.75029945373535
    10. '(N' → logprob: -17.12529945373535

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001296662027016282
    2. ' ):' → logprob: -7.001296520233154
    3. '):
' → logprob: -8.376296997070312
    4. ')' → logprob: -9.126296997070312
    5. '+' → logprob: -10.376296997070312
    6. '-' → logprob: -11.626296997070312
    7. ':' → logprob: -13.251296997070312
    8. ' -' → logprob: -14.251296997070312
    9. ' )' → logprob: -14.501296997070312
    10. ']:' → logprob: -14.626296997070312

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07876342535018921
    2. ' line' → logprob: -3.078763484954834
    3. ' u' → logprob: -5.078763484954834
    4. ' data' → logprob: -5.453763484954834
    5. ' s' → logprob: -5.828763484954834
    6. ' inputs' → logprob: -6.078763484954834
    7. ' parts' → logprob: -6.453763484954834
    8. 'data' → logprob: -6.453763484954834
    9. 'line' → logprob: -6.578763484954834
    10. ' input' → logprob: -6.703763484954834

Token 189: ' node' (ID: 4596)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1493693590164185
    2. 'u' → logprob: -1.8993693590164185
    3. '   ' → logprob: -2.149369239807129
    4. 'input' → logprob: -2.524369239807129
    5. 'data' → logprob: -2.524369239807129
    6. 'inputs' → logprob: -2.899369239807129
    7. 'tmp' → logprob: -3.024369239807129
    8. 'arr' → logprob: -4.024369239807129
    9. 'a' → logprob: -4.274369239807129
    10. 'num' → logprob: -4.399369239807129

Token 190: '_id' (ID: 1537)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.5143229365348816
    2. '_data' → logprob: -1.3893229961395264
    3. '_id' → logprob: -2.8893229961395264
    4. '_input' → logprob: -3.2643229961395264
    5. 's' → logprob: -4.514322757720947
    6. ',' → logprob: -5.014322757720947
    7. ',_' → logprob: -5.014322757720947
    8. '_num' → logprob: -5.639322757720947
    9. '_line' → logprob: -6.014322757720947
    10. ' =' → logprob: -6.139322757720947

Token 191: ',tmp' (ID: 195535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07585709542036057
    2. ' =' → logprob: -3.325857162475586
    3. ' ,' → logprob: -3.450857162475586
    4. '=' → logprob: -6.200857162475586
    5. ',input' → logprob: -6.450857162475586
    6. ',num' → logprob: -7.950857162475586
    7. ',node' → logprob: -8.450857162475586
    8. ',data' → logprob: -8.575857162475586
    9. ',line' → logprob: -8.700857162475586
    10. '=input' → logprob: -8.825857162475586

Token 192: '_num' (ID: 9834)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12816600501537323
    2. '=' → logprob: -3.1281659603118896
    3. ',' → logprob: -4.128166198730469
    4. '_input' → logprob: -4.378166198730469
    5. '_data' → logprob: -4.628166198730469
    6. 's' → logprob: -4.878166198730469
    7. '_line' → logprob: -5.003166198730469
    8. '_list' → logprob: -5.503166198730469
    9. '_edges' → logprob: -6.003166198730469
    10. '=input' → logprob: -6.253166198730469

Token 193: ',*' (ID: 65674)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9719573855400085
    2. ' =' → logprob: -0.9719573855400085
    3. ',' → logprob: -2.3469574451446533
    4. ',num' → logprob: -2.5969574451446533
    5. '=int' → logprob: -3.7219574451446533
    6. 's' → logprob: -4.346957206726074
    7. ',input' → logprob: -5.221957206726074
    8. '=input' → logprob: -5.221957206726074
    9. ',tmp' → logprob: -5.721957206726074
    10. ',line' → logprob: -5.846957206726074

Token 194: 'table' (ID: 4202)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.457606315612793
    2. 'rest' → logprob: -1.582606315612793
    3. 'neighbors' → logprob: -2.207606315612793
    4. 'tmp' → logprob: -2.582606315612793
    5. '_cost' → logprob: -3.082606315612793
    6. 'data' → logprob: -3.332606315612793
    7. 'list' → logprob: -3.332606315612793
    8. 'arr' → logprob: -3.707606315612793
    9. '_rest' → logprob: -3.707606315612793
    10. '_neighbors' → logprob: -3.707606315612793

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348700612783432
    2. '=' → logprob: -1.2237006425857544
    3. '_ids' → logprob: -9.848700523376465
    4. '_cost' → logprob: -9.973700523376465
    5. 's' → logprob: -10.348700523376465
    6. '_values' → logprob: -10.598700523376465
    7. '=line' → logprob: -10.848700523376465
    8. '=input' → logprob: -10.973700523376465
    9. ' ' → logprob: -11.098700523376465
    10. '_nodes' → logprob: -11.473700523376465

Token 196: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0004666577442549169
    2. 'list' → logprob: -8.250466346740723
    3. ' map' → logprob: -8.500466346740723
    4. 'input' → logprob: -13.625466346740723
    5. ' list' → logprob: -15.500466346740723
    6. '   ' → logprob: -15.625466346740723
    7. '(map' → logprob: -15.875466346740723
    8. ' ' → logprob: -16.37546730041504
    9. 'sys' → logprob: -16.50046730041504
    10. '[' → logprob: -17.12546730041504

Token 197: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.625015258789062
    3. 'map' → logprob: -12.000015258789062
    4. ' map' → logprob: -17.500015258789062
    5. '	map' → logprob: -18.125015258789062
    6. '()' → logprob: -18.625015258789062
    7. '(input' → logprob: -19.250015258789062
    8. '(
' → logprob: -19.375015258789062
    9. '
' → logprob: -19.375015258789062
    10. '.map' → logprob: -19.750015258789062

Token 198: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00021069261129014194
    2. 'int' → logprob: -9.000210762023926
    3. '(' → logprob: -9.625210762023926
    4. ' int' → logprob: -11.375210762023926
    5. ',int' → logprob: -12.500210762023926
    6. '(str' → logprob: -12.875210762023926
    7. '=int' → logprob: -14.000210762023926
    8. '<int' → logprob: -14.125210762023926
    9. '[int' → logprob: -14.375210762023926
    10. ' (' → logprob: -14.875210762023926

Token 199: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0126292509958148
    2. '(input' → logprob: -5.01262903213501
    3. ',' → logprob: -5.13762903213501
    4. 'input' → logprob: -11.762629508972168
    5. '(' → logprob: -12.637629508972168
    6. ',(' → logprob: -12.762629508972168
    7. ',int' → logprob: -12.762629508972168
    8. ' ,' → logprob: -13.012629508972168
    9. ' (' → logprob: -13.012629508972168
    10. '(sys' → logprob: -14.137629508972168

Token 200: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.250005722045898
    3. '(' → logprob: -14.875005722045898
    4. ' ().' → logprob: -15.375005722045898
    5. '.split' → logprob: -17.6250057220459
    6. '   ' → logprob: -18.3750057220459
    7. '()
' → logprob: -18.3750057220459
    8. ')' → logprob: -18.8750057220459
    9. 'split' → logprob: -19.3750057220459
    10. '()))' → logprob: -19.5000057220459

Token 201: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.110668618930504e-05
    2. 'strip' → logprob: -9.75006103515625
    3. 'rstrip' → logprob: -13.75006103515625
    4. ' split' → logprob: -13.87506103515625
    5. '(split' → logprob: -14.25006103515625
    6. 'spl' → logprob: -16.62506103515625
    7. ')' → logprob: -18.12506103515625
    8. '().' → logprob: -18.25006103515625
    9. '.split' → logprob: -19.12506103515625
    10. 's' → logprob: -19.50006103515625

Token 202: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01942700892686844
    2. '()' → logprob: -4.5194268226623535
    3. '))' → logprob: -5.0194268226623535
    4. '(' → logprob: -6.7694268226623535
    5. '())' → logprob: -8.144427299499512
    6. '()))
' → logprob: -8.269427299499512
    7. '()));' → logprob: -10.519427299499512
    8. ')' → logprob: -13.144427299499512
    9. '()))

' → logprob: -13.144427299499512
    10. '().' → logprob: -13.519427299499512

Token 203: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46643099188804626
    2. ' for' → logprob: -1.3414310216903687
    3. '   ' → logprob: -2.841430902481079
    4. '<|end|>' → logprob: -3.091430902481079
    5. '
' → logprob: -5.841431140899658
    6. ' ' → logprob: -6.091431140899658
    7. '	for' → logprob: -6.716431140899658
    8. '    
' → logprob: -8.8414306640625
    9. '    ' → logprob: -8.8414306640625
    10. ')' → logprob: -9.0914306640625

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4288576543331146
    2. ' for' → logprob: -1.053857684135437
    3. '<|end|>' → logprob: -10.303857803344727
    4. 'if' → logprob: -10.678857803344727
    5. ' if' → logprob: -11.303857803344727
    6. '#' → logprob: -11.928857803344727
    7. '   ' → logprob: -12.053857803344727
    8. 'num' → logprob: -12.053857803344727
    9. 'table' → logprob: -12.303857803344727
    10. ' ' → logprob: -12.553857803344727

Token 205: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2336718738079071
    2. ' j' → logprob: -2.2336719036102295
    3. ' to' → logprob: -3.7336719036102295
    4. ' x' → logprob: -4.35867166519165
    5. 'to' → logprob: -4.48367166519165
    6. ' idx' → logprob: -4.73367166519165
    7. ' edge' → logprob: -5.35867166519165
    8. ' cost' → logprob: -5.48367166519165
    9. ' _' → logprob: -5.48367166519165
    10. ' col' → logprob: -5.60867166519165

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009700140915811062
    2. 'in' → logprob: -4.759700298309326
    3. ' ' → logprob: -6.884700298309326
    4. '  ' → logprob: -10.634699821472168
    5. ',' → logprob: -11.259699821472168
    6. 'range' → logprob: -12.009699821472168
    7. ' range' → logprob: -12.509699821472168
    8. '	in' → logprob: -12.634699821472168
    9. ' ,' → logprob: -13.009699821472168
    10. ' _' → logprob: -13.259699821472168

Token 207: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25208723545074463
    2. ' range' → logprob: -1.5020872354507446
    3. 'table' → logprob: -8.877087593078613
    4. ' table' → logprob: -11.627087593078613
    5. ' ' → logprob: -12.002087593078613
    6. '   ' → logprob: -13.377087593078613
    7. '  ' → logprob: -14.252087593078613
    8. '	range' → logprob: -14.627087593078613
    9. 'r' → logprob: -15.502087593078613
    10. '(range' → logprob: -15.752087593078613

Token 208: '(' (ID: 7)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.39821910858154297
    2. '(len' → logprob: -1.148219108581543
    3. '(' → logprob: -4.523219108581543
    4. 'tmp' → logprob: -8.523219108581543
    5. ' (' → logprob: -9.898219108581543
    6. ' tmp' → logprob: -10.023219108581543
    7. 'len' → logprob: -10.523219108581543
    8. '(t' → logprob: -11.023219108581543
    9. '(V' → logprob: -11.273219108581543
    10. '(int' → logprob: -11.273219108581543

Token 209: '0' (ID: 15)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.009096905589103699
    2. 'len' → logprob: -4.884097099304199
    3. ' tmp' → logprob: -6.634097099304199
    4. '0' → logprob: -10.1340970993042
    5. '(tmp' → logprob: -10.1340970993042
    6. '1' → logprob: -10.7590970993042
    7. '   ' → logprob: -10.7590970993042
    8. ' len' → logprob: -10.8840970993042
    9. ' ' → logprob: -11.7590970993042
    10. '	tmp' → logprob: -12.0090970993042

Token 210: ',len' (ID: 73338)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7996756434440613
    2. 'tmp' → logprob: -1.299675703048706
    3. ' len' → logprob: -2.299675703048706
    4. ' tmp' → logprob: -2.424675703048706
    5. '1' → logprob: -2.799675703048706
    6. ' ' → logprob: -4.299675464630127
    7. 'V' → logprob: -5.799675464630127
    8. ' V' → logprob: -5.924675464630127
    9. 'loop' → logprob: -6.299675464630127
    10. 'node' → logprob: -6.299675464630127

Token 211: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -1.9981420336989686e-05
    2. ' (' → logprob: -11.250020027160645
    3. '(' → logprob: -12.375020027160645
    4. 'table' → logprob: -13.625020027160645
    5. '(tab' → logprob: -14.125020027160645
    6. ' table' → logprob: -14.250020027160645
    7. ')table' → logprob: -16.875019073486328
    8. '(
' → logprob: -17.500019073486328
    9. '(tmp' → logprob: -17.750019073486328
    10. '(node' → logprob: -17.875019073486328

Token 212: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015084984712302685
    2. '),' → logprob: -4.390085220336914
    3. ' ,' → logprob: -6.015085220336914
    4. '   ' → logprob: -9.640085220336914
    5. ' ),' → logprob: -10.515085220336914
    6. '(),' → logprob: -11.265085220336914
    7. ' ' → logprob: -12.140085220336914
    8. '1' → logprob: -12.890085220336914
    9. '  ' → logprob: -13.015085220336914
    10. '-' → logprob: -13.140085220336914

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01055287104099989
    2. ' ' → logprob: -4.760552883148193
    3. '3' → logprob: -6.260552883148193
    4. '  ' → logprob: -11.385552406311035
    5. '4' → logprob: -12.010552406311035
    6. '   ' → logprob: -12.010552406311035
    7. '1' → logprob: -13.385552406311035
    8. '5' → logprob: -14.885552406311035
    9. ' two' → logprob: -15.760552406311035
    10. '    ' → logprob: -15.948052406311035

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026891160756349564
    2. '):
' → logprob: -3.7768912315368652
    3. ':' → logprob: -5.776891231536865
    4. ',' → logprob: -8.276890754699707
    5. ' ):' → logprob: -9.026890754699707
    6. '   ' → logprob: -9.276890754699707
    7. ':
' → logprob: -10.651890754699707
    8. ')' → logprob: -10.901890754699707
    9. '):
' → logprob: -11.651890754699707
    10. ' ):
' → logprob: -12.151890754699707

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023929782037157565
    2. '   ' → logprob: -8.500239372253418
    3. ' G' → logprob: -10.875239372253418
    4. '           ' → logprob: -12.875239372253418
    5. 'G' → logprob: -13.125239372253418
    6. '	   ' → logprob: -13.250239372253418
    7. '      ' → logprob: -13.250239372253418
    8. '    ' → logprob: -13.375239372253418
    9. '<|end|>' → logprob: -13.750239372253418
    10. ' edges' → logprob: -13.875239372253418

Token 216: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.13250476121902466
    2. '   ' → logprob: -3.00750470161438
    3. 'to' → logprob: -3.25750470161438
    4. ' G' → logprob: -4.007504940032959
    5. 'edge' → logprob: -4.757504940032959
    6. 'cost' → logprob: -5.257504940032959
    7. '       ' → logprob: -6.132504940032959
    8. 'e' → logprob: -7.257504940032959
    9. ' to' → logprob: -8.0075044631958
    10. 'u' → logprob: -8.8825044631958

Token 217: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0004307884373702109
    2. '[' → logprob: -7.750430583953857
    3. '[tmp' → logprob: -16.500431060791016
    4. '[V' → logprob: -16.750431060791016
    5. '[G' → logprob: -17.125431060791016
    6. '[int' → logprob: -18.875431060791016
    7. '[module' → logprob: -18.875431060791016
    8. '[i' → logprob: -19.000431060791016
    9. '[now' → logprob: -19.500431060791016
    10. '[temp' → logprob: -19.500431060791016

Token 218: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00012106612848583609
    2. '[' → logprob: -9.250121116638184
    3. '][' → logprob: -11.875121116638184
    4. 'id' → logprob: -12.500121116638184
    5. ']' → logprob: -12.625121116638184
    6. 's' → logprob: -13.000121116638184
    7. 'loop' → logprob: -13.250121116638184
    8. '   ' → logprob: -13.375121116638184
    9. '_loop' → logprob: -14.625121116638184
    10. '_ids' → logprob: -14.625121116638184

Token 219: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6479886770248413
    2. '].' → logprob: -0.7729886770248413
    3. '.append' → logprob: -4.397988796234131
    4. '.' → logprob: -5.897988796234131
    5. ')' → logprob: -9.897988319396973
    6. '   ' → logprob: -10.147988319396973
    7. ' ].' → logprob: -10.272988319396973
    8. ']' → logprob: -10.522988319396973
    9. '}.' → logprob: -10.522988319396973
    10. ' ).' → logprob: -11.647988319396973

Token 220: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3425219549390022e-05
    2. '.append' → logprob: -11.37501335144043
    3. ' append' → logprob: -13.25001335144043
    4. 'Append' → logprob: -17.00001335144043
    5. '_append' → logprob: -17.12501335144043
    6. 'app' → logprob: -17.50001335144043
    7. '	append' → logprob: -17.75001335144043
    8. 'add' → logprob: -18.12501335144043
    9. 'appen' → logprob: -18.62501335144043
    10. '   ' → logprob: -18.87501335144043

Token 221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. 'Edge' → logprob: -12.375005722045898
    3. '(
' → logprob: -13.500005722045898
    4. '<Edge' → logprob: -14.875005722045898
    5. '(edge' → logprob: -15.750005722045898
    6. '((' → logprob: -17.7500057220459
    7. '(

' → logprob: -18.2500057220459
    8. ' (' → logprob: -18.3750057220459
    9. '(
' → logprob: -18.6250057220459
    10. ' Edge' → logprob: -18.7500057220459

Token 222: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0002067588793579489
    2. ' Edge' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.75020694732666
    4. '       ' → logprob: -15.75020694732666
    5. '  ' → logprob: -16.125205993652344
    6. ' ' → logprob: -17.000205993652344
    7. '    ' → logprob: -17.500205993652344
    8. '(' → logprob: -18.500205993652344
    9. '     ' → logprob: -18.875205993652344
    10. '<Edge' → logprob: -19.000205993652344

Token 223: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. '(
' → logprob: -13.375205039978027
    4. ')table' → logprob: -16.250205993652344
    5. ' (' → logprob: -17.000205993652344
    6. 'table' → logprob: -17.250205993652344
    7. '(tab' → logprob: -18.000205993652344
    8. '(tmp' → logprob: -18.125205993652344
    9. '(

' → logprob: -18.125205993652344
    10. '(t' → logprob: -18.375205993652344

Token 224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. ' [' → logprob: -13.000007629394531
    3. ' ' → logprob: -13.500007629394531
    4. 'i' → logprob: -13.625007629394531
    5. ' i' → logprob: -14.000007629394531
    6. '   ' → logprob: -14.250007629394531
    7. '[' → logprob: -14.500007629394531
    8. '```' → logprob: -15.875007629394531
    9. '_i' → logprob: -16.25000762939453
    10. '[
' → logprob: -17.12500762939453

Token 225: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.010625173337757587
    2. '+' → logprob: -4.63562536239624
    3. '   ' → logprob: -7.51062536239624
    4. ' ],' → logprob: -8.885624885559082
    5. ']' → logprob: -9.635624885559082
    6. ' ' → logprob: -9.885624885559082
    7. ' +' → logprob: -10.760624885559082
    8. '],
' → logprob: -11.135624885559082
    9. '  ' → logprob: -11.510624885559082
    10. '+i' → logprob: -11.635624885559082

Token 226: 'table' (ID: 4202)
  Prédit: 'table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.012515892274677753
    2. ' table' → logprob: -4.387516021728516
    3. '   ' → logprob: -13.137516021728516
    4. '	table' → logprob: -13.387516021728516
    5. ' ' → logprob: -14.387516021728516
    6. '  ' → logprob: -14.887516021728516
    7. ')table' → logprob: -14.887516021728516
    8. '       ' → logprob: -15.262516021728516
    9. '           ' → logprob: -15.262516021728516
    10. '    ' → logprob: -15.262516021728516

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.25
    3. '[
' → logprob: -17.375
    4. '(i' → logprob: -17.75
    5. '{i' → logprob: -18.25
    6. '[' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. ' [' → logprob: -19.0
    9. '+i' → logprob: -19.25
    10. '+' → logprob: -19.625

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004932218580506742
    2. ' +' → logprob: -7.625493049621582
    3. '1' → logprob: -13.000493049621582
    4. '+i' → logprob: -13.250493049621582
    5. '+
' → logprob: -14.500493049621582
    6. '   ' → logprob: -15.375493049621582
    7. 'i' → logprob: -15.875493049621582
    8. '])' → logprob: -16.8754940032959
    9. ' ' → logprob: -17.0004940032959
    10. ']+' → logprob: -17.6254940032959

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.125041007995605
    3. '0' → logprob: -14.250041007995605
    4. '2' → logprob: -15.625041007995605
    5. '   ' → logprob: -15.750041007995605
    6. ']))' → logprob: -16.000041961669922
    7. '])' → logprob: -16.000041961669922
    8. '  ' → logprob: -16.625041961669922
    9. '3' → logprob: -17.750041961669922
    10. '１' → logprob: -17.812541961669922

Token 230: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014201148878782988
    2. ')' → logprob: -6.626420021057129
    3. '))
' → logprob: -10.001420021057129
    4. ' ))' → logprob: -10.126420021057129
    5. ')))' → logprob: -12.001420021057129
    6. ' )' → logprob: -14.626420021057129
    7. '   ' → logprob: -14.876420021057129
    8. ')
' → logprob: -15.001420021057129
    9. '       ' → logprob: -15.001420021057129
    10. '));' → logprob: -15.126420021057129

Token 231: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.24772997200489044
    2. ')' → logprob: -1.997730016708374
    3. 'start' → logprob: -2.997730016708374
    4. 's' → logprob: -4.747729778289795
    5. 'S' → logprob: -5.122729778289795
    6. 'src' → logprob: -5.497729778289795
    7. 'source' → logprob: -5.622729778289795
    8. '<|end|>' → logprob: -5.747729778289795
    9. 'dist' → logprob: -6.122729778289795
    10. '(min' → logprob: -6.372729778289795

Token 232: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0001652796781854704
    2. '_' → logprob: -8.750164985656738
    3. 'dist' → logprob: -13.375164985656738
    4. '_distance' → logprob: -13.750164985656738
    5. '_d' → logprob: -14.375164985656738
    6. '_cost' → logprob: -14.375164985656738
    7. ' _' → logprob: -14.375164985656738
    8. 'Dist' → logprob: -14.500164985656738
    9. '_diff' → logprob: -14.625164985656738
    10. '__' → logprob: -15.000164985656738

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004300034139305353
    2. '[node' → logprob: -6.129300117492676
    3. '<|end|>' → logprob: -6.504300117492676
    4. '[:]' → logprob: -8.129300117492676
    5. '=' → logprob: -9.754300117492676
    6. '[min' → logprob: -10.004300117492676
    7. '[V' → logprob: -10.129300117492676
    8. '[
' → logprob: -10.629300117492676
    9. '0' → logprob: -10.879300117492676
    10. ')' → logprob: -10.879300117492676

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007075481698848307
    2. 'node' → logprob: -7.500707626342773
    3. 'V' → logprob: -9.750707626342773
    4. ' ' → logprob: -9.875707626342773
    5. '(' → logprob: -11.750707626342773
    6. ']' → logprob: -12.125707626342773
    7. '[node' → logprob: -12.250707626342773
    8. 'loop' → logprob: -12.500707626342773
    9. '[' → logprob: -12.625707626342773
    10. '(node' → logprob: -12.750707626342773

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003710894088726491
    2. ' ]' → logprob: -8.125370979309082
    3. ']=' → logprob: -9.500370979309082
    4. '=' → logprob: -16.1253719329834
    5. ')' → logprob: -18.0003719329834
    6. ' =' → logprob: -18.1253719329834
    7. ']
' → logprob: -18.8753719329834
    8. ']==' → logprob: -19.0003719329834
    9. '`]' → logprob: -19.3753719329834
    10. '[' → logprob: -19.6253719329834

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485851585865021
    2. '=' → logprob: -1.2235851287841797
    3. ' ' → logprob: -9.47358512878418
    4. ' =
' → logprob: -10.59858512878418
    5. '<|end|>' → logprob: -10.97358512878418
    6. ',' → logprob: -11.72358512878418
    7. ')' → logprob: -11.84858512878418
    8. '=
' → logprob: -13.47358512878418
    9. '0' → logprob: -14.72358512878418
    10. ' ==' → logprob: -14.84858512878418

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. '  ' → logprob: -18.250009536743164
    5. 'BIG' → logprob: -18.625009536743164
    6. '۰' → logprob: -19.125009536743164
    7. '０' → logprob: -19.625009536743164
    8. '000' → logprob: -19.750009536743164
    9. '00' → logprob: -20.000009536743164
    10. 'Big' → logprob: -20.125009536743164

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'BIG' → logprob: -16.6250057220459
    4. '   ' → logprob: -17.6250057220459
    5. '  ' → logprob: -18.6250057220459
    6. 'Big' → logprob: -18.7500057220459
    7. '０' → logprob: -19.0000057220459
    8. '000' → logprob: -19.1875057220459
    9. '۰' → logprob: -19.1875057220459
    10. '00' → logprob: -19.3750057220459

Token 239: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.132822871208191
    2. 'queue' → logprob: -1.257822871208191
    3. 'heap' → logprob: -2.0078229904174805
    4. 'pq' → logprob: -2.2578229904174805
    5. 'que' → logprob: -2.7578229904174805
    6. 'info' → logprob: -3.1328229904174805
    7. 'he' → logprob: -3.5078229904174805
    8. 'priority' → logprob: -5.2578229904174805
    9. 'hq' → logprob: -5.5078229904174805
    10. '
' → logprob: -6.0078229904174805

Token 240: 'Q' (ID: 48)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -1.2008787393569946
    2. 'que' → logprob: -1.4508787393569946
    3. 'q' → logprob: -1.8258787393569946
    4. 'hq' → logprob: -2.200878620147705
    5. 'queue' → logprob: -2.325878620147705
    6. 'heap' → logprob: -2.575878620147705
    7. 'Q' → logprob: -5.450878620147705
    8. 'h' → logprob: -5.450878620147705
    9. 'import' → logprob: -5.950878620147705
    10. 'priority' → logprob: -6.075878620147705

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038213733583688736
    2. '=' → logprob: -3.2882137298583984
    3. '=[]
' → logprob: -10.163213729858398
    4. '=[]' → logprob: -10.163213729858398
    5. '.append' → logprob: -10.538213729858398
    6. '.' → logprob: -10.538213729858398
    7. ' ' → logprob: -10.663213729858398
    8. '.push' → logprob: -12.663213729858398
    9. '=[' → logprob: -12.913213729858398
    10. '  ' → logprob: -13.163213729858398

Token 242: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17224355041980743
    2. '[]
' → logprob: -2.422243595123291
    3. '[' → logprob: -2.672243595123291
    4. 'deque' → logprob: -8.297243118286133
    5. '[(' → logprob: -9.672243118286133
    6. ' []' → logprob: -9.672243118286133
    7. '[
' → logprob: -11.672243118286133
    8. '[]

' → logprob: -11.797243118286133
    9. ' [' → logprob: -12.672243118286133
    10. ' []
' → logprob: -13.297243118286133

Token 243: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -2.7610454708337784e-05
    2. 'heap' → logprob: -11.000027656555176
    3. 'Q' → logprob: -12.125027656555176
    4. ' he' → logprob: -12.500027656555176
    5. 'Info' → logprob: -15.125027656555176
    6. '```' → logprob: -15.500027656555176
    7. 'info' → logprob: -15.875027656555176
    8. '
' → logprob: -16.12502670288086
    9. 'He' → logprob: -16.50002670288086
    10. 'h' → logprob: -16.50002670288086

Token 244: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0004309076175559312
    2. 'ap' → logprob: -7.750431060791016
    3. ' app' → logprob: -16.250431060791016
    4. 'a' → logprob: -16.750431060791016
    5. 'ап' → logprob: -18.000431060791016
    6. 'appt' → logprob: -18.375431060791016
    7. '```' → logprob: -18.875431060791016
    8. '	app' → logprob: -19.750431060791016
    9. 'appen' → logprob: -19.875431060791016
    10. 'pp' → logprob: -20.000431060791016

Token 245: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.002282764995470643
    2. 'push' → logprob: -6.252282619476318
    3. 'op' → logprob: -8.127283096313477
    4. 'p' → logprob: -10.002283096313477
    5. 'q' → logprob: -11.627283096313477
    6. 'ap' → logprob: -13.877283096313477
    7. '```' → logprob: -14.002283096313477
    8. 'app' → logprob: -14.377283096313477
    9. 'he' → logprob: -14.752283096313477
    10. 'us' → logprob: -14.752283096313477

Token 246: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '((' → logprob: -19.750001907348633
    5. ',Q' → logprob: -20.375001907348633
    6. '(q' → logprob: -20.750001907348633
    7. '(Qt' → logprob: -21.125001907348633
    8. ' Q' → logprob: -21.500001907348633
    9. '(
' → logprob: -21.500001907348633
    10. '(info' → logprob: -21.625001907348633

Token 247: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47630465030670166
    2. ',' → logprob: -0.9763046503067017
    3. ',(' → logprob: -6.226304531097412
    4. ' (' → logprob: -8.60130500793457
    5. ' ,' → logprob: -10.10130500793457
    6. '(INFO' → logprob: -11.47630500793457
    7. ')(' → logprob: -11.60130500793457
    8. ')' → logprob: -14.22630500793457
    9. '，' → logprob: -14.35130500793457
    10. ',new' → logprob: -14.97630500793457

Token 248: ' Info' (ID: 17858)
  Prédit: 'Info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Info' → logprob: -5.5577775128767826e-06
    2. ' Info' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.2500057220459
    4. 'INFO' → logprob: -18.0000057220459
    5. 'info' → logprob: -18.2500057220459
    6. ')' → logprob: -19.0000057220459
    7. '_Info' → logprob: -19.1250057220459
    8. '_info' → logprob: -19.5000057220459
    9. '  ' → logprob: -19.6250057220459
    10. ' ' → logprob: -20.2500057220459

Token 249: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. ')(' → logprob: -13.375003814697266
    3. ' (' → logprob: -14.250003814697266
    4. ')' → logprob: -14.250003814697266
    5. '<|end|>' → logprob: -15.000003814697266
    6. '((' → logprob: -15.375003814697266
    7. '0' → logprob: -16.000003814697266
    8. '(
' → logprob: -16.250003814697266
    9. '('' → logprob: -19.625003814697266
    10. '(

' → logprob: -19.875003814697266

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '(' → logprob: -17.25
    4. ')' → logprob: -18.5
    5. '<|end|>' → logprob: -20.0
    6. '[' → logprob: -20.5
    7. '   ' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '۰' → logprob: -21.5
    10. '```' → logprob: -22.0

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -14.375003814697266
    4. '0' → logprob: -17.125003814697266
    5. ',min' → logprob: -18.375003814697266
    6. '
' → logprob: -18.625003814697266
    7. '‌,' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -19.500003814697266
    9. ' ' → logprob: -19.875003814697266
    10. ')' → logprob: -20.000003814697266

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.085517113911919e-05
    2. ' ' → logprob: -10.25005054473877
    3. 'min' → logprob: -11.12505054473877
    4. '   ' → logprob: -15.12505054473877
    5. ' min' → logprob: -16.000051498413086
    6. '  ' → logprob: -16.000051498413086
    7. '    ' → logprob: -17.750051498413086
    8. '     ' → logprob: -17.875051498413086
    9. '           ' → logprob: -18.375051498413086
    10. '
' → logprob: -18.500051498413086

Token 253: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019373197574168444
    2. ')' → logprob: -6.251937389373779
    3. '))
' → logprob: -11.876936912536621
    4. ')))' → logprob: -14.876936912536621
    5. ' ))' → logprob: -15.001936912536621
    6. ')
' → logprob: -15.001936912536621
    7. '));' → logprob: -15.126936912536621
    8. '))

' → logprob: -15.376936912536621
    9. '),' → logprob: -16.501937866210938
    10. '))
' → logprob: -17.126937866210938

Token 254: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005581548321060836
    2. ' while' → logprob: -7.750558376312256
    3. ')' → logprob: -9.000557899475098
    4. 'While' → logprob: -13.250557899475098
    5. '	while' → logprob: -13.750557899475098
    6. ']' → logprob: -15.000557899475098
    7. '```' → logprob: -15.000557899475098
    8. 'wh' → logprob: -15.625557899475098
    9. '   ' → logprob: -16.000558853149414
    10. '<|end|>' → logprob: -17.125558853149414

Token 255: ' len' (ID: 4631)
  Prédit: ' Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.17002572119235992
    2. 'Q' → logprob: -1.9200257062911987
    3. ' len' → logprob: -4.670025825500488
    4. 'len' → logprob: -7.920025825500488
    5. ' ' → logprob: -12.045025825500488
    6. '	Q' → logprob: -12.420025825500488
    7. '(len' → logprob: -12.545025825500488
    8. '(Q' → logprob: -12.545025825500488
    9. '   ' → logprob: -14.795025825500488
    10. ' not' → logprob: -15.170025825500488

Token 256: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'Q' → logprob: -16.375003814697266
    4. ' (' → logprob: -18.000003814697266
    5. '(
' → logprob: -19.500003814697266
    6. '<Q' → logprob: -20.000003814697266
    7. '(Qt' → logprob: -20.250003814697266
    8. ')' → logprob: -20.750003814697266
    9. ' Q' → logprob: -20.875003814697266
    10. '	Q' → logprob: -21.500003814697266

Token 257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009012664668262005
    2. ')>' → logprob: -4.759012699127197
    3. ' )' → logprob: -7.884012699127197
    4. '>' → logprob: -11.384012222290039
    5. ')!=' → logprob: -12.759012222290039
    6. ' >' → logprob: -12.884012222290039
    7. ' ' → logprob: -13.759012222290039
    8. '）' → logprob: -14.009012222290039
    9. '):' → logprob: -14.384012222290039
    10. ')>
' → logprob: -15.009012222290039

Token 258: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04322412237524986
    2. ' >' → logprob: -3.1682240962982178
    3. '()>' → logprob: -9.043224334716797
    4. ')>' → logprob: -10.668224334716797
    5. '＞' → logprob: -10.793224334716797
    6. '&gt' → logprob: -10.918224334716797
    7. ':' → logprob: -10.918224334716797
    8. '!=' → logprob: -11.918224334716797
    9. '">' → logprob: -12.543224334716797
    10. ')' → logprob: -12.793224334716797

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -18.375261306762695
    4. '```' → logprob: -18.375261306762695
    5. '   ' → logprob: -18.500261306762695
    6. '۰' → logprob: -18.875261306762695
    7. ' ' → logprob: -19.187761306762695
    8. '０' → logprob: -19.500261306762695
    9. ')' → logprob: -19.687761306762695
    10. '
' → logprob: -19.875261306762695

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '
' → logprob: -17.250123977661133
    4. '   ' → logprob: -17.750123977661133
    5. '  ' → logprob: -17.875123977661133
    6. '```' → logprob: -18.000123977661133
    7. ')' → logprob: -18.375123977661133
    8. '۰' → logprob: -19.000123977661133
    9. '

' → logprob: -19.125123977661133
    10. '=' → logprob: -19.437623977661133

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.1093578804284334e-05
    2. ':
' → logprob: -10.000051498413086
    3. '):' → logprob: -12.750051498413086
    4. ' :' → logprob: -13.625051498413086
    5. ',' → logprob: -14.375051498413086
    6. '   ' → logprob: -15.500051498413086
    7. ':

' → logprob: -15.750051498413086
    8. ')' → logprob: -16.000051498413086
    9. '{' → logprob: -16.625051498413086
    10. ':**' → logprob: -16.750051498413086

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577991247177124
    2. 'info' → logprob: -1.577991247177124
    3. ' info' → logprob: -2.077991247177124
    4. ' current' → logprob: -3.202991247177124
    5. 'current' → logprob: -3.827991247177124
    6. ' cur' → logprob: -4.327991485595703
    7. 'cur' → logprob: -4.702991485595703
    8. ' u' → logprob: -5.077991485595703
    9. 'v' → logprob: -6.077991485595703
    10. '    
' → logprob: -6.327991485595703

Token 263: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' (adapté à ' info') → logprob: -1.2492595911026
    2. 'current' → logprob: -1.2492595911026
    3. 'cur' → logprob: -1.4992595911026
    4. 'now' → logprob: -2.2492594718933105
    5. 'u' → logprob: -3.1242594718933105
    6. 'v' → logprob: -4.1242594718933105
    7. 'p' → logprob: -4.3742594718933105
    8. 'curr' → logprob: -4.9992594718933105
    9. '   ' → logprob: -5.8742594718933105
    10. 'q' → logprob: -5.8742594718933105

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160234272480011
    2. '=' → logprob: -1.9102342128753662
    3. ' ' → logprob: -11.910234451293945
    4. '   ' → logprob: -13.785234451293945
    5. '  ' → logprob: -14.785234451293945
    6. ')' → logprob: -15.035234451293945
    7. 'info' → logprob: -15.160234451293945
    8. '＝' → logprob: -15.285234451293945
    9. ')=' → logprob: -15.535234451293945
    10. ' =
' → logprob: -15.785234451293945

Token 265: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.012511883862316608
    2. ' he' → logprob: -4.387511730194092
    3. 'heap' → logprob: -13.76251220703125
    4. 'Q' → logprob: -14.01251220703125
    5. ' Q' → logprob: -15.76251220703125
    6. ' ' → logprob: -16.13751220703125
    7. '   ' → logprob: -16.38751220703125
    8. '```' → logprob: -17.76251220703125
    9. 'heme' → logprob: -18.01251220703125
    10. '  ' → logprob: -18.01251220703125

Token 266: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.11909046769142151
    2. 'pop' → logprob: -2.6190905570983887
    3. 'ap' → logprob: -3.7440905570983887
    4. 'op' → logprob: -4.494090557098389
    5. 'q' → logprob: -6.994090557098389
    6. 'pp' → logprob: -7.119090557098389
    7. 'p' → logprob: -7.244090557098389
    8. 'Q' → logprob: -7.869090557098389
    9. 'he' → logprob: -8.11909008026123
    10. '   ' → logprob: -8.24409008026123

Token 267: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -6.051066520740278e-05
    2. 'pop' → logprob: -9.750060081481934
    3. 'p' → logprob: -13.750060081481934
    4. 'оп' → logprob: -15.000060081481934
    5. '   ' → logprob: -15.625060081481934
    6. '```' → logprob: -15.875060081481934
    7. 'o' → logprob: -16.12506103515625
    8. '	op' → logprob: -16.50006103515625
    9. 'opf' → logprob: -16.50006103515625
    10. '[' → logprob: -16.87506103515625

Token 268: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'Q' → logprob: -16.75
    4. ',Q' → logprob: -17.125
    5. ')' → logprob: -18.5
    6. ' Q' → logprob: -19.625
    7. ' (' → logprob: -19.75
    8. '(Qt' → logprob: -19.875
    9. '	Q' → logprob: -20.375
    10. '<Q' → logprob: -20.5

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005272772628813982
    2. ')
' → logprob: -5.25527286529541
    3. ' )' → logprob: -10.38027286529541
    4. ')

' → logprob: -12.50527286529541
    5. ' )
' → logprob: -13.38027286529541
    6. '   ' → logprob: -13.50527286529541
    7. ')
' → logprob: -13.75527286529541
    8. ')`' → logprob: -16.005271911621094
    9. ')#' → logprob: -16.505271911621094
    10. ' ' → logprob: -17.130271911621094

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0357147641479969
    2. '    
' → logprob: -4.285714626312256
    3. ' if' → logprob: -4.285714626312256
    4. 'if' → logprob: -5.910714626312256
    5. ' 
' → logprob: -6.160714626312256
    6. '
' → logprob: -6.660714626312256
    7. '   
' → logprob: -8.035715103149414
    8. '    ' → logprob: -8.160715103149414
    9. '+' → logprob: -8.785715103149414
    10. '     
' → logprob: -8.785715103149414

Token 271: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03177991881966591
    2. 'node' → logprob: -4.156779766082764
    3. ' if' → logprob: -4.906779766082764
    4. 'current' → logprob: -5.781779766082764
    5. 'u' → logprob: -6.031779766082764
    6. 'cur' → logprob: -6.906779766082764
    7. '   ' → logprob: -7.156779766082764
    8. 'v' → logprob: -7.406779766082764
    9. 'curr' → logprob: -8.781780242919922
    10. '    
' → logprob: -9.156780242919922

Token 272: ' info' (ID: 5377)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5764116048812866
    2. ' min' → logprob: -0.8264116048812866
    3. '   ' → logprob: -7.701411724090576
    4. 'info' → logprob: -12.326411247253418
    5. ' info' → logprob: -12.451411247253418
    6. '  ' → logprob: -12.576411247253418
    7. '	min' → logprob: -12.826411247253418
    8. '(min' → logprob: -13.076411247253418
    9. ' ' → logprob: -13.201411247253418
    10. '    ' → logprob: -14.201411247253418

Token 273: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.005631893407553434
    2. '.cost' → logprob: -5.255631923675537
    3. '.node' → logprob: -8.505631446838379
    4. ').' → logprob: -10.005631446838379
    5. ' .' → logprob: -10.005631446838379
    6. '.' → logprob: -10.505631446838379
    7. 'sum' → logprob: -11.005631446838379
    8. '.dist' → logprob: -11.255631446838379
    9. 'cost' → logprob: -11.630631446838379
    10. '.min' → logprob: -12.005631446838379

Token 274: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0001487140398239717
    2. '_dist' → logprob: -9.00014877319336
    3. 'cost' → logprob: -10.75014877319336
    4. '_' → logprob: -12.87514877319336
    5. '>' → logprob: -14.50014877319336
    6. '_COST' → logprob: -15.37514877319336
    7. '_distance' → logprob: -16.00014877319336
    8. '>=' → logprob: -16.25014877319336
    9. 'dist' → logprob: -16.25014877319336
    10. 'Cost' → logprob: -16.37514877319336

Token 275: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1428901106119156
    2. '>' → logprob: -2.017890214920044
    3. ' >=' → logprob: -8.642889976501465
    4. '>=' → logprob: -10.517889976501465
    5. ' >
' → logprob: -12.892889976501465
    6. ' ' → logprob: -13.017889976501465
    7. ' >
' → logprob: -13.017889976501465
    8. ' !=' → logprob: -13.892889976501465
    9. ' <=' → logprob: -14.017889976501465
    10. '!=' → logprob: -14.767889976501465

Token 276: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005530327325686812
    2. ' min' → logprob: -7.500553131103516
    3. '	min' → logprob: -18.750553131103516
    4. '[min' → logprob: -19.750553131103516
    5. '=min' → logprob: -19.750553131103516
    6. '   ' → logprob: -19.875553131103516
    7. '(min' → logprob: -20.125553131103516
    8. ' ' → logprob: -21.125553131103516
    9. '
' → logprob: -21.125553131103516
    10. 'max' → logprob: -21.500553131103516

Token 277: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -8.506661833962426e-05
    2. 'dist' → logprob: -9.37508487701416
    3. '_cost' → logprob: -16.625085830688477
    4. '	dist' → logprob: -16.875085830688477
    5. 'Dist' → logprob: -17.500085830688477
    6. '_distance' → logprob: -17.500085830688477
    7. '_DIST' → logprob: -18.000085830688477
    8. '[' → logprob: -18.875085830688477
    9. '_min' → logprob: -18.875085830688477
    10. '```' → logprob: -19.000085830688477

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -13.625001907348633
    3. '[
' → logprob: -14.625001907348633
    4. 'info' → logprob: -15.250001907348633
    5. '```' → logprob: -16.500001907348633
    6. '(info' → logprob: -16.750001907348633
    7. ' info' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '\[' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.750001907348633

Token 279: 'info' (ID: 5789)
  Prédit: 'info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -2.570319702499546e-05
    2. ' info' → logprob: -10.625025749206543
    3. '[' → logprob: -14.000025749206543
    4. '   ' → logprob: -15.250025749206543
    5. '
' → logprob: -16.500024795532227
    6. '(info' → logprob: -16.500024795532227
    7. '	info' → logprob: -16.500024795532227
    8. '_info' → logprob: -17.875024795532227
    9. '  ' → logprob: -18.375024795532227
    10. ' ' → logprob: -18.500024795532227

Token 280: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.37500286102295
    3. ' .' → logprob: -14.00000286102295
    4. 'node' → logprob: -15.37500286102295
    5. '.id' → logprob: -17.000001907348633
    6. '._' → logprob: -17.250001907348633
    7. '_node' → logprob: -17.750001907348633
    8. '.user' → logprob: -17.750001907348633
    9. '_.' → logprob: -18.000001907348633
    10. '.token' → logprob: -18.000001907348633

Token 281: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.696889623621246e-06
    2. 'id' → logprob: -13.50000286102295
    3. '_info' → logprob: -14.12500286102295
    4. '_cost' → logprob: -15.00000286102295
    5. '```' → logprob: -16.750001907348633
    6. '_' → logprob: -17.375001907348633
    7. 'd' → logprob: -18.125001907348633
    8. ')' → logprob: -18.125001907348633
    9. '_ids' → logprob: -18.375001907348633
    10. 'cost' → logprob: -18.375001907348633

Token 282: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028098674956709146
    2. ']:' → logprob: -6.502810001373291
    3. '):
' → logprob: -7.127810001373291
    4. ':' → logprob: -8.127809524536133
    5. ' ):' → logprob: -8.752809524536133
    6. '   ' → logprob: -10.502809524536133
    7. ')' → logprob: -12.377809524536133
    8. ']):' → logprob: -12.502809524536133
    9. '}:' → logprob: -12.502809524536133
    10. ':
' → logprob: -13.127809524536133

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02413749136030674
    2. ' continue' → logprob: -3.774137496948242
    3. 'continue' → logprob: -7.274137496948242
    4. '	continue' → logprob: -9.149137496948242
    5. '   ' → logprob: -9.524137496948242
    6. '	' → logprob: -11.774137496948242
    7. '_continue' → logprob: -12.774137496948242
    8. ' continues' → logprob: -13.524137496948242
    9. '           ' → logprob: -13.774137496948242
    10. '\n' → logprob: -13.899137496948242

Token 284: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1370099037885666
    2. ' continue' → logprob: -2.137009859085083
    3. '       ' → logprob: -4.637010097503662
    4. '   ' → logprob: -8.762009620666504
    5. '	continue' → logprob: -9.012009620666504
    6. 'contin' → logprob: -10.137009620666504
    7. '           ' → logprob: -11.512009620666504
    8. '_continue' → logprob: -11.637009620666504
    9. 'continu' → logprob: -12.762009620666504
    10. 'cont' → logprob: -13.637009620666504

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03664111718535423
    2. '    
' → logprob: -3.4116411209106445
    3. ' for' → logprob: -6.7866411209106445
    4. '
' → logprob: -7.4116411209106445
    5. '   
' → logprob: -8.036641120910645
    6. '    ' → logprob: -8.161641120910645
    7. ' 
' → logprob: -8.161641120910645
    8. '     
' → logprob: -9.161641120910645
    9. 'for' → logprob: -9.661641120910645
    10. '  ' → logprob: -9.911641120910645

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018878642469644547
    2. '    
' → logprob: -4.01887845993042
    3. ' for' → logprob: -8.518878936767578
    4. '   
' → logprob: -8.768878936767578
    5. ' 
' → logprob: -9.268878936767578
    6. '
' → logprob: -9.393878936767578
    7. '    ' → logprob: -9.518878936767578
    8. '     
' → logprob: -10.268878936767578
    9. '  ' → logprob: -10.768878936767578
    10. 'for' → logprob: -10.893878936767578

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3308517336845398
    2. '   ' → logprob: -1.5808517932891846
    3. ' for' → logprob: -2.5808517932891846
    4. '    
' → logprob: -8.705851554870605
    5. '	for' → logprob: -11.705851554870605
    6. '    ' → logprob: -13.455851554870605
    7. '```' → logprob: -13.830851554870605
    8. '
' → logprob: -14.705851554870605
    9. '   ' → logprob: -14.955851554870605
    10. 'node' → logprob: -14.955851554870605

Token 288: ' edge' (ID: 11165)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28631502389907837
    2. 'edge' → logprob: -1.4113149642944336
    3. ' e' → logprob: -5.661314964294434
    4. ' edge' → logprob: -6.911314964294434
    5. 'next' → logprob: -8.036314964294434
    6. ' ' → logprob: -9.161314964294434
    7. '   ' → logprob: -9.911314964294434
    8. 'i' → logprob: -10.661314964294434
    9. 'v' → logprob: -10.661314964294434
    10. ' next' → logprob: -10.661314964294434

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00864376686513424
    2. 'in' → logprob: -4.758643627166748
    3. 's' → logprob: -11.133644104003906
    4. ' ' → logprob: -11.508644104003906
    5. '  ' → logprob: -14.133644104003906
    6. 'In' → logprob: -14.258644104003906
    7. '	in' → logprob: -14.383644104003906
    8. 'edge' → logprob: -14.508644104003906
    9. ' ' → logprob: -15.133644104003906
    10. ' i' → logprob: -15.258644104003906

Token 290: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.07896127551794052
    2. ' G' → logprob: -2.5789613723754883
    3. '   ' → logprob: -9.578961372375488
    4. '	G' → logprob: -13.203961372375488
    5. '(G' → logprob: -16.078960418701172
    6. '
' → logprob: -16.578960418701172
    7. ' ' → logprob: -16.578960418701172
    8. '    ' → logprob: -16.703960418701172
    9. '_G' → logprob: -17.328960418701172
    10. '  ' → logprob: -17.703960418701172

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.250000953674316
    4. 'info' → logprob: -15.625000953674316
    5. '[
' → logprob: -17.000001907348633
    6. '       ' → logprob: -17.500001907348633
    7. '[in' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[data' → logprob: -18.750001907348633
    10. '[node' → logprob: -18.875001907348633

Token 292: 'info' (ID: 5789)
  Prédit: 'info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -7.266944157890975e-05
    2. '[' → logprob: -10.125072479248047
    3. ' info' → logprob: -10.375072479248047
    4. '   ' → logprob: -13.875072479248047
    5. '(info' → logprob: -15.375072479248047
    6. '	info' → logprob: -16.625072479248047
    7. '_info' → logprob: -17.250072479248047
    8. ' ' → logprob: -18.000072479248047
    9. '.info' → logprob: -18.000072479248047
    10. '       ' → logprob: -18.125072479248047

Token 293: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -1.2233183042553719e-05
    2. 'node' → logprob: -11.625012397766113
    3. ' .' → logprob: -12.875012397766113
    4. '.' → logprob: -15.875012397766113
    5. ' node' → logprob: -16.000011444091797
    6. '_node' → logprob: -16.125011444091797
    7. '.to' → logprob: -16.875011444091797
    8. '.user' → logprob: -17.375011444091797
    9. '[node' → logprob: -17.375011444091797
    10. '	node' → logprob: -17.750011444091797

Token 294: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.005963750183582306
    2. 'id' → logprob: -5.1309638023376465
    3. 'd' → logprob: -11.505963325500488
    4. '._' → logprob: -12.505963325500488
    5. 'info' → logprob: -12.630963325500488
    6. '_.' → logprob: -12.630963325500488
    7. '   ' → logprob: -13.130963325500488
    8. '.id' → logprob: -13.505963325500488
    9. '```' → logprob: -13.505963325500488
    10. 's' → logprob: -13.880963325500488

Token 295: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0006739511154592037
    2. ']:
' → logprob: -7.375673770904541
    3. ':' → logprob: -11.2506742477417
    4. ']' → logprob: -11.2506742477417
    5. ']:
' → logprob: -11.7506742477417
    6. '):' → logprob: -11.8756742477417
    7. ' ]' → logprob: -13.1256742477417
    8. '   ' → logprob: -14.0006742477417
    9. '}:' → logprob: -14.1256742477417
    10. '>:' → logprob: -14.1256742477417

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016235416755080223
    2. ' new' → logprob: -4.7662353515625
    3. ' if' → logprob: -5.0162353515625
    4. '   ' → logprob: -7.8912353515625
    5. 'if' → logprob: -8.1412353515625
    6. 'new' → logprob: -9.1412353515625
    7. '    ' → logprob: -9.8912353515625
    8. ' next' → logprob: -10.1412353515625
    9. '      ' → logprob: -10.6412353515625
    10. '        
' → logprob: -10.7662353515625

Token 297: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18401969969272614
    2. 'next' → logprob: -2.6840198040008545
    3. 'cost' → logprob: -2.8090198040008545
    4. ' new' → logprob: -4.184019565582275
    5. 'if' (adapté à ' if') → logprob: -4.309019565582275
    6. '       ' → logprob: -5.184019565582275
    7. ' next' → logprob: -6.809019565582275
    8. ' cost' → logprob: -7.184019565582275
    9. 'n' → logprob: -7.309019565582275
    10. 'nd' → logprob: -7.559019565582275

Token 298: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10037563741207123
    2. ' min' → logprob: -2.3503756523132324
    3. 'info' → logprob: -9.600375175476074
    4. '   ' → logprob: -9.725375175476074
    5. '(min' → logprob: -11.475375175476074
    6. ' info' → logprob: -11.725375175476074
    7. ' ' → logprob: -11.725375175476074
    8. '	min' → logprob: -12.100375175476074
    9. '  ' → logprob: -12.350375175476074
    10. 'edge' → logprob: -13.350375175476074

Token 299: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.320199877838604e-07
    2. 'dist' → logprob: -15.375
    3. '	dist' → logprob: -16.75
    4. 'Dist' → logprob: -17.0
    5. '_DIST' → logprob: -17.25
    6. '_cost' → logprob: -17.375
    7. '_diff' → logprob: -18.5
    8. '_distance' → logprob: -18.625
    9. '-dist' → logprob: -18.625
    10. '[min' → logprob: -19.125

Token 300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. 'edge' → logprob: -13.00000286102295
    3. '=edge' → logprob: -15.37500286102295
    4. '[node' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.750001907348633
    7. '(edge' → logprob: -17.250001907348633
    8. '[end' → logprob: -18.375001907348633
    9. ' edge' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.750001907348633

Token 301: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.000948737608268857
    2. ' edge' → logprob: -7.000948905944824
    3. '(edge' → logprob: -11.250948905944824
    4. 'info' → logprob: -11.500948905944824
    5. '=edge' → logprob: -11.875948905944824
    6. '   ' → logprob: -12.875948905944824
    7. '.edge' → logprob: -13.875948905944824
    8. ' ' → logprob: -14.375948905944824
    9. '[' → logprob: -14.375948905944824
    10. '
' → logprob: -14.625948905944824

Token 302: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -5.288163083605468e-05
    2. '.cost' → logprob: -10.375052452087402
    3. 'to' → logprob: -11.500052452087402
    4. '.' → logprob: -12.125052452087402
    5. '.edge' → logprob: -13.250052452087402
    6. '].' → logprob: -13.500052452087402
    7. ' .' → logprob: -14.250052452087402
    8. '.from' → logprob: -14.375052452087402
    9. '.node' → logprob: -15.375052452087402
    10. ']' → logprob: -15.500052452087402

Token 303: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2265016883611679
    2. ' >' → logprob: -1.601501703262329
    3. ']' → logprob: -6.97650146484375
    4. ']>' → logprob: -9.22650146484375
    5. ' ' → logprob: -10.22650146484375
    6. '＞' → logprob: -12.60150146484375
    7. ')' → logprob: -12.72650146484375
    8. '   ' → logprob: -13.35150146484375
    9. '">' → logprob: -13.35150146484375
    10. '()>' → logprob: -13.47650146484375

Token 304: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740930497646332
    2. ' >' → logprob: -0.9740930795669556
    3. ' ' → logprob: -11.474093437194824
    4. '＞' → logprob: -13.599093437194824
    5. '   ' → logprob: -13.849093437194824
    6. '[' → logprob: -14.974093437194824
    7. '>#' → logprob: -15.099093437194824
    8. ' >
' → logprob: -15.224093437194824
    9. ' >
' → logprob: -15.349093437194824
    10. '>`' → logprob: -15.599093437194824

Token 305: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.24921776354312897
    2. ' info' → logprob: -2.1242177486419678
    3. 'min' → logprob: -2.8742177486419678
    4. ' min' → logprob: -3.1242177486419678
    5. '   ' → logprob: -7.499217987060547
    6. '	info' → logprob: -10.749217987060547
    7. ' ' → logprob: -11.249217987060547
    8. 'inf' → logprob: -11.374217987060547
    9. '    ' → logprob: -12.249217987060547
    10. '  ' → logprob: -12.624217987060547

Token 306: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -7.703443770878948e-06
    2. '.' → logprob: -12.500007629394531
    3. '.cost' → logprob: -13.375007629394531
    4. ' .' → logprob: -13.875007629394531
    5. '.s' → logprob: -14.125007629394531
    6. 'sum' → logprob: -14.625007629394531
    7. '_sum' → logprob: -16.50000762939453
    8. '.
' → logprob: -17.25000762939453
    9. '	sum' → logprob: -17.37500762939453
    10. '   ' → logprob: -18.12500762939453

Token 307: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0001628956088097766
    2. 'cost' → logprob: -9.250163078308105
    3. '.cost' → logprob: -9.625163078308105
    4. '_COST' → logprob: -15.500163078308105
    5. ' cost' → logprob: -15.750163078308105
    6. '_.' → logprob: -16.00016212463379
    7. '._' → logprob: -16.25016212463379
    8. 'Cost' → logprob: -17.00016212463379
    9. '-cost' → logprob: -17.12516212463379
    10. '.' → logprob: -17.37516212463379

Token 308: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008616108447313309
    2. '+' → logprob: -4.758615970611572
    3. ' +
' → logprob: -14.00861644744873
    4. ' plus' → logprob: -14.50861644744873
    5. ' ' → logprob: -16.133615493774414
    6. ' ' → logprob: -16.258615493774414
    7. '   ' → logprob: -16.883615493774414
    8. '＋' → logprob: -17.133615493774414
    9. '+
' → logprob: -17.383615493774414
    10. '    ' → logprob: -18.008615493774414

Token 309: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.011050177738070488
    2. ' edge' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.6360502243042
    4. '(edge' → logprob: -14.5110502243042
    5. ' ' → logprob: -15.2610502243042
    6. '=edge' → logprob: -15.7610502243042
    7. '  ' → logprob: -16.386049270629883
    8. '    ' → logprob: -17.261049270629883
    9. '       ' → logprob: -17.636049270629883
    10. 'edges' → logprob: -17.761049270629883

Token 310: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -1.4259644558478612e-05
    2. 'cost' → logprob: -11.875014305114746
    3. '.' → logprob: -12.625014305114746
    4. ' .' → logprob: -13.000014305114746
    5. '_cost' → logprob: -13.750014305114746
    6. ' cost' → logprob: -15.250014305114746
    7. '.
' → logprob: -16.75001335144043
    8. '.code' → logprob: -16.87501335144043
    9. '.cos' → logprob: -17.62501335144043
    10. '_.' → logprob: -17.87501335144043

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046320082037709653
    2. ' :' → logprob: -8.375463485717773
    3. ':
' → logprob: -9.375463485717773
    4. '+' → logprob: -9.375463485717773
    5. '+:' → logprob: -10.000463485717773
    6. '):' → logprob: -12.000463485717773
    7. ' +' → logprob: -12.125463485717773
    8. '   ' → logprob: -13.000463485717773
    9. '=' → logprob: -13.750463485717773
    10. ' :
' → logprob: -14.625463485717773

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13402365148067474
    2. ':' → logprob: -2.384023666381836
    3. ':
' → logprob: -3.509023666381836
    4. '               ' → logprob: -7.259023666381836
    5. '       ' → logprob: -7.384023666381836
    6. '=' → logprob: -7.509023666381836
    7. ' :
' → logprob: -7.759023666381836
    8. '):
' → logprob: -8.259023666381836
    9. '```' → logprob: -8.259023666381836
    10. ' =' → logprob: -9.134023666381836

Token 313: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2534395456314087
    2. 'min' (adapté à ' min') → logprob: -1.7534395456314087
    3. '               ' → logprob: -3.378439426422119
    4. '           ' → logprob: -4.128439426422119
    5. '_min' → logprob: -9.378439903259277
    6. '                   ' → logprob: -9.503439903259277
    7. '(min' → logprob: -9.878439903259277
    8. '```' → logprob: -10.128439903259277
    9. '
' → logprob: -10.253439903259277
    10. '                
' → logprob: -10.628439903259277

Token 314: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.054500666621607e-06
    2. 'dist' → logprob: -12.75000286102295
    3. '_cost' → logprob: -16.500003814697266
    4. '	dist' → logprob: -18.375003814697266
    5. '_DIST' → logprob: -19.250003814697266
    6. '.dist' → logprob: -19.500003814697266
    7. '_diff' → logprob: -19.625003814697266
    8. '_d' → logprob: -20.375003814697266
    9. 'Dist' → logprob: -20.500003814697266
    10. '-dist' → logprob: -20.875003814697266

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '[
' → logprob: -14.875000953674316
    3. '=edge' → logprob: -15.375000953674316
    4. '[event' → logprob: -15.625000953674316
    5. '```' → logprob: -16.250001907348633
    6. 'edge' → logprob: -17.125001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '[assembly' → logprob: -18.250001907348633
    9. '[end' → logprob: -18.250001907348633
    10. '[action' → logprob: -18.500001907348633

Token 316: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0017801376525312662
    2. '[' → logprob: -6.501780033111572
    3. ' edge' → logprob: -8.37678050994873
    4. '(edge' → logprob: -10.37678050994873
    5. '=edge' → logprob: -11.25178050994873
    6. 'egde' → logprob: -14.12678050994873
    7. '   ' → logprob: -14.50178050994873
    8. 'info' → logprob: -14.87678050994873
    9. 'ed' → logprob: -14.87678050994873
    10. 'e' → logprob: -15.12678050994873

Token 317: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.09312568604946136
    2. '_cost' → logprob: -3.093125581741333
    3. '.cost' → logprob: -3.218125581741333
    4. '_id' → logprob: -6.843125820159912
    5. '.node' → logprob: -6.968125820159912
    6. 'cost' → logprob: -7.593125820159912
    7. '_node' → logprob: -7.843125820159912
    8. '_to' → logprob: -8.593125343322754
    9. '.id' → logprob: -8.718125343322754
    10. '   ' → logprob: -10.093125343322754

Token 318: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. ')' → logprob: -14.779751777648926
    4. ']' → logprob: -14.904751777648926
    5. ' =
' → logprob: -16.40475082397461
    6. ' ' → logprob: -16.90475082397461
    7. '＝' → logprob: -17.15475082397461
    8. ' =)' → logprob: -18.02975082397461
    9. ']=' → logprob: -18.40475082397461
    10. '    ' → logprob: -18.40475082397461

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804149478673935
    2. '=' → logprob: -3.288041591644287
    3. '＝' → logprob: -16.788042068481445
    4. ' =
' → logprob: -17.663042068481445
    5. ' ' → logprob: -18.163042068481445
    6. '.=' → logprob: -19.913042068481445
    7. '    ' → logprob: -20.038042068481445
    8. '=

' → logprob: -20.163042068481445
    9. ' =
' → logprob: -20.538042068481445
    10. '>' → logprob: -20.663042068481445

Token 320: ' info' (ID: 5377)
  Prédit: ' info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' info' → logprob: -0.1602250337600708
    2. 'info' → logprob: -1.9102250337600708
    3. '	info' → logprob: -14.410224914550781
    4. '_info' → logprob: -16.53522491455078
    5. '(info' → logprob: -16.66022491455078
    6. ' ' → logprob: -17.03522491455078
    7. ' inf' → logprob: -17.41022491455078
    8. 'Info' → logprob: -17.53522491455078
    9. ' ' → logprob: -17.91022491455078
    10. 'inf' → logprob: -18.03522491455078

Token 321: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -9.491498531133402e-06
    2. '.cost' → logprob: -12.125009536743164
    3. 'sum' → logprob: -13.125009536743164
    4. '.' → logprob: -13.875009536743164
    5. '.s' → logprob: -14.500009536743164
    6. '_sum' → logprob: -14.750009536743164
    7. ' .' → logprob: -16.625009536743164
    8. '	sum' → logprob: -17.250009536743164
    9. '.info' → logprob: -18.125009536743164
    10. ' sum' → logprob: -18.375009536743164

Token 322: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00011021859245374799
    2. 'cost' → logprob: -9.125110626220703
    3. '_dist' → logprob: -14.625110626220703
    4. '.cost' → logprob: -14.875110626220703
    5. 'Cost' → logprob: -15.250110626220703
    6. ' cost' → logprob: -16.375110626220703
    7. '_COST' → logprob: -16.875110626220703
    8. '_info' → logprob: -16.875110626220703
    9. '_' → logprob: -17.375110626220703
    10. '._' → logprob: -17.500110626220703

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08894066512584686
    2. ' +' → logprob: -2.4639406204223633
    3. '+
' → logprob: -14.338940620422363
    4. ' ' → logprob: -15.713940620422363
    5. ' ' → logprob: -16.08894157409668
    6. ' +
' → logprob: -16.08894157409668
    7. '＋' → logprob: -16.58894157409668
    8. '
' → logprob: -16.71394157409668
    9. ' plus' → logprob: -16.96394157409668
    10. '[' → logprob: -17.33894157409668

Token 324: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -4.5491004129871726e-05
    2. ' edge' → logprob: -10.000045776367188
    3. '(edge' → logprob: -17.625045776367188
    4. '=edge' → logprob: -19.250045776367188
    5. '.edge' → logprob: -20.750045776367188
    6. '   ' → logprob: -21.125045776367188
    7. '_edge' → logprob: -21.250045776367188
    8. '
' → logprob: -21.375045776367188
    9. 'cost' → logprob: -21.500045776367188
    10. ' ' → logprob: -21.500045776367188

Token 325: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0040964470244944096
    2. 'cost' → logprob: -5.504096508026123
    3. '_cost' → logprob: -11.129096031188965
    4. ' cost' → logprob: -12.879096031188965
    5. 'Cost' → logprob: -15.379096031188965
    6. '_COST' → logprob: -16.00409698486328
    7. '-cost' → logprob: -16.12909698486328
    8. 'to' → logprob: -16.25409698486328
    9. '(cost' → logprob: -16.25409698486328
    10. '.to' → logprob: -16.62909698486328

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014839544892311096
    2. ' he' → logprob: -4.2648396492004395
    3. 'he' → logprob: -7.5148396492004395
    4. '            
' → logprob: -9.389839172363281
    5. '          ' → logprob: -11.264839172363281
    6. '
' → logprob: -12.139839172363281
    7. ',' → logprob: -12.389839172363281
    8. '   ' → logprob: -12.514839172363281
    9. '            ' → logprob: -12.889839172363281
    10. '               ' → logprob: -13.014839172363281

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050424832850694656
    2. 'he' → logprob: -3.175424814224243
    3. ' he' → logprob: -4.925425052642822
    4. ' Info' → logprob: -10.050424575805664
    5. 'Info' → logprob: -10.300424575805664
    6. '          ' → logprob: -11.050424575805664
    7. '               ' → logprob: -11.425424575805664
    8. '   ' → logprob: -12.300424575805664
    9. '
' → logprob: -12.300424575805664
    10. '            
' → logprob: -12.425424575805664

Token 328: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.018201451748609543
    2. ' he' → logprob: -4.0182013511657715
    3. '           ' → logprob: -9.89320182800293
    4. 'heap' → logprob: -14.01820182800293
    5. '               ' → logprob: -16.64320182800293
    6. '   ' → logprob: -17.64320182800293
    7. '```' → logprob: -18.26820182800293
    8. '
' → logprob: -18.39320182800293
    9. '          ' → logprob: -19.01820182800293
    10. '            
' → logprob: -19.26820182800293

Token 329: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00013524403038900346
    2. 'ap' → logprob: -9.00013542175293
    3. 'pp' → logprob: -12.00013542175293
    4. 'push' → logprob: -13.12513542175293
    5. 'p' → logprob: -13.37513542175293
    6. '```' → logprob: -13.87513542175293
    7. ' app' → logprob: -15.12513542175293
    8. 'ап' → logprob: -15.37513542175293
    9. 'aps' → logprob: -15.75013542175293
    10. 'q' → logprob: -16.12513542175293

Token 330: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.558399319241289e-05
    2. 'push' → logprob: -10.625025749206543
    3. 'op' → logprob: -14.625025749206543
    4. 'p' → logprob: -14.625025749206543
    5. 'sh' → logprob: -15.375025749206543
    6. 'up' → logprob: -17.375024795532227
    7. 'Push' → logprob: -17.625024795532227
    8. 'app' → logprob: -18.125024795532227
    9. '_push' → logprob: -18.250024795532227
    10. 'ap' → logprob: -18.375024795532227

Token 331: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'Q' → logprob: -17.625
    4. ',Q' → logprob: -19.5
    5. '(
' → logprob: -20.125
    6. ' Q' → logprob: -20.625
    7. '<Q' → logprob: -20.75
    8. '	Q' → logprob: -20.75
    9. '(U' → logprob: -20.75
    10. '(G' → logprob: -21.0

Token 332: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03824642673134804
    2. ',' → logprob: -3.2882463932037354
    3. '(Q' → logprob: -9.413246154785156
    4. '(INFO' → logprob: -10.163246154785156
    5. '(info' → logprob: -10.538246154785156
    6. ',Q' → logprob: -10.663246154785156
    7. '(
' → logprob: -10.788246154785156
    8. '(I' → logprob: -12.038246154785156
    9. ' (' → logprob: -12.913246154785156
    10. ' ,' → logprob: -13.288246154785156

Token 333: ' Info' (ID: 17858)
  Prédit: ' Info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Info' → logprob: -0.3132634460926056
    2. 'Info' → logprob: -1.3132634162902832
    3. ' info' → logprob: -13.813263893127441
    4. '_Info' → logprob: -15.813263893127441
    5. 'INFO' → logprob: -15.938263893127441
    6. 'info' → logprob: -16.063262939453125
    7. ' Infos' → logprob: -16.313262939453125
    8. '   ' → logprob: -16.813262939453125
    9. '_info' → logprob: -17.188262939453125
    10. '.Info' → logprob: -17.188262939453125

Token 334: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -3.173704271830502e-06
    2. 'edge' → logprob: -13.12500286102295
    3. '(' → logprob: -14.12500286102295
    4. '=edge' → logprob: -14.87500286102295
    5. ' edge' → logprob: -17.125003814697266
    6. '(
' → logprob: -18.625003814697266
    7. '(ed' → logprob: -19.375003814697266
    8. '(edges' → logprob: -19.375003814697266
    9. '.edge' → logprob: -20.000003814697266
    10. '(info' → logprob: -20.375003814697266

Token 335: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -9.372294698550832e-06
    2. 'to' → logprob: -12.000009536743164
    3. '.' → logprob: -12.750009536743164
    4. 'To' → logprob: -16.250009536743164
    5. '.from' → logprob: -17.375009536743164
    6. ' .' → logprob: -17.625009536743164
    7. '   ' → logprob: -17.625009536743164
    8. ',to' → logprob: -17.750009536743164
    9. '_to' → logprob: -17.875009536743164
    10. '.
' → logprob: -18.250009536743164

Token 336: ',min' (ID: 129117)
  Prédit: ',min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.31335729360580444
    2. ',' → logprob: -1.3133573532104492
    3. ' ,' → logprob: -9.43835735321045
    4. 'min' → logprob: -11.68835735321045
    5. ',
' → logprob: -13.18835735321045
    6. ' min' → logprob: -13.43835735321045
    7. ',max' → logprob: -14.06335735321045
    8. ',new' → logprob: -14.81335735321045
    9. ',m' → logprob: -14.81335735321045
    10. ',int' → logprob: -14.93835735321045

Token 337: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00011999329581158236
    2. '_cost' → logprob: -9.250120162963867
    3. 'dist' → logprob: -11.000120162963867
    4. 'cost' → logprob: -12.125120162963867
    5. 'Dist' → logprob: -13.875120162963867
    6. '-dist' → logprob: -15.375120162963867
    7. 'ist' → logprob: -16.125120162963867
    8. '_DIST' → logprob: -16.125120162963867
    9. '	dist' → logprob: -16.750120162963867
    10. '_' → logprob: -16.875120162963867

Token 338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '=edge' → logprob: -18.25
    3. '[
' → logprob: -18.625
    4. 'edge' → logprob: -19.125
    5. '```' → logprob: -20.125
    6. '(edge' → logprob: -20.875
    7. '[node' → logprob: -20.875
    8. '[event' → logprob: -20.875
    9. '   ' → logprob: -21.375
    10. '[end' → logprob: -21.5

Token 339: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.008620604872703552
    2. '[' → logprob: -4.758620738983154
    3. '=edge' → logprob: -12.883620262145996
    4. ' edge' → logprob: -13.008620262145996
    5. '(edge' → logprob: -14.133620262145996
    6. '[
' → logprob: -15.633620262145996
    7. ')' → logprob: -17.008621215820312
    8. 'ed' → logprob: -17.133621215820312
    9. '   ' → logprob: -17.258621215820312
    10. '.edge' → logprob: -17.508621215820312

Token 340: '.to' (ID: 3552)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.789919912815094
    2. '_to' → logprob: -1.5399198532104492
    3. '_cost' → logprob: -2.039919853210449
    4. '.to' → logprob: -2.289919853210449
    5. '[to' → logprob: -2.414919853210449
    6. 'cost' → logprob: -4.914919853210449
    7. '_dist' → logprob: -6.289919853210449
    8. 'dist' → logprob: -7.539919853210449
    9. 'edge' → logprob: -8.28991985321045
    10. '[' → logprob: -8.28991985321045

Token 341: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7494561672210693
    2. ']))' → logprob: -0.7494561672210693
    3. ')))' → logprob: -2.9994561672210693
    4. ')' → logprob: -5.499456405639648
    5. ']' → logprob: -7.999456405639648
    6. '}))' → logprob: -9.124456405639648
    7. ']))
' → logprob: -9.249456405639648
    8. ')])' → logprob: -9.499456405639648
    9. '']))' → logprob: -9.749456405639648
    10. '])' → logprob: -10.124456405639648

Token 342: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06240188330411911
    2. 'print' → logprob: -2.81240177154541
    3. '
' → logprob: -8.31240177154541
    4. '#' → logprob: -9.18740177154541
    5. ' for' → logprob: -10.06240177154541
    6. '<|end|>' → logprob: -10.31240177154541
    7. '#print' → logprob: -12.18740177154541
    8. '.' → logprob: -14.06240177154541
    9. ')' → logprob: -14.43740177154541
    10. '

' → logprob: -14.81240177154541

Token 343: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5717841386795044
    2. ' i' → logprob: -1.3217841386795044
    3. 'dist' → logprob: -2.071784019470215
    4. ' dist' → logprob: -3.446784019470215
    5. 'd' → logprob: -5.196784019470215
    6. ' d' → logprob: -6.571784019470215
    7. 'v' → logprob: -6.696784019470215
    8. 'node' → logprob: -7.196784019470215
    9. ' node' → logprob: -7.321784019470215
    10. ' v' → logprob: -7.696784019470215

Token 344: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12718185782432556
    2. 'in' → logprob: -2.1271817684173584
    3. ' ' → logprob: -8.627182006835938
    4. 'range' → logprob: -10.002182006835938
    5. 'n' → logprob: -11.377182006835938
    6. ',' → logprob: -11.627182006835938
    7. ' range' → logprob: -12.252182006835938
    8. '	in' → logprob: -13.377182006835938
    9. ' i' → logprob: -14.752182006835938
    10. '  ' → logprob: -14.752182006835938

Token 345: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031818747520446777
    2. ' range' → logprob: -5.7531819343566895
    3. 'min' → logprob: -12.628181457519531
    4. ' ' → logprob: -15.003181457519531
    5. '   ' → logprob: -16.12818145751953
    6. 'r' → logprob: -16.25318145751953
    7. '  ' → logprob: -16.25318145751953
    8. 'ran' → logprob: -16.75318145751953
    9. '(range' → logprob: -17.25318145751953
    10. '
' → logprob: -17.37818145751953

Token 346: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.000835120037663728
    2. '(' → logprob: -7.375834941864014
    3. '(len' → logprob: -8.500835418701172
    4. 'V' → logprob: -12.875835418701172
    5. '(
' → logprob: -13.875835418701172
    6. ' (' → logprob: -14.000835418701172
    7. 'len' → logprob: -14.750835418701172
    8. '((' → logprob: -16.250835418701172
    9. '(v' → logprob: -16.625835418701172
    10. '(i' → logprob: -17.375835418701172

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032414051238447428
    2. '):
' → logprob: -5.753241539001465
    3. ')' → logprob: -9.753241539001465
    4. ' ):' → logprob: -12.878241539001465
    5. ':' → logprob: -13.628241539001465
    6. '):
' → logprob: -14.253241539001465
    7. '}:' → logprob: -14.878241539001465
    8. '
' → logprob: -15.628241539001465
    9. ']:' → logprob: -15.878241539001465
    10. ']):' → logprob: -16.12824058532715

Token 348: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04051942005753517
    2. '   ' → logprob: -3.5405194759368896
    3. ' print' → logprob: -4.5405192375183105
    4. '```' → logprob: -10.165519714355469
    5. '	print' → logprob: -13.290519714355469
    6. 'if' → logprob: -13.665519714355469
    7. 'printf' → logprob: -14.415519714355469
    8. ' ' → logprob: -15.040519714355469
    9. '``' → logprob: -15.165519714355469
    10. '.print' → logprob: -15.290519714355469

Token 349: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011730826226994395
    2. 'if' → logprob: -6.75117301940918
    3. ' print' → logprob: -13.25117301940918
    4. '   ' → logprob: -14.12617301940918
    5. 'printf' → logprob: -16.00117301940918
    6. 'pr' → logprob: -16.75117301940918
    7. ' if' → logprob: -17.12617301940918
    8. '#print' → logprob: -18.12617301940918
    9. '```' → logprob: -18.37617301940918
    10. 'prin' → logprob: -18.62617301940918

Token 350: '("%' (ID: 9336)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.16682972013950348
    2. '(i' → logprob: -1.9168297052383423
    3. '(f' → logprob: -5.041829586029053
    4. 'min' → logprob: -10.291830062866211
    5. '("{}' → logprob: -10.291830062866211
    6. '(' → logprob: -10.541830062866211
    7. '(str' → logprob: -10.791830062866211
    8. 'i' → logprob: -12.666830062866211
    9. '(m' → logprob: -13.666830062866211
    10. 'f' → logprob: -14.291830062866211

Token 351: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002981624274980277
    2. 's' → logprob: -8.500298500061035
    3. '7' → logprob: -10.000298500061035
    4. '6' → logprob: -10.625298500061035
    5. '3' → logprob: -11.625298500061035
    6. ' d' → logprob: -11.625298500061035
    7. '5' → logprob: -12.625298500061035
    8. '-' → logprob: -13.000298500061035
    9. 'i' → logprob: -14.750298500061035
    10. '4' → logprob: -15.000298500061035

Token 352: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0953587144613266
    2. ' min' → logprob: -2.8453586101531982
    3. '(min' → logprob: -3.7203586101531982
    4. ' %(' → logprob: -5.595358848571777
    5. ' ' → logprob: -6.220358848571777
    6. '"' → logprob: -7.095358848571777
    7. '%' → logprob: -7.470358848571777
    8. ',min' → logprob: -8.095358848571777
    9. 'min' → logprob: -8.220358848571777
    10. ')' → logprob: -8.470358848571777

Token 353: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006934931734576821
    2. 's' → logprob: -8.000693321228027
    3. 'min' → logprob: -8.125693321228027
    4. '(min' → logprob: -9.750693321228027
    5. '(d' → logprob: -13.625693321228027
    6. ' min' → logprob: -14.000693321228027
    7. '-min' → logprob: -14.750693321228027
    8. '(' → logprob: -14.875693321228027
    9. ' d' → logprob: -15.375693321228027
    10. 'dist' → logprob: -16.250694274902344

Token 354: '"%(' (ID: 152579)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7300630211830139
    2. '"' → logprob: -1.2300629615783691
    3. '"%(' → logprob: -2.230062961578369
    4. '%i' → logprob: -2.605062961578369
    5. '%d' → logprob: -3.855062961578369
    6. ' %(' → logprob: -4.355062961578369
    7. '%' → logprob: -4.855062961578369
    8. '%(' → logprob: -6.105062961578369
    9. '"%' → logprob: -8.855063438415527
    10. '%s' → logprob: -8.855063438415527

Token 355: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '
' → logprob: -18.875001907348633
    5. '	i' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.375001907348633
    7. '  ' → logprob: -20.625001907348633
    8. '(i' → logprob: -20.625001907348633
    9. '
' → logprob: -21.250001907348633
    10. ',i' → logprob: -21.375001907348633

Token 356: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759681463241577
    2. ',min' → logprob: -0.8259681463241577
    3. ' ,' → logprob: -10.950967788696289
    4. 'min' → logprob: -12.075967788696289
    5. ',
' → logprob: -12.450967788696289
    6. ' min' → logprob: -14.075967788696289
    7. ',max' → logprob: -14.825967788696289
    8. ',m' → logprob: -15.825967788696289
    9. ',int' → logprob: -16.45096778869629
    10. '[min' → logprob: -16.57596778869629

Token 357: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.339278580620885e-06
    2. 'dist' → logprob: -13.000001907348633
    3. '	dist' → logprob: -17.625001907348633
    4. '-dist' → logprob: -17.875001907348633
    5. 'Dist' → logprob: -18.375001907348633
    6. '_DIST' → logprob: -19.125001907348633
    7. 'ist' → logprob: -19.250001907348633
    8. '.dist' → logprob: -19.750001907348633
    9. '(dist' → logprob: -20.375001907348633
    10. ' Dist' → logprob: -20.375001907348633

Token 358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.875000953674316
    3. '[
' → logprob: -16.625001907348633
    4. ' [' → logprob: -17.250001907348633
    5. '[V' → logprob: -18.875001907348633
    6. '[I' → logprob: -19.125001907348633
    7. ')[' → logprob: -19.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. '\[' → logprob: -20.500001907348633
    10. ')' → logprob: -20.750001907348633

Token 359: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -5.455048449221067e-05
    2. ' ))' → logprob: -10.250054359436035
    3. ')' → logprob: -11.125054359436035
    4. '))
' → logprob: -12.625054359436035
    5. ' if' → logprob: -14.125054359436035
    6. ')))' → logprob: -15.125054359436035
    7. ' ' → logprob: -17.00005531311035
    8. '));' → logprob: -17.87505531311035
    9. '()))' → logprob: -18.00005531311035
    10. '__))' → logprob: -18.12505531311035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 194
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 300
Précision stricte (1ère position): 54.34%
Précision adaptée (1ère position): 57.70%
Précision (top 10): 84.03%
================================================================================
