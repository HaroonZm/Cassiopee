================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(raw_input())
a = []
for i in range(n):
    a.append(map(int, raw_input().split()))
def prim(a):
    color = ['white' for i in range(n)]
    d = [10**9 for i in range(n)]
    p = [-1 for i in range(n)]
    d[0] = 0
    while True:
        mincost = 10**9
        for i in range(n):
            if color[i] != 'black' and d[i] < mincost:
                mincost = d[i]
                u = i
        if mincost == 10**9:
            break
        color[u] = 'black'
        for v in range(n):
            if color[v] != 'black' and a[u][v] != -1:
                if a[u][v] < d[v]:
                    d[v] = a[u][v]
                    p[v] = u
                    color[v] = 'gray'
    print sum(d)
prim(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(raw' (ID: 46707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000444850797066465
    2. ''' → logprob: -8.500444412231445
    3. '('' → logprob: -9.375444412231445
    4. '(n' → logprob: -10.000444412231445
    5. '```' → logprob: -10.375444412231445
    6. '`' → logprob: -10.750444412231445
    7. '("("' → logprob: -11.125444412231445
    8. '(
' → logprob: -11.125444412231445
    9. ')' → logprob: -11.875444412231445
    10. '()' → logprob: -12.250444412231445

Token 4: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.527193009853363
    2. '_input' → logprob: -0.902193009853363
    3. '(' → logprob: -6.277193069458008
    4. ')' → logprob: -6.527193069458008
    5. 'input' → logprob: -8.527193069458008
    6. '_in' → logprob: -8.652193069458008
    7. ' _' → logprob: -9.402193069458008
    8. '```' → logprob: -9.902193069458008
    9. ')_' → logprob: -10.027193069458008
    10. ' input' → logprob: -10.152193069458008

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09338696300983429
    2. '('' → logprob: -3.3433868885040283
    3. ')' → logprob: -3.9683868885040283
    4. '("("' → logprob: -4.093387126922607
    5. ''' → logprob: -4.718387126922607
    6. '()' → logprob: -5.343387126922607
    7. '"' → logprob: -6.593387126922607
    8. '())' → logprob: -7.718387126922607
    9. '(
' → logprob: -7.843387126922607
    10. '`' → logprob: -7.843387126922607

Token 6: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1946992427110672
    2. '(' → logprob: -3.319699287414551
    3. '+' → logprob: -3.319699287414551
    4. '\n' → logprob: -3.444699287414551
    5. '()' → logprob: -3.944699287414551
    6. '\' → logprob: -4.319699287414551
    7. ' ' → logprob: -4.569699287414551
    8. '#' → logprob: -4.569699287414551
    9. ':' → logprob: -6.194699287414551
    10. ''' → logprob: -6.444699287414551

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005736440070904791
    2. '=' → logprob: -8.625574111938477
    3. '.' → logprob: -9.500574111938477
    4. '[a' → logprob: -10.000574111938477
    5. '[i' → logprob: -10.250574111938477
    6. ' =' → logprob: -10.625574111938477
    7. '\[' → logprob: -10.625574111938477
    8. 's' → logprob: -10.750574111938477
    9. '[n' → logprob: -10.875574111938477
    10. '+' → logprob: -10.875574111938477

Token 8: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6302900314331055
    2. ' []' → logprob: -1.0052900314331055
    3. ' [' → logprob: -3.3802900314331055
    4. '[' → logprob: -3.6302900314331055
    5. 'list' → logprob: -4.1302900314331055
    6. ' list' → logprob: -5.3802900314331055
    7. '[int' → logprob: -5.5052900314331055
    8. '[n' → logprob: -5.7552900314331055
    9. 'n' → logprob: -6.0052900314331055
    10. 'raw' → logprob: -6.0052900314331055

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005852473899722099
    2. ' for' → logprob: -5.255852699279785
    3. '
' → logprob: -9.005852699279785
    4. 'n' → logprob: -9.630852699279785
    5. '<|end|>' → logprob: -9.755852699279785
    6. ')' → logprob: -9.880852699279785
    7. ' ' → logprob: -10.005852699279785
    8. '\n' → logprob: -10.255852699279785
    9. '```' → logprob: -10.255852699279785
    10. '[' → logprob: -10.380852699279785

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07731516659259796
    2. ' i' → logprob: -2.702315092086792
    3. '  ' → logprob: -4.952315330505371
    4. ' n' → logprob: -9.077315330505371
    5. ' a' → logprob: -9.577315330505371
    6. 'i' → logprob: -9.952315330505371
    7. ' ‌' → logprob: -11.077315330505371
    8. '   ' → logprob: -12.577315330505371
    9. ' I' → logprob: -12.577315330505371
    10. ' x' → logprob: -12.577315330505371

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05524083599448204
    2. ' ' → logprob: -3.6802408695220947
    3. 'in' → logprob: -3.8052408695220947
    4. 'n' → logprob: -5.305240631103516
    5. ' n' → logprob: -7.305240631103516
    6. '  ' → logprob: -7.680240631103516
    7. '	in' → logprob: -10.555240631103516
    8. '_' → logprob: -10.805240631103516
    9. 'space' → logprob: -10.930240631103516
    10. 'range' → logprob: -11.180240631103516

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7060692310333252
    2. 'range' → logprob: -0.7060692310333252
    3. ' xrange' → logprob: -4.456068992614746
    4. ' ' → logprob: -6.831068992614746
    5. '	range' → logprob: -9.831068992614746
    6. ' in' → logprob: -10.456068992614746
    7. 'x' → logprob: -10.706068992614746
    8. '  ' → logprob: -11.206068992614746
    9. '```' → logprob: -11.956068992614746
    10. 'n' → logprob: -12.081068992614746

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20147308707237244
    2. '(n' → logprob: -1.7014731168746948
    3. ' (' → logprob: -10.201473236083984
    4. '(len' → logprob: -11.451473236083984
    5. '(range' → logprob: -12.326473236083984
    6. '(i' → logprob: -13.576473236083984
    7. '()' → logprob: -13.701473236083984
    8. '(int' → logprob: -13.951473236083984
    9. '(a' → logprob: -14.451473236083984
    10. '(`' → logprob: -14.701473236083984

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007739955093711615
    2. ')' → logprob: -4.882740020751953
    3. ':' → logprob: -9.382740020751953
    4. ' ):' → logprob: -11.132740020751953
    5. '):
' → logprob: -11.132740020751953
    6. '+' → logprob: -11.882740020751953
    7. ',' → logprob: -13.382740020751953
    8. '   ' → logprob: -13.507740020751953
    9. ''):' → logprob: -13.757740020751953
    10. ')):' → logprob: -13.882740020751953

Token 15: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8349908590316772
    2. ' a' → logprob: -0.8349908590316772
    3. '   ' → logprob: -2.959990978240967
    4. '    ' → logprob: -2.959990978240967
    5. 'a' → logprob: -4.084990978240967
    6. '     
' → logprob: -5.834990978240967
    7. ' 
' → logprob: -6.084990978240967
    8. '<|end|>' → logprob: -6.209990978240967
    9. '    
' → logprob: -6.459990978240967
    10. ' code' → logprob: -7.834990978240967

Token 16: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04935856908559799
    2. 'a' (adapté à ' a') → logprob: -3.049358606338501
    3. ' line' → logprob: -8.799358367919922
    4. ' x' → logprob: -9.174358367919922
    5. '   ' → logprob: -9.174358367919922
    6. 's' → logprob: -9.299358367919922
    7. 'x' → logprob: -9.424358367919922
    8. ' s' → logprob: -9.424358367919922
    9. ' data' → logprob: -10.424358367919922
    10. '    ' → logprob: -10.924358367919922

Token 17: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38689786195755005
    2. '.' → logprob: -1.1368978023529053
    3. '.app' → logprob: -11.386898040771484
    4. '.extend' → logprob: -11.761898040771484
    5. ' .' → logprob: -12.886898040771484
    6. '.ap' → logprob: -13.136898040771484
    7. 'append' → logprob: -14.011898040771484
    8. '.Append' → logprob: -15.011898040771484
    9. '.p' → logprob: -15.261898040771484
    10. '.=' → logprob: -15.261898040771484

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4893619418144226
    2. '(raw' → logprob: -1.2393620014190674
    3. '(int' → logprob: -2.3643620014190674
    4. '(input' → logprob: -6.489361763000488
    5. '(list' → logprob: -7.114361763000488
    6. '(i' → logprob: -7.989361763000488
    7. 'raw' → logprob: -8.489361763000488
    8. '(float' → logprob: -8.739361763000488
    9. '(
' → logprob: -9.864361763000488
    10. '()' → logprob: -10.239361763000488

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00421207444742322
    2. '(lambda' → logprob: -6.004211902618408
    3. '(' → logprob: -6.379211902618408
    4. '(str' → logprob: -10.629212379455566
    5. '<int' → logprob: -12.879212379455566
    6. 'int' → logprob: -13.129212379455566
    7. '(input' → logprob: -13.254212379455566
    8. '(float' → logprob: -13.379212379455566
    9. ')' → logprob: -13.629212379455566
    10. '(raw' → logprob: -13.629212379455566

Token 20: ',' (ID: 11)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.018252724781632423
    2. '(' → logprob: -4.143252849578857
    3. '(input' → logprob: -6.268252849578857
    4. ')' → logprob: -8.6432523727417
    5. 'raw' → logprob: -9.5182523727417
    6. '(
' → logprob: -11.3932523727417
    7. ' raw' → logprob: -11.5182523727417
    8. ' (' → logprob: -12.1432523727417
    9. '<|end|>' → logprob: -12.2682523727417
    10. '())' → logprob: -12.6432523727417

Token 21: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.017172573134303093
    2. ' raw' → logprob: -4.142172336578369
    3. '(raw' → logprob: -6.892172336578369
    4. ')' → logprob: -9.767172813415527
    5. '	raw' → logprob: -10.267172813415527
    6. ' ' → logprob: -11.767172813415527
    7. 'str' → logprob: -12.642172813415527
    8. '))' → logprob: -12.767172813415527
    9. '.raw' → logprob: -12.892172813415527
    10. '_raw' → logprob: -12.892172813415527

Token 22: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004702338483184576
    2. '_' → logprob: -7.750470161437988
    3. ' _' → logprob: -10.625470161437988
    4. '_inputs' → logprob: -12.125470161437988
    5. '_output' → logprob: -12.875470161437988
    6. 'input' → logprob: -13.875470161437988
    7. ')' → logprob: -14.000470161437988
    8. '_in' → logprob: -14.250470161437988
    9. ')_' → logprob: -14.375470161437988
    10. '```' → logprob: -14.375470161437988

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5233404040336609
    2. '()' → logprob: -1.3983404636383057
    3. '())' → logprob: -2.1483404636383057
    4. '()))' → logprob: -3.1483404636383057
    5. '())))' → logprob: -8.148340225219727
    6. '()));' → logprob: -8.273340225219727
    7. '());' → logprob: -9.398340225219727
    8. '(' → logprob: -10.023340225219727
    9. '()).' → logprob: -10.523340225219727
    10. ')' → logprob: -10.898340225219727

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06209047511219978
    2. 'strip' → logprob: -2.8120903968811035
    3. 'rstrip' → logprob: -9.187090873718262
    4. ' split' → logprob: -11.187090873718262
    5. ')' → logprob: -12.437090873718262
    6. ' ' → logprob: -14.437090873718262
    7. ' strip' → logprob: -14.562090873718262
    8. '().' → logprob: -14.687090873718262
    9. '(split' → logprob: -14.687090873718262
    10. '()' → logprob: -15.062090873718262

Token 25: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2057730108499527
    2. '())' → logprob: -1.7057729959487915
    3. '()' → logprob: -5.705772876739502
    4. '))' → logprob: -7.330772876739502
    5. '()))
' → logprob: -9.08077335357666
    6. ')' → logprob: -9.08077335357666
    7. '())))' → logprob: -9.83077335357666
    8. '(' → logprob: -9.95577335357666
    9. '()));' → logprob: -11.58077335357666
    10. '()))

' → logprob: -11.70577335357666

Token 26: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19452351331710815
    2. '[' → logprob: -2.069523572921753
    3. '()' → logprob: -3.694523572921753
    4. '(' → logprob: -4.819523334503174
    5. '())' → logprob: -4.819523334503174
    6. '
' → logprob: -6.444523334503174
    7. '()[' → logprob: -6.569523334503174
    8. '[
' → logprob: -6.819523334503174
    9. '<|end|>' → logprob: -7.194523334503174
    10. '(
' → logprob: -7.569523334503174

Token 27: ' prim' (ID: 4404)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.4554839134216309
    2. ' find' → logprob: -2.080483913421631
    3. ' ' → logprob: -2.580483913421631
    4. ' max' → logprob: -2.705483913421631
    5. ' my' → logprob: -2.830483913421631
    6. ' f' → logprob: -3.080483913421631
    7. ' matrix' → logprob: -3.080483913421631
    8. ' process' → logprob: -3.080483913421631
    9. ' sum' → logprob: -3.080483913421631
    10. ' calculate' → logprob: -3.080483913421631

Token 28: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29348692297935486
    2. '(' → logprob: -1.4184869527816772
    3. ''s' → logprob: -5.918487071990967
    4. '('_' → logprob: -6.668487071990967
    5. ' _' → logprob: -6.918487071990967
    6. ')' → logprob: -6.918487071990967
    7. '_s' → logprob: -7.293487071990967
    8. '_(' → logprob: -7.418487071990967
    9. '('' → logprob: -7.543487071990967
    10. '()' → logprob: -7.668487071990967

Token 29: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11343742161989212
    2. ')' → logprob: -2.7384374141693115
    3. '):' → logprob: -3.8634374141693115
    4. ',n' → logprob: -5.363437652587891
    5. '(n' → logprob: -5.488437652587891
    6. ',a' → logprob: -5.613437652587891
    7. '[' → logprob: -5.863437652587891
    8. ' ,' → logprob: -6.488437652587891
    9. '(a' → logprob: -6.488437652587891
    10. '(' → logprob: -6.863437652587891

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2117849439382553
    2. 'n' → logprob: -2.586784839630127
    3. ' n' → logprob: -2.586784839630127
    4. ' ' → logprob: -4.211784839630127
    5. '    ' → logprob: -4.711784839630127
    6. ':' → logprob: -5.961784839630127
    7. '	n' → logprob: -6.211784839630127
    8. ' visited' → logprob: -6.336784839630127
    9. 'import' → logprob: -6.711784839630127
    10. ' :' → logprob: -6.961784839630127

Token 31: ' color' (ID: 3089)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.27668964862823486
    2. 'n' → logprob: -2.4016895294189453
    3. ' import' → logprob: -2.4016895294189453
    4. ' visited' → logprob: -3.5266895294189453
    5. 'import' → logprob: -4.651689529418945
    6. '   ' → logprob: -5.151689529418945
    7. 'visited' → logprob: -5.651689529418945
    8. ' INF' → logprob: -5.651689529418945
    9. ' V' → logprob: -6.776689529418945
    10. ' from' → logprob: -6.776689529418945

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9064649343490601
    2. '[' → logprob: -0.9064649343490601
    3. ' =' → logprob: -1.65646493434906
    4. 's' → logprob: -7.65646505355835
    5. '[]' → logprob: -8.906464576721191
    6. '[a' → logprob: -9.156464576721191
    7. ' ' → logprob: -9.406464576721191
    8. '[:]' → logprob: -9.406464576721191
    9. ']' → logprob: -9.781464576721191
    10. ')' → logprob: -9.906464576721191

Token 33: ' ['' (ID: 5140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4538925588130951
    2. '['' → logprob: -1.4538925886154175
    3. ' [' → logprob: -2.578892469406128
    4. ' ['' → logprob: -3.453892469406128
    5. '{}' → logprob: -4.203892707824707
    6. '{' → logprob: -5.703892707824707
    7. '["' → logprob: -5.953892707824707
    8. ' {}' → logprob: -6.578892707824707
    9. '   ' → logprob: -8.453892707824707
    10. ' {' → logprob: -8.578892707824707

Token 34: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.45196327567100525
    2. 'w' → logprob: -1.2019633054733276
    3. 'W' → logprob: -3.076963186264038
    4. 'White' → logprob: -5.201963424682617
    5. 'WHITE' → logprob: -5.201963424682617
    6. '0' → logprob: -5.701963424682617
    7. 'b' → logprob: -6.826963424682617
    8. ''' → logprob: -8.076963424682617
    9. ' white' → logprob: -8.701963424682617
    10. 'black' → logprob: -8.701963424682617

Token 35: ''' (ID: 6)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.03233671560883522
    2. ''' → logprob: -3.532336711883545
    3. '',' → logprob: -6.282336711883545
    4. ']' → logprob: -7.907336711883545
    5. ' ']' → logprob: -8.157337188720703
    6. '','' → logprob: -10.532337188720703
    7. '')' → logprob: -11.907337188720703
    8. '"]' → logprob: -12.032337188720703
    9. ')' → logprob: -12.407337188720703
    10. ' '' → logprob: -13.157337188720703

Token 36: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036855933722108603
    2. ',' → logprob: -6.128685474395752
    3. ' for' → logprob: -7.253685474395752
    4. '']' → logprob: -8.25368595123291
    5. ']*' → logprob: -8.37868595123291
    6. ')' → logprob: -8.87868595123291
    7. ' ]' → logprob: -9.25368595123291
    8. 'for' → logprob: -10.62868595123291
    9. ')]' → logprob: -10.75368595123291
    10. '}' → logprob: -12.37868595123291

Token 37: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7582650184631348
    2. '_' → logprob: -1.2582650184631348
    3. ' in' → logprob: -2.6332650184631348
    4. ' ' → logprob: -3.1332650184631348
    5. ' range' → logprob: -3.1332650184631348
    6. ' i' → logprob: -3.1332650184631348
    7. 'range' → logprob: -3.3832650184631348
    8. 'in' → logprob: -5.633265018463135
    9. '(range' → logprob: -6.383265018463135
    10. 'i' → logprob: -6.633265018463135

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16040590405464172
    2. 'in' → logprob: -1.9104058742523193
    3. ' ' → logprob: -9.160406112670898
    4. 'n' → logprob: -10.410406112670898
    5. '  ' → logprob: -11.910406112670898
    6. ')' → logprob: -12.285406112670898
    7. '	in' → logprob: -12.285406112670898
    8. ']' → logprob: -12.535406112670898
    9. 'In' → logprob: -12.660406112670898
    10. '(' → logprob: -12.785406112670898

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5124920606613159
    2. ' range' → logprob: -1.012492060661316
    3. 'a' → logprob: -3.5124921798706055
    4. ' a' → logprob: -5.1374921798706055
    5. ' xrange' → logprob: -6.2624921798706055
    6. ' ' → logprob: -10.262492179870605
    7. '(range' → logprob: -10.887492179870605
    8. '	range' → logprob: -11.887492179870605
    9. '   ' → logprob: -12.137492179870605
    10. '  ' → logprob: -12.262492179870605

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08884349465370178
    2. '(len' → logprob: -3.338843584060669
    3. '(' → logprob: -3.588843584060669
    4. '(a' → logprob: -4.21384334564209
    5. '(range' → logprob: -4.96384334564209
    6. ' (' → logprob: -10.46384334564209
    7. ' range' → logprob: -10.71384334564209
    8. '((' → logprob: -11.21384334564209
    9. 'range' → logprob: -11.21384334564209
    10. 'a' → logprob: -11.96384334564209

Token 41: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023476807109545916
    2. ']' → logprob: -8.500234603881836
    3. ' ]' → logprob: -11.875234603881836
    4. ')' → logprob: -12.250234603881836
    5. '')]' → logprob: -12.375234603881836
    6. ' )' → logprob: -12.500234603881836
    7. '])]' → logprob: -12.750234603881836
    8. '])' → logprob: -13.000234603881836
    9. ')]
' → logprob: -13.250234603881836
    10. '   ' → logprob: -13.875234603881836

Token 42: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7450364828109741
    2. '<|end|>' → logprob: -1.1200364828109741
    3. '   ' → logprob: -1.8700364828109741
    4. '    
' → logprob: -4.370036602020264
    5. ',' → logprob: -4.995036602020264
    6. '<|end|>' → logprob: -5.495036602020264
    7. 'def' → logprob: -5.745036602020264
    8. '[' → logprob: -5.995036602020264
    9. '  
' → logprob: -6.120036602020264
    10. ' 
' → logprob: -6.245036602020264

Token 43: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7082521915435791
    2. 'distance' → logprob: -1.833252191543579
    3. '   ' → logprob: -2.083252191543579
    4. 'parent' → logprob: -2.958252191543579
    5. 'u' → logprob: -3.208252191543579
    6. 'd' (adapté à ' d') → logprob: -3.833252191543579
    7. '    
' → logprob: -4.208251953125
    8. ' u' → logprob: -4.208251953125
    9. 'v' → logprob: -4.583251953125
    10. ' distances' → logprob: -4.833251953125

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027987074106931686
    2. '=' → logprob: -4.027987003326416
    3. 'istance' → logprob: -5.402987003326416
    4. 'ist' → logprob: -5.777987003326416
    5. '[' → logprob: -6.652987003326416
    6. ' ' → logprob: -8.402987480163574
    7. '   ' → logprob: -8.777987480163574
    8. ' =[' → logprob: -9.277987480163574
    9. '[i' → logprob: -9.902987480163574
    10. '=[' → logprob: -10.027987480163574

Token 45: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008309832774102688
    2. ' [' → logprob: -4.883309841156006
    3. '[n' → logprob: -7.633309841156006
    4. '[a' → logprob: -9.758309364318848
    5. '[len' → logprob: -10.258309364318848
    6. '[i' → logprob: -10.258309364318848
    7. '['' → logprob: -10.883309364318848
    8. '[in' → logprob: -10.883309364318848
    9. '[int' → logprob: -11.133309364318848
    10. '[-' → logprob: -11.633309364318848

Token 46: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8186574578285217
    2. '10' → logprob: -1.568657398223877
    3. '100' → logprob: -1.818657398223877
    4. ' float' → logprob: -2.568657398223877
    5. ' ' → logprob: -2.818657398223877
    6. '999' → logprob: -3.193657398223877
    7. '0' → logprob: -4.693657398223877
    8. '1' → logprob: -6.818657398223877
    9. 'int' → logprob: -8.818657875061035
    10. '   ' → logprob: -9.068657875061035

Token 47: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09748392552137375
    2. '**' → logprob: -3.0974838733673096
    3. '09' → logprob: -4.222484111785889
    4. '7' → logprob: -4.597484111785889
    5. '6' → logprob: -4.972484111785889
    6. '10' → logprob: -5.097484111785889
    7. '8' → logprob: -5.597484111785889
    8. '00' → logprob: -5.847484111785889
    9. '0' → logprob: -6.972484111785889
    10. '5' → logprob: -7.222484111785889

Token 48: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00823676586151123
    2. '10' → logprob: -5.758236885070801
    3. '7' → logprob: -5.883236885070801
    4. '8' → logprob: -6.633236885070801
    5. '6' → logprob: -7.508236885070801
    6. '15' → logprob: -8.6332368850708
    7. '18' → logprob: -9.0082368850708
    8. '12' → logprob: -9.8832368850708
    9. '11' → logprob: -11.0082368850708
    10. '5' → logprob: -11.5082368850708

Token 49: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2779463529586792
    2. ' ]' → logprob: -1.5279463529586792
    3. ' for' → logprob: -4.527946472167969
    4. ',' → logprob: -4.777946472167969
    5. ']*' → logprob: -6.027946472167969
    6. ')' → logprob: -6.902946472167969
    7. ' ' → logprob: -6.902946472167969
    8. ' ,' → logprob: -7.152946472167969
    9. ')]' → logprob: -7.777946472167969
    10. ' )' → logprob: -8.652946472167969

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0854838564991951
    2. ' ' → logprob: -3.2104837894439697
    3. '_' → logprob: -3.5854837894439697
    4. ' _' → logprob: -4.460484027862549
    5. 'i' → logprob: -6.585484027862549
    6. '<|end|>' → logprob: -8.33548355102539
    7. ' range' → logprob: -8.58548355102539
    8. 'range' → logprob: -8.71048355102539
    9. '(i' → logprob: -9.83548355102539
    10. '  ' → logprob: -9.83548355102539

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.296676903963089
    2. 'in' → logprob: -1.6716768741607666
    3. '(range' → logprob: -3.6716768741607666
    4. 'range' → logprob: -3.7966768741607666
    5. ' range' → logprob: -4.546677112579346
    6. '(' → logprob: -4.671677112579346
    7. ' (' → logprob: -8.421676635742188
    8. ')' → logprob: -8.671676635742188
    9. ' ' → logprob: -8.796676635742188
    10. ']' → logprob: -8.796676635742188

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22640018165111542
    2. 'range' → logprob: -1.6014001369476318
    3. '(range' → logprob: -7.101400375366211
    4. ' xrange' → logprob: -8.851400375366211
    5. '(' → logprob: -11.726400375366211
    6. '	range' → logprob: -12.226400375366211
    7. ' ' → logprob: -13.476400375366211
    8. ')' → logprob: -13.851400375366211
    9. '   ' → logprob: -14.226400375366211
    10. ' rang' → logprob: -14.601400375366211

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005811501177959144
    2. '(' → logprob: -7.62558126449585
    3. '(range' → logprob: -9.500580787658691
    4. 'range' → logprob: -12.125580787658691
    5. ' range' → logprob: -12.750580787658691
    6. 'n' → logprob: -12.750580787658691
    7. ' (' → logprob: -13.500580787658691
    8. '(s' → logprob: -13.625580787658691
    9. 'a' → logprob: -13.750580787658691
    10. '(a' → logprob: -14.250580787658691

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003930192324332893
    2. ']' → logprob: -8.00039291381836
    3. ')]
' → logprob: -10.37539291381836
    4. ')' → logprob: -11.62539291381836
    5. '   ' → logprob: -12.62539291381836
    6. '')]' → logprob: -12.87539291381836
    7. ' )' → logprob: -13.00039291381836
    8. ' ]' → logprob: -13.25039291381836
    9. '])]' → logprob: -13.25039291381836
    10. '])' → logprob: -13.37539291381836

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5056018829345703
    2. 'd' → logprob: -1.6306018829345703
    3. '<|end|>' → logprob: -1.7556018829345703
    4. ' d' → logprob: -4.50560188293457
    5. '
' → logprob: -5.38060188293457
    6. '	d' → logprob: -6.00560188293457
    7. '    
' → logprob: -6.13060188293457
    8. '<|end|>' → logprob: -6.38060188293457
    9. ' ' → logprob: -6.75560188293457
    10. '[' → logprob: -7.00560188293457

Token 56: ' p' (ID: 275)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31139111518859863
    2. ' d' → logprob: -1.5613911151885986
    3. '   ' → logprob: -2.9363911151885986
    4. ' ' → logprob: -6.1863908767700195
    5. ' 
' → logprob: -7.5613908767700195
    6. '[' → logprob: -7.6863908767700195
    7. '    
' → logprob: -7.8113908767700195
    8. '0' → logprob: -8.18639087677002
    9. 'color' → logprob: -8.56139087677002
    10. '  ' → logprob: -9.56139087677002

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04220021516084671
    2. '=' → logprob: -3.4172003269195557
    3. 'r' → logprob: -5.042200088500977
    4. '[' → logprob: -6.917200088500977
    5. 'rev' → logprob: -8.792200088500977
    6. ' ' → logprob: -9.042200088500977
    7. '[r' → logprob: -9.042200088500977
    8. '   ' → logprob: -9.167200088500977
    9. 'ar' → logprob: -9.167200088500977
    10. '=[]' → logprob: -9.917200088500977

Token 58: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06473474949598312
    2. '[' → logprob: -2.939734697341919
    3. ' [-' → logprob: -4.814734935760498
    4. ' [' → logprob: -6.439734935760498
    5. '[n' → logprob: -9.43973445892334
    6. '   ' → logprob: -12.06473445892334
    7. '[i' → logprob: -12.68973445892334
    8. '[len' → logprob: -13.18973445892334
    9. ' ' → logprob: -13.43973445892334
    10. '[a' → logprob: -13.68973445892334

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.750000953674316
    3. '-' → logprob: -15.250000953674316
    4. '10' → logprob: -15.375000953674316
    5. '2' → logprob: -15.750000953674316
    6. '11' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.312501907348633
    8. '100' → logprob: -18.062501907348633
    9. 'i' → logprob: -18.375001907348633
    10. '(' → logprob: -18.625001907348633

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030130764469504356
    2. 'for' → logprob: -3.5301308631896973
    3. ']' → logprob: -8.155130386352539
    4. ')' → logprob: -10.530130386352539
    5. '	for' → logprob: -10.530130386352539
    6. '   ' → logprob: -11.030130386352539
    7. ']*' → logprob: -11.780130386352539
    8. ' ' → logprob: -11.905130386352539
    9. ' ]' → logprob: -12.530130386352539
    10. ',' → logprob: -13.405130386352539

Token 61: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8034387826919556
    2. 'i' → logprob: -1.5534387826919556
    3. ' i' → logprob: -1.5534387826919556
    4. 'range' → logprob: -2.053438663482666
    5. '(range' → logprob: -7.428438663482666
    6. '(i' → logprob: -9.553439140319824
    7. '_' → logprob: -9.553439140319824
    8. 'in' → logprob: -10.178439140319824
    9. ' in' → logprob: -10.178439140319824
    10. ' ' → logprob: -11.178439140319824

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1698136031627655
    2. 'in' → logprob: -2.044813632965088
    3. 'range' → logprob: -4.169813632965088
    4. ' range' → logprob: -5.044813632965088
    5. '(range' → logprob: -5.419813632965088
    6. '(n' → logprob: -8.41981315612793
    7. ' (' → logprob: -9.54481315612793
    8. '(' → logprob: -9.54481315612793
    9. ')' → logprob: -10.41981315612793
    10. ' ' → logprob: -11.29481315612793

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2534449100494385
    2. ' range' → logprob: -1.5034449100494385
    3. '(range' → logprob: -6.503444671630859
    4. '(' → logprob: -12.00344467163086
    5. ' xrange' → logprob: -12.12844467163086
    6. '	range' → logprob: -13.87844467163086
    7. ' ' → logprob: -14.12844467163086
    8. ' (' → logprob: -14.50344467163086
    9. '   ' → logprob: -14.75344467163086
    10. 'for' → logprob: -15.00344467163086

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013786651834379882
    2. ' (' → logprob: -9.750138282775879
    3. '(' → logprob: -10.000138282775879
    4. 'n' → logprob: -10.500138282775879
    5. ')' → logprob: -12.875138282775879
    6. ' n' → logprob: -14.250138282775879
    7. '   ' → logprob: -14.500138282775879
    8. ')(' → logprob: -14.750138282775879
    9. ')n' → logprob: -14.750138282775879
    10. ')]' → logprob: -14.875138282775879

Token 65: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005753128207288682
    2. ']' → logprob: -8.250575065612793
    3. ')' → logprob: -8.875575065612793
    4. ')]
' → logprob: -9.250575065612793
    5. ')])' → logprob: -10.875575065612793
    6. '])]' → logprob: -11.000575065612793
    7. '])' → logprob: -11.125575065612793
    8. '')]' → logprob: -11.250575065612793
    9. '   ' → logprob: -11.875575065612793
    10. ')]
' → logprob: -12.500575065612793

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991530776023865
    2. '
' → logprob: -1.6241531372070312
    3. 'd' → logprob: -1.9991531372070312
    4. '    
' → logprob: -3.7491531372070312
    5. ')' → logprob: -4.874153137207031
    6. ' 
' → logprob: -4.999153137207031
    7. '  
' → logprob: -5.124153137207031
    8. ' d' → logprob: -5.374153137207031
    9. '<|end|>' → logprob: -5.374153137207031
    10. ' ' → logprob: -5.749153137207031

Token 67: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.031147480010986328
    2. ' d' → logprob: -3.7811474800109863
    3. '   ' → logprob: -4.906147480010986
    4. '
' → logprob: -8.906147003173828
    5. ' ' → logprob: -9.406147003173828
    6. '    
' → logprob: -9.656147003173828
    7. ' 
' → logprob: -10.156147003173828
    8. 'color' → logprob: -10.406147003173828
    9. '```' → logprob: -10.406147003173828
    10. ' for' → logprob: -11.156147003173828

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. ' [' → logprob: -12.125007629394531
    3. '\[' → logprob: -14.500007629394531
    4. '=' → logprob: -14.750007629394531
    5. 's' → logprob: -15.125007629394531
    6. ' =' → logprob: -15.250007629394531
    7. ' ' → logprob: -15.750007629394531
    8. '0' → logprob: -15.875007629394531
    9. '<|end|>' → logprob: -16.62500762939453
    10. '```' → logprob: -16.81250762939453

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '[' → logprob: -16.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '۰' → logprob: -17.000003814697266
    6. '1' → logprob: -18.187503814697266
    7. 's' → logprob: -18.312503814697266
    8. ')' → logprob: -18.562503814697266
    9. '  ' → logprob: -19.000003814697266
    10. '00' → logprob: -19.125003814697266

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004294926766306162
    2. ' ]' → logprob: -5.5042948722839355
    3. ']=' → logprob: -8.629295349121094
    4. '=' → logprob: -10.754295349121094
    5. ' =' → logprob: -11.629295349121094
    6. ')]' → logprob: -12.754295349121094
    7. ')' → logprob: -12.879295349121094
    8. '']' → logprob: -14.504295349121094
    9. '`]' → logprob: -15.379295349121094
    10. ']==' → logprob: -15.754295349121094

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251930832862854
    2. '=' → logprob: -1.501930832862854
    3. ' ' → logprob: -14.126931190490723
    4. ']' → logprob: -15.126931190490723
    5. ',' → logprob: -15.626931190490723
    6. '<|end|>' → logprob: -15.626931190490723
    7. ']=' → logprob: -16.251930236816406
    8. ')' → logprob: -16.876930236816406
    9. ' =)' → logprob: -17.001930236816406
    10. 'space' → logprob: -17.001930236816406

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.750380516052246
    4. '  ' → logprob: -16.000381469726562
    5. ' ' → logprob: -17.250381469726562
    6. '00' → logprob: -17.687881469726562
    7. '۰' → logprob: -17.687881469726562
    8. '000' → logprob: -18.125381469726562
    9. '1' → logprob: -18.375381469726562
    10. '    ' → logprob: -18.437881469726562

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '000' → logprob: -17.3125057220459
    4. '00' → logprob: -17.4375057220459
    5. '1' → logprob: -17.8125057220459
    6. '   ' → logprob: -18.1250057220459
    7. '۰' → logprob: -18.4375057220459
    8. '  ' → logprob: -18.9375057220459
    9. '```' → logprob: -19.3125057220459
    10. '10' → logprob: -19.4375057220459

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42800402641296387
    2. '   ' → logprob: -1.9280040264129639
    3. ' ' → logprob: -2.553004026412964
    4. ' for' → logprob: -3.553004026412964
    5. '<|end|>' → logprob: -3.678004026412964
    6. ' 
' → logprob: -4.053004264831543
    7. 'for' → logprob: -4.053004264831543
    8. '    
' → logprob: -4.803004264831543
    9. '\n' → logprob: -4.803004264831543
    10. '' → logprob: -5.303004264831543

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26159366965293884
    2. '   ' → logprob: -1.8865936994552612
    3. ' for' → logprob: -3.2615935802459717
    4. 'for' → logprob: -4.261593818664551
    5. '<|end|>' → logprob: -4.511593818664551
    6. ' ' → logprob: -5.011593818664551
    7. '    
' → logprob: -6.386593818664551
    8. ' 
' → logprob: -6.636593818664551
    9. ' while' → logprob: -6.886593818664551
    10. '  
' → logprob: -7.011593818664551

Token 76: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.608026921749115
    2. ' for' → logprob: -1.1080269813537598
    3. '   ' → logprob: -2.9830269813537598
    4. 'while' (adapté à ' while') → logprob: -3.1080269813537598
    5. ' while' → logprob: -3.6080269813537598
    6. ' ' → logprob: -7.48302698135376
    7. ' i' → logprob: -7.85802698135376
    8. 'u' → logprob: -8.233026504516602
    9. ' u' → logprob: -8.233026504516602
    10. '	for' → logprob: -8.483026504516602

Token 77: ' True' (ID: 6432)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1592441201210022
    2. 'True' → logprob: -2.1592440605163574
    3. ' True' → logprob: -3.7842440605163574
    4. 'color' → logprob: -5.784244060516357
    5. 'white' → logprob: -6.034244060516357
    6. 'any' → logprob: -6.784244060516357
    7. ' '' → logprob: -7.659244060516357
    8. 'False' → logprob: -7.909244060516357
    9. ' white' → logprob: -8.409244537353516
    10. ' color' → logprob: -8.784244537353516

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011570196511456743
    2. ':
' → logprob: -9.250115394592285
    3. ' :' → logprob: -11.250115394592285
    4. '):' → logprob: -13.250115394592285
    5. '   ' → logprob: -13.750115394592285
    6. ',' → logprob: -13.750115394592285
    7. ':**' → logprob: -14.125115394592285
    8. ':

' → logprob: -14.500115394592285
    9. '<|end|>' → logprob: -15.125115394592285
    10. '       ' → logprob: -15.500115394592285

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6978472471237183
    2. '    ' → logprob: -0.9478472471237183
    3. '     
' → logprob: -3.697847366333008
    4. ' ' → logprob: -3.947847366333008
    5. ' min' → logprob: -4.072847366333008
    6. 'm' → logprob: -4.572847366333008
    7. '  ' → logprob: -4.822847366333008
    8. '    
' → logprob: -5.197847366333008
    9. ' 
' → logprob: -5.197847366333008
    10. 'min' → logprob: -5.447847366333008

Token 80: ' min' (ID: 1349)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2792571187019348
    2. 'min' (adapté à ' min') → logprob: -1.52925705909729
    3. 'v' → logprob: -4.529257297515869
    4. '   ' → logprob: -4.654257297515869
    5. 'm' → logprob: -6.279257297515869
    6. ' u' → logprob: -6.654257297515869
    7. 'mn' → logprob: -7.029257297515869
    8. 'mx' → logprob: -7.779257297515869
    9. '```' → logprob: -7.779257297515869
    10. '    
' → logprob: -8.029256820678711

Token 81: 'cost' (ID: 33457)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.8697153925895691
    2. '_i' → logprob: -1.3697154521942139
    3. '_v' → logprob: -2.369715452194214
    4. '_index' → logprob: -2.869715452194214
    5. '_dist' → logprob: -3.119715452194214
    6. '_u' → logprob: -3.244715452194214
    7. '_vertex' → logprob: -3.619715452194214
    8. '_' → logprob: -3.994715452194214
    9. '_idx' → logprob: -4.619715213775635
    10. '_distance' → logprob: -4.744715213775635

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013459362089633942
    2. '=' → logprob: -4.388459205627441
    3. ',' → logprob: -7.013459205627441
    4. ' ' → logprob: -10.763459205627441
    5. '   ' → logprob: -11.638459205627441
    6. '=None' → logprob: -12.263459205627441
    7. '_idx' → logprob: -12.763459205627441
    8. '    ' → logprob: -13.138459205627441
    9. ' ,' → logprob: -13.138459205627441
    10. '  ' → logprob: -13.263459205627441

Token 83: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000522650487255305
    2. ' ' → logprob: -7.625522613525391
    3. '1' → logprob: -10.87552261352539
    4. '100' → logprob: -11.25052261352539
    5. 'float' → logprob: -13.62552261352539
    6. '101' → logprob: -15.25052261352539
    7. '999' → logprob: -15.37552261352539
    8. '(' → logprob: -15.50052261352539
    9. 'min' → logprob: -15.62552261352539
    10. '  ' → logprob: -16.00052261352539

Token 84: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010068230039905757
    2. 'float' → logprob: -10.000101089477539
    3. '100' → logprob: -10.750101089477539
    4. 'min' → logprob: -11.625101089477539
    5. '1' → logprob: -11.750101089477539
    6. ' ' → logprob: -12.125101089477539
    7. '(' → logprob: -12.250101089477539
    8. 'int' → logprob: -13.375101089477539
    9. '999' → logprob: -13.500101089477539
    10. '101' → logprob: -13.625101089477539

Token 85: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02983645536005497
    2. '9' → logprob: -3.529836416244507
    3. ' **' → logprob: -10.154836654663086
    4. '*' → logprob: -10.654836654663086
    5. '^' → logprob: -11.404836654663086
    6. '\xe2\x81' → logprob: -12.279836654663086
    7. ' ' → logprob: -12.654836654663086
    8. '```' → logprob: -13.654836654663086
    9. '+' → logprob: -14.029836654663086
    10. '***' → logprob: -14.779836654663086

Token 86: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00037490393151529133
    2. '10' → logprob: -8.000374794006348
    3. '18' → logprob: -11.375374794006348
    4. '15' → logprob: -11.750374794006348
    5. '8' → logprob: -11.875374794006348
    6. '12' → logprob: -11.875374794006348
    7. '```' → logprob: -13.375374794006348
    8. '7' → logprob: -14.125374794006348
    9. '6' → logprob: -14.125374794006348
    10. '14' → logprob: -14.187874794006348

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7248097658157349
    2. 'u' → logprob: -1.5998097658157349
    3. '       ' → logprob: -2.0998096466064453
    4. '<|end|>' → logprob: -2.2248096466064453
    5. ' u' → logprob: -3.2248096466064453
    6. 'v' → logprob: -4.349809646606445
    7. '   ' → logprob: -4.849809646606445
    8. ',' → logprob: -5.349809646606445
    9. ' ' → logprob: -5.474809646606445
    10. ' 
' → logprob: -5.599809646606445

Token 89: ' for' (ID: 395)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05265247821807861
    2. 'v' → logprob: -3.302652359008789
    3. 'min' → logprob: -4.927652359008789
    4. '   ' → logprob: -5.802652359008789
    5. ' u' → logprob: -6.677652359008789
    6. 'idx' → logprob: -7.427652359008789
    7. ' ' → logprob: -7.677652359008789
    8. 'index' → logprob: -7.927652359008789
    9. 'j' → logprob: -8.427652359008789
    10. 'imin' → logprob: -8.552652359008789

Token 90: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.47261449694633484
    2. 'i' → logprob: -1.3476145267486572
    3. 'v' → logprob: -2.2226145267486572
    4. 'j' → logprob: -5.847614288330078
    5. ' i' → logprob: -5.847614288330078
    6. ' u' → logprob: -6.347614288330078
    7. ' v' → logprob: -7.597614288330078
    8. ' ' → logprob: -7.972614288330078
    9. '   ' → logprob: -10.472614288330078
    10. ' j' → logprob: -11.097614288330078

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022247217129915953
    2. 'in' → logprob: -6.127224922180176
    3. ' ' → logprob: -10.877224922180176
    4. 'range' → logprob: -11.877224922180176
    5. ',' → logprob: -12.127224922180176
    6. 'n' → logprob: -12.752224922180176
    7. ' range' → logprob: -13.627224922180176
    8. '  ' → logprob: -13.752224922180176
    9. ' i' → logprob: -14.377224922180176
    10. '    ' → logprob: -14.377224922180176

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2527652084827423
    2. ' range' → logprob: -1.50276517868042
    3. ' xrange' → logprob: -7.25276517868042
    4. '(range' → logprob: -9.877765655517578
    5. ' ' → logprob: -10.252765655517578
    6. '	range' → logprob: -10.502765655517578
    7. 'x' → logprob: -12.377765655517578
    8. '   ' → logprob: -12.627765655517578
    9. '  ' → logprob: -13.377765655517578
    10. ')' → logprob: -14.252765655517578

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005041812546551228
    2. '(' → logprob: -7.625504016876221
    3. '(range' → logprob: -11.250504493713379
    4. '(len' → logprob: -14.000504493713379
    5. 'range' → logprob: -14.125504493713379
    6. ' (' → logprob: -14.500504493713379
    7. 'n' → logprob: -14.500504493713379
    8. '(
' → logprob: -15.500504493713379
    9. ' range' → logprob: -16.500503540039062
    10. '(s' → logprob: -16.875503540039062

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018563920632004738
    2. '):
' → logprob: -4.643563747406006
    3. ' ):' → logprob: -4.893563747406006
    4. ')' → logprob: -7.268563747406006
    5. ' ):
' → logprob: -8.768564224243164
    6. ' if' → logprob: -9.268564224243164
    7. '):
' → logprob: -9.518564224243164
    8. '       ' → logprob: -9.768564224243164
    9. '   ' → logprob: -9.768564224243164
    10. '):

' → logprob: -9.893564224243164

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7442903518676758
    2. '<|end|>' → logprob: -1.3692903518676758
    3. ' if' → logprob: -1.7442903518676758
    4. ' ' → logprob: -2.619290351867676
    5. '           ' → logprob: -4.994290351867676
    6. '        ' → logprob: -5.744290351867676
    7. ':' → logprob: -5.869290351867676
    8. '<|end|>' → logprob: -5.994290351867676
    9. 'if' → logprob: -6.494290351867676
    10. '   ' → logprob: -6.494290351867676

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08632871508598328
    2. 'if' (adapté à ' if') → logprob: -2.9613287448883057
    3. '       ' → logprob: -3.7113287448883057
    4. ' ' → logprob: -5.711328506469727
    5. '<|end|>' → logprob: -6.086328506469727
    6. '   ' → logprob: -7.961328506469727
    7. '           ' → logprob: -8.586328506469727
    8. ' and' → logprob: -9.086328506469727
    9. ' 
' → logprob: -9.586328506469727
    10. '    ' → logprob: -10.336328506469727

Token 97: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.008775527589023113
    2. 'color' → logprob: -4.75877571105957
    3. '(color' → logprob: -9.00877571105957
    4. ' (' → logprob: -11.38377571105957
    5. '	color' → logprob: -11.38377571105957
    6. ' not' → logprob: -11.63377571105957
    7. ' ' → logprob: -12.88377571105957
    8. '   ' → logprob: -14.25877571105957
    9. '[color' → logprob: -14.25877571105957
    10. '    ' → logprob: -14.75877571105957

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004734486574307084
    2. '[' → logprob: -8.375473022460938
    3. ' [' → logprob: -8.375473022460938
    4. '[I' → logprob: -12.625473022460938
    5. '[
' → logprob: -13.000473022460938
    6. ' ' → logprob: -14.125473022460938
    7. 'i' → logprob: -14.500473022460938
    8. '[ii' → logprob: -14.625473022460938
    9. '```' → logprob: -14.625473022460938
    10. '[j' → logprob: -14.750473022460938

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11986394971609116
    2. ']==' → logprob: -2.244863986968994
    3. '==' → logprob: -5.744863986968994
    4. ']=='' → logprob: -6.619863986968994
    5. ' ==' → logprob: -6.744863986968994
    6. ' ]' → logprob: -6.869863986968994
    7. '[' → logprob: -8.619863510131836
    8. ' ' → logprob: -10.744863510131836
    9. ']=="' → logprob: -10.869863510131836
    10. '']=='' → logprob: -11.619863510131836

Token 100: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4749489426612854
    2. ' ==' → logprob: -0.9749489426612854
    3. '=='' → logprob: -7.349948883056641
    4. ' ' → logprob: -8.97494888305664
    5. ' =='' → logprob: -10.47494888305664
    6. '=="' → logprob: -10.84994888305664
    7. '=' → logprob: -10.97494888305664
    8. '==
' → logprob: -11.22494888305664
    9. '[' → logprob: -11.72494888305664
    10. ']==' → logprob: -11.84994888305664

Token 101: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02172926440834999
    2. ' '' → logprob: -4.021729469299316
    3. '"' → logprob: -6.271729469299316
    4. ''w' → logprob: -7.521729469299316
    5. ''y' → logprob: -8.521729469299316
    6. ''s' → logprob: -8.521729469299316
    7. ' ' → logprob: -8.771729469299316
    8. ''r' → logprob: -9.271729469299316
    9. ''a' → logprob: -9.521729469299316
    10. ''u' → logprob: -9.646729469299316

Token 102: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.01685250736773014
    2. 'white' → logprob: -4.766852378845215
    3. 'gray' → logprob: -5.016852378845215
    4. 'grey' → logprob: -7.391852378845215
    5. ''' → logprob: -7.641852378845215
    6. ' black' → logprob: -8.516852378845215
    7. 'b' → logprob: -8.766852378845215
    8. 'red' → logprob: -9.891852378845215
    9. '_black' → logprob: -10.516852378845215
    10. ''b' → logprob: -11.141852378845215

Token 103: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.43500563502311707
    2. ''' → logprob: -1.1850056648254395
    3. 'and' → logprob: -3.0600056648254395
    4. ' '' → logprob: -10.185005187988281
    5. '           ' → logprob: -10.810005187988281
    6. '       ' → logprob: -11.810005187988281
    7. '   ' → logprob: -11.935005187988281
    8. ''s' → logprob: -12.060005187988281
    9. ' ' → logprob: -12.310005187988281
    10. 'a' → logprob: -12.685005187988281

Token 104: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026310397312045097
    2. 'and' → logprob: -3.651310443878174
    3. ' ' → logprob: -11.901309967041016
    4. '           ' → logprob: -13.776309967041016
    5. '   ' → logprob: -14.401309967041016
    6. '       ' → logprob: -14.526309967041016
    7. '    ' → logprob: -14.901309967041016
    8. '	and' → logprob: -15.026309967041016
    9. '        ' → logprob: -15.776309967041016
    10. ' ' → logprob: -17.026309967041016

Token 105: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08895745873451233
    2. 'd' → logprob: -2.4639575481414795
    3. ' ' → logprob: -11.838957786560059
    4. '   ' → logprob: -11.963957786560059
    5. '  ' → logprob: -13.338957786560059
    6. '(d' → logprob: -13.588957786560059
    7. '    ' → logprob: -14.588957786560059
    8. '	d' → logprob: -15.213957786560059
    9. ' (' → logprob: -15.713957786560059
    10. ' ' → logprob: -15.838957786560059

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1186566047836095e-05
    2. '[' → logprob: -11.000031471252441
    3. ' [' → logprob: -12.000031471252441
    4. '[I' → logprob: -12.875031471252441
    5. 'i' → logprob: -13.125031471252441
    6. '   ' → logprob: -14.375031471252441
    7. '```' → logprob: -14.500031471252441
    8. '[
' → logprob: -14.625031471252441
    9. '[j' → logprob: -15.250031471252441
    10. '[int' → logprob: -16.000030517578125

Token 107: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6330010890960693
    2. ' <' → logprob: -0.7580010890960693
    3. ' ' → logprob: -8.133001327514648
    4. ']' → logprob: -10.883001327514648
    5. '   ' → logprob: -11.133001327514648
    6. '<int' → logprob: -11.758001327514648
    7. ')' → logprob: -12.008001327514648
    8. ']<' → logprob: -12.008001327514648
    9. '<size' → logprob: -12.258001327514648
    10. '<n' → logprob: -12.258001327514648

Token 108: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4741232991218567
    2. ' <' → logprob: -0.9741232991218567
    3. ' ' → logprob: -10.599123001098633
    4. '   ' → logprob: -12.349123001098633
    5. '<int' → logprob: -12.474123001098633
    6. '<size' → logprob: -12.974123001098633
    7. '<n' → logprob: -13.599123001098633
    8. '<class' → logprob: -13.974123001098633
    9. '<len' → logprob: -14.099123001098633
    10. '  ' → logprob: -14.224123001098633

Token 109: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759459137916565
    2. ' min' → logprob: -0.8259459137916565
    3. '   ' → logprob: -12.700945854187012
    4. ' ' → logprob: -13.700945854187012
    5. '    ' → logprob: -13.950945854187012
    6. '	min' → logprob: -14.450945854187012
    7. '=min' → logprob: -15.200945854187012
    8. '10' → logprob: -15.700945854187012
    9. 'm' → logprob: -15.825945854187012
    10. '  ' → logprob: -16.075946807861328

Token 110: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.941850526549388e-06
    2. ' cost' → logprob: -12.125007629394531
    3. 'min' → logprob: -13.750007629394531
    4. 'ost' → logprob: -14.375007629394531
    5. '_cost' → logprob: -14.750007629394531
    6. '   ' → logprob: -15.750007629394531
    7. 'cos' → logprob: -16.12500762939453
    8. 'cast' → logprob: -17.00000762939453
    9. '(cost' → logprob: -17.12500762939453
    10. 'Cost' → logprob: -17.87500762939453

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04118156060576439
    2. ':
' → logprob: -3.2911815643310547
    3. '           ' → logprob: -6.291181564331055
    4. '               ' → logprob: -7.041181564331055
    5. ' and' → logprob: -8.916181564331055
    6. ' :' → logprob: -9.291181564331055
    7. '       ' → logprob: -9.791181564331055
    8. ' :
' → logprob: -10.541181564331055
    9. '):
' → logprob: -10.791181564331055
    10. '):' → logprob: -11.541181564331055

Token 112: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2737591564655304
    2. '           ' → logprob: -2.023759126663208
    3. '               ' → logprob: -2.898759126663208
    4. ':
' → logprob: -3.773759126663208
    5. ' :' → logprob: -3.898759126663208
    6. ' :
' → logprob: -6.023759365081787
    7. '       ' → logprob: -6.648759365081787
    8. '):' → logprob: -7.148759365081787
    9. ' and' → logprob: -7.273759365081787
    10. ' ' → logprob: -7.398759365081787

Token 113: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.23255127668380737
    2. 'min' (adapté à ' min') → logprob: -1.8575513362884521
    3. ' u' → logprob: -3.607551336288452
    4. 'u' → logprob: -4.482551097869873
    5. ' i' → logprob: -6.107551097869873
    6. '   ' → logprob: -6.107551097869873
    7. '               ' → logprob: -6.107551097869873
    8. '           ' → logprob: -6.607551097869873
    9. 'v' → logprob: -6.982551097869873
    10. '       ' → logprob: -7.107551097869873

Token 114: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.1080467781284824e-05
    2. ' cost' → logprob: -10.250041007995605
    3. '_cost' → logprob: -12.875041007995605
    4. '               ' → logprob: -14.125041007995605
    5. '   ' → logprob: -14.750041007995605
    6. 'cos' → logprob: -15.125041007995605
    7. '           ' → logprob: -15.250041007995605
    8. '       ' → logprob: -15.875041007995605
    9. '                   ' → logprob: -15.875041007995605
    10. '(cost' → logprob: -15.875041007995605

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03381950780749321
    2. '=' → logprob: -3.4088194370269775
    3. '=i' → logprob: -8.908819198608398
    4. '   ' → logprob: -11.283819198608398
    5. '    ' → logprob: -11.908819198608398
    6. '                   ' → logprob: -12.158819198608398
    7. ' ' → logprob: -12.533819198608398
    8. '               ' → logprob: -12.658819198608398
    9. ',' → logprob: -12.658819198608398
    10. '=d' → logprob: -14.158819198608398

Token 116: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10020699352025986
    2. 'd' → logprob: -2.3502070903778076
    3. '    ' → logprob: -16.10020637512207
    4. '   ' → logprob: -16.47520637512207
    5. '	d' → logprob: -16.72520637512207
    6. ' ' → logprob: -17.10020637512207
    7. ' ' → logprob: -17.72520637512207
    8. '           ' → logprob: -18.60020637512207
    9. '               ' → logprob: -18.60020637512207
    10. '                ' → logprob: -18.72520637512207

Token 117: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003364158037584275
    2. '[' → logprob: -8.000336647033691
    3. '[
' → logprob: -15.125336647033691
    4. ' [' → logprob: -15.500336647033691
    5. '[j' → logprob: -15.750336647033691
    6. '```' → logprob: -16.625335693359375
    7. '[I' → logprob: -16.750335693359375
    8. 'i' → logprob: -17.125335693359375
    9. '[u' → logprob: -17.625335693359375
    10. '[index' → logprob: -18.375335693359375

Token 118: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34807658195495605
    2. '
' → logprob: -1.723076581954956
    3. ']' → logprob: -2.723076581954956
    4. ']
' → logprob: -4.348076820373535
    5. ' and' → logprob: -4.973076820373535
    6. '           ' → logprob: -5.098076820373535
    7. '       ' → logprob: -5.723076820373535
    8. ' 
' → logprob: -5.848076820373535
    9. '  
' → logprob: -5.973076820373535
    10. '<|end|>' → logprob: -5.973076820373535

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33105432987213135
    2. '       ' → logprob: -2.331054210662842
    3. ' 
' → logprob: -2.831054210662842
    4. '        
' → logprob: -3.331054210662842
    5. ' ' → logprob: -3.831054210662842
    6. ' i' → logprob: -4.206054210662842
    7. '                
' → logprob: -4.206054210662842
    8. '<|end|>' → logprob: -4.206054210662842
    9. '  
' → logprob: -4.956054210662842
    10. 'i' → logprob: -6.081054210662842

Token 120: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.021685870364308357
    2. 'v' → logprob: -4.77168607711792
    3. '   ' → logprob: -5.02168607711792
    4. ' u' → logprob: -5.27168607711792
    5. 'idx' → logprob: -8.271685600280762
    6. ' ' → logprob: -8.521685600280762
    7. 'min' → logprob: -8.521685600280762
    8. 'index' → logprob: -8.646685600280762
    9. 'vertex' → logprob: -9.646685600280762
    10. 'next' → logprob: -9.771685600280762

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07034141570329666
    2. '=' → logprob: -2.6953413486480713
    3. '=i' → logprob: -7.94534158706665
    4. '=u' → logprob: -10.070341110229492
    5. ' ' → logprob: -12.195341110229492
    6. ' =
' → logprob: -13.820341110229492
    7. '   ' → logprob: -14.320341110229492
    8. ' i' → logprob: -14.695341110229492
    9. '    ' → logprob: -15.195341110229492
    10. '=
' → logprob: -15.695341110229492

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715728435665369
    2. ' i' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.131715774536133
    4. '   ' → logprob: -16.256715774536133
    5. '	i' → logprob: -17.381715774536133
    6. '
' → logprob: -18.506715774536133
    7. '_i' → logprob: -18.631715774536133
    8. '  ' → logprob: -19.506715774536133
    9. ' ' → logprob: -19.631715774536133
    10. '<|end|>' → logprob: -19.631715774536133

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06714492291212082
    2. '        
' → logprob: -3.8171448707580566
    3. '<|end|>' → logprob: -3.9421448707580566
    4. ' 
' → logprob: -4.442144870758057
    5. '
' → logprob: -6.067144870758057
    6. '  
' → logprob: -6.192144870758057
    7. '<|end|>' → logprob: -6.317144870758057
    8. 'u' → logprob: -6.692144870758057
    9. '    
' → logprob: -7.067144870758057
    10. '   ' → logprob: -7.692144870758057

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002471612999215722
    2. '<|end|>' → logprob: -7.377471446990967
    3. ' 
' → logprob: -7.502471446990967
    4. ' if' → logprob: -7.877471446990967
    5. '        
' → logprob: -8.127471923828125
    6. '   ' → logprob: -8.752471923828125
    7. '
' → logprob: -8.877471923828125
    8. ' s' → logprob: -9.877471923828125
    9. '  
' → logprob: -10.127471923828125
    10. '<|end|>' → logprob: -10.627471923828125

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3613232672214508
    2. 'if' (adapté à ' if') → logprob: -1.2363232374191284
    3. '       ' → logprob: -5.111323356628418
    4. 'color' → logprob: -5.361323356628418
    5. '   ' → logprob: -7.361323356628418
    6. ' color' → logprob: -7.861323356628418
    7. ' 
' → logprob: -8.111323356628418
    8. '        
' → logprob: -8.736323356628418
    9. 'u' → logprob: -8.861323356628418
    10. '        ' → logprob: -9.361323356628418

Token 126: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023259920999407768
    2. ' min' → logprob: -3.7732598781585693
    3. '	min' → logprob: -12.773260116577148
    4. '   ' → logprob: -13.023260116577148
    5. '(min' → logprob: -13.023260116577148
    6. 'color' → logprob: -13.023260116577148
    7. 'u' → logprob: -13.273260116577148
    8. ' ' → logprob: -13.398260116577148
    9. '  ' → logprob: -14.273260116577148
    10. ' color' → logprob: -14.898260116577148

Token 127: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -8.65707261255011e-06
    2. ' cost' → logprob: -12.375008583068848
    3. '_cost' → logprob: -13.500008583068848
    4. '   ' → logprob: -13.750008583068848
    5. 'ost' → logprob: -14.000008583068848
    6. '(cost' → logprob: -14.625008583068848
    7. 'u' → logprob: -15.250008583068848
    8. 'cut' → logprob: -16.500009536743164
    9. '       ' → logprob: -17.375009536743164
    10. '(u' → logprob: -17.375009536743164

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07894112914800644
    2. ' ==' → logprob: -2.5789411067962646
    3. '==
' → logprob: -10.328941345214844
    4. '=' → logprob: -11.703941345214844
    5. '>=' → logprob: -12.203941345214844
    6. '>' → logprob: -13.328941345214844
    7. '==(' → logprob: -14.078941345214844
    8. '===' → logprob: -14.703941345214844
    9. '==-' → logprob: -14.828941345214844
    10. '```' → logprob: -15.078941345214844

Token 129: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023369524569716305
    2. ' ' → logprob: -8.37523365020752
    3. '100' → logprob: -12.75023365020752
    4. '1' → logprob: -16.000234603881836
    5. '   ' → logprob: -16.375234603881836
    6. '```' → logprob: -17.875234603881836
    7. '101' → logprob: -18.250234603881836
    8. '  ' → logprob: -18.500234603881836
    9. '999' → logprob: -18.875234603881836
    10. '(' → logprob: -19.125234603881836

Token 130: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5332478142227046e-05
    2. '100' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.000015258789062
    4. '1' → logprob: -16.500015258789062
    5. '101' → logprob: -17.625015258789062
    6. '(' → logprob: -17.875015258789062
    7. '109' → logprob: -18.000015258789062
    8. '999' → logprob: -18.000015258789062
    9. '```' → logprob: -18.000015258789062
    10. '   ' → logprob: -18.375015258789062

Token 131: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0036182431504130363
    2. '9' → logprob: -5.628618240356445
    3. '*' → logprob: -12.003618240356445
    4. '```' → logprob: -12.003618240356445
    5. '^' → logprob: -12.253618240356445
    6. '\xe2\x81' → logprob: -15.253618240356445
    7. '***' → logprob: -15.503618240356445
    8. '``' → logprob: -16.003618240356445
    9. '
' → logprob: -16.003618240356445
    10. '**
' → logprob: -16.253618240356445

Token 132: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.125000953674316
    3. '``' → logprob: -17.0
    4. '09' → logprob: -18.0
    5. ' ' → logprob: -18.0625
    6. '
' → logprob: -18.3125
    7. '९' → logprob: -18.8125
    8. '**' → logprob: -19.0
    9. '-' → logprob: -19.0
    10. '10' → logprob: -19.125

Token 133: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5928806662559509
    2. ':' → logprob: -0.8428806662559509
    3. '       ' → logprob: -4.217880725860596
    4. ':
' → logprob: -6.217880725860596
    5. '          ' → logprob: -10.092880249023438
    6. '               ' → logprob: -11.717880249023438
    7. '   ' → logprob: -12.092880249023438
    8. '      ' → logprob: -12.842880249023438
    9. '         ' → logprob: -12.967880249023438
    10. ':return' → logprob: -13.342880249023438

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011397423222661018
    2. '       ' → logprob: -6.8761396408081055
    3. ' break' → logprob: -9.876139640808105
    4. 'break' → logprob: -10.376139640808105
    5. '          ' → logprob: -11.501139640808105
    6. '   ' → logprob: -12.376139640808105
    7. '		' → logprob: -13.001139640808105
    8. '               ' → logprob: -13.251139640808105
    9. '            ' → logprob: -13.751139640808105
    10. '         ' → logprob: -13.751139640808105

Token 135: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5989357829093933
    2. 'break' (adapté à ' break') → logprob: -1.098935842514038
    3. ' break' → logprob: -2.723935842514038
    4. '           ' → logprob: -2.973935842514038
    5. '   ' → logprob: -8.098936080932617
    6. '	break' → logprob: -8.598936080932617
    7. '               ' → logprob: -9.348936080932617
    8. 'return' → logprob: -9.973936080932617
    9. '      ' → logprob: -11.973936080932617
    10. '     ' → logprob: -12.098936080932617

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3381721079349518
    2. ' color' → logprob: -1.9631720781326294
    3. '       ' → logprob: -2.213172197341919
    4. 'color' → logprob: -3.963172197341919
    5. '        
' → logprob: -5.46317195892334
    6. '<|end|>' → logprob: -5.71317195892334
    7. '	color' → logprob: -6.08817195892334
    8. '
' → logprob: -6.08817195892334
    9. '    
' → logprob: -6.33817195892334
    10. '    ' → logprob: -6.71317195892334

Token 137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011315420269966125
    2. ' color' → logprob: -5.13631534576416
    3. 'color' → logprob: -6.01131534576416
    4. '    
' → logprob: -7.01131534576416
    5. '<|end|>' → logprob: -7.01131534576416
    6. '	color' → logprob: -8.51131534576416
    7. ' 
' → logprob: -8.51131534576416
    8. '       ' → logprob: -8.88631534576416
    9. '        
' → logprob: -8.88631534576416
    10. ' u' → logprob: -9.26131534576416

Token 138: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.0034347150940448046
    2. ' color' → logprob: -6.253434658050537
    3. '   ' → logprob: -6.503434658050537
    4. '	color' → logprob: -12.503435134887695
    5. '       ' → logprob: -13.128435134887695
    6. ' ' → logprob: -14.753435134887695
    7. 'u' → logprob: -15.003435134887695
    8. '  ' → logprob: -15.628435134887695
    9. '```' → logprob: -16.378435134887695
    10. '
' → logprob: -17.003435134887695

Token 139: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. 'u' → logprob: -19.625001907348633
    4. '[user' → logprob: -20.125001907348633
    5. ' [' → logprob: -20.625001907348633
    6. '[v' → logprob: -21.875001907348633
    7. '[i' → logprob: -21.875001907348633
    8. '```' → logprob: -22.000001907348633
    9. '	u' → logprob: -22.125001907348633
    10. '<u' → logprob: -22.500001907348633

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008467909647151828
    2. ']=' → logprob: -7.250846862792969
    3. '=' → logprob: -9.000846862792969
    4. ']='' → logprob: -12.000846862792969
    5. ' ]' → logprob: -12.375846862792969
    6. ' =' → logprob: -13.500846862792969
    7. '[' → logprob: -13.750846862792969
    8. '']' → logprob: -16.12584686279297
    9. ']]' → logprob: -16.25084686279297
    10. ']
' → logprob: -16.37584686279297

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048588622361421585
    2. ' =' → logprob: -3.048588514328003
    3. '='' → logprob: -14.423588752746582
    4. ' ='' → logprob: -14.798588752746582
    5. ' ' → logprob: -15.798588752746582
    6. '[' → logprob: -16.048587799072266
    7. ')' → logprob: -16.923587799072266
    8. '=

' → logprob: -17.173587799072266
    9. ']' → logprob: -17.298587799072266
    10. ',' → logprob: -17.548587799072266

Token 142: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005494141485542059
    2. ' '' → logprob: -6.005494117736816
    3. 'black' → logprob: -6.005494117736816
    4. ' black' → logprob: -7.630494117736816
    5. '"' → logprob: -10.505494117736816
    6. ''b' → logprob: -11.505494117736816
    7. ':black' → logprob: -11.630494117736816
    8. ''s' → logprob: -11.880494117736816
    9. ' ' → logprob: -13.380494117736816
    10. '`' → logprob: -13.505494117736816

Token 143: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -2.045823566731997e-05
    2. ''' → logprob: -11.125020027160645
    3. ' black' → logprob: -13.250020027160645
    4. 'b' → logprob: -13.375020027160645
    5. 'gray' → logprob: -13.500020027160645
    6. 'grey' → logprob: -15.625020027160645
    7. 'Black' → logprob: -16.12502098083496
    8. ':black' → logprob: -16.25002098083496
    9. '"' → logprob: -16.37502098083496
    10. '_black' → logprob: -16.37502098083496

Token 144: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020562907680869102
    2. 'for' → logprob: -4.395563125610352
    3. ' for' → logprob: -4.895563125610352
    4. '   ' → logprob: -7.645563125610352
    5. '        
' → logprob: -10.770563125610352
    6. '	for' → logprob: -11.020563125610352
    7. '<|end|>' → logprob: -11.770563125610352
    8. '  ' → logprob: -12.645563125610352
    9. ' ' → logprob: -12.895563125610352
    10. '    ' → logprob: -13.020563125610352

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.249780638725497e-05
    2. '   ' → logprob: -11.125032424926758
    3. ' for' → logprob: -11.375032424926758
    4. '       ' → logprob: -12.000032424926758
    5. '	for' → logprob: -16.750032424926758
    6. '
' → logprob: -17.625032424926758
    7. '        
' → logprob: -18.500032424926758
    8. '    
' → logprob: -19.125032424926758
    9. '  ' → logprob: -19.250032424926758
    10. ' ' → logprob: -19.375032424926758

Token 147: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0234229639172554
    2. ' v' → logprob: -3.773422956466675
    3. 'j' → logprob: -9.023423194885254
    4. 'i' → logprob: -10.648423194885254
    5. 'w' → logprob: -12.023423194885254
    6. '```' → logprob: -12.023423194885254
    7. '(v' → logprob: -12.273423194885254
    8. ' ' → logprob: -12.773423194885254
    9. '	v' → logprob: -12.773423194885254
    10. ' j' → logprob: -12.773423194885254

Token 148: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.348471999168396
    2. ' in' → logprob: -1.223471999168396
    3. ' ' → logprob: -11.348471641540527
    4. '	in' → logprob: -12.223471641540527
    5. 'range' → logprob: -12.723471641540527
    6. ',' → logprob: -13.098471641540527
    7. '   ' → logprob: -13.098471641540527
    8. '  ' → logprob: -13.973471641540527
    9. ')' → logprob: -14.723471641540527
    10. 'n' → logprob: -14.848471641540527

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009238460334017873
    2. ' range' → logprob: -7.0009236335754395
    3. ' xrange' → logprob: -11.375924110412598
    4. ' ' → logprob: -15.000924110412598
    5. '(range' → logprob: -15.250924110412598
    6. 'x' → logprob: -15.375924110412598
    7. '   ' → logprob: -16.12592315673828
    8. '	range' → logprob: -16.37592315673828
    9. '  ' → logprob: -17.50092315673828
    10. 'a' → logprob: -17.87592315673828

Token 150: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0564331205387134e-05
    2. '(len' → logprob: -12.00001049041748
    3. '(' → logprob: -12.50001049041748
    4. 'n' → logprob: -14.62501049041748
    5. ' (' → logprob: -15.62501049041748
    6. '(
' → logprob: -19.000011444091797
    7. 'len' → logprob: -19.000011444091797
    8. '   ' → logprob: -19.625011444091797
    9. ' n' → logprob: -19.625011444091797
    10. '(N' → logprob: -20.625011444091797

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3870175778865814
    2. '):
' → logprob: -1.1370176076889038
    3. '   ' → logprob: -10.012017250061035
    4. ':' → logprob: -10.262017250061035
    5. '       ' → logprob: -11.012017250061035
    6. '):
' → logprob: -11.137017250061035
    7. ')' → logprob: -11.262017250061035
    8. '():
' → logprob: -11.762017250061035
    9. '):

' → logprob: -13.012017250061035
    10. '():' → logprob: -13.012017250061035

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00680524529889226
    2. ' if' → logprob: -5.506805419921875
    3. '       ' → logprob: -6.256805419921875
    4. '<|end|>' → logprob: -8.131805419921875
    5. '	       ' → logprob: -8.756805419921875
    6. '        ' → logprob: -9.631805419921875
    7. ',' → logprob: -9.881805419921875
    8. '          ' → logprob: -10.006805419921875
    9. 'if' → logprob: -10.006805419921875
    10. ':' → logprob: -10.381805419921875

Token 153: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.658736526966095
    2. ' if' → logprob: -0.908736526966095
    3. '           ' → logprob: -2.53373646736145
    4. '               ' → logprob: -10.033736228942871
    5. '       ' → logprob: -10.158736228942871
    6. '   ' → logprob: -11.658736228942871
    7. '          ' → logprob: -13.283736228942871
    8. ' ' → logprob: -13.533736228942871
    9. ' and' → logprob: -13.533736228942871
    10. '            ' → logprob: -13.908736228942871

Token 154: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.30471035838127136
    2. 'a' → logprob: -1.6797103881835938
    3. ' color' → logprob: -2.6797103881835938
    4. ' a' → logprob: -4.929710388183594
    5. '   ' → logprob: -8.179710388183594
    6. '(color' → logprob: -9.929710388183594
    7. ' ' → logprob: -10.679710388183594
    8. '(a' → logprob: -11.054710388183594
    9. '	color' → logprob: -11.617210388183594
    10. '    ' → logprob: -11.617210388183594

Token 155: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.088346359931165e-07
    2. 'v' → logprob: -14.625000953674316
    3. '[u' → logprob: -15.875000953674316
    4. '[' → logprob: -16.0
    5. ' [' → logprob: -16.5
    6. '```' → logprob: -19.625
    7. '(v' → logprob: -20.25
    8. '<v' → logprob: -20.25
    9. '[
' → logprob: -20.25
    10. '[i' → logprob: -20.375

Token 156: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3797050714492798
    2. '==' → logprob: -1.7547050714492798
    3. ' !=' → logprob: -2.3797049522399902
    4. ']' → logprob: -3.6297049522399902
    5. ' ==' → logprob: -4.25470495223999
    6. ']!=' → logprob: -5.37970495223999
    7. ']==' → logprob: -5.75470495223999
    8. '!='' → logprob: -6.62970495223999
    9. ' ' → logprob: -9.254705429077148
    10. '()!=' → logprob: -9.379705429077148

Token 157: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5263069272041321
    2. '!=' → logprob: -0.9013069272041321
    3. ' ==' → logprob: -6.526307106018066
    4. ' !=' → logprob: -6.651307106018066
    5. '!='' → logprob: -8.151307106018066
    6. '=='' → logprob: -9.151307106018066
    7. ' ' → logprob: -11.526307106018066
    8. '=' → logprob: -12.026307106018066
    9. '()!=' → logprob: -13.026307106018066
    10. '<>' → logprob: -13.526307106018066

Token 158: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00320052751339972
    2. ' '' → logprob: -5.753200531005859
    3. ''s' → logprob: -11.75320053100586
    4. '   ' → logprob: -12.25320053100586
    5. 'black' → logprob: -12.87820053100586
    6. ' ' → logprob: -13.25320053100586
    7. '"' → logprob: -13.50320053100586
    8. ''b' → logprob: -13.75320053100586
    9. '	' → logprob: -14.87820053100586
    10. '  ' → logprob: -15.00320053100586

Token 159: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -9.491498531133402e-06
    2. ' black' → logprob: -12.375009536743164
    3. ''' → logprob: -12.750009536743164
    4. 'white' → logprob: -13.375009536743164
    5. '.black' → logprob: -15.625009536743164
    6. '
' → logprob: -15.875009536743164
    7. ':black' → logprob: -16.000009536743164
    8. 'gray' → logprob: -16.375009536743164
    9. ' ' → logprob: -17.000009536743164
    10. '_black' → logprob: -17.250009536743164

Token 160: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012516716495156288
    2. 'and' → logprob: -4.387516498565674
    3. ' ' → logprob: -12.387516975402832
    4. ''' → logprob: -14.137516975402832
    5. '           ' → logprob: -14.262516975402832
    6. '               ' → logprob: -15.262516975402832
    7. '            ' → logprob: -15.512516975402832
    8. '   ' → logprob: -15.637516975402832
    9. '    ' → logprob: -15.887516975402832
    10. ')' → logprob: -16.012516021728516

Token 161: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02054901234805584
    2. 'and' → logprob: -3.8955490589141846
    3. ' ' → logprob: -12.395548820495605
    4. '   ' → logprob: -13.645548820495605
    5. '           ' → logprob: -15.020548820495605
    6. ' и' → logprob: -15.020548820495605
    7. '	and' → logprob: -15.020548820495605
    8. '               ' → logprob: -16.020549774169922
    9. '       ' → logprob: -16.395549774169922
    10. '    ' → logprob: -16.395549774169922

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03402922675013542
    2. ' a' → logprob: -3.409029245376587
    3. '0' → logprob: -8.034029006958008
    4. ' ' → logprob: -10.534029006958008
    5. '(a' → logprob: -11.159029006958008
    6. '   ' → logprob: -11.659029006958008
    7. '1' → logprob: -13.034029006958008
    8. 'u' → logprob: -13.284029006958008
    9. 'v' → logprob: -14.034029006958008
    10. ' (' → logprob: -14.284029006958008

Token 163: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.961759259458631e-06
    2. 'u' → logprob: -12.250004768371582
    3. '[' → logprob: -16.0000057220459
    4. '[v' → logprob: -17.5000057220459
    5. '```' → logprob: -17.7500057220459
    6. '<u' → logprob: -18.6250057220459
    7. '	u' → logprob: -19.1250057220459
    8. '[user' → logprob: -19.2500057220459
    9. '[s' → logprob: -19.3750057220459
    10. '\[' → logprob: -19.3750057220459

Token 164: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019217297667637467
    2. '[u' → logprob: -6.751921653747559
    3. ']' → logprob: -7.501921653747559
    4. '[' → logprob: -9.251921653747559
    5. '[v' → logprob: -10.001921653747559
    6. ''][' → logprob: -10.626921653747559
    7. ' ][' → logprob: -10.626921653747559
    8. '"][' → logprob: -13.001921653747559
    9. '}[' → logprob: -13.751921653747559
    10. ']][' → logprob: -14.001921653747559

Token 165: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.9153885558771435e-06
    2. ' v' → logprob: -12.875005722045898
    3. '][' → logprob: -13.000005722045898
    4. '[v' → logprob: -14.625005722045898
    5. '	v' → logprob: -15.375005722045898
    6. ']' → logprob: -16.0000057220459
    7. ')v' → logprob: -16.1250057220459
    8. ',v' → logprob: -18.5000057220459
    9. '<v' → logprob: -18.8750057220459
    10. '-v' → logprob: -18.8750057220459

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002423814032226801
    2. ']<' → logprob: -6.2524237632751465
    3. ' ]' → logprob: -8.627424240112305
    4. '']' → logprob: -9.127424240112305
    5. '<' → logprob: -9.252424240112305
    6. '[' → logprob: -10.002424240112305
    7. ' <' → logprob: -10.377424240112305
    8. '   ' → logprob: -11.002424240112305
    9. '][' → logprob: -12.252424240112305
    10. ']>' → logprob: -12.502424240112305

Token 167: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06798794120550156
    2. '>' → logprob: -3.1929879188537598
    3. ' <' → logprob: -4.06798791885376
    4. '!=' → logprob: -5.19298791885376
    5. ' >' → logprob: -7.06798791885376
    6. '<int' → logprob: -8.192988395690918
    7. 'and' → logprob: -8.317988395690918
    8. ' and' → logprob: -8.442988395690918
    9. ' !=' → logprob: -8.442988395690918
    10. '<>' → logprob: -9.442988395690918

Token 168: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024015780072659254
    2. ' ' → logprob: -6.252401351928711
    3. '-' → logprob: -7.752401351928711
    4. ' -' → logprob: -11.127401351928711
    5. '   ' → logprob: -11.502401351928711
    6. '10' → logprob: -12.127401351928711
    7. '  ' → logprob: -12.252401351928711
    8. '999' → logprob: -13.002401351928711
    9. 'None' → logprob: -13.377401351928711
    10. '100' → logprob: -13.502401351928711

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '-' → logprob: -16.875
    4. '```' → logprob: -18.0
    5. ' -' → logprob: -19.75
    6. '2' → logprob: -19.875
    7. '

' → logprob: -20.0
    8. '
' → logprob: -20.25
    9. '   ' → logprob: -20.3125
    10. '``' → logprob: -20.5

Token 170: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036460417322814465
    2. 'and' → logprob: -5.628645896911621
    3. ' ' → logprob: -10.503645896911621
    4. '               ' → logprob: -11.878645896911621
    5. '           ' → logprob: -12.378645896911621
    6. '            ' → logprob: -13.128645896911621
    7. '	and' → logprob: -13.753645896911621
    8. '                ' → logprob: -13.878645896911621
    9. '        ' → logprob: -14.128645896911621
    10. '   ' → logprob: -14.628645896911621

Token 171: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.022161470726132393
    2. '               ' → logprob: -3.8971614837646484
    3. 'and' → logprob: -6.772161483764648
    4. '           ' → logprob: -8.397161483764648
    5. ' ' → logprob: -9.022161483764648
    6. '              ' → logprob: -10.522161483764648
    7. '<|end|>' → logprob: -10.772161483764648
    8. '            ' → logprob: -11.272161483764648
    9. '                ' → logprob: -11.522161483764648
    10. '   ' → logprob: -11.647161483764648

Token 172: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2686641216278076
    2. 'if' (adapté à ' if') → logprob: -1.6436641216278076
    3. '                   ' → logprob: -3.5186641216278076
    4. ' and' → logprob: -4.518664360046387
    5. 'and' → logprob: -6.768664360046387
    6. '               ' → logprob: -8.518664360046387
    7. ' ' → logprob: -8.643664360046387
    8. '   ' → logprob: -8.893664360046387
    9. '                       ' → logprob: -10.893664360046387
    10. '           ' → logprob: -11.018664360046387

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23582662642002106
    2. ' a' → logprob: -1.7358266115188599
    3. 'd' → logprob: -3.7358267307281494
    4. ' d' → logprob: -4.61082649230957
    5. '   ' → logprob: -11.48582649230957
    6. '                   ' → logprob: -11.98582649230957
    7. ' ' → logprob: -12.11082649230957
    8. '               ' → logprob: -12.73582649230957
    9. '	a' → logprob: -12.98582649230957
    10. '  ' → logprob: -14.48582649230957

Token 174: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.250006675720215
    3. 'u' → logprob: -14.125006675720215
    4. '[v' → logprob: -15.375006675720215
    5. '][' → logprob: -16.2500057220459
    6. ' [' → logprob: -16.3750057220459
    7. '[user' → logprob: -16.5000057220459
    8. '[a' → logprob: -16.6250057220459
    9. ')[' → logprob: -16.7500057220459
    10. '```' → logprob: -17.3750057220459

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4290068447589874
    2. '[u' → logprob: -1.054006814956665
    3. '[v' → logprob: -8.679006576538086
    4. '[' → logprob: -9.679006576538086
    5. 'u' → logprob: -10.929006576538086
    6. ']' → logprob: -11.179006576538086
    7. '}[' → logprob: -11.304006576538086
    8. ')[' → logprob: -11.929006576538086
    9. ']][' → logprob: -11.929006576538086
    10. ' ][' → logprob: -12.804006576538086

Token 176: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.531315314830863e-06
    2. 'u' → logprob: -13.250003814697266
    3. '[v' → logprob: -14.125003814697266
    4. ' v' → logprob: -14.625003814697266
    5. '][' → logprob: -15.000003814697266
    6. '	v' → logprob: -15.750003814697266
    7. ')v' → logprob: -16.375003814697266
    8. ']' → logprob: -19.000003814697266
    9. ',v' → logprob: -19.000003814697266
    10. '(v' → logprob: -19.250003814697266

Token 177: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3484991192817688
    2. '<' → logprob: -1.223499059677124
    3. ')' → logprob: -10.598499298095703
    4. ' ' → logprob: -11.473499298095703
    5. ')<' → logprob: -12.723499298095703
    6. '[' → logprob: -12.973499298095703
    7. '<int' → logprob: -13.098499298095703
    8. '<|end|>' → logprob: -13.223499298095703
    9. ']' → logprob: -13.848499298095703
    10. ',' → logprob: -14.223499298095703

Token 178: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6327294707298279
    2. '<' → logprob: -0.7577294707298279
    3. ' ' → logprob: -9.507729530334473
    4. '<int' → logprob: -11.132729530334473
    5. '<|end|>' → logprob: -12.007729530334473
    6. '[' → logprob: -12.132729530334473
    7. '<size' → logprob: -12.757729530334473
    8. ',' → logprob: -13.195229530334473
    9. '<n' → logprob: -13.320229530334473
    10. '<len' → logprob: -13.382729530334473

Token 179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029751762747764587
    2. ' d' → logprob: -3.529751777648926
    3. '	d' → logprob: -14.654751777648926
    4. '   ' → logprob: -15.029751777648926
    5. ' ' → logprob: -15.154751777648926
    6. '10' → logprob: -15.404751777648926
    7. '  ' → logprob: -17.40475082397461
    8. '
' → logprob: -18.02975082397461
    9. '_d' → logprob: -18.52975082397461
    10. '>d' → logprob: -18.77975082397461

Token 180: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. '[u' → logprob: -14.625000953674316
    3. 'v' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.75
    5. '[' → logprob: -17.75
    6. '```' → logprob: -19.125
    7. '[V' → logprob: -19.75
    8. '<v' → logprob: -20.0
    9. '[j' → logprob: -20.125
    10. '	v' → logprob: -20.125

Token 181: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6598180532455444
    2. ':
' → logprob: -1.7848180532455444
    3. ']:' → logprob: -2.034818172454834
    4. ']:
' → logprob: -2.284818172454834
    5. '                   ' → logprob: -2.909818172454834
    6. '               ' → logprob: -4.659818172454834
    7. '[v' → logprob: -4.784818172454834
    8. ']' → logprob: -5.034818172454834
    9. '):
' → logprob: -6.909818172454834
    10. '           ' → logprob: -7.409818172454834

Token 182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.040276702493429184
    2. ':
' → logprob: -3.6652767658233643
    3. ':' → logprob: -4.790276527404785
    4. '               ' → logprob: -5.665276527404785
    5. ' :
' → logprob: -7.040276527404785
    6. '           ' → logprob: -8.290276527404785
    7. 'd' → logprob: -8.290276527404785
    8. ' d' → logprob: -9.040276527404785
    9. '):
' → logprob: -9.165276527404785
    10. '                       ' → logprob: -9.290276527404785

Token 183: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.035182271152734756
    2. 'd' (adapté à ' d') → logprob: -3.410182237625122
    3. '                   ' → logprob: -6.660182476043701
    4. '                       ' → logprob: -8.410181999206543
    5. '                    ' → logprob: -11.535181999206543
    6. ' ' → logprob: -12.660181999206543
    7. '               ' → logprob: -12.910181999206543
    8. '   ' → logprob: -13.035181999206543
    9. '```' → logprob: -13.535181999206543
    10. '       ' → logprob: -13.660181999206543

Token 184: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2664456789934775e-06
    2. '[u' → logprob: -14.500000953674316
    3. '[' → logprob: -15.125000953674316
    4. 'v' → logprob: -15.625000953674316
    5. '[val' → logprob: -16.875001907348633
    6. '[var' → logprob: -17.250001907348633
    7. '[value' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. ' [' → logprob: -18.500001907348633
    10. '[V' → logprob: -18.875001907348633

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034929390996694565
    2. '=' → logprob: -4.034929275512695
    3. ']=' → logprob: -4.284929275512695
    4. ' =' → logprob: -6.034929275512695
    5. '[v' → logprob: -8.159929275512695
    6. ')' → logprob: -9.534929275512695
    7. '[' → logprob: -10.409929275512695
    8. '<|end|>' → logprob: -10.409929275512695
    9. '[u' → logprob: -10.784929275512695
    10. ' ]' → logprob: -11.909929275512695

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132646679878235
    2. ' =' → logprob: -1.3132646083831787
    3. '[' → logprob: -14.438264846801758
    4. '=v' → logprob: -14.688264846801758
    5. '<|end|>' → logprob: -14.813264846801758
    6. '=a' → logprob: -15.313264846801758
    7. ',' → logprob: -15.438264846801758
    8. '=
' → logprob: -15.813264846801758
    9. '   ' → logprob: -15.813264846801758
    10. ')' → logprob: -15.938264846801758

Token 187: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759532451629639
    2. ' a' → logprob: -0.8259532451629639
    3. '                   ' → logprob: -11.325953483581543
    4. '	a' → logprob: -14.450953483581543
    5. '   ' → logprob: -14.950953483581543
    6. ' ' → logprob: -15.200953483581543
    7. '    ' → logprob: -15.825953483581543
    8. '                    ' → logprob: -15.950953483581543
    9. '                       ' → logprob: -15.950953483581543
    10. '                           ' → logprob: -16.700952529907227

Token 188: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.7848862373502925e-05
    2. 'u' → logprob: -10.625027656555176
    3. '[' → logprob: -13.250027656555176
    4. '[v' → logprob: -13.500027656555176
    5. '	u' → logprob: -16.375028610229492
    6. '[a' → logprob: -16.375028610229492
    7. '```' → logprob: -16.875028610229492
    8. '<u' → logprob: -17.500028610229492
    9. '][' → logprob: -18.125028610229492
    10. '[
' → logprob: -18.375028610229492

Token 189: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.17985565960407257
    2. '[u' → logprob: -1.8048557043075562
    3. 'u' → logprob: -10.054855346679688
    4. '[v' → logprob: -10.554855346679688
    5. ']' → logprob: -11.179855346679688
    6. '[' → logprob: -11.679855346679688
    7. ' ][' → logprob: -12.304855346679688
    8. ']][' → logprob: -13.054855346679688
    9. '}[' → logprob: -13.179855346679688
    10. '```' → logprob: -13.179855346679688

Token 190: 'v' (ID: 85)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.251956969499588
    2. 'v' → logprob: -1.5019569396972656
    3. '[u' → logprob: -10.626956939697266
    4. ' u' → logprob: -13.251956939697266
    5. '[v' → logprob: -14.876956939697266
    6. ' v' → logprob: -15.126956939697266
    7. '	u' → logprob: -15.376956939697266
    8. '```' → logprob: -15.376956939697266
    9. ']' → logprob: -15.501956939697266
    10. 'uv' → logprob: -15.876956939697266

Token 191: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003460848471149802
    2. ')' → logprob: -6.503460884094238
    3. '<|end|>' → logprob: -7.628460884094238
    4. '           ' → logprob: -7.878460884094238
    5. '               ' → logprob: -8.128460884094238
    6. ')
' → logprob: -8.253460884094238
    7. '       ' → logprob: -8.503460884094238
    8. '
' → logprob: -9.128460884094238
    9. '                       ' → logprob: -9.753460884094238
    10. '   ' → logprob: -10.003460884094238

Token 192: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05778208374977112
    2. ' p' → logprob: -3.0577821731567383
    3. 'p' → logprob: -4.932782173156738
    4. '
' → logprob: -7.557782173156738
    5. '   ' → logprob: -7.932782173156738
    6. '       ' → logprob: -8.432782173156738
    7. '           ' → logprob: -8.432782173156738
    8. '               ' → logprob: -8.557782173156738
    9. '                       ' → logprob: -9.182782173156738
    10. '                    
' → logprob: -9.182782173156738

Token 193: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0009144435753114522
    2. ' p' → logprob: -7.000914573669434
    3. '                   ' → logprob: -12.875914573669434
    4. '   ' → logprob: -16.000913619995117
    5. '                       ' → logprob: -16.750913619995117
    6. '```' → logprob: -17.125913619995117
    7. '               ' → logprob: -17.500913619995117
    8. ' ' → logprob: -18.000913619995117
    9. '           ' → logprob: -18.125913619995117
    10. '       ' → logprob: -19.000913619995117

Token 194: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. '[u' → logprob: -13.625001907348633
    3. 'v' → logprob: -14.875001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[p' → logprob: -17.875001907348633
    6. '```' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '[val' → logprob: -19.250001907348633
    9. '[V' → logprob: -19.875001907348633
    10. '=v' → logprob: -20.125001907348633

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025132352020591497
    2. ']=' → logprob: -6.002513408660889
    3. '=' → logprob: -10.37751293182373
    4. '[u' → logprob: -12.75251293182373
    5. ' ]' → logprob: -12.87751293182373
    6. ')' → logprob: -15.00251293182373
    7. ' =' → logprob: -15.75251293182373
    8. ']
' → logprob: -15.87751293182373
    9. '[v' → logprob: -16.002513885498047
    10. ']==' → logprob: -16.627513885498047

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014182545244693756
    2. ' =' → logprob: -4.2641825675964355
    3. '=u' → logprob: -11.139182090759277
    4. '=v' → logprob: -12.514182090759277
    5. '=
' → logprob: -15.764182090759277
    6. '=s' → logprob: -15.889182090759277
    7. '<|end|>' → logprob: -15.889182090759277
    8. '＝' → logprob: -16.139183044433594
    9. '=user' → logprob: -16.139183044433594
    10. ')' → logprob: -17.264183044433594

Token 197: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0004306692280806601
    2. ' u' → logprob: -7.750430583953857
    3. '	u' → logprob: -17.000431060791016
    4. '[u' → logprob: -18.375431060791016
    5. ''u' → logprob: -18.750431060791016
    6. '   ' → logprob: -20.125431060791016
    7. '<u' → logprob: -20.375431060791016
    8. '*u' → logprob: -20.750431060791016
    9. '```' → logprob: -21.000431060791016
    10. 'у' → logprob: -21.375431060791016

Token 198: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1114320456981659
    2. '<|end|>' → logprob: -2.8614320755004883
    3. 'return' → logprob: -3.1114320755004883
    4. ' return' → logprob: -6.111432075500488
    5. '	return' → logprob: -7.111432075500488
    6. '       ' → logprob: -8.486432075500488
    7. '<|end|>' → logprob: -9.361432075500488
    8. '    
' → logprob: -9.361432075500488
    9. '```' → logprob: -9.861432075500488
    10. ':return' → logprob: -9.861432075500488

Token 200: ' color' (ID: 3089)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2471589798224159e-05
    2. '['' → logprob: -12.000012397766113
    3. '[u' → logprob: -12.500012397766113
    4. '[' → logprob: -13.375012397766113
    5. 'v' → logprob: -14.625012397766113
    6. '[V' → logprob: -15.375012397766113
    7. '[p' → logprob: -16.00001335144043
    8. '	v' → logprob: -17.12501335144043
    9. '```' → logprob: -17.87501335144043
    10. '=v' → logprob: -18.00001335144043

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001232730457559228
    2. '=' → logprob: -7.251232624053955
    3. ']=' → logprob: -7.626232624053955
    4. '']' → logprob: -10.626233100891113
    5. '[' → logprob: -12.501233100891113
    6. ']='' → logprob: -13.251233100891113
    7. ' =' → logprob: -13.501233100891113
    8. ''' → logprob: -13.751233100891113
    9. ' ]' → logprob: -14.501233100891113
    10. ']
' → logprob: -14.876233100891113

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009117019944824278
    2. ' =' → logprob: -7.000911712646484
    3. '='' → logprob: -15.625911712646484
    4. ' ='' → logprob: -18.625911712646484
    5. '＝' → logprob: -18.875911712646484
    6. '=

' → logprob: -18.875911712646484
    7. '=
' → logprob: -19.000911712646484
    8. ']' → logprob: -19.000911712646484
    9. ')' → logprob: -19.375911712646484
    10. '[' → logprob: -19.375911712646484

Token 204: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004011177225038409
    2. ''g' → logprob: -8.750401496887207
    3. 'gray' → logprob: -9.250401496887207
    4. '"' → logprob: -10.125401496887207
    5. ''s' → logprob: -10.625401496887207
    6. '   ' → logprob: -10.750401496887207
    7. ' '' → logprob: -11.000401496887207
    8. ' ' → logprob: -11.375401496887207
    9. ''t' → logprob: -12.000401496887207
    10. 'grey' → logprob: -12.375401496887207

Token 205: 'gray' (ID: 43222)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20893794298171997
    2. 'gray' → logprob: -1.7089378833770752
    3. 'grey' → logprob: -4.958938121795654
    4. ''s' → logprob: -8.583937644958496
    5. ''t' → logprob: -9.458937644958496
    6. ''g' → logprob: -9.583937644958496
    7. '"' → logprob: -10.208937644958496
    8. ''d' → logprob: -10.708937644958496
    9. ''y' → logprob: -10.833937644958496
    10. ''b' → logprob: -11.833937644958496

Token 206: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05429915711283684
    2. '<|end|>' → logprob: -3.3042991161346436
    3. 'return' → logprob: -4.679299354553223
    4. '
' → logprob: -6.054299354553223
    5. ' return' → logprob: -6.429299354553223
    6. ')' → logprob: -6.429299354553223
    7. '	return' → logprob: -7.804299354553223
    8. '    
' → logprob: -8.304299354553223
    9. '       ' → logprob: -9.304299354553223
    10. '<|end|>' → logprob: -9.429299354553223

Token 208: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4807986915111542
    2. '   ' → logprob: -0.9807987213134766
    3. ' return' → logprob: -5.855798721313477
    4. ')' → logprob: -6.605798721313477
    5. 'for' → logprob: -7.355798721313477
    6. '
' → logprob: -7.605798721313477
    7. '    
' → logprob: -8.230798721313477
    8. '<|end|>' → logprob: -8.230798721313477
    9. 'sum' → logprob: -8.980798721313477
    10. '       ' → logprob: -9.105798721313477

Token 209: ' sum' (ID: 4215)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.14222222566604614
    2. 'sum' → logprob: -2.6422221660614014
    3. '(' → logprob: -2.8922221660614014
    4. '('' → logprob: -6.0172224044799805
    5. ' sum' → logprob: -7.0172224044799805
    6. '(s' → logprob: -7.5172224044799805
    7. '(max' → logprob: -7.5172224044799805
    8. ' (' → logprob: -7.6422224044799805
    9. '(min' → logprob: -8.26722240447998
    10. '(p' → logprob: -8.64222240447998

Token 210: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5165761709213257
    2. '(' → logprob: -1.0165761709213257
    3. '(p' → logprob: -3.3915762901306152
    4. '([' → logprob: -4.891576290130615
    5. '((' → logprob: -8.891575813293457
    6. '(
' → logprob: -9.141575813293457
    7. ' (' → logprob: -9.516575813293457
    8. '(s' → logprob: -9.891575813293457
    9. '(i' → logprob: -10.766575813293457
    10. '(D' → logprob: -12.016575813293457

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ' )' → logprob: -11.750011444091797
    3. '()' → logprob: -13.625011444091797
    4. '())' → logprob: -14.250011444091797
    5. '))' → logprob: -14.375011444091797
    6. '[' → logprob: -14.625011444091797
    7. ']' → logprob: -14.875011444091797
    8. ')
' → logprob: -15.500011444091797
    9. '   ' → logprob: -15.500011444091797
    10. '])' → logprob: -16.000011444091797

Token 212: 'prim' (ID: 16697)
  Prédit: 'prim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prim' → logprob: -0.035923514515161514
    2. 'n' → logprob: -3.910923480987549
    3. '<|end|>' → logprob: -5.285923480987549
    4. 'print' → logprob: -5.410923480987549
    5. '
' → logprob: -5.660923480987549
    6. '(n' → logprob: -6.660923480987549
    7. '#' → logprob: -8.410923957824707
    8. ' prim' → logprob: -8.410923957824707
    9. '```' → logprob: -9.285923957824707
    10. '(' → logprob: -9.910923957824707

Token 213: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023254329338669777
    2. '(' → logprob: -3.77325439453125
    3. '((' → logprob: -12.89825439453125
    4. '(n' → logprob: -12.89825439453125
    5. '(
' → logprob: -13.64825439453125
    6. ' (' → logprob: -14.39825439453125
    7. '(ai' → logprob: -14.64825439453125
    8. '("("' → logprob: -14.77325439453125
    9. '(`' → logprob: -15.02325439453125
    10. '(A' → logprob: -15.52325439453125

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.911954500945285e-05
    2. '())' → logprob: -9.375088691711426
    3. ' )' → logprob: -13.125088691711426
    4. '()' → logprob: -13.750088691711426
    5. '))' → logprob: -14.375088691711426
    6. ')`' → logprob: -15.375088691711426
    7. '(' → logprob: -15.625088691711426
    8. ')}' → logprob: -16.875089645385742
    9. ')**' → logprob: -17.250089645385742
    10. '[])' → logprob: -17.750089645385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 212
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 103
Tokens correctement prédits (top 10): 187
Précision stricte (1ère position): 45.75%
Précision adaptée (1ère position): 48.58%
Précision (top 10): 88.21%
================================================================================
