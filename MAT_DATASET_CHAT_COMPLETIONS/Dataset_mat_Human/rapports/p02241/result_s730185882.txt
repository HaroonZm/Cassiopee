================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
matrix=[list(map(int,input().split())) for _ in range(n)]
weight=[]
for x in range(n):
    for y in range(x,n):
        if matrix[x][y]>=0: weight.append((x,y,matrix[x][y]))
weight.sort(key=lambda x:x[2])
ans=0
p=[i for i in range(n)]

def root(x):
    path_to_root=[]
    while p[x]!=x:
        path_to_root.append(x)
        x=p[x]
    for node in path_to_root:
        p[node]=x
    return x
    
def is_same_set(x,y):
    return root(x)==root(y)
    
def unite(x,y):
    p[root(x)]=root(y)
        
for x,y,w in weight:
    if not is_same_set(x,y):
        unite(x,y)
        ans+=w
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'matrix' (ID: 37307)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5210232734680176
    2. '+' → logprob: -1.5210232734680176
    3. '#' → logprob: -2.0210232734680176
    4. ')' → logprob: -2.1460232734680176
    5. ' ' → logprob: -2.3960232734680176
    6. ''' → logprob: -2.7710232734680176
    7. 'i' → logprob: -3.0210232734680176
    8. 's' → logprob: -3.8960232734680176
    9. 'a' → logprob: -4.521023273468018
    10. '\n' → logprob: -4.521023273468018

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011069540778407827
    2. '\[' → logprob: -9.750110626220703
    3. '[
' → logprob: -10.875110626220703
    4. '.' → logprob: -11.250110626220703
    5. 's' → logprob: -12.875110626220703
    6. '[m' → logprob: -13.000110626220703
    7. '[n' → logprob: -13.125110626220703
    8. '[:]' → logprob: -13.500110626220703
    9. '[]' → logprob: -13.625110626220703
    10. '[int' → logprob: -13.625110626220703

Token 6: 'list' (ID: 2641)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.30918246507644653
    2. '[' → logprob: -2.0591824054718018
    3. 'list' → logprob: -2.0591824054718018
    4. '[list' → logprob: -4.934182643890381
    5. ']' → logprob: -6.559182643890381
    6. '[int' → logprob: -7.184182643890381
    7. ' list' → logprob: -7.309182643890381
    8. '[input' → logprob: -7.434182643890381
    9. ' []' → logprob: -9.559182167053223
    10. '[List' → logprob: -9.684182167053223

Token 7: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005658451933413744
    2. '(' → logprob: -5.2556586265563965
    3. '(input' → logprob: -8.005658149719238
    4. '(int' → logprob: -9.380658149719238
    5. ' map' → logprob: -13.255658149719238
    6. '(range' → logprob: -13.630658149719238
    7. '(eval' → logprob: -13.880658149719238
    8. 'map' → logprob: -14.130658149719238
    9. '()' → logprob: -14.630658149719238
    10. '(
' → logprob: -14.630658149719238

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014380916021764278
    2. '(' → logprob: -4.264380931854248
    3. '(str' → logprob: -9.76438045501709
    4. '(lambda' → logprob: -10.01438045501709
    5. '(input' → logprob: -10.13938045501709
    6. '(
' → logprob: -10.88938045501709
    7. '[int' → logprob: -11.13938045501709
    8. 'int' → logprob: -11.26438045501709
    9. '=int' → logprob: -11.38938045501709
    10. '<int' → logprob: -11.38938045501709

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024452158249914646
    2. '(' → logprob: -6.377445220947266
    3. ')' → logprob: -7.877445220947266
    4. ',input' → logprob: -9.127445220947266
    5. '=input' → logprob: -9.252445220947266
    6. '))' → logprob: -9.877445220947266
    7. 'input' → logprob: -9.877445220947266
    8. '(int' → logprob: -11.377445220947266
    9. '<|end|>' → logprob: -11.877445220947266
    10. '[input' → logprob: -12.252445220947266

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029843561351299286
    2. '()' → logprob: -6.502984523773193
    3. '()))' → logprob: -6.627984523773193
    4. '())' → logprob: -9.252984046936035
    5. '()));' → logprob: -10.877984046936035
    6. '())))' → logprob: -11.252984046936035
    7. ')' → logprob: -12.002984046936035
    8. '(' → logprob: -12.127984046936035
    9. '))' → logprob: -12.377984046936035
    10. '()-' → logprob: -12.627984046936035

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019650737522169948
    2. 'strip' → logprob: -8.75019645690918
    3. 'rstrip' → logprob: -10.25019645690918
    4. ' split' → logprob: -13.00019645690918
    5. '(split' → logprob: -15.12519645690918
    6. 'spl' → logprob: -16.50019645690918
    7. ')' → logprob: -17.62519645690918
    8. ' ' → logprob: -18.62519645690918
    9. '.split' → logprob: -19.00019645690918
    10. 'replace' → logprob: -19.50019645690918

Token 12: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.035569123923778534
    2. '())' → logprob: -3.785569190979004
    3. '('' → logprob: -4.785569190979004
    4. '()' → logprob: -6.410569190979004
    5. '(' → logprob: -6.660569190979004
    6. '))' → logprob: -7.535569190979004
    7. '())))' → logprob: -8.160569190979004
    8. '(','' → logprob: -9.660569190979004
    9. ''))' → logprob: -10.910569190979004
    10. '()));' → logprob: -11.160569190979004

Token 13: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3974323868751526
    2. ')]' → logprob: -1.1474323272705078
    3. ']' → logprob: -5.397432327270508
    4. '())' → logprob: -6.772432327270508
    5. ')])' → logprob: -6.897432327270508
    6. '[' → logprob: -7.022432327270508
    7. '])' → logprob: -7.147432327270508
    8. 'for' → logprob: -7.522432327270508
    9. '))' → logprob: -7.647432327270508
    10. '()]' → logprob: -8.147432327270508

Token 14: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017602674197405577
    2. '(range' → logprob: -7.376760482788086
    3. '_' → logprob: -7.626760482788086
    4. 'range' → logprob: -8.126760482788086
    5. '_range' → logprob: -8.876760482788086
    6. ' _' → logprob: -9.001760482788086
    7. ' i' → logprob: -10.251760482788086
    8. ' ' → logprob: -10.501760482788086
    9. '	range' → logprob: -11.001760482788086
    10. '(' → logprob: -12.751760482788086

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014485955238342285
    2. 'in' → logprob: -4.264485836029053
    3. '<|end|>' → logprob: -9.014486312866211
    4. ' ' → logprob: -9.139486312866211
    5. 'range' → logprob: -9.764486312866211
    6. '<|end|>' → logprob: -12.264486312866211
    7. 'I' → logprob: -12.389486312866211
    8. ' range' → logprob: -12.639486312866211
    9. '	in' → logprob: -12.764486312866211
    10. 'i' → logprob: -12.764486312866211

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -18.500059127807617
    4. '```' → logprob: -19.375059127807617
    5. 'rang' → logprob: -19.375059127807617
    6. '	range' → logprob: -19.625059127807617
    7. 'r' → logprob: -19.625059127807617
    8. 'ran' → logprob: -20.250059127807617
    9. 'row' → logprob: -20.500059127807617
    10. '_range' → logprob: -20.875059127807617

Token 17: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. 'n' → logprob: -14.375554084777832
    4. ')n' → logprob: -17.000553131103516
    5. ' (' → logprob: -17.250553131103516
    6. '(len' → logprob: -17.500553131103516
    7. '(
' → logprob: -17.625553131103516
    8. ')' → logprob: -18.000553131103516
    9. '(N' → logprob: -18.250553131103516
    10. ' n' → logprob: -19.125553131103516

Token 18: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000239536224398762
    2. ')])' → logprob: -9.000239372253418
    3. ')' → logprob: -9.375239372253418
    4. '])]' → logprob: -11.250239372253418
    5. '))' → logprob: -11.875239372253418
    6. ']' → logprob: -12.375239372253418
    7. '])' → logprob: -13.250239372253418
    8. '')]' → logprob: -13.250239372253418
    9. ' )' → logprob: -13.875239372253418
    10. ')]
' → logprob: -14.750239372253418

Token 19: 'weight' (ID: 8250)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4620300531387329
    2. 'm' → logprob: -1.462030053138733
    3. 'for' → logprob: -3.0870299339294434
    4. 'c' → logprob: -3.8370299339294434
    5. 'sum' → logprob: -4.087029933929443
    6. 'r' → logprob: -4.212029933929443
    7. '
' → logprob: -4.587029933929443
    8. 'd' → logprob: -5.462029933929443
    9. 'max' → logprob: -5.462029933929443
    10. 'count' → logprob: -5.837029933929443

Token 20: '=[]
' (ID: 63466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0969797670841217
    2. '[' → logprob: -3.221979856491089
    3. '_' → logprob: -3.221979856491089
    4. '(' → logprob: -4.84697961807251
    5. '_s' → logprob: -5.59697961807251
    6. '=' → logprob: -7.47197961807251
    7. '_matrix' → logprob: -9.221980094909668
    8. '[s' → logprob: -9.346980094909668
    9. '_sum' → logprob: -9.721980094909668
    10. '[(' → logprob: -9.971980094909668

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004817780572921038
    2. '(' → logprob: -5.504817962646484
    3. ' for' → logprob: -7.879817962646484
    4. '[' → logprob: -8.504817962646484
    5. '=' → logprob: -10.254817962646484
    6. '_' → logprob: -10.754817962646484
    7. '<|end|>' → logprob: -10.879817962646484
    8. '(for' → logprob: -11.004817962646484
    9. ')' → logprob: -11.629817962646484
    10. '.for' → logprob: -11.879817962646484

Token 22: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006762025412172079
    2. 'i' → logprob: -5.8817620277404785
    3. ' _' → logprob: -5.8817620277404785
    4. '_' → logprob: -7.1317620277404785
    5. ' ' → logprob: -8.00676155090332
    6. '_i' → logprob: -11.50676155090332
    7. ' ' → logprob: -12.38176155090332
    8. ' r' → logprob: -12.63176155090332
    9. ' range' → logprob: -12.88176155090332
    10. ' row' → logprob: -13.00676155090332

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06212083250284195
    2. 'in' → logprob: -2.8121209144592285
    3. ' ' → logprob: -9.31212043762207
    4. '  ' → logprob: -11.43712043762207
    5. 'n' → logprob: -11.68712043762207
    6. '	in' → logprob: -11.93712043762207
    7. 'range' → logprob: -12.06212043762207
    8. '_' → logprob: -12.18712043762207
    9. '_in' → logprob: -12.43712043762207
    10. 's' → logprob: -12.43712043762207

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.059282336384058
    2. 'range' → logprob: -2.9342823028564453
    3. ' matrix' → logprob: -5.684282302856445
    4. 'matrix' → logprob: -6.934282302856445
    5. '(range' → logprob: -11.934282302856445
    6. ' weight' → logprob: -12.434282302856445
    7. ' xrange' → logprob: -13.059282302856445
    8. '	range' → logprob: -13.684282302856445
    9. '[' → logprob: -14.184282302856445
    10. 'weight' → logprob: -14.434282302856445

Token 25: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10021239519119263
    2. '(' → logprob: -2.350212335586548
    3. ' (' → logprob: -12.475212097167969
    4. '(len' → logprob: -13.850212097167969
    5. '(range' → logprob: -15.350212097167969
    6. '(s' → logprob: -15.475212097167969
    7. '(x' → logprob: -16.47521209716797
    8. '(nx' → logprob: -16.72521209716797
    9. '(space' → logprob: -16.72521209716797
    10. '()' → logprob: -16.97521209716797

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012785687576979399
    2. ')' → logprob: -7.376278400421143
    3. '):
' → logprob: -7.501278400421143
    4. ' ):' → logprob: -10.1262788772583
    5. '-' → logprob: -10.5012788772583
    6. '+' → logprob: -11.1262788772583
    7. ':' → logprob: -11.2512788772583
    8. ']:' → logprob: -14.2512788772583
    9. ' ' → logprob: -14.7512788772583
    10. '   ' → logprob: -15.0012788772583

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4282481074333191
    2. ' for' → logprob: -1.3032481670379639
    3. ' ' → logprob: -3.678248167037964
    4. ' weight' → logprob: -3.803248167037964
    5. '	for' → logprob: -4.303247928619385
    6. 'for' → logprob: -5.053247928619385
    7. '    ' → logprob: -5.678247928619385
    8. 'weight' → logprob: -6.803247928619385
    9. '\t' → logprob: -7.428247928619385
    10. '	' → logprob: -7.553247928619385

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06363867968320847
    2. ' range' → logprob: -3.188638687133789
    3. 'for' (adapté à ' for') → logprob: -4.188638687133789
    4. '   ' → logprob: -5.813638687133789
    5. ' weight' → logprob: -6.438638687133789
    6. 'range' → logprob: -7.938638687133789
    7. ' ' → logprob: -8.688638687133789
    8. '    ' → logprob: -9.688638687133789
    9. ' sum' → logprob: -10.438638687133789
    10. ' row' → logprob: -10.688638687133789

Token 29: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.26923713088035583
    2. ' range' → logprob: -1.8942371606826782
    3. ' n' → logprob: -2.6442370414733887
    4. 'range' → logprob: -4.644237041473389
    5. 'y' → logprob: -5.894237041473389
    6. 'n' → logprob: -6.519237041473389
    7. ' ' → logprob: -7.644237041473389
    8. ' x' → logprob: -9.394237518310547
    9. '_range' → logprob: -11.269237518310547
    10. ' j' → logprob: -11.269237518310547

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011527097783982754
    2. 'in' → logprob: -4.511527061462402
    3. ' ' → logprob: -8.136527061462402
    4. '(' → logprob: -9.011527061462402
    5. ' (' → logprob: -10.886527061462402
    6. '   ' → logprob: -11.511527061462402
    7. '  ' → logprob: -12.136527061462402
    8. '+' → logprob: -12.136527061462402
    9. '    ' → logprob: -12.261527061462402
    10. '(n' → logprob: -12.386527061462402

Token 31: ' range' (ID: 3352)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023040130734443665
    2. '(' → logprob: -4.648040294647217
    3. 'n' → logprob: -4.773040294647217
    4. ' n' → logprob: -5.523040294647217
    5. ' range' → logprob: -7.773040294647217
    6. ' (' → logprob: -8.898039817810059
    7. '(range' → logprob: -9.148039817810059
    8. 'range' → logprob: -9.648039817810059
    9. '(x' → logprob: -11.648039817810059
    10. ')' → logprob: -12.523039817810059

Token 32: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02326982282102108
    2. '(' → logprob: -3.7732698917388916
    3. ' (' → logprob: -11.273269653320312
    4. '(range' → logprob: -11.523269653320312
    5. '(s' → logprob: -14.023269653320312
    6. '(y' → logprob: -15.648269653320312
    7. 'n' → logprob: -15.898269653320312
    8. '(x' → logprob: -16.273269653320312
    9. ' range' → logprob: -16.273269653320312
    10. '(
' → logprob: -16.398269653320312

Token 33: ',n' (ID: 18103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017012449679896235
    2. '+)' → logprob: -7.001701354980469
    3. ' +' → logprob: -7.376701354980469
    4. ')' → logprob: -9.376701354980469
    5. '+y' → logprob: -9.876701354980469
    6. ',' → logprob: -11.626701354980469
    7. '+
' → logprob: -12.001701354980469
    8. '+,' → logprob: -13.001701354980469
    9. '1' → logprob: -13.376701354980469
    10. 'y' → logprob: -13.376701354980469

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008717989549040794
    2. ')' → logprob: -4.758718013763428
    3. '+' → logprob: -9.75871753692627
    4. ':' → logprob: -10.13371753692627
    5. ',' → logprob: -13.00871753692627
    6. '):
' → logprob: -13.75871753692627
    7. ' ):' → logprob: -14.25871753692627
    8. ')：' → logprob: -14.88371753692627
    9. '(' → logprob: -15.38371753692627
    10. ')):' → logprob: -15.63371753692627

Token 35: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9144423604011536
    2. '       ' → logprob: -1.2894423007965088
    3. '   ' → logprob: -1.7894423007965088
    4. ' ' → logprob: -3.414442300796509
    5. ' :' → logprob: -3.539442300796509
    6. '    ' → logprob: -3.789442300796509
    7. '[' → logprob: -3.789442300796509
    8. ' if' → logprob: -4.039442539215088
    9. ')' → logprob: -5.664442539215088
    10. '):' → logprob: -5.664442539215088

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20962625741958618
    2. ' weight' → logprob: -2.9596261978149414
    3. 'if' (adapté à ' if') → logprob: -2.9596261978149414
    4. 'weight' → logprob: -3.4596261978149414
    5. '       ' → logprob: -4.084626197814941
    6. '   ' → logprob: -4.709626197814941
    7. '           ' → logprob: -4.959626197814941
    8. ' ' → logprob: -5.209626197814941
    9. ' 
' → logprob: -5.834626197814941
    10. ' (' → logprob: -6.084626197814941

Token 37: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.14615194499492645
    2. ' x' → logprob: -2.2711520195007324
    3. 'matrix' → logprob: -3.6461520195007324
    4. 'x' → logprob: -5.021152019500732
    5. ' weight' → logprob: -10.896151542663574
    6. '	matrix' → logprob: -10.896151542663574
    7. ' not' → logprob: -11.146151542663574
    8. '(matrix' → logprob: -11.396151542663574
    9. ' y' → logprob: -11.896151542663574
    10. ' (' → logprob: -12.271151542663574

Token 38: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0009947025682777166
    2. '[' → logprob: -7.125994682312012
    3. '[y' → logprob: -8.625994682312012
    4. '[i' → logprob: -13.000994682312012
    5. '\[' → logprob: -13.250994682312012
    6. '[j' → logprob: -14.250994682312012
    7. ' [' → logprob: -14.375994682312012
    8. '[u' → logprob: -14.500994682312012
    9. '[z' → logprob: -14.625994682312012
    10. '[s' → logprob: -14.625994682312012

Token 39: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18293002247810364
    2. '[x' → logprob: -1.9329299926757812
    3. '[' → logprob: -3.9329299926757812
    4. '[y' → logprob: -6.432929992675781
    5. ']' → logprob: -7.182929992675781
    6. ']==' → logprob: -8.932929992675781
    7. '==' → logprob: -9.307929992675781
    8. '[I' → logprob: -10.307929992675781
    9. '!=' → logprob: -10.557929992675781
    10. '[
' → logprob: -10.807929992675781

Token 40: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.061054359131958e-06
    2. 'x' → logprob: -11.875007629394531
    3. ']' → logprob: -14.500007629394531
    4. ' y' → logprob: -14.750007629394531
    5. '][' → logprob: -16.62500762939453
    6. '	y' → logprob: -16.87500762939453
    7. ''y' → logprob: -18.00000762939453
    8. '```' → logprob: -18.75000762939453
    9. '_y' → logprob: -18.87500762939453
    10. 'z' → logprob: -18.87500762939453

Token 41: ']>=' (ID: 185954)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18284086883068085
    2. ' ]' → logprob: -2.6828408241271973
    3. ']==' → logprob: -2.9328408241271973
    4. ']>' → logprob: -3.4328408241271973
    5. ']!=' → logprob: -5.682840824127197
    6. ']>=' → logprob: -5.807840824127197
    7. '==' → logprob: -6.307840824127197
    8. '[' → logprob: -6.557840824127197
    9. ' ==' → logprob: -7.057840824127197
    10. '>' → logprob: -7.182840824127197

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5388620495796204
    2. 'matrix' → logprob: -0.9138620495796204
    3. '1' → logprob: -4.413862228393555
    4. ' matrix' → logprob: -6.413862228393555
    5. ' ' → logprob: -7.538862228393555
    6. '2' → logprob: -7.913862228393555
    7. 'weight' → logprob: -8.538862228393555
    8. '5' → logprob: -9.163862228393555
    9. '(matrix' → logprob: -9.538862228393555
    10. '	matrix' → logprob: -9.538862228393555

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015344456769526005
    2. ' :' → logprob: -5.140344619750977
    3. ' and' → logprob: -5.265344619750977
    4. '           ' → logprob: -5.640344619750977
    5. '):' → logprob: -8.140344619750977
    6. ':
' → logprob: -9.765344619750977
    7. '            ' → logprob: -9.890344619750977
    8. 'and' → logprob: -10.015344619750977
    9. '       ' → logprob: -10.265344619750977
    10. '          ' → logprob: -10.265344619750977

Token 44: ' weight' (ID: 6049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007921624928712845
    2. ' weight' → logprob: -5.8829216957092285
    3. '               ' → logprob: -6.0079216957092285
    4. 'weight' → logprob: -6.8829216957092285
    5. '            ' → logprob: -7.8829216957092285
    6. '            
' → logprob: -8.00792121887207
    7. '          ' → logprob: -8.13292121887207
    8. '       ' → logprob: -9.25792121887207
    9. ' 
' → logprob: -9.75792121887207
    10. ' ' → logprob: -9.75792121887207

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009840256534516811
    2. '.' → logprob: -4.634840488433838
    3. '.extend' → logprob: -10.50984001159668
    4. '[' → logprob: -10.75984001159668
    5. '.setdefault' → logprob: -10.88484001159668
    6. ' .' → logprob: -12.50984001159668
    7. '<|end|>' → logprob: -12.50984001159668
    8. 'append' → logprob: -13.25984001159668
    9. '.app' → logprob: -13.50984001159668
    10. '.add' → logprob: -13.75984001159668

Token 46: '((' (ID: 2054)
  Prédit: '(matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.022538481280207634
    2. '(' → logprob: -3.897538423538208
    3. 'matrix' → logprob: -6.272538661956787
    4. '((' → logprob: -9.897538185119629
    5. '(x' → logprob: -10.772538185119629
    6. '(m' → logprob: -11.522538185119629
    7. ' matrix' → logprob: -12.272538185119629
    8. ' (' → logprob: -12.647538185119629
    9. '(
' → logprob: -12.897538185119629
    10. '(y' → logprob: -13.272538185119629

Token 47: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007605443242937326
    2. 'matrix' → logprob: -5.13260555267334
    3. ' x' → logprob: -6.63260555267334
    4. ' matrix' → logprob: -9.00760555267334
    5. '(x' → logprob: -9.00760555267334
    6. 'y' → logprob: -9.75760555267334
    7. 'weight' → logprob: -11.25760555267334
    8. '(matrix' → logprob: -11.63260555267334
    9. '   ' → logprob: -11.75760555267334
    10. ' (' → logprob: -12.50760555267334

Token 48: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20852124691009521
    2. ',y' → logprob: -1.7085212469100952
    3. ' ,' → logprob: -4.958521366119385
    4. ',
' → logprob: -10.583520889282227
    5. ',x' → logprob: -11.833520889282227
    6. ' ' → logprob: -12.083520889282227
    7. ',

' → logprob: -13.083520889282227
    8. ',)' → logprob: -13.083520889282227
    9. ')' → logprob: -13.208520889282227
    10. 'y' → logprob: -13.583520889282227

Token 49: ',m' (ID: 26648)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09986992180347443
    2. ',' → logprob: -2.474869966506958
    3. ')' → logprob: -4.599869728088379
    4. ')))' → logprob: -8.474869728088379
    5. ' ))' → logprob: -8.974869728088379
    6. '))
' → logprob: -9.224869728088379
    7. ',)' → logprob: -9.599869728088379
    8. '),' → logprob: -9.974869728088379
    9. ',y' → logprob: -9.974869728088379
    10. ' ,' → logprob: -10.224869728088379

Token 50: 'atrix' (ID: 5743)
  Prédit: 'atrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -3.7697225252486533e-06
    2. 'atri' → logprob: -12.625003814697266
    3. 'a' → logprob: -15.500003814697266
    4. 'matrix' → logprob: -16.125003814697266
    5. '[' → logprob: -17.750003814697266
    6. 'at' → logprob: -17.875003814697266
    7. 'atriz' → logprob: -18.250003814697266
    8. 'ATRIX' → logprob: -18.750003814697266
    9. '(matrix' → logprob: -19.625003814697266
    10. 'atr' → logprob: -20.375003814697266

Token 51: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.4140441635390744e-05
    2. '[' → logprob: -11.250014305114746
    3. '[
' → logprob: -15.000014305114746
    4. '][' → logprob: -15.375014305114746
    5. ')[' → logprob: -16.00001335144043
    6. ')' → logprob: -16.37501335144043
    7. ' [' → logprob: -16.50001335144043
    8. '[y' → logprob: -16.50001335144043
    9. 'x' → logprob: -17.00001335144043
    10. '(x' → logprob: -17.62501335144043

Token 52: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00042626605136319995
    2. ']' → logprob: -8.500426292419434
    3. ' ][' → logprob: -9.000426292419434
    4. '[x' → logprob: -9.625426292419434
    5. '[y' → logprob: -11.125426292419434
    6. '[' → logprob: -11.375426292419434
    7. '}[' → logprob: -14.000426292419434
    8. ' ' → logprob: -14.250426292419434
    9. '```' → logprob: -14.250426292419434
    10. '"][' → logprob: -14.375426292419434

Token 53: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.796184723294573e-06
    2. ' y' → logprob: -12.375005722045898
    3. '][' → logprob: -14.625005722045898
    4. '])' → logprob: -15.125005722045898
    5. ']' → logprob: -15.250005722045898
    6. '[y' → logprob: -15.625005722045898
    7. 'x' → logprob: -15.750005722045898
    8. '[' → logprob: -16.3750057220459
    9. ')' → logprob: -17.1250057220459
    10. ' ' → logprob: -17.5000057220459

Token 54: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31387174129486084
    2. ')))' → logprob: -1.4388717412948608
    3. ')' → logprob: -3.4388718605041504
    4. '))
' → logprob: -10.688871383666992
    5. '))))' → logprob: -10.813871383666992
    6. ')))
' → logprob: -11.063871383666992
    7. ' ))' → logprob: -11.813871383666992
    8. ']))' → logprob: -12.063871383666992
    9. '),' → logprob: -12.438871383666992
    10. '}))' → logprob: -12.688871383666992

Token 55: 'weight' (ID: 8250)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14069902896881104
    2. '<|end|>' → logprob: -3.1406989097595215
    3. '\n' → logprob: -3.5156989097595215
    4. '
' → logprob: -3.8906989097595215
    5. ' ' → logprob: -5.2656989097595215
    6. '[' → logprob: -5.5156989097595215
    7. '(' → logprob: -5.5156989097595215
    8. ',' → logprob: -5.6406989097595215
    9. '#' → logprob: -5.8906989097595215
    10. '```' → logprob: -6.1406989097595215

Token 56: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21037733554840088
    2. '[' → logprob: -2.4603772163391113
    3. '<|end|>' → logprob: -2.8353772163391113
    4. ')' → logprob: -3.2103772163391113
    5. ']' → logprob: -6.335377216339111
    6. '```' → logprob: -7.085377216339111
    7. '
' → logprob: -8.08537769317627
    8. '#' → logprob: -8.08537769317627
    9. '+' → logprob: -8.21037769317627
    10. '[
' → logprob: -8.33537769317627

Token 57: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010880745016038418
    2. '()' → logprob: -4.635880947113037
    3. '((' → logprob: -7.010880947113037
    4. '(()' → logprob: -9.135880470275879
    5. '(key' → logprob: -10.010880470275879
    6. '("("' → logprob: -11.010880470275879
    7. '(
' → logprob: -11.510880470275879
    8. '```' → logprob: -11.635880470275879
    9. '(

' → logprob: -12.760880470275879
    10. '(reverse' → logprob: -12.760880470275879

Token 58: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011048762127757072
    2. '=' → logprob: -4.511048793792725
    3. 'lambda' → logprob: -14.761048316955566
    4. '=(' → logprob: -15.261048316955566
    5. ')=' → logprob: -16.136049270629883
    6. '=

' → logprob: -16.636049270629883
    7. '=len' → logprob: -17.011049270629883
    8. '=
' → logprob: -17.136049270629883
    9. '(lambda' → logprob: -17.761049270629883
    10. '=}' → logprob: -17.761049270629883

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4385322630405426
    2. ' x' → logprob: -2.3135323524475098
    3. 'w' → logprob: -2.8135323524475098
    4. 't' → logprob: -3.3135323524475098
    5. 'm' → logprob: -3.5635323524475098
    6. ' t' → logprob: -3.5635323524475098
    7. 'e' → logprob: -3.5635323524475098
    8. ' w' → logprob: -3.8135323524475098
    9. 's' → logprob: -4.68853235244751
    10. 'a' → logprob: -4.68853235244751

Token 60: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014463398605585098
    2. ':x' → logprob: -4.264463424682617
    3. ' :' → logprob: -8.389463424682617
    4. 'x' → logprob: -9.764463424682617
    5. '[' → logprob: -11.764463424682617
    6. ':
' → logprob: -13.139463424682617
    7. ' x' → logprob: -13.264463424682617
    8. ':`' → logprob: -14.264463424682617
    9. ' ' → logprob: -15.139463424682617
    10. '1' → logprob: -15.264463424682617

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031400471925735474
    2. '[-' → logprob: -6.378139972686768
    3. '.' → logprob: -7.003139972686768
    4. '3' → logprob: -8.253140449523926
    5. '2' → logprob: -9.003140449523926
    6. ':' → logprob: -10.128140449523926
    7. '-' → logprob: -10.128140449523926
    8. '.[' → logprob: -10.628140449523926
    9. ' [' → logprob: -11.503140449523926
    10. '```' → logprob: -11.628140449523926

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003045994380954653
    2. '-' → logprob: -8.125304222106934
    3. ' ' → logprob: -12.375304222106934
    4. ' -' → logprob: -13.500304222106934
    5. '```' → logprob: -13.500304222106934
    6. '3' → logprob: -15.187804222106934
    7. '   ' → logprob: -15.312804222106934
    8. '1' → logprob: -15.562804222106934
    9. '' → logprob: -15.625304222106934
    10. '``' → logprob: -15.812804222106934

Token 63: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004647876601666212
    2. '))' → logprob: -5.379647731781006
    3. ' )' → logprob: -11.004648208618164
    4. '),' → logprob: -12.879648208618164
    5. ')
' → logprob: -13.129648208618164
    6. ',' → logprob: -13.504648208618164
    7. ')))' → logprob: -14.004648208618164
    8. '])' → logprob: -14.254648208618164
    9. ')#' → logprob: -14.379648208618164
    10. '})' → logprob: -14.504648208618164

Token 64: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7536287903785706
    2. '(' → logprob: -2.003628730773926
    3. '
' → logprob: -2.128628730773926
    4. ')' → logprob: -2.378628730773926
    5. '<|end|>' → logprob: -3.378628730773926
    6. 'n' → logprob: -3.753628730773926
    7. 'w' → logprob: -4.003628730773926
    8. ',
' → logprob: -4.003628730773926
    9. ',' → logprob: -4.003628730773926
    10. '(
' → logprob: -4.378628730773926

Token 65: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20215240120887756
    2. '=' → logprob: -1.7021523714065552
    3. '=[]' → logprob: -7.327152252197266
    4. '={}' → logprob: -10.327152252197266
    5. ',' → logprob: -11.827152252197266
    6. ' =[' → logprob: -12.077152252197266
    7. 's' → logprob: -12.327152252197266
    8. '_=' → logprob: -12.702152252197266
    9. '=[' → logprob: -12.952152252197266
    10. '=int' → logprob: -12.952152252197266

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49705982208251953
    2. '[]' → logprob: -0.9970598220825195
    3. '{}' → logprob: -4.3720598220825195
    4. 'float' → logprob: -5.2470598220825195
    5. '[' → logprob: -6.2470598220825195
    6. '-' → logprob: -6.8720598220825195
    7. '{' → logprob: -7.6220598220825195
    8. 'weight' → logprob: -7.9970598220825195
    9. '[]
' → logprob: -8.37205982208252
    10. '[-' → logprob: -8.49705982208252

Token 67: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18446527421474457
    2. ' for' → logprob: -2.559465169906616
    3. '
' → logprob: -2.934465169906616
    4. ',' → logprob: -4.309465408325195
    5. '<|end|>' → logprob: -4.809465408325195
    6. ',
' → logprob: -5.059465408325195
    7. 'while' → logprob: -6.434465408325195
    8. ' 
' → logprob: -6.559465408325195
    9. ')' → logprob: -6.809465408325195
    10. 'i' → logprob: -7.434465408325195

Token 68: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1092311218380928
    2. 'used' → logprob: -3.1092312335968018
    3. 'parent' → logprob: -3.7342312335968018
    4. 'visited' → logprob: -3.7342312335968018
    5. 'selected' → logprob: -5.484230995178223
    6. 'uf' → logprob: -6.484230995178223
    7. 'i' → logprob: -6.859230995178223
    8. 'u' → logprob: -7.609230995178223
    9. 'dp' → logprob: -7.734230995178223
    10. 'while' → logprob: -7.859230995178223

Token 69: '=[' (ID: 13370)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.00011939727846765891
    2. 'a' → logprob: -10.37511920928955
    3. 'rev' → logprob: -10.50011920928955
    4. 'arr' → logprob: -11.12511920928955
    5. 'r' → logprob: -11.37511920928955
    6. '=' → logprob: -11.75011920928955
    7. 'aren' → logprob: -12.37511920928955
    8. 'are' → logprob: -12.37511920928955
    9. ' =' → logprob: -13.25011920928955
    10. 'ass' → logprob: -13.37511920928955

Token 70: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2023640275001526
    2. '-' → logprob: -1.7023639678955078
    3. '-i' → logprob: -7.327363967895508
    4. ' i' → logprob: -8.827363967895508
    5. '0' → logprob: -9.952363967895508
    6. '_i' → logprob: -10.077363967895508
    7. ' -' → logprob: -11.202363967895508
    8. ']' → logprob: -11.202363967895508
    9. '_' → logprob: -11.702363967895508
    10. '*i' → logprob: -12.577363967895508

Token 71: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4743829369544983
    2. ' for' → logprob: -0.9743829369544983
    3. ']' → logprob: -8.224383354187012
    4. '	for' → logprob: -11.224383354187012
    5. ')' → logprob: -11.474383354187012
    6. ',i' → logprob: -12.724383354187012
    7. ' ' → logprob: -12.974383354187012
    8. ' ]' → logprob: -13.099383354187012
    9. 'i' → logprob: -13.349383354187012
    10. ',' → logprob: -13.724383354187012

Token 72: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00043233807082287967
    2. 'range' → logprob: -7.75043249130249
    3. '(range' → logprob: -13.500432014465332
    4. '	range' → logprob: -16.50043296813965
    5. ' ' → logprob: -16.75043296813965
    6. ' in' → logprob: -17.50043296813965
    7. '_range' → logprob: -18.25043296813965
    8. ' xrange' → logprob: -18.87543296813965
    9. ' i' → logprob: -19.62543296813965
    10. '.range' → logprob: -19.75043296813965

Token 73: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.551608145236969
    2. ' in' → logprob: -1.0516080856323242
    3. 'range' → logprob: -3.176608085632324
    4. 'in' → logprob: -3.426608085632324
    5. ' ' → logprob: -8.301608085632324
    6. '  ' → logprob: -9.676608085632324
    7. '(range' → logprob: -10.301608085632324
    8. '	range' → logprob: -11.051608085632324
    9. ',' → logprob: -12.426608085632324
    10. '_range' → logprob: -12.551608085632324

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.005233764648438
    4. '	range' → logprob: -17.505233764648438
    5. 'rang' → logprob: -19.755233764648438
    6. ' ' → logprob: -19.880233764648438
    7. '  ' → logprob: -20.630233764648438
    8. '_range' → logprob: -21.005233764648438
    9. 'r' → logprob: -21.380233764648438
    10. '   ' → logprob: -21.880233764648438

Token 75: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.588793960167095e-05
    2. 'n' → logprob: -9.750076293945312
    3. '(' → logprob: -11.000076293945312
    4. ' (' → logprob: -14.250076293945312
    5. ' n' → logprob: -17.000076293945312
    6. ')n' → logprob: -17.625076293945312
    7. '(len' → logprob: -17.750076293945312
    8. ']' → logprob: -18.750076293945312
    9. '	n' → logprob: -19.000076293945312
    10. ',n' → logprob: -19.250076293945312

Token 76: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004201866395305842
    2. ']' → logprob: -7.875420093536377
    3. ')' → logprob: -10.375420570373535
    4. '])' → logprob: -12.625420570373535
    5. ')]
' → logprob: -13.125420570373535
    6. '])]' → logprob: -14.125420570373535
    7. ')])' → logprob: -14.250420570373535
    8. ' ]' → logprob: -14.500420570373535
    9. ' )' → logprob: -14.500420570373535
    10. '')]' → logprob: -15.500420570373535

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005283685750328004
    2. ']' → logprob: -9.250528335571289
    3. ' def' → logprob: -9.250528335571289
    4. 'd' → logprob: -9.375528335571289
    5. ')' → logprob: -9.500528335571289
    6. 'for' → logprob: -9.625528335571289
    7. '
' → logprob: -10.125528335571289
    8. '```' → logprob: -11.000528335571289
    9. '_' → logprob: -11.500528335571289
    10. '\' → logprob: -12.000528335571289

Token 78: ' root' (ID: 6577)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.004273207858204842
    2. ' p' → logprob: -5.754273414611816
    3. ' parent' → logprob: -8.379273414611816
    4. ' def' → logprob: -8.379273414611816
    5. 'find' → logprob: -8.379273414611816
    6. ' get' → logprob: -9.254273414611816
    7. '	find' → logprob: -9.629273414611816
    8. '_find' → logprob: -9.879273414611816
    9. 'p' → logprob: -10.379273414611816
    10. ' ' → logprob: -10.504273414611816

Token 79: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9561092853546143
    2. '(x' → logprob: -1.4561092853546143
    3. '(a' → logprob: -1.9561092853546143
    4. '(p' → logprob: -1.9561092853546143
    5. '(u' → logprob: -2.4561092853546143
    6. '(i' → logprob: -4.331109046936035
    7. '(v' → logprob: -7.956109046936035
    8. '(n' → logprob: -8.956109046936035
    9. '(k' → logprob: -9.831109046936035
    10. '(r' → logprob: -9.831109046936035

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014644917973782867
    2. '):
' → logprob: -9.125146865844727
    3. ')' → logprob: -10.250146865844727
    4. ' ):' → logprob: -13.625146865844727
    5. '):
' → logprob: -14.250146865844727
    6. ':' → logprob: -16.625146865844727
    7. ')：' → logprob: -17.125146865844727
    8. '）：' → logprob: -17.500146865844727
    9. '}:' → logprob: -17.625146865844727
    10. ']:' → logprob: -17.875146865844727

Token 81: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.339029461145401
    2. '   ' → logprob: -1.4640294313430786
    3. ':' → logprob: -3.964029550552368
    4. ' return' → logprob: -4.589029312133789
    5. ' while' → logprob: -4.589029312133789
    6. 'if' → logprob: -4.964029312133789
    7. ' ' → logprob: -5.589029312133789
    8. ':
' → logprob: -6.464029312133789
    9. ':return' → logprob: -6.714029312133789
    10. '<|end|>' → logprob: -7.589029312133789

Token 82: ' path' (ID: 3104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05093283951282501
    2. ' if' → logprob: -3.5509328842163086
    3. 'while' → logprob: -4.050932884216309
    4. ' while' → logprob: -5.800932884216309
    5. '   ' → logprob: -7.925932884216309
    6. 'return' → logprob: -8.800932884216309
    7. ' return' → logprob: -11.925932884216309
    8. '	if' → logprob: -12.550932884216309
    9. '	while' → logprob: -13.175932884216309
    10. '
' → logprob: -13.550932884216309

Token 83: '_to' (ID: 5089)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6678622961044312
    2. '=' → logprob: -0.7928622961044312
    3. ' =' → logprob: -3.6678624153137207
    4. '=[]
' → logprob: -5.042862415313721
    5. '=[' → logprob: -6.417862415313721
    6. '=[]
' → logprob: -9.042861938476562
    7. ' =[' → logprob: -9.167861938476562
    8. ' ' → logprob: -9.167861938476562
    9. '[:]' → logprob: -9.167861938476562
    10. '_' → logprob: -9.292861938476562

Token 84: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.06292834132909775
    2. 'p' → logprob: -3.0629284381866455
    3. '_root' → logprob: -4.937928199768066
    4. 'r' → logprob: -5.312928199768066
    5. 'x' → logprob: -7.187928199768066
    6. 'parent' → logprob: -7.562928199768066
    7. '=root' → logprob: -8.812928199768066
    8. '_parent' → logprob: -9.062928199768066
    9. '[root' → logprob: -9.062928199768066
    10. '=' → logprob: -9.437928199768066

Token 85: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.2854677438735962
    2. '=' → logprob: -1.7854677438735962
    3. ' =' → logprob: -2.6604676246643066
    4. '=[' → logprob: -4.785467624664307
    5. '=[]
' → logprob: -6.160467624664307
    6. '=[]
' → logprob: -9.285468101501465
    7. '=[],' → logprob: -10.160468101501465
    8. '={}' → logprob: -10.285468101501465
    9. ' =[' → logprob: -11.285468101501465
    10. 's' → logprob: -11.785468101501465

Token 86: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6952551603317261
    2. 'while' → logprob: -0.9452551603317261
    3. '
' → logprob: -2.4452552795410156
    4. '   ' → logprob: -4.195255279541016
    5. '	while' → logprob: -4.820255279541016
    6. '<|end|>' → logprob: -6.570255279541016
    7. 'While' → logprob: -7.945255279541016
    8. '<|end|>' → logprob: -8.945255279541016
    9. ',' → logprob: -9.070255279541016
    10. 'current' → logprob: -9.195255279541016

Token 87: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02985832467675209
    2. ' while' → logprob: -3.529858350753784
    3. '   ' → logprob: -9.279858589172363
    4. '	while' → logprob: -11.529858589172363
    5. 'While' → logprob: -12.529858589172363
    6. '
' → logprob: -14.404858589172363
    7. 'w' → logprob: -15.654858589172363
    8. 'current' → logprob: -16.404857635498047
    9. ' ' → logprob: -16.654857635498047
    10. 'wh' → logprob: -16.779857635498047

Token 88: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01446457952260971
    2. ' p' → logprob: -4.264464378356934
    3. 'x' → logprob: -8.139464378356934
    4. ' x' → logprob: -11.764464378356934
    5. 'root' → logprob: -14.389464378356934
    6. ' ' → logprob: -15.014464378356934
    7. '   ' → logprob: -15.264464378356934
    8. '	p' → logprob: -15.514464378356934
    9. '(p' → logprob: -16.01446533203125
    10. ' root' → logprob: -16.88946533203125

Token 89: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.4034345187828876e-05
    2. 'x' → logprob: -10.87502384185791
    3. '[' → logprob: -12.62502384185791
    4. '[root' → logprob: -14.12502384185791
    5. '[p' → logprob: -14.87502384185791
    6. '[
' → logprob: -15.50002384185791
    7. '[i' → logprob: -15.75002384185791
    8. '(x' → logprob: -16.500024795532227
    9. '```' → logprob: -16.625024795532227
    10. '[int' → logprob: -17.500024795532227

Token 90: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.012706351466476917
    2. ']' → logprob: -4.387706279754639
    3. '!=' → logprob: -8.637706756591797
    4. 'x' → logprob: -11.012706756591797
    5. ']^' → logprob: -14.637706756591797
    6. ']==' → logprob: -14.762706756591797
    7. ']!='' → logprob: -15.137706756591797
    8. '[' → logprob: -15.262706756591797
    9. ')!=' → logprob: -15.262706756591797
    10. ' !=' → logprob: -15.262706756591797

Token 91: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.1689596148207784e-05
    2. ' x' → logprob: -9.875051498413086
    3. '	x' → logprob: -16.750051498413086
    4. '<|end|>' → logprob: -19.000051498413086
    5. ')x' → logprob: -19.250051498413086
    6. '{x' → logprob: -19.875051498413086
    7. ''x' → logprob: -20.250051498413086
    8. '   ' → logprob: -20.250051498413086
    9. '<|end|>' → logprob: -20.375051498413086
    10. '"x' → logprob: -20.625051498413086

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6935388445854187
    2. ':
' → logprob: -0.6935388445854187
    3. ' and' → logprob: -8.818538665771484
    4. '   ' → logprob: -9.193538665771484
    5. '):
' → logprob: -9.693538665771484
    6. ' :
' → logprob: -10.818538665771484
    7. ':x' → logprob: -10.943538665771484
    8. ':
' → logprob: -11.068538665771484
    9. ':

' → logprob: -12.193538665771484
    10. ' :' → logprob: -12.443538665771484

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.322582483291626
    2. ' x' → logprob: -1.947582483291626
    3. '
' → logprob: -2.447582483291626
    4. '   ' → logprob: -3.822582483291626
    5. 'x' → logprob: -4.822582244873047
    6. '<|end|>' → logprob: -5.072582244873047
    7. ' path' → logprob: -5.197582244873047
    8. ' p' → logprob: -7.072582244873047
    9. ',' → logprob: -7.322582244873047
    10. ' 
' → logprob: -7.947582244873047

Token 94: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.03883301839232445
    2. 'path' (adapté à ' path') → logprob: -3.288832902908325
    3. '   ' → logprob: -8.413832664489746
    4. ' x' → logprob: -8.538832664489746
    5. ' p' → logprob: -8.663832664489746
    6. 'x' → logprob: -9.038832664489746
    7. '       ' → logprob: -10.413832664489746
    8. '    ' → logprob: -11.163832664489746
    9. '	path' → logprob: -11.413832664489746
    10. 'p' → logprob: -11.663832664489746

Token 95: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.580929347255733e-05
    2. '.append' → logprob: -11.875016212463379
    3. '=' → logprob: -13.125016212463379
    4. 'to' → logprob: -13.500016212463379
    5. '_=' → logprob: -13.625016212463379
    6. '+=' → logprob: -13.875016212463379
    7. '   ' → logprob: -14.125016212463379
    8. '=_' → logprob: -15.125016212463379
    9. 'To' → logprob: -15.375016212463379
    10. '=x' → logprob: -15.750016212463379

Token 96: '_root' (ID: 29989)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17190773785114288
    2. 'root' → logprob: -1.9219077825546265
    3. 'x' → logprob: -5.171907901763916
    4. ' p' → logprob: -6.421907901763916
    5. '[x' → logprob: -6.421907901763916
    6. '_root' → logprob: -7.171907901763916
    7. '[p' → logprob: -7.296907901763916
    8. ' root' → logprob: -7.546907901763916
    9. '[root' → logprob: -7.546907901763916
    10. 'path' → logprob: -9.546907424926758

Token 97: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.707997428951785e-05
    2. 'append' → logprob: -10.625077247619629
    3. ',' → logprob: -11.000077247619629
    4. '.extend' → logprob: -11.375077247619629
    5. '.' → logprob: -11.500077247619629
    6. ',x' → logprob: -11.750077247619629
    7. '=' → logprob: -12.750077247619629
    8. ' .' → logprob: -14.250077247619629
    9. ',path' → logprob: -14.625077247619629
    10. '].' → logprob: -15.375077247619629

Token 98: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001994300866499543
    2. '(p' → logprob: -6.5019941329956055
    3. '(' → logprob: -7.6269941329956055
    4. 'x' → logprob: -12.376994132995605
    5. '((' → logprob: -15.126994132995605
    6. 'p' → logprob: -16.001995086669922
    7. '(
' → logprob: -16.001995086669922
    8. ' (' → logprob: -17.626995086669922
    9. '(i' → logprob: -17.626995086669922
    10. '()' → logprob: -18.126995086669922

Token 99: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1609165221452713
    2. ')' → logprob: -1.9109165668487549
    3. ')x' → logprob: -7.785916328430176
    4. ')
' → logprob: -8.285916328430176
    5. ' )
' → logprob: -11.535916328430176
    6. '       ' → logprob: -12.660916328430176
    7. ')

' → logprob: -13.160916328430176
    8. ' x' → logprob: -13.285916328430176
    9. '   ' → logprob: -13.660916328430176
    10. 'x' → logprob: -13.660916328430176

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004140141885727644
    2. 'x' → logprob: -6.379140377044678
    3. ' x' → logprob: -6.504140377044678
    4. '   ' → logprob: -7.129140377044678
    5. '<|end|>' → logprob: -9.75413990020752
    6. ',' → logprob: -10.62913990020752
    7. ',x' → logprob: -11.25413990020752
    8. '	x' → logprob: -11.37913990020752
    9. '<|end|>' → logprob: -12.12913990020752
    10. '
' → logprob: -12.37913990020752

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -3.5597102396423e-05
    2. ' x' → logprob: -10.250035285949707
    3. '       ' → logprob: -16.250036239624023
    4. '   ' → logprob: -16.500036239624023
    5. '
' → logprob: -18.625036239624023
    6. '```' → logprob: -19.625036239624023
    7. '	x' → logprob: -19.750036239624023
    8. ' ' → logprob: -20.750036239624023
    9. '           ' → logprob: -21.750036239624023
    10. ',x' → logprob: -22.250036239624023

Token 102: '=p' (ID: 48137)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0030031390488147736
    2. ' =' → logprob: -6.503003120422363
    3. '=p' → logprob: -6.503003120422363
    4. '=x' → logprob: -15.628003120422363
    5. '=

' → logprob: -15.628003120422363
    6. '=
' → logprob: -16.12800407409668
    7. '=root' → logprob: -16.37800407409668
    8. '=s' → logprob: -16.75300407409668
    9. '=int' → logprob: -17.00300407409668
    10. '=get' → logprob: -18.00300407409668

Token 103: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00018101456225849688
    2. 'x' → logprob: -8.625181198120117
    3. '[' → logprob: -14.250181198120117
    4. ' x' → logprob: -14.875181198120117
    5. '```' → logprob: -15.250181198120117
    6. '(x' → logprob: -16.125181198120117
    7. '	x' → logprob: -16.875181198120117
    8. '\[' → logprob: -17.500181198120117
    9. '{x' → logprob: -17.625181198120117
    10. '[
' → logprob: -18.000181198120117

Token 104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015467473305761814
    2. ']
' → logprob: -4.390467643737793
    3. ' ]' → logprob: -6.640467643737793
    4. ')' → logprob: -6.765467643737793
    5. ']
' → logprob: -8.765467643737793
    6. 'x' → logprob: -8.890467643737793
    7. ' ]
' → logprob: -10.265467643737793
    8. '[x' → logprob: -10.640467643737793
    9. ')
' → logprob: -10.765467643737793
    10. '[' → logprob: -10.890467643737793

Token 105: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16348081827163696
    2. '   ' → logprob: -1.9134807586669922
    3. 'x' → logprob: -5.913480758666992
    4. ' x' → logprob: -7.913480758666992
    5. 'p' → logprob: -9.913480758666992
    6. '```' → logprob: -10.038480758666992
    7. ' p' → logprob: -10.288480758666992
    8. ',' → logprob: -11.538480758666992
    9. '        
' → logprob: -11.913480758666992
    10. '
' → logprob: -11.913480758666992

Token 106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9972302317619324
    2. 'p' → logprob: -1.3722302913665771
    3. '   ' → logprob: -1.4972302913665771
    4. ' for' → logprob: -2.122230291366577
    5. 'return' → logprob: -3.997230291366577
    6. ' p' → logprob: -5.372230052947998
    7. 'path' → logprob: -5.622230052947998
    8. 'while' → logprob: -5.872230052947998
    9. ' return' → logprob: -6.872230052947998
    10. 'root' → logprob: -6.872230052947998

Token 107: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.47306394577026367
    2. 'i' → logprob: -1.4730639457702637
    3. 'v' → logprob: -2.3480639457702637
    4. ' node' → logprob: -3.7230639457702637
    5. 'z' → logprob: -4.473063945770264
    6. 'u' → logprob: -4.848063945770264
    7. ' i' → logprob: -5.598063945770264
    8. ' v' → logprob: -6.223063945770264
    9. 'k' → logprob: -6.973063945770264
    10. 'a' → logprob: -7.473063945770264

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02975824475288391
    2. 'in' → logprob: -3.5297582149505615
    3. ' ' → logprob: -11.90475845336914
    4. 'path' → logprob: -14.27975845336914
    5. '_in' → logprob: -16.02975845336914
    6. 's' → logprob: -16.77975845336914
    7. 'x' → logprob: -16.90475845336914
    8. ' ' → logprob: -17.15475845336914
    9. 'In' → logprob: -17.27975845336914
    10. 'ine' → logprob: -17.40475845336914

Token 109: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0019287518225610256
    2. ' path' → logprob: -6.251928806304932
    3. '(path' → logprob: -16.626928329467773
    4. ' ' → logprob: -17.501928329467773
    5. '	path' → logprob: -18.626928329467773
    6. '[path' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.501928329467773
    8. '  ' → logprob: -20.751928329467773
    9. ':path' → logprob: -21.251928329467773
    10. '"path' → logprob: -21.376928329467773

Token 110: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_path' → logprob: -17.5
    3. 'root' → logprob: -18.375
    4. 'path' → logprob: -20.0
    5. '[root' → logprob: -20.75
    6. '_root' → logprob: -21.375
    7. 'to' → logprob: -21.625
    8. '_on' → logprob: -21.75
    9. '   ' → logprob: -21.75
    10. 'To' → logprob: -22.375

Token 111: '_root' (ID: 29989)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3872123062610626
    2. 'path' → logprob: -1.1372122764587402
    3. ' root' → logprob: -8.637212753295898
    4. ' path' → logprob: -9.137212753295898
    5. '   ' → logprob: -11.512212753295898
    6. '_root' → logprob: -11.762212753295898
    7. '(path' → logprob: -11.887212753295898
    8. '[path' → logprob: -12.137212753295898
    9. 'p' → logprob: -12.262212753295898
    10. '[root' → logprob: -12.387212753295898

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039209987968206406
    2. ':
' → logprob: -3.289210081100464
    3. ':p' → logprob: -7.164209842681885
    4. '       ' → logprob: -8.164210319519043
    5. '   ' → logprob: -9.539210319519043
    6. ',p' → logprob: -11.414210319519043
    7. ' p' → logprob: -11.789210319519043
    8. '[p' → logprob: -12.539210319519043
    9. '(p' → logprob: -13.164210319519043
    10. '):' → logprob: -13.414210319519043

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013528760522603989
    2. ' p' → logprob: -4.388528823852539
    3. '   ' → logprob: -7.763528823852539
    4. 'p' → logprob: -8.763528823852539
    5. '        
' → logprob: -9.513528823852539
    6. '           ' → logprob: -9.763528823852539
    7. ',p' → logprob: -9.888528823852539
    8. '```' → logprob: -10.013528823852539
    9. ' 
' → logprob: -10.263528823852539
    10. ' ' → logprob: -10.638528823852539

Token 114: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.31649917364120483
    2. ' p' → logprob: -1.3164992332458496
    3. '       ' → logprob: -6.31649923324585
    4. '           ' → logprob: -6.69149923324585
    5. '   ' → logprob: -9.066498756408691
    6. '```' → logprob: -10.566498756408691
    7. 'x' → logprob: -11.191498756408691
    8. '               ' → logprob: -12.191498756408691
    9. '	p' → logprob: -12.441498756408691
    10. '=' → logprob: -12.941498756408691

Token 115: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.750009536743164
    3. '[x' → logprob: -14.000009536743164
    4. '[root' → logprob: -15.375009536743164
    5. '[user' → logprob: -16.000009536743164
    6. '```' → logprob: -17.625009536743164
    7. '[n' → logprob: -17.875009536743164
    8. '[p' → logprob: -18.000009536743164
    9. '\[' → logprob: -18.250009536743164
    10. '=node' → logprob: -18.750009536743164

Token 116: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.11030987650156021
    2. '=' → logprob: -2.3603098392486572
    3. '=x' → logprob: -5.110310077667236
    4. ']' → logprob: -5.735310077667236
    5. ')=' → logprob: -7.610310077667236
    6. ' =' → logprob: -8.860309600830078
    7. '=p' → logprob: -9.235309600830078
    8. ' ]' → logprob: -10.485309600830078
    9. '"]=' → logprob: -11.860309600830078
    10. '=q' → logprob: -12.860309600830078

Token 117: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '	x' → logprob: -18.875045776367188
    4. ')x' → logprob: -20.250045776367188
    5. '$x' → logprob: -21.625045776367188
    6. '   ' → logprob: -21.625045776367188
    7. '(x' → logprob: -21.750045776367188
    8. '<x' → logprob: -22.000045776367188
    9. '```' → logprob: -22.125045776367188
    10. '"x' → logprob: -22.375045776367188

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027838684618473053
    2. 'return' → logprob: -3.777838706970215
    3. ' return' → logprob: -5.902838706970215
    4. '
' → logprob: -6.902838706970215
    5. '	return' → logprob: -7.402838706970215
    6. ':return' → logprob: -8.902838706970215
    7. '<|end|>' → logprob: -9.777838706970215
    8. '    
' → logprob: -11.027838706970215
    9. ')return' → logprob: -12.402838706970215
    10. '       ' → logprob: -12.527838706970215

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03613613545894623
    2. 'return' → logprob: -3.5361361503601074
    3. ' return' → logprob: -5.286136150360107
    4. '	return' → logprob: -6.911136150360107
    5. '
' → logprob: -9.03613567352295
    6. ':return' → logprob: -9.41113567352295
    7. '    
' → logprob: -10.03613567352295
    8. ' ' → logprob: -11.28613567352295
    9. '<|end|>' → logprob: -11.41113567352295
    10. '```' → logprob: -11.91113567352295

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022168347612023354
    2. '   ' → logprob: -4.022168159484863
    3. ' return' → logprob: -5.522168159484863
    4. '
' → logprob: -12.147168159484863
    5. '	return' → logprob: -12.147168159484863
    6. ' ' → logprob: -14.022168159484863
    7. ':return' → logprob: -14.272168159484863
    8. '    
' → logprob: -14.522168159484863
    9. '  ' → logprob: -15.397168159484863
    10. '{return' → logprob: -16.14716911315918

Token 121: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141363143920898
    2. 'x' → logprob: -1.701413631439209
    3. '	x' → logprob: -15.701414108276367
    4. '(x' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.451414108276367
    6. ')x' → logprob: -19.076414108276367
    7. ' (' → logprob: -19.201414108276367
    8. ' ' → logprob: -19.326414108276367
    9. '"x' → logprob: -20.201414108276367
    10. ' 
' → logprob: -20.326414108276367

Token 122: '
    
' (ID: 15698)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004424420651048422
    2. '
' → logprob: -6.129424571990967
    3. '<|end|>' → logprob: -6.879424571990967
    4. ')' → logprob: -7.629424571990967
    5. ' def' → logprob: -8.004424095153809
    6. '  
' → logprob: -9.379424095153809
    7. '    
' → logprob: -9.629424095153809
    8. ' 
' → logprob: -10.004424095153809
    9. '```' → logprob: -10.629424095153809
    10. 'for' → logprob: -10.754424095153809

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008827611454762518
    2. '
' → logprob: -7.500882625579834
    3. 'for' → logprob: -8.500883102416992
    4. '    
' → logprob: -10.500883102416992
    5. '  
' → logprob: -10.625883102416992
    6. ',' → logprob: -11.250883102416992
    7. ')' → logprob: -11.375883102416992
    8. ' def' → logprob: -11.375883102416992
    9. 'while' → logprob: -11.750883102416992
    10. ' 
' → logprob: -12.125883102416992

Token 124: ' is' (ID: 382)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.118838369846344
    2. ' union' → logprob: -3.118838310241699
    3. ' unite' → logprob: -3.368838310241699
    4. 'un' → logprob: -3.618838310241699
    5. 'merge' → logprob: -5.618838310241699
    6. 'join' → logprob: -6.618838310241699
    7. 'uni' → logprob: -7.743838310241699
    8. ' unify' → logprob: -8.4938383102417
    9. 'connect' → logprob: -8.6188383102417
    10. ' merge' → logprob: -8.8688383102417

Token 125: '_same' (ID: 83787)
  Prédit: '_connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.019494930282235146
    2. '_same' → logprob: -4.519495010375977
    3. '_root' → logprob: -5.519495010375977
    4. '_union' → logprob: -5.894495010375977
    5. 'connected' → logprob: -7.019495010375977
    6. '_' → logprob: -8.769495010375977
    7. '_parent' → logprob: -8.894495010375977
    8. 'root' → logprob: -9.019495010375977
    9. '_connect' → logprob: -9.394495010375977
    10. 'Connected' → logprob: -10.019495010375977

Token 126: '_set' (ID: 5451)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47392091155052185
    2. '(p' → logprob: -1.3489209413528442
    3. '(' → logprob: -2.8489208221435547
    4. '_root' → logprob: -3.7239208221435547
    5. '_set' → logprob: -4.223920822143555
    6. 'root' → logprob: -4.973920822143555
    7. '(root' → logprob: -5.223920822143555
    8. '_parent' → logprob: -5.473920822143555
    9. '(a' → logprob: -6.348920822143555
    10. '(u' → logprob: -6.848920822143555

Token 127: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12743501365184784
    2. '(x' → logprob: -2.1274349689483643
    3. '(u' → logprob: -7.877435207366943
    4. '(' → logprob: -9.002434730529785
    5. '(root' → logprob: -12.877434730529785
    6. '(p' → logprob: -14.877434730529785
    7. '(lhs' → logprob: -15.127434730529785
    8. '(A' → logprob: -15.252434730529785
    9. '(s' → logprob: -15.377434730529785
    10. '(
' → logprob: -15.502434730529785

Token 128: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6938847899436951
    2. ',y' → logprob: -0.6938847899436951
    3. ' ,' → logprob: -7.31888484954834
    4. ',x' → logprob: -9.56888484954834
    5. ',int' → logprob: -13.94388484954834
    6. ',p' → logprob: -13.94388484954834
    7. ',Y' → logprob: -14.44388484954834
    8. ',r' → logprob: -14.94388484954834
    9. ',
' → logprob: -15.31888484954834
    10. ',right' → logprob: -15.56888484954834

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028934504371136427
    2. '):
' → logprob: -8.500288963317871
    3. ')' → logprob: -9.625288963317871
    4. ' ):' → logprob: -11.000288963317871
    5. ':' → logprob: -13.375288963317871
    6. '):
' → logprob: -14.000288963317871
    7. '):

' → logprob: -14.625288963317871
    8. ')：' → logprob: -16.625289916992188
    9. '):(' → logprob: -16.750289916992188
    10. '():' → logprob: -16.875289916992188

Token 130: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.34674811363220215
    2. '(' → logprob: -2.096748113632202
    3. ' p' → logprob: -2.596748113632202
    4. '(root' → logprob: -2.971748113632202
    5. ' root' → logprob: -3.471748113632202
    6. 'root' → logprob: -5.221748352050781
    7. 'p' → logprob: -5.721748352050781
    8. ' return' → logprob: -6.346748352050781
    9. ' (' → logprob: -6.596748352050781
    10. '(x' → logprob: -7.971748352050781

Token 131: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13257157802581787
    2. 'root' → logprob: -2.1325716972351074
    3. ' return' → logprob: -5.382571697235107
    4. ' root' → logprob: -6.882571697235107
    5. '[root' → logprob: -12.88257122039795
    6. '
' → logprob: -13.50757122039795
    7. '(root' → logprob: -13.88257122039795
    8. '   ' → logprob: -14.13257122039795
    9. '/root' → logprob: -15.63257122039795
    10. '{return' → logprob: -16.007572174072266

Token 132: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.4740920662879944
    2. 'root' → logprob: -0.9740920662879944
    3. '(root' → logprob: -11.224092483520508
    4. '	root' → logprob: -14.849092483520508
    5. '[root' → logprob: -14.849092483520508
    6. ' ' → logprob: -14.974092483520508
    7. '/root' → logprob: -15.599092483520508
    8. ' p' → logprob: -16.099092483520508
    9. 'r' → logprob: -16.349092483520508
    10. 'roo' → logprob: -16.474092483520508

Token 133: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06197508051991463
    2. '(' → logprob: -2.8119750022888184
    3. '(
' → logprob: -12.811975479125977
    4. '(y' → logprob: -13.061975479125977
    5. '((' → logprob: -13.186975479125977
    6. '("("' → logprob: -15.061975479125977
    7. '(user' → logprob: -16.186975479125977
    8. '<|end|>' → logprob: -16.311975479125977
    9. '(root' → logprob: -17.186975479125977
    10. '(

' → logprob: -17.311975479125977

Token 134: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.4741077125072479
    2. ')' → logprob: -0.9741077423095703
    3. ']==' → logprob: -11.22410774230957
    4. '==' → logprob: -11.59910774230957
    5. ' )' → logprob: -12.09910774230957
    6. ')!=' → logprob: -14.34910774230957
    7. '）' → logprob: -14.59910774230957
    8. 'root' → logprob: -14.97410774230957
    9. '")==' → logprob: -15.09910774230957
    10. 'x' → logprob: -15.72410774230957

Token 135: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.547789674485102e-05
    2. ' root' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.500036239624023
    4. '	root' → logprob: -19.250036239624023
    5. '(root' → logprob: -19.500036239624023
    6. '
' → logprob: -20.625036239624023
    7. '_root' → logprob: -22.000036239624023
    8. ' ' → logprob: -22.250036239624023
    9. '  ' → logprob: -22.375036239624023
    10. '[root' → logprob: -22.625036239624023

Token 136: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.07901481539011002
    2. '(root' → logprob: -2.579014778137207
    3. 'root' → logprob: -9.204014778137207
    4. '(' → logprob: -10.704014778137207
    5. 'y' → logprob: -14.079014778137207
    6. ' root' → logprob: -14.454014778137207
    7. '(x' → logprob: -15.079014778137207
    8. ' (' → logprob: -16.329015731811523
    9. '(parent' → logprob: -16.829015731811523
    10. '(ROOT' → logprob: -16.829015731811523

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.625003814697266
    4. ')x' → logprob: -15.250003814697266
    5. ')return' → logprob: -15.875003814697266
    6. '<|end|>' → logprob: -16.375003814697266
    7. '))' → logprob: -17.000003814697266
    8. ')y' → logprob: -17.125003814697266
    9. ')#' → logprob: -18.125003814697266
    10. '())' → logprob: -18.125003814697266

Token 138: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01994038186967373
    2. '
' → logprob: -4.644940376281738
    3. '    
' → logprob: -5.394940376281738
    4. ' 
' → logprob: -5.394940376281738
    5. '  
' → logprob: -7.394940376281738
    6. '   
' → logprob: -8.894940376281738
    7. ' def' → logprob: -9.019940376281738
    8. ')' → logprob: -10.644940376281738
    9. '     
' → logprob: -11.019940376281738
    10. '   ' → logprob: -11.144940376281738

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0564331205387134e-05
    2. '
' → logprob: -12.12501049041748
    3. '    
' → logprob: -12.50001049041748
    4. '  
' → logprob: -14.37501049041748
    5. ' def' → logprob: -15.00001049041748
    6. '```' → logprob: -15.62501049041748
    7. ' 
' → logprob: -17.000011444091797
    8. '_' → logprob: -17.000011444091797
    9. ')' → logprob: -17.375011444091797
    10. 'for' → logprob: -17.625011444091797

Token 140: ' unite' (ID: 96146)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.4691911041736603
    2. 'union' → logprob: -1.219191074371338
    3. ' unite' → logprob: -2.594191074371338
    4. 'merge' → logprob: -7.094191074371338
    5. 'un' → logprob: -7.219191074371338
    6. ' merge' → logprob: -7.344191074371338
    7. 'def' → logprob: -7.719191074371338
    8. ' unify' → logprob: -8.094191551208496
    9. 'join' → logprob: -8.344191551208496
    10. ' def' → logprob: -8.469191551208496

Token 141: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00823298841714859
    2. '(' → logprob: -5.008233070373535
    3. '(p' → logprob: -6.508233070373535
    4. '(u' → logprob: -11.383233070373535
    5. '(root' → logprob: -12.258233070373535
    6. ' (' → logprob: -12.633233070373535
    7. '((' → logprob: -13.508233070373535
    8. '(a' → logprob: -13.633233070373535
    9. 'x' → logprob: -14.133233070373535
    10. '(
' → logprob: -14.383233070373535

Token 142: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.01817721500992775
    2. ',' → logprob: -4.018177032470703
    3. ' ,' → logprob: -10.518177032470703
    4. 'y' → logprob: -16.143177032470703
    5. ',Y' → logprob: -16.393177032470703
    6. ',x' → logprob: -17.143177032470703
    7. ',
' → logprob: -17.393177032470703
    8. ' y' → logprob: -18.893177032470703
    9. ',p' → logprob: -19.143177032470703
    10. '(y' → logprob: -19.393177032470703

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002919353311881423
    2. '):
' → logprob: -5.8779191970825195
    3. ')' → logprob: -9.12791919708252
    4. ' ):' → logprob: -12.75291919708252
    5. '):
' → logprob: -13.12791919708252
    6. '):

' → logprob: -14.12791919708252
    7. ':' → logprob: -16.127920150756836
    8. ')：' → logprob: -16.252920150756836
    9. '）：' → logprob: -17.627920150756836
    10. '):(' → logprob: -18.002920150756836

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028706438839435577
    2. ' px' → logprob: -4.4037065505981445
    3. 'x' → logprob: -5.0287065505981445
    4. ' p' → logprob: -5.7787065505981445
    5. 'px' → logprob: -6.5287065505981445
    6. 'p' → logprob: -6.5287065505981445
    7. 'rx' → logprob: -7.0287065505981445
    8. ' root' → logprob: -7.2787065505981445
    9. ' x' → logprob: -7.4037065505981445
    10. ' rx' → logprob: -7.4037065505981445

Token 145: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.06622276455163956
    2. 'px' → logprob: -3.066222667694092
    3. 'x' → logprob: -4.191222667694092
    4. 'rx' → logprob: -6.566222667694092
    5. 'pr' → logprob: -8.19122314453125
    6. 'r' → logprob: -8.44122314453125
    7. ' p' → logprob: -8.94122314453125
    8. 'root' → logprob: -9.06622314453125
    9. ' px' → logprob: -9.69122314453125
    10. 'a' → logprob: -9.81622314453125

Token 146: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.07035662978887558
    2. '[' → logprob: -3.445356607437134
    3. '[x' → logprob: -4.320356845855713
    4. '[p' → logprob: -4.445356845855713
    5. 'x' → logprob: -4.820356845855713
    6. '[y' → logprob: -6.445356845855713
    7. 'root' → logprob: -7.445356845855713
    8. '=' → logprob: -7.945356845855713
    9. 'p' → logprob: -8.695356369018555
    10. 'y' → logprob: -8.820356369018555

Token 147: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007842566701583564
    2. '(' → logprob: -7.250784397125244
    3. 'x' → logprob: -9.625783920288086
    4. '(y' → logprob: -12.375783920288086
    5. ' (' → logprob: -13.250783920288086
    6. '](' → logprob: -13.500783920288086
    7. '(
' → logprob: -15.000783920288086
    8. ']' → logprob: -15.000783920288086
    9. '[x' → logprob: -16.000783920288086
    10. '((' → logprob: -17.125783920288086

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07937803864479065
    2. ')]' → logprob: -2.579378128051758
    3. ')=' → logprob: -8.329378128051758
    4. ']]=' → logprob: -8.954378128051758
    5. ' )' → logprob: -9.329378128051758
    6. ']=' → logprob: -10.829378128051758
    7. '])' → logprob: -12.204378128051758
    8. ']' → logprob: -13.079378128051758
    9. '))' → logprob: -14.204378128051758
    10. ')
' → logprob: -14.579378128051758

Token 149: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0024774393532425165
    2. ']' → logprob: -6.002477645874023
    3. '=' → logprob: -14.002477645874023
    4. '=y' → logprob: -15.377477645874023
    5. ']]=' → logprob: -15.502477645874023
    6. ')=' → logprob: -15.627477645874023
    7. ' ]' → logprob: -16.252477645874023
    8. '']=' → logprob: -16.627477645874023
    9. ']=(' → logprob: -16.752477645874023
    10. '"]=' → logprob: -17.002477645874023

Token 150: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -7.52919222577475e-05
    2. ' root' → logprob: -9.500075340270996
    3. 'y' → logprob: -15.125075340270996
    4. '   ' → logprob: -17.75007438659668
    5. '	root' → logprob: -17.87507438659668
    6. 'r' → logprob: -18.25007438659668
    7. '(root' → logprob: -19.12507438659668
    8. '[root' → logprob: -19.87507438659668
    9. 'roots' → logprob: -21.00007438659668
    10. '=root' → logprob: -21.12507438659668

Token 151: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -10.750021934509277
    3. 'y' → logprob: -14.000021934509277
    4. '(x' → logprob: -17.625022888183594
    5. ')y' → logprob: -18.875022888183594
    6. '(
' → logprob: -19.375022888183594
    7. ')' → logprob: -19.375022888183594
    8. ',y' → logprob: -20.250022888183594
    9. ' y' → logprob: -20.500022888183594
    10. '	y' → logprob: -20.625022888183594

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.500006675720215
    4. '())' → logprob: -14.125006675720215
    5. '))' → logprob: -14.625006675720215
    6. '(' → logprob: -16.25000762939453
    7. '(x' → logprob: -16.62500762939453
    8. ')x' → logprob: -16.62500762939453
    9. '<|end|>' → logprob: -16.75000762939453
    10. '()' → logprob: -16.87500762939453

Token 153: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0657224655151367
    2. 'w' → logprob: -1.4407224655151367
    3. '(x' → logprob: -1.9407224655151367
    4. ' w' → logprob: -2.1907224655151367
    5. ' x' → logprob: -2.3157224655151367
    6. ' (' → logprob: -4.440722465515137
    7. 'i' → logprob: -4.690722465515137
    8. ' edge' → logprob: -4.815722465515137
    9. ' i' → logprob: -4.940722465515137
    10. 'weight' → logprob: -5.065722465515137

Token 156: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19782491028308868
    2. 'in' → logprob: -1.8228249549865723
    3. ',' → logprob: -4.072824954986572
    4. ' ,' → logprob: -7.447824954986572
    5. ' ' → logprob: -8.697824478149414
    6. ',in' → logprob: -9.822824478149414
    7. 'weight' → logprob: -11.322824478149414
    8. 'range' → logprob: -11.572824478149414
    9. ',n' → logprob: -12.072824478149414
    10. 'for' → logprob: -12.072824478149414

Token 157: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006954418960958719
    2. ',w' → logprob: -5.256954193115234
    3. ',in' → logprob: -6.881954193115234
    4. ',_' → logprob: -8.756954193115234
    5. ',value' → logprob: -8.756954193115234
    6. ',z' → logprob: -9.506954193115234
    7. ',v' → logprob: -9.756954193115234
    8. 'in' → logprob: -10.381954193115234
    9. ' in' → logprob: -10.506954193115234
    10. ',i' → logprob: -10.506954193115234

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1797914355993271
    2. 'in' → logprob: -1.8047914505004883
    3. ',' → logprob: -10.304791450500488
    4. 'weight' → logprob: -11.804791450500488
    5. ' ' → logprob: -13.179791450500488
    6. '  ' → logprob: -13.804791450500488
    7. ' ,' → logprob: -14.179791450500488
    8. '   ' → logprob: -14.554791450500488
    9. '    ' → logprob: -14.679791450500488
    10. ',in' → logprob: -15.179791450500488

Token 159: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.313268780708313
    2. ' weight' → logprob: -1.313268780708313
    3. '(weight' → logprob: -11.938268661499023
    4. 'Weight' → logprob: -15.188268661499023
    5. ' gewicht' → logprob: -16.438268661499023
    6. 'weig' → logprob: -16.813268661499023
    7. '_weight' → logprob: -16.938268661499023
    8. '.weight' → logprob: -17.063268661499023
    9. ' ' → logprob: -17.063268661499023
    10. '-weight' → logprob: -18.313268661499023

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.4391956685576588e-05
    2. ':
' → logprob: -10.750024795532227
    3. ' :' → logprob: -13.000024795532227
    4. '):' → logprob: -15.750024795532227
    5. ':
' → logprob: -16.375024795532227
    6. ':**' → logprob: -16.500024795532227
    7. ':

' → logprob: -16.750024795532227
    8. '<|end|>' → logprob: -16.750024795532227
    9. '：' → logprob: -17.375024795532227
    10. 'if' → logprob: -17.500024795532227

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03729687258601189
    2. 'if' → logprob: -3.787296772003174
    3. ' if' → logprob: -4.287296772003174
    4. '    
' → logprob: -9.037297248840332
    5. ',' → logprob: -11.037297248840332
    6. '       ' → logprob: -11.537297248840332
    7. '
' → logprob: -11.537297248840332
    8. '```' → logprob: -11.537297248840332
    9. '  ' → logprob: -11.787297248840332
    10. ':' → logprob: -12.037297248840332

Token 162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011058022500947118
    2. '   ' → logprob: -7.501105785369873
    3. ' if' → logprob: -7.501105785369873
    4. '```' → logprob: -16.50110626220703
    5. '
' → logprob: -17.00110626220703
    6. '    
' → logprob: -17.25110626220703
    7. '       ' → logprob: -17.50110626220703
    8. '	if' → logprob: -18.00110626220703
    9. 'If' → logprob: -18.50110626220703
    10. ' ' → logprob: -19.25110626220703

Token 163: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31326815485954285
    2. ' not' → logprob: -1.3132681846618652
    3. '   ' → logprob: -12.438267707824707
    4. 'is' → logprob: -13.813267707824707
    5. '(not' → logprob: -13.938267707824707
    6. 'n' → logprob: -15.063267707824707
    7. ' is' → logprob: -15.938267707824707
    8. '!' → logprob: -16.438268661499023
    9. '	not' → logprob: -16.438268661499023
    10. '
' → logprob: -18.188268661499023

Token 164: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0788901224732399
    2. ' is' → logprob: -2.578890085220337
    3. '(is' → logprob: -15.453889846801758
    4. ' ' → logprob: -16.578889846801758
    5. ')is' → logprob: -17.828889846801758
    6. '   ' → logprob: -17.828889846801758
    7. '	is' → logprob: -17.953889846801758
    8. '_is' → logprob: -18.328889846801758
    9. '.is' → logprob: -19.203889846801758
    10. ')' → logprob: -19.828889846801758

Token 165: '_same' (ID: 83787)
  Prédit: '_same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_same' → logprob: -1.4378848391061183e-05
    2. 'same' → logprob: -11.375014305114746
    3. '_is' → logprob: -14.375014305114746
    4. '_' → logprob: -14.625014305114746
    5. ' same' → logprob: -15.125014305114746
    6. '__' → logprob: -15.375014305114746
    7. '_safe' → logprob: -15.375014305114746
    8. 'is' → logprob: -15.500014305114746
    9. '```' → logprob: -15.875014305114746
    10. '_s' → logprob: -15.875014305114746

Token 166: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -9.253090865968261e-06
    2. 'set' → logprob: -11.625009536743164
    3. '(x' → logprob: -16.125009536743164
    4. '_' → logprob: -16.750009536743164
    5. '_sets' → logprob: -18.125009536743164
    6. '_same' → logprob: -18.250009536743164
    7. ' set' → logprob: -18.625009536743164
    8. '_s' → logprob: -18.625009536743164
    9. 'Set' → logprob: -18.750009536743164
    10. '```' → logprob: -19.125009536743164

Token 167: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -16.375009536743164
    4. 'x' → logprob: -16.500009536743164
    5. '(
' → logprob: -19.250009536743164
    6. ' x' → logprob: -19.875009536743164
    7. ',x' → logprob: -20.625009536743164
    8. '((' → logprob: -20.750009536743164
    9. '(y' → logprob: -20.875009536743164
    10. '(s' → logprob: -22.250009536743164

Token 168: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.004796069115400314
    2. ',' → logprob: -5.379796028137207
    3. ' ,' → logprob: -8.754796028137207
    4. 'y' → logprob: -11.129796028137207
    5. ' y' → logprob: -13.254796028137207
    6. '   ' → logprob: -14.004796028137207
    7. ',x' → logprob: -14.629796028137207
    8. '(y' → logprob: -15.754796028137207
    9. ',
' → logprob: -15.879796028137207
    10. ' ' → logprob: -17.004796981811523

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47475558519363403
    2. '):
' → logprob: -0.974755585193634
    3. ')' → logprob: -7.974755764007568
    4. ':' → logprob: -8.59975528717041
    5. '   ' → logprob: -9.59975528717041
    6. '):
' → logprob: -10.47475528717041
    7. ':
' → logprob: -10.84975528717041
    8. '):

' → logprob: -11.09975528717041
    9. ' ):
' → logprob: -12.09975528717041
    10. ' ):' → logprob: -12.22475528717041

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002919707214459777
    2. '   ' → logprob: -6.127919673919678
    3. '):
' → logprob: -8.627920150756836
    4. '        
' → logprob: -8.627920150756836
    5. ':' → logprob: -8.877920150756836
    6. '):' → logprob: -9.627920150756836
    7. ')' → logprob: -10.127920150756836
    8. 'un' → logprob: -10.252920150756836
    9. ':
' → logprob: -10.627920150756836
    10. '    
' → logprob: -10.877920150756836

Token 171: ' unite' (ID: 96146)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9535096287727356
    2. 'ans' → logprob: -1.0785095691680908
    3. '       ' → logprob: -1.5785095691680908
    4. '   ' → logprob: -2.953509569168091
    5. '           ' → logprob: -4.82850980758667
    6. 'un' → logprob: -5.20350980758667
    7. ' unite' → logprob: -6.95350980758667
    8. '
' → logprob: -7.20350980758667
    9. ' un' → logprob: -8.453509330749512
    10. '	ans' → logprob: -8.828509330749512

Token 172: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -10.625024795532227
    3. 'x' → logprob: -15.625024795532227
    4. ' (' → logprob: -16.125024795532227
    5. '(
' → logprob: -16.750024795532227
    6. '```' → logprob: -18.500024795532227
    7. '((' → logprob: -18.875024795532227
    8. ')(' → logprob: -19.500024795532227
    9. '<|end|>' → logprob: -19.500024795532227
    10. ')x' → logprob: -20.125024795532227

Token 173: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00223185564391315
    2. ',' → logprob: -6.127232074737549
    3. ' ,' → logprob: -10.50223159790039
    4. 'y' → logprob: -11.12723159790039
    5. ',w' → logprob: -13.00223159790039
    6. '   ' → logprob: -14.12723159790039
    7. ',x' → logprob: -14.62723159790039
    8. ')' → logprob: -14.75223159790039
    9. '```' → logprob: -15.75223159790039
    10. 'w' → logprob: -16.37723159790039

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02977525070309639
    2. ')' → logprob: -3.5297751426696777
    3. '       ' → logprob: -11.029775619506836
    4. ')
' → logprob: -11.779775619506836
    5. ')

' → logprob: -15.279775619506836
    6. '),' → logprob: -16.029775619506836
    7. ');
' → logprob: -16.154775619506836
    8. ')n' → logprob: -16.154775619506836
    9. ')`
' → logprob: -16.654775619506836
    10. '
' → logprob: -16.654775619506836

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40210893750190735
    2. '   ' → logprob: -1.152108907699585
    3. 'ans' → logprob: -4.277109146118164
    4. '
' → logprob: -7.277109146118164
    5. '```' → logprob: -7.902109146118164
    6. ' ans' → logprob: -9.277109146118164
    7. '	ans' → logprob: -10.652109146118164
    8. '  ' → logprob: -11.152109146118164
    9. ' ' → logprob: -11.652109146118164
    10. '0' → logprob: -11.652109146118164

Token 176: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -9.088346359931165e-07
    2. '
' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.500000953674316
    4. ' ans' → logprob: -15.625000953674316
    5. '	ans' → logprob: -16.875
    6. '       ' → logprob: -17.375
    7. 'answer' → logprob: -19.375
    8. '(ans' → logprob: -19.375
    9. '```' → logprob: -20.125
    10. '_ans' → logprob: -20.875

Token 177: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03220917284488678
    2. ' +=' → logprob: -3.5322091579437256
    3. '+' → logprob: -6.032209396362305
    4. ']+=' → logprob: -10.282209396362305
    5. '+='' → logprob: -11.532209396362305
    6. '+="' → logprob: -12.032209396362305
    7. '+=(' → logprob: -12.282209396362305
    8. '=' → logprob: -15.657209396362305
    9. '```' → logprob: -15.782209396362305
    10. '   ' → logprob: -16.157209396362305

Token 178: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001584850688232109
    2. ' w' → logprob: -8.750158309936523
    3. '	w' → logprob: -19.375158309936523
    4. '   ' → logprob: -20.750158309936523
    5. '*w' → logprob: -20.875158309936523
    6. '-w' → logprob: -21.000158309936523
    7. '_w' → logprob: -21.250158309936523
    8. '```' → logprob: -21.625158309936523
    9. ' ' → logprob: -21.750158309936523
    10. '+w' → logprob: -21.750158309936523

Token 179: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001097417771234177
    2. '
' → logprob: -9.250109672546387
    3. ' print' → logprob: -11.250109672546387
    4. '```' → logprob: -15.000109672546387
    5. ' 
' → logprob: -16.500110626220703
    6. '    
' → logprob: -17.000110626220703
    7. '
' → logprob: -17.500110626220703
    8. 'n' → logprob: -17.875110626220703
    9. '(print' → logprob: -18.000110626220703
    10. '        
' → logprob: -18.000110626220703

Token 180: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.650518920039758e-06
    2. ' print' → logprob: -12.875003814697266
    3. '```' → logprob: -14.250003814697266
    4. '
' → logprob: -15.250003814697266
    5. 'if' → logprob: -17.625003814697266
    6. '#print' → logprob: -18.500003814697266
    7. '\n' → logprob: -19.000003814697266
    8. '#' → logprob: -19.375003814697266
    9. '\' → logprob: -19.375003814697266
    10. '(print' → logprob: -19.500003814697266

Token 181: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.018170546740293503
    2. '(' → logprob: -4.018170356750488
    3. '()' → logprob: -11.143170356750488
    4. '('' → logprob: -13.143170356750488
    5. '("("' → logprob: -13.268170356750488
    6. 'ans' → logprob: -13.768170356750488
    7. ' (' → logprob: -15.018170356750488
    8. '(answer' → logprob: -15.143170356750488
    9. '(`' → logprob: -15.643170356750488
    10. '((' → logprob: -15.768170356750488

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')`' → logprob: -17.0
    4. '))' → logprob: -17.125
    5. ')
' → logprob: -18.25
    6. ')}' → logprob: -19.375
    7. '`)' → logprob: -20.125
    8. '')' → logprob: -20.25
    9. '）' → logprob: -20.5
    10. '())' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 180
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 47.78%
Précision adaptée (1ère position): 52.78%
Précision (top 10): 85.56%
================================================================================
