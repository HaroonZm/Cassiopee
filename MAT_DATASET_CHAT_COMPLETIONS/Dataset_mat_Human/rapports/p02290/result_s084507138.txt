================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import hypot
x1, y1, x2, y2 = map(int, input().split())
dx, dy = x2-x1, y2-y1
vector_a = hypot(dx, dy)
q = int(input())

for x3, y3 in (map(int, input().split()) for _ in [0]*q):
    d = ((x3-x1)*dx + (y3-y1)*dy) / (vector_a**2)
    print(x1+dx*d, y1+dy*d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' hypot' (ID: 85756)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.22550995647907257
    2. ' sqrt' → logprob: -1.8505100011825562
    3. 'pow' → logprob: -4.100510120391846
    4. 'pi' → logprob: -4.850510120391846
    5. 'sin' → logprob: -4.850510120391846
    6. ' pi' → logprob: -5.100510120391846
    7. 'import' → logprob: -6.350510120391846
    8. 'ceil' → logprob: -7.100510120391846
    9. ' sin' → logprob: -7.225510120391846
    10. 'log' → logprob: -7.725510120391846

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004948906716890633
    2. '\(' → logprob: -8.250494956970215
    3. '(
' → logprob: -8.750494956970215
    4. ',' → logprob: -10.375494956970215
    5. ' (' → logprob: -11.250494956970215
    6. '\n' → logprob: -12.125494956970215
    7. '\' → logprob: -12.375494956970215
    8. 'a' → logprob: -12.375494956970215
    9. ''' → logprob: -13.250494956970215
    10. '(

' → logprob: -13.500494956970215

Token 5: 'x' (ID: 87)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015267443843185902
    2. '(
' → logprob: -4.515267372131348
    3. '\(' → logprob: -6.390267372131348
    4. '\n' → logprob: -7.515267372131348
    5. 'def' → logprob: -7.515267372131348
    6. '\' → logprob: -8.265267372131348
    7. '```' → logprob: -8.515267372131348
    8. '
' → logprob: -8.640267372131348
    9. 'a' → logprob: -8.640267372131348
    10. 'd' → logprob: -9.265267372131348

Token 6: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0106866359710693
    2. ',' → logprob: -1.2606866359710693
    3. '+' → logprob: -2.0106866359710693
    4. ')' → logprob: -2.1356866359710693
    5. '[' → logprob: -3.6356866359710693
    6. '=' → logprob: -3.8856866359710693
    7. ' ' → logprob: -4.010686874389648
    8. '.' → logprob: -4.760686874389648
    9. '**' → logprob: -5.010686874389648
    10. ' **' → logprob: -5.135686874389648

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0220583938062191
    2. '[' → logprob: -4.147058486938477
    3. '_' → logprob: -5.897058486938477
    4. '=' → logprob: -6.272058486938477
    5. ')' → logprob: -7.397058486938477
    6. ' ,' → logprob: -8.522058486938477
    7. '.' → logprob: -8.897058486938477
    8. ' ' → logprob: -9.522058486938477
    9. '+' → logprob: -10.022058486938477
    10. '1' → logprob: -10.022058486938477

Token 8: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11300502717494965
    2. ' y' → logprob: -2.2380049228668213
    3. 'x' → logprob: -9.738004684448242
    4. ' ' → logprob: -9.738004684448242
    5. '<|end|>' → logprob: -9.738004684448242
    6. 'space' → logprob: -13.238004684448242
    7. ' x' → logprob: -13.988004684448242
    8. ',' → logprob: -14.113004684448242
    9. ',y' → logprob: -14.738004684448242
    10. 'Y' → logprob: -15.113004684448242

Token 9: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6316115856170654
    2. '_' → logprob: -0.8816115856170654
    3. ',' → logprob: -3.3816115856170654
    4. '=' → logprob: -4.5066118240356445
    5. '_,' → logprob: -5.7566118240356445
    6. ' =' → logprob: -6.3816118240356445
    7. ')' → logprob: -6.6316118240356445
    8. '2' → logprob: -7.0066118240356445
    9. '_=' → logprob: -7.6316118240356445
    10. '_coordinates' → logprob: -8.381611824035645

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5192444324493408
    2. '=' → logprob: -1.0192444324493408
    3. ' =' → logprob: -3.144244432449341
    4. ')' → logprob: -7.769244194030762
    5. '<|end|>' → logprob: -7.894244194030762
    6. ' ,' → logprob: -8.769244194030762
    7. '```' → logprob: -10.269244194030762
    8. '<|end|>' → logprob: -11.019244194030762
    9. '),' → logprob: -12.269244194030762
    10. ' ' → logprob: -12.269244194030762

Token 11: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3529558479785919
    2. 'x' → logprob: -1.2279558181762695
    3. ' =' → logprob: -6.3529558181762695
    4. ' ' → logprob: -6.3529558181762695
    5. '=' → logprob: -7.1029558181762695
    6. ',' → logprob: -9.10295581817627
    7. '0' → logprob: -10.47795581817627
    8. ' ,' → logprob: -11.10295581817627
    9. '  ' → logprob: -11.22795581817627
    10. ',x' → logprob: -11.97795581817627

Token 12: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005927966441959143
    2. '1' → logprob: -5.755928039550781
    3. ',' → logprob: -6.255928039550781
    4. '0' → logprob: -7.130928039550781
    5. '```' → logprob: -11.380928039550781
    6. '=' → logprob: -12.380928039550781
    7. '_,' → logprob: -12.380928039550781
    8. '<|end|>' → logprob: -13.255928039550781
    9. ',_' → logprob: -13.380928039550781
    10. '_' → logprob: -13.505928039550781

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019578641280531883
    2. '=' → logprob: -4.019578456878662
    3. ' =' → logprob: -6.769578456878662
    4. ' ,' → logprob: -9.51957893371582
    5. '<|end|>' → logprob: -9.76957893371582
    6. '_,' → logprob: -9.89457893371582
    7. '```' → logprob: -10.39457893371582
    8. ')' → logprob: -10.76957893371582
    9. '_' → logprob: -11.64457893371582
    10. ',
' → logprob: -12.14457893371582

Token 14: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.040366701781749725
    2. 'y' → logprob: -3.4153666496276855
    3. ' ' → logprob: -5.1653666496276855
    4. '<|end|>' → logprob: -7.0403666496276855
    5. ' x' → logprob: -10.165367126464844
    6. ' z' → logprob: -10.915367126464844
    7. 'z' → logprob: -11.165367126464844
    8. 'x' → logprob: -11.790367126464844
    9. ' ' → logprob: -12.040367126464844
    10. 'space' → logprob: -12.290367126464844

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031856747809797525
    2. '1' → logprob: -5.753185749053955
    3. ',' → logprob: -12.503185272216797
    4. '```' → logprob: -13.503185272216797
    5. '=' → logprob: -13.753185272216797
    6. '_' → logprob: -13.878185272216797
    7. '<|end|>' → logprob: -14.753185272216797
    8. '₂' → logprob: -15.378185272216797
    9. '  ' → logprob: -16.753185272216797
    10. ')' → logprob: -16.878185272216797

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6956008076667786
    2. ' =' → logprob: -0.6956008076667786
    3. ',' → logprob: -6.070600986480713
    4. '<|end|>' → logprob: -9.695600509643555
    5. ')' → logprob: -10.070600509643555
    6. ' ,' → logprob: -11.195600509643555
    7. ' =
' → logprob: -11.820600509643555
    8. '=

' → logprob: -12.820600509643555
    9. '=
' → logprob: -12.820600509643555
    10. ' ' → logprob: -12.945600509643555

Token 17: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269451230764389
    2. ' ' → logprob: -2.1269450187683105
    3. 'map' → logprob: -11.751945495605469
    4. '<|end|>' → logprob: -12.751945495605469
    5. ' map' → logprob: -13.126945495605469
    6. 'x' → logprob: -13.251945495605469
    7. '  ' → logprob: -14.751945495605469
    8. '[' → logprob: -14.876945495605469
    9. ' x' → logprob: -15.126945495605469
    10. 'input' → logprob: -15.501945495605469

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18261060118675232
    2. '<|end|>' → logprob: -1.8076106309890747
    3. '<|end|>' → logprob: -6.557610511779785
    4. ')' → logprob: -8.307610511779785
    5. 'user' → logprob: -8.307610511779785
    6. '```' → logprob: -8.557610511779785
    7. '(user' → logprob: -8.932610511779785
    8. ' (' → logprob: -9.432610511779785
    9. '(lambda' → logprob: -9.807610511779785
    10. '('' → logprob: -9.995110511779785

Token 19: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3701627254486084
    2. '(' → logprob: -1.4951627254486084
    3. '(input' → logprob: -3.2451627254486084
    4. '<|end|>' → logprob: -3.2451627254486084
    5. '(x' → logprob: -5.9951629638671875
    6. ')(' → logprob: -7.4951629638671875
    7. '())' → logprob: -7.6201629638671875
    8. '(user' → logprob: -7.6201629638671875
    9. '()' → logprob: -7.8701629638671875
    10. '<|end|>' → logprob: -7.9951629638671875

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016284093260765076
    2. ' input' → logprob: -4.141283988952637
    3. ')' → logprob: -8.391283988952637
    4. '(input' → logprob: -10.891283988952637
    5. ' )' → logprob: -13.516283988952637
    6. ',input' → logprob: -13.516283988952637
    7. '=input' → logprob: -14.516283988952637
    8. '<input' → logprob: -15.266283988952637
    9. '	input' → logprob: -15.516283988952637
    10. '[input' → logprob: -15.891283988952637

Token 21: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8215459585189819
    2. '())' → logprob: -0.9465459585189819
    3. ')' → logprob: -2.4465460777282715
    4. '(' → logprob: -3.3215460777282715
    5. '().' → logprob: -3.4465460777282715
    6. '(()' → logprob: -5.1965460777282715
    7. '());' → logprob: -5.5715460777282715
    8. '('' → logprob: -6.4465460777282715
    9. '();)' → logprob: -6.9465460777282715
    10. '()))' → logprob: -7.0715460777282715

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.817902173381299e-05
    2. 'strip' → logprob: -9.25009822845459
    3. 'rstrip' → logprob: -13.62509822845459
    4. ' split' → logprob: -14.50009822845459
    5. '(split' → logprob: -15.50009822845459
    6. 'spl' → logprob: -16.125097274780273
    7. ')' → logprob: -18.500097274780273
    8. 'read' → logprob: -19.625097274780273
    9. '```' → logprob: -20.000097274780273
    10. 's' → logprob: -20.000097274780273

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032220338471233845
    2. '))' → logprob: -6.5032219886779785
    3. '())' → logprob: -6.7532219886779785
    4. '(' → logprob: -8.253222465515137
    5. '`)' → logprob: -9.128222465515137
    6. '')' → logprob: -9.628222465515137
    7. '()' → logprob: -10.503222465515137
    8. '('' → logprob: -11.003222465515137
    9. '(','' → logprob: -11.378222465515137
    10. ')`' → logprob: -11.628222465515137

Token 24: 'dx' (ID: 22100)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5561071634292603
    2. ')' → logprob: -1.9311071634292603
    3. 'distance' → logprob: -2.3061070442199707
    4. 'x' → logprob: -2.9311070442199707
    5. ',' → logprob: -3.0561070442199707
    6. 'hyp' → logprob: -3.3061070442199707
    7. '
' → logprob: -4.931107044219971
    8. ':' → logprob: -5.306107044219971
    9. 'if' → logprob: -5.931107044219971
    10. '\n' → logprob: -5.931107044219971

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4854477345943451
    2. '=' → logprob: -1.2354477643966675
    3. ')' → logprob: -2.860447645187378
    4. ' =' → logprob: -4.360447883605957
    5. ' ,' → logprob: -4.735447883605957
    6. '_' → logprob: -4.985447883605957
    7. ' ' → logprob: -6.110447883605957
    8. '-' → logprob: -6.735447883605957
    9. '<|end|>' → logprob: -6.735447883605957
    10. '(' → logprob: -6.860447883605957

Token 26: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12163431942462921
    2. ' dy' → logprob: -2.2466342449188232
    3. '<|end|>' → logprob: -5.121634483337402
    4. ' ' → logprob: -6.496634483337402
    5. '_' → logprob: -8.121634483337402
    6. '=' → logprob: -8.246634483337402
    7. 'd' → logprob: -8.496634483337402
    8. ' =' → logprob: -8.621634483337402
    9. 'y' → logprob: -8.871634483337402
    10. 'space' → logprob: -9.496634483337402

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889220863580704
    2. '=' → logprob: -2.578892230987549
    3. ',' → logprob: -14.32889175415039
    4. ')' → logprob: -14.32889175415039
    5. ' =)' → logprob: -15.07889175415039
    6. ' ' → logprob: -15.82889175415039
    7. ' =
' → logprob: -15.95389175415039
    8. ')=' → logprob: -16.32889175415039
    9. '=

' → logprob: -16.82889175415039
    10. ' =
' → logprob: -16.95389175415039

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1668873280286789
    2. ' x' → logprob: -1.9168872833251953
    3. '(x' → logprob: -5.041887283325195
    4. 'abs' → logprob: -9.666887283325195
    5. ' abs' → logprob: -10.041887283325195
    6. ' (' → logprob: -10.291887283325195
    7. '(abs' → logprob: -10.791887283325195
    8. ' ' → logprob: -12.041887283325195
    9. '(h' → logprob: -12.291887283325195
    10. '(' → logprob: -12.791887283325195

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011331788846291602
    2. '1' → logprob: -9.875113487243652
    3. '₂' → logprob: -10.875113487243652
    4. ' -' → logprob: -11.625113487243652
    5. '```' → logprob: -11.625113487243652
    6. ' ' → logprob: -11.875113487243652
    7. '_' → logprob: -12.250113487243652
    8. ')' → logprob: -12.500113487243652
    9. ',' → logprob: -13.187613487243652
    10. '۲' → logprob: -13.562613487243652

Token 30: '-x' (ID: 12651)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1426849663257599
    2. '-' → logprob: -2.0176849365234375
    3. ' ' → logprob: -12.267684936523438
    4. ',' → logprob: -13.642684936523438
    5. '<|end|>' → logprob: -14.142684936523438
    6. '-x' → logprob: -14.392684936523438
    7. ')' → logprob: -14.392684936523438
    8. ' ' → logprob: -14.642684936523438
    9. ' –' → logprob: -15.267684936523438
    10. '-d' → logprob: -15.767684936523438

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '<|end|>' → logprob: -13.12500286102295
    3. 'x' → logprob: -14.87500286102295
    4. ' ' → logprob: -15.12500286102295
    5. '```' → logprob: -16.625003814697266
    6. ',' → logprob: -17.625003814697266
    7. '  ' → logprob: -17.625003814697266
    8. '' → logprob: -17.625003814697266
    9. '_' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -17.875003814697266

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34065645933151245
    2. ' ,' → logprob: -1.3406565189361572
    3. '<|end|>' → logprob: -4.340656280517578
    4. ' ' → logprob: -4.840656280517578
    5. ')' → logprob: -5.715656280517578
    6. ' ,
' → logprob: -6.840656280517578
    7. ' )' → logprob: -7.340656280517578
    8. '<|end|>' → logprob: -8.340656280517578
    9. ' dy' → logprob: -8.715656280517578
    10. ',
' → logprob: -8.840656280517578

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04860281944274902
    2. 'y' → logprob: -3.048602819442749
    3. '<|end|>' → logprob: -11.548603057861328
    4. ' ' → logprob: -12.423603057861328
    5. '	y' → logprob: -13.798603057861328
    6. ''y' → logprob: -15.923603057861328
    7. ' ' → logprob: -16.173603057861328
    8. ' dy' → logprob: -16.298603057861328
    9. ',y' → logprob: -17.048603057861328
    10. '‘y' → logprob: -17.423603057861328

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. '1' → logprob: -12.500004768371582
    3. '-' → logprob: -15.125004768371582
    4. '```' → logprob: -15.250004768371582
    5. ' -' → logprob: -15.812504768371582
    6. ' ' → logprob: -15.937504768371582
    7. '۲' → logprob: -16.687503814697266
    8. '₂' → logprob: -16.937503814697266
    9. '２' → logprob: -17.125003814697266
    10. '<|end|>' → logprob: -17.750003814697266

Token 35: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8323735594749451
    2. ' -' → logprob: -0.8323735594749451
    3. '-y' → logprob: -2.08237361907959
    4. '2' → logprob: -6.08237361907959
    5. '1' → logprob: -6.45737361907959
    6. '-d' → logprob: -7.20737361907959
    7. '-x' → logprob: -7.95737361907959
    8. '<|end|>' → logprob: -9.70737361907959
    9. '-
' → logprob: -10.08237361907959
    10. '-h' → logprob: -10.45737361907959

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. '2' → logprob: -10.375033378601074
    3. '<|end|>' → logprob: -13.250033378601074
    4. ' ' → logprob: -15.625033378601074
    5. '```' → logprob: -17.625032424926758
    6. '-' → logprob: -17.750032424926758
    7. ',' → logprob: -17.875032424926758
    8. 'x' → logprob: -18.000032424926758
    9. '<|end|>' → logprob: -18.250032424926758
    10. ')' → logprob: -18.312532424926758

Token 37: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6278191208839417
    2. '
' → logprob: -1.1278190612792969
    3. 'hyp' → logprob: -2.877819061279297
    4. 'print' → logprob: -4.002819061279297
    5. ' 
' → logprob: -4.627819061279297
    6. 'distance' → logprob: -5.002819061279297
    7. '.' → logprob: -5.252819061279297
    8. '\n' → logprob: -5.252819061279297
    9. '*' → logprob: -5.252819061279297
    10. '<|end|>' → logprob: -5.502819061279297

Token 38: 'vector' (ID: 7603)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.45828989148139954
    2. 'd' → logprob: -2.208289861679077
    3. 'dist' → logprob: -2.458289861679077
    4. 'print' → logprob: -2.458289861679077
    5. ' distance' → logprob: -3.458289861679077
    6. ' d' → logprob: -4.458290100097656
    7. ' print' → logprob: -4.958290100097656
    8. ' 
' → logprob: -4.958290100097656
    9. ' dist' → logprob: -5.083290100097656
    10. ' ' → logprob: -5.958290100097656

Token 39: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09827269613742828
    2. ' =' → logprob: -3.4732728004455566
    3. 's' → logprob: -3.5982728004455566
    4. '=' → logprob: -3.8482728004455566
    5. '_length' → logprob: -4.598272800445557
    6. ')' → logprob: -7.098272800445557
    7. '_distance' → logprob: -7.723272800445557
    8. '_s' → logprob: -7.848272800445557
    9. ' _' → logprob: -7.973272800445557
    10. '_len' → logprob: -8.348272323608398

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28778770565986633
    2. '_' → logprob: -1.662787675857544
    3. '=' → logprob: -3.162787675857544
    4. '.' → logprob: -5.537787914276123
    5. '[' → logprob: -5.787787914276123
    6. ',' → logprob: -6.162787914276123
    7. '1' → logprob: -6.162787914276123
    8. 's' → logprob: -6.412787914276123
    9. ' ' → logprob: -6.787787914276123
    10. '_x' → logprob: -6.912787914276123

Token 41: ' hypot' (ID: 85756)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7418278455734253
    2. '(dx' → logprob: -0.7418278455734253
    3. '(h' → logprob: -3.366827964782715
    4. '[' → logprob: -5.366827964782715
    5. '(' → logprob: -5.616827964782715
    6. ' [' → logprob: -5.866827964782715
    7. ' dx' → logprob: -7.116827964782715
    8. '[h' → logprob: -8.116827964782715
    9. '(d' → logprob: -8.366827964782715
    10. 'hyp' → logprob: -8.866827964782715

Token 42: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.029752571135759354
    2. '(' → logprob: -3.529752492904663
    3. '(x' → logprob: -14.529752731323242
    4. '(d' → logprob: -14.654752731323242
    5. ' (' → logprob: -15.529752731323242
    6. '(
' → logprob: -15.779752731323242
    7. '(dp' → logprob: -16.154752731323242
    8. '(abs' → logprob: -16.279752731323242
    9. '(`' → logprob: -16.404752731323242
    10. 'dx' → logprob: -16.654752731323242

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ')' → logprob: -14.25003719329834
    4. ',d' → logprob: -15.25003719329834
    5. ',)' → logprob: -15.62503719329834
    6. ',

' → logprob: -15.62503719329834
    7. '‌,' → logprob: -16.875036239624023
    8. ',y' → logprob: -17.125036239624023
    9. '```' → logprob: -17.125036239624023
    10. '*,' → logprob: -17.250036239624023

Token 44: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.31326377391815186
    2. ' dy' → logprob: -1.3132637739181519
    3. ')' → logprob: -13.813263893127441
    4. '.dy' → logprob: -14.313263893127441
    5. 'd' → logprob: -15.688263893127441
    6. ' ' → logprob: -16.813262939453125
    7. '-d' → logprob: -17.313262939453125
    8. 'Dy' → logprob: -17.438262939453125
    9. '	d' → logprob: -17.563262939453125
    10. 'dym' → logprob: -17.688262939453125

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.500001907348633
    4. ' )' → logprob: -16.750001907348633
    5. '),' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.125001907348633
    7. ')**' → logprob: -17.125001907348633
    8. ')))' → logprob: -18.500001907348633
    9. ')

' → logprob: -18.500001907348633
    10. ')#' → logprob: -18.500001907348633

Token 46: 'q' (ID: 80)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.43292662501335144
    2. '
' → logprob: -1.9329266548156738
    3. ')' → logprob: -2.682926654815674
    4. '+' → logprob: -3.807926654815674
    5. ' ' → logprob: -4.182926654815674
    6. '<|end|>' → logprob: -4.432926654815674
    7. '  
' → logprob: -4.557926654815674
    8. ' 
' → logprob: -4.557926654815674
    9. '/' → logprob: -4.807926654815674
    10. '#' → logprob: -5.057926654815674

Token 47: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0061112819239497185
    2. '/' → logprob: -5.381111145019531
    3. '#' → logprob: -8.506111145019531
    4. '=' → logprob: -8.756111145019531
    5. '*' → logprob: -8.881111145019531
    6. 'ue' → logprob: -8.881111145019531
    7. 'ual' → logprob: -9.006111145019531
    8. '.' → logprob: -9.256111145019531
    9. '**' → logprob: -9.881111145019531
    10. '(' → logprob: -10.006111145019531

Token 48: ' int' (ID: 677)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.34771206974983215
    2. 'vector' → logprob: -2.0977120399475098
    3. ' dx' → logprob: -3.3477120399475098
    4. 'hyp' → logprob: -3.4727120399475098
    5. ' int' → logprob: -4.34771203994751
    6. ' hypot' → logprob: -4.59771203994751
    7. ' x' → logprob: -4.72271203994751
    8. 'x' → logprob: -4.72271203994751
    9. 'int' → logprob: -4.84771203994751
    10. 'dx' → logprob: -4.84771203994751

Token 49: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1004311665892601
    2. '(input' → logprob: -2.350431203842163
    3. '('' → logprob: -9.350431442260742
    4. ' (' → logprob: -9.850431442260742
    5. 'input' → logprob: -10.475431442260742
    6. '()' → logprob: -10.475431442260742
    7. '(
' → logprob: -11.475431442260742
    8. '((' → logprob: -13.100431442260742
    9. ' ' → logprob: -13.225431442260742
    10. ''' → logprob: -13.350431442260742

Token 50: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3149731457233429
    2. '()' → logprob: -1.3149731159210205
    3. ')' → logprob: -7.1899733543396
    4. '(' → logprob: -7.1899733543396
    5. '().' → logprob: -9.189972877502441
    6. '())
' → logprob: -10.189972877502441
    7. '()
' → logprob: -11.314972877502441
    8. '("' → logprob: -11.314972877502441
    9. '('' → logprob: -11.439972877502441
    10. ' ())' → logprob: -12.439972877502441

Token 51: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6646265387535095
    2. 'for' → logprob: -0.7896265387535095
    3. '\n' → logprob: -4.164626598358154
    4. ' for' → logprob: -4.664626598358154
    5. ' 
' → logprob: -6.414626598358154
    6. '\' → logprob: -6.414626598358154
    7. '' → logprob: -7.289626598358154
    8. '```' → logprob: -7.289626598358154
    9. '  
' → logprob: -7.664626598358154
    10. '<|end|>' → logprob: -7.664626598358154

Token 52: ' x' (ID: 1215)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3253512680530548
    2. '_' → logprob: -1.5753512382507324
    3. ' ' → logprob: -2.7003512382507324
    4. ' i' → logprob: -5.700351238250732
    5. ' q' → logprob: -8.45035171508789
    6. ' ' → logprob: -11.20035171508789
    7. '_i' → logprob: -11.57535171508789
    8. '  ' → logprob: -11.70035171508789
    9. ' ‌' → logprob: -11.70035171508789
    10. ' ▁' → logprob: -13.20035171508789

Token 53: '3' (ID: 18)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4666554033756256
    2. ' in' → logprob: -1.2166553735733032
    3. 'in' → logprob: -2.8416554927825928
    4. ' ' → logprob: -4.466655254364014
    5. ' _' → logprob: -5.841655254364014
    6. ' i' → logprob: -6.341655254364014
    7. 'range' → logprob: -8.216655731201172
    8. 'n' → logprob: -8.341655731201172
    9. '_in' → logprob: -8.341655731201172
    10. ',' → logprob: -8.466655731201172

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011822503292933106
    2. ' ,' → logprob: -7.0011820793151855
    3. ' in' → logprob: -8.501182556152344
    4. ' ' → logprob: -10.126182556152344
    5. ',y' → logprob: -10.876182556152344
    6. '<|end|>' → logprob: -13.251182556152344
    7. 'in' → logprob: -13.376182556152344
    8. '1' → logprob: -14.251182556152344
    9. '0' → logprob: -14.251182556152344
    10. '_,' → logprob: -15.001182556152344

Token 55: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25195959210395813
    2. 'y' → logprob: -1.5019595623016357
    3. '<|end|>' → logprob: -11.751959800720215
    4. '_' → logprob: -11.876959800720215
    5. '_y' → logprob: -11.876959800720215
    6. ' ' → logprob: -11.876959800720215
    7. ' _' → logprob: -13.626959800720215
    8. '	y' → logprob: -16.1269588470459
    9. '<|end|>' → logprob: -16.6269588470459
    10. 'x' → logprob: -16.7519588470459

Token 56: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006066851783543825
    2. '1' → logprob: -5.631066799163818
    3. ' in' → logprob: -6.756066799163818
    4. 'in' → logprob: -7.131066799163818
    5. '_' → logprob: -7.756066799163818
    6. ',' → logprob: -10.256067276000977
    7. ' ' → logprob: -11.256067276000977
    8. '_,' → logprob: -11.756067276000977
    9. '```' → logprob: -12.881067276000977
    10. '<|end|>' → logprob: -13.006067276000977

Token 57: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.26305127143859863
    2. ' in' → logprob: -1.5130512714385986
    3. ',' → logprob: -4.5130510330200195
    4. ' ' → logprob: -10.88805103302002
    5. ' ,' → logprob: -10.88805103302002
    6. ',in' → logprob: -11.38805103302002
    7. '<|end|>' → logprob: -12.01305103302002
    8. '	in' → logprob: -12.01305103302002
    9. ')' → logprob: -12.13805103302002
    10. 'import' → logprob: -12.26305103302002

Token 58: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6920741200447083
    2. '[' → logprob: -0.8170741200447083
    3. ' map' → logprob: -4.067074298858643
    4. ' range' → logprob: -4.442074298858643
    5. '[q' → logprob: -4.817074298858643
    6. '[input' → logprob: -5.192074298858643
    7. 'map' → logprob: -5.567074298858643
    8. '[int' → logprob: -5.942074298858643
    9. 'range' → logprob: -6.067074298858643
    10. ' (' → logprob: -6.192074298858643

Token 59: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011573290452361107
    2. ' map' → logprob: -4.511573314666748
    3. '(map' → logprob: -8.13657283782959
    4. '[' → logprob: -9.01157283782959
    5. '[int' → logprob: -10.13657283782959
    6. 'int' → logprob: -10.76157283782959
    7. 'tuple' → logprob: -10.88657283782959
    8. ')' → logprob: -11.51157283782959
    9. '	map' → logprob: -12.26157283782959
    10. ' [' → logprob: -12.26157283782959

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000827017764095217
    2. '(' → logprob: -7.375826835632324
    3. '<int' → logprob: -9.875826835632324
    4. 'int' → logprob: -10.125826835632324
    5. '(lambda' → logprob: -10.250826835632324
    6. ',int' → logprob: -10.625826835632324
    7. '[int' → logprob: -10.875826835632324
    8. '<|end|>' → logprob: -11.125826835632324
    9. ')' → logprob: -12.375826835632324
    10. '(tuple' → logprob: -12.750826835632324

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009687394835054874
    2. ',input' → logprob: -4.759687423706055
    3. '(),' → logprob: -6.884687423706055
    4. 'input' → logprob: -10.634687423706055
    5. '(input' → logprob: -11.134687423706055
    6. ' ,' → logprob: -12.509687423706055
    7. '(' → logprob: -13.134687423706055
    8. ')' → logprob: -13.884687423706055
    9. '()' → logprob: -14.134687423706055
    10. '),' → logprob: -14.259687423706055

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011051944456994534
    2. ' input' → logprob: -4.511052131652832
    3. '(input' → logprob: -13.011052131652832
    4. ')' → logprob: -14.011052131652832
    5. ',input' → logprob: -14.261052131652832
    6. '	input' → logprob: -15.511052131652832
    7. '=input' → logprob: -15.886052131652832
    8. '[input' → logprob: -16.511051177978516
    9. '<input' → logprob: -17.511051177978516
    10. ',' → logprob: -17.886051177978516

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7835754988482222e-05
    2. '()' → logprob: -11.000018119812012
    3. ' ().' → logprob: -14.375018119812012
    4. '(' → logprob: -15.250018119812012
    5. ')' → logprob: -15.750018119812012
    6. '()
' → logprob: -16.875017166137695
    7. ').' → logprob: -16.875017166137695
    8. '.' → logprob: -17.250017166137695
    9. '()).' → logprob: -17.750017166137695
    10. '   ' → logprob: -18.250017166137695

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. ' split' → logprob: -13.250001907348633
    3. 'strip' → logprob: -14.750001907348633
    4. '.split' → logprob: -17.125001907348633
    5. ')' → logprob: -17.625001907348633
    6. '(split' → logprob: -18.375001907348633
    7. 'rstrip' → logprob: -18.750001907348633
    8. 'spl' → logprob: -18.875001907348633
    9. ' ' → logprob: -19.625001907348633
    10. 's' → logprob: -19.875001907348633

Token 65: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7534250617027283
    2. '()),' → logprob: -0.7534250617027283
    3. '()' → logprob: -3.003425121307373
    4. '()))' → logprob: -5.503425121307373
    5. ')' → logprob: -5.628425121307373
    6. '),' → logprob: -7.128425121307373
    7. '(),' → logprob: -8.753424644470215
    8. '())
' → logprob: -10.128424644470215
    9. '))' → logprob: -10.378424644470215
    10. '()),
' → logprob: -10.378424644470215

Token 66: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07978702336549759
    2. ')' → logprob: -2.579787015914917
    3. '():' → logprob: -7.829787254333496
    4. ',' → logprob: -8.954787254333496
    5. '()' → logprob: -9.079787254333496
    6. '),' → logprob: -9.454787254333496
    7. ':' → logprob: -10.079787254333496
    8. ' ):' → logprob: -10.079787254333496
    9. 'for' → logprob: -10.329787254333496
    10. ',)' → logprob: -10.704787254333496

Token 67: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3499141335487366
    2. ' range' → logprob: -1.7249140739440918
    3. ' _' → logprob: -2.224914073944092
    4. 'range' → logprob: -4.849914073944092
    5. '_range' → logprob: -6.974914073944092
    6. ' in' → logprob: -9.34991455078125
    7. ' ' → logprob: -9.34991455078125
    8. '_in' → logprob: -11.59991455078125
    9. '  ' → logprob: -11.97491455078125
    10. ' ' → logprob: -12.09991455078125

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004405432380735874
    2. 'in' → logprob: -5.504405498504639
    3. ' range' → logprob: -8.50440502166748
    4. 'range' → logprob: -9.50440502166748
    5. ' ' → logprob: -10.12940502166748
    6. ' _' → logprob: -13.00440502166748
    7. '  ' → logprob: -13.12940502166748
    8. '_' → logprob: -13.12940502166748
    9. ' q' → logprob: -13.75440502166748
    10. ')' → logprob: -14.75440502166748

Token 69: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193482637405396
    2. 'range' → logprob: -1.5019347667694092
    3. ' ' → logprob: -12.876935005187988
    4. '	range' → logprob: -13.001935005187988
    5. '  ' → logprob: -15.501935005187988
    6. '(range' → logprob: -15.751935005187988
    7. ' xrange' → logprob: -15.751935005187988
    8. ' ran' → logprob: -16.001934051513672
    9. '_range' → logprob: -16.376934051513672
    10. 'rang' → logprob: -16.501934051513672

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39393967390060425
    2. 'range' → logprob: -1.143939733505249
    3. ' range' → logprob: -5.01893949508667
    4. ' ' → logprob: -8.393939971923828
    5. 'None' → logprob: -8.768939971923828
    6. '_' → logprob: -10.643939971923828
    7. '   ' → logprob: -11.518939971923828
    8. ''' → logprob: -12.393939971923828
    9. ' None' → logprob: -13.268939971923828
    10. '	range' → logprob: -13.393939971923828

Token 71: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.03988364711403847
    2. ']' → logprob: -3.289883613586426
    3. ',' → logprob: -6.539883613586426
    4. ']*(' → logprob: -9.039883613586426
    5. '..' → logprob: -9.414883613586426
    6. ']+' → logprob: -9.664883613586426
    7. ',q' → logprob: -10.289883613586426
    8. ',
' → logprob: -11.289883613586426
    9. ']*)' → logprob: -11.289883613586426
    10. '
' → logprob: -11.289883613586426

Token 72: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010336418636143208
    2. ' q' → logprob: -6.876033782958984
    3. '(q' → logprob: -14.501033782958984
    4. '	q' → logprob: -16.001033782958984
    5. ' ' → logprob: -16.626033782958984
    6. '_q' → logprob: -17.251033782958984
    7. '1' → logprob: -17.876033782958984
    8. '   ' → logprob: -17.876033782958984
    9. '  ' → logprob: -18.001033782958984
    10. '(' → logprob: -18.001033782958984

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0053020622581243515
    2. ')' → logprob: -5.2553019523620605
    3. ':' → logprob: -10.005302429199219
    4. ' ):' → logprob: -11.005302429199219
    5. '):
' → logprob: -12.255302429199219
    6. ')：' → logprob: -15.255302429199219
    7. ',' → logprob: -15.630302429199219
    8. ' ' → logprob: -15.755302429199219
    9. '）：' → logprob: -15.755302429199219
    10. ':)' → logprob: -15.755302429199219

Token 74: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.878136396408081
    2. '   ' → logprob: -1.003136396408081
    3. ' ' → logprob: -1.753136396408081
    4. ' 
' → logprob: -4.50313663482666
    5. ' ' → logprob: -5.37813663482666
    6. '<|end|>' → logprob: -5.75313663482666
    7. ' vector' → logprob: -5.87813663482666
    8. ' `' → logprob: -5.87813663482666
    9. ' s' → logprob: -5.87813663482666
    10. '```' → logprob: -6.00313663482666

Token 75: ' d' (ID: 272)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.08667430281639099
    2. '   ' → logprob: -3.836674213409424
    3. 'dx' → logprob: -3.961674213409424
    4. ' vector' → logprob: -4.586674213409424
    5. '    ' → logprob: -4.836674213409424
    6. ' dp' → logprob: -4.961674213409424
    7. ' d' → logprob: -5.961674213409424
    8. ' r' → logprob: -6.086674213409424
    9. ' px' → logprob: -6.336674213409424
    10. ' print' → logprob: -6.461674213409424

Token 76: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024902787059545517
    2. ' =' → logprob: -4.399902820587158
    3. '1' → logprob: -5.024902820587158
    4. '=' → logprob: -5.524902820587158
    5. 'ist' → logprob: -7.649902820587158
    6. '_' → logprob: -7.774902820587158
    7. 'istance' → logprob: -8.52490234375
    8. 'a' → logprob: -8.64990234375
    9. ' ' → logprob: -9.77490234375
    10. '_x' → logprob: -9.77490234375

Token 77: ' ((' (ID: 3536)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07766366004943848
    2. 'hyp' → logprob: -3.5776636600494385
    3. ' abs' → logprob: -3.8276636600494385
    4. '(abs' → logprob: -3.8276636600494385
    5. '(h' → logprob: -6.327663421630859
    6. ' hypot' → logprob: -7.202663421630859
    7. ' hyp' → logprob: -8.82766342163086
    8. 'dx' → logprob: -9.07766342163086
    9. '(x' → logprob: -9.70266342163086
    10. '(dx' → logprob: -9.70266342163086

Token 78: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03987780585885048
    2. 'dx' → logprob: -3.4148778915405273
    3. 'hyp' → logprob: -5.914877891540527
    4. '(x' → logprob: -6.789877891540527
    5. 'y' → logprob: -7.539877891540527
    6. 'abs' → logprob: -7.664877891540527
    7. 'dy' → logprob: -7.914877891540527
    8. '(dx' → logprob: -8.039877891540527
    9. '(h' → logprob: -8.539877891540527
    10. 'vector' → logprob: -8.539877891540527

Token 79: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.016150614246726036
    2. '1' → logprob: -4.14115047454834
    3. '2' → logprob: -9.26615047454834
    4. ' -' → logprob: -11.26615047454834
    5. '```' → logprob: -14.07865047454834
    6. '_' → logprob: -14.14115047454834
    7. '   ' → logprob: -14.26615047454834
    8. '-' → logprob: -14.51615047454834
    9. '３' → logprob: -14.57865047454834
    10. ' ' → logprob: -14.76615047454834

Token 80: '-x' (ID: 12651)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.565282940864563
    2. ' -' → logprob: -0.940282940864563
    3. '-x' → logprob: -3.1902828216552734
    4. '-)' → logprob: -9.815282821655273
    5. ')' → logprob: -11.815282821655273
    6. ',' → logprob: -12.065282821655273
    7. ' ' → logprob: -12.065282821655273
    8. '-d' → logprob: -12.190282821655273
    9. ')-' → logprob: -12.315282821655273
    10. '<|end|>' → logprob: -12.315282821655273

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011870148591697216
    2. '2' → logprob: -7.001186847686768
    3. ')' → logprob: -8.376187324523926
    4. '<|end|>' → logprob: -11.126187324523926
    5. '*)' → logprob: -11.626187324523926
    6. ',' → logprob: -12.001187324523926
    7. ' ' → logprob: -12.251187324523926
    8. ' -' → logprob: -13.876187324523926
    9. '')' → logprob: -13.876187324523926
    10. '`)' → logprob: -14.126187324523926

Token 82: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.26064011454582214
    2. ')' → logprob: -1.5106401443481445
    3. ')*(' → logprob: -5.3856401443481445
    4. ')**' → logprob: -5.5106401443481445
    5. '*)' → logprob: -10.760640144348145
    6. ' )' → logprob: -11.885640144348145
    7. '-' → logprob: -12.635640144348145
    8. '*' → logprob: -13.135640144348145
    9. '   ' → logprob: -13.260640144348145
    10. '

' → logprob: -13.385640144348145

Token 83: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.013946875929832458
    2. 'dy' → logprob: -4.388947010040283
    3. ' dx' → logprob: -6.638947010040283
    4. '-d' → logprob: -9.763946533203125
    5. ' dy' → logprob: -10.138946533203125
    6. '(dx' → logprob: -10.888946533203125
    7. '-' → logprob: -13.138946533203125
    8. ' -' → logprob: -13.513946533203125
    9. '   ' → logprob: -13.513946533203125
    10. 'd' → logprob: -13.638946533203125

Token 84: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47506532073020935
    2. ' +' → logprob: -0.9750653505325317
    3. '+(' → logprob: -7.100065231323242
    4. ' +(' → logprob: -9.850065231323242
    5. ')+(' → logprob: -10.100065231323242
    6. ')' → logprob: -10.725065231323242
    7. '+)' → logprob: -11.475065231323242
    8. '+y' → logprob: -11.475065231323242
    9. ')+' → logprob: -12.225065231323242
    10. '-' → logprob: -12.350065231323242

Token 85: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.035463057458400726
    2. '(y' → logprob: -3.4104630947113037
    3. '(x' → logprob: -6.660462856292725
    4. '(d' → logprob: -8.160463333129883
    5. '(' → logprob: -9.535463333129883
    6. ' dy' → logprob: -9.785463333129883
    7. '(dx' → logprob: -9.910463333129883
    8. '<|end|>' → logprob: -10.160463333129883
    9. ' ' → logprob: -11.785463333129883
    10. 'dy' → logprob: -12.035463333129883

Token 86: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5267451405525208
    2. '(y' → logprob: -1.151745080947876
    3. ' y' → logprob: -2.651745080947876
    4. '<|end|>' → logprob: -4.026745319366455
    5. ' (' → logprob: -5.901745319366455
    6. 'dy' → logprob: -6.901745319366455
    7. '(x' → logprob: -8.276744842529297
    8. ' dy' → logprob: -8.401744842529297
    9. ')' → logprob: -8.651744842529297
    10. '(' → logprob: -9.026744842529297

Token 87: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. '<|end|>' → logprob: -14.250000953674316
    3. ' -' → logprob: -16.875
    4. ' ' → logprob: -17.125
    5. '۳' → logprob: -17.625
    6. '-' → logprob: -17.875
    7. '<|end|>' → logprob: -18.5
    8. '৩' → logprob: -18.6875
    9. '  ' → logprob: -19.0
    10. '³' → logprob: -19.375

Token 88: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2477160394191742
    2. '-y' → logprob: -1.9977160692214966
    3. '-' → logprob: -2.497715950012207
    4. '<|end|>' → logprob: -6.622715950012207
    5. '-x' → logprob: -10.122715950012207
    6. ' ' → logprob: -10.497715950012207
    7. 'y' → logprob: -10.872715950012207
    8. '1' → logprob: -10.997715950012207
    9. '-python' → logprob: -11.622715950012207
    10. ',' → logprob: -12.122715950012207

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014472603797912598
    2. '3' → logprob: -7.0014472007751465
    3. '-' → logprob: -7.8764472007751465
    4. ')' → logprob: -9.126447677612305
    5. '<|end|>' → logprob: -11.251447677612305
    6. ' -' → logprob: -11.626447677612305
    7. ' ' → logprob: -11.751447677612305
    8. '-)' → logprob: -12.501447677612305
    9. '2' → logprob: -13.376447677612305
    10. 'dy' → logprob: -13.376447677612305

Token 90: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32117822766304016
    2. ')*' → logprob: -1.3211781978607178
    3. ')' → logprob: -5.071178436279297
    4. '*)' → logprob: -6.571178436279297
    5. '*y' → logprob: -8.946178436279297
    6. ')*(' → logprob: -9.821178436279297
    7. ')**' → logprob: -11.946178436279297
    8. '*d' → logprob: -12.196178436279297
    9. '*

' → logprob: -12.571178436279297
    10. ' *' → logprob: -13.321178436279297

Token 91: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0007117166533134878
    2. ' dy' → logprob: -7.250711917877197
    3. 'd' → logprob: -14.000711441040039
    4. '   ' → logprob: -14.500711441040039
    5. ' ' → logprob: -16.50071144104004
    6. '.dy' → logprob: -16.50071144104004
    7. ')' → logprob: -16.87571144104004
    8. 'dx' → logprob: -16.87571144104004
    9. 'dym' → logprob: -17.00071144104004
    10. '  ' → logprob: -17.37571144104004

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03294072672724724
    2. ' )' → logprob: -3.532940626144409
    3. ')/' → logprob: -6.157940864562988
    4. ')**' → logprob: -7.032940864562988
    5. ')/(' → logprob: -8.657940864562988
    6. '))' → logprob: -13.032940864562988
    7. ' /' → logprob: -13.157940864562988
    8. ')
' → logprob: -13.407940864562988
    9. ' )
' → logprob: -14.282940864562988
    10. ')*' → logprob: -14.282940864562988

Token 93: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.030559100210666656
    2. '/' → logprob: -3.5305590629577637
    3. '/h' → logprob: -8.280559539794922
    4. ' /
' → logprob: -8.780559539794922
    5. ')' → logprob: -9.280559539794922
    6. ')/' → logprob: -9.405559539794922
    7. ')/(' → logprob: -10.030559539794922
    8. ' ' → logprob: -10.405559539794922
    9. '<|end|>' → logprob: -10.530559539794922
    10. '>' → logprob: -10.780559539794922

Token 94: ' (' (ID: 350)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.02975187823176384
    2. ' vector' → logprob: -3.529751777648926
    3. '(vector' → logprob: -14.404751777648926
    4. '	vector' → logprob: -14.654751777648926
    5. '/vector' → logprob: -16.154752731323242
    6. '<vector' → logprob: -16.404752731323242
    7. 'Vector' → logprob: -17.029752731323242
    8. '.vector' → logprob: -17.154752731323242
    9. '-vector' → logprob: -17.279752731323242
    10. '_vector' → logprob: -17.279752731323242

Token 95: 'vector' (ID: 7603)
  Prédit: 'vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0015239100903272629
    2. ' vector' → logprob: -6.501523971557617
    3. '(vector' → logprob: -10.876523971557617
    4. 'dx' → logprob: -13.876523971557617
    5. '(' → logprob: -14.251523971557617
    6. '(dx' → logprob: -15.126523971557617
    7. '   ' → logprob: -15.751523971557617
    8. '	vector' → logprob: -16.001523971557617
    9. ')' → logprob: -16.126523971557617
    10. ' (' → logprob: -16.251523971557617

Token 96: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. ' _' → logprob: -18.875
    4. ')_' → logprob: -19.5
    5. 'a' → logprob: -20.125
    6. '_b' → logprob: -20.375
    7. ')' → logprob: -20.625
    8. '_x' → logprob: -20.625
    9. '_vector' → logprob: -20.75
    10. '_e' → logprob: -21.375

Token 97: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0251347366720438
    2. ')' → logprob: -4.275134563446045
    3. ')**' → logprob: -5.400134563446045
    4. '**)' → logprob: -5.775134563446045
    5. ' **' → logprob: -6.400134563446045
    6. ' **)' → logprob: -7.150134563446045
    7. '2' → logprob: -7.900134563446045
    8. ' )' → logprob: -8.150135040283203
    9. ' ' → logprob: -9.400135040283203
    10. '*' → logprob: -9.650135040283203

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '1' → logprob: -14.375053405761719
    4. '```' → logprob: -15.250053405761719
    5. '22' → logprob: -16.00005340576172
    6. ' ' → logprob: -16.06255340576172
    7. '²' → logprob: -16.12505340576172
    8. '   ' → logprob: -16.12505340576172
    9. '21' → logprob: -16.81255340576172
    10. '۲' → logprob: -17.06255340576172

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.138441237155348e-05
    2. ' )' → logprob: -10.125091552734375
    3. ')**' → logprob: -10.875091552734375
    4. ')
' → logprob: -11.250091552734375
    5. '   ' → logprob: -11.500091552734375
    6. ')*' → logprob: -12.625091552734375
    7. '))' → logprob: -12.875091552734375
    8. ')+' → logprob: -14.000091552734375
    9. '**' → logprob: -14.500091552734375
    10. ' ' → logprob: -14.625091552734375

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019693158101290464
    2. ')' → logprob: -7.126969337463379
    3. ',' → logprob: -7.501969337463379
    4. '    
' → logprob: -8.876969337463379
    5. ' ' → logprob: -9.126969337463379
    6. '  ' → logprob: -9.501969337463379
    7. '    ' → logprob: -9.501969337463379
    8. ' if' → logprob: -10.126969337463379
    9. '<|end|>' → logprob: -10.501969337463379
    10. '   
' → logprob: -10.626969337463379

Token 101: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1417495459318161
    2. 'p' → logprob: -2.266749620437622
    3. 't' → logprob: -4.766749382019043
    4. 'c' → logprob: -4.891749382019043
    5. 'if' → logprob: -5.641749382019043
    6. 'print' (adapté à ' print') → logprob: -6.641749382019043
    7. 'd' → logprob: -6.766749382019043
    8. 'x' → logprob: -6.766749382019043
    9. ' if' → logprob: -6.891749382019043
    10. 'v' → logprob: -7.391749382019043

Token 102: '(x' (ID: 4061)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.7438120245933533
    2. '(' → logprob: -1.368812084197998
    3. '(abs' → logprob: -1.868812084197998
    4. '(d' → logprob: -2.868812084197998
    5. '(f' → logprob: -3.368812084197998
    6. '((' → logprob: -4.868812084197998
    7. '(int' → logprob: -5.493812084197998
    8. '(max' → logprob: -5.618812084197998
    9. '(h' → logprob: -5.743812084197998
    10. '('' → logprob: -6.368812084197998

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5235795378684998
    2. '3' → logprob: -0.8985795378684998
    3. '2' → logprob: -7.8985795974731445
    4. ')' → logprob: -10.773579597473145
    5. '+' → logprob: -11.648579597473145
    6. 'x' → logprob: -11.648579597473145
    7. 'd' → logprob: -12.023579597473145
    8. ' ' → logprob: -12.148579597473145
    9. ',' → logprob: -12.273579597473145
    10. ' +' → logprob: -12.398579597473145

Token 104: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5764158964157104
    2. '+' → logprob: -0.8264158964157104
    3. '+d' → logprob: -7.701416015625
    4. ',' → logprob: -12.201416015625
    5. '+x' → logprob: -12.326416015625
    6. ')' → logprob: -12.701416015625
    7. ' plus' → logprob: -13.576416015625
    8. '+
' → logprob: -13.701416015625
    9. ' +
' → logprob: -13.826416015625
    10. '+y' → logprob: -13.951416015625

Token 105: 'dx' (ID: 22100)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3458887040615082
    2. 'dx' → logprob: -1.3458887338638306
    3. 'int' → logprob: -3.595888614654541
    4. 'round' → logprob: -5.845888614654541
    5. ' d' → logprob: -6.845888614654541
    6. ' dx' → logprob: -7.720888614654541
    7. '   ' → logprob: -9.0958890914917
    8. ' int' → logprob: -9.4708890914917
    9. ' round' → logprob: -10.7208890914917
    10. 'vector' → logprob: -10.8458890914917

Token 106: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.016739267855882645
    2. '*' → logprob: -4.141739368438721
    3. ' *' → logprob: -7.266739368438721
    4. '*q' → logprob: -13.641738891601562
    5. '*y' → logprob: -14.266738891601562
    6. '*,' → logprob: -14.391738891601562
    7. '*c' → logprob: -14.516738891601562
    8. 'd' → logprob: -14.641738891601562
    9. ',' → logprob: -14.641738891601562
    10. '*t' → logprob: -14.891738891601562

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1809050589799881
    2. ' ,' → logprob: -1.8059051036834717
    3. ',y' → logprob: -6.805904865264893
    4. ')' → logprob: -11.05590534210205
    5. ',d' → logprob: -11.55590534210205
    6. ',end' → logprob: -12.30590534210205
    7. ' ' → logprob: -12.43090534210205
    8. ' ,
' → logprob: -12.43090534210205
    9. '   ' → logprob: -12.68090534210205
    10. ' y' → logprob: -13.18090534210205

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38710200786590576
    2. ' y' → logprob: -1.1371020078659058
    3. '"' → logprob: -9.137102127075195
    4. ''y' → logprob: -10.012102127075195
    5. ' ' → logprob: -10.637102127075195
    6. '    ' → logprob: -10.887102127075195
    7. ''' → logprob: -11.762102127075195
    8. '   ' → logprob: -11.762102127075195
    9. '(y' → logprob: -11.887102127075195
    10. '  ' → logprob: -12.012102127075195

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '3' → logprob: -12.625004768371582
    3. '2' → logprob: -14.500004768371582
    4. '+' → logprob: -15.250004768371582
    5. ' ' → logprob: -15.875004768371582
    6. ')' → logprob: -15.937504768371582
    7. '_' → logprob: -15.937504768371582
    8. '<|end|>' → logprob: -16.3125057220459
    9. '```' → logprob: -16.6875057220459
    10. '[' → logprob: -16.6875057220459

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003662020608317107
    2. ' +' → logprob: -8.2503662109375
    3. '+d' → logprob: -9.6253662109375
    4. '+x' → logprob: -10.3753662109375
    5. '+y' → logprob: -13.3753662109375
    6. '+
' → logprob: -13.5003662109375
    7. '+k' → logprob: -14.0003662109375
    8. ')' → logprob: -14.0003662109375
    9. ')+' → logprob: -14.3753662109375
    10. '3' → logprob: -14.7503662109375

Token 111: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0036773940082639456
    2. 'd' → logprob: -5.7536773681640625
    3. ' dy' → logprob: -7.6286773681640625
    4. 'dx' → logprob: -12.753677368164062
    5. '*' → logprob: -12.878677368164062
    6. 'dym' → logprob: -13.128677368164062
    7. '-d' → logprob: -13.503677368164062
    8. '*d' → logprob: -13.628677368164062
    9. '   ' → logprob: -14.003677368164062
    10. ' d' → logprob: -14.253677368164062

Token 112: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.0002905334113165736
    2. '*' → logprob: -8.250290870666504
    3. 'd' → logprob: -10.500290870666504
    4. ' *' → logprob: -13.750290870666504
    5. '*)' → logprob: -15.750290870666504
    6. ')d' → logprob: -16.375289916992188
    7. '*q' → logprob: -16.500289916992188
    8. ')' → logprob: -16.500289916992188
    9. '**' → logprob: -16.750289916992188
    10. ')*' → logprob: -16.875289916992188

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ' )' → logprob: -12.500006675720215
    3. '))' → logprob: -13.875006675720215
    4. '   ' → logprob: -14.125006675720215
    5. '')' → logprob: -15.750006675720215
    6. '`)' → logprob: -15.875006675720215
    7. ')`' → logprob: -16.0000057220459
    8. ')")' → logprob: -16.3750057220459
    9. ')
' → logprob: -16.5000057220459
    10. ')}' → logprob: -16.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 52.25%
Précision adaptée (1ère position): 52.25%
Précision (top 10): 81.08%
================================================================================
